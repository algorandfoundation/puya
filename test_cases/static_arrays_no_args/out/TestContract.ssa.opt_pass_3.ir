contract test_cases.static_arrays_no_args.contract.TestContract:
    program approval:
        subroutine test_cases.static_arrays_no_args.contract.TestContract.approval_program() -> bool:
            block@0: // L28
                let tmp%5#0: bool = 1u
                (assert tmp%5#0)
                let result%13#0: bytes = AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA===
                let result%14#0: bytes = (concat result%13#0 AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=)
                let result%22#0: bytes = AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA===
                let result%23#0: bytes = (concat result%22#0 AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=)
                let tmp%18#0: bool = (== result%14#0 result%23#0)
                (assert tmp%18#0)
                let tmp%21#0: bool = 1u
                (assert tmp%21#0)
                return 1u
    
    program clear-state:
        subroutine test_cases.static_arrays_no_args.contract.TestContract.clear_state_program() -> bool:
            block@0: // L50
                return 1u