{
  "version": 3,
  "sources": [
    "../contract.py"
  ],
  "mappings": ";AAUc;;AACM;AAAA;AAAO;;AAAP;AAApB;;;AACe;;;AAAf;;;AAEiB;;;AAAjB;;;AACuB;;;AAAJ;;;AACC;;AAAO;;AAAP;AAAA;;AALA;AAAA;;AAAA;AAAA;;;;;AAMZ;;AAAA;AAZG;;AAAP",
  "op_pc_offset": 0,
  "pc_events": {
    "1": {
      "subroutine": "test_cases.bug_load_store_load_store.contract.MyContract.approval_program",
      "params": {},
      "block": "main",
      "stack_in": [],
      "op": "pushint 0 // 0"
    },
    "3": {
      "op": "dup",
      "defined_out": [
        "_idx#0",
        "val#0"
      ],
      "stack_out": [
        "val#0",
        "_idx#0"
      ]
    },
    "4": {
      "block": "main_for_header@1",
      "stack_in": [
        "val#0",
        "_idx#0"
      ],
      "op": "dup",
      "defined_out": [
        "_idx#0"
      ],
      "stack_out": [
        "val#0",
        "_idx#0",
        "_idx#0"
      ]
    },
    "5": {
      "op": "pushint 2 // 2",
      "defined_out": [
        "2",
        "_idx#0"
      ],
      "stack_out": [
        "val#0",
        "_idx#0",
        "_idx#0",
        "2"
      ]
    },
    "7": {
      "op": "<",
      "defined_out": [
        "_idx#0",
        "continue_looping%0#0"
      ],
      "stack_out": [
        "val#0",
        "_idx#0",
        "continue_looping%0#0"
      ]
    },
    "8": {
      "op": "bz main_after_for@11",
      "stack_out": [
        "val#0",
        "_idx#0"
      ]
    },
    "11": {
      "callsub": "test_cases.bug_load_store_load_store.contract.get_bool",
      "op": "callsub get_bool",
      "defined_out": [
        "_idx#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "val#0",
        "_idx#0",
        "tmp%0#0"
      ]
    },
    "14": {
      "op": "bnz main_after_if_else@9",
      "stack_out": [
        "val#0",
        "_idx#0"
      ]
    },
    "17": {
      "callsub": "test_cases.bug_load_store_load_store.contract.get_bool",
      "op": "callsub get_bool",
      "defined_out": [
        "_idx#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "val#0",
        "_idx#0",
        "tmp%1#0"
      ]
    },
    "20": {
      "op": "bz main_after_if_else@9",
      "stack_out": [
        "val#0",
        "_idx#0"
      ]
    },
    "23": {
      "callsub": "test_cases.bug_load_store_load_store.contract.get_bool",
      "op": "callsub get_bool",
      "defined_out": [
        "_idx#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "val#0",
        "_idx#0",
        "tmp%2#0"
      ]
    },
    "26": {
      "op": "bnz main_after_if_else@9",
      "stack_out": [
        "val#0",
        "_idx#0"
      ]
    },
    "29": {
      "op": "dig 1",
      "defined_out": [
        "_idx#0",
        "val#0"
      ],
      "stack_out": [
        "val#0",
        "_idx#0",
        "val#0"
      ]
    },
    "31": {
      "op": "pushint 123 // 123",
      "defined_out": [
        "123",
        "_idx#0",
        "val#0"
      ],
      "stack_out": [
        "val#0",
        "_idx#0",
        "val#0",
        "123"
      ]
    },
    "33": {
      "op": "+",
      "stack_out": [
        "val#0",
        "_idx#0",
        "val#0"
      ]
    },
    "34": {
      "op": "bury 2",
      "defined_out": [
        "_idx#0",
        "val#0"
      ],
      "stack_out": [
        "val#0",
        "_idx#0"
      ]
    },
    "36": {
      "block": "main_after_if_else@9",
      "stack_in": [
        "val#0",
        "_idx#0"
      ],
      "op": "dup",
      "defined_out": [
        "_idx#0"
      ],
      "stack_out": [
        "val#0",
        "_idx#0",
        "_idx#0"
      ]
    },
    "37": {
      "op": "pushint 1 // 1",
      "defined_out": [
        "1",
        "_idx#0"
      ],
      "stack_out": [
        "val#0",
        "_idx#0",
        "_idx#0",
        "1"
      ]
    },
    "39": {
      "op": "+",
      "stack_out": [
        "val#0",
        "_idx#0",
        "_idx#0"
      ]
    },
    "40": {
      "op": "bury 1",
      "defined_out": [
        "_idx#0"
      ],
      "stack_out": [
        "val#0",
        "_idx#0"
      ]
    },
    "42": {
      "op": "b main_for_header@1"
    },
    "45": {
      "block": "main_after_for@11",
      "stack_in": [
        "val#0",
        "_idx#0"
      ],
      "op": "dig 1",
      "defined_out": [
        "val#0"
      ],
      "stack_out": [
        "val#0",
        "_idx#0",
        "val#0"
      ]
    },
    "47": {
      "op": "return",
      "stack_out": [
        "val#0",
        "_idx#0"
      ]
    },
    "48": {
      "subroutine": "test_cases.bug_load_store_load_store.contract.get_bool",
      "params": {},
      "block": "get_bool",
      "stack_in": [],
      "op": "pushint 1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "50": {
      "retsub": true,
      "op": "retsub"
    }
  }
}