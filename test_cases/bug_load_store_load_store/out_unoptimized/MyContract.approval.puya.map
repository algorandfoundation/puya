{
  "version": 3,
  "sources": [
    "../contract.py"
  ],
  "mappings": ";;;;;;;;;;AAUc;AACM;AAApB;AAAoB;;;;AAAA;AAAO;;AAAP;AAApB;;;AAAA;;;AACe;;;AAAf;;;AAAA;;;;;;;;;AADoB;AAAA;AAAA;AAAA;;;;;AAGH;;;;;;;AAAjB;;;AAAA;;;AACuB;;;;;;;AAAJ;;;AAAA;;;AACC;;AAAO;;AAAP;;;;;;;;;;;;;;;;;;;;AACZ;;AAAA;;;;AAZG;AAAP",
  "op_pc_offset": 0,
  "pc_events": {
    "1": {
      "subroutine": "test_cases.bug_load_store_load_store.contract.MyContract.approval_program",
      "params": {},
      "block": "main",
      "stack_in": [],
      "op": "intcblock 1 0"
    },
    "5": {
      "op": "pushbytes \"\"",
      "stack_out": [
        "val#11"
      ]
    },
    "7": {
      "op": "b main_block@0"
    },
    "10": {
      "block": "main_block@0",
      "stack_in": [
        "val#11"
      ],
      "op": "intc_1 // 0",
      "defined_out": [],
      "stack_out": [
        "val#11",
        "val#0"
      ]
    },
    "11": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "val#11",
        "val#0",
        "1"
      ]
    },
    "12": {
      "error": "Step cannot be zero",
      "op": "assert // Step cannot be zero",
      "stack_out": [
        "val#11",
        "val#0"
      ]
    },
    "13": {
      "op": "intc_1 // 0",
      "defined_out": [],
      "stack_out": [
        "val#11",
        "val#0",
        "_idx#0"
      ]
    },
    "14": {
      "op": "b main_for_header@1"
    },
    "17": {
      "block": "main_for_header@1",
      "stack_in": [
        "val#11",
        "val#0",
        "_idx#0"
      ],
      "op": "dup",
      "defined_out": [
        "_idx#0"
      ],
      "stack_out": [
        "val#11",
        "val#0",
        "_idx#0",
        "_idx#0"
      ]
    },
    "18": {
      "op": "pushint 2 // 2",
      "defined_out": [
        "2",
        "_idx#0"
      ],
      "stack_out": [
        "val#11",
        "val#0",
        "_idx#0",
        "_idx#0",
        "2"
      ]
    },
    "20": {
      "op": "<",
      "defined_out": [
        "_idx#0",
        "continue_looping%0#0"
      ],
      "stack_out": [
        "val#11",
        "val#0",
        "_idx#0",
        "continue_looping%0#0"
      ]
    },
    "21": {
      "op": "bz main_after_for@11",
      "stack_out": [
        "val#11",
        "val#0",
        "_idx#0"
      ]
    },
    "24": {
      "op": "b main_for_body@2"
    },
    "27": {
      "block": "main_for_body@2",
      "stack_in": [
        "val#11",
        "val#0",
        "_idx#0"
      ],
      "callsub": "test_cases.bug_load_store_load_store.contract.get_bool",
      "op": "callsub get_bool",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "val#11",
        "val#0",
        "_idx#0",
        "tmp%0#0"
      ]
    },
    "30": {
      "op": "bz main_else_body@4",
      "stack_out": [
        "val#11",
        "val#0",
        "_idx#0"
      ]
    },
    "33": {
      "op": "b main_if_body@3"
    },
    "36": {
      "block": "main_if_body@3",
      "stack_in": [
        "val#11",
        "val#0",
        "_idx#0"
      ],
      "op": "b main_after_if_else@9"
    },
    "39": {
      "block": "main_after_if_else@9",
      "stack_in": [
        "val#11",
        "val#0",
        "_idx#0"
      ],
      "op": "b main_for_footer@10"
    },
    "42": {
      "block": "main_for_footer@10",
      "stack_in": [
        "val#11",
        "val#0",
        "_idx#0"
      ],
      "op": "dup",
      "defined_out": [
        "_idx#0"
      ],
      "stack_out": [
        "val#11",
        "val#0",
        "_idx#0",
        "_idx#0"
      ]
    },
    "43": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "_idx#0"
      ],
      "stack_out": [
        "val#11",
        "val#0",
        "_idx#0",
        "_idx#0",
        "1"
      ]
    },
    "44": {
      "op": "+",
      "stack_out": [
        "val#11",
        "val#0",
        "_idx#0",
        "_idx#0"
      ]
    },
    "45": {
      "op": "bury 1",
      "defined_out": [
        "_idx#0"
      ],
      "stack_out": [
        "val#11",
        "val#0",
        "_idx#0"
      ]
    },
    "47": {
      "op": "b main_for_header@1"
    },
    "50": {
      "block": "main_else_body@4",
      "stack_in": [
        "val#11",
        "val#0",
        "_idx#0"
      ],
      "callsub": "test_cases.bug_load_store_load_store.contract.get_bool",
      "op": "callsub get_bool",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "val#11",
        "val#0",
        "_idx#0",
        "tmp%1#0"
      ]
    },
    "53": {
      "op": "dig 2",
      "defined_out": [
        "tmp%1#0",
        "val#0"
      ],
      "stack_out": [
        "val#11",
        "val#0",
        "_idx#0",
        "tmp%1#0",
        "val#0"
      ]
    },
    "55": {
      "op": "bury 4",
      "defined_out": [
        "tmp%1#0",
        "val#0"
      ],
      "stack_out": [
        "val#11",
        "val#0",
        "_idx#0",
        "tmp%1#0"
      ]
    },
    "57": {
      "op": "bz main_after_if_else@8",
      "stack_out": [
        "val#11",
        "val#0",
        "_idx#0"
      ]
    },
    "60": {
      "op": "b main_if_body@5"
    },
    "63": {
      "block": "main_if_body@5",
      "stack_in": [
        "val#11",
        "val#0",
        "_idx#0"
      ],
      "callsub": "test_cases.bug_load_store_load_store.contract.get_bool",
      "op": "callsub get_bool",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "val#11",
        "val#0",
        "_idx#0",
        "tmp%2#0"
      ]
    },
    "66": {
      "op": "dig 2",
      "defined_out": [
        "tmp%2#0",
        "val#0"
      ],
      "stack_out": [
        "val#11",
        "val#0",
        "_idx#0",
        "tmp%2#0",
        "val#0"
      ]
    },
    "68": {
      "op": "bury 4",
      "defined_out": [
        "tmp%2#0",
        "val#0"
      ],
      "stack_out": [
        "val#11",
        "val#0",
        "_idx#0",
        "tmp%2#0"
      ]
    },
    "70": {
      "op": "bnz main_after_if_else@7",
      "stack_out": [
        "val#11",
        "val#0",
        "_idx#0"
      ]
    },
    "73": {
      "op": "b main_if_body@6"
    },
    "76": {
      "block": "main_if_body@6",
      "stack_in": [
        "val#11",
        "val#0",
        "_idx#0"
      ],
      "op": "dig 1",
      "defined_out": [
        "val#0"
      ],
      "stack_out": [
        "val#11",
        "val#0",
        "_idx#0",
        "val#0"
      ]
    },
    "78": {
      "op": "pushint 123 // 123",
      "defined_out": [
        "123",
        "val#0"
      ],
      "stack_out": [
        "val#11",
        "val#0",
        "_idx#0",
        "val#0",
        "123"
      ]
    },
    "80": {
      "op": "+",
      "defined_out": [
        "val#0"
      ],
      "stack_out": [
        "val#11",
        "val#0",
        "_idx#0",
        "val#0"
      ]
    },
    "81": {
      "op": "bury 3",
      "defined_out": [
        "val#0"
      ],
      "stack_out": [
        "val#11",
        "val#0",
        "_idx#0"
      ]
    },
    "83": {
      "op": "b main_after_if_else@7"
    },
    "86": {
      "block": "main_after_if_else@7",
      "stack_in": [
        "val#11",
        "val#0",
        "_idx#0"
      ],
      "op": "dig 2",
      "defined_out": [
        "val#0",
        "val#11"
      ],
      "stack_out": [
        "val#11",
        "val#0",
        "_idx#0",
        "val#0"
      ]
    },
    "88": {
      "op": "bury 3",
      "defined_out": [
        "val#0",
        "val#11"
      ],
      "stack_out": [
        "val#11",
        "val#0",
        "_idx#0"
      ]
    },
    "90": {
      "op": "b main_after_if_else@8"
    },
    "93": {
      "block": "main_after_if_else@8",
      "stack_in": [
        "val#11",
        "val#0",
        "_idx#0"
      ],
      "op": "dig 2",
      "defined_out": [
        "val#11"
      ],
      "stack_out": [
        "val#11",
        "val#0",
        "_idx#0",
        "val#11"
      ]
    },
    "95": {
      "op": "bury 2",
      "defined_out": [
        "val#11"
      ],
      "stack_out": [
        "val#11",
        "val#0",
        "_idx#0"
      ]
    },
    "97": {
      "op": "b main_after_if_else@9"
    },
    "100": {
      "block": "main_after_for@11",
      "stack_in": [
        "val#11",
        "val#0",
        "_idx#0"
      ],
      "op": "dig 1",
      "defined_out": [
        "val#0"
      ],
      "stack_out": [
        "val#11",
        "val#0",
        "_idx#0",
        "val#0"
      ]
    },
    "102": {
      "op": "return",
      "stack_out": [
        "val#11",
        "val#0",
        "_idx#0"
      ]
    },
    "103": {
      "subroutine": "test_cases.bug_load_store_load_store.contract.get_bool",
      "params": {},
      "block": "get_bool",
      "stack_in": [],
      "op": "b get_bool_block@0"
    },
    "106": {
      "block": "get_bool_block@0",
      "stack_in": [],
      "op": "intc_0 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "107": {
      "retsub": true,
      "op": "retsub"
    }
  }
}