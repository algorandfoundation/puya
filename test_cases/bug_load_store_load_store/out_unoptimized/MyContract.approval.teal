#pragma version 10
#pragma typetrack false

// test_cases.bug_load_store_load_store.contract.MyContract.approval_program() -> uint64:
main:
    intcblock 1 0
    pushbytes ""
    b block@0

block@0:
    // bug_load_store_load_store/contract.py:11
    // val = UInt64(0)
    intc_1 // 0
    // bug_load_store_load_store/contract.py:12
    // for _idx in urange(2):
    intc_0 // 1
    assert // Step cannot be zero
    intc_1 // 0
    b for_header@1

for_header@1:
    // bug_load_store_load_store/contract.py:12
    // for _idx in urange(2):
    dup
    pushint 2 // 2
    <
    bz after_for@11
    b for_body@2

for_body@2:
    // bug_load_store_load_store/contract.py:13
    // if get_bool():
    callsub get_bool
    bz else_body@4
    b if_body@3

if_body@3:
    b after_if_else@9

after_if_else@9:
    b for_footer@10

for_footer@10:
    // bug_load_store_load_store/contract.py:12
    // for _idx in urange(2):
    dup
    intc_0 // 1
    +
    bury 1
    b for_header@1

else_body@4:
    // bug_load_store_load_store/contract.py:15
    // elif get_bool():  # noqa: SIM102
    callsub get_bool
    dig 2
    bury 4
    bz after_if_else@8
    b if_body@5

if_body@5:
    // bug_load_store_load_store/contract.py:16
    // if not get_bool():
    callsub get_bool
    dig 2
    bury 4
    bnz after_if_else@7
    b if_body@6

if_body@6:
    // bug_load_store_load_store/contract.py:17
    // val += UInt64(123)
    dig 1
    pushint 123 // 123
    +
    bury 3
    b after_if_else@7

after_if_else@7:
    dig 2
    bury 3
    b after_if_else@8

after_if_else@8:
    dig 2
    bury 2
    b after_if_else@9

after_for@11:
    // bug_load_store_load_store/contract.py:18
    // return val
    dig 1
    return


// test_cases.bug_load_store_load_store.contract.get_bool() -> uint64:
get_bool:
    b get_bool_block@0

get_bool_block@0:
    // bug_load_store_load_store/contract.py:6
    // return True
    intc_0 // 1
    retsub
