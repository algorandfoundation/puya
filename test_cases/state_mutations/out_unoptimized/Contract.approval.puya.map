{
  "version": 3,
  "sources": [
    "../contract.py"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmEY;;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAFD;AACC;;;;;;;;;;AADD;AAAA;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAP;;AAnCsB;AAAA;AAAA;;;AAAlB;AAAA;AAAA;AACiB;AAAA;AAAA;;;AAAjB;AAAA;;AAAA;AAAA;AAAA;AACuB;AAAA;AAAA;;;AAAd;;AAAT;;AAAA;;AAAA;AACuB;AAAA;AAAA;;;AAAd;;AAAT;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAIS;;;AACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;;AAAA;AAAA;AAAA;AACS;;AAAT;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;;AAAA;AAAA;;AAAA;;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;;AAAA;AAAA;;AAAA;AAAA;AAAA;AACS;;AAAT;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;;AAAA;;AAAA;;AAAA;;AAIyB;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAgB;AAAhB;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAgB;AAAhB;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAgB;AAAhB;AAAA;AAAgB;AAAhB;;;AAAA;AAAA;AAAA;AAC8B;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAArB;;AAAT;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAqB;AAArB;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAqB;AAArB;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAqB;AAArB;AAAA;AAAqB;AAArB;;;AAAA;AAAA;;AAAA;;AAAA;AACwB;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAe;AAAf;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAe;AAAf;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAe;AAAf;AAAA;AAAe;AAAf;;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAC8B;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAArB;;AAAT;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAqB;AAArB;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAqB;AAArB;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAqB;AAArB;AAAA;AAAqB;AAArB;;;AAAA;;AAAA;;AAAA;;AAIK;AAAA;AAAA;AAAA;AACS;;AAAT;AAAA;;AAAA;AAAA;AACA;AAAA;AAAA;AACS;;AAAT;;AAAA;AAAA;AAAA;AAAA;AAEE;;AAAA;;AAAA;AAAP;AACO;;AAAA;;AAAA;AAAP;AACO;;AAAA;AAAP;AACA;AAvCR;;AAAA;AAAA;AAAA;;;AAAA;;;AAAA;;;;;;AAAA;;;;;;AAAA;;;;;;AAAA;;AAAA;;;;;;;;AAAA;;AA6BK;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;AAAA;;;;;;AAAA;AAAA;AAAA;AAAA;;;;AAPA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;AAAA;;;;AARA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;AAAA;;;;AAdL;;AAAA;AAAA;AAAA;;AAAA;;;;;;;;;;;;;;;;;;AAOK;;AAAA;AAAA;AAAA;AAAA;;;AAAA;",
  "op_pc_offset": 0,
  "pc_events": {
    "1": {
      "subroutine": "test_cases.state_mutations.contract.Contract.__algopy_entrypoint_with_init",
      "params": {},
      "block": "main",
      "stack_in": [],
      "op": "intcblock 0 2 1 8"
    },
    "7": {
      "op": "bytecblock \"box\" \"modified\" 0x \"glob\" \"loc\" \"map\" \"baz\""
    },
    "40": {
      "block": "main_block@0",
      "stack_in": [],
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "42": {
      "op": "bnz main_after_if_else@2",
      "stack_out": []
    },
    "45": {
      "block": "main_call___init__@1",
      "stack_in": [],
      "callsub": "test_cases.state_mutations.contract.Contract.__init__",
      "op": "callsub __init__"
    },
    "48": {
      "block": "main_after_if_else@2",
      "stack_in": [],
      "callsub": "algopy.arc4.ARC4Contract.approval_program",
      "op": "callsub approval_program",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "51": {
      "op": "return",
      "stack_out": []
    },
    "52": {
      "subroutine": "_puya_lib.arc4.dynamic_array_concat_dynamic_element",
      "params": {
        "array_items_count#0": "uint64",
        "array_head_and_tail#0": "bytes",
        "new_items_count#0": "uint64",
        "new_head_and_tail#0": "bytes"
      },
      "block": "dynamic_array_concat_dynamic_element",
      "stack_in": [],
      "op": "proto 4 1"
    },
    "55": {
      "op": "bytec_2 // \"\"",
      "stack_out": [
        "tmp%8#0"
      ]
    },
    "56": {
      "block": "dynamic_array_concat_dynamic_element_block@0",
      "stack_in": [
        "tmp%8#0"
      ],
      "op": "bytec_2 // 0x",
      "defined_out": [
        "new_head#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0"
      ]
    },
    "57": {
      "op": "frame_dig -2",
      "defined_out": [
        "new_head#0",
        "new_items_count#0 (copy)"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "new_items_count#0 (copy)"
      ]
    },
    "59": {
      "op": "intc_1 // 2",
      "defined_out": [
        "2",
        "new_head#0",
        "new_items_count#0 (copy)"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "new_items_count#0 (copy)",
        "2"
      ]
    },
    "60": {
      "op": "*",
      "defined_out": [
        "item_offset_adjustment#0",
        "new_head#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0"
      ]
    },
    "61": {
      "op": "frame_dig -4",
      "defined_out": [
        "array_items_count#0 (copy)",
        "item_offset_adjustment#0",
        "new_head#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "array_items_count#0 (copy)"
      ]
    },
    "63": {
      "op": "intc_1 // 2",
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "array_items_count#0 (copy)",
        "2"
      ]
    },
    "64": {
      "op": "*",
      "defined_out": [
        "item_offset_adjustment#0",
        "new_head#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0"
      ]
    },
    "65": {
      "op": "intc_1 // 2",
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "2"
      ]
    },
    "66": {
      "error": "Step cannot be zero",
      "op": "assert // Step cannot be zero",
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0"
      ]
    },
    "67": {
      "op": "intc_0 // 0",
      "defined_out": [
        "head_offset#0",
        "item_offset_adjustment#0",
        "new_head#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0"
      ]
    },
    "68": {
      "block": "dynamic_array_concat_dynamic_element_for_header@1",
      "stack_in": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0"
      ],
      "op": "frame_dig 4",
      "defined_out": [
        "head_offset#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "head_offset#0"
      ]
    },
    "70": {
      "op": "frame_dig 3",
      "defined_out": [
        "head_offset#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "head_offset#0",
        "tmp%1#0"
      ]
    },
    "72": {
      "op": "<",
      "defined_out": [
        "continue_looping%0#0",
        "head_offset#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "continue_looping%0#0"
      ]
    },
    "73": {
      "op": "bz dynamic_array_concat_dynamic_element_after_for@4",
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0"
      ]
    },
    "76": {
      "block": "dynamic_array_concat_dynamic_element_for_body@2",
      "stack_in": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0"
      ],
      "op": "frame_dig -3",
      "defined_out": [
        "array_head_and_tail#0 (copy)"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "array_head_and_tail#0 (copy)"
      ]
    },
    "78": {
      "op": "frame_dig 4",
      "defined_out": [
        "array_head_and_tail#0 (copy)",
        "head_offset#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "array_head_and_tail#0 (copy)",
        "head_offset#0"
      ]
    },
    "80": {
      "op": "extract_uint16",
      "defined_out": [
        "head_offset#0",
        "item_offset#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "item_offset#0"
      ]
    },
    "81": {
      "op": "frame_dig 2",
      "defined_out": [
        "head_offset#0",
        "item_offset#0",
        "item_offset_adjustment#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "item_offset#0",
        "item_offset_adjustment#0"
      ]
    },
    "83": {
      "op": "+",
      "defined_out": [
        "head_offset#0",
        "item_offset_adjustment#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%3#0"
      ]
    },
    "84": {
      "op": "itob",
      "defined_out": [
        "head_offset#0",
        "item_offset_adjustment#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%4#0"
      ]
    },
    "85": {
      "op": "extract 6 2",
      "defined_out": [
        "head_offset#0",
        "item_offset_adjustment#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%5#0"
      ]
    },
    "88": {
      "op": "frame_dig 1",
      "defined_out": [
        "head_offset#0",
        "item_offset_adjustment#0",
        "new_head#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%5#0",
        "new_head#0"
      ]
    },
    "90": {
      "op": "swap",
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "new_head#0",
        "tmp%5#0"
      ]
    },
    "91": {
      "op": "concat",
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "new_head#0"
      ]
    },
    "92": {
      "op": "frame_bury 1",
      "defined_out": [
        "head_offset#0",
        "item_offset_adjustment#0",
        "new_head#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0"
      ]
    },
    "94": {
      "block": "dynamic_array_concat_dynamic_element_for_footer@3",
      "stack_in": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0"
      ],
      "op": "frame_dig 4",
      "defined_out": [
        "head_offset#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "head_offset#0"
      ]
    },
    "96": {
      "op": "intc_1 // 2",
      "defined_out": [
        "2",
        "head_offset#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "head_offset#0",
        "2"
      ]
    },
    "97": {
      "op": "+",
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "head_offset#0"
      ]
    },
    "98": {
      "op": "frame_bury 4",
      "defined_out": [
        "head_offset#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0"
      ]
    },
    "100": {
      "op": "b dynamic_array_concat_dynamic_element_for_header@1"
    },
    "103": {
      "block": "dynamic_array_concat_dynamic_element_after_for@4",
      "stack_in": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0"
      ],
      "op": "frame_dig -3",
      "defined_out": [
        "array_head_and_tail#0 (copy)"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "array_head_and_tail#0 (copy)"
      ]
    },
    "105": {
      "op": "len",
      "defined_out": [
        "item_offset_adjustment#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "item_offset_adjustment#0"
      ]
    },
    "106": {
      "op": "frame_bury 2",
      "defined_out": [
        "item_offset_adjustment#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0"
      ]
    },
    "108": {
      "op": "frame_dig -2",
      "defined_out": [
        "item_offset_adjustment#0",
        "new_items_count#0 (copy)"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "new_items_count#0 (copy)"
      ]
    },
    "110": {
      "op": "intc_1 // 2",
      "defined_out": [
        "2",
        "item_offset_adjustment#0",
        "new_items_count#0 (copy)"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "new_items_count#0 (copy)",
        "2"
      ]
    },
    "111": {
      "op": "*",
      "defined_out": [
        "item_offset_adjustment#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%8#0"
      ]
    },
    "112": {
      "op": "frame_bury 0",
      "defined_out": [
        "item_offset_adjustment#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0"
      ]
    },
    "114": {
      "op": "intc_1 // 2",
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "2"
      ]
    },
    "115": {
      "error": "Step cannot be zero",
      "op": "assert // Step cannot be zero",
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0"
      ]
    },
    "116": {
      "op": "intc_0 // 0",
      "defined_out": [
        "head_offset#0",
        "item_offset_adjustment#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "head_offset#0"
      ]
    },
    "117": {
      "op": "frame_bury 4",
      "defined_out": [
        "head_offset#0",
        "item_offset_adjustment#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0"
      ]
    },
    "119": {
      "block": "dynamic_array_concat_dynamic_element_for_header@5",
      "stack_in": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0"
      ],
      "op": "frame_dig 4",
      "defined_out": [
        "head_offset#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "head_offset#0"
      ]
    },
    "121": {
      "op": "frame_dig 0",
      "defined_out": [
        "head_offset#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "head_offset#0",
        "tmp%8#0"
      ]
    },
    "123": {
      "op": "<",
      "defined_out": [
        "continue_looping%1#0",
        "head_offset#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "continue_looping%1#0"
      ]
    },
    "124": {
      "op": "bz dynamic_array_concat_dynamic_element_after_for@8",
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0"
      ]
    },
    "127": {
      "block": "dynamic_array_concat_dynamic_element_for_body@6",
      "stack_in": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0"
      ],
      "op": "frame_dig -1",
      "defined_out": [
        "new_head_and_tail#0 (copy)"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "new_head_and_tail#0 (copy)"
      ]
    },
    "129": {
      "op": "frame_dig 4",
      "defined_out": [
        "head_offset#0",
        "new_head_and_tail#0 (copy)"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "new_head_and_tail#0 (copy)",
        "head_offset#0"
      ]
    },
    "131": {
      "op": "extract_uint16",
      "defined_out": [
        "head_offset#0",
        "item_offset#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "item_offset#0"
      ]
    },
    "132": {
      "op": "frame_dig 2",
      "defined_out": [
        "head_offset#0",
        "item_offset#0",
        "item_offset_adjustment#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "item_offset#0",
        "item_offset_adjustment#0"
      ]
    },
    "134": {
      "op": "+",
      "defined_out": [
        "head_offset#0",
        "item_offset_adjustment#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%10#0"
      ]
    },
    "135": {
      "op": "itob",
      "defined_out": [
        "head_offset#0",
        "item_offset_adjustment#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%11#0"
      ]
    },
    "136": {
      "op": "extract 6 2",
      "defined_out": [
        "head_offset#0",
        "item_offset_adjustment#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%12#0"
      ]
    },
    "139": {
      "op": "frame_dig 1",
      "defined_out": [
        "head_offset#0",
        "item_offset_adjustment#0",
        "new_head#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%12#0",
        "new_head#0"
      ]
    },
    "141": {
      "op": "swap",
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "new_head#0",
        "tmp%12#0"
      ]
    },
    "142": {
      "op": "concat",
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "new_head#0"
      ]
    },
    "143": {
      "op": "frame_bury 1",
      "defined_out": [
        "head_offset#0",
        "item_offset_adjustment#0",
        "new_head#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0"
      ]
    },
    "145": {
      "block": "dynamic_array_concat_dynamic_element_for_footer@7",
      "stack_in": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0"
      ],
      "op": "frame_dig 4",
      "defined_out": [
        "head_offset#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "head_offset#0"
      ]
    },
    "147": {
      "op": "intc_1 // 2",
      "defined_out": [
        "2",
        "head_offset#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "head_offset#0",
        "2"
      ]
    },
    "148": {
      "op": "+",
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "head_offset#0"
      ]
    },
    "149": {
      "op": "frame_bury 4",
      "defined_out": [
        "head_offset#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0"
      ]
    },
    "151": {
      "op": "b dynamic_array_concat_dynamic_element_for_header@5"
    },
    "154": {
      "block": "dynamic_array_concat_dynamic_element_after_for@8",
      "stack_in": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0"
      ],
      "op": "frame_dig -4",
      "defined_out": [
        "array_items_count#0 (copy)"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "array_items_count#0 (copy)"
      ]
    },
    "156": {
      "op": "frame_dig -2",
      "defined_out": [
        "array_items_count#0 (copy)",
        "new_items_count#0 (copy)"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "array_items_count#0 (copy)",
        "new_items_count#0 (copy)"
      ]
    },
    "158": {
      "op": "+",
      "defined_out": [
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%14#0"
      ]
    },
    "159": {
      "op": "itob",
      "defined_out": [
        "tmp%15#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%15#0"
      ]
    },
    "160": {
      "op": "extract 6 2",
      "defined_out": [
        "tmp%16#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%16#0"
      ]
    },
    "163": {
      "op": "frame_dig 1",
      "defined_out": [
        "new_head#0",
        "tmp%16#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%16#0",
        "new_head#0"
      ]
    },
    "165": {
      "op": "concat",
      "defined_out": [
        "new_head#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%17#0"
      ]
    },
    "166": {
      "op": "frame_dig -4",
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%17#0",
        "array_items_count#0 (copy)"
      ]
    },
    "168": {
      "op": "intc_1 // 2",
      "defined_out": [
        "2",
        "array_items_count#0 (copy)",
        "new_head#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%17#0",
        "array_items_count#0 (copy)",
        "2"
      ]
    },
    "169": {
      "op": "*",
      "defined_out": [
        "new_head#0",
        "tmp%17#0",
        "tmp%18#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%17#0",
        "tmp%18#0"
      ]
    },
    "170": {
      "op": "frame_dig -3",
      "defined_out": [
        "array_head_and_tail#0 (copy)",
        "new_head#0",
        "tmp%17#0",
        "tmp%18#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%17#0",
        "tmp%18#0",
        "array_head_and_tail#0 (copy)"
      ]
    },
    "172": {
      "op": "len",
      "defined_out": [
        "new_head#0",
        "tmp%17#0",
        "tmp%18#0",
        "tmp%19#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%17#0",
        "tmp%18#0",
        "tmp%19#0"
      ]
    },
    "173": {
      "op": "frame_dig -3",
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%17#0",
        "tmp%18#0",
        "tmp%19#0",
        "array_head_and_tail#0 (copy)"
      ]
    },
    "175": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%17#0",
        "tmp%19#0",
        "array_head_and_tail#0 (copy)",
        "tmp%18#0"
      ]
    },
    "177": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%17#0",
        "array_head_and_tail#0 (copy)",
        "tmp%18#0",
        "tmp%19#0"
      ]
    },
    "179": {
      "op": "substring3",
      "defined_out": [
        "new_head#0",
        "tmp%17#0",
        "tmp%20#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%17#0",
        "tmp%20#0"
      ]
    },
    "180": {
      "op": "concat",
      "defined_out": [
        "new_head#0",
        "tmp%21#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%21#0"
      ]
    },
    "181": {
      "op": "frame_dig -2",
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%21#0",
        "new_items_count#0 (copy)"
      ]
    },
    "183": {
      "op": "intc_1 // 2",
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%21#0",
        "new_items_count#0 (copy)",
        "2"
      ]
    },
    "184": {
      "op": "*",
      "defined_out": [
        "new_head#0",
        "tmp%21#0",
        "tmp%22#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%21#0",
        "tmp%22#0"
      ]
    },
    "185": {
      "op": "frame_dig -1",
      "defined_out": [
        "new_head#0",
        "new_head_and_tail#0 (copy)",
        "tmp%21#0",
        "tmp%22#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%21#0",
        "tmp%22#0",
        "new_head_and_tail#0 (copy)"
      ]
    },
    "187": {
      "op": "len",
      "defined_out": [
        "new_head#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%23#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%23#0"
      ]
    },
    "188": {
      "op": "frame_dig -1",
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%23#0",
        "new_head_and_tail#0 (copy)"
      ]
    },
    "190": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%21#0",
        "tmp%23#0",
        "new_head_and_tail#0 (copy)",
        "tmp%22#0"
      ]
    },
    "192": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%21#0",
        "new_head_and_tail#0 (copy)",
        "tmp%22#0",
        "tmp%23#0"
      ]
    },
    "194": {
      "op": "substring3",
      "defined_out": [
        "new_head#0",
        "tmp%21#0",
        "tmp%24#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%21#0",
        "tmp%24#0"
      ]
    },
    "195": {
      "op": "concat",
      "defined_out": [
        "new_head#0",
        "tmp%25#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%25#0"
      ]
    },
    "196": {
      "op": "frame_bury 0"
    },
    "198": {
      "retsub": true,
      "op": "retsub"
    },
    "199": {
      "subroutine": "_puya_lib.arc4.dynamic_array_replace_dynamic_element",
      "params": {
        "source#0": "bytes",
        "new_item#0": "bytes",
        "index#0": "uint64"
      },
      "block": "dynamic_array_replace_dynamic_element",
      "stack_in": [],
      "op": "proto 3 1"
    },
    "202": {
      "block": "dynamic_array_replace_dynamic_element_block@0",
      "stack_in": [],
      "op": "frame_dig -3",
      "defined_out": [
        "source#0 (copy)"
      ],
      "stack_out": [
        "source#0 (copy)"
      ]
    },
    "204": {
      "op": "substring 0 2",
      "defined_out": [
        "size_b#0"
      ],
      "stack_out": [
        "size_b#0"
      ]
    },
    "207": {
      "op": "dup",
      "defined_out": [
        "size_b#0",
        "size_b#0 (copy)"
      ],
      "stack_out": [
        "size_b#0",
        "size_b#0 (copy)"
      ]
    },
    "208": {
      "op": "btoi",
      "defined_out": [
        "array_length#0",
        "size_b#0"
      ],
      "stack_out": [
        "size_b#0",
        "array_length#0"
      ]
    },
    "209": {
      "op": "frame_dig -3",
      "stack_out": [
        "size_b#0",
        "array_length#0",
        "source#0 (copy)"
      ]
    },
    "211": {
      "op": "extract 2 0",
      "defined_out": [
        "array_length#0",
        "size_b#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "size_b#0",
        "array_length#0",
        "tmp%2#0"
      ]
    },
    "214": {
      "op": "frame_dig -2",
      "defined_out": [
        "array_length#0",
        "new_item#0 (copy)",
        "size_b#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "size_b#0",
        "array_length#0",
        "tmp%2#0",
        "new_item#0 (copy)"
      ]
    },
    "216": {
      "op": "frame_dig -1",
      "defined_out": [
        "array_length#0",
        "index#0 (copy)",
        "new_item#0 (copy)",
        "size_b#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "size_b#0",
        "array_length#0",
        "tmp%2#0",
        "new_item#0 (copy)",
        "index#0 (copy)"
      ]
    },
    "218": {
      "op": "uncover 3",
      "stack_out": [
        "size_b#0",
        "tmp%2#0",
        "new_item#0 (copy)",
        "index#0 (copy)",
        "array_length#0"
      ]
    },
    "220": {
      "callsub": "_puya_lib.arc4.static_array_replace_dynamic_element",
      "op": "callsub static_array_replace_dynamic_element",
      "defined_out": [
        "size_b#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "size_b#0",
        "tmp%3#0"
      ]
    },
    "223": {
      "op": "concat",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "224": {
      "retsub": true,
      "op": "retsub"
    },
    "225": {
      "subroutine": "_puya_lib.arc4.static_array_replace_dynamic_element",
      "params": {
        "array_head_and_tail#0": "bytes",
        "new_item#0": "bytes",
        "index#0": "uint64",
        "array_length#0": "uint64"
      },
      "block": "static_array_replace_dynamic_element",
      "stack_in": [],
      "op": "proto 4 1"
    },
    "228": {
      "block": "static_array_replace_dynamic_element_block@0",
      "stack_in": [],
      "op": "frame_dig -2",
      "defined_out": [
        "index#0 (copy)"
      ],
      "stack_out": [
        "index#0 (copy)"
      ]
    },
    "230": {
      "op": "intc_1 // 2",
      "defined_out": [
        "2",
        "index#0 (copy)"
      ],
      "stack_out": [
        "index#0 (copy)",
        "2"
      ]
    },
    "231": {
      "op": "*",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "232": {
      "op": "frame_dig -4",
      "defined_out": [
        "array_head_and_tail#0 (copy)",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "array_head_and_tail#0 (copy)"
      ]
    },
    "234": {
      "op": "swap",
      "stack_out": [
        "array_head_and_tail#0 (copy)",
        "tmp%0#0"
      ]
    },
    "235": {
      "op": "extract_uint16",
      "defined_out": [
        "original_offset#0"
      ],
      "stack_out": [
        "original_offset#0"
      ]
    },
    "236": {
      "op": "frame_dig -2",
      "stack_out": [
        "original_offset#0",
        "index#0 (copy)"
      ]
    },
    "238": {
      "op": "intc_2 // 1",
      "defined_out": [
        "1",
        "index#0 (copy)",
        "original_offset#0"
      ],
      "stack_out": [
        "original_offset#0",
        "index#0 (copy)",
        "1"
      ]
    },
    "239": {
      "op": "+",
      "defined_out": [
        "original_offset#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "original_offset#0",
        "tmp%2#0"
      ]
    },
    "240": {
      "op": "intc_1 // 2",
      "stack_out": [
        "original_offset#0",
        "tmp%2#0",
        "2"
      ]
    },
    "241": {
      "op": "*",
      "defined_out": [
        "original_offset#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "original_offset#0",
        "tmp%3#0"
      ]
    },
    "242": {
      "op": "frame_dig -4",
      "stack_out": [
        "original_offset#0",
        "tmp%3#0",
        "array_head_and_tail#0 (copy)"
      ]
    },
    "244": {
      "op": "swap",
      "stack_out": [
        "original_offset#0",
        "array_head_and_tail#0 (copy)",
        "tmp%3#0"
      ]
    },
    "245": {
      "op": "extract_uint16",
      "defined_out": [
        "next_item_offset#0",
        "original_offset#0"
      ],
      "stack_out": [
        "original_offset#0",
        "next_item_offset#0"
      ]
    },
    "246": {
      "op": "frame_dig -4",
      "stack_out": [
        "original_offset#0",
        "next_item_offset#0",
        "array_head_and_tail#0 (copy)"
      ]
    },
    "248": {
      "op": "len",
      "defined_out": [
        "end_of_tail#0",
        "next_item_offset#0",
        "original_offset#0"
      ],
      "stack_out": [
        "original_offset#0",
        "next_item_offset#0",
        "end_of_tail#0"
      ]
    },
    "249": {
      "op": "frame_dig -1",
      "defined_out": [
        "array_length#0 (copy)",
        "end_of_tail#0",
        "next_item_offset#0",
        "original_offset#0"
      ],
      "stack_out": [
        "original_offset#0",
        "next_item_offset#0",
        "end_of_tail#0",
        "array_length#0 (copy)"
      ]
    },
    "251": {
      "op": "frame_dig -2",
      "stack_out": [
        "original_offset#0",
        "next_item_offset#0",
        "end_of_tail#0",
        "array_length#0 (copy)",
        "index#0 (copy)"
      ]
    },
    "253": {
      "op": "-",
      "defined_out": [
        "end_of_tail#0",
        "next_item_offset#0",
        "original_offset#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "original_offset#0",
        "next_item_offset#0",
        "end_of_tail#0",
        "tmp%6#0"
      ]
    },
    "254": {
      "op": "intc_2 // 1",
      "stack_out": [
        "original_offset#0",
        "next_item_offset#0",
        "end_of_tail#0",
        "tmp%6#0",
        "1"
      ]
    },
    "255": {
      "op": "-",
      "defined_out": [
        "end_of_tail#0",
        "is_before_end#0",
        "next_item_offset#0",
        "original_offset#0"
      ],
      "stack_out": [
        "original_offset#0",
        "next_item_offset#0",
        "end_of_tail#0",
        "is_before_end#0"
      ]
    },
    "256": {
      "op": "dig 1",
      "defined_out": [
        "end_of_tail#0",
        "end_of_tail#0 (copy)",
        "is_before_end#0",
        "next_item_offset#0",
        "original_offset#0"
      ],
      "stack_out": [
        "original_offset#0",
        "next_item_offset#0",
        "end_of_tail#0",
        "is_before_end#0",
        "end_of_tail#0 (copy)"
      ]
    },
    "258": {
      "op": "uncover 3",
      "stack_out": [
        "original_offset#0",
        "end_of_tail#0",
        "is_before_end#0",
        "end_of_tail#0 (copy)",
        "next_item_offset#0"
      ]
    },
    "260": {
      "op": "uncover 2",
      "stack_out": [
        "original_offset#0",
        "end_of_tail#0",
        "end_of_tail#0 (copy)",
        "next_item_offset#0",
        "is_before_end#0"
      ]
    },
    "262": {
      "op": "select",
      "defined_out": [
        "end_of_tail#0",
        "end_offset#0",
        "original_offset#0"
      ],
      "stack_out": [
        "original_offset#0",
        "end_of_tail#0",
        "end_offset#0"
      ]
    },
    "263": {
      "op": "dup",
      "defined_out": [
        "end_of_tail#0",
        "end_offset#0",
        "end_offset#0 (copy)",
        "original_offset#0"
      ],
      "stack_out": [
        "original_offset#0",
        "end_of_tail#0",
        "end_offset#0",
        "end_offset#0 (copy)"
      ]
    },
    "264": {
      "op": "dig 3",
      "defined_out": [
        "end_of_tail#0",
        "end_offset#0",
        "end_offset#0 (copy)",
        "original_offset#0",
        "original_offset#0 (copy)"
      ],
      "stack_out": [
        "original_offset#0",
        "end_of_tail#0",
        "end_offset#0",
        "end_offset#0 (copy)",
        "original_offset#0 (copy)"
      ]
    },
    "266": {
      "op": "-",
      "defined_out": [
        "end_of_tail#0",
        "end_offset#0",
        "original_item_length#0",
        "original_offset#0"
      ],
      "stack_out": [
        "original_offset#0",
        "end_of_tail#0",
        "end_offset#0",
        "original_item_length#0"
      ]
    },
    "267": {
      "op": "cover 3",
      "defined_out": [
        "end_of_tail#0",
        "end_offset#0",
        "original_item_length#0",
        "original_offset#0"
      ],
      "stack_out": [
        "original_item_length#0",
        "original_offset#0",
        "end_of_tail#0",
        "end_offset#0"
      ]
    },
    "269": {
      "op": "frame_dig -3",
      "defined_out": [
        "end_of_tail#0",
        "end_offset#0",
        "new_item#0 (copy)",
        "original_item_length#0",
        "original_offset#0"
      ],
      "stack_out": [
        "original_item_length#0",
        "original_offset#0",
        "end_of_tail#0",
        "end_offset#0",
        "new_item#0 (copy)"
      ]
    },
    "271": {
      "op": "len",
      "defined_out": [
        "end_of_tail#0",
        "end_offset#0",
        "new_item_length#0",
        "original_item_length#0",
        "original_offset#0"
      ],
      "stack_out": [
        "original_item_length#0",
        "original_offset#0",
        "end_of_tail#0",
        "end_offset#0",
        "new_item_length#0"
      ]
    },
    "272": {
      "op": "cover 3",
      "defined_out": [
        "end_of_tail#0",
        "end_offset#0",
        "new_item_length#0",
        "original_item_length#0",
        "original_offset#0"
      ],
      "stack_out": [
        "original_item_length#0",
        "new_item_length#0",
        "original_offset#0",
        "end_of_tail#0",
        "end_offset#0"
      ]
    },
    "274": {
      "op": "frame_dig -4",
      "stack_out": [
        "original_item_length#0",
        "new_item_length#0",
        "original_offset#0",
        "end_of_tail#0",
        "end_offset#0",
        "array_head_and_tail#0 (copy)"
      ]
    },
    "276": {
      "op": "intc_0 // 0",
      "stack_out": [
        "original_item_length#0",
        "new_item_length#0",
        "original_offset#0",
        "end_of_tail#0",
        "end_offset#0",
        "array_head_and_tail#0 (copy)",
        "0"
      ]
    },
    "277": {
      "op": "uncover 4",
      "stack_out": [
        "original_item_length#0",
        "new_item_length#0",
        "end_of_tail#0",
        "end_offset#0",
        "array_head_and_tail#0 (copy)",
        "0",
        "original_offset#0"
      ]
    },
    "279": {
      "op": "substring3",
      "defined_out": [
        "end_of_tail#0",
        "end_offset#0",
        "new_item_length#0",
        "original_item_length#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "original_item_length#0",
        "new_item_length#0",
        "end_of_tail#0",
        "end_offset#0",
        "tmp%11#0"
      ]
    },
    "280": {
      "op": "frame_dig -3",
      "stack_out": [
        "original_item_length#0",
        "new_item_length#0",
        "end_of_tail#0",
        "end_offset#0",
        "tmp%11#0",
        "new_item#0 (copy)"
      ]
    },
    "282": {
      "op": "concat",
      "defined_out": [
        "end_of_tail#0",
        "end_offset#0",
        "new_item_length#0",
        "original_item_length#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "original_item_length#0",
        "new_item_length#0",
        "end_of_tail#0",
        "end_offset#0",
        "tmp%12#0"
      ]
    },
    "283": {
      "op": "frame_dig -4",
      "stack_out": [
        "original_item_length#0",
        "new_item_length#0",
        "end_of_tail#0",
        "end_offset#0",
        "tmp%12#0",
        "array_head_and_tail#0 (copy)"
      ]
    },
    "285": {
      "op": "uncover 2",
      "stack_out": [
        "original_item_length#0",
        "new_item_length#0",
        "end_of_tail#0",
        "tmp%12#0",
        "array_head_and_tail#0 (copy)",
        "end_offset#0"
      ]
    },
    "287": {
      "op": "uncover 3",
      "stack_out": [
        "original_item_length#0",
        "new_item_length#0",
        "tmp%12#0",
        "array_head_and_tail#0 (copy)",
        "end_offset#0",
        "end_of_tail#0"
      ]
    },
    "289": {
      "op": "substring3",
      "defined_out": [
        "new_item_length#0",
        "original_item_length#0",
        "tmp%12#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "original_item_length#0",
        "new_item_length#0",
        "tmp%12#0",
        "tmp%13#0"
      ]
    },
    "290": {
      "op": "concat",
      "defined_out": [
        "new_head_and_tail#0",
        "new_item_length#0",
        "original_item_length#0"
      ],
      "stack_out": [
        "original_item_length#0",
        "new_item_length#0",
        "new_head_and_tail#0"
      ]
    },
    "291": {
      "op": "frame_dig -1",
      "stack_out": [
        "original_item_length#0",
        "new_item_length#0",
        "new_head_and_tail#0",
        "array_length#0 (copy)"
      ]
    },
    "293": {
      "op": "intc_1 // 2",
      "stack_out": [
        "original_item_length#0",
        "new_item_length#0",
        "new_head_and_tail#0",
        "array_length#0 (copy)",
        "2"
      ]
    },
    "294": {
      "op": "*",
      "defined_out": [
        "new_head_and_tail#0",
        "new_item_length#0",
        "original_item_length#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "original_item_length#0",
        "new_item_length#0",
        "new_head_and_tail#0",
        "tmp%15#0"
      ]
    },
    "295": {
      "op": "frame_dig -2",
      "stack_out": [
        "original_item_length#0",
        "new_item_length#0",
        "new_head_and_tail#0",
        "tmp%15#0",
        "index#0 (copy)"
      ]
    },
    "297": {
      "op": "intc_2 // 1",
      "stack_out": [
        "original_item_length#0",
        "new_item_length#0",
        "new_head_and_tail#0",
        "tmp%15#0",
        "index#0 (copy)",
        "1"
      ]
    },
    "298": {
      "op": "+",
      "defined_out": [
        "new_head_and_tail#0",
        "new_item_length#0",
        "original_item_length#0",
        "tmp%15#0",
        "tmp%16#0"
      ],
      "stack_out": [
        "original_item_length#0",
        "new_item_length#0",
        "new_head_and_tail#0",
        "tmp%15#0",
        "tmp%16#0"
      ]
    },
    "299": {
      "op": "intc_1 // 2",
      "stack_out": [
        "original_item_length#0",
        "new_item_length#0",
        "new_head_and_tail#0",
        "tmp%15#0",
        "tmp%16#0",
        "2"
      ]
    },
    "300": {
      "op": "*",
      "defined_out": [
        "new_head_and_tail#0",
        "new_item_length#0",
        "original_item_length#0",
        "tmp%15#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "original_item_length#0",
        "new_item_length#0",
        "new_head_and_tail#0",
        "tmp%15#0",
        "tmp%17#0"
      ]
    },
    "301": {
      "op": "intc_1 // 2",
      "stack_out": [
        "original_item_length#0",
        "new_item_length#0",
        "new_head_and_tail#0",
        "tmp%15#0",
        "tmp%17#0",
        "2"
      ]
    },
    "302": {
      "error": "Step cannot be zero",
      "op": "assert // Step cannot be zero",
      "defined_out": [
        "head_offset#0",
        "new_head_and_tail#0",
        "new_item_length#0",
        "original_item_length#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "original_item_length#0",
        "new_item_length#0",
        "new_head_and_tail#0",
        "tmp%15#0",
        "head_offset#0"
      ]
    },
    "303": {
      "block": "static_array_replace_dynamic_element_for_header@1",
      "stack_in": [
        "original_item_length#0",
        "new_item_length#0",
        "new_head_and_tail#0",
        "tmp%15#0",
        "head_offset#0"
      ],
      "op": "frame_dig 4",
      "defined_out": [
        "head_offset#0"
      ],
      "stack_out": [
        "original_item_length#0",
        "new_item_length#0",
        "new_head_and_tail#0",
        "tmp%15#0",
        "head_offset#0",
        "head_offset#0"
      ]
    },
    "305": {
      "op": "frame_dig 3",
      "defined_out": [
        "head_offset#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "original_item_length#0",
        "new_item_length#0",
        "new_head_and_tail#0",
        "tmp%15#0",
        "head_offset#0",
        "head_offset#0",
        "tmp%15#0"
      ]
    },
    "307": {
      "op": "<",
      "defined_out": [
        "continue_looping%0#0",
        "head_offset#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "original_item_length#0",
        "new_item_length#0",
        "new_head_and_tail#0",
        "tmp%15#0",
        "head_offset#0",
        "continue_looping%0#0"
      ]
    },
    "308": {
      "op": "bz static_array_replace_dynamic_element_after_for@4",
      "stack_out": [
        "original_item_length#0",
        "new_item_length#0",
        "new_head_and_tail#0",
        "tmp%15#0",
        "head_offset#0"
      ]
    },
    "311": {
      "block": "static_array_replace_dynamic_element_for_body@2",
      "stack_in": [
        "original_item_length#0",
        "new_item_length#0",
        "new_head_and_tail#0",
        "tmp%15#0",
        "head_offset#0"
      ],
      "op": "frame_dig 2",
      "defined_out": [
        "new_head_and_tail#0"
      ],
      "stack_out": [
        "original_item_length#0",
        "new_item_length#0",
        "new_head_and_tail#0",
        "tmp%15#0",
        "head_offset#0",
        "new_head_and_tail#0"
      ]
    },
    "313": {
      "op": "dup",
      "defined_out": [
        "new_head_and_tail#0",
        "new_head_and_tail#0 (copy)"
      ],
      "stack_out": [
        "original_item_length#0",
        "new_item_length#0",
        "new_head_and_tail#0",
        "tmp%15#0",
        "head_offset#0",
        "new_head_and_tail#0",
        "new_head_and_tail#0 (copy)"
      ]
    },
    "314": {
      "op": "frame_dig 4",
      "defined_out": [
        "head_offset#0",
        "new_head_and_tail#0",
        "new_head_and_tail#0 (copy)"
      ],
      "stack_out": [
        "original_item_length#0",
        "new_item_length#0",
        "new_head_and_tail#0",
        "tmp%15#0",
        "head_offset#0",
        "new_head_and_tail#0",
        "new_head_and_tail#0 (copy)",
        "head_offset#0"
      ]
    },
    "316": {
      "op": "dup",
      "defined_out": [
        "head_offset#0",
        "head_offset#0 (copy)",
        "new_head_and_tail#0",
        "new_head_and_tail#0 (copy)"
      ],
      "stack_out": [
        "original_item_length#0",
        "new_item_length#0",
        "new_head_and_tail#0",
        "tmp%15#0",
        "head_offset#0",
        "new_head_and_tail#0",
        "new_head_and_tail#0 (copy)",
        "head_offset#0 (copy)",
        "head_offset#0 (copy)"
      ]
    },
    "317": {
      "op": "cover 3",
      "stack_out": [
        "original_item_length#0",
        "new_item_length#0",
        "new_head_and_tail#0",
        "tmp%15#0",
        "head_offset#0",
        "head_offset#0",
        "new_head_and_tail#0",
        "new_head_and_tail#0 (copy)",
        "head_offset#0 (copy)"
      ]
    },
    "319": {
      "op": "extract_uint16",
      "defined_out": [
        "head_offset#0",
        "new_head_and_tail#0",
        "tail_offset#0"
      ],
      "stack_out": [
        "original_item_length#0",
        "new_item_length#0",
        "new_head_and_tail#0",
        "tmp%15#0",
        "head_offset#0",
        "head_offset#0",
        "new_head_and_tail#0",
        "tail_offset#0"
      ]
    },
    "320": {
      "op": "frame_dig 1",
      "defined_out": [
        "head_offset#0",
        "new_head_and_tail#0",
        "new_item_length#0",
        "tail_offset#0"
      ],
      "stack_out": [
        "original_item_length#0",
        "new_item_length#0",
        "new_head_and_tail#0",
        "tmp%15#0",
        "head_offset#0",
        "head_offset#0",
        "new_head_and_tail#0",
        "tail_offset#0",
        "new_item_length#0"
      ]
    },
    "322": {
      "op": "+",
      "stack_out": [
        "original_item_length#0",
        "new_item_length#0",
        "new_head_and_tail#0",
        "tmp%15#0",
        "head_offset#0",
        "head_offset#0",
        "new_head_and_tail#0",
        "tail_offset#0"
      ]
    },
    "323": {
      "op": "frame_dig 0",
      "defined_out": [
        "head_offset#0",
        "new_head_and_tail#0",
        "new_item_length#0",
        "original_item_length#0",
        "tail_offset#0"
      ],
      "stack_out": [
        "original_item_length#0",
        "new_item_length#0",
        "new_head_and_tail#0",
        "tmp%15#0",
        "head_offset#0",
        "head_offset#0",
        "new_head_and_tail#0",
        "tail_offset#0",
        "original_item_length#0"
      ]
    },
    "325": {
      "op": "-",
      "stack_out": [
        "original_item_length#0",
        "new_item_length#0",
        "new_head_and_tail#0",
        "tmp%15#0",
        "head_offset#0",
        "head_offset#0",
        "new_head_and_tail#0",
        "tail_offset#0"
      ]
    },
    "326": {
      "op": "itob",
      "defined_out": [
        "head_offset#0",
        "new_head_and_tail#0",
        "new_item_length#0",
        "original_item_length#0",
        "tmp%21#0"
      ],
      "stack_out": [
        "original_item_length#0",
        "new_item_length#0",
        "new_head_and_tail#0",
        "tmp%15#0",
        "head_offset#0",
        "head_offset#0",
        "new_head_and_tail#0",
        "tmp%21#0"
      ]
    },
    "327": {
      "op": "extract 6 2",
      "defined_out": [
        "head_offset#0",
        "new_head_and_tail#0",
        "new_item_length#0",
        "original_item_length#0",
        "tail_offset_bytes#0"
      ],
      "stack_out": [
        "original_item_length#0",
        "new_item_length#0",
        "new_head_and_tail#0",
        "tmp%15#0",
        "head_offset#0",
        "head_offset#0",
        "new_head_and_tail#0",
        "tail_offset_bytes#0"
      ]
    },
    "330": {
      "op": "swap",
      "stack_out": [
        "original_item_length#0",
        "new_item_length#0",
        "new_head_and_tail#0",
        "tmp%15#0",
        "head_offset#0",
        "head_offset#0",
        "tail_offset_bytes#0",
        "new_head_and_tail#0"
      ]
    },
    "331": {
      "op": "uncover 2",
      "stack_out": [
        "original_item_length#0",
        "new_item_length#0",
        "new_head_and_tail#0",
        "tmp%15#0",
        "head_offset#0",
        "tail_offset_bytes#0",
        "new_head_and_tail#0",
        "head_offset#0"
      ]
    },
    "333": {
      "op": "uncover 2",
      "stack_out": [
        "original_item_length#0",
        "new_item_length#0",
        "new_head_and_tail#0",
        "tmp%15#0",
        "head_offset#0",
        "new_head_and_tail#0",
        "head_offset#0",
        "tail_offset_bytes#0"
      ]
    },
    "335": {
      "op": "replace3",
      "stack_out": [
        "original_item_length#0",
        "new_item_length#0",
        "new_head_and_tail#0",
        "tmp%15#0",
        "head_offset#0",
        "new_head_and_tail#0"
      ]
    },
    "336": {
      "op": "frame_bury 2",
      "defined_out": [
        "head_offset#0",
        "new_head_and_tail#0",
        "new_item_length#0",
        "original_item_length#0"
      ],
      "stack_out": [
        "original_item_length#0",
        "new_item_length#0",
        "new_head_and_tail#0",
        "tmp%15#0",
        "head_offset#0"
      ]
    },
    "338": {
      "block": "static_array_replace_dynamic_element_for_footer@3",
      "stack_in": [
        "original_item_length#0",
        "new_item_length#0",
        "new_head_and_tail#0",
        "tmp%15#0",
        "head_offset#0"
      ],
      "op": "frame_dig 4",
      "defined_out": [
        "head_offset#0"
      ],
      "stack_out": [
        "original_item_length#0",
        "new_item_length#0",
        "new_head_and_tail#0",
        "tmp%15#0",
        "head_offset#0",
        "head_offset#0"
      ]
    },
    "340": {
      "op": "intc_1 // 2",
      "defined_out": [
        "2",
        "head_offset#0"
      ],
      "stack_out": [
        "original_item_length#0",
        "new_item_length#0",
        "new_head_and_tail#0",
        "tmp%15#0",
        "head_offset#0",
        "head_offset#0",
        "2"
      ]
    },
    "341": {
      "op": "+",
      "stack_out": [
        "original_item_length#0",
        "new_item_length#0",
        "new_head_and_tail#0",
        "tmp%15#0",
        "head_offset#0",
        "head_offset#0"
      ]
    },
    "342": {
      "op": "frame_bury 4",
      "defined_out": [
        "head_offset#0"
      ],
      "stack_out": [
        "original_item_length#0",
        "new_item_length#0",
        "new_head_and_tail#0",
        "tmp%15#0",
        "head_offset#0"
      ]
    },
    "344": {
      "op": "b static_array_replace_dynamic_element_for_header@1"
    },
    "347": {
      "block": "static_array_replace_dynamic_element_after_for@4",
      "stack_in": [
        "original_item_length#0",
        "new_item_length#0",
        "new_head_and_tail#0",
        "tmp%15#0",
        "head_offset#0"
      ],
      "op": "frame_dig 2",
      "defined_out": [
        "new_head_and_tail#0"
      ],
      "stack_out": [
        "original_item_length#0",
        "new_item_length#0",
        "new_head_and_tail#0",
        "tmp%15#0",
        "head_offset#0",
        "new_head_and_tail#0"
      ]
    },
    "349": {
      "op": "frame_bury 0"
    },
    "351": {
      "retsub": true,
      "op": "retsub"
    },
    "352": {
      "subroutine": "test_cases.state_mutations.contract.get_struct",
      "params": {},
      "block": "get_struct_block@0",
      "stack_in": [],
      "op": "bytec 6 // \"baz\"",
      "defined_out": [
        "\"baz\""
      ],
      "stack_out": [
        "\"baz\""
      ]
    },
    "354": {
      "op": "len",
      "defined_out": [
        "aggregate%length%0#0"
      ],
      "stack_out": [
        "aggregate%length%0#0"
      ]
    },
    "355": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%0#0"
      ],
      "stack_out": [
        "aggregate%as_bytes%0#0"
      ]
    },
    "356": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%length_uint16%0#0"
      ],
      "stack_out": [
        "aggregate%length_uint16%0#0"
      ]
    },
    "359": {
      "op": "bytec 6 // \"baz\"",
      "stack_out": [
        "aggregate%length_uint16%0#0",
        "\"baz\""
      ]
    },
    "361": {
      "op": "concat",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "362": {
      "op": "bytec_2 // 0x",
      "defined_out": [
        "0x",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "0x"
      ]
    },
    "363": {
      "op": "pushbytes 0x0000000000000001",
      "defined_out": [
        "0x",
        "0x0000000000000001",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "0x",
        "0x0000000000000001"
      ]
    },
    "373": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "aggregate%head%0#0"
      ]
    },
    "374": {
      "op": "pushint 10 // 10",
      "defined_out": [
        "10",
        "aggregate%head%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "aggregate%head%0#0",
        "10"
      ]
    },
    "376": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%1#0",
        "aggregate%head%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "aggregate%head%0#0",
        "aggregate%as_bytes%1#0"
      ]
    },
    "377": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%head%0#0",
        "aggregate%offset_as_uint16%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "aggregate%head%0#0",
        "aggregate%offset_as_uint16%0#0"
      ]
    },
    "380": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%1#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "aggregate%head%1#0"
      ]
    },
    "381": {
      "op": "swap",
      "stack_out": [
        "aggregate%head%1#0",
        "tmp%0#0"
      ]
    },
    "382": {
      "op": "concat",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "383": {
      "retsub": true,
      "op": "retsub"
    },
    "384": {
      "subroutine": "test_cases.state_mutations.contract.Contract.__init__",
      "params": {},
      "block": "__init___block@0",
      "stack_in": [],
      "retsub": true,
      "op": "retsub"
    },
    "385": {
      "subroutine": "test_cases.state_mutations.contract.Contract.opt_in",
      "params": {},
      "block": "opt_in_block@0",
      "stack_in": [],
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "386": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%0#0"
      ],
      "stack_out": [
        "aggregate%as_bytes%0#0"
      ]
    },
    "387": {
      "op": "extract 6 2",
      "defined_out": [
        "encoded_array%0#0"
      ],
      "stack_out": [
        "encoded_array%0#0"
      ]
    },
    "390": {
      "op": "bytec_3 // \"glob\"",
      "defined_out": [
        "\"glob\"",
        "encoded_array%0#0"
      ],
      "stack_out": [
        "encoded_array%0#0",
        "\"glob\""
      ]
    },
    "391": {
      "op": "swap",
      "stack_out": [
        "\"glob\"",
        "encoded_array%0#0"
      ]
    },
    "392": {
      "op": "app_global_put",
      "stack_out": []
    },
    "393": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0"
      ]
    },
    "394": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%1#0"
      ],
      "stack_out": [
        "aggregate%as_bytes%1#0"
      ]
    },
    "395": {
      "op": "extract 6 2",
      "defined_out": [
        "encoded_array%1#0"
      ],
      "stack_out": [
        "encoded_array%1#0"
      ]
    },
    "398": {
      "op": "bytec_0 // \"box\"",
      "defined_out": [
        "\"box\"",
        "encoded_array%1#0"
      ],
      "stack_out": [
        "encoded_array%1#0",
        "\"box\""
      ]
    },
    "399": {
      "op": "box_del",
      "defined_out": [
        "encoded_array%1#0",
        "{box_del}"
      ],
      "stack_out": [
        "encoded_array%1#0",
        "{box_del}"
      ]
    },
    "400": {
      "op": "pop",
      "stack_out": [
        "encoded_array%1#0"
      ]
    },
    "401": {
      "op": "bytec_0 // \"box\"",
      "stack_out": [
        "encoded_array%1#0",
        "\"box\""
      ]
    },
    "402": {
      "op": "swap",
      "stack_out": [
        "\"box\"",
        "encoded_array%1#0"
      ]
    },
    "403": {
      "op": "box_put",
      "stack_out": []
    },
    "404": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0"
      ]
    },
    "405": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%2#0"
      ],
      "stack_out": [
        "aggregate%as_bytes%2#0"
      ]
    },
    "406": {
      "op": "extract 6 2",
      "defined_out": [
        "encoded_array%2#0"
      ],
      "stack_out": [
        "encoded_array%2#0"
      ]
    },
    "409": {
      "op": "txn Sender",
      "defined_out": [
        "encoded_array%2#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "encoded_array%2#0",
        "tmp%0#0"
      ]
    },
    "411": {
      "op": "bytec 4 // \"loc\"",
      "defined_out": [
        "\"loc\"",
        "encoded_array%2#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "encoded_array%2#0",
        "tmp%0#0",
        "\"loc\""
      ]
    },
    "413": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%0#0",
        "\"loc\"",
        "encoded_array%2#0"
      ]
    },
    "415": {
      "op": "app_local_put",
      "stack_out": []
    },
    "416": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0"
      ]
    },
    "417": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%3#0"
      ],
      "stack_out": [
        "aggregate%as_bytes%3#0"
      ]
    },
    "418": {
      "op": "extract 6 2",
      "defined_out": [
        "encoded_array%3#0"
      ],
      "stack_out": [
        "encoded_array%3#0"
      ]
    },
    "421": {
      "op": "txn Sender",
      "defined_out": [
        "encoded_array%3#0",
        "materialized_values%0#0"
      ],
      "stack_out": [
        "encoded_array%3#0",
        "materialized_values%0#0"
      ]
    },
    "423": {
      "op": "bytec 5 // \"map\"",
      "defined_out": [
        "\"map\"",
        "encoded_array%3#0",
        "materialized_values%0#0"
      ],
      "stack_out": [
        "encoded_array%3#0",
        "materialized_values%0#0",
        "\"map\""
      ]
    },
    "425": {
      "op": "swap",
      "stack_out": [
        "encoded_array%3#0",
        "\"map\"",
        "materialized_values%0#0"
      ]
    },
    "426": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_array%3#0"
      ],
      "stack_out": [
        "encoded_array%3#0",
        "box_prefixed_key%0#0"
      ]
    },
    "427": {
      "op": "dup",
      "defined_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0 (copy)",
        "encoded_array%3#0"
      ],
      "stack_out": [
        "encoded_array%3#0",
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0 (copy)"
      ]
    },
    "428": {
      "op": "box_del",
      "stack_out": [
        "encoded_array%3#0",
        "box_prefixed_key%0#0",
        "{box_del}"
      ]
    },
    "429": {
      "op": "pop",
      "stack_out": [
        "encoded_array%3#0",
        "box_prefixed_key%0#0"
      ]
    },
    "430": {
      "op": "swap",
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_array%3#0"
      ]
    },
    "431": {
      "op": "box_put",
      "stack_out": []
    },
    "432": {
      "retsub": true,
      "op": "retsub"
    },
    "433": {
      "subroutine": "test_cases.state_mutations.contract.Contract.append",
      "params": {},
      "block": "append_block@0",
      "stack_in": [],
      "callsub": "test_cases.state_mutations.contract.get_struct",
      "op": "callsub get_struct",
      "defined_out": [
        "struct#0"
      ],
      "stack_out": [
        "struct#0"
      ]
    },
    "436": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "struct#0"
      ],
      "stack_out": [
        "struct#0",
        "0"
      ]
    },
    "437": {
      "op": "bytec_3 // \"glob\"",
      "defined_out": [
        "\"glob\"",
        "0",
        "struct#0"
      ],
      "stack_out": [
        "struct#0",
        "0",
        "\"glob\""
      ]
    },
    "438": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "struct#0"
      ],
      "stack_out": [
        "struct#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "439": {
      "error": "check self.glob exists",
      "op": "assert // check self.glob exists",
      "stack_out": [
        "struct#0",
        "maybe_value%0#0"
      ]
    },
    "440": {
      "op": "dup",
      "defined_out": [
        "maybe_value%0#0",
        "maybe_value%0#0 (copy)",
        "struct#0"
      ],
      "stack_out": [
        "struct#0",
        "maybe_value%0#0",
        "maybe_value%0#0 (copy)"
      ]
    },
    "441": {
      "op": "intc_0 // 0",
      "stack_out": [
        "struct#0",
        "maybe_value%0#0",
        "maybe_value%0#0 (copy)",
        "0"
      ]
    },
    "442": {
      "op": "extract_uint16",
      "defined_out": [
        "extract_uint16%0#0",
        "maybe_value%0#0",
        "struct#0"
      ],
      "stack_out": [
        "struct#0",
        "maybe_value%0#0",
        "extract_uint16%0#0"
      ]
    },
    "443": {
      "op": "swap",
      "stack_out": [
        "struct#0",
        "extract_uint16%0#0",
        "maybe_value%0#0"
      ]
    },
    "444": {
      "op": "dup",
      "stack_out": [
        "struct#0",
        "extract_uint16%0#0",
        "maybe_value%0#0",
        "maybe_value%0#0 (copy)"
      ]
    },
    "445": {
      "op": "len",
      "defined_out": [
        "extract_uint16%0#0",
        "maybe_value%0#0",
        "struct#0",
        "total_length%0#0"
      ],
      "stack_out": [
        "struct#0",
        "extract_uint16%0#0",
        "maybe_value%0#0",
        "total_length%0#0"
      ]
    },
    "446": {
      "op": "swap",
      "stack_out": [
        "struct#0",
        "extract_uint16%0#0",
        "total_length%0#0",
        "maybe_value%0#0"
      ]
    },
    "447": {
      "op": "intc_1 // 2",
      "defined_out": [
        "2",
        "extract_uint16%0#0",
        "maybe_value%0#0",
        "struct#0",
        "total_length%0#0"
      ],
      "stack_out": [
        "struct#0",
        "extract_uint16%0#0",
        "total_length%0#0",
        "maybe_value%0#0",
        "2"
      ]
    },
    "448": {
      "op": "uncover 2",
      "stack_out": [
        "struct#0",
        "extract_uint16%0#0",
        "maybe_value%0#0",
        "2",
        "total_length%0#0"
      ]
    },
    "450": {
      "op": "substring3",
      "defined_out": [
        "extract_to_end%0#0",
        "extract_uint16%0#0",
        "struct#0"
      ],
      "stack_out": [
        "struct#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0"
      ]
    },
    "451": {
      "op": "intc_1 // 2",
      "stack_out": [
        "struct#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "2"
      ]
    },
    "452": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%0#0",
        "extract_to_end%0#0",
        "extract_uint16%0#0",
        "struct#0"
      ],
      "stack_out": [
        "struct#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "aggregate%as_bytes%0#0"
      ]
    },
    "453": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%offset_as_uint16%0#0",
        "extract_to_end%0#0",
        "extract_uint16%0#0",
        "struct#0"
      ],
      "stack_out": [
        "struct#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "aggregate%offset_as_uint16%0#0"
      ]
    },
    "456": {
      "op": "bytec_2 // 0x",
      "defined_out": [
        "0x",
        "aggregate%offset_as_uint16%0#0",
        "extract_to_end%0#0",
        "extract_uint16%0#0",
        "struct#0"
      ],
      "stack_out": [
        "struct#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "aggregate%offset_as_uint16%0#0",
        "0x"
      ]
    },
    "457": {
      "op": "swap",
      "stack_out": [
        "struct#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "0x",
        "aggregate%offset_as_uint16%0#0"
      ]
    },
    "458": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%0#0",
        "extract_to_end%0#0",
        "extract_uint16%0#0",
        "struct#0"
      ],
      "stack_out": [
        "struct#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "aggregate%head%0#0"
      ]
    },
    "459": {
      "op": "dig 3",
      "defined_out": [
        "aggregate%head%0#0",
        "extract_to_end%0#0",
        "extract_uint16%0#0",
        "struct#0",
        "struct#0 (copy)"
      ],
      "stack_out": [
        "struct#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "aggregate%head%0#0",
        "struct#0 (copy)"
      ]
    },
    "461": {
      "op": "concat",
      "defined_out": [
        "extract_to_end%0#0",
        "extract_uint16%0#0",
        "struct#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "struct#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "tmp%1#0"
      ]
    },
    "462": {
      "op": "uncover 2",
      "stack_out": [
        "struct#0",
        "extract_to_end%0#0",
        "tmp%1#0",
        "extract_uint16%0#0"
      ]
    },
    "464": {
      "op": "uncover 2",
      "stack_out": [
        "struct#0",
        "tmp%1#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0"
      ]
    },
    "466": {
      "op": "intc_2 // 1",
      "defined_out": [
        "1",
        "extract_to_end%0#0",
        "extract_uint16%0#0",
        "struct#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "struct#0",
        "tmp%1#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "1"
      ]
    },
    "467": {
      "op": "uncover 3",
      "stack_out": [
        "struct#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "1",
        "tmp%1#0"
      ]
    },
    "469": {
      "callsub": "_puya_lib.arc4.dynamic_array_concat_dynamic_element",
      "op": "callsub dynamic_array_concat_dynamic_element",
      "defined_out": [
        "as_Encoded(len+(uint64,(len+utf8[]))[])%0#0",
        "struct#0"
      ],
      "stack_out": [
        "struct#0",
        "as_Encoded(len+(uint64,(len+utf8[]))[])%0#0"
      ]
    },
    "472": {
      "op": "bytec_3 // \"glob\"",
      "stack_out": [
        "struct#0",
        "as_Encoded(len+(uint64,(len+utf8[]))[])%0#0",
        "\"glob\""
      ]
    },
    "473": {
      "op": "swap",
      "stack_out": [
        "struct#0",
        "\"glob\"",
        "as_Encoded(len+(uint64,(len+utf8[]))[])%0#0"
      ]
    },
    "474": {
      "op": "app_global_put",
      "stack_out": [
        "struct#0"
      ]
    },
    "475": {
      "op": "txn Sender",
      "defined_out": [
        "struct#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "struct#0",
        "tmp%2#0"
      ]
    },
    "477": {
      "op": "dup",
      "defined_out": [
        "struct#0",
        "tmp%2#0",
        "tmp%2#0 (copy)"
      ],
      "stack_out": [
        "struct#0",
        "tmp%2#0",
        "tmp%2#0 (copy)"
      ]
    },
    "478": {
      "op": "intc_0 // 0",
      "stack_out": [
        "struct#0",
        "tmp%2#0",
        "tmp%2#0 (copy)",
        "0"
      ]
    },
    "479": {
      "op": "bytec 4 // \"loc\"",
      "defined_out": [
        "\"loc\"",
        "0",
        "struct#0",
        "tmp%2#0",
        "tmp%2#0 (copy)"
      ],
      "stack_out": [
        "struct#0",
        "tmp%2#0",
        "tmp%2#0 (copy)",
        "0",
        "\"loc\""
      ]
    },
    "481": {
      "op": "app_local_get_ex",
      "defined_out": [
        "maybe_exists%1#0",
        "maybe_value%1#0",
        "struct#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "struct#0",
        "tmp%2#0",
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "482": {
      "error": "check self.loc exists for account",
      "op": "assert // check self.loc exists for account",
      "stack_out": [
        "struct#0",
        "tmp%2#0",
        "maybe_value%1#0"
      ]
    },
    "483": {
      "op": "dup",
      "defined_out": [
        "maybe_value%1#0",
        "maybe_value%1#0 (copy)",
        "struct#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "struct#0",
        "tmp%2#0",
        "maybe_value%1#0",
        "maybe_value%1#0 (copy)"
      ]
    },
    "484": {
      "op": "intc_0 // 0",
      "stack_out": [
        "struct#0",
        "tmp%2#0",
        "maybe_value%1#0",
        "maybe_value%1#0 (copy)",
        "0"
      ]
    },
    "485": {
      "op": "extract_uint16",
      "defined_out": [
        "extract_uint16%1#0",
        "maybe_value%1#0",
        "struct#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "struct#0",
        "tmp%2#0",
        "maybe_value%1#0",
        "extract_uint16%1#0"
      ]
    },
    "486": {
      "op": "swap",
      "stack_out": [
        "struct#0",
        "tmp%2#0",
        "extract_uint16%1#0",
        "maybe_value%1#0"
      ]
    },
    "487": {
      "op": "dup",
      "stack_out": [
        "struct#0",
        "tmp%2#0",
        "extract_uint16%1#0",
        "maybe_value%1#0",
        "maybe_value%1#0 (copy)"
      ]
    },
    "488": {
      "op": "len",
      "defined_out": [
        "extract_uint16%1#0",
        "maybe_value%1#0",
        "struct#0",
        "tmp%2#0",
        "total_length%1#0"
      ],
      "stack_out": [
        "struct#0",
        "tmp%2#0",
        "extract_uint16%1#0",
        "maybe_value%1#0",
        "total_length%1#0"
      ]
    },
    "489": {
      "op": "swap",
      "stack_out": [
        "struct#0",
        "tmp%2#0",
        "extract_uint16%1#0",
        "total_length%1#0",
        "maybe_value%1#0"
      ]
    },
    "490": {
      "op": "intc_1 // 2",
      "stack_out": [
        "struct#0",
        "tmp%2#0",
        "extract_uint16%1#0",
        "total_length%1#0",
        "maybe_value%1#0",
        "2"
      ]
    },
    "491": {
      "op": "uncover 2",
      "stack_out": [
        "struct#0",
        "tmp%2#0",
        "extract_uint16%1#0",
        "maybe_value%1#0",
        "2",
        "total_length%1#0"
      ]
    },
    "493": {
      "op": "substring3",
      "defined_out": [
        "extract_to_end%1#0",
        "extract_uint16%1#0",
        "struct#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "struct#0",
        "tmp%2#0",
        "extract_uint16%1#0",
        "extract_to_end%1#0"
      ]
    },
    "494": {
      "op": "intc_1 // 2",
      "stack_out": [
        "struct#0",
        "tmp%2#0",
        "extract_uint16%1#0",
        "extract_to_end%1#0",
        "2"
      ]
    },
    "495": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%1#0",
        "extract_to_end%1#0",
        "extract_uint16%1#0",
        "struct#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "struct#0",
        "tmp%2#0",
        "extract_uint16%1#0",
        "extract_to_end%1#0",
        "aggregate%as_bytes%1#0"
      ]
    },
    "496": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%offset_as_uint16%1#0",
        "extract_to_end%1#0",
        "extract_uint16%1#0",
        "struct#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "struct#0",
        "tmp%2#0",
        "extract_uint16%1#0",
        "extract_to_end%1#0",
        "aggregate%offset_as_uint16%1#0"
      ]
    },
    "499": {
      "op": "bytec_2 // 0x",
      "stack_out": [
        "struct#0",
        "tmp%2#0",
        "extract_uint16%1#0",
        "extract_to_end%1#0",
        "aggregate%offset_as_uint16%1#0",
        "0x"
      ]
    },
    "500": {
      "op": "swap",
      "stack_out": [
        "struct#0",
        "tmp%2#0",
        "extract_uint16%1#0",
        "extract_to_end%1#0",
        "0x",
        "aggregate%offset_as_uint16%1#0"
      ]
    },
    "501": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%1#0",
        "extract_to_end%1#0",
        "extract_uint16%1#0",
        "struct#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "struct#0",
        "tmp%2#0",
        "extract_uint16%1#0",
        "extract_to_end%1#0",
        "aggregate%head%1#0"
      ]
    },
    "502": {
      "op": "dig 4",
      "stack_out": [
        "struct#0",
        "tmp%2#0",
        "extract_uint16%1#0",
        "extract_to_end%1#0",
        "aggregate%head%1#0",
        "struct#0 (copy)"
      ]
    },
    "504": {
      "op": "concat",
      "defined_out": [
        "extract_to_end%1#0",
        "extract_uint16%1#0",
        "struct#0",
        "tmp%2#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "struct#0",
        "tmp%2#0",
        "extract_uint16%1#0",
        "extract_to_end%1#0",
        "tmp%3#0"
      ]
    },
    "505": {
      "op": "uncover 2",
      "stack_out": [
        "struct#0",
        "tmp%2#0",
        "extract_to_end%1#0",
        "tmp%3#0",
        "extract_uint16%1#0"
      ]
    },
    "507": {
      "op": "uncover 2",
      "stack_out": [
        "struct#0",
        "tmp%2#0",
        "tmp%3#0",
        "extract_uint16%1#0",
        "extract_to_end%1#0"
      ]
    },
    "509": {
      "op": "intc_2 // 1",
      "stack_out": [
        "struct#0",
        "tmp%2#0",
        "tmp%3#0",
        "extract_uint16%1#0",
        "extract_to_end%1#0",
        "1"
      ]
    },
    "510": {
      "op": "uncover 3",
      "stack_out": [
        "struct#0",
        "tmp%2#0",
        "extract_uint16%1#0",
        "extract_to_end%1#0",
        "1",
        "tmp%3#0"
      ]
    },
    "512": {
      "callsub": "_puya_lib.arc4.dynamic_array_concat_dynamic_element",
      "op": "callsub dynamic_array_concat_dynamic_element",
      "defined_out": [
        "as_Encoded(len+(uint64,(len+utf8[]))[])%1#0",
        "struct#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "struct#0",
        "tmp%2#0",
        "as_Encoded(len+(uint64,(len+utf8[]))[])%1#0"
      ]
    },
    "515": {
      "op": "swap",
      "stack_out": [
        "struct#0",
        "as_Encoded(len+(uint64,(len+utf8[]))[])%1#0",
        "tmp%2#0"
      ]
    },
    "516": {
      "op": "bytec 4 // \"loc\"",
      "stack_out": [
        "struct#0",
        "as_Encoded(len+(uint64,(len+utf8[]))[])%1#0",
        "tmp%2#0",
        "\"loc\""
      ]
    },
    "518": {
      "op": "uncover 2",
      "stack_out": [
        "struct#0",
        "tmp%2#0",
        "\"loc\"",
        "as_Encoded(len+(uint64,(len+utf8[]))[])%1#0"
      ]
    },
    "520": {
      "op": "app_local_put",
      "stack_out": [
        "struct#0"
      ]
    },
    "521": {
      "op": "bytec_0 // \"box\"",
      "defined_out": [
        "\"box\"",
        "struct#0"
      ],
      "stack_out": [
        "struct#0",
        "\"box\""
      ]
    },
    "522": {
      "op": "box_get",
      "defined_out": [
        "aggregate%box_get%0#0",
        "aggregate%box_get%1#0",
        "struct#0"
      ],
      "stack_out": [
        "struct#0",
        "aggregate%box_get%0#0",
        "aggregate%box_get%1#0"
      ]
    },
    "523": {
      "error": "check self.box exists",
      "op": "assert // check self.box exists",
      "defined_out": [
        "storage_value%0#0",
        "struct#0"
      ],
      "stack_out": [
        "struct#0",
        "storage_value%0#0"
      ]
    },
    "524": {
      "op": "dup",
      "defined_out": [
        "storage_value%0#0",
        "storage_value%0#0 (copy)",
        "struct#0"
      ],
      "stack_out": [
        "struct#0",
        "storage_value%0#0",
        "storage_value%0#0 (copy)"
      ]
    },
    "525": {
      "op": "intc_0 // 0",
      "stack_out": [
        "struct#0",
        "storage_value%0#0",
        "storage_value%0#0 (copy)",
        "0"
      ]
    },
    "526": {
      "op": "extract_uint16",
      "defined_out": [
        "extract_uint16%2#0",
        "storage_value%0#0",
        "struct#0"
      ],
      "stack_out": [
        "struct#0",
        "storage_value%0#0",
        "extract_uint16%2#0"
      ]
    },
    "527": {
      "op": "swap",
      "stack_out": [
        "struct#0",
        "extract_uint16%2#0",
        "storage_value%0#0"
      ]
    },
    "528": {
      "op": "dup",
      "stack_out": [
        "struct#0",
        "extract_uint16%2#0",
        "storage_value%0#0",
        "storage_value%0#0 (copy)"
      ]
    },
    "529": {
      "op": "len",
      "defined_out": [
        "extract_uint16%2#0",
        "storage_value%0#0",
        "struct#0",
        "total_length%2#0"
      ],
      "stack_out": [
        "struct#0",
        "extract_uint16%2#0",
        "storage_value%0#0",
        "total_length%2#0"
      ]
    },
    "530": {
      "op": "swap",
      "stack_out": [
        "struct#0",
        "extract_uint16%2#0",
        "total_length%2#0",
        "storage_value%0#0"
      ]
    },
    "531": {
      "op": "intc_1 // 2",
      "stack_out": [
        "struct#0",
        "extract_uint16%2#0",
        "total_length%2#0",
        "storage_value%0#0",
        "2"
      ]
    },
    "532": {
      "op": "uncover 2",
      "stack_out": [
        "struct#0",
        "extract_uint16%2#0",
        "storage_value%0#0",
        "2",
        "total_length%2#0"
      ]
    },
    "534": {
      "op": "substring3",
      "defined_out": [
        "extract_to_end%2#0",
        "extract_uint16%2#0",
        "struct#0"
      ],
      "stack_out": [
        "struct#0",
        "extract_uint16%2#0",
        "extract_to_end%2#0"
      ]
    },
    "535": {
      "op": "intc_1 // 2",
      "stack_out": [
        "struct#0",
        "extract_uint16%2#0",
        "extract_to_end%2#0",
        "2"
      ]
    },
    "536": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%2#0",
        "extract_to_end%2#0",
        "extract_uint16%2#0",
        "struct#0"
      ],
      "stack_out": [
        "struct#0",
        "extract_uint16%2#0",
        "extract_to_end%2#0",
        "aggregate%as_bytes%2#0"
      ]
    },
    "537": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%offset_as_uint16%2#0",
        "extract_to_end%2#0",
        "extract_uint16%2#0",
        "struct#0"
      ],
      "stack_out": [
        "struct#0",
        "extract_uint16%2#0",
        "extract_to_end%2#0",
        "aggregate%offset_as_uint16%2#0"
      ]
    },
    "540": {
      "op": "bytec_2 // 0x",
      "stack_out": [
        "struct#0",
        "extract_uint16%2#0",
        "extract_to_end%2#0",
        "aggregate%offset_as_uint16%2#0",
        "0x"
      ]
    },
    "541": {
      "op": "swap",
      "stack_out": [
        "struct#0",
        "extract_uint16%2#0",
        "extract_to_end%2#0",
        "0x",
        "aggregate%offset_as_uint16%2#0"
      ]
    },
    "542": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%2#0",
        "extract_to_end%2#0",
        "extract_uint16%2#0",
        "struct#0"
      ],
      "stack_out": [
        "struct#0",
        "extract_uint16%2#0",
        "extract_to_end%2#0",
        "aggregate%head%2#0"
      ]
    },
    "543": {
      "op": "dig 3",
      "stack_out": [
        "struct#0",
        "extract_uint16%2#0",
        "extract_to_end%2#0",
        "aggregate%head%2#0",
        "struct#0 (copy)"
      ]
    },
    "545": {
      "op": "concat",
      "defined_out": [
        "extract_to_end%2#0",
        "extract_uint16%2#0",
        "struct#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "struct#0",
        "extract_uint16%2#0",
        "extract_to_end%2#0",
        "tmp%4#0"
      ]
    },
    "546": {
      "op": "uncover 2",
      "stack_out": [
        "struct#0",
        "extract_to_end%2#0",
        "tmp%4#0",
        "extract_uint16%2#0"
      ]
    },
    "548": {
      "op": "uncover 2",
      "stack_out": [
        "struct#0",
        "tmp%4#0",
        "extract_uint16%2#0",
        "extract_to_end%2#0"
      ]
    },
    "550": {
      "op": "intc_2 // 1",
      "stack_out": [
        "struct#0",
        "tmp%4#0",
        "extract_uint16%2#0",
        "extract_to_end%2#0",
        "1"
      ]
    },
    "551": {
      "op": "uncover 3",
      "stack_out": [
        "struct#0",
        "extract_uint16%2#0",
        "extract_to_end%2#0",
        "1",
        "tmp%4#0"
      ]
    },
    "553": {
      "callsub": "_puya_lib.arc4.dynamic_array_concat_dynamic_element",
      "op": "callsub dynamic_array_concat_dynamic_element",
      "defined_out": [
        "as_Encoded(len+(uint64,(len+utf8[]))[])%2#0",
        "struct#0"
      ],
      "stack_out": [
        "struct#0",
        "as_Encoded(len+(uint64,(len+utf8[]))[])%2#0"
      ]
    },
    "556": {
      "op": "bytec_0 // \"box\"",
      "stack_out": [
        "struct#0",
        "as_Encoded(len+(uint64,(len+utf8[]))[])%2#0",
        "\"box\""
      ]
    },
    "557": {
      "op": "box_del",
      "defined_out": [
        "as_Encoded(len+(uint64,(len+utf8[]))[])%2#0",
        "struct#0",
        "{box_del}"
      ],
      "stack_out": [
        "struct#0",
        "as_Encoded(len+(uint64,(len+utf8[]))[])%2#0",
        "{box_del}"
      ]
    },
    "558": {
      "op": "pop",
      "stack_out": [
        "struct#0",
        "as_Encoded(len+(uint64,(len+utf8[]))[])%2#0"
      ]
    },
    "559": {
      "op": "bytec_0 // \"box\"",
      "stack_out": [
        "struct#0",
        "as_Encoded(len+(uint64,(len+utf8[]))[])%2#0",
        "\"box\""
      ]
    },
    "560": {
      "op": "swap",
      "stack_out": [
        "struct#0",
        "\"box\"",
        "as_Encoded(len+(uint64,(len+utf8[]))[])%2#0"
      ]
    },
    "561": {
      "op": "box_put",
      "stack_out": [
        "struct#0"
      ]
    },
    "562": {
      "op": "txn Sender",
      "defined_out": [
        "materialized_values%0#0",
        "struct#0"
      ],
      "stack_out": [
        "struct#0",
        "materialized_values%0#0"
      ]
    },
    "564": {
      "op": "bytec 5 // \"map\"",
      "defined_out": [
        "\"map\"",
        "materialized_values%0#0",
        "struct#0"
      ],
      "stack_out": [
        "struct#0",
        "materialized_values%0#0",
        "\"map\""
      ]
    },
    "566": {
      "op": "swap",
      "stack_out": [
        "struct#0",
        "\"map\"",
        "materialized_values%0#0"
      ]
    },
    "567": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0",
        "struct#0"
      ],
      "stack_out": [
        "struct#0",
        "box_prefixed_key%0#0"
      ]
    },
    "568": {
      "op": "dup",
      "defined_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0 (copy)",
        "struct#0"
      ],
      "stack_out": [
        "struct#0",
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0 (copy)"
      ]
    },
    "569": {
      "op": "box_get",
      "defined_out": [
        "aggregate%box_get%2#0",
        "aggregate%box_get%3#0",
        "box_prefixed_key%0#0",
        "struct#0"
      ],
      "stack_out": [
        "struct#0",
        "box_prefixed_key%0#0",
        "aggregate%box_get%2#0",
        "aggregate%box_get%3#0"
      ]
    },
    "570": {
      "error": "check self.map entry exists",
      "op": "assert // check self.map entry exists",
      "defined_out": [
        "box_prefixed_key%0#0",
        "storage_value%1#0",
        "struct#0"
      ],
      "stack_out": [
        "struct#0",
        "box_prefixed_key%0#0",
        "storage_value%1#0"
      ]
    },
    "571": {
      "op": "dup",
      "defined_out": [
        "box_prefixed_key%0#0",
        "storage_value%1#0",
        "storage_value%1#0 (copy)",
        "struct#0"
      ],
      "stack_out": [
        "struct#0",
        "box_prefixed_key%0#0",
        "storage_value%1#0",
        "storage_value%1#0 (copy)"
      ]
    },
    "572": {
      "op": "intc_0 // 0",
      "stack_out": [
        "struct#0",
        "box_prefixed_key%0#0",
        "storage_value%1#0",
        "storage_value%1#0 (copy)",
        "0"
      ]
    },
    "573": {
      "op": "extract_uint16",
      "defined_out": [
        "box_prefixed_key%0#0",
        "extract_uint16%3#0",
        "storage_value%1#0",
        "struct#0"
      ],
      "stack_out": [
        "struct#0",
        "box_prefixed_key%0#0",
        "storage_value%1#0",
        "extract_uint16%3#0"
      ]
    },
    "574": {
      "op": "swap",
      "stack_out": [
        "struct#0",
        "box_prefixed_key%0#0",
        "extract_uint16%3#0",
        "storage_value%1#0"
      ]
    },
    "575": {
      "op": "dup",
      "stack_out": [
        "struct#0",
        "box_prefixed_key%0#0",
        "extract_uint16%3#0",
        "storage_value%1#0",
        "storage_value%1#0 (copy)"
      ]
    },
    "576": {
      "op": "len",
      "defined_out": [
        "box_prefixed_key%0#0",
        "extract_uint16%3#0",
        "storage_value%1#0",
        "struct#0",
        "total_length%3#0"
      ],
      "stack_out": [
        "struct#0",
        "box_prefixed_key%0#0",
        "extract_uint16%3#0",
        "storage_value%1#0",
        "total_length%3#0"
      ]
    },
    "577": {
      "op": "swap",
      "stack_out": [
        "struct#0",
        "box_prefixed_key%0#0",
        "extract_uint16%3#0",
        "total_length%3#0",
        "storage_value%1#0"
      ]
    },
    "578": {
      "op": "intc_1 // 2",
      "stack_out": [
        "struct#0",
        "box_prefixed_key%0#0",
        "extract_uint16%3#0",
        "total_length%3#0",
        "storage_value%1#0",
        "2"
      ]
    },
    "579": {
      "op": "uncover 2",
      "stack_out": [
        "struct#0",
        "box_prefixed_key%0#0",
        "extract_uint16%3#0",
        "storage_value%1#0",
        "2",
        "total_length%3#0"
      ]
    },
    "581": {
      "op": "substring3",
      "defined_out": [
        "box_prefixed_key%0#0",
        "extract_to_end%3#0",
        "extract_uint16%3#0",
        "struct#0"
      ],
      "stack_out": [
        "struct#0",
        "box_prefixed_key%0#0",
        "extract_uint16%3#0",
        "extract_to_end%3#0"
      ]
    },
    "582": {
      "op": "intc_1 // 2",
      "stack_out": [
        "struct#0",
        "box_prefixed_key%0#0",
        "extract_uint16%3#0",
        "extract_to_end%3#0",
        "2"
      ]
    },
    "583": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%3#0",
        "box_prefixed_key%0#0",
        "extract_to_end%3#0",
        "extract_uint16%3#0",
        "struct#0"
      ],
      "stack_out": [
        "struct#0",
        "box_prefixed_key%0#0",
        "extract_uint16%3#0",
        "extract_to_end%3#0",
        "aggregate%as_bytes%3#0"
      ]
    },
    "584": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%offset_as_uint16%3#0",
        "box_prefixed_key%0#0",
        "extract_to_end%3#0",
        "extract_uint16%3#0",
        "struct#0"
      ],
      "stack_out": [
        "struct#0",
        "box_prefixed_key%0#0",
        "extract_uint16%3#0",
        "extract_to_end%3#0",
        "aggregate%offset_as_uint16%3#0"
      ]
    },
    "587": {
      "op": "bytec_2 // 0x",
      "stack_out": [
        "struct#0",
        "box_prefixed_key%0#0",
        "extract_uint16%3#0",
        "extract_to_end%3#0",
        "aggregate%offset_as_uint16%3#0",
        "0x"
      ]
    },
    "588": {
      "op": "swap",
      "stack_out": [
        "struct#0",
        "box_prefixed_key%0#0",
        "extract_uint16%3#0",
        "extract_to_end%3#0",
        "0x",
        "aggregate%offset_as_uint16%3#0"
      ]
    },
    "589": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%3#0",
        "box_prefixed_key%0#0",
        "extract_to_end%3#0",
        "extract_uint16%3#0",
        "struct#0"
      ],
      "stack_out": [
        "struct#0",
        "box_prefixed_key%0#0",
        "extract_uint16%3#0",
        "extract_to_end%3#0",
        "aggregate%head%3#0"
      ]
    },
    "590": {
      "op": "uncover 4",
      "stack_out": [
        "box_prefixed_key%0#0",
        "extract_uint16%3#0",
        "extract_to_end%3#0",
        "aggregate%head%3#0",
        "struct#0"
      ]
    },
    "592": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0",
        "extract_to_end%3#0",
        "extract_uint16%3#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "extract_uint16%3#0",
        "extract_to_end%3#0",
        "tmp%5#0"
      ]
    },
    "593": {
      "op": "uncover 2",
      "stack_out": [
        "box_prefixed_key%0#0",
        "extract_to_end%3#0",
        "tmp%5#0",
        "extract_uint16%3#0"
      ]
    },
    "595": {
      "op": "uncover 2",
      "stack_out": [
        "box_prefixed_key%0#0",
        "tmp%5#0",
        "extract_uint16%3#0",
        "extract_to_end%3#0"
      ]
    },
    "597": {
      "op": "intc_2 // 1",
      "stack_out": [
        "box_prefixed_key%0#0",
        "tmp%5#0",
        "extract_uint16%3#0",
        "extract_to_end%3#0",
        "1"
      ]
    },
    "598": {
      "op": "uncover 3",
      "stack_out": [
        "box_prefixed_key%0#0",
        "extract_uint16%3#0",
        "extract_to_end%3#0",
        "1",
        "tmp%5#0"
      ]
    },
    "600": {
      "callsub": "_puya_lib.arc4.dynamic_array_concat_dynamic_element",
      "op": "callsub dynamic_array_concat_dynamic_element",
      "defined_out": [
        "as_Encoded(len+(uint64,(len+utf8[]))[])%3#0",
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "as_Encoded(len+(uint64,(len+utf8[]))[])%3#0"
      ]
    },
    "603": {
      "op": "dig 1",
      "stack_out": [
        "box_prefixed_key%0#0",
        "as_Encoded(len+(uint64,(len+utf8[]))[])%3#0",
        "box_prefixed_key%0#0 (copy)"
      ]
    },
    "605": {
      "op": "box_del",
      "stack_out": [
        "box_prefixed_key%0#0",
        "as_Encoded(len+(uint64,(len+utf8[]))[])%3#0",
        "{box_del}"
      ]
    },
    "606": {
      "op": "pop",
      "stack_out": [
        "box_prefixed_key%0#0",
        "as_Encoded(len+(uint64,(len+utf8[]))[])%3#0"
      ]
    },
    "607": {
      "op": "box_put",
      "stack_out": []
    },
    "608": {
      "retsub": true,
      "op": "retsub"
    },
    "609": {
      "subroutine": "test_cases.state_mutations.contract.Contract.modify",
      "params": {},
      "block": "modify_block@0",
      "stack_in": [],
      "op": "bytec_1 // \"modified\"",
      "defined_out": [
        "\"modified\""
      ],
      "stack_out": [
        "\"modified\""
      ]
    },
    "610": {
      "op": "len",
      "defined_out": [
        "aggregate%length%0#0"
      ],
      "stack_out": [
        "aggregate%length%0#0"
      ]
    },
    "611": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%0#0"
      ],
      "stack_out": [
        "aggregate%as_bytes%0#0"
      ]
    },
    "612": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%length_uint16%0#0"
      ],
      "stack_out": [
        "aggregate%length_uint16%0#0"
      ]
    },
    "615": {
      "op": "bytec_1 // \"modified\"",
      "stack_out": [
        "aggregate%length_uint16%0#0",
        "\"modified\""
      ]
    },
    "616": {
      "op": "concat",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "617": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "0"
      ]
    },
    "618": {
      "op": "bytec_3 // \"glob\"",
      "defined_out": [
        "\"glob\"",
        "0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "0",
        "\"glob\""
      ]
    },
    "619": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "620": {
      "error": "check self.glob exists",
      "op": "assert // check self.glob exists",
      "stack_out": [
        "tmp%0#0",
        "maybe_value%0#0"
      ]
    },
    "621": {
      "op": "dup",
      "defined_out": [
        "maybe_value%0#0",
        "maybe_value%0#0 (copy)",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "maybe_value%0#0",
        "maybe_value%0#0 (copy)"
      ]
    },
    "622": {
      "op": "len",
      "defined_out": [
        "aggregate%total_length%0#0",
        "maybe_value%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "maybe_value%0#0",
        "aggregate%total_length%0#0"
      ]
    },
    "623": {
      "op": "swap",
      "stack_out": [
        "tmp%0#0",
        "aggregate%total_length%0#0",
        "maybe_value%0#0"
      ]
    },
    "624": {
      "op": "dup",
      "stack_out": [
        "tmp%0#0",
        "aggregate%total_length%0#0",
        "maybe_value%0#0",
        "maybe_value%0#0 (copy)"
      ]
    },
    "625": {
      "op": "intc_1 // 2",
      "defined_out": [
        "2",
        "aggregate%total_length%0#0",
        "maybe_value%0#0",
        "maybe_value%0#0 (copy)",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "aggregate%total_length%0#0",
        "maybe_value%0#0",
        "maybe_value%0#0 (copy)",
        "2"
      ]
    },
    "626": {
      "op": "uncover 3",
      "stack_out": [
        "tmp%0#0",
        "maybe_value%0#0",
        "maybe_value%0#0 (copy)",
        "2",
        "aggregate%total_length%0#0"
      ]
    },
    "628": {
      "op": "substring3",
      "defined_out": [
        "aggregate%array_head_and_tail%0#0",
        "maybe_value%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "maybe_value%0#0",
        "aggregate%array_head_and_tail%0#0"
      ]
    },
    "629": {
      "op": "swap",
      "stack_out": [
        "tmp%0#0",
        "aggregate%array_head_and_tail%0#0",
        "maybe_value%0#0"
      ]
    },
    "630": {
      "op": "dup",
      "stack_out": [
        "tmp%0#0",
        "aggregate%array_head_and_tail%0#0",
        "maybe_value%0#0",
        "maybe_value%0#0 (copy)"
      ]
    },
    "631": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%0#0",
        "aggregate%array_head_and_tail%0#0",
        "maybe_value%0#0",
        "maybe_value%0#0 (copy)",
        "0"
      ]
    },
    "632": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%array_head_and_tail%0#0",
        "aggregate%array_length%0#0",
        "maybe_value%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "aggregate%array_head_and_tail%0#0",
        "maybe_value%0#0",
        "aggregate%array_length%0#0"
      ]
    },
    "633": {
      "op": "swap",
      "stack_out": [
        "tmp%0#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%array_length%0#0",
        "maybe_value%0#0"
      ]
    },
    "634": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%0#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%array_length%0#0",
        "maybe_value%0#0",
        "0"
      ]
    },
    "635": {
      "op": "intc_1 // 2",
      "stack_out": [
        "tmp%0#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%array_length%0#0",
        "maybe_value%0#0",
        "0",
        "2"
      ]
    },
    "636": {
      "op": "*",
      "defined_out": [
        "aggregate%array_head_and_tail%0#0",
        "aggregate%array_length%0#0",
        "aggregate%item_offset_offset%0#0",
        "maybe_value%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%array_length%0#0",
        "maybe_value%0#0",
        "aggregate%item_offset_offset%0#0"
      ]
    },
    "637": {
      "op": "dig 3",
      "defined_out": [
        "aggregate%array_head_and_tail%0#0",
        "aggregate%array_head_and_tail%0#0 (copy)",
        "aggregate%array_length%0#0",
        "aggregate%item_offset_offset%0#0",
        "maybe_value%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%array_length%0#0",
        "maybe_value%0#0",
        "aggregate%item_offset_offset%0#0",
        "aggregate%array_head_and_tail%0#0 (copy)"
      ]
    },
    "639": {
      "op": "swap",
      "stack_out": [
        "tmp%0#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%array_length%0#0",
        "maybe_value%0#0",
        "aggregate%array_head_and_tail%0#0 (copy)",
        "aggregate%item_offset_offset%0#0"
      ]
    },
    "640": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%array_head_and_tail%0#0",
        "aggregate%array_length%0#0",
        "aggregate%item_offset%0#0",
        "maybe_value%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%array_length%0#0",
        "maybe_value%0#0",
        "aggregate%item_offset%0#0"
      ]
    },
    "641": {
      "op": "cover 2",
      "stack_out": [
        "tmp%0#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%item_offset%0#0",
        "aggregate%array_length%0#0",
        "maybe_value%0#0"
      ]
    },
    "643": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%0#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%item_offset%0#0",
        "aggregate%array_length%0#0",
        "maybe_value%0#0",
        "0"
      ]
    },
    "644": {
      "op": "intc_2 // 1",
      "defined_out": [
        "0",
        "1",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%array_length%0#0",
        "aggregate%item_offset%0#0",
        "maybe_value%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%item_offset%0#0",
        "aggregate%array_length%0#0",
        "maybe_value%0#0",
        "0",
        "1"
      ]
    },
    "645": {
      "op": "+",
      "defined_out": [
        "aggregate%array_head_and_tail%0#0",
        "aggregate%array_length%0#0",
        "aggregate%item_offset%0#0",
        "aggregate%next_index%0#0",
        "maybe_value%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%item_offset%0#0",
        "aggregate%array_length%0#0",
        "maybe_value%0#0",
        "aggregate%next_index%0#0"
      ]
    },
    "646": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%0#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%item_offset%0#0",
        "maybe_value%0#0",
        "aggregate%next_index%0#0",
        "aggregate%array_length%0#0"
      ]
    },
    "648": {
      "op": "dig 1",
      "defined_out": [
        "aggregate%array_head_and_tail%0#0",
        "aggregate%array_length%0#0",
        "aggregate%item_offset%0#0",
        "aggregate%next_index%0#0",
        "aggregate%next_index%0#0 (copy)",
        "maybe_value%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%item_offset%0#0",
        "maybe_value%0#0",
        "aggregate%next_index%0#0",
        "aggregate%array_length%0#0",
        "aggregate%next_index%0#0 (copy)"
      ]
    },
    "650": {
      "error": "index access is out of bounds",
      "op": "- // on error: index access is out of bounds",
      "defined_out": [
        "aggregate%array_head_and_tail%0#0",
        "aggregate%has_next%0#0",
        "aggregate%item_offset%0#0",
        "aggregate%next_index%0#0",
        "maybe_value%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%item_offset%0#0",
        "maybe_value%0#0",
        "aggregate%next_index%0#0",
        "aggregate%has_next%0#0"
      ]
    },
    "651": {
      "op": "cover 2",
      "stack_out": [
        "tmp%0#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%item_offset%0#0",
        "aggregate%has_next%0#0",
        "maybe_value%0#0",
        "aggregate%next_index%0#0"
      ]
    },
    "653": {
      "op": "dig 4",
      "stack_out": [
        "tmp%0#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%item_offset%0#0",
        "aggregate%has_next%0#0",
        "maybe_value%0#0",
        "aggregate%next_index%0#0",
        "aggregate%array_head_and_tail%0#0 (copy)"
      ]
    },
    "655": {
      "op": "len",
      "defined_out": [
        "aggregate%array_head_and_tail%0#0",
        "aggregate%end_of_array%0#0",
        "aggregate%has_next%0#0",
        "aggregate%item_offset%0#0",
        "aggregate%next_index%0#0",
        "maybe_value%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%item_offset%0#0",
        "aggregate%has_next%0#0",
        "maybe_value%0#0",
        "aggregate%next_index%0#0",
        "aggregate%end_of_array%0#0"
      ]
    },
    "656": {
      "op": "cover 2",
      "stack_out": [
        "tmp%0#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%item_offset%0#0",
        "aggregate%has_next%0#0",
        "aggregate%end_of_array%0#0",
        "maybe_value%0#0",
        "aggregate%next_index%0#0"
      ]
    },
    "658": {
      "op": "intc_1 // 2",
      "stack_out": [
        "tmp%0#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%item_offset%0#0",
        "aggregate%has_next%0#0",
        "aggregate%end_of_array%0#0",
        "maybe_value%0#0",
        "aggregate%next_index%0#0",
        "2"
      ]
    },
    "659": {
      "op": "*",
      "defined_out": [
        "aggregate%array_head_and_tail%0#0",
        "aggregate%end_of_array%0#0",
        "aggregate%has_next%0#0",
        "aggregate%item_offset%0#0",
        "aggregate%next_item_offset_offset%0#0",
        "maybe_value%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%item_offset%0#0",
        "aggregate%has_next%0#0",
        "aggregate%end_of_array%0#0",
        "maybe_value%0#0",
        "aggregate%next_item_offset_offset%0#0"
      ]
    },
    "660": {
      "op": "dig 5",
      "stack_out": [
        "tmp%0#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%item_offset%0#0",
        "aggregate%has_next%0#0",
        "aggregate%end_of_array%0#0",
        "maybe_value%0#0",
        "aggregate%next_item_offset_offset%0#0",
        "aggregate%array_head_and_tail%0#0 (copy)"
      ]
    },
    "662": {
      "op": "swap",
      "stack_out": [
        "tmp%0#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%item_offset%0#0",
        "aggregate%has_next%0#0",
        "aggregate%end_of_array%0#0",
        "maybe_value%0#0",
        "aggregate%array_head_and_tail%0#0 (copy)",
        "aggregate%next_item_offset_offset%0#0"
      ]
    },
    "663": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%array_head_and_tail%0#0",
        "aggregate%end_of_array%0#0",
        "aggregate%has_next%0#0",
        "aggregate%item_offset%0#0",
        "aggregate%next_item_offset%0#0",
        "maybe_value%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%item_offset%0#0",
        "aggregate%has_next%0#0",
        "aggregate%end_of_array%0#0",
        "maybe_value%0#0",
        "aggregate%next_item_offset%0#0"
      ]
    },
    "664": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%0#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%item_offset%0#0",
        "aggregate%has_next%0#0",
        "maybe_value%0#0",
        "aggregate%next_item_offset%0#0",
        "aggregate%end_of_array%0#0"
      ]
    },
    "666": {
      "op": "swap",
      "stack_out": [
        "tmp%0#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%item_offset%0#0",
        "aggregate%has_next%0#0",
        "maybe_value%0#0",
        "aggregate%end_of_array%0#0",
        "aggregate%next_item_offset%0#0"
      ]
    },
    "667": {
      "op": "uncover 3",
      "stack_out": [
        "tmp%0#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%item_offset%0#0",
        "maybe_value%0#0",
        "aggregate%end_of_array%0#0",
        "aggregate%next_item_offset%0#0",
        "aggregate%has_next%0#0"
      ]
    },
    "669": {
      "op": "select",
      "defined_out": [
        "aggregate%array_head_and_tail%0#0",
        "aggregate%end_offset%0#0",
        "aggregate%item_offset%0#0",
        "maybe_value%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%item_offset%0#0",
        "maybe_value%0#0",
        "aggregate%end_offset%0#0"
      ]
    },
    "670": {
      "op": "uncover 3",
      "stack_out": [
        "tmp%0#0",
        "aggregate%item_offset%0#0",
        "maybe_value%0#0",
        "aggregate%end_offset%0#0",
        "aggregate%array_head_and_tail%0#0"
      ]
    },
    "672": {
      "op": "uncover 3",
      "stack_out": [
        "tmp%0#0",
        "maybe_value%0#0",
        "aggregate%end_offset%0#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%item_offset%0#0"
      ]
    },
    "674": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%0#0",
        "maybe_value%0#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%item_offset%0#0",
        "aggregate%end_offset%0#0"
      ]
    },
    "676": {
      "op": "substring3",
      "defined_out": [
        "aggregate%substring3%0#0",
        "maybe_value%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "maybe_value%0#0",
        "aggregate%substring3%0#0"
      ]
    },
    "677": {
      "op": "dup",
      "defined_out": [
        "aggregate%substring3%0#0",
        "aggregate%substring3%0#0 (copy)",
        "maybe_value%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "maybe_value%0#0",
        "aggregate%substring3%0#0",
        "aggregate%substring3%0#0 (copy)"
      ]
    },
    "678": {
      "op": "intc_3 // 8",
      "defined_out": [
        "8",
        "aggregate%substring3%0#0",
        "aggregate%substring3%0#0 (copy)",
        "maybe_value%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "maybe_value%0#0",
        "aggregate%substring3%0#0",
        "aggregate%substring3%0#0 (copy)",
        "8"
      ]
    },
    "679": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%item_offset%1#0",
        "aggregate%substring3%0#0",
        "maybe_value%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "maybe_value%0#0",
        "aggregate%substring3%0#0",
        "aggregate%item_offset%1#0"
      ]
    },
    "680": {
      "op": "swap",
      "stack_out": [
        "tmp%0#0",
        "maybe_value%0#0",
        "aggregate%item_offset%1#0",
        "aggregate%substring3%0#0"
      ]
    },
    "681": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%0#0",
        "maybe_value%0#0",
        "aggregate%item_offset%1#0",
        "aggregate%substring3%0#0",
        "0"
      ]
    },
    "682": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%0#0",
        "maybe_value%0#0",
        "aggregate%substring3%0#0",
        "0",
        "aggregate%item_offset%1#0"
      ]
    },
    "684": {
      "op": "extract3",
      "defined_out": [
        "aggregate%data_up_to_item%0#0",
        "maybe_value%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "maybe_value%0#0",
        "aggregate%data_up_to_item%0#0"
      ]
    },
    "685": {
      "op": "uncover 2",
      "stack_out": [
        "maybe_value%0#0",
        "aggregate%data_up_to_item%0#0",
        "tmp%0#0"
      ]
    },
    "687": {
      "op": "concat",
      "defined_out": [
        "aggregate%updated_data%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "aggregate%updated_data%0#0"
      ]
    },
    "688": {
      "op": "dig 1",
      "stack_out": [
        "maybe_value%0#0",
        "aggregate%updated_data%0#0",
        "maybe_value%0#0 (copy)"
      ]
    },
    "690": {
      "op": "intc_0 // 0",
      "stack_out": [
        "maybe_value%0#0",
        "aggregate%updated_data%0#0",
        "maybe_value%0#0 (copy)",
        "0"
      ]
    },
    "691": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%array_length%1#0",
        "aggregate%updated_data%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "aggregate%updated_data%0#0",
        "aggregate%array_length%1#0"
      ]
    },
    "692": {
      "op": "intc_0 // 0",
      "stack_out": [
        "maybe_value%0#0",
        "aggregate%updated_data%0#0",
        "aggregate%array_length%1#0",
        "0"
      ]
    },
    "693": {
      "op": ">",
      "defined_out": [
        "aggregate%lt%0#0",
        "aggregate%updated_data%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "aggregate%updated_data%0#0",
        "aggregate%lt%0#0"
      ]
    },
    "694": {
      "error": "index access is out of bounds",
      "op": "assert // index access is out of bounds",
      "stack_out": [
        "maybe_value%0#0",
        "aggregate%updated_data%0#0"
      ]
    },
    "695": {
      "op": "intc_0 // 0",
      "stack_out": [
        "maybe_value%0#0",
        "aggregate%updated_data%0#0",
        "0"
      ]
    },
    "696": {
      "callsub": "_puya_lib.arc4.dynamic_array_replace_dynamic_element",
      "op": "callsub dynamic_array_replace_dynamic_element",
      "defined_out": [
        "updated_array%0#0"
      ],
      "stack_out": [
        "updated_array%0#0"
      ]
    },
    "699": {
      "op": "bytec_3 // \"glob\"",
      "stack_out": [
        "updated_array%0#0",
        "\"glob\""
      ]
    },
    "700": {
      "op": "swap",
      "stack_out": [
        "\"glob\"",
        "updated_array%0#0"
      ]
    },
    "701": {
      "op": "app_global_put",
      "stack_out": []
    },
    "702": {
      "op": "bytec_1 // \"modified\"",
      "stack_out": [
        "\"modified\""
      ]
    },
    "703": {
      "op": "len",
      "defined_out": [
        "aggregate%length%1#0"
      ],
      "stack_out": [
        "aggregate%length%1#0"
      ]
    },
    "704": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%1#0"
      ],
      "stack_out": [
        "aggregate%as_bytes%1#0"
      ]
    },
    "705": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%length_uint16%1#0"
      ],
      "stack_out": [
        "aggregate%length_uint16%1#0"
      ]
    },
    "708": {
      "op": "bytec_1 // \"modified\"",
      "stack_out": [
        "aggregate%length_uint16%1#0",
        "\"modified\""
      ]
    },
    "709": {
      "op": "concat",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "710": {
      "op": "txn Sender",
      "defined_out": [
        "tmp%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%2#0"
      ]
    },
    "712": {
      "op": "dup",
      "defined_out": [
        "tmp%1#0",
        "tmp%2#0",
        "tmp%2#0 (copy)"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%2#0",
        "tmp%2#0 (copy)"
      ]
    },
    "713": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%1#0",
        "tmp%2#0",
        "tmp%2#0 (copy)",
        "0"
      ]
    },
    "714": {
      "op": "bytec 4 // \"loc\"",
      "defined_out": [
        "\"loc\"",
        "0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%2#0 (copy)"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%2#0",
        "tmp%2#0 (copy)",
        "0",
        "\"loc\""
      ]
    },
    "716": {
      "op": "app_local_get_ex",
      "defined_out": [
        "maybe_exists%1#0",
        "maybe_value%1#0",
        "tmp%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%2#0",
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "717": {
      "error": "check self.loc exists for account",
      "op": "assert // check self.loc exists for account",
      "stack_out": [
        "tmp%1#0",
        "tmp%2#0",
        "maybe_value%1#0"
      ]
    },
    "718": {
      "op": "dup",
      "defined_out": [
        "maybe_value%1#0",
        "maybe_value%1#0 (copy)",
        "tmp%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%2#0",
        "maybe_value%1#0",
        "maybe_value%1#0 (copy)"
      ]
    },
    "719": {
      "op": "len",
      "defined_out": [
        "aggregate%total_length%1#0",
        "maybe_value%1#0",
        "tmp%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%2#0",
        "maybe_value%1#0",
        "aggregate%total_length%1#0"
      ]
    },
    "720": {
      "op": "swap",
      "stack_out": [
        "tmp%1#0",
        "tmp%2#0",
        "aggregate%total_length%1#0",
        "maybe_value%1#0"
      ]
    },
    "721": {
      "op": "dup",
      "stack_out": [
        "tmp%1#0",
        "tmp%2#0",
        "aggregate%total_length%1#0",
        "maybe_value%1#0",
        "maybe_value%1#0 (copy)"
      ]
    },
    "722": {
      "op": "intc_1 // 2",
      "stack_out": [
        "tmp%1#0",
        "tmp%2#0",
        "aggregate%total_length%1#0",
        "maybe_value%1#0",
        "maybe_value%1#0 (copy)",
        "2"
      ]
    },
    "723": {
      "op": "uncover 3",
      "stack_out": [
        "tmp%1#0",
        "tmp%2#0",
        "maybe_value%1#0",
        "maybe_value%1#0 (copy)",
        "2",
        "aggregate%total_length%1#0"
      ]
    },
    "725": {
      "op": "substring3",
      "defined_out": [
        "aggregate%array_head_and_tail%1#0",
        "maybe_value%1#0",
        "tmp%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%2#0",
        "maybe_value%1#0",
        "aggregate%array_head_and_tail%1#0"
      ]
    },
    "726": {
      "op": "swap",
      "stack_out": [
        "tmp%1#0",
        "tmp%2#0",
        "aggregate%array_head_and_tail%1#0",
        "maybe_value%1#0"
      ]
    },
    "727": {
      "op": "dup",
      "stack_out": [
        "tmp%1#0",
        "tmp%2#0",
        "aggregate%array_head_and_tail%1#0",
        "maybe_value%1#0",
        "maybe_value%1#0 (copy)"
      ]
    },
    "728": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%1#0",
        "tmp%2#0",
        "aggregate%array_head_and_tail%1#0",
        "maybe_value%1#0",
        "maybe_value%1#0 (copy)",
        "0"
      ]
    },
    "729": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%array_head_and_tail%1#0",
        "aggregate%array_length%2#0",
        "maybe_value%1#0",
        "tmp%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%2#0",
        "aggregate%array_head_and_tail%1#0",
        "maybe_value%1#0",
        "aggregate%array_length%2#0"
      ]
    },
    "730": {
      "op": "swap",
      "stack_out": [
        "tmp%1#0",
        "tmp%2#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%array_length%2#0",
        "maybe_value%1#0"
      ]
    },
    "731": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%1#0",
        "tmp%2#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%array_length%2#0",
        "maybe_value%1#0",
        "0"
      ]
    },
    "732": {
      "op": "intc_1 // 2",
      "stack_out": [
        "tmp%1#0",
        "tmp%2#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%array_length%2#0",
        "maybe_value%1#0",
        "0",
        "2"
      ]
    },
    "733": {
      "op": "*",
      "defined_out": [
        "aggregate%array_head_and_tail%1#0",
        "aggregate%array_length%2#0",
        "aggregate%item_offset_offset%1#0",
        "maybe_value%1#0",
        "tmp%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%2#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%array_length%2#0",
        "maybe_value%1#0",
        "aggregate%item_offset_offset%1#0"
      ]
    },
    "734": {
      "op": "dig 3",
      "defined_out": [
        "aggregate%array_head_and_tail%1#0",
        "aggregate%array_head_and_tail%1#0 (copy)",
        "aggregate%array_length%2#0",
        "aggregate%item_offset_offset%1#0",
        "maybe_value%1#0",
        "tmp%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%2#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%array_length%2#0",
        "maybe_value%1#0",
        "aggregate%item_offset_offset%1#0",
        "aggregate%array_head_and_tail%1#0 (copy)"
      ]
    },
    "736": {
      "op": "swap",
      "stack_out": [
        "tmp%1#0",
        "tmp%2#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%array_length%2#0",
        "maybe_value%1#0",
        "aggregate%array_head_and_tail%1#0 (copy)",
        "aggregate%item_offset_offset%1#0"
      ]
    },
    "737": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%array_head_and_tail%1#0",
        "aggregate%array_length%2#0",
        "aggregate%item_offset%2#0",
        "maybe_value%1#0",
        "tmp%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%2#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%array_length%2#0",
        "maybe_value%1#0",
        "aggregate%item_offset%2#0"
      ]
    },
    "738": {
      "op": "cover 2",
      "stack_out": [
        "tmp%1#0",
        "tmp%2#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%item_offset%2#0",
        "aggregate%array_length%2#0",
        "maybe_value%1#0"
      ]
    },
    "740": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%1#0",
        "tmp%2#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%item_offset%2#0",
        "aggregate%array_length%2#0",
        "maybe_value%1#0",
        "0"
      ]
    },
    "741": {
      "op": "intc_2 // 1",
      "stack_out": [
        "tmp%1#0",
        "tmp%2#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%item_offset%2#0",
        "aggregate%array_length%2#0",
        "maybe_value%1#0",
        "0",
        "1"
      ]
    },
    "742": {
      "op": "+",
      "defined_out": [
        "aggregate%array_head_and_tail%1#0",
        "aggregate%array_length%2#0",
        "aggregate%item_offset%2#0",
        "aggregate%next_index%1#0",
        "maybe_value%1#0",
        "tmp%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%2#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%item_offset%2#0",
        "aggregate%array_length%2#0",
        "maybe_value%1#0",
        "aggregate%next_index%1#0"
      ]
    },
    "743": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%1#0",
        "tmp%2#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%item_offset%2#0",
        "maybe_value%1#0",
        "aggregate%next_index%1#0",
        "aggregate%array_length%2#0"
      ]
    },
    "745": {
      "op": "dig 1",
      "defined_out": [
        "aggregate%array_head_and_tail%1#0",
        "aggregate%array_length%2#0",
        "aggregate%item_offset%2#0",
        "aggregate%next_index%1#0",
        "aggregate%next_index%1#0 (copy)",
        "maybe_value%1#0",
        "tmp%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%2#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%item_offset%2#0",
        "maybe_value%1#0",
        "aggregate%next_index%1#0",
        "aggregate%array_length%2#0",
        "aggregate%next_index%1#0 (copy)"
      ]
    },
    "747": {
      "error": "index access is out of bounds",
      "op": "- // on error: index access is out of bounds",
      "defined_out": [
        "aggregate%array_head_and_tail%1#0",
        "aggregate%has_next%1#0",
        "aggregate%item_offset%2#0",
        "aggregate%next_index%1#0",
        "maybe_value%1#0",
        "tmp%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%2#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%item_offset%2#0",
        "maybe_value%1#0",
        "aggregate%next_index%1#0",
        "aggregate%has_next%1#0"
      ]
    },
    "748": {
      "op": "cover 2",
      "stack_out": [
        "tmp%1#0",
        "tmp%2#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%item_offset%2#0",
        "aggregate%has_next%1#0",
        "maybe_value%1#0",
        "aggregate%next_index%1#0"
      ]
    },
    "750": {
      "op": "dig 4",
      "stack_out": [
        "tmp%1#0",
        "tmp%2#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%item_offset%2#0",
        "aggregate%has_next%1#0",
        "maybe_value%1#0",
        "aggregate%next_index%1#0",
        "aggregate%array_head_and_tail%1#0 (copy)"
      ]
    },
    "752": {
      "op": "len",
      "defined_out": [
        "aggregate%array_head_and_tail%1#0",
        "aggregate%end_of_array%1#0",
        "aggregate%has_next%1#0",
        "aggregate%item_offset%2#0",
        "aggregate%next_index%1#0",
        "maybe_value%1#0",
        "tmp%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%2#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%item_offset%2#0",
        "aggregate%has_next%1#0",
        "maybe_value%1#0",
        "aggregate%next_index%1#0",
        "aggregate%end_of_array%1#0"
      ]
    },
    "753": {
      "op": "cover 2",
      "stack_out": [
        "tmp%1#0",
        "tmp%2#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%item_offset%2#0",
        "aggregate%has_next%1#0",
        "aggregate%end_of_array%1#0",
        "maybe_value%1#0",
        "aggregate%next_index%1#0"
      ]
    },
    "755": {
      "op": "intc_1 // 2",
      "stack_out": [
        "tmp%1#0",
        "tmp%2#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%item_offset%2#0",
        "aggregate%has_next%1#0",
        "aggregate%end_of_array%1#0",
        "maybe_value%1#0",
        "aggregate%next_index%1#0",
        "2"
      ]
    },
    "756": {
      "op": "*",
      "defined_out": [
        "aggregate%array_head_and_tail%1#0",
        "aggregate%end_of_array%1#0",
        "aggregate%has_next%1#0",
        "aggregate%item_offset%2#0",
        "aggregate%next_item_offset_offset%1#0",
        "maybe_value%1#0",
        "tmp%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%2#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%item_offset%2#0",
        "aggregate%has_next%1#0",
        "aggregate%end_of_array%1#0",
        "maybe_value%1#0",
        "aggregate%next_item_offset_offset%1#0"
      ]
    },
    "757": {
      "op": "dig 5",
      "stack_out": [
        "tmp%1#0",
        "tmp%2#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%item_offset%2#0",
        "aggregate%has_next%1#0",
        "aggregate%end_of_array%1#0",
        "maybe_value%1#0",
        "aggregate%next_item_offset_offset%1#0",
        "aggregate%array_head_and_tail%1#0 (copy)"
      ]
    },
    "759": {
      "op": "swap",
      "stack_out": [
        "tmp%1#0",
        "tmp%2#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%item_offset%2#0",
        "aggregate%has_next%1#0",
        "aggregate%end_of_array%1#0",
        "maybe_value%1#0",
        "aggregate%array_head_and_tail%1#0 (copy)",
        "aggregate%next_item_offset_offset%1#0"
      ]
    },
    "760": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%array_head_and_tail%1#0",
        "aggregate%end_of_array%1#0",
        "aggregate%has_next%1#0",
        "aggregate%item_offset%2#0",
        "aggregate%next_item_offset%1#0",
        "maybe_value%1#0",
        "tmp%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%2#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%item_offset%2#0",
        "aggregate%has_next%1#0",
        "aggregate%end_of_array%1#0",
        "maybe_value%1#0",
        "aggregate%next_item_offset%1#0"
      ]
    },
    "761": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%1#0",
        "tmp%2#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%item_offset%2#0",
        "aggregate%has_next%1#0",
        "maybe_value%1#0",
        "aggregate%next_item_offset%1#0",
        "aggregate%end_of_array%1#0"
      ]
    },
    "763": {
      "op": "swap",
      "stack_out": [
        "tmp%1#0",
        "tmp%2#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%item_offset%2#0",
        "aggregate%has_next%1#0",
        "maybe_value%1#0",
        "aggregate%end_of_array%1#0",
        "aggregate%next_item_offset%1#0"
      ]
    },
    "764": {
      "op": "uncover 3",
      "stack_out": [
        "tmp%1#0",
        "tmp%2#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%item_offset%2#0",
        "maybe_value%1#0",
        "aggregate%end_of_array%1#0",
        "aggregate%next_item_offset%1#0",
        "aggregate%has_next%1#0"
      ]
    },
    "766": {
      "op": "select",
      "defined_out": [
        "aggregate%array_head_and_tail%1#0",
        "aggregate%end_offset%1#0",
        "aggregate%item_offset%2#0",
        "maybe_value%1#0",
        "tmp%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%2#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%item_offset%2#0",
        "maybe_value%1#0",
        "aggregate%end_offset%1#0"
      ]
    },
    "767": {
      "op": "uncover 3",
      "stack_out": [
        "tmp%1#0",
        "tmp%2#0",
        "aggregate%item_offset%2#0",
        "maybe_value%1#0",
        "aggregate%end_offset%1#0",
        "aggregate%array_head_and_tail%1#0"
      ]
    },
    "769": {
      "op": "uncover 3",
      "stack_out": [
        "tmp%1#0",
        "tmp%2#0",
        "maybe_value%1#0",
        "aggregate%end_offset%1#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%item_offset%2#0"
      ]
    },
    "771": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%1#0",
        "tmp%2#0",
        "maybe_value%1#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%item_offset%2#0",
        "aggregate%end_offset%1#0"
      ]
    },
    "773": {
      "op": "substring3",
      "defined_out": [
        "aggregate%substring3%2#0",
        "maybe_value%1#0",
        "tmp%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%2#0",
        "maybe_value%1#0",
        "aggregate%substring3%2#0"
      ]
    },
    "774": {
      "op": "dup",
      "defined_out": [
        "aggregate%substring3%2#0",
        "aggregate%substring3%2#0 (copy)",
        "maybe_value%1#0",
        "tmp%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%2#0",
        "maybe_value%1#0",
        "aggregate%substring3%2#0",
        "aggregate%substring3%2#0 (copy)"
      ]
    },
    "775": {
      "op": "intc_3 // 8",
      "stack_out": [
        "tmp%1#0",
        "tmp%2#0",
        "maybe_value%1#0",
        "aggregate%substring3%2#0",
        "aggregate%substring3%2#0 (copy)",
        "8"
      ]
    },
    "776": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%item_offset%3#0",
        "aggregate%substring3%2#0",
        "maybe_value%1#0",
        "tmp%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%2#0",
        "maybe_value%1#0",
        "aggregate%substring3%2#0",
        "aggregate%item_offset%3#0"
      ]
    },
    "777": {
      "op": "swap",
      "stack_out": [
        "tmp%1#0",
        "tmp%2#0",
        "maybe_value%1#0",
        "aggregate%item_offset%3#0",
        "aggregate%substring3%2#0"
      ]
    },
    "778": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%1#0",
        "tmp%2#0",
        "maybe_value%1#0",
        "aggregate%item_offset%3#0",
        "aggregate%substring3%2#0",
        "0"
      ]
    },
    "779": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%1#0",
        "tmp%2#0",
        "maybe_value%1#0",
        "aggregate%substring3%2#0",
        "0",
        "aggregate%item_offset%3#0"
      ]
    },
    "781": {
      "op": "extract3",
      "defined_out": [
        "aggregate%data_up_to_item%1#0",
        "maybe_value%1#0",
        "tmp%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%2#0",
        "maybe_value%1#0",
        "aggregate%data_up_to_item%1#0"
      ]
    },
    "782": {
      "op": "uncover 3",
      "stack_out": [
        "tmp%2#0",
        "maybe_value%1#0",
        "aggregate%data_up_to_item%1#0",
        "tmp%1#0"
      ]
    },
    "784": {
      "op": "concat",
      "defined_out": [
        "aggregate%updated_data%1#0",
        "maybe_value%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "maybe_value%1#0",
        "aggregate%updated_data%1#0"
      ]
    },
    "785": {
      "op": "dig 1",
      "stack_out": [
        "tmp%2#0",
        "maybe_value%1#0",
        "aggregate%updated_data%1#0",
        "maybe_value%1#0 (copy)"
      ]
    },
    "787": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%2#0",
        "maybe_value%1#0",
        "aggregate%updated_data%1#0",
        "maybe_value%1#0 (copy)",
        "0"
      ]
    },
    "788": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%array_length%3#0",
        "aggregate%updated_data%1#0",
        "maybe_value%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "maybe_value%1#0",
        "aggregate%updated_data%1#0",
        "aggregate%array_length%3#0"
      ]
    },
    "789": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%2#0",
        "maybe_value%1#0",
        "aggregate%updated_data%1#0",
        "aggregate%array_length%3#0",
        "0"
      ]
    },
    "790": {
      "op": ">",
      "defined_out": [
        "aggregate%lt%1#0",
        "aggregate%updated_data%1#0",
        "maybe_value%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "maybe_value%1#0",
        "aggregate%updated_data%1#0",
        "aggregate%lt%1#0"
      ]
    },
    "791": {
      "error": "index access is out of bounds",
      "op": "assert // index access is out of bounds",
      "stack_out": [
        "tmp%2#0",
        "maybe_value%1#0",
        "aggregate%updated_data%1#0"
      ]
    },
    "792": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%2#0",
        "maybe_value%1#0",
        "aggregate%updated_data%1#0",
        "0"
      ]
    },
    "793": {
      "callsub": "_puya_lib.arc4.dynamic_array_replace_dynamic_element",
      "op": "callsub dynamic_array_replace_dynamic_element",
      "defined_out": [
        "tmp%2#0",
        "updated_array%1#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "updated_array%1#0"
      ]
    },
    "796": {
      "op": "swap",
      "stack_out": [
        "updated_array%1#0",
        "tmp%2#0"
      ]
    },
    "797": {
      "op": "bytec 4 // \"loc\"",
      "stack_out": [
        "updated_array%1#0",
        "tmp%2#0",
        "\"loc\""
      ]
    },
    "799": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%2#0",
        "\"loc\"",
        "updated_array%1#0"
      ]
    },
    "801": {
      "op": "app_local_put",
      "stack_out": []
    },
    "802": {
      "op": "bytec_1 // \"modified\"",
      "stack_out": [
        "\"modified\""
      ]
    },
    "803": {
      "op": "len",
      "defined_out": [
        "aggregate%length%2#0"
      ],
      "stack_out": [
        "aggregate%length%2#0"
      ]
    },
    "804": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%2#0"
      ],
      "stack_out": [
        "aggregate%as_bytes%2#0"
      ]
    },
    "805": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%length_uint16%2#0"
      ],
      "stack_out": [
        "aggregate%length_uint16%2#0"
      ]
    },
    "808": {
      "op": "bytec_1 // \"modified\"",
      "stack_out": [
        "aggregate%length_uint16%2#0",
        "\"modified\""
      ]
    },
    "809": {
      "op": "concat",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "810": {
      "op": "bytec_0 // \"box\"",
      "defined_out": [
        "\"box\"",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "\"box\""
      ]
    },
    "811": {
      "op": "box_get",
      "defined_out": [
        "aggregate%box_get%0#0",
        "aggregate%box_get%1#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "aggregate%box_get%0#0",
        "aggregate%box_get%1#0"
      ]
    },
    "812": {
      "error": "check self.box exists",
      "op": "assert // check self.box exists",
      "defined_out": [
        "storage_value%0#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "storage_value%0#0"
      ]
    },
    "813": {
      "op": "dup",
      "defined_out": [
        "storage_value%0#0",
        "storage_value%0#0 (copy)",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "storage_value%0#0",
        "storage_value%0#0 (copy)"
      ]
    },
    "814": {
      "op": "len",
      "defined_out": [
        "aggregate%total_length%2#0",
        "storage_value%0#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "storage_value%0#0",
        "aggregate%total_length%2#0"
      ]
    },
    "815": {
      "op": "swap",
      "stack_out": [
        "tmp%3#0",
        "aggregate%total_length%2#0",
        "storage_value%0#0"
      ]
    },
    "816": {
      "op": "dup",
      "stack_out": [
        "tmp%3#0",
        "aggregate%total_length%2#0",
        "storage_value%0#0",
        "storage_value%0#0 (copy)"
      ]
    },
    "817": {
      "op": "intc_1 // 2",
      "stack_out": [
        "tmp%3#0",
        "aggregate%total_length%2#0",
        "storage_value%0#0",
        "storage_value%0#0 (copy)",
        "2"
      ]
    },
    "818": {
      "op": "uncover 3",
      "stack_out": [
        "tmp%3#0",
        "storage_value%0#0",
        "storage_value%0#0 (copy)",
        "2",
        "aggregate%total_length%2#0"
      ]
    },
    "820": {
      "op": "substring3",
      "defined_out": [
        "aggregate%array_head_and_tail%2#0",
        "storage_value%0#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "storage_value%0#0",
        "aggregate%array_head_and_tail%2#0"
      ]
    },
    "821": {
      "op": "swap",
      "stack_out": [
        "tmp%3#0",
        "aggregate%array_head_and_tail%2#0",
        "storage_value%0#0"
      ]
    },
    "822": {
      "op": "dup",
      "stack_out": [
        "tmp%3#0",
        "aggregate%array_head_and_tail%2#0",
        "storage_value%0#0",
        "storage_value%0#0 (copy)"
      ]
    },
    "823": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%3#0",
        "aggregate%array_head_and_tail%2#0",
        "storage_value%0#0",
        "storage_value%0#0 (copy)",
        "0"
      ]
    },
    "824": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%array_head_and_tail%2#0",
        "aggregate%array_length%4#0",
        "storage_value%0#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "aggregate%array_head_and_tail%2#0",
        "storage_value%0#0",
        "aggregate%array_length%4#0"
      ]
    },
    "825": {
      "op": "swap",
      "stack_out": [
        "tmp%3#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%array_length%4#0",
        "storage_value%0#0"
      ]
    },
    "826": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%3#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%array_length%4#0",
        "storage_value%0#0",
        "0"
      ]
    },
    "827": {
      "op": "intc_1 // 2",
      "stack_out": [
        "tmp%3#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%array_length%4#0",
        "storage_value%0#0",
        "0",
        "2"
      ]
    },
    "828": {
      "op": "*",
      "defined_out": [
        "aggregate%array_head_and_tail%2#0",
        "aggregate%array_length%4#0",
        "aggregate%item_offset_offset%2#0",
        "storage_value%0#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%array_length%4#0",
        "storage_value%0#0",
        "aggregate%item_offset_offset%2#0"
      ]
    },
    "829": {
      "op": "dig 3",
      "defined_out": [
        "aggregate%array_head_and_tail%2#0",
        "aggregate%array_head_and_tail%2#0 (copy)",
        "aggregate%array_length%4#0",
        "aggregate%item_offset_offset%2#0",
        "storage_value%0#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%array_length%4#0",
        "storage_value%0#0",
        "aggregate%item_offset_offset%2#0",
        "aggregate%array_head_and_tail%2#0 (copy)"
      ]
    },
    "831": {
      "op": "swap",
      "stack_out": [
        "tmp%3#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%array_length%4#0",
        "storage_value%0#0",
        "aggregate%array_head_and_tail%2#0 (copy)",
        "aggregate%item_offset_offset%2#0"
      ]
    },
    "832": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%array_head_and_tail%2#0",
        "aggregate%array_length%4#0",
        "aggregate%item_offset%4#0",
        "storage_value%0#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%array_length%4#0",
        "storage_value%0#0",
        "aggregate%item_offset%4#0"
      ]
    },
    "833": {
      "op": "cover 2",
      "stack_out": [
        "tmp%3#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%item_offset%4#0",
        "aggregate%array_length%4#0",
        "storage_value%0#0"
      ]
    },
    "835": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%3#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%item_offset%4#0",
        "aggregate%array_length%4#0",
        "storage_value%0#0",
        "0"
      ]
    },
    "836": {
      "op": "intc_2 // 1",
      "stack_out": [
        "tmp%3#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%item_offset%4#0",
        "aggregate%array_length%4#0",
        "storage_value%0#0",
        "0",
        "1"
      ]
    },
    "837": {
      "op": "+",
      "defined_out": [
        "aggregate%array_head_and_tail%2#0",
        "aggregate%array_length%4#0",
        "aggregate%item_offset%4#0",
        "aggregate%next_index%2#0",
        "storage_value%0#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%item_offset%4#0",
        "aggregate%array_length%4#0",
        "storage_value%0#0",
        "aggregate%next_index%2#0"
      ]
    },
    "838": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%3#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%item_offset%4#0",
        "storage_value%0#0",
        "aggregate%next_index%2#0",
        "aggregate%array_length%4#0"
      ]
    },
    "840": {
      "op": "dig 1",
      "defined_out": [
        "aggregate%array_head_and_tail%2#0",
        "aggregate%array_length%4#0",
        "aggregate%item_offset%4#0",
        "aggregate%next_index%2#0",
        "aggregate%next_index%2#0 (copy)",
        "storage_value%0#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%item_offset%4#0",
        "storage_value%0#0",
        "aggregate%next_index%2#0",
        "aggregate%array_length%4#0",
        "aggregate%next_index%2#0 (copy)"
      ]
    },
    "842": {
      "error": "index access is out of bounds",
      "op": "- // on error: index access is out of bounds",
      "defined_out": [
        "aggregate%array_head_and_tail%2#0",
        "aggregate%has_next%2#0",
        "aggregate%item_offset%4#0",
        "aggregate%next_index%2#0",
        "storage_value%0#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%item_offset%4#0",
        "storage_value%0#0",
        "aggregate%next_index%2#0",
        "aggregate%has_next%2#0"
      ]
    },
    "843": {
      "op": "cover 2",
      "stack_out": [
        "tmp%3#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%item_offset%4#0",
        "aggregate%has_next%2#0",
        "storage_value%0#0",
        "aggregate%next_index%2#0"
      ]
    },
    "845": {
      "op": "dig 4",
      "stack_out": [
        "tmp%3#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%item_offset%4#0",
        "aggregate%has_next%2#0",
        "storage_value%0#0",
        "aggregate%next_index%2#0",
        "aggregate%array_head_and_tail%2#0 (copy)"
      ]
    },
    "847": {
      "op": "len",
      "defined_out": [
        "aggregate%array_head_and_tail%2#0",
        "aggregate%end_of_array%2#0",
        "aggregate%has_next%2#0",
        "aggregate%item_offset%4#0",
        "aggregate%next_index%2#0",
        "storage_value%0#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%item_offset%4#0",
        "aggregate%has_next%2#0",
        "storage_value%0#0",
        "aggregate%next_index%2#0",
        "aggregate%end_of_array%2#0"
      ]
    },
    "848": {
      "op": "cover 2",
      "stack_out": [
        "tmp%3#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%item_offset%4#0",
        "aggregate%has_next%2#0",
        "aggregate%end_of_array%2#0",
        "storage_value%0#0",
        "aggregate%next_index%2#0"
      ]
    },
    "850": {
      "op": "intc_1 // 2",
      "stack_out": [
        "tmp%3#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%item_offset%4#0",
        "aggregate%has_next%2#0",
        "aggregate%end_of_array%2#0",
        "storage_value%0#0",
        "aggregate%next_index%2#0",
        "2"
      ]
    },
    "851": {
      "op": "*",
      "defined_out": [
        "aggregate%array_head_and_tail%2#0",
        "aggregate%end_of_array%2#0",
        "aggregate%has_next%2#0",
        "aggregate%item_offset%4#0",
        "aggregate%next_item_offset_offset%2#0",
        "storage_value%0#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%item_offset%4#0",
        "aggregate%has_next%2#0",
        "aggregate%end_of_array%2#0",
        "storage_value%0#0",
        "aggregate%next_item_offset_offset%2#0"
      ]
    },
    "852": {
      "op": "dig 5",
      "stack_out": [
        "tmp%3#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%item_offset%4#0",
        "aggregate%has_next%2#0",
        "aggregate%end_of_array%2#0",
        "storage_value%0#0",
        "aggregate%next_item_offset_offset%2#0",
        "aggregate%array_head_and_tail%2#0 (copy)"
      ]
    },
    "854": {
      "op": "swap",
      "stack_out": [
        "tmp%3#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%item_offset%4#0",
        "aggregate%has_next%2#0",
        "aggregate%end_of_array%2#0",
        "storage_value%0#0",
        "aggregate%array_head_and_tail%2#0 (copy)",
        "aggregate%next_item_offset_offset%2#0"
      ]
    },
    "855": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%array_head_and_tail%2#0",
        "aggregate%end_of_array%2#0",
        "aggregate%has_next%2#0",
        "aggregate%item_offset%4#0",
        "aggregate%next_item_offset%2#0",
        "storage_value%0#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%item_offset%4#0",
        "aggregate%has_next%2#0",
        "aggregate%end_of_array%2#0",
        "storage_value%0#0",
        "aggregate%next_item_offset%2#0"
      ]
    },
    "856": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%3#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%item_offset%4#0",
        "aggregate%has_next%2#0",
        "storage_value%0#0",
        "aggregate%next_item_offset%2#0",
        "aggregate%end_of_array%2#0"
      ]
    },
    "858": {
      "op": "swap",
      "stack_out": [
        "tmp%3#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%item_offset%4#0",
        "aggregate%has_next%2#0",
        "storage_value%0#0",
        "aggregate%end_of_array%2#0",
        "aggregate%next_item_offset%2#0"
      ]
    },
    "859": {
      "op": "uncover 3",
      "stack_out": [
        "tmp%3#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%item_offset%4#0",
        "storage_value%0#0",
        "aggregate%end_of_array%2#0",
        "aggregate%next_item_offset%2#0",
        "aggregate%has_next%2#0"
      ]
    },
    "861": {
      "op": "select",
      "defined_out": [
        "aggregate%array_head_and_tail%2#0",
        "aggregate%end_offset%2#0",
        "aggregate%item_offset%4#0",
        "storage_value%0#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%item_offset%4#0",
        "storage_value%0#0",
        "aggregate%end_offset%2#0"
      ]
    },
    "862": {
      "op": "uncover 3",
      "stack_out": [
        "tmp%3#0",
        "aggregate%item_offset%4#0",
        "storage_value%0#0",
        "aggregate%end_offset%2#0",
        "aggregate%array_head_and_tail%2#0"
      ]
    },
    "864": {
      "op": "uncover 3",
      "stack_out": [
        "tmp%3#0",
        "storage_value%0#0",
        "aggregate%end_offset%2#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%item_offset%4#0"
      ]
    },
    "866": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%3#0",
        "storage_value%0#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%item_offset%4#0",
        "aggregate%end_offset%2#0"
      ]
    },
    "868": {
      "op": "substring3",
      "defined_out": [
        "aggregate%substring3%4#0",
        "storage_value%0#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "storage_value%0#0",
        "aggregate%substring3%4#0"
      ]
    },
    "869": {
      "op": "dup",
      "defined_out": [
        "aggregate%substring3%4#0",
        "aggregate%substring3%4#0 (copy)",
        "storage_value%0#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "storage_value%0#0",
        "aggregate%substring3%4#0",
        "aggregate%substring3%4#0 (copy)"
      ]
    },
    "870": {
      "op": "intc_3 // 8",
      "stack_out": [
        "tmp%3#0",
        "storage_value%0#0",
        "aggregate%substring3%4#0",
        "aggregate%substring3%4#0 (copy)",
        "8"
      ]
    },
    "871": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%item_offset%5#0",
        "aggregate%substring3%4#0",
        "storage_value%0#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "storage_value%0#0",
        "aggregate%substring3%4#0",
        "aggregate%item_offset%5#0"
      ]
    },
    "872": {
      "op": "swap",
      "stack_out": [
        "tmp%3#0",
        "storage_value%0#0",
        "aggregate%item_offset%5#0",
        "aggregate%substring3%4#0"
      ]
    },
    "873": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%3#0",
        "storage_value%0#0",
        "aggregate%item_offset%5#0",
        "aggregate%substring3%4#0",
        "0"
      ]
    },
    "874": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%3#0",
        "storage_value%0#0",
        "aggregate%substring3%4#0",
        "0",
        "aggregate%item_offset%5#0"
      ]
    },
    "876": {
      "op": "extract3",
      "defined_out": [
        "aggregate%data_up_to_item%2#0",
        "storage_value%0#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "storage_value%0#0",
        "aggregate%data_up_to_item%2#0"
      ]
    },
    "877": {
      "op": "uncover 2",
      "stack_out": [
        "storage_value%0#0",
        "aggregate%data_up_to_item%2#0",
        "tmp%3#0"
      ]
    },
    "879": {
      "op": "concat",
      "defined_out": [
        "aggregate%updated_data%2#0",
        "storage_value%0#0"
      ],
      "stack_out": [
        "storage_value%0#0",
        "aggregate%updated_data%2#0"
      ]
    },
    "880": {
      "op": "dig 1",
      "stack_out": [
        "storage_value%0#0",
        "aggregate%updated_data%2#0",
        "storage_value%0#0 (copy)"
      ]
    },
    "882": {
      "op": "intc_0 // 0",
      "stack_out": [
        "storage_value%0#0",
        "aggregate%updated_data%2#0",
        "storage_value%0#0 (copy)",
        "0"
      ]
    },
    "883": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%array_length%5#0",
        "aggregate%updated_data%2#0",
        "storage_value%0#0"
      ],
      "stack_out": [
        "storage_value%0#0",
        "aggregate%updated_data%2#0",
        "aggregate%array_length%5#0"
      ]
    },
    "884": {
      "op": "intc_0 // 0",
      "stack_out": [
        "storage_value%0#0",
        "aggregate%updated_data%2#0",
        "aggregate%array_length%5#0",
        "0"
      ]
    },
    "885": {
      "op": ">",
      "defined_out": [
        "aggregate%lt%2#0",
        "aggregate%updated_data%2#0",
        "storage_value%0#0"
      ],
      "stack_out": [
        "storage_value%0#0",
        "aggregate%updated_data%2#0",
        "aggregate%lt%2#0"
      ]
    },
    "886": {
      "error": "index access is out of bounds",
      "op": "assert // index access is out of bounds",
      "stack_out": [
        "storage_value%0#0",
        "aggregate%updated_data%2#0"
      ]
    },
    "887": {
      "op": "intc_0 // 0",
      "stack_out": [
        "storage_value%0#0",
        "aggregate%updated_data%2#0",
        "0"
      ]
    },
    "888": {
      "callsub": "_puya_lib.arc4.dynamic_array_replace_dynamic_element",
      "op": "callsub dynamic_array_replace_dynamic_element",
      "defined_out": [
        "updated_array%2#0"
      ],
      "stack_out": [
        "updated_array%2#0"
      ]
    },
    "891": {
      "op": "bytec_0 // \"box\"",
      "stack_out": [
        "updated_array%2#0",
        "\"box\""
      ]
    },
    "892": {
      "op": "box_del",
      "defined_out": [
        "updated_array%2#0",
        "{box_del}"
      ],
      "stack_out": [
        "updated_array%2#0",
        "{box_del}"
      ]
    },
    "893": {
      "op": "pop",
      "stack_out": [
        "updated_array%2#0"
      ]
    },
    "894": {
      "op": "bytec_0 // \"box\"",
      "stack_out": [
        "updated_array%2#0",
        "\"box\""
      ]
    },
    "895": {
      "op": "swap",
      "stack_out": [
        "\"box\"",
        "updated_array%2#0"
      ]
    },
    "896": {
      "op": "box_put",
      "stack_out": []
    },
    "897": {
      "op": "bytec_1 // \"modified\"",
      "stack_out": [
        "\"modified\""
      ]
    },
    "898": {
      "op": "len",
      "defined_out": [
        "aggregate%length%3#0"
      ],
      "stack_out": [
        "aggregate%length%3#0"
      ]
    },
    "899": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%3#0"
      ],
      "stack_out": [
        "aggregate%as_bytes%3#0"
      ]
    },
    "900": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%length_uint16%3#0"
      ],
      "stack_out": [
        "aggregate%length_uint16%3#0"
      ]
    },
    "903": {
      "op": "bytec_1 // \"modified\"",
      "stack_out": [
        "aggregate%length_uint16%3#0",
        "\"modified\""
      ]
    },
    "904": {
      "op": "concat",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "905": {
      "op": "txn Sender",
      "defined_out": [
        "materialized_values%0#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "materialized_values%0#0"
      ]
    },
    "907": {
      "op": "bytec 5 // \"map\"",
      "defined_out": [
        "\"map\"",
        "materialized_values%0#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "materialized_values%0#0",
        "\"map\""
      ]
    },
    "909": {
      "op": "swap",
      "stack_out": [
        "tmp%4#0",
        "\"map\"",
        "materialized_values%0#0"
      ]
    },
    "910": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "box_prefixed_key%0#0"
      ]
    },
    "911": {
      "op": "dup",
      "defined_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0 (copy)",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0 (copy)"
      ]
    },
    "912": {
      "op": "box_get",
      "defined_out": [
        "aggregate%box_get%2#0",
        "aggregate%box_get%3#0",
        "box_prefixed_key%0#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "box_prefixed_key%0#0",
        "aggregate%box_get%2#0",
        "aggregate%box_get%3#0"
      ]
    },
    "913": {
      "error": "check self.map entry exists",
      "op": "assert // check self.map entry exists",
      "defined_out": [
        "box_prefixed_key%0#0",
        "storage_value%1#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "box_prefixed_key%0#0",
        "storage_value%1#0"
      ]
    },
    "914": {
      "op": "dup",
      "defined_out": [
        "box_prefixed_key%0#0",
        "storage_value%1#0",
        "storage_value%1#0 (copy)",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "box_prefixed_key%0#0",
        "storage_value%1#0",
        "storage_value%1#0 (copy)"
      ]
    },
    "915": {
      "op": "len",
      "defined_out": [
        "aggregate%total_length%3#0",
        "box_prefixed_key%0#0",
        "storage_value%1#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "box_prefixed_key%0#0",
        "storage_value%1#0",
        "aggregate%total_length%3#0"
      ]
    },
    "916": {
      "op": "swap",
      "stack_out": [
        "tmp%4#0",
        "box_prefixed_key%0#0",
        "aggregate%total_length%3#0",
        "storage_value%1#0"
      ]
    },
    "917": {
      "op": "dup",
      "stack_out": [
        "tmp%4#0",
        "box_prefixed_key%0#0",
        "aggregate%total_length%3#0",
        "storage_value%1#0",
        "storage_value%1#0 (copy)"
      ]
    },
    "918": {
      "op": "intc_1 // 2",
      "stack_out": [
        "tmp%4#0",
        "box_prefixed_key%0#0",
        "aggregate%total_length%3#0",
        "storage_value%1#0",
        "storage_value%1#0 (copy)",
        "2"
      ]
    },
    "919": {
      "op": "uncover 3",
      "stack_out": [
        "tmp%4#0",
        "box_prefixed_key%0#0",
        "storage_value%1#0",
        "storage_value%1#0 (copy)",
        "2",
        "aggregate%total_length%3#0"
      ]
    },
    "921": {
      "op": "substring3",
      "defined_out": [
        "aggregate%array_head_and_tail%3#0",
        "box_prefixed_key%0#0",
        "storage_value%1#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "box_prefixed_key%0#0",
        "storage_value%1#0",
        "aggregate%array_head_and_tail%3#0"
      ]
    },
    "922": {
      "op": "swap",
      "stack_out": [
        "tmp%4#0",
        "box_prefixed_key%0#0",
        "aggregate%array_head_and_tail%3#0",
        "storage_value%1#0"
      ]
    },
    "923": {
      "op": "dup",
      "stack_out": [
        "tmp%4#0",
        "box_prefixed_key%0#0",
        "aggregate%array_head_and_tail%3#0",
        "storage_value%1#0",
        "storage_value%1#0 (copy)"
      ]
    },
    "924": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%4#0",
        "box_prefixed_key%0#0",
        "aggregate%array_head_and_tail%3#0",
        "storage_value%1#0",
        "storage_value%1#0 (copy)",
        "0"
      ]
    },
    "925": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%array_head_and_tail%3#0",
        "aggregate%array_length%6#0",
        "box_prefixed_key%0#0",
        "storage_value%1#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "box_prefixed_key%0#0",
        "aggregate%array_head_and_tail%3#0",
        "storage_value%1#0",
        "aggregate%array_length%6#0"
      ]
    },
    "926": {
      "op": "swap",
      "stack_out": [
        "tmp%4#0",
        "box_prefixed_key%0#0",
        "aggregate%array_head_and_tail%3#0",
        "aggregate%array_length%6#0",
        "storage_value%1#0"
      ]
    },
    "927": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%4#0",
        "box_prefixed_key%0#0",
        "aggregate%array_head_and_tail%3#0",
        "aggregate%array_length%6#0",
        "storage_value%1#0",
        "0"
      ]
    },
    "928": {
      "op": "intc_1 // 2",
      "stack_out": [
        "tmp%4#0",
        "box_prefixed_key%0#0",
        "aggregate%array_head_and_tail%3#0",
        "aggregate%array_length%6#0",
        "storage_value%1#0",
        "0",
        "2"
      ]
    },
    "929": {
      "op": "*",
      "defined_out": [
        "aggregate%array_head_and_tail%3#0",
        "aggregate%array_length%6#0",
        "aggregate%item_offset_offset%3#0",
        "box_prefixed_key%0#0",
        "storage_value%1#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "box_prefixed_key%0#0",
        "aggregate%array_head_and_tail%3#0",
        "aggregate%array_length%6#0",
        "storage_value%1#0",
        "aggregate%item_offset_offset%3#0"
      ]
    },
    "930": {
      "op": "dig 3",
      "defined_out": [
        "aggregate%array_head_and_tail%3#0",
        "aggregate%array_head_and_tail%3#0 (copy)",
        "aggregate%array_length%6#0",
        "aggregate%item_offset_offset%3#0",
        "box_prefixed_key%0#0",
        "storage_value%1#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "box_prefixed_key%0#0",
        "aggregate%array_head_and_tail%3#0",
        "aggregate%array_length%6#0",
        "storage_value%1#0",
        "aggregate%item_offset_offset%3#0",
        "aggregate%array_head_and_tail%3#0 (copy)"
      ]
    },
    "932": {
      "op": "swap",
      "stack_out": [
        "tmp%4#0",
        "box_prefixed_key%0#0",
        "aggregate%array_head_and_tail%3#0",
        "aggregate%array_length%6#0",
        "storage_value%1#0",
        "aggregate%array_head_and_tail%3#0 (copy)",
        "aggregate%item_offset_offset%3#0"
      ]
    },
    "933": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%array_head_and_tail%3#0",
        "aggregate%array_length%6#0",
        "aggregate%item_offset%6#0",
        "box_prefixed_key%0#0",
        "storage_value%1#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "box_prefixed_key%0#0",
        "aggregate%array_head_and_tail%3#0",
        "aggregate%array_length%6#0",
        "storage_value%1#0",
        "aggregate%item_offset%6#0"
      ]
    },
    "934": {
      "op": "cover 2",
      "stack_out": [
        "tmp%4#0",
        "box_prefixed_key%0#0",
        "aggregate%array_head_and_tail%3#0",
        "aggregate%item_offset%6#0",
        "aggregate%array_length%6#0",
        "storage_value%1#0"
      ]
    },
    "936": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%4#0",
        "box_prefixed_key%0#0",
        "aggregate%array_head_and_tail%3#0",
        "aggregate%item_offset%6#0",
        "aggregate%array_length%6#0",
        "storage_value%1#0",
        "0"
      ]
    },
    "937": {
      "op": "intc_2 // 1",
      "stack_out": [
        "tmp%4#0",
        "box_prefixed_key%0#0",
        "aggregate%array_head_and_tail%3#0",
        "aggregate%item_offset%6#0",
        "aggregate%array_length%6#0",
        "storage_value%1#0",
        "0",
        "1"
      ]
    },
    "938": {
      "op": "+",
      "defined_out": [
        "aggregate%array_head_and_tail%3#0",
        "aggregate%array_length%6#0",
        "aggregate%item_offset%6#0",
        "aggregate%next_index%3#0",
        "box_prefixed_key%0#0",
        "storage_value%1#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "box_prefixed_key%0#0",
        "aggregate%array_head_and_tail%3#0",
        "aggregate%item_offset%6#0",
        "aggregate%array_length%6#0",
        "storage_value%1#0",
        "aggregate%next_index%3#0"
      ]
    },
    "939": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%4#0",
        "box_prefixed_key%0#0",
        "aggregate%array_head_and_tail%3#0",
        "aggregate%item_offset%6#0",
        "storage_value%1#0",
        "aggregate%next_index%3#0",
        "aggregate%array_length%6#0"
      ]
    },
    "941": {
      "op": "dig 1",
      "defined_out": [
        "aggregate%array_head_and_tail%3#0",
        "aggregate%array_length%6#0",
        "aggregate%item_offset%6#0",
        "aggregate%next_index%3#0",
        "aggregate%next_index%3#0 (copy)",
        "box_prefixed_key%0#0",
        "storage_value%1#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "box_prefixed_key%0#0",
        "aggregate%array_head_and_tail%3#0",
        "aggregate%item_offset%6#0",
        "storage_value%1#0",
        "aggregate%next_index%3#0",
        "aggregate%array_length%6#0",
        "aggregate%next_index%3#0 (copy)"
      ]
    },
    "943": {
      "error": "index access is out of bounds",
      "op": "- // on error: index access is out of bounds",
      "defined_out": [
        "aggregate%array_head_and_tail%3#0",
        "aggregate%has_next%3#0",
        "aggregate%item_offset%6#0",
        "aggregate%next_index%3#0",
        "box_prefixed_key%0#0",
        "storage_value%1#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "box_prefixed_key%0#0",
        "aggregate%array_head_and_tail%3#0",
        "aggregate%item_offset%6#0",
        "storage_value%1#0",
        "aggregate%next_index%3#0",
        "aggregate%has_next%3#0"
      ]
    },
    "944": {
      "op": "cover 2",
      "stack_out": [
        "tmp%4#0",
        "box_prefixed_key%0#0",
        "aggregate%array_head_and_tail%3#0",
        "aggregate%item_offset%6#0",
        "aggregate%has_next%3#0",
        "storage_value%1#0",
        "aggregate%next_index%3#0"
      ]
    },
    "946": {
      "op": "dig 4",
      "stack_out": [
        "tmp%4#0",
        "box_prefixed_key%0#0",
        "aggregate%array_head_and_tail%3#0",
        "aggregate%item_offset%6#0",
        "aggregate%has_next%3#0",
        "storage_value%1#0",
        "aggregate%next_index%3#0",
        "aggregate%array_head_and_tail%3#0 (copy)"
      ]
    },
    "948": {
      "op": "len",
      "defined_out": [
        "aggregate%array_head_and_tail%3#0",
        "aggregate%end_of_array%3#0",
        "aggregate%has_next%3#0",
        "aggregate%item_offset%6#0",
        "aggregate%next_index%3#0",
        "box_prefixed_key%0#0",
        "storage_value%1#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "box_prefixed_key%0#0",
        "aggregate%array_head_and_tail%3#0",
        "aggregate%item_offset%6#0",
        "aggregate%has_next%3#0",
        "storage_value%1#0",
        "aggregate%next_index%3#0",
        "aggregate%end_of_array%3#0"
      ]
    },
    "949": {
      "op": "cover 2",
      "stack_out": [
        "tmp%4#0",
        "box_prefixed_key%0#0",
        "aggregate%array_head_and_tail%3#0",
        "aggregate%item_offset%6#0",
        "aggregate%has_next%3#0",
        "aggregate%end_of_array%3#0",
        "storage_value%1#0",
        "aggregate%next_index%3#0"
      ]
    },
    "951": {
      "op": "intc_1 // 2",
      "stack_out": [
        "tmp%4#0",
        "box_prefixed_key%0#0",
        "aggregate%array_head_and_tail%3#0",
        "aggregate%item_offset%6#0",
        "aggregate%has_next%3#0",
        "aggregate%end_of_array%3#0",
        "storage_value%1#0",
        "aggregate%next_index%3#0",
        "2"
      ]
    },
    "952": {
      "op": "*",
      "defined_out": [
        "aggregate%array_head_and_tail%3#0",
        "aggregate%end_of_array%3#0",
        "aggregate%has_next%3#0",
        "aggregate%item_offset%6#0",
        "aggregate%next_item_offset_offset%3#0",
        "box_prefixed_key%0#0",
        "storage_value%1#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "box_prefixed_key%0#0",
        "aggregate%array_head_and_tail%3#0",
        "aggregate%item_offset%6#0",
        "aggregate%has_next%3#0",
        "aggregate%end_of_array%3#0",
        "storage_value%1#0",
        "aggregate%next_item_offset_offset%3#0"
      ]
    },
    "953": {
      "op": "dig 5",
      "stack_out": [
        "tmp%4#0",
        "box_prefixed_key%0#0",
        "aggregate%array_head_and_tail%3#0",
        "aggregate%item_offset%6#0",
        "aggregate%has_next%3#0",
        "aggregate%end_of_array%3#0",
        "storage_value%1#0",
        "aggregate%next_item_offset_offset%3#0",
        "aggregate%array_head_and_tail%3#0 (copy)"
      ]
    },
    "955": {
      "op": "swap",
      "stack_out": [
        "tmp%4#0",
        "box_prefixed_key%0#0",
        "aggregate%array_head_and_tail%3#0",
        "aggregate%item_offset%6#0",
        "aggregate%has_next%3#0",
        "aggregate%end_of_array%3#0",
        "storage_value%1#0",
        "aggregate%array_head_and_tail%3#0 (copy)",
        "aggregate%next_item_offset_offset%3#0"
      ]
    },
    "956": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%array_head_and_tail%3#0",
        "aggregate%end_of_array%3#0",
        "aggregate%has_next%3#0",
        "aggregate%item_offset%6#0",
        "aggregate%next_item_offset%3#0",
        "box_prefixed_key%0#0",
        "storage_value%1#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "box_prefixed_key%0#0",
        "aggregate%array_head_and_tail%3#0",
        "aggregate%item_offset%6#0",
        "aggregate%has_next%3#0",
        "aggregate%end_of_array%3#0",
        "storage_value%1#0",
        "aggregate%next_item_offset%3#0"
      ]
    },
    "957": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%4#0",
        "box_prefixed_key%0#0",
        "aggregate%array_head_and_tail%3#0",
        "aggregate%item_offset%6#0",
        "aggregate%has_next%3#0",
        "storage_value%1#0",
        "aggregate%next_item_offset%3#0",
        "aggregate%end_of_array%3#0"
      ]
    },
    "959": {
      "op": "swap",
      "stack_out": [
        "tmp%4#0",
        "box_prefixed_key%0#0",
        "aggregate%array_head_and_tail%3#0",
        "aggregate%item_offset%6#0",
        "aggregate%has_next%3#0",
        "storage_value%1#0",
        "aggregate%end_of_array%3#0",
        "aggregate%next_item_offset%3#0"
      ]
    },
    "960": {
      "op": "uncover 3",
      "stack_out": [
        "tmp%4#0",
        "box_prefixed_key%0#0",
        "aggregate%array_head_and_tail%3#0",
        "aggregate%item_offset%6#0",
        "storage_value%1#0",
        "aggregate%end_of_array%3#0",
        "aggregate%next_item_offset%3#0",
        "aggregate%has_next%3#0"
      ]
    },
    "962": {
      "op": "select",
      "defined_out": [
        "aggregate%array_head_and_tail%3#0",
        "aggregate%end_offset%3#0",
        "aggregate%item_offset%6#0",
        "box_prefixed_key%0#0",
        "storage_value%1#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "box_prefixed_key%0#0",
        "aggregate%array_head_and_tail%3#0",
        "aggregate%item_offset%6#0",
        "storage_value%1#0",
        "aggregate%end_offset%3#0"
      ]
    },
    "963": {
      "op": "uncover 3",
      "stack_out": [
        "tmp%4#0",
        "box_prefixed_key%0#0",
        "aggregate%item_offset%6#0",
        "storage_value%1#0",
        "aggregate%end_offset%3#0",
        "aggregate%array_head_and_tail%3#0"
      ]
    },
    "965": {
      "op": "uncover 3",
      "stack_out": [
        "tmp%4#0",
        "box_prefixed_key%0#0",
        "storage_value%1#0",
        "aggregate%end_offset%3#0",
        "aggregate%array_head_and_tail%3#0",
        "aggregate%item_offset%6#0"
      ]
    },
    "967": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%4#0",
        "box_prefixed_key%0#0",
        "storage_value%1#0",
        "aggregate%array_head_and_tail%3#0",
        "aggregate%item_offset%6#0",
        "aggregate%end_offset%3#0"
      ]
    },
    "969": {
      "op": "substring3",
      "defined_out": [
        "aggregate%substring3%6#0",
        "box_prefixed_key%0#0",
        "storage_value%1#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "box_prefixed_key%0#0",
        "storage_value%1#0",
        "aggregate%substring3%6#0"
      ]
    },
    "970": {
      "op": "dup",
      "defined_out": [
        "aggregate%substring3%6#0",
        "aggregate%substring3%6#0 (copy)",
        "box_prefixed_key%0#0",
        "storage_value%1#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "box_prefixed_key%0#0",
        "storage_value%1#0",
        "aggregate%substring3%6#0",
        "aggregate%substring3%6#0 (copy)"
      ]
    },
    "971": {
      "op": "intc_3 // 8",
      "stack_out": [
        "tmp%4#0",
        "box_prefixed_key%0#0",
        "storage_value%1#0",
        "aggregate%substring3%6#0",
        "aggregate%substring3%6#0 (copy)",
        "8"
      ]
    },
    "972": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%item_offset%7#0",
        "aggregate%substring3%6#0",
        "box_prefixed_key%0#0",
        "storage_value%1#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "box_prefixed_key%0#0",
        "storage_value%1#0",
        "aggregate%substring3%6#0",
        "aggregate%item_offset%7#0"
      ]
    },
    "973": {
      "op": "swap",
      "stack_out": [
        "tmp%4#0",
        "box_prefixed_key%0#0",
        "storage_value%1#0",
        "aggregate%item_offset%7#0",
        "aggregate%substring3%6#0"
      ]
    },
    "974": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%4#0",
        "box_prefixed_key%0#0",
        "storage_value%1#0",
        "aggregate%item_offset%7#0",
        "aggregate%substring3%6#0",
        "0"
      ]
    },
    "975": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%4#0",
        "box_prefixed_key%0#0",
        "storage_value%1#0",
        "aggregate%substring3%6#0",
        "0",
        "aggregate%item_offset%7#0"
      ]
    },
    "977": {
      "op": "extract3",
      "defined_out": [
        "aggregate%data_up_to_item%3#0",
        "box_prefixed_key%0#0",
        "storage_value%1#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "box_prefixed_key%0#0",
        "storage_value%1#0",
        "aggregate%data_up_to_item%3#0"
      ]
    },
    "978": {
      "op": "uncover 3",
      "stack_out": [
        "box_prefixed_key%0#0",
        "storage_value%1#0",
        "aggregate%data_up_to_item%3#0",
        "tmp%4#0"
      ]
    },
    "980": {
      "op": "concat",
      "defined_out": [
        "aggregate%updated_data%3#0",
        "box_prefixed_key%0#0",
        "storage_value%1#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "storage_value%1#0",
        "aggregate%updated_data%3#0"
      ]
    },
    "981": {
      "op": "dig 1",
      "stack_out": [
        "box_prefixed_key%0#0",
        "storage_value%1#0",
        "aggregate%updated_data%3#0",
        "storage_value%1#0 (copy)"
      ]
    },
    "983": {
      "op": "intc_0 // 0",
      "stack_out": [
        "box_prefixed_key%0#0",
        "storage_value%1#0",
        "aggregate%updated_data%3#0",
        "storage_value%1#0 (copy)",
        "0"
      ]
    },
    "984": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%array_length%7#0",
        "aggregate%updated_data%3#0",
        "box_prefixed_key%0#0",
        "storage_value%1#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "storage_value%1#0",
        "aggregate%updated_data%3#0",
        "aggregate%array_length%7#0"
      ]
    },
    "985": {
      "op": "intc_0 // 0",
      "stack_out": [
        "box_prefixed_key%0#0",
        "storage_value%1#0",
        "aggregate%updated_data%3#0",
        "aggregate%array_length%7#0",
        "0"
      ]
    },
    "986": {
      "op": ">",
      "defined_out": [
        "aggregate%lt%3#0",
        "aggregate%updated_data%3#0",
        "box_prefixed_key%0#0",
        "storage_value%1#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "storage_value%1#0",
        "aggregate%updated_data%3#0",
        "aggregate%lt%3#0"
      ]
    },
    "987": {
      "error": "index access is out of bounds",
      "op": "assert // index access is out of bounds",
      "stack_out": [
        "box_prefixed_key%0#0",
        "storage_value%1#0",
        "aggregate%updated_data%3#0"
      ]
    },
    "988": {
      "op": "intc_0 // 0",
      "stack_out": [
        "box_prefixed_key%0#0",
        "storage_value%1#0",
        "aggregate%updated_data%3#0",
        "0"
      ]
    },
    "989": {
      "callsub": "_puya_lib.arc4.dynamic_array_replace_dynamic_element",
      "op": "callsub dynamic_array_replace_dynamic_element",
      "defined_out": [
        "box_prefixed_key%0#0",
        "updated_array%3#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_array%3#0"
      ]
    },
    "992": {
      "op": "dig 1",
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_array%3#0",
        "box_prefixed_key%0#0 (copy)"
      ]
    },
    "994": {
      "op": "box_del",
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_array%3#0",
        "{box_del}"
      ]
    },
    "995": {
      "op": "pop",
      "stack_out": [
        "box_prefixed_key%0#0",
        "updated_array%3#0"
      ]
    },
    "996": {
      "op": "box_put",
      "stack_out": []
    },
    "997": {
      "retsub": true,
      "op": "retsub"
    },
    "998": {
      "subroutine": "test_cases.state_mutations.contract.Contract.get",
      "params": {},
      "block": "get_block@0",
      "stack_in": [],
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "999": {
      "op": "bytec_3 // \"glob\"",
      "defined_out": [
        "\"glob\"",
        "0"
      ],
      "stack_out": [
        "0",
        "\"glob\""
      ]
    },
    "1000": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "1001": {
      "error": "check self.glob exists",
      "op": "assert // check self.glob exists",
      "defined_out": [
        "a1#0"
      ],
      "stack_out": [
        "a1#0"
      ]
    },
    "1002": {
      "op": "txn Sender",
      "defined_out": [
        "a1#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "a1#0",
        "tmp%0#0"
      ]
    },
    "1004": {
      "op": "intc_0 // 0",
      "stack_out": [
        "a1#0",
        "tmp%0#0",
        "0"
      ]
    },
    "1005": {
      "op": "bytec 4 // \"loc\"",
      "defined_out": [
        "\"loc\"",
        "0",
        "a1#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "a1#0",
        "tmp%0#0",
        "0",
        "\"loc\""
      ]
    },
    "1007": {
      "op": "app_local_get_ex",
      "defined_out": [
        "a1#0",
        "maybe_exists%1#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "a1#0",
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "1008": {
      "error": "check self.loc exists for account",
      "op": "assert // check self.loc exists for account",
      "defined_out": [
        "a1#0",
        "a2#0"
      ],
      "stack_out": [
        "a1#0",
        "a2#0"
      ]
    },
    "1009": {
      "op": "bytec_0 // \"box\"",
      "defined_out": [
        "\"box\"",
        "a1#0",
        "a2#0"
      ],
      "stack_out": [
        "a1#0",
        "a2#0",
        "\"box\""
      ]
    },
    "1010": {
      "op": "box_get",
      "defined_out": [
        "a1#0",
        "a2#0",
        "aggregate%box_get%0#0",
        "aggregate%box_get%1#0"
      ],
      "stack_out": [
        "a1#0",
        "a2#0",
        "aggregate%box_get%0#0",
        "aggregate%box_get%1#0"
      ]
    },
    "1011": {
      "error": "check self.box exists",
      "op": "assert // check self.box exists",
      "defined_out": [
        "a1#0",
        "a2#0",
        "a3#0"
      ],
      "stack_out": [
        "a1#0",
        "a2#0",
        "a3#0"
      ]
    },
    "1012": {
      "op": "txn Sender",
      "defined_out": [
        "a1#0",
        "a2#0",
        "a3#0",
        "materialized_values%0#0"
      ],
      "stack_out": [
        "a1#0",
        "a2#0",
        "a3#0",
        "materialized_values%0#0"
      ]
    },
    "1014": {
      "op": "bytec 5 // \"map\"",
      "defined_out": [
        "\"map\"",
        "a1#0",
        "a2#0",
        "a3#0",
        "materialized_values%0#0"
      ],
      "stack_out": [
        "a1#0",
        "a2#0",
        "a3#0",
        "materialized_values%0#0",
        "\"map\""
      ]
    },
    "1016": {
      "op": "swap",
      "stack_out": [
        "a1#0",
        "a2#0",
        "a3#0",
        "\"map\"",
        "materialized_values%0#0"
      ]
    },
    "1017": {
      "op": "concat",
      "defined_out": [
        "a1#0",
        "a2#0",
        "a3#0",
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "a1#0",
        "a2#0",
        "a3#0",
        "box_prefixed_key%0#0"
      ]
    },
    "1018": {
      "op": "box_get",
      "defined_out": [
        "a1#0",
        "a2#0",
        "a3#0",
        "aggregate%box_get%2#0",
        "aggregate%box_get%3#0"
      ],
      "stack_out": [
        "a1#0",
        "a2#0",
        "a3#0",
        "aggregate%box_get%2#0",
        "aggregate%box_get%3#0"
      ]
    },
    "1019": {
      "error": "check self.map entry exists",
      "op": "assert // check self.map entry exists",
      "defined_out": [
        "a1#0",
        "a2#0",
        "a3#0",
        "a4#0"
      ],
      "stack_out": [
        "a1#0",
        "a2#0",
        "a3#0",
        "a4#0"
      ]
    },
    "1020": {
      "op": "dig 3",
      "defined_out": [
        "a1#0",
        "a1#0 (copy)",
        "a2#0",
        "a3#0",
        "a4#0"
      ],
      "stack_out": [
        "a1#0",
        "a2#0",
        "a3#0",
        "a4#0",
        "a1#0 (copy)"
      ]
    },
    "1022": {
      "op": "uncover 3",
      "stack_out": [
        "a1#0",
        "a3#0",
        "a4#0",
        "a1#0 (copy)",
        "a2#0"
      ]
    },
    "1024": {
      "op": "==",
      "defined_out": [
        "a1#0",
        "a3#0",
        "a4#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "a1#0",
        "a3#0",
        "a4#0",
        "tmp%1#0"
      ]
    },
    "1025": {
      "error": "expected local == global",
      "op": "assert // expected local == global",
      "stack_out": [
        "a1#0",
        "a3#0",
        "a4#0"
      ]
    },
    "1026": {
      "op": "dig 2",
      "stack_out": [
        "a1#0",
        "a3#0",
        "a4#0",
        "a1#0 (copy)"
      ]
    },
    "1028": {
      "op": "uncover 2",
      "stack_out": [
        "a1#0",
        "a4#0",
        "a1#0 (copy)",
        "a3#0"
      ]
    },
    "1030": {
      "op": "==",
      "defined_out": [
        "a1#0",
        "a4#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "a1#0",
        "a4#0",
        "tmp%2#0"
      ]
    },
    "1031": {
      "error": "expected box == global",
      "op": "assert // expected box == global",
      "stack_out": [
        "a1#0",
        "a4#0"
      ]
    },
    "1032": {
      "op": "dig 1",
      "stack_out": [
        "a1#0",
        "a4#0",
        "a1#0 (copy)"
      ]
    },
    "1034": {
      "op": "==",
      "defined_out": [
        "a1#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "a1#0",
        "tmp%3#0"
      ]
    },
    "1035": {
      "error": "expected map == global",
      "op": "assert // expected map == global",
      "stack_out": [
        "a1#0"
      ]
    },
    "1036": {
      "retsub": true,
      "op": "retsub"
    },
    "1037": {
      "subroutine": "algopy.arc4.ARC4Contract.approval_program",
      "params": {},
      "block": "approval_program_block@1",
      "stack_in": [],
      "op": "txn NumAppArgs",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "1039": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1",
        "0"
      ]
    },
    "1040": {
      "op": "!=",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "1041": {
      "op": "bz approval_program_bare_routing@8",
      "stack_out": []
    },
    "1044": {
      "block": "approval_program_abi_routing@2",
      "stack_in": [],
      "op": "txna ApplicationArgs 0",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "1047": {
      "op": "pushbytes 0x526e8bbf // method \"append()void\"",
      "defined_out": [
        "Method(append()void)",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "Method(append()void)"
      ]
    },
    "1053": {
      "op": "pushbytes 0x95fef13d // method \"modify()void\"",
      "defined_out": [
        "Method(append()void)",
        "Method(modify()void)",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "Method(append()void)",
        "Method(modify()void)"
      ]
    },
    "1059": {
      "op": "pushbytes 0x0c29444b // method \"get()(uint64,string)[]\"",
      "defined_out": [
        "Method(append()void)",
        "Method(get()(uint64,string)[])",
        "Method(modify()void)",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "Method(append()void)",
        "Method(modify()void)",
        "Method(get()(uint64,string)[])"
      ]
    },
    "1065": {
      "op": "uncover 3",
      "stack_out": [
        "Method(append()void)",
        "Method(modify()void)",
        "Method(get()(uint64,string)[])",
        "tmp%2#0"
      ]
    },
    "1067": {
      "op": "match approval_program_append_route@3 approval_program_modify_route@4 approval_program_get_route@5",
      "stack_out": []
    },
    "1075": {
      "block": "approval_program_after_if_else@15",
      "stack_in": [],
      "op": "intc_0 // 0",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1076": {
      "block": "approval_program_after_inlined_test_cases.state_mutations.contract.Contract.__puya_arc4_router__@16",
      "stack_in": [
        "tmp%0#0"
      ],
      "retsub": true,
      "op": "retsub",
      "defined_out": [
        "tmp%0#0"
      ]
    },
    "1077": {
      "block": "approval_program_get_route@5",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0"
      ]
    },
    "1079": {
      "op": "intc_0 // NoOp",
      "defined_out": [
        "NoOp",
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "NoOp"
      ]
    },
    "1080": {
      "op": "==",
      "defined_out": [
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%12#0"
      ]
    },
    "1081": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "1082": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%13#0"
      ],
      "stack_out": [
        "tmp%13#0"
      ]
    },
    "1084": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%13#0"
      ],
      "stack_out": [
        "tmp%13#0",
        "0"
      ]
    },
    "1085": {
      "op": "!=",
      "defined_out": [
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%14#0"
      ]
    },
    "1086": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "1087": {
      "callsub": "test_cases.state_mutations.contract.Contract.get",
      "op": "callsub get",
      "defined_out": [
        "tmp%15#0"
      ],
      "stack_out": [
        "tmp%15#0"
      ]
    },
    "1090": {
      "op": "pushbytes 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%15#0"
      ],
      "stack_out": [
        "tmp%15#0",
        "0x151f7c75"
      ]
    },
    "1096": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "tmp%15#0"
      ]
    },
    "1097": {
      "op": "concat",
      "defined_out": [
        "tmp%16#0"
      ],
      "stack_out": [
        "tmp%16#0"
      ]
    },
    "1098": {
      "op": "log",
      "stack_out": []
    },
    "1099": {
      "op": "intc_2 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1100": {
      "op": "b approval_program_after_inlined_test_cases.state_mutations.contract.Contract.__puya_arc4_router__@16"
    },
    "1103": {
      "block": "approval_program_modify_route@4",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0"
      ]
    },
    "1105": {
      "op": "intc_0 // NoOp",
      "defined_out": [
        "NoOp",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0",
        "NoOp"
      ]
    },
    "1106": {
      "op": "==",
      "defined_out": [
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0"
      ]
    },
    "1107": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "1108": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0"
      ]
    },
    "1110": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0",
        "0"
      ]
    },
    "1111": {
      "op": "!=",
      "defined_out": [
        "tmp%10#0"
      ],
      "stack_out": [
        "tmp%10#0"
      ]
    },
    "1112": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "1113": {
      "callsub": "test_cases.state_mutations.contract.Contract.modify",
      "op": "callsub modify"
    },
    "1116": {
      "op": "intc_2 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1117": {
      "op": "b approval_program_after_inlined_test_cases.state_mutations.contract.Contract.__puya_arc4_router__@16"
    },
    "1120": {
      "block": "approval_program_append_route@3",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "1122": {
      "op": "intc_0 // NoOp",
      "defined_out": [
        "NoOp",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "NoOp"
      ]
    },
    "1123": {
      "op": "==",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "1124": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "1125": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "1127": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "0"
      ]
    },
    "1128": {
      "op": "!=",
      "defined_out": [
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0"
      ]
    },
    "1129": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "1130": {
      "callsub": "test_cases.state_mutations.contract.Contract.append",
      "op": "callsub append"
    },
    "1133": {
      "op": "intc_2 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1134": {
      "op": "b approval_program_after_inlined_test_cases.state_mutations.contract.Contract.__puya_arc4_router__@16"
    },
    "1137": {
      "block": "approval_program_bare_routing@8",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%17#0"
      ],
      "stack_out": [
        "tmp%17#0"
      ]
    },
    "1139": {
      "op": "intc_2 // 1",
      "defined_out": [
        "1",
        "tmp%17#0"
      ],
      "stack_out": [
        "tmp%17#0",
        "1"
      ]
    },
    "1140": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "1",
        "tmp%17#0"
      ],
      "stack_out": [
        "tmp%17#0",
        "1",
        "0"
      ]
    },
    "1141": {
      "op": "uncover 2",
      "stack_out": [
        "1",
        "0",
        "tmp%17#0"
      ]
    },
    "1143": {
      "op": "match approval_program_opt_in@9 approval_program___algopy_default_create@10",
      "stack_out": []
    },
    "1149": {
      "block": "approval_program_switch_case_next@14",
      "stack_in": [],
      "op": "b approval_program_after_if_else@15"
    },
    "1152": {
      "block": "approval_program___algopy_default_create@10",
      "stack_in": [],
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%20#0"
      ],
      "stack_out": [
        "tmp%20#0"
      ]
    },
    "1154": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%20#0"
      ],
      "stack_out": [
        "tmp%20#0",
        "0"
      ]
    },
    "1155": {
      "op": "==",
      "defined_out": [
        "tmp%21#0"
      ],
      "stack_out": [
        "tmp%21#0"
      ]
    },
    "1156": {
      "error": "can only call when creating",
      "op": "assert // can only call when creating",
      "stack_out": []
    },
    "1157": {
      "block": "approval_program_after_inlined_test_cases.state_mutations.contract.Contract.__algopy_default_create@12",
      "stack_in": [],
      "op": "intc_2 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1158": {
      "op": "b approval_program_after_inlined_test_cases.state_mutations.contract.Contract.__puya_arc4_router__@16"
    },
    "1161": {
      "block": "approval_program_opt_in@9",
      "stack_in": [],
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%18#0"
      ],
      "stack_out": [
        "tmp%18#0"
      ]
    },
    "1163": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%18#0"
      ],
      "stack_out": [
        "tmp%18#0",
        "0"
      ]
    },
    "1164": {
      "op": "!=",
      "defined_out": [
        "tmp%19#0"
      ],
      "stack_out": [
        "tmp%19#0"
      ]
    },
    "1165": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "1166": {
      "callsub": "test_cases.state_mutations.contract.Contract.opt_in",
      "op": "callsub opt_in"
    },
    "1169": {
      "op": "intc_2 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1170": {
      "op": "b approval_program_after_inlined_test_cases.state_mutations.contract.Contract.__puya_arc4_router__@16"
    }
  }
}