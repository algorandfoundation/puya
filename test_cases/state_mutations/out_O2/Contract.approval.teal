#pragma version 10
#pragma typetrack false

// test_cases.state_mutations.contract.Contract.__algopy_entrypoint_with_init() -> uint64:
main:
    intcblock 0 1 2 8
    bytecblock "box" "glob" "loc" 0x0000 "map" 0x00086d6f646966696564 0x00020000000000000001000a000362617a
    txn ApplicationID
    !
    txn OnCompletion
    intc_1 // 1
    shl
    +
    switch call_NoOp create_NoOp call_OptIn *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED

*NOT_IMPLEMENTED:
    err // The requested action is not implemented in this contract. Are you using the correct OnComplete? Did you set your app ID?

call_OptIn:
    txn NumAppArgs
    !
    assert // this contract does not implement the given ABI method for call OptIn
    bytec_1 // "glob"
    bytec_3 // 0x0000
    app_global_put
    bytec_0 // "box"
    box_del
    pop
    bytec_0 // "box"
    bytec_3 // 0x0000
    box_put
    txn Sender
    bytec_2 // "loc"
    bytec_3 // 0x0000
    app_local_put
    bytec 4 // "map"
    txn Sender
    concat
    dup
    box_del
    pop
    bytec_3 // 0x0000
    box_put
    intc_1 // 1
    return

create_NoOp:
    txn NumAppArgs
    !
    return // on error: this contract does not implement the given ABI method for create NoOp

call_NoOp:
    pushbytess 0x526e8bbf 0x95fef13d 0x0c29444b // method "append()void", method "modify()void", method "get()(uint64,string)[]"
    txna ApplicationArgs 0
    match append_route@5 modify_route@6 get_route@7
    err // this contract does not implement the given ABI method for call NoOp

get_route@7:
    intc_0 // 0
    bytec_1 // "glob"
    app_global_get_ex
    assert // check self.glob exists
    txn Sender
    intc_0 // 0
    bytec_2 // "loc"
    app_local_get_ex
    assert // check self.loc exists for account
    bytec_0 // "box"
    box_get
    assert // check self.box exists
    bytec 4 // "map"
    txn Sender
    concat
    box_get
    assert // check self.map entry exists
    dig 3
    uncover 3
    ==
    assert // expected local == global
    dig 2
    uncover 2
    ==
    assert // expected box == global
    dig 1
    ==
    assert // expected map == global
    pushbytes 0x151f7c75
    swap
    concat
    log
    intc_1 // 1
    return

modify_route@6:
    intc_0 // 0
    bytec_1 // "glob"
    app_global_get_ex
    assert // check self.glob exists
    dup
    extract 2 0
    dig 1
    intc_0 // 0
    extract_uint16
    dig 1
    intc_0 // 0
    extract_uint16
    dig 1
    intc_1 // 1
    - // on error: index access is out of bounds
    dig 3
    len
    dig 4
    intc_2 // 2
    extract_uint16
    uncover 2
    select
    uncover 3
    cover 2
    substring3
    dup
    intc_3 // 8
    extract_uint16
    intc_0 // 0
    swap
    extract3
    bytec 5 // 0x00086d6f646966696564
    concat
    swap
    assert // index access is out of bounds
    intc_0 // 0
    callsub dynamic_array_replace_dynamic_element
    bytec_1 // "glob"
    swap
    app_global_put
    txn Sender
    dup
    intc_0 // 0
    bytec_2 // "loc"
    app_local_get_ex
    assert // check self.loc exists for account
    dup
    extract 2 0
    dig 1
    intc_0 // 0
    extract_uint16
    dig 1
    intc_0 // 0
    extract_uint16
    dig 1
    intc_1 // 1
    - // on error: index access is out of bounds
    dig 3
    len
    dig 4
    intc_2 // 2
    extract_uint16
    uncover 2
    select
    uncover 3
    cover 2
    substring3
    dup
    intc_3 // 8
    extract_uint16
    intc_0 // 0
    swap
    extract3
    bytec 5 // 0x00086d6f646966696564
    concat
    swap
    assert // index access is out of bounds
    intc_0 // 0
    callsub dynamic_array_replace_dynamic_element
    bytec_2 // "loc"
    swap
    app_local_put
    bytec_0 // "box"
    box_get
    assert // check self.box exists
    dup
    extract 2 0
    dig 1
    intc_0 // 0
    extract_uint16
    dig 1
    intc_0 // 0
    extract_uint16
    dig 1
    intc_1 // 1
    - // on error: index access is out of bounds
    dig 3
    len
    dig 4
    intc_2 // 2
    extract_uint16
    uncover 2
    select
    uncover 3
    cover 2
    substring3
    dup
    intc_3 // 8
    extract_uint16
    intc_0 // 0
    swap
    extract3
    bytec 5 // 0x00086d6f646966696564
    concat
    swap
    assert // index access is out of bounds
    intc_0 // 0
    callsub dynamic_array_replace_dynamic_element
    bytec_0 // "box"
    box_del
    pop
    bytec_0 // "box"
    swap
    box_put
    bytec 4 // "map"
    txn Sender
    concat
    dup
    box_get
    assert // check self.map entry exists
    dup
    extract 2 0
    dig 1
    intc_0 // 0
    extract_uint16
    dig 1
    intc_0 // 0
    extract_uint16
    dig 1
    intc_1 // 1
    - // on error: index access is out of bounds
    dig 3
    len
    dig 4
    intc_2 // 2
    extract_uint16
    uncover 2
    select
    uncover 3
    cover 2
    substring3
    dup
    intc_3 // 8
    extract_uint16
    intc_0 // 0
    swap
    extract3
    bytec 5 // 0x00086d6f646966696564
    concat
    swap
    assert // index access is out of bounds
    intc_0 // 0
    callsub dynamic_array_replace_dynamic_element
    dig 1
    box_del
    pop
    box_put
    intc_1 // 1
    return

append_route@5:
    intc_0 // 0
    bytec_1 // "glob"
    app_global_get_ex
    assert // check self.glob exists
    dup
    intc_0 // 0
    extract_uint16
    swap
    extract 2 0
    intc_1 // 1
    bytec 6 // 0x00020000000000000001000a000362617a
    callsub dynamic_array_concat_dynamic_element
    bytec_1 // "glob"
    swap
    app_global_put
    txn Sender
    dup
    intc_0 // 0
    bytec_2 // "loc"
    app_local_get_ex
    assert // check self.loc exists for account
    dup
    intc_0 // 0
    extract_uint16
    swap
    extract 2 0
    intc_1 // 1
    bytec 6 // 0x00020000000000000001000a000362617a
    callsub dynamic_array_concat_dynamic_element
    bytec_2 // "loc"
    swap
    app_local_put
    bytec_0 // "box"
    box_get
    assert // check self.box exists
    dup
    intc_0 // 0
    extract_uint16
    swap
    extract 2 0
    intc_1 // 1
    bytec 6 // 0x00020000000000000001000a000362617a
    callsub dynamic_array_concat_dynamic_element
    bytec_0 // "box"
    box_del
    pop
    bytec_0 // "box"
    swap
    box_put
    bytec 4 // "map"
    txn Sender
    concat
    dup
    box_get
    assert // check self.map entry exists
    dup
    intc_0 // 0
    extract_uint16
    swap
    extract 2 0
    intc_1 // 1
    bytec 6 // 0x00020000000000000001000a000362617a
    callsub dynamic_array_concat_dynamic_element
    dig 1
    box_del
    pop
    box_put
    intc_1 // 1
    return


// _puya_lib.arc4.dynamic_array_concat_dynamic_element(array_items_count: uint64, array_head_and_tail: bytes, new_items_count: uint64, new_head_and_tail: bytes) -> bytes:
dynamic_array_concat_dynamic_element:
    proto 4 1
    pushbytes ""
    dup
    frame_dig -2
    intc_2 // 2
    *
    frame_dig -4
    intc_2 // 2
    *
    intc_0 // 0

dynamic_array_concat_dynamic_element_for_header@1:
    frame_dig 4
    frame_dig 3
    <
    bz dynamic_array_concat_dynamic_element_after_for@4
    frame_dig -3
    frame_dig 4
    dup
    cover 2
    extract_uint16
    frame_dig 2
    +
    itob
    extract 6 2
    frame_dig 1
    swap
    concat
    frame_bury 1
    intc_2 // 2
    +
    frame_bury 4
    b dynamic_array_concat_dynamic_element_for_header@1

dynamic_array_concat_dynamic_element_after_for@4:
    frame_dig -3
    len
    frame_bury 0
    intc_0 // 0
    frame_bury 4

dynamic_array_concat_dynamic_element_for_header@5:
    frame_dig 4
    frame_dig 2
    <
    bz dynamic_array_concat_dynamic_element_after_for@8
    frame_dig -1
    frame_dig 4
    dup
    cover 2
    extract_uint16
    frame_dig 0
    +
    itob
    extract 6 2
    frame_dig 1
    swap
    concat
    frame_bury 1
    intc_2 // 2
    +
    frame_bury 4
    b dynamic_array_concat_dynamic_element_for_header@5

dynamic_array_concat_dynamic_element_after_for@8:
    frame_dig -4
    frame_dig -2
    +
    itob
    extract 6 2
    frame_dig 1
    concat
    frame_dig -3
    frame_dig 3
    frame_dig 0
    substring3
    concat
    frame_dig -1
    len
    frame_dig -1
    frame_dig 2
    uncover 2
    substring3
    concat
    frame_bury 0
    retsub


// _puya_lib.arc4.dynamic_array_replace_dynamic_element(source: bytes, new_item: bytes, index: uint64) -> bytes:
dynamic_array_replace_dynamic_element:
    proto 3 1
    frame_dig -3
    substring 0 2
    dup
    btoi
    frame_dig -3
    extract 2 0
    frame_dig -1
    intc_2 // 2
    *
    dig 1
    swap
    extract_uint16
    frame_dig -1
    intc_1 // 1
    +
    intc_2 // 2
    *
    dup
    cover 4
    dig 2
    swap
    extract_uint16
    dig 2
    len
    dig 4
    frame_dig -1
    -
    intc_1 // 1
    -
    dig 1
    uncover 3
    uncover 2
    select
    dup
    dig 3
    -
    cover 5
    frame_dig -2
    len
    cover 5
    dig 3
    intc_0 // 0
    uncover 4
    substring3
    frame_dig -2
    concat
    cover 3
    swap
    substring3
    concat
    swap
    intc_2 // 2
    *

dynamic_array_replace_dynamic_element_for_header@2:
    frame_dig 1
    frame_dig 5
    <
    bz dynamic_array_replace_dynamic_element_after_for@5
    frame_dig 4
    dup
    frame_dig 1
    dup
    cover 3
    extract_uint16
    frame_dig 3
    +
    frame_dig 2
    -
    itob
    extract 6 2
    dig 2
    swap
    replace3
    frame_bury 4
    intc_2 // 2
    +
    frame_bury 1
    b dynamic_array_replace_dynamic_element_for_header@2

dynamic_array_replace_dynamic_element_after_for@5:
    frame_dig 0
    frame_dig 4
    concat
    frame_bury 0
    retsub
