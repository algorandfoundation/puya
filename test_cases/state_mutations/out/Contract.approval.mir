// Op                                                                                                              // Op Description                                              Stack (out)                                                                                                                                                                                                                                       Source code                                                          Source line

#pragma version 10

// test_cases.state_mutations.contract.Contract.approval_program() -> uint64:
main_block@0:
    callsub __puya_arc4_router__                                                                                   //                                                             {__puya_arc4_router__}                                                                                                                                                                                                                                                                                                 /algopy/arc4.py:-1
                                                                                                                   // virtual: store tmp%0#0 to l-stack (no copy)                 tmp%0#0                                                                                                                                                                                                                                                                                                                /algopy/arc4.py:-1
                                                                                                                   // virtual: load tmp%0#0 from l-stack (no copy)                tmp%0#0                                                                                                                                                                                                                                                                                                                /algopy/arc4.py:-1
    return                                                                                                         //                                                                                                                                                                                                                                                                                                                                                                                    /algopy/arc4.py:-1


// test_cases.state_mutations.contract.Contract.__puya_arc4_router__() -> uint64:
__puya_arc4_router__:
    proto 0 1                                                                                                      //                                                                                                                                                                                                                                                                                                               class Contract(ARC4Contract):                                        state_mutations/contract.py:22

__puya_arc4_router___block@0:
    txn NumAppArgs                                                                                                 //                                                             {txn}                                                                                                                                                                                                                                             class Contract(ARC4Contract):                                        state_mutations/contract.py:22
                                                                                                                   // virtual: store tmp%0#0 to l-stack (no copy)                 tmp%0#0                                                                                                                                                                                                                                           class Contract(ARC4Contract):                                        state_mutations/contract.py:22
                                                                                                                   // virtual: load tmp%0#0 from l-stack (no copy)                tmp%0#0                                                                                                                                                                                                                                           class Contract(ARC4Contract):                                        state_mutations/contract.py:22
    bz __puya_arc4_router___bare_routing@7                                                                         //                                                                                                                                                                                                                                                                                                               class Contract(ARC4Contract):                                        state_mutations/contract.py:22
    // Implicit fall through to __puya_arc4_router___abi_routing@1                                                 //                                                                                                                                                                                                                                                                                                               class Contract(ARC4Contract):                                        state_mutations/contract.py:22

__puya_arc4_router___abi_routing@1:
    txna ApplicationArgs 0                                                                                         //                                                             {txna}                                                                                                                                                                                                                                            class Contract(ARC4Contract):                                        state_mutations/contract.py:22
                                                                                                                   // virtual: store tmp%2#0 to l-stack (no copy)                 tmp%2#0                                                                                                                                                                                                                                           class Contract(ARC4Contract):                                        state_mutations/contract.py:22
    method "append()void"                                                                                          //                                                             tmp%2#0,method<"append()void">                                                                                                                                                                                                                    class Contract(ARC4Contract):                                        state_mutations/contract.py:22
    method "modify()void"                                                                                          //                                                             tmp%2#0,method<"append()void">,method<"modify()void">                                                                                                                                                                                             class Contract(ARC4Contract):                                        state_mutations/contract.py:22
    method "get()(uint64,string)[]"                                                                                //                                                             tmp%2#0,method<"append()void">,method<"modify()void">,method<"get()(uint64,string)[]">                                                                                                                                                            class Contract(ARC4Contract):                                        state_mutations/contract.py:22
    uncover 3                                                                                                      // load tmp%2#0 from l-stack (no copy)                         method<"append()void">,method<"modify()void">,method<"get()(uint64,string)[]">,tmp%2#0                                                                                                                                                            class Contract(ARC4Contract):                                        state_mutations/contract.py:22
    match __puya_arc4_router___append_route@2 __puya_arc4_router___modify_route@3 __puya_arc4_router___get_route@4 //                                                                                                                                                                                                                                                                                                               class Contract(ARC4Contract):                                        state_mutations/contract.py:22
    int 0                                                                                                          //                                                             0                                                                                                                                                                                                                                                 class Contract(ARC4Contract):                                        state_mutations/contract.py:22
    retsub                                                                                                         //                                                             0                                                                                                                                                                                                                                                 class Contract(ARC4Contract):                                        state_mutations/contract.py:22

__puya_arc4_router___append_route@2:
    txn OnCompletion                                                                                               //                                                             {txn}                                                                                                                                                                                                                                             arc4.abimethod                                                       state_mutations/contract.py:36
                                                                                                                   // virtual: store tmp%3#0 to l-stack (no copy)                 tmp%3#0                                                                                                                                                                                                                                           arc4.abimethod                                                       state_mutations/contract.py:36
                                                                                                                   // virtual: load tmp%3#0 from l-stack (no copy)                tmp%3#0                                                                                                                                                                                                                                           arc4.abimethod                                                       state_mutations/contract.py:36
    !                                                                                                              //                                                             {!}                                                                                                                                                                                                                                               arc4.abimethod                                                       state_mutations/contract.py:36
                                                                                                                   // virtual: store tmp%4#0 to l-stack (no copy)                 tmp%4#0                                                                                                                                                                                                                                           arc4.abimethod                                                       state_mutations/contract.py:36
                                                                                                                   // virtual: load tmp%4#0 from l-stack (no copy)                tmp%4#0                                                                                                                                                                                                                                           arc4.abimethod                                                       state_mutations/contract.py:36
    assert // OnCompletion is NoOp                                                                                 //                                                                                                                                                                                                                                                                                                               arc4.abimethod                                                       state_mutations/contract.py:36
    txn ApplicationID                                                                                              //                                                             {txn}                                                                                                                                                                                                                                             arc4.abimethod                                                       state_mutations/contract.py:36
                                                                                                                   // virtual: store tmp%5#0 to l-stack (no copy)                 tmp%5#0                                                                                                                                                                                                                                           arc4.abimethod                                                       state_mutations/contract.py:36
                                                                                                                   // virtual: load tmp%5#0 from l-stack (no copy)                tmp%5#0                                                                                                                                                                                                                                           arc4.abimethod                                                       state_mutations/contract.py:36
    assert // is not creating                                                                                      //                                                                                                                                                                                                                                                                                                               arc4.abimethod                                                       state_mutations/contract.py:36
    callsub append                                                                                                 //                                                                                                                                                                                                                                                                                                               arc4.abimethod                                                       state_mutations/contract.py:36
    int 1                                                                                                          //                                                             1                                                                                                                                                                                                                                                 arc4.abimethod                                                       state_mutations/contract.py:36
    retsub                                                                                                         //                                                             1                                                                                                                                                                                                                                                 arc4.abimethod                                                       state_mutations/contract.py:36

__puya_arc4_router___modify_route@3:
    txn OnCompletion                                                                                               //                                                             {txn}                                                                                                                                                                                                                                             arc4.abimethod                                                       state_mutations/contract.py:44
                                                                                                                   // virtual: store tmp%7#0 to l-stack (no copy)                 tmp%7#0                                                                                                                                                                                                                                           arc4.abimethod                                                       state_mutations/contract.py:44
                                                                                                                   // virtual: load tmp%7#0 from l-stack (no copy)                tmp%7#0                                                                                                                                                                                                                                           arc4.abimethod                                                       state_mutations/contract.py:44
    !                                                                                                              //                                                             {!}                                                                                                                                                                                                                                               arc4.abimethod                                                       state_mutations/contract.py:44
                                                                                                                   // virtual: store tmp%8#0 to l-stack (no copy)                 tmp%8#0                                                                                                                                                                                                                                           arc4.abimethod                                                       state_mutations/contract.py:44
                                                                                                                   // virtual: load tmp%8#0 from l-stack (no copy)                tmp%8#0                                                                                                                                                                                                                                           arc4.abimethod                                                       state_mutations/contract.py:44
    assert // OnCompletion is NoOp                                                                                 //                                                                                                                                                                                                                                                                                                               arc4.abimethod                                                       state_mutations/contract.py:44
    txn ApplicationID                                                                                              //                                                             {txn}                                                                                                                                                                                                                                             arc4.abimethod                                                       state_mutations/contract.py:44
                                                                                                                   // virtual: store tmp%9#0 to l-stack (no copy)                 tmp%9#0                                                                                                                                                                                                                                           arc4.abimethod                                                       state_mutations/contract.py:44
                                                                                                                   // virtual: load tmp%9#0 from l-stack (no copy)                tmp%9#0                                                                                                                                                                                                                                           arc4.abimethod                                                       state_mutations/contract.py:44
    assert // is not creating                                                                                      //                                                                                                                                                                                                                                                                                                               arc4.abimethod                                                       state_mutations/contract.py:44
    callsub modify                                                                                                 //                                                                                                                                                                                                                                                                                                               arc4.abimethod                                                       state_mutations/contract.py:44
    int 1                                                                                                          //                                                             1                                                                                                                                                                                                                                                 arc4.abimethod                                                       state_mutations/contract.py:44
    retsub                                                                                                         //                                                             1                                                                                                                                                                                                                                                 arc4.abimethod                                                       state_mutations/contract.py:44

__puya_arc4_router___get_route@4:
    txn OnCompletion                                                                                               //                                                             {txn}                                                                                                                                                                                                                                             arc4.abimethod                                                       state_mutations/contract.py:51
                                                                                                                   // virtual: store tmp%11#0 to l-stack (no copy)                tmp%11#0                                                                                                                                                                                                                                          arc4.abimethod                                                       state_mutations/contract.py:51
                                                                                                                   // virtual: load tmp%11#0 from l-stack (no copy)               tmp%11#0                                                                                                                                                                                                                                          arc4.abimethod                                                       state_mutations/contract.py:51
    !                                                                                                              //                                                             {!}                                                                                                                                                                                                                                               arc4.abimethod                                                       state_mutations/contract.py:51
                                                                                                                   // virtual: store tmp%12#0 to l-stack (no copy)                tmp%12#0                                                                                                                                                                                                                                          arc4.abimethod                                                       state_mutations/contract.py:51
                                                                                                                   // virtual: load tmp%12#0 from l-stack (no copy)               tmp%12#0                                                                                                                                                                                                                                          arc4.abimethod                                                       state_mutations/contract.py:51
    assert // OnCompletion is NoOp                                                                                 //                                                                                                                                                                                                                                                                                                               arc4.abimethod                                                       state_mutations/contract.py:51
    txn ApplicationID                                                                                              //                                                             {txn}                                                                                                                                                                                                                                             arc4.abimethod                                                       state_mutations/contract.py:51
                                                                                                                   // virtual: store tmp%13#0 to l-stack (no copy)                tmp%13#0                                                                                                                                                                                                                                          arc4.abimethod                                                       state_mutations/contract.py:51
                                                                                                                   // virtual: load tmp%13#0 from l-stack (no copy)               tmp%13#0                                                                                                                                                                                                                                          arc4.abimethod                                                       state_mutations/contract.py:51
    assert // is not creating                                                                                      //                                                                                                                                                                                                                                                                                                               arc4.abimethod                                                       state_mutations/contract.py:51
    callsub get                                                                                                    //                                                             {get}                                                                                                                                                                                                                                             arc4.abimethod                                                       state_mutations/contract.py:51
                                                                                                                   // virtual: store tmp%15#0 to l-stack (no copy)                tmp%15#0                                                                                                                                                                                                                                          arc4.abimethod                                                       state_mutations/contract.py:51
    byte 0x151f7c75                                                                                                //                                                             tmp%15#0,0x151f7c75                                                                                                                                                                                                                               arc4.abimethod                                                       state_mutations/contract.py:51
    uncover 1                                                                                                      // load tmp%15#0 from l-stack (no copy)                        0x151f7c75,tmp%15#0                                                                                                                                                                                                                               arc4.abimethod                                                       state_mutations/contract.py:51
    concat                                                                                                         //                                                             {concat}                                                                                                                                                                                                                                          arc4.abimethod                                                       state_mutations/contract.py:51
                                                                                                                   // virtual: store tmp%16#0 to l-stack (no copy)                tmp%16#0                                                                                                                                                                                                                                          arc4.abimethod                                                       state_mutations/contract.py:51
                                                                                                                   // virtual: load tmp%16#0 from l-stack (no copy)               tmp%16#0                                                                                                                                                                                                                                          arc4.abimethod                                                       state_mutations/contract.py:51
    log                                                                                                            //                                                                                                                                                                                                                                                                                                               arc4.abimethod                                                       state_mutations/contract.py:51
    int 1                                                                                                          //                                                             1                                                                                                                                                                                                                                                 arc4.abimethod                                                       state_mutations/contract.py:51
    retsub                                                                                                         //                                                             1                                                                                                                                                                                                                                                 arc4.abimethod                                                       state_mutations/contract.py:51

__puya_arc4_router___bare_routing@7:
    txn OnCompletion                                                                                               //                                                             {txn}                                                                                                                                                                                                                                             class Contract(ARC4Contract):                                        state_mutations/contract.py:22
                                                                                                                   // virtual: store tmp%17#0 to l-stack (no copy)                tmp%17#0                                                                                                                                                                                                                                          class Contract(ARC4Contract):                                        state_mutations/contract.py:22
                                                                                                                   // virtual: load tmp%17#0 from l-stack (no copy)               tmp%17#0                                                                                                                                                                                                                                          class Contract(ARC4Contract):                                        state_mutations/contract.py:22
    switch __puya_arc4_router_____algopy_default_create@8 __puya_arc4_router___opt_in@9                            //                                                                                                                                                                                                                                                                                                               class Contract(ARC4Contract):                                        state_mutations/contract.py:22
    int 0                                                                                                          //                                                             0                                                                                                                                                                                                                                                 class Contract(ARC4Contract):                                        state_mutations/contract.py:22
    retsub                                                                                                         //                                                             0                                                                                                                                                                                                                                                 class Contract(ARC4Contract):                                        state_mutations/contract.py:22

__puya_arc4_router_____algopy_default_create@8:
    txn ApplicationID                                                                                              //                                                             {txn}                                                                                                                                                                                                                                             class Contract(ARC4Contract):                                        state_mutations/contract.py:22
                                                                                                                   // virtual: store tmp%18#0 to l-stack (no copy)                tmp%18#0                                                                                                                                                                                                                                          class Contract(ARC4Contract):                                        state_mutations/contract.py:22
                                                                                                                   // virtual: load tmp%18#0 from l-stack (no copy)               tmp%18#0                                                                                                                                                                                                                                          class Contract(ARC4Contract):                                        state_mutations/contract.py:22
    !                                                                                                              //                                                             {!}                                                                                                                                                                                                                                               class Contract(ARC4Contract):                                        state_mutations/contract.py:22
                                                                                                                   // virtual: store tmp%19#0 to l-stack (no copy)                tmp%19#0                                                                                                                                                                                                                                          class Contract(ARC4Contract):                                        state_mutations/contract.py:22
                                                                                                                   // virtual: load tmp%19#0 from l-stack (no copy)               tmp%19#0                                                                                                                                                                                                                                          class Contract(ARC4Contract):                                        state_mutations/contract.py:22
    assert // is creating                                                                                          //                                                                                                                                                                                                                                                                                                               class Contract(ARC4Contract):                                        state_mutations/contract.py:22
    int 1                                                                                                          //                                                             1                                                                                                                                                                                                                                                 class Contract(ARC4Contract):                                        state_mutations/contract.py:22
    retsub                                                                                                         //                                                             1                                                                                                                                                                                                                                                 class Contract(ARC4Contract):                                        state_mutations/contract.py:22

__puya_arc4_router___opt_in@9:
    txn ApplicationID                                                                                              //                                                             {txn}                                                                                                                                                                                                                                             arc4.baremethod(allow_actions=["OptIn"])                             state_mutations/contract.py:29
                                                                                                                   // virtual: store tmp%20#0 to l-stack (no copy)                tmp%20#0                                                                                                                                                                                                                                          arc4.baremethod(allow_actions=["OptIn"])                             state_mutations/contract.py:29
                                                                                                                   // virtual: load tmp%20#0 from l-stack (no copy)               tmp%20#0                                                                                                                                                                                                                                          arc4.baremethod(allow_actions=["OptIn"])                             state_mutations/contract.py:29
    assert // is not creating                                                                                      //                                                                                                                                                                                                                                                                                                               arc4.baremethod(allow_actions=["OptIn"])                             state_mutations/contract.py:29
    callsub opt_in                                                                                                 //                                                                                                                                                                                                                                                                                                               @arc4.baremethod(allow_actions=["OptIn"])\ndef opt_in(self) -> None: state_mutations/contract.py:29-30
    int 1                                                                                                          //                                                             1                                                                                                                                                                                                                                                 @arc4.baremethod(allow_actions=["OptIn"])\ndef opt_in(self) -> None: state_mutations/contract.py:29-30
    retsub                                                                                                         //                                                             1                                                                                                                                                                                                                                                 @arc4.baremethod(allow_actions=["OptIn"])\ndef opt_in(self) -> None: state_mutations/contract.py:29-30


// test_cases.state_mutations.contract.Contract.append() -> void:
append:
    proto 0 0                                                                                                      //                                                                                                                                                                                                                                                                                                               @arc4.abimethod\ndef append(self) -> None:                           state_mutations/contract.py:36-37

append_block@0:
    callsub get_struct                                                                                             //                                                             {get_struct}                                                                                                                                                                                                                                      get_struct()                                                         state_mutations/contract.py:38
                                                                                                                   // virtual: store struct#0 to l-stack (no copy)                struct#0                                                                                                                                                                                                                                          struct = get_struct()                                                state_mutations/contract.py:38
    int 0                                                                                                          //                                                             struct#0,0                                                                                                                                                                                                                                        self.glob.value                                                      state_mutations/contract.py:39
    byte "glob"                                                                                                    //                                                             struct#0,0,"glob"                                                                                                                                                                                                                                 self.glob                                                            state_mutations/contract.py:39
    app_global_get_ex                                                                                              //                                                             struct#0,{app_global_get_ex}.0,{app_global_get_ex}.1                                                                                                                                                                                              self.glob.value                                                      state_mutations/contract.py:39
                                                                                                                   // virtual: store maybe_exists%0#0 to l-stack (no copy)        struct#0,maybe_exists%0#0,{app_global_get_ex}.0                                                                                                                                                                                                   self.glob.value                                                      state_mutations/contract.py:39
                                                                                                                   // virtual: store maybe_value%0#0 to l-stack (no copy)         struct#0,maybe_value%0#0,maybe_exists%0#0                                                                                                                                                                                                         self.glob.value                                                      state_mutations/contract.py:39
                                                                                                                   // virtual: load maybe_exists%0#0 from l-stack (no copy)       struct#0,maybe_value%0#0,maybe_exists%0#0                                                                                                                                                                                                         self.glob.value                                                      state_mutations/contract.py:39
    assert // check self.glob exists                                                                               //                                                             struct#0,maybe_value%0#0                                                                                                                                                                                                                          self.glob.value                                                      state_mutations/contract.py:39
    byte 0x0002                                                                                                    //                                                             struct#0,maybe_value%0#0,0x0002                                                                                                                                                                                                                   self.glob.value.append(struct.copy())                                state_mutations/contract.py:39
    uncover 2                                                                                                      // load struct#0 from l-stack (no copy)                        maybe_value%0#0,0x0002,struct#0                                                                                                                                                                                                                   self.glob.value.append(struct.copy())                                state_mutations/contract.py:39
    concat                                                                                                         //                                                             maybe_value%0#0,{concat}                                                                                                                                                                                                                          self.glob.value.append(struct.copy())                                state_mutations/contract.py:39
    cover 1                                                                                                        // store result%1#0 to l-stack (no copy)                       result%1#0,maybe_value%0#0                                                                                                                                                                                                                        self.glob.value.append(struct.copy())                                state_mutations/contract.py:39
    dup                                                                                                            // load maybe_value%0#0 from l-stack (copy)                    result%1#0,maybe_value%0#0,maybe_value%0#0                                                                                                                                                                                                        self.glob.value.append(struct.copy())                                state_mutations/contract.py:39
    int 0                                                                                                          //                                                             result%1#0,maybe_value%0#0,maybe_value%0#0,0                                                                                                                                                                                                      self.glob.value.append(struct.copy())                                state_mutations/contract.py:39
    extract_uint16                                                                                                 //                                                             result%1#0,maybe_value%0#0,{extract_uint16}                                                                                                                                                                                                       self.glob.value.append(struct.copy())                                state_mutations/contract.py:39
    cover 1                                                                                                        // store l_count%0#0 to l-stack (no copy)                      result%1#0,l_count%0#0,maybe_value%0#0                                                                                                                                                                                                            self.glob.value.append(struct.copy())                                state_mutations/contract.py:39
                                                                                                                   // virtual: load maybe_value%0#0 from l-stack (no copy)        result%1#0,l_count%0#0,maybe_value%0#0                                                                                                                                                                                                            self.glob.value.append(struct.copy())                                state_mutations/contract.py:39
    extract 2 0                                                                                                    //                                                             result%1#0,l_count%0#0,{extract}                                                                                                                                                                                                                  self.glob.value.append(struct.copy())                                state_mutations/contract.py:39
                                                                                                                   // virtual: store l_head_and_tail%0#0 to l-stack (no copy)     result%1#0,l_count%0#0,l_head_and_tail%0#0                                                                                                                                                                                                        self.glob.value.append(struct.copy())                                state_mutations/contract.py:39
                                                                                                                   // virtual: load l_count%0#0 from l-stack (no copy)            result%1#0,l_head_and_tail%0#0,l_count%0#0                                                                                                                                                                                                        self.glob.value.append(struct.copy())                                state_mutations/contract.py:39
                                                                                                                   // virtual: load l_head_and_tail%0#0 from l-stack (no copy)    result%1#0,l_count%0#0,l_head_and_tail%0#0                                                                                                                                                                                                        self.glob.value.append(struct.copy())                                state_mutations/contract.py:39
    int 1                                                                                                          //                                                             result%1#0,l_count%0#0,l_head_and_tail%0#0,1                                                                                                                                                                                                      self.glob.value.append(struct.copy())                                state_mutations/contract.py:39
    dig 3                                                                                                          // load result%1#0 from l-stack (copy)                         result%1#0,l_count%0#0,l_head_and_tail%0#0,1,result%1#0                                                                                                                                                                                           self.glob.value.append(struct.copy())                                state_mutations/contract.py:39
    callsub dynamic_array_concat_dynamic_element                                                                   //                                                             result%1#0,{dynamic_array_concat_dynamic_element}                                                                                                                                                                                                 self.glob.value.append(struct.copy())                                state_mutations/contract.py:39
                                                                                                                   // virtual: store concat_result%0#0 to l-stack (no copy)       result%1#0,concat_result%0#0                                                                                                                                                                                                                      self.glob.value.append(struct.copy())                                state_mutations/contract.py:39
    byte "glob"                                                                                                    //                                                             result%1#0,concat_result%0#0,"glob"                                                                                                                                                                                                               self.glob                                                            state_mutations/contract.py:39
    uncover 1                                                                                                      // load concat_result%0#0 from l-stack (no copy)               result%1#0,"glob",concat_result%0#0                                                                                                                                                                                                               self.glob.value.append(struct.copy())                                state_mutations/contract.py:39
    app_global_put                                                                                                 //                                                             result%1#0                                                                                                                                                                                                                                        self.glob.value.append(struct.copy())                                state_mutations/contract.py:39
    txn Sender                                                                                                     //                                                             result%1#0,{txn}                                                                                                                                                                                                                                  Txn.sender                                                           state_mutations/contract.py:40
                                                                                                                   // virtual: store tmp%0#0 to l-stack (no copy)                 result%1#0,tmp%0#0                                                                                                                                                                                                                                Txn.sender                                                           state_mutations/contract.py:40
                                                                                                                   // virtual: load tmp%0#0 from l-stack (no copy)                result%1#0,tmp%0#0                                                                                                                                                                                                                                self.loc[Txn.sender]                                                 state_mutations/contract.py:40
    int 0                                                                                                          //                                                             result%1#0,tmp%0#0,0                                                                                                                                                                                                                              self.loc[Txn.sender]                                                 state_mutations/contract.py:40
    byte "loc"                                                                                                     //                                                             result%1#0,tmp%0#0,0,"loc"                                                                                                                                                                                                                        self.loc                                                             state_mutations/contract.py:40
    app_local_get_ex                                                                                               //                                                             result%1#0,{app_local_get_ex}.0,{app_local_get_ex}.1                                                                                                                                                                                              self.loc[Txn.sender]                                                 state_mutations/contract.py:40
                                                                                                                   // virtual: store maybe_exists%1#0 to l-stack (no copy)        result%1#0,maybe_exists%1#0,{app_local_get_ex}.0                                                                                                                                                                                                  self.loc[Txn.sender]                                                 state_mutations/contract.py:40
                                                                                                                   // virtual: store maybe_value%1#0 to l-stack (no copy)         result%1#0,maybe_value%1#0,maybe_exists%1#0                                                                                                                                                                                                       self.loc[Txn.sender]                                                 state_mutations/contract.py:40
                                                                                                                   // virtual: load maybe_exists%1#0 from l-stack (no copy)       result%1#0,maybe_value%1#0,maybe_exists%1#0                                                                                                                                                                                                       self.loc[Txn.sender]                                                 state_mutations/contract.py:40
    assert // check self.loc exists for account                                                                    //                                                             result%1#0,maybe_value%1#0                                                                                                                                                                                                                        self.loc[Txn.sender]                                                 state_mutations/contract.py:40
    dup                                                                                                            // load maybe_value%1#0 from l-stack (copy)                    result%1#0,maybe_value%1#0,maybe_value%1#0                                                                                                                                                                                                        self.loc[Txn.sender].append(struct.copy())                           state_mutations/contract.py:40
    int 0                                                                                                          //                                                             result%1#0,maybe_value%1#0,maybe_value%1#0,0                                                                                                                                                                                                      self.loc[Txn.sender].append(struct.copy())                           state_mutations/contract.py:40
    extract_uint16                                                                                                 //                                                             result%1#0,maybe_value%1#0,{extract_uint16}                                                                                                                                                                                                       self.loc[Txn.sender].append(struct.copy())                           state_mutations/contract.py:40
    cover 1                                                                                                        // store l_count%1#0 to l-stack (no copy)                      result%1#0,l_count%1#0,maybe_value%1#0                                                                                                                                                                                                            self.loc[Txn.sender].append(struct.copy())                           state_mutations/contract.py:40
                                                                                                                   // virtual: load maybe_value%1#0 from l-stack (no copy)        result%1#0,l_count%1#0,maybe_value%1#0                                                                                                                                                                                                            self.loc[Txn.sender].append(struct.copy())                           state_mutations/contract.py:40
    extract 2 0                                                                                                    //                                                             result%1#0,l_count%1#0,{extract}                                                                                                                                                                                                                  self.loc[Txn.sender].append(struct.copy())                           state_mutations/contract.py:40
                                                                                                                   // virtual: store l_head_and_tail%1#0 to l-stack (no copy)     result%1#0,l_count%1#0,l_head_and_tail%1#0                                                                                                                                                                                                        self.loc[Txn.sender].append(struct.copy())                           state_mutations/contract.py:40
                                                                                                                   // virtual: load l_count%1#0 from l-stack (no copy)            result%1#0,l_head_and_tail%1#0,l_count%1#0                                                                                                                                                                                                        self.loc[Txn.sender].append(struct.copy())                           state_mutations/contract.py:40
                                                                                                                   // virtual: load l_head_and_tail%1#0 from l-stack (no copy)    result%1#0,l_count%1#0,l_head_and_tail%1#0                                                                                                                                                                                                        self.loc[Txn.sender].append(struct.copy())                           state_mutations/contract.py:40
    int 1                                                                                                          //                                                             result%1#0,l_count%1#0,l_head_and_tail%1#0,1                                                                                                                                                                                                      self.loc[Txn.sender].append(struct.copy())                           state_mutations/contract.py:40
    dig 3                                                                                                          // load result%1#0 from l-stack (copy)                         result%1#0,l_count%1#0,l_head_and_tail%1#0,1,result%1#0                                                                                                                                                                                           self.loc[Txn.sender].append(struct.copy())                           state_mutations/contract.py:40
    callsub dynamic_array_concat_dynamic_element                                                                   //                                                             result%1#0,{dynamic_array_concat_dynamic_element}                                                                                                                                                                                                 self.loc[Txn.sender].append(struct.copy())                           state_mutations/contract.py:40
                                                                                                                   // virtual: store concat_result%1#0 to l-stack (no copy)       result%1#0,concat_result%1#0                                                                                                                                                                                                                      self.loc[Txn.sender].append(struct.copy())                           state_mutations/contract.py:40
    txn Sender                                                                                                     //                                                             result%1#0,concat_result%1#0,{txn}                                                                                                                                                                                                                Txn.sender                                                           state_mutations/contract.py:40
                                                                                                                   // virtual: store tmp%1#0 to l-stack (no copy)                 result%1#0,concat_result%1#0,tmp%1#0                                                                                                                                                                                                              Txn.sender                                                           state_mutations/contract.py:40
                                                                                                                   // virtual: load tmp%1#0 from l-stack (no copy)                result%1#0,concat_result%1#0,tmp%1#0                                                                                                                                                                                                              self.loc[Txn.sender].append(struct.copy())                           state_mutations/contract.py:40
    byte "loc"                                                                                                     //                                                             result%1#0,concat_result%1#0,tmp%1#0,"loc"                                                                                                                                                                                                        self.loc                                                             state_mutations/contract.py:40
    uncover 2                                                                                                      // load concat_result%1#0 from l-stack (no copy)               result%1#0,tmp%1#0,"loc",concat_result%1#0                                                                                                                                                                                                        self.loc[Txn.sender].append(struct.copy())                           state_mutations/contract.py:40
    app_local_put                                                                                                  //                                                             result%1#0                                                                                                                                                                                                                                        self.loc[Txn.sender].append(struct.copy())                           state_mutations/contract.py:40
    byte "box"                                                                                                     //                                                             result%1#0,"box"                                                                                                                                                                                                                                  self.box                                                             state_mutations/contract.py:41
    box_get                                                                                                        //                                                             result%1#0,{box_get}.0,{box_get}.1                                                                                                                                                                                                                self.box.value                                                       state_mutations/contract.py:41
                                                                                                                   // virtual: store maybe_exists%2#0 to l-stack (no copy)        result%1#0,maybe_exists%2#0,{box_get}.0                                                                                                                                                                                                           self.box.value                                                       state_mutations/contract.py:41
                                                                                                                   // virtual: store maybe_value%2#0 to l-stack (no copy)         result%1#0,maybe_value%2#0,maybe_exists%2#0                                                                                                                                                                                                       self.box.value                                                       state_mutations/contract.py:41
                                                                                                                   // virtual: load maybe_exists%2#0 from l-stack (no copy)       result%1#0,maybe_value%2#0,maybe_exists%2#0                                                                                                                                                                                                       self.box.value                                                       state_mutations/contract.py:41
    assert // check self.box exists                                                                                //                                                             result%1#0,maybe_value%2#0                                                                                                                                                                                                                        self.box.value                                                       state_mutations/contract.py:41
    dup                                                                                                            // load maybe_value%2#0 from l-stack (copy)                    result%1#0,maybe_value%2#0,maybe_value%2#0                                                                                                                                                                                                        self.box.value.append(struct.copy())                                 state_mutations/contract.py:41
    int 0                                                                                                          //                                                             result%1#0,maybe_value%2#0,maybe_value%2#0,0                                                                                                                                                                                                      self.box.value.append(struct.copy())                                 state_mutations/contract.py:41
    extract_uint16                                                                                                 //                                                             result%1#0,maybe_value%2#0,{extract_uint16}                                                                                                                                                                                                       self.box.value.append(struct.copy())                                 state_mutations/contract.py:41
    cover 1                                                                                                        // store l_count%2#0 to l-stack (no copy)                      result%1#0,l_count%2#0,maybe_value%2#0                                                                                                                                                                                                            self.box.value.append(struct.copy())                                 state_mutations/contract.py:41
                                                                                                                   // virtual: load maybe_value%2#0 from l-stack (no copy)        result%1#0,l_count%2#0,maybe_value%2#0                                                                                                                                                                                                            self.box.value.append(struct.copy())                                 state_mutations/contract.py:41
    extract 2 0                                                                                                    //                                                             result%1#0,l_count%2#0,{extract}                                                                                                                                                                                                                  self.box.value.append(struct.copy())                                 state_mutations/contract.py:41
                                                                                                                   // virtual: store l_head_and_tail%2#0 to l-stack (no copy)     result%1#0,l_count%2#0,l_head_and_tail%2#0                                                                                                                                                                                                        self.box.value.append(struct.copy())                                 state_mutations/contract.py:41
                                                                                                                   // virtual: load l_count%2#0 from l-stack (no copy)            result%1#0,l_head_and_tail%2#0,l_count%2#0                                                                                                                                                                                                        self.box.value.append(struct.copy())                                 state_mutations/contract.py:41
                                                                                                                   // virtual: load l_head_and_tail%2#0 from l-stack (no copy)    result%1#0,l_count%2#0,l_head_and_tail%2#0                                                                                                                                                                                                        self.box.value.append(struct.copy())                                 state_mutations/contract.py:41
    int 1                                                                                                          //                                                             result%1#0,l_count%2#0,l_head_and_tail%2#0,1                                                                                                                                                                                                      self.box.value.append(struct.copy())                                 state_mutations/contract.py:41
    dig 3                                                                                                          // load result%1#0 from l-stack (copy)                         result%1#0,l_count%2#0,l_head_and_tail%2#0,1,result%1#0                                                                                                                                                                                           self.box.value.append(struct.copy())                                 state_mutations/contract.py:41
    callsub dynamic_array_concat_dynamic_element                                                                   //                                                             result%1#0,{dynamic_array_concat_dynamic_element}                                                                                                                                                                                                 self.box.value.append(struct.copy())                                 state_mutations/contract.py:41
                                                                                                                   // virtual: store concat_result%2#0 to l-stack (no copy)       result%1#0,concat_result%2#0                                                                                                                                                                                                                      self.box.value.append(struct.copy())                                 state_mutations/contract.py:41
    byte "box"                                                                                                     //                                                             result%1#0,concat_result%2#0,"box"                                                                                                                                                                                                                self.box                                                             state_mutations/contract.py:41
    box_del                                                                                                        //                                                             result%1#0,concat_result%2#0,{box_del}                                                                                                                                                                                                            self.box.value.append(struct.copy())                                 state_mutations/contract.py:41
    pop                                                                                                            //                                                             result%1#0,concat_result%2#0
    byte "box"                                                                                                     //                                                             result%1#0,concat_result%2#0,"box"                                                                                                                                                                                                                self.box                                                             state_mutations/contract.py:41
    uncover 1                                                                                                      // load concat_result%2#0 from l-stack (no copy)               result%1#0,"box",concat_result%2#0                                                                                                                                                                                                                self.box.value.append(struct.copy())                                 state_mutations/contract.py:41
    box_put                                                                                                        //                                                             result%1#0                                                                                                                                                                                                                                        self.box.value.append(struct.copy())                                 state_mutations/contract.py:41
    txn Sender                                                                                                     //                                                             result%1#0,{txn}                                                                                                                                                                                                                                  Txn.sender                                                           state_mutations/contract.py:42
                                                                                                                   // virtual: store tmp%2#0 to l-stack (no copy)                 result%1#0,tmp%2#0                                                                                                                                                                                                                                Txn.sender                                                           state_mutations/contract.py:42
    byte "map"                                                                                                     //                                                             result%1#0,tmp%2#0,"map"                                                                                                                                                                                                                          self.map                                                             state_mutations/contract.py:42
    uncover 1                                                                                                      // load tmp%2#0 from l-stack (no copy)                         result%1#0,"map",tmp%2#0                                                                                                                                                                                                                          self.map[Txn.sender]                                                 state_mutations/contract.py:42
    concat                                                                                                         //                                                             result%1#0,{concat}                                                                                                                                                                                                                               self.map[Txn.sender]                                                 state_mutations/contract.py:42
                                                                                                                   // virtual: store tmp%3#0 to l-stack (no copy)                 result%1#0,tmp%3#0                                                                                                                                                                                                                                self.map[Txn.sender]                                                 state_mutations/contract.py:42
                                                                                                                   // virtual: load tmp%3#0 from l-stack (no copy)                result%1#0,tmp%3#0                                                                                                                                                                                                                                self.map[Txn.sender]                                                 state_mutations/contract.py:42
    box_get                                                                                                        //                                                             result%1#0,{box_get}.0,{box_get}.1                                                                                                                                                                                                                self.map[Txn.sender]                                                 state_mutations/contract.py:42
                                                                                                                   // virtual: store maybe_exists%3#0 to l-stack (no copy)        result%1#0,maybe_exists%3#0,{box_get}.0                                                                                                                                                                                                           self.map[Txn.sender]                                                 state_mutations/contract.py:42
                                                                                                                   // virtual: store maybe_value%3#0 to l-stack (no copy)         result%1#0,maybe_value%3#0,maybe_exists%3#0                                                                                                                                                                                                       self.map[Txn.sender]                                                 state_mutations/contract.py:42
                                                                                                                   // virtual: load maybe_exists%3#0 from l-stack (no copy)       result%1#0,maybe_value%3#0,maybe_exists%3#0                                                                                                                                                                                                       self.map[Txn.sender]                                                 state_mutations/contract.py:42
    assert // check self.map entry exists                                                                          //                                                             result%1#0,maybe_value%3#0                                                                                                                                                                                                                        self.map[Txn.sender]                                                 state_mutations/contract.py:42
    dup                                                                                                            // load maybe_value%3#0 from l-stack (copy)                    result%1#0,maybe_value%3#0,maybe_value%3#0                                                                                                                                                                                                        self.map[Txn.sender].append(struct.copy())                           state_mutations/contract.py:42
    int 0                                                                                                          //                                                             result%1#0,maybe_value%3#0,maybe_value%3#0,0                                                                                                                                                                                                      self.map[Txn.sender].append(struct.copy())                           state_mutations/contract.py:42
    extract_uint16                                                                                                 //                                                             result%1#0,maybe_value%3#0,{extract_uint16}                                                                                                                                                                                                       self.map[Txn.sender].append(struct.copy())                           state_mutations/contract.py:42
    cover 1                                                                                                        // store l_count%3#0 to l-stack (no copy)                      result%1#0,l_count%3#0,maybe_value%3#0                                                                                                                                                                                                            self.map[Txn.sender].append(struct.copy())                           state_mutations/contract.py:42
                                                                                                                   // virtual: load maybe_value%3#0 from l-stack (no copy)        result%1#0,l_count%3#0,maybe_value%3#0                                                                                                                                                                                                            self.map[Txn.sender].append(struct.copy())                           state_mutations/contract.py:42
    extract 2 0                                                                                                    //                                                             result%1#0,l_count%3#0,{extract}                                                                                                                                                                                                                  self.map[Txn.sender].append(struct.copy())                           state_mutations/contract.py:42
                                                                                                                   // virtual: store l_head_and_tail%3#0 to l-stack (no copy)     result%1#0,l_count%3#0,l_head_and_tail%3#0                                                                                                                                                                                                        self.map[Txn.sender].append(struct.copy())                           state_mutations/contract.py:42
                                                                                                                   // virtual: load l_count%3#0 from l-stack (no copy)            result%1#0,l_head_and_tail%3#0,l_count%3#0                                                                                                                                                                                                        self.map[Txn.sender].append(struct.copy())                           state_mutations/contract.py:42
                                                                                                                   // virtual: load l_head_and_tail%3#0 from l-stack (no copy)    result%1#0,l_count%3#0,l_head_and_tail%3#0                                                                                                                                                                                                        self.map[Txn.sender].append(struct.copy())                           state_mutations/contract.py:42
    int 1                                                                                                          //                                                             result%1#0,l_count%3#0,l_head_and_tail%3#0,1                                                                                                                                                                                                      self.map[Txn.sender].append(struct.copy())                           state_mutations/contract.py:42
    uncover 3                                                                                                      // load result%1#0 from l-stack (no copy)                      l_count%3#0,l_head_and_tail%3#0,1,result%1#0                                                                                                                                                                                                      self.map[Txn.sender].append(struct.copy())                           state_mutations/contract.py:42
    callsub dynamic_array_concat_dynamic_element                                                                   //                                                             {dynamic_array_concat_dynamic_element}                                                                                                                                                                                                            self.map[Txn.sender].append(struct.copy())                           state_mutations/contract.py:42
                                                                                                                   // virtual: store concat_result%3#0 to l-stack (no copy)       concat_result%3#0                                                                                                                                                                                                                                 self.map[Txn.sender].append(struct.copy())                           state_mutations/contract.py:42
    txn Sender                                                                                                     //                                                             concat_result%3#0,{txn}                                                                                                                                                                                                                           Txn.sender                                                           state_mutations/contract.py:42
                                                                                                                   // virtual: store tmp%4#0 to l-stack (no copy)                 concat_result%3#0,tmp%4#0                                                                                                                                                                                                                         Txn.sender                                                           state_mutations/contract.py:42
    byte "map"                                                                                                     //                                                             concat_result%3#0,tmp%4#0,"map"                                                                                                                                                                                                                   self.map                                                             state_mutations/contract.py:42
    uncover 1                                                                                                      // load tmp%4#0 from l-stack (no copy)                         concat_result%3#0,"map",tmp%4#0                                                                                                                                                                                                                   self.map[Txn.sender]                                                 state_mutations/contract.py:42
    concat                                                                                                         //                                                             concat_result%3#0,{concat}                                                                                                                                                                                                                        self.map[Txn.sender]                                                 state_mutations/contract.py:42
                                                                                                                   // virtual: store tmp%5#0 to l-stack (no copy)                 concat_result%3#0,tmp%5#0                                                                                                                                                                                                                         self.map[Txn.sender]                                                 state_mutations/contract.py:42
    dup                                                                                                            // load tmp%5#0 from l-stack (copy)                            concat_result%3#0,tmp%5#0,tmp%5#0                                                                                                                                                                                                                 self.map[Txn.sender].append(struct.copy())                           state_mutations/contract.py:42
    box_del                                                                                                        //                                                             concat_result%3#0,tmp%5#0,{box_del}                                                                                                                                                                                                               self.map[Txn.sender].append(struct.copy())                           state_mutations/contract.py:42
    pop                                                                                                            //                                                             concat_result%3#0,tmp%5#0
                                                                                                                   // virtual: load tmp%5#0 from l-stack (no copy)                concat_result%3#0,tmp%5#0                                                                                                                                                                                                                         self.map[Txn.sender].append(struct.copy())                           state_mutations/contract.py:42
    uncover 1                                                                                                      // load concat_result%3#0 from l-stack (no copy)               tmp%5#0,concat_result%3#0                                                                                                                                                                                                                         self.map[Txn.sender].append(struct.copy())                           state_mutations/contract.py:42
    box_put                                                                                                        //                                                                                                                                                                                                                                                                                                               self.map[Txn.sender].append(struct.copy())                           state_mutations/contract.py:42
    retsub                                                                                                         //


// test_cases.state_mutations.contract.get_struct() -> bytes:
get_struct:
    proto 0 1                                                                                                      //                                                                                                                                                                                                                                                                                                               @subroutine\ndef get_struct() -> MyStruct:                           state_mutations/contract.py:64-65

get_struct_block@0:
    byte 0x0000000000000001000a000362617a                                                                          //                                                             0x0000000000000001000a000362617a                                                                                                                                                                                                                  MyStruct(\nbar=arc4.UInt64(1),\nbaz=arc4.String("baz"),\n)           state_mutations/contract.py:66-69
    retsub                                                                                                         //                                                             0x0000000000000001000a000362617a                                                                                                                                                                                                                  return MyStruct(\nbar=arc4.UInt64(1),\nbaz=arc4.String("baz"),\n)    state_mutations/contract.py:66-69


// test_cases.state_mutations.contract.Contract.modify() -> void:
modify:
    proto 0 0                                                                                                      //                                                                                                                                                                                                                                                                                                               @arc4.abimethod\ndef modify(self) -> None:                           state_mutations/contract.py:44-45

modify_block@0:
    int 0                                                                                                          //                                                             0                                                                                                                                                                                                                                                 self.glob.value                                                      state_mutations/contract.py:46
    byte "glob"                                                                                                    //                                                             0,"glob"                                                                                                                                                                                                                                          self.glob                                                            state_mutations/contract.py:46
    app_global_get_ex                                                                                              //                                                             {app_global_get_ex}.0,{app_global_get_ex}.1                                                                                                                                                                                                       self.glob.value                                                      state_mutations/contract.py:46
                                                                                                                   // virtual: store maybe_exists%0#0 to l-stack (no copy)        maybe_exists%0#0,{app_global_get_ex}.0                                                                                                                                                                                                            self.glob.value                                                      state_mutations/contract.py:46
                                                                                                                   // virtual: store maybe_value%0#0 to l-stack (no copy)         maybe_value%0#0,maybe_exists%0#0                                                                                                                                                                                                                  self.glob.value                                                      state_mutations/contract.py:46
                                                                                                                   // virtual: load maybe_exists%0#0 from l-stack (no copy)       maybe_value%0#0,maybe_exists%0#0                                                                                                                                                                                                                  self.glob.value                                                      state_mutations/contract.py:46
    assert // check self.glob exists                                                                               //                                                             maybe_value%0#0                                                                                                                                                                                                                                   self.glob.value                                                      state_mutations/contract.py:46
    dup                                                                                                            // load maybe_value%0#0 from l-stack (copy)                    maybe_value%0#0,maybe_value%0#0                                                                                                                                                                                                                   self.glob.value[0]                                                   state_mutations/contract.py:46
    extract 2 0                                                                                                    //                                                             maybe_value%0#0,{extract}                                                                                                                                                                                                                         self.glob.value[0]                                                   state_mutations/contract.py:46
                                                                                                                   // virtual: store array_head_and_tail%0#0 to l-stack (no copy) maybe_value%0#0,array_head_and_tail%0#0                                                                                                                                                                                                           self.glob.value[0]                                                   state_mutations/contract.py:46
    dup                                                                                                            // load array_head_and_tail%0#0 from l-stack (copy)            maybe_value%0#0,array_head_and_tail%0#0,array_head_and_tail%0#0                                                                                                                                                                                   self.glob.value[0]                                                   state_mutations/contract.py:46
    int 0                                                                                                          //                                                             maybe_value%0#0,array_head_and_tail%0#0,array_head_and_tail%0#0,0                                                                                                                                                                                 self.glob.value[0]                                                   state_mutations/contract.py:46
    extract_uint16                                                                                                 //                                                             maybe_value%0#0,array_head_and_tail%0#0,{extract_uint16}                                                                                                                                                                                          self.glob.value[0]                                                   state_mutations/contract.py:46
    cover 2                                                                                                        // store item_offset%0#0 to l-stack (no copy)                  item_offset%0#0,maybe_value%0#0,array_head_and_tail%0#0                                                                                                                                                                                           self.glob.value[0]                                                   state_mutations/contract.py:46
    uncover 1                                                                                                      // load maybe_value%0#0 from l-stack (no copy)                 item_offset%0#0,array_head_and_tail%0#0,maybe_value%0#0                                                                                                                                                                                           self.glob.value[0]                                                   state_mutations/contract.py:46
    int 0                                                                                                          //                                                             item_offset%0#0,array_head_and_tail%0#0,maybe_value%0#0,0                                                                                                                                                                                         self.glob.value[0]                                                   state_mutations/contract.py:46
    extract_uint16                                                                                                 //                                                             item_offset%0#0,array_head_and_tail%0#0,{extract_uint16}                                                                                                                                                                                          self.glob.value[0]                                                   state_mutations/contract.py:46
                                                                                                                   // virtual: store array_length%0#0 to l-stack (no copy)        item_offset%0#0,array_head_and_tail%0#0,array_length%0#0                                                                                                                                                                                          self.glob.value[0]                                                   state_mutations/contract.py:46
                                                                                                                   // virtual: load array_length%0#0 from l-stack (no copy)       item_offset%0#0,array_head_and_tail%0#0,array_length%0#0                                                                                                                                                                                          self.glob.value[0]                                                   state_mutations/contract.py:46
    int 1                                                                                                          //                                                             item_offset%0#0,array_head_and_tail%0#0,array_length%0#0,1                                                                                                                                                                                        self.glob.value[0]                                                   state_mutations/contract.py:46
    - // on error: Index access is out of bounds                                                                   //                                                             item_offset%0#0,array_head_and_tail%0#0,{-}                                                                                                                                                                                                       self.glob.value[0]                                                   state_mutations/contract.py:46
                                                                                                                   // virtual: store has_next%0#0 to l-stack (no copy)            item_offset%0#0,array_head_and_tail%0#0,has_next%0#0                                                                                                                                                                                              self.glob.value[0]                                                   state_mutations/contract.py:46
    dig 1                                                                                                          // load array_head_and_tail%0#0 from l-stack (copy)            item_offset%0#0,array_head_and_tail%0#0,has_next%0#0,array_head_and_tail%0#0                                                                                                                                                                      self.glob.value[0]                                                   state_mutations/contract.py:46
    len                                                                                                            //                                                             item_offset%0#0,array_head_and_tail%0#0,has_next%0#0,{len}                                                                                                                                                                                        self.glob.value[0]                                                   state_mutations/contract.py:46
    cover 1                                                                                                        // store end_of_array%0#0 to l-stack (no copy)                 item_offset%0#0,array_head_and_tail%0#0,end_of_array%0#0,has_next%0#0                                                                                                                                                                             self.glob.value[0]                                                   state_mutations/contract.py:46
    dig 2                                                                                                          // load array_head_and_tail%0#0 from l-stack (copy)            item_offset%0#0,array_head_and_tail%0#0,end_of_array%0#0,has_next%0#0,array_head_and_tail%0#0                                                                                                                                                     self.glob.value[0]                                                   state_mutations/contract.py:46
    int 2                                                                                                          //                                                             item_offset%0#0,array_head_and_tail%0#0,end_of_array%0#0,has_next%0#0,array_head_and_tail%0#0,2                                                                                                                                                   self.glob.value[0]                                                   state_mutations/contract.py:46
    extract_uint16                                                                                                 //                                                             item_offset%0#0,array_head_and_tail%0#0,end_of_array%0#0,has_next%0#0,{extract_uint16}                                                                                                                                                            self.glob.value[0]                                                   state_mutations/contract.py:46
                                                                                                                   // virtual: store next_item_offset%0#0 to l-stack (no copy)    item_offset%0#0,array_head_and_tail%0#0,end_of_array%0#0,has_next%0#0,next_item_offset%0#0                                                                                                                                                        self.glob.value[0]                                                   state_mutations/contract.py:46
    uncover 2                                                                                                      // load end_of_array%0#0 from l-stack (no copy)                item_offset%0#0,array_head_and_tail%0#0,has_next%0#0,next_item_offset%0#0,end_of_array%0#0                                                                                                                                                        self.glob.value[0]                                                   state_mutations/contract.py:46
    uncover 1                                                                                                      // load next_item_offset%0#0 from l-stack (no copy)            item_offset%0#0,array_head_and_tail%0#0,has_next%0#0,end_of_array%0#0,next_item_offset%0#0                                                                                                                                                        self.glob.value[0]                                                   state_mutations/contract.py:46
    uncover 2                                                                                                      // load has_next%0#0 from l-stack (no copy)                    item_offset%0#0,array_head_and_tail%0#0,end_of_array%0#0,next_item_offset%0#0,has_next%0#0                                                                                                                                                        self.glob.value[0]                                                   state_mutations/contract.py:46
    select                                                                                                         //                                                             item_offset%0#0,array_head_and_tail%0#0,{select}                                                                                                                                                                                                  self.glob.value[0]                                                   state_mutations/contract.py:46
                                                                                                                   // virtual: store end_offset%0#0 to l-stack (no copy)          item_offset%0#0,array_head_and_tail%0#0,end_offset%0#0                                                                                                                                                                                            self.glob.value[0]                                                   state_mutations/contract.py:46
    uncover 1                                                                                                      // load array_head_and_tail%0#0 from l-stack (no copy)         item_offset%0#0,end_offset%0#0,array_head_and_tail%0#0                                                                                                                                                                                            self.glob.value[0]                                                   state_mutations/contract.py:46
    uncover 2                                                                                                      // load item_offset%0#0 from l-stack (no copy)                 end_offset%0#0,array_head_and_tail%0#0,item_offset%0#0                                                                                                                                                                                            self.glob.value[0]                                                   state_mutations/contract.py:46
    uncover 2                                                                                                      // load end_offset%0#0 from l-stack (no copy)                  array_head_and_tail%0#0,item_offset%0#0,end_offset%0#0                                                                                                                                                                                            self.glob.value[0]                                                   state_mutations/contract.py:46
    substring3                                                                                                     //                                                             {substring3}                                                                                                                                                                                                                                      self.glob.value[0]                                                   state_mutations/contract.py:46
                                                                                                                   // virtual: store tmp%0#0 to l-stack (no copy)                 tmp%0#0                                                                                                                                                                                                                                           self.glob.value[0]                                                   state_mutations/contract.py:46
    dup                                                                                                            // load tmp%0#0 from l-stack (copy)                            tmp%0#0,tmp%0#0                                                                                                                                                                                                                                   self.glob.value[0].baz = arc4.String("modified")                     state_mutations/contract.py:46
    int 8                                                                                                          //                                                             tmp%0#0,tmp%0#0,8                                                                                                                                                                                                                                 self.glob.value[0].baz = arc4.String("modified")                     state_mutations/contract.py:46
    extract_uint16                                                                                                 //                                                             tmp%0#0,{extract_uint16}                                                                                                                                                                                                                          self.glob.value[0].baz = arc4.String("modified")                     state_mutations/contract.py:46
                                                                                                                   // virtual: store item_offset%1#0 to l-stack (no copy)         tmp%0#0,item_offset%1#0                                                                                                                                                                                                                           self.glob.value[0].baz = arc4.String("modified")                     state_mutations/contract.py:46
    uncover 1                                                                                                      // load tmp%0#0 from l-stack (no copy)                         item_offset%1#0,tmp%0#0                                                                                                                                                                                                                           self.glob.value[0].baz = arc4.String("modified")                     state_mutations/contract.py:46
    int 0                                                                                                          //                                                             item_offset%1#0,tmp%0#0,0                                                                                                                                                                                                                         self.glob.value[0].baz = arc4.String("modified")                     state_mutations/contract.py:46
    uncover 2                                                                                                      // load item_offset%1#0 from l-stack (no copy)                 tmp%0#0,0,item_offset%1#0                                                                                                                                                                                                                         self.glob.value[0].baz = arc4.String("modified")                     state_mutations/contract.py:46
    extract3                                                                                                       //                                                             {extract3}                                                                                                                                                                                                                                        self.glob.value[0].baz = arc4.String("modified")                     state_mutations/contract.py:46
                                                                                                                   // virtual: store data_up_to_item%0#0 to l-stack (no copy)     data_up_to_item%0#0                                                                                                                                                                                                                               self.glob.value[0].baz = arc4.String("modified")                     state_mutations/contract.py:46
                                                                                                                   // virtual: load data_up_to_item%0#0 from l-stack (no copy)    data_up_to_item%0#0                                                                                                                                                                                                                               self.glob.value[0].baz = arc4.String("modified")                     state_mutations/contract.py:46
    byte 0x00086d6f646966696564                                                                                    //                                                             data_up_to_item%0#0,0x00086d6f646966696564                                                                                                                                                                                                        arc4.String("modified")                                              state_mutations/contract.py:46
    concat                                                                                                         //                                                             {concat}                                                                                                                                                                                                                                          self.glob.value[0].baz = arc4.String("modified")                     state_mutations/contract.py:46
                                                                                                                   // virtual: store updated_data%0#0 to l-stack (no copy)        updated_data%0#0                                                                                                                                                                                                                                  self.glob.value[0].baz = arc4.String("modified")                     state_mutations/contract.py:46
    int 0                                                                                                          //                                                             updated_data%0#0,0                                                                                                                                                                                                                                self.glob.value                                                      state_mutations/contract.py:46
    byte "glob"                                                                                                    //                                                             updated_data%0#0,0,"glob"                                                                                                                                                                                                                         self.glob                                                            state_mutations/contract.py:46
    app_global_get_ex                                                                                              //                                                             updated_data%0#0,{app_global_get_ex}.0,{app_global_get_ex}.1                                                                                                                                                                                      self.glob.value                                                      state_mutations/contract.py:46
                                                                                                                   // virtual: store maybe_exists%1#0 to l-stack (no copy)        updated_data%0#0,maybe_exists%1#0,{app_global_get_ex}.0                                                                                                                                                                                           self.glob.value                                                      state_mutations/contract.py:46
                                                                                                                   // virtual: store maybe_value%1#0 to l-stack (no copy)         updated_data%0#0,maybe_value%1#0,maybe_exists%1#0                                                                                                                                                                                                 self.glob.value                                                      state_mutations/contract.py:46
                                                                                                                   // virtual: load maybe_exists%1#0 from l-stack (no copy)       updated_data%0#0,maybe_value%1#0,maybe_exists%1#0                                                                                                                                                                                                 self.glob.value                                                      state_mutations/contract.py:46
    assert // check self.glob exists                                                                               //                                                             updated_data%0#0,maybe_value%1#0                                                                                                                                                                                                                  self.glob.value                                                      state_mutations/contract.py:46
                                                                                                                   // virtual: load maybe_value%1#0 from l-stack (no copy)        updated_data%0#0,maybe_value%1#0                                                                                                                                                                                                                  self.glob.value[0].baz = arc4.String("modified")                     state_mutations/contract.py:46
    uncover 1                                                                                                      // load updated_data%0#0 from l-stack (no copy)                maybe_value%1#0,updated_data%0#0                                                                                                                                                                                                                  self.glob.value[0].baz = arc4.String("modified")                     state_mutations/contract.py:46
    int 0                                                                                                          //                                                             maybe_value%1#0,updated_data%0#0,0                                                                                                                                                                                                                0                                                                    state_mutations/contract.py:46
    callsub dynamic_array_replace_dynamic_element                                                                  //                                                             {dynamic_array_replace_dynamic_element}                                                                                                                                                                                                           self.glob.value[0].baz = arc4.String("modified")                     state_mutations/contract.py:46
                                                                                                                   // virtual: store updated_value%0#0 to l-stack (no copy)       updated_value%0#0                                                                                                                                                                                                                                 self.glob.value[0].baz = arc4.String("modified")                     state_mutations/contract.py:46
    byte "glob"                                                                                                    //                                                             updated_value%0#0,"glob"                                                                                                                                                                                                                          self.glob                                                            state_mutations/contract.py:46
    uncover 1                                                                                                      // load updated_value%0#0 from l-stack (no copy)               "glob",updated_value%0#0                                                                                                                                                                                                                          self.glob.value[0].baz = arc4.String("modified")                     state_mutations/contract.py:46
    app_global_put                                                                                                 //                                                                                                                                                                                                                                                                                                               self.glob.value[0].baz = arc4.String("modified")                     state_mutations/contract.py:46
    txn Sender                                                                                                     //                                                             {txn}                                                                                                                                                                                                                                             Txn.sender                                                           state_mutations/contract.py:47
                                                                                                                   // virtual: store tmp%1#0 to l-stack (no copy)                 tmp%1#0                                                                                                                                                                                                                                           Txn.sender                                                           state_mutations/contract.py:47
                                                                                                                   // virtual: load tmp%1#0 from l-stack (no copy)                tmp%1#0                                                                                                                                                                                                                                           self.loc[Txn.sender]                                                 state_mutations/contract.py:47
    int 0                                                                                                          //                                                             tmp%1#0,0                                                                                                                                                                                                                                         self.loc[Txn.sender]                                                 state_mutations/contract.py:47
    byte "loc"                                                                                                     //                                                             tmp%1#0,0,"loc"                                                                                                                                                                                                                                   self.loc                                                             state_mutations/contract.py:47
    app_local_get_ex                                                                                               //                                                             {app_local_get_ex}.0,{app_local_get_ex}.1                                                                                                                                                                                                         self.loc[Txn.sender]                                                 state_mutations/contract.py:47
                                                                                                                   // virtual: store maybe_exists%2#0 to l-stack (no copy)        maybe_exists%2#0,{app_local_get_ex}.0                                                                                                                                                                                                             self.loc[Txn.sender]                                                 state_mutations/contract.py:47
                                                                                                                   // virtual: store maybe_value%2#0 to l-stack (no copy)         maybe_value%2#0,maybe_exists%2#0                                                                                                                                                                                                                  self.loc[Txn.sender]                                                 state_mutations/contract.py:47
                                                                                                                   // virtual: load maybe_exists%2#0 from l-stack (no copy)       maybe_value%2#0,maybe_exists%2#0                                                                                                                                                                                                                  self.loc[Txn.sender]                                                 state_mutations/contract.py:47
    assert // check self.loc exists for account                                                                    //                                                             maybe_value%2#0                                                                                                                                                                                                                                   self.loc[Txn.sender]                                                 state_mutations/contract.py:47
    dup                                                                                                            // load maybe_value%2#0 from l-stack (copy)                    maybe_value%2#0,maybe_value%2#0                                                                                                                                                                                                                   self.loc[Txn.sender][0]                                              state_mutations/contract.py:47
    extract 2 0                                                                                                    //                                                             maybe_value%2#0,{extract}                                                                                                                                                                                                                         self.loc[Txn.sender][0]                                              state_mutations/contract.py:47
                                                                                                                   // virtual: store array_head_and_tail%1#0 to l-stack (no copy) maybe_value%2#0,array_head_and_tail%1#0                                                                                                                                                                                                           self.loc[Txn.sender][0]                                              state_mutations/contract.py:47
    dup                                                                                                            // load array_head_and_tail%1#0 from l-stack (copy)            maybe_value%2#0,array_head_and_tail%1#0,array_head_and_tail%1#0                                                                                                                                                                                   self.loc[Txn.sender][0]                                              state_mutations/contract.py:47
    int 0                                                                                                          //                                                             maybe_value%2#0,array_head_and_tail%1#0,array_head_and_tail%1#0,0                                                                                                                                                                                 self.loc[Txn.sender][0]                                              state_mutations/contract.py:47
    extract_uint16                                                                                                 //                                                             maybe_value%2#0,array_head_and_tail%1#0,{extract_uint16}                                                                                                                                                                                          self.loc[Txn.sender][0]                                              state_mutations/contract.py:47
    cover 2                                                                                                        // store item_offset%2#0 to l-stack (no copy)                  item_offset%2#0,maybe_value%2#0,array_head_and_tail%1#0                                                                                                                                                                                           self.loc[Txn.sender][0]                                              state_mutations/contract.py:47
    uncover 1                                                                                                      // load maybe_value%2#0 from l-stack (no copy)                 item_offset%2#0,array_head_and_tail%1#0,maybe_value%2#0                                                                                                                                                                                           self.loc[Txn.sender][0]                                              state_mutations/contract.py:47
    int 0                                                                                                          //                                                             item_offset%2#0,array_head_and_tail%1#0,maybe_value%2#0,0                                                                                                                                                                                         self.loc[Txn.sender][0]                                              state_mutations/contract.py:47
    extract_uint16                                                                                                 //                                                             item_offset%2#0,array_head_and_tail%1#0,{extract_uint16}                                                                                                                                                                                          self.loc[Txn.sender][0]                                              state_mutations/contract.py:47
                                                                                                                   // virtual: store array_length%1#0 to l-stack (no copy)        item_offset%2#0,array_head_and_tail%1#0,array_length%1#0                                                                                                                                                                                          self.loc[Txn.sender][0]                                              state_mutations/contract.py:47
                                                                                                                   // virtual: load array_length%1#0 from l-stack (no copy)       item_offset%2#0,array_head_and_tail%1#0,array_length%1#0                                                                                                                                                                                          self.loc[Txn.sender][0]                                              state_mutations/contract.py:47
    int 1                                                                                                          //                                                             item_offset%2#0,array_head_and_tail%1#0,array_length%1#0,1                                                                                                                                                                                        self.loc[Txn.sender][0]                                              state_mutations/contract.py:47
    - // on error: Index access is out of bounds                                                                   //                                                             item_offset%2#0,array_head_and_tail%1#0,{-}                                                                                                                                                                                                       self.loc[Txn.sender][0]                                              state_mutations/contract.py:47
                                                                                                                   // virtual: store has_next%1#0 to l-stack (no copy)            item_offset%2#0,array_head_and_tail%1#0,has_next%1#0                                                                                                                                                                                              self.loc[Txn.sender][0]                                              state_mutations/contract.py:47
    dig 1                                                                                                          // load array_head_and_tail%1#0 from l-stack (copy)            item_offset%2#0,array_head_and_tail%1#0,has_next%1#0,array_head_and_tail%1#0                                                                                                                                                                      self.loc[Txn.sender][0]                                              state_mutations/contract.py:47
    len                                                                                                            //                                                             item_offset%2#0,array_head_and_tail%1#0,has_next%1#0,{len}                                                                                                                                                                                        self.loc[Txn.sender][0]                                              state_mutations/contract.py:47
    cover 1                                                                                                        // store end_of_array%1#0 to l-stack (no copy)                 item_offset%2#0,array_head_and_tail%1#0,end_of_array%1#0,has_next%1#0                                                                                                                                                                             self.loc[Txn.sender][0]                                              state_mutations/contract.py:47
    dig 2                                                                                                          // load array_head_and_tail%1#0 from l-stack (copy)            item_offset%2#0,array_head_and_tail%1#0,end_of_array%1#0,has_next%1#0,array_head_and_tail%1#0                                                                                                                                                     self.loc[Txn.sender][0]                                              state_mutations/contract.py:47
    int 2                                                                                                          //                                                             item_offset%2#0,array_head_and_tail%1#0,end_of_array%1#0,has_next%1#0,array_head_and_tail%1#0,2                                                                                                                                                   self.loc[Txn.sender][0]                                              state_mutations/contract.py:47
    extract_uint16                                                                                                 //                                                             item_offset%2#0,array_head_and_tail%1#0,end_of_array%1#0,has_next%1#0,{extract_uint16}                                                                                                                                                            self.loc[Txn.sender][0]                                              state_mutations/contract.py:47
                                                                                                                   // virtual: store next_item_offset%1#0 to l-stack (no copy)    item_offset%2#0,array_head_and_tail%1#0,end_of_array%1#0,has_next%1#0,next_item_offset%1#0                                                                                                                                                        self.loc[Txn.sender][0]                                              state_mutations/contract.py:47
    uncover 2                                                                                                      // load end_of_array%1#0 from l-stack (no copy)                item_offset%2#0,array_head_and_tail%1#0,has_next%1#0,next_item_offset%1#0,end_of_array%1#0                                                                                                                                                        self.loc[Txn.sender][0]                                              state_mutations/contract.py:47
    uncover 1                                                                                                      // load next_item_offset%1#0 from l-stack (no copy)            item_offset%2#0,array_head_and_tail%1#0,has_next%1#0,end_of_array%1#0,next_item_offset%1#0                                                                                                                                                        self.loc[Txn.sender][0]                                              state_mutations/contract.py:47
    uncover 2                                                                                                      // load has_next%1#0 from l-stack (no copy)                    item_offset%2#0,array_head_and_tail%1#0,end_of_array%1#0,next_item_offset%1#0,has_next%1#0                                                                                                                                                        self.loc[Txn.sender][0]                                              state_mutations/contract.py:47
    select                                                                                                         //                                                             item_offset%2#0,array_head_and_tail%1#0,{select}                                                                                                                                                                                                  self.loc[Txn.sender][0]                                              state_mutations/contract.py:47
                                                                                                                   // virtual: store end_offset%1#0 to l-stack (no copy)          item_offset%2#0,array_head_and_tail%1#0,end_offset%1#0                                                                                                                                                                                            self.loc[Txn.sender][0]                                              state_mutations/contract.py:47
    uncover 1                                                                                                      // load array_head_and_tail%1#0 from l-stack (no copy)         item_offset%2#0,end_offset%1#0,array_head_and_tail%1#0                                                                                                                                                                                            self.loc[Txn.sender][0]                                              state_mutations/contract.py:47
    uncover 2                                                                                                      // load item_offset%2#0 from l-stack (no copy)                 end_offset%1#0,array_head_and_tail%1#0,item_offset%2#0                                                                                                                                                                                            self.loc[Txn.sender][0]                                              state_mutations/contract.py:47
    uncover 2                                                                                                      // load end_offset%1#0 from l-stack (no copy)                  array_head_and_tail%1#0,item_offset%2#0,end_offset%1#0                                                                                                                                                                                            self.loc[Txn.sender][0]                                              state_mutations/contract.py:47
    substring3                                                                                                     //                                                             {substring3}                                                                                                                                                                                                                                      self.loc[Txn.sender][0]                                              state_mutations/contract.py:47
                                                                                                                   // virtual: store tmp%2#0 to l-stack (no copy)                 tmp%2#0                                                                                                                                                                                                                                           self.loc[Txn.sender][0]                                              state_mutations/contract.py:47
    dup                                                                                                            // load tmp%2#0 from l-stack (copy)                            tmp%2#0,tmp%2#0                                                                                                                                                                                                                                   self.loc[Txn.sender][0].baz = arc4.String("modified")                state_mutations/contract.py:47
    int 8                                                                                                          //                                                             tmp%2#0,tmp%2#0,8                                                                                                                                                                                                                                 self.loc[Txn.sender][0].baz = arc4.String("modified")                state_mutations/contract.py:47
    extract_uint16                                                                                                 //                                                             tmp%2#0,{extract_uint16}                                                                                                                                                                                                                          self.loc[Txn.sender][0].baz = arc4.String("modified")                state_mutations/contract.py:47
                                                                                                                   // virtual: store item_offset%3#0 to l-stack (no copy)         tmp%2#0,item_offset%3#0                                                                                                                                                                                                                           self.loc[Txn.sender][0].baz = arc4.String("modified")                state_mutations/contract.py:47
    uncover 1                                                                                                      // load tmp%2#0 from l-stack (no copy)                         item_offset%3#0,tmp%2#0                                                                                                                                                                                                                           self.loc[Txn.sender][0].baz = arc4.String("modified")                state_mutations/contract.py:47
    int 0                                                                                                          //                                                             item_offset%3#0,tmp%2#0,0                                                                                                                                                                                                                         self.loc[Txn.sender][0].baz = arc4.String("modified")                state_mutations/contract.py:47
    uncover 2                                                                                                      // load item_offset%3#0 from l-stack (no copy)                 tmp%2#0,0,item_offset%3#0                                                                                                                                                                                                                         self.loc[Txn.sender][0].baz = arc4.String("modified")                state_mutations/contract.py:47
    extract3                                                                                                       //                                                             {extract3}                                                                                                                                                                                                                                        self.loc[Txn.sender][0].baz = arc4.String("modified")                state_mutations/contract.py:47
                                                                                                                   // virtual: store data_up_to_item%1#0 to l-stack (no copy)     data_up_to_item%1#0                                                                                                                                                                                                                               self.loc[Txn.sender][0].baz = arc4.String("modified")                state_mutations/contract.py:47
                                                                                                                   // virtual: load data_up_to_item%1#0 from l-stack (no copy)    data_up_to_item%1#0                                                                                                                                                                                                                               self.loc[Txn.sender][0].baz = arc4.String("modified")                state_mutations/contract.py:47
    byte 0x00086d6f646966696564                                                                                    //                                                             data_up_to_item%1#0,0x00086d6f646966696564                                                                                                                                                                                                        arc4.String("modified")                                              state_mutations/contract.py:47
    concat                                                                                                         //                                                             {concat}                                                                                                                                                                                                                                          self.loc[Txn.sender][0].baz = arc4.String("modified")                state_mutations/contract.py:47
                                                                                                                   // virtual: store updated_data%1#0 to l-stack (no copy)        updated_data%1#0                                                                                                                                                                                                                                  self.loc[Txn.sender][0].baz = arc4.String("modified")                state_mutations/contract.py:47
    txn Sender                                                                                                     //                                                             updated_data%1#0,{txn}                                                                                                                                                                                                                            Txn.sender                                                           state_mutations/contract.py:47
                                                                                                                   // virtual: store tmp%3#0 to l-stack (no copy)                 updated_data%1#0,tmp%3#0                                                                                                                                                                                                                          Txn.sender                                                           state_mutations/contract.py:47
                                                                                                                   // virtual: load tmp%3#0 from l-stack (no copy)                updated_data%1#0,tmp%3#0                                                                                                                                                                                                                          self.loc[Txn.sender]                                                 state_mutations/contract.py:47
    int 0                                                                                                          //                                                             updated_data%1#0,tmp%3#0,0                                                                                                                                                                                                                        self.loc[Txn.sender]                                                 state_mutations/contract.py:47
    byte "loc"                                                                                                     //                                                             updated_data%1#0,tmp%3#0,0,"loc"                                                                                                                                                                                                                  self.loc                                                             state_mutations/contract.py:47
    app_local_get_ex                                                                                               //                                                             updated_data%1#0,{app_local_get_ex}.0,{app_local_get_ex}.1                                                                                                                                                                                        self.loc[Txn.sender]                                                 state_mutations/contract.py:47
                                                                                                                   // virtual: store maybe_exists%3#0 to l-stack (no copy)        updated_data%1#0,maybe_exists%3#0,{app_local_get_ex}.0                                                                                                                                                                                            self.loc[Txn.sender]                                                 state_mutations/contract.py:47
                                                                                                                   // virtual: store maybe_value%3#0 to l-stack (no copy)         updated_data%1#0,maybe_value%3#0,maybe_exists%3#0                                                                                                                                                                                                 self.loc[Txn.sender]                                                 state_mutations/contract.py:47
                                                                                                                   // virtual: load maybe_exists%3#0 from l-stack (no copy)       updated_data%1#0,maybe_value%3#0,maybe_exists%3#0                                                                                                                                                                                                 self.loc[Txn.sender]                                                 state_mutations/contract.py:47
    assert // check self.loc exists for account                                                                    //                                                             updated_data%1#0,maybe_value%3#0                                                                                                                                                                                                                  self.loc[Txn.sender]                                                 state_mutations/contract.py:47
                                                                                                                   // virtual: load maybe_value%3#0 from l-stack (no copy)        updated_data%1#0,maybe_value%3#0                                                                                                                                                                                                                  self.loc[Txn.sender][0].baz = arc4.String("modified")                state_mutations/contract.py:47
    uncover 1                                                                                                      // load updated_data%1#0 from l-stack (no copy)                maybe_value%3#0,updated_data%1#0                                                                                                                                                                                                                  self.loc[Txn.sender][0].baz = arc4.String("modified")                state_mutations/contract.py:47
    int 0                                                                                                          //                                                             maybe_value%3#0,updated_data%1#0,0                                                                                                                                                                                                                0                                                                    state_mutations/contract.py:47
    callsub dynamic_array_replace_dynamic_element                                                                  //                                                             {dynamic_array_replace_dynamic_element}                                                                                                                                                                                                           self.loc[Txn.sender][0].baz = arc4.String("modified")                state_mutations/contract.py:47
                                                                                                                   // virtual: store updated_value%1#0 to l-stack (no copy)       updated_value%1#0                                                                                                                                                                                                                                 self.loc[Txn.sender][0].baz = arc4.String("modified")                state_mutations/contract.py:47
    txn Sender                                                                                                     //                                                             updated_value%1#0,{txn}                                                                                                                                                                                                                           Txn.sender                                                           state_mutations/contract.py:47
                                                                                                                   // virtual: store tmp%4#0 to l-stack (no copy)                 updated_value%1#0,tmp%4#0                                                                                                                                                                                                                         Txn.sender                                                           state_mutations/contract.py:47
                                                                                                                   // virtual: load tmp%4#0 from l-stack (no copy)                updated_value%1#0,tmp%4#0                                                                                                                                                                                                                         self.loc[Txn.sender][0].baz = arc4.String("modified")                state_mutations/contract.py:47
    byte "loc"                                                                                                     //                                                             updated_value%1#0,tmp%4#0,"loc"                                                                                                                                                                                                                   self.loc                                                             state_mutations/contract.py:47
    uncover 2                                                                                                      // load updated_value%1#0 from l-stack (no copy)               tmp%4#0,"loc",updated_value%1#0                                                                                                                                                                                                                   self.loc[Txn.sender][0].baz = arc4.String("modified")                state_mutations/contract.py:47
    app_local_put                                                                                                  //                                                                                                                                                                                                                                                                                                               self.loc[Txn.sender][0].baz = arc4.String("modified")                state_mutations/contract.py:47
    byte "box"                                                                                                     //                                                             "box"                                                                                                                                                                                                                                             self.box                                                             state_mutations/contract.py:48
    box_get                                                                                                        //                                                             {box_get}.0,{box_get}.1                                                                                                                                                                                                                           self.box.value                                                       state_mutations/contract.py:48
                                                                                                                   // virtual: store maybe_exists%4#0 to l-stack (no copy)        maybe_exists%4#0,{box_get}.0                                                                                                                                                                                                                      self.box.value                                                       state_mutations/contract.py:48
                                                                                                                   // virtual: store maybe_value%4#0 to l-stack (no copy)         maybe_value%4#0,maybe_exists%4#0                                                                                                                                                                                                                  self.box.value                                                       state_mutations/contract.py:48
                                                                                                                   // virtual: load maybe_exists%4#0 from l-stack (no copy)       maybe_value%4#0,maybe_exists%4#0                                                                                                                                                                                                                  self.box.value                                                       state_mutations/contract.py:48
    assert // check self.box exists                                                                                //                                                             maybe_value%4#0                                                                                                                                                                                                                                   self.box.value                                                       state_mutations/contract.py:48
    dup                                                                                                            // load maybe_value%4#0 from l-stack (copy)                    maybe_value%4#0,maybe_value%4#0                                                                                                                                                                                                                   self.box.value[0]                                                    state_mutations/contract.py:48
    extract 2 0                                                                                                    //                                                             maybe_value%4#0,{extract}                                                                                                                                                                                                                         self.box.value[0]                                                    state_mutations/contract.py:48
                                                                                                                   // virtual: store array_head_and_tail%2#0 to l-stack (no copy) maybe_value%4#0,array_head_and_tail%2#0                                                                                                                                                                                                           self.box.value[0]                                                    state_mutations/contract.py:48
    dup                                                                                                            // load array_head_and_tail%2#0 from l-stack (copy)            maybe_value%4#0,array_head_and_tail%2#0,array_head_and_tail%2#0                                                                                                                                                                                   self.box.value[0]                                                    state_mutations/contract.py:48
    int 0                                                                                                          //                                                             maybe_value%4#0,array_head_and_tail%2#0,array_head_and_tail%2#0,0                                                                                                                                                                                 self.box.value[0]                                                    state_mutations/contract.py:48
    extract_uint16                                                                                                 //                                                             maybe_value%4#0,array_head_and_tail%2#0,{extract_uint16}                                                                                                                                                                                          self.box.value[0]                                                    state_mutations/contract.py:48
    cover 2                                                                                                        // store item_offset%4#0 to l-stack (no copy)                  item_offset%4#0,maybe_value%4#0,array_head_and_tail%2#0                                                                                                                                                                                           self.box.value[0]                                                    state_mutations/contract.py:48
    uncover 1                                                                                                      // load maybe_value%4#0 from l-stack (no copy)                 item_offset%4#0,array_head_and_tail%2#0,maybe_value%4#0                                                                                                                                                                                           self.box.value[0]                                                    state_mutations/contract.py:48
    int 0                                                                                                          //                                                             item_offset%4#0,array_head_and_tail%2#0,maybe_value%4#0,0                                                                                                                                                                                         self.box.value[0]                                                    state_mutations/contract.py:48
    extract_uint16                                                                                                 //                                                             item_offset%4#0,array_head_and_tail%2#0,{extract_uint16}                                                                                                                                                                                          self.box.value[0]                                                    state_mutations/contract.py:48
                                                                                                                   // virtual: store array_length%2#0 to l-stack (no copy)        item_offset%4#0,array_head_and_tail%2#0,array_length%2#0                                                                                                                                                                                          self.box.value[0]                                                    state_mutations/contract.py:48
                                                                                                                   // virtual: load array_length%2#0 from l-stack (no copy)       item_offset%4#0,array_head_and_tail%2#0,array_length%2#0                                                                                                                                                                                          self.box.value[0]                                                    state_mutations/contract.py:48
    int 1                                                                                                          //                                                             item_offset%4#0,array_head_and_tail%2#0,array_length%2#0,1                                                                                                                                                                                        self.box.value[0]                                                    state_mutations/contract.py:48
    - // on error: Index access is out of bounds                                                                   //                                                             item_offset%4#0,array_head_and_tail%2#0,{-}                                                                                                                                                                                                       self.box.value[0]                                                    state_mutations/contract.py:48
                                                                                                                   // virtual: store has_next%2#0 to l-stack (no copy)            item_offset%4#0,array_head_and_tail%2#0,has_next%2#0                                                                                                                                                                                              self.box.value[0]                                                    state_mutations/contract.py:48
    dig 1                                                                                                          // load array_head_and_tail%2#0 from l-stack (copy)            item_offset%4#0,array_head_and_tail%2#0,has_next%2#0,array_head_and_tail%2#0                                                                                                                                                                      self.box.value[0]                                                    state_mutations/contract.py:48
    len                                                                                                            //                                                             item_offset%4#0,array_head_and_tail%2#0,has_next%2#0,{len}                                                                                                                                                                                        self.box.value[0]                                                    state_mutations/contract.py:48
    cover 1                                                                                                        // store end_of_array%2#0 to l-stack (no copy)                 item_offset%4#0,array_head_and_tail%2#0,end_of_array%2#0,has_next%2#0                                                                                                                                                                             self.box.value[0]                                                    state_mutations/contract.py:48
    dig 2                                                                                                          // load array_head_and_tail%2#0 from l-stack (copy)            item_offset%4#0,array_head_and_tail%2#0,end_of_array%2#0,has_next%2#0,array_head_and_tail%2#0                                                                                                                                                     self.box.value[0]                                                    state_mutations/contract.py:48
    int 2                                                                                                          //                                                             item_offset%4#0,array_head_and_tail%2#0,end_of_array%2#0,has_next%2#0,array_head_and_tail%2#0,2                                                                                                                                                   self.box.value[0]                                                    state_mutations/contract.py:48
    extract_uint16                                                                                                 //                                                             item_offset%4#0,array_head_and_tail%2#0,end_of_array%2#0,has_next%2#0,{extract_uint16}                                                                                                                                                            self.box.value[0]                                                    state_mutations/contract.py:48
                                                                                                                   // virtual: store next_item_offset%2#0 to l-stack (no copy)    item_offset%4#0,array_head_and_tail%2#0,end_of_array%2#0,has_next%2#0,next_item_offset%2#0                                                                                                                                                        self.box.value[0]                                                    state_mutations/contract.py:48
    uncover 2                                                                                                      // load end_of_array%2#0 from l-stack (no copy)                item_offset%4#0,array_head_and_tail%2#0,has_next%2#0,next_item_offset%2#0,end_of_array%2#0                                                                                                                                                        self.box.value[0]                                                    state_mutations/contract.py:48
    uncover 1                                                                                                      // load next_item_offset%2#0 from l-stack (no copy)            item_offset%4#0,array_head_and_tail%2#0,has_next%2#0,end_of_array%2#0,next_item_offset%2#0                                                                                                                                                        self.box.value[0]                                                    state_mutations/contract.py:48
    uncover 2                                                                                                      // load has_next%2#0 from l-stack (no copy)                    item_offset%4#0,array_head_and_tail%2#0,end_of_array%2#0,next_item_offset%2#0,has_next%2#0                                                                                                                                                        self.box.value[0]                                                    state_mutations/contract.py:48
    select                                                                                                         //                                                             item_offset%4#0,array_head_and_tail%2#0,{select}                                                                                                                                                                                                  self.box.value[0]                                                    state_mutations/contract.py:48
                                                                                                                   // virtual: store end_offset%2#0 to l-stack (no copy)          item_offset%4#0,array_head_and_tail%2#0,end_offset%2#0                                                                                                                                                                                            self.box.value[0]                                                    state_mutations/contract.py:48
    uncover 1                                                                                                      // load array_head_and_tail%2#0 from l-stack (no copy)         item_offset%4#0,end_offset%2#0,array_head_and_tail%2#0                                                                                                                                                                                            self.box.value[0]                                                    state_mutations/contract.py:48
    uncover 2                                                                                                      // load item_offset%4#0 from l-stack (no copy)                 end_offset%2#0,array_head_and_tail%2#0,item_offset%4#0                                                                                                                                                                                            self.box.value[0]                                                    state_mutations/contract.py:48
    uncover 2                                                                                                      // load end_offset%2#0 from l-stack (no copy)                  array_head_and_tail%2#0,item_offset%4#0,end_offset%2#0                                                                                                                                                                                            self.box.value[0]                                                    state_mutations/contract.py:48
    substring3                                                                                                     //                                                             {substring3}                                                                                                                                                                                                                                      self.box.value[0]                                                    state_mutations/contract.py:48
                                                                                                                   // virtual: store tmp%5#0 to l-stack (no copy)                 tmp%5#0                                                                                                                                                                                                                                           self.box.value[0]                                                    state_mutations/contract.py:48
    dup                                                                                                            // load tmp%5#0 from l-stack (copy)                            tmp%5#0,tmp%5#0                                                                                                                                                                                                                                   self.box.value[0].baz = arc4.String("modified")                      state_mutations/contract.py:48
    int 8                                                                                                          //                                                             tmp%5#0,tmp%5#0,8                                                                                                                                                                                                                                 self.box.value[0].baz = arc4.String("modified")                      state_mutations/contract.py:48
    extract_uint16                                                                                                 //                                                             tmp%5#0,{extract_uint16}                                                                                                                                                                                                                          self.box.value[0].baz = arc4.String("modified")                      state_mutations/contract.py:48
                                                                                                                   // virtual: store item_offset%5#0 to l-stack (no copy)         tmp%5#0,item_offset%5#0                                                                                                                                                                                                                           self.box.value[0].baz = arc4.String("modified")                      state_mutations/contract.py:48
    uncover 1                                                                                                      // load tmp%5#0 from l-stack (no copy)                         item_offset%5#0,tmp%5#0                                                                                                                                                                                                                           self.box.value[0].baz = arc4.String("modified")                      state_mutations/contract.py:48
    int 0                                                                                                          //                                                             item_offset%5#0,tmp%5#0,0                                                                                                                                                                                                                         self.box.value[0].baz = arc4.String("modified")                      state_mutations/contract.py:48
    uncover 2                                                                                                      // load item_offset%5#0 from l-stack (no copy)                 tmp%5#0,0,item_offset%5#0                                                                                                                                                                                                                         self.box.value[0].baz = arc4.String("modified")                      state_mutations/contract.py:48
    extract3                                                                                                       //                                                             {extract3}                                                                                                                                                                                                                                        self.box.value[0].baz = arc4.String("modified")                      state_mutations/contract.py:48
                                                                                                                   // virtual: store data_up_to_item%2#0 to l-stack (no copy)     data_up_to_item%2#0                                                                                                                                                                                                                               self.box.value[0].baz = arc4.String("modified")                      state_mutations/contract.py:48
                                                                                                                   // virtual: load data_up_to_item%2#0 from l-stack (no copy)    data_up_to_item%2#0                                                                                                                                                                                                                               self.box.value[0].baz = arc4.String("modified")                      state_mutations/contract.py:48
    byte 0x00086d6f646966696564                                                                                    //                                                             data_up_to_item%2#0,0x00086d6f646966696564                                                                                                                                                                                                        arc4.String("modified")                                              state_mutations/contract.py:48
    concat                                                                                                         //                                                             {concat}                                                                                                                                                                                                                                          self.box.value[0].baz = arc4.String("modified")                      state_mutations/contract.py:48
                                                                                                                   // virtual: store updated_data%2#0 to l-stack (no copy)        updated_data%2#0                                                                                                                                                                                                                                  self.box.value[0].baz = arc4.String("modified")                      state_mutations/contract.py:48
    byte "box"                                                                                                     //                                                             updated_data%2#0,"box"                                                                                                                                                                                                                            self.box                                                             state_mutations/contract.py:48
    box_get                                                                                                        //                                                             updated_data%2#0,{box_get}.0,{box_get}.1                                                                                                                                                                                                          self.box.value                                                       state_mutations/contract.py:48
                                                                                                                   // virtual: store maybe_exists%5#0 to l-stack (no copy)        updated_data%2#0,maybe_exists%5#0,{box_get}.0                                                                                                                                                                                                     self.box.value                                                       state_mutations/contract.py:48
                                                                                                                   // virtual: store maybe_value%5#0 to l-stack (no copy)         updated_data%2#0,maybe_value%5#0,maybe_exists%5#0                                                                                                                                                                                                 self.box.value                                                       state_mutations/contract.py:48
                                                                                                                   // virtual: load maybe_exists%5#0 from l-stack (no copy)       updated_data%2#0,maybe_value%5#0,maybe_exists%5#0                                                                                                                                                                                                 self.box.value                                                       state_mutations/contract.py:48
    assert // check self.box exists                                                                                //                                                             updated_data%2#0,maybe_value%5#0                                                                                                                                                                                                                  self.box.value                                                       state_mutations/contract.py:48
                                                                                                                   // virtual: load maybe_value%5#0 from l-stack (no copy)        updated_data%2#0,maybe_value%5#0                                                                                                                                                                                                                  self.box.value[0].baz = arc4.String("modified")                      state_mutations/contract.py:48
    uncover 1                                                                                                      // load updated_data%2#0 from l-stack (no copy)                maybe_value%5#0,updated_data%2#0                                                                                                                                                                                                                  self.box.value[0].baz = arc4.String("modified")                      state_mutations/contract.py:48
    int 0                                                                                                          //                                                             maybe_value%5#0,updated_data%2#0,0                                                                                                                                                                                                                0                                                                    state_mutations/contract.py:48
    callsub dynamic_array_replace_dynamic_element                                                                  //                                                             {dynamic_array_replace_dynamic_element}                                                                                                                                                                                                           self.box.value[0].baz = arc4.String("modified")                      state_mutations/contract.py:48
                                                                                                                   // virtual: store updated_value%2#0 to l-stack (no copy)       updated_value%2#0                                                                                                                                                                                                                                 self.box.value[0].baz = arc4.String("modified")                      state_mutations/contract.py:48
    byte "box"                                                                                                     //                                                             updated_value%2#0,"box"                                                                                                                                                                                                                           self.box                                                             state_mutations/contract.py:48
    box_del                                                                                                        //                                                             updated_value%2#0,{box_del}                                                                                                                                                                                                                       self.box.value[0].baz = arc4.String("modified")                      state_mutations/contract.py:48
    pop                                                                                                            //                                                             updated_value%2#0
    byte "box"                                                                                                     //                                                             updated_value%2#0,"box"                                                                                                                                                                                                                           self.box                                                             state_mutations/contract.py:48
    uncover 1                                                                                                      // load updated_value%2#0 from l-stack (no copy)               "box",updated_value%2#0                                                                                                                                                                                                                           self.box.value[0].baz = arc4.String("modified")                      state_mutations/contract.py:48
    box_put                                                                                                        //                                                                                                                                                                                                                                                                                                               self.box.value[0].baz = arc4.String("modified")                      state_mutations/contract.py:48
    txn Sender                                                                                                     //                                                             {txn}                                                                                                                                                                                                                                             Txn.sender                                                           state_mutations/contract.py:49
                                                                                                                   // virtual: store tmp%6#0 to l-stack (no copy)                 tmp%6#0                                                                                                                                                                                                                                           Txn.sender                                                           state_mutations/contract.py:49
    byte "map"                                                                                                     //                                                             tmp%6#0,"map"                                                                                                                                                                                                                                     self.map                                                             state_mutations/contract.py:49
    uncover 1                                                                                                      // load tmp%6#0 from l-stack (no copy)                         "map",tmp%6#0                                                                                                                                                                                                                                     self.map[Txn.sender]                                                 state_mutations/contract.py:49
    concat                                                                                                         //                                                             {concat}                                                                                                                                                                                                                                          self.map[Txn.sender]                                                 state_mutations/contract.py:49
                                                                                                                   // virtual: store tmp%7#0 to l-stack (no copy)                 tmp%7#0                                                                                                                                                                                                                                           self.map[Txn.sender]                                                 state_mutations/contract.py:49
                                                                                                                   // virtual: load tmp%7#0 from l-stack (no copy)                tmp%7#0                                                                                                                                                                                                                                           self.map[Txn.sender]                                                 state_mutations/contract.py:49
    box_get                                                                                                        //                                                             {box_get}.0,{box_get}.1                                                                                                                                                                                                                           self.map[Txn.sender]                                                 state_mutations/contract.py:49
                                                                                                                   // virtual: store maybe_exists%6#0 to l-stack (no copy)        maybe_exists%6#0,{box_get}.0                                                                                                                                                                                                                      self.map[Txn.sender]                                                 state_mutations/contract.py:49
                                                                                                                   // virtual: store maybe_value%6#0 to l-stack (no copy)         maybe_value%6#0,maybe_exists%6#0                                                                                                                                                                                                                  self.map[Txn.sender]                                                 state_mutations/contract.py:49
                                                                                                                   // virtual: load maybe_exists%6#0 from l-stack (no copy)       maybe_value%6#0,maybe_exists%6#0                                                                                                                                                                                                                  self.map[Txn.sender]                                                 state_mutations/contract.py:49
    assert // check self.map entry exists                                                                          //                                                             maybe_value%6#0                                                                                                                                                                                                                                   self.map[Txn.sender]                                                 state_mutations/contract.py:49
    dup                                                                                                            // load maybe_value%6#0 from l-stack (copy)                    maybe_value%6#0,maybe_value%6#0                                                                                                                                                                                                                   self.map[Txn.sender][0]                                              state_mutations/contract.py:49
    extract 2 0                                                                                                    //                                                             maybe_value%6#0,{extract}                                                                                                                                                                                                                         self.map[Txn.sender][0]                                              state_mutations/contract.py:49
                                                                                                                   // virtual: store array_head_and_tail%3#0 to l-stack (no copy) maybe_value%6#0,array_head_and_tail%3#0                                                                                                                                                                                                           self.map[Txn.sender][0]                                              state_mutations/contract.py:49
    dup                                                                                                            // load array_head_and_tail%3#0 from l-stack (copy)            maybe_value%6#0,array_head_and_tail%3#0,array_head_and_tail%3#0                                                                                                                                                                                   self.map[Txn.sender][0]                                              state_mutations/contract.py:49
    int 0                                                                                                          //                                                             maybe_value%6#0,array_head_and_tail%3#0,array_head_and_tail%3#0,0                                                                                                                                                                                 self.map[Txn.sender][0]                                              state_mutations/contract.py:49
    extract_uint16                                                                                                 //                                                             maybe_value%6#0,array_head_and_tail%3#0,{extract_uint16}                                                                                                                                                                                          self.map[Txn.sender][0]                                              state_mutations/contract.py:49
    cover 2                                                                                                        // store item_offset%6#0 to l-stack (no copy)                  item_offset%6#0,maybe_value%6#0,array_head_and_tail%3#0                                                                                                                                                                                           self.map[Txn.sender][0]                                              state_mutations/contract.py:49
    uncover 1                                                                                                      // load maybe_value%6#0 from l-stack (no copy)                 item_offset%6#0,array_head_and_tail%3#0,maybe_value%6#0                                                                                                                                                                                           self.map[Txn.sender][0]                                              state_mutations/contract.py:49
    int 0                                                                                                          //                                                             item_offset%6#0,array_head_and_tail%3#0,maybe_value%6#0,0                                                                                                                                                                                         self.map[Txn.sender][0]                                              state_mutations/contract.py:49
    extract_uint16                                                                                                 //                                                             item_offset%6#0,array_head_and_tail%3#0,{extract_uint16}                                                                                                                                                                                          self.map[Txn.sender][0]                                              state_mutations/contract.py:49
                                                                                                                   // virtual: store array_length%3#0 to l-stack (no copy)        item_offset%6#0,array_head_and_tail%3#0,array_length%3#0                                                                                                                                                                                          self.map[Txn.sender][0]                                              state_mutations/contract.py:49
                                                                                                                   // virtual: load array_length%3#0 from l-stack (no copy)       item_offset%6#0,array_head_and_tail%3#0,array_length%3#0                                                                                                                                                                                          self.map[Txn.sender][0]                                              state_mutations/contract.py:49
    int 1                                                                                                          //                                                             item_offset%6#0,array_head_and_tail%3#0,array_length%3#0,1                                                                                                                                                                                        self.map[Txn.sender][0]                                              state_mutations/contract.py:49
    - // on error: Index access is out of bounds                                                                   //                                                             item_offset%6#0,array_head_and_tail%3#0,{-}                                                                                                                                                                                                       self.map[Txn.sender][0]                                              state_mutations/contract.py:49
                                                                                                                   // virtual: store has_next%3#0 to l-stack (no copy)            item_offset%6#0,array_head_and_tail%3#0,has_next%3#0                                                                                                                                                                                              self.map[Txn.sender][0]                                              state_mutations/contract.py:49
    dig 1                                                                                                          // load array_head_and_tail%3#0 from l-stack (copy)            item_offset%6#0,array_head_and_tail%3#0,has_next%3#0,array_head_and_tail%3#0                                                                                                                                                                      self.map[Txn.sender][0]                                              state_mutations/contract.py:49
    len                                                                                                            //                                                             item_offset%6#0,array_head_and_tail%3#0,has_next%3#0,{len}                                                                                                                                                                                        self.map[Txn.sender][0]                                              state_mutations/contract.py:49
    cover 1                                                                                                        // store end_of_array%3#0 to l-stack (no copy)                 item_offset%6#0,array_head_and_tail%3#0,end_of_array%3#0,has_next%3#0                                                                                                                                                                             self.map[Txn.sender][0]                                              state_mutations/contract.py:49
    dig 2                                                                                                          // load array_head_and_tail%3#0 from l-stack (copy)            item_offset%6#0,array_head_and_tail%3#0,end_of_array%3#0,has_next%3#0,array_head_and_tail%3#0                                                                                                                                                     self.map[Txn.sender][0]                                              state_mutations/contract.py:49
    int 2                                                                                                          //                                                             item_offset%6#0,array_head_and_tail%3#0,end_of_array%3#0,has_next%3#0,array_head_and_tail%3#0,2                                                                                                                                                   self.map[Txn.sender][0]                                              state_mutations/contract.py:49
    extract_uint16                                                                                                 //                                                             item_offset%6#0,array_head_and_tail%3#0,end_of_array%3#0,has_next%3#0,{extract_uint16}                                                                                                                                                            self.map[Txn.sender][0]                                              state_mutations/contract.py:49
                                                                                                                   // virtual: store next_item_offset%3#0 to l-stack (no copy)    item_offset%6#0,array_head_and_tail%3#0,end_of_array%3#0,has_next%3#0,next_item_offset%3#0                                                                                                                                                        self.map[Txn.sender][0]                                              state_mutations/contract.py:49
    uncover 2                                                                                                      // load end_of_array%3#0 from l-stack (no copy)                item_offset%6#0,array_head_and_tail%3#0,has_next%3#0,next_item_offset%3#0,end_of_array%3#0                                                                                                                                                        self.map[Txn.sender][0]                                              state_mutations/contract.py:49
    uncover 1                                                                                                      // load next_item_offset%3#0 from l-stack (no copy)            item_offset%6#0,array_head_and_tail%3#0,has_next%3#0,end_of_array%3#0,next_item_offset%3#0                                                                                                                                                        self.map[Txn.sender][0]                                              state_mutations/contract.py:49
    uncover 2                                                                                                      // load has_next%3#0 from l-stack (no copy)                    item_offset%6#0,array_head_and_tail%3#0,end_of_array%3#0,next_item_offset%3#0,has_next%3#0                                                                                                                                                        self.map[Txn.sender][0]                                              state_mutations/contract.py:49
    select                                                                                                         //                                                             item_offset%6#0,array_head_and_tail%3#0,{select}                                                                                                                                                                                                  self.map[Txn.sender][0]                                              state_mutations/contract.py:49
                                                                                                                   // virtual: store end_offset%3#0 to l-stack (no copy)          item_offset%6#0,array_head_and_tail%3#0,end_offset%3#0                                                                                                                                                                                            self.map[Txn.sender][0]                                              state_mutations/contract.py:49
    uncover 1                                                                                                      // load array_head_and_tail%3#0 from l-stack (no copy)         item_offset%6#0,end_offset%3#0,array_head_and_tail%3#0                                                                                                                                                                                            self.map[Txn.sender][0]                                              state_mutations/contract.py:49
    uncover 2                                                                                                      // load item_offset%6#0 from l-stack (no copy)                 end_offset%3#0,array_head_and_tail%3#0,item_offset%6#0                                                                                                                                                                                            self.map[Txn.sender][0]                                              state_mutations/contract.py:49
    uncover 2                                                                                                      // load end_offset%3#0 from l-stack (no copy)                  array_head_and_tail%3#0,item_offset%6#0,end_offset%3#0                                                                                                                                                                                            self.map[Txn.sender][0]                                              state_mutations/contract.py:49
    substring3                                                                                                     //                                                             {substring3}                                                                                                                                                                                                                                      self.map[Txn.sender][0]                                              state_mutations/contract.py:49
                                                                                                                   // virtual: store tmp%8#0 to l-stack (no copy)                 tmp%8#0                                                                                                                                                                                                                                           self.map[Txn.sender][0]                                              state_mutations/contract.py:49
    dup                                                                                                            // load tmp%8#0 from l-stack (copy)                            tmp%8#0,tmp%8#0                                                                                                                                                                                                                                   self.map[Txn.sender][0].baz = arc4.String("modified")                state_mutations/contract.py:49
    int 8                                                                                                          //                                                             tmp%8#0,tmp%8#0,8                                                                                                                                                                                                                                 self.map[Txn.sender][0].baz = arc4.String("modified")                state_mutations/contract.py:49
    extract_uint16                                                                                                 //                                                             tmp%8#0,{extract_uint16}                                                                                                                                                                                                                          self.map[Txn.sender][0].baz = arc4.String("modified")                state_mutations/contract.py:49
                                                                                                                   // virtual: store item_offset%7#0 to l-stack (no copy)         tmp%8#0,item_offset%7#0                                                                                                                                                                                                                           self.map[Txn.sender][0].baz = arc4.String("modified")                state_mutations/contract.py:49
    uncover 1                                                                                                      // load tmp%8#0 from l-stack (no copy)                         item_offset%7#0,tmp%8#0                                                                                                                                                                                                                           self.map[Txn.sender][0].baz = arc4.String("modified")                state_mutations/contract.py:49
    int 0                                                                                                          //                                                             item_offset%7#0,tmp%8#0,0                                                                                                                                                                                                                         self.map[Txn.sender][0].baz = arc4.String("modified")                state_mutations/contract.py:49
    uncover 2                                                                                                      // load item_offset%7#0 from l-stack (no copy)                 tmp%8#0,0,item_offset%7#0                                                                                                                                                                                                                         self.map[Txn.sender][0].baz = arc4.String("modified")                state_mutations/contract.py:49
    extract3                                                                                                       //                                                             {extract3}                                                                                                                                                                                                                                        self.map[Txn.sender][0].baz = arc4.String("modified")                state_mutations/contract.py:49
                                                                                                                   // virtual: store data_up_to_item%3#0 to l-stack (no copy)     data_up_to_item%3#0                                                                                                                                                                                                                               self.map[Txn.sender][0].baz = arc4.String("modified")                state_mutations/contract.py:49
                                                                                                                   // virtual: load data_up_to_item%3#0 from l-stack (no copy)    data_up_to_item%3#0                                                                                                                                                                                                                               self.map[Txn.sender][0].baz = arc4.String("modified")                state_mutations/contract.py:49
    byte 0x00086d6f646966696564                                                                                    //                                                             data_up_to_item%3#0,0x00086d6f646966696564                                                                                                                                                                                                        arc4.String("modified")                                              state_mutations/contract.py:49
    concat                                                                                                         //                                                             {concat}                                                                                                                                                                                                                                          self.map[Txn.sender][0].baz = arc4.String("modified")                state_mutations/contract.py:49
                                                                                                                   // virtual: store updated_data%3#0 to l-stack (no copy)        updated_data%3#0                                                                                                                                                                                                                                  self.map[Txn.sender][0].baz = arc4.String("modified")                state_mutations/contract.py:49
    txn Sender                                                                                                     //                                                             updated_data%3#0,{txn}                                                                                                                                                                                                                            Txn.sender                                                           state_mutations/contract.py:49
                                                                                                                   // virtual: store tmp%9#0 to l-stack (no copy)                 updated_data%3#0,tmp%9#0                                                                                                                                                                                                                          Txn.sender                                                           state_mutations/contract.py:49
    byte "map"                                                                                                     //                                                             updated_data%3#0,tmp%9#0,"map"                                                                                                                                                                                                                    self.map                                                             state_mutations/contract.py:49
    uncover 1                                                                                                      // load tmp%9#0 from l-stack (no copy)                         updated_data%3#0,"map",tmp%9#0                                                                                                                                                                                                                    self.map[Txn.sender]                                                 state_mutations/contract.py:49
    concat                                                                                                         //                                                             updated_data%3#0,{concat}                                                                                                                                                                                                                         self.map[Txn.sender]                                                 state_mutations/contract.py:49
                                                                                                                   // virtual: store tmp%10#0 to l-stack (no copy)                updated_data%3#0,tmp%10#0                                                                                                                                                                                                                         self.map[Txn.sender]                                                 state_mutations/contract.py:49
                                                                                                                   // virtual: load tmp%10#0 from l-stack (no copy)               updated_data%3#0,tmp%10#0                                                                                                                                                                                                                         self.map[Txn.sender]                                                 state_mutations/contract.py:49
    box_get                                                                                                        //                                                             updated_data%3#0,{box_get}.0,{box_get}.1                                                                                                                                                                                                          self.map[Txn.sender]                                                 state_mutations/contract.py:49
                                                                                                                   // virtual: store maybe_exists%7#0 to l-stack (no copy)        updated_data%3#0,maybe_exists%7#0,{box_get}.0                                                                                                                                                                                                     self.map[Txn.sender]                                                 state_mutations/contract.py:49
                                                                                                                   // virtual: store maybe_value%7#0 to l-stack (no copy)         updated_data%3#0,maybe_value%7#0,maybe_exists%7#0                                                                                                                                                                                                 self.map[Txn.sender]                                                 state_mutations/contract.py:49
                                                                                                                   // virtual: load maybe_exists%7#0 from l-stack (no copy)       updated_data%3#0,maybe_value%7#0,maybe_exists%7#0                                                                                                                                                                                                 self.map[Txn.sender]                                                 state_mutations/contract.py:49
    assert // check self.map entry exists                                                                          //                                                             updated_data%3#0,maybe_value%7#0                                                                                                                                                                                                                  self.map[Txn.sender]                                                 state_mutations/contract.py:49
                                                                                                                   // virtual: load maybe_value%7#0 from l-stack (no copy)        updated_data%3#0,maybe_value%7#0                                                                                                                                                                                                                  self.map[Txn.sender][0].baz = arc4.String("modified")                state_mutations/contract.py:49
    uncover 1                                                                                                      // load updated_data%3#0 from l-stack (no copy)                maybe_value%7#0,updated_data%3#0                                                                                                                                                                                                                  self.map[Txn.sender][0].baz = arc4.String("modified")                state_mutations/contract.py:49
    int 0                                                                                                          //                                                             maybe_value%7#0,updated_data%3#0,0                                                                                                                                                                                                                0                                                                    state_mutations/contract.py:49
    callsub dynamic_array_replace_dynamic_element                                                                  //                                                             {dynamic_array_replace_dynamic_element}                                                                                                                                                                                                           self.map[Txn.sender][0].baz = arc4.String("modified")                state_mutations/contract.py:49
                                                                                                                   // virtual: store updated_value%3#0 to l-stack (no copy)       updated_value%3#0                                                                                                                                                                                                                                 self.map[Txn.sender][0].baz = arc4.String("modified")                state_mutations/contract.py:49
    txn Sender                                                                                                     //                                                             updated_value%3#0,{txn}                                                                                                                                                                                                                           Txn.sender                                                           state_mutations/contract.py:49
                                                                                                                   // virtual: store tmp%11#0 to l-stack (no copy)                updated_value%3#0,tmp%11#0                                                                                                                                                                                                                        Txn.sender                                                           state_mutations/contract.py:49
    byte "map"                                                                                                     //                                                             updated_value%3#0,tmp%11#0,"map"                                                                                                                                                                                                                  self.map                                                             state_mutations/contract.py:49
    uncover 1                                                                                                      // load tmp%11#0 from l-stack (no copy)                        updated_value%3#0,"map",tmp%11#0                                                                                                                                                                                                                  self.map[Txn.sender]                                                 state_mutations/contract.py:49
    concat                                                                                                         //                                                             updated_value%3#0,{concat}                                                                                                                                                                                                                        self.map[Txn.sender]                                                 state_mutations/contract.py:49
                                                                                                                   // virtual: store tmp%12#0 to l-stack (no copy)                updated_value%3#0,tmp%12#0                                                                                                                                                                                                                        self.map[Txn.sender]                                                 state_mutations/contract.py:49
    dup                                                                                                            // load tmp%12#0 from l-stack (copy)                           updated_value%3#0,tmp%12#0,tmp%12#0                                                                                                                                                                                                               self.map[Txn.sender][0].baz = arc4.String("modified")                state_mutations/contract.py:49
    box_del                                                                                                        //                                                             updated_value%3#0,tmp%12#0,{box_del}                                                                                                                                                                                                              self.map[Txn.sender][0].baz = arc4.String("modified")                state_mutations/contract.py:49
    pop                                                                                                            //                                                             updated_value%3#0,tmp%12#0
                                                                                                                   // virtual: load tmp%12#0 from l-stack (no copy)               updated_value%3#0,tmp%12#0                                                                                                                                                                                                                        self.map[Txn.sender][0].baz = arc4.String("modified")                state_mutations/contract.py:49
    uncover 1                                                                                                      // load updated_value%3#0 from l-stack (no copy)               tmp%12#0,updated_value%3#0                                                                                                                                                                                                                        self.map[Txn.sender][0].baz = arc4.String("modified")                state_mutations/contract.py:49
    box_put                                                                                                        //                                                                                                                                                                                                                                                                                                               self.map[Txn.sender][0].baz = arc4.String("modified")                state_mutations/contract.py:49
    retsub                                                                                                         //


// test_cases.state_mutations.contract.Contract.get() -> bytes:
get:
    proto 0 1                                                                                                      //                                                                                                                                                                                                                                                                                                               @arc4.abimethod\ndef get(self) -> MyArray:                           state_mutations/contract.py:51-52

get_block@0:
    int 0                                                                                                          //                                                             0                                                                                                                                                                                                                                                 self.glob.value                                                      state_mutations/contract.py:53
    byte "glob"                                                                                                    //                                                             0,"glob"                                                                                                                                                                                                                                          self.glob                                                            state_mutations/contract.py:53
    app_global_get_ex                                                                                              //                                                             {app_global_get_ex}.0,{app_global_get_ex}.1                                                                                                                                                                                                       self.glob.value                                                      state_mutations/contract.py:53
                                                                                                                   // virtual: store maybe_exists%0#0 to l-stack (no copy)        maybe_exists%0#0,{app_global_get_ex}.0                                                                                                                                                                                                            self.glob.value                                                      state_mutations/contract.py:53
                                                                                                                   // virtual: store a1#0 to l-stack (no copy)                    a1#0,maybe_exists%0#0                                                                                                                                                                                                                             self.glob.value                                                      state_mutations/contract.py:53
                                                                                                                   // virtual: load maybe_exists%0#0 from l-stack (no copy)       a1#0,maybe_exists%0#0                                                                                                                                                                                                                             self.glob.value                                                      state_mutations/contract.py:53
    assert // check self.glob exists                                                                               //                                                             a1#0                                                                                                                                                                                                                                              self.glob.value                                                      state_mutations/contract.py:53
    txn Sender                                                                                                     //                                                             a1#0,{txn}                                                                                                                                                                                                                                        Txn.sender                                                           state_mutations/contract.py:54
                                                                                                                   // virtual: store tmp%0#0 to l-stack (no copy)                 a1#0,tmp%0#0                                                                                                                                                                                                                                      Txn.sender                                                           state_mutations/contract.py:54
                                                                                                                   // virtual: load tmp%0#0 from l-stack (no copy)                a1#0,tmp%0#0                                                                                                                                                                                                                                      self.loc[Txn.sender]                                                 state_mutations/contract.py:54
    int 0                                                                                                          //                                                             a1#0,tmp%0#0,0                                                                                                                                                                                                                                    self.loc[Txn.sender]                                                 state_mutations/contract.py:54
    byte "loc"                                                                                                     //                                                             a1#0,tmp%0#0,0,"loc"                                                                                                                                                                                                                              self.loc                                                             state_mutations/contract.py:54
    app_local_get_ex                                                                                               //                                                             a1#0,{app_local_get_ex}.0,{app_local_get_ex}.1                                                                                                                                                                                                    self.loc[Txn.sender]                                                 state_mutations/contract.py:54
                                                                                                                   // virtual: store maybe_exists%1#0 to l-stack (no copy)        a1#0,maybe_exists%1#0,{app_local_get_ex}.0                                                                                                                                                                                                        self.loc[Txn.sender]                                                 state_mutations/contract.py:54
                                                                                                                   // virtual: store a2#0 to l-stack (no copy)                    a1#0,a2#0,maybe_exists%1#0                                                                                                                                                                                                                        self.loc[Txn.sender]                                                 state_mutations/contract.py:54
                                                                                                                   // virtual: load maybe_exists%1#0 from l-stack (no copy)       a1#0,a2#0,maybe_exists%1#0                                                                                                                                                                                                                        self.loc[Txn.sender]                                                 state_mutations/contract.py:54
    assert // check self.loc exists for account                                                                    //                                                             a1#0,a2#0                                                                                                                                                                                                                                         self.loc[Txn.sender]                                                 state_mutations/contract.py:54
    byte "box"                                                                                                     //                                                             a1#0,a2#0,"box"                                                                                                                                                                                                                                   self.box                                                             state_mutations/contract.py:55
    box_get                                                                                                        //                                                             a1#0,a2#0,{box_get}.0,{box_get}.1                                                                                                                                                                                                                 self.box.value                                                       state_mutations/contract.py:55
    cover 1                                                                                                        // store maybe_exists%2#0 to l-stack (no copy)                 a1#0,a2#0,maybe_exists%2#0,{box_get}.0                                                                                                                                                                                                            self.box.value                                                       state_mutations/contract.py:55
    cover 2                                                                                                        // store a3#0 to l-stack (no copy)                             a1#0,a3#0,a2#0,maybe_exists%2#0                                                                                                                                                                                                                   self.box.value                                                       state_mutations/contract.py:55
                                                                                                                   // virtual: load maybe_exists%2#0 from l-stack (no copy)       a1#0,a3#0,a2#0,maybe_exists%2#0                                                                                                                                                                                                                   self.box.value                                                       state_mutations/contract.py:55
    assert // check self.box exists                                                                                //                                                             a1#0,a3#0,a2#0                                                                                                                                                                                                                                    self.box.value                                                       state_mutations/contract.py:55
    txn Sender                                                                                                     //                                                             a1#0,a3#0,a2#0,{txn}                                                                                                                                                                                                                              Txn.sender                                                           state_mutations/contract.py:56
                                                                                                                   // virtual: store tmp%1#0 to l-stack (no copy)                 a1#0,a3#0,a2#0,tmp%1#0                                                                                                                                                                                                                            Txn.sender                                                           state_mutations/contract.py:56
    byte "map"                                                                                                     //                                                             a1#0,a3#0,a2#0,tmp%1#0,"map"                                                                                                                                                                                                                      self.map                                                             state_mutations/contract.py:56
    uncover 1                                                                                                      // load tmp%1#0 from l-stack (no copy)                         a1#0,a3#0,a2#0,"map",tmp%1#0                                                                                                                                                                                                                      self.map[Txn.sender]                                                 state_mutations/contract.py:56
    concat                                                                                                         //                                                             a1#0,a3#0,a2#0,{concat}                                                                                                                                                                                                                           self.map[Txn.sender]                                                 state_mutations/contract.py:56
                                                                                                                   // virtual: store tmp%2#0 to l-stack (no copy)                 a1#0,a3#0,a2#0,tmp%2#0                                                                                                                                                                                                                            self.map[Txn.sender]                                                 state_mutations/contract.py:56
                                                                                                                   // virtual: load tmp%2#0 from l-stack (no copy)                a1#0,a3#0,a2#0,tmp%2#0                                                                                                                                                                                                                            self.map[Txn.sender]                                                 state_mutations/contract.py:56
    box_get                                                                                                        //                                                             a1#0,a3#0,a2#0,{box_get}.0,{box_get}.1                                                                                                                                                                                                            self.map[Txn.sender]                                                 state_mutations/contract.py:56
                                                                                                                   // virtual: store maybe_exists%3#0 to l-stack (no copy)        a1#0,a3#0,a2#0,maybe_exists%3#0,{box_get}.0                                                                                                                                                                                                       self.map[Txn.sender]                                                 state_mutations/contract.py:56
                                                                                                                   // virtual: store a4#0 to l-stack (no copy)                    a1#0,a3#0,a2#0,a4#0,maybe_exists%3#0                                                                                                                                                                                                              self.map[Txn.sender]                                                 state_mutations/contract.py:56
                                                                                                                   // virtual: load maybe_exists%3#0 from l-stack (no copy)       a1#0,a3#0,a2#0,a4#0,maybe_exists%3#0                                                                                                                                                                                                              self.map[Txn.sender]                                                 state_mutations/contract.py:56
    assert // check self.map entry exists                                                                          //                                                             a1#0,a3#0,a2#0,a4#0                                                                                                                                                                                                                               self.map[Txn.sender]                                                 state_mutations/contract.py:56
    dig 3                                                                                                          // load a1#0 from l-stack (copy)                               a1#0,a3#0,a2#0,a4#0,a1#0                                                                                                                                                                                                                          a1 == a2, "expected local == global"                                 state_mutations/contract.py:58
    uncover 2                                                                                                      // load a2#0 from l-stack (no copy)                            a1#0,a3#0,a4#0,a1#0,a2#0                                                                                                                                                                                                                          a1 == a2, "expected local == global"                                 state_mutations/contract.py:58
    ==                                                                                                             //                                                             a1#0,a3#0,a4#0,{==}                                                                                                                                                                                                                               a1 == a2, "expected local == global"                                 state_mutations/contract.py:58
                                                                                                                   // virtual: store tmp%3#0 to l-stack (no copy)                 a1#0,a3#0,a4#0,tmp%3#0                                                                                                                                                                                                                            a1 == a2, "expected local == global"                                 state_mutations/contract.py:58
                                                                                                                   // virtual: load tmp%3#0 from l-stack (no copy)                a1#0,a3#0,a4#0,tmp%3#0                                                                                                                                                                                                                            assert a1 == a2, "expected local == global"                          state_mutations/contract.py:58
    assert // expected local == global                                                                             //                                                             a1#0,a3#0,a4#0                                                                                                                                                                                                                                    assert a1 == a2, "expected local == global"                          state_mutations/contract.py:58
    dig 2                                                                                                          // load a1#0 from l-stack (copy)                               a1#0,a3#0,a4#0,a1#0                                                                                                                                                                                                                               a1 == a3, "expected box == global"                                   state_mutations/contract.py:59
    uncover 2                                                                                                      // load a3#0 from l-stack (no copy)                            a1#0,a4#0,a1#0,a3#0                                                                                                                                                                                                                               a1 == a3, "expected box == global"                                   state_mutations/contract.py:59
    ==                                                                                                             //                                                             a1#0,a4#0,{==}                                                                                                                                                                                                                                    a1 == a3, "expected box == global"                                   state_mutations/contract.py:59
                                                                                                                   // virtual: store tmp%4#0 to l-stack (no copy)                 a1#0,a4#0,tmp%4#0                                                                                                                                                                                                                                 a1 == a3, "expected box == global"                                   state_mutations/contract.py:59
                                                                                                                   // virtual: load tmp%4#0 from l-stack (no copy)                a1#0,a4#0,tmp%4#0                                                                                                                                                                                                                                 assert a1 == a3, "expected box == global"                            state_mutations/contract.py:59
    assert // expected box == global                                                                               //                                                             a1#0,a4#0                                                                                                                                                                                                                                         assert a1 == a3, "expected box == global"                            state_mutations/contract.py:59
    dig 1                                                                                                          // load a1#0 from l-stack (copy)                               a1#0,a4#0,a1#0                                                                                                                                                                                                                                    a1 == a4, "expected map == global"                                   state_mutations/contract.py:60
    uncover 1                                                                                                      // load a4#0 from l-stack (no copy)                            a1#0,a1#0,a4#0                                                                                                                                                                                                                                    a1 == a4, "expected map == global"                                   state_mutations/contract.py:60
    ==                                                                                                             //                                                             a1#0,{==}                                                                                                                                                                                                                                         a1 == a4, "expected map == global"                                   state_mutations/contract.py:60
                                                                                                                   // virtual: store tmp%5#0 to l-stack (no copy)                 a1#0,tmp%5#0                                                                                                                                                                                                                                      a1 == a4, "expected map == global"                                   state_mutations/contract.py:60
                                                                                                                   // virtual: load tmp%5#0 from l-stack (no copy)                a1#0,tmp%5#0                                                                                                                                                                                                                                      assert a1 == a4, "expected map == global"                            state_mutations/contract.py:60
    assert // expected map == global                                                                               //                                                             a1#0                                                                                                                                                                                                                                              assert a1 == a4, "expected map == global"                            state_mutations/contract.py:60
                                                                                                                   // virtual: load a1#0 from l-stack (no copy)                   a1#0                                                                                                                                                                                                                                              return a1                                                            state_mutations/contract.py:61
    retsub                                                                                                         //                                                             a1#0                                                                                                                                                                                                                                              return a1                                                            state_mutations/contract.py:61


// test_cases.state_mutations.contract.Contract.opt_in() -> void:
opt_in:
    proto 0 0                                                                                                      //                                                                                                                                                                                                                                                                                                               @arc4.baremethod(allow_actions=["OptIn"])\ndef opt_in(self) -> None: state_mutations/contract.py:29-30

opt_in_block@0:
    byte "glob"                                                                                                    //                                                             "glob"                                                                                                                                                                                                                                            self.glob                                                            state_mutations/contract.py:31
    byte 0x0000                                                                                                    //                                                             "glob",0x0000                                                                                                                                                                                                                                     MyArray()                                                            state_mutations/contract.py:31
    app_global_put                                                                                                 //                                                                                                                                                                                                                                                                                                               self.glob.value = MyArray()                                          state_mutations/contract.py:31
    byte "box"                                                                                                     //                                                             "box"                                                                                                                                                                                                                                             self.box                                                             state_mutations/contract.py:32
    box_del                                                                                                        //                                                             {box_del}                                                                                                                                                                                                                                         self.box.value = MyArray()                                           state_mutations/contract.py:32
    pop                                                                                                            //
    byte "box"                                                                                                     //                                                             "box"                                                                                                                                                                                                                                             self.box                                                             state_mutations/contract.py:32
    byte 0x0000                                                                                                    //                                                             "box",0x0000                                                                                                                                                                                                                                      MyArray()                                                            state_mutations/contract.py:32
    box_put                                                                                                        //                                                                                                                                                                                                                                                                                                               self.box.value = MyArray()                                           state_mutations/contract.py:32
    txn Sender                                                                                                     //                                                             {txn}                                                                                                                                                                                                                                             Txn.sender                                                           state_mutations/contract.py:33
                                                                                                                   // virtual: store tmp%0#0 to l-stack (no copy)                 tmp%0#0                                                                                                                                                                                                                                           Txn.sender                                                           state_mutations/contract.py:33
                                                                                                                   // virtual: load tmp%0#0 from l-stack (no copy)                tmp%0#0                                                                                                                                                                                                                                           self.loc[Txn.sender] = MyArray()                                     state_mutations/contract.py:33
    byte "loc"                                                                                                     //                                                             tmp%0#0,"loc"                                                                                                                                                                                                                                     self.loc                                                             state_mutations/contract.py:33
    byte 0x0000                                                                                                    //                                                             tmp%0#0,"loc",0x0000                                                                                                                                                                                                                              MyArray()                                                            state_mutations/contract.py:33
    app_local_put                                                                                                  //                                                                                                                                                                                                                                                                                                               self.loc[Txn.sender] = MyArray()                                     state_mutations/contract.py:33
    txn Sender                                                                                                     //                                                             {txn}                                                                                                                                                                                                                                             Txn.sender                                                           state_mutations/contract.py:34
                                                                                                                   // virtual: store tmp%1#0 to l-stack (no copy)                 tmp%1#0                                                                                                                                                                                                                                           Txn.sender                                                           state_mutations/contract.py:34
    byte "map"                                                                                                     //                                                             tmp%1#0,"map"                                                                                                                                                                                                                                     self.map                                                             state_mutations/contract.py:34
    uncover 1                                                                                                      // load tmp%1#0 from l-stack (no copy)                         "map",tmp%1#0                                                                                                                                                                                                                                     self.map[Txn.sender]                                                 state_mutations/contract.py:34
    concat                                                                                                         //                                                             {concat}                                                                                                                                                                                                                                          self.map[Txn.sender]                                                 state_mutations/contract.py:34
                                                                                                                   // virtual: store tmp%2#0 to l-stack (no copy)                 tmp%2#0                                                                                                                                                                                                                                           self.map[Txn.sender]                                                 state_mutations/contract.py:34
    dup                                                                                                            // load tmp%2#0 from l-stack (copy)                            tmp%2#0,tmp%2#0                                                                                                                                                                                                                                   self.map[Txn.sender] = MyArray()                                     state_mutations/contract.py:34
    box_del                                                                                                        //                                                             tmp%2#0,{box_del}                                                                                                                                                                                                                                 self.map[Txn.sender] = MyArray()                                     state_mutations/contract.py:34
    pop                                                                                                            //                                                             tmp%2#0
                                                                                                                   // virtual: load tmp%2#0 from l-stack (no copy)                tmp%2#0                                                                                                                                                                                                                                           self.map[Txn.sender] = MyArray()                                     state_mutations/contract.py:34
    byte 0x0000                                                                                                    //                                                             tmp%2#0,0x0000                                                                                                                                                                                                                                    MyArray()                                                            state_mutations/contract.py:34
    box_put                                                                                                        //                                                                                                                                                                                                                                                                                                               self.map[Txn.sender] = MyArray()                                     state_mutations/contract.py:34
    retsub                                                                                                         //


// _puya_lib.arc4.dynamic_array_concat_dynamic_element(array_items_count: uint64, array_head_and_tail: bytes, new_items_count: uint64, new_head_and_tail: bytes) -> bytes:
dynamic_array_concat_dynamic_element:
    proto 4 1                                                                                                      //                                                             (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 |                                                                                                                                                                                                                                  _puya_lib/arc4.py:189-196
    byte ""                                                                                                        // allocate 1 to stack                                         (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | (𝕗) item_offset_adjustment#2 |

dynamic_array_concat_dynamic_element_block@0:
    byte 0x                                                                                                        //                                                             (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | (𝕗) item_offset_adjustment#2 | 0x                                                                                                                                                                                                _puya_lib/arc4.py:197
                                                                                                                   // virtual: store new_head#0 to f-stack                        (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | (𝕗) item_offset_adjustment#2,new_head#0 |                                                                                                                                                                                        _puya_lib/arc4.py:197
    frame_dig -2                                                                                                   // load new_items_count#0 from parameters                      (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | (𝕗) item_offset_adjustment#2,new_head#0 | new_items_count#0                                                                                                                                                                      _puya_lib/arc4.py:198
    int 2                                                                                                          //                                                             (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | (𝕗) item_offset_adjustment#2,new_head#0 | new_items_count#0,2                                                                                                                                                                    _puya_lib/arc4.py:198
    *                                                                                                              //                                                             (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | (𝕗) item_offset_adjustment#2,new_head#0 | {*}                                                                                                                                                                                    _puya_lib/arc4.py:198
                                                                                                                   // virtual: store item_offset_adjustment#0 to f-stack          (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | (𝕗) item_offset_adjustment#2,new_head#0,item_offset_adjustment#0 |                                                                                                                                                               _puya_lib/arc4.py:198
    frame_dig -4                                                                                                   // load array_items_count#0 from parameters                    (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | (𝕗) item_offset_adjustment#2,new_head#0,item_offset_adjustment#0 | array_items_count#0                                                                                                                                           _puya_lib/arc4.py:199
    int 2                                                                                                          //                                                             (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | (𝕗) item_offset_adjustment#2,new_head#0,item_offset_adjustment#0 | array_items_count#0,2                                                                                                                                         _puya_lib/arc4.py:199
    *                                                                                                              //                                                             (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | (𝕗) item_offset_adjustment#2,new_head#0,item_offset_adjustment#0 | {*}                                                                                                                                                           _puya_lib/arc4.py:199
                                                                                                                   // virtual: store tmp%0#0 to f-stack                           (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | (𝕗) item_offset_adjustment#2,new_head#0,item_offset_adjustment#0,tmp%0#0 |                                                                                                                                                       _puya_lib/arc4.py:199
    int 0                                                                                                          //                                                             (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | (𝕗) item_offset_adjustment#2,new_head#0,item_offset_adjustment#0,tmp%0#0 | 0                                                                                                                                                     _puya_lib/arc4.py:199
                                                                                                                   // virtual: store head_offset#0 to f-stack                     (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | (𝕗) item_offset_adjustment#2,new_head#0,item_offset_adjustment#0,tmp%0#0,head_offset#0 |                                                                                                                                         _puya_lib/arc4.py:199
    // Implicit fall through to dynamic_array_concat_dynamic_element_for_header@1                                  //                                                             (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | (𝕗) item_offset_adjustment#2,new_head#0,item_offset_adjustment#0,tmp%0#0,head_offset#0 |

dynamic_array_concat_dynamic_element_for_header@1:
    frame_dig 4                                                                                                    // load head_offset#0 from f-stack                             (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | (𝕗) item_offset_adjustment#2,new_head#0,item_offset_adjustment#0,tmp%0#0,head_offset#0 | head_offset#0                                                                                                                           _puya_lib/arc4.py:199
    frame_dig 3                                                                                                    // load tmp%0#0 from f-stack                                   (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | (𝕗) item_offset_adjustment#2,new_head#0,item_offset_adjustment#0,tmp%0#0,head_offset#0 | head_offset#0,tmp%0#0                                                                                                                   _puya_lib/arc4.py:199
    <                                                                                                              //                                                             (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | (𝕗) item_offset_adjustment#2,new_head#0,item_offset_adjustment#0,tmp%0#0,head_offset#0 | {<}                                                                                                                                     _puya_lib/arc4.py:199
                                                                                                                   // virtual: store continue_looping%0#0 to l-stack (no copy)    (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | (𝕗) item_offset_adjustment#2,new_head#0,item_offset_adjustment#0,tmp%0#0,head_offset#0 | continue_looping%0#0                                                                                                                    _puya_lib/arc4.py:199
                                                                                                                   // virtual: load continue_looping%0#0 from l-stack (no copy)   (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | (𝕗) item_offset_adjustment#2,new_head#0,item_offset_adjustment#0,tmp%0#0,head_offset#0 | continue_looping%0#0                                                                                                                    _puya_lib/arc4.py:199
    bz dynamic_array_concat_dynamic_element_after_for@4                                                            //                                                             (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | (𝕗) item_offset_adjustment#2,new_head#0,item_offset_adjustment#0,tmp%0#0,head_offset#0 |                                                                                                                                         _puya_lib/arc4.py:199
    // Implicit fall through to dynamic_array_concat_dynamic_element_for_body@2                                    //                                                             (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | (𝕗) item_offset_adjustment#2,new_head#0,item_offset_adjustment#0,tmp%0#0,head_offset#0 |                                                                                                                                         _puya_lib/arc4.py:199

dynamic_array_concat_dynamic_element_for_body@2:
    frame_dig -3                                                                                                   // load array_head_and_tail#0 from parameters                  (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | (𝕗) item_offset_adjustment#2,new_head#0,item_offset_adjustment#0,tmp%0#0,head_offset#0 | array_head_and_tail#0                                                                                                                   _puya_lib/arc4.py:200
    frame_dig 4                                                                                                    // load head_offset#0 from f-stack                             (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | (𝕗) item_offset_adjustment#2,new_head#0,item_offset_adjustment#0,tmp%0#0,head_offset#0 | array_head_and_tail#0,head_offset#0                                                                                                     _puya_lib/arc4.py:200
    dup
    cover 2                                                                                                        // store head_offset#0 to l-stack (copy)                       (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | (𝕗) item_offset_adjustment#2,new_head#0,item_offset_adjustment#0,tmp%0#0,head_offset#0 | head_offset#0,array_head_and_tail#0,head_offset#0                                                                                       _puya_lib/arc4.py:200
    extract_uint16                                                                                                 //                                                             (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | (𝕗) item_offset_adjustment#2,new_head#0,item_offset_adjustment#0,tmp%0#0,head_offset#0 | head_offset#0,{extract_uint16}                                                                                                          _puya_lib/arc4.py:200
                                                                                                                   // virtual: store item_offset#0 to l-stack (no copy)           (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | (𝕗) item_offset_adjustment#2,new_head#0,item_offset_adjustment#0,tmp%0#0,head_offset#0 | head_offset#0,item_offset#0                                                                                                             _puya_lib/arc4.py:200
    frame_dig 2                                                                                                    // load item_offset_adjustment#0 from f-stack                  (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | (𝕗) item_offset_adjustment#2,new_head#0,item_offset_adjustment#0,tmp%0#0,head_offset#0 | head_offset#0,item_offset#0,item_offset_adjustment#0                                                                                    _puya_lib/arc4.py:201
    uncover 1                                                                                                      // load item_offset#0 from l-stack (no copy)                   (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | (𝕗) item_offset_adjustment#2,new_head#0,item_offset_adjustment#0,tmp%0#0,head_offset#0 | head_offset#0,item_offset_adjustment#0,item_offset#0                                                                                    _puya_lib/arc4.py:201
    +                                                                                                              //                                                             (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | (𝕗) item_offset_adjustment#2,new_head#0,item_offset_adjustment#0,tmp%0#0,head_offset#0 | head_offset#0,{+}                                                                                                                       _puya_lib/arc4.py:201
                                                                                                                   // virtual: store tmp%1#0 to l-stack (no copy)                 (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | (𝕗) item_offset_adjustment#2,new_head#0,item_offset_adjustment#0,tmp%0#0,head_offset#0 | head_offset#0,tmp%1#0                                                                                                                   _puya_lib/arc4.py:201
                                                                                                                   // virtual: load tmp%1#0 from l-stack (no copy)                (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | (𝕗) item_offset_adjustment#2,new_head#0,item_offset_adjustment#0,tmp%0#0,head_offset#0 | head_offset#0,tmp%1#0                                                                                                                   _puya_lib/arc4.py:201
    itob                                                                                                           //                                                             (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | (𝕗) item_offset_adjustment#2,new_head#0,item_offset_adjustment#0,tmp%0#0,head_offset#0 | head_offset#0,{itob}                                                                                                                    _puya_lib/arc4.py:201
                                                                                                                   // virtual: store tmp%2#0 to l-stack (no copy)                 (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | (𝕗) item_offset_adjustment#2,new_head#0,item_offset_adjustment#0,tmp%0#0,head_offset#0 | head_offset#0,tmp%2#0                                                                                                                   _puya_lib/arc4.py:201
                                                                                                                   // virtual: load tmp%2#0 from l-stack (no copy)                (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | (𝕗) item_offset_adjustment#2,new_head#0,item_offset_adjustment#0,tmp%0#0,head_offset#0 | head_offset#0,tmp%2#0                                                                                                                   _puya_lib/arc4.py:201
    extract 6 2                                                                                                    //                                                             (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | (𝕗) item_offset_adjustment#2,new_head#0,item_offset_adjustment#0,tmp%0#0,head_offset#0 | head_offset#0,{extract}                                                                                                                 _puya_lib/arc4.py:201
                                                                                                                   // virtual: store tmp%3#0 to l-stack (no copy)                 (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | (𝕗) item_offset_adjustment#2,new_head#0,item_offset_adjustment#0,tmp%0#0,head_offset#0 | head_offset#0,tmp%3#0                                                                                                                   _puya_lib/arc4.py:201
    frame_dig 1                                                                                                    // load new_head#0 from f-stack                                (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | (𝕗) item_offset_adjustment#2,new_head#0,item_offset_adjustment#0,tmp%0#0,head_offset#0 | head_offset#0,tmp%3#0,new_head#0                                                                                                        _puya_lib/arc4.py:201
    uncover 1                                                                                                      // load tmp%3#0 from l-stack (no copy)                         (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | (𝕗) item_offset_adjustment#2,new_head#0,item_offset_adjustment#0,tmp%0#0,head_offset#0 | head_offset#0,new_head#0,tmp%3#0                                                                                                        _puya_lib/arc4.py:201
    concat                                                                                                         //                                                             (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | (𝕗) item_offset_adjustment#2,new_head#0,item_offset_adjustment#0,tmp%0#0,head_offset#0 | head_offset#0,{concat}                                                                                                                  _puya_lib/arc4.py:201
    frame_bury 1                                                                                                   // store new_head#0 to f-stack                                 (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | (𝕗) item_offset_adjustment#2,new_head#0,item_offset_adjustment#0,tmp%0#0,head_offset#0 | head_offset#0                                                                                                                           _puya_lib/arc4.py:201
                                                                                                                   // virtual: load head_offset#0 from l-stack (no copy)          (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | (𝕗) item_offset_adjustment#2,new_head#0,item_offset_adjustment#0,tmp%0#0,head_offset#0 | head_offset#0                                                                                                                           _puya_lib/arc4.py:199
    int 2                                                                                                          //                                                             (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | (𝕗) item_offset_adjustment#2,new_head#0,item_offset_adjustment#0,tmp%0#0,head_offset#0 | head_offset#0,2                                                                                                                         _puya_lib/arc4.py:199
    +                                                                                                              //                                                             (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | (𝕗) item_offset_adjustment#2,new_head#0,item_offset_adjustment#0,tmp%0#0,head_offset#0 | {+}                                                                                                                                     _puya_lib/arc4.py:199
    frame_bury 4                                                                                                   // store head_offset#0 to f-stack                              (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | (𝕗) item_offset_adjustment#2,new_head#0,item_offset_adjustment#0,tmp%0#0,head_offset#0 |                                                                                                                                         _puya_lib/arc4.py:199
    b dynamic_array_concat_dynamic_element_for_header@1                                                            //                                                             (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | (𝕗) item_offset_adjustment#2,new_head#0,item_offset_adjustment#0,tmp%0#0,head_offset#0 |

dynamic_array_concat_dynamic_element_after_for@4:
    frame_dig -3                                                                                                   // load array_head_and_tail#0 from parameters                  (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | (𝕗) item_offset_adjustment#2,new_head#0,item_offset_adjustment#0,tmp%0#0,head_offset#0 | array_head_and_tail#0                                                                                                                   _puya_lib/arc4.py:203
    len                                                                                                            //                                                             (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | (𝕗) item_offset_adjustment#2,new_head#0,item_offset_adjustment#0,tmp%0#0,head_offset#0 | {len}                                                                                                                                   _puya_lib/arc4.py:203
    frame_bury 0                                                                                                   // store item_offset_adjustment#2 to f-stack                   (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | (𝕗) item_offset_adjustment#2,new_head#0,item_offset_adjustment#0,tmp%0#0,head_offset#0 |                                                                                                                                         _puya_lib/arc4.py:203
    int 0                                                                                                          //                                                             (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | (𝕗) item_offset_adjustment#2,new_head#0,item_offset_adjustment#0,tmp%0#0,head_offset#0 | 0                                                                                                                                       _puya_lib/arc4.py:204
    frame_bury 4                                                                                                   // store head_offset#0 to f-stack                              (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | (𝕗) item_offset_adjustment#2,new_head#0,item_offset_adjustment#0,tmp%0#0,head_offset#0 |                                                                                                                                         _puya_lib/arc4.py:204
    // Implicit fall through to dynamic_array_concat_dynamic_element_for_header@5                                  //                                                             (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | (𝕗) item_offset_adjustment#2,new_head#0,item_offset_adjustment#0,tmp%0#0,head_offset#0 |

dynamic_array_concat_dynamic_element_for_header@5:
    frame_dig 4                                                                                                    // load head_offset#0 from f-stack                             (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | (𝕗) item_offset_adjustment#2,new_head#0,item_offset_adjustment#0,tmp%0#0,head_offset#0 | head_offset#0                                                                                                                           _puya_lib/arc4.py:204
    frame_dig 2                                                                                                    // load item_offset_adjustment#0 from f-stack                  (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | (𝕗) item_offset_adjustment#2,new_head#0,item_offset_adjustment#0,tmp%0#0,head_offset#0 | head_offset#0,item_offset_adjustment#0                                                                                                  _puya_lib/arc4.py:204
    <                                                                                                              //                                                             (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | (𝕗) item_offset_adjustment#2,new_head#0,item_offset_adjustment#0,tmp%0#0,head_offset#0 | {<}                                                                                                                                     _puya_lib/arc4.py:204
                                                                                                                   // virtual: store continue_looping%1#0 to l-stack (no copy)    (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | (𝕗) item_offset_adjustment#2,new_head#0,item_offset_adjustment#0,tmp%0#0,head_offset#0 | continue_looping%1#0                                                                                                                    _puya_lib/arc4.py:204
                                                                                                                   // virtual: load continue_looping%1#0 from l-stack (no copy)   (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | (𝕗) item_offset_adjustment#2,new_head#0,item_offset_adjustment#0,tmp%0#0,head_offset#0 | continue_looping%1#0                                                                                                                    _puya_lib/arc4.py:204
    bz dynamic_array_concat_dynamic_element_after_for@8                                                            //                                                             (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | (𝕗) item_offset_adjustment#2,new_head#0,item_offset_adjustment#0,tmp%0#0,head_offset#0 |                                                                                                                                         _puya_lib/arc4.py:204
    // Implicit fall through to dynamic_array_concat_dynamic_element_for_body@6                                    //                                                             (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | (𝕗) item_offset_adjustment#2,new_head#0,item_offset_adjustment#0,tmp%0#0,head_offset#0 |                                                                                                                                         _puya_lib/arc4.py:204

dynamic_array_concat_dynamic_element_for_body@6:
    frame_dig -1                                                                                                   // load new_head_and_tail#0 from parameters                    (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | (𝕗) item_offset_adjustment#2,new_head#0,item_offset_adjustment#0,tmp%0#0,head_offset#0 | new_head_and_tail#0                                                                                                                     _puya_lib/arc4.py:205
    frame_dig 4                                                                                                    // load head_offset#0 from f-stack                             (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | (𝕗) item_offset_adjustment#2,new_head#0,item_offset_adjustment#0,tmp%0#0,head_offset#0 | new_head_and_tail#0,head_offset#0                                                                                                       _puya_lib/arc4.py:205
    dup
    cover 2                                                                                                        // store head_offset#0 to l-stack (copy)                       (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | (𝕗) item_offset_adjustment#2,new_head#0,item_offset_adjustment#0,tmp%0#0,head_offset#0 | head_offset#0,new_head_and_tail#0,head_offset#0                                                                                         _puya_lib/arc4.py:205
    extract_uint16                                                                                                 //                                                             (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | (𝕗) item_offset_adjustment#2,new_head#0,item_offset_adjustment#0,tmp%0#0,head_offset#0 | head_offset#0,{extract_uint16}                                                                                                          _puya_lib/arc4.py:205
                                                                                                                   // virtual: store item_offset#0 to l-stack (no copy)           (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | (𝕗) item_offset_adjustment#2,new_head#0,item_offset_adjustment#0,tmp%0#0,head_offset#0 | head_offset#0,item_offset#0                                                                                                             _puya_lib/arc4.py:205
    frame_dig 0                                                                                                    // load item_offset_adjustment#2 from f-stack                  (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | (𝕗) item_offset_adjustment#2,new_head#0,item_offset_adjustment#0,tmp%0#0,head_offset#0 | head_offset#0,item_offset#0,item_offset_adjustment#2                                                                                    _puya_lib/arc4.py:206
    uncover 1                                                                                                      // load item_offset#0 from l-stack (no copy)                   (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | (𝕗) item_offset_adjustment#2,new_head#0,item_offset_adjustment#0,tmp%0#0,head_offset#0 | head_offset#0,item_offset_adjustment#2,item_offset#0                                                                                    _puya_lib/arc4.py:206
    +                                                                                                              //                                                             (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | (𝕗) item_offset_adjustment#2,new_head#0,item_offset_adjustment#0,tmp%0#0,head_offset#0 | head_offset#0,{+}                                                                                                                       _puya_lib/arc4.py:206
                                                                                                                   // virtual: store tmp%5#0 to l-stack (no copy)                 (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | (𝕗) item_offset_adjustment#2,new_head#0,item_offset_adjustment#0,tmp%0#0,head_offset#0 | head_offset#0,tmp%5#0                                                                                                                   _puya_lib/arc4.py:206
                                                                                                                   // virtual: load tmp%5#0 from l-stack (no copy)                (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | (𝕗) item_offset_adjustment#2,new_head#0,item_offset_adjustment#0,tmp%0#0,head_offset#0 | head_offset#0,tmp%5#0                                                                                                                   _puya_lib/arc4.py:206
    itob                                                                                                           //                                                             (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | (𝕗) item_offset_adjustment#2,new_head#0,item_offset_adjustment#0,tmp%0#0,head_offset#0 | head_offset#0,{itob}                                                                                                                    _puya_lib/arc4.py:206
                                                                                                                   // virtual: store tmp%6#0 to l-stack (no copy)                 (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | (𝕗) item_offset_adjustment#2,new_head#0,item_offset_adjustment#0,tmp%0#0,head_offset#0 | head_offset#0,tmp%6#0                                                                                                                   _puya_lib/arc4.py:206
                                                                                                                   // virtual: load tmp%6#0 from l-stack (no copy)                (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | (𝕗) item_offset_adjustment#2,new_head#0,item_offset_adjustment#0,tmp%0#0,head_offset#0 | head_offset#0,tmp%6#0                                                                                                                   _puya_lib/arc4.py:206
    extract 6 2                                                                                                    //                                                             (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | (𝕗) item_offset_adjustment#2,new_head#0,item_offset_adjustment#0,tmp%0#0,head_offset#0 | head_offset#0,{extract}                                                                                                                 _puya_lib/arc4.py:206
                                                                                                                   // virtual: store tmp%7#0 to l-stack (no copy)                 (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | (𝕗) item_offset_adjustment#2,new_head#0,item_offset_adjustment#0,tmp%0#0,head_offset#0 | head_offset#0,tmp%7#0                                                                                                                   _puya_lib/arc4.py:206
    frame_dig 1                                                                                                    // load new_head#0 from f-stack                                (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | (𝕗) item_offset_adjustment#2,new_head#0,item_offset_adjustment#0,tmp%0#0,head_offset#0 | head_offset#0,tmp%7#0,new_head#0                                                                                                        _puya_lib/arc4.py:206
    uncover 1                                                                                                      // load tmp%7#0 from l-stack (no copy)                         (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | (𝕗) item_offset_adjustment#2,new_head#0,item_offset_adjustment#0,tmp%0#0,head_offset#0 | head_offset#0,new_head#0,tmp%7#0                                                                                                        _puya_lib/arc4.py:206
    concat                                                                                                         //                                                             (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | (𝕗) item_offset_adjustment#2,new_head#0,item_offset_adjustment#0,tmp%0#0,head_offset#0 | head_offset#0,{concat}                                                                                                                  _puya_lib/arc4.py:206
    frame_bury 1                                                                                                   // store new_head#0 to f-stack                                 (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | (𝕗) item_offset_adjustment#2,new_head#0,item_offset_adjustment#0,tmp%0#0,head_offset#0 | head_offset#0                                                                                                                           _puya_lib/arc4.py:206
                                                                                                                   // virtual: load head_offset#0 from l-stack (no copy)          (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | (𝕗) item_offset_adjustment#2,new_head#0,item_offset_adjustment#0,tmp%0#0,head_offset#0 | head_offset#0                                                                                                                           _puya_lib/arc4.py:204
    int 2                                                                                                          //                                                             (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | (𝕗) item_offset_adjustment#2,new_head#0,item_offset_adjustment#0,tmp%0#0,head_offset#0 | head_offset#0,2                                                                                                                         _puya_lib/arc4.py:204
    +                                                                                                              //                                                             (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | (𝕗) item_offset_adjustment#2,new_head#0,item_offset_adjustment#0,tmp%0#0,head_offset#0 | {+}                                                                                                                                     _puya_lib/arc4.py:204
    frame_bury 4                                                                                                   // store head_offset#0 to f-stack                              (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | (𝕗) item_offset_adjustment#2,new_head#0,item_offset_adjustment#0,tmp%0#0,head_offset#0 |                                                                                                                                         _puya_lib/arc4.py:204
    b dynamic_array_concat_dynamic_element_for_header@5                                                            //                                                             (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | (𝕗) item_offset_adjustment#2,new_head#0,item_offset_adjustment#0,tmp%0#0,head_offset#0 |

dynamic_array_concat_dynamic_element_after_for@8:
    frame_dig -4                                                                                                   // load array_items_count#0 from parameters                    (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | (𝕗) item_offset_adjustment#2,new_head#0,item_offset_adjustment#0,tmp%0#0,head_offset#0 | array_items_count#0                                                                                                                     _puya_lib/arc4.py:208
    frame_dig -2                                                                                                   // load new_items_count#0 from parameters                      (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | (𝕗) item_offset_adjustment#2,new_head#0,item_offset_adjustment#0,tmp%0#0,head_offset#0 | array_items_count#0,new_items_count#0                                                                                                   _puya_lib/arc4.py:208
    +                                                                                                              //                                                             (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | (𝕗) item_offset_adjustment#2,new_head#0,item_offset_adjustment#0,tmp%0#0,head_offset#0 | {+}                                                                                                                                     _puya_lib/arc4.py:208
                                                                                                                   // virtual: store tmp%8#0 to l-stack (no copy)                 (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | (𝕗) item_offset_adjustment#2,new_head#0,item_offset_adjustment#0,tmp%0#0,head_offset#0 | tmp%8#0                                                                                                                                 _puya_lib/arc4.py:208
                                                                                                                   // virtual: load tmp%8#0 from l-stack (no copy)                (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | (𝕗) item_offset_adjustment#2,new_head#0,item_offset_adjustment#0,tmp%0#0,head_offset#0 | tmp%8#0                                                                                                                                 _puya_lib/arc4.py:208
    itob                                                                                                           //                                                             (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | (𝕗) item_offset_adjustment#2,new_head#0,item_offset_adjustment#0,tmp%0#0,head_offset#0 | {itob}                                                                                                                                  _puya_lib/arc4.py:208
                                                                                                                   // virtual: store tmp%9#0 to l-stack (no copy)                 (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | (𝕗) item_offset_adjustment#2,new_head#0,item_offset_adjustment#0,tmp%0#0,head_offset#0 | tmp%9#0                                                                                                                                 _puya_lib/arc4.py:208
                                                                                                                   // virtual: load tmp%9#0 from l-stack (no copy)                (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | (𝕗) item_offset_adjustment#2,new_head#0,item_offset_adjustment#0,tmp%0#0,head_offset#0 | tmp%9#0                                                                                                                                 _puya_lib/arc4.py:208
    extract 6 2                                                                                                    //                                                             (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | (𝕗) item_offset_adjustment#2,new_head#0,item_offset_adjustment#0,tmp%0#0,head_offset#0 | {extract}                                                                                                                               _puya_lib/arc4.py:208
                                                                                                                   // virtual: store tmp%10#0 to l-stack (no copy)                (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | (𝕗) item_offset_adjustment#2,new_head#0,item_offset_adjustment#0,tmp%0#0,head_offset#0 | tmp%10#0                                                                                                                                _puya_lib/arc4.py:208
                                                                                                                   // virtual: load tmp%10#0 from l-stack (no copy)               (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | (𝕗) item_offset_adjustment#2,new_head#0,item_offset_adjustment#0,tmp%0#0,head_offset#0 | tmp%10#0                                                                                                                                _puya_lib/arc4.py:208-209
    frame_dig 1                                                                                                    // load new_head#0 from f-stack                                (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | (𝕗) item_offset_adjustment#2,new_head#0,item_offset_adjustment#0,tmp%0#0,head_offset#0 | tmp%10#0,new_head#0                                                                                                                     _puya_lib/arc4.py:208-209
    concat                                                                                                         //                                                             (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | (𝕗) item_offset_adjustment#2,new_head#0,item_offset_adjustment#0,tmp%0#0,head_offset#0 | {concat}                                                                                                                                _puya_lib/arc4.py:208-209
                                                                                                                   // virtual: store tmp%11#0 to l-stack (no copy)                (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | (𝕗) item_offset_adjustment#2,new_head#0,item_offset_adjustment#0,tmp%0#0,head_offset#0 | tmp%11#0                                                                                                                                _puya_lib/arc4.py:208-209
    frame_dig -3                                                                                                   // load array_head_and_tail#0 from parameters                  (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | (𝕗) item_offset_adjustment#2,new_head#0,item_offset_adjustment#0,tmp%0#0,head_offset#0 | tmp%11#0,array_head_and_tail#0                                                                                                          _puya_lib/arc4.py:210-212
    frame_dig 3                                                                                                    // load tmp%0#0 from f-stack                                   (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | (𝕗) item_offset_adjustment#2,new_head#0,item_offset_adjustment#0,tmp%0#0,head_offset#0 | tmp%11#0,array_head_and_tail#0,tmp%0#0                                                                                                  _puya_lib/arc4.py:210-212
    frame_dig 0                                                                                                    // load item_offset_adjustment#2 from f-stack                  (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | (𝕗) item_offset_adjustment#2,new_head#0,item_offset_adjustment#0,tmp%0#0,head_offset#0 | tmp%11#0,array_head_and_tail#0,tmp%0#0,item_offset_adjustment#2                                                                         _puya_lib/arc4.py:210-212
    substring3                                                                                                     //                                                             (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | (𝕗) item_offset_adjustment#2,new_head#0,item_offset_adjustment#0,tmp%0#0,head_offset#0 | tmp%11#0,{substring3}                                                                                                                   _puya_lib/arc4.py:210-212
                                                                                                                   // virtual: store tmp%14#0 to l-stack (no copy)                (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | (𝕗) item_offset_adjustment#2,new_head#0,item_offset_adjustment#0,tmp%0#0,head_offset#0 | tmp%11#0,tmp%14#0                                                                                                                       _puya_lib/arc4.py:210-212
                                                                                                                   // virtual: load tmp%11#0 from l-stack (no copy)               (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | (𝕗) item_offset_adjustment#2,new_head#0,item_offset_adjustment#0,tmp%0#0,head_offset#0 | tmp%14#0,tmp%11#0                                                                                                                       _puya_lib/arc4.py:208-212
                                                                                                                   // virtual: load tmp%14#0 from l-stack (no copy)               (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | (𝕗) item_offset_adjustment#2,new_head#0,item_offset_adjustment#0,tmp%0#0,head_offset#0 | tmp%11#0,tmp%14#0                                                                                                                       _puya_lib/arc4.py:208-212
    concat                                                                                                         //                                                             (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | (𝕗) item_offset_adjustment#2,new_head#0,item_offset_adjustment#0,tmp%0#0,head_offset#0 | {concat}                                                                                                                                _puya_lib/arc4.py:208-212
                                                                                                                   // virtual: store tmp%15#0 to l-stack (no copy)                (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | (𝕗) item_offset_adjustment#2,new_head#0,item_offset_adjustment#0,tmp%0#0,head_offset#0 | tmp%15#0                                                                                                                                _puya_lib/arc4.py:208-212
    frame_dig -1                                                                                                   // load new_head_and_tail#0 from parameters                    (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | (𝕗) item_offset_adjustment#2,new_head#0,item_offset_adjustment#0,tmp%0#0,head_offset#0 | tmp%15#0,new_head_and_tail#0                                                                                                            _puya_lib/arc4.py:213
    len                                                                                                            //                                                             (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | (𝕗) item_offset_adjustment#2,new_head#0,item_offset_adjustment#0,tmp%0#0,head_offset#0 | tmp%15#0,{len}                                                                                                                          _puya_lib/arc4.py:213
                                                                                                                   // virtual: store tmp%17#0 to l-stack (no copy)                (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | (𝕗) item_offset_adjustment#2,new_head#0,item_offset_adjustment#0,tmp%0#0,head_offset#0 | tmp%15#0,tmp%17#0                                                                                                                       _puya_lib/arc4.py:213
    frame_dig -1                                                                                                   // load new_head_and_tail#0 from parameters                    (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | (𝕗) item_offset_adjustment#2,new_head#0,item_offset_adjustment#0,tmp%0#0,head_offset#0 | tmp%15#0,tmp%17#0,new_head_and_tail#0                                                                                                   _puya_lib/arc4.py:213
    frame_dig 2                                                                                                    // load item_offset_adjustment#0 from f-stack                  (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | (𝕗) item_offset_adjustment#2,new_head#0,item_offset_adjustment#0,tmp%0#0,head_offset#0 | tmp%15#0,tmp%17#0,new_head_and_tail#0,item_offset_adjustment#0                                                                          _puya_lib/arc4.py:213
    uncover 2                                                                                                      // load tmp%17#0 from l-stack (no copy)                        (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | (𝕗) item_offset_adjustment#2,new_head#0,item_offset_adjustment#0,tmp%0#0,head_offset#0 | tmp%15#0,new_head_and_tail#0,item_offset_adjustment#0,tmp%17#0                                                                          _puya_lib/arc4.py:213
    substring3                                                                                                     //                                                             (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | (𝕗) item_offset_adjustment#2,new_head#0,item_offset_adjustment#0,tmp%0#0,head_offset#0 | tmp%15#0,{substring3}                                                                                                                   _puya_lib/arc4.py:213
                                                                                                                   // virtual: store tmp%18#0 to l-stack (no copy)                (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | (𝕗) item_offset_adjustment#2,new_head#0,item_offset_adjustment#0,tmp%0#0,head_offset#0 | tmp%15#0,tmp%18#0                                                                                                                       _puya_lib/arc4.py:213
                                                                                                                   // virtual: load tmp%15#0 from l-stack (no copy)               (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | (𝕗) item_offset_adjustment#2,new_head#0,item_offset_adjustment#0,tmp%0#0,head_offset#0 | tmp%18#0,tmp%15#0                                                                                                                       _puya_lib/arc4.py:208-213
                                                                                                                   // virtual: load tmp%18#0 from l-stack (no copy)               (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | (𝕗) item_offset_adjustment#2,new_head#0,item_offset_adjustment#0,tmp%0#0,head_offset#0 | tmp%15#0,tmp%18#0                                                                                                                       _puya_lib/arc4.py:208-213
    concat                                                                                                         //                                                             (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | (𝕗) item_offset_adjustment#2,new_head#0,item_offset_adjustment#0,tmp%0#0,head_offset#0 | {concat}                                                                                                                                _puya_lib/arc4.py:208-213
                                                                                                                   // virtual: store tmp%19#0 to l-stack (no copy)                (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | (𝕗) item_offset_adjustment#2,new_head#0,item_offset_adjustment#0,tmp%0#0,head_offset#0 | tmp%19#0                                                                                                                                _puya_lib/arc4.py:208-213
                                                                                                                   // virtual: load tmp%19#0 from l-stack (no copy)               (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | (𝕗) item_offset_adjustment#2,new_head#0,item_offset_adjustment#0,tmp%0#0,head_offset#0 | tmp%19#0                                                                                                                                _puya_lib/arc4.py:207-214
    frame_bury 0
    retsub                                                                                                         //                                                             tmp%19#0                                                                                                                                                                                                                                                                                                               _puya_lib/arc4.py:207-214


// _puya_lib.arc4.dynamic_array_replace_dynamic_element(source: bytes, new_item: bytes, index: uint64) -> bytes:
dynamic_array_replace_dynamic_element:
    proto 3 1                                                                                                      //                                                             (𝕡) source#0,new_item#0,index#0 |                                                                                                                                                                                                                                                                                      _puya_lib/arc4.py:240-241

dynamic_array_replace_dynamic_element_block@0:
    frame_dig -3                                                                                                   // load source#0 from parameters                               (𝕡) source#0,new_item#0,index#0 | source#0                                                                                                                                                                                                                                                                             _puya_lib/arc4.py:242
    substring 0 2                                                                                                  //                                                             (𝕡) source#0,new_item#0,index#0 | {substring}                                                                                                                                                                                                                                                                          _puya_lib/arc4.py:242
                                                                                                                   // virtual: store size_b#0 to l-stack (no copy)                (𝕡) source#0,new_item#0,index#0 | size_b#0                                                                                                                                                                                                                                                                             _puya_lib/arc4.py:242
    dup                                                                                                            // load size_b#0 from l-stack (copy)                           (𝕡) source#0,new_item#0,index#0 | size_b#0,size_b#0                                                                                                                                                                                                                                                                    _puya_lib/arc4.py:243
    btoi                                                                                                           //                                                             (𝕡) source#0,new_item#0,index#0 | size_b#0,{btoi}                                                                                                                                                                                                                                                                      _puya_lib/arc4.py:243
                                                                                                                   // virtual: store array_length#0 to l-stack (no copy)          (𝕡) source#0,new_item#0,index#0 | size_b#0,array_length#0                                                                                                                                                                                                                                                              _puya_lib/arc4.py:243
    frame_dig -3                                                                                                   // load source#0 from parameters                               (𝕡) source#0,new_item#0,index#0 | size_b#0,array_length#0,source#0                                                                                                                                                                                                                                                     _puya_lib/arc4.py:245
    extract 2 0                                                                                                    //                                                             (𝕡) source#0,new_item#0,index#0 | size_b#0,array_length#0,{extract}                                                                                                                                                                                                                                                    _puya_lib/arc4.py:245
                                                                                                                   // virtual: store tmp%0#0 to l-stack (no copy)                 (𝕡) source#0,new_item#0,index#0 | size_b#0,array_length#0,tmp%0#0                                                                                                                                                                                                                                                      _puya_lib/arc4.py:245
                                                                                                                   // virtual: load tmp%0#0 from l-stack (no copy)                (𝕡) source#0,new_item#0,index#0 | size_b#0,array_length#0,tmp%0#0                                                                                                                                                                                                                                                      _puya_lib/arc4.py:244-249
    frame_dig -2                                                                                                   // load new_item#0 from parameters                             (𝕡) source#0,new_item#0,index#0 | size_b#0,array_length#0,tmp%0#0,new_item#0                                                                                                                                                                                                                                           _puya_lib/arc4.py:244-249
    frame_dig -1                                                                                                   // load index#0 from parameters                                (𝕡) source#0,new_item#0,index#0 | size_b#0,array_length#0,tmp%0#0,new_item#0,index#0                                                                                                                                                                                                                                   _puya_lib/arc4.py:244-249
    uncover 3                                                                                                      // load array_length#0 from l-stack (no copy)                  (𝕡) source#0,new_item#0,index#0 | size_b#0,tmp%0#0,new_item#0,index#0,array_length#0                                                                                                                                                                                                                                   _puya_lib/arc4.py:244-249
    callsub static_array_replace_dynamic_element                                                                   //                                                             (𝕡) source#0,new_item#0,index#0 | size_b#0,{static_array_replace_dynamic_element}                                                                                                                                                                                                                                      _puya_lib/arc4.py:244-249
                                                                                                                   // virtual: store tmp%1#0 to l-stack (no copy)                 (𝕡) source#0,new_item#0,index#0 | size_b#0,tmp%1#0                                                                                                                                                                                                                                                                     _puya_lib/arc4.py:244-249
                                                                                                                   // virtual: load size_b#0 from l-stack (no copy)               (𝕡) source#0,new_item#0,index#0 | tmp%1#0,size_b#0                                                                                                                                                                                                                                                                     _puya_lib/arc4.py:244-249
                                                                                                                   // virtual: load tmp%1#0 from l-stack (no copy)                (𝕡) source#0,new_item#0,index#0 | size_b#0,tmp%1#0                                                                                                                                                                                                                                                                     _puya_lib/arc4.py:244-249
    concat                                                                                                         //                                                             (𝕡) source#0,new_item#0,index#0 | {concat}                                                                                                                                                                                                                                                                             _puya_lib/arc4.py:244-249
                                                                                                                   // virtual: store tmp%2#0 to l-stack (no copy)                 (𝕡) source#0,new_item#0,index#0 | tmp%2#0                                                                                                                                                                                                                                                                              _puya_lib/arc4.py:244-249
                                                                                                                   // virtual: load tmp%2#0 from l-stack (no copy)                (𝕡) source#0,new_item#0,index#0 | tmp%2#0                                                                                                                                                                                                                                                                              _puya_lib/arc4.py:244-249
    retsub                                                                                                         //                                                             tmp%2#0                                                                                                                                                                                                                                                                                                                _puya_lib/arc4.py:244-249


// _puya_lib.arc4.static_array_replace_dynamic_element(array_head_and_tail: bytes, new_item: bytes, index: uint64, array_length: uint64) -> bytes:
static_array_replace_dynamic_element:
    proto 4 1                                                                                                      //                                                             (𝕡) array_head_and_tail#0,new_item#0,index#0,array_length#0 |                                                                                                                                                                                                                                                          _puya_lib/arc4.py:252-255

static_array_replace_dynamic_element_block@0:
    frame_dig -2                                                                                                   // load index#0 from parameters                                (𝕡) array_head_and_tail#0,new_item#0,index#0,array_length#0 | index#0                                                                                                                                                                                                                                                  _puya_lib/arc4.py:256
    int 2                                                                                                          //                                                             (𝕡) array_head_and_tail#0,new_item#0,index#0,array_length#0 | index#0,2                                                                                                                                                                                                                                                _puya_lib/arc4.py:256
    *                                                                                                              //                                                             (𝕡) array_head_and_tail#0,new_item#0,index#0,array_length#0 | {*}                                                                                                                                                                                                                                                      _puya_lib/arc4.py:256
                                                                                                                   // virtual: store tmp%0#0 to l-stack (no copy)                 (𝕡) array_head_and_tail#0,new_item#0,index#0,array_length#0 | tmp%0#0                                                                                                                                                                                                                                                  _puya_lib/arc4.py:256
    frame_dig -4                                                                                                   // load array_head_and_tail#0 from parameters                  (𝕡) array_head_and_tail#0,new_item#0,index#0,array_length#0 | tmp%0#0,array_head_and_tail#0                                                                                                                                                                                                                            _puya_lib/arc4.py:256
    uncover 1                                                                                                      // load tmp%0#0 from l-stack (no copy)                         (𝕡) array_head_and_tail#0,new_item#0,index#0,array_length#0 | array_head_and_tail#0,tmp%0#0                                                                                                                                                                                                                            _puya_lib/arc4.py:256
    extract_uint16                                                                                                 //                                                             (𝕡) array_head_and_tail#0,new_item#0,index#0,array_length#0 | {extract_uint16}                                                                                                                                                                                                                                         _puya_lib/arc4.py:256
                                                                                                                   // virtual: store original_offset#0 to l-stack (no copy)       (𝕡) array_head_and_tail#0,new_item#0,index#0,array_length#0 | original_offset#0                                                                                                                                                                                                                                        _puya_lib/arc4.py:256
    frame_dig -2                                                                                                   // load index#0 from parameters                                (𝕡) array_head_and_tail#0,new_item#0,index#0,array_length#0 | original_offset#0,index#0                                                                                                                                                                                                                                _puya_lib/arc4.py:257
    int 1                                                                                                          //                                                             (𝕡) array_head_and_tail#0,new_item#0,index#0,array_length#0 | original_offset#0,index#0,1                                                                                                                                                                                                                              _puya_lib/arc4.py:257
    +                                                                                                              //                                                             (𝕡) array_head_and_tail#0,new_item#0,index#0,array_length#0 | original_offset#0,{+}                                                                                                                                                                                                                                    _puya_lib/arc4.py:257
                                                                                                                   // virtual: store tmp%1#0 to l-stack (no copy)                 (𝕡) array_head_and_tail#0,new_item#0,index#0,array_length#0 | original_offset#0,tmp%1#0                                                                                                                                                                                                                                _puya_lib/arc4.py:257
                                                                                                                   // virtual: load tmp%1#0 from l-stack (no copy)                (𝕡) array_head_and_tail#0,new_item#0,index#0,array_length#0 | original_offset#0,tmp%1#0                                                                                                                                                                                                                                _puya_lib/arc4.py:257
    int 2                                                                                                          //                                                             (𝕡) array_head_and_tail#0,new_item#0,index#0,array_length#0 | original_offset#0,tmp%1#0,2                                                                                                                                                                                                                              _puya_lib/arc4.py:257
    *                                                                                                              //                                                             (𝕡) array_head_and_tail#0,new_item#0,index#0,array_length#0 | original_offset#0,{*}                                                                                                                                                                                                                                    _puya_lib/arc4.py:257
    dup                                                                                                            // store head_offset#0 to l-stack (copy)                       (𝕡) array_head_and_tail#0,new_item#0,index#0,array_length#0 | original_offset#0,head_offset#0,head_offset#0                                                                                                                                                                                                            _puya_lib/arc4.py:257
    cover 2                                                                                                        // store head_offset#0 to f-stack                              (𝕡) array_head_and_tail#0,new_item#0,index#0,array_length#0 | (𝕗) head_offset#0 | original_offset#0,head_offset#0                                                                                                                                                                                                      _puya_lib/arc4.py:257
    frame_dig -4                                                                                                   // load array_head_and_tail#0 from parameters                  (𝕡) array_head_and_tail#0,new_item#0,index#0,array_length#0 | (𝕗) head_offset#0 | original_offset#0,head_offset#0,array_head_and_tail#0                                                                                                                                                                                _puya_lib/arc4.py:257
    uncover 1                                                                                                      // load head_offset#0 from l-stack (no copy)                   (𝕡) array_head_and_tail#0,new_item#0,index#0,array_length#0 | (𝕗) head_offset#0 | original_offset#0,array_head_and_tail#0,head_offset#0                                                                                                                                                                                _puya_lib/arc4.py:257
    extract_uint16                                                                                                 //                                                             (𝕡) array_head_and_tail#0,new_item#0,index#0,array_length#0 | (𝕗) head_offset#0 | original_offset#0,{extract_uint16}                                                                                                                                                                                                   _puya_lib/arc4.py:257
                                                                                                                   // virtual: store next_item_offset#0 to l-stack (no copy)      (𝕡) array_head_and_tail#0,new_item#0,index#0,array_length#0 | (𝕗) head_offset#0 | original_offset#0,next_item_offset#0                                                                                                                                                                                                 _puya_lib/arc4.py:257
    frame_dig -4                                                                                                   // load array_head_and_tail#0 from parameters                  (𝕡) array_head_and_tail#0,new_item#0,index#0,array_length#0 | (𝕗) head_offset#0 | original_offset#0,next_item_offset#0,array_head_and_tail#0                                                                                                                                                                           _puya_lib/arc4.py:258
    len                                                                                                            //                                                             (𝕡) array_head_and_tail#0,new_item#0,index#0,array_length#0 | (𝕗) head_offset#0 | original_offset#0,next_item_offset#0,{len}                                                                                                                                                                                           _puya_lib/arc4.py:258
                                                                                                                   // virtual: store end_of_tail#0 to l-stack (no copy)           (𝕡) array_head_and_tail#0,new_item#0,index#0,array_length#0 | (𝕗) head_offset#0 | original_offset#0,next_item_offset#0,end_of_tail#0                                                                                                                                                                                   _puya_lib/arc4.py:258
    frame_dig -1                                                                                                   // load array_length#0 from parameters                         (𝕡) array_head_and_tail#0,new_item#0,index#0,array_length#0 | (𝕗) head_offset#0 | original_offset#0,next_item_offset#0,end_of_tail#0,array_length#0                                                                                                                                                                    _puya_lib/arc4.py:259
    frame_dig -2                                                                                                   // load index#0 from parameters                                (𝕡) array_head_and_tail#0,new_item#0,index#0,array_length#0 | (𝕗) head_offset#0 | original_offset#0,next_item_offset#0,end_of_tail#0,array_length#0,index#0                                                                                                                                                            _puya_lib/arc4.py:259
    -                                                                                                              //                                                             (𝕡) array_head_and_tail#0,new_item#0,index#0,array_length#0 | (𝕗) head_offset#0 | original_offset#0,next_item_offset#0,end_of_tail#0,{-}                                                                                                                                                                               _puya_lib/arc4.py:259
                                                                                                                   // virtual: store tmp%3#0 to l-stack (no copy)                 (𝕡) array_head_and_tail#0,new_item#0,index#0,array_length#0 | (𝕗) head_offset#0 | original_offset#0,next_item_offset#0,end_of_tail#0,tmp%3#0                                                                                                                                                                           _puya_lib/arc4.py:259
                                                                                                                   // virtual: load tmp%3#0 from l-stack (no copy)                (𝕡) array_head_and_tail#0,new_item#0,index#0,array_length#0 | (𝕗) head_offset#0 | original_offset#0,next_item_offset#0,end_of_tail#0,tmp%3#0                                                                                                                                                                           _puya_lib/arc4.py:259
    int 1                                                                                                          //                                                             (𝕡) array_head_and_tail#0,new_item#0,index#0,array_length#0 | (𝕗) head_offset#0 | original_offset#0,next_item_offset#0,end_of_tail#0,tmp%3#0,1                                                                                                                                                                         _puya_lib/arc4.py:259
    -                                                                                                              //                                                             (𝕡) array_head_and_tail#0,new_item#0,index#0,array_length#0 | (𝕗) head_offset#0 | original_offset#0,next_item_offset#0,end_of_tail#0,{-}                                                                                                                                                                               _puya_lib/arc4.py:259
                                                                                                                   // virtual: store is_before_end#0 to l-stack (no copy)         (𝕡) array_head_and_tail#0,new_item#0,index#0,array_length#0 | (𝕗) head_offset#0 | original_offset#0,next_item_offset#0,end_of_tail#0,is_before_end#0                                                                                                                                                                   _puya_lib/arc4.py:259
    dig 1                                                                                                          // load end_of_tail#0 from l-stack (copy)                      (𝕡) array_head_and_tail#0,new_item#0,index#0,array_length#0 | (𝕗) head_offset#0 | original_offset#0,next_item_offset#0,end_of_tail#0,is_before_end#0,end_of_tail#0                                                                                                                                                     _puya_lib/arc4.py:260
    uncover 3                                                                                                      // load next_item_offset#0 from l-stack (no copy)              (𝕡) array_head_and_tail#0,new_item#0,index#0,array_length#0 | (𝕗) head_offset#0 | original_offset#0,end_of_tail#0,is_before_end#0,end_of_tail#0,next_item_offset#0                                                                                                                                                     _puya_lib/arc4.py:260
    uncover 2                                                                                                      // load is_before_end#0 from l-stack (no copy)                 (𝕡) array_head_and_tail#0,new_item#0,index#0,array_length#0 | (𝕗) head_offset#0 | original_offset#0,end_of_tail#0,end_of_tail#0,next_item_offset#0,is_before_end#0                                                                                                                                                     _puya_lib/arc4.py:260
    select                                                                                                         //                                                             (𝕡) array_head_and_tail#0,new_item#0,index#0,array_length#0 | (𝕗) head_offset#0 | original_offset#0,end_of_tail#0,{select}                                                                                                                                                                                             _puya_lib/arc4.py:260
                                                                                                                   // virtual: store end_offset#0 to l-stack (no copy)            (𝕡) array_head_and_tail#0,new_item#0,index#0,array_length#0 | (𝕗) head_offset#0 | original_offset#0,end_of_tail#0,end_offset#0                                                                                                                                                                                         _puya_lib/arc4.py:260
    dup                                                                                                            // load end_offset#0 from l-stack (copy)                       (𝕡) array_head_and_tail#0,new_item#0,index#0,array_length#0 | (𝕗) head_offset#0 | original_offset#0,end_of_tail#0,end_offset#0,end_offset#0                                                                                                                                                                            _puya_lib/arc4.py:262
    dig 3                                                                                                          // load original_offset#0 from l-stack (copy)                  (𝕡) array_head_and_tail#0,new_item#0,index#0,array_length#0 | (𝕗) head_offset#0 | original_offset#0,end_of_tail#0,end_offset#0,end_offset#0,original_offset#0                                                                                                                                                          _puya_lib/arc4.py:262
    -                                                                                                              //                                                             (𝕡) array_head_and_tail#0,new_item#0,index#0,array_length#0 | (𝕗) head_offset#0 | original_offset#0,end_of_tail#0,end_offset#0,{-}                                                                                                                                                                                     _puya_lib/arc4.py:262
    cover 3                                                                                                        // store original_item_length#0 to f-stack                     (𝕡) array_head_and_tail#0,new_item#0,index#0,array_length#0 | (𝕗) head_offset#0,original_item_length#0 | original_offset#0,end_of_tail#0,end_offset#0                                                                                                                                                                  _puya_lib/arc4.py:262
    frame_dig -3                                                                                                   // load new_item#0 from parameters                             (𝕡) array_head_and_tail#0,new_item#0,index#0,array_length#0 | (𝕗) head_offset#0,original_item_length#0 | original_offset#0,end_of_tail#0,end_offset#0,new_item#0                                                                                                                                                       _puya_lib/arc4.py:263
    len                                                                                                            //                                                             (𝕡) array_head_and_tail#0,new_item#0,index#0,array_length#0 | (𝕗) head_offset#0,original_item_length#0 | original_offset#0,end_of_tail#0,end_offset#0,{len}                                                                                                                                                            _puya_lib/arc4.py:263
    cover 3                                                                                                        // store new_item_length#0 to f-stack                          (𝕡) array_head_and_tail#0,new_item#0,index#0,array_length#0 | (𝕗) head_offset#0,original_item_length#0,new_item_length#0 | original_offset#0,end_of_tail#0,end_offset#0                                                                                                                                                _puya_lib/arc4.py:263
    frame_dig -4                                                                                                   // load array_head_and_tail#0 from parameters                  (𝕡) array_head_and_tail#0,new_item#0,index#0,array_length#0 | (𝕗) head_offset#0,original_item_length#0,new_item_length#0 | original_offset#0,end_of_tail#0,end_offset#0,array_head_and_tail#0                                                                                                                          _puya_lib/arc4.py:265
    int 0                                                                                                          //                                                             (𝕡) array_head_and_tail#0,new_item#0,index#0,array_length#0 | (𝕗) head_offset#0,original_item_length#0,new_item_length#0 | original_offset#0,end_of_tail#0,end_offset#0,array_head_and_tail#0,0                                                                                                                        _puya_lib/arc4.py:265
    uncover 4                                                                                                      // load original_offset#0 from l-stack (no copy)               (𝕡) array_head_and_tail#0,new_item#0,index#0,array_length#0 | (𝕗) head_offset#0,original_item_length#0,new_item_length#0 | end_of_tail#0,end_offset#0,array_head_and_tail#0,0,original_offset#0                                                                                                                        _puya_lib/arc4.py:265
    substring3                                                                                                     //                                                             (𝕡) array_head_and_tail#0,new_item#0,index#0,array_length#0 | (𝕗) head_offset#0,original_item_length#0,new_item_length#0 | end_of_tail#0,end_offset#0,{substring3}                                                                                                                                                     _puya_lib/arc4.py:265
                                                                                                                   // virtual: store tmp%4#0 to l-stack (no copy)                 (𝕡) array_head_and_tail#0,new_item#0,index#0,array_length#0 | (𝕗) head_offset#0,original_item_length#0,new_item_length#0 | end_of_tail#0,end_offset#0,tmp%4#0                                                                                                                                                          _puya_lib/arc4.py:265
                                                                                                                   // virtual: load tmp%4#0 from l-stack (no copy)                (𝕡) array_head_and_tail#0,new_item#0,index#0,array_length#0 | (𝕗) head_offset#0,original_item_length#0,new_item_length#0 | end_of_tail#0,end_offset#0,tmp%4#0                                                                                                                                                          _puya_lib/arc4.py:265-266
    frame_dig -3                                                                                                   // load new_item#0 from parameters                             (𝕡) array_head_and_tail#0,new_item#0,index#0,array_length#0 | (𝕗) head_offset#0,original_item_length#0,new_item_length#0 | end_of_tail#0,end_offset#0,tmp%4#0,new_item#0                                                                                                                                               _puya_lib/arc4.py:265-266
    concat                                                                                                         //                                                             (𝕡) array_head_and_tail#0,new_item#0,index#0,array_length#0 | (𝕗) head_offset#0,original_item_length#0,new_item_length#0 | end_of_tail#0,end_offset#0,{concat}                                                                                                                                                         _puya_lib/arc4.py:265-266
                                                                                                                   // virtual: store tmp%5#0 to l-stack (no copy)                 (𝕡) array_head_and_tail#0,new_item#0,index#0,array_length#0 | (𝕗) head_offset#0,original_item_length#0,new_item_length#0 | end_of_tail#0,end_offset#0,tmp%5#0                                                                                                                                                          _puya_lib/arc4.py:265-266
    frame_dig -4                                                                                                   // load array_head_and_tail#0 from parameters                  (𝕡) array_head_and_tail#0,new_item#0,index#0,array_length#0 | (𝕗) head_offset#0,original_item_length#0,new_item_length#0 | end_of_tail#0,end_offset#0,tmp%5#0,array_head_and_tail#0                                                                                                                                    _puya_lib/arc4.py:267
    uncover 2                                                                                                      // load end_offset#0 from l-stack (no copy)                    (𝕡) array_head_and_tail#0,new_item#0,index#0,array_length#0 | (𝕗) head_offset#0,original_item_length#0,new_item_length#0 | end_of_tail#0,tmp%5#0,array_head_and_tail#0,end_offset#0                                                                                                                                    _puya_lib/arc4.py:267
    uncover 3                                                                                                      // load end_of_tail#0 from l-stack (no copy)                   (𝕡) array_head_and_tail#0,new_item#0,index#0,array_length#0 | (𝕗) head_offset#0,original_item_length#0,new_item_length#0 | tmp%5#0,array_head_and_tail#0,end_offset#0,end_of_tail#0                                                                                                                                    _puya_lib/arc4.py:267
    substring3                                                                                                     //                                                             (𝕡) array_head_and_tail#0,new_item#0,index#0,array_length#0 | (𝕗) head_offset#0,original_item_length#0,new_item_length#0 | tmp%5#0,{substring3}                                                                                                                                                                        _puya_lib/arc4.py:267
                                                                                                                   // virtual: store tmp%6#0 to l-stack (no copy)                 (𝕡) array_head_and_tail#0,new_item#0,index#0,array_length#0 | (𝕗) head_offset#0,original_item_length#0,new_item_length#0 | tmp%5#0,tmp%6#0                                                                                                                                                                             _puya_lib/arc4.py:267
                                                                                                                   // virtual: load tmp%5#0 from l-stack (no copy)                (𝕡) array_head_and_tail#0,new_item#0,index#0,array_length#0 | (𝕗) head_offset#0,original_item_length#0,new_item_length#0 | tmp%6#0,tmp%5#0                                                                                                                                                                             _puya_lib/arc4.py:264-268
                                                                                                                   // virtual: load tmp%6#0 from l-stack (no copy)                (𝕡) array_head_and_tail#0,new_item#0,index#0,array_length#0 | (𝕗) head_offset#0,original_item_length#0,new_item_length#0 | tmp%5#0,tmp%6#0                                                                                                                                                                             _puya_lib/arc4.py:264-268
    concat                                                                                                         //                                                             (𝕡) array_head_and_tail#0,new_item#0,index#0,array_length#0 | (𝕗) head_offset#0,original_item_length#0,new_item_length#0 | {concat}                                                                                                                                                                                    _puya_lib/arc4.py:265-267
                                                                                                                   // virtual: store new_head_and_tail#0 to f-stack               (𝕡) array_head_and_tail#0,new_item#0,index#0,array_length#0 | (𝕗) head_offset#0,original_item_length#0,new_item_length#0,new_head_and_tail#0 |                                                                                                                                                                         _puya_lib/arc4.py:264-268
    frame_dig -1                                                                                                   // load array_length#0 from parameters                         (𝕡) array_head_and_tail#0,new_item#0,index#0,array_length#0 | (𝕗) head_offset#0,original_item_length#0,new_item_length#0,new_head_and_tail#0 | array_length#0                                                                                                                                                          _puya_lib/arc4.py:269
    int 2                                                                                                          //                                                             (𝕡) array_head_and_tail#0,new_item#0,index#0,array_length#0 | (𝕗) head_offset#0,original_item_length#0,new_item_length#0,new_head_and_tail#0 | array_length#0,2                                                                                                                                                        _puya_lib/arc4.py:269
    *                                                                                                              //                                                             (𝕡) array_head_and_tail#0,new_item#0,index#0,array_length#0 | (𝕗) head_offset#0,original_item_length#0,new_item_length#0,new_head_and_tail#0 | {*}                                                                                                                                                                     _puya_lib/arc4.py:269
                                                                                                                   // virtual: store tmp%7#0 to f-stack                           (𝕡) array_head_and_tail#0,new_item#0,index#0,array_length#0 | (𝕗) head_offset#0,original_item_length#0,new_item_length#0,new_head_and_tail#0,tmp%7#0 |                                                                                                                                                                 _puya_lib/arc4.py:269
    // Implicit fall through to static_array_replace_dynamic_element_for_header@1                                  //                                                             (𝕡) array_head_and_tail#0,new_item#0,index#0,array_length#0 | (𝕗) head_offset#0,original_item_length#0,new_item_length#0,new_head_and_tail#0,tmp%7#0 |

static_array_replace_dynamic_element_for_header@1:
    frame_dig 0                                                                                                    // load head_offset#0 from f-stack                             (𝕡) array_head_and_tail#0,new_item#0,index#0,array_length#0 | (𝕗) head_offset#0,original_item_length#0,new_item_length#0,new_head_and_tail#0,tmp%7#0 | head_offset#0                                                                                                                                                   _puya_lib/arc4.py:269
    frame_dig 4                                                                                                    // load tmp%7#0 from f-stack                                   (𝕡) array_head_and_tail#0,new_item#0,index#0,array_length#0 | (𝕗) head_offset#0,original_item_length#0,new_item_length#0,new_head_and_tail#0,tmp%7#0 | head_offset#0,tmp%7#0                                                                                                                                           _puya_lib/arc4.py:269
    <                                                                                                              //                                                             (𝕡) array_head_and_tail#0,new_item#0,index#0,array_length#0 | (𝕗) head_offset#0,original_item_length#0,new_item_length#0,new_head_and_tail#0,tmp%7#0 | {<}                                                                                                                                                             _puya_lib/arc4.py:269
                                                                                                                   // virtual: store continue_looping%0#0 to l-stack (no copy)    (𝕡) array_head_and_tail#0,new_item#0,index#0,array_length#0 | (𝕗) head_offset#0,original_item_length#0,new_item_length#0,new_head_and_tail#0,tmp%7#0 | continue_looping%0#0                                                                                                                                            _puya_lib/arc4.py:269
                                                                                                                   // virtual: load continue_looping%0#0 from l-stack (no copy)   (𝕡) array_head_and_tail#0,new_item#0,index#0,array_length#0 | (𝕗) head_offset#0,original_item_length#0,new_item_length#0,new_head_and_tail#0,tmp%7#0 | continue_looping%0#0                                                                                                                                            _puya_lib/arc4.py:269
    bz static_array_replace_dynamic_element_after_for@4                                                            //                                                             (𝕡) array_head_and_tail#0,new_item#0,index#0,array_length#0 | (𝕗) head_offset#0,original_item_length#0,new_item_length#0,new_head_and_tail#0,tmp%7#0 |                                                                                                                                                                 _puya_lib/arc4.py:269
    // Implicit fall through to static_array_replace_dynamic_element_for_body@2                                    //                                                             (𝕡) array_head_and_tail#0,new_item#0,index#0,array_length#0 | (𝕗) head_offset#0,original_item_length#0,new_item_length#0,new_head_and_tail#0,tmp%7#0 |                                                                                                                                                                 _puya_lib/arc4.py:269

static_array_replace_dynamic_element_for_body@2:
    frame_dig 3                                                                                                    // load new_head_and_tail#0 from f-stack                       (𝕡) array_head_and_tail#0,new_item#0,index#0,array_length#0 | (𝕗) head_offset#0,original_item_length#0,new_item_length#0,new_head_and_tail#0,tmp%7#0 | new_head_and_tail#0                                                                                                                                             _puya_lib/arc4.py:270
    dup                                                                                                            // store new_head_and_tail#0 to l-stack (copy)                 (𝕡) array_head_and_tail#0,new_item#0,index#0,array_length#0 | (𝕗) head_offset#0,original_item_length#0,new_item_length#0,new_head_and_tail#0,tmp%7#0 | new_head_and_tail#0,new_head_and_tail#0                                                                                                                         _puya_lib/arc4.py:270
    frame_dig 0                                                                                                    // load head_offset#0 from f-stack                             (𝕡) array_head_and_tail#0,new_item#0,index#0,array_length#0 | (𝕗) head_offset#0,original_item_length#0,new_item_length#0,new_head_and_tail#0,tmp%7#0 | new_head_and_tail#0,new_head_and_tail#0,head_offset#0                                                                                                           _puya_lib/arc4.py:270
    dup
    cover 3                                                                                                        // store head_offset#0 to l-stack (copy)                       (𝕡) array_head_and_tail#0,new_item#0,index#0,array_length#0 | (𝕗) head_offset#0,original_item_length#0,new_item_length#0,new_head_and_tail#0,tmp%7#0 | head_offset#0,new_head_and_tail#0,new_head_and_tail#0,head_offset#0                                                                                             _puya_lib/arc4.py:270
    extract_uint16                                                                                                 //                                                             (𝕡) array_head_and_tail#0,new_item#0,index#0,array_length#0 | (𝕗) head_offset#0,original_item_length#0,new_item_length#0,new_head_and_tail#0,tmp%7#0 | head_offset#0,new_head_and_tail#0,{extract_uint16}                                                                                                              _puya_lib/arc4.py:270
                                                                                                                   // virtual: store tail_offset#0 to l-stack (no copy)           (𝕡) array_head_and_tail#0,new_item#0,index#0,array_length#0 | (𝕗) head_offset#0,original_item_length#0,new_item_length#0,new_head_and_tail#0,tmp%7#0 | head_offset#0,new_head_and_tail#0,tail_offset#0                                                                                                                 _puya_lib/arc4.py:270
                                                                                                                   // virtual: load tail_offset#0 from l-stack (no copy)          (𝕡) array_head_and_tail#0,new_item#0,index#0,array_length#0 | (𝕗) head_offset#0,original_item_length#0,new_item_length#0,new_head_and_tail#0,tmp%7#0 | head_offset#0,new_head_and_tail#0,tail_offset#0                                                                                                                 _puya_lib/arc4.py:271
    frame_dig 2                                                                                                    // load new_item_length#0 from f-stack                         (𝕡) array_head_and_tail#0,new_item#0,index#0,array_length#0 | (𝕗) head_offset#0,original_item_length#0,new_item_length#0,new_head_and_tail#0,tmp%7#0 | head_offset#0,new_head_and_tail#0,tail_offset#0,new_item_length#0                                                                                               _puya_lib/arc4.py:271
    +                                                                                                              //                                                             (𝕡) array_head_and_tail#0,new_item#0,index#0,array_length#0 | (𝕗) head_offset#0,original_item_length#0,new_item_length#0,new_head_and_tail#0,tmp%7#0 | head_offset#0,new_head_and_tail#0,{+}                                                                                                                           _puya_lib/arc4.py:271
                                                                                                                   // virtual: store tail_offset#0 to l-stack (no copy)           (𝕡) array_head_and_tail#0,new_item#0,index#0,array_length#0 | (𝕗) head_offset#0,original_item_length#0,new_item_length#0,new_head_and_tail#0,tmp%7#0 | head_offset#0,new_head_and_tail#0,tail_offset#0                                                                                                                 _puya_lib/arc4.py:271
                                                                                                                   // virtual: load tail_offset#0 from l-stack (no copy)          (𝕡) array_head_and_tail#0,new_item#0,index#0,array_length#0 | (𝕗) head_offset#0,original_item_length#0,new_item_length#0,new_head_and_tail#0,tmp%7#0 | head_offset#0,new_head_and_tail#0,tail_offset#0                                                                                                                 _puya_lib/arc4.py:272
    frame_dig 1                                                                                                    // load original_item_length#0 from f-stack                    (𝕡) array_head_and_tail#0,new_item#0,index#0,array_length#0 | (𝕗) head_offset#0,original_item_length#0,new_item_length#0,new_head_and_tail#0,tmp%7#0 | head_offset#0,new_head_and_tail#0,tail_offset#0,original_item_length#0                                                                                          _puya_lib/arc4.py:272
    -                                                                                                              //                                                             (𝕡) array_head_and_tail#0,new_item#0,index#0,array_length#0 | (𝕗) head_offset#0,original_item_length#0,new_item_length#0,new_head_and_tail#0,tmp%7#0 | head_offset#0,new_head_and_tail#0,{-}                                                                                                                           _puya_lib/arc4.py:272
                                                                                                                   // virtual: store tail_offset#0 to l-stack (no copy)           (𝕡) array_head_and_tail#0,new_item#0,index#0,array_length#0 | (𝕗) head_offset#0,original_item_length#0,new_item_length#0,new_head_and_tail#0,tmp%7#0 | head_offset#0,new_head_and_tail#0,tail_offset#0                                                                                                                 _puya_lib/arc4.py:272
                                                                                                                   // virtual: load tail_offset#0 from l-stack (no copy)          (𝕡) array_head_and_tail#0,new_item#0,index#0,array_length#0 | (𝕗) head_offset#0,original_item_length#0,new_item_length#0,new_head_and_tail#0,tmp%7#0 | head_offset#0,new_head_and_tail#0,tail_offset#0                                                                                                                 _puya_lib/arc4.py:273
    itob                                                                                                           //                                                             (𝕡) array_head_and_tail#0,new_item#0,index#0,array_length#0 | (𝕗) head_offset#0,original_item_length#0,new_item_length#0,new_head_and_tail#0,tmp%7#0 | head_offset#0,new_head_and_tail#0,{itob}                                                                                                                        _puya_lib/arc4.py:273
                                                                                                                   // virtual: store tmp%10#0 to l-stack (no copy)                (𝕡) array_head_and_tail#0,new_item#0,index#0,array_length#0 | (𝕗) head_offset#0,original_item_length#0,new_item_length#0,new_head_and_tail#0,tmp%7#0 | head_offset#0,new_head_and_tail#0,tmp%10#0                                                                                                                      _puya_lib/arc4.py:273
                                                                                                                   // virtual: load tmp%10#0 from l-stack (no copy)               (𝕡) array_head_and_tail#0,new_item#0,index#0,array_length#0 | (𝕗) head_offset#0,original_item_length#0,new_item_length#0,new_head_and_tail#0,tmp%7#0 | head_offset#0,new_head_and_tail#0,tmp%10#0                                                                                                                      _puya_lib/arc4.py:273
    extract 6 2                                                                                                    //                                                             (𝕡) array_head_and_tail#0,new_item#0,index#0,array_length#0 | (𝕗) head_offset#0,original_item_length#0,new_item_length#0,new_head_and_tail#0,tmp%7#0 | head_offset#0,new_head_and_tail#0,{extract}                                                                                                                     _puya_lib/arc4.py:273
                                                                                                                   // virtual: store tail_offset_bytes#0 to l-stack (no copy)     (𝕡) array_head_and_tail#0,new_item#0,index#0,array_length#0 | (𝕗) head_offset#0,original_item_length#0,new_item_length#0,new_head_and_tail#0,tmp%7#0 | head_offset#0,new_head_and_tail#0,tail_offset_bytes#0                                                                                                           _puya_lib/arc4.py:273
    uncover 1                                                                                                      // load new_head_and_tail#0 from l-stack (no copy)             (𝕡) array_head_and_tail#0,new_item#0,index#0,array_length#0 | (𝕗) head_offset#0,original_item_length#0,new_item_length#0,new_head_and_tail#0,tmp%7#0 | head_offset#0,tail_offset_bytes#0,new_head_and_tail#0                                                                                                           _puya_lib/arc4.py:274
    dig 2                                                                                                          // load head_offset#0 from l-stack (copy)                      (𝕡) array_head_and_tail#0,new_item#0,index#0,array_length#0 | (𝕗) head_offset#0,original_item_length#0,new_item_length#0,new_head_and_tail#0,tmp%7#0 | head_offset#0,tail_offset_bytes#0,new_head_and_tail#0,head_offset#0                                                                                             _puya_lib/arc4.py:274
    uncover 2                                                                                                      // load tail_offset_bytes#0 from l-stack (no copy)             (𝕡) array_head_and_tail#0,new_item#0,index#0,array_length#0 | (𝕗) head_offset#0,original_item_length#0,new_item_length#0,new_head_and_tail#0,tmp%7#0 | head_offset#0,new_head_and_tail#0,head_offset#0,tail_offset_bytes#0                                                                                             _puya_lib/arc4.py:274
    replace3                                                                                                       //                                                             (𝕡) array_head_and_tail#0,new_item#0,index#0,array_length#0 | (𝕗) head_offset#0,original_item_length#0,new_item_length#0,new_head_and_tail#0,tmp%7#0 | head_offset#0,{replace3}                                                                                                                                        _puya_lib/arc4.py:274
    frame_bury 3                                                                                                   // store new_head_and_tail#0 to f-stack                        (𝕡) array_head_and_tail#0,new_item#0,index#0,array_length#0 | (𝕗) head_offset#0,original_item_length#0,new_item_length#0,new_head_and_tail#0,tmp%7#0 | head_offset#0                                                                                                                                                   _puya_lib/arc4.py:274
                                                                                                                   // virtual: load head_offset#0 from l-stack (no copy)          (𝕡) array_head_and_tail#0,new_item#0,index#0,array_length#0 | (𝕗) head_offset#0,original_item_length#0,new_item_length#0,new_head_and_tail#0,tmp%7#0 | head_offset#0                                                                                                                                                   _puya_lib/arc4.py:269
    int 2                                                                                                          //                                                             (𝕡) array_head_and_tail#0,new_item#0,index#0,array_length#0 | (𝕗) head_offset#0,original_item_length#0,new_item_length#0,new_head_and_tail#0,tmp%7#0 | head_offset#0,2                                                                                                                                                 _puya_lib/arc4.py:269
    +                                                                                                              //                                                             (𝕡) array_head_and_tail#0,new_item#0,index#0,array_length#0 | (𝕗) head_offset#0,original_item_length#0,new_item_length#0,new_head_and_tail#0,tmp%7#0 | {+}                                                                                                                                                             _puya_lib/arc4.py:269
    frame_bury 0                                                                                                   // store head_offset#0 to f-stack                              (𝕡) array_head_and_tail#0,new_item#0,index#0,array_length#0 | (𝕗) head_offset#0,original_item_length#0,new_item_length#0,new_head_and_tail#0,tmp%7#0 |                                                                                                                                                                 _puya_lib/arc4.py:269
    b static_array_replace_dynamic_element_for_header@1                                                            //                                                             (𝕡) array_head_and_tail#0,new_item#0,index#0,array_length#0 | (𝕗) head_offset#0,original_item_length#0,new_item_length#0,new_head_and_tail#0,tmp%7#0 |

static_array_replace_dynamic_element_after_for@4:
    frame_dig 3                                                                                                    // load new_head_and_tail#0 from f-stack                       (𝕡) array_head_and_tail#0,new_item#0,index#0,array_length#0 | (𝕗) head_offset#0,original_item_length#0,new_item_length#0,new_head_and_tail#0,tmp%7#0 | new_head_and_tail#0                                                                                                                                             _puya_lib/arc4.py:275
    frame_bury 0
    retsub                                                                                                         //                                                             new_head_and_tail#0                                                                                                                                                                                                                                                                                                    _puya_lib/arc4.py:275

