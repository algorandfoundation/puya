// Op                                                                             Stack (out)
// test_cases.state_mutations.contract.Contract.approval_program() -> uint64:
main_block@0:
    callsub __puya_arc4_router__                                                  tmp%1#0
    return


// test_cases.state_mutations.contract.Contract.__puya_arc4_router__() -> uint64:
__puya_arc4_router__:
    // state_mutations/contract.py:22
    // class Contract(ARC4Contract):
    proto 0 1

__puya_arc4_router___block@0:
    // state_mutations/contract.py:22
    // class Contract(ARC4Contract):
    txn NumAppArgs                                                                tmp%0#0
    bz __puya_arc4_router___bare_routing@7
    // Implicit fall through to __puya_arc4_router___abi_routing@1

__puya_arc4_router___abi_routing@1:
    // state_mutations/contract.py:22
    // class Contract(ARC4Contract):
    txna ApplicationArgs 0                                                        tmp%2#0
    method append()void                                                           tmp%2#0,Method(append()void)
    method modify()void                                                           tmp%2#0,Method(append()void),Method(modify()void)
    method get()(uint64,string)[]                                                 tmp%2#0,Method(append()void),Method(modify()void),Method(get()(uint64,string)[])
    l-load tmp%2#0 3                                                              Method(append()void),Method(modify()void),Method(get()(uint64,string)[]),tmp%2#0
    match __puya_arc4_router___append_route@2 __puya_arc4_router___modify_route@3 __puya_arc4_router___get_route@4 
    int 0                                                                         0
    retsub                                                                        0

__puya_arc4_router___append_route@2:
    // state_mutations/contract.py:36
    // @arc4.abimethod
    txn OnCompletion                                                              tmp%3#0
    !                                                                             tmp%4#0
    assert // OnCompletion is not NoOp
    txn ApplicationID                                                             tmp%5#0
    assert // can only call when not creating
    callsub append
    int 1                                                                         1
    retsub                                                                        1

__puya_arc4_router___modify_route@3:
    // state_mutations/contract.py:44
    // @arc4.abimethod
    txn OnCompletion                                                              tmp%7#0
    !                                                                             tmp%8#0
    assert // OnCompletion is not NoOp
    txn ApplicationID                                                             tmp%9#0
    assert // can only call when not creating
    callsub modify
    int 1                                                                         1
    retsub                                                                        1

__puya_arc4_router___get_route@4:
    // state_mutations/contract.py:51
    // @arc4.abimethod
    txn OnCompletion                                                              tmp%11#0
    !                                                                             tmp%12#0
    assert // OnCompletion is not NoOp
    txn ApplicationID                                                             tmp%13#0
    assert // can only call when not creating
    callsub get                                                                   tmp%15#0
    byte 0x151f7c75                                                               tmp%15#0,0x151f7c75
    l-load tmp%15#0 1                                                             0x151f7c75,tmp%15#0
    concat                                                                        tmp%16#0
    log
    int 1                                                                         1
    retsub                                                                        1

__puya_arc4_router___bare_routing@7:
    // state_mutations/contract.py:22
    // class Contract(ARC4Contract):
    txn OnCompletion                                                              tmp%17#0
    switch __puya_arc4_router_____algopy_default_create@9 __puya_arc4_router___opt_in@8 
    int 0                                                                         0
    retsub                                                                        0

__puya_arc4_router___opt_in@8:
    // state_mutations/contract.py:29
    // @arc4.baremethod(allow_actions=["OptIn"])
    txn ApplicationID                                                             tmp%18#0
    assert // can only call when not creating
    // state_mutations/contract.py:29-30
    // @arc4.baremethod(allow_actions=["OptIn"])
    // def opt_in(self) -> None:
    callsub opt_in
    int 1                                                                         1
    retsub                                                                        1

__puya_arc4_router_____algopy_default_create@9:
    txn ApplicationID                                                             tmp%20#0
    !                                                                             tmp%21#0
    assert // can only call when creating
    int 1                                                                         1
    retsub                                                                        1


// test_cases.state_mutations.contract.Contract.append() -> void:
append:
    // state_mutations/contract.py:36-37
    // @arc4.abimethod
    // def append(self) -> None:
    proto 0 0

append_block@0:
    // state_mutations/contract.py:38
    // struct = get_struct()
    callsub get_struct                                                            struct#0
    // state_mutations/contract.py:39
    // self.glob.value.append(struct.copy())
    int 0                                                                         struct#0,0
    byte "glob"                                                                   struct#0,0,"glob"
    app_global_get_ex                                                             struct#0,maybe_value%0#0,maybe_exists%0#0
    assert // check self.glob exists                                              struct#0,maybe_value%0#0
    byte 0x0002                                                                   struct#0,maybe_value%0#0,0x0002
    l-load struct#0 2                                                             maybe_value%0#0,0x0002,struct#0
    concat                                                                        maybe_value%0#0,result%1#0
    l-load-copy maybe_value%0#0 1                                                 maybe_value%0#0,result%1#0,maybe_value%0#0 (copy)
    int 0                                                                         maybe_value%0#0,result%1#0,maybe_value%0#0 (copy),0
    extract_uint16                                                                maybe_value%0#0,result%1#0,l_count%0#0
    l-load maybe_value%0#0 2                                                      result%1#0,l_count%0#0,maybe_value%0#0
    extract 2 0                                                                   result%1#0,l_count%0#0,l_head_and_tail%0#0
    l-load l_count%0#0 1                                                          result%1#0,l_head_and_tail%0#0,l_count%0#0
    l-load l_head_and_tail%0#0 1                                                  result%1#0,l_count%0#0,l_head_and_tail%0#0
    int 1                                                                         result%1#0,l_count%0#0,l_head_and_tail%0#0,1
    l-load-copy result%1#0 3                                                      result%1#0,l_count%0#0,l_head_and_tail%0#0,1,result%1#0 (copy)
    callsub dynamic_array_concat_dynamic_element                                  result%1#0,concat_result%0#0
    byte "glob"                                                                   result%1#0,concat_result%0#0,"glob"
    l-load concat_result%0#0 1                                                    result%1#0,"glob",concat_result%0#0
    app_global_put                                                                result%1#0
    // state_mutations/contract.py:40
    // self.loc[Txn.sender].append(struct.copy())
    txn Sender                                                                    result%1#0,tmp%0#0
    int 0                                                                         result%1#0,tmp%0#0,0
    byte "loc"                                                                    result%1#0,tmp%0#0,0,"loc"
    app_local_get_ex                                                              result%1#0,maybe_value%1#0,maybe_exists%1#0
    assert // check self.loc exists for account                                   result%1#0,maybe_value%1#0
    l-load-copy maybe_value%1#0 0                                                 result%1#0,maybe_value%1#0,maybe_value%1#0 (copy)
    int 0                                                                         result%1#0,maybe_value%1#0,maybe_value%1#0 (copy),0
    extract_uint16                                                                result%1#0,maybe_value%1#0,l_count%1#0
    l-load maybe_value%1#0 1                                                      result%1#0,l_count%1#0,maybe_value%1#0
    extract 2 0                                                                   result%1#0,l_count%1#0,l_head_and_tail%1#0
    l-load l_count%1#0 1                                                          result%1#0,l_head_and_tail%1#0,l_count%1#0
    l-load l_head_and_tail%1#0 1                                                  result%1#0,l_count%1#0,l_head_and_tail%1#0
    int 1                                                                         result%1#0,l_count%1#0,l_head_and_tail%1#0,1
    l-load-copy result%1#0 3                                                      result%1#0,l_count%1#0,l_head_and_tail%1#0,1,result%1#0 (copy)
    callsub dynamic_array_concat_dynamic_element                                  result%1#0,concat_result%1#0
    txn Sender                                                                    result%1#0,concat_result%1#0,tmp%1#0
    byte "loc"                                                                    result%1#0,concat_result%1#0,tmp%1#0,"loc"
    l-load concat_result%1#0 2                                                    result%1#0,tmp%1#0,"loc",concat_result%1#0
    app_local_put                                                                 result%1#0
    // state_mutations/contract.py:41
    // self.box.value.append(struct.copy())
    byte "box"                                                                    result%1#0,"box"
    box_get                                                                       result%1#0,maybe_value%2#0,maybe_exists%2#0
    assert // check self.box exists                                               result%1#0,maybe_value%2#0
    l-load-copy maybe_value%2#0 0                                                 result%1#0,maybe_value%2#0,maybe_value%2#0 (copy)
    int 0                                                                         result%1#0,maybe_value%2#0,maybe_value%2#0 (copy),0
    extract_uint16                                                                result%1#0,maybe_value%2#0,l_count%2#0
    l-load maybe_value%2#0 1                                                      result%1#0,l_count%2#0,maybe_value%2#0
    extract 2 0                                                                   result%1#0,l_count%2#0,l_head_and_tail%2#0
    l-load l_count%2#0 1                                                          result%1#0,l_head_and_tail%2#0,l_count%2#0
    l-load l_head_and_tail%2#0 1                                                  result%1#0,l_count%2#0,l_head_and_tail%2#0
    int 1                                                                         result%1#0,l_count%2#0,l_head_and_tail%2#0,1
    l-load-copy result%1#0 3                                                      result%1#0,l_count%2#0,l_head_and_tail%2#0,1,result%1#0 (copy)
    callsub dynamic_array_concat_dynamic_element                                  result%1#0,concat_result%2#0
    byte "box"                                                                    result%1#0,concat_result%2#0,"box"
    box_del                                                                       result%1#0,concat_result%2#0,{box_del}
    pop 1                                                                         result%1#0,concat_result%2#0
    byte "box"                                                                    result%1#0,concat_result%2#0,"box"
    l-load concat_result%2#0 1                                                    result%1#0,"box",concat_result%2#0
    box_put                                                                       result%1#0
    // state_mutations/contract.py:42
    // self.map[Txn.sender].append(struct.copy())
    txn Sender                                                                    result%1#0,tmp%2#0
    byte "map"                                                                    result%1#0,tmp%2#0,"map"
    l-load tmp%2#0 1                                                              result%1#0,"map",tmp%2#0
    concat                                                                        result%1#0,tmp%3#0
    box_get                                                                       result%1#0,maybe_value%3#0,maybe_exists%3#0
    assert // check self.map entry exists                                         result%1#0,maybe_value%3#0
    l-load-copy maybe_value%3#0 0                                                 result%1#0,maybe_value%3#0,maybe_value%3#0 (copy)
    int 0                                                                         result%1#0,maybe_value%3#0,maybe_value%3#0 (copy),0
    extract_uint16                                                                result%1#0,maybe_value%3#0,l_count%3#0
    l-load maybe_value%3#0 1                                                      result%1#0,l_count%3#0,maybe_value%3#0
    extract 2 0                                                                   result%1#0,l_count%3#0,l_head_and_tail%3#0
    l-load l_count%3#0 1                                                          result%1#0,l_head_and_tail%3#0,l_count%3#0
    l-load l_head_and_tail%3#0 1                                                  result%1#0,l_count%3#0,l_head_and_tail%3#0
    int 1                                                                         result%1#0,l_count%3#0,l_head_and_tail%3#0,1
    l-load result%1#0 3                                                           l_count%3#0,l_head_and_tail%3#0,1,result%1#0
    callsub dynamic_array_concat_dynamic_element                                  concat_result%3#0
    txn Sender                                                                    concat_result%3#0,tmp%4#0
    byte "map"                                                                    concat_result%3#0,tmp%4#0,"map"
    l-load tmp%4#0 1                                                              concat_result%3#0,"map",tmp%4#0
    concat                                                                        concat_result%3#0,tmp%5#0
    l-load-copy tmp%5#0 0                                                         concat_result%3#0,tmp%5#0,tmp%5#0 (copy)
    box_del                                                                       concat_result%3#0,tmp%5#0,{box_del}
    pop 1                                                                         concat_result%3#0,tmp%5#0
    l-load tmp%5#0 0                                                              concat_result%3#0,tmp%5#0
    l-load concat_result%3#0 1                                                    tmp%5#0,concat_result%3#0
    box_put
    retsub


// test_cases.state_mutations.contract.get_struct() -> bytes:
get_struct:
    // state_mutations/contract.py:64-65
    // @subroutine
    // def get_struct() -> MyStruct:
    proto 0 1

get_struct_block@0:
    // state_mutations/contract.py:66-69
    // return MyStruct(
    //     bar=arc4.UInt64(1),
    //     baz=arc4.String("baz"),
    // )
    byte 0x0000000000000001000a000362617a                                         0x0000000000000001000a000362617a
    retsub                                                                        0x0000000000000001000a000362617a


// test_cases.state_mutations.contract.Contract.modify() -> void:
modify:
    // state_mutations/contract.py:44-45
    // @arc4.abimethod
    // def modify(self) -> None:
    proto 0 0

modify_block@0:
    // state_mutations/contract.py:46
    // self.glob.value[0].baz = arc4.String("modified")
    int 0                                                                         0
    byte "glob"                                                                   0,"glob"
    app_global_get_ex                                                             maybe_value%0#0,maybe_exists%0#0
    assert // check self.glob exists                                              maybe_value%0#0
    l-load-copy maybe_value%0#0 0                                                 maybe_value%0#0,maybe_value%0#0 (copy)
    extract 2 0                                                                   maybe_value%0#0,array_head_and_tail%0#0
    l-load-copy array_head_and_tail%0#0 0                                         maybe_value%0#0,array_head_and_tail%0#0,array_head_and_tail%0#0 (copy)
    int 0                                                                         maybe_value%0#0,array_head_and_tail%0#0,array_head_and_tail%0#0 (copy),0
    extract_uint16                                                                maybe_value%0#0,array_head_and_tail%0#0,item_offset%0#0
    l-load maybe_value%0#0 2                                                      array_head_and_tail%0#0,item_offset%0#0,maybe_value%0#0
    int 0                                                                         array_head_and_tail%0#0,item_offset%0#0,maybe_value%0#0,0
    extract_uint16                                                                array_head_and_tail%0#0,item_offset%0#0,array_length%0#0
    int 1                                                                         array_head_and_tail%0#0,item_offset%0#0,array_length%0#0,1
    - // on error: Index access is out of bounds                                  array_head_and_tail%0#0,item_offset%0#0,has_next%0#0
    l-load-copy array_head_and_tail%0#0 2                                         array_head_and_tail%0#0,item_offset%0#0,has_next%0#0,array_head_and_tail%0#0 (copy)
    len                                                                           array_head_and_tail%0#0,item_offset%0#0,has_next%0#0,end_of_array%0#0
    l-load-copy array_head_and_tail%0#0 3                                         array_head_and_tail%0#0,item_offset%0#0,has_next%0#0,end_of_array%0#0,array_head_and_tail%0#0 (copy)
    int 2                                                                         array_head_and_tail%0#0,item_offset%0#0,has_next%0#0,end_of_array%0#0,array_head_and_tail%0#0 (copy),2
    extract_uint16                                                                array_head_and_tail%0#0,item_offset%0#0,has_next%0#0,end_of_array%0#0,next_item_offset%0#0
    l-load end_of_array%0#0 1                                                     array_head_and_tail%0#0,item_offset%0#0,has_next%0#0,next_item_offset%0#0,end_of_array%0#0
    l-load next_item_offset%0#0 1                                                 array_head_and_tail%0#0,item_offset%0#0,has_next%0#0,end_of_array%0#0,next_item_offset%0#0
    l-load has_next%0#0 2                                                         array_head_and_tail%0#0,item_offset%0#0,end_of_array%0#0,next_item_offset%0#0,has_next%0#0
    select                                                                        array_head_and_tail%0#0,item_offset%0#0,end_offset%0#0
    l-load array_head_and_tail%0#0 2                                              item_offset%0#0,end_offset%0#0,array_head_and_tail%0#0
    l-load item_offset%0#0 2                                                      end_offset%0#0,array_head_and_tail%0#0,item_offset%0#0
    l-load end_offset%0#0 2                                                       array_head_and_tail%0#0,item_offset%0#0,end_offset%0#0
    substring3                                                                    tmp%0#0
    l-load-copy tmp%0#0 0                                                         tmp%0#0,tmp%0#0 (copy)
    int 8                                                                         tmp%0#0,tmp%0#0 (copy),8
    extract_uint16                                                                tmp%0#0,item_offset%1#0
    l-load tmp%0#0 1                                                              item_offset%1#0,tmp%0#0
    int 0                                                                         item_offset%1#0,tmp%0#0,0
    l-load item_offset%1#0 2                                                      tmp%0#0,0,item_offset%1#0
    extract3                                                                      data_up_to_item%0#0
    byte 0x00086d6f646966696564                                                   data_up_to_item%0#0,0x00086d6f646966696564
    concat                                                                        updated_data%0#0
    int 0                                                                         updated_data%0#0,0
    byte "glob"                                                                   updated_data%0#0,0,"glob"
    app_global_get_ex                                                             updated_data%0#0,maybe_value%1#0,maybe_exists%1#0
    assert // check self.glob exists                                              updated_data%0#0,maybe_value%1#0
    l-load maybe_value%1#0 0                                                      updated_data%0#0,maybe_value%1#0
    l-load updated_data%0#0 1                                                     maybe_value%1#0,updated_data%0#0
    int 0                                                                         maybe_value%1#0,updated_data%0#0,0
    callsub dynamic_array_replace_dynamic_element                                 updated_value%0#0
    byte "glob"                                                                   updated_value%0#0,"glob"
    l-load updated_value%0#0 1                                                    "glob",updated_value%0#0
    app_global_put
    // state_mutations/contract.py:47
    // self.loc[Txn.sender][0].baz = arc4.String("modified")
    txn Sender                                                                    tmp%1#0
    int 0                                                                         tmp%1#0,0
    byte "loc"                                                                    tmp%1#0,0,"loc"
    app_local_get_ex                                                              maybe_value%2#0,maybe_exists%2#0
    assert // check self.loc exists for account                                   maybe_value%2#0
    l-load-copy maybe_value%2#0 0                                                 maybe_value%2#0,maybe_value%2#0 (copy)
    extract 2 0                                                                   maybe_value%2#0,array_head_and_tail%1#0
    l-load-copy array_head_and_tail%1#0 0                                         maybe_value%2#0,array_head_and_tail%1#0,array_head_and_tail%1#0 (copy)
    int 0                                                                         maybe_value%2#0,array_head_and_tail%1#0,array_head_and_tail%1#0 (copy),0
    extract_uint16                                                                maybe_value%2#0,array_head_and_tail%1#0,item_offset%2#0
    l-load maybe_value%2#0 2                                                      array_head_and_tail%1#0,item_offset%2#0,maybe_value%2#0
    int 0                                                                         array_head_and_tail%1#0,item_offset%2#0,maybe_value%2#0,0
    extract_uint16                                                                array_head_and_tail%1#0,item_offset%2#0,array_length%1#0
    int 1                                                                         array_head_and_tail%1#0,item_offset%2#0,array_length%1#0,1
    - // on error: Index access is out of bounds                                  array_head_and_tail%1#0,item_offset%2#0,has_next%1#0
    l-load-copy array_head_and_tail%1#0 2                                         array_head_and_tail%1#0,item_offset%2#0,has_next%1#0,array_head_and_tail%1#0 (copy)
    len                                                                           array_head_and_tail%1#0,item_offset%2#0,has_next%1#0,end_of_array%1#0
    l-load-copy array_head_and_tail%1#0 3                                         array_head_and_tail%1#0,item_offset%2#0,has_next%1#0,end_of_array%1#0,array_head_and_tail%1#0 (copy)
    int 2                                                                         array_head_and_tail%1#0,item_offset%2#0,has_next%1#0,end_of_array%1#0,array_head_and_tail%1#0 (copy),2
    extract_uint16                                                                array_head_and_tail%1#0,item_offset%2#0,has_next%1#0,end_of_array%1#0,next_item_offset%1#0
    l-load end_of_array%1#0 1                                                     array_head_and_tail%1#0,item_offset%2#0,has_next%1#0,next_item_offset%1#0,end_of_array%1#0
    l-load next_item_offset%1#0 1                                                 array_head_and_tail%1#0,item_offset%2#0,has_next%1#0,end_of_array%1#0,next_item_offset%1#0
    l-load has_next%1#0 2                                                         array_head_and_tail%1#0,item_offset%2#0,end_of_array%1#0,next_item_offset%1#0,has_next%1#0
    select                                                                        array_head_and_tail%1#0,item_offset%2#0,end_offset%1#0
    l-load array_head_and_tail%1#0 2                                              item_offset%2#0,end_offset%1#0,array_head_and_tail%1#0
    l-load item_offset%2#0 2                                                      end_offset%1#0,array_head_and_tail%1#0,item_offset%2#0
    l-load end_offset%1#0 2                                                       array_head_and_tail%1#0,item_offset%2#0,end_offset%1#0
    substring3                                                                    tmp%2#0
    l-load-copy tmp%2#0 0                                                         tmp%2#0,tmp%2#0 (copy)
    int 8                                                                         tmp%2#0,tmp%2#0 (copy),8
    extract_uint16                                                                tmp%2#0,item_offset%3#0
    l-load tmp%2#0 1                                                              item_offset%3#0,tmp%2#0
    int 0                                                                         item_offset%3#0,tmp%2#0,0
    l-load item_offset%3#0 2                                                      tmp%2#0,0,item_offset%3#0
    extract3                                                                      data_up_to_item%1#0
    byte 0x00086d6f646966696564                                                   data_up_to_item%1#0,0x00086d6f646966696564
    concat                                                                        updated_data%1#0
    txn Sender                                                                    updated_data%1#0,tmp%3#0
    int 0                                                                         updated_data%1#0,tmp%3#0,0
    byte "loc"                                                                    updated_data%1#0,tmp%3#0,0,"loc"
    app_local_get_ex                                                              updated_data%1#0,maybe_value%3#0,maybe_exists%3#0
    assert // check self.loc exists for account                                   updated_data%1#0,maybe_value%3#0
    l-load maybe_value%3#0 0                                                      updated_data%1#0,maybe_value%3#0
    l-load updated_data%1#0 1                                                     maybe_value%3#0,updated_data%1#0
    int 0                                                                         maybe_value%3#0,updated_data%1#0,0
    callsub dynamic_array_replace_dynamic_element                                 updated_value%1#0
    txn Sender                                                                    updated_value%1#0,tmp%4#0
    byte "loc"                                                                    updated_value%1#0,tmp%4#0,"loc"
    l-load updated_value%1#0 2                                                    tmp%4#0,"loc",updated_value%1#0
    app_local_put
    // state_mutations/contract.py:48
    // self.box.value[0].baz = arc4.String("modified")
    byte "box"                                                                    "box"
    box_get                                                                       maybe_value%4#0,maybe_exists%4#0
    assert // check self.box exists                                               maybe_value%4#0
    l-load-copy maybe_value%4#0 0                                                 maybe_value%4#0,maybe_value%4#0 (copy)
    extract 2 0                                                                   maybe_value%4#0,array_head_and_tail%2#0
    l-load-copy array_head_and_tail%2#0 0                                         maybe_value%4#0,array_head_and_tail%2#0,array_head_and_tail%2#0 (copy)
    int 0                                                                         maybe_value%4#0,array_head_and_tail%2#0,array_head_and_tail%2#0 (copy),0
    extract_uint16                                                                maybe_value%4#0,array_head_and_tail%2#0,item_offset%4#0
    l-load maybe_value%4#0 2                                                      array_head_and_tail%2#0,item_offset%4#0,maybe_value%4#0
    int 0                                                                         array_head_and_tail%2#0,item_offset%4#0,maybe_value%4#0,0
    extract_uint16                                                                array_head_and_tail%2#0,item_offset%4#0,array_length%2#0
    int 1                                                                         array_head_and_tail%2#0,item_offset%4#0,array_length%2#0,1
    - // on error: Index access is out of bounds                                  array_head_and_tail%2#0,item_offset%4#0,has_next%2#0
    l-load-copy array_head_and_tail%2#0 2                                         array_head_and_tail%2#0,item_offset%4#0,has_next%2#0,array_head_and_tail%2#0 (copy)
    len                                                                           array_head_and_tail%2#0,item_offset%4#0,has_next%2#0,end_of_array%2#0
    l-load-copy array_head_and_tail%2#0 3                                         array_head_and_tail%2#0,item_offset%4#0,has_next%2#0,end_of_array%2#0,array_head_and_tail%2#0 (copy)
    int 2                                                                         array_head_and_tail%2#0,item_offset%4#0,has_next%2#0,end_of_array%2#0,array_head_and_tail%2#0 (copy),2
    extract_uint16                                                                array_head_and_tail%2#0,item_offset%4#0,has_next%2#0,end_of_array%2#0,next_item_offset%2#0
    l-load end_of_array%2#0 1                                                     array_head_and_tail%2#0,item_offset%4#0,has_next%2#0,next_item_offset%2#0,end_of_array%2#0
    l-load next_item_offset%2#0 1                                                 array_head_and_tail%2#0,item_offset%4#0,has_next%2#0,end_of_array%2#0,next_item_offset%2#0
    l-load has_next%2#0 2                                                         array_head_and_tail%2#0,item_offset%4#0,end_of_array%2#0,next_item_offset%2#0,has_next%2#0
    select                                                                        array_head_and_tail%2#0,item_offset%4#0,end_offset%2#0
    l-load array_head_and_tail%2#0 2                                              item_offset%4#0,end_offset%2#0,array_head_and_tail%2#0
    l-load item_offset%4#0 2                                                      end_offset%2#0,array_head_and_tail%2#0,item_offset%4#0
    l-load end_offset%2#0 2                                                       array_head_and_tail%2#0,item_offset%4#0,end_offset%2#0
    substring3                                                                    tmp%5#0
    l-load-copy tmp%5#0 0                                                         tmp%5#0,tmp%5#0 (copy)
    int 8                                                                         tmp%5#0,tmp%5#0 (copy),8
    extract_uint16                                                                tmp%5#0,item_offset%5#0
    l-load tmp%5#0 1                                                              item_offset%5#0,tmp%5#0
    int 0                                                                         item_offset%5#0,tmp%5#0,0
    l-load item_offset%5#0 2                                                      tmp%5#0,0,item_offset%5#0
    extract3                                                                      data_up_to_item%2#0
    byte 0x00086d6f646966696564                                                   data_up_to_item%2#0,0x00086d6f646966696564
    concat                                                                        updated_data%2#0
    byte "box"                                                                    updated_data%2#0,"box"
    box_get                                                                       updated_data%2#0,maybe_value%5#0,maybe_exists%5#0
    assert // check self.box exists                                               updated_data%2#0,maybe_value%5#0
    l-load maybe_value%5#0 0                                                      updated_data%2#0,maybe_value%5#0
    l-load updated_data%2#0 1                                                     maybe_value%5#0,updated_data%2#0
    int 0                                                                         maybe_value%5#0,updated_data%2#0,0
    callsub dynamic_array_replace_dynamic_element                                 updated_value%2#0
    byte "box"                                                                    updated_value%2#0,"box"
    box_del                                                                       updated_value%2#0,{box_del}
    pop 1                                                                         updated_value%2#0
    byte "box"                                                                    updated_value%2#0,"box"
    l-load updated_value%2#0 1                                                    "box",updated_value%2#0
    box_put
    // state_mutations/contract.py:49
    // self.map[Txn.sender][0].baz = arc4.String("modified")
    txn Sender                                                                    tmp%6#0
    byte "map"                                                                    tmp%6#0,"map"
    l-load tmp%6#0 1                                                              "map",tmp%6#0
    concat                                                                        tmp%7#0
    box_get                                                                       maybe_value%6#0,maybe_exists%6#0
    assert // check self.map entry exists                                         maybe_value%6#0
    l-load-copy maybe_value%6#0 0                                                 maybe_value%6#0,maybe_value%6#0 (copy)
    extract 2 0                                                                   maybe_value%6#0,array_head_and_tail%3#0
    l-load-copy array_head_and_tail%3#0 0                                         maybe_value%6#0,array_head_and_tail%3#0,array_head_and_tail%3#0 (copy)
    int 0                                                                         maybe_value%6#0,array_head_and_tail%3#0,array_head_and_tail%3#0 (copy),0
    extract_uint16                                                                maybe_value%6#0,array_head_and_tail%3#0,item_offset%6#0
    l-load maybe_value%6#0 2                                                      array_head_and_tail%3#0,item_offset%6#0,maybe_value%6#0
    int 0                                                                         array_head_and_tail%3#0,item_offset%6#0,maybe_value%6#0,0
    extract_uint16                                                                array_head_and_tail%3#0,item_offset%6#0,array_length%3#0
    int 1                                                                         array_head_and_tail%3#0,item_offset%6#0,array_length%3#0,1
    - // on error: Index access is out of bounds                                  array_head_and_tail%3#0,item_offset%6#0,has_next%3#0
    l-load-copy array_head_and_tail%3#0 2                                         array_head_and_tail%3#0,item_offset%6#0,has_next%3#0,array_head_and_tail%3#0 (copy)
    len                                                                           array_head_and_tail%3#0,item_offset%6#0,has_next%3#0,end_of_array%3#0
    l-load-copy array_head_and_tail%3#0 3                                         array_head_and_tail%3#0,item_offset%6#0,has_next%3#0,end_of_array%3#0,array_head_and_tail%3#0 (copy)
    int 2                                                                         array_head_and_tail%3#0,item_offset%6#0,has_next%3#0,end_of_array%3#0,array_head_and_tail%3#0 (copy),2
    extract_uint16                                                                array_head_and_tail%3#0,item_offset%6#0,has_next%3#0,end_of_array%3#0,next_item_offset%3#0
    l-load end_of_array%3#0 1                                                     array_head_and_tail%3#0,item_offset%6#0,has_next%3#0,next_item_offset%3#0,end_of_array%3#0
    l-load next_item_offset%3#0 1                                                 array_head_and_tail%3#0,item_offset%6#0,has_next%3#0,end_of_array%3#0,next_item_offset%3#0
    l-load has_next%3#0 2                                                         array_head_and_tail%3#0,item_offset%6#0,end_of_array%3#0,next_item_offset%3#0,has_next%3#0
    select                                                                        array_head_and_tail%3#0,item_offset%6#0,end_offset%3#0
    l-load array_head_and_tail%3#0 2                                              item_offset%6#0,end_offset%3#0,array_head_and_tail%3#0
    l-load item_offset%6#0 2                                                      end_offset%3#0,array_head_and_tail%3#0,item_offset%6#0
    l-load end_offset%3#0 2                                                       array_head_and_tail%3#0,item_offset%6#0,end_offset%3#0
    substring3                                                                    tmp%8#0
    l-load-copy tmp%8#0 0                                                         tmp%8#0,tmp%8#0 (copy)
    int 8                                                                         tmp%8#0,tmp%8#0 (copy),8
    extract_uint16                                                                tmp%8#0,item_offset%7#0
    l-load tmp%8#0 1                                                              item_offset%7#0,tmp%8#0
    int 0                                                                         item_offset%7#0,tmp%8#0,0
    l-load item_offset%7#0 2                                                      tmp%8#0,0,item_offset%7#0
    extract3                                                                      data_up_to_item%3#0
    byte 0x00086d6f646966696564                                                   data_up_to_item%3#0,0x00086d6f646966696564
    concat                                                                        updated_data%3#0
    txn Sender                                                                    updated_data%3#0,tmp%9#0
    byte "map"                                                                    updated_data%3#0,tmp%9#0,"map"
    l-load tmp%9#0 1                                                              updated_data%3#0,"map",tmp%9#0
    concat                                                                        updated_data%3#0,tmp%10#0
    box_get                                                                       updated_data%3#0,maybe_value%7#0,maybe_exists%7#0
    assert // check self.map entry exists                                         updated_data%3#0,maybe_value%7#0
    l-load maybe_value%7#0 0                                                      updated_data%3#0,maybe_value%7#0
    l-load updated_data%3#0 1                                                     maybe_value%7#0,updated_data%3#0
    int 0                                                                         maybe_value%7#0,updated_data%3#0,0
    callsub dynamic_array_replace_dynamic_element                                 updated_value%3#0
    txn Sender                                                                    updated_value%3#0,tmp%11#0
    byte "map"                                                                    updated_value%3#0,tmp%11#0,"map"
    l-load tmp%11#0 1                                                             updated_value%3#0,"map",tmp%11#0
    concat                                                                        updated_value%3#0,tmp%12#0
    l-load-copy tmp%12#0 0                                                        updated_value%3#0,tmp%12#0,tmp%12#0 (copy)
    box_del                                                                       updated_value%3#0,tmp%12#0,{box_del}
    pop 1                                                                         updated_value%3#0,tmp%12#0
    l-load tmp%12#0 0                                                             updated_value%3#0,tmp%12#0
    l-load updated_value%3#0 1                                                    tmp%12#0,updated_value%3#0
    box_put
    retsub


// test_cases.state_mutations.contract.Contract.get() -> bytes:
get:
    // state_mutations/contract.py:51-52
    // @arc4.abimethod
    // def get(self) -> MyArray:
    proto 0 1

get_block@0:
    // state_mutations/contract.py:53
    // a1 = self.glob.value.copy()
    int 0                                                                         0
    byte "glob"                                                                   0,"glob"
    app_global_get_ex                                                             a1#0,maybe_exists%0#0
    assert // check self.glob exists                                              a1#0
    // state_mutations/contract.py:54
    // a2 = self.loc[Txn.sender].copy()
    txn Sender                                                                    a1#0,tmp%0#0
    int 0                                                                         a1#0,tmp%0#0,0
    byte "loc"                                                                    a1#0,tmp%0#0,0,"loc"
    app_local_get_ex                                                              a1#0,a2#0,maybe_exists%1#0
    assert // check self.loc exists for account                                   a1#0,a2#0
    // state_mutations/contract.py:55
    // a3 = self.box.value.copy()
    byte "box"                                                                    a1#0,a2#0,"box"
    box_get                                                                       a1#0,a2#0,a3#0,maybe_exists%2#0
    assert // check self.box exists                                               a1#0,a2#0,a3#0
    // state_mutations/contract.py:56
    // a4 = self.map[Txn.sender].copy()
    txn Sender                                                                    a1#0,a2#0,a3#0,tmp%1#0
    byte "map"                                                                    a1#0,a2#0,a3#0,tmp%1#0,"map"
    l-load tmp%1#0 1                                                              a1#0,a2#0,a3#0,"map",tmp%1#0
    concat                                                                        a1#0,a2#0,a3#0,tmp%2#0
    box_get                                                                       a1#0,a2#0,a3#0,a4#0,maybe_exists%3#0
    assert // check self.map entry exists                                         a1#0,a2#0,a3#0,a4#0
    // state_mutations/contract.py:58
    // assert a1 == a2, "expected local == global"
    l-load-copy a1#0 3                                                            a1#0,a2#0,a3#0,a4#0,a1#0 (copy)
    l-load a2#0 3                                                                 a1#0,a3#0,a4#0,a1#0 (copy),a2#0
    ==                                                                            a1#0,a3#0,a4#0,tmp%3#0
    assert // expected local == global                                            a1#0,a3#0,a4#0
    // state_mutations/contract.py:59
    // assert a1 == a3, "expected box == global"
    l-load-copy a1#0 2                                                            a1#0,a3#0,a4#0,a1#0 (copy)
    l-load a3#0 2                                                                 a1#0,a4#0,a1#0 (copy),a3#0
    ==                                                                            a1#0,a4#0,tmp%4#0
    assert // expected box == global                                              a1#0,a4#0
    // state_mutations/contract.py:60
    // assert a1 == a4, "expected map == global"
    l-load-copy a1#0 1                                                            a1#0,a4#0,a1#0 (copy)
    l-load a4#0 1                                                                 a1#0,a1#0 (copy),a4#0
    ==                                                                            a1#0,tmp%5#0
    assert // expected map == global                                              a1#0
    // state_mutations/contract.py:61
    // return a1
    l-load a1#0 0                                                                 a1#0
    retsub                                                                        a1#0


// test_cases.state_mutations.contract.Contract.opt_in() -> void:
opt_in:
    // state_mutations/contract.py:29-30
    // @arc4.baremethod(allow_actions=["OptIn"])
    // def opt_in(self) -> None:
    proto 0 0

opt_in_block@0:
    // state_mutations/contract.py:31
    // self.glob.value = MyArray()
    byte "glob"                                                                   "glob"
    byte 0x0000                                                                   "glob",0x0000
    app_global_put
    // state_mutations/contract.py:32
    // self.box.value = MyArray()
    byte "box"                                                                    "box"
    box_del                                                                       {box_del}
    pop 1
    byte "box"                                                                    "box"
    byte 0x0000                                                                   "box",0x0000
    box_put
    // state_mutations/contract.py:33
    // self.loc[Txn.sender] = MyArray()
    txn Sender                                                                    tmp%0#0
    byte "loc"                                                                    tmp%0#0,"loc"
    byte 0x0000                                                                   tmp%0#0,"loc",0x0000
    app_local_put
    // state_mutations/contract.py:34
    // self.map[Txn.sender] = MyArray()
    txn Sender                                                                    tmp%1#0
    byte "map"                                                                    tmp%1#0,"map"
    l-load tmp%1#0 1                                                              "map",tmp%1#0
    concat                                                                        tmp%2#0
    l-load-copy tmp%2#0 0                                                         tmp%2#0,tmp%2#0 (copy)
    box_del                                                                       tmp%2#0,{box_del}
    pop 1                                                                         tmp%2#0
    l-load tmp%2#0 0                                                              tmp%2#0
    byte 0x0000                                                                   tmp%2#0,0x0000
    box_put
    retsub


// _puya_lib.arc4.dynamic_array_concat_dynamic_element(array_items_count: uint64, array_head_and_tail: bytes, new_items_count: uint64, new_head_and_tail: bytes) -> bytes:
dynamic_array_concat_dynamic_element:                                             (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 |
    proto 4 1                                                                     (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 |
    allocate 1 to stack                                                           (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | (𝕗) item_offset_adjustment#2 |

dynamic_array_concat_dynamic_element_block@0:                                     (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | (𝕗) item_offset_adjustment#2 |
    byte 0x                                                                       (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | (𝕗) item_offset_adjustment#2 | new_head#0
    f-store new_head#0                                                            (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | (𝕗) item_offset_adjustment#2,new_head#0 |
    p-load new_items_count#0                                                      (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | (𝕗) item_offset_adjustment#2,new_head#0 | new_items_count#0 (copy)
    int 2                                                                         (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | (𝕗) item_offset_adjustment#2,new_head#0 | new_items_count#0 (copy),2
    *                                                                             (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | (𝕗) item_offset_adjustment#2,new_head#0 | item_offset_adjustment#0
    f-store item_offset_adjustment#0                                              (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | (𝕗) item_offset_adjustment#2,new_head#0,item_offset_adjustment#0 |
    p-load array_items_count#0                                                    (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | (𝕗) item_offset_adjustment#2,new_head#0,item_offset_adjustment#0 | array_items_count#0 (copy)
    int 2                                                                         (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | (𝕗) item_offset_adjustment#2,new_head#0,item_offset_adjustment#0 | array_items_count#0 (copy),2
    *                                                                             (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | (𝕗) item_offset_adjustment#2,new_head#0,item_offset_adjustment#0 | tmp%0#0
    f-store tmp%0#0                                                               (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | (𝕗) item_offset_adjustment#2,new_head#0,item_offset_adjustment#0,tmp%0#0 |
    int 0                                                                         (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | (𝕗) item_offset_adjustment#2,new_head#0,item_offset_adjustment#0,tmp%0#0 | head_offset#0
    f-store head_offset#0                                                         (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | (𝕗) item_offset_adjustment#2,new_head#0,item_offset_adjustment#0,tmp%0#0,head_offset#0 |
    // Implicit fall through to dynamic_array_concat_dynamic_element_for_header@1 (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | (𝕗) item_offset_adjustment#2,new_head#0,item_offset_adjustment#0,tmp%0#0,head_offset#0 |

dynamic_array_concat_dynamic_element_for_header@1:                                (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | (𝕗) item_offset_adjustment#2,new_head#0,item_offset_adjustment#0,tmp%0#0,head_offset#0 |
    f-load head_offset#0                                                          (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | (𝕗) item_offset_adjustment#2,new_head#0,item_offset_adjustment#0,tmp%0#0,head_offset#0 | head_offset#0
    f-load tmp%0#0                                                                (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | (𝕗) item_offset_adjustment#2,new_head#0,item_offset_adjustment#0,tmp%0#0,head_offset#0 | head_offset#0,tmp%0#0
    <                                                                             (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | (𝕗) item_offset_adjustment#2,new_head#0,item_offset_adjustment#0,tmp%0#0,head_offset#0 | continue_looping%0#0
    bz dynamic_array_concat_dynamic_element_after_for@4                           (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | (𝕗) item_offset_adjustment#2,new_head#0,item_offset_adjustment#0,tmp%0#0,head_offset#0 |
    // Implicit fall through to dynamic_array_concat_dynamic_element_for_body@2   (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | (𝕗) item_offset_adjustment#2,new_head#0,item_offset_adjustment#0,tmp%0#0,head_offset#0 |

dynamic_array_concat_dynamic_element_for_body@2:                                  (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | (𝕗) item_offset_adjustment#2,new_head#0,item_offset_adjustment#0,tmp%0#0,head_offset#0 |
    p-load array_head_and_tail#0                                                  (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | (𝕗) item_offset_adjustment#2,new_head#0,item_offset_adjustment#0,tmp%0#0,head_offset#0 | array_head_and_tail#0 (copy)
    f-load head_offset#0                                                          (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | (𝕗) item_offset_adjustment#2,new_head#0,item_offset_adjustment#0,tmp%0#0,head_offset#0 | array_head_and_tail#0 (copy),head_offset#0
    l-store-copy head_offset#0 1                                                  (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | (𝕗) item_offset_adjustment#2,new_head#0,item_offset_adjustment#0,tmp%0#0,head_offset#0 | head_offset#0,array_head_and_tail#0 (copy),head_offset#0 (copy)
    extract_uint16                                                                (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | (𝕗) item_offset_adjustment#2,new_head#0,item_offset_adjustment#0,tmp%0#0,head_offset#0 | head_offset#0,item_offset#0
    f-load item_offset_adjustment#0                                               (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | (𝕗) item_offset_adjustment#2,new_head#0,item_offset_adjustment#0,tmp%0#0,head_offset#0 | head_offset#0,item_offset#0,item_offset_adjustment#0
    l-load item_offset#0 1                                                        (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | (𝕗) item_offset_adjustment#2,new_head#0,item_offset_adjustment#0,tmp%0#0,head_offset#0 | head_offset#0,item_offset_adjustment#0,item_offset#0
    +                                                                             (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | (𝕗) item_offset_adjustment#2,new_head#0,item_offset_adjustment#0,tmp%0#0,head_offset#0 | head_offset#0,tmp%1#0
    itob                                                                          (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | (𝕗) item_offset_adjustment#2,new_head#0,item_offset_adjustment#0,tmp%0#0,head_offset#0 | head_offset#0,tmp%2#0
    extract 6 2                                                                   (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | (𝕗) item_offset_adjustment#2,new_head#0,item_offset_adjustment#0,tmp%0#0,head_offset#0 | head_offset#0,tmp%3#0
    f-load new_head#0                                                             (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | (𝕗) item_offset_adjustment#2,new_head#0,item_offset_adjustment#0,tmp%0#0,head_offset#0 | head_offset#0,tmp%3#0,new_head#0
    l-load tmp%3#0 1                                                              (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | (𝕗) item_offset_adjustment#2,new_head#0,item_offset_adjustment#0,tmp%0#0,head_offset#0 | head_offset#0,new_head#0,tmp%3#0
    concat                                                                        (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | (𝕗) item_offset_adjustment#2,new_head#0,item_offset_adjustment#0,tmp%0#0,head_offset#0 | head_offset#0,new_head#0
    f-store new_head#0                                                            (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | (𝕗) item_offset_adjustment#2,new_head#0,item_offset_adjustment#0,tmp%0#0,head_offset#0 | head_offset#0
    l-load head_offset#0 0                                                        (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | (𝕗) item_offset_adjustment#2,new_head#0,item_offset_adjustment#0,tmp%0#0,head_offset#0 | head_offset#0
    int 2                                                                         (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | (𝕗) item_offset_adjustment#2,new_head#0,item_offset_adjustment#0,tmp%0#0,head_offset#0 | head_offset#0,2
    +                                                                             (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | (𝕗) item_offset_adjustment#2,new_head#0,item_offset_adjustment#0,tmp%0#0,head_offset#0 | head_offset#0
    f-store head_offset#0                                                         (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | (𝕗) item_offset_adjustment#2,new_head#0,item_offset_adjustment#0,tmp%0#0,head_offset#0 |
    b dynamic_array_concat_dynamic_element_for_header@1                           (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | (𝕗) item_offset_adjustment#2,new_head#0,item_offset_adjustment#0,tmp%0#0,head_offset#0 |

dynamic_array_concat_dynamic_element_after_for@4:                                 (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | (𝕗) item_offset_adjustment#2,new_head#0,item_offset_adjustment#0,tmp%0#0,head_offset#0 |
    p-load array_head_and_tail#0                                                  (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | (𝕗) item_offset_adjustment#2,new_head#0,item_offset_adjustment#0,tmp%0#0,head_offset#0 | array_head_and_tail#0 (copy)
    len                                                                           (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | (𝕗) item_offset_adjustment#2,new_head#0,item_offset_adjustment#0,tmp%0#0,head_offset#0 | item_offset_adjustment#2
    f-store item_offset_adjustment#2                                              (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | (𝕗) item_offset_adjustment#2,new_head#0,item_offset_adjustment#0,tmp%0#0,head_offset#0 |
    int 0                                                                         (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | (𝕗) item_offset_adjustment#2,new_head#0,item_offset_adjustment#0,tmp%0#0,head_offset#0 | head_offset#0
    f-store head_offset#0                                                         (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | (𝕗) item_offset_adjustment#2,new_head#0,item_offset_adjustment#0,tmp%0#0,head_offset#0 |
    // Implicit fall through to dynamic_array_concat_dynamic_element_for_header@5 (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | (𝕗) item_offset_adjustment#2,new_head#0,item_offset_adjustment#0,tmp%0#0,head_offset#0 |

dynamic_array_concat_dynamic_element_for_header@5:                                (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | (𝕗) item_offset_adjustment#2,new_head#0,item_offset_adjustment#0,tmp%0#0,head_offset#0 |
    f-load head_offset#0                                                          (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | (𝕗) item_offset_adjustment#2,new_head#0,item_offset_adjustment#0,tmp%0#0,head_offset#0 | head_offset#0
    f-load item_offset_adjustment#0                                               (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | (𝕗) item_offset_adjustment#2,new_head#0,item_offset_adjustment#0,tmp%0#0,head_offset#0 | head_offset#0,item_offset_adjustment#0
    <                                                                             (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | (𝕗) item_offset_adjustment#2,new_head#0,item_offset_adjustment#0,tmp%0#0,head_offset#0 | continue_looping%1#0
    bz dynamic_array_concat_dynamic_element_after_for@8                           (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | (𝕗) item_offset_adjustment#2,new_head#0,item_offset_adjustment#0,tmp%0#0,head_offset#0 |
    // Implicit fall through to dynamic_array_concat_dynamic_element_for_body@6   (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | (𝕗) item_offset_adjustment#2,new_head#0,item_offset_adjustment#0,tmp%0#0,head_offset#0 |

dynamic_array_concat_dynamic_element_for_body@6:                                  (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | (𝕗) item_offset_adjustment#2,new_head#0,item_offset_adjustment#0,tmp%0#0,head_offset#0 |
    p-load new_head_and_tail#0                                                    (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | (𝕗) item_offset_adjustment#2,new_head#0,item_offset_adjustment#0,tmp%0#0,head_offset#0 | new_head_and_tail#0 (copy)
    f-load head_offset#0                                                          (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | (𝕗) item_offset_adjustment#2,new_head#0,item_offset_adjustment#0,tmp%0#0,head_offset#0 | new_head_and_tail#0 (copy),head_offset#0
    l-store-copy head_offset#0 1                                                  (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | (𝕗) item_offset_adjustment#2,new_head#0,item_offset_adjustment#0,tmp%0#0,head_offset#0 | head_offset#0,new_head_and_tail#0 (copy),head_offset#0 (copy)
    extract_uint16                                                                (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | (𝕗) item_offset_adjustment#2,new_head#0,item_offset_adjustment#0,tmp%0#0,head_offset#0 | head_offset#0,item_offset#0
    f-load item_offset_adjustment#2                                               (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | (𝕗) item_offset_adjustment#2,new_head#0,item_offset_adjustment#0,tmp%0#0,head_offset#0 | head_offset#0,item_offset#0,item_offset_adjustment#2
    l-load item_offset#0 1                                                        (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | (𝕗) item_offset_adjustment#2,new_head#0,item_offset_adjustment#0,tmp%0#0,head_offset#0 | head_offset#0,item_offset_adjustment#2,item_offset#0
    +                                                                             (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | (𝕗) item_offset_adjustment#2,new_head#0,item_offset_adjustment#0,tmp%0#0,head_offset#0 | head_offset#0,tmp%5#0
    itob                                                                          (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | (𝕗) item_offset_adjustment#2,new_head#0,item_offset_adjustment#0,tmp%0#0,head_offset#0 | head_offset#0,tmp%6#0
    extract 6 2                                                                   (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | (𝕗) item_offset_adjustment#2,new_head#0,item_offset_adjustment#0,tmp%0#0,head_offset#0 | head_offset#0,tmp%7#0
    f-load new_head#0                                                             (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | (𝕗) item_offset_adjustment#2,new_head#0,item_offset_adjustment#0,tmp%0#0,head_offset#0 | head_offset#0,tmp%7#0,new_head#0
    l-load tmp%7#0 1                                                              (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | (𝕗) item_offset_adjustment#2,new_head#0,item_offset_adjustment#0,tmp%0#0,head_offset#0 | head_offset#0,new_head#0,tmp%7#0
    concat                                                                        (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | (𝕗) item_offset_adjustment#2,new_head#0,item_offset_adjustment#0,tmp%0#0,head_offset#0 | head_offset#0,new_head#0
    f-store new_head#0                                                            (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | (𝕗) item_offset_adjustment#2,new_head#0,item_offset_adjustment#0,tmp%0#0,head_offset#0 | head_offset#0
    l-load head_offset#0 0                                                        (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | (𝕗) item_offset_adjustment#2,new_head#0,item_offset_adjustment#0,tmp%0#0,head_offset#0 | head_offset#0
    int 2                                                                         (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | (𝕗) item_offset_adjustment#2,new_head#0,item_offset_adjustment#0,tmp%0#0,head_offset#0 | head_offset#0,2
    +                                                                             (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | (𝕗) item_offset_adjustment#2,new_head#0,item_offset_adjustment#0,tmp%0#0,head_offset#0 | head_offset#0
    f-store head_offset#0                                                         (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | (𝕗) item_offset_adjustment#2,new_head#0,item_offset_adjustment#0,tmp%0#0,head_offset#0 |
    b dynamic_array_concat_dynamic_element_for_header@5                           (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | (𝕗) item_offset_adjustment#2,new_head#0,item_offset_adjustment#0,tmp%0#0,head_offset#0 |

dynamic_array_concat_dynamic_element_after_for@8:                                 (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | (𝕗) item_offset_adjustment#2,new_head#0,item_offset_adjustment#0,tmp%0#0,head_offset#0 |
    p-load array_items_count#0                                                    (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | (𝕗) item_offset_adjustment#2,new_head#0,item_offset_adjustment#0,tmp%0#0,head_offset#0 | array_items_count#0 (copy)
    p-load new_items_count#0                                                      (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | (𝕗) item_offset_adjustment#2,new_head#0,item_offset_adjustment#0,tmp%0#0,head_offset#0 | array_items_count#0 (copy),new_items_count#0 (copy)
    +                                                                             (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | (𝕗) item_offset_adjustment#2,new_head#0,item_offset_adjustment#0,tmp%0#0,head_offset#0 | tmp%8#0
    itob                                                                          (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | (𝕗) item_offset_adjustment#2,new_head#0,item_offset_adjustment#0,tmp%0#0,head_offset#0 | tmp%9#0
    extract 6 2                                                                   (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | (𝕗) item_offset_adjustment#2,new_head#0,item_offset_adjustment#0,tmp%0#0,head_offset#0 | tmp%10#0
    f-load new_head#0                                                             (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | (𝕗) item_offset_adjustment#2,new_head#0,item_offset_adjustment#0,tmp%0#0,head_offset#0 | tmp%10#0,new_head#0
    concat                                                                        (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | (𝕗) item_offset_adjustment#2,new_head#0,item_offset_adjustment#0,tmp%0#0,head_offset#0 | tmp%11#0
    p-load array_head_and_tail#0                                                  (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | (𝕗) item_offset_adjustment#2,new_head#0,item_offset_adjustment#0,tmp%0#0,head_offset#0 | tmp%11#0,array_head_and_tail#0 (copy)
    f-load tmp%0#0                                                                (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | (𝕗) item_offset_adjustment#2,new_head#0,item_offset_adjustment#0,tmp%0#0,head_offset#0 | tmp%11#0,array_head_and_tail#0 (copy),tmp%0#0
    f-load item_offset_adjustment#2                                               (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | (𝕗) item_offset_adjustment#2,new_head#0,item_offset_adjustment#0,tmp%0#0,head_offset#0 | tmp%11#0,array_head_and_tail#0 (copy),tmp%0#0,item_offset_adjustment#2
    substring3                                                                    (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | (𝕗) item_offset_adjustment#2,new_head#0,item_offset_adjustment#0,tmp%0#0,head_offset#0 | tmp%11#0,tmp%14#0
    l-load tmp%11#0 1                                                             (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | (𝕗) item_offset_adjustment#2,new_head#0,item_offset_adjustment#0,tmp%0#0,head_offset#0 | tmp%14#0,tmp%11#0
    l-load tmp%14#0 1                                                             (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | (𝕗) item_offset_adjustment#2,new_head#0,item_offset_adjustment#0,tmp%0#0,head_offset#0 | tmp%11#0,tmp%14#0
    concat                                                                        (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | (𝕗) item_offset_adjustment#2,new_head#0,item_offset_adjustment#0,tmp%0#0,head_offset#0 | tmp%15#0
    p-load new_head_and_tail#0                                                    (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | (𝕗) item_offset_adjustment#2,new_head#0,item_offset_adjustment#0,tmp%0#0,head_offset#0 | tmp%15#0,new_head_and_tail#0 (copy)
    len                                                                           (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | (𝕗) item_offset_adjustment#2,new_head#0,item_offset_adjustment#0,tmp%0#0,head_offset#0 | tmp%15#0,tmp%17#0
    p-load new_head_and_tail#0                                                    (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | (𝕗) item_offset_adjustment#2,new_head#0,item_offset_adjustment#0,tmp%0#0,head_offset#0 | tmp%15#0,tmp%17#0,new_head_and_tail#0 (copy)
    f-load item_offset_adjustment#0                                               (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | (𝕗) item_offset_adjustment#2,new_head#0,item_offset_adjustment#0,tmp%0#0,head_offset#0 | tmp%15#0,tmp%17#0,new_head_and_tail#0 (copy),item_offset_adjustment#0
    l-load tmp%17#0 2                                                             (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | (𝕗) item_offset_adjustment#2,new_head#0,item_offset_adjustment#0,tmp%0#0,head_offset#0 | tmp%15#0,new_head_and_tail#0 (copy),item_offset_adjustment#0,tmp%17#0
    substring3                                                                    (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | (𝕗) item_offset_adjustment#2,new_head#0,item_offset_adjustment#0,tmp%0#0,head_offset#0 | tmp%15#0,tmp%18#0
    l-load tmp%15#0 1                                                             (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | (𝕗) item_offset_adjustment#2,new_head#0,item_offset_adjustment#0,tmp%0#0,head_offset#0 | tmp%18#0,tmp%15#0
    l-load tmp%18#0 1                                                             (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | (𝕗) item_offset_adjustment#2,new_head#0,item_offset_adjustment#0,tmp%0#0,head_offset#0 | tmp%15#0,tmp%18#0
    concat                                                                        (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | (𝕗) item_offset_adjustment#2,new_head#0,item_offset_adjustment#0,tmp%0#0,head_offset#0 | tmp%19#0
    retsub                                                                        tmp%19#0


// _puya_lib.arc4.dynamic_array_replace_dynamic_element(source: bytes, new_item: bytes, index: uint64) -> bytes:
dynamic_array_replace_dynamic_element:                                            (𝕡) source#0,new_item#0,index#0 |
    proto 3 1                                                                     (𝕡) source#0,new_item#0,index#0 |

dynamic_array_replace_dynamic_element_block@0:                                    (𝕡) source#0,new_item#0,index#0 |
    p-load source#0                                                               (𝕡) source#0,new_item#0,index#0 | source#0 (copy)
    substring 0 2                                                                 (𝕡) source#0,new_item#0,index#0 | size_b#0
    l-load-copy size_b#0 0                                                        (𝕡) source#0,new_item#0,index#0 | size_b#0,size_b#0 (copy)
    btoi                                                                          (𝕡) source#0,new_item#0,index#0 | size_b#0,array_length#0
    p-load source#0                                                               (𝕡) source#0,new_item#0,index#0 | size_b#0,array_length#0,source#0 (copy)
    extract 2 0                                                                   (𝕡) source#0,new_item#0,index#0 | size_b#0,array_length#0,tmp%0#0
    p-load new_item#0                                                             (𝕡) source#0,new_item#0,index#0 | size_b#0,array_length#0,tmp%0#0,new_item#0 (copy)
    p-load index#0                                                                (𝕡) source#0,new_item#0,index#0 | size_b#0,array_length#0,tmp%0#0,new_item#0 (copy),index#0 (copy)
    l-load array_length#0 3                                                       (𝕡) source#0,new_item#0,index#0 | size_b#0,tmp%0#0,new_item#0 (copy),index#0 (copy),array_length#0
    callsub static_array_replace_dynamic_element                                  (𝕡) source#0,new_item#0,index#0 | size_b#0,tmp%1#0
    l-load size_b#0 1                                                             (𝕡) source#0,new_item#0,index#0 | tmp%1#0,size_b#0
    l-load tmp%1#0 1                                                              (𝕡) source#0,new_item#0,index#0 | size_b#0,tmp%1#0
    concat                                                                        (𝕡) source#0,new_item#0,index#0 | tmp%2#0
    retsub                                                                        tmp%2#0


// _puya_lib.arc4.static_array_replace_dynamic_element(array_head_and_tail: bytes, new_item: bytes, index: uint64, array_length: uint64) -> bytes:
static_array_replace_dynamic_element:                                             (𝕡) array_head_and_tail#0,new_item#0,index#0,array_length#0 |
    proto 4 1                                                                     (𝕡) array_head_and_tail#0,new_item#0,index#0,array_length#0 |

static_array_replace_dynamic_element_block@0:                                     (𝕡) array_head_and_tail#0,new_item#0,index#0,array_length#0 |
    p-load index#0                                                                (𝕡) array_head_and_tail#0,new_item#0,index#0,array_length#0 | index#0 (copy)
    int 2                                                                         (𝕡) array_head_and_tail#0,new_item#0,index#0,array_length#0 | index#0 (copy),2
    *                                                                             (𝕡) array_head_and_tail#0,new_item#0,index#0,array_length#0 | tmp%0#0
    p-load array_head_and_tail#0                                                  (𝕡) array_head_and_tail#0,new_item#0,index#0,array_length#0 | tmp%0#0,array_head_and_tail#0 (copy)
    l-load tmp%0#0 1                                                              (𝕡) array_head_and_tail#0,new_item#0,index#0,array_length#0 | array_head_and_tail#0 (copy),tmp%0#0
    extract_uint16                                                                (𝕡) array_head_and_tail#0,new_item#0,index#0,array_length#0 | original_offset#0
    p-load index#0                                                                (𝕡) array_head_and_tail#0,new_item#0,index#0,array_length#0 | original_offset#0,index#0 (copy)
    int 1                                                                         (𝕡) array_head_and_tail#0,new_item#0,index#0,array_length#0 | original_offset#0,index#0 (copy),1
    +                                                                             (𝕡) array_head_and_tail#0,new_item#0,index#0,array_length#0 | original_offset#0,tmp%1#0
    int 2                                                                         (𝕡) array_head_and_tail#0,new_item#0,index#0,array_length#0 | original_offset#0,tmp%1#0,2
    *                                                                             (𝕡) array_head_and_tail#0,new_item#0,index#0,array_length#0 | original_offset#0,head_offset#0
    l-store-copy head_offset#0 0                                                  (𝕡) array_head_and_tail#0,new_item#0,index#0,array_length#0 | original_offset#0,head_offset#0,head_offset#0
    f-store head_offset#0                                                         (𝕡) array_head_and_tail#0,new_item#0,index#0,array_length#0 | (𝕗) head_offset#0 | original_offset#0,head_offset#0
    p-load array_head_and_tail#0                                                  (𝕡) array_head_and_tail#0,new_item#0,index#0,array_length#0 | (𝕗) head_offset#0 | original_offset#0,head_offset#0,array_head_and_tail#0 (copy)
    l-load head_offset#0 1                                                        (𝕡) array_head_and_tail#0,new_item#0,index#0,array_length#0 | (𝕗) head_offset#0 | original_offset#0,array_head_and_tail#0 (copy),head_offset#0
    extract_uint16                                                                (𝕡) array_head_and_tail#0,new_item#0,index#0,array_length#0 | (𝕗) head_offset#0 | original_offset#0,next_item_offset#0
    p-load array_head_and_tail#0                                                  (𝕡) array_head_and_tail#0,new_item#0,index#0,array_length#0 | (𝕗) head_offset#0 | original_offset#0,next_item_offset#0,array_head_and_tail#0 (copy)
    len                                                                           (𝕡) array_head_and_tail#0,new_item#0,index#0,array_length#0 | (𝕗) head_offset#0 | original_offset#0,next_item_offset#0,end_of_tail#0
    p-load array_length#0                                                         (𝕡) array_head_and_tail#0,new_item#0,index#0,array_length#0 | (𝕗) head_offset#0 | original_offset#0,next_item_offset#0,end_of_tail#0,array_length#0 (copy)
    p-load index#0                                                                (𝕡) array_head_and_tail#0,new_item#0,index#0,array_length#0 | (𝕗) head_offset#0 | original_offset#0,next_item_offset#0,end_of_tail#0,array_length#0 (copy),index#0 (copy)
    -                                                                             (𝕡) array_head_and_tail#0,new_item#0,index#0,array_length#0 | (𝕗) head_offset#0 | original_offset#0,next_item_offset#0,end_of_tail#0,tmp%3#0
    int 1                                                                         (𝕡) array_head_and_tail#0,new_item#0,index#0,array_length#0 | (𝕗) head_offset#0 | original_offset#0,next_item_offset#0,end_of_tail#0,tmp%3#0,1
    -                                                                             (𝕡) array_head_and_tail#0,new_item#0,index#0,array_length#0 | (𝕗) head_offset#0 | original_offset#0,next_item_offset#0,end_of_tail#0,is_before_end#0
    l-load-copy end_of_tail#0 1                                                   (𝕡) array_head_and_tail#0,new_item#0,index#0,array_length#0 | (𝕗) head_offset#0 | original_offset#0,next_item_offset#0,end_of_tail#0,is_before_end#0,end_of_tail#0 (copy)
    l-load next_item_offset#0 3                                                   (𝕡) array_head_and_tail#0,new_item#0,index#0,array_length#0 | (𝕗) head_offset#0 | original_offset#0,end_of_tail#0,is_before_end#0,end_of_tail#0 (copy),next_item_offset#0
    l-load is_before_end#0 2                                                      (𝕡) array_head_and_tail#0,new_item#0,index#0,array_length#0 | (𝕗) head_offset#0 | original_offset#0,end_of_tail#0,end_of_tail#0 (copy),next_item_offset#0,is_before_end#0
    select                                                                        (𝕡) array_head_and_tail#0,new_item#0,index#0,array_length#0 | (𝕗) head_offset#0 | original_offset#0,end_of_tail#0,end_offset#0
    l-load-copy end_offset#0 0                                                    (𝕡) array_head_and_tail#0,new_item#0,index#0,array_length#0 | (𝕗) head_offset#0 | original_offset#0,end_of_tail#0,end_offset#0,end_offset#0 (copy)
    l-load-copy original_offset#0 3                                               (𝕡) array_head_and_tail#0,new_item#0,index#0,array_length#0 | (𝕗) head_offset#0 | original_offset#0,end_of_tail#0,end_offset#0,end_offset#0 (copy),original_offset#0 (copy)
    -                                                                             (𝕡) array_head_and_tail#0,new_item#0,index#0,array_length#0 | (𝕗) head_offset#0 | original_offset#0,end_of_tail#0,end_offset#0,original_item_length#0
    f-store original_item_length#0                                                (𝕡) array_head_and_tail#0,new_item#0,index#0,array_length#0 | (𝕗) head_offset#0,original_item_length#0 | original_offset#0,end_of_tail#0,end_offset#0
    p-load new_item#0                                                             (𝕡) array_head_and_tail#0,new_item#0,index#0,array_length#0 | (𝕗) head_offset#0,original_item_length#0 | original_offset#0,end_of_tail#0,end_offset#0,new_item#0 (copy)
    len                                                                           (𝕡) array_head_and_tail#0,new_item#0,index#0,array_length#0 | (𝕗) head_offset#0,original_item_length#0 | original_offset#0,end_of_tail#0,end_offset#0,new_item_length#0
    f-store new_item_length#0                                                     (𝕡) array_head_and_tail#0,new_item#0,index#0,array_length#0 | (𝕗) head_offset#0,original_item_length#0,new_item_length#0 | original_offset#0,end_of_tail#0,end_offset#0
    p-load array_head_and_tail#0                                                  (𝕡) array_head_and_tail#0,new_item#0,index#0,array_length#0 | (𝕗) head_offset#0,original_item_length#0,new_item_length#0 | original_offset#0,end_of_tail#0,end_offset#0,array_head_and_tail#0 (copy)
    int 0                                                                         (𝕡) array_head_and_tail#0,new_item#0,index#0,array_length#0 | (𝕗) head_offset#0,original_item_length#0,new_item_length#0 | original_offset#0,end_of_tail#0,end_offset#0,array_head_and_tail#0 (copy),0
    l-load original_offset#0 4                                                    (𝕡) array_head_and_tail#0,new_item#0,index#0,array_length#0 | (𝕗) head_offset#0,original_item_length#0,new_item_length#0 | end_of_tail#0,end_offset#0,array_head_and_tail#0 (copy),0,original_offset#0
    substring3                                                                    (𝕡) array_head_and_tail#0,new_item#0,index#0,array_length#0 | (𝕗) head_offset#0,original_item_length#0,new_item_length#0 | end_of_tail#0,end_offset#0,tmp%4#0
    p-load new_item#0                                                             (𝕡) array_head_and_tail#0,new_item#0,index#0,array_length#0 | (𝕗) head_offset#0,original_item_length#0,new_item_length#0 | end_of_tail#0,end_offset#0,tmp%4#0,new_item#0 (copy)
    concat                                                                        (𝕡) array_head_and_tail#0,new_item#0,index#0,array_length#0 | (𝕗) head_offset#0,original_item_length#0,new_item_length#0 | end_of_tail#0,end_offset#0,tmp%5#0
    p-load array_head_and_tail#0                                                  (𝕡) array_head_and_tail#0,new_item#0,index#0,array_length#0 | (𝕗) head_offset#0,original_item_length#0,new_item_length#0 | end_of_tail#0,end_offset#0,tmp%5#0,array_head_and_tail#0 (copy)
    l-load end_offset#0 2                                                         (𝕡) array_head_and_tail#0,new_item#0,index#0,array_length#0 | (𝕗) head_offset#0,original_item_length#0,new_item_length#0 | end_of_tail#0,tmp%5#0,array_head_and_tail#0 (copy),end_offset#0
    l-load end_of_tail#0 3                                                        (𝕡) array_head_and_tail#0,new_item#0,index#0,array_length#0 | (𝕗) head_offset#0,original_item_length#0,new_item_length#0 | tmp%5#0,array_head_and_tail#0 (copy),end_offset#0,end_of_tail#0
    substring3                                                                    (𝕡) array_head_and_tail#0,new_item#0,index#0,array_length#0 | (𝕗) head_offset#0,original_item_length#0,new_item_length#0 | tmp%5#0,tmp%6#0
    l-load tmp%5#0 1                                                              (𝕡) array_head_and_tail#0,new_item#0,index#0,array_length#0 | (𝕗) head_offset#0,original_item_length#0,new_item_length#0 | tmp%6#0,tmp%5#0
    l-load tmp%6#0 1                                                              (𝕡) array_head_and_tail#0,new_item#0,index#0,array_length#0 | (𝕗) head_offset#0,original_item_length#0,new_item_length#0 | tmp%5#0,tmp%6#0
    concat                                                                        (𝕡) array_head_and_tail#0,new_item#0,index#0,array_length#0 | (𝕗) head_offset#0,original_item_length#0,new_item_length#0 | new_head_and_tail#0
    f-store new_head_and_tail#0                                                   (𝕡) array_head_and_tail#0,new_item#0,index#0,array_length#0 | (𝕗) head_offset#0,original_item_length#0,new_item_length#0,new_head_and_tail#0 |
    p-load array_length#0                                                         (𝕡) array_head_and_tail#0,new_item#0,index#0,array_length#0 | (𝕗) head_offset#0,original_item_length#0,new_item_length#0,new_head_and_tail#0 | array_length#0 (copy)
    int 2                                                                         (𝕡) array_head_and_tail#0,new_item#0,index#0,array_length#0 | (𝕗) head_offset#0,original_item_length#0,new_item_length#0,new_head_and_tail#0 | array_length#0 (copy),2
    *                                                                             (𝕡) array_head_and_tail#0,new_item#0,index#0,array_length#0 | (𝕗) head_offset#0,original_item_length#0,new_item_length#0,new_head_and_tail#0 | tmp%7#0
    f-store tmp%7#0                                                               (𝕡) array_head_and_tail#0,new_item#0,index#0,array_length#0 | (𝕗) head_offset#0,original_item_length#0,new_item_length#0,new_head_and_tail#0,tmp%7#0 |
    // Implicit fall through to static_array_replace_dynamic_element_for_header@1 (𝕡) array_head_and_tail#0,new_item#0,index#0,array_length#0 | (𝕗) head_offset#0,original_item_length#0,new_item_length#0,new_head_and_tail#0,tmp%7#0 |

static_array_replace_dynamic_element_for_header@1:                                (𝕡) array_head_and_tail#0,new_item#0,index#0,array_length#0 | (𝕗) head_offset#0,original_item_length#0,new_item_length#0,new_head_and_tail#0,tmp%7#0 |
    f-load head_offset#0                                                          (𝕡) array_head_and_tail#0,new_item#0,index#0,array_length#0 | (𝕗) head_offset#0,original_item_length#0,new_item_length#0,new_head_and_tail#0,tmp%7#0 | head_offset#0
    f-load tmp%7#0                                                                (𝕡) array_head_and_tail#0,new_item#0,index#0,array_length#0 | (𝕗) head_offset#0,original_item_length#0,new_item_length#0,new_head_and_tail#0,tmp%7#0 | head_offset#0,tmp%7#0
    <                                                                             (𝕡) array_head_and_tail#0,new_item#0,index#0,array_length#0 | (𝕗) head_offset#0,original_item_length#0,new_item_length#0,new_head_and_tail#0,tmp%7#0 | continue_looping%0#0
    bz static_array_replace_dynamic_element_after_for@4                           (𝕡) array_head_and_tail#0,new_item#0,index#0,array_length#0 | (𝕗) head_offset#0,original_item_length#0,new_item_length#0,new_head_and_tail#0,tmp%7#0 |
    // Implicit fall through to static_array_replace_dynamic_element_for_body@2   (𝕡) array_head_and_tail#0,new_item#0,index#0,array_length#0 | (𝕗) head_offset#0,original_item_length#0,new_item_length#0,new_head_and_tail#0,tmp%7#0 |

static_array_replace_dynamic_element_for_body@2:                                  (𝕡) array_head_and_tail#0,new_item#0,index#0,array_length#0 | (𝕗) head_offset#0,original_item_length#0,new_item_length#0,new_head_and_tail#0,tmp%7#0 |
    f-load new_head_and_tail#0                                                    (𝕡) array_head_and_tail#0,new_item#0,index#0,array_length#0 | (𝕗) head_offset#0,original_item_length#0,new_item_length#0,new_head_and_tail#0,tmp%7#0 | new_head_and_tail#0
    l-store-copy new_head_and_tail#0 0                                            (𝕡) array_head_and_tail#0,new_item#0,index#0,array_length#0 | (𝕗) head_offset#0,original_item_length#0,new_item_length#0,new_head_and_tail#0,tmp%7#0 | new_head_and_tail#0,new_head_and_tail#0 (copy)
    f-load head_offset#0                                                          (𝕡) array_head_and_tail#0,new_item#0,index#0,array_length#0 | (𝕗) head_offset#0,original_item_length#0,new_item_length#0,new_head_and_tail#0,tmp%7#0 | new_head_and_tail#0,new_head_and_tail#0 (copy),head_offset#0
    l-store-copy head_offset#0 2                                                  (𝕡) array_head_and_tail#0,new_item#0,index#0,array_length#0 | (𝕗) head_offset#0,original_item_length#0,new_item_length#0,new_head_and_tail#0,tmp%7#0 | head_offset#0,new_head_and_tail#0,new_head_and_tail#0 (copy),head_offset#0 (copy)
    extract_uint16                                                                (𝕡) array_head_and_tail#0,new_item#0,index#0,array_length#0 | (𝕗) head_offset#0,original_item_length#0,new_item_length#0,new_head_and_tail#0,tmp%7#0 | head_offset#0,new_head_and_tail#0,tail_offset#0
    f-load new_item_length#0                                                      (𝕡) array_head_and_tail#0,new_item#0,index#0,array_length#0 | (𝕗) head_offset#0,original_item_length#0,new_item_length#0,new_head_and_tail#0,tmp%7#0 | head_offset#0,new_head_and_tail#0,tail_offset#0,new_item_length#0
    +                                                                             (𝕡) array_head_and_tail#0,new_item#0,index#0,array_length#0 | (𝕗) head_offset#0,original_item_length#0,new_item_length#0,new_head_and_tail#0,tmp%7#0 | head_offset#0,new_head_and_tail#0,tail_offset#0
    f-load original_item_length#0                                                 (𝕡) array_head_and_tail#0,new_item#0,index#0,array_length#0 | (𝕗) head_offset#0,original_item_length#0,new_item_length#0,new_head_and_tail#0,tmp%7#0 | head_offset#0,new_head_and_tail#0,tail_offset#0,original_item_length#0
    -                                                                             (𝕡) array_head_and_tail#0,new_item#0,index#0,array_length#0 | (𝕗) head_offset#0,original_item_length#0,new_item_length#0,new_head_and_tail#0,tmp%7#0 | head_offset#0,new_head_and_tail#0,tail_offset#0
    itob                                                                          (𝕡) array_head_and_tail#0,new_item#0,index#0,array_length#0 | (𝕗) head_offset#0,original_item_length#0,new_item_length#0,new_head_and_tail#0,tmp%7#0 | head_offset#0,new_head_and_tail#0,tmp%10#0
    extract 6 2                                                                   (𝕡) array_head_and_tail#0,new_item#0,index#0,array_length#0 | (𝕗) head_offset#0,original_item_length#0,new_item_length#0,new_head_and_tail#0,tmp%7#0 | head_offset#0,new_head_and_tail#0,tail_offset_bytes#0
    l-load new_head_and_tail#0 1                                                  (𝕡) array_head_and_tail#0,new_item#0,index#0,array_length#0 | (𝕗) head_offset#0,original_item_length#0,new_item_length#0,new_head_and_tail#0,tmp%7#0 | head_offset#0,tail_offset_bytes#0,new_head_and_tail#0
    l-load-copy head_offset#0 2                                                   (𝕡) array_head_and_tail#0,new_item#0,index#0,array_length#0 | (𝕗) head_offset#0,original_item_length#0,new_item_length#0,new_head_and_tail#0,tmp%7#0 | head_offset#0,tail_offset_bytes#0,new_head_and_tail#0,head_offset#0 (copy)
    l-load tail_offset_bytes#0 2                                                  (𝕡) array_head_and_tail#0,new_item#0,index#0,array_length#0 | (𝕗) head_offset#0,original_item_length#0,new_item_length#0,new_head_and_tail#0,tmp%7#0 | head_offset#0,new_head_and_tail#0,head_offset#0 (copy),tail_offset_bytes#0
    replace3                                                                      (𝕡) array_head_and_tail#0,new_item#0,index#0,array_length#0 | (𝕗) head_offset#0,original_item_length#0,new_item_length#0,new_head_and_tail#0,tmp%7#0 | head_offset#0,new_head_and_tail#0
    f-store new_head_and_tail#0                                                   (𝕡) array_head_and_tail#0,new_item#0,index#0,array_length#0 | (𝕗) head_offset#0,original_item_length#0,new_item_length#0,new_head_and_tail#0,tmp%7#0 | head_offset#0
    l-load head_offset#0 0                                                        (𝕡) array_head_and_tail#0,new_item#0,index#0,array_length#0 | (𝕗) head_offset#0,original_item_length#0,new_item_length#0,new_head_and_tail#0,tmp%7#0 | head_offset#0
    int 2                                                                         (𝕡) array_head_and_tail#0,new_item#0,index#0,array_length#0 | (𝕗) head_offset#0,original_item_length#0,new_item_length#0,new_head_and_tail#0,tmp%7#0 | head_offset#0,2
    +                                                                             (𝕡) array_head_and_tail#0,new_item#0,index#0,array_length#0 | (𝕗) head_offset#0,original_item_length#0,new_item_length#0,new_head_and_tail#0,tmp%7#0 | head_offset#0
    f-store head_offset#0                                                         (𝕡) array_head_and_tail#0,new_item#0,index#0,array_length#0 | (𝕗) head_offset#0,original_item_length#0,new_item_length#0,new_head_and_tail#0,tmp%7#0 |
    b static_array_replace_dynamic_element_for_header@1                           (𝕡) array_head_and_tail#0,new_item#0,index#0,array_length#0 | (𝕗) head_offset#0,original_item_length#0,new_item_length#0,new_head_and_tail#0,tmp%7#0 |

static_array_replace_dynamic_element_after_for@4:                                 (𝕡) array_head_and_tail#0,new_item#0,index#0,array_length#0 | (𝕗) head_offset#0,original_item_length#0,new_item_length#0,new_head_and_tail#0,tmp%7#0 |
    f-load new_head_and_tail#0                                                    (𝕡) array_head_and_tail#0,new_item#0,index#0,array_length#0 | (𝕗) head_offset#0,original_item_length#0,new_item_length#0,new_head_and_tail#0,tmp%7#0 | new_head_and_tail#0
    retsub                                                                        new_head_and_tail#0


