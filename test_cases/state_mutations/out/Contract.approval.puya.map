{
  "version": 3,
  "sources": [
    "../contract.py"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4BK;AAPL;;AAAA;;;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;;;;;;;;;;;;;;;AAAA;;;AAAA;;;;;;;;;AAAA;;AAAA;;;;;;;AAOK;;AAAA;AAEG;AAAkB;AAAlB;AACA;AAAA;;AAAA;AADkB;AAClB;AACS;;AAAT;AAFkB;AAElB;AACA;;AAAS;;AAAT;AAAA;AAAA;;AAHkB;AAGlB;AALH;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAUG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;AAAA;;;AAAA;AAAA;AAAA;AACS;;AAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;AADA;;AACA;;;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAFA;;AAEA;;;AAAA;AAAA;;AAAA;AAAA;AAAA;AACA;;AAAS;;AAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAHA;;AAGA;;;AAAA;;AAAA;;AAAA;AANH;AAAA;AAUG;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyB;;AAAzB;AAAA;AAAA;AAAgB;AAAhB;;;AAAA;AAAA;AAAA;AACS;;AAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADyB;;AACzB;AAAA;AAAA;AAAqB;AAArB;;;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFyB;;AAEzB;AAAA;AAAA;AAAe;AAAf;;;AAAA;AAAA;;AAAA;AAAA;AAAA;AACA;;AAAS;;AAAT;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHyB;;AAGzB;AAAA;AAAA;AAAqB;AAArB;;;AAAA;;AAAA;;AAAA;AALH;AAAA;AASQ;AAAA;AAAA;AAAA;AACS;;AAAT;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;;AAAS;;AAAT;AAAA;AAAA;AAEE;;AAAA;;AAAA;AAAP;AACO;;AAAA;;AAAA;AAAP;AACO;;AAAA;AAAP;AATH;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA",
  "op_pc_offset": 0,
  "pc_events": {
    "1": {
      "subroutine": "test_cases.state_mutations.contract.Contract.__algopy_entrypoint_with_init",
      "params": {},
      "block": "main",
      "stack_in": [],
      "op": "intcblock 0 1 2 8"
    },
    "7": {
      "op": "bytecblock \"box\" \"glob\" \"loc\" 0x0000 \"map\" 0x00020000000000000001000a000362617a 0x00086d6f646966696564"
    },
    "58": {
      "op": "intc_1 // 1"
    },
    "59": {
      "op": "txn NumAppArgs",
      "defined_out": [
        "lifted%return#0",
        "tmp%0#2"
      ],
      "stack_out": [
        "lifted%return#0",
        "tmp%0#2"
      ]
    },
    "61": {
      "op": "bz main_bare_routing@11",
      "stack_out": [
        "lifted%return#0"
      ]
    },
    "64": {
      "op": "txn OnCompletion",
      "defined_out": [
        "lifted%return#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "lifted%return#0",
        "tmp%3#0"
      ]
    },
    "66": {
      "op": "!",
      "defined_out": [
        "lifted%return#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "lifted%return#0",
        "tmp%4#0"
      ]
    },
    "67": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": [
        "lifted%return#0"
      ]
    },
    "68": {
      "op": "txn ApplicationID",
      "defined_out": [
        "lifted%return#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "lifted%return#0",
        "tmp%6#0"
      ]
    },
    "70": {
      "op": "assert",
      "stack_out": [
        "lifted%return#0"
      ]
    },
    "71": {
      "op": "pushbytess 0x526e8bbf 0x95fef13d 0x0c29444b // method \"append()void\", method \"modify()void\", method \"get()(uint64,string)[]\"",
      "defined_out": [
        "Method(append()void)",
        "Method(get()(uint64,string)[])",
        "Method(modify()void)",
        "lifted%return#0"
      ],
      "stack_out": [
        "lifted%return#0",
        "Method(append()void)",
        "Method(modify()void)",
        "Method(get()(uint64,string)[])"
      ]
    },
    "88": {
      "op": "txna ApplicationArgs 0",
      "defined_out": [
        "Method(append()void)",
        "Method(get()(uint64,string)[])",
        "Method(modify()void)",
        "lifted%return#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "lifted%return#0",
        "Method(append()void)",
        "Method(modify()void)",
        "Method(get()(uint64,string)[])",
        "tmp%7#0"
      ]
    },
    "91": {
      "op": "match append modify get",
      "stack_out": [
        "lifted%return#0"
      ]
    },
    "99": {
      "op": "err"
    },
    "100": {
      "block": "main_bare_routing@11",
      "stack_in": [
        "lifted%return#0"
      ],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%9#0"
      ],
      "stack_out": [
        "lifted%return#0",
        "tmp%9#0"
      ]
    },
    "102": {
      "op": "switch main___algopy_default_create@13 main_opt_in@12",
      "stack_out": [
        "lifted%return#0"
      ]
    },
    "108": {
      "op": "err"
    },
    "109": {
      "block": "main_opt_in@12",
      "stack_in": [
        "lifted%return#0"
      ],
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%10#0"
      ],
      "stack_out": [
        "lifted%return#0",
        "tmp%10#0"
      ]
    },
    "111": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": [
        "lifted%return#0"
      ]
    },
    "112": {
      "op": "bytec_1 // \"glob\"",
      "defined_out": [
        "\"glob\""
      ],
      "stack_out": [
        "lifted%return#0",
        "\"glob\""
      ]
    },
    "113": {
      "op": "bytec_3 // 0x0000",
      "defined_out": [
        "\"glob\"",
        "0x0000"
      ],
      "stack_out": [
        "lifted%return#0",
        "\"glob\"",
        "0x0000"
      ]
    },
    "114": {
      "op": "app_global_put",
      "stack_out": [
        "lifted%return#0"
      ]
    },
    "115": {
      "op": "bytec_0 // \"box\"",
      "defined_out": [
        "\"box\""
      ],
      "stack_out": [
        "lifted%return#0",
        "\"box\""
      ]
    },
    "116": {
      "op": "box_del",
      "defined_out": [
        "{box_del}"
      ],
      "stack_out": [
        "lifted%return#0",
        "{box_del}"
      ]
    },
    "117": {
      "op": "pop",
      "stack_out": [
        "lifted%return#0"
      ]
    },
    "118": {
      "op": "bytec_0 // \"box\"",
      "stack_out": [
        "lifted%return#0",
        "\"box\""
      ]
    },
    "119": {
      "op": "bytec_3 // 0x0000",
      "stack_out": [
        "lifted%return#0",
        "\"box\"",
        "0x0000"
      ]
    },
    "120": {
      "op": "box_put",
      "stack_out": [
        "lifted%return#0"
      ]
    },
    "121": {
      "op": "txn Sender",
      "defined_out": [
        "tmp%0#3"
      ],
      "stack_out": [
        "lifted%return#0",
        "tmp%0#3"
      ]
    },
    "123": {
      "op": "bytec_2 // \"loc\"",
      "defined_out": [
        "\"loc\"",
        "tmp%0#3"
      ],
      "stack_out": [
        "lifted%return#0",
        "tmp%0#3",
        "\"loc\""
      ]
    },
    "124": {
      "op": "bytec_3 // 0x0000",
      "stack_out": [
        "lifted%return#0",
        "tmp%0#3",
        "\"loc\"",
        "0x0000"
      ]
    },
    "125": {
      "op": "app_local_put",
      "stack_out": [
        "lifted%return#0"
      ]
    },
    "126": {
      "op": "bytec 4 // \"map\"",
      "defined_out": [
        "\"map\""
      ],
      "stack_out": [
        "lifted%return#0",
        "\"map\""
      ]
    },
    "128": {
      "op": "txn Sender",
      "defined_out": [
        "\"map\"",
        "materialized_values%0#0"
      ],
      "stack_out": [
        "lifted%return#0",
        "\"map\"",
        "materialized_values%0#0"
      ]
    },
    "130": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "lifted%return#0",
        "box_prefixed_key%0#0"
      ]
    },
    "131": {
      "op": "dup",
      "defined_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0 (copy)"
      ],
      "stack_out": [
        "lifted%return#0",
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0 (copy)"
      ]
    },
    "132": {
      "op": "box_del",
      "stack_out": [
        "lifted%return#0",
        "box_prefixed_key%0#0",
        "{box_del}"
      ]
    },
    "133": {
      "op": "pop",
      "stack_out": [
        "lifted%return#0",
        "box_prefixed_key%0#0"
      ]
    },
    "134": {
      "op": "bytec_3 // 0x0000",
      "stack_out": [
        "lifted%return#0",
        "box_prefixed_key%0#0",
        "0x0000"
      ]
    },
    "135": {
      "op": "box_put",
      "stack_out": [
        "lifted%return#0"
      ]
    },
    "136": {
      "op": "return",
      "defined_out": [
        "lifted%return#0"
      ]
    },
    "137": {
      "block": "main___algopy_default_create@13",
      "stack_in": [
        "lifted%return#0"
      ],
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%12#0"
      ],
      "stack_out": [
        "lifted%return#0",
        "tmp%12#0"
      ]
    },
    "139": {
      "op": "!",
      "defined_out": [
        "tmp%13#0"
      ],
      "stack_out": [
        "lifted%return#0",
        "tmp%13#0"
      ]
    },
    "140": {
      "error": "can only call when creating",
      "op": "return // on error: can only call when creating",
      "defined_out": [
        "lifted%return#0"
      ],
      "stack_out": [
        "lifted%return#0"
      ]
    },
    "141": {
      "subroutine": "_puya_lib.arc4.dynamic_array_concat_dynamic_element",
      "params": {
        "array_items_count#0": "uint64",
        "array_head_and_tail#0": "bytes",
        "new_items_count#0": "uint64",
        "new_head_and_tail#0": "bytes"
      },
      "block": "dynamic_array_concat_dynamic_element",
      "stack_in": [],
      "op": "proto 4 1"
    },
    "144": {
      "op": "pushbytes \"\"",
      "stack_out": [
        "item_offset_adjustment#2"
      ]
    },
    "146": {
      "op": "dup"
    },
    "147": {
      "op": "frame_dig -2"
    },
    "149": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "new_head#0",
        "new_items_count#0 (copy)"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "new_items_count#0 (copy)",
        "2"
      ]
    },
    "150": {
      "op": "*",
      "defined_out": [
        "item_offset_adjustment#0",
        "new_head#0"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0"
      ]
    },
    "151": {
      "op": "frame_dig -4",
      "defined_out": [
        "array_items_count#0 (copy)",
        "item_offset_adjustment#0",
        "new_head#0"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "array_items_count#0 (copy)"
      ]
    },
    "153": {
      "op": "intc_2 // 2",
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "array_items_count#0 (copy)",
        "2"
      ]
    },
    "154": {
      "op": "*",
      "defined_out": [
        "item_offset_adjustment#0",
        "new_head#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0"
      ]
    },
    "155": {
      "op": "intc_0 // 0",
      "defined_out": [
        "head_offset#0",
        "item_offset_adjustment#0",
        "new_head#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0"
      ]
    },
    "156": {
      "block": "dynamic_array_concat_dynamic_element_for_header@1",
      "stack_in": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0"
      ],
      "op": "frame_dig 4",
      "defined_out": [
        "head_offset#0"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "head_offset#0"
      ]
    },
    "158": {
      "op": "frame_dig 3",
      "defined_out": [
        "head_offset#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "head_offset#0",
        "tmp%1#0"
      ]
    },
    "160": {
      "op": "<",
      "defined_out": [
        "continue_looping%0#0",
        "head_offset#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "continue_looping%0#0"
      ]
    },
    "161": {
      "op": "bz dynamic_array_concat_dynamic_element_after_for@4",
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0"
      ]
    },
    "164": {
      "op": "frame_dig -3",
      "defined_out": [
        "array_head_and_tail#0 (copy)",
        "head_offset#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "array_head_and_tail#0 (copy)"
      ]
    },
    "166": {
      "op": "frame_dig 4",
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "array_head_and_tail#0 (copy)",
        "head_offset#0"
      ]
    },
    "168": {
      "op": "dup",
      "defined_out": [
        "array_head_and_tail#0 (copy)",
        "head_offset#0",
        "head_offset#0 (copy)",
        "tmp%1#0"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "array_head_and_tail#0 (copy)",
        "head_offset#0 (copy)",
        "head_offset#0 (copy)"
      ]
    },
    "169": {
      "op": "cover 2",
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "head_offset#0",
        "array_head_and_tail#0 (copy)",
        "head_offset#0 (copy)"
      ]
    },
    "171": {
      "op": "extract_uint16",
      "defined_out": [
        "head_offset#0",
        "item_offset#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "head_offset#0",
        "item_offset#0"
      ]
    },
    "172": {
      "op": "frame_dig 2",
      "defined_out": [
        "head_offset#0",
        "item_offset#0",
        "item_offset_adjustment#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "head_offset#0",
        "item_offset#0",
        "item_offset_adjustment#0"
      ]
    },
    "174": {
      "op": "+",
      "defined_out": [
        "head_offset#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "head_offset#0",
        "tmp%3#0"
      ]
    },
    "175": {
      "op": "itob",
      "defined_out": [
        "head_offset#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "head_offset#0",
        "tmp%4#0"
      ]
    },
    "176": {
      "op": "extract 6 2",
      "defined_out": [
        "head_offset#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "head_offset#0",
        "tmp%5#0"
      ]
    },
    "179": {
      "op": "frame_dig 1",
      "defined_out": [
        "head_offset#0",
        "item_offset_adjustment#0",
        "new_head#0",
        "tmp%1#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "head_offset#0",
        "tmp%5#0",
        "new_head#0"
      ]
    },
    "181": {
      "op": "swap",
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "head_offset#0",
        "new_head#0",
        "tmp%5#0"
      ]
    },
    "182": {
      "op": "concat",
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "head_offset#0",
        "new_head#0"
      ]
    },
    "183": {
      "op": "frame_bury 1",
      "defined_out": [
        "head_offset#0",
        "item_offset_adjustment#0",
        "new_head#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "head_offset#0"
      ]
    },
    "185": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "head_offset#0",
        "item_offset_adjustment#0",
        "new_head#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "head_offset#0",
        "2"
      ]
    },
    "186": {
      "op": "+",
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "head_offset#0"
      ]
    },
    "187": {
      "op": "frame_bury 4",
      "defined_out": [
        "head_offset#0",
        "item_offset_adjustment#0",
        "new_head#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0"
      ]
    },
    "189": {
      "op": "b dynamic_array_concat_dynamic_element_for_header@1"
    },
    "192": {
      "block": "dynamic_array_concat_dynamic_element_after_for@4",
      "stack_in": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0"
      ],
      "op": "frame_dig -3",
      "defined_out": [
        "array_head_and_tail#0 (copy)"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "array_head_and_tail#0 (copy)"
      ]
    },
    "194": {
      "op": "len",
      "defined_out": [
        "item_offset_adjustment#2"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "item_offset_adjustment#2"
      ]
    },
    "195": {
      "op": "frame_bury 0",
      "defined_out": [
        "item_offset_adjustment#2"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0"
      ]
    },
    "197": {
      "op": "intc_0 // 0",
      "defined_out": [
        "head_offset#0",
        "item_offset_adjustment#2"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "head_offset#0"
      ]
    },
    "198": {
      "op": "frame_bury 4",
      "defined_out": [
        "head_offset#0",
        "item_offset_adjustment#2"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0"
      ]
    },
    "200": {
      "block": "dynamic_array_concat_dynamic_element_for_header@5",
      "stack_in": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0"
      ],
      "op": "frame_dig 4",
      "defined_out": [
        "head_offset#0"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "head_offset#0"
      ]
    },
    "202": {
      "op": "frame_dig 2",
      "defined_out": [
        "head_offset#0",
        "item_offset_adjustment#0"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "head_offset#0",
        "item_offset_adjustment#0"
      ]
    },
    "204": {
      "op": "<",
      "defined_out": [
        "continue_looping%1#0",
        "head_offset#0",
        "item_offset_adjustment#0"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "continue_looping%1#0"
      ]
    },
    "205": {
      "op": "bz dynamic_array_concat_dynamic_element_after_for@8",
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0"
      ]
    },
    "208": {
      "op": "frame_dig -1",
      "defined_out": [
        "head_offset#0",
        "item_offset_adjustment#0",
        "new_head_and_tail#0 (copy)"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "new_head_and_tail#0 (copy)"
      ]
    },
    "210": {
      "op": "frame_dig 4",
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "new_head_and_tail#0 (copy)",
        "head_offset#0"
      ]
    },
    "212": {
      "op": "dup",
      "defined_out": [
        "head_offset#0",
        "head_offset#0 (copy)",
        "item_offset_adjustment#0",
        "new_head_and_tail#0 (copy)"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "new_head_and_tail#0 (copy)",
        "head_offset#0 (copy)",
        "head_offset#0 (copy)"
      ]
    },
    "213": {
      "op": "cover 2",
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "head_offset#0",
        "new_head_and_tail#0 (copy)",
        "head_offset#0 (copy)"
      ]
    },
    "215": {
      "op": "extract_uint16",
      "defined_out": [
        "head_offset#0",
        "item_offset#0",
        "item_offset_adjustment#0"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "head_offset#0",
        "item_offset#0"
      ]
    },
    "216": {
      "op": "frame_dig 0",
      "defined_out": [
        "head_offset#0",
        "item_offset#0",
        "item_offset_adjustment#0",
        "item_offset_adjustment#2"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "head_offset#0",
        "item_offset#0",
        "item_offset_adjustment#2"
      ]
    },
    "218": {
      "op": "+",
      "defined_out": [
        "head_offset#0",
        "item_offset_adjustment#0",
        "item_offset_adjustment#2",
        "tmp%10#0"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "head_offset#0",
        "tmp%10#0"
      ]
    },
    "219": {
      "op": "itob",
      "defined_out": [
        "head_offset#0",
        "item_offset_adjustment#0",
        "item_offset_adjustment#2",
        "tmp%11#0"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "head_offset#0",
        "tmp%11#0"
      ]
    },
    "220": {
      "op": "extract 6 2",
      "defined_out": [
        "head_offset#0",
        "item_offset_adjustment#0",
        "item_offset_adjustment#2",
        "tmp%12#0"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "head_offset#0",
        "tmp%12#0"
      ]
    },
    "223": {
      "op": "frame_dig 1",
      "defined_out": [
        "head_offset#0",
        "item_offset_adjustment#0",
        "item_offset_adjustment#2",
        "new_head#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "head_offset#0",
        "tmp%12#0",
        "new_head#0"
      ]
    },
    "225": {
      "op": "swap",
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "head_offset#0",
        "new_head#0",
        "tmp%12#0"
      ]
    },
    "226": {
      "op": "concat",
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "head_offset#0",
        "new_head#0"
      ]
    },
    "227": {
      "op": "frame_bury 1",
      "defined_out": [
        "head_offset#0",
        "item_offset_adjustment#0",
        "item_offset_adjustment#2",
        "new_head#0"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "head_offset#0"
      ]
    },
    "229": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "head_offset#0",
        "item_offset_adjustment#0",
        "item_offset_adjustment#2",
        "new_head#0"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "head_offset#0",
        "2"
      ]
    },
    "230": {
      "op": "+",
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "head_offset#0"
      ]
    },
    "231": {
      "op": "frame_bury 4",
      "defined_out": [
        "head_offset#0",
        "item_offset_adjustment#0",
        "item_offset_adjustment#2",
        "new_head#0"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0"
      ]
    },
    "233": {
      "op": "b dynamic_array_concat_dynamic_element_for_header@5"
    },
    "236": {
      "block": "dynamic_array_concat_dynamic_element_after_for@8",
      "stack_in": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0"
      ],
      "op": "frame_dig -4",
      "defined_out": [
        "array_items_count#0 (copy)"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "array_items_count#0 (copy)"
      ]
    },
    "238": {
      "op": "frame_dig -2",
      "defined_out": [
        "array_items_count#0 (copy)",
        "new_items_count#0 (copy)"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "array_items_count#0 (copy)",
        "new_items_count#0 (copy)"
      ]
    },
    "240": {
      "op": "+",
      "defined_out": [
        "tmp%14#0"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%14#0"
      ]
    },
    "241": {
      "op": "itob",
      "defined_out": [
        "tmp%15#0"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%15#0"
      ]
    },
    "242": {
      "op": "extract 6 2",
      "defined_out": [
        "tmp%16#0"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%16#0"
      ]
    },
    "245": {
      "op": "frame_dig 1",
      "defined_out": [
        "new_head#0",
        "tmp%16#0"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%16#0",
        "new_head#0"
      ]
    },
    "247": {
      "op": "concat",
      "defined_out": [
        "new_head#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%17#0"
      ]
    },
    "248": {
      "op": "frame_dig -3",
      "defined_out": [
        "array_head_and_tail#0 (copy)",
        "new_head#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%17#0",
        "array_head_and_tail#0 (copy)"
      ]
    },
    "250": {
      "op": "frame_dig 3",
      "defined_out": [
        "array_head_and_tail#0 (copy)",
        "new_head#0",
        "tmp%1#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%17#0",
        "array_head_and_tail#0 (copy)",
        "tmp%1#0"
      ]
    },
    "252": {
      "op": "frame_dig 0",
      "defined_out": [
        "array_head_and_tail#0 (copy)",
        "item_offset_adjustment#2",
        "new_head#0",
        "tmp%1#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%17#0",
        "array_head_and_tail#0 (copy)",
        "tmp%1#0",
        "item_offset_adjustment#2"
      ]
    },
    "254": {
      "op": "substring3",
      "defined_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "tmp%1#0",
        "tmp%17#0",
        "tmp%20#0"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%17#0",
        "tmp%20#0"
      ]
    },
    "255": {
      "op": "concat",
      "defined_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "tmp%1#0",
        "tmp%21#0"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%21#0"
      ]
    },
    "256": {
      "op": "frame_dig -1",
      "defined_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "new_head_and_tail#0 (copy)",
        "tmp%1#0",
        "tmp%21#0"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%21#0",
        "new_head_and_tail#0 (copy)"
      ]
    },
    "258": {
      "op": "len",
      "defined_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%23#0"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%21#0",
        "tmp%23#0"
      ]
    },
    "259": {
      "op": "frame_dig -1",
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%21#0",
        "tmp%23#0",
        "new_head_and_tail#0 (copy)"
      ]
    },
    "261": {
      "op": "frame_dig 2",
      "defined_out": [
        "item_offset_adjustment#0",
        "item_offset_adjustment#2",
        "new_head#0",
        "new_head_and_tail#0 (copy)",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%23#0"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%21#0",
        "tmp%23#0",
        "new_head_and_tail#0 (copy)",
        "item_offset_adjustment#0"
      ]
    },
    "263": {
      "op": "uncover 2",
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%21#0",
        "new_head_and_tail#0 (copy)",
        "item_offset_adjustment#0",
        "tmp%23#0"
      ]
    },
    "265": {
      "op": "substring3",
      "defined_out": [
        "item_offset_adjustment#0",
        "item_offset_adjustment#2",
        "new_head#0",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%24#0"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%21#0",
        "tmp%24#0"
      ]
    },
    "266": {
      "op": "concat",
      "defined_out": [
        "item_offset_adjustment#0",
        "item_offset_adjustment#2",
        "new_head#0",
        "tmp%1#0",
        "tmp%25#0"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%25#0"
      ]
    },
    "267": {
      "op": "frame_bury 0"
    },
    "269": {
      "retsub": true,
      "op": "retsub"
    },
    "270": {
      "subroutine": "_puya_lib.arc4.dynamic_array_replace_dynamic_element",
      "params": {
        "source#0": "bytes",
        "new_item#0": "bytes",
        "index#0": "uint64"
      },
      "block": "dynamic_array_replace_dynamic_element",
      "stack_in": [],
      "op": "proto 3 1"
    },
    "273": {
      "op": "frame_dig -3",
      "defined_out": [
        "source#0 (copy)"
      ],
      "stack_out": [
        "source#0 (copy)"
      ]
    },
    "275": {
      "op": "substring 0 2",
      "defined_out": [
        "size_b#0"
      ],
      "stack_out": [
        "size_b#0"
      ]
    },
    "278": {
      "op": "dup",
      "defined_out": [
        "size_b#0"
      ],
      "stack_out": [
        "size_b#0",
        "size_b#0"
      ]
    },
    "279": {
      "op": "btoi",
      "defined_out": [
        "array_length#0",
        "size_b#0"
      ],
      "stack_out": [
        "size_b#0",
        "array_length#0"
      ]
    },
    "280": {
      "op": "frame_dig -3",
      "stack_out": [
        "size_b#0",
        "array_length#0",
        "source#0 (copy)"
      ]
    },
    "282": {
      "op": "extract 2 0",
      "defined_out": [
        "array_head_and_tail#0",
        "array_length#0",
        "size_b#0"
      ],
      "stack_out": [
        "size_b#0",
        "array_length#0",
        "array_head_and_tail#0"
      ]
    },
    "285": {
      "op": "frame_dig -1",
      "defined_out": [
        "array_head_and_tail#0",
        "array_length#0",
        "index#0 (copy)",
        "size_b#0"
      ],
      "stack_out": [
        "size_b#0",
        "array_length#0",
        "array_head_and_tail#0",
        "index#0 (copy)"
      ]
    },
    "287": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "array_head_and_tail#0",
        "array_length#0",
        "index#0 (copy)",
        "size_b#0"
      ],
      "stack_out": [
        "size_b#0",
        "array_length#0",
        "array_head_and_tail#0",
        "index#0 (copy)",
        "2"
      ]
    },
    "288": {
      "op": "*",
      "defined_out": [
        "array_head_and_tail#0",
        "array_length#0",
        "size_b#0",
        "tmp%0#1"
      ],
      "stack_out": [
        "size_b#0",
        "array_length#0",
        "array_head_and_tail#0",
        "tmp%0#1"
      ]
    },
    "289": {
      "op": "dig 1",
      "defined_out": [
        "array_head_and_tail#0",
        "array_head_and_tail#0 (copy)",
        "array_length#0",
        "size_b#0",
        "tmp%0#1"
      ],
      "stack_out": [
        "size_b#0",
        "array_length#0",
        "array_head_and_tail#0",
        "tmp%0#1",
        "array_head_and_tail#0 (copy)"
      ]
    },
    "291": {
      "op": "swap",
      "stack_out": [
        "size_b#0",
        "array_length#0",
        "array_head_and_tail#0",
        "array_head_and_tail#0 (copy)",
        "tmp%0#1"
      ]
    },
    "292": {
      "op": "extract_uint16",
      "defined_out": [
        "array_head_and_tail#0",
        "array_length#0",
        "original_offset#0",
        "size_b#0"
      ],
      "stack_out": [
        "size_b#0",
        "array_length#0",
        "array_head_and_tail#0",
        "original_offset#0"
      ]
    },
    "293": {
      "op": "frame_dig -1",
      "stack_out": [
        "size_b#0",
        "array_length#0",
        "array_head_and_tail#0",
        "original_offset#0",
        "index#0 (copy)"
      ]
    },
    "295": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "array_head_and_tail#0",
        "array_length#0",
        "index#0 (copy)",
        "original_offset#0",
        "size_b#0"
      ],
      "stack_out": [
        "size_b#0",
        "array_length#0",
        "array_head_and_tail#0",
        "original_offset#0",
        "index#0 (copy)",
        "1"
      ]
    },
    "296": {
      "op": "+",
      "defined_out": [
        "array_head_and_tail#0",
        "array_length#0",
        "original_offset#0",
        "size_b#0",
        "tmp%2#1"
      ],
      "stack_out": [
        "size_b#0",
        "array_length#0",
        "array_head_and_tail#0",
        "original_offset#0",
        "tmp%2#1"
      ]
    },
    "297": {
      "op": "intc_2 // 2",
      "stack_out": [
        "size_b#0",
        "array_length#0",
        "array_head_and_tail#0",
        "original_offset#0",
        "tmp%2#1",
        "2"
      ]
    },
    "298": {
      "op": "*",
      "defined_out": [
        "array_head_and_tail#0",
        "array_length#0",
        "head_offset#0",
        "original_offset#0",
        "size_b#0"
      ],
      "stack_out": [
        "size_b#0",
        "array_length#0",
        "array_head_and_tail#0",
        "original_offset#0",
        "head_offset#0"
      ]
    },
    "299": {
      "op": "dup",
      "stack_out": [
        "size_b#0",
        "array_length#0",
        "array_head_and_tail#0",
        "original_offset#0",
        "head_offset#0",
        "head_offset#0"
      ]
    },
    "300": {
      "op": "cover 4",
      "defined_out": [
        "array_head_and_tail#0",
        "array_length#0",
        "head_offset#0",
        "original_offset#0",
        "size_b#0"
      ],
      "stack_out": [
        "size_b#0",
        "head_offset#0",
        "array_length#0",
        "array_head_and_tail#0",
        "original_offset#0",
        "head_offset#0"
      ]
    },
    "302": {
      "op": "dig 2",
      "stack_out": [
        "size_b#0",
        "head_offset#0",
        "array_length#0",
        "array_head_and_tail#0",
        "original_offset#0",
        "head_offset#0",
        "array_head_and_tail#0 (copy)"
      ]
    },
    "304": {
      "op": "swap",
      "stack_out": [
        "size_b#0",
        "head_offset#0",
        "array_length#0",
        "array_head_and_tail#0",
        "original_offset#0",
        "array_head_and_tail#0 (copy)",
        "head_offset#0"
      ]
    },
    "305": {
      "op": "extract_uint16",
      "defined_out": [
        "array_head_and_tail#0",
        "array_length#0",
        "head_offset#0",
        "next_item_offset#0",
        "original_offset#0",
        "size_b#0"
      ],
      "stack_out": [
        "size_b#0",
        "head_offset#0",
        "array_length#0",
        "array_head_and_tail#0",
        "original_offset#0",
        "next_item_offset#0"
      ]
    },
    "306": {
      "op": "dig 2",
      "stack_out": [
        "size_b#0",
        "head_offset#0",
        "array_length#0",
        "array_head_and_tail#0",
        "original_offset#0",
        "next_item_offset#0",
        "array_head_and_tail#0 (copy)"
      ]
    },
    "308": {
      "op": "len",
      "defined_out": [
        "array_head_and_tail#0",
        "array_length#0",
        "end_of_tail#0",
        "head_offset#0",
        "next_item_offset#0",
        "original_offset#0",
        "size_b#0"
      ],
      "stack_out": [
        "size_b#0",
        "head_offset#0",
        "array_length#0",
        "array_head_and_tail#0",
        "original_offset#0",
        "next_item_offset#0",
        "end_of_tail#0"
      ]
    },
    "309": {
      "op": "dig 4",
      "defined_out": [
        "array_head_and_tail#0",
        "array_length#0",
        "array_length#0 (copy)",
        "end_of_tail#0",
        "head_offset#0",
        "next_item_offset#0",
        "original_offset#0",
        "size_b#0"
      ],
      "stack_out": [
        "size_b#0",
        "head_offset#0",
        "array_length#0",
        "array_head_and_tail#0",
        "original_offset#0",
        "next_item_offset#0",
        "end_of_tail#0",
        "array_length#0 (copy)"
      ]
    },
    "311": {
      "op": "frame_dig -1",
      "stack_out": [
        "size_b#0",
        "head_offset#0",
        "array_length#0",
        "array_head_and_tail#0",
        "original_offset#0",
        "next_item_offset#0",
        "end_of_tail#0",
        "array_length#0 (copy)",
        "index#0 (copy)"
      ]
    },
    "313": {
      "op": "-",
      "defined_out": [
        "array_head_and_tail#0",
        "array_length#0",
        "end_of_tail#0",
        "head_offset#0",
        "next_item_offset#0",
        "original_offset#0",
        "size_b#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "size_b#0",
        "head_offset#0",
        "array_length#0",
        "array_head_and_tail#0",
        "original_offset#0",
        "next_item_offset#0",
        "end_of_tail#0",
        "tmp%6#0"
      ]
    },
    "314": {
      "op": "intc_1 // 1",
      "stack_out": [
        "size_b#0",
        "head_offset#0",
        "array_length#0",
        "array_head_and_tail#0",
        "original_offset#0",
        "next_item_offset#0",
        "end_of_tail#0",
        "tmp%6#0",
        "1"
      ]
    },
    "315": {
      "op": "-",
      "defined_out": [
        "array_head_and_tail#0",
        "array_length#0",
        "end_of_tail#0",
        "head_offset#0",
        "is_before_end#0",
        "next_item_offset#0",
        "original_offset#0",
        "size_b#0"
      ],
      "stack_out": [
        "size_b#0",
        "head_offset#0",
        "array_length#0",
        "array_head_and_tail#0",
        "original_offset#0",
        "next_item_offset#0",
        "end_of_tail#0",
        "is_before_end#0"
      ]
    },
    "316": {
      "op": "dig 1",
      "defined_out": [
        "array_head_and_tail#0",
        "array_length#0",
        "end_of_tail#0",
        "end_of_tail#0 (copy)",
        "head_offset#0",
        "is_before_end#0",
        "next_item_offset#0",
        "original_offset#0",
        "size_b#0"
      ],
      "stack_out": [
        "size_b#0",
        "head_offset#0",
        "array_length#0",
        "array_head_and_tail#0",
        "original_offset#0",
        "next_item_offset#0",
        "end_of_tail#0",
        "is_before_end#0",
        "end_of_tail#0 (copy)"
      ]
    },
    "318": {
      "op": "uncover 3",
      "stack_out": [
        "size_b#0",
        "head_offset#0",
        "array_length#0",
        "array_head_and_tail#0",
        "original_offset#0",
        "end_of_tail#0",
        "is_before_end#0",
        "end_of_tail#0 (copy)",
        "next_item_offset#0"
      ]
    },
    "320": {
      "op": "uncover 2",
      "stack_out": [
        "size_b#0",
        "head_offset#0",
        "array_length#0",
        "array_head_and_tail#0",
        "original_offset#0",
        "end_of_tail#0",
        "end_of_tail#0 (copy)",
        "next_item_offset#0",
        "is_before_end#0"
      ]
    },
    "322": {
      "op": "select",
      "defined_out": [
        "array_head_and_tail#0",
        "array_length#0",
        "end_of_tail#0",
        "end_offset#0",
        "head_offset#0",
        "original_offset#0",
        "size_b#0"
      ],
      "stack_out": [
        "size_b#0",
        "head_offset#0",
        "array_length#0",
        "array_head_and_tail#0",
        "original_offset#0",
        "end_of_tail#0",
        "end_offset#0"
      ]
    },
    "323": {
      "op": "dup",
      "defined_out": [
        "array_head_and_tail#0",
        "array_length#0",
        "end_of_tail#0",
        "end_offset#0",
        "end_offset#0 (copy)",
        "head_offset#0",
        "original_offset#0",
        "size_b#0"
      ],
      "stack_out": [
        "size_b#0",
        "head_offset#0",
        "array_length#0",
        "array_head_and_tail#0",
        "original_offset#0",
        "end_of_tail#0",
        "end_offset#0",
        "end_offset#0 (copy)"
      ]
    },
    "324": {
      "op": "dig 3",
      "defined_out": [
        "array_head_and_tail#0",
        "array_length#0",
        "end_of_tail#0",
        "end_offset#0",
        "end_offset#0 (copy)",
        "head_offset#0",
        "original_offset#0",
        "original_offset#0 (copy)",
        "size_b#0"
      ],
      "stack_out": [
        "size_b#0",
        "head_offset#0",
        "array_length#0",
        "array_head_and_tail#0",
        "original_offset#0",
        "end_of_tail#0",
        "end_offset#0",
        "end_offset#0 (copy)",
        "original_offset#0 (copy)"
      ]
    },
    "326": {
      "op": "-",
      "defined_out": [
        "array_head_and_tail#0",
        "array_length#0",
        "end_of_tail#0",
        "end_offset#0",
        "head_offset#0",
        "original_item_length#0",
        "original_offset#0",
        "size_b#0"
      ],
      "stack_out": [
        "size_b#0",
        "head_offset#0",
        "array_length#0",
        "array_head_and_tail#0",
        "original_offset#0",
        "end_of_tail#0",
        "end_offset#0",
        "original_item_length#0"
      ]
    },
    "327": {
      "op": "cover 5",
      "defined_out": [
        "array_head_and_tail#0",
        "array_length#0",
        "end_of_tail#0",
        "end_offset#0",
        "head_offset#0",
        "original_item_length#0",
        "original_offset#0",
        "size_b#0"
      ],
      "stack_out": [
        "size_b#0",
        "head_offset#0",
        "original_item_length#0",
        "array_length#0",
        "array_head_and_tail#0",
        "original_offset#0",
        "end_of_tail#0",
        "end_offset#0"
      ]
    },
    "329": {
      "op": "frame_dig -2",
      "defined_out": [
        "array_head_and_tail#0",
        "array_length#0",
        "end_of_tail#0",
        "end_offset#0",
        "head_offset#0",
        "new_item#0 (copy)",
        "original_item_length#0",
        "original_offset#0",
        "size_b#0"
      ],
      "stack_out": [
        "size_b#0",
        "head_offset#0",
        "original_item_length#0",
        "array_length#0",
        "array_head_and_tail#0",
        "original_offset#0",
        "end_of_tail#0",
        "end_offset#0",
        "new_item#0 (copy)"
      ]
    },
    "331": {
      "op": "len",
      "defined_out": [
        "array_head_and_tail#0",
        "array_length#0",
        "end_of_tail#0",
        "end_offset#0",
        "head_offset#0",
        "new_item_length#0",
        "original_item_length#0",
        "original_offset#0",
        "size_b#0"
      ],
      "stack_out": [
        "size_b#0",
        "head_offset#0",
        "original_item_length#0",
        "array_length#0",
        "array_head_and_tail#0",
        "original_offset#0",
        "end_of_tail#0",
        "end_offset#0",
        "new_item_length#0"
      ]
    },
    "332": {
      "op": "cover 5",
      "defined_out": [
        "array_head_and_tail#0",
        "array_length#0",
        "end_of_tail#0",
        "end_offset#0",
        "head_offset#0",
        "new_item_length#0",
        "original_item_length#0",
        "original_offset#0",
        "size_b#0"
      ],
      "stack_out": [
        "size_b#0",
        "head_offset#0",
        "original_item_length#0",
        "new_item_length#0",
        "array_length#0",
        "array_head_and_tail#0",
        "original_offset#0",
        "end_of_tail#0",
        "end_offset#0"
      ]
    },
    "334": {
      "op": "dig 3",
      "stack_out": [
        "size_b#0",
        "head_offset#0",
        "original_item_length#0",
        "new_item_length#0",
        "array_length#0",
        "array_head_and_tail#0",
        "original_offset#0",
        "end_of_tail#0",
        "end_offset#0",
        "array_head_and_tail#0 (copy)"
      ]
    },
    "336": {
      "op": "intc_0 // 0",
      "stack_out": [
        "size_b#0",
        "head_offset#0",
        "original_item_length#0",
        "new_item_length#0",
        "array_length#0",
        "array_head_and_tail#0",
        "original_offset#0",
        "end_of_tail#0",
        "end_offset#0",
        "array_head_and_tail#0 (copy)",
        "0"
      ]
    },
    "337": {
      "op": "uncover 4",
      "stack_out": [
        "size_b#0",
        "head_offset#0",
        "original_item_length#0",
        "new_item_length#0",
        "array_length#0",
        "array_head_and_tail#0",
        "end_of_tail#0",
        "end_offset#0",
        "array_head_and_tail#0 (copy)",
        "0",
        "original_offset#0"
      ]
    },
    "339": {
      "op": "substring3",
      "defined_out": [
        "array_head_and_tail#0",
        "array_length#0",
        "end_of_tail#0",
        "end_offset#0",
        "head_offset#0",
        "new_item_length#0",
        "original_item_length#0",
        "size_b#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "size_b#0",
        "head_offset#0",
        "original_item_length#0",
        "new_item_length#0",
        "array_length#0",
        "array_head_and_tail#0",
        "end_of_tail#0",
        "end_offset#0",
        "tmp%11#0"
      ]
    },
    "340": {
      "op": "frame_dig -2",
      "stack_out": [
        "size_b#0",
        "head_offset#0",
        "original_item_length#0",
        "new_item_length#0",
        "array_length#0",
        "array_head_and_tail#0",
        "end_of_tail#0",
        "end_offset#0",
        "tmp%11#0",
        "new_item#0 (copy)"
      ]
    },
    "342": {
      "op": "concat",
      "defined_out": [
        "array_head_and_tail#0",
        "array_length#0",
        "end_of_tail#0",
        "end_offset#0",
        "head_offset#0",
        "new_item_length#0",
        "original_item_length#0",
        "size_b#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "size_b#0",
        "head_offset#0",
        "original_item_length#0",
        "new_item_length#0",
        "array_length#0",
        "array_head_and_tail#0",
        "end_of_tail#0",
        "end_offset#0",
        "tmp%12#0"
      ]
    },
    "343": {
      "op": "uncover 3",
      "stack_out": [
        "size_b#0",
        "head_offset#0",
        "original_item_length#0",
        "new_item_length#0",
        "array_length#0",
        "end_of_tail#0",
        "end_offset#0",
        "tmp%12#0",
        "array_head_and_tail#0"
      ]
    },
    "345": {
      "op": "uncover 2",
      "stack_out": [
        "size_b#0",
        "head_offset#0",
        "original_item_length#0",
        "new_item_length#0",
        "array_length#0",
        "end_of_tail#0",
        "tmp%12#0",
        "array_head_and_tail#0",
        "end_offset#0"
      ]
    },
    "347": {
      "op": "uncover 3",
      "stack_out": [
        "size_b#0",
        "head_offset#0",
        "original_item_length#0",
        "new_item_length#0",
        "array_length#0",
        "tmp%12#0",
        "array_head_and_tail#0",
        "end_offset#0",
        "end_of_tail#0"
      ]
    },
    "349": {
      "op": "substring3",
      "defined_out": [
        "array_length#0",
        "head_offset#0",
        "new_item_length#0",
        "original_item_length#0",
        "size_b#0",
        "tmp%12#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "size_b#0",
        "head_offset#0",
        "original_item_length#0",
        "new_item_length#0",
        "array_length#0",
        "tmp%12#0",
        "tmp%13#0"
      ]
    },
    "350": {
      "op": "concat",
      "defined_out": [
        "array_length#0",
        "head_offset#0",
        "new_head_and_tail#0",
        "new_item_length#0",
        "original_item_length#0",
        "size_b#0"
      ],
      "stack_out": [
        "size_b#0",
        "head_offset#0",
        "original_item_length#0",
        "new_item_length#0",
        "array_length#0",
        "new_head_and_tail#0"
      ]
    },
    "351": {
      "op": "swap",
      "stack_out": [
        "size_b#0",
        "head_offset#0",
        "original_item_length#0",
        "new_item_length#0",
        "new_head_and_tail#0",
        "array_length#0"
      ]
    },
    "352": {
      "op": "intc_2 // 2",
      "stack_out": [
        "size_b#0",
        "head_offset#0",
        "original_item_length#0",
        "new_item_length#0",
        "new_head_and_tail#0",
        "array_length#0",
        "2"
      ]
    },
    "353": {
      "op": "*",
      "defined_out": [
        "head_offset#0",
        "new_head_and_tail#0",
        "new_item_length#0",
        "original_item_length#0",
        "size_b#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "size_b#0",
        "head_offset#0",
        "original_item_length#0",
        "new_item_length#0",
        "new_head_and_tail#0",
        "tmp%15#0"
      ]
    },
    "354": {
      "block": "dynamic_array_replace_dynamic_element_for_header@2",
      "stack_in": [
        "size_b#0",
        "head_offset#0",
        "original_item_length#0",
        "new_item_length#0",
        "new_head_and_tail#0",
        "tmp%15#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "head_offset#0"
      ],
      "stack_out": [
        "size_b#0",
        "head_offset#0",
        "original_item_length#0",
        "new_item_length#0",
        "new_head_and_tail#0",
        "tmp%15#0",
        "head_offset#0"
      ]
    },
    "356": {
      "op": "frame_dig 5",
      "defined_out": [
        "head_offset#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "size_b#0",
        "head_offset#0",
        "original_item_length#0",
        "new_item_length#0",
        "new_head_and_tail#0",
        "tmp%15#0",
        "head_offset#0",
        "tmp%15#0"
      ]
    },
    "358": {
      "op": "<",
      "defined_out": [
        "continue_looping%0#0",
        "head_offset#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "size_b#0",
        "head_offset#0",
        "original_item_length#0",
        "new_item_length#0",
        "new_head_and_tail#0",
        "tmp%15#0",
        "continue_looping%0#0"
      ]
    },
    "359": {
      "op": "bz dynamic_array_replace_dynamic_element_after_for@5",
      "stack_out": [
        "size_b#0",
        "head_offset#0",
        "original_item_length#0",
        "new_item_length#0",
        "new_head_and_tail#0",
        "tmp%15#0"
      ]
    },
    "362": {
      "op": "frame_dig 4",
      "defined_out": [
        "head_offset#0",
        "new_head_and_tail#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "size_b#0",
        "head_offset#0",
        "original_item_length#0",
        "new_item_length#0",
        "new_head_and_tail#0",
        "tmp%15#0",
        "new_head_and_tail#0"
      ]
    },
    "364": {
      "op": "dup",
      "defined_out": [
        "head_offset#0",
        "new_head_and_tail#0",
        "new_head_and_tail#0 (copy)",
        "tmp%15#0"
      ],
      "stack_out": [
        "size_b#0",
        "head_offset#0",
        "original_item_length#0",
        "new_item_length#0",
        "new_head_and_tail#0",
        "tmp%15#0",
        "new_head_and_tail#0",
        "new_head_and_tail#0 (copy)"
      ]
    },
    "365": {
      "op": "frame_dig 1",
      "stack_out": [
        "size_b#0",
        "head_offset#0",
        "original_item_length#0",
        "new_item_length#0",
        "new_head_and_tail#0",
        "tmp%15#0",
        "new_head_and_tail#0",
        "new_head_and_tail#0 (copy)",
        "head_offset#0"
      ]
    },
    "367": {
      "op": "dup",
      "defined_out": [
        "head_offset#0",
        "head_offset#0 (copy)",
        "new_head_and_tail#0",
        "new_head_and_tail#0 (copy)",
        "tmp%15#0"
      ],
      "stack_out": [
        "size_b#0",
        "head_offset#0",
        "original_item_length#0",
        "new_item_length#0",
        "new_head_and_tail#0",
        "tmp%15#0",
        "new_head_and_tail#0",
        "new_head_and_tail#0 (copy)",
        "head_offset#0 (copy)",
        "head_offset#0 (copy)"
      ]
    },
    "368": {
      "op": "cover 3",
      "stack_out": [
        "size_b#0",
        "head_offset#0",
        "original_item_length#0",
        "new_item_length#0",
        "new_head_and_tail#0",
        "tmp%15#0",
        "head_offset#0",
        "new_head_and_tail#0",
        "new_head_and_tail#0 (copy)",
        "head_offset#0 (copy)"
      ]
    },
    "370": {
      "op": "extract_uint16",
      "defined_out": [
        "head_offset#0",
        "new_head_and_tail#0",
        "tail_offset#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "size_b#0",
        "head_offset#0",
        "original_item_length#0",
        "new_item_length#0",
        "new_head_and_tail#0",
        "tmp%15#0",
        "head_offset#0",
        "new_head_and_tail#0",
        "tail_offset#0"
      ]
    },
    "371": {
      "op": "frame_dig 3",
      "defined_out": [
        "head_offset#0",
        "new_head_and_tail#0",
        "new_item_length#0",
        "tail_offset#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "size_b#0",
        "head_offset#0",
        "original_item_length#0",
        "new_item_length#0",
        "new_head_and_tail#0",
        "tmp%15#0",
        "head_offset#0",
        "new_head_and_tail#0",
        "tail_offset#0",
        "new_item_length#0"
      ]
    },
    "373": {
      "op": "+",
      "stack_out": [
        "size_b#0",
        "head_offset#0",
        "original_item_length#0",
        "new_item_length#0",
        "new_head_and_tail#0",
        "tmp%15#0",
        "head_offset#0",
        "new_head_and_tail#0",
        "tail_offset#0"
      ]
    },
    "374": {
      "op": "frame_dig 2",
      "defined_out": [
        "head_offset#0",
        "new_head_and_tail#0",
        "new_item_length#0",
        "original_item_length#0",
        "tail_offset#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "size_b#0",
        "head_offset#0",
        "original_item_length#0",
        "new_item_length#0",
        "new_head_and_tail#0",
        "tmp%15#0",
        "head_offset#0",
        "new_head_and_tail#0",
        "tail_offset#0",
        "original_item_length#0"
      ]
    },
    "376": {
      "op": "-",
      "stack_out": [
        "size_b#0",
        "head_offset#0",
        "original_item_length#0",
        "new_item_length#0",
        "new_head_and_tail#0",
        "tmp%15#0",
        "head_offset#0",
        "new_head_and_tail#0",
        "tail_offset#0"
      ]
    },
    "377": {
      "op": "itob",
      "defined_out": [
        "head_offset#0",
        "new_head_and_tail#0",
        "new_item_length#0",
        "original_item_length#0",
        "tmp%15#0",
        "tmp%21#0"
      ],
      "stack_out": [
        "size_b#0",
        "head_offset#0",
        "original_item_length#0",
        "new_item_length#0",
        "new_head_and_tail#0",
        "tmp%15#0",
        "head_offset#0",
        "new_head_and_tail#0",
        "tmp%21#0"
      ]
    },
    "378": {
      "op": "extract 6 2",
      "defined_out": [
        "head_offset#0",
        "new_head_and_tail#0",
        "new_item_length#0",
        "original_item_length#0",
        "tail_offset_bytes#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "size_b#0",
        "head_offset#0",
        "original_item_length#0",
        "new_item_length#0",
        "new_head_and_tail#0",
        "tmp%15#0",
        "head_offset#0",
        "new_head_and_tail#0",
        "tail_offset_bytes#0"
      ]
    },
    "381": {
      "op": "dig 2"
    },
    "383": {
      "op": "swap",
      "stack_out": [
        "size_b#0",
        "head_offset#0",
        "original_item_length#0",
        "new_item_length#0",
        "new_head_and_tail#0",
        "tmp%15#0",
        "head_offset#0",
        "new_head_and_tail#0",
        "head_offset#0 (copy)",
        "tail_offset_bytes#0"
      ]
    },
    "384": {
      "op": "replace3",
      "stack_out": [
        "size_b#0",
        "head_offset#0",
        "original_item_length#0",
        "new_item_length#0",
        "new_head_and_tail#0",
        "tmp%15#0",
        "head_offset#0",
        "new_head_and_tail#0"
      ]
    },
    "385": {
      "op": "frame_bury 4",
      "defined_out": [
        "head_offset#0",
        "new_head_and_tail#0",
        "new_item_length#0",
        "original_item_length#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "size_b#0",
        "head_offset#0",
        "original_item_length#0",
        "new_item_length#0",
        "new_head_and_tail#0",
        "tmp%15#0",
        "head_offset#0"
      ]
    },
    "387": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "head_offset#0",
        "new_head_and_tail#0",
        "new_item_length#0",
        "original_item_length#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "size_b#0",
        "head_offset#0",
        "original_item_length#0",
        "new_item_length#0",
        "new_head_and_tail#0",
        "tmp%15#0",
        "head_offset#0",
        "2"
      ]
    },
    "388": {
      "op": "+",
      "stack_out": [
        "size_b#0",
        "head_offset#0",
        "original_item_length#0",
        "new_item_length#0",
        "new_head_and_tail#0",
        "tmp%15#0",
        "head_offset#0"
      ]
    },
    "389": {
      "op": "frame_bury 1",
      "defined_out": [
        "head_offset#0",
        "new_head_and_tail#0",
        "new_item_length#0",
        "original_item_length#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "size_b#0",
        "head_offset#0",
        "original_item_length#0",
        "new_item_length#0",
        "new_head_and_tail#0",
        "tmp%15#0"
      ]
    },
    "391": {
      "op": "b dynamic_array_replace_dynamic_element_for_header@2"
    },
    "394": {
      "block": "dynamic_array_replace_dynamic_element_after_for@5",
      "stack_in": [
        "size_b#0",
        "head_offset#0",
        "original_item_length#0",
        "new_item_length#0",
        "new_head_and_tail#0",
        "tmp%15#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "size_b#0"
      ],
      "stack_out": [
        "size_b#0",
        "head_offset#0",
        "original_item_length#0",
        "new_item_length#0",
        "new_head_and_tail#0",
        "tmp%15#0",
        "size_b#0"
      ]
    },
    "396": {
      "op": "frame_dig 4",
      "defined_out": [
        "new_head_and_tail#0",
        "size_b#0"
      ],
      "stack_out": [
        "size_b#0",
        "head_offset#0",
        "original_item_length#0",
        "new_item_length#0",
        "new_head_and_tail#0",
        "tmp%15#0",
        "size_b#0",
        "new_head_and_tail#0"
      ]
    },
    "398": {
      "op": "concat",
      "defined_out": [
        "new_head_and_tail#0",
        "size_b#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "size_b#0",
        "head_offset#0",
        "original_item_length#0",
        "new_item_length#0",
        "new_head_and_tail#0",
        "tmp%15#0",
        "tmp%4#0"
      ]
    },
    "399": {
      "op": "frame_bury 0"
    },
    "401": {
      "retsub": true,
      "op": "retsub"
    },
    "402": {
      "subroutine": "test_cases.state_mutations.contract.Contract.append[routing]",
      "params": {},
      "block": "append",
      "stack_in": [],
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "403": {
      "op": "bytec_1 // \"glob\"",
      "defined_out": [
        "\"glob\"",
        "0"
      ],
      "stack_out": [
        "0",
        "\"glob\""
      ]
    },
    "404": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "405": {
      "error": "check self.glob exists",
      "op": "assert // check self.glob exists",
      "stack_out": [
        "maybe_value%0#0"
      ]
    },
    "406": {
      "op": "dup",
      "defined_out": [
        "maybe_value%0#0",
        "maybe_value%0#0 (copy)"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%0#0 (copy)"
      ]
    },
    "407": {
      "op": "intc_0 // 0",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%0#0 (copy)",
        "0"
      ]
    },
    "408": {
      "op": "extract_uint16",
      "defined_out": [
        "extract_uint16%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "extract_uint16%0#0"
      ]
    },
    "409": {
      "op": "swap",
      "stack_out": [
        "extract_uint16%0#0",
        "maybe_value%0#0"
      ]
    },
    "410": {
      "op": "extract 2 0",
      "defined_out": [
        "extract_to_end%0#0",
        "extract_uint16%0#0"
      ],
      "stack_out": [
        "extract_uint16%0#0",
        "extract_to_end%0#0"
      ]
    },
    "413": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "extract_to_end%0#0",
        "extract_uint16%0#0"
      ],
      "stack_out": [
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "1"
      ]
    },
    "414": {
      "op": "bytec 5 // 0x00020000000000000001000a000362617a",
      "defined_out": [
        "0x00020000000000000001000a000362617a",
        "1",
        "extract_to_end%0#0",
        "extract_uint16%0#0"
      ],
      "stack_out": [
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "1",
        "0x00020000000000000001000a000362617a"
      ]
    },
    "416": {
      "callsub": "_puya_lib.arc4.dynamic_array_concat_dynamic_element",
      "op": "callsub dynamic_array_concat_dynamic_element",
      "defined_out": [
        "as_Encoded(len+(uint64,(len+utf8[]))[])%0#0"
      ],
      "stack_out": [
        "as_Encoded(len+(uint64,(len+utf8[]))[])%0#0"
      ]
    },
    "419": {
      "op": "bytec_1 // \"glob\"",
      "stack_out": [
        "as_Encoded(len+(uint64,(len+utf8[]))[])%0#0",
        "\"glob\""
      ]
    },
    "420": {
      "op": "swap",
      "stack_out": [
        "\"glob\"",
        "as_Encoded(len+(uint64,(len+utf8[]))[])%0#0"
      ]
    },
    "421": {
      "op": "app_global_put",
      "stack_out": []
    },
    "422": {
      "op": "txn Sender",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "424": {
      "op": "dup",
      "defined_out": [
        "tmp%2#0",
        "tmp%2#0 (copy)"
      ],
      "stack_out": [
        "tmp%2#0",
        "tmp%2#0 (copy)"
      ]
    },
    "425": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%2#0",
        "tmp%2#0 (copy)",
        "0"
      ]
    },
    "426": {
      "op": "bytec_2 // \"loc\"",
      "defined_out": [
        "\"loc\"",
        "0",
        "tmp%2#0",
        "tmp%2#0 (copy)"
      ],
      "stack_out": [
        "tmp%2#0",
        "tmp%2#0 (copy)",
        "0",
        "\"loc\""
      ]
    },
    "427": {
      "op": "app_local_get_ex",
      "defined_out": [
        "maybe_exists%1#0",
        "maybe_value%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "428": {
      "error": "check self.loc exists for account",
      "op": "assert // check self.loc exists for account",
      "stack_out": [
        "tmp%2#0",
        "maybe_value%1#0"
      ]
    },
    "429": {
      "op": "dup",
      "defined_out": [
        "maybe_value%1#0",
        "maybe_value%1#0 (copy)",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "maybe_value%1#0",
        "maybe_value%1#0 (copy)"
      ]
    },
    "430": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%2#0",
        "maybe_value%1#0",
        "maybe_value%1#0 (copy)",
        "0"
      ]
    },
    "431": {
      "op": "extract_uint16",
      "defined_out": [
        "extract_uint16%1#0",
        "maybe_value%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "maybe_value%1#0",
        "extract_uint16%1#0"
      ]
    },
    "432": {
      "op": "swap",
      "stack_out": [
        "tmp%2#0",
        "extract_uint16%1#0",
        "maybe_value%1#0"
      ]
    },
    "433": {
      "op": "extract 2 0",
      "defined_out": [
        "extract_to_end%1#0",
        "extract_uint16%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "extract_uint16%1#0",
        "extract_to_end%1#0"
      ]
    },
    "436": {
      "op": "intc_1 // 1",
      "stack_out": [
        "tmp%2#0",
        "extract_uint16%1#0",
        "extract_to_end%1#0",
        "1"
      ]
    },
    "437": {
      "op": "bytec 5 // 0x00020000000000000001000a000362617a",
      "stack_out": [
        "tmp%2#0",
        "extract_uint16%1#0",
        "extract_to_end%1#0",
        "1",
        "0x00020000000000000001000a000362617a"
      ]
    },
    "439": {
      "callsub": "_puya_lib.arc4.dynamic_array_concat_dynamic_element",
      "op": "callsub dynamic_array_concat_dynamic_element",
      "defined_out": [
        "as_Encoded(len+(uint64,(len+utf8[]))[])%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "as_Encoded(len+(uint64,(len+utf8[]))[])%1#0"
      ]
    },
    "442": {
      "op": "bytec_2 // \"loc\""
    },
    "443": {
      "op": "swap",
      "stack_out": [
        "tmp%2#0",
        "\"loc\"",
        "as_Encoded(len+(uint64,(len+utf8[]))[])%1#0"
      ]
    },
    "444": {
      "op": "app_local_put",
      "stack_out": []
    },
    "445": {
      "op": "bytec_0 // \"box\"",
      "defined_out": [
        "\"box\""
      ],
      "stack_out": [
        "\"box\""
      ]
    },
    "446": {
      "op": "box_get",
      "defined_out": [
        "aggregate%box_get%0#0",
        "aggregate%box_get%1#0"
      ],
      "stack_out": [
        "aggregate%box_get%0#0",
        "aggregate%box_get%1#0"
      ]
    },
    "447": {
      "error": "check self.box exists",
      "op": "assert // check self.box exists",
      "stack_out": [
        "aggregate%box_get%0#0"
      ]
    },
    "448": {
      "op": "dup",
      "defined_out": [
        "aggregate%box_get%0#0",
        "aggregate%box_get%0#0 (copy)"
      ],
      "stack_out": [
        "aggregate%box_get%0#0",
        "aggregate%box_get%0#0 (copy)"
      ]
    },
    "449": {
      "op": "intc_0 // 0",
      "stack_out": [
        "aggregate%box_get%0#0",
        "aggregate%box_get%0#0 (copy)",
        "0"
      ]
    },
    "450": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%box_get%0#0",
        "extract_uint16%2#0"
      ],
      "stack_out": [
        "aggregate%box_get%0#0",
        "extract_uint16%2#0"
      ]
    },
    "451": {
      "op": "swap",
      "stack_out": [
        "extract_uint16%2#0",
        "aggregate%box_get%0#0"
      ]
    },
    "452": {
      "op": "extract 2 0",
      "defined_out": [
        "extract_to_end%2#0",
        "extract_uint16%2#0"
      ],
      "stack_out": [
        "extract_uint16%2#0",
        "extract_to_end%2#0"
      ]
    },
    "455": {
      "op": "intc_1 // 1",
      "stack_out": [
        "extract_uint16%2#0",
        "extract_to_end%2#0",
        "1"
      ]
    },
    "456": {
      "op": "bytec 5 // 0x00020000000000000001000a000362617a",
      "stack_out": [
        "extract_uint16%2#0",
        "extract_to_end%2#0",
        "1",
        "0x00020000000000000001000a000362617a"
      ]
    },
    "458": {
      "callsub": "_puya_lib.arc4.dynamic_array_concat_dynamic_element",
      "op": "callsub dynamic_array_concat_dynamic_element",
      "defined_out": [
        "as_Encoded(len+(uint64,(len+utf8[]))[])%2#0"
      ],
      "stack_out": [
        "as_Encoded(len+(uint64,(len+utf8[]))[])%2#0"
      ]
    },
    "461": {
      "op": "bytec_0 // \"box\"",
      "stack_out": [
        "as_Encoded(len+(uint64,(len+utf8[]))[])%2#0",
        "\"box\""
      ]
    },
    "462": {
      "op": "box_del",
      "defined_out": [
        "as_Encoded(len+(uint64,(len+utf8[]))[])%2#0",
        "{box_del}"
      ],
      "stack_out": [
        "as_Encoded(len+(uint64,(len+utf8[]))[])%2#0",
        "{box_del}"
      ]
    },
    "463": {
      "op": "pop",
      "stack_out": [
        "as_Encoded(len+(uint64,(len+utf8[]))[])%2#0"
      ]
    },
    "464": {
      "op": "bytec_0 // \"box\"",
      "stack_out": [
        "as_Encoded(len+(uint64,(len+utf8[]))[])%2#0",
        "\"box\""
      ]
    },
    "465": {
      "op": "swap",
      "stack_out": [
        "\"box\"",
        "as_Encoded(len+(uint64,(len+utf8[]))[])%2#0"
      ]
    },
    "466": {
      "op": "box_put",
      "stack_out": []
    },
    "467": {
      "op": "bytec 4 // \"map\"",
      "defined_out": [
        "\"map\""
      ],
      "stack_out": [
        "\"map\""
      ]
    },
    "469": {
      "op": "txn Sender",
      "defined_out": [
        "\"map\"",
        "materialized_values%0#0"
      ],
      "stack_out": [
        "\"map\"",
        "materialized_values%0#0"
      ]
    },
    "471": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0"
      ]
    },
    "472": {
      "op": "dup",
      "defined_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0 (copy)"
      ]
    },
    "473": {
      "op": "box_get",
      "defined_out": [
        "aggregate%box_get%2#0",
        "aggregate%box_get%3#0",
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "aggregate%box_get%2#0",
        "aggregate%box_get%3#0"
      ]
    },
    "474": {
      "error": "check self.map entry exists",
      "op": "assert // check self.map entry exists",
      "stack_out": [
        "box_prefixed_key%0#0",
        "aggregate%box_get%2#0"
      ]
    },
    "475": {
      "op": "dup",
      "defined_out": [
        "aggregate%box_get%2#0",
        "aggregate%box_get%2#0 (copy)",
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "aggregate%box_get%2#0",
        "aggregate%box_get%2#0 (copy)"
      ]
    },
    "476": {
      "op": "intc_0 // 0",
      "stack_out": [
        "box_prefixed_key%0#0",
        "aggregate%box_get%2#0",
        "aggregate%box_get%2#0 (copy)",
        "0"
      ]
    },
    "477": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%box_get%2#0",
        "box_prefixed_key%0#0",
        "extract_uint16%3#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "aggregate%box_get%2#0",
        "extract_uint16%3#0"
      ]
    },
    "478": {
      "op": "swap",
      "stack_out": [
        "box_prefixed_key%0#0",
        "extract_uint16%3#0",
        "aggregate%box_get%2#0"
      ]
    },
    "479": {
      "op": "extract 2 0",
      "defined_out": [
        "box_prefixed_key%0#0",
        "extract_to_end%3#0",
        "extract_uint16%3#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "extract_uint16%3#0",
        "extract_to_end%3#0"
      ]
    },
    "482": {
      "op": "intc_1 // 1",
      "stack_out": [
        "box_prefixed_key%0#0",
        "extract_uint16%3#0",
        "extract_to_end%3#0",
        "1"
      ]
    },
    "483": {
      "op": "bytec 5 // 0x00020000000000000001000a000362617a",
      "stack_out": [
        "box_prefixed_key%0#0",
        "extract_uint16%3#0",
        "extract_to_end%3#0",
        "1",
        "0x00020000000000000001000a000362617a"
      ]
    },
    "485": {
      "callsub": "_puya_lib.arc4.dynamic_array_concat_dynamic_element",
      "op": "callsub dynamic_array_concat_dynamic_element",
      "defined_out": [
        "as_Encoded(len+(uint64,(len+utf8[]))[])%3#0",
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "as_Encoded(len+(uint64,(len+utf8[]))[])%3#0"
      ]
    },
    "488": {
      "op": "dig 1",
      "stack_out": [
        "box_prefixed_key%0#0",
        "as_Encoded(len+(uint64,(len+utf8[]))[])%3#0",
        "box_prefixed_key%0#0 (copy)"
      ]
    },
    "490": {
      "op": "box_del",
      "stack_out": [
        "box_prefixed_key%0#0",
        "as_Encoded(len+(uint64,(len+utf8[]))[])%3#0",
        "{box_del}"
      ]
    },
    "491": {
      "op": "pop",
      "stack_out": [
        "box_prefixed_key%0#0",
        "as_Encoded(len+(uint64,(len+utf8[]))[])%3#0"
      ]
    },
    "492": {
      "op": "box_put",
      "stack_out": []
    },
    "493": {
      "op": "intc_1 // 1",
      "stack_out": [
        "1"
      ]
    },
    "494": {
      "op": "return",
      "stack_out": []
    },
    "495": {
      "subroutine": "test_cases.state_mutations.contract.Contract.modify[routing]",
      "params": {},
      "block": "modify",
      "stack_in": [],
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "496": {
      "op": "bytec_1 // \"glob\"",
      "defined_out": [
        "\"glob\"",
        "0"
      ],
      "stack_out": [
        "0",
        "\"glob\""
      ]
    },
    "497": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "498": {
      "error": "check self.glob exists",
      "op": "assert // check self.glob exists",
      "stack_out": [
        "maybe_value%0#0"
      ]
    },
    "499": {
      "op": "dup",
      "defined_out": [
        "maybe_value%0#0",
        "maybe_value%0#0 (copy)"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%0#0 (copy)"
      ]
    },
    "500": {
      "op": "extract 2 0",
      "defined_out": [
        "aggregate%array_head_and_tail%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "aggregate%array_head_and_tail%0#0"
      ]
    },
    "503": {
      "op": "dig 1",
      "stack_out": [
        "maybe_value%0#0",
        "aggregate%array_head_and_tail%0#0",
        "maybe_value%0#0 (copy)"
      ]
    },
    "505": {
      "op": "intc_0 // 0",
      "stack_out": [
        "maybe_value%0#0",
        "aggregate%array_head_and_tail%0#0",
        "maybe_value%0#0 (copy)",
        "0"
      ]
    },
    "506": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%array_head_and_tail%0#0",
        "aggregate%array_length%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%array_length%0#0"
      ]
    },
    "507": {
      "op": "dig 1",
      "defined_out": [
        "aggregate%array_head_and_tail%0#0",
        "aggregate%array_head_and_tail%0#0 (copy)",
        "aggregate%array_length%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%array_length%0#0",
        "aggregate%array_head_and_tail%0#0 (copy)"
      ]
    },
    "509": {
      "op": "intc_0 // 0",
      "stack_out": [
        "maybe_value%0#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%array_length%0#0",
        "aggregate%array_head_and_tail%0#0 (copy)",
        "0"
      ]
    },
    "510": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%array_head_and_tail%0#0",
        "aggregate%array_length%0#0",
        "aggregate%item_offset%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%array_length%0#0",
        "aggregate%item_offset%0#0"
      ]
    },
    "511": {
      "op": "dig 1",
      "defined_out": [
        "aggregate%array_head_and_tail%0#0",
        "aggregate%array_length%0#0",
        "aggregate%array_length%0#0 (copy)",
        "aggregate%item_offset%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%array_length%0#0",
        "aggregate%item_offset%0#0",
        "aggregate%array_length%0#0 (copy)"
      ]
    },
    "513": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%array_length%0#0",
        "aggregate%array_length%0#0 (copy)",
        "aggregate%item_offset%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%array_length%0#0",
        "aggregate%item_offset%0#0",
        "aggregate%array_length%0#0 (copy)",
        "1"
      ]
    },
    "514": {
      "error": "index access is out of bounds",
      "op": "- // on error: index access is out of bounds",
      "defined_out": [
        "aggregate%array_head_and_tail%0#0",
        "aggregate%array_length%0#0",
        "aggregate%has_next%0#0",
        "aggregate%item_offset%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%array_length%0#0",
        "aggregate%item_offset%0#0",
        "aggregate%has_next%0#0"
      ]
    },
    "515": {
      "op": "dig 3",
      "stack_out": [
        "maybe_value%0#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%array_length%0#0",
        "aggregate%item_offset%0#0",
        "aggregate%has_next%0#0",
        "aggregate%array_head_and_tail%0#0 (copy)"
      ]
    },
    "517": {
      "op": "len",
      "defined_out": [
        "aggregate%array_head_and_tail%0#0",
        "aggregate%array_length%0#0",
        "aggregate%end_of_array%0#0",
        "aggregate%has_next%0#0",
        "aggregate%item_offset%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%array_length%0#0",
        "aggregate%item_offset%0#0",
        "aggregate%has_next%0#0",
        "aggregate%end_of_array%0#0"
      ]
    },
    "518": {
      "op": "dig 4",
      "stack_out": [
        "maybe_value%0#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%array_length%0#0",
        "aggregate%item_offset%0#0",
        "aggregate%has_next%0#0",
        "aggregate%end_of_array%0#0",
        "aggregate%array_head_and_tail%0#0 (copy)"
      ]
    },
    "520": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%array_head_and_tail%0#0 (copy)",
        "aggregate%array_length%0#0",
        "aggregate%end_of_array%0#0",
        "aggregate%has_next%0#0",
        "aggregate%item_offset%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%array_length%0#0",
        "aggregate%item_offset%0#0",
        "aggregate%has_next%0#0",
        "aggregate%end_of_array%0#0",
        "aggregate%array_head_and_tail%0#0 (copy)",
        "2"
      ]
    },
    "521": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%array_head_and_tail%0#0",
        "aggregate%array_length%0#0",
        "aggregate%end_of_array%0#0",
        "aggregate%has_next%0#0",
        "aggregate%item_offset%0#0",
        "aggregate%next_item_offset%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%array_length%0#0",
        "aggregate%item_offset%0#0",
        "aggregate%has_next%0#0",
        "aggregate%end_of_array%0#0",
        "aggregate%next_item_offset%0#0"
      ]
    },
    "522": {
      "op": "uncover 2",
      "stack_out": [
        "maybe_value%0#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%array_length%0#0",
        "aggregate%item_offset%0#0",
        "aggregate%end_of_array%0#0",
        "aggregate%next_item_offset%0#0",
        "aggregate%has_next%0#0"
      ]
    },
    "524": {
      "op": "select",
      "defined_out": [
        "aggregate%array_head_and_tail%0#0",
        "aggregate%array_length%0#0",
        "aggregate%end_offset%0#0",
        "aggregate%item_offset%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%array_length%0#0",
        "aggregate%item_offset%0#0",
        "aggregate%end_offset%0#0"
      ]
    },
    "525": {
      "op": "uncover 3",
      "stack_out": [
        "maybe_value%0#0",
        "aggregate%array_length%0#0",
        "aggregate%item_offset%0#0",
        "aggregate%end_offset%0#0",
        "aggregate%array_head_and_tail%0#0"
      ]
    },
    "527": {
      "op": "cover 2",
      "stack_out": [
        "maybe_value%0#0",
        "aggregate%array_length%0#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%item_offset%0#0",
        "aggregate%end_offset%0#0"
      ]
    },
    "529": {
      "op": "substring3",
      "defined_out": [
        "aggregate%array_length%0#0",
        "aggregate%substring3%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "aggregate%array_length%0#0",
        "aggregate%substring3%0#0"
      ]
    },
    "530": {
      "op": "dup",
      "defined_out": [
        "aggregate%array_length%0#0",
        "aggregate%substring3%0#0",
        "aggregate%substring3%0#0 (copy)",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "aggregate%array_length%0#0",
        "aggregate%substring3%0#0",
        "aggregate%substring3%0#0 (copy)"
      ]
    },
    "531": {
      "op": "intc_3 // 8",
      "defined_out": [
        "8",
        "aggregate%array_length%0#0",
        "aggregate%substring3%0#0",
        "aggregate%substring3%0#0 (copy)",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "aggregate%array_length%0#0",
        "aggregate%substring3%0#0",
        "aggregate%substring3%0#0 (copy)",
        "8"
      ]
    },
    "532": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%array_length%0#0",
        "aggregate%item_offset%1#0",
        "aggregate%substring3%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "aggregate%array_length%0#0",
        "aggregate%substring3%0#0",
        "aggregate%item_offset%1#0"
      ]
    },
    "533": {
      "op": "intc_0 // 0"
    },
    "534": {
      "op": "swap",
      "stack_out": [
        "maybe_value%0#0",
        "aggregate%array_length%0#0",
        "aggregate%substring3%0#0",
        "0",
        "aggregate%item_offset%1#0"
      ]
    },
    "535": {
      "op": "extract3",
      "defined_out": [
        "aggregate%array_length%0#0",
        "aggregate%data_up_to_item%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "aggregate%array_length%0#0",
        "aggregate%data_up_to_item%0#0"
      ]
    },
    "536": {
      "op": "bytec 6 // 0x00086d6f646966696564",
      "defined_out": [
        "0x00086d6f646966696564",
        "aggregate%array_length%0#0",
        "aggregate%data_up_to_item%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "aggregate%array_length%0#0",
        "aggregate%data_up_to_item%0#0",
        "0x00086d6f646966696564"
      ]
    },
    "538": {
      "op": "concat",
      "defined_out": [
        "aggregate%array_length%0#0",
        "aggregate%updated_data%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "aggregate%array_length%0#0",
        "aggregate%updated_data%0#0"
      ]
    },
    "539": {
      "op": "swap",
      "stack_out": [
        "maybe_value%0#0",
        "aggregate%updated_data%0#0",
        "aggregate%array_length%0#0"
      ]
    },
    "540": {
      "error": "index access is out of bounds",
      "op": "assert // index access is out of bounds",
      "stack_out": [
        "maybe_value%0#0",
        "aggregate%updated_data%0#0"
      ]
    },
    "541": {
      "op": "intc_0 // 0",
      "stack_out": [
        "maybe_value%0#0",
        "aggregate%updated_data%0#0",
        "0"
      ]
    },
    "542": {
      "callsub": "_puya_lib.arc4.dynamic_array_replace_dynamic_element",
      "op": "callsub dynamic_array_replace_dynamic_element",
      "defined_out": [
        "aggregate%updated_array%0#0"
      ],
      "stack_out": [
        "aggregate%updated_array%0#0"
      ]
    },
    "545": {
      "op": "bytec_1 // \"glob\"",
      "stack_out": [
        "aggregate%updated_array%0#0",
        "\"glob\""
      ]
    },
    "546": {
      "op": "swap",
      "stack_out": [
        "\"glob\"",
        "aggregate%updated_array%0#0"
      ]
    },
    "547": {
      "op": "app_global_put",
      "stack_out": []
    },
    "548": {
      "op": "txn Sender",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "550": {
      "op": "dup",
      "defined_out": [
        "tmp%2#0",
        "tmp%2#0 (copy)"
      ],
      "stack_out": [
        "tmp%2#0",
        "tmp%2#0 (copy)"
      ]
    },
    "551": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%2#0",
        "tmp%2#0 (copy)",
        "0"
      ]
    },
    "552": {
      "op": "bytec_2 // \"loc\"",
      "defined_out": [
        "\"loc\"",
        "0",
        "tmp%2#0",
        "tmp%2#0 (copy)"
      ],
      "stack_out": [
        "tmp%2#0",
        "tmp%2#0 (copy)",
        "0",
        "\"loc\""
      ]
    },
    "553": {
      "op": "app_local_get_ex",
      "defined_out": [
        "maybe_exists%1#0",
        "maybe_value%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "554": {
      "error": "check self.loc exists for account",
      "op": "assert // check self.loc exists for account",
      "stack_out": [
        "tmp%2#0",
        "maybe_value%1#0"
      ]
    },
    "555": {
      "op": "dup",
      "defined_out": [
        "maybe_value%1#0",
        "maybe_value%1#0 (copy)",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "maybe_value%1#0",
        "maybe_value%1#0 (copy)"
      ]
    },
    "556": {
      "op": "extract 2 0",
      "defined_out": [
        "aggregate%array_head_and_tail%1#0",
        "maybe_value%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "maybe_value%1#0",
        "aggregate%array_head_and_tail%1#0"
      ]
    },
    "559": {
      "op": "dig 1",
      "stack_out": [
        "tmp%2#0",
        "maybe_value%1#0",
        "aggregate%array_head_and_tail%1#0",
        "maybe_value%1#0 (copy)"
      ]
    },
    "561": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%2#0",
        "maybe_value%1#0",
        "aggregate%array_head_and_tail%1#0",
        "maybe_value%1#0 (copy)",
        "0"
      ]
    },
    "562": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%array_head_and_tail%1#0",
        "aggregate%array_length%2#0",
        "maybe_value%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "maybe_value%1#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%array_length%2#0"
      ]
    },
    "563": {
      "op": "dig 1",
      "defined_out": [
        "aggregate%array_head_and_tail%1#0",
        "aggregate%array_head_and_tail%1#0 (copy)",
        "aggregate%array_length%2#0",
        "maybe_value%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "maybe_value%1#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%array_length%2#0",
        "aggregate%array_head_and_tail%1#0 (copy)"
      ]
    },
    "565": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%2#0",
        "maybe_value%1#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%array_length%2#0",
        "aggregate%array_head_and_tail%1#0 (copy)",
        "0"
      ]
    },
    "566": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%array_head_and_tail%1#0",
        "aggregate%array_length%2#0",
        "aggregate%item_offset%2#0",
        "maybe_value%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "maybe_value%1#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%array_length%2#0",
        "aggregate%item_offset%2#0"
      ]
    },
    "567": {
      "op": "dig 1",
      "defined_out": [
        "aggregate%array_head_and_tail%1#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%2#0 (copy)",
        "aggregate%item_offset%2#0",
        "maybe_value%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "maybe_value%1#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%array_length%2#0",
        "aggregate%item_offset%2#0",
        "aggregate%array_length%2#0 (copy)"
      ]
    },
    "569": {
      "op": "intc_1 // 1",
      "stack_out": [
        "tmp%2#0",
        "maybe_value%1#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%array_length%2#0",
        "aggregate%item_offset%2#0",
        "aggregate%array_length%2#0 (copy)",
        "1"
      ]
    },
    "570": {
      "error": "index access is out of bounds",
      "op": "- // on error: index access is out of bounds",
      "defined_out": [
        "aggregate%array_head_and_tail%1#0",
        "aggregate%array_length%2#0",
        "aggregate%has_next%1#0",
        "aggregate%item_offset%2#0",
        "maybe_value%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "maybe_value%1#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%array_length%2#0",
        "aggregate%item_offset%2#0",
        "aggregate%has_next%1#0"
      ]
    },
    "571": {
      "op": "dig 3",
      "stack_out": [
        "tmp%2#0",
        "maybe_value%1#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%array_length%2#0",
        "aggregate%item_offset%2#0",
        "aggregate%has_next%1#0",
        "aggregate%array_head_and_tail%1#0 (copy)"
      ]
    },
    "573": {
      "op": "len",
      "defined_out": [
        "aggregate%array_head_and_tail%1#0",
        "aggregate%array_length%2#0",
        "aggregate%end_of_array%1#0",
        "aggregate%has_next%1#0",
        "aggregate%item_offset%2#0",
        "maybe_value%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "maybe_value%1#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%array_length%2#0",
        "aggregate%item_offset%2#0",
        "aggregate%has_next%1#0",
        "aggregate%end_of_array%1#0"
      ]
    },
    "574": {
      "op": "dig 4",
      "stack_out": [
        "tmp%2#0",
        "maybe_value%1#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%array_length%2#0",
        "aggregate%item_offset%2#0",
        "aggregate%has_next%1#0",
        "aggregate%end_of_array%1#0",
        "aggregate%array_head_and_tail%1#0 (copy)"
      ]
    },
    "576": {
      "op": "intc_2 // 2",
      "stack_out": [
        "tmp%2#0",
        "maybe_value%1#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%array_length%2#0",
        "aggregate%item_offset%2#0",
        "aggregate%has_next%1#0",
        "aggregate%end_of_array%1#0",
        "aggregate%array_head_and_tail%1#0 (copy)",
        "2"
      ]
    },
    "577": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%array_head_and_tail%1#0",
        "aggregate%array_length%2#0",
        "aggregate%end_of_array%1#0",
        "aggregate%has_next%1#0",
        "aggregate%item_offset%2#0",
        "aggregate%next_item_offset%1#0",
        "maybe_value%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "maybe_value%1#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%array_length%2#0",
        "aggregate%item_offset%2#0",
        "aggregate%has_next%1#0",
        "aggregate%end_of_array%1#0",
        "aggregate%next_item_offset%1#0"
      ]
    },
    "578": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%2#0",
        "maybe_value%1#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%array_length%2#0",
        "aggregate%item_offset%2#0",
        "aggregate%end_of_array%1#0",
        "aggregate%next_item_offset%1#0",
        "aggregate%has_next%1#0"
      ]
    },
    "580": {
      "op": "select",
      "defined_out": [
        "aggregate%array_head_and_tail%1#0",
        "aggregate%array_length%2#0",
        "aggregate%end_offset%1#0",
        "aggregate%item_offset%2#0",
        "maybe_value%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "maybe_value%1#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%array_length%2#0",
        "aggregate%item_offset%2#0",
        "aggregate%end_offset%1#0"
      ]
    },
    "581": {
      "op": "uncover 3",
      "stack_out": [
        "tmp%2#0",
        "maybe_value%1#0",
        "aggregate%array_length%2#0",
        "aggregate%item_offset%2#0",
        "aggregate%end_offset%1#0",
        "aggregate%array_head_and_tail%1#0"
      ]
    },
    "583": {
      "op": "cover 2",
      "stack_out": [
        "tmp%2#0",
        "maybe_value%1#0",
        "aggregate%array_length%2#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%item_offset%2#0",
        "aggregate%end_offset%1#0"
      ]
    },
    "585": {
      "op": "substring3",
      "defined_out": [
        "aggregate%array_length%2#0",
        "aggregate%substring3%2#0",
        "maybe_value%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "maybe_value%1#0",
        "aggregate%array_length%2#0",
        "aggregate%substring3%2#0"
      ]
    },
    "586": {
      "op": "dup",
      "defined_out": [
        "aggregate%array_length%2#0",
        "aggregate%substring3%2#0",
        "aggregate%substring3%2#0 (copy)",
        "maybe_value%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "maybe_value%1#0",
        "aggregate%array_length%2#0",
        "aggregate%substring3%2#0",
        "aggregate%substring3%2#0 (copy)"
      ]
    },
    "587": {
      "op": "intc_3 // 8",
      "stack_out": [
        "tmp%2#0",
        "maybe_value%1#0",
        "aggregate%array_length%2#0",
        "aggregate%substring3%2#0",
        "aggregate%substring3%2#0 (copy)",
        "8"
      ]
    },
    "588": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%array_length%2#0",
        "aggregate%item_offset%3#0",
        "aggregate%substring3%2#0",
        "maybe_value%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "maybe_value%1#0",
        "aggregate%array_length%2#0",
        "aggregate%substring3%2#0",
        "aggregate%item_offset%3#0"
      ]
    },
    "589": {
      "op": "intc_0 // 0"
    },
    "590": {
      "op": "swap",
      "stack_out": [
        "tmp%2#0",
        "maybe_value%1#0",
        "aggregate%array_length%2#0",
        "aggregate%substring3%2#0",
        "0",
        "aggregate%item_offset%3#0"
      ]
    },
    "591": {
      "op": "extract3",
      "defined_out": [
        "aggregate%array_length%2#0",
        "aggregate%data_up_to_item%1#0",
        "maybe_value%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "maybe_value%1#0",
        "aggregate%array_length%2#0",
        "aggregate%data_up_to_item%1#0"
      ]
    },
    "592": {
      "op": "bytec 6 // 0x00086d6f646966696564",
      "stack_out": [
        "tmp%2#0",
        "maybe_value%1#0",
        "aggregate%array_length%2#0",
        "aggregate%data_up_to_item%1#0",
        "0x00086d6f646966696564"
      ]
    },
    "594": {
      "op": "concat",
      "defined_out": [
        "aggregate%array_length%2#0",
        "aggregate%updated_data%1#0",
        "maybe_value%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "maybe_value%1#0",
        "aggregate%array_length%2#0",
        "aggregate%updated_data%1#0"
      ]
    },
    "595": {
      "op": "swap",
      "stack_out": [
        "tmp%2#0",
        "maybe_value%1#0",
        "aggregate%updated_data%1#0",
        "aggregate%array_length%2#0"
      ]
    },
    "596": {
      "error": "index access is out of bounds",
      "op": "assert // index access is out of bounds",
      "stack_out": [
        "tmp%2#0",
        "maybe_value%1#0",
        "aggregate%updated_data%1#0"
      ]
    },
    "597": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%2#0",
        "maybe_value%1#0",
        "aggregate%updated_data%1#0",
        "0"
      ]
    },
    "598": {
      "callsub": "_puya_lib.arc4.dynamic_array_replace_dynamic_element",
      "op": "callsub dynamic_array_replace_dynamic_element",
      "defined_out": [
        "aggregate%updated_array%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "aggregate%updated_array%1#0"
      ]
    },
    "601": {
      "op": "bytec_2 // \"loc\""
    },
    "602": {
      "op": "swap",
      "stack_out": [
        "tmp%2#0",
        "\"loc\"",
        "aggregate%updated_array%1#0"
      ]
    },
    "603": {
      "op": "app_local_put",
      "stack_out": []
    },
    "604": {
      "op": "bytec_0 // \"box\"",
      "defined_out": [
        "\"box\""
      ],
      "stack_out": [
        "\"box\""
      ]
    },
    "605": {
      "op": "box_get",
      "defined_out": [
        "aggregate%box_get%0#0",
        "aggregate%box_get%1#0"
      ],
      "stack_out": [
        "aggregate%box_get%0#0",
        "aggregate%box_get%1#0"
      ]
    },
    "606": {
      "error": "check self.box exists",
      "op": "assert // check self.box exists",
      "stack_out": [
        "aggregate%box_get%0#0"
      ]
    },
    "607": {
      "op": "dup",
      "defined_out": [
        "aggregate%box_get%0#0",
        "aggregate%box_get%0#0 (copy)"
      ],
      "stack_out": [
        "aggregate%box_get%0#0",
        "aggregate%box_get%0#0 (copy)"
      ]
    },
    "608": {
      "op": "extract 2 0",
      "defined_out": [
        "aggregate%array_head_and_tail%2#0",
        "aggregate%box_get%0#0"
      ],
      "stack_out": [
        "aggregate%box_get%0#0",
        "aggregate%array_head_and_tail%2#0"
      ]
    },
    "611": {
      "op": "dig 1",
      "stack_out": [
        "aggregate%box_get%0#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%box_get%0#0 (copy)"
      ]
    },
    "613": {
      "op": "intc_0 // 0",
      "stack_out": [
        "aggregate%box_get%0#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%box_get%0#0 (copy)",
        "0"
      ]
    },
    "614": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%array_head_and_tail%2#0",
        "aggregate%array_length%4#0",
        "aggregate%box_get%0#0"
      ],
      "stack_out": [
        "aggregate%box_get%0#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%array_length%4#0"
      ]
    },
    "615": {
      "op": "dig 1",
      "defined_out": [
        "aggregate%array_head_and_tail%2#0",
        "aggregate%array_head_and_tail%2#0 (copy)",
        "aggregate%array_length%4#0",
        "aggregate%box_get%0#0"
      ],
      "stack_out": [
        "aggregate%box_get%0#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%array_length%4#0",
        "aggregate%array_head_and_tail%2#0 (copy)"
      ]
    },
    "617": {
      "op": "intc_0 // 0",
      "stack_out": [
        "aggregate%box_get%0#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%array_length%4#0",
        "aggregate%array_head_and_tail%2#0 (copy)",
        "0"
      ]
    },
    "618": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%array_head_and_tail%2#0",
        "aggregate%array_length%4#0",
        "aggregate%box_get%0#0",
        "aggregate%item_offset%4#0"
      ],
      "stack_out": [
        "aggregate%box_get%0#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%array_length%4#0",
        "aggregate%item_offset%4#0"
      ]
    },
    "619": {
      "op": "dig 1",
      "defined_out": [
        "aggregate%array_head_and_tail%2#0",
        "aggregate%array_length%4#0",
        "aggregate%array_length%4#0 (copy)",
        "aggregate%box_get%0#0",
        "aggregate%item_offset%4#0"
      ],
      "stack_out": [
        "aggregate%box_get%0#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%array_length%4#0",
        "aggregate%item_offset%4#0",
        "aggregate%array_length%4#0 (copy)"
      ]
    },
    "621": {
      "op": "intc_1 // 1",
      "stack_out": [
        "aggregate%box_get%0#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%array_length%4#0",
        "aggregate%item_offset%4#0",
        "aggregate%array_length%4#0 (copy)",
        "1"
      ]
    },
    "622": {
      "error": "index access is out of bounds",
      "op": "- // on error: index access is out of bounds",
      "defined_out": [
        "aggregate%array_head_and_tail%2#0",
        "aggregate%array_length%4#0",
        "aggregate%box_get%0#0",
        "aggregate%has_next%2#0",
        "aggregate%item_offset%4#0"
      ],
      "stack_out": [
        "aggregate%box_get%0#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%array_length%4#0",
        "aggregate%item_offset%4#0",
        "aggregate%has_next%2#0"
      ]
    },
    "623": {
      "op": "dig 3",
      "stack_out": [
        "aggregate%box_get%0#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%array_length%4#0",
        "aggregate%item_offset%4#0",
        "aggregate%has_next%2#0",
        "aggregate%array_head_and_tail%2#0 (copy)"
      ]
    },
    "625": {
      "op": "len",
      "defined_out": [
        "aggregate%array_head_and_tail%2#0",
        "aggregate%array_length%4#0",
        "aggregate%box_get%0#0",
        "aggregate%end_of_array%2#0",
        "aggregate%has_next%2#0",
        "aggregate%item_offset%4#0"
      ],
      "stack_out": [
        "aggregate%box_get%0#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%array_length%4#0",
        "aggregate%item_offset%4#0",
        "aggregate%has_next%2#0",
        "aggregate%end_of_array%2#0"
      ]
    },
    "626": {
      "op": "dig 4",
      "stack_out": [
        "aggregate%box_get%0#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%array_length%4#0",
        "aggregate%item_offset%4#0",
        "aggregate%has_next%2#0",
        "aggregate%end_of_array%2#0",
        "aggregate%array_head_and_tail%2#0 (copy)"
      ]
    },
    "628": {
      "op": "intc_2 // 2",
      "stack_out": [
        "aggregate%box_get%0#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%array_length%4#0",
        "aggregate%item_offset%4#0",
        "aggregate%has_next%2#0",
        "aggregate%end_of_array%2#0",
        "aggregate%array_head_and_tail%2#0 (copy)",
        "2"
      ]
    },
    "629": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%array_head_and_tail%2#0",
        "aggregate%array_length%4#0",
        "aggregate%box_get%0#0",
        "aggregate%end_of_array%2#0",
        "aggregate%has_next%2#0",
        "aggregate%item_offset%4#0",
        "aggregate%next_item_offset%2#0"
      ],
      "stack_out": [
        "aggregate%box_get%0#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%array_length%4#0",
        "aggregate%item_offset%4#0",
        "aggregate%has_next%2#0",
        "aggregate%end_of_array%2#0",
        "aggregate%next_item_offset%2#0"
      ]
    },
    "630": {
      "op": "uncover 2",
      "stack_out": [
        "aggregate%box_get%0#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%array_length%4#0",
        "aggregate%item_offset%4#0",
        "aggregate%end_of_array%2#0",
        "aggregate%next_item_offset%2#0",
        "aggregate%has_next%2#0"
      ]
    },
    "632": {
      "op": "select",
      "defined_out": [
        "aggregate%array_head_and_tail%2#0",
        "aggregate%array_length%4#0",
        "aggregate%box_get%0#0",
        "aggregate%end_offset%2#0",
        "aggregate%item_offset%4#0"
      ],
      "stack_out": [
        "aggregate%box_get%0#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%array_length%4#0",
        "aggregate%item_offset%4#0",
        "aggregate%end_offset%2#0"
      ]
    },
    "633": {
      "op": "uncover 3",
      "stack_out": [
        "aggregate%box_get%0#0",
        "aggregate%array_length%4#0",
        "aggregate%item_offset%4#0",
        "aggregate%end_offset%2#0",
        "aggregate%array_head_and_tail%2#0"
      ]
    },
    "635": {
      "op": "cover 2",
      "stack_out": [
        "aggregate%box_get%0#0",
        "aggregate%array_length%4#0",
        "aggregate%array_head_and_tail%2#0",
        "aggregate%item_offset%4#0",
        "aggregate%end_offset%2#0"
      ]
    },
    "637": {
      "op": "substring3",
      "defined_out": [
        "aggregate%array_length%4#0",
        "aggregate%box_get%0#0",
        "aggregate%substring3%4#0"
      ],
      "stack_out": [
        "aggregate%box_get%0#0",
        "aggregate%array_length%4#0",
        "aggregate%substring3%4#0"
      ]
    },
    "638": {
      "op": "dup",
      "defined_out": [
        "aggregate%array_length%4#0",
        "aggregate%box_get%0#0",
        "aggregate%substring3%4#0",
        "aggregate%substring3%4#0 (copy)"
      ],
      "stack_out": [
        "aggregate%box_get%0#0",
        "aggregate%array_length%4#0",
        "aggregate%substring3%4#0",
        "aggregate%substring3%4#0 (copy)"
      ]
    },
    "639": {
      "op": "intc_3 // 8",
      "stack_out": [
        "aggregate%box_get%0#0",
        "aggregate%array_length%4#0",
        "aggregate%substring3%4#0",
        "aggregate%substring3%4#0 (copy)",
        "8"
      ]
    },
    "640": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%array_length%4#0",
        "aggregate%box_get%0#0",
        "aggregate%item_offset%5#0",
        "aggregate%substring3%4#0"
      ],
      "stack_out": [
        "aggregate%box_get%0#0",
        "aggregate%array_length%4#0",
        "aggregate%substring3%4#0",
        "aggregate%item_offset%5#0"
      ]
    },
    "641": {
      "op": "intc_0 // 0"
    },
    "642": {
      "op": "swap",
      "stack_out": [
        "aggregate%box_get%0#0",
        "aggregate%array_length%4#0",
        "aggregate%substring3%4#0",
        "0",
        "aggregate%item_offset%5#0"
      ]
    },
    "643": {
      "op": "extract3",
      "defined_out": [
        "aggregate%array_length%4#0",
        "aggregate%box_get%0#0",
        "aggregate%data_up_to_item%2#0"
      ],
      "stack_out": [
        "aggregate%box_get%0#0",
        "aggregate%array_length%4#0",
        "aggregate%data_up_to_item%2#0"
      ]
    },
    "644": {
      "op": "bytec 6 // 0x00086d6f646966696564",
      "stack_out": [
        "aggregate%box_get%0#0",
        "aggregate%array_length%4#0",
        "aggregate%data_up_to_item%2#0",
        "0x00086d6f646966696564"
      ]
    },
    "646": {
      "op": "concat",
      "defined_out": [
        "aggregate%array_length%4#0",
        "aggregate%box_get%0#0",
        "aggregate%updated_data%2#0"
      ],
      "stack_out": [
        "aggregate%box_get%0#0",
        "aggregate%array_length%4#0",
        "aggregate%updated_data%2#0"
      ]
    },
    "647": {
      "op": "swap",
      "stack_out": [
        "aggregate%box_get%0#0",
        "aggregate%updated_data%2#0",
        "aggregate%array_length%4#0"
      ]
    },
    "648": {
      "error": "index access is out of bounds",
      "op": "assert // index access is out of bounds",
      "stack_out": [
        "aggregate%box_get%0#0",
        "aggregate%updated_data%2#0"
      ]
    },
    "649": {
      "op": "intc_0 // 0",
      "stack_out": [
        "aggregate%box_get%0#0",
        "aggregate%updated_data%2#0",
        "0"
      ]
    },
    "650": {
      "callsub": "_puya_lib.arc4.dynamic_array_replace_dynamic_element",
      "op": "callsub dynamic_array_replace_dynamic_element",
      "defined_out": [
        "aggregate%updated_array%2#0"
      ],
      "stack_out": [
        "aggregate%updated_array%2#0"
      ]
    },
    "653": {
      "op": "bytec_0 // \"box\"",
      "stack_out": [
        "aggregate%updated_array%2#0",
        "\"box\""
      ]
    },
    "654": {
      "op": "box_del",
      "defined_out": [
        "aggregate%updated_array%2#0",
        "{box_del}"
      ],
      "stack_out": [
        "aggregate%updated_array%2#0",
        "{box_del}"
      ]
    },
    "655": {
      "op": "pop",
      "stack_out": [
        "aggregate%updated_array%2#0"
      ]
    },
    "656": {
      "op": "bytec_0 // \"box\"",
      "stack_out": [
        "aggregate%updated_array%2#0",
        "\"box\""
      ]
    },
    "657": {
      "op": "swap",
      "stack_out": [
        "\"box\"",
        "aggregate%updated_array%2#0"
      ]
    },
    "658": {
      "op": "box_put",
      "stack_out": []
    },
    "659": {
      "op": "bytec 4 // \"map\"",
      "defined_out": [
        "\"map\""
      ],
      "stack_out": [
        "\"map\""
      ]
    },
    "661": {
      "op": "txn Sender",
      "defined_out": [
        "\"map\"",
        "materialized_values%0#0"
      ],
      "stack_out": [
        "\"map\"",
        "materialized_values%0#0"
      ]
    },
    "663": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0"
      ]
    },
    "664": {
      "op": "dup",
      "defined_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0 (copy)"
      ]
    },
    "665": {
      "op": "box_get",
      "defined_out": [
        "aggregate%box_get%2#0",
        "aggregate%box_get%3#0",
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "aggregate%box_get%2#0",
        "aggregate%box_get%3#0"
      ]
    },
    "666": {
      "error": "check self.map entry exists",
      "op": "assert // check self.map entry exists",
      "stack_out": [
        "box_prefixed_key%0#0",
        "aggregate%box_get%2#0"
      ]
    },
    "667": {
      "op": "dup",
      "defined_out": [
        "aggregate%box_get%2#0",
        "aggregate%box_get%2#0 (copy)",
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "aggregate%box_get%2#0",
        "aggregate%box_get%2#0 (copy)"
      ]
    },
    "668": {
      "op": "extract 2 0",
      "defined_out": [
        "aggregate%array_head_and_tail%3#0",
        "aggregate%box_get%2#0",
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "aggregate%box_get%2#0",
        "aggregate%array_head_and_tail%3#0"
      ]
    },
    "671": {
      "op": "dig 1",
      "stack_out": [
        "box_prefixed_key%0#0",
        "aggregate%box_get%2#0",
        "aggregate%array_head_and_tail%3#0",
        "aggregate%box_get%2#0 (copy)"
      ]
    },
    "673": {
      "op": "intc_0 // 0",
      "stack_out": [
        "box_prefixed_key%0#0",
        "aggregate%box_get%2#0",
        "aggregate%array_head_and_tail%3#0",
        "aggregate%box_get%2#0 (copy)",
        "0"
      ]
    },
    "674": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%array_head_and_tail%3#0",
        "aggregate%array_length%6#0",
        "aggregate%box_get%2#0",
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "aggregate%box_get%2#0",
        "aggregate%array_head_and_tail%3#0",
        "aggregate%array_length%6#0"
      ]
    },
    "675": {
      "op": "dig 1",
      "defined_out": [
        "aggregate%array_head_and_tail%3#0",
        "aggregate%array_head_and_tail%3#0 (copy)",
        "aggregate%array_length%6#0",
        "aggregate%box_get%2#0",
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "aggregate%box_get%2#0",
        "aggregate%array_head_and_tail%3#0",
        "aggregate%array_length%6#0",
        "aggregate%array_head_and_tail%3#0 (copy)"
      ]
    },
    "677": {
      "op": "intc_0 // 0",
      "stack_out": [
        "box_prefixed_key%0#0",
        "aggregate%box_get%2#0",
        "aggregate%array_head_and_tail%3#0",
        "aggregate%array_length%6#0",
        "aggregate%array_head_and_tail%3#0 (copy)",
        "0"
      ]
    },
    "678": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%array_head_and_tail%3#0",
        "aggregate%array_length%6#0",
        "aggregate%box_get%2#0",
        "aggregate%item_offset%6#0",
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "aggregate%box_get%2#0",
        "aggregate%array_head_and_tail%3#0",
        "aggregate%array_length%6#0",
        "aggregate%item_offset%6#0"
      ]
    },
    "679": {
      "op": "dig 1",
      "defined_out": [
        "aggregate%array_head_and_tail%3#0",
        "aggregate%array_length%6#0",
        "aggregate%array_length%6#0 (copy)",
        "aggregate%box_get%2#0",
        "aggregate%item_offset%6#0",
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "aggregate%box_get%2#0",
        "aggregate%array_head_and_tail%3#0",
        "aggregate%array_length%6#0",
        "aggregate%item_offset%6#0",
        "aggregate%array_length%6#0 (copy)"
      ]
    },
    "681": {
      "op": "intc_1 // 1",
      "stack_out": [
        "box_prefixed_key%0#0",
        "aggregate%box_get%2#0",
        "aggregate%array_head_and_tail%3#0",
        "aggregate%array_length%6#0",
        "aggregate%item_offset%6#0",
        "aggregate%array_length%6#0 (copy)",
        "1"
      ]
    },
    "682": {
      "error": "index access is out of bounds",
      "op": "- // on error: index access is out of bounds",
      "defined_out": [
        "aggregate%array_head_and_tail%3#0",
        "aggregate%array_length%6#0",
        "aggregate%box_get%2#0",
        "aggregate%has_next%3#0",
        "aggregate%item_offset%6#0",
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "aggregate%box_get%2#0",
        "aggregate%array_head_and_tail%3#0",
        "aggregate%array_length%6#0",
        "aggregate%item_offset%6#0",
        "aggregate%has_next%3#0"
      ]
    },
    "683": {
      "op": "dig 3",
      "stack_out": [
        "box_prefixed_key%0#0",
        "aggregate%box_get%2#0",
        "aggregate%array_head_and_tail%3#0",
        "aggregate%array_length%6#0",
        "aggregate%item_offset%6#0",
        "aggregate%has_next%3#0",
        "aggregate%array_head_and_tail%3#0 (copy)"
      ]
    },
    "685": {
      "op": "len",
      "defined_out": [
        "aggregate%array_head_and_tail%3#0",
        "aggregate%array_length%6#0",
        "aggregate%box_get%2#0",
        "aggregate%end_of_array%3#0",
        "aggregate%has_next%3#0",
        "aggregate%item_offset%6#0",
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "aggregate%box_get%2#0",
        "aggregate%array_head_and_tail%3#0",
        "aggregate%array_length%6#0",
        "aggregate%item_offset%6#0",
        "aggregate%has_next%3#0",
        "aggregate%end_of_array%3#0"
      ]
    },
    "686": {
      "op": "dig 4",
      "stack_out": [
        "box_prefixed_key%0#0",
        "aggregate%box_get%2#0",
        "aggregate%array_head_and_tail%3#0",
        "aggregate%array_length%6#0",
        "aggregate%item_offset%6#0",
        "aggregate%has_next%3#0",
        "aggregate%end_of_array%3#0",
        "aggregate%array_head_and_tail%3#0 (copy)"
      ]
    },
    "688": {
      "op": "intc_2 // 2",
      "stack_out": [
        "box_prefixed_key%0#0",
        "aggregate%box_get%2#0",
        "aggregate%array_head_and_tail%3#0",
        "aggregate%array_length%6#0",
        "aggregate%item_offset%6#0",
        "aggregate%has_next%3#0",
        "aggregate%end_of_array%3#0",
        "aggregate%array_head_and_tail%3#0 (copy)",
        "2"
      ]
    },
    "689": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%array_head_and_tail%3#0",
        "aggregate%array_length%6#0",
        "aggregate%box_get%2#0",
        "aggregate%end_of_array%3#0",
        "aggregate%has_next%3#0",
        "aggregate%item_offset%6#0",
        "aggregate%next_item_offset%3#0",
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "aggregate%box_get%2#0",
        "aggregate%array_head_and_tail%3#0",
        "aggregate%array_length%6#0",
        "aggregate%item_offset%6#0",
        "aggregate%has_next%3#0",
        "aggregate%end_of_array%3#0",
        "aggregate%next_item_offset%3#0"
      ]
    },
    "690": {
      "op": "uncover 2",
      "stack_out": [
        "box_prefixed_key%0#0",
        "aggregate%box_get%2#0",
        "aggregate%array_head_and_tail%3#0",
        "aggregate%array_length%6#0",
        "aggregate%item_offset%6#0",
        "aggregate%end_of_array%3#0",
        "aggregate%next_item_offset%3#0",
        "aggregate%has_next%3#0"
      ]
    },
    "692": {
      "op": "select",
      "defined_out": [
        "aggregate%array_head_and_tail%3#0",
        "aggregate%array_length%6#0",
        "aggregate%box_get%2#0",
        "aggregate%end_offset%3#0",
        "aggregate%item_offset%6#0",
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "aggregate%box_get%2#0",
        "aggregate%array_head_and_tail%3#0",
        "aggregate%array_length%6#0",
        "aggregate%item_offset%6#0",
        "aggregate%end_offset%3#0"
      ]
    },
    "693": {
      "op": "uncover 3",
      "stack_out": [
        "box_prefixed_key%0#0",
        "aggregate%box_get%2#0",
        "aggregate%array_length%6#0",
        "aggregate%item_offset%6#0",
        "aggregate%end_offset%3#0",
        "aggregate%array_head_and_tail%3#0"
      ]
    },
    "695": {
      "op": "cover 2",
      "stack_out": [
        "box_prefixed_key%0#0",
        "aggregate%box_get%2#0",
        "aggregate%array_length%6#0",
        "aggregate%array_head_and_tail%3#0",
        "aggregate%item_offset%6#0",
        "aggregate%end_offset%3#0"
      ]
    },
    "697": {
      "op": "substring3",
      "defined_out": [
        "aggregate%array_length%6#0",
        "aggregate%box_get%2#0",
        "aggregate%substring3%6#0",
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "aggregate%box_get%2#0",
        "aggregate%array_length%6#0",
        "aggregate%substring3%6#0"
      ]
    },
    "698": {
      "op": "dup",
      "defined_out": [
        "aggregate%array_length%6#0",
        "aggregate%box_get%2#0",
        "aggregate%substring3%6#0",
        "aggregate%substring3%6#0 (copy)",
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "aggregate%box_get%2#0",
        "aggregate%array_length%6#0",
        "aggregate%substring3%6#0",
        "aggregate%substring3%6#0 (copy)"
      ]
    },
    "699": {
      "op": "intc_3 // 8",
      "stack_out": [
        "box_prefixed_key%0#0",
        "aggregate%box_get%2#0",
        "aggregate%array_length%6#0",
        "aggregate%substring3%6#0",
        "aggregate%substring3%6#0 (copy)",
        "8"
      ]
    },
    "700": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%array_length%6#0",
        "aggregate%box_get%2#0",
        "aggregate%item_offset%7#0",
        "aggregate%substring3%6#0",
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "aggregate%box_get%2#0",
        "aggregate%array_length%6#0",
        "aggregate%substring3%6#0",
        "aggregate%item_offset%7#0"
      ]
    },
    "701": {
      "op": "intc_0 // 0"
    },
    "702": {
      "op": "swap",
      "stack_out": [
        "box_prefixed_key%0#0",
        "aggregate%box_get%2#0",
        "aggregate%array_length%6#0",
        "aggregate%substring3%6#0",
        "0",
        "aggregate%item_offset%7#0"
      ]
    },
    "703": {
      "op": "extract3",
      "defined_out": [
        "aggregate%array_length%6#0",
        "aggregate%box_get%2#0",
        "aggregate%data_up_to_item%3#0",
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "aggregate%box_get%2#0",
        "aggregate%array_length%6#0",
        "aggregate%data_up_to_item%3#0"
      ]
    },
    "704": {
      "op": "bytec 6 // 0x00086d6f646966696564",
      "stack_out": [
        "box_prefixed_key%0#0",
        "aggregate%box_get%2#0",
        "aggregate%array_length%6#0",
        "aggregate%data_up_to_item%3#0",
        "0x00086d6f646966696564"
      ]
    },
    "706": {
      "op": "concat",
      "defined_out": [
        "aggregate%array_length%6#0",
        "aggregate%box_get%2#0",
        "aggregate%updated_data%3#0",
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "aggregate%box_get%2#0",
        "aggregate%array_length%6#0",
        "aggregate%updated_data%3#0"
      ]
    },
    "707": {
      "op": "swap",
      "stack_out": [
        "box_prefixed_key%0#0",
        "aggregate%box_get%2#0",
        "aggregate%updated_data%3#0",
        "aggregate%array_length%6#0"
      ]
    },
    "708": {
      "error": "index access is out of bounds",
      "op": "assert // index access is out of bounds",
      "stack_out": [
        "box_prefixed_key%0#0",
        "aggregate%box_get%2#0",
        "aggregate%updated_data%3#0"
      ]
    },
    "709": {
      "op": "intc_0 // 0",
      "stack_out": [
        "box_prefixed_key%0#0",
        "aggregate%box_get%2#0",
        "aggregate%updated_data%3#0",
        "0"
      ]
    },
    "710": {
      "callsub": "_puya_lib.arc4.dynamic_array_replace_dynamic_element",
      "op": "callsub dynamic_array_replace_dynamic_element",
      "defined_out": [
        "aggregate%updated_array%3#0",
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "aggregate%updated_array%3#0"
      ]
    },
    "713": {
      "op": "dig 1",
      "stack_out": [
        "box_prefixed_key%0#0",
        "aggregate%updated_array%3#0",
        "box_prefixed_key%0#0 (copy)"
      ]
    },
    "715": {
      "op": "box_del",
      "stack_out": [
        "box_prefixed_key%0#0",
        "aggregate%updated_array%3#0",
        "{box_del}"
      ]
    },
    "716": {
      "op": "pop",
      "stack_out": [
        "box_prefixed_key%0#0",
        "aggregate%updated_array%3#0"
      ]
    },
    "717": {
      "op": "box_put",
      "stack_out": []
    },
    "718": {
      "op": "intc_1 // 1",
      "stack_out": [
        "1"
      ]
    },
    "719": {
      "op": "return",
      "stack_out": []
    },
    "720": {
      "subroutine": "test_cases.state_mutations.contract.Contract.get[routing]",
      "params": {},
      "block": "get",
      "stack_in": [],
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "721": {
      "op": "bytec_1 // \"glob\"",
      "defined_out": [
        "\"glob\"",
        "0"
      ],
      "stack_out": [
        "0",
        "\"glob\""
      ]
    },
    "722": {
      "op": "app_global_get_ex",
      "defined_out": [
        "a1#0",
        "maybe_exists%0#0"
      ],
      "stack_out": [
        "a1#0",
        "maybe_exists%0#0"
      ]
    },
    "723": {
      "error": "check self.glob exists",
      "op": "assert // check self.glob exists",
      "stack_out": [
        "a1#0"
      ]
    },
    "724": {
      "op": "txn Sender",
      "defined_out": [
        "a1#0",
        "tmp%0#1"
      ],
      "stack_out": [
        "a1#0",
        "tmp%0#1"
      ]
    },
    "726": {
      "op": "intc_0 // 0",
      "stack_out": [
        "a1#0",
        "tmp%0#1",
        "0"
      ]
    },
    "727": {
      "op": "bytec_2 // \"loc\"",
      "defined_out": [
        "\"loc\"",
        "0",
        "a1#0",
        "tmp%0#1"
      ],
      "stack_out": [
        "a1#0",
        "tmp%0#1",
        "0",
        "\"loc\""
      ]
    },
    "728": {
      "op": "app_local_get_ex",
      "defined_out": [
        "a1#0",
        "a2#0",
        "maybe_exists%1#0"
      ],
      "stack_out": [
        "a1#0",
        "a2#0",
        "maybe_exists%1#0"
      ]
    },
    "729": {
      "error": "check self.loc exists for account",
      "op": "assert // check self.loc exists for account",
      "stack_out": [
        "a1#0",
        "a2#0"
      ]
    },
    "730": {
      "op": "bytec_0 // \"box\"",
      "defined_out": [
        "\"box\"",
        "a1#0",
        "a2#0"
      ],
      "stack_out": [
        "a1#0",
        "a2#0",
        "\"box\""
      ]
    },
    "731": {
      "op": "box_get",
      "defined_out": [
        "a1#0",
        "a2#0",
        "a3#0",
        "aggregate%box_get%1#0"
      ],
      "stack_out": [
        "a1#0",
        "a2#0",
        "a3#0",
        "aggregate%box_get%1#0"
      ]
    },
    "732": {
      "error": "check self.box exists",
      "op": "assert // check self.box exists",
      "stack_out": [
        "a1#0",
        "a2#0",
        "a3#0"
      ]
    },
    "733": {
      "op": "bytec 4 // \"map\"",
      "defined_out": [
        "\"map\"",
        "a1#0",
        "a2#0",
        "a3#0"
      ],
      "stack_out": [
        "a1#0",
        "a2#0",
        "a3#0",
        "\"map\""
      ]
    },
    "735": {
      "op": "txn Sender",
      "defined_out": [
        "\"map\"",
        "a1#0",
        "a2#0",
        "a3#0",
        "materialized_values%0#0"
      ],
      "stack_out": [
        "a1#0",
        "a2#0",
        "a3#0",
        "\"map\"",
        "materialized_values%0#0"
      ]
    },
    "737": {
      "op": "concat",
      "defined_out": [
        "a1#0",
        "a2#0",
        "a3#0",
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "a1#0",
        "a2#0",
        "a3#0",
        "box_prefixed_key%0#0"
      ]
    },
    "738": {
      "op": "box_get",
      "defined_out": [
        "a1#0",
        "a2#0",
        "a3#0",
        "a4#0",
        "aggregate%box_get%3#0"
      ],
      "stack_out": [
        "a1#0",
        "a2#0",
        "a3#0",
        "a4#0",
        "aggregate%box_get%3#0"
      ]
    },
    "739": {
      "error": "check self.map entry exists",
      "op": "assert // check self.map entry exists",
      "stack_out": [
        "a1#0",
        "a2#0",
        "a3#0",
        "a4#0"
      ]
    },
    "740": {
      "op": "dig 3",
      "defined_out": [
        "a1#0",
        "a1#0 (copy)",
        "a2#0",
        "a3#0",
        "a4#0"
      ],
      "stack_out": [
        "a1#0",
        "a2#0",
        "a3#0",
        "a4#0",
        "a1#0 (copy)"
      ]
    },
    "742": {
      "op": "uncover 3",
      "stack_out": [
        "a1#0",
        "a3#0",
        "a4#0",
        "a1#0 (copy)",
        "a2#0"
      ]
    },
    "744": {
      "op": "==",
      "defined_out": [
        "a1#0",
        "a3#0",
        "a4#0",
        "tmp%1#1"
      ],
      "stack_out": [
        "a1#0",
        "a3#0",
        "a4#0",
        "tmp%1#1"
      ]
    },
    "745": {
      "error": "expected local == global",
      "op": "assert // expected local == global",
      "stack_out": [
        "a1#0",
        "a3#0",
        "a4#0"
      ]
    },
    "746": {
      "op": "dig 2",
      "stack_out": [
        "a1#0",
        "a3#0",
        "a4#0",
        "a1#0 (copy)"
      ]
    },
    "748": {
      "op": "uncover 2",
      "stack_out": [
        "a1#0",
        "a4#0",
        "a1#0 (copy)",
        "a3#0"
      ]
    },
    "750": {
      "op": "==",
      "defined_out": [
        "a1#0",
        "a4#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "a1#0",
        "a4#0",
        "tmp%2#0"
      ]
    },
    "751": {
      "error": "expected box == global",
      "op": "assert // expected box == global",
      "stack_out": [
        "a1#0",
        "a4#0"
      ]
    },
    "752": {
      "op": "dig 1",
      "stack_out": [
        "a1#0",
        "a4#0",
        "a1#0 (copy)"
      ]
    },
    "754": {
      "op": "==",
      "defined_out": [
        "a1#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "a1#0",
        "tmp%3#0"
      ]
    },
    "755": {
      "error": "expected map == global",
      "op": "assert // expected map == global",
      "stack_out": [
        "a1#0"
      ]
    },
    "756": {
      "op": "pushbytes 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "a1#0"
      ],
      "stack_out": [
        "a1#0",
        "0x151f7c75"
      ]
    },
    "762": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "a1#0"
      ]
    },
    "763": {
      "op": "concat",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "764": {
      "op": "log",
      "stack_out": []
    },
    "765": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "766": {
      "op": "return",
      "stack_out": []
    }
  }
}