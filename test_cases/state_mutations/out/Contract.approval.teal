#pragma version 10

test_cases.state_mutations.contract.Contract.approval_program:
    callsub __puya_arc4_router__
    return


// test_cases.state_mutations.contract.Contract.__puya_arc4_router__() -> uint64:
__puya_arc4_router__:
    // state_mutations/contract.py:22
    // class Contract(ARC4Contract):
    proto 0 1
    txn NumAppArgs
    bz __puya_arc4_router___bare_routing@7
    method "append()void"
    method "modify()void"
    method "get()(uint64,string)[]"
    txna ApplicationArgs 0
    match __puya_arc4_router___append_route@2 __puya_arc4_router___modify_route@3 __puya_arc4_router___get_route@4
    int 0
    retsub

__puya_arc4_router___append_route@2:
    // state_mutations/contract.py:36
    // @arc4.abimethod
    txn OnCompletion
    !
    assert // OnCompletion is NoOp
    txn ApplicationID
    assert // is not creating
    callsub append
    int 1
    retsub

__puya_arc4_router___modify_route@3:
    // state_mutations/contract.py:44
    // @arc4.abimethod
    txn OnCompletion
    !
    assert // OnCompletion is NoOp
    txn ApplicationID
    assert // is not creating
    callsub modify
    int 1
    retsub

__puya_arc4_router___get_route@4:
    // state_mutations/contract.py:51
    // @arc4.abimethod
    txn OnCompletion
    !
    assert // OnCompletion is NoOp
    txn ApplicationID
    assert // is not creating
    callsub get
    byte 0x151f7c75
    swap
    concat
    log
    int 1
    retsub

__puya_arc4_router___bare_routing@7:
    // state_mutations/contract.py:22
    // class Contract(ARC4Contract):
    txn OnCompletion
    switch __puya_arc4_router_____algopy_default_create@8 __puya_arc4_router___opt_in@9
    int 0
    retsub

__puya_arc4_router_____algopy_default_create@8:
    // state_mutations/contract.py:22
    // class Contract(ARC4Contract):
    txn ApplicationID
    !
    assert // is creating
    int 1
    retsub

__puya_arc4_router___opt_in@9:
    // state_mutations/contract.py:29
    // @arc4.baremethod(allow_actions=["OptIn"])
    txn ApplicationID
    assert // is not creating
    // state_mutations/contract.py:29-30
    // @arc4.baremethod(allow_actions=["OptIn"])
    // def opt_in(self) -> None:
    callsub opt_in
    int 1
    retsub


// test_cases.state_mutations.contract.Contract.append() -> void:
append:
    // state_mutations/contract.py:36-37
    // @arc4.abimethod
    // def append(self) -> None:
    proto 0 0
    // state_mutations/contract.py:38
    // struct = get_struct()
    callsub get_struct
    // state_mutations/contract.py:39
    // self.glob.value.append(struct.copy())
    int 0
    byte "glob"
    app_global_get_ex
    assert // check self.glob exists
    byte 0x0002
    uncover 2
    concat
    swap
    dup
    int 0
    extract_uint16
    swap
    extract 2 0
    int 1
    dig 3
    callsub dynamic_array_concat_dynamic_element
    byte "glob"
    swap
    app_global_put
    // state_mutations/contract.py:40
    // self.loc[Txn.sender].append(struct.copy())
    txn Sender
    int 0
    byte "loc"
    app_local_get_ex
    assert // check self.loc exists for account
    dup
    int 0
    extract_uint16
    swap
    extract 2 0
    int 1
    dig 3
    callsub dynamic_array_concat_dynamic_element
    txn Sender
    byte "loc"
    uncover 2
    app_local_put
    // state_mutations/contract.py:41
    // self.box.value.append(struct.copy())
    byte "box"
    box_get
    assert // check self.box exists
    dup
    int 0
    extract_uint16
    swap
    extract 2 0
    int 1
    dig 3
    callsub dynamic_array_concat_dynamic_element
    byte "box"
    box_del
    pop
    byte "box"
    swap
    box_put
    // state_mutations/contract.py:42
    // self.map[Txn.sender].append(struct.copy())
    byte "map"
    txn Sender
    concat
    box_get
    assert // check self.map entry exists
    dup
    int 0
    extract_uint16
    swap
    extract 2 0
    int 1
    uncover 3
    callsub dynamic_array_concat_dynamic_element
    byte "map"
    txn Sender
    concat
    dup
    box_del
    pop
    swap
    box_put
    retsub


// test_cases.state_mutations.contract.get_struct() -> bytes:
get_struct:
    // state_mutations/contract.py:64-65
    // @subroutine
    // def get_struct() -> MyStruct:
    proto 0 1
    // state_mutations/contract.py:66-69
    // return MyStruct(
    //     bar=arc4.UInt64(1),
    //     baz=arc4.String("baz"),
    // )
    byte 0x0000000000000001000a000362617a
    retsub


// test_cases.state_mutations.contract.Contract.modify() -> void:
modify:
    // state_mutations/contract.py:44-45
    // @arc4.abimethod
    // def modify(self) -> None:
    proto 0 0
    // state_mutations/contract.py:46
    // self.glob.value[0].baz = arc4.String("modified")
    int 0
    byte "glob"
    app_global_get_ex
    assert // check self.glob exists
    dup
    extract 2 0
    dup
    int 0
    extract_uint16
    cover 2
    swap
    int 0
    extract_uint16
    int 1
    - // on error: Index access is out of bounds
    dig 1
    len
    swap
    dig 2
    int 2
    extract_uint16
    swap
    select
    swap
    cover 2
    substring3
    dup
    int 8
    extract_uint16
    int 0
    swap
    extract3
    byte 0x00086d6f646966696564
    concat
    int 0
    byte "glob"
    app_global_get_ex
    assert // check self.glob exists
    swap
    int 0
    callsub dynamic_array_replace_dynamic_element
    byte "glob"
    swap
    app_global_put
    // state_mutations/contract.py:47
    // self.loc[Txn.sender][0].baz = arc4.String("modified")
    txn Sender
    int 0
    byte "loc"
    app_local_get_ex
    assert // check self.loc exists for account
    dup
    extract 2 0
    dup
    int 0
    extract_uint16
    cover 2
    swap
    int 0
    extract_uint16
    int 1
    - // on error: Index access is out of bounds
    dig 1
    len
    swap
    dig 2
    int 2
    extract_uint16
    swap
    select
    swap
    cover 2
    substring3
    dup
    int 8
    extract_uint16
    int 0
    swap
    extract3
    byte 0x00086d6f646966696564
    concat
    txn Sender
    int 0
    byte "loc"
    app_local_get_ex
    assert // check self.loc exists for account
    swap
    int 0
    callsub dynamic_array_replace_dynamic_element
    txn Sender
    byte "loc"
    uncover 2
    app_local_put
    // state_mutations/contract.py:48
    // self.box.value[0].baz = arc4.String("modified")
    byte "box"
    box_get
    assert // check self.box exists
    dup
    extract 2 0
    dup
    int 0
    extract_uint16
    cover 2
    swap
    int 0
    extract_uint16
    int 1
    - // on error: Index access is out of bounds
    dig 1
    len
    swap
    dig 2
    int 2
    extract_uint16
    swap
    select
    swap
    cover 2
    substring3
    dup
    int 8
    extract_uint16
    int 0
    swap
    extract3
    byte 0x00086d6f646966696564
    concat
    byte "box"
    box_get
    assert // check self.box exists
    swap
    int 0
    callsub dynamic_array_replace_dynamic_element
    byte "box"
    box_del
    pop
    byte "box"
    swap
    box_put
    // state_mutations/contract.py:49
    // self.map[Txn.sender][0].baz = arc4.String("modified")
    byte "map"
    txn Sender
    concat
    box_get
    assert // check self.map entry exists
    dup
    extract 2 0
    dup
    int 0
    extract_uint16
    cover 2
    swap
    int 0
    extract_uint16
    int 1
    - // on error: Index access is out of bounds
    dig 1
    len
    swap
    dig 2
    int 2
    extract_uint16
    swap
    select
    swap
    cover 2
    substring3
    dup
    int 8
    extract_uint16
    int 0
    swap
    extract3
    byte 0x00086d6f646966696564
    concat
    byte "map"
    txn Sender
    concat
    box_get
    assert // check self.map entry exists
    swap
    int 0
    callsub dynamic_array_replace_dynamic_element
    byte "map"
    txn Sender
    concat
    dup
    box_del
    pop
    swap
    box_put
    retsub


// test_cases.state_mutations.contract.Contract.get() -> bytes:
get:
    // state_mutations/contract.py:51-52
    // @arc4.abimethod
    // def get(self) -> MyArray:
    proto 0 1
    // state_mutations/contract.py:53
    // a1 = self.glob.value.copy()
    int 0
    byte "glob"
    app_global_get_ex
    assert // check self.glob exists
    // state_mutations/contract.py:54
    // a2 = self.loc[Txn.sender].copy()
    txn Sender
    int 0
    byte "loc"
    app_local_get_ex
    assert // check self.loc exists for account
    // state_mutations/contract.py:55
    // a3 = self.box.value.copy()
    byte "box"
    box_get
    swap
    cover 2
    assert // check self.box exists
    // state_mutations/contract.py:56
    // a4 = self.map[Txn.sender].copy()
    byte "map"
    txn Sender
    concat
    box_get
    assert // check self.map entry exists
    // state_mutations/contract.py:58
    // assert a1 == a2, "expected local == global"
    dig 3
    uncover 2
    ==
    assert // expected local == global
    // state_mutations/contract.py:59
    // assert a1 == a3, "expected box == global"
    dig 2
    uncover 2
    ==
    assert // expected box == global
    // state_mutations/contract.py:60
    // assert a1 == a4, "expected map == global"
    dig 1
    ==
    assert // expected map == global
    // state_mutations/contract.py:61
    // return a1
    retsub


// test_cases.state_mutations.contract.Contract.opt_in() -> void:
opt_in:
    // state_mutations/contract.py:29-30
    // @arc4.baremethod(allow_actions=["OptIn"])
    // def opt_in(self) -> None:
    proto 0 0
    // state_mutations/contract.py:31
    // self.glob.value = MyArray()
    byte "glob"
    byte 0x0000
    app_global_put
    // state_mutations/contract.py:32
    // self.box.value = MyArray()
    byte "box"
    box_del
    pop
    byte "box"
    byte 0x0000
    box_put
    // state_mutations/contract.py:33
    // self.loc[Txn.sender] = MyArray()
    txn Sender
    byte "loc"
    byte 0x0000
    app_local_put
    // state_mutations/contract.py:34
    // self.map[Txn.sender] = MyArray()
    byte "map"
    txn Sender
    concat
    dup
    box_del
    pop
    byte 0x0000
    box_put
    retsub


// _puya_lib.arc4.dynamic_array_concat_dynamic_element(array_items_count: uint64, array_head_and_tail: bytes, new_items_count: uint64, new_head_and_tail: bytes) -> bytes:
dynamic_array_concat_dynamic_element:
    // _puya_lib/arc4.py:189-196
    proto 4 1
    byte ""
    // _puya_lib/arc4.py:197
    byte 0x
    // _puya_lib/arc4.py:198
    frame_dig -2
    int 2
    *
    // _puya_lib/arc4.py:199
    frame_dig -4
    int 2
    *
    int 0

dynamic_array_concat_dynamic_element_for_header@1:
    // _puya_lib/arc4.py:199
    frame_dig 4
    frame_dig 3
    <
    bz dynamic_array_concat_dynamic_element_after_for@4
    // _puya_lib/arc4.py:200
    frame_dig -3
    frame_dig 4
    dup
    cover 2
    extract_uint16
    // _puya_lib/arc4.py:201
    frame_dig 2
    +
    itob
    extract 6 2
    frame_dig 1
    swap
    concat
    frame_bury 1
    // _puya_lib/arc4.py:199
    int 2
    +
    frame_bury 4
    b dynamic_array_concat_dynamic_element_for_header@1

dynamic_array_concat_dynamic_element_after_for@4:
    // _puya_lib/arc4.py:203
    frame_dig -3
    len
    frame_bury 0
    // _puya_lib/arc4.py:204
    int 0
    frame_bury 4

dynamic_array_concat_dynamic_element_for_header@5:
    // _puya_lib/arc4.py:204
    frame_dig 4
    frame_dig 2
    <
    bz dynamic_array_concat_dynamic_element_after_for@8
    // _puya_lib/arc4.py:205
    frame_dig -1
    frame_dig 4
    dup
    cover 2
    extract_uint16
    // _puya_lib/arc4.py:206
    frame_dig 0
    +
    itob
    extract 6 2
    frame_dig 1
    swap
    concat
    frame_bury 1
    // _puya_lib/arc4.py:204
    int 2
    +
    frame_bury 4
    b dynamic_array_concat_dynamic_element_for_header@5

dynamic_array_concat_dynamic_element_after_for@8:
    // _puya_lib/arc4.py:208
    frame_dig -4
    frame_dig -2
    +
    itob
    extract 6 2
    // _puya_lib/arc4.py:208-209
    frame_dig 1
    concat
    // _puya_lib/arc4.py:210-212
    frame_dig -3
    frame_dig 3
    frame_dig 0
    substring3
    // _puya_lib/arc4.py:208-212
    concat
    // _puya_lib/arc4.py:213
    frame_dig -1
    len
    frame_dig -1
    frame_dig 2
    uncover 2
    substring3
    // _puya_lib/arc4.py:208-213
    concat
    // _puya_lib/arc4.py:207-214
    frame_bury 0
    retsub


// _puya_lib.arc4.dynamic_array_replace_dynamic_element(source: bytes, new_item: bytes, index: uint64) -> bytes:
dynamic_array_replace_dynamic_element:
    // _puya_lib/arc4.py:240-241
    proto 3 1
    // _puya_lib/arc4.py:242
    frame_dig -3
    substring 0 2
    // _puya_lib/arc4.py:243
    dup
    btoi
    // _puya_lib/arc4.py:245
    frame_dig -3
    extract 2 0
    // _puya_lib/arc4.py:244-249
    frame_dig -2
    frame_dig -1
    uncover 3
    callsub static_array_replace_dynamic_element
    concat
    retsub


// _puya_lib.arc4.static_array_replace_dynamic_element(array_head_and_tail: bytes, new_item: bytes, index: uint64, array_length: uint64) -> bytes:
static_array_replace_dynamic_element:
    // _puya_lib/arc4.py:252-255
    proto 4 1
    // _puya_lib/arc4.py:256
    frame_dig -2
    int 2
    *
    frame_dig -4
    swap
    extract_uint16
    // _puya_lib/arc4.py:257
    frame_dig -2
    int 1
    +
    int 2
    *
    dup
    cover 2
    frame_dig -4
    swap
    extract_uint16
    // _puya_lib/arc4.py:258
    frame_dig -4
    len
    // _puya_lib/arc4.py:259
    frame_dig -1
    frame_dig -2
    -
    int 1
    -
    // _puya_lib/arc4.py:260
    dig 1
    uncover 3
    uncover 2
    select
    // _puya_lib/arc4.py:262
    dup
    dig 3
    -
    cover 3
    // _puya_lib/arc4.py:263
    frame_dig -3
    len
    cover 3
    // _puya_lib/arc4.py:265
    frame_dig -4
    int 0
    uncover 4
    substring3
    // _puya_lib/arc4.py:265-266
    frame_dig -3
    concat
    // _puya_lib/arc4.py:267
    frame_dig -4
    uncover 2
    uncover 3
    substring3
    // _puya_lib/arc4.py:265-267
    concat
    // _puya_lib/arc4.py:269
    frame_dig -1
    int 2
    *

static_array_replace_dynamic_element_for_header@1:
    // _puya_lib/arc4.py:269
    frame_dig 0
    frame_dig 4
    <
    bz static_array_replace_dynamic_element_after_for@4
    // _puya_lib/arc4.py:270
    frame_dig 3
    dup
    frame_dig 0
    dup
    cover 3
    extract_uint16
    // _puya_lib/arc4.py:271
    frame_dig 2
    +
    // _puya_lib/arc4.py:272
    frame_dig 1
    -
    // _puya_lib/arc4.py:273
    itob
    extract 6 2
    // _puya_lib/arc4.py:274
    dig 2
    swap
    replace3
    frame_bury 3
    // _puya_lib/arc4.py:269
    int 2
    +
    frame_bury 0
    b static_array_replace_dynamic_element_for_header@1

static_array_replace_dynamic_element_after_for@4:
    // _puya_lib/arc4.py:275
    frame_dig 3
    frame_bury 0
    retsub
