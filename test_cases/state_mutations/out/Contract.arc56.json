{
    "name": "Contract",
    "structs": {},
    "methods": [
        {
            "name": "append",
            "args": [],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "modify",
            "args": [],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "get",
            "args": [],
            "returns": {
                "type": "(uint64,string)[]"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        }
    ],
    "arcs": [
        22,
        28
    ],
    "networks": {},
    "state": {
        "schema": {
            "global": {
                "ints": 0,
                "bytes": 1
            },
            "local": {
                "ints": 0,
                "bytes": 1
            }
        },
        "keys": {
            "global": {
                "glob": {
                    "keyType": "AVMString",
                    "valueType": "(uint64,string)[]",
                    "key": "Z2xvYg=="
                }
            },
            "local": {
                "loc": {
                    "keyType": "AVMString",
                    "valueType": "(uint64,string)[]",
                    "key": "bG9j"
                }
            },
            "box": {
                "box": {
                    "keyType": "AVMString",
                    "valueType": "(uint64,string)[]",
                    "key": "Ym94"
                }
            }
        },
        "maps": {
            "global": {},
            "local": {},
            "box": {
                "map": {
                    "keyType": "AVMBytes",
                    "valueType": "(uint64,string)[]",
                    "prefix": "bWFw"
                }
            }
        }
    },
    "bareActions": {
        "create": [
            "NoOp"
        ],
        "call": [
            "OptIn"
        ]
    },
    "sourceInfo": {
        "approval": {
            "sourceInfo": [
                {
                    "pc": [
                        85,
                        97,
                        109
                    ],
                    "errorMessage": "OnCompletion is not NoOp"
                },
                {
                    "pc": [
                        148
                    ],
                    "errorMessage": "can only call when creating"
                },
                {
                    "pc": [
                        88,
                        100,
                        112,
                        139
                    ],
                    "errorMessage": "can only call when not creating"
                },
                {
                    "pc": [
                        213,
                        393,
                        429,
                        516
                    ],
                    "errorMessage": "check self.box exists"
                },
                {
                    "pc": [
                        160,
                        289,
                        326,
                        507
                    ],
                    "errorMessage": "check self.glob exists"
                },
                {
                    "pc": [
                        191,
                        340,
                        379,
                        513
                    ],
                    "errorMessage": "check self.loc exists for account"
                },
                {
                    "pc": [
                        238,
                        446,
                        485,
                        522
                    ],
                    "errorMessage": "check self.map entry exists"
                },
                {
                    "pc": [
                        534
                    ],
                    "errorMessage": "expected box == global"
                },
                {
                    "pc": [
                        528
                    ],
                    "errorMessage": "expected local == global"
                },
                {
                    "pc": [
                        538
                    ],
                    "errorMessage": "expected map == global"
                }
            ],
            "pcOffsetMethod": "none"
        },
        "clear": {
            "sourceInfo": [],
            "pcOffsetMethod": "none"
        }
    },
    "source": {
        "approval": "",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDEwCgp0ZXN0X2Nhc2VzLnN0YXRlX211dGF0aW9ucy5jb250cmFjdC5Db250cmFjdC5jbGVhcl9zdGF0ZV9wcm9ncmFtOgogICAgcHVzaGludCAxIC8vIDEKICAgIHJldHVybgo="
    },
    "byteCode": {
        "approval": "CiAEAAECCCYGA2JveARnbG9iA2xvYwNtYXAKAAhtb2RpZmllZAIAAIgAAUOKAAExG0EAS4IDBFJui78Elf7xPQQMKURLNhoAjgMAAgAOABoiiTEZFEQxGESIADsjiTEZFEQxGESIALMjiTEZFEQxGESIAYGABBUffHVMULAjiTEZjQIACgACIokxGESIAY0jiTEYFEQjiYoAAIgAaSIpZUSAAgACTwJQSwEiWU8CVwIAI0sDiAGEKUxnMQAiKmNESSJZTFcCACNLA4gBbjEAKk8CZii+REkiWUxXAgAjSwOIAVgovEgoTL8rMQBQvkRJIllMVwIAI08DiAE/KzEAUEm8SEy/iYoAAYAPAAAAAAAAAAEACgADYmF6iYoAACIpZURJVwIASSJZTwIiWSMJSwIVSwMkWU8CTVJJJVkiTFgnBFAiKWVETCKIAXApTGcxACIqY0RJVwIASSJZTwIiWSMJSwIVSwMkWU8CTVJJJVkiTFgnBFAxACIqY0RMIogBOzEAKk8CZii+RElXAgBJIllPAiJZIwlLAhVLAyRZTwJNUkklWSJMWCcEUCi+REwiiAEJKLxIKEy/KzEAUL5ESVcCAEkiWU8CIlkjCUsCFUsDJFlPAk1SSSVZIkxYJwRQKzEAUL5ETCKIANErMQBQSbxITL+JigABIillRDEAIipjRCi+RCsxAFC+REsDTwMSREsCTwISREsBEkSJigAAKScFZyi8SCgnBb8xAConBWYrMQBQSbxIJwW/iYoEAYAASYv+JAuL/CQLIosEiwMMQQAci/2LBElOAlmLAggWVwYCiwFMUIwBJAiMBEL/3Iv9FYwAIowEiwSLAgxBAByL/4sESU4CWYsACBZXBgKLAUxQjAEkCIwEQv/ci/yL/ggWVwYCiwFQi/2LA4sAUlCL/xWL/4sCTwJSUIwAiYoDAYv9UQACSReL/VcCAIv+i/9PA4gAAlCJigQBi/4kC4v8TFmL/iMIJAtJTgKL/ExZi/wVi/+L/gkjCUsBTwNPAk1JSwMJTgOL/RVOA4v8Ik8EUov9UIv8TwJPA1JQi/8kC4sAiwQMQQAgiwNJiwBJTgNZiwIIiwEJFlcGAksCTF2MAyQIjABC/9iLA4wAiQ==",
        "clear": "CoEBQw=="
    },
    "compilerInfo": {
        "compiler": "puya",
        "compilerVersion": {
            "major": 99,
            "minor": 99,
            "patch": 99
        }
    },
    "events": [],
    "templateVariables": {}
}