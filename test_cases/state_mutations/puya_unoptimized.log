debug: PuyaPyOptions(output_teal=True, output_source_map=True, output_arc32=False, output_arc56=False, output_ssa_ir=False, output_optimization_ir=False, output_destructured_ir=True, output_memory_ir=False, output_bytecode=True, debug_level=1, optimization_level=0, target_avm_version=10, cli_template_definitions={}, template_vars_prefix='TMPL_', locals_coalescing_strategy=<LocalsCoalescingStrategy.root_operand: 'root_operand'>, paths=['state_mutations'], output_awst=False, output_awst_json=False, output_client=False, log_level=<LogLevel.debug: 10>)
info: Found python prefix: <git root>/.venv
debug: Building IR for function _puya_lib.util.ensure_budget
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'required_budget_with_buffer' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let required_budget_with_buffer#1: uint64 = undefined while trying to resolve 'required_budget_with_buffer' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'fee_source' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let fee_source#1: uint64 = undefined while trying to resolve 'fee_source' in block@1
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@4
debug: Terminated block@4
debug: Sealing block@5
debug: Terminated block@5
debug: Sealing block@6
debug: Terminated block@6
debug: Sealing block@1
debug: Added required_budget_with_buffer#0 to Phi node: let required_budget_with_buffer#1: uint64 = φ(required_budget_with_buffer#0 <- block@0) in block@0
debug: Created Phi assignment: let required_budget_with_buffer#2: uint64 = undefined while trying to resolve 'required_budget_with_buffer' in block@6
debug: Added required_budget_with_buffer#1 to Phi node: let required_budget_with_buffer#2: uint64 = φ(required_budget_with_buffer#1 <- block@3) in block@3
debug: Added required_budget_with_buffer#1 to Phi node: let required_budget_with_buffer#2: uint64 = φ(required_budget_with_buffer#1 <- block@3, required_budget_with_buffer#1 <- block@4) in block@4
debug: Added required_budget_with_buffer#1 to Phi node: let required_budget_with_buffer#2: uint64 = φ(required_budget_with_buffer#1 <- block@3, required_budget_with_buffer#1 <- block@4, required_budget_with_buffer#1 <- block@5) in block@5
debug: Replacing trivial Phi node: let required_budget_with_buffer#2: uint64 = φ(required_budget_with_buffer#1 <- block@3, required_budget_with_buffer#1 <- block@4, required_budget_with_buffer#1 <- block@5) (required_budget_with_buffer#2) with required_budget_with_buffer#1
debug: Deleting Phi assignment: let required_budget_with_buffer#2: uint64 = φ(required_budget_with_buffer#1 <- block@3, required_budget_with_buffer#1 <- block@4, required_budget_with_buffer#1 <- block@5)
debug: Replaced trivial Phi node: let required_budget_with_buffer#2: uint64 = φ(required_budget_with_buffer#1 <- block@3, required_budget_with_buffer#1 <- block@4, required_budget_with_buffer#1 <- block@5) (required_budget_with_buffer#2) with required_budget_with_buffer#1 in current definition for 1 blocks
debug: Added required_budget_with_buffer#1 to Phi node: let required_budget_with_buffer#1: uint64 = φ(required_budget_with_buffer#0 <- block@0, required_budget_with_buffer#1 <- block@6) in block@6
debug: Replacing trivial Phi node: let required_budget_with_buffer#1: uint64 = φ(required_budget_with_buffer#0 <- block@0, required_budget_with_buffer#1 <- block@6) (required_budget_with_buffer#1) with required_budget_with_buffer#0
debug: Deleting Phi assignment: let required_budget_with_buffer#1: uint64 = φ(required_budget_with_buffer#0 <- block@0, required_budget_with_buffer#1 <- block@6)
debug: Replaced trivial Phi node: let required_budget_with_buffer#1: uint64 = φ(required_budget_with_buffer#0 <- block@0, required_budget_with_buffer#1 <- block@6) (required_budget_with_buffer#1) with required_budget_with_buffer#0 in current definition for 6 blocks
debug: Added fee_source#0 to Phi node: let fee_source#1: uint64 = φ(fee_source#0 <- block@0) in block@0
debug: Created Phi assignment: let fee_source#2: uint64 = undefined while trying to resolve 'fee_source' in block@6
debug: Added fee_source#1 to Phi node: let fee_source#2: uint64 = φ(fee_source#1 <- block@3) in block@3
debug: Added fee_source#1 to Phi node: let fee_source#2: uint64 = φ(fee_source#1 <- block@3, fee_source#1 <- block@4) in block@4
debug: Added fee_source#1 to Phi node: let fee_source#2: uint64 = φ(fee_source#1 <- block@3, fee_source#1 <- block@4, fee_source#1 <- block@5) in block@5
debug: Replacing trivial Phi node: let fee_source#2: uint64 = φ(fee_source#1 <- block@3, fee_source#1 <- block@4, fee_source#1 <- block@5) (fee_source#2) with fee_source#1
debug: Deleting Phi assignment: let fee_source#2: uint64 = φ(fee_source#1 <- block@3, fee_source#1 <- block@4, fee_source#1 <- block@5)
debug: Replaced trivial Phi node: let fee_source#2: uint64 = φ(fee_source#1 <- block@3, fee_source#1 <- block@4, fee_source#1 <- block@5) (fee_source#2) with fee_source#1 in current definition for 1 blocks
debug: Added fee_source#1 to Phi node: let fee_source#1: uint64 = φ(fee_source#0 <- block@0, fee_source#1 <- block@6) in block@6
debug: Replacing trivial Phi node: let fee_source#1: uint64 = φ(fee_source#0 <- block@0, fee_source#1 <- block@6) (fee_source#1) with fee_source#0
debug: Deleting Phi assignment: let fee_source#1: uint64 = φ(fee_source#0 <- block@0, fee_source#1 <- block@6)
debug: Replaced trivial Phi node: let fee_source#1: uint64 = φ(fee_source#0 <- block@0, fee_source#1 <- block@6) (fee_source#1) with fee_source#0 in current definition for 6 blocks
debug: Sealing block@7
debug: Terminated block@7
debug: Building IR for function _puya_lib.bytes_.is_substring
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'start' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let start#1: uint64 = undefined while trying to resolve 'start' in block@1
debug: Looking for 'item' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let item#1: bytes = undefined while trying to resolve 'item' in block@1
debug: Looking for 'sequence' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let sequence#1: bytes = undefined while trying to resolve 'sequence' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@4
debug: Terminated block@4
debug: Sealing block@1
debug: Added start#0 to Phi node: let start#1: uint64 = φ(start#0 <- block@0) in block@0
debug: Added start#2 to Phi node: let start#1: uint64 = φ(start#0 <- block@0, start#2 <- block@4) in block@4
debug: Added item#0 to Phi node: let item#1: bytes = φ(item#0 <- block@0) in block@0
debug: Added item#1 to Phi node: let item#1: bytes = φ(item#0 <- block@0, item#1 <- block@4) in block@4
debug: Replacing trivial Phi node: let item#1: bytes = φ(item#0 <- block@0, item#1 <- block@4) (item#1) with item#0
debug: Deleting Phi assignment: let item#1: bytes = φ(item#0 <- block@0, item#1 <- block@4)
debug: Replaced trivial Phi node: let item#1: bytes = φ(item#0 <- block@0, item#1 <- block@4) (item#1) with item#0 in current definition for 3 blocks
debug: Added sequence#0 to Phi node: let sequence#1: bytes = φ(sequence#0 <- block@0) in block@0
debug: Added sequence#1 to Phi node: let sequence#1: bytes = φ(sequence#0 <- block@0, sequence#1 <- block@4) in block@4
debug: Replacing trivial Phi node: let sequence#1: bytes = φ(sequence#0 <- block@0, sequence#1 <- block@4) (sequence#1) with sequence#0
debug: Deleting Phi assignment: let sequence#1: bytes = φ(sequence#0 <- block@0, sequence#1 <- block@4)
debug: Replaced trivial Phi node: let sequence#1: bytes = φ(sequence#0 <- block@0, sequence#1 <- block@4) (sequence#1) with sequence#0 in current definition for 3 blocks
debug: Sealing block@5
debug: Terminated block@5
debug: Building IR for function _puya_lib.arc4.dynamic_array_pop_bit
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function _puya_lib.arc4.dynamic_array_pop_fixed_size
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function _puya_lib.arc4.dynamic_array_pop_byte_length_head
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function _puya_lib.arc4.dynamic_array_pop_dynamic_element
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'head_offset' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let head_offset#1: uint64 = undefined while trying to resolve 'head_offset' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'head_and_tail' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let head_and_tail#1: bytes = undefined while trying to resolve 'head_and_tail' in block@1
debug: Looking for 'new_head' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let new_head#1: bytes = undefined while trying to resolve 'new_head' in block@1
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@1
debug: Added head_offset#0 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0) in block@0
debug: Added head_offset#2 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0, head_offset#2 <- block@3) in block@3
debug: Added head_and_tail#0 to Phi node: let head_and_tail#1: bytes = φ(head_and_tail#0 <- block@0) in block@0
debug: Added head_and_tail#1 to Phi node: let head_and_tail#1: bytes = φ(head_and_tail#0 <- block@0, head_and_tail#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let head_and_tail#1: bytes = φ(head_and_tail#0 <- block@0, head_and_tail#1 <- block@3) (head_and_tail#1) with head_and_tail#0
debug: Deleting Phi assignment: let head_and_tail#1: bytes = φ(head_and_tail#0 <- block@0, head_and_tail#1 <- block@3)
debug: Replaced trivial Phi node: let head_and_tail#1: bytes = φ(head_and_tail#0 <- block@0, head_and_tail#1 <- block@3) (head_and_tail#1) with head_and_tail#0 in current definition for 3 blocks
debug: Added new_head#0 to Phi node: let new_head#1: bytes = φ(new_head#0 <- block@0) in block@0
debug: Added new_head#2 to Phi node: let new_head#1: bytes = φ(new_head#0 <- block@0, new_head#2 <- block@3) in block@3
debug: Sealing block@4
debug: Created Phi assignment: let length_minus_1#1: uint64 = undefined while trying to resolve 'length_minus_1' in block@1
debug: Added length_minus_1#0 to Phi node: let length_minus_1#1: uint64 = φ(length_minus_1#0 <- block@0) in block@0
debug: Added length_minus_1#1 to Phi node: let length_minus_1#1: uint64 = φ(length_minus_1#0 <- block@0, length_minus_1#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let length_minus_1#1: uint64 = φ(length_minus_1#0 <- block@0, length_minus_1#1 <- block@3) (length_minus_1#1) with length_minus_1#0
debug: Deleting Phi assignment: let length_minus_1#1: uint64 = φ(length_minus_1#0 <- block@0, length_minus_1#1 <- block@3)
debug: Replaced trivial Phi node: let length_minus_1#1: uint64 = φ(length_minus_1#0 <- block@0, length_minus_1#1 <- block@3) (length_minus_1#1) with length_minus_1#0 in current definition for 3 blocks
debug: Created Phi assignment: let popped_header_offset#1: uint64 = undefined while trying to resolve 'popped_header_offset' in block@1
debug: Added popped_header_offset#0 to Phi node: let popped_header_offset#1: uint64 = φ(popped_header_offset#0 <- block@0) in block@0
debug: Added popped_header_offset#1 to Phi node: let popped_header_offset#1: uint64 = φ(popped_header_offset#0 <- block@0, popped_header_offset#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let popped_header_offset#1: uint64 = φ(popped_header_offset#0 <- block@0, popped_header_offset#1 <- block@3) (popped_header_offset#1) with popped_header_offset#0
debug: Deleting Phi assignment: let popped_header_offset#1: uint64 = φ(popped_header_offset#0 <- block@0, popped_header_offset#1 <- block@3)
debug: Replaced trivial Phi node: let popped_header_offset#1: uint64 = φ(popped_header_offset#0 <- block@0, popped_header_offset#1 <- block@3) (popped_header_offset#1) with popped_header_offset#0 in current definition for 3 blocks
debug: Created Phi assignment: let popped_offset#1: uint64 = undefined while trying to resolve 'popped_offset' in block@1
debug: Added popped_offset#0 to Phi node: let popped_offset#1: uint64 = φ(popped_offset#0 <- block@0) in block@0
debug: Added popped_offset#1 to Phi node: let popped_offset#1: uint64 = φ(popped_offset#0 <- block@0, popped_offset#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let popped_offset#1: uint64 = φ(popped_offset#0 <- block@0, popped_offset#1 <- block@3) (popped_offset#1) with popped_offset#0
debug: Deleting Phi assignment: let popped_offset#1: uint64 = φ(popped_offset#0 <- block@0, popped_offset#1 <- block@3)
debug: Replaced trivial Phi node: let popped_offset#1: uint64 = φ(popped_offset#0 <- block@0, popped_offset#1 <- block@3) (popped_offset#1) with popped_offset#0 in current definition for 3 blocks
debug: Created Phi assignment: let popped#1: bytes = undefined while trying to resolve 'popped' in block@1
debug: Added popped#0 to Phi node: let popped#1: bytes = φ(popped#0 <- block@0) in block@0
debug: Added popped#1 to Phi node: let popped#1: bytes = φ(popped#0 <- block@0, popped#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let popped#1: bytes = φ(popped#0 <- block@0, popped#1 <- block@3) (popped#1) with popped#0
debug: Deleting Phi assignment: let popped#1: bytes = φ(popped#0 <- block@0, popped#1 <- block@3)
debug: Replaced trivial Phi node: let popped#1: bytes = φ(popped#0 <- block@0, popped#1 <- block@3) (popped#1) with popped#0 in current definition for 3 blocks
debug: Terminated block@4
debug: Building IR for function _puya_lib.arc4.dynamic_array_concat_bits
debug: Sealing block@0
debug: Terminated block@0
debug: Sealing block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Created Phi assignment: let array_length#1: uint64 = undefined while trying to resolve 'array_length' in block@2
debug: Added array_length#0 to Phi node: let array_length#1: uint64 = φ(array_length#0 <- block@0) in block@0
debug: Added array_length#0 to Phi node: let array_length#1: uint64 = φ(array_length#0 <- block@0, array_length#0 <- block@1) in block@1
debug: Replacing trivial Phi node: let array_length#1: uint64 = φ(array_length#0 <- block@0, array_length#0 <- block@1) (array_length#1) with array_length#0
debug: Deleting Phi assignment: let array_length#1: uint64 = φ(array_length#0 <- block@0, array_length#0 <- block@1)
debug: Replaced trivial Phi node: let array_length#1: uint64 = φ(array_length#0 <- block@0, array_length#0 <- block@1) (array_length#1) with array_length#0 in current definition for 1 blocks
debug: Created Phi assignment: let new_items_count#1: uint64 = undefined while trying to resolve 'new_items_count' in block@2
debug: Added new_items_count#0 to Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0) in block@0
debug: Added new_items_count#0 to Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#0 <- block@1) in block@1
debug: Replacing trivial Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#0 <- block@1) (new_items_count#1) with new_items_count#0
debug: Deleting Phi assignment: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#0 <- block@1)
debug: Replaced trivial Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#0 <- block@1) (new_items_count#1) with new_items_count#0 in current definition for 1 blocks
debug: Terminated block@2
debug: Looking for 'write_offset' in an unsealed block creating an incomplete Phi: block@3
debug: Created Phi assignment: let write_offset#1: uint64 = undefined while trying to resolve 'write_offset' in block@3
debug: Looking for 'write_end' in an unsealed block creating an incomplete Phi: block@3
debug: Created Phi assignment: let write_end#1: uint64 = undefined while trying to resolve 'write_end' in block@3
debug: Terminated block@3
debug: Sealing block@4
debug: Looking for 'result' in an unsealed block creating an incomplete Phi: block@3
debug: Created Phi assignment: let result#2: bytes = undefined while trying to resolve 'result' in block@3
debug: Looking for 'new_items_bytes' in an unsealed block creating an incomplete Phi: block@3
debug: Created Phi assignment: let new_items_bytes#1: bytes = undefined while trying to resolve 'new_items_bytes' in block@3
debug: Looking for 'read_offset' in an unsealed block creating an incomplete Phi: block@3
debug: Created Phi assignment: let read_offset#1: uint64 = undefined while trying to resolve 'read_offset' in block@3
debug: Looking for 'read_step' in an unsealed block creating an incomplete Phi: block@3
debug: Created Phi assignment: let read_step#1: uint64 = undefined while trying to resolve 'read_step' in block@3
debug: Terminated block@4
debug: Sealing block@3
debug: Added write_offset#0 to Phi node: let write_offset#1: uint64 = φ(write_offset#0 <- block@2) in block@2
debug: Added write_offset#2 to Phi node: let write_offset#1: uint64 = φ(write_offset#0 <- block@2, write_offset#2 <- block@4) in block@4
debug: Added write_end#0 to Phi node: let write_end#1: uint64 = φ(write_end#0 <- block@2) in block@2
debug: Added write_end#1 to Phi node: let write_end#1: uint64 = φ(write_end#0 <- block@2, write_end#1 <- block@4) in block@4
debug: Replacing trivial Phi node: let write_end#1: uint64 = φ(write_end#0 <- block@2, write_end#1 <- block@4) (write_end#1) with write_end#0
debug: Deleting Phi assignment: let write_end#1: uint64 = φ(write_end#0 <- block@2, write_end#1 <- block@4)
debug: Replaced trivial Phi node: let write_end#1: uint64 = φ(write_end#0 <- block@2, write_end#1 <- block@4) (write_end#1) with write_end#0 in current definition for 2 blocks
debug: Created Phi assignment: let result#4: bytes = undefined while trying to resolve 'result' in block@2
debug: Added result#0 to Phi node: let result#4: bytes = φ(result#0 <- block@0) in block@0
debug: Added result#1 to Phi node: let result#4: bytes = φ(result#0 <- block@0, result#1 <- block@1) in block@1
debug: Added result#4 to Phi node: let result#2: bytes = φ(result#4 <- block@2) in block@2
debug: Added result#3 to Phi node: let result#2: bytes = φ(result#4 <- block@2, result#3 <- block@4) in block@4
debug: Created Phi assignment: let new_items_bytes#2: bytes = undefined while trying to resolve 'new_items_bytes' in block@2
debug: Added new_items_bytes#0 to Phi node: let new_items_bytes#2: bytes = φ(new_items_bytes#0 <- block@0) in block@0
debug: Added new_items_bytes#0 to Phi node: let new_items_bytes#2: bytes = φ(new_items_bytes#0 <- block@0, new_items_bytes#0 <- block@1) in block@1
debug: Replacing trivial Phi node: let new_items_bytes#2: bytes = φ(new_items_bytes#0 <- block@0, new_items_bytes#0 <- block@1) (new_items_bytes#2) with new_items_bytes#0
debug: Deleting Phi assignment: let new_items_bytes#2: bytes = φ(new_items_bytes#0 <- block@0, new_items_bytes#0 <- block@1)
debug: Replaced trivial Phi node: let new_items_bytes#2: bytes = φ(new_items_bytes#0 <- block@0, new_items_bytes#0 <- block@1) (new_items_bytes#2) with new_items_bytes#0 in current definition for 1 blocks
debug: Added new_items_bytes#0 to Phi node: let new_items_bytes#1: bytes = φ(new_items_bytes#0 <- block@2) in block@2
debug: Added new_items_bytes#1 to Phi node: let new_items_bytes#1: bytes = φ(new_items_bytes#0 <- block@2, new_items_bytes#1 <- block@4) in block@4
debug: Replacing trivial Phi node: let new_items_bytes#1: bytes = φ(new_items_bytes#0 <- block@2, new_items_bytes#1 <- block@4) (new_items_bytes#1) with new_items_bytes#0
debug: Deleting Phi assignment: let new_items_bytes#1: bytes = φ(new_items_bytes#0 <- block@2, new_items_bytes#1 <- block@4)
debug: Replaced trivial Phi node: let new_items_bytes#1: bytes = φ(new_items_bytes#0 <- block@2, new_items_bytes#1 <- block@4) (new_items_bytes#1) with new_items_bytes#0 in current definition for 2 blocks
debug: Added read_offset#0 to Phi node: let read_offset#1: uint64 = φ(read_offset#0 <- block@2) in block@2
debug: Added read_offset#2 to Phi node: let read_offset#1: uint64 = φ(read_offset#0 <- block@2, read_offset#2 <- block@4) in block@4
debug: Created Phi assignment: let read_step#2: uint64 = undefined while trying to resolve 'read_step' in block@2
debug: Added read_step#0 to Phi node: let read_step#2: uint64 = φ(read_step#0 <- block@0) in block@0
debug: Added read_step#0 to Phi node: let read_step#2: uint64 = φ(read_step#0 <- block@0, read_step#0 <- block@1) in block@1
debug: Replacing trivial Phi node: let read_step#2: uint64 = φ(read_step#0 <- block@0, read_step#0 <- block@1) (read_step#2) with read_step#0
debug: Deleting Phi assignment: let read_step#2: uint64 = φ(read_step#0 <- block@0, read_step#0 <- block@1)
debug: Replaced trivial Phi node: let read_step#2: uint64 = φ(read_step#0 <- block@0, read_step#0 <- block@1) (read_step#2) with read_step#0 in current definition for 1 blocks
debug: Added read_step#0 to Phi node: let read_step#1: uint64 = φ(read_step#0 <- block@2) in block@2
debug: Added read_step#1 to Phi node: let read_step#1: uint64 = φ(read_step#0 <- block@2, read_step#1 <- block@4) in block@4
debug: Replacing trivial Phi node: let read_step#1: uint64 = φ(read_step#0 <- block@2, read_step#1 <- block@4) (read_step#1) with read_step#0
debug: Deleting Phi assignment: let read_step#1: uint64 = φ(read_step#0 <- block@2, read_step#1 <- block@4)
debug: Replaced trivial Phi node: let read_step#1: uint64 = φ(read_step#0 <- block@2, read_step#1 <- block@4) (read_step#1) with read_step#0 in current definition for 2 blocks
debug: Sealing block@5
debug: Terminated block@5
debug: Building IR for function _puya_lib.arc4.dynamic_array_concat_byte_length_head
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function _puya_lib.arc4.dynamic_array_concat_dynamic_element
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'head_offset' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let head_offset#1: uint64 = undefined while trying to resolve 'head_offset' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'array_head_and_tail' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let array_head_and_tail#1: bytes = undefined while trying to resolve 'array_head_and_tail' in block@1
debug: Looking for 'new_head' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let new_head#1: bytes = undefined while trying to resolve 'new_head' in block@1
debug: Looking for 'item_offset_adjustment' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let item_offset_adjustment#1: uint64 = undefined while trying to resolve 'item_offset_adjustment' in block@1
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@1
debug: Added head_offset#0 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0) in block@0
debug: Added head_offset#2 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0, head_offset#2 <- block@3) in block@3
debug: Added array_head_and_tail#0 to Phi node: let array_head_and_tail#1: bytes = φ(array_head_and_tail#0 <- block@0) in block@0
debug: Added array_head_and_tail#1 to Phi node: let array_head_and_tail#1: bytes = φ(array_head_and_tail#0 <- block@0, array_head_and_tail#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let array_head_and_tail#1: bytes = φ(array_head_and_tail#0 <- block@0, array_head_and_tail#1 <- block@3) (array_head_and_tail#1) with array_head_and_tail#0
debug: Deleting Phi assignment: let array_head_and_tail#1: bytes = φ(array_head_and_tail#0 <- block@0, array_head_and_tail#1 <- block@3)
debug: Replaced trivial Phi node: let array_head_and_tail#1: bytes = φ(array_head_and_tail#0 <- block@0, array_head_and_tail#1 <- block@3) (array_head_and_tail#1) with array_head_and_tail#0 in current definition for 3 blocks
debug: Added new_head#0 to Phi node: let new_head#1: bytes = φ(new_head#0 <- block@0) in block@0
debug: Added new_head#2 to Phi node: let new_head#1: bytes = φ(new_head#0 <- block@0, new_head#2 <- block@3) in block@3
debug: Added item_offset_adjustment#0 to Phi node: let item_offset_adjustment#1: uint64 = φ(item_offset_adjustment#0 <- block@0) in block@0
debug: Added item_offset_adjustment#1 to Phi node: let item_offset_adjustment#1: uint64 = φ(item_offset_adjustment#0 <- block@0, item_offset_adjustment#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let item_offset_adjustment#1: uint64 = φ(item_offset_adjustment#0 <- block@0, item_offset_adjustment#1 <- block@3) (item_offset_adjustment#1) with item_offset_adjustment#0
debug: Deleting Phi assignment: let item_offset_adjustment#1: uint64 = φ(item_offset_adjustment#0 <- block@0, item_offset_adjustment#1 <- block@3)
debug: Replaced trivial Phi node: let item_offset_adjustment#1: uint64 = φ(item_offset_adjustment#0 <- block@0, item_offset_adjustment#1 <- block@3) (item_offset_adjustment#1) with item_offset_adjustment#0 in current definition for 3 blocks
debug: Sealing block@4
debug: Created Phi assignment: let new_items_count#1: uint64 = undefined while trying to resolve 'new_items_count' in block@1
debug: Added new_items_count#0 to Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0) in block@0
debug: Added new_items_count#1 to Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#1 <- block@3) (new_items_count#1) with new_items_count#0
debug: Deleting Phi assignment: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#1 <- block@3)
debug: Replaced trivial Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#1 <- block@3) (new_items_count#1) with new_items_count#0 in current definition for 3 blocks
debug: Terminated block@4
debug: Looking for 'head_offset' in an unsealed block creating an incomplete Phi: block@5
debug: Created Phi assignment: let head_offset#4: uint64 = undefined while trying to resolve 'head_offset' in block@5
debug: Terminated block@5
debug: Sealing block@6
debug: Looking for 'new_head_and_tail' in an unsealed block creating an incomplete Phi: block@5
debug: Created Phi assignment: let new_head_and_tail#1: bytes = undefined while trying to resolve 'new_head_and_tail' in block@5
debug: Looking for 'new_head' in an unsealed block creating an incomplete Phi: block@5
debug: Created Phi assignment: let new_head#3: bytes = undefined while trying to resolve 'new_head' in block@5
debug: Looking for 'item_offset_adjustment' in an unsealed block creating an incomplete Phi: block@5
debug: Created Phi assignment: let item_offset_adjustment#3: uint64 = undefined while trying to resolve 'item_offset_adjustment' in block@5
debug: Terminated block@6
debug: Sealing block@7
debug: Terminated block@7
debug: Sealing block@5
debug: Added head_offset#3 to Phi node: let head_offset#4: uint64 = φ(head_offset#3 <- block@4) in block@4
debug: Added head_offset#5 to Phi node: let head_offset#4: uint64 = φ(head_offset#3 <- block@4, head_offset#5 <- block@7) in block@7
debug: Created Phi assignment: let new_head_and_tail#2: bytes = undefined while trying to resolve 'new_head_and_tail' in block@1
debug: Added new_head_and_tail#0 to Phi node: let new_head_and_tail#2: bytes = φ(new_head_and_tail#0 <- block@0) in block@0
debug: Added new_head_and_tail#2 to Phi node: let new_head_and_tail#2: bytes = φ(new_head_and_tail#0 <- block@0, new_head_and_tail#2 <- block@3) in block@3
debug: Replacing trivial Phi node: let new_head_and_tail#2: bytes = φ(new_head_and_tail#0 <- block@0, new_head_and_tail#2 <- block@3) (new_head_and_tail#2) with new_head_and_tail#0
debug: Deleting Phi assignment: let new_head_and_tail#2: bytes = φ(new_head_and_tail#0 <- block@0, new_head_and_tail#2 <- block@3)
debug: Replaced trivial Phi node: let new_head_and_tail#2: bytes = φ(new_head_and_tail#0 <- block@0, new_head_and_tail#2 <- block@3) (new_head_and_tail#2) with new_head_and_tail#0 in current definition for 3 blocks
debug: Added new_head_and_tail#0 to Phi node: let new_head_and_tail#1: bytes = φ(new_head_and_tail#0 <- block@4) in block@4
debug: Added new_head_and_tail#1 to Phi node: let new_head_and_tail#1: bytes = φ(new_head_and_tail#0 <- block@4, new_head_and_tail#1 <- block@7) in block@7
debug: Replacing trivial Phi node: let new_head_and_tail#1: bytes = φ(new_head_and_tail#0 <- block@4, new_head_and_tail#1 <- block@7) (new_head_and_tail#1) with new_head_and_tail#0
debug: Deleting Phi assignment: let new_head_and_tail#1: bytes = φ(new_head_and_tail#0 <- block@4, new_head_and_tail#1 <- block@7)
debug: Replaced trivial Phi node: let new_head_and_tail#1: bytes = φ(new_head_and_tail#0 <- block@4, new_head_and_tail#1 <- block@7) (new_head_and_tail#1) with new_head_and_tail#0 in current definition for 3 blocks
debug: Added new_head#1 to Phi node: let new_head#3: bytes = φ(new_head#1 <- block@4) in block@4
debug: Added new_head#4 to Phi node: let new_head#3: bytes = φ(new_head#1 <- block@4, new_head#4 <- block@7) in block@7
debug: Added item_offset_adjustment#2 to Phi node: let item_offset_adjustment#3: uint64 = φ(item_offset_adjustment#2 <- block@4) in block@4
debug: Added item_offset_adjustment#3 to Phi node: let item_offset_adjustment#3: uint64 = φ(item_offset_adjustment#2 <- block@4, item_offset_adjustment#3 <- block@7) in block@7
debug: Replacing trivial Phi node: let item_offset_adjustment#3: uint64 = φ(item_offset_adjustment#2 <- block@4, item_offset_adjustment#3 <- block@7) (item_offset_adjustment#3) with item_offset_adjustment#2
debug: Deleting Phi assignment: let item_offset_adjustment#3: uint64 = φ(item_offset_adjustment#2 <- block@4, item_offset_adjustment#3 <- block@7)
debug: Replaced trivial Phi node: let item_offset_adjustment#3: uint64 = φ(item_offset_adjustment#2 <- block@4, item_offset_adjustment#3 <- block@7) (item_offset_adjustment#3) with item_offset_adjustment#2 in current definition for 3 blocks
debug: Sealing block@8
debug: Created Phi assignment: let array_items_count#1: uint64 = undefined while trying to resolve 'array_items_count' in block@5
debug: Created Phi assignment: let array_items_count#2: uint64 = undefined while trying to resolve 'array_items_count' in block@1
debug: Added array_items_count#0 to Phi node: let array_items_count#2: uint64 = φ(array_items_count#0 <- block@0) in block@0
debug: Added array_items_count#2 to Phi node: let array_items_count#2: uint64 = φ(array_items_count#0 <- block@0, array_items_count#2 <- block@3) in block@3
debug: Replacing trivial Phi node: let array_items_count#2: uint64 = φ(array_items_count#0 <- block@0, array_items_count#2 <- block@3) (array_items_count#2) with array_items_count#0
debug: Deleting Phi assignment: let array_items_count#2: uint64 = φ(array_items_count#0 <- block@0, array_items_count#2 <- block@3)
debug: Replaced trivial Phi node: let array_items_count#2: uint64 = φ(array_items_count#0 <- block@0, array_items_count#2 <- block@3) (array_items_count#2) with array_items_count#0 in current definition for 3 blocks
debug: Added array_items_count#0 to Phi node: let array_items_count#1: uint64 = φ(array_items_count#0 <- block@4) in block@4
debug: Added array_items_count#1 to Phi node: let array_items_count#1: uint64 = φ(array_items_count#0 <- block@4, array_items_count#1 <- block@7) in block@7
debug: Replacing trivial Phi node: let array_items_count#1: uint64 = φ(array_items_count#0 <- block@4, array_items_count#1 <- block@7) (array_items_count#1) with array_items_count#0
debug: Deleting Phi assignment: let array_items_count#1: uint64 = φ(array_items_count#0 <- block@4, array_items_count#1 <- block@7)
debug: Replaced trivial Phi node: let array_items_count#1: uint64 = φ(array_items_count#0 <- block@4, array_items_count#1 <- block@7) (array_items_count#1) with array_items_count#0 in current definition for 3 blocks
debug: Created Phi assignment: let new_items_count#2: uint64 = undefined while trying to resolve 'new_items_count' in block@5
debug: Added new_items_count#0 to Phi node: let new_items_count#2: uint64 = φ(new_items_count#0 <- block@4) in block@4
debug: Added new_items_count#2 to Phi node: let new_items_count#2: uint64 = φ(new_items_count#0 <- block@4, new_items_count#2 <- block@7) in block@7
debug: Replacing trivial Phi node: let new_items_count#2: uint64 = φ(new_items_count#0 <- block@4, new_items_count#2 <- block@7) (new_items_count#2) with new_items_count#0
debug: Deleting Phi assignment: let new_items_count#2: uint64 = φ(new_items_count#0 <- block@4, new_items_count#2 <- block@7)
debug: Replaced trivial Phi node: let new_items_count#2: uint64 = φ(new_items_count#0 <- block@4, new_items_count#2 <- block@7) (new_items_count#2) with new_items_count#0 in current definition for 3 blocks
debug: Created Phi assignment: let array_head_and_tail#2: bytes = undefined while trying to resolve 'array_head_and_tail' in block@5
debug: Added array_head_and_tail#0 to Phi node: let array_head_and_tail#2: bytes = φ(array_head_and_tail#0 <- block@4) in block@4
debug: Added array_head_and_tail#2 to Phi node: let array_head_and_tail#2: bytes = φ(array_head_and_tail#0 <- block@4, array_head_and_tail#2 <- block@7) in block@7
debug: Replacing trivial Phi node: let array_head_and_tail#2: bytes = φ(array_head_and_tail#0 <- block@4, array_head_and_tail#2 <- block@7) (array_head_and_tail#2) with array_head_and_tail#0
debug: Deleting Phi assignment: let array_head_and_tail#2: bytes = φ(array_head_and_tail#0 <- block@4, array_head_and_tail#2 <- block@7)
debug: Replaced trivial Phi node: let array_head_and_tail#2: bytes = φ(array_head_and_tail#0 <- block@4, array_head_and_tail#2 <- block@7) (array_head_and_tail#2) with array_head_and_tail#0 in current definition for 3 blocks
debug: Terminated block@8
debug: Building IR for function _puya_lib.arc4.dynamic_array_replace_byte_length_head
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function _puya_lib.arc4.dynamic_array_replace_dynamic_element
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function _puya_lib.arc4.static_array_replace_dynamic_element
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'head_offset' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let head_offset#1: uint64 = undefined while trying to resolve 'head_offset' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'new_head_and_tail' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let new_head_and_tail#1: bytes = undefined while trying to resolve 'new_head_and_tail' in block@1
debug: Looking for 'new_item_length' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let new_item_length#1: uint64 = undefined while trying to resolve 'new_item_length' in block@1
debug: Looking for 'original_item_length' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let original_item_length#1: uint64 = undefined while trying to resolve 'original_item_length' in block@1
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@1
debug: Added head_offset#0 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0) in block@0
debug: Added head_offset#2 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0, head_offset#2 <- block@3) in block@3
debug: Added new_head_and_tail#0 to Phi node: let new_head_and_tail#1: bytes = φ(new_head_and_tail#0 <- block@0) in block@0
debug: Added new_head_and_tail#2 to Phi node: let new_head_and_tail#1: bytes = φ(new_head_and_tail#0 <- block@0, new_head_and_tail#2 <- block@3) in block@3
debug: Added new_item_length#0 to Phi node: let new_item_length#1: uint64 = φ(new_item_length#0 <- block@0) in block@0
debug: Added new_item_length#1 to Phi node: let new_item_length#1: uint64 = φ(new_item_length#0 <- block@0, new_item_length#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let new_item_length#1: uint64 = φ(new_item_length#0 <- block@0, new_item_length#1 <- block@3) (new_item_length#1) with new_item_length#0
debug: Deleting Phi assignment: let new_item_length#1: uint64 = φ(new_item_length#0 <- block@0, new_item_length#1 <- block@3)
debug: Replaced trivial Phi node: let new_item_length#1: uint64 = φ(new_item_length#0 <- block@0, new_item_length#1 <- block@3) (new_item_length#1) with new_item_length#0 in current definition for 3 blocks
debug: Added original_item_length#0 to Phi node: let original_item_length#1: uint64 = φ(original_item_length#0 <- block@0) in block@0
debug: Added original_item_length#1 to Phi node: let original_item_length#1: uint64 = φ(original_item_length#0 <- block@0, original_item_length#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let original_item_length#1: uint64 = φ(original_item_length#0 <- block@0, original_item_length#1 <- block@3) (original_item_length#1) with original_item_length#0
debug: Deleting Phi assignment: let original_item_length#1: uint64 = φ(original_item_length#0 <- block@0, original_item_length#1 <- block@3)
debug: Replaced trivial Phi node: let original_item_length#1: uint64 = φ(original_item_length#0 <- block@0, original_item_length#1 <- block@3) (original_item_length#1) with original_item_length#0 in current definition for 3 blocks
debug: Sealing block@4
debug: Terminated block@4
debug: Building IR for function _puya_lib.arc4.static_array_replace_byte_length_head
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function _puya_lib.arc4.recalculate_head_for_elements_with_byte_length_head
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'head_offset' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let head_offset#1: uint64 = undefined while trying to resolve 'head_offset' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'tail_offset' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let tail_offset#1: uint64 = undefined while trying to resolve 'tail_offset' in block@1
debug: Looking for 'array_head_and_tail' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let array_head_and_tail#1: bytes = undefined while trying to resolve 'array_head_and_tail' in block@1
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@1
debug: Added head_offset#0 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0) in block@0
debug: Added head_offset#3 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0, head_offset#3 <- block@3) in block@3
debug: Added tail_offset#0 to Phi node: let tail_offset#1: uint64 = φ(tail_offset#0 <- block@0) in block@0
debug: Added tail_offset#2 to Phi node: let tail_offset#1: uint64 = φ(tail_offset#0 <- block@0, tail_offset#2 <- block@3) in block@3
debug: Added array_head_and_tail#0 to Phi node: let array_head_and_tail#1: bytes = φ(array_head_and_tail#0 <- block@0) in block@0
debug: Added array_head_and_tail#2 to Phi node: let array_head_and_tail#1: bytes = φ(array_head_and_tail#0 <- block@0, array_head_and_tail#2 <- block@3) in block@3
debug: Sealing block@4
debug: Terminated block@4
debug: Building IR for function test_cases.state_mutations.contract.get_struct
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.state_mutations.contract.Contract.__puya_arc4_router__
debug: Sealing block@0
debug: Terminated block@0
debug: Sealing block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@4
debug: Terminated block@4
debug: Sealing block@5
debug: Terminated block@5
debug: Sealing block@6
debug: Terminated block@6
debug: Sealing block@7
debug: Terminated block@7
debug: Sealing block@8
debug: Terminated block@8
debug: Sealing block@9
debug: Terminated block@9
debug: Sealing block@10
debug: Terminated block@10
debug: Sealing block@11
debug: Terminated block@11
debug: Sealing block@12
debug: Terminated block@12
debug: Building IR for function test_cases.state_mutations.contract.Contract.__init__
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.state_mutations.contract.Contract.opt_in
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.state_mutations.contract.Contract.append
debug: Sealing block@0
state_mutations/contract.py:39:9 debug: encountered already materialized expression ('glob'), reusing result: "glob"
state_mutations/contract.py:40:18 debug: encountered already materialized expression (txn<Sender>()), reusing result: tmp%0#0
state_mutations/contract.py:40:9 debug: encountered already materialized expression ('loc'), reusing result: "loc"
state_mutations/contract.py:41:9 debug: encountered already materialized expression ('box'), reusing result: "box"
state_mutations/contract.py:42:9 debug: encountered already materialized expression (concat('map', reinterpret_cast<bytes>(txn<Sender>()))), reusing result: tmp%2#0
debug: Terminated block@0
debug: Building IR for function test_cases.state_mutations.contract.Contract.modify
debug: Sealing block@0
state_mutations/contract.py:46:9 debug: encountered already materialized expression (GlobalState['glob']), reusing result: maybe_value%0#0
state_mutations/contract.py:46:25 debug: encountered already materialized expression (0u), reusing result: 0u
state_mutations/contract.py:46:9 debug: encountered already materialized expression ('glob'), reusing result: "glob"
state_mutations/contract.py:47:9 debug: encountered already materialized expression (LocalState['loc', txn<Sender>()]), reusing result: maybe_value%1#0
state_mutations/contract.py:47:30 debug: encountered already materialized expression (0u), reusing result: 0u
state_mutations/contract.py:47:18 debug: encountered already materialized expression (txn<Sender>()), reusing result: tmp%1#0
state_mutations/contract.py:47:9 debug: encountered already materialized expression ('loc'), reusing result: "loc"
state_mutations/contract.py:48:9 debug: encountered already materialized expression (Box['box']), reusing result: maybe_value%2#0
state_mutations/contract.py:48:24 debug: encountered already materialized expression (0u), reusing result: 0u
state_mutations/contract.py:48:9 debug: encountered already materialized expression ('box'), reusing result: "box"
state_mutations/contract.py:49:9 debug: encountered already materialized expression (Box[concat('map', reinterpret_cast<bytes>(txn<Sender>()))]), reusing result: maybe_value%3#0
state_mutations/contract.py:49:30 debug: encountered already materialized expression (0u), reusing result: 0u
state_mutations/contract.py:49:9 debug: encountered already materialized expression (concat('map', reinterpret_cast<bytes>(txn<Sender>()))), reusing result: tmp%5#0
debug: Terminated block@0
debug: Building IR for function test_cases.state_mutations.contract.Contract.get
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.state_mutations.contract.Contract.__algopy_default_create
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function algopy.arc4.ARC4Contract.approval_program
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function algopy.arc4.ARC4Contract.clear_state_program
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.state_mutations.contract.Contract.__algopy_entrypoint_with_init
debug: Sealing block@0
debug: Terminated block@0
debug: Sealing block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Terminated block@2
debug: removing unused subroutine _puya_lib.util.ensure_budget
debug: removing unused subroutine _puya_lib.bytes_.is_substring
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_bit
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_fixed_size
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_bits
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_replace_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.static_array_replace_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.recalculate_head_for_elements_with_byte_length_head
debug: removing unused subroutine algopy.arc4.ARC4Contract.clear_state_program
debug: Building IR for function algopy.arc4.ARC4Contract.clear_state_program
debug: Sealing block@0
debug: Terminated block@0
debug: removing unused subroutine _puya_lib.util.ensure_budget
debug: removing unused subroutine _puya_lib.bytes_.is_substring
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_bit
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_fixed_size
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_bits
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_replace_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_replace_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.static_array_replace_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.static_array_replace_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.recalculate_head_for_elements_with_byte_length_head
debug: removing unused subroutine test_cases.state_mutations.contract.get_struct
debug: removing unused subroutine test_cases.state_mutations.contract.Contract.__puya_arc4_router__
debug: removing unused subroutine test_cases.state_mutations.contract.Contract.__init__
debug: removing unused subroutine test_cases.state_mutations.contract.Contract.opt_in
debug: removing unused subroutine test_cases.state_mutations.contract.Contract.append
debug: removing unused subroutine test_cases.state_mutations.contract.Contract.modify
debug: removing unused subroutine test_cases.state_mutations.contract.Contract.get
debug: removing unused subroutine test_cases.state_mutations.contract.Contract.__algopy_default_create
debug: removing unused subroutine algopy.arc4.ARC4Contract.approval_program
debug: removing unused subroutine algopy.arc4.ARC4Contract.clear_state_program
debug: optimizing approval program of test_cases.state_mutations.contract.Contract at level 0
debug: Begin optimization pass 1/100
debug: Optimizing subroutine test_cases.state_mutations.contract.Contract.__algopy_entrypoint_with_init
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine _puya_lib.arc4.dynamic_array_concat_dynamic_element
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine _puya_lib.arc4.dynamic_array_replace_dynamic_element
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine _puya_lib.arc4.static_array_replace_dynamic_element
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.state_mutations.contract.get_struct
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable current_tail_offset%0#0
debug: Removing unused variable encoded_tuple_buffer%0#0
debug: Removing unused variable current_tail_offset%1#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.state_mutations.contract.Contract.__puya_arc4_router__
debug: Optimizer: Perform Subroutine Inlining
debug: inlining call to test_cases.state_mutations.contract.Contract.__algopy_default_create in test_cases.state_mutations.contract.Contract.__puya_arc4_router__
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.state_mutations.contract.Contract.__init__
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.state_mutations.contract.Contract.opt_in
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.state_mutations.contract.Contract.append
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable tail_offset%0#0
debug: Removing unused variable r_count%0#0
debug: Removing unused variable tail_offset%1#0
debug: Removing unused variable r_count%1#0
debug: Removing unused variable tail_offset%2#0
debug: Removing unused variable r_count%2#0
debug: Removing unused variable tail_offset%3#0
debug: Removing unused variable r_count%3#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.state_mutations.contract.Contract.modify
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable assigned_value%0#0
debug: Removing unused variable assigned_value%2#0
debug: Removing unused variable assigned_value%4#0
debug: Removing unused variable assigned_value%6#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.state_mutations.contract.Contract.get
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.state_mutations.contract.Contract.__algopy_default_create
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine algopy.arc4.ARC4Contract.approval_program
debug: Optimizer: Perform Subroutine Inlining
debug: inlining call to test_cases.state_mutations.contract.Contract.__puya_arc4_router__ in algopy.arc4.ARC4Contract.approval_program
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: removing unused subroutine test_cases.state_mutations.contract.Contract.__puya_arc4_router__
debug: removing unused subroutine test_cases.state_mutations.contract.Contract.__algopy_default_create
debug: Unused subroutines removed
debug: Begin optimization pass 2/100
debug: Optimizing subroutine test_cases.state_mutations.contract.Contract.__algopy_entrypoint_with_init
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine _puya_lib.arc4.dynamic_array_concat_dynamic_element
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine _puya_lib.arc4.dynamic_array_replace_dynamic_element
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine _puya_lib.arc4.static_array_replace_dynamic_element
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.state_mutations.contract.get_struct
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable data_length%0#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.state_mutations.contract.Contract.__init__
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.state_mutations.contract.Contract.opt_in
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.state_mutations.contract.Contract.append
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable next_item_len%0#0
debug: Removing unused variable next_item_len%1#0
debug: Removing unused variable next_item_len%2#0
debug: Removing unused variable next_item_len%3#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.state_mutations.contract.Contract.modify
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.state_mutations.contract.Contract.get
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine algopy.arc4.ARC4Contract.approval_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Begin optimization pass 3/100
debug: Optimizing subroutine test_cases.state_mutations.contract.Contract.__algopy_entrypoint_with_init
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine _puya_lib.arc4.dynamic_array_concat_dynamic_element
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine _puya_lib.arc4.dynamic_array_replace_dynamic_element
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine _puya_lib.arc4.static_array_replace_dynamic_element
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.state_mutations.contract.get_struct
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.state_mutations.contract.Contract.__init__
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.state_mutations.contract.Contract.opt_in
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.state_mutations.contract.Contract.append
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.state_mutations.contract.Contract.modify
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.state_mutations.contract.Contract.get
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine algopy.arc4.ARC4Contract.approval_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: No optimizations performed in pass 3, ending loop
debug: optimizing clear program of test_cases.state_mutations.contract.Contract at level 0
debug: Begin optimization pass 1/100
debug: Optimizing subroutine algopy.arc4.ARC4Contract.clear_state_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: No optimizations performed in pass 1, ending loop
debug: lowering array IR nodes in approval program of test_cases.state_mutations.contract.Contract
debug: lowering array IR nodes in clear program of test_cases.state_mutations.contract.Contract
debug: optimizing approval program of test_cases.state_mutations.contract.Contract at level 0
debug: Begin optimization pass 1/100
debug: Optimizing subroutine test_cases.state_mutations.contract.Contract.__algopy_entrypoint_with_init
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine _puya_lib.arc4.dynamic_array_concat_dynamic_element
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine _puya_lib.arc4.dynamic_array_replace_dynamic_element
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine _puya_lib.arc4.static_array_replace_dynamic_element
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.state_mutations.contract.get_struct
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.state_mutations.contract.Contract.__init__
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.state_mutations.contract.Contract.opt_in
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.state_mutations.contract.Contract.append
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.state_mutations.contract.Contract.modify
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.state_mutations.contract.Contract.get
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine algopy.arc4.ARC4Contract.approval_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: No optimizations performed in pass 1, ending loop
debug: optimizing clear program of test_cases.state_mutations.contract.Contract at level 0
debug: Begin optimization pass 1/100
debug: Optimizing subroutine algopy.arc4.ARC4Contract.clear_state_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: No optimizations performed in pass 1, ending loop
debug: removing local static slots in approval program of test_cases.state_mutations.contract.Contract
debug: auto reserving slots in test_cases.state_mutations.contract.Contract.__algopy_entrypoint_with_init, []
debug: auto reserving slots in _puya_lib.arc4.dynamic_array_concat_dynamic_element, []
debug: auto reserving slots in _puya_lib.arc4.dynamic_array_replace_dynamic_element, []
debug: auto reserving slots in _puya_lib.arc4.static_array_replace_dynamic_element, []
state_mutations/contract.py:64 debug: auto reserving slots in test_cases.state_mutations.contract.get_struct, []
state_mutations/contract.py:23 debug: auto reserving slots in test_cases.state_mutations.contract.Contract.__init__, []
state_mutations/contract.py:29 debug: auto reserving slots in test_cases.state_mutations.contract.Contract.opt_in, []
state_mutations/contract.py:36 debug: auto reserving slots in test_cases.state_mutations.contract.Contract.append, []
state_mutations/contract.py:44 debug: auto reserving slots in test_cases.state_mutations.contract.Contract.modify, []
state_mutations/contract.py:51 debug: auto reserving slots in test_cases.state_mutations.contract.Contract.get, []
debug: auto reserving slots in algopy.arc4.ARC4Contract.approval_program, []
debug: Slot allocation not required
debug: removing local static slots in clear program of test_cases.state_mutations.contract.Contract
debug: auto reserving slots in algopy.arc4.ARC4Contract.clear_state_program, []
debug: Slot allocation not required
debug: Performing SSA IR destructuring for test_cases.state_mutations.contract.Contract.__algopy_entrypoint_with_init
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in test_cases.state_mutations.contract.Contract.__algopy_entrypoint_with_init using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in test_cases.state_mutations.contract.Contract.__algopy_entrypoint_with_init
debug: Performing post-SSA optimizations at level 0
debug: Performing SSA IR destructuring for _puya_lib.arc4.dynamic_array_concat_dynamic_element
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in _puya_lib.arc4.dynamic_array_concat_dynamic_element using strategy RootOperandGrouping
debug: Coalescing new_head#0 with [new_head#7, new_head#1, new_head#2, new_head#10, new_head#3, new_head#4]
debug: Coalescing item_offset_adjustment#0 with [item_offset_adjustment#2]
debug: Coalescing head_offset#0 with [head_offset#8, head_offset#1, head_offset#2, head_offset#3, head_offset#11, head_offset#4, head_offset#5]
debug: Coalescing item_offset#0 with [item_offset#1]
debug: Coalescing resulted in 40 replacement/s
debug: Sequentializing parallel copies in _puya_lib.arc4.dynamic_array_concat_dynamic_element
debug: loc: {head_offset#0=head_offset#0, new_head#0=new_head#0}
debug: pred: {head_offset#0=head_offset#0, new_head#0=new_head#0}
debug: ready: 
debug: to_do: head_offset#0, new_head#0
debug: * to_do new_head#0
debug: * to_do head_offset#0
debug: loc: {head_offset#0=head_offset#0, new_head#0=new_head#0}
debug: pred: {head_offset#0=head_offset#0, new_head#0=new_head#0}
debug: ready: 
debug: to_do: head_offset#0, new_head#0
debug: * to_do new_head#0
debug: * to_do head_offset#0
debug: loc: {head_offset#0=head_offset#0, new_head#0=new_head#0}
debug: pred: {head_offset#0=head_offset#0, new_head#0=new_head#0}
debug: ready: 
debug: to_do: head_offset#0, new_head#0
debug: * to_do new_head#0
debug: * to_do head_offset#0
debug: loc: {head_offset#0=head_offset#0, new_head#0=new_head#0}
debug: pred: {head_offset#0=head_offset#0, new_head#0=new_head#0}
debug: ready: 
debug: to_do: head_offset#0, new_head#0
debug: * to_do new_head#0
debug: * to_do head_offset#0
debug: loc: {head_offset#0=head_offset#0, new_head#0=new_head#0}
debug: pred: {head_offset#0=head_offset#0, new_head#0=new_head#0}
debug: ready: 
debug: to_do: head_offset#0, new_head#0
debug: * to_do new_head#0
debug: * to_do head_offset#0
debug: loc: {head_offset#0=head_offset#0, new_head#0=new_head#0}
debug: pred: {head_offset#0=head_offset#0, new_head#0=new_head#0}
debug: ready: 
debug: to_do: head_offset#0, new_head#0
debug: * to_do new_head#0
debug: * to_do head_offset#0
debug: Performing post-SSA optimizations at level 0
debug: Performing SSA IR destructuring for _puya_lib.arc4.dynamic_array_replace_dynamic_element
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in _puya_lib.arc4.dynamic_array_replace_dynamic_element using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in _puya_lib.arc4.dynamic_array_replace_dynamic_element
debug: Performing post-SSA optimizations at level 0
debug: Performing SSA IR destructuring for _puya_lib.arc4.static_array_replace_dynamic_element
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in _puya_lib.arc4.static_array_replace_dynamic_element using strategy RootOperandGrouping
debug: Coalescing new_head_and_tail#0 with [new_head_and_tail#5, new_head_and_tail#1, new_head_and_tail#2]
debug: Coalescing head_offset#0 with [head_offset#5, head_offset#1, head_offset#2]
debug: Coalescing tail_offset#0 with [tail_offset#1, tail_offset#2]
debug: Coalescing resulted in 23 replacement/s
debug: Sequentializing parallel copies in _puya_lib.arc4.static_array_replace_dynamic_element
debug: loc: {head_offset#0=head_offset#0, new_head_and_tail#0=new_head_and_tail#0}
debug: pred: {head_offset#0=head_offset#0, new_head_and_tail#0=new_head_and_tail#0}
debug: ready: 
debug: to_do: head_offset#0, new_head_and_tail#0
debug: * to_do new_head_and_tail#0
debug: * to_do head_offset#0
debug: loc: {head_offset#0=head_offset#0, new_head_and_tail#0=new_head_and_tail#0}
debug: pred: {head_offset#0=head_offset#0, new_head_and_tail#0=new_head_and_tail#0}
debug: ready: 
debug: to_do: head_offset#0, new_head_and_tail#0
debug: * to_do new_head_and_tail#0
debug: * to_do head_offset#0
debug: loc: {head_offset#0=head_offset#0, new_head_and_tail#0=new_head_and_tail#0}
debug: pred: {head_offset#0=head_offset#0, new_head_and_tail#0=new_head_and_tail#0}
debug: ready: 
debug: to_do: head_offset#0, new_head_and_tail#0
debug: * to_do new_head_and_tail#0
debug: * to_do head_offset#0
debug: Performing post-SSA optimizations at level 0
debug: Performing SSA IR destructuring for test_cases.state_mutations.contract.get_struct
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in test_cases.state_mutations.contract.get_struct using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in test_cases.state_mutations.contract.get_struct
debug: Performing post-SSA optimizations at level 0
debug: Performing SSA IR destructuring for test_cases.state_mutations.contract.Contract.__init__
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in test_cases.state_mutations.contract.Contract.__init__ using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in test_cases.state_mutations.contract.Contract.__init__
debug: Performing post-SSA optimizations at level 0
debug: Performing SSA IR destructuring for test_cases.state_mutations.contract.Contract.opt_in
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in test_cases.state_mutations.contract.Contract.opt_in using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in test_cases.state_mutations.contract.Contract.opt_in
debug: Performing post-SSA optimizations at level 0
debug: Performing SSA IR destructuring for test_cases.state_mutations.contract.Contract.append
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in test_cases.state_mutations.contract.Contract.append using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in test_cases.state_mutations.contract.Contract.append
debug: Performing post-SSA optimizations at level 0
debug: Performing SSA IR destructuring for test_cases.state_mutations.contract.Contract.modify
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in test_cases.state_mutations.contract.Contract.modify using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in test_cases.state_mutations.contract.Contract.modify
debug: Performing post-SSA optimizations at level 0
debug: Performing SSA IR destructuring for test_cases.state_mutations.contract.Contract.get
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in test_cases.state_mutations.contract.Contract.get using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in test_cases.state_mutations.contract.Contract.get
debug: Performing post-SSA optimizations at level 0
debug: Performing SSA IR destructuring for algopy.arc4.ARC4Contract.approval_program
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in algopy.arc4.ARC4Contract.approval_program using strategy RootOperandGrouping
debug: Coalescing test_cases.state_mutations.contract.Contract.__puya_arc4_router__%0#0 with [test_cases.state_mutations.contract.Contract.__puya_arc4_router__%0#1, test_cases.state_mutations.contract.Contract.__puya_arc4_router__%0#2, test_cases.state_mutations.contract.Contract.__puya_arc4_router__%0#3, test_cases.state_mutations.contract.Contract.__puya_arc4_router__%0#4, test_cases.state_mutations.contract.Contract.__puya_arc4_router__%0#5]
debug: Coalescing tmp%0#0 with [tmp%0#2]
debug: Coalescing resulted in 17 replacement/s
debug: Sequentializing parallel copies in algopy.arc4.ARC4Contract.approval_program
debug: Performing post-SSA optimizations at level 0
debug: Output IR to state_mutations/out_unoptimized/Contract.ir/Contract.approval.0.destructured.ir
debug: Performing SSA IR destructuring for algopy.arc4.ARC4Contract.clear_state_program
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in algopy.arc4.ARC4Contract.clear_state_program using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in algopy.arc4.ARC4Contract.clear_state_program
debug: Performing post-SSA optimizations at level 0
debug: Output IR to state_mutations/out_unoptimized/Contract.ir/Contract.clear.0.destructured.ir
debug: Inserted main.ops[1]: 'l-store-copy tmp%0#0 0'
debug: Replaced main.ops[3]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted main_after_if_else@2.ops[1]: 'l-store-copy tmp%1#0 0'
debug: Replaced main_after_if_else@2.ops[3]: 'v-load tmp%1#0' with 'l-load tmp%1#0'
debug: Inserted dynamic_array_concat_dynamic_element_for_header@1.ops[3]: 'l-store-copy continue_looping%0#0 0'
debug: Replaced dynamic_array_concat_dynamic_element_for_header@1.ops[5]: 'v-load continue_looping%0#0' with 'l-load continue_looping%0#0'
debug: Inserted dynamic_array_concat_dynamic_element_for_body@2.ops[7]: 'l-store-copy tmp%1#0 0'
debug: Replaced dynamic_array_concat_dynamic_element_for_body@2.ops[9]: 'v-load tmp%1#0' with 'l-load tmp%1#0'
debug: Inserted dynamic_array_concat_dynamic_element_for_body@2.ops[11]: 'l-store-copy tmp%2#0 0'
debug: Replaced dynamic_array_concat_dynamic_element_for_body@2.ops[13]: 'v-load tmp%2#0' with 'l-load tmp%2#0'
debug: Inserted dynamic_array_concat_dynamic_element_for_body@2.ops[3]: 'l-store-copy item_offset#0 0'
debug: Replaced dynamic_array_concat_dynamic_element_for_body@2.ops[6]: 'v-load item_offset#0' with 'l-load item_offset#0'
debug: Inserted dynamic_array_concat_dynamic_element_for_body@2.ops[16]: 'l-store-copy tmp%3#0 0'
debug: Replaced dynamic_array_concat_dynamic_element_for_body@2.ops[19]: 'v-load tmp%3#0' with 'l-load tmp%3#0'
debug: Inserted dynamic_array_concat_dynamic_element_for_header@5.ops[3]: 'l-store-copy continue_looping%1#0 0'
debug: Replaced dynamic_array_concat_dynamic_element_for_header@5.ops[5]: 'v-load continue_looping%1#0' with 'l-load continue_looping%1#0'
debug: Inserted dynamic_array_concat_dynamic_element_for_body@6.ops[7]: 'l-store-copy tmp%5#0 0'
debug: Replaced dynamic_array_concat_dynamic_element_for_body@6.ops[9]: 'v-load tmp%5#0' with 'l-load tmp%5#0'
debug: Inserted dynamic_array_concat_dynamic_element_for_body@6.ops[11]: 'l-store-copy tmp%6#0 0'
debug: Replaced dynamic_array_concat_dynamic_element_for_body@6.ops[13]: 'v-load tmp%6#0' with 'l-load tmp%6#0'
debug: Inserted dynamic_array_concat_dynamic_element_for_body@6.ops[3]: 'l-store-copy item_offset#0 0'
debug: Replaced dynamic_array_concat_dynamic_element_for_body@6.ops[6]: 'v-load item_offset#0' with 'l-load item_offset#0'
debug: Inserted dynamic_array_concat_dynamic_element_for_body@6.ops[16]: 'l-store-copy tmp%7#0 0'
debug: Replaced dynamic_array_concat_dynamic_element_for_body@6.ops[19]: 'v-load tmp%7#0' with 'l-load tmp%7#0'
debug: Inserted dynamic_array_concat_dynamic_element_after_for@8.ops[3]: 'l-store-copy tmp%8#0 0'
debug: Replaced dynamic_array_concat_dynamic_element_after_for@8.ops[5]: 'v-load tmp%8#0' with 'l-load tmp%8#0'
debug: Inserted dynamic_array_concat_dynamic_element_after_for@8.ops[7]: 'l-store-copy tmp%9#0 0'
debug: Replaced dynamic_array_concat_dynamic_element_after_for@8.ops[9]: 'v-load tmp%9#0' with 'l-load tmp%9#0'
debug: Inserted dynamic_array_concat_dynamic_element_after_for@8.ops[11]: 'l-store-copy tmp%10#0 0'
debug: Replaced dynamic_array_concat_dynamic_element_after_for@8.ops[13]: 'v-load tmp%10#0' with 'l-load tmp%10#0'
debug: Inserted dynamic_array_concat_dynamic_element_after_for@8.ops[48]: 'l-store-copy tmp%19#0 0'
debug: Replaced dynamic_array_concat_dynamic_element_after_for@8.ops[50]: 'v-load tmp%19#0' with 'l-load tmp%19#0'
debug: Inserted dynamic_array_concat_dynamic_element_after_for@8.ops[28]: 'l-store-copy tmp%14#0 0'
debug: Replaced dynamic_array_concat_dynamic_element_after_for@8.ops[31]: 'v-load tmp%14#0' with 'l-load tmp%14#0'
debug: Inserted dynamic_array_concat_dynamic_element_after_for@8.ops[45]: 'l-store-copy tmp%18#0 0'
debug: Replaced dynamic_array_concat_dynamic_element_after_for@8.ops[48]: 'v-load tmp%18#0' with 'l-load tmp%18#0'
debug: Inserted dynamic_array_concat_dynamic_element_after_for@8.ops[23]: 'l-store-copy tmp%13#0 0'
debug: Replaced dynamic_array_concat_dynamic_element_after_for@8.ops[27]: 'v-load tmp%13#0' with 'l-load tmp%13#0'
debug: Inserted dynamic_array_concat_dynamic_element_after_for@8.ops[41]: 'l-store-copy tmp%17#0 0'
debug: Replaced dynamic_array_concat_dynamic_element_after_for@8.ops[45]: 'v-load tmp%17#0' with 'l-load tmp%17#0'
debug: Inserted dynamic_array_concat_dynamic_element_after_for@8.ops[20]: 'l-store-copy tmp%12#0 0'
debug: Replaced dynamic_array_concat_dynamic_element_after_for@8.ops[27]: 'v-load tmp%12#0' with 'l-load tmp%12#0'
debug: Inserted dynamic_array_concat_dynamic_element_after_for@8.ops[39]: 'l-store-copy tmp%16#0 0'
debug: Replaced dynamic_array_concat_dynamic_element_after_for@8.ops[46]: 'v-load tmp%16#0' with 'l-load tmp%16#0'
debug: Inserted dynamic_array_concat_dynamic_element_after_for@8.ops[16]: 'l-store-copy tmp%11#0 0'
debug: Replaced dynamic_array_concat_dynamic_element_after_for@8.ops[33]: 'v-load tmp%11#0' with 'l-load tmp%11#0'
debug: Inserted dynamic_array_concat_dynamic_element_after_for@8.ops[36]: 'l-store-copy tmp%15#0 0'
debug: Replaced dynamic_array_concat_dynamic_element_after_for@8.ops[53]: 'v-load tmp%15#0' with 'l-load tmp%15#0'
debug: Inserted dynamic_array_replace_dynamic_element.ops[2]: 'l-store-copy size_b#0 0'
debug: Replaced dynamic_array_replace_dynamic_element.ops[4]: 'v-load size_b#0' with 'l-load size_b#0'
debug: Inserted dynamic_array_replace_dynamic_element.ops[9]: 'l-store-copy tmp%0#0 0'
debug: Replaced dynamic_array_replace_dynamic_element.ops[11]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted dynamic_array_replace_dynamic_element.ops[20]: 'l-store-copy tmp%2#0 0'
debug: Replaced dynamic_array_replace_dynamic_element.ops[22]: 'v-load tmp%2#0' with 'l-load tmp%2#0'
debug: Inserted dynamic_array_replace_dynamic_element.ops[16]: 'l-store-copy tmp%1#0 0'
debug: Replaced dynamic_array_replace_dynamic_element.ops[19]: 'v-load tmp%1#0' with 'l-load tmp%1#0'
debug: Inserted dynamic_array_replace_dynamic_element.ops[6]: 'l-store-copy array_length#0 0'
debug: Replaced dynamic_array_replace_dynamic_element.ops[15]: 'v-load array_length#0' with 'l-load array_length#0'
debug: Inserted dynamic_array_replace_dynamic_element.ops[5]: 'l-store-copy size_b#0 0'
debug: Replaced dynamic_array_replace_dynamic_element.ops[20]: 'v-load size_b#0' with 'l-load size_b#0'
debug: Inserted static_array_replace_dynamic_element.ops[11]: 'l-store-copy tmp%1#0 0'
debug: Replaced static_array_replace_dynamic_element.ops[13]: 'v-load tmp%1#0' with 'l-load tmp%1#0'
debug: Inserted static_array_replace_dynamic_element.ops[27]: 'l-store-copy tmp%3#0 0'
debug: Replaced static_array_replace_dynamic_element.ops[29]: 'v-load tmp%3#0' with 'l-load tmp%3#0'
debug: Inserted static_array_replace_dynamic_element.ops[37]: 'l-store-copy end_offset#0 0'
debug: Replaced static_array_replace_dynamic_element.ops[39]: 'v-load end_offset#0' with 'l-load end_offset#0'
debug: Inserted static_array_replace_dynamic_element.ops[50]: 'l-store-copy tmp%4#0 0'
debug: Replaced static_array_replace_dynamic_element.ops[52]: 'v-load tmp%4#0' with 'l-load tmp%4#0'
debug: Inserted static_array_replace_dynamic_element.ops[72]: 'l-store-copy tmp%8#0 0'
debug: Replaced static_array_replace_dynamic_element.ops[74]: 'v-load tmp%8#0' with 'l-load tmp%8#0'
debug: Inserted static_array_replace_dynamic_element.ops[3]: 'l-store-copy tmp%0#0 0'
debug: Replaced static_array_replace_dynamic_element.ops[6]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted static_array_replace_dynamic_element.ops[17]: 'l-store-copy tmp%2#0 0'
debug: Replaced static_array_replace_dynamic_element.ops[20]: 'v-load tmp%2#0' with 'l-load tmp%2#0'
debug: Inserted static_array_replace_dynamic_element.ops[62]: 'l-store-copy tmp%6#0 0'
debug: Replaced static_array_replace_dynamic_element.ops[65]: 'v-load tmp%6#0' with 'l-load tmp%6#0'
debug: Inserted static_array_replace_dynamic_element.ops[34]: 'l-store-copy is_before_end#0 0'
debug: Replaced static_array_replace_dynamic_element.ops[38]: 'v-load is_before_end#0' with 'l-load is_before_end#0'
debug: Inserted static_array_replace_dynamic_element.ops[81]: 'l-store-copy tmp%9#0 0'
debug: Replaced static_array_replace_dynamic_element.ops[85]: 'v-load tmp%9#0' with 'l-load tmp%9#0'
debug: Inserted static_array_replace_dynamic_element.ops[58]: 'l-store-copy tmp%5#0 0'
debug: Replaced static_array_replace_dynamic_element.ops[66]: 'v-load tmp%5#0' with 'l-load tmp%5#0'
debug: Inserted static_array_replace_dynamic_element.ops[44]: 'l-store-copy original_offset#0 1'
debug: Replaced static_array_replace_dynamic_element.ops[52]: 'v-load original_offset#0' with 'l-load original_offset#0'
debug: Inserted static_array_replace_dynamic_element.ops[25]: 'l-store-copy end_of_tail#0 0'
debug: Replaced static_array_replace_dynamic_element.ops[37]: 'v-load end_of_tail#0' with 'l-load end_of_tail#0'
debug: Inserted static_array_replace_dynamic_element.ops[22]: 'l-store-copy next_item_offset#0 0'
debug: Replaced static_array_replace_dynamic_element.ops[39]: 'v-load next_item_offset#0' with 'l-load next_item_offset#0'
debug: Inserted static_array_replace_dynamic_element.ops[45]: 'l-store-copy end_offset#0 0'
debug: Replaced static_array_replace_dynamic_element.ops[65]: 'v-load end_offset#0' with 'l-load end_offset#0'
debug: Inserted static_array_replace_dynamic_element.ops[39]: 'l-store-copy end_of_tail#0 2'
debug: Replaced static_array_replace_dynamic_element.ops[67]: 'v-load end_of_tail#0' with 'l-load end_of_tail#0'
debug: Inserted static_array_replace_dynamic_element.ops[8]: 'l-store-copy original_offset#0 0'
debug: Replaced static_array_replace_dynamic_element.ops[48]: 'v-load original_offset#0' with 'l-load original_offset#0'
debug: Inserted static_array_replace_dynamic_element_for_header@1.ops[3]: 'l-store-copy continue_looping%0#0 0'
debug: Replaced static_array_replace_dynamic_element_for_header@1.ops[5]: 'v-load continue_looping%0#0' with 'l-load continue_looping%0#0'
debug: Inserted static_array_replace_dynamic_element_for_body@2.ops[3]: 'l-store-copy tail_offset#0 0'
debug: Replaced static_array_replace_dynamic_element_for_body@2.ops[5]: 'v-load tail_offset#0' with 'l-load tail_offset#0'
debug: Inserted static_array_replace_dynamic_element_for_body@2.ops[8]: 'l-store-copy tail_offset#0 0'
debug: Replaced static_array_replace_dynamic_element_for_body@2.ops[10]: 'v-load tail_offset#0' with 'l-load tail_offset#0'
debug: Inserted static_array_replace_dynamic_element_for_body@2.ops[13]: 'l-store-copy tail_offset#0 0'
debug: Replaced static_array_replace_dynamic_element_for_body@2.ops[15]: 'v-load tail_offset#0' with 'l-load tail_offset#0'
debug: Inserted static_array_replace_dynamic_element_for_body@2.ops[17]: 'l-store-copy tmp%10#0 0'
debug: Replaced static_array_replace_dynamic_element_for_body@2.ops[19]: 'v-load tmp%10#0' with 'l-load tmp%10#0'
debug: Inserted static_array_replace_dynamic_element_for_body@2.ops[21]: 'l-store-copy tail_offset_bytes#0 0'
debug: Replaced static_array_replace_dynamic_element_for_body@2.ops[25]: 'v-load tail_offset_bytes#0' with 'l-load tail_offset_bytes#0'
debug: Inserted static_array_replace_dynamic_element_for_body@2.ops[1]: 'l-store-copy new_head_and_tail#0 0'
debug: Replaced static_array_replace_dynamic_element_for_body@2.ops[24]: 'v-load new_head_and_tail#0' with 'l-load new_head_and_tail#0'
debug: Inserted static_array_replace_dynamic_element_for_body@2.ops[3]: 'l-store-copy head_offset#0 2'
debug: Replaced static_array_replace_dynamic_element_for_body@2.ops[26]: 'v-load head_offset#0' with 'l-load head_offset#0'
debug: Inserted get_struct.ops[6]: 'l-store-copy as_bytes%0#0 0'
debug: Replaced get_struct.ops[8]: 'v-load as_bytes%0#0' with 'l-load as_bytes%0#0'
debug: Inserted get_struct.ops[14]: 'l-store-copy encoded_tuple_buffer%2#0 0'
debug: Replaced get_struct.ops[16]: 'v-load encoded_tuple_buffer%2#0' with 'l-load encoded_tuple_buffer%2#0'
debug: Inserted get_struct.ops[19]: 'l-store-copy encoded_tuple_buffer%3#0 0'
debug: Replaced get_struct.ops[21]: 'v-load encoded_tuple_buffer%3#0' with 'l-load encoded_tuple_buffer%3#0'
debug: Inserted get_struct.ops[10]: 'l-store-copy offset_as_uint16%0#0 0'
debug: Replaced get_struct.ops[13]: 'v-load offset_as_uint16%0#0' with 'l-load offset_as_uint16%0#0'
debug: Inserted get_struct.ops[3]: 'l-store-copy encoded_tuple_buffer%1#0 0'
debug: Replaced get_struct.ops[13]: 'v-load encoded_tuple_buffer%1#0' with 'l-load encoded_tuple_buffer%1#0'
debug: Inserted opt_in.ops[22]: 'l-store-copy tmp%0#0 0'
debug: Replaced opt_in.ops[24]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted opt_in.ops[37]: 'l-store-copy tmp%2#0 0'
debug: Replaced opt_in.ops[39]: 'v-load tmp%2#0' with 'l-load tmp%2#0'
debug: Inserted opt_in.ops[3]: 'l-store-copy array_data%0#0 0'
debug: Replaced opt_in.ops[6]: 'v-load array_data%0#0' with 'l-load array_data%0#0'
debug: Inserted opt_in.ops[34]: 'l-store-copy tmp%1#0 0'
debug: Replaced opt_in.ops[37]: 'v-load tmp%1#0' with 'l-load tmp%1#0'
debug: Inserted opt_in.ops[42]: 'l-store-copy tmp%2#0 0'
debug: Replaced opt_in.ops[45]: 'v-load tmp%2#0' with 'l-load tmp%2#0'
debug: Inserted opt_in.ops[11]: 'l-store-copy array_data%1#0 0'
debug: Replaced opt_in.ops[17]: 'v-load array_data%1#0' with 'l-load array_data%1#0'
debug: Inserted opt_in.ops[22]: 'l-store-copy array_data%2#0 0'
debug: Replaced opt_in.ops[29]: 'v-load array_data%2#0' with 'l-load array_data%2#0'
debug: Inserted opt_in.ops[34]: 'l-store-copy array_data%3#0 0'
debug: Replaced opt_in.ops[49]: 'v-load array_data%3#0' with 'l-load array_data%3#0'
debug: Inserted append.ops[13]: 'l-store-copy as_bytes%0#0 0'
debug: Replaced append.ops[15]: 'v-load as_bytes%0#0' with 'l-load as_bytes%0#0'
debug: Inserted append.ops[21]: 'l-store-copy result%0#0 0'
debug: Replaced append.ops[23]: 'v-load result%0#0' with 'l-load result%0#0'
debug: Inserted append.ops[46]: 'l-store-copy tmp%0#0 0'
debug: Replaced append.ops[48]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted append.ops[60]: 'l-store-copy as_bytes%1#0 0'
debug: Replaced append.ops[62]: 'v-load as_bytes%1#0' with 'l-load as_bytes%1#0'
debug: Inserted append.ops[68]: 'l-store-copy result%2#0 0'
debug: Replaced append.ops[70]: 'v-load result%2#0' with 'l-load result%2#0'
debug: Inserted append.ops[103]: 'l-store-copy as_bytes%2#0 0'
debug: Replaced append.ops[105]: 'v-load as_bytes%2#0' with 'l-load as_bytes%2#0'
debug: Inserted append.ops[111]: 'l-store-copy result%4#0 0'
debug: Replaced append.ops[113]: 'v-load result%4#0' with 'l-load result%4#0'
debug: Inserted append.ops[143]: 'l-store-copy tmp%2#0 0'
debug: Replaced append.ops[145]: 'v-load tmp%2#0' with 'l-load tmp%2#0'
debug: Inserted append.ops[155]: 'l-store-copy as_bytes%3#0 0'
debug: Replaced append.ops[157]: 'v-load as_bytes%3#0' with 'l-load as_bytes%3#0'
debug: Inserted append.ops[163]: 'l-store-copy result%6#0 0'
debug: Replaced append.ops[165]: 'v-load result%6#0' with 'l-load result%6#0'
debug: Inserted append.ops[5]: 'l-store-copy maybe_exists%0#0 1'
debug: Replaced append.ops[8]: 'v-load maybe_exists%0#0' with 'l-load maybe_exists%0#0'
debug: Inserted append.ops[18]: 'l-store-copy next_item_head%0#0 0'
debug: Replaced append.ops[21]: 'v-load next_item_head%0#0' with 'l-load next_item_head%0#0'
debug: Inserted append.ops[43]: 'l-store-copy concat_result%0#0 0'
debug: Replaced append.ops[46]: 'v-load concat_result%0#0' with 'l-load concat_result%0#0'
debug: Inserted append.ops[55]: 'l-store-copy maybe_exists%1#0 1'
debug: Replaced append.ops[58]: 'v-load maybe_exists%1#0' with 'l-load maybe_exists%1#0'
debug: Inserted append.ops[68]: 'l-store-copy next_item_head%1#0 0'
debug: Replaced append.ops[71]: 'v-load next_item_head%1#0' with 'l-load next_item_head%1#0'
debug: Inserted append.ops[100]: 'l-store-copy maybe_exists%2#0 1'
debug: Replaced append.ops[103]: 'v-load maybe_exists%2#0' with 'l-load maybe_exists%2#0'
debug: Inserted append.ops[113]: 'l-store-copy next_item_head%2#0 0'
debug: Replaced append.ops[116]: 'v-load next_item_head%2#0' with 'l-load next_item_head%2#0'
debug: Inserted append.ops[146]: 'l-store-copy tmp%1#0 0'
debug: Replaced append.ops[149]: 'v-load tmp%1#0' with 'l-load tmp%1#0'
debug: Inserted append.ops[155]: 'l-store-copy maybe_exists%3#0 1'
debug: Replaced append.ops[158]: 'v-load maybe_exists%3#0' with 'l-load maybe_exists%3#0'
debug: Inserted append.ops[168]: 'l-store-copy next_item_head%3#0 0'
debug: Replaced append.ops[171]: 'v-load next_item_head%3#0' with 'l-load next_item_head%3#0'
debug: Inserted append.ops[93]: 'l-store-copy concat_result%1#0 0'
debug: Replaced append.ops[97]: 'v-load concat_result%1#0' with 'l-load concat_result%1#0'
debug: Inserted append.ops[196]: 'l-store-copy tmp%2#0 0'
debug: Replaced append.ops[199]: 'v-load tmp%2#0' with 'l-load tmp%2#0'
debug: Inserted append.ops[30]: 'l-store-copy maybe_value%0#0 0'
debug: Replaced append.ops[34]: 'v-load maybe_value%0#0' with 'l-load maybe_value%0#0'
debug: Inserted append.ops[36]: 'l-store-copy l_head_and_tail%0#0 0'
debug: Replaced append.ops[41]: 'v-load l_head_and_tail%0#0' with 'l-load l_head_and_tail%0#0'
debug: Inserted append.ops[39]: 'l-store-copy r_head_and_tail%0#0 1'
debug: Replaced append.ops[44]: 'v-load r_head_and_tail%0#0' with 'l-load r_head_and_tail%0#0'
debug: Inserted append.ops[83]: 'l-store-copy maybe_value%1#0 0'
debug: Replaced append.ops[87]: 'v-load maybe_value%1#0' with 'l-load maybe_value%1#0'
debug: Inserted append.ops[89]: 'l-store-copy l_head_and_tail%1#0 0'
debug: Replaced append.ops[94]: 'v-load l_head_and_tail%1#0' with 'l-load l_head_and_tail%1#0'
debug: Inserted append.ops[92]: 'l-store-copy r_head_and_tail%1#0 1'
debug: Replaced append.ops[97]: 'v-load r_head_and_tail%1#0' with 'l-load r_head_and_tail%1#0'
debug: Inserted append.ops[132]: 'l-store-copy maybe_value%2#0 0'
debug: Replaced append.ops[136]: 'v-load maybe_value%2#0' with 'l-load maybe_value%2#0'
debug: Inserted append.ops[138]: 'l-store-copy l_head_and_tail%2#0 0'
debug: Replaced append.ops[143]: 'v-load l_head_and_tail%2#0' with 'l-load l_head_and_tail%2#0'
debug: Inserted append.ops[141]: 'l-store-copy r_head_and_tail%2#0 1'
debug: Replaced append.ops[146]: 'v-load r_head_and_tail%2#0' with 'l-load r_head_and_tail%2#0'
debug: Inserted append.ops[190]: 'l-store-copy maybe_value%3#0 0'
debug: Replaced append.ops[194]: 'v-load maybe_value%3#0' with 'l-load maybe_value%3#0'
debug: Inserted append.ops[196]: 'l-store-copy l_head_and_tail%3#0 0'
debug: Replaced append.ops[201]: 'v-load l_head_and_tail%3#0' with 'l-load l_head_and_tail%3#0'
debug: Inserted append.ops[199]: 'l-store-copy r_head_and_tail%3#0 1'
debug: Replaced append.ops[204]: 'v-load r_head_and_tail%3#0' with 'l-load r_head_and_tail%3#0'
debug: Inserted append.ops[148]: 'l-store-copy concat_result%2#0 0'
debug: Replaced append.ops[154]: 'v-load concat_result%2#0' with 'l-load concat_result%2#0'
debug: Inserted append.ops[207]: 'l-store-copy concat_result%3#0 0'
debug: Replaced append.ops[214]: 'v-load concat_result%3#0' with 'l-load concat_result%3#0'
debug: Inserted append.ops[33]: 'l-store-copy l_count%0#0 1'
debug: Replaced append.ops[42]: 'v-load l_count%0#0' with 'l-load l_count%0#0'
debug: Inserted append.ops[87]: 'l-store-copy l_count%1#0 1'
debug: Replaced append.ops[96]: 'v-load l_count%1#0' with 'l-load l_count%1#0'
debug: Inserted append.ops[137]: 'l-store-copy l_count%2#0 1'
debug: Replaced append.ops[146]: 'v-load l_count%2#0' with 'l-load l_count%2#0'
debug: Inserted append.ops[197]: 'l-store-copy l_count%3#0 1'
debug: Replaced append.ops[206]: 'v-load l_count%3#0' with 'l-load l_count%3#0'
debug: Inserted append.ops[1]: 'l-store-copy struct#0 0'
debug: Replaced append.ops[11]: 'v-load struct#0' with 'l-load struct#0'
debug: Inserted append.ops[29]: 'l-store-copy result%1#0 0'
debug: Replaced append.ops[41]: 'v-load result%1#0' with 'l-load result%1#0'
debug: Inserted append.ops[84]: 'l-store-copy result%3#0 0'
debug: Replaced append.ops[96]: 'v-load result%3#0' with 'l-load result%3#0'
debug: Inserted append.ops[135]: 'l-store-copy result%5#0 0'
debug: Replaced append.ops[147]: 'v-load result%5#0' with 'l-load result%5#0'
debug: Inserted append.ops[196]: 'l-store-copy result%7#0 0'
debug: Replaced append.ops[208]: 'v-load result%7#0' with 'l-load result%7#0'
debug: Inserted append.ops[12]: 'l-store-copy copy%0#0 0'
debug: Replaced append.ops[28]: 'v-load copy%0#0' with 'l-load copy%0#0'
debug: Inserted append.ops[68]: 'l-store-copy copy%1#0 0'
debug: Replaced append.ops[84]: 'v-load copy%1#0' with 'l-load copy%1#0'
debug: Inserted append.ops[120]: 'l-store-copy copy%2#0 0'
debug: Replaced append.ops[136]: 'v-load copy%2#0' with 'l-load copy%2#0'
debug: Inserted append.ops[182]: 'l-store-copy copy%3#0 0'
debug: Replaced append.ops[198]: 'v-load copy%3#0' with 'l-load copy%3#0'
debug: Inserted append.ops[8]: 'l-store-copy maybe_value%0#0 2'
debug: Replaced append.ops[33]: 'v-load maybe_value%0#0' with 'l-load maybe_value%0#0'
debug: Inserted append.ops[65]: 'l-store-copy maybe_value%1#0 1'
debug: Replaced append.ops[90]: 'v-load maybe_value%1#0' with 'l-load maybe_value%1#0'
debug: Inserted append.ops[118]: 'l-store-copy maybe_value%2#0 1'
debug: Replaced append.ops[143]: 'v-load maybe_value%2#0' with 'l-load maybe_value%2#0'
debug: Inserted append.ops[181]: 'l-store-copy maybe_value%3#0 1'
debug: Replaced append.ops[206]: 'v-load maybe_value%3#0' with 'l-load maybe_value%3#0'
debug: Inserted append.ops[178]: 'l-store-copy tmp%2#0 0'
debug: Replaced append.ops[227]: 'v-load tmp%2#0' with 'l-load tmp%2#0'
debug: Inserted append.ops[60]: 'l-store-copy tmp%0#0 0'
debug: Replaced append.ops[111]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted append.ops[71]: 'l-store-copy struct#0 2'
debug: Replaced append.ops[124]: 'v-load struct#0' with 'l-load struct#0'
debug: Inserted append.ops[13]: 'l-store-copy struct#0 1'
debug: Replaced append.ops[71]: 'v-load struct#0' with 'l-load struct#0'
debug: Inserted append.ops[126]: 'l-store-copy struct#0 1'
debug: Replaced append.ops[190]: 'v-load struct#0' with 'l-load struct#0'
debug: Inserted modify.ops[50]: 'l-store-copy tmp%0#0 0'
debug: Replaced modify.ops[52]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted modify.ops[60]: 'l-store-copy data_up_to_item%0#0 0'
debug: Replaced modify.ops[62]: 'v-load data_up_to_item%0#0' with 'l-load data_up_to_item%0#0'
debug: Inserted modify.ops[65]: 'l-store-copy updated_data%0#0 0'
debug: Replaced modify.ops[67]: 'v-load updated_data%0#0' with 'l-load updated_data%0#0'
debug: Inserted modify.ops[78]: 'l-store-copy tmp%1#0 0'
debug: Replaced modify.ops[80]: 'v-load tmp%1#0' with 'l-load tmp%1#0'
debug: Inserted modify.ops[131]: 'l-store-copy tmp%2#0 0'
debug: Replaced modify.ops[133]: 'v-load tmp%2#0' with 'l-load tmp%2#0'
debug: Inserted modify.ops[141]: 'l-store-copy data_up_to_item%1#0 0'
debug: Replaced modify.ops[143]: 'v-load data_up_to_item%1#0' with 'l-load data_up_to_item%1#0'
debug: Inserted modify.ops[146]: 'l-store-copy updated_data%1#0 0'
debug: Replaced modify.ops[148]: 'v-load updated_data%1#0' with 'l-load updated_data%1#0'
debug: Inserted modify.ops[208]: 'l-store-copy tmp%3#0 0'
debug: Replaced modify.ops[210]: 'v-load tmp%3#0' with 'l-load tmp%3#0'
debug: Inserted modify.ops[218]: 'l-store-copy data_up_to_item%2#0 0'
debug: Replaced modify.ops[220]: 'v-load data_up_to_item%2#0' with 'l-load data_up_to_item%2#0'
debug: Inserted modify.ops[223]: 'l-store-copy updated_data%2#0 0'
debug: Replaced modify.ops[225]: 'v-load updated_data%2#0' with 'l-load updated_data%2#0'
debug: Inserted modify.ops[243]: 'l-store-copy tmp%5#0 0'
debug: Replaced modify.ops[245]: 'v-load tmp%5#0' with 'l-load tmp%5#0'
debug: Inserted modify.ops[294]: 'l-store-copy tmp%6#0 0'
debug: Replaced modify.ops[296]: 'v-load tmp%6#0' with 'l-load tmp%6#0'
debug: Inserted modify.ops[304]: 'l-store-copy data_up_to_item%3#0 0'
debug: Replaced modify.ops[306]: 'v-load data_up_to_item%3#0' with 'l-load data_up_to_item%3#0'
debug: Inserted modify.ops[309]: 'l-store-copy updated_data%3#0 0'
debug: Replaced modify.ops[311]: 'v-load updated_data%3#0' with 'l-load updated_data%3#0'
debug: Inserted modify.ops[3]: 'l-store-copy maybe_exists%0#0 1'
debug: Replaced modify.ops[6]: 'v-load maybe_exists%0#0' with 'l-load maybe_exists%0#0'
debug: Inserted modify.ops[14]: 'l-store-copy item_offset_offset%0#0 0'
debug: Replaced modify.ops[17]: 'v-load item_offset_offset%0#0' with 'l-load item_offset_offset%0#0'
debug: Inserted modify.ops[27]: 'l-store-copy next_index%0#0 0'
debug: Replaced modify.ops[30]: 'v-load next_index%0#0' with 'l-load next_index%0#0'
debug: Inserted modify.ops[39]: 'l-store-copy next_item_offset_offset%0#0 0'
debug: Replaced modify.ops[42]: 'v-load next_item_offset_offset%0#0' with 'l-load next_item_offset_offset%0#0'
debug: Inserted modify.ops[44]: 'l-store-copy next_item_offset%0#0 0'
debug: Replaced modify.ops[47]: 'v-load next_item_offset%0#0' with 'l-load next_item_offset%0#0'
debug: Inserted modify.ops[73]: 'l-store-copy assigned_value%1#0 0'
debug: Replaced modify.ops[76]: 'v-load assigned_value%1#0' with 'l-load assigned_value%1#0'
debug: Inserted modify.ops[79]: 'l-store-copy updated_value%0#0 0'
debug: Replaced modify.ops[82]: 'v-load updated_value%0#0' with 'l-load updated_value%0#0'
debug: Inserted modify.ops[91]: 'l-store-copy maybe_exists%1#0 1'
debug: Replaced modify.ops[94]: 'v-load maybe_exists%1#0' with 'l-load maybe_exists%1#0'
debug: Inserted modify.ops[102]: 'l-store-copy item_offset_offset%1#0 0'
debug: Replaced modify.ops[105]: 'v-load item_offset_offset%1#0' with 'l-load item_offset_offset%1#0'
debug: Inserted modify.ops[115]: 'l-store-copy next_index%1#0 0'
debug: Replaced modify.ops[118]: 'v-load next_index%1#0' with 'l-load next_index%1#0'
debug: Inserted modify.ops[127]: 'l-store-copy next_item_offset_offset%1#0 0'
debug: Replaced modify.ops[130]: 'v-load next_item_offset_offset%1#0' with 'l-load next_item_offset_offset%1#0'
debug: Inserted modify.ops[132]: 'l-store-copy next_item_offset%1#0 0'
debug: Replaced modify.ops[135]: 'v-load next_item_offset%1#0' with 'l-load next_item_offset%1#0'
debug: Inserted modify.ops[161]: 'l-store-copy assigned_value%3#0 0'
debug: Replaced modify.ops[164]: 'v-load assigned_value%3#0' with 'l-load assigned_value%3#0'
debug: Inserted modify.ops[174]: 'l-store-copy maybe_exists%2#0 1'
debug: Replaced modify.ops[177]: 'v-load maybe_exists%2#0' with 'l-load maybe_exists%2#0'
debug: Inserted modify.ops[185]: 'l-store-copy item_offset_offset%2#0 0'
debug: Replaced modify.ops[188]: 'v-load item_offset_offset%2#0' with 'l-load item_offset_offset%2#0'
debug: Inserted modify.ops[198]: 'l-store-copy next_index%2#0 0'
debug: Replaced modify.ops[201]: 'v-load next_index%2#0' with 'l-load next_index%2#0'
debug: Inserted modify.ops[210]: 'l-store-copy next_item_offset_offset%2#0 0'
debug: Replaced modify.ops[213]: 'v-load next_item_offset_offset%2#0' with 'l-load next_item_offset_offset%2#0'
debug: Inserted modify.ops[215]: 'l-store-copy next_item_offset%2#0 0'
debug: Replaced modify.ops[218]: 'v-load next_item_offset%2#0' with 'l-load next_item_offset%2#0'
debug: Inserted modify.ops[244]: 'l-store-copy assigned_value%5#0 0'
debug: Replaced modify.ops[247]: 'v-load assigned_value%5#0' with 'l-load assigned_value%5#0'
debug: Inserted modify.ops[258]: 'l-store-copy tmp%4#0 0'
debug: Replaced modify.ops[261]: 'v-load tmp%4#0' with 'l-load tmp%4#0'
debug: Inserted modify.ops[267]: 'l-store-copy maybe_exists%3#0 1'
debug: Replaced modify.ops[270]: 'v-load maybe_exists%3#0' with 'l-load maybe_exists%3#0'
debug: Inserted modify.ops[278]: 'l-store-copy item_offset_offset%3#0 0'
debug: Replaced modify.ops[281]: 'v-load item_offset_offset%3#0' with 'l-load item_offset_offset%3#0'
debug: Inserted modify.ops[291]: 'l-store-copy next_index%3#0 0'
debug: Replaced modify.ops[294]: 'v-load next_index%3#0' with 'l-load next_index%3#0'
debug: Inserted modify.ops[303]: 'l-store-copy next_item_offset_offset%3#0 0'
debug: Replaced modify.ops[306]: 'v-load next_item_offset_offset%3#0' with 'l-load next_item_offset_offset%3#0'
debug: Inserted modify.ops[308]: 'l-store-copy next_item_offset%3#0 0'
debug: Replaced modify.ops[311]: 'v-load next_item_offset%3#0' with 'l-load next_item_offset%3#0'
debug: Inserted modify.ops[337]: 'l-store-copy assigned_value%7#0 0'
debug: Replaced modify.ops[340]: 'v-load assigned_value%7#0' with 'l-load assigned_value%7#0'
debug: Inserted modify.ops[5]: 'l-store-copy maybe_value%0#0 1'
debug: Replaced modify.ops[9]: 'v-load maybe_value%0#0' with 'l-load maybe_value%0#0'
debug: Inserted modify.ops[51]: 'l-store-copy end_offset%0#0 0'
debug: Replaced modify.ops[55]: 'v-load end_offset%0#0' with 'l-load end_offset%0#0'
debug: Inserted modify.ops[62]: 'l-store-copy item_offset%1#0 0'
debug: Replaced modify.ops[66]: 'v-load item_offset%1#0' with 'l-load item_offset%1#0'
debug: Inserted modify.ops[96]: 'l-store-copy maybe_value%1#0 1'
debug: Replaced modify.ops[100]: 'v-load maybe_value%1#0' with 'l-load maybe_value%1#0'
debug: Inserted modify.ops[142]: 'l-store-copy end_offset%1#0 0'
debug: Replaced modify.ops[146]: 'v-load end_offset%1#0' with 'l-load end_offset%1#0'
debug: Inserted modify.ops[153]: 'l-store-copy item_offset%3#0 0'
debug: Replaced modify.ops[157]: 'v-load item_offset%3#0' with 'l-load item_offset%3#0'
debug: Inserted modify.ops[173]: 'l-store-copy updated_value%1#0 0'
debug: Replaced modify.ops[177]: 'v-load updated_value%1#0' with 'l-load updated_value%1#0'
debug: Inserted modify.ops[183]: 'l-store-copy maybe_value%2#0 1'
debug: Replaced modify.ops[187]: 'v-load maybe_value%2#0' with 'l-load maybe_value%2#0'
debug: Inserted modify.ops[229]: 'l-store-copy end_offset%2#0 0'
debug: Replaced modify.ops[233]: 'v-load end_offset%2#0' with 'l-load end_offset%2#0'
debug: Inserted modify.ops[240]: 'l-store-copy item_offset%5#0 0'
debug: Replaced modify.ops[244]: 'v-load item_offset%5#0' with 'l-load item_offset%5#0'
debug: Inserted modify.ops[279]: 'l-store-copy maybe_value%3#0 1'
debug: Replaced modify.ops[283]: 'v-load maybe_value%3#0' with 'l-load maybe_value%3#0'
debug: Inserted modify.ops[325]: 'l-store-copy end_offset%3#0 0'
debug: Replaced modify.ops[329]: 'v-load end_offset%3#0' with 'l-load end_offset%3#0'
debug: Inserted modify.ops[336]: 'l-store-copy item_offset%7#0 0'
debug: Replaced modify.ops[340]: 'v-load item_offset%7#0' with 'l-load item_offset%7#0'
debug: Inserted modify.ops[358]: 'l-store-copy tmp%5#0 0'
debug: Replaced modify.ops[361]: 'v-load tmp%5#0' with 'l-load tmp%5#0'
debug: Inserted modify.ops[60]: 'l-store-copy tmp%0#0 0'
debug: Replaced modify.ops[65]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted modify.ops[152]: 'l-store-copy tmp%2#0 0'
debug: Replaced modify.ops[157]: 'v-load tmp%2#0' with 'l-load tmp%2#0'
debug: Inserted modify.ops[240]: 'l-store-copy tmp%3#0 0'
debug: Replaced modify.ops[245]: 'v-load tmp%3#0' with 'l-load tmp%3#0'
debug: Inserted modify.ops[337]: 'l-store-copy tmp%6#0 0'
debug: Replaced modify.ops[342]: 'v-load tmp%6#0' with 'l-load tmp%6#0'
debug: Inserted modify.ops[11]: 'l-store-copy array_head_and_tail%0#0 0'
debug: Replaced modify.ops[18]: 'v-load array_head_and_tail%0#0' with 'l-load array_head_and_tail%0#0'
debug: Inserted modify.ops[25]: 'l-store-copy array_length%0#0 0'
debug: Replaced modify.ops[32]: 'v-load array_length%0#0' with 'l-load array_length%0#0'
debug: Inserted modify.ops[105]: 'l-store-copy array_head_and_tail%1#0 0'
debug: Replaced modify.ops[112]: 'v-load array_head_and_tail%1#0' with 'l-load array_head_and_tail%1#0'
debug: Inserted modify.ops[119]: 'l-store-copy array_length%1#0 0'
debug: Replaced modify.ops[126]: 'v-load array_length%1#0' with 'l-load array_length%1#0'
debug: Inserted modify.ops[195]: 'l-store-copy array_head_and_tail%2#0 0'
debug: Replaced modify.ops[202]: 'v-load array_head_and_tail%2#0' with 'l-load array_head_and_tail%2#0'
debug: Inserted modify.ops[209]: 'l-store-copy array_length%2#0 0'
debug: Replaced modify.ops[216]: 'v-load array_length%2#0' with 'l-load array_length%2#0'
debug: Inserted modify.ops[269]: 'l-store-copy updated_value%2#0 0'
debug: Replaced modify.ops[275]: 'v-load updated_value%2#0' with 'l-load updated_value%2#0'
debug: Inserted modify.ops[295]: 'l-store-copy array_head_and_tail%3#0 0'
debug: Replaced modify.ops[302]: 'v-load array_head_and_tail%3#0' with 'l-load array_head_and_tail%3#0'
debug: Inserted modify.ops[309]: 'l-store-copy array_length%3#0 0'
debug: Replaced modify.ops[316]: 'v-load array_length%3#0' with 'l-load array_length%3#0'
debug: Inserted modify.ops[369]: 'l-store-copy updated_value%3#0 0'
debug: Replaced modify.ops[376]: 'v-load updated_value%3#0' with 'l-load updated_value%3#0'
debug: Inserted modify.ops[34]: 'l-store-copy next_index%0#0 1'
debug: Replaced modify.ops[40]: 'v-load next_index%0#0' with 'l-load next_index%0#0'
debug: Inserted modify.ops[129]: 'l-store-copy next_index%1#0 1'
debug: Replaced modify.ops[135]: 'v-load next_index%1#0' with 'l-load next_index%1#0'
debug: Inserted modify.ops[220]: 'l-store-copy next_index%2#0 1'
debug: Replaced modify.ops[226]: 'v-load next_index%2#0' with 'l-load next_index%2#0'
debug: Inserted modify.ops[321]: 'l-store-copy next_index%3#0 1'
debug: Replaced modify.ops[327]: 'v-load next_index%3#0' with 'l-load next_index%3#0'
debug: Inserted modify.ops[38]: 'l-store-copy array_head_and_tail%0#0 1'
debug: Replaced modify.ops[46]: 'v-load array_head_and_tail%0#0' with 'l-load array_head_and_tail%0#0'
debug: Inserted modify.ops[134]: 'l-store-copy array_head_and_tail%1#0 1'
debug: Replaced modify.ops[142]: 'v-load array_head_and_tail%1#0' with 'l-load array_head_and_tail%1#0'
debug: Inserted modify.ops[226]: 'l-store-copy array_head_and_tail%2#0 1'
debug: Replaced modify.ops[234]: 'v-load array_head_and_tail%2#0' with 'l-load array_head_and_tail%2#0'
debug: Inserted modify.ops[328]: 'l-store-copy array_head_and_tail%3#0 1'
debug: Replaced modify.ops[336]: 'v-load array_head_and_tail%3#0' with 'l-load array_head_and_tail%3#0'
debug: Inserted modify.ops[40]: 'l-store-copy end_of_array%0#0 2'
debug: Replaced modify.ops[52]: 'v-load end_of_array%0#0' with 'l-load end_of_array%0#0'
debug: Inserted modify.ops[48]: 'l-store-copy array_head_and_tail%0#0 2'
debug: Replaced modify.ops[59]: 'v-load array_head_and_tail%0#0' with 'l-load array_head_and_tail%0#0'
debug: Inserted modify.ops[138]: 'l-store-copy end_of_array%1#0 2'
debug: Replaced modify.ops[150]: 'v-load end_of_array%1#0' with 'l-load end_of_array%1#0'
debug: Inserted modify.ops[146]: 'l-store-copy array_head_and_tail%1#0 2'
debug: Replaced modify.ops[157]: 'v-load array_head_and_tail%1#0' with 'l-load array_head_and_tail%1#0'
debug: Inserted modify.ops[232]: 'l-store-copy end_of_array%2#0 2'
debug: Replaced modify.ops[244]: 'v-load end_of_array%2#0' with 'l-load end_of_array%2#0'
debug: Inserted modify.ops[240]: 'l-store-copy array_head_and_tail%2#0 2'
debug: Replaced modify.ops[251]: 'v-load array_head_and_tail%2#0' with 'l-load array_head_and_tail%2#0'
debug: Inserted modify.ops[336]: 'l-store-copy end_of_array%3#0 2'
debug: Replaced modify.ops[348]: 'v-load end_of_array%3#0' with 'l-load end_of_array%3#0'
debug: Inserted modify.ops[344]: 'l-store-copy array_head_and_tail%3#0 2'
debug: Replaced modify.ops[355]: 'v-load array_head_and_tail%3#0' with 'l-load array_head_and_tail%3#0'
debug: Inserted modify.ops[10]: 'l-store-copy maybe_value%0#0 0'
debug: Replaced modify.ops[23]: 'v-load maybe_value%0#0' with 'l-load maybe_value%0#0'
debug: Inserted modify.ops[109]: 'l-store-copy maybe_value%1#0 0'
debug: Replaced modify.ops[122]: 'v-load maybe_value%1#0' with 'l-load maybe_value%1#0'
debug: Inserted modify.ops[204]: 'l-store-copy maybe_value%2#0 0'
debug: Replaced modify.ops[217]: 'v-load maybe_value%2#0' with 'l-load maybe_value%2#0'
debug: Inserted modify.ops[309]: 'l-store-copy maybe_value%3#0 0'
debug: Replaced modify.ops[322]: 'v-load maybe_value%3#0' with 'l-load maybe_value%3#0'
debug: Inserted modify.ops[37]: 'l-store-copy has_next%0#0 1'
debug: Replaced modify.ops[57]: 'v-load has_next%0#0' with 'l-load has_next%0#0'
debug: Inserted modify.ops[137]: 'l-store-copy has_next%1#0 1'
debug: Replaced modify.ops[157]: 'v-load has_next%1#0' with 'l-load has_next%1#0'
debug: Inserted modify.ops[233]: 'l-store-copy has_next%2#0 1'
debug: Replaced modify.ops[253]: 'v-load has_next%2#0' with 'l-load has_next%2#0'
debug: Inserted modify.ops[339]: 'l-store-copy has_next%3#0 1'
debug: Replaced modify.ops[359]: 'v-load has_next%3#0' with 'l-load has_next%3#0'
debug: Inserted modify.ops[20]: 'l-store-copy array_head_and_tail%0#0 2'
debug: Replaced modify.ops[40]: 'v-load array_head_and_tail%0#0' with 'l-load array_head_and_tail%0#0'
debug: Inserted modify.ops[121]: 'l-store-copy array_head_and_tail%1#0 2'
debug: Replaced modify.ops[141]: 'v-load array_head_and_tail%1#0' with 'l-load array_head_and_tail%1#0'
debug: Inserted modify.ops[218]: 'l-store-copy array_head_and_tail%2#0 2'
debug: Replaced modify.ops[238]: 'v-load array_head_and_tail%2#0' with 'l-load array_head_and_tail%2#0'
debug: Inserted modify.ops[325]: 'l-store-copy array_head_and_tail%3#0 2'
debug: Replaced modify.ops[345]: 'v-load array_head_and_tail%3#0' with 'l-load array_head_and_tail%3#0'
debug: Inserted modify.ops[23]: 'l-store-copy item_offset%0#0 2'
debug: Replaced modify.ops[64]: 'v-load item_offset%0#0' with 'l-load item_offset%0#0'
debug: Inserted modify.ops[125]: 'l-store-copy item_offset%2#0 2'
debug: Replaced modify.ops[166]: 'v-load item_offset%2#0' with 'l-load item_offset%2#0'
debug: Inserted modify.ops[223]: 'l-store-copy item_offset%4#0 2'
debug: Replaced modify.ops[264]: 'v-load item_offset%4#0' with 'l-load item_offset%4#0'
debug: Inserted modify.ops[331]: 'l-store-copy item_offset%6#0 2'
debug: Replaced modify.ops[372]: 'v-load item_offset%6#0' with 'l-load item_offset%6#0'
debug: Inserted modify.ops[26]: 'l-store-copy maybe_value%0#0 2'
debug: Replaced modify.ops[90]: 'v-load maybe_value%0#0' with 'l-load maybe_value%0#0'
debug: Inserted modify.ops[129]: 'l-store-copy maybe_value%1#0 2'
debug: Replaced modify.ops[193]: 'v-load maybe_value%1#0' with 'l-load maybe_value%1#0'
debug: Inserted modify.ops[228]: 'l-store-copy maybe_value%2#0 2'
debug: Replaced modify.ops[292]: 'v-load maybe_value%2#0' with 'l-load maybe_value%2#0'
debug: Inserted modify.ops[337]: 'l-store-copy maybe_value%3#0 2'
debug: Replaced modify.ops[401]: 'v-load maybe_value%3#0' with 'l-load maybe_value%3#0'
debug: Inserted modify.ops[313]: 'l-store-copy tmp%5#0 0'
debug: Replaced modify.ops[408]: 'v-load tmp%5#0' with 'l-load tmp%5#0'
debug: Inserted modify.ops[103]: 'l-store-copy tmp%1#0 0'
debug: Replaced modify.ops[200]: 'v-load tmp%1#0' with 'l-load tmp%1#0'
debug: Inserted get.ops[8]: 'l-store-copy copy%0#0 0'
debug: Replaced get.ops[10]: 'v-load copy%0#0' with 'l-load copy%0#0'
debug: Inserted get.ops[13]: 'l-store-copy tmp%0#0 0'
debug: Replaced get.ops[15]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted get.ops[24]: 'l-store-copy copy%1#0 0'
debug: Replaced get.ops[26]: 'v-load copy%1#0' with 'l-load copy%1#0'
debug: Inserted get.ops[35]: 'l-store-copy copy%2#0 0'
debug: Replaced get.ops[37]: 'v-load copy%2#0' with 'l-load copy%2#0'
debug: Inserted get.ops[44]: 'l-store-copy tmp%2#0 0'
debug: Replaced get.ops[46]: 'v-load tmp%2#0' with 'l-load tmp%2#0'
debug: Inserted get.ops[53]: 'l-store-copy copy%3#0 0'
debug: Replaced get.ops[55]: 'v-load copy%3#0' with 'l-load copy%3#0'
debug: Inserted get.ops[60]: 'l-store-copy tmp%3#0 0'
debug: Replaced get.ops[62]: 'v-load tmp%3#0' with 'l-load tmp%3#0'
debug: Inserted get.ops[67]: 'l-store-copy tmp%4#0 0'
debug: Replaced get.ops[69]: 'v-load tmp%4#0' with 'l-load tmp%4#0'
debug: Inserted get.ops[74]: 'l-store-copy tmp%5#0 0'
debug: Replaced get.ops[76]: 'v-load tmp%5#0' with 'l-load tmp%5#0'
debug: Inserted get.ops[3]: 'l-store-copy maybe_exists%0#0 1'
debug: Replaced get.ops[6]: 'v-load maybe_exists%0#0' with 'l-load maybe_exists%0#0'
debug: Inserted get.ops[20]: 'l-store-copy maybe_exists%1#0 1'
debug: Replaced get.ops[23]: 'v-load maybe_exists%1#0' with 'l-load maybe_exists%1#0'
debug: Inserted get.ops[32]: 'l-store-copy maybe_exists%2#0 1'
debug: Replaced get.ops[35]: 'v-load maybe_exists%2#0' with 'l-load maybe_exists%2#0'
debug: Inserted get.ops[43]: 'l-store-copy tmp%1#0 0'
debug: Replaced get.ops[46]: 'v-load tmp%1#0' with 'l-load tmp%1#0'
debug: Inserted get.ops[52]: 'l-store-copy maybe_exists%3#0 1'
debug: Replaced get.ops[55]: 'v-load maybe_exists%3#0' with 'l-load maybe_exists%3#0'
debug: Inserted get.ops[5]: 'l-store-copy maybe_value%0#0 1'
debug: Replaced get.ops[9]: 'v-load maybe_value%0#0' with 'l-load maybe_value%0#0'
debug: Inserted get.ops[23]: 'l-store-copy maybe_value%1#0 1'
debug: Replaced get.ops[27]: 'v-load maybe_value%1#0' with 'l-load maybe_value%1#0'
debug: Inserted get.ops[36]: 'l-store-copy maybe_value%2#0 1'
debug: Replaced get.ops[40]: 'v-load maybe_value%2#0' with 'l-load maybe_value%2#0'
debug: Inserted get.ops[57]: 'l-store-copy maybe_value%3#0 1'
debug: Replaced get.ops[61]: 'v-load maybe_value%3#0' with 'l-load maybe_value%3#0'
debug: Inserted get.ops[67]: 'l-store-copy a1#0 0'
debug: Replaced get.ops[74]: 'v-load a1#0' with 'l-load a1#0'
debug: Inserted get.ops[75]: 'l-store-copy a1#0 0'
debug: Replaced get.ops[82]: 'v-load a1#0' with 'l-load a1#0'
debug: Inserted get.ops[83]: 'l-store-copy a1#0 0'
debug: Replaced get.ops[90]: 'v-load a1#0' with 'l-load a1#0'
debug: Inserted get.ops[65]: 'l-store-copy a4#0 0'
debug: Replaced get.ops[85]: 'v-load a4#0' with 'l-load a4#0'
debug: Inserted get.ops[44]: 'l-store-copy a3#0 0'
debug: Replaced get.ops[78]: 'v-load a3#0' with 'l-load a3#0'
debug: Inserted get.ops[31]: 'l-store-copy a2#0 0'
debug: Replaced get.ops[71]: 'v-load a2#0' with 'l-load a2#0'
debug: Inserted get.ops[13]: 'l-store-copy a1#0 0'
debug: Replaced get.ops[70]: 'v-load a1#0' with 'l-load a1#0'
debug: Inserted approval_program_block@1.ops[1]: 'l-store-copy tmp%0#1 0'
debug: Replaced approval_program_block@1.ops[3]: 'v-load tmp%0#1' with 'l-load tmp%0#1'
debug: Inserted approval_program_block@1.ops[6]: 'l-store-copy tmp%1#0 0'
debug: Replaced approval_program_block@1.ops[8]: 'v-load tmp%1#0' with 'l-load tmp%1#0'
debug: Inserted approval_program_abi_routing@2.ops[1]: 'l-store-copy tmp%2#0 0'
debug: Replaced approval_program_abi_routing@2.ops[6]: 'v-load tmp%2#0' with 'l-load tmp%2#0'
debug: Inserted approval_program_append_route@3.ops[1]: 'l-store-copy tmp%3#0 0'
debug: Replaced approval_program_append_route@3.ops[3]: 'v-load tmp%3#0' with 'l-load tmp%3#0'
debug: Inserted approval_program_append_route@3.ops[6]: 'l-store-copy tmp%4#0 0'
debug: Replaced approval_program_append_route@3.ops[8]: 'v-load tmp%4#0' with 'l-load tmp%4#0'
debug: Inserted approval_program_append_route@3.ops[11]: 'l-store-copy tmp%5#0 0'
debug: Replaced approval_program_append_route@3.ops[13]: 'v-load tmp%5#0' with 'l-load tmp%5#0'
debug: Inserted approval_program_append_route@3.ops[16]: 'l-store-copy tmp%6#0 0'
debug: Replaced approval_program_append_route@3.ops[18]: 'v-load tmp%6#0' with 'l-load tmp%6#0'
debug: Inserted approval_program_append_route@3.ops[22]: 'l-store-copy test_cases.state_mutations.contract.Contract.__puya_arc4_router__%0#0 0'
debug: Replaced approval_program_append_route@3.ops[24]: 'v-load test_cases.state_mutations.contract.Contract.__puya_arc4_router__%0#0' with 'l-load test_cases.state_mutations.contract.Contract.__puya_arc4_router__%0#0'
debug: Inserted approval_program_modify_route@4.ops[1]: 'l-store-copy tmp%7#0 0'
debug: Replaced approval_program_modify_route@4.ops[3]: 'v-load tmp%7#0' with 'l-load tmp%7#0'
debug: Inserted approval_program_modify_route@4.ops[6]: 'l-store-copy tmp%8#0 0'
debug: Replaced approval_program_modify_route@4.ops[8]: 'v-load tmp%8#0' with 'l-load tmp%8#0'
debug: Inserted approval_program_modify_route@4.ops[11]: 'l-store-copy tmp%9#0 0'
debug: Replaced approval_program_modify_route@4.ops[13]: 'v-load tmp%9#0' with 'l-load tmp%9#0'
debug: Inserted approval_program_modify_route@4.ops[16]: 'l-store-copy tmp%10#0 0'
debug: Replaced approval_program_modify_route@4.ops[18]: 'v-load tmp%10#0' with 'l-load tmp%10#0'
debug: Inserted approval_program_modify_route@4.ops[22]: 'l-store-copy test_cases.state_mutations.contract.Contract.__puya_arc4_router__%0#0 0'
debug: Replaced approval_program_modify_route@4.ops[24]: 'v-load test_cases.state_mutations.contract.Contract.__puya_arc4_router__%0#0' with 'l-load test_cases.state_mutations.contract.Contract.__puya_arc4_router__%0#0'
debug: Inserted approval_program_get_route@5.ops[1]: 'l-store-copy tmp%11#0 0'
debug: Replaced approval_program_get_route@5.ops[3]: 'v-load tmp%11#0' with 'l-load tmp%11#0'
debug: Inserted approval_program_get_route@5.ops[6]: 'l-store-copy tmp%12#0 0'
debug: Replaced approval_program_get_route@5.ops[8]: 'v-load tmp%12#0' with 'l-load tmp%12#0'
debug: Inserted approval_program_get_route@5.ops[11]: 'l-store-copy tmp%13#0 0'
debug: Replaced approval_program_get_route@5.ops[13]: 'v-load tmp%13#0' with 'l-load tmp%13#0'
debug: Inserted approval_program_get_route@5.ops[16]: 'l-store-copy tmp%14#0 0'
debug: Replaced approval_program_get_route@5.ops[18]: 'v-load tmp%14#0' with 'l-load tmp%14#0'
debug: Inserted approval_program_get_route@5.ops[25]: 'l-store-copy tmp%16#0 0'
debug: Replaced approval_program_get_route@5.ops[27]: 'v-load tmp%16#0' with 'l-load tmp%16#0'
debug: Inserted approval_program_get_route@5.ops[30]: 'l-store-copy test_cases.state_mutations.contract.Contract.__puya_arc4_router__%0#0 0'
debug: Replaced approval_program_get_route@5.ops[32]: 'v-load test_cases.state_mutations.contract.Contract.__puya_arc4_router__%0#0' with 'l-load test_cases.state_mutations.contract.Contract.__puya_arc4_router__%0#0'
debug: Inserted approval_program_get_route@5.ops[21]: 'l-store-copy tmp%15#0 0'
debug: Replaced approval_program_get_route@5.ops[24]: 'v-load tmp%15#0' with 'l-load tmp%15#0'
debug: Inserted approval_program_bare_routing@8.ops[1]: 'l-store-copy tmp%17#0 0'
debug: Replaced approval_program_bare_routing@8.ops[5]: 'v-load tmp%17#0' with 'l-load tmp%17#0'
debug: Inserted approval_program_opt_in@9.ops[1]: 'l-store-copy tmp%18#0 0'
debug: Replaced approval_program_opt_in@9.ops[3]: 'v-load tmp%18#0' with 'l-load tmp%18#0'
debug: Inserted approval_program_opt_in@9.ops[6]: 'l-store-copy tmp%19#0 0'
debug: Replaced approval_program_opt_in@9.ops[8]: 'v-load tmp%19#0' with 'l-load tmp%19#0'
debug: Inserted approval_program_opt_in@9.ops[12]: 'l-store-copy test_cases.state_mutations.contract.Contract.__puya_arc4_router__%0#0 0'
debug: Replaced approval_program_opt_in@9.ops[14]: 'v-load test_cases.state_mutations.contract.Contract.__puya_arc4_router__%0#0' with 'l-load test_cases.state_mutations.contract.Contract.__puya_arc4_router__%0#0'
debug: Inserted approval_program___algopy_default_create@10.ops[1]: 'l-store-copy tmp%20#0 0'
debug: Replaced approval_program___algopy_default_create@10.ops[3]: 'v-load tmp%20#0' with 'l-load tmp%20#0'
debug: Inserted approval_program___algopy_default_create@10.ops[6]: 'l-store-copy tmp%21#0 0'
debug: Replaced approval_program___algopy_default_create@10.ops[8]: 'v-load tmp%21#0' with 'l-load tmp%21#0'
debug: Inserted approval_program_after_inlined_test_cases.state_mutations.contract.Contract.__algopy_default_create@12.ops[1]: 'l-store-copy test_cases.state_mutations.contract.Contract.__puya_arc4_router__%0#0 0'
debug: Replaced approval_program_after_inlined_test_cases.state_mutations.contract.Contract.__algopy_default_create@12.ops[3]: 'v-load test_cases.state_mutations.contract.Contract.__puya_arc4_router__%0#0' with 'l-load test_cases.state_mutations.contract.Contract.__puya_arc4_router__%0#0'
debug: Inserted approval_program_after_if_else@15.ops[1]: 'l-store-copy test_cases.state_mutations.contract.Contract.__puya_arc4_router__%0#0 0'
debug: Replaced approval_program_after_if_else@15.ops[3]: 'v-load test_cases.state_mutations.contract.Contract.__puya_arc4_router__%0#0' with 'l-load test_cases.state_mutations.contract.Contract.__puya_arc4_router__%0#0'
debug: Found 1 edge set/s for test_cases.state_mutations.contract.Contract.__algopy_entrypoint_with_init
debug: Found 6 edge set/s for _puya_lib.arc4.dynamic_array_concat_dynamic_element
debug: Found 3 edge set/s for _puya_lib.arc4.static_array_replace_dynamic_element
debug: Found 10 edge set/s for algopy.arc4.ARC4Contract.approval_program
debug: Allocated 1 variable/s to x-stack: tmp%0#0
debug: shared x-stack for approval_program_append_route@3 -> approval_program_after_inlined_test_cases.state_mutations.contract.Contract.__puya_arc4_router__@16: tmp%0#0
debug: shared x-stack for approval_program_modify_route@4 -> approval_program_after_inlined_test_cases.state_mutations.contract.Contract.__puya_arc4_router__@16: tmp%0#0
debug: shared x-stack for approval_program_get_route@5 -> approval_program_after_inlined_test_cases.state_mutations.contract.Contract.__puya_arc4_router__@16: tmp%0#0
debug: shared x-stack for approval_program_opt_in@9 -> approval_program_after_inlined_test_cases.state_mutations.contract.Contract.__puya_arc4_router__@16: tmp%0#0
debug: shared x-stack for approval_program_after_inlined_test_cases.state_mutations.contract.Contract.__algopy_default_create@12 -> approval_program_after_inlined_test_cases.state_mutations.contract.Contract.__puya_arc4_router__@16: tmp%0#0
debug: shared x-stack for approval_program_after_if_else@15 -> approval_program_after_inlined_test_cases.state_mutations.contract.Contract.__puya_arc4_router__@16: tmp%0#0
debug: _puya_lib.arc4.dynamic_array_concat_dynamic_element f-stack entry: ['tmp%4#0']
debug: _puya_lib.arc4.dynamic_array_concat_dynamic_element f-stack on first store: ['new_head#0', 'item_offset_adjustment#0', 'tmp%0#0', 'head_offset#0']
debug: _puya_lib.arc4.static_array_replace_dynamic_element f-stack entry: []
debug: _puya_lib.arc4.static_array_replace_dynamic_element f-stack on first store: ['original_item_length#0', 'new_item_length#0', 'new_head_and_tail#0', 'tmp%7#0', 'head_offset#0']
debug: optimizing TEAL subroutine test_cases.state_mutations.contract.Contract.__algopy_entrypoint_with_init() -> uint64:
debug: removing explicit jump to fall-through block main_call___init__@1
debug: removing explicit jump to fall-through block main_after_if_else@2
debug: optimizing TEAL subroutine _puya_lib.arc4.dynamic_array_concat_dynamic_element(array_items_count: uint64, array_head_and_tail: bytes, new_items_count: uint64, new_head_and_tail: bytes) -> bytes:
debug: removing explicit jump to fall-through block dynamic_array_concat_dynamic_element_for_header@1
debug: removing explicit jump to fall-through block dynamic_array_concat_dynamic_element_for_body@2
debug: removing explicit jump to fall-through block dynamic_array_concat_dynamic_element_for_footer@3
debug: removing explicit jump to fall-through block dynamic_array_concat_dynamic_element_for_header@5
debug: removing explicit jump to fall-through block dynamic_array_concat_dynamic_element_for_body@6
debug: removing explicit jump to fall-through block dynamic_array_concat_dynamic_element_for_footer@7
debug: optimizing TEAL subroutine _puya_lib.arc4.dynamic_array_replace_dynamic_element(source: bytes, new_item: bytes, index: uint64) -> bytes:
debug: optimizing TEAL subroutine _puya_lib.arc4.static_array_replace_dynamic_element(array_head_and_tail: bytes, new_item: bytes, index: uint64, array_length: uint64) -> bytes:
debug: removing explicit jump to fall-through block static_array_replace_dynamic_element_for_header@1
debug: removing explicit jump to fall-through block static_array_replace_dynamic_element_for_body@2
debug: removing explicit jump to fall-through block static_array_replace_dynamic_element_for_footer@3
state_mutations/contract.py:64 debug: optimizing TEAL subroutine test_cases.state_mutations.contract.get_struct() -> bytes:
state_mutations/contract.py:23 debug: optimizing TEAL subroutine test_cases.state_mutations.contract.Contract.__init__() -> void:
state_mutations/contract.py:29 debug: optimizing TEAL subroutine test_cases.state_mutations.contract.Contract.opt_in() -> void:
state_mutations/contract.py:36 debug: optimizing TEAL subroutine test_cases.state_mutations.contract.Contract.append() -> void:
state_mutations/contract.py:44 debug: optimizing TEAL subroutine test_cases.state_mutations.contract.Contract.modify() -> void:
state_mutations/contract.py:51 debug: optimizing TEAL subroutine test_cases.state_mutations.contract.Contract.get() -> bytes:
debug: optimizing TEAL subroutine algopy.arc4.ARC4Contract.approval_program() -> uint64:
debug: removing explicit jump to fall-through block approval_program_block@1
debug: removing explicit jump to fall-through block approval_program_abi_routing@2
debug: removing explicit jump to fall-through block approval_program_switch_case_default@6
debug: removing explicit jump to fall-through block approval_program_switch_case_next@7
debug: removing explicit jump to fall-through block approval_program_after_if_else@15
debug: removing explicit jump to fall-through block approval_program_after_inlined_test_cases.state_mutations.contract.Contract.__puya_arc4_router__@16
debug: removing explicit jump to fall-through block approval_program_switch_case_default@13
debug: removing explicit jump to fall-through block approval_program_switch_case_next@14
debug: removing explicit jump to fall-through block approval_program_block@11
debug: removing explicit jump to fall-through block approval_program_after_inlined_test_cases.state_mutations.contract.Contract.__algopy_default_create@12
debug: optimizing TEAL subroutine algopy.arc4.ARC4Contract.clear_state_program() -> uint64:
info: Writing state_mutations/out_unoptimized/Contract.approval.teal
info: Writing state_mutations/out_unoptimized/Contract.clear.teal
info: Writing state_mutations/out_unoptimized/Contract.approval.bin
info: Writing state_mutations/out_unoptimized/Contract.clear.bin
info: Writing state_mutations/out_unoptimized/Contract.approval.puya.map
info: Writing state_mutations/out_unoptimized/Contract.clear.puya.map