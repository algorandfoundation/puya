debug: PuyaPyOptions(output_teal=True, output_source_map=True, output_arc32=True, output_arc56=True, output_ssa_ir=True, output_optimization_ir=True, output_destructured_ir=True, output_memory_ir=True, output_bytecode=True, debug_level=1, optimization_level=1, target_avm_version=10, cli_template_definitions={}, template_vars_prefix='TMPL_', locals_coalescing_strategy=<LocalsCoalescingStrategy.root_operand: 'root_operand'>, paths=['state_mutations'], output_awst=True, output_awst_json=False, output_client=True, log_level=<LogLevel.debug: 10>)
info: Found python prefix: <git root>/.venv
info: writing state_mutations/out/module.awst
debug: Building IR for function _puya_lib.util.ensure_budget
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'required_budget_with_buffer' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let required_budget_with_buffer#1: uint64 = undefined while trying to resolve 'required_budget_with_buffer' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'fee_source' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let fee_source#1: uint64 = undefined while trying to resolve 'fee_source' in block@1
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@4
debug: Terminated block@4
debug: Sealing block@5
debug: Terminated block@5
debug: Sealing block@6
debug: Terminated block@6
debug: Sealing block@1
debug: Added required_budget_with_buffer#0 to Phi node: let required_budget_with_buffer#1: uint64 = φ(required_budget_with_buffer#0 <- block@0) in block@0
debug: Created Phi assignment: let required_budget_with_buffer#2: uint64 = undefined while trying to resolve 'required_budget_with_buffer' in block@6
debug: Added required_budget_with_buffer#1 to Phi node: let required_budget_with_buffer#2: uint64 = φ(required_budget_with_buffer#1 <- block@3) in block@3
debug: Added required_budget_with_buffer#1 to Phi node: let required_budget_with_buffer#2: uint64 = φ(required_budget_with_buffer#1 <- block@3, required_budget_with_buffer#1 <- block@4) in block@4
debug: Added required_budget_with_buffer#1 to Phi node: let required_budget_with_buffer#2: uint64 = φ(required_budget_with_buffer#1 <- block@3, required_budget_with_buffer#1 <- block@4, required_budget_with_buffer#1 <- block@5) in block@5
debug: Replacing trivial Phi node: let required_budget_with_buffer#2: uint64 = φ(required_budget_with_buffer#1 <- block@3, required_budget_with_buffer#1 <- block@4, required_budget_with_buffer#1 <- block@5) (required_budget_with_buffer#2) with required_budget_with_buffer#1
debug: Deleting Phi assignment: let required_budget_with_buffer#2: uint64 = φ(required_budget_with_buffer#1 <- block@3, required_budget_with_buffer#1 <- block@4, required_budget_with_buffer#1 <- block@5)
debug: Replaced trivial Phi node: let required_budget_with_buffer#2: uint64 = φ(required_budget_with_buffer#1 <- block@3, required_budget_with_buffer#1 <- block@4, required_budget_with_buffer#1 <- block@5) (required_budget_with_buffer#2) with required_budget_with_buffer#1 in current definition for 1 blocks
debug: Added required_budget_with_buffer#1 to Phi node: let required_budget_with_buffer#1: uint64 = φ(required_budget_with_buffer#0 <- block@0, required_budget_with_buffer#1 <- block@6) in block@6
debug: Replacing trivial Phi node: let required_budget_with_buffer#1: uint64 = φ(required_budget_with_buffer#0 <- block@0, required_budget_with_buffer#1 <- block@6) (required_budget_with_buffer#1) with required_budget_with_buffer#0
debug: Deleting Phi assignment: let required_budget_with_buffer#1: uint64 = φ(required_budget_with_buffer#0 <- block@0, required_budget_with_buffer#1 <- block@6)
debug: Replaced trivial Phi node: let required_budget_with_buffer#1: uint64 = φ(required_budget_with_buffer#0 <- block@0, required_budget_with_buffer#1 <- block@6) (required_budget_with_buffer#1) with required_budget_with_buffer#0 in current definition for 6 blocks
debug: Added fee_source#0 to Phi node: let fee_source#1: uint64 = φ(fee_source#0 <- block@0) in block@0
debug: Created Phi assignment: let fee_source#2: uint64 = undefined while trying to resolve 'fee_source' in block@6
debug: Added fee_source#1 to Phi node: let fee_source#2: uint64 = φ(fee_source#1 <- block@3) in block@3
debug: Added fee_source#1 to Phi node: let fee_source#2: uint64 = φ(fee_source#1 <- block@3, fee_source#1 <- block@4) in block@4
debug: Added fee_source#1 to Phi node: let fee_source#2: uint64 = φ(fee_source#1 <- block@3, fee_source#1 <- block@4, fee_source#1 <- block@5) in block@5
debug: Replacing trivial Phi node: let fee_source#2: uint64 = φ(fee_source#1 <- block@3, fee_source#1 <- block@4, fee_source#1 <- block@5) (fee_source#2) with fee_source#1
debug: Deleting Phi assignment: let fee_source#2: uint64 = φ(fee_source#1 <- block@3, fee_source#1 <- block@4, fee_source#1 <- block@5)
debug: Replaced trivial Phi node: let fee_source#2: uint64 = φ(fee_source#1 <- block@3, fee_source#1 <- block@4, fee_source#1 <- block@5) (fee_source#2) with fee_source#1 in current definition for 1 blocks
debug: Added fee_source#1 to Phi node: let fee_source#1: uint64 = φ(fee_source#0 <- block@0, fee_source#1 <- block@6) in block@6
debug: Replacing trivial Phi node: let fee_source#1: uint64 = φ(fee_source#0 <- block@0, fee_source#1 <- block@6) (fee_source#1) with fee_source#0
debug: Deleting Phi assignment: let fee_source#1: uint64 = φ(fee_source#0 <- block@0, fee_source#1 <- block@6)
debug: Replaced trivial Phi node: let fee_source#1: uint64 = φ(fee_source#0 <- block@0, fee_source#1 <- block@6) (fee_source#1) with fee_source#0 in current definition for 6 blocks
debug: Sealing block@7
debug: Terminated block@7
debug: Building IR for function _puya_lib.bytes_.is_substring
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'start' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let start#1: uint64 = undefined while trying to resolve 'start' in block@1
debug: Looking for 'item' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let item#1: bytes = undefined while trying to resolve 'item' in block@1
debug: Looking for 'sequence' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let sequence#1: bytes = undefined while trying to resolve 'sequence' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@4
debug: Terminated block@4
debug: Sealing block@1
debug: Added start#0 to Phi node: let start#1: uint64 = φ(start#0 <- block@0) in block@0
debug: Added start#2 to Phi node: let start#1: uint64 = φ(start#0 <- block@0, start#2 <- block@4) in block@4
debug: Added item#0 to Phi node: let item#1: bytes = φ(item#0 <- block@0) in block@0
debug: Added item#1 to Phi node: let item#1: bytes = φ(item#0 <- block@0, item#1 <- block@4) in block@4
debug: Replacing trivial Phi node: let item#1: bytes = φ(item#0 <- block@0, item#1 <- block@4) (item#1) with item#0
debug: Deleting Phi assignment: let item#1: bytes = φ(item#0 <- block@0, item#1 <- block@4)
debug: Replaced trivial Phi node: let item#1: bytes = φ(item#0 <- block@0, item#1 <- block@4) (item#1) with item#0 in current definition for 3 blocks
debug: Added sequence#0 to Phi node: let sequence#1: bytes = φ(sequence#0 <- block@0) in block@0
debug: Added sequence#1 to Phi node: let sequence#1: bytes = φ(sequence#0 <- block@0, sequence#1 <- block@4) in block@4
debug: Replacing trivial Phi node: let sequence#1: bytes = φ(sequence#0 <- block@0, sequence#1 <- block@4) (sequence#1) with sequence#0
debug: Deleting Phi assignment: let sequence#1: bytes = φ(sequence#0 <- block@0, sequence#1 <- block@4)
debug: Replaced trivial Phi node: let sequence#1: bytes = φ(sequence#0 <- block@0, sequence#1 <- block@4) (sequence#1) with sequence#0 in current definition for 3 blocks
debug: Sealing block@5
debug: Terminated block@5
debug: Building IR for function _puya_lib.arc4.dynamic_array_pop_bit
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function _puya_lib.arc4.dynamic_array_pop_fixed_size
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function _puya_lib.arc4.dynamic_array_pop_byte_length_head
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function _puya_lib.arc4.dynamic_array_pop_dynamic_element
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'head_offset' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let head_offset#1: uint64 = undefined while trying to resolve 'head_offset' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'head_and_tail' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let head_and_tail#1: bytes = undefined while trying to resolve 'head_and_tail' in block@1
debug: Looking for 'new_head' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let new_head#1: bytes = undefined while trying to resolve 'new_head' in block@1
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@1
debug: Added head_offset#0 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0) in block@0
debug: Added head_offset#2 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0, head_offset#2 <- block@3) in block@3
debug: Added head_and_tail#0 to Phi node: let head_and_tail#1: bytes = φ(head_and_tail#0 <- block@0) in block@0
debug: Added head_and_tail#1 to Phi node: let head_and_tail#1: bytes = φ(head_and_tail#0 <- block@0, head_and_tail#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let head_and_tail#1: bytes = φ(head_and_tail#0 <- block@0, head_and_tail#1 <- block@3) (head_and_tail#1) with head_and_tail#0
debug: Deleting Phi assignment: let head_and_tail#1: bytes = φ(head_and_tail#0 <- block@0, head_and_tail#1 <- block@3)
debug: Replaced trivial Phi node: let head_and_tail#1: bytes = φ(head_and_tail#0 <- block@0, head_and_tail#1 <- block@3) (head_and_tail#1) with head_and_tail#0 in current definition for 3 blocks
debug: Added new_head#0 to Phi node: let new_head#1: bytes = φ(new_head#0 <- block@0) in block@0
debug: Added new_head#2 to Phi node: let new_head#1: bytes = φ(new_head#0 <- block@0, new_head#2 <- block@3) in block@3
debug: Sealing block@4
debug: Created Phi assignment: let length_minus_1#1: uint64 = undefined while trying to resolve 'length_minus_1' in block@1
debug: Added length_minus_1#0 to Phi node: let length_minus_1#1: uint64 = φ(length_minus_1#0 <- block@0) in block@0
debug: Added length_minus_1#1 to Phi node: let length_minus_1#1: uint64 = φ(length_minus_1#0 <- block@0, length_minus_1#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let length_minus_1#1: uint64 = φ(length_minus_1#0 <- block@0, length_minus_1#1 <- block@3) (length_minus_1#1) with length_minus_1#0
debug: Deleting Phi assignment: let length_minus_1#1: uint64 = φ(length_minus_1#0 <- block@0, length_minus_1#1 <- block@3)
debug: Replaced trivial Phi node: let length_minus_1#1: uint64 = φ(length_minus_1#0 <- block@0, length_minus_1#1 <- block@3) (length_minus_1#1) with length_minus_1#0 in current definition for 3 blocks
debug: Created Phi assignment: let popped_header_offset#1: uint64 = undefined while trying to resolve 'popped_header_offset' in block@1
debug: Added popped_header_offset#0 to Phi node: let popped_header_offset#1: uint64 = φ(popped_header_offset#0 <- block@0) in block@0
debug: Added popped_header_offset#1 to Phi node: let popped_header_offset#1: uint64 = φ(popped_header_offset#0 <- block@0, popped_header_offset#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let popped_header_offset#1: uint64 = φ(popped_header_offset#0 <- block@0, popped_header_offset#1 <- block@3) (popped_header_offset#1) with popped_header_offset#0
debug: Deleting Phi assignment: let popped_header_offset#1: uint64 = φ(popped_header_offset#0 <- block@0, popped_header_offset#1 <- block@3)
debug: Replaced trivial Phi node: let popped_header_offset#1: uint64 = φ(popped_header_offset#0 <- block@0, popped_header_offset#1 <- block@3) (popped_header_offset#1) with popped_header_offset#0 in current definition for 3 blocks
debug: Created Phi assignment: let popped_offset#1: uint64 = undefined while trying to resolve 'popped_offset' in block@1
debug: Added popped_offset#0 to Phi node: let popped_offset#1: uint64 = φ(popped_offset#0 <- block@0) in block@0
debug: Added popped_offset#1 to Phi node: let popped_offset#1: uint64 = φ(popped_offset#0 <- block@0, popped_offset#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let popped_offset#1: uint64 = φ(popped_offset#0 <- block@0, popped_offset#1 <- block@3) (popped_offset#1) with popped_offset#0
debug: Deleting Phi assignment: let popped_offset#1: uint64 = φ(popped_offset#0 <- block@0, popped_offset#1 <- block@3)
debug: Replaced trivial Phi node: let popped_offset#1: uint64 = φ(popped_offset#0 <- block@0, popped_offset#1 <- block@3) (popped_offset#1) with popped_offset#0 in current definition for 3 blocks
debug: Created Phi assignment: let popped#1: bytes = undefined while trying to resolve 'popped' in block@1
debug: Added popped#0 to Phi node: let popped#1: bytes = φ(popped#0 <- block@0) in block@0
debug: Added popped#1 to Phi node: let popped#1: bytes = φ(popped#0 <- block@0, popped#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let popped#1: bytes = φ(popped#0 <- block@0, popped#1 <- block@3) (popped#1) with popped#0
debug: Deleting Phi assignment: let popped#1: bytes = φ(popped#0 <- block@0, popped#1 <- block@3)
debug: Replaced trivial Phi node: let popped#1: bytes = φ(popped#0 <- block@0, popped#1 <- block@3) (popped#1) with popped#0 in current definition for 3 blocks
debug: Terminated block@4
debug: Building IR for function _puya_lib.arc4.dynamic_array_concat_bits
debug: Sealing block@0
debug: Terminated block@0
debug: Sealing block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Created Phi assignment: let array_length#1: uint64 = undefined while trying to resolve 'array_length' in block@2
debug: Added array_length#0 to Phi node: let array_length#1: uint64 = φ(array_length#0 <- block@0) in block@0
debug: Added array_length#0 to Phi node: let array_length#1: uint64 = φ(array_length#0 <- block@0, array_length#0 <- block@1) in block@1
debug: Replacing trivial Phi node: let array_length#1: uint64 = φ(array_length#0 <- block@0, array_length#0 <- block@1) (array_length#1) with array_length#0
debug: Deleting Phi assignment: let array_length#1: uint64 = φ(array_length#0 <- block@0, array_length#0 <- block@1)
debug: Replaced trivial Phi node: let array_length#1: uint64 = φ(array_length#0 <- block@0, array_length#0 <- block@1) (array_length#1) with array_length#0 in current definition for 1 blocks
debug: Created Phi assignment: let is_packed#1: bool = undefined while trying to resolve 'is_packed' in block@2
debug: Added is_packed#0 to Phi node: let is_packed#1: bool = φ(is_packed#0 <- block@0) in block@0
debug: Added is_packed#0 to Phi node: let is_packed#1: bool = φ(is_packed#0 <- block@0, is_packed#0 <- block@1) in block@1
debug: Replacing trivial Phi node: let is_packed#1: bool = φ(is_packed#0 <- block@0, is_packed#0 <- block@1) (is_packed#1) with is_packed#0
debug: Deleting Phi assignment: let is_packed#1: bool = φ(is_packed#0 <- block@0, is_packed#0 <- block@1)
debug: Replaced trivial Phi node: let is_packed#1: bool = φ(is_packed#0 <- block@0, is_packed#0 <- block@1) (is_packed#1) with is_packed#0 in current definition for 1 blocks
debug: Created Phi assignment: let new_items_count#1: uint64 = undefined while trying to resolve 'new_items_count' in block@2
debug: Added new_items_count#0 to Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0) in block@0
debug: Added new_items_count#0 to Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#0 <- block@1) in block@1
debug: Replacing trivial Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#0 <- block@1) (new_items_count#1) with new_items_count#0
debug: Deleting Phi assignment: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#0 <- block@1)
debug: Replaced trivial Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#0 <- block@1) (new_items_count#1) with new_items_count#0 in current definition for 1 blocks
debug: Terminated block@2
debug: Looking for 'i' in an unsealed block creating an incomplete Phi: block@3
debug: Created Phi assignment: let i#1: uint64 = undefined while trying to resolve 'i' in block@3
debug: Terminated block@3
debug: Sealing block@4
debug: Looking for 'result' in an unsealed block creating an incomplete Phi: block@3
debug: Created Phi assignment: let result#2: bytes = undefined while trying to resolve 'result' in block@3
debug: Looking for 'write_offset' in an unsealed block creating an incomplete Phi: block@3
debug: Created Phi assignment: let write_offset#1: uint64 = undefined while trying to resolve 'write_offset' in block@3
debug: Looking for 'new_items_bytes' in an unsealed block creating an incomplete Phi: block@3
debug: Created Phi assignment: let new_items_bytes#1: bytes = undefined while trying to resolve 'new_items_bytes' in block@3
debug: Terminated block@4
debug: Sealing block@5
debug: Terminated block@5
debug: Sealing block@3
debug: Added i#0 to Phi node: let i#1: uint64 = φ(i#0 <- block@2) in block@2
debug: Added i#2 to Phi node: let i#1: uint64 = φ(i#0 <- block@2, i#2 <- block@5) in block@5
debug: Created Phi assignment: let result#4: bytes = undefined while trying to resolve 'result' in block@2
debug: Added result#0 to Phi node: let result#4: bytes = φ(result#0 <- block@0) in block@0
debug: Added result#1 to Phi node: let result#4: bytes = φ(result#0 <- block@0, result#1 <- block@1) in block@1
debug: Added result#4 to Phi node: let result#2: bytes = φ(result#4 <- block@2) in block@2
debug: Added result#3 to Phi node: let result#2: bytes = φ(result#4 <- block@2, result#3 <- block@5) in block@5
debug: Added write_offset#0 to Phi node: let write_offset#1: uint64 = φ(write_offset#0 <- block@2) in block@2
debug: Added write_offset#2 to Phi node: let write_offset#1: uint64 = φ(write_offset#0 <- block@2, write_offset#2 <- block@5) in block@5
debug: Created Phi assignment: let new_items_bytes#2: bytes = undefined while trying to resolve 'new_items_bytes' in block@2
debug: Added new_items_bytes#0 to Phi node: let new_items_bytes#2: bytes = φ(new_items_bytes#0 <- block@0) in block@0
debug: Added new_items_bytes#0 to Phi node: let new_items_bytes#2: bytes = φ(new_items_bytes#0 <- block@0, new_items_bytes#0 <- block@1) in block@1
debug: Replacing trivial Phi node: let new_items_bytes#2: bytes = φ(new_items_bytes#0 <- block@0, new_items_bytes#0 <- block@1) (new_items_bytes#2) with new_items_bytes#0
debug: Deleting Phi assignment: let new_items_bytes#2: bytes = φ(new_items_bytes#0 <- block@0, new_items_bytes#0 <- block@1)
debug: Replaced trivial Phi node: let new_items_bytes#2: bytes = φ(new_items_bytes#0 <- block@0, new_items_bytes#0 <- block@1) (new_items_bytes#2) with new_items_bytes#0 in current definition for 1 blocks
debug: Added new_items_bytes#0 to Phi node: let new_items_bytes#1: bytes = φ(new_items_bytes#0 <- block@2) in block@2
debug: Added new_items_bytes#1 to Phi node: let new_items_bytes#1: bytes = φ(new_items_bytes#0 <- block@2, new_items_bytes#1 <- block@5) in block@5
debug: Replacing trivial Phi node: let new_items_bytes#1: bytes = φ(new_items_bytes#0 <- block@2, new_items_bytes#1 <- block@5) (new_items_bytes#1) with new_items_bytes#0
debug: Deleting Phi assignment: let new_items_bytes#1: bytes = φ(new_items_bytes#0 <- block@2, new_items_bytes#1 <- block@5)
debug: Replaced trivial Phi node: let new_items_bytes#1: bytes = φ(new_items_bytes#0 <- block@2, new_items_bytes#1 <- block@5) (new_items_bytes#1) with new_items_bytes#0 in current definition for 3 blocks
debug: Sealing block@6
debug: Terminated block@6
debug: Building IR for function _puya_lib.arc4.dynamic_array_concat_byte_length_head
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function _puya_lib.arc4.dynamic_array_concat_dynamic_element
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'head_offset' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let head_offset#1: uint64 = undefined while trying to resolve 'head_offset' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'array_head_and_tail' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let array_head_and_tail#1: bytes = undefined while trying to resolve 'array_head_and_tail' in block@1
debug: Looking for 'new_head' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let new_head#1: bytes = undefined while trying to resolve 'new_head' in block@1
debug: Looking for 'item_offset_adjustment' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let item_offset_adjustment#1: uint64 = undefined while trying to resolve 'item_offset_adjustment' in block@1
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@1
debug: Added head_offset#0 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0) in block@0
debug: Added head_offset#2 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0, head_offset#2 <- block@3) in block@3
debug: Added array_head_and_tail#0 to Phi node: let array_head_and_tail#1: bytes = φ(array_head_and_tail#0 <- block@0) in block@0
debug: Added array_head_and_tail#1 to Phi node: let array_head_and_tail#1: bytes = φ(array_head_and_tail#0 <- block@0, array_head_and_tail#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let array_head_and_tail#1: bytes = φ(array_head_and_tail#0 <- block@0, array_head_and_tail#1 <- block@3) (array_head_and_tail#1) with array_head_and_tail#0
debug: Deleting Phi assignment: let array_head_and_tail#1: bytes = φ(array_head_and_tail#0 <- block@0, array_head_and_tail#1 <- block@3)
debug: Replaced trivial Phi node: let array_head_and_tail#1: bytes = φ(array_head_and_tail#0 <- block@0, array_head_and_tail#1 <- block@3) (array_head_and_tail#1) with array_head_and_tail#0 in current definition for 3 blocks
debug: Added new_head#0 to Phi node: let new_head#1: bytes = φ(new_head#0 <- block@0) in block@0
debug: Added new_head#2 to Phi node: let new_head#1: bytes = φ(new_head#0 <- block@0, new_head#2 <- block@3) in block@3
debug: Added item_offset_adjustment#0 to Phi node: let item_offset_adjustment#1: uint64 = φ(item_offset_adjustment#0 <- block@0) in block@0
debug: Added item_offset_adjustment#1 to Phi node: let item_offset_adjustment#1: uint64 = φ(item_offset_adjustment#0 <- block@0, item_offset_adjustment#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let item_offset_adjustment#1: uint64 = φ(item_offset_adjustment#0 <- block@0, item_offset_adjustment#1 <- block@3) (item_offset_adjustment#1) with item_offset_adjustment#0
debug: Deleting Phi assignment: let item_offset_adjustment#1: uint64 = φ(item_offset_adjustment#0 <- block@0, item_offset_adjustment#1 <- block@3)
debug: Replaced trivial Phi node: let item_offset_adjustment#1: uint64 = φ(item_offset_adjustment#0 <- block@0, item_offset_adjustment#1 <- block@3) (item_offset_adjustment#1) with item_offset_adjustment#0 in current definition for 3 blocks
debug: Sealing block@4
debug: Created Phi assignment: let new_items_count#1: uint64 = undefined while trying to resolve 'new_items_count' in block@1
debug: Added new_items_count#0 to Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0) in block@0
debug: Added new_items_count#1 to Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#1 <- block@3) (new_items_count#1) with new_items_count#0
debug: Deleting Phi assignment: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#1 <- block@3)
debug: Replaced trivial Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#1 <- block@3) (new_items_count#1) with new_items_count#0 in current definition for 3 blocks
debug: Terminated block@4
debug: Looking for 'head_offset' in an unsealed block creating an incomplete Phi: block@5
debug: Created Phi assignment: let head_offset#4: uint64 = undefined while trying to resolve 'head_offset' in block@5
debug: Terminated block@5
debug: Sealing block@6
debug: Looking for 'new_head_and_tail' in an unsealed block creating an incomplete Phi: block@5
debug: Created Phi assignment: let new_head_and_tail#1: bytes = undefined while trying to resolve 'new_head_and_tail' in block@5
debug: Looking for 'new_head' in an unsealed block creating an incomplete Phi: block@5
debug: Created Phi assignment: let new_head#3: bytes = undefined while trying to resolve 'new_head' in block@5
debug: Looking for 'item_offset_adjustment' in an unsealed block creating an incomplete Phi: block@5
debug: Created Phi assignment: let item_offset_adjustment#3: uint64 = undefined while trying to resolve 'item_offset_adjustment' in block@5
debug: Terminated block@6
debug: Sealing block@7
debug: Terminated block@7
debug: Sealing block@5
debug: Added head_offset#3 to Phi node: let head_offset#4: uint64 = φ(head_offset#3 <- block@4) in block@4
debug: Added head_offset#5 to Phi node: let head_offset#4: uint64 = φ(head_offset#3 <- block@4, head_offset#5 <- block@7) in block@7
debug: Created Phi assignment: let new_head_and_tail#2: bytes = undefined while trying to resolve 'new_head_and_tail' in block@1
debug: Added new_head_and_tail#0 to Phi node: let new_head_and_tail#2: bytes = φ(new_head_and_tail#0 <- block@0) in block@0
debug: Added new_head_and_tail#2 to Phi node: let new_head_and_tail#2: bytes = φ(new_head_and_tail#0 <- block@0, new_head_and_tail#2 <- block@3) in block@3
debug: Replacing trivial Phi node: let new_head_and_tail#2: bytes = φ(new_head_and_tail#0 <- block@0, new_head_and_tail#2 <- block@3) (new_head_and_tail#2) with new_head_and_tail#0
debug: Deleting Phi assignment: let new_head_and_tail#2: bytes = φ(new_head_and_tail#0 <- block@0, new_head_and_tail#2 <- block@3)
debug: Replaced trivial Phi node: let new_head_and_tail#2: bytes = φ(new_head_and_tail#0 <- block@0, new_head_and_tail#2 <- block@3) (new_head_and_tail#2) with new_head_and_tail#0 in current definition for 3 blocks
debug: Added new_head_and_tail#0 to Phi node: let new_head_and_tail#1: bytes = φ(new_head_and_tail#0 <- block@4) in block@4
debug: Added new_head_and_tail#1 to Phi node: let new_head_and_tail#1: bytes = φ(new_head_and_tail#0 <- block@4, new_head_and_tail#1 <- block@7) in block@7
debug: Replacing trivial Phi node: let new_head_and_tail#1: bytes = φ(new_head_and_tail#0 <- block@4, new_head_and_tail#1 <- block@7) (new_head_and_tail#1) with new_head_and_tail#0
debug: Deleting Phi assignment: let new_head_and_tail#1: bytes = φ(new_head_and_tail#0 <- block@4, new_head_and_tail#1 <- block@7)
debug: Replaced trivial Phi node: let new_head_and_tail#1: bytes = φ(new_head_and_tail#0 <- block@4, new_head_and_tail#1 <- block@7) (new_head_and_tail#1) with new_head_and_tail#0 in current definition for 3 blocks
debug: Added new_head#1 to Phi node: let new_head#3: bytes = φ(new_head#1 <- block@4) in block@4
debug: Added new_head#4 to Phi node: let new_head#3: bytes = φ(new_head#1 <- block@4, new_head#4 <- block@7) in block@7
debug: Added item_offset_adjustment#2 to Phi node: let item_offset_adjustment#3: uint64 = φ(item_offset_adjustment#2 <- block@4) in block@4
debug: Added item_offset_adjustment#3 to Phi node: let item_offset_adjustment#3: uint64 = φ(item_offset_adjustment#2 <- block@4, item_offset_adjustment#3 <- block@7) in block@7
debug: Replacing trivial Phi node: let item_offset_adjustment#3: uint64 = φ(item_offset_adjustment#2 <- block@4, item_offset_adjustment#3 <- block@7) (item_offset_adjustment#3) with item_offset_adjustment#2
debug: Deleting Phi assignment: let item_offset_adjustment#3: uint64 = φ(item_offset_adjustment#2 <- block@4, item_offset_adjustment#3 <- block@7)
debug: Replaced trivial Phi node: let item_offset_adjustment#3: uint64 = φ(item_offset_adjustment#2 <- block@4, item_offset_adjustment#3 <- block@7) (item_offset_adjustment#3) with item_offset_adjustment#2 in current definition for 3 blocks
debug: Sealing block@8
debug: Created Phi assignment: let array_items_count#1: uint64 = undefined while trying to resolve 'array_items_count' in block@5
debug: Created Phi assignment: let array_items_count#2: uint64 = undefined while trying to resolve 'array_items_count' in block@1
debug: Added array_items_count#0 to Phi node: let array_items_count#2: uint64 = φ(array_items_count#0 <- block@0) in block@0
debug: Added array_items_count#2 to Phi node: let array_items_count#2: uint64 = φ(array_items_count#0 <- block@0, array_items_count#2 <- block@3) in block@3
debug: Replacing trivial Phi node: let array_items_count#2: uint64 = φ(array_items_count#0 <- block@0, array_items_count#2 <- block@3) (array_items_count#2) with array_items_count#0
debug: Deleting Phi assignment: let array_items_count#2: uint64 = φ(array_items_count#0 <- block@0, array_items_count#2 <- block@3)
debug: Replaced trivial Phi node: let array_items_count#2: uint64 = φ(array_items_count#0 <- block@0, array_items_count#2 <- block@3) (array_items_count#2) with array_items_count#0 in current definition for 3 blocks
debug: Added array_items_count#0 to Phi node: let array_items_count#1: uint64 = φ(array_items_count#0 <- block@4) in block@4
debug: Added array_items_count#1 to Phi node: let array_items_count#1: uint64 = φ(array_items_count#0 <- block@4, array_items_count#1 <- block@7) in block@7
debug: Replacing trivial Phi node: let array_items_count#1: uint64 = φ(array_items_count#0 <- block@4, array_items_count#1 <- block@7) (array_items_count#1) with array_items_count#0
debug: Deleting Phi assignment: let array_items_count#1: uint64 = φ(array_items_count#0 <- block@4, array_items_count#1 <- block@7)
debug: Replaced trivial Phi node: let array_items_count#1: uint64 = φ(array_items_count#0 <- block@4, array_items_count#1 <- block@7) (array_items_count#1) with array_items_count#0 in current definition for 3 blocks
debug: Created Phi assignment: let new_items_count#2: uint64 = undefined while trying to resolve 'new_items_count' in block@5
debug: Added new_items_count#0 to Phi node: let new_items_count#2: uint64 = φ(new_items_count#0 <- block@4) in block@4
debug: Added new_items_count#2 to Phi node: let new_items_count#2: uint64 = φ(new_items_count#0 <- block@4, new_items_count#2 <- block@7) in block@7
debug: Replacing trivial Phi node: let new_items_count#2: uint64 = φ(new_items_count#0 <- block@4, new_items_count#2 <- block@7) (new_items_count#2) with new_items_count#0
debug: Deleting Phi assignment: let new_items_count#2: uint64 = φ(new_items_count#0 <- block@4, new_items_count#2 <- block@7)
debug: Replaced trivial Phi node: let new_items_count#2: uint64 = φ(new_items_count#0 <- block@4, new_items_count#2 <- block@7) (new_items_count#2) with new_items_count#0 in current definition for 3 blocks
debug: Created Phi assignment: let array_head_and_tail#2: bytes = undefined while trying to resolve 'array_head_and_tail' in block@5
debug: Added array_head_and_tail#0 to Phi node: let array_head_and_tail#2: bytes = φ(array_head_and_tail#0 <- block@4) in block@4
debug: Added array_head_and_tail#2 to Phi node: let array_head_and_tail#2: bytes = φ(array_head_and_tail#0 <- block@4, array_head_and_tail#2 <- block@7) in block@7
debug: Replacing trivial Phi node: let array_head_and_tail#2: bytes = φ(array_head_and_tail#0 <- block@4, array_head_and_tail#2 <- block@7) (array_head_and_tail#2) with array_head_and_tail#0
debug: Deleting Phi assignment: let array_head_and_tail#2: bytes = φ(array_head_and_tail#0 <- block@4, array_head_and_tail#2 <- block@7)
debug: Replaced trivial Phi node: let array_head_and_tail#2: bytes = φ(array_head_and_tail#0 <- block@4, array_head_and_tail#2 <- block@7) (array_head_and_tail#2) with array_head_and_tail#0 in current definition for 3 blocks
debug: Terminated block@8
debug: Building IR for function _puya_lib.arc4.dynamic_array_replace_byte_length_head
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function _puya_lib.arc4.dynamic_array_replace_dynamic_element
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function _puya_lib.arc4.static_array_replace_dynamic_element
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'head_offset' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let head_offset#1: uint64 = undefined while trying to resolve 'head_offset' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'new_head_and_tail' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let new_head_and_tail#1: bytes = undefined while trying to resolve 'new_head_and_tail' in block@1
debug: Looking for 'new_item_length' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let new_item_length#1: uint64 = undefined while trying to resolve 'new_item_length' in block@1
debug: Looking for 'original_item_length' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let original_item_length#1: uint64 = undefined while trying to resolve 'original_item_length' in block@1
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@1
debug: Added head_offset#0 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0) in block@0
debug: Added head_offset#2 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0, head_offset#2 <- block@3) in block@3
debug: Added new_head_and_tail#0 to Phi node: let new_head_and_tail#1: bytes = φ(new_head_and_tail#0 <- block@0) in block@0
debug: Added new_head_and_tail#2 to Phi node: let new_head_and_tail#1: bytes = φ(new_head_and_tail#0 <- block@0, new_head_and_tail#2 <- block@3) in block@3
debug: Added new_item_length#0 to Phi node: let new_item_length#1: uint64 = φ(new_item_length#0 <- block@0) in block@0
debug: Added new_item_length#1 to Phi node: let new_item_length#1: uint64 = φ(new_item_length#0 <- block@0, new_item_length#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let new_item_length#1: uint64 = φ(new_item_length#0 <- block@0, new_item_length#1 <- block@3) (new_item_length#1) with new_item_length#0
debug: Deleting Phi assignment: let new_item_length#1: uint64 = φ(new_item_length#0 <- block@0, new_item_length#1 <- block@3)
debug: Replaced trivial Phi node: let new_item_length#1: uint64 = φ(new_item_length#0 <- block@0, new_item_length#1 <- block@3) (new_item_length#1) with new_item_length#0 in current definition for 3 blocks
debug: Added original_item_length#0 to Phi node: let original_item_length#1: uint64 = φ(original_item_length#0 <- block@0) in block@0
debug: Added original_item_length#1 to Phi node: let original_item_length#1: uint64 = φ(original_item_length#0 <- block@0, original_item_length#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let original_item_length#1: uint64 = φ(original_item_length#0 <- block@0, original_item_length#1 <- block@3) (original_item_length#1) with original_item_length#0
debug: Deleting Phi assignment: let original_item_length#1: uint64 = φ(original_item_length#0 <- block@0, original_item_length#1 <- block@3)
debug: Replaced trivial Phi node: let original_item_length#1: uint64 = φ(original_item_length#0 <- block@0, original_item_length#1 <- block@3) (original_item_length#1) with original_item_length#0 in current definition for 3 blocks
debug: Sealing block@4
debug: Terminated block@4
debug: Building IR for function _puya_lib.arc4.static_array_replace_byte_length_head
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function _puya_lib.arc4.recalculate_head_for_elements_with_byte_length_head
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'head_offset' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let head_offset#1: uint64 = undefined while trying to resolve 'head_offset' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'tail_offset' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let tail_offset#1: uint64 = undefined while trying to resolve 'tail_offset' in block@1
debug: Looking for 'array_head_and_tail' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let array_head_and_tail#1: bytes = undefined while trying to resolve 'array_head_and_tail' in block@1
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@1
debug: Added head_offset#0 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0) in block@0
debug: Added head_offset#3 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0, head_offset#3 <- block@3) in block@3
debug: Added tail_offset#0 to Phi node: let tail_offset#1: uint64 = φ(tail_offset#0 <- block@0) in block@0
debug: Added tail_offset#2 to Phi node: let tail_offset#1: uint64 = φ(tail_offset#0 <- block@0, tail_offset#2 <- block@3) in block@3
debug: Added array_head_and_tail#0 to Phi node: let array_head_and_tail#1: bytes = φ(array_head_and_tail#0 <- block@0) in block@0
debug: Added array_head_and_tail#2 to Phi node: let array_head_and_tail#1: bytes = φ(array_head_and_tail#0 <- block@0, array_head_and_tail#2 <- block@3) in block@3
debug: Sealing block@4
debug: Terminated block@4
debug: Building IR for function test_cases.state_mutations.contract.Contract.__puya_arc4_router__
debug: Sealing block@0
debug: Terminated block@0
debug: Sealing block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@4
debug: Terminated block@4
debug: Sealing block@5
debug: Terminated block@5
debug: Sealing block@6
debug: Terminated block@6
debug: Sealing block@7
debug: Terminated block@7
debug: Sealing block@8
debug: Terminated block@8
debug: Sealing block@9
debug: Terminated block@9
debug: Sealing block@10
debug: Terminated block@10
debug: Sealing block@11
debug: Terminated block@11
debug: Sealing block@12
debug: Terminated block@12
debug: Building IR for function test_cases.state_mutations.contract.Contract.__init__
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function algopy.arc4.ARC4Contract.approval_program
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.state_mutations.contract.Contract.append
debug: Sealing block@0
state_mutations/contract.py:39:9 debug: encountered already materialized expression ('glob'), reusing result: "glob"
state_mutations/contract.py:40:18 debug: encountered already materialized expression (txn<Sender>()), reusing result: tmp%0#0
state_mutations/contract.py:40:9 debug: encountered already materialized expression ('loc'), reusing result: "loc"
state_mutations/contract.py:41:9 debug: encountered already materialized expression ('box'), reusing result: "box"
state_mutations/contract.py:42:9 debug: encountered already materialized expression (concat('map', reinterpret_cast<bytes>(txn<Sender>()))), reusing result: tmp%2#0
debug: Terminated block@0
debug: Building IR for function test_cases.state_mutations.contract.get_struct
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.state_mutations.contract.Contract.modify
debug: Sealing block@0
state_mutations/contract.py:46:9 debug: encountered already materialized expression (GlobalState['glob']), reusing result: maybe_value%0#0
state_mutations/contract.py:46:25 debug: encountered already materialized expression (0u), reusing result: 0u
state_mutations/contract.py:46:9 debug: encountered already materialized expression ('glob'), reusing result: "glob"
state_mutations/contract.py:47:9 debug: encountered already materialized expression (LocalState['loc', txn<Sender>()]), reusing result: maybe_value%1#0
state_mutations/contract.py:47:30 debug: encountered already materialized expression (0u), reusing result: 0u
state_mutations/contract.py:47:18 debug: encountered already materialized expression (txn<Sender>()), reusing result: tmp%1#0
state_mutations/contract.py:47:9 debug: encountered already materialized expression ('loc'), reusing result: "loc"
state_mutations/contract.py:48:9 debug: encountered already materialized expression (Box['box']), reusing result: maybe_value%2#0
state_mutations/contract.py:48:24 debug: encountered already materialized expression (0u), reusing result: 0u
state_mutations/contract.py:48:9 debug: encountered already materialized expression ('box'), reusing result: "box"
state_mutations/contract.py:49:9 debug: encountered already materialized expression (Box[concat('map', reinterpret_cast<bytes>(txn<Sender>()))]), reusing result: maybe_value%3#0
state_mutations/contract.py:49:30 debug: encountered already materialized expression (0u), reusing result: 0u
state_mutations/contract.py:49:9 debug: encountered already materialized expression (concat('map', reinterpret_cast<bytes>(txn<Sender>()))), reusing result: tmp%5#0
debug: Terminated block@0
debug: Building IR for function test_cases.state_mutations.contract.Contract.get
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.state_mutations.contract.Contract.opt_in
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.state_mutations.contract.Contract.__algopy_default_create
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.state_mutations.contract.Contract.__algopy_entrypoint_with_init
debug: Sealing block@0
debug: Terminated block@0
debug: Sealing block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Terminated block@2
debug: removing unused subroutine _puya_lib.util.ensure_budget
debug: removing unused subroutine _puya_lib.bytes_.is_substring
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_bit
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_fixed_size
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_bits
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_replace_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.static_array_replace_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.recalculate_head_for_elements_with_byte_length_head
debug: Building IR for function algopy.arc4.ARC4Contract.clear_state_program
debug: Sealing block@0
debug: Terminated block@0
debug: removing unused subroutine _puya_lib.util.ensure_budget
debug: removing unused subroutine _puya_lib.bytes_.is_substring
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_bit
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_fixed_size
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_bits
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_replace_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_replace_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.static_array_replace_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.static_array_replace_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.recalculate_head_for_elements_with_byte_length_head
debug: Output IR to state_mutations/out/Contract.ir/Contract.approval.0.approval.ssa.ir
info: optimizing approval program of test_cases.state_mutations.contract.Contract at level 1
debug: Begin optimization pass 1/100
debug: marking trivial method test_cases.state_mutations.contract.Contract.__init__ as inlineable
debug: marking single-use function algopy.arc4.ARC4Contract.approval_program for inlining
debug: marking single-use function test_cases.state_mutations.contract.get_struct for inlining
debug: marking single-use function _puya_lib.arc4.static_array_replace_dynamic_element for inlining
debug: Optimizing subroutine test_cases.state_mutations.contract.Contract.__algopy_entrypoint_with_init
debug: Optimizer: Perform Subroutine Inlining
debug: inlining call to algopy.arc4.ARC4Contract.approval_program in test_cases.state_mutations.contract.Contract.__algopy_entrypoint_with_init
debug: inlining call to test_cases.state_mutations.contract.Contract.__init__ in test_cases.state_mutations.contract.Contract.__algopy_entrypoint_with_init
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: tmp%0#1, tmp%1#0
debug: Copy propagation made 1 modifications
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@5 with block@1 in block@6
debug: Merged linear block@5 into block@1
debug: Replaced predecessor block@6 with block@1 in block@2
debug: Merged linear block@6 into block@1
debug: Replaced predecessor block@3 with block@2 in block@4
debug: Merged linear block@3 into block@2
debug: Merged linear block@4 into block@2
debug: Optimizer: Remove Empty Blocks
debug: replaced goto tmp%0#0 ? block@2 : block@2 with goto block@2
debug: Removed empty block: block@1
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine test_cases.state_mutations.contract.Contract.__init__
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine algopy.arc4.ARC4Contract.approval_program
debug: Optimizer: Perform Subroutine Inlining
debug: inlining call to test_cases.state_mutations.contract.Contract.__puya_arc4_router__ in algopy.arc4.ARC4Contract.approval_program
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (== tmp%3#0 NoOp) to (! tmp%3#0)
debug: Simplified (== tmp%7#0 NoOp) to (! tmp%7#0)
debug: Simplified (== tmp%11#0 NoOp) to (! tmp%11#0)
debug: Simplified (== tmp%20#0 0u) to (! tmp%20#0)
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable tmp%1#0
debug: Removing unused variable tmp%6#0
debug: Removing unused variable tmp%10#0
debug: Removing unused variable tmp%14#0
debug: Removing unused variable tmp%19#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: simplifying a switch with constants into goto nth
debug: simplified terminator of block@8 from switch tmp%17#0 {1u => block@9, 0u => block@10, * => block@11} to goto_nth [block@10, block@9][tmp%17#0] else goto block@11
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@1 with block@0 in block@8
debug: Replaced predecessor block@1 with block@0 in block@2
debug: Merged linear block@1 into block@0
debug: Replaced predecessor block@7 with block@6 in block@13
debug: Merged linear block@7 into block@6
debug: Replaced predecessor block@12 with block@11 in block@13
debug: Merged linear block@12 into block@11
debug: Optimizer: Remove Empty Blocks
debug: Removed empty block: block@6
debug: Removed empty block: block@11
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine test_cases.state_mutations.contract.Contract.__puya_arc4_router__
debug: Optimizer: Perform Subroutine Inlining
debug: inlining call to test_cases.state_mutations.contract.Contract.__algopy_default_create in test_cases.state_mutations.contract.Contract.__puya_arc4_router__
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (== tmp%3#0 NoOp) to (! tmp%3#0)
debug: Simplified (== tmp%7#0 NoOp) to (! tmp%7#0)
debug: Simplified (== tmp%11#0 NoOp) to (! tmp%11#0)
debug: Simplified (== tmp%20#0 0u) to (! tmp%20#0)
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable tmp%1#0
debug: Removing unused variable tmp%6#0
debug: Removing unused variable tmp%10#0
debug: Removing unused variable tmp%14#0
debug: Removing unused variable tmp%19#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: simplifying a switch with constants into goto nth
debug: simplified terminator of block@7 from switch tmp%17#0 {1u => block@8, 0u => block@9, * => block@10} to goto_nth [block@9, block@8][tmp%17#0] else goto block@10
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@6 with block@5 in block@12
debug: Merged linear block@6 into block@5
debug: Replaced predecessor block@13 with block@9 in block@14
debug: Merged linear block@13 into block@9
debug: Merged linear block@14 into block@9
debug: Replaced predecessor block@11 with block@10 in block@12
debug: Merged linear block@11 into block@10
debug: Optimizer: Remove Empty Blocks
debug: Removed empty block: block@5
debug: Removed empty block: block@10
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine test_cases.state_mutations.contract.Contract.append
debug: Optimizer: Perform Subroutine Inlining
state_mutations/contract.py:38:9 debug: inlining call to test_cases.state_mutations.contract.get_struct in test_cases.state_mutations.contract.Contract.append
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: encoded_tuple_buffer%3#0, struct#0, copy%0#0, copy%1#0, copy%2#0, copy%3#0
debug: Found equivalence set: result%1#0, r_head_and_tail%0#0
debug: Found equivalence set: result%3#0, r_head_and_tail%1#0
debug: Found equivalence set: result%5#0, r_head_and_tail%2#0
debug: Found equivalence set: result%7#0, r_head_and_tail%3#0
debug: Copy propagation made 13 modifications
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (concat 0x 0x0000000000000001) to 0x0000000000000001
debug: Simplified ((extract 6 2) as_bytes%0#1) to 0x000a
debug: Simplified (concat 0x0000000000000001 0x000a) to 0x0000000000000001000a
debug: Simplified (len 0x000362617a) to 5u
debug: Simplified (+ 10u 5u) to 15u
debug: Simplified (concat 0x0000000000000001000a 0x000362617a) to 0x0000000000000001000a000362617a
debug: Simplified ((extract 6 2) as_bytes%0#0) to 0x0002
debug: Simplified (concat 0x 0x0002) to 0x0002
debug: Simplified (len 0x0000000000000001000a000362617a) to 15u
debug: Simplified (+ 2u 15u) to 17u
debug: Simplified (concat 0x0002 0x0000000000000001000a000362617a) to 0x00020000000000000001000a000362617a
debug: Simplified ((extract 6 2) as_bytes%1#0) to 0x0002
debug: Simplified (concat 0x 0x0002) to 0x0002
debug: Simplified (len 0x0000000000000001000a000362617a) to 15u
debug: Simplified (+ 2u 15u) to 17u
debug: Simplified (concat 0x0002 0x0000000000000001000a000362617a) to 0x00020000000000000001000a000362617a
debug: Simplified ((extract 6 2) as_bytes%2#0) to 0x0002
debug: Simplified (concat 0x 0x0002) to 0x0002
debug: Simplified (len 0x0000000000000001000a000362617a) to 15u
debug: Simplified (+ 2u 15u) to 17u
debug: Simplified (concat 0x0002 0x0000000000000001000a000362617a) to 0x00020000000000000001000a000362617a
debug: Simplified ((extract 6 2) as_bytes%3#0) to 0x0002
debug: Simplified (concat 0x 0x0002) to 0x0002
debug: Simplified (len 0x0000000000000001000a000362617a) to 15u
debug: Simplified (+ 2u 15u) to 17u
debug: Simplified (concat 0x0002 0x0000000000000001000a000362617a) to 0x00020000000000000001000a000362617a
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable current_tail_offset%0#0
debug: Removing unused variable encoded_tuple_buffer%0#0
debug: Removing unused variable encoded_tuple_buffer%1#0
debug: Removing unused variable as_bytes%0#1
debug: Removing unused variable offset_as_uint16%0#0
debug: Removing unused variable encoded_tuple_buffer%2#0
debug: Removing unused variable data_length%0#0
debug: Removing unused variable current_tail_offset%1#0
debug: Removing unused variable struct#0
debug: Removing unused variable as_bytes%0#0
debug: Removing unused variable next_item_head%0#0
debug: Removing unused variable result%0#0
debug: Removing unused variable next_item_len%0#0
debug: Removing unused variable tail_offset%0#0
debug: Removing unused variable result%1#0
debug: Removing unused variable r_count%0#0
debug: Removing unused variable as_bytes%1#0
debug: Removing unused variable next_item_head%1#0
debug: Removing unused variable result%2#0
debug: Removing unused variable next_item_len%1#0
debug: Removing unused variable tail_offset%1#0
debug: Removing unused variable result%3#0
debug: Removing unused variable r_count%1#0
debug: Removing unused variable as_bytes%2#0
debug: Removing unused variable next_item_head%2#0
debug: Removing unused variable result%4#0
debug: Removing unused variable next_item_len%2#0
debug: Removing unused variable tail_offset%2#0
debug: Removing unused variable result%5#0
debug: Removing unused variable r_count%2#0
debug: Removing unused variable as_bytes%3#0
debug: Removing unused variable next_item_head%3#0
debug: Removing unused variable result%6#0
debug: Removing unused variable next_item_len%3#0
debug: Removing unused variable tail_offset%3#0
debug: Removing unused variable result%7#0
debug: Removing unused variable r_count%3#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@1 with block@0 in block@2
debug: Merged linear block@1 into block@0
debug: Merged linear block@2 into block@0
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine test_cases.state_mutations.contract.get_struct
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (concat 0x 0x0000000000000001) to 0x0000000000000001
debug: Simplified ((extract 6 2) as_bytes%0#0) to 0x000a
debug: Simplified (concat 0x0000000000000001 0x000a) to 0x0000000000000001000a
debug: Simplified (len 0x000362617a) to 5u
debug: Simplified (+ 10u 5u) to 15u
debug: Simplified (concat 0x0000000000000001000a 0x000362617a) to 0x0000000000000001000a000362617a
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable current_tail_offset%0#0
debug: Removing unused variable encoded_tuple_buffer%0#0
debug: Removing unused variable encoded_tuple_buffer%1#0
debug: Removing unused variable as_bytes%0#0
debug: Removing unused variable offset_as_uint16%0#0
debug: Removing unused variable encoded_tuple_buffer%2#0
debug: Removing unused variable data_length%0#0
debug: Removing unused variable current_tail_offset%1#0
debug: Removing unused variable encoded_tuple_buffer%3#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine test_cases.state_mutations.contract.Contract.modify
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: updated_data%0#0, assigned_value%1#0
debug: Found equivalence set: updated_data%1#0, assigned_value%3#0
debug: Found equivalence set: updated_data%2#0, assigned_value%5#0
debug: Found equivalence set: updated_data%3#0, assigned_value%7#0
debug: Copy propagation made 4 modifications
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (* 0u 2u) to 0u
debug: Simplified (+ 0u 1u) to 1u
debug: Simplified (* 1u 2u) to 2u
debug: Simplified (* 0u 2u) to 0u
debug: Simplified (+ 0u 1u) to 1u
debug: Simplified (* 1u 2u) to 2u
debug: Simplified (* 0u 2u) to 0u
debug: Simplified (+ 0u 1u) to 1u
debug: Simplified (* 1u 2u) to 2u
debug: Simplified (* 0u 2u) to 0u
debug: Simplified (+ 0u 1u) to 1u
debug: Simplified (* 1u 2u) to 2u
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable item_offset_offset%0#0
debug: Removing unused variable next_index%0#0
debug: Removing unused variable next_item_offset_offset%0#0
debug: Removing unused variable assigned_value%0#0
debug: Removing unused variable item_offset_offset%1#0
debug: Removing unused variable next_index%1#0
debug: Removing unused variable next_item_offset_offset%1#0
debug: Removing unused variable assigned_value%2#0
debug: Removing unused variable item_offset_offset%2#0
debug: Removing unused variable next_index%2#0
debug: Removing unused variable next_item_offset_offset%2#0
debug: Removing unused variable assigned_value%4#0
debug: Removing unused variable item_offset_offset%3#0
debug: Removing unused variable next_index%3#0
debug: Removing unused variable next_item_offset_offset%3#0
debug: Removing unused variable assigned_value%6#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine test_cases.state_mutations.contract.Contract.get
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: maybe_value%0#0, copy%0#0, a1#0
debug: Found equivalence set: maybe_value%1#0, copy%1#0, a2#0
debug: Found equivalence set: maybe_value%2#0, copy%2#0, a3#0
debug: Found equivalence set: maybe_value%3#0, copy%3#0, a4#0
debug: Copy propagation made 4 modifications
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine test_cases.state_mutations.contract.Contract.opt_in
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (concat 0x0000 0x) to 0x0000
debug: Simplified (concat 0x0000 0x) to 0x0000
debug: Simplified (concat 0x0000 0x) to 0x0000
debug: Simplified (concat 0x0000 0x) to 0x0000
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable array_data%0#0
debug: Removing unused variable array_data%1#0
debug: Removing unused variable array_data%2#0
debug: Removing unused variable array_data%3#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine test_cases.state_mutations.contract.Contract.__algopy_default_create
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine _puya_lib.arc4.dynamic_array_concat_dynamic_element
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@3 with block@2 in block@1
debug: Merged linear block@3 into block@2
debug: Replaced predecessor block@7 with block@6 in block@5
debug: Merged linear block@7 into block@6
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Replacing redundant declaration let tmp%4#0: uint64 = (* new_items_count#0 2u) with copy of existing registers (Register(source_location=INTERNAL:198:4-26, ir_type=uint64, name='item_offset_adjustment', version=0),)
debug: Replacing redundant declaration let tmp%12#0: uint64 = (* array_items_count#0 2u) with copy of existing registers (Register(source_location=INTERNAL:199:33-64, ir_type=uint64, name='tmp%0', version=0),)
debug: Replacing redundant declaration let tmp%13#0: uint64 = (len array_head_and_tail#0) with copy of existing registers (Register(source_location=INTERNAL:203:4-26, ir_type=uint64, name='item_offset_adjustment', version=2),)
debug: Replacing redundant declaration let tmp%16#0: uint64 = (* new_items_count#0 2u) with copy of existing registers (Register(source_location=INTERNAL:204:33-62, ir_type=uint64, name='tmp%4', version=0),)
debug: Found equivalence set: item_offset_adjustment#0, tmp%4#0, tmp%16#0
debug: Found equivalence set: tmp%0#0, tmp%12#0
debug: Found equivalence set: item_offset_adjustment#2, tmp%13#0
debug: Copy propagation made 4 modifications
debug: Optimizing subroutine _puya_lib.arc4.dynamic_array_replace_dynamic_element
debug: Optimizer: Perform Subroutine Inlining
debug: inlining call to _puya_lib.arc4.static_array_replace_dynamic_element in _puya_lib.arc4.dynamic_array_replace_dynamic_element
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: tmp%0#0, array_head_and_tail#0
debug: Found equivalence set: new_item#0, new_item#1
debug: Found equivalence set: index#0, index#1
debug: Found equivalence set: array_length#0, array_length#1
debug: Found equivalence set: tmp%9#0, head_offset#0
debug: Found equivalence set: new_head_and_tail#1, tmp%1#0
debug: Copy propagation made 11 modifications
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@1 with block@0 in block@2
debug: Merged linear block@1 into block@0
debug: Replaced predecessor block@4 with block@3 in block@2
debug: Merged linear block@4 into block@3
debug: Merged linear block@6 into block@5
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Replacing redundant declaration let tmp%8#0: uint64 = (+ index#0 1u) with copy of existing registers (Register(source_location=INTERNAL:257:60-69, ir_type=uint64, name='tmp%1', version=1),)
debug: Found equivalence set: tmp%1#1, tmp%8#0
debug: Copy propagation made 1 modifications
debug: Replacing redundant declaration let head_offset#0: uint64 = (* tmp%1#1 2u) with copy of existing registers (Register(source_location=INTERNAL:257:59-74, ir_type=uint64, name='tmp%2', version=1),)
debug: Found equivalence set: tmp%2#1, head_offset#0
debug: Copy propagation made 2 modifications
debug: Optimizing subroutine _puya_lib.arc4.static_array_replace_dynamic_element
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: tmp%9#0, head_offset#0
debug: Copy propagation made 1 modifications
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@3 with block@2 in block@1
debug: Merged linear block@3 into block@2
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Replacing redundant declaration let tmp%8#0: uint64 = (+ index#0 1u) with copy of existing registers (Register(source_location=INTERNAL:257:60-69, ir_type=uint64, name='tmp%1', version=0),)
debug: Found equivalence set: tmp%1#0, tmp%8#0
debug: Copy propagation made 1 modifications
debug: Replacing redundant declaration let head_offset#0: uint64 = (* tmp%1#0 2u) with copy of existing registers (Register(source_location=INTERNAL:257:59-74, ir_type=uint64, name='tmp%2', version=0),)
debug: Found equivalence set: tmp%2#0, head_offset#0
debug: Copy propagation made 2 modifications
debug: removing unused subroutine test_cases.state_mutations.contract.Contract.__init__
debug: removing unused subroutine algopy.arc4.ARC4Contract.approval_program
debug: removing unused subroutine test_cases.state_mutations.contract.get_struct
debug: removing unused subroutine test_cases.state_mutations.contract.Contract.__algopy_default_create
debug: removing unused subroutine _puya_lib.arc4.static_array_replace_dynamic_element
debug: Output IR to state_mutations/out/Contract.ir/Contract.approval.1.approval.ssa.opt.ir
debug: Begin optimization pass 2/100
debug: Optimizing subroutine test_cases.state_mutations.contract.Contract.__algopy_entrypoint_with_init
debug: Optimizer: Perform Subroutine Inlining
debug: inlining call to test_cases.state_mutations.contract.Contract.__puya_arc4_router__ in test_cases.state_mutations.contract.Contract.__algopy_entrypoint_with_init
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable tmp%0#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@2 with block@0 in block@3
debug: Merged linear block@2 into block@0
debug: Replaced predecessor block@3 with block@0 in block@8
debug: Replaced predecessor block@3 with block@0 in block@4
debug: Merged linear block@3 into block@0
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine test_cases.state_mutations.contract.Contract.__puya_arc4_router__
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine test_cases.state_mutations.contract.Contract.append
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine test_cases.state_mutations.contract.Contract.modify
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine test_cases.state_mutations.contract.Contract.get
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine test_cases.state_mutations.contract.Contract.opt_in
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine _puya_lib.arc4.dynamic_array_concat_dynamic_element
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine _puya_lib.arc4.dynamic_array_replace_dynamic_element
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: removing unused subroutine test_cases.state_mutations.contract.Contract.__puya_arc4_router__
debug: Output IR to state_mutations/out/Contract.ir/Contract.approval.2.approval.ssa.opt.ir
debug: Begin optimization pass 3/100
debug: Optimizing subroutine test_cases.state_mutations.contract.Contract.__algopy_entrypoint_with_init
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine test_cases.state_mutations.contract.Contract.append
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine test_cases.state_mutations.contract.Contract.modify
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine test_cases.state_mutations.contract.Contract.get
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine test_cases.state_mutations.contract.Contract.opt_in
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine _puya_lib.arc4.dynamic_array_concat_dynamic_element
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizing subroutine _puya_lib.arc4.dynamic_array_replace_dynamic_element
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: No optimizations performed in pass 3, ending loop
debug: Performing SSA IR destructuring for test_cases.state_mutations.contract.Contract.__algopy_entrypoint_with_init
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in test_cases.state_mutations.contract.Contract.__algopy_entrypoint_with_init using strategy RootOperandGrouping
debug: Coalescing test_cases.state_mutations.contract.Contract.__puya_arc4_router__%0#0 with [test_cases.state_mutations.contract.Contract.__puya_arc4_router__%0#1, test_cases.state_mutations.contract.Contract.__puya_arc4_router__%0#2, test_cases.state_mutations.contract.Contract.__puya_arc4_router__%0#3, test_cases.state_mutations.contract.Contract.__puya_arc4_router__%0#4, test_cases.state_mutations.contract.Contract.__puya_arc4_router__%0#5]
debug: Coalescing tmp%0#1 with [tmp%0#3]
debug: Coalescing resulted in 17 replacement/s
debug: Sequentializing parallel copies in test_cases.state_mutations.contract.Contract.__algopy_entrypoint_with_init
debug: Performing post-SSA optimizations at level 1
debug: Performing SSA IR destructuring for test_cases.state_mutations.contract.Contract.append
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in test_cases.state_mutations.contract.Contract.append using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in test_cases.state_mutations.contract.Contract.append
debug: Performing post-SSA optimizations at level 1
debug: Performing SSA IR destructuring for test_cases.state_mutations.contract.Contract.modify
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in test_cases.state_mutations.contract.Contract.modify using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in test_cases.state_mutations.contract.Contract.modify
debug: Performing post-SSA optimizations at level 1
debug: Performing SSA IR destructuring for test_cases.state_mutations.contract.Contract.get
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in test_cases.state_mutations.contract.Contract.get using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in test_cases.state_mutations.contract.Contract.get
debug: Performing post-SSA optimizations at level 1
debug: Performing SSA IR destructuring for test_cases.state_mutations.contract.Contract.opt_in
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in test_cases.state_mutations.contract.Contract.opt_in using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in test_cases.state_mutations.contract.Contract.opt_in
debug: Performing post-SSA optimizations at level 1
debug: Performing SSA IR destructuring for _puya_lib.arc4.dynamic_array_concat_dynamic_element
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in _puya_lib.arc4.dynamic_array_concat_dynamic_element using strategy RootOperandGrouping
debug: Coalescing new_head#0 with [new_head#7, new_head#1, new_head#2, new_head#10, new_head#3, new_head#4]
debug: Coalescing head_offset#0 with [head_offset#8, head_offset#1, head_offset#2, head_offset#3, head_offset#11, head_offset#4, head_offset#5]
debug: Coalescing item_offset#0 with [item_offset#1]
debug: Coalescing resulted in 38 replacement/s
debug: Sequentializing parallel copies in _puya_lib.arc4.dynamic_array_concat_dynamic_element
debug: loc: {head_offset#0=head_offset#0, new_head#0=new_head#0}
debug: pred: {head_offset#0=head_offset#0, new_head#0=new_head#0}
debug: ready: 
debug: to_do: head_offset#0, new_head#0
debug: * to_do new_head#0
debug: * to_do head_offset#0
debug: loc: {head_offset#0=head_offset#0, new_head#0=new_head#0}
debug: pred: {head_offset#0=head_offset#0, new_head#0=new_head#0}
debug: ready: 
debug: to_do: head_offset#0, new_head#0
debug: * to_do new_head#0
debug: * to_do head_offset#0
debug: loc: {head_offset#0=head_offset#0, new_head#0=new_head#0}
debug: pred: {head_offset#0=head_offset#0, new_head#0=new_head#0}
debug: ready: 
debug: to_do: head_offset#0, new_head#0
debug: * to_do new_head#0
debug: * to_do head_offset#0
debug: loc: {head_offset#0=head_offset#0, new_head#0=new_head#0}
debug: pred: {head_offset#0=head_offset#0, new_head#0=new_head#0}
debug: ready: 
debug: to_do: head_offset#0, new_head#0
debug: * to_do new_head#0
debug: * to_do head_offset#0
debug: loc: {head_offset#0=head_offset#0, new_head#0=new_head#0}
debug: pred: {head_offset#0=head_offset#0, new_head#0=new_head#0}
debug: ready: 
debug: to_do: head_offset#0, new_head#0
debug: * to_do new_head#0
debug: * to_do head_offset#0
debug: loc: {head_offset#0=head_offset#0, new_head#0=new_head#0}
debug: pred: {head_offset#0=head_offset#0, new_head#0=new_head#0}
debug: ready: 
debug: to_do: head_offset#0, new_head#0
debug: * to_do new_head#0
debug: * to_do head_offset#0
debug: Performing post-SSA optimizations at level 1
debug: Performing SSA IR destructuring for _puya_lib.arc4.dynamic_array_replace_dynamic_element
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in _puya_lib.arc4.dynamic_array_replace_dynamic_element using strategy RootOperandGrouping
debug: Coalescing head_offset#0 with [head_offset#5, head_offset#1, head_offset#2]
debug: Coalescing new_head_and_tail#0 with [new_head_and_tail#5, new_head_and_tail#1, new_head_and_tail#2]
debug: Coalescing tail_offset#0 with [tail_offset#1, tail_offset#2]
debug: Coalescing resulted in 23 replacement/s
debug: Sequentializing parallel copies in _puya_lib.arc4.dynamic_array_replace_dynamic_element
debug: loc: {head_offset#0=head_offset#0, new_head_and_tail#0=new_head_and_tail#0}
debug: pred: {head_offset#0=head_offset#0, new_head_and_tail#0=new_head_and_tail#0}
debug: ready: 
debug: to_do: head_offset#0, new_head_and_tail#0
debug: * to_do new_head_and_tail#0
debug: * to_do head_offset#0
debug: loc: {head_offset#0=head_offset#0, new_head_and_tail#0=new_head_and_tail#0}
debug: pred: {head_offset#0=head_offset#0, new_head_and_tail#0=new_head_and_tail#0}
debug: ready: 
debug: to_do: head_offset#0, new_head_and_tail#0
debug: * to_do new_head_and_tail#0
debug: * to_do head_offset#0
debug: loc: {head_offset#0=head_offset#0, new_head_and_tail#0=new_head_and_tail#0}
debug: pred: {head_offset#0=head_offset#0, new_head_and_tail#0=new_head_and_tail#0}
debug: ready: 
debug: to_do: head_offset#0, new_head_and_tail#0
debug: * to_do new_head_and_tail#0
debug: * to_do head_offset#0
debug: Performing post-SSA optimizations at level 1
debug: Output IR to state_mutations/out/Contract.ir/Contract.approval.3.approval.destructured.ir
debug: Output IR to state_mutations/out/Contract.ir/Contract.clear.0.clear.ssa.ir
info: optimizing clear program of test_cases.state_mutations.contract.Contract at level 1
debug: Begin optimization pass 1/100
debug: Optimizing subroutine algopy.arc4.ARC4Contract.clear_state_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: No optimizations performed in pass 1, ending loop
debug: Performing SSA IR destructuring for algopy.arc4.ARC4Contract.clear_state_program
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in algopy.arc4.ARC4Contract.clear_state_program using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in algopy.arc4.ARC4Contract.clear_state_program
debug: Performing post-SSA optimizations at level 1
debug: Output IR to state_mutations/out/Contract.ir/Contract.clear.1.clear.destructured.ir
debug: Inserted main.ops[1]: 'l-store-copy tmp%0#2 0'
debug: Replaced main.ops[3]: 'v-load tmp%0#2' with 'l-load tmp%0#2'
debug: Inserted main_abi_routing@4.ops[1]: 'l-store-copy tmp%2#0 0'
debug: Replaced main_abi_routing@4.ops[6]: 'v-load tmp%2#0' with 'l-load tmp%2#0'
debug: Inserted main_append_route@5.ops[1]: 'l-store-copy tmp%3#0 0'
debug: Replaced main_append_route@5.ops[3]: 'v-load tmp%3#0' with 'l-load tmp%3#0'
debug: Inserted main_append_route@5.ops[5]: 'l-store-copy tmp%4#0 0'
debug: Replaced main_append_route@5.ops[7]: 'v-load tmp%4#0' with 'l-load tmp%4#0'
debug: Inserted main_append_route@5.ops[10]: 'l-store-copy tmp%5#0 0'
debug: Replaced main_append_route@5.ops[12]: 'v-load tmp%5#0' with 'l-load tmp%5#0'
debug: Inserted main_append_route@5.ops[16]: 'l-store-copy test_cases.state_mutations.contract.Contract.__puya_arc4_router__%0#0 0'
debug: Replaced main_append_route@5.ops[18]: 'v-load test_cases.state_mutations.contract.Contract.__puya_arc4_router__%0#0' with 'l-load test_cases.state_mutations.contract.Contract.__puya_arc4_router__%0#0'
debug: Inserted main_modify_route@6.ops[1]: 'l-store-copy tmp%7#0 0'
debug: Replaced main_modify_route@6.ops[3]: 'v-load tmp%7#0' with 'l-load tmp%7#0'
debug: Inserted main_modify_route@6.ops[5]: 'l-store-copy tmp%8#0 0'
debug: Replaced main_modify_route@6.ops[7]: 'v-load tmp%8#0' with 'l-load tmp%8#0'
debug: Inserted main_modify_route@6.ops[10]: 'l-store-copy tmp%9#0 0'
debug: Replaced main_modify_route@6.ops[12]: 'v-load tmp%9#0' with 'l-load tmp%9#0'
debug: Inserted main_modify_route@6.ops[16]: 'l-store-copy test_cases.state_mutations.contract.Contract.__puya_arc4_router__%0#0 0'
debug: Replaced main_modify_route@6.ops[18]: 'v-load test_cases.state_mutations.contract.Contract.__puya_arc4_router__%0#0' with 'l-load test_cases.state_mutations.contract.Contract.__puya_arc4_router__%0#0'
debug: Inserted main_get_route@7.ops[1]: 'l-store-copy tmp%11#0 0'
debug: Replaced main_get_route@7.ops[3]: 'v-load tmp%11#0' with 'l-load tmp%11#0'
debug: Inserted main_get_route@7.ops[5]: 'l-store-copy tmp%12#0 0'
debug: Replaced main_get_route@7.ops[7]: 'v-load tmp%12#0' with 'l-load tmp%12#0'
debug: Inserted main_get_route@7.ops[10]: 'l-store-copy tmp%13#0 0'
debug: Replaced main_get_route@7.ops[12]: 'v-load tmp%13#0' with 'l-load tmp%13#0'
debug: Inserted main_get_route@7.ops[19]: 'l-store-copy tmp%16#0 0'
debug: Replaced main_get_route@7.ops[21]: 'v-load tmp%16#0' with 'l-load tmp%16#0'
debug: Inserted main_get_route@7.ops[24]: 'l-store-copy test_cases.state_mutations.contract.Contract.__puya_arc4_router__%0#0 0'
debug: Replaced main_get_route@7.ops[26]: 'v-load test_cases.state_mutations.contract.Contract.__puya_arc4_router__%0#0' with 'l-load test_cases.state_mutations.contract.Contract.__puya_arc4_router__%0#0'
debug: Inserted main_get_route@7.ops[15]: 'l-store-copy tmp%15#0 0'
debug: Replaced main_get_route@7.ops[18]: 'v-load tmp%15#0' with 'l-load tmp%15#0'
debug: Inserted main_bare_routing@8.ops[1]: 'l-store-copy tmp%17#0 0'
debug: Replaced main_bare_routing@8.ops[3]: 'v-load tmp%17#0' with 'l-load tmp%17#0'
debug: Inserted main_opt_in@9.ops[1]: 'l-store-copy tmp%18#0 0'
debug: Replaced main_opt_in@9.ops[3]: 'v-load tmp%18#0' with 'l-load tmp%18#0'
debug: Inserted main_opt_in@9.ops[7]: 'l-store-copy test_cases.state_mutations.contract.Contract.__puya_arc4_router__%0#0 0'
debug: Replaced main_opt_in@9.ops[9]: 'v-load test_cases.state_mutations.contract.Contract.__puya_arc4_router__%0#0' with 'l-load test_cases.state_mutations.contract.Contract.__puya_arc4_router__%0#0'
debug: Inserted main___algopy_default_create@10.ops[1]: 'l-store-copy tmp%20#0 0'
debug: Replaced main___algopy_default_create@10.ops[3]: 'v-load tmp%20#0' with 'l-load tmp%20#0'
debug: Inserted main___algopy_default_create@10.ops[5]: 'l-store-copy tmp%21#0 0'
debug: Replaced main___algopy_default_create@10.ops[7]: 'v-load tmp%21#0' with 'l-load tmp%21#0'
debug: Inserted main___algopy_default_create@10.ops[10]: 'l-store-copy test_cases.state_mutations.contract.Contract.__puya_arc4_router__%0#0 0'
debug: Replaced main___algopy_default_create@10.ops[12]: 'v-load test_cases.state_mutations.contract.Contract.__puya_arc4_router__%0#0' with 'l-load test_cases.state_mutations.contract.Contract.__puya_arc4_router__%0#0'
debug: Inserted main_after_if_else@11.ops[1]: 'l-store-copy test_cases.state_mutations.contract.Contract.__puya_arc4_router__%0#0 0'
debug: Replaced main_after_if_else@11.ops[3]: 'v-load test_cases.state_mutations.contract.Contract.__puya_arc4_router__%0#0' with 'l-load test_cases.state_mutations.contract.Contract.__puya_arc4_router__%0#0'
debug: Inserted append.ops[24]: 'l-store-copy tmp%0#0 0'
debug: Replaced append.ops[26]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted append.ops[81]: 'l-store-copy tmp%2#0 0'
debug: Replaced append.ops[83]: 'v-load tmp%2#0' with 'l-load tmp%2#0'
debug: Inserted append.ops[3]: 'l-store-copy maybe_exists%0#0 1'
debug: Replaced append.ops[6]: 'v-load maybe_exists%0#0' with 'l-load maybe_exists%0#0'
debug: Inserted append.ops[14]: 'l-store-copy l_head_and_tail%0#0 0'
debug: Replaced append.ops[17]: 'v-load l_head_and_tail%0#0' with 'l-load l_head_and_tail%0#0'
debug: Inserted append.ops[21]: 'l-store-copy concat_result%0#0 0'
debug: Replaced append.ops[24]: 'v-load concat_result%0#0' with 'l-load concat_result%0#0'
debug: Inserted append.ops[33]: 'l-store-copy maybe_exists%1#0 1'
debug: Replaced append.ops[36]: 'v-load maybe_exists%1#0' with 'l-load maybe_exists%1#0'
debug: Inserted append.ops[44]: 'l-store-copy l_head_and_tail%1#0 0'
debug: Replaced append.ops[47]: 'v-load l_head_and_tail%1#0' with 'l-load l_head_and_tail%1#0'
debug: Inserted append.ops[58]: 'l-store-copy maybe_exists%2#0 1'
debug: Replaced append.ops[61]: 'v-load maybe_exists%2#0' with 'l-load maybe_exists%2#0'
debug: Inserted append.ops[69]: 'l-store-copy l_head_and_tail%2#0 0'
debug: Replaced append.ops[72]: 'v-load l_head_and_tail%2#0' with 'l-load l_head_and_tail%2#0'
debug: Inserted append.ops[84]: 'l-store-copy tmp%1#0 0'
debug: Replaced append.ops[87]: 'v-load tmp%1#0' with 'l-load tmp%1#0'
debug: Inserted append.ops[93]: 'l-store-copy maybe_exists%3#0 1'
debug: Replaced append.ops[96]: 'v-load maybe_exists%3#0' with 'l-load maybe_exists%3#0'
debug: Inserted append.ops[104]: 'l-store-copy l_head_and_tail%3#0 0'
debug: Replaced append.ops[107]: 'v-load l_head_and_tail%3#0' with 'l-load l_head_and_tail%3#0'
debug: Inserted append.ops[5]: 'l-store-copy maybe_value%0#0 1'
debug: Replaced append.ops[9]: 'v-load maybe_value%0#0' with 'l-load maybe_value%0#0'
debug: Inserted append.ops[36]: 'l-store-copy maybe_value%1#0 1'
debug: Replaced append.ops[40]: 'v-load maybe_value%1#0' with 'l-load maybe_value%1#0'
debug: Inserted append.ops[53]: 'l-store-copy concat_result%1#0 0'
debug: Replaced append.ops[57]: 'v-load concat_result%1#0' with 'l-load concat_result%1#0'
debug: Inserted append.ops[63]: 'l-store-copy maybe_value%2#0 1'
debug: Replaced append.ops[67]: 'v-load maybe_value%2#0' with 'l-load maybe_value%2#0'
debug: Inserted append.ops[99]: 'l-store-copy maybe_value%3#0 1'
debug: Replaced append.ops[103]: 'v-load maybe_value%3#0' with 'l-load maybe_value%3#0'
debug: Inserted append.ops[118]: 'l-store-copy tmp%2#0 0'
debug: Replaced append.ops[121]: 'v-load tmp%2#0' with 'l-load tmp%2#0'
debug: Inserted append.ops[10]: 'l-store-copy maybe_value%0#0 0'
debug: Replaced append.ops[14]: 'v-load maybe_value%0#0' with 'l-load maybe_value%0#0'
debug: Inserted append.ops[13]: 'l-store-copy l_count%0#0 1'
debug: Replaced append.ops[19]: 'v-load l_count%0#0' with 'l-load l_count%0#0'
debug: Inserted append.ops[43]: 'l-store-copy maybe_value%1#0 0'
debug: Replaced append.ops[47]: 'v-load maybe_value%1#0' with 'l-load maybe_value%1#0'
debug: Inserted append.ops[46]: 'l-store-copy l_count%1#0 1'
debug: Replaced append.ops[52]: 'v-load l_count%1#0' with 'l-load l_count%1#0'
debug: Inserted append.ops[72]: 'l-store-copy maybe_value%2#0 0'
debug: Replaced append.ops[76]: 'v-load maybe_value%2#0' with 'l-load maybe_value%2#0'
debug: Inserted append.ops[75]: 'l-store-copy l_count%2#0 1'
debug: Replaced append.ops[81]: 'v-load l_count%2#0' with 'l-load l_count%2#0'
debug: Inserted append.ops[110]: 'l-store-copy maybe_value%3#0 0'
debug: Replaced append.ops[114]: 'v-load maybe_value%3#0' with 'l-load maybe_value%3#0'
debug: Inserted append.ops[113]: 'l-store-copy l_count%3#0 1'
debug: Replaced append.ops[119]: 'v-load l_count%3#0' with 'l-load l_count%3#0'
debug: Inserted append.ops[86]: 'l-store-copy concat_result%2#0 0'
debug: Replaced append.ops[92]: 'v-load concat_result%2#0' with 'l-load concat_result%2#0'
debug: Inserted append.ops[125]: 'l-store-copy concat_result%3#0 0'
debug: Replaced append.ops[132]: 'v-load concat_result%3#0' with 'l-load concat_result%3#0'
debug: Inserted append.ops[103]: 'l-store-copy tmp%2#0 0'
debug: Replaced append.ops[128]: 'v-load tmp%2#0' with 'l-load tmp%2#0'
debug: Inserted append.ops[33]: 'l-store-copy tmp%0#0 0'
debug: Replaced append.ops[60]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted modify.ops[9]: 'l-store-copy array_head_and_tail%0#0 0'
debug: Replaced modify.ops[11]: 'v-load array_head_and_tail%0#0' with 'l-load array_head_and_tail%0#0'
debug: Inserted modify.ops[18]: 'l-store-copy array_length%0#0 0'
debug: Replaced modify.ops[20]: 'v-load array_length%0#0' with 'l-load array_length%0#0'
debug: Inserted modify.ops[40]: 'l-store-copy tmp%0#0 0'
debug: Replaced modify.ops[42]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted modify.ops[50]: 'l-store-copy data_up_to_item%0#0 0'
debug: Replaced modify.ops[52]: 'v-load data_up_to_item%0#0' with 'l-load data_up_to_item%0#0'
debug: Inserted modify.ops[65]: 'l-store-copy tmp%1#0 0'
debug: Replaced modify.ops[67]: 'v-load tmp%1#0' with 'l-load tmp%1#0'
debug: Inserted modify.ops[77]: 'l-store-copy array_head_and_tail%1#0 0'
debug: Replaced modify.ops[79]: 'v-load array_head_and_tail%1#0' with 'l-load array_head_and_tail%1#0'
debug: Inserted modify.ops[86]: 'l-store-copy array_length%1#0 0'
debug: Replaced modify.ops[88]: 'v-load array_length%1#0' with 'l-load array_length%1#0'
debug: Inserted modify.ops[108]: 'l-store-copy tmp%2#0 0'
debug: Replaced modify.ops[110]: 'v-load tmp%2#0' with 'l-load tmp%2#0'
debug: Inserted modify.ops[118]: 'l-store-copy data_up_to_item%1#0 0'
debug: Replaced modify.ops[120]: 'v-load data_up_to_item%1#0' with 'l-load data_up_to_item%1#0'
debug: Inserted modify.ops[141]: 'l-store-copy array_head_and_tail%2#0 0'
debug: Replaced modify.ops[143]: 'v-load array_head_and_tail%2#0' with 'l-load array_head_and_tail%2#0'
debug: Inserted modify.ops[150]: 'l-store-copy array_length%2#0 0'
debug: Replaced modify.ops[152]: 'v-load array_length%2#0' with 'l-load array_length%2#0'
debug: Inserted modify.ops[172]: 'l-store-copy tmp%3#0 0'
debug: Replaced modify.ops[174]: 'v-load tmp%3#0' with 'l-load tmp%3#0'
debug: Inserted modify.ops[182]: 'l-store-copy data_up_to_item%2#0 0'
debug: Replaced modify.ops[184]: 'v-load data_up_to_item%2#0' with 'l-load data_up_to_item%2#0'
debug: Inserted modify.ops[204]: 'l-store-copy tmp%5#0 0'
debug: Replaced modify.ops[206]: 'v-load tmp%5#0' with 'l-load tmp%5#0'
debug: Inserted modify.ops[214]: 'l-store-copy array_head_and_tail%3#0 0'
debug: Replaced modify.ops[216]: 'v-load array_head_and_tail%3#0' with 'l-load array_head_and_tail%3#0'
debug: Inserted modify.ops[223]: 'l-store-copy array_length%3#0 0'
debug: Replaced modify.ops[225]: 'v-load array_length%3#0' with 'l-load array_length%3#0'
debug: Inserted modify.ops[245]: 'l-store-copy tmp%6#0 0'
debug: Replaced modify.ops[247]: 'v-load tmp%6#0' with 'l-load tmp%6#0'
debug: Inserted modify.ops[255]: 'l-store-copy data_up_to_item%3#0 0'
debug: Replaced modify.ops[257]: 'v-load data_up_to_item%3#0' with 'l-load data_up_to_item%3#0'
debug: Inserted modify.ops[3]: 'l-store-copy maybe_exists%0#0 1'
debug: Replaced modify.ops[6]: 'v-load maybe_exists%0#0' with 'l-load maybe_exists%0#0'
debug: Inserted modify.ops[31]: 'l-store-copy next_item_offset%0#0 0'
debug: Replaced modify.ops[34]: 'v-load next_item_offset%0#0' with 'l-load next_item_offset%0#0'
debug: Inserted modify.ops[57]: 'l-store-copy updated_data%0#0 0'
debug: Replaced modify.ops[60]: 'v-load updated_data%0#0' with 'l-load updated_data%0#0'
debug: Inserted modify.ops[63]: 'l-store-copy updated_value%0#0 0'
debug: Replaced modify.ops[66]: 'v-load updated_value%0#0' with 'l-load updated_value%0#0'
debug: Inserted modify.ops[75]: 'l-store-copy maybe_exists%1#0 1'
debug: Replaced modify.ops[78]: 'v-load maybe_exists%1#0' with 'l-load maybe_exists%1#0'
debug: Inserted modify.ops[103]: 'l-store-copy next_item_offset%1#0 0'
debug: Replaced modify.ops[106]: 'v-load next_item_offset%1#0' with 'l-load next_item_offset%1#0'
debug: Inserted modify.ops[129]: 'l-store-copy updated_data%1#0 0'
debug: Replaced modify.ops[132]: 'v-load updated_data%1#0' with 'l-load updated_data%1#0'
debug: Inserted modify.ops[142]: 'l-store-copy maybe_exists%2#0 1'
debug: Replaced modify.ops[145]: 'v-load maybe_exists%2#0' with 'l-load maybe_exists%2#0'
debug: Inserted modify.ops[170]: 'l-store-copy next_item_offset%2#0 0'
debug: Replaced modify.ops[173]: 'v-load next_item_offset%2#0' with 'l-load next_item_offset%2#0'
debug: Inserted modify.ops[196]: 'l-store-copy updated_data%2#0 0'
debug: Replaced modify.ops[199]: 'v-load updated_data%2#0' with 'l-load updated_data%2#0'
debug: Inserted modify.ops[210]: 'l-store-copy tmp%4#0 0'
debug: Replaced modify.ops[213]: 'v-load tmp%4#0' with 'l-load tmp%4#0'
debug: Inserted modify.ops[219]: 'l-store-copy maybe_exists%3#0 1'
debug: Replaced modify.ops[222]: 'v-load maybe_exists%3#0' with 'l-load maybe_exists%3#0'
debug: Inserted modify.ops[247]: 'l-store-copy next_item_offset%3#0 0'
debug: Replaced modify.ops[250]: 'v-load next_item_offset%3#0' with 'l-load next_item_offset%3#0'
debug: Inserted modify.ops[273]: 'l-store-copy updated_data%3#0 0'
debug: Replaced modify.ops[276]: 'v-load updated_data%3#0' with 'l-load updated_data%3#0'
debug: Inserted modify.ops[5]: 'l-store-copy maybe_value%0#0 1'
debug: Replaced modify.ops[9]: 'v-load maybe_value%0#0' with 'l-load maybe_value%0#0'
debug: Inserted modify.ops[27]: 'l-store-copy array_head_and_tail%0#0 0'
debug: Replaced modify.ops[30]: 'v-load array_head_and_tail%0#0' with 'l-load array_head_and_tail%0#0'
debug: Inserted modify.ops[39]: 'l-store-copy end_offset%0#0 0'
debug: Replaced modify.ops[43]: 'v-load end_offset%0#0' with 'l-load end_offset%0#0'
debug: Inserted modify.ops[50]: 'l-store-copy item_offset%1#0 0'
debug: Replaced modify.ops[54]: 'v-load item_offset%1#0' with 'l-load item_offset%1#0'
debug: Inserted modify.ops[81]: 'l-store-copy maybe_value%1#0 1'
debug: Replaced modify.ops[85]: 'v-load maybe_value%1#0' with 'l-load maybe_value%1#0'
debug: Inserted modify.ops[103]: 'l-store-copy array_head_and_tail%1#0 0'
debug: Replaced modify.ops[106]: 'v-load array_head_and_tail%1#0' with 'l-load array_head_and_tail%1#0'
debug: Inserted modify.ops[115]: 'l-store-copy end_offset%1#0 0'
debug: Replaced modify.ops[119]: 'v-load end_offset%1#0' with 'l-load end_offset%1#0'
debug: Inserted modify.ops[126]: 'l-store-copy item_offset%3#0 0'
debug: Replaced modify.ops[130]: 'v-load item_offset%3#0' with 'l-load item_offset%3#0'
debug: Inserted modify.ops[143]: 'l-store-copy updated_value%1#0 0'
debug: Replaced modify.ops[147]: 'v-load updated_value%1#0' with 'l-load updated_value%1#0'
debug: Inserted modify.ops[153]: 'l-store-copy maybe_value%2#0 1'
debug: Replaced modify.ops[157]: 'v-load maybe_value%2#0' with 'l-load maybe_value%2#0'
debug: Inserted modify.ops[175]: 'l-store-copy array_head_and_tail%2#0 0'
debug: Replaced modify.ops[178]: 'v-load array_head_and_tail%2#0' with 'l-load array_head_and_tail%2#0'
debug: Inserted modify.ops[187]: 'l-store-copy end_offset%2#0 0'
debug: Replaced modify.ops[191]: 'v-load end_offset%2#0' with 'l-load end_offset%2#0'
debug: Inserted modify.ops[198]: 'l-store-copy item_offset%5#0 0'
debug: Replaced modify.ops[202]: 'v-load item_offset%5#0' with 'l-load item_offset%5#0'
debug: Inserted modify.ops[234]: 'l-store-copy maybe_value%3#0 1'
debug: Replaced modify.ops[238]: 'v-load maybe_value%3#0' with 'l-load maybe_value%3#0'
debug: Inserted modify.ops[256]: 'l-store-copy array_head_and_tail%3#0 0'
debug: Replaced modify.ops[259]: 'v-load array_head_and_tail%3#0' with 'l-load array_head_and_tail%3#0'
debug: Inserted modify.ops[268]: 'l-store-copy end_offset%3#0 0'
debug: Replaced modify.ops[272]: 'v-load end_offset%3#0' with 'l-load end_offset%3#0'
debug: Inserted modify.ops[279]: 'l-store-copy item_offset%7#0 0'
debug: Replaced modify.ops[283]: 'v-load item_offset%7#0' with 'l-load item_offset%7#0'
debug: Inserted modify.ops[298]: 'l-store-copy tmp%5#0 0'
debug: Replaced modify.ops[301]: 'v-load tmp%5#0' with 'l-load tmp%5#0'
debug: Inserted modify.ops[48]: 'l-store-copy tmp%0#0 0'
debug: Replaced modify.ops[53]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted modify.ops[125]: 'l-store-copy tmp%2#0 0'
debug: Replaced modify.ops[130]: 'v-load tmp%2#0' with 'l-load tmp%2#0'
debug: Inserted modify.ops[198]: 'l-store-copy tmp%3#0 0'
debug: Replaced modify.ops[203]: 'v-load tmp%3#0' with 'l-load tmp%3#0'
debug: Inserted modify.ops[280]: 'l-store-copy tmp%6#0 0'
debug: Replaced modify.ops[285]: 'v-load tmp%6#0' with 'l-load tmp%6#0'
debug: Inserted modify.ops[29]: 'l-store-copy end_of_array%0#0 1'
debug: Replaced modify.ops[36]: 'v-load end_of_array%0#0' with 'l-load end_of_array%0#0'
debug: Inserted modify.ops[107]: 'l-store-copy end_of_array%1#0 1'
debug: Replaced modify.ops[114]: 'v-load end_of_array%1#0' with 'l-load end_of_array%1#0'
debug: Inserted modify.ops[181]: 'l-store-copy end_of_array%2#0 1'
debug: Replaced modify.ops[188]: 'v-load end_of_array%2#0' with 'l-load end_of_array%2#0'
debug: Inserted modify.ops[221]: 'l-store-copy updated_value%2#0 0'
debug: Replaced modify.ops[227]: 'v-load updated_value%2#0' with 'l-load updated_value%2#0'
debug: Inserted modify.ops[265]: 'l-store-copy end_of_array%3#0 1'
debug: Replaced modify.ops[272]: 'v-load end_of_array%3#0' with 'l-load end_of_array%3#0'
debug: Inserted modify.ops[305]: 'l-store-copy updated_value%3#0 0'
debug: Replaced modify.ops[312]: 'v-load updated_value%3#0' with 'l-load updated_value%3#0'
debug: Inserted modify.ops[10]: 'l-store-copy maybe_value%0#0 0'
debug: Replaced modify.ops[18]: 'v-load maybe_value%0#0' with 'l-load maybe_value%0#0'
debug: Inserted modify.ops[89]: 'l-store-copy maybe_value%1#0 0'
debug: Replaced modify.ops[97]: 'v-load maybe_value%1#0' with 'l-load maybe_value%1#0'
debug: Inserted modify.ops[164]: 'l-store-copy maybe_value%2#0 0'
debug: Replaced modify.ops[172]: 'v-load maybe_value%2#0' with 'l-load maybe_value%2#0'
debug: Inserted modify.ops[249]: 'l-store-copy maybe_value%3#0 0'
debug: Replaced modify.ops[257]: 'v-load maybe_value%3#0' with 'l-load maybe_value%3#0'
debug: Inserted modify.ops[33]: 'l-store-copy array_head_and_tail%0#0 1'
debug: Replaced modify.ops[44]: 'v-load array_head_and_tail%0#0' with 'l-load array_head_and_tail%0#0'
debug: Inserted modify.ops[113]: 'l-store-copy array_head_and_tail%1#0 1'
debug: Replaced modify.ops[124]: 'v-load array_head_and_tail%1#0' with 'l-load array_head_and_tail%1#0'
debug: Inserted modify.ops[189]: 'l-store-copy array_head_and_tail%2#0 1'
debug: Replaced modify.ops[200]: 'v-load array_head_and_tail%2#0' with 'l-load array_head_and_tail%2#0'
debug: Inserted modify.ops[275]: 'l-store-copy array_head_and_tail%3#0 1'
debug: Replaced modify.ops[286]: 'v-load array_head_and_tail%3#0' with 'l-load array_head_and_tail%3#0'
debug: Inserted modify.ops[26]: 'l-store-copy has_next%0#0 0'
debug: Replaced modify.ops[41]: 'v-load has_next%0#0' with 'l-load has_next%0#0'
debug: Inserted modify.ops[107]: 'l-store-copy has_next%1#0 0'
debug: Replaced modify.ops[122]: 'v-load has_next%1#0' with 'l-load has_next%1#0'
debug: Inserted modify.ops[184]: 'l-store-copy has_next%2#0 0'
debug: Replaced modify.ops[199]: 'v-load has_next%2#0' with 'l-load has_next%2#0'
debug: Inserted modify.ops[271]: 'l-store-copy has_next%3#0 0'
debug: Replaced modify.ops[286]: 'v-load has_next%3#0' with 'l-load has_next%3#0'
debug: Inserted modify.ops[15]: 'l-store-copy array_head_and_tail%0#0 1'
debug: Replaced modify.ops[29]: 'v-load array_head_and_tail%0#0' with 'l-load array_head_and_tail%0#0'
debug: Inserted modify.ops[97]: 'l-store-copy array_head_and_tail%1#0 1'
debug: Replaced modify.ops[111]: 'v-load array_head_and_tail%1#0' with 'l-load array_head_and_tail%1#0'
debug: Inserted modify.ops[175]: 'l-store-copy array_head_and_tail%2#0 1'
debug: Replaced modify.ops[189]: 'v-load array_head_and_tail%2#0' with 'l-load array_head_and_tail%2#0'
debug: Inserted modify.ops[263]: 'l-store-copy array_head_and_tail%3#0 1'
debug: Replaced modify.ops[277]: 'v-load array_head_and_tail%3#0' with 'l-load array_head_and_tail%3#0'
debug: Inserted modify.ops[18]: 'l-store-copy item_offset%0#0 2'
debug: Replaced modify.ops[48]: 'v-load item_offset%0#0' with 'l-load item_offset%0#0'
debug: Inserted modify.ops[101]: 'l-store-copy item_offset%2#0 2'
debug: Replaced modify.ops[131]: 'v-load item_offset%2#0' with 'l-load item_offset%2#0'
debug: Inserted modify.ops[180]: 'l-store-copy item_offset%4#0 2'
debug: Replaced modify.ops[210]: 'v-load item_offset%4#0' with 'l-load item_offset%4#0'
debug: Inserted modify.ops[269]: 'l-store-copy item_offset%6#0 2'
debug: Replaced modify.ops[299]: 'v-load item_offset%6#0' with 'l-load item_offset%6#0'
debug: Inserted modify.ops[21]: 'l-store-copy maybe_value%0#0 2'
debug: Replaced modify.ops[71]: 'v-load maybe_value%0#0' with 'l-load maybe_value%0#0'
debug: Inserted modify.ops[105]: 'l-store-copy maybe_value%1#0 2'
debug: Replaced modify.ops[155]: 'v-load maybe_value%1#0' with 'l-load maybe_value%1#0'
debug: Inserted modify.ops[185]: 'l-store-copy maybe_value%2#0 2'
debug: Replaced modify.ops[235]: 'v-load maybe_value%2#0' with 'l-load maybe_value%2#0'
debug: Inserted modify.ops[275]: 'l-store-copy maybe_value%3#0 2'
debug: Replaced modify.ops[325]: 'v-load maybe_value%3#0' with 'l-load maybe_value%3#0'
debug: Inserted modify.ops[256]: 'l-store-copy tmp%5#0 0'
debug: Replaced modify.ops[332]: 'v-load tmp%5#0' with 'l-load tmp%5#0'
debug: Inserted modify.ops[84]: 'l-store-copy tmp%1#0 0'
debug: Replaced modify.ops[162]: 'v-load tmp%1#0' with 'l-load tmp%1#0'
debug: Inserted get.ops[8]: 'l-store-copy tmp%0#0 0'
debug: Replaced get.ops[10]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted get.ops[29]: 'l-store-copy tmp%2#0 0'
debug: Replaced get.ops[31]: 'v-load tmp%2#0' with 'l-load tmp%2#0'
debug: Inserted get.ops[40]: 'l-store-copy tmp%3#0 0'
debug: Replaced get.ops[42]: 'v-load tmp%3#0' with 'l-load tmp%3#0'
debug: Inserted get.ops[47]: 'l-store-copy tmp%4#0 0'
debug: Replaced get.ops[49]: 'v-load tmp%4#0' with 'l-load tmp%4#0'
debug: Inserted get.ops[54]: 'l-store-copy tmp%5#0 0'
debug: Replaced get.ops[56]: 'v-load tmp%5#0' with 'l-load tmp%5#0'
debug: Inserted get.ops[3]: 'l-store-copy maybe_exists%0#0 1'
debug: Replaced get.ops[6]: 'v-load maybe_exists%0#0' with 'l-load maybe_exists%0#0'
debug: Inserted get.ops[15]: 'l-store-copy maybe_exists%1#0 1'
debug: Replaced get.ops[18]: 'v-load maybe_exists%1#0' with 'l-load maybe_exists%1#0'
debug: Inserted get.ops[22]: 'l-store-copy maybe_exists%2#0 1'
debug: Replaced get.ops[25]: 'v-load maybe_exists%2#0' with 'l-load maybe_exists%2#0'
debug: Inserted get.ops[28]: 'l-store-copy tmp%1#0 0'
debug: Replaced get.ops[31]: 'v-load tmp%1#0' with 'l-load tmp%1#0'
debug: Inserted get.ops[37]: 'l-store-copy maybe_exists%3#0 1'
debug: Replaced get.ops[40]: 'v-load maybe_exists%3#0' with 'l-load maybe_exists%3#0'
debug: Inserted get.ops[43]: 'l-store-copy a1#0 0'
debug: Replaced get.ops[50]: 'v-load a1#0' with 'l-load a1#0'
debug: Inserted get.ops[51]: 'l-store-copy a1#0 0'
debug: Replaced get.ops[58]: 'v-load a1#0' with 'l-load a1#0'
debug: Inserted get.ops[59]: 'l-store-copy a1#0 0'
debug: Replaced get.ops[66]: 'v-load a1#0' with 'l-load a1#0'
debug: Inserted get.ops[39]: 'l-store-copy a4#0 1'
debug: Replaced get.ops[61]: 'v-load a4#0' with 'l-load a4#0'
debug: Inserted get.ops[17]: 'l-store-copy a2#0 1'
debug: Replaced get.ops[46]: 'v-load a2#0' with 'l-load a2#0'
debug: Inserted get.ops[25]: 'l-store-copy a3#0 2'
debug: Replaced get.ops[55]: 'v-load a3#0' with 'l-load a3#0'
debug: Inserted get.ops[5]: 'l-store-copy a1#0 1'
debug: Replaced get.ops[46]: 'v-load a1#0' with 'l-load a1#0'
debug: Inserted opt_in.ops[10]: 'l-store-copy tmp%0#0 0'
debug: Replaced opt_in.ops[12]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted opt_in.ops[21]: 'l-store-copy tmp%2#0 0'
debug: Replaced opt_in.ops[23]: 'v-load tmp%2#0' with 'l-load tmp%2#0'
debug: Inserted opt_in.ops[17]: 'l-store-copy tmp%1#0 0'
debug: Replaced opt_in.ops[20]: 'v-load tmp%1#0' with 'l-load tmp%1#0'
debug: Inserted opt_in.ops[25]: 'l-store-copy tmp%2#0 0'
debug: Replaced opt_in.ops[28]: 'v-load tmp%2#0' with 'l-load tmp%2#0'
debug: Inserted dynamic_array_concat_dynamic_element_for_header@1.ops[3]: 'l-store-copy continue_looping%0#0 0'
debug: Replaced dynamic_array_concat_dynamic_element_for_header@1.ops[5]: 'v-load continue_looping%0#0' with 'l-load continue_looping%0#0'
debug: Inserted dynamic_array_concat_dynamic_element_for_body@2.ops[7]: 'l-store-copy tmp%1#0 0'
debug: Replaced dynamic_array_concat_dynamic_element_for_body@2.ops[9]: 'v-load tmp%1#0' with 'l-load tmp%1#0'
debug: Inserted dynamic_array_concat_dynamic_element_for_body@2.ops[11]: 'l-store-copy tmp%2#0 0'
debug: Replaced dynamic_array_concat_dynamic_element_for_body@2.ops[13]: 'v-load tmp%2#0' with 'l-load tmp%2#0'
debug: Inserted dynamic_array_concat_dynamic_element_for_body@2.ops[3]: 'l-store-copy item_offset#0 0'
debug: Replaced dynamic_array_concat_dynamic_element_for_body@2.ops[6]: 'v-load item_offset#0' with 'l-load item_offset#0'
debug: Inserted dynamic_array_concat_dynamic_element_for_body@2.ops[16]: 'l-store-copy tmp%3#0 0'
debug: Replaced dynamic_array_concat_dynamic_element_for_body@2.ops[19]: 'v-load tmp%3#0' with 'l-load tmp%3#0'
debug: Inserted dynamic_array_concat_dynamic_element_for_body@2.ops[2]: 'l-store-copy head_offset#0 1'
debug: Replaced dynamic_array_concat_dynamic_element_for_body@2.ops[23]: 'v-load head_offset#0' with 'l-load head_offset#0'
debug: Inserted dynamic_array_concat_dynamic_element_for_header@5.ops[3]: 'l-store-copy continue_looping%1#0 0'
debug: Replaced dynamic_array_concat_dynamic_element_for_header@5.ops[5]: 'v-load continue_looping%1#0' with 'l-load continue_looping%1#0'
debug: Inserted dynamic_array_concat_dynamic_element_for_body@6.ops[7]: 'l-store-copy tmp%5#0 0'
debug: Replaced dynamic_array_concat_dynamic_element_for_body@6.ops[9]: 'v-load tmp%5#0' with 'l-load tmp%5#0'
debug: Inserted dynamic_array_concat_dynamic_element_for_body@6.ops[11]: 'l-store-copy tmp%6#0 0'
debug: Replaced dynamic_array_concat_dynamic_element_for_body@6.ops[13]: 'v-load tmp%6#0' with 'l-load tmp%6#0'
debug: Inserted dynamic_array_concat_dynamic_element_for_body@6.ops[3]: 'l-store-copy item_offset#0 0'
debug: Replaced dynamic_array_concat_dynamic_element_for_body@6.ops[6]: 'v-load item_offset#0' with 'l-load item_offset#0'
debug: Inserted dynamic_array_concat_dynamic_element_for_body@6.ops[16]: 'l-store-copy tmp%7#0 0'
debug: Replaced dynamic_array_concat_dynamic_element_for_body@6.ops[19]: 'v-load tmp%7#0' with 'l-load tmp%7#0'
debug: Inserted dynamic_array_concat_dynamic_element_for_body@6.ops[2]: 'l-store-copy head_offset#0 1'
debug: Replaced dynamic_array_concat_dynamic_element_for_body@6.ops[23]: 'v-load head_offset#0' with 'l-load head_offset#0'
debug: Inserted dynamic_array_concat_dynamic_element_after_for@8.ops[3]: 'l-store-copy tmp%8#0 0'
debug: Replaced dynamic_array_concat_dynamic_element_after_for@8.ops[5]: 'v-load tmp%8#0' with 'l-load tmp%8#0'
debug: Inserted dynamic_array_concat_dynamic_element_after_for@8.ops[7]: 'l-store-copy tmp%9#0 0'
debug: Replaced dynamic_array_concat_dynamic_element_after_for@8.ops[9]: 'v-load tmp%9#0' with 'l-load tmp%9#0'
debug: Inserted dynamic_array_concat_dynamic_element_after_for@8.ops[11]: 'l-store-copy tmp%10#0 0'
debug: Replaced dynamic_array_concat_dynamic_element_after_for@8.ops[13]: 'v-load tmp%10#0' with 'l-load tmp%10#0'
debug: Inserted dynamic_array_concat_dynamic_element_after_for@8.ops[37]: 'l-store-copy tmp%19#0 0'
debug: Replaced dynamic_array_concat_dynamic_element_after_for@8.ops[39]: 'v-load tmp%19#0' with 'l-load tmp%19#0'
debug: Inserted dynamic_array_concat_dynamic_element_after_for@8.ops[21]: 'l-store-copy tmp%14#0 0'
debug: Replaced dynamic_array_concat_dynamic_element_after_for@8.ops[24]: 'v-load tmp%14#0' with 'l-load tmp%14#0'
debug: Inserted dynamic_array_concat_dynamic_element_after_for@8.ops[34]: 'l-store-copy tmp%18#0 0'
debug: Replaced dynamic_array_concat_dynamic_element_after_for@8.ops[37]: 'v-load tmp%18#0' with 'l-load tmp%18#0'
debug: Inserted dynamic_array_concat_dynamic_element_after_for@8.ops[29]: 'l-store-copy tmp%17#0 0'
debug: Replaced dynamic_array_concat_dynamic_element_after_for@8.ops[33]: 'v-load tmp%17#0' with 'l-load tmp%17#0'
debug: Inserted dynamic_array_concat_dynamic_element_after_for@8.ops[16]: 'l-store-copy tmp%11#0 0'
debug: Replaced dynamic_array_concat_dynamic_element_after_for@8.ops[24]: 'v-load tmp%11#0' with 'l-load tmp%11#0'
debug: Inserted dynamic_array_concat_dynamic_element_after_for@8.ops[27]: 'l-store-copy tmp%15#0 0'
debug: Replaced dynamic_array_concat_dynamic_element_after_for@8.ops[39]: 'v-load tmp%15#0' with 'l-load tmp%15#0'
debug: Inserted dynamic_array_replace_dynamic_element.ops[2]: 'l-store-copy size_b#0 0'
debug: Replaced dynamic_array_replace_dynamic_element.ops[4]: 'v-load size_b#0' with 'l-load size_b#0'
debug: Inserted dynamic_array_replace_dynamic_element.ops[21]: 'l-store-copy tmp%1#1 0'
debug: Replaced dynamic_array_replace_dynamic_element.ops[23]: 'v-load tmp%1#1' with 'l-load tmp%1#1'
debug: Inserted dynamic_array_replace_dynamic_element.ops[37]: 'l-store-copy tmp%3#0 0'
debug: Replaced dynamic_array_replace_dynamic_element.ops[39]: 'v-load tmp%3#0' with 'l-load tmp%3#0'
debug: Inserted dynamic_array_replace_dynamic_element.ops[47]: 'l-store-copy end_offset#0 0'
debug: Replaced dynamic_array_replace_dynamic_element.ops[49]: 'v-load end_offset#0' with 'l-load end_offset#0'
debug: Inserted dynamic_array_replace_dynamic_element.ops[60]: 'l-store-copy tmp%4#0 0'
debug: Replaced dynamic_array_replace_dynamic_element.ops[62]: 'v-load tmp%4#0' with 'l-load tmp%4#0'
debug: Inserted dynamic_array_replace_dynamic_element.ops[13]: 'l-store-copy tmp%0#1 0'
debug: Replaced dynamic_array_replace_dynamic_element.ops[16]: 'v-load tmp%0#1' with 'l-load tmp%0#1'
debug: Inserted dynamic_array_replace_dynamic_element.ops[27]: 'l-store-copy head_offset#0 0'
debug: Replaced dynamic_array_replace_dynamic_element.ops[30]: 'v-load head_offset#0' with 'l-load head_offset#0'
debug: Inserted dynamic_array_replace_dynamic_element.ops[72]: 'l-store-copy tmp%6#0 0'
debug: Replaced dynamic_array_replace_dynamic_element.ops[75]: 'v-load tmp%6#0' with 'l-load tmp%6#0'
debug: Inserted dynamic_array_replace_dynamic_element.ops[44]: 'l-store-copy is_before_end#0 0'
debug: Replaced dynamic_array_replace_dynamic_element.ops[48]: 'v-load is_before_end#0' with 'l-load is_before_end#0'
debug: Inserted dynamic_array_replace_dynamic_element.ops[30]: 'l-store-copy array_head_and_tail#0 1'
debug: Replaced dynamic_array_replace_dynamic_element.ops[34]: 'v-load array_head_and_tail#0' with 'l-load array_head_and_tail#0'
debug: Inserted dynamic_array_replace_dynamic_element.ops[9]: 'l-store-copy array_head_and_tail#0 0'
debug: Replaced dynamic_array_replace_dynamic_element.ops[16]: 'v-load array_head_and_tail#0' with 'l-load array_head_and_tail#0'
debug: Inserted dynamic_array_replace_dynamic_element.ops[70]: 'l-store-copy tmp%5#0 0'
debug: Replaced dynamic_array_replace_dynamic_element.ops[78]: 'v-load tmp%5#0' with 'l-load tmp%5#0'
debug: Inserted dynamic_array_replace_dynamic_element.ops[56]: 'l-store-copy original_offset#0 1'
debug: Replaced dynamic_array_replace_dynamic_element.ops[64]: 'v-load original_offset#0' with 'l-load original_offset#0'
debug: Inserted dynamic_array_replace_dynamic_element.ops[37]: 'l-store-copy end_of_tail#0 0'
debug: Replaced dynamic_array_replace_dynamic_element.ops[49]: 'v-load end_of_tail#0' with 'l-load end_of_tail#0'
debug: Inserted dynamic_array_replace_dynamic_element.ops[64]: 'l-store-copy array_head_and_tail#0 1'
debug: Replaced dynamic_array_replace_dynamic_element.ops[75]: 'v-load array_head_and_tail#0' with 'l-load array_head_and_tail#0'
debug: Inserted dynamic_array_replace_dynamic_element.ops[17]: 'l-store-copy array_head_and_tail#0 1'
debug: Replaced dynamic_array_replace_dynamic_element.ops[31]: 'v-load array_head_and_tail#0' with 'l-load array_head_and_tail#0'
debug: Inserted dynamic_array_replace_dynamic_element.ops[35]: 'l-store-copy next_item_offset#0 1'
debug: Replaced dynamic_array_replace_dynamic_element.ops[52]: 'v-load next_item_offset#0' with 'l-load next_item_offset#0'
debug: Inserted dynamic_array_replace_dynamic_element.ops[58]: 'l-store-copy end_offset#0 0'
debug: Replaced dynamic_array_replace_dynamic_element.ops[79]: 'v-load end_offset#0' with 'l-load end_offset#0'
debug: Inserted dynamic_array_replace_dynamic_element.ops[38]: 'l-store-copy array_head_and_tail#0 1'
debug: Replaced dynamic_array_replace_dynamic_element.ops[67]: 'v-load array_head_and_tail#0' with 'l-load array_head_and_tail#0'
debug: Inserted dynamic_array_replace_dynamic_element.ops[53]: 'l-store-copy end_of_tail#0 3'
debug: Replaced dynamic_array_replace_dynamic_element.ops[82]: 'v-load end_of_tail#0' with 'l-load end_of_tail#0'
debug: Inserted dynamic_array_replace_dynamic_element.ops[6]: 'l-store-copy array_length#0 0'
debug: Replaced dynamic_array_replace_dynamic_element.ops[43]: 'v-load array_length#0' with 'l-load array_length#0'
debug: Inserted dynamic_array_replace_dynamic_element.ops[21]: 'l-store-copy original_offset#0 2'
debug: Replaced dynamic_array_replace_dynamic_element.ops[63]: 'v-load original_offset#0' with 'l-load original_offset#0'
debug: Inserted dynamic_array_replace_dynamic_element.ops[45]: 'l-store-copy array_length#0 4'
debug: Replaced dynamic_array_replace_dynamic_element.ops[93]: 'v-load array_length#0' with 'l-load array_length#0'
debug: Inserted dynamic_array_replace_dynamic_element_for_header@2.ops[3]: 'l-store-copy continue_looping%0#0 0'
debug: Replaced dynamic_array_replace_dynamic_element_for_header@2.ops[5]: 'v-load continue_looping%0#0' with 'l-load continue_looping%0#0'
debug: Inserted dynamic_array_replace_dynamic_element_for_body@3.ops[3]: 'l-store-copy tail_offset#0 0'
debug: Replaced dynamic_array_replace_dynamic_element_for_body@3.ops[5]: 'v-load tail_offset#0' with 'l-load tail_offset#0'
debug: Inserted dynamic_array_replace_dynamic_element_for_body@3.ops[8]: 'l-store-copy tail_offset#0 0'
debug: Replaced dynamic_array_replace_dynamic_element_for_body@3.ops[10]: 'v-load tail_offset#0' with 'l-load tail_offset#0'
debug: Inserted dynamic_array_replace_dynamic_element_for_body@3.ops[13]: 'l-store-copy tail_offset#0 0'
debug: Replaced dynamic_array_replace_dynamic_element_for_body@3.ops[15]: 'v-load tail_offset#0' with 'l-load tail_offset#0'
debug: Inserted dynamic_array_replace_dynamic_element_for_body@3.ops[17]: 'l-store-copy tmp%10#0 0'
debug: Replaced dynamic_array_replace_dynamic_element_for_body@3.ops[19]: 'v-load tmp%10#0' with 'l-load tmp%10#0'
debug: Inserted dynamic_array_replace_dynamic_element_for_body@3.ops[21]: 'l-store-copy tail_offset_bytes#0 0'
debug: Replaced dynamic_array_replace_dynamic_element_for_body@3.ops[25]: 'v-load tail_offset_bytes#0' with 'l-load tail_offset_bytes#0'
debug: Inserted dynamic_array_replace_dynamic_element_for_body@3.ops[25]: 'l-store-copy head_offset#0 2'
debug: Replaced dynamic_array_replace_dynamic_element_for_body@3.ops[29]: 'v-load head_offset#0' with 'l-load head_offset#0'
debug: Inserted dynamic_array_replace_dynamic_element_for_body@3.ops[1]: 'l-store-copy new_head_and_tail#0 0'
debug: Replaced dynamic_array_replace_dynamic_element_for_body@3.ops[24]: 'v-load new_head_and_tail#0' with 'l-load new_head_and_tail#0'
debug: Inserted dynamic_array_replace_dynamic_element_for_body@3.ops[3]: 'l-store-copy head_offset#0 2'
debug: Replaced dynamic_array_replace_dynamic_element_for_body@3.ops[26]: 'v-load head_offset#0' with 'l-load head_offset#0'
debug: Inserted dynamic_array_replace_dynamic_element_after_for@5.ops[3]: 'l-store-copy tmp%2#0 0'
debug: Replaced dynamic_array_replace_dynamic_element_after_for@5.ops[5]: 'v-load tmp%2#0' with 'l-load tmp%2#0'
debug: Found 3 edge set/s for test_cases.state_mutations.contract.Contract.__algopy_entrypoint_with_init
debug: Allocated 1 variable/s to x-stack: tmp%0#1
debug: shared x-stack for main_append_route@5 -> main_after_inlined_test_cases.state_mutations.contract.Contract.__puya_arc4_router__@12: tmp%0#1
debug: shared x-stack for main_modify_route@6 -> main_after_inlined_test_cases.state_mutations.contract.Contract.__puya_arc4_router__@12: tmp%0#1
debug: shared x-stack for main_get_route@7 -> main_after_inlined_test_cases.state_mutations.contract.Contract.__puya_arc4_router__@12: tmp%0#1
debug: shared x-stack for main_opt_in@9 -> main_after_inlined_test_cases.state_mutations.contract.Contract.__puya_arc4_router__@12: tmp%0#1
debug: shared x-stack for main___algopy_default_create@10 -> main_after_inlined_test_cases.state_mutations.contract.Contract.__puya_arc4_router__@12: tmp%0#1
debug: shared x-stack for main_after_if_else@11 -> main_after_inlined_test_cases.state_mutations.contract.Contract.__puya_arc4_router__@12: tmp%0#1
debug: Found 4 edge set/s for _puya_lib.arc4.dynamic_array_concat_dynamic_element
debug: Found 2 edge set/s for _puya_lib.arc4.dynamic_array_replace_dynamic_element
debug: _puya_lib.arc4.dynamic_array_concat_dynamic_element f-stack entry: ['item_offset_adjustment#2']
debug: _puya_lib.arc4.dynamic_array_concat_dynamic_element f-stack on first store: ['new_head#0', 'item_offset_adjustment#0', 'tmp%0#0', 'head_offset#0']
debug: _puya_lib.arc4.dynamic_array_replace_dynamic_element f-stack entry: []
debug: _puya_lib.arc4.dynamic_array_replace_dynamic_element f-stack on first store: ['size_b#0', 'head_offset#0', 'original_item_length#0', 'new_item_length#0', 'new_head_and_tail#0', 'tmp%7#0']
debug: optimizing TEAL subroutine test_cases.state_mutations.contract.Contract.__algopy_entrypoint_with_init() -> uint64:
debug: replacing `b main_after_inlined_test_cases.state_mutations.contract.Contract.__puya_arc4_router__@12` with `return`
debug: replacing `b main_after_inlined_test_cases.state_mutations.contract.Contract.__puya_arc4_router__@12` with `return`
debug: replacing `b main_after_inlined_test_cases.state_mutations.contract.Contract.__puya_arc4_router__@12` with `return`
debug: replacing `b main_after_inlined_test_cases.state_mutations.contract.Contract.__puya_arc4_router__@12` with `return`
debug: replacing `b main_after_inlined_test_cases.state_mutations.contract.Contract.__puya_arc4_router__@12` with `return`
debug: inlining single reference block main_abi_routing@4 into main
debug: inlining single reference block main_after_inlined_test_cases.state_mutations.contract.Contract.__puya_arc4_router__@12 into main_after_if_else@11
debug: removing explicit jump to fall-through block main_after_if_else@11
state_mutations/contract.py:36 debug: optimizing TEAL subroutine test_cases.state_mutations.contract.Contract.append() -> void:
state_mutations/contract.py:44 debug: optimizing TEAL subroutine test_cases.state_mutations.contract.Contract.modify() -> void:
state_mutations/contract.py:51 debug: optimizing TEAL subroutine test_cases.state_mutations.contract.Contract.get() -> bytes:
state_mutations/contract.py:29 debug: optimizing TEAL subroutine test_cases.state_mutations.contract.Contract.opt_in() -> void:
debug: optimizing TEAL subroutine _puya_lib.arc4.dynamic_array_concat_dynamic_element(array_items_count: uint64, array_head_and_tail: bytes, new_items_count: uint64, new_head_and_tail: bytes) -> bytes:
debug: inlining single reference block dynamic_array_concat_dynamic_element_for_body@2 into dynamic_array_concat_dynamic_element_for_header@1
debug: inlining single reference block dynamic_array_concat_dynamic_element_for_body@6 into dynamic_array_concat_dynamic_element_for_header@5
debug: removing explicit jump to fall-through block dynamic_array_concat_dynamic_element_for_header@1
debug: removing explicit jump to fall-through block dynamic_array_concat_dynamic_element_for_header@5
debug: optimizing TEAL subroutine _puya_lib.arc4.dynamic_array_replace_dynamic_element(source: bytes, new_item: bytes, index: uint64) -> bytes:
debug: inlining single reference block dynamic_array_replace_dynamic_element_for_body@3 into dynamic_array_replace_dynamic_element_for_header@2
debug: removing explicit jump to fall-through block dynamic_array_replace_dynamic_element_for_header@2
debug: optimizing TEAL subroutine algopy.arc4.ARC4Contract.clear_state_program() -> uint64:
info: Writing state_mutations/out/Contract.arc32.json
info: Writing state_mutations/out/Contract.arc56.json
info: Writing state_mutations/out/Contract.approval.teal
info: Writing state_mutations/out/Contract.clear.teal
info: Writing state_mutations/out/Contract.approval.bin
info: Writing state_mutations/out/Contract.clear.bin
info: Writing state_mutations/out/Contract.approval.puya.map
info: Writing state_mutations/out/Contract.clear.puya.map
info: writing state_mutations/out/client_Contract.py