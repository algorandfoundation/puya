// Op                                                     // Op Description                                Stack (out)                                                                 Source code                             Source line

#pragma version 10

// test_cases.literals.folding.LiteralFolding.approval_program() -> uint64:
main_block@0:
    callsub compare_str                                   //                                                                                                                           compare_str()                           literals/folding.py:95
    int 1                                                 //                                               1                                                                           True                                    literals/folding.py:102
    return                                                //                                                                                                                           return True                             literals/folding.py:102


// test_cases.literals.folding.compare_str() -> void:
compare_str:
    proto 0 0                                             //                                                                                                                           @subroutine\ndef compare_str() -> None: literals/folding.py:11-12

compare_str_block@0:
    byte "a"                                              //                                               "a"                                                                         "a"                                     literals/folding.py:26
    byte "b"                                              //                                               "a","b"                                                                     String("b")                             literals/folding.py:23
    callsub is_substring                                  //                                               {is_substring}                                                              "a" not in b                            literals/folding.py:26
                                                          // virtual: store tmp%7#0 to l-stack (no copy)   tmp%7#0                                                                     "a" not in b                            literals/folding.py:26
                                                          // virtual: load tmp%7#0 from l-stack (no copy)  tmp%7#0                                                                     "a" not in b                            literals/folding.py:26
    !                                                     //                                               {!}                                                                         "a" not in b                            literals/folding.py:26
                                                          // virtual: store tmp%8#0 to l-stack (no copy)   tmp%8#0                                                                     "a" not in b                            literals/folding.py:26
                                                          // virtual: load tmp%8#0 from l-stack (no copy)  tmp%8#0                                                                     assert "a" not in b                     literals/folding.py:26
    assert                                                //                                                                                                                           assert "a" not in b                     literals/folding.py:26
    byte "a"                                              //                                               "a"                                                                         "a"                                     literals/folding.py:27
    byte "b"                                              //                                               "a","b"                                                                     String("b")                             literals/folding.py:23
    callsub is_substring                                  //                                               {is_substring}                                                              "a" in b                                literals/folding.py:27
                                                          // virtual: store tmp%9#0 to l-stack (no copy)   tmp%9#0                                                                     "a" in b                                literals/folding.py:27
                                                          // virtual: load tmp%9#0 from l-stack (no copy)  tmp%9#0                                                                     not ("a" in b)                          literals/folding.py:27
    !                                                     //                                               {!}                                                                         not ("a" in b)                          literals/folding.py:27
                                                          // virtual: store tmp%10#0 to l-stack (no copy)  tmp%10#0                                                                    not ("a" in b)                          literals/folding.py:27
                                                          // virtual: load tmp%10#0 from l-stack (no copy) tmp%10#0                                                                    assert not ("a" in b)                   literals/folding.py:27
    assert                                                //                                                                                                                           assert not ("a" in b)                   literals/folding.py:27
    byte "a"                                              //                                               "a"                                                                         "a"                                     literals/folding.py:28
    byte "abc"                                            //                                               "a","abc"                                                                   String("abc")                           literals/folding.py:28
    callsub is_substring                                  //                                               {is_substring}                                                              "a" in String("abc")                    literals/folding.py:28
                                                          // virtual: store tmp%11#0 to l-stack (no copy)  tmp%11#0                                                                    "a" in String("abc")                    literals/folding.py:28
                                                          // virtual: load tmp%11#0 from l-stack (no copy) tmp%11#0                                                                    assert "a" in String("abc")             literals/folding.py:28
    assert                                                //                                                                                                                           assert "a" in String("abc")             literals/folding.py:28
    retsub                                                //


// _puya_lib.bytes_.is_substring(item: bytes, sequence: bytes) -> uint64:
is_substring:
    proto 2 1                                             //                                               (洧도) item#0,sequence#0 |                                                                                             INTERNAL:4-5
    byte ""                                               // allocate 1 to stack                           (洧도) item#0,sequence#0 | (洧뎽) tmp%1#0 |

is_substring_block@0:
    int 0                                                 //                                               (洧도) item#0,sequence#0 | (洧뎽) tmp%1#0 | 0                                                                             INTERNAL:10
                                                          // virtual: store start#0 to f-stack             (洧도) item#0,sequence#0 | (洧뎽) tmp%1#0,start#0 |                                                                       INTERNAL:10
    // Implicit fall through to is_substring_while_top@1  //                                               (洧도) item#0,sequence#0 | (洧뎽) tmp%1#0,start#0 |

is_substring_while_top@1:
    frame_dig -2                                          // load item#0 from parameters                   (洧도) item#0,sequence#0 | (洧뎽) tmp%1#0,start#0 | item#0                                                                INTERNAL:11
    len                                                   //                                               (洧도) item#0,sequence#0 | (洧뎽) tmp%1#0,start#0 | {len}                                                                 INTERNAL:11
                                                          // virtual: store tmp%0#0 to l-stack (no copy)   (洧도) item#0,sequence#0 | (洧뎽) tmp%1#0,start#0 | tmp%0#0                                                               INTERNAL:11
    frame_dig 1                                           // load start#0 from f-stack                     (洧도) item#0,sequence#0 | (洧뎽) tmp%1#0,start#0 | tmp%0#0,start#0                                                       INTERNAL:11
    uncover 1                                             // load tmp%0#0 from l-stack (no copy)           (洧도) item#0,sequence#0 | (洧뎽) tmp%1#0,start#0 | start#0,tmp%0#0                                                       INTERNAL:11
    +                                                     //                                               (洧도) item#0,sequence#0 | (洧뎽) tmp%1#0,start#0 | {+}                                                                   INTERNAL:11
    dup                                                   // store tmp%1#0 to l-stack (copy)               (洧도) item#0,sequence#0 | (洧뎽) tmp%1#0,start#0 | tmp%1#0,tmp%1#0                                                       INTERNAL:11
    frame_bury 0                                          // store tmp%1#0 to f-stack                      (洧도) item#0,sequence#0 | (洧뎽) tmp%1#0,start#0 | tmp%1#0                                                               INTERNAL:11
    frame_dig -1                                          // load sequence#0 from parameters               (洧도) item#0,sequence#0 | (洧뎽) tmp%1#0,start#0 | tmp%1#0,sequence#0                                                    INTERNAL:11
    len                                                   //                                               (洧도) item#0,sequence#0 | (洧뎽) tmp%1#0,start#0 | tmp%1#0,{len}                                                         INTERNAL:11
                                                          // virtual: store tmp%2#0 to l-stack (no copy)   (洧도) item#0,sequence#0 | (洧뎽) tmp%1#0,start#0 | tmp%1#0,tmp%2#0                                                       INTERNAL:11
                                                          // virtual: load tmp%1#0 from l-stack (no copy)  (洧도) item#0,sequence#0 | (洧뎽) tmp%1#0,start#0 | tmp%2#0,tmp%1#0                                                       INTERNAL:11
                                                          // virtual: load tmp%2#0 from l-stack (no copy)  (洧도) item#0,sequence#0 | (洧뎽) tmp%1#0,start#0 | tmp%1#0,tmp%2#0                                                       INTERNAL:11
    <=                                                    //                                               (洧도) item#0,sequence#0 | (洧뎽) tmp%1#0,start#0 | {<=}                                                                  INTERNAL:11
                                                          // virtual: store tmp%3#0 to l-stack (no copy)   (洧도) item#0,sequence#0 | (洧뎽) tmp%1#0,start#0 | tmp%3#0                                                               INTERNAL:11
                                                          // virtual: load tmp%3#0 from l-stack (no copy)  (洧도) item#0,sequence#0 | (洧뎽) tmp%1#0,start#0 | tmp%3#0                                                               INTERNAL:11
    bz is_substring_after_while@5                         //                                               (洧도) item#0,sequence#0 | (洧뎽) tmp%1#0,start#0 |                                                                       INTERNAL:11
    // Implicit fall through to is_substring_while_body@2 //                                               (洧도) item#0,sequence#0 | (洧뎽) tmp%1#0,start#0 |                                                                       INTERNAL:11

is_substring_while_body@2:
    frame_dig -1                                          // load sequence#0 from parameters               (洧도) item#0,sequence#0 | (洧뎽) tmp%1#0,start#0 | sequence#0                                                            INTERNAL:12
    frame_dig 1                                           // load start#0 from f-stack                     (洧도) item#0,sequence#0 | (洧뎽) tmp%1#0,start#0 | sequence#0,start#0                                                    INTERNAL:12
    frame_dig 0                                           // load tmp%1#0 from f-stack                     (洧도) item#0,sequence#0 | (洧뎽) tmp%1#0,start#0 | sequence#0,start#0,tmp%1#0                                            INTERNAL:12
    substring3                                            //                                               (洧도) item#0,sequence#0 | (洧뎽) tmp%1#0,start#0 | {substring3}                                                          INTERNAL:12
                                                          // virtual: store tmp%6#0 to l-stack (no copy)   (洧도) item#0,sequence#0 | (洧뎽) tmp%1#0,start#0 | tmp%6#0                                                               INTERNAL:12
    frame_dig -2                                          // load item#0 from parameters                   (洧도) item#0,sequence#0 | (洧뎽) tmp%1#0,start#0 | tmp%6#0,item#0                                                        INTERNAL:12
    uncover 1                                             // load tmp%6#0 from l-stack (no copy)           (洧도) item#0,sequence#0 | (洧뎽) tmp%1#0,start#0 | item#0,tmp%6#0                                                        INTERNAL:12
    ==                                                    //                                               (洧도) item#0,sequence#0 | (洧뎽) tmp%1#0,start#0 | {==}                                                                  INTERNAL:12
                                                          // virtual: store tmp%7#0 to l-stack (no copy)   (洧도) item#0,sequence#0 | (洧뎽) tmp%1#0,start#0 | tmp%7#0                                                               INTERNAL:12
                                                          // virtual: load tmp%7#0 from l-stack (no copy)  (洧도) item#0,sequence#0 | (洧뎽) tmp%1#0,start#0 | tmp%7#0                                                               INTERNAL:12
    bz is_substring_after_if_else@4                       //                                               (洧도) item#0,sequence#0 | (洧뎽) tmp%1#0,start#0 |                                                                       INTERNAL:12
    // Implicit fall through to is_substring_if_body@3    //                                               (洧도) item#0,sequence#0 | (洧뎽) tmp%1#0,start#0 |                                                                       INTERNAL:12

is_substring_if_body@3:
    int 1                                                 //                                               (洧도) item#0,sequence#0 | (洧뎽) tmp%1#0,start#0 | 1                                                                     INTERNAL:13
    frame_bury 0
    retsub                                                //                                               1                                                                                                                   INTERNAL:13

is_substring_after_if_else@4:
    frame_dig 1                                           // load start#0 from f-stack                     (洧도) item#0,sequence#0 | (洧뎽) tmp%1#0,start#0 | start#0                                                               INTERNAL:14
    int 1                                                 //                                               (洧도) item#0,sequence#0 | (洧뎽) tmp%1#0,start#0 | start#0,1                                                             INTERNAL:14
    +                                                     //                                               (洧도) item#0,sequence#0 | (洧뎽) tmp%1#0,start#0 | {+}                                                                   INTERNAL:14
    frame_bury 1                                          // store start#0 to f-stack                      (洧도) item#0,sequence#0 | (洧뎽) tmp%1#0,start#0 |                                                                       INTERNAL:14
    b is_substring_while_top@1                            //                                               (洧도) item#0,sequence#0 | (洧뎽) tmp%1#0,start#0 |

is_substring_after_while@5:
    int 0                                                 //                                               (洧도) item#0,sequence#0 | (洧뎽) tmp%1#0,start#0 | 0                                                                     INTERNAL:15
    frame_bury 0
    retsub                                                //                                               0                                                                                                                   INTERNAL:15

