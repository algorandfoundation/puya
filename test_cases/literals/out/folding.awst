contract LiteralFolding
{
  approval_program(): bool
  {
    return true
  }
  
  clear_state_program(): bool
  {
    return true
  }
  
  subroutine unary_str(): void
  {
    assert(true)
    assert(true)
  }
  
  subroutine unary_bytes(): void
  {
    assert(true)
    assert(true)
  }
  
  subroutine unary_int(): void
  {
    assert(true)
    assert(true)
    assert(true)
    assert(true)
    assert(true)
  }
  
  subroutine compare_int(): void
  {
    assert(!(false))
    assert(true)
    assert(true)
    assert(true)
    assert(!(false))
    assert(!(false))
    one: uint64 = 1u
    assert(!(one == 0u))
    assert(one != 0u)
    assert(one > 0u)
    assert(one >= 0u)
    assert(!(one < 0u))
    assert(!(one <= 0u))
  }
  
  subroutine unary_bool(): void
  {
    assert(true)
    assert(true)
    assert(true)
    assert(true)
    assert(true)
  }
}