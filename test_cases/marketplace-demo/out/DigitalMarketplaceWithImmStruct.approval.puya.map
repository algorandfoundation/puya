{
  "version": 3,
  "sources": [
    "../marketplace_with_immutable_struct.py"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;AAkBY;;;;;;AAAJ;AAFR;;AAAA;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;AAAA;;;;;;;;;;;;;;;;;;;;AAAA;;AA0NK;;AAAA;AAAA;AAAA;;AAAA;AA1NL;;;AAAA;AAAA;;AAAA;;;AAAA;AA0NK;;;AAAA;;AAtCA;;AAAA;AAAA;AAAA;;AAAA;AApLL;;;AAAA;AAAA;;AAAA;;;AAAA;AAAA;;AAAA;;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAoLK;;;AAAA;;AA3BA;;AAAA;AAAA;AAAA;;AAAA;AAzJL;;;AAAA;AAAA;;AAAA;;;AAAA;AAyJK;;;AAAA;;AAlCA;;AAAA;AAAA;AAAA;;AAAA;AAvHL;;;AAAA;AAAA;;AAAA;;;AAAA;AAAA;;AAAA;;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAuHK;;;AAAA;;AAjBA;;AAAA;AAAA;AAAA;;AAAA;AAtGL;;;AAAA;AAAA;;AAAA;;;AAAA;AAAA;;;AAAA;AAsGK;;;AAAA;;AArBA;;AAAA;AAAA;AAAA;;AAAA;AAjFL;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAiFK;;;AAAA;;AAzBA;;AAAA;AAAA;AAAA;;AAAA;AAxDL;;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAwDK;;;AAAA;;AAbA;;AAAA;AAAA;AAAA;;AAAA;AA3CL;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;AA2CK;;;AAAA;;AAJA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;;;;;;;;;;;;AAAA;AAAA;;AAvCL;;AAAA;;;;;;;;;AA2CA;;;AAEmB;;AAAA;;AAAA;;AAAA;;AAAJ;AAAP;AAEO;;AAAA;;AAAoB;;AAApB;AAAP;AACO;;AAAA;;AAAkB;;AAAlB;AAAP;AAEA;AAEmB;;AACF;;;;;;;;;AAHjB;;;AAAA;;;AAAA;;AAMR;;;AAEe;;AAAA;;AAAkB;;AAAlB;AAAP;AACO;;AAAA;;AAAoB;;AAApB;AAAP;AACO;;AAAA;;AArDA;;AAqDA;AAAP;AAGU;;AACA;;AAAA;;AAFJ;AAAA;AAAA;;AAAA;AAAA;AAKY;AAAP;AAAA;AAAA;AAAA;AAAA;;AAAJ;AAAP;AAEO;;AAAA;;AAAe;;AAAf;AAAP;AACO;;AAAA;;AAAuB;;AAAvB;AAAP;AACO;;AAAA;;AAAP;AAAA;AAKW;;AAHU;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAIb;AAJa;AAAA;AAAA;;AAAA;AAAA;AAAA;AAArB;;AAQR;;;AAGkB;;AACA;;AAAA;;AAFJ;AAAA;AAAA;;AAAA;AAAA;AAMC;;AAAA;;AAAe;;AAAf;AAAP;AACO;;AAAA;;AAAuB;;AAAvB;AAAP;AACO;;AAAA;;AAAP;AAAA;AAEW;AAAA;;AAAA;AAAA;AAAA;AAAA;AAEH;AAAA;AAAA;AACY;;AAAA;;AAAA;AACT;;AAAA;;;AACM;;AAAA;;AAAA;AACH;;AAAA;AAAA;AAAA;;AAAA;AALO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAArB;;AAQR;;;AAGkB;;AADJ;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAMK;AAAA;AAAA;AAAA;AAAA;AAAA;AAEH;AAAA;AAAA;AACY;;AAAA;;AAAA;AACT;;AAAA;;;AACG;;AAAA;AAAA;AAJO;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAArB;;AAQR;;;AAEc;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAIN;AAAA;;AAAA;AACA;;AAAA;;AAAA;AAzG4C;;AAAA;;AAAA;AACE;;AAAR;;AAAA;AAC2B;AAAA;;AAAA;AAM9D;AAAP;AAoGO;;AAAA;;AAAkB;;AAAlB;AAAP;AACO;;AAAA;;AAAA;;AAAA;AAAP;AACO;;AAAA;;AAAA;AAAP;AAGQ;;AAAA;AAAA;AACY;;AAAA;;AAAA;AACT;;AAAA;;;AAEG;;AAAA;AAAA;AAAA;;AAAA;AALO;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAArB;AAQA;AAEmB;;;;;;;;;;;;AAFnB;;;AAAA;;;AAAA;;AAMR;;;AAGkB;;AADJ;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AACP;;;AAAA;AAAkB;;AAAlB;AAAX;;;AAEgB;;AAAA;AAAA;AAAA;AACA;AAAA;;AAAA;AACA;;AAAA;;AAAA;AA3IwC;AAAA;;AAAA;AACE;;AAAR;;AAAA;AAC2B;AAAA;;AAAA;AAM9D;AAAP;AAqII;;;;;;;AAAA;;;AAAA;;;AAAA;AAEJ;;AAAA;;AAEA;AAAsB;;AArKf;;;;;;AAqKP;;;AAAA;;;AAAA;AAEA;AAEmB;;AACF;;AAAA;AAAA;;;;;;;;;AAHjB;;;AAAA;;;AAAA;;AAMR;;;AAEc;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AACP;;;AAAA;AAAkB;;AAAlB;AAAX;;;AACmC;;AAAA;AAAA;;AAAA;AAAhB;;AAAA;;AAAA;AAAP;AAGI;AAAA;AAAA;AAEA;;AAAA;;AAAA;AAxKwC;;AAAA;AACE;;AAAR;;AAAA;AAC2B;AAAA;;AAAA;AAM9D;AAAP;AAmKI;;;;;;;AAAA;;;AAAA;;;AAAA;AAKA;;AAAA;;AAAA;AAhL4C;;AAAA;;AAAA;AACE;;AAAR;;AAAA;AAC2B;AAAA;;AAAA;AAM9D;AAAP;AA2KO;;AAAA;;AAAkB;;AAAlB;AAAP;AACO;;AAAA;;AAAoB;;AAApB;AAAP;AACO;;AAAA;;AAAA;AAAP;AAGc;;AAAA;AAAA;AAAA;AACG;AAAA;;AAAA;AACN;;AAHU;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAArB;;AAAA;AAAA;;AAQR;;;AAGkB;;AADJ;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AACH;AAAA;;;AAAA;AAAA;;AAAkB;;AAAlB;AAAP;AAEoC;AAAA;AAAA;AAAA;AAAA;;AAAoB;AAAA;AAAA;AAAA;;AAApB;AAArB;;;;;AAIX;;AAAA;AAAA;;AAAA;AACA;;AAAA;;AAAA;AA/M4C;;AAAA;;AAAA;AAAA;;AAAA;AACE;;AAAR;;AAAA;AAC2B;AAAA;;AAAA;AAM9D;AAAP;AA0MA;AAAsB;;;;;;AAAtB;;;AAAA;;;AAAA;AAEA;;;;;;;;;;;;;;;AAAA;;;AAAA;;;AAAA;AASiB;;AAAA;;AAAA;AACH;;AAAA;;AAAA;AACN;;AAAA;;AAAA;AALa;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAArB;;AAAA;AAAA;;;;",
  "op_pc_offset": 0,
  "pc_events": {
    "1": {
      "subroutine": "marketplace_with_immutable_struct.DigitalMarketplaceWithImmStruct.__algopy_entrypoint_with_init",
      "params": {},
      "block": "main",
      "stack_in": [],
      "op": "intcblock 1 0 4 48 50500"
    },
    "10": {
      "op": "bytecblock 0x6c697374696e6773"
    },
    "21": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "23": {
      "op": "bnz main_after_if_else@2",
      "stack_out": []
    },
    "26": {
      "op": "pushbytes \"init\"",
      "defined_out": [
        "\"init\""
      ],
      "stack_out": [
        "\"init\""
      ]
    },
    "32": {
      "op": "log",
      "stack_out": []
    },
    "33": {
      "block": "main_after_if_else@2",
      "stack_in": [],
      "op": "txn NumAppArgs",
      "defined_out": [
        "tmp%0#2"
      ],
      "stack_out": [
        "tmp%0#2"
      ]
    },
    "35": {
      "op": "bz main_bare_routing@14",
      "stack_out": []
    },
    "38": {
      "op": "pushbytess 0xd98ef6a9 0x56efcfb5 0x12f08c98 0x9b4b8234 0x5a05bc57 0x162fc232 0xcbc819e5 0x824d4bad 0xdd619204 // method \"getListingsMbr()uint64\", method \"allowAsset(pay,asset)void\", method \"firstDeposit(pay,axfer,uint64,uint64)void\", method \"deposit(axfer,uint64)void\", method \"setPrice(asset,uint64,uint64)void\", method \"buy(account,asset,uint64,pay,uint64)void\", method \"withdraw(asset,uint64)void\", method \"bid(account,asset,uint64,pay,uint64,uint64)void\", method \"acceptBid(asset,uint64)void\"",
      "defined_out": [
        "Method(acceptBid(asset,uint64)void)",
        "Method(allowAsset(pay,asset)void)",
        "Method(bid(account,asset,uint64,pay,uint64,uint64)void)",
        "Method(buy(account,asset,uint64,pay,uint64)void)",
        "Method(deposit(axfer,uint64)void)",
        "Method(firstDeposit(pay,axfer,uint64,uint64)void)",
        "Method(getListingsMbr()uint64)",
        "Method(setPrice(asset,uint64,uint64)void)",
        "Method(withdraw(asset,uint64)void)"
      ],
      "stack_out": [
        "Method(getListingsMbr()uint64)",
        "Method(allowAsset(pay,asset)void)",
        "Method(firstDeposit(pay,axfer,uint64,uint64)void)",
        "Method(deposit(axfer,uint64)void)",
        "Method(setPrice(asset,uint64,uint64)void)",
        "Method(buy(account,asset,uint64,pay,uint64)void)",
        "Method(withdraw(asset,uint64)void)",
        "Method(bid(account,asset,uint64,pay,uint64,uint64)void)",
        "Method(acceptBid(asset,uint64)void)"
      ]
    },
    "85": {
      "op": "txna ApplicationArgs 0",
      "defined_out": [
        "Method(acceptBid(asset,uint64)void)",
        "Method(allowAsset(pay,asset)void)",
        "Method(bid(account,asset,uint64,pay,uint64,uint64)void)",
        "Method(buy(account,asset,uint64,pay,uint64)void)",
        "Method(deposit(axfer,uint64)void)",
        "Method(firstDeposit(pay,axfer,uint64,uint64)void)",
        "Method(getListingsMbr()uint64)",
        "Method(setPrice(asset,uint64,uint64)void)",
        "Method(withdraw(asset,uint64)void)",
        "tmp%2#0"
      ],
      "stack_out": [
        "Method(getListingsMbr()uint64)",
        "Method(allowAsset(pay,asset)void)",
        "Method(firstDeposit(pay,axfer,uint64,uint64)void)",
        "Method(deposit(axfer,uint64)void)",
        "Method(setPrice(asset,uint64,uint64)void)",
        "Method(buy(account,asset,uint64,pay,uint64)void)",
        "Method(withdraw(asset,uint64)void)",
        "Method(bid(account,asset,uint64,pay,uint64,uint64)void)",
        "Method(acceptBid(asset,uint64)void)",
        "tmp%2#0"
      ]
    },
    "88": {
      "op": "match main_getListingsMbr_route@5 main_allowAsset_route@6 main_firstDeposit_route@7 main_deposit_route@8 main_setPrice_route@9 main_buy_route@10 main_withdraw_route@11 main_bid_route@12 main_acceptBid_route@13",
      "stack_out": []
    },
    "108": {
      "block": "main_after_if_else@16",
      "stack_in": [],
      "op": "intc_1 // 0",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "109": {
      "op": "return",
      "stack_out": []
    },
    "110": {
      "block": "main_acceptBid_route@13",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%69#0"
      ],
      "stack_out": [
        "tmp%69#0"
      ]
    },
    "112": {
      "op": "!",
      "defined_out": [
        "tmp%70#0"
      ],
      "stack_out": [
        "tmp%70#0"
      ]
    },
    "113": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "114": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%71#0"
      ],
      "stack_out": [
        "tmp%71#0"
      ]
    },
    "116": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "117": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded(uint8)%7#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint8)%7#0"
      ]
    },
    "120": {
      "op": "btoi",
      "defined_out": [
        "tmp%73#0"
      ],
      "stack_out": [
        "tmp%73#0"
      ]
    },
    "121": {
      "op": "txnas Assets",
      "defined_out": [
        "tmp%74#0"
      ],
      "stack_out": [
        "tmp%74#0"
      ]
    },
    "123": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "reinterpret_Encoded(uint64)%11#0",
        "tmp%74#0"
      ],
      "stack_out": [
        "tmp%74#0",
        "reinterpret_Encoded(uint64)%11#0"
      ]
    },
    "126": {
      "op": "btoi",
      "defined_out": [
        "tmp%74#0",
        "tmp%75#0"
      ],
      "stack_out": [
        "tmp%74#0",
        "tmp%75#0"
      ]
    },
    "127": {
      "callsub": "marketplace_with_immutable_struct.DigitalMarketplaceWithImmStruct.accept_bid",
      "op": "callsub accept_bid",
      "stack_out": []
    },
    "130": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "131": {
      "op": "return",
      "stack_out": []
    },
    "132": {
      "block": "main_bid_route@12",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%57#0"
      ],
      "stack_out": [
        "tmp%57#0"
      ]
    },
    "134": {
      "op": "!",
      "defined_out": [
        "tmp%58#0"
      ],
      "stack_out": [
        "tmp%58#0"
      ]
    },
    "135": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "136": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%59#0"
      ],
      "stack_out": [
        "tmp%59#0"
      ]
    },
    "138": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "139": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded(uint8)%5#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint8)%5#0"
      ]
    },
    "142": {
      "op": "btoi",
      "defined_out": [
        "tmp%61#0"
      ],
      "stack_out": [
        "tmp%61#0"
      ]
    },
    "143": {
      "op": "txnas Accounts",
      "defined_out": [
        "tmp%62#0"
      ],
      "stack_out": [
        "tmp%62#0"
      ]
    },
    "145": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "reinterpret_Encoded(uint8)%6#0",
        "tmp%62#0"
      ],
      "stack_out": [
        "tmp%62#0",
        "reinterpret_Encoded(uint8)%6#0"
      ]
    },
    "148": {
      "op": "btoi",
      "defined_out": [
        "tmp%62#0",
        "tmp%63#0"
      ],
      "stack_out": [
        "tmp%62#0",
        "tmp%63#0"
      ]
    },
    "149": {
      "op": "txnas Assets",
      "defined_out": [
        "tmp%62#0",
        "tmp%64#0"
      ],
      "stack_out": [
        "tmp%62#0",
        "tmp%64#0"
      ]
    },
    "151": {
      "op": "txna ApplicationArgs 3",
      "defined_out": [
        "reinterpret_Encoded(uint64)%8#0",
        "tmp%62#0",
        "tmp%64#0"
      ],
      "stack_out": [
        "tmp%62#0",
        "tmp%64#0",
        "reinterpret_Encoded(uint64)%8#0"
      ]
    },
    "154": {
      "op": "btoi",
      "defined_out": [
        "tmp%62#0",
        "tmp%64#0",
        "tmp%65#0"
      ],
      "stack_out": [
        "tmp%62#0",
        "tmp%64#0",
        "tmp%65#0"
      ]
    },
    "155": {
      "op": "txn GroupIndex",
      "defined_out": [
        "tmp%62#0",
        "tmp%64#0",
        "tmp%65#0",
        "tmp%66#0"
      ],
      "stack_out": [
        "tmp%62#0",
        "tmp%64#0",
        "tmp%65#0",
        "tmp%66#0"
      ]
    },
    "157": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "tmp%62#0",
        "tmp%64#0",
        "tmp%65#0",
        "tmp%66#0"
      ],
      "stack_out": [
        "tmp%62#0",
        "tmp%64#0",
        "tmp%65#0",
        "tmp%66#0",
        "1"
      ]
    },
    "158": {
      "op": "-",
      "defined_out": [
        "gtxn_idx%5#0",
        "tmp%62#0",
        "tmp%64#0",
        "tmp%65#0"
      ],
      "stack_out": [
        "tmp%62#0",
        "tmp%64#0",
        "tmp%65#0",
        "gtxn_idx%5#0"
      ]
    },
    "159": {
      "op": "dup",
      "defined_out": [
        "gtxn_idx%5#0",
        "gtxn_idx%5#0 (copy)",
        "tmp%62#0",
        "tmp%64#0",
        "tmp%65#0"
      ],
      "stack_out": [
        "tmp%62#0",
        "tmp%64#0",
        "tmp%65#0",
        "gtxn_idx%5#0",
        "gtxn_idx%5#0 (copy)"
      ]
    },
    "160": {
      "op": "gtxns TypeEnum",
      "defined_out": [
        "gtxn_idx%5#0",
        "gtxn_type%5#0",
        "tmp%62#0",
        "tmp%64#0",
        "tmp%65#0"
      ],
      "stack_out": [
        "tmp%62#0",
        "tmp%64#0",
        "tmp%65#0",
        "gtxn_idx%5#0",
        "gtxn_type%5#0"
      ]
    },
    "162": {
      "op": "intc_0 // pay",
      "defined_out": [
        "gtxn_idx%5#0",
        "gtxn_type%5#0",
        "pay",
        "tmp%62#0",
        "tmp%64#0",
        "tmp%65#0"
      ],
      "stack_out": [
        "tmp%62#0",
        "tmp%64#0",
        "tmp%65#0",
        "gtxn_idx%5#0",
        "gtxn_type%5#0",
        "pay"
      ]
    },
    "163": {
      "op": "==",
      "defined_out": [
        "gtxn_idx%5#0",
        "gtxn_type_matches%5#0",
        "tmp%62#0",
        "tmp%64#0",
        "tmp%65#0"
      ],
      "stack_out": [
        "tmp%62#0",
        "tmp%64#0",
        "tmp%65#0",
        "gtxn_idx%5#0",
        "gtxn_type_matches%5#0"
      ]
    },
    "164": {
      "error": "transaction type is pay",
      "op": "assert // transaction type is pay",
      "stack_out": [
        "tmp%62#0",
        "tmp%64#0",
        "tmp%65#0",
        "gtxn_idx%5#0"
      ]
    },
    "165": {
      "op": "txna ApplicationArgs 4",
      "defined_out": [
        "gtxn_idx%5#0",
        "reinterpret_Encoded(uint64)%9#0",
        "tmp%62#0",
        "tmp%64#0",
        "tmp%65#0"
      ],
      "stack_out": [
        "tmp%62#0",
        "tmp%64#0",
        "tmp%65#0",
        "gtxn_idx%5#0",
        "reinterpret_Encoded(uint64)%9#0"
      ]
    },
    "168": {
      "op": "btoi",
      "defined_out": [
        "gtxn_idx%5#0",
        "tmp%62#0",
        "tmp%64#0",
        "tmp%65#0",
        "tmp%67#0"
      ],
      "stack_out": [
        "tmp%62#0",
        "tmp%64#0",
        "tmp%65#0",
        "gtxn_idx%5#0",
        "tmp%67#0"
      ]
    },
    "169": {
      "op": "txna ApplicationArgs 5",
      "defined_out": [
        "gtxn_idx%5#0",
        "reinterpret_Encoded(uint64)%10#0",
        "tmp%62#0",
        "tmp%64#0",
        "tmp%65#0",
        "tmp%67#0"
      ],
      "stack_out": [
        "tmp%62#0",
        "tmp%64#0",
        "tmp%65#0",
        "gtxn_idx%5#0",
        "tmp%67#0",
        "reinterpret_Encoded(uint64)%10#0"
      ]
    },
    "172": {
      "op": "btoi",
      "defined_out": [
        "gtxn_idx%5#0",
        "tmp%62#0",
        "tmp%64#0",
        "tmp%65#0",
        "tmp%67#0",
        "tmp%68#0"
      ],
      "stack_out": [
        "tmp%62#0",
        "tmp%64#0",
        "tmp%65#0",
        "gtxn_idx%5#0",
        "tmp%67#0",
        "tmp%68#0"
      ]
    },
    "173": {
      "callsub": "marketplace_with_immutable_struct.DigitalMarketplaceWithImmStruct.bid",
      "op": "callsub bid",
      "stack_out": []
    },
    "176": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "177": {
      "op": "return",
      "stack_out": []
    },
    "178": {
      "block": "main_withdraw_route@11",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%50#0"
      ],
      "stack_out": [
        "tmp%50#0"
      ]
    },
    "180": {
      "op": "!",
      "defined_out": [
        "tmp%51#0"
      ],
      "stack_out": [
        "tmp%51#0"
      ]
    },
    "181": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "182": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%52#0"
      ],
      "stack_out": [
        "tmp%52#0"
      ]
    },
    "184": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "185": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded(uint8)%4#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint8)%4#0"
      ]
    },
    "188": {
      "op": "btoi",
      "defined_out": [
        "tmp%54#0"
      ],
      "stack_out": [
        "tmp%54#0"
      ]
    },
    "189": {
      "op": "txnas Assets",
      "defined_out": [
        "tmp%55#0"
      ],
      "stack_out": [
        "tmp%55#0"
      ]
    },
    "191": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "reinterpret_Encoded(uint64)%7#0",
        "tmp%55#0"
      ],
      "stack_out": [
        "tmp%55#0",
        "reinterpret_Encoded(uint64)%7#0"
      ]
    },
    "194": {
      "op": "btoi",
      "defined_out": [
        "tmp%55#0",
        "tmp%56#0"
      ],
      "stack_out": [
        "tmp%55#0",
        "tmp%56#0"
      ]
    },
    "195": {
      "callsub": "marketplace_with_immutable_struct.DigitalMarketplaceWithImmStruct.withdraw",
      "op": "callsub withdraw",
      "stack_out": []
    },
    "198": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "199": {
      "op": "return",
      "stack_out": []
    },
    "200": {
      "block": "main_buy_route@10",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%39#0"
      ],
      "stack_out": [
        "tmp%39#0"
      ]
    },
    "202": {
      "op": "!",
      "defined_out": [
        "tmp%40#0"
      ],
      "stack_out": [
        "tmp%40#0"
      ]
    },
    "203": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "204": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%41#0"
      ],
      "stack_out": [
        "tmp%41#0"
      ]
    },
    "206": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "207": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded(uint8)%2#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint8)%2#0"
      ]
    },
    "210": {
      "op": "btoi",
      "defined_out": [
        "tmp%43#0"
      ],
      "stack_out": [
        "tmp%43#0"
      ]
    },
    "211": {
      "op": "txnas Accounts",
      "defined_out": [
        "tmp%44#0"
      ],
      "stack_out": [
        "tmp%44#0"
      ]
    },
    "213": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "reinterpret_Encoded(uint8)%3#0",
        "tmp%44#0"
      ],
      "stack_out": [
        "tmp%44#0",
        "reinterpret_Encoded(uint8)%3#0"
      ]
    },
    "216": {
      "op": "btoi",
      "defined_out": [
        "tmp%44#0",
        "tmp%45#0"
      ],
      "stack_out": [
        "tmp%44#0",
        "tmp%45#0"
      ]
    },
    "217": {
      "op": "txnas Assets",
      "defined_out": [
        "tmp%44#0",
        "tmp%46#0"
      ],
      "stack_out": [
        "tmp%44#0",
        "tmp%46#0"
      ]
    },
    "219": {
      "op": "txna ApplicationArgs 3",
      "defined_out": [
        "reinterpret_Encoded(uint64)%5#0",
        "tmp%44#0",
        "tmp%46#0"
      ],
      "stack_out": [
        "tmp%44#0",
        "tmp%46#0",
        "reinterpret_Encoded(uint64)%5#0"
      ]
    },
    "222": {
      "op": "btoi",
      "defined_out": [
        "tmp%44#0",
        "tmp%46#0",
        "tmp%47#0"
      ],
      "stack_out": [
        "tmp%44#0",
        "tmp%46#0",
        "tmp%47#0"
      ]
    },
    "223": {
      "op": "txn GroupIndex",
      "defined_out": [
        "tmp%44#0",
        "tmp%46#0",
        "tmp%47#0",
        "tmp%48#0"
      ],
      "stack_out": [
        "tmp%44#0",
        "tmp%46#0",
        "tmp%47#0",
        "tmp%48#0"
      ]
    },
    "225": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "tmp%44#0",
        "tmp%46#0",
        "tmp%47#0",
        "tmp%48#0"
      ],
      "stack_out": [
        "tmp%44#0",
        "tmp%46#0",
        "tmp%47#0",
        "tmp%48#0",
        "1"
      ]
    },
    "226": {
      "op": "-",
      "defined_out": [
        "gtxn_idx%4#0",
        "tmp%44#0",
        "tmp%46#0",
        "tmp%47#0"
      ],
      "stack_out": [
        "tmp%44#0",
        "tmp%46#0",
        "tmp%47#0",
        "gtxn_idx%4#0"
      ]
    },
    "227": {
      "op": "dup",
      "defined_out": [
        "gtxn_idx%4#0",
        "gtxn_idx%4#0 (copy)",
        "tmp%44#0",
        "tmp%46#0",
        "tmp%47#0"
      ],
      "stack_out": [
        "tmp%44#0",
        "tmp%46#0",
        "tmp%47#0",
        "gtxn_idx%4#0",
        "gtxn_idx%4#0 (copy)"
      ]
    },
    "228": {
      "op": "gtxns TypeEnum",
      "defined_out": [
        "gtxn_idx%4#0",
        "gtxn_type%4#0",
        "tmp%44#0",
        "tmp%46#0",
        "tmp%47#0"
      ],
      "stack_out": [
        "tmp%44#0",
        "tmp%46#0",
        "tmp%47#0",
        "gtxn_idx%4#0",
        "gtxn_type%4#0"
      ]
    },
    "230": {
      "op": "intc_0 // pay",
      "defined_out": [
        "gtxn_idx%4#0",
        "gtxn_type%4#0",
        "pay",
        "tmp%44#0",
        "tmp%46#0",
        "tmp%47#0"
      ],
      "stack_out": [
        "tmp%44#0",
        "tmp%46#0",
        "tmp%47#0",
        "gtxn_idx%4#0",
        "gtxn_type%4#0",
        "pay"
      ]
    },
    "231": {
      "op": "==",
      "defined_out": [
        "gtxn_idx%4#0",
        "gtxn_type_matches%4#0",
        "tmp%44#0",
        "tmp%46#0",
        "tmp%47#0"
      ],
      "stack_out": [
        "tmp%44#0",
        "tmp%46#0",
        "tmp%47#0",
        "gtxn_idx%4#0",
        "gtxn_type_matches%4#0"
      ]
    },
    "232": {
      "error": "transaction type is pay",
      "op": "assert // transaction type is pay",
      "stack_out": [
        "tmp%44#0",
        "tmp%46#0",
        "tmp%47#0",
        "gtxn_idx%4#0"
      ]
    },
    "233": {
      "op": "txna ApplicationArgs 4",
      "defined_out": [
        "gtxn_idx%4#0",
        "reinterpret_Encoded(uint64)%6#0",
        "tmp%44#0",
        "tmp%46#0",
        "tmp%47#0"
      ],
      "stack_out": [
        "tmp%44#0",
        "tmp%46#0",
        "tmp%47#0",
        "gtxn_idx%4#0",
        "reinterpret_Encoded(uint64)%6#0"
      ]
    },
    "236": {
      "op": "btoi",
      "defined_out": [
        "gtxn_idx%4#0",
        "tmp%44#0",
        "tmp%46#0",
        "tmp%47#0",
        "tmp%49#0"
      ],
      "stack_out": [
        "tmp%44#0",
        "tmp%46#0",
        "tmp%47#0",
        "gtxn_idx%4#0",
        "tmp%49#0"
      ]
    },
    "237": {
      "callsub": "marketplace_with_immutable_struct.DigitalMarketplaceWithImmStruct.buy",
      "op": "callsub buy",
      "stack_out": []
    },
    "240": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "241": {
      "op": "return",
      "stack_out": []
    },
    "242": {
      "block": "main_setPrice_route@9",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%31#0"
      ],
      "stack_out": [
        "tmp%31#0"
      ]
    },
    "244": {
      "op": "!",
      "defined_out": [
        "tmp%32#0"
      ],
      "stack_out": [
        "tmp%32#0"
      ]
    },
    "245": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "246": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%33#0"
      ],
      "stack_out": [
        "tmp%33#0"
      ]
    },
    "248": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "249": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded(uint8)%1#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint8)%1#0"
      ]
    },
    "252": {
      "op": "btoi",
      "defined_out": [
        "tmp%35#0"
      ],
      "stack_out": [
        "tmp%35#0"
      ]
    },
    "253": {
      "op": "txnas Assets",
      "defined_out": [
        "tmp%36#0"
      ],
      "stack_out": [
        "tmp%36#0"
      ]
    },
    "255": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "reinterpret_Encoded(uint64)%3#0",
        "tmp%36#0"
      ],
      "stack_out": [
        "tmp%36#0",
        "reinterpret_Encoded(uint64)%3#0"
      ]
    },
    "258": {
      "op": "btoi",
      "defined_out": [
        "tmp%36#0",
        "tmp%37#0"
      ],
      "stack_out": [
        "tmp%36#0",
        "tmp%37#0"
      ]
    },
    "259": {
      "op": "txna ApplicationArgs 3",
      "defined_out": [
        "reinterpret_Encoded(uint64)%4#0",
        "tmp%36#0",
        "tmp%37#0"
      ],
      "stack_out": [
        "tmp%36#0",
        "tmp%37#0",
        "reinterpret_Encoded(uint64)%4#0"
      ]
    },
    "262": {
      "op": "btoi",
      "defined_out": [
        "tmp%36#0",
        "tmp%37#0",
        "tmp%38#0"
      ],
      "stack_out": [
        "tmp%36#0",
        "tmp%37#0",
        "tmp%38#0"
      ]
    },
    "263": {
      "callsub": "marketplace_with_immutable_struct.DigitalMarketplaceWithImmStruct.set_price",
      "op": "callsub set_price",
      "stack_out": []
    },
    "266": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "267": {
      "op": "return",
      "stack_out": []
    },
    "268": {
      "block": "main_deposit_route@8",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%25#0"
      ],
      "stack_out": [
        "tmp%25#0"
      ]
    },
    "270": {
      "op": "!",
      "defined_out": [
        "tmp%26#0"
      ],
      "stack_out": [
        "tmp%26#0"
      ]
    },
    "271": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "272": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%27#0"
      ],
      "stack_out": [
        "tmp%27#0"
      ]
    },
    "274": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "275": {
      "op": "txn GroupIndex",
      "defined_out": [
        "tmp%29#0"
      ],
      "stack_out": [
        "tmp%29#0"
      ]
    },
    "277": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "tmp%29#0"
      ],
      "stack_out": [
        "tmp%29#0",
        "1"
      ]
    },
    "278": {
      "op": "-",
      "defined_out": [
        "gtxn_idx%3#0"
      ],
      "stack_out": [
        "gtxn_idx%3#0"
      ]
    },
    "279": {
      "op": "dup",
      "defined_out": [
        "gtxn_idx%3#0",
        "gtxn_idx%3#0 (copy)"
      ],
      "stack_out": [
        "gtxn_idx%3#0",
        "gtxn_idx%3#0 (copy)"
      ]
    },
    "280": {
      "op": "gtxns TypeEnum",
      "defined_out": [
        "gtxn_idx%3#0",
        "gtxn_type%3#0"
      ],
      "stack_out": [
        "gtxn_idx%3#0",
        "gtxn_type%3#0"
      ]
    },
    "282": {
      "op": "intc_2 // axfer",
      "defined_out": [
        "axfer",
        "gtxn_idx%3#0",
        "gtxn_type%3#0"
      ],
      "stack_out": [
        "gtxn_idx%3#0",
        "gtxn_type%3#0",
        "axfer"
      ]
    },
    "283": {
      "op": "==",
      "defined_out": [
        "gtxn_idx%3#0",
        "gtxn_type_matches%3#0"
      ],
      "stack_out": [
        "gtxn_idx%3#0",
        "gtxn_type_matches%3#0"
      ]
    },
    "284": {
      "error": "transaction type is axfer",
      "op": "assert // transaction type is axfer",
      "stack_out": [
        "gtxn_idx%3#0"
      ]
    },
    "285": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "gtxn_idx%3#0",
        "reinterpret_Encoded(uint64)%2#0"
      ],
      "stack_out": [
        "gtxn_idx%3#0",
        "reinterpret_Encoded(uint64)%2#0"
      ]
    },
    "288": {
      "op": "btoi",
      "defined_out": [
        "gtxn_idx%3#0",
        "tmp%30#0"
      ],
      "stack_out": [
        "gtxn_idx%3#0",
        "tmp%30#0"
      ]
    },
    "289": {
      "callsub": "marketplace_with_immutable_struct.DigitalMarketplaceWithImmStruct.deposit",
      "op": "callsub deposit",
      "stack_out": []
    },
    "292": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "293": {
      "op": "return",
      "stack_out": []
    },
    "294": {
      "block": "main_firstDeposit_route@7",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%17#0"
      ],
      "stack_out": [
        "tmp%17#0"
      ]
    },
    "296": {
      "op": "!",
      "defined_out": [
        "tmp%18#0"
      ],
      "stack_out": [
        "tmp%18#0"
      ]
    },
    "297": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "298": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%19#0"
      ],
      "stack_out": [
        "tmp%19#0"
      ]
    },
    "300": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "301": {
      "op": "txn GroupIndex",
      "defined_out": [
        "tmp%21#0"
      ],
      "stack_out": [
        "tmp%21#0"
      ]
    },
    "303": {
      "op": "pushint 2 // 2",
      "defined_out": [
        "2",
        "tmp%21#0"
      ],
      "stack_out": [
        "tmp%21#0",
        "2"
      ]
    },
    "305": {
      "op": "-",
      "defined_out": [
        "gtxn_idx%1#0"
      ],
      "stack_out": [
        "gtxn_idx%1#0"
      ]
    },
    "306": {
      "op": "dup",
      "defined_out": [
        "gtxn_idx%1#0",
        "gtxn_idx%1#0 (copy)"
      ],
      "stack_out": [
        "gtxn_idx%1#0",
        "gtxn_idx%1#0 (copy)"
      ]
    },
    "307": {
      "op": "gtxns TypeEnum",
      "defined_out": [
        "gtxn_idx%1#0",
        "gtxn_type%1#0"
      ],
      "stack_out": [
        "gtxn_idx%1#0",
        "gtxn_type%1#0"
      ]
    },
    "309": {
      "op": "intc_0 // pay",
      "defined_out": [
        "gtxn_idx%1#0",
        "gtxn_type%1#0",
        "pay"
      ],
      "stack_out": [
        "gtxn_idx%1#0",
        "gtxn_type%1#0",
        "pay"
      ]
    },
    "310": {
      "op": "==",
      "defined_out": [
        "gtxn_idx%1#0",
        "gtxn_type_matches%1#0"
      ],
      "stack_out": [
        "gtxn_idx%1#0",
        "gtxn_type_matches%1#0"
      ]
    },
    "311": {
      "error": "transaction type is pay",
      "op": "assert // transaction type is pay",
      "stack_out": [
        "gtxn_idx%1#0"
      ]
    },
    "312": {
      "op": "txn GroupIndex",
      "defined_out": [
        "gtxn_idx%1#0",
        "tmp%22#0"
      ],
      "stack_out": [
        "gtxn_idx%1#0",
        "tmp%22#0"
      ]
    },
    "314": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "gtxn_idx%1#0",
        "tmp%22#0"
      ],
      "stack_out": [
        "gtxn_idx%1#0",
        "tmp%22#0",
        "1"
      ]
    },
    "315": {
      "op": "-",
      "defined_out": [
        "gtxn_idx%1#0",
        "gtxn_idx%2#0"
      ],
      "stack_out": [
        "gtxn_idx%1#0",
        "gtxn_idx%2#0"
      ]
    },
    "316": {
      "op": "dup",
      "defined_out": [
        "gtxn_idx%1#0",
        "gtxn_idx%2#0",
        "gtxn_idx%2#0 (copy)"
      ],
      "stack_out": [
        "gtxn_idx%1#0",
        "gtxn_idx%2#0",
        "gtxn_idx%2#0 (copy)"
      ]
    },
    "317": {
      "op": "gtxns TypeEnum",
      "defined_out": [
        "gtxn_idx%1#0",
        "gtxn_idx%2#0",
        "gtxn_type%2#0"
      ],
      "stack_out": [
        "gtxn_idx%1#0",
        "gtxn_idx%2#0",
        "gtxn_type%2#0"
      ]
    },
    "319": {
      "op": "intc_2 // axfer",
      "defined_out": [
        "axfer",
        "gtxn_idx%1#0",
        "gtxn_idx%2#0",
        "gtxn_type%2#0"
      ],
      "stack_out": [
        "gtxn_idx%1#0",
        "gtxn_idx%2#0",
        "gtxn_type%2#0",
        "axfer"
      ]
    },
    "320": {
      "op": "==",
      "defined_out": [
        "gtxn_idx%1#0",
        "gtxn_idx%2#0",
        "gtxn_type_matches%2#0"
      ],
      "stack_out": [
        "gtxn_idx%1#0",
        "gtxn_idx%2#0",
        "gtxn_type_matches%2#0"
      ]
    },
    "321": {
      "error": "transaction type is axfer",
      "op": "assert // transaction type is axfer",
      "stack_out": [
        "gtxn_idx%1#0",
        "gtxn_idx%2#0"
      ]
    },
    "322": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "gtxn_idx%1#0",
        "gtxn_idx%2#0",
        "reinterpret_Encoded(uint64)%0#0"
      ],
      "stack_out": [
        "gtxn_idx%1#0",
        "gtxn_idx%2#0",
        "reinterpret_Encoded(uint64)%0#0"
      ]
    },
    "325": {
      "op": "btoi",
      "defined_out": [
        "gtxn_idx%1#0",
        "gtxn_idx%2#0",
        "tmp%23#0"
      ],
      "stack_out": [
        "gtxn_idx%1#0",
        "gtxn_idx%2#0",
        "tmp%23#0"
      ]
    },
    "326": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "gtxn_idx%1#0",
        "gtxn_idx%2#0",
        "reinterpret_Encoded(uint64)%1#0",
        "tmp%23#0"
      ],
      "stack_out": [
        "gtxn_idx%1#0",
        "gtxn_idx%2#0",
        "tmp%23#0",
        "reinterpret_Encoded(uint64)%1#0"
      ]
    },
    "329": {
      "op": "btoi",
      "defined_out": [
        "gtxn_idx%1#0",
        "gtxn_idx%2#0",
        "tmp%23#0",
        "tmp%24#0"
      ],
      "stack_out": [
        "gtxn_idx%1#0",
        "gtxn_idx%2#0",
        "tmp%23#0",
        "tmp%24#0"
      ]
    },
    "330": {
      "callsub": "marketplace_with_immutable_struct.DigitalMarketplaceWithImmStruct.first_deposit",
      "op": "callsub first_deposit",
      "stack_out": []
    },
    "333": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "334": {
      "op": "return",
      "stack_out": []
    },
    "335": {
      "block": "main_allowAsset_route@6",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%10#0"
      ],
      "stack_out": [
        "tmp%10#0"
      ]
    },
    "337": {
      "op": "!",
      "defined_out": [
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0"
      ]
    },
    "338": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "339": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%12#0"
      ]
    },
    "341": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "342": {
      "op": "txn GroupIndex",
      "defined_out": [
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%14#0"
      ]
    },
    "344": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%14#0",
        "1"
      ]
    },
    "345": {
      "op": "-",
      "defined_out": [
        "gtxn_idx%0#0"
      ],
      "stack_out": [
        "gtxn_idx%0#0"
      ]
    },
    "346": {
      "op": "dup",
      "defined_out": [
        "gtxn_idx%0#0",
        "gtxn_idx%0#0 (copy)"
      ],
      "stack_out": [
        "gtxn_idx%0#0",
        "gtxn_idx%0#0 (copy)"
      ]
    },
    "347": {
      "op": "gtxns TypeEnum",
      "defined_out": [
        "gtxn_idx%0#0",
        "gtxn_type%0#0"
      ],
      "stack_out": [
        "gtxn_idx%0#0",
        "gtxn_type%0#0"
      ]
    },
    "349": {
      "op": "intc_0 // pay",
      "defined_out": [
        "gtxn_idx%0#0",
        "gtxn_type%0#0",
        "pay"
      ],
      "stack_out": [
        "gtxn_idx%0#0",
        "gtxn_type%0#0",
        "pay"
      ]
    },
    "350": {
      "op": "==",
      "defined_out": [
        "gtxn_idx%0#0",
        "gtxn_type_matches%0#0"
      ],
      "stack_out": [
        "gtxn_idx%0#0",
        "gtxn_type_matches%0#0"
      ]
    },
    "351": {
      "error": "transaction type is pay",
      "op": "assert // transaction type is pay",
      "stack_out": [
        "gtxn_idx%0#0"
      ]
    },
    "352": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "gtxn_idx%0#0",
        "reinterpret_Encoded(uint8)%0#0"
      ],
      "stack_out": [
        "gtxn_idx%0#0",
        "reinterpret_Encoded(uint8)%0#0"
      ]
    },
    "355": {
      "op": "btoi",
      "defined_out": [
        "gtxn_idx%0#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "gtxn_idx%0#0",
        "tmp%15#0"
      ]
    },
    "356": {
      "op": "txnas Assets",
      "defined_out": [
        "gtxn_idx%0#0",
        "tmp%16#0"
      ],
      "stack_out": [
        "gtxn_idx%0#0",
        "tmp%16#0"
      ]
    },
    "358": {
      "callsub": "marketplace_with_immutable_struct.DigitalMarketplaceWithImmStruct.allow_asset",
      "op": "callsub allow_asset",
      "stack_out": []
    },
    "361": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "362": {
      "op": "return",
      "stack_out": []
    },
    "363": {
      "block": "main_getListingsMbr_route@5",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "365": {
      "op": "!",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "366": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "367": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "369": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "370": {
      "op": "pushbytes 0x151f7c75000000000000c544",
      "defined_out": [
        "0x151f7c75000000000000c544"
      ],
      "stack_out": [
        "0x151f7c75000000000000c544"
      ]
    },
    "384": {
      "op": "log",
      "stack_out": []
    },
    "385": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "386": {
      "op": "return",
      "stack_out": []
    },
    "387": {
      "block": "main_bare_routing@14",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%76#0"
      ],
      "stack_out": [
        "tmp%76#0"
      ]
    },
    "389": {
      "op": "bnz main_after_if_else@16",
      "stack_out": []
    },
    "392": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%77#0"
      ],
      "stack_out": [
        "tmp%77#0"
      ]
    },
    "394": {
      "op": "!",
      "defined_out": [
        "tmp%78#0"
      ],
      "stack_out": [
        "tmp%78#0"
      ]
    },
    "395": {
      "error": "can only call when creating",
      "op": "assert // can only call when creating",
      "stack_out": []
    },
    "396": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "397": {
      "op": "return",
      "stack_out": []
    },
    "398": {
      "subroutine": "marketplace_with_immutable_struct.DigitalMarketplaceWithImmStruct.allow_asset",
      "params": {
        "mbr_pay#0": "uint64",
        "asset#0": "uint64"
      },
      "block": "allow_asset",
      "stack_in": [],
      "op": "proto 2 0"
    },
    "401": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "403": {
      "op": "frame_dig -1",
      "defined_out": [
        "asset#0 (copy)",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "asset#0 (copy)"
      ]
    },
    "405": {
      "op": "asset_holding_get AssetBalance",
      "defined_out": [
        "tmp%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%2#0"
      ]
    },
    "407": {
      "op": "bury 1",
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "409": {
      "op": "!",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "410": {
      "op": "assert",
      "stack_out": []
    },
    "411": {
      "op": "frame_dig -2",
      "defined_out": [
        "mbr_pay#0 (copy)"
      ],
      "stack_out": [
        "mbr_pay#0 (copy)"
      ]
    },
    "413": {
      "op": "gtxns Receiver",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "415": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "tmp%4#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "tmp%5#0"
      ]
    },
    "417": {
      "op": "==",
      "defined_out": [
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0"
      ]
    },
    "418": {
      "op": "assert",
      "stack_out": []
    },
    "419": {
      "op": "frame_dig -2",
      "stack_out": [
        "mbr_pay#0 (copy)"
      ]
    },
    "421": {
      "op": "gtxns Amount",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0"
      ]
    },
    "423": {
      "op": "global AssetOptInMinBalance",
      "defined_out": [
        "tmp%7#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%7#0",
        "tmp%8#0"
      ]
    },
    "425": {
      "op": "==",
      "defined_out": [
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0"
      ]
    },
    "426": {
      "op": "assert",
      "stack_out": []
    },
    "427": {
      "op": "itxn_begin"
    },
    "428": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0"
      ]
    },
    "430": {
      "op": "intc_1 // 0",
      "defined_out": [
        "0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "0"
      ]
    },
    "431": {
      "op": "itxn_field AssetAmount",
      "stack_out": [
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0"
      ]
    },
    "433": {
      "op": "itxn_field AssetReceiver",
      "stack_out": []
    },
    "435": {
      "op": "frame_dig -1",
      "stack_out": [
        "asset#0 (copy)"
      ]
    },
    "437": {
      "op": "itxn_field XferAsset",
      "stack_out": []
    },
    "439": {
      "op": "intc_2 // axfer",
      "defined_out": [
        "axfer"
      ],
      "stack_out": [
        "axfer"
      ]
    },
    "440": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "442": {
      "op": "intc_1 // 0",
      "stack_out": [
        "0"
      ]
    },
    "443": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "445": {
      "op": "itxn_submit"
    },
    "446": {
      "retsub": true,
      "op": "retsub"
    },
    "447": {
      "subroutine": "marketplace_with_immutable_struct.DigitalMarketplaceWithImmStruct.first_deposit",
      "params": {
        "mbr_pay#0": "uint64",
        "xfer#0": "uint64",
        "unitary_price#0": "uint64",
        "nonce#0": "uint64"
      },
      "block": "first_deposit",
      "stack_in": [],
      "op": "proto 4 0"
    },
    "450": {
      "op": "frame_dig -4",
      "defined_out": [
        "mbr_pay#0 (copy)"
      ],
      "stack_out": [
        "mbr_pay#0 (copy)"
      ]
    },
    "452": {
      "op": "gtxns Sender",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "454": {
      "op": "txn Sender",
      "defined_out": [
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0"
      ]
    },
    "456": {
      "op": "==",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "457": {
      "op": "assert",
      "stack_out": []
    },
    "458": {
      "op": "frame_dig -4",
      "stack_out": [
        "mbr_pay#0 (copy)"
      ]
    },
    "460": {
      "op": "gtxns Receiver",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "462": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "tmp%3#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "tmp%4#0"
      ]
    },
    "464": {
      "op": "==",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "465": {
      "op": "assert",
      "stack_out": []
    },
    "466": {
      "op": "frame_dig -4",
      "stack_out": [
        "mbr_pay#0 (copy)"
      ]
    },
    "468": {
      "op": "gtxns Amount",
      "defined_out": [
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0"
      ]
    },
    "470": {
      "op": "intc 4 // 50500",
      "defined_out": [
        "50500",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0",
        "50500"
      ]
    },
    "472": {
      "op": "==",
      "defined_out": [
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0"
      ]
    },
    "473": {
      "op": "assert",
      "stack_out": []
    },
    "474": {
      "op": "txn Sender",
      "defined_out": [
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0"
      ]
    },
    "476": {
      "op": "frame_dig -3",
      "defined_out": [
        "tmp%9#0",
        "xfer#0 (copy)"
      ],
      "stack_out": [
        "tmp%9#0",
        "xfer#0 (copy)"
      ]
    },
    "478": {
      "op": "gtxns XferAsset",
      "defined_out": [
        "tmp%10#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0",
        "tmp%10#0"
      ]
    },
    "480": {
      "op": "itob",
      "defined_out": [
        "array%val_as_bytes%0#1",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0",
        "array%val_as_bytes%0#1"
      ]
    },
    "481": {
      "op": "concat",
      "defined_out": [
        "array%encoded%1#1"
      ],
      "stack_out": [
        "array%encoded%1#1"
      ]
    },
    "482": {
      "op": "frame_dig -1",
      "defined_out": [
        "array%encoded%1#1",
        "nonce#0 (copy)"
      ],
      "stack_out": [
        "array%encoded%1#1",
        "nonce#0 (copy)"
      ]
    },
    "484": {
      "op": "itob",
      "defined_out": [
        "array%encoded%1#1",
        "array%val_as_bytes%1#1"
      ],
      "stack_out": [
        "array%encoded%1#1",
        "array%val_as_bytes%1#1"
      ]
    },
    "485": {
      "op": "concat",
      "defined_out": [
        "key#0"
      ],
      "stack_out": [
        "key#0"
      ]
    },
    "486": {
      "op": "bytec_0 // 0x6c697374696e6773",
      "defined_out": [
        "0x6c697374696e6773",
        "key#0"
      ],
      "stack_out": [
        "key#0",
        "0x6c697374696e6773"
      ]
    },
    "487": {
      "op": "swap",
      "stack_out": [
        "0x6c697374696e6773",
        "key#0"
      ]
    },
    "488": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0"
      ]
    },
    "489": {
      "op": "dup",
      "defined_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0 (copy)"
      ]
    },
    "490": {
      "op": "box_len",
      "defined_out": [
        "_%0#0",
        "box_prefixed_key%0#0",
        "maybe_exists%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "_%0#0",
        "maybe_exists%0#0"
      ]
    },
    "491": {
      "op": "bury 1",
      "stack_out": [
        "box_prefixed_key%0#0",
        "maybe_exists%0#0"
      ]
    },
    "493": {
      "op": "!",
      "defined_out": [
        "box_prefixed_key%0#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "tmp%12#0"
      ]
    },
    "494": {
      "op": "assert",
      "stack_out": [
        "box_prefixed_key%0#0"
      ]
    },
    "495": {
      "op": "frame_dig -3",
      "stack_out": [
        "box_prefixed_key%0#0",
        "xfer#0 (copy)"
      ]
    },
    "497": {
      "op": "gtxns Sender",
      "defined_out": [
        "box_prefixed_key%0#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "tmp%13#0"
      ]
    },
    "499": {
      "op": "txn Sender",
      "defined_out": [
        "box_prefixed_key%0#0",
        "tmp%13#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "tmp%13#0",
        "tmp%14#0"
      ]
    },
    "501": {
      "op": "==",
      "defined_out": [
        "box_prefixed_key%0#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "tmp%15#0"
      ]
    },
    "502": {
      "op": "assert",
      "stack_out": [
        "box_prefixed_key%0#0"
      ]
    },
    "503": {
      "op": "frame_dig -3",
      "stack_out": [
        "box_prefixed_key%0#0",
        "xfer#0 (copy)"
      ]
    },
    "505": {
      "op": "gtxns AssetReceiver",
      "defined_out": [
        "box_prefixed_key%0#0",
        "tmp%16#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "tmp%16#0"
      ]
    },
    "507": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "box_prefixed_key%0#0",
        "tmp%16#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "tmp%16#0",
        "tmp%17#0"
      ]
    },
    "509": {
      "op": "==",
      "defined_out": [
        "box_prefixed_key%0#0",
        "tmp%18#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "tmp%18#0"
      ]
    },
    "510": {
      "op": "assert",
      "stack_out": [
        "box_prefixed_key%0#0"
      ]
    },
    "511": {
      "op": "frame_dig -3",
      "stack_out": [
        "box_prefixed_key%0#0",
        "xfer#0 (copy)"
      ]
    },
    "513": {
      "op": "gtxns AssetAmount",
      "defined_out": [
        "box_prefixed_key%0#0",
        "tmp%19#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "tmp%19#0"
      ]
    },
    "515": {
      "op": "dup",
      "defined_out": [
        "box_prefixed_key%0#0",
        "tmp%19#0",
        "tmp%19#0 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "tmp%19#0",
        "tmp%19#0 (copy)"
      ]
    },
    "516": {
      "op": "assert",
      "stack_out": [
        "box_prefixed_key%0#0",
        "tmp%19#0"
      ]
    },
    "517": {
      "op": "global ZeroAddress",
      "defined_out": [
        "box_prefixed_key%0#0",
        "tmp%19#0",
        "tmp%22#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "tmp%19#0",
        "tmp%22#0"
      ]
    },
    "519": {
      "op": "swap",
      "stack_out": [
        "box_prefixed_key%0#0",
        "tmp%22#0",
        "tmp%19#0"
      ]
    },
    "520": {
      "op": "itob",
      "defined_out": [
        "array%val_as_bytes%2#1",
        "box_prefixed_key%0#0",
        "tmp%22#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "tmp%22#0",
        "array%val_as_bytes%2#1"
      ]
    },
    "521": {
      "op": "frame_dig -2",
      "defined_out": [
        "array%val_as_bytes%2#1",
        "box_prefixed_key%0#0",
        "tmp%22#0",
        "unitary_price#0 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "tmp%22#0",
        "array%val_as_bytes%2#1",
        "unitary_price#0 (copy)"
      ]
    },
    "523": {
      "op": "itob",
      "defined_out": [
        "array%val_as_bytes%2#1",
        "array%val_as_bytes%3#1",
        "box_prefixed_key%0#0",
        "tmp%22#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "tmp%22#0",
        "array%val_as_bytes%2#1",
        "array%val_as_bytes%3#1"
      ]
    },
    "524": {
      "op": "concat",
      "defined_out": [
        "array%encoded%5#1",
        "box_prefixed_key%0#0",
        "tmp%22#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "tmp%22#0",
        "array%encoded%5#1"
      ]
    },
    "525": {
      "op": "swap",
      "stack_out": [
        "box_prefixed_key%0#0",
        "array%encoded%5#1",
        "tmp%22#0"
      ]
    },
    "526": {
      "op": "concat",
      "defined_out": [
        "array%encoded%6#1",
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "array%encoded%6#1"
      ]
    },
    "527": {
      "op": "intc_1 // 0",
      "defined_out": [
        "0",
        "array%encoded%6#1",
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "array%encoded%6#1",
        "0"
      ]
    },
    "528": {
      "op": "itob",
      "defined_out": [
        "array%encoded%6#1",
        "array%val_as_bytes%4#1",
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "array%encoded%6#1",
        "array%val_as_bytes%4#1"
      ]
    },
    "529": {
      "op": "swap",
      "stack_out": [
        "box_prefixed_key%0#0",
        "array%val_as_bytes%4#1",
        "array%encoded%6#1"
      ]
    },
    "530": {
      "op": "dig 1",
      "defined_out": [
        "array%encoded%6#1",
        "array%val_as_bytes%4#1",
        "array%val_as_bytes%4#1 (copy)",
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "array%val_as_bytes%4#1",
        "array%encoded%6#1",
        "array%val_as_bytes%4#1 (copy)"
      ]
    },
    "532": {
      "op": "concat",
      "defined_out": [
        "array%encoded%7#1",
        "array%val_as_bytes%4#1",
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "array%val_as_bytes%4#1",
        "array%encoded%7#1"
      ]
    },
    "533": {
      "op": "swap",
      "stack_out": [
        "box_prefixed_key%0#0",
        "array%encoded%7#1",
        "array%val_as_bytes%4#1"
      ]
    },
    "534": {
      "op": "concat",
      "defined_out": [
        "array%encoded%8#1",
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "array%encoded%8#1"
      ]
    },
    "535": {
      "op": "box_put",
      "stack_out": []
    },
    "536": {
      "retsub": true,
      "op": "retsub"
    },
    "537": {
      "subroutine": "marketplace_with_immutable_struct.DigitalMarketplaceWithImmStruct.deposit",
      "params": {
        "xfer#0": "uint64",
        "nonce#0": "uint64"
      },
      "block": "deposit",
      "stack_in": [],
      "op": "proto 2 0"
    },
    "540": {
      "op": "txn Sender",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "542": {
      "op": "frame_dig -2",
      "defined_out": [
        "tmp%0#0",
        "xfer#0 (copy)"
      ],
      "stack_out": [
        "tmp%0#0",
        "xfer#0 (copy)"
      ]
    },
    "544": {
      "op": "gtxns XferAsset",
      "defined_out": [
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0"
      ]
    },
    "546": {
      "op": "itob",
      "defined_out": [
        "array%val_as_bytes%0#1",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "array%val_as_bytes%0#1"
      ]
    },
    "547": {
      "op": "concat",
      "defined_out": [
        "array%encoded%1#1"
      ],
      "stack_out": [
        "array%encoded%1#1"
      ]
    },
    "548": {
      "op": "frame_dig -1",
      "defined_out": [
        "array%encoded%1#1",
        "nonce#0 (copy)"
      ],
      "stack_out": [
        "array%encoded%1#1",
        "nonce#0 (copy)"
      ]
    },
    "550": {
      "op": "itob",
      "defined_out": [
        "array%encoded%1#1",
        "array%val_as_bytes%1#1"
      ],
      "stack_out": [
        "array%encoded%1#1",
        "array%val_as_bytes%1#1"
      ]
    },
    "551": {
      "op": "concat",
      "defined_out": [
        "key#0"
      ],
      "stack_out": [
        "key#0"
      ]
    },
    "552": {
      "op": "frame_dig -2",
      "stack_out": [
        "key#0",
        "xfer#0 (copy)"
      ]
    },
    "554": {
      "op": "gtxns Sender",
      "defined_out": [
        "key#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "key#0",
        "tmp%3#0"
      ]
    },
    "556": {
      "op": "txn Sender",
      "defined_out": [
        "key#0",
        "tmp%3#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "key#0",
        "tmp%3#0",
        "tmp%4#0"
      ]
    },
    "558": {
      "op": "==",
      "defined_out": [
        "key#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "key#0",
        "tmp%5#0"
      ]
    },
    "559": {
      "op": "assert",
      "stack_out": [
        "key#0"
      ]
    },
    "560": {
      "op": "frame_dig -2",
      "stack_out": [
        "key#0",
        "xfer#0 (copy)"
      ]
    },
    "562": {
      "op": "gtxns AssetReceiver",
      "defined_out": [
        "key#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "key#0",
        "tmp%6#0"
      ]
    },
    "564": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "key#0",
        "tmp%6#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "key#0",
        "tmp%6#0",
        "tmp%7#0"
      ]
    },
    "566": {
      "op": "==",
      "defined_out": [
        "key#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "key#0",
        "tmp%8#0"
      ]
    },
    "567": {
      "op": "assert",
      "stack_out": [
        "key#0"
      ]
    },
    "568": {
      "op": "frame_dig -2",
      "stack_out": [
        "key#0",
        "xfer#0 (copy)"
      ]
    },
    "570": {
      "op": "gtxns AssetAmount",
      "defined_out": [
        "key#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "key#0",
        "tmp%9#0"
      ]
    },
    "572": {
      "op": "dup",
      "defined_out": [
        "key#0",
        "tmp%9#0",
        "tmp%9#0 (copy)"
      ],
      "stack_out": [
        "key#0",
        "tmp%9#0",
        "tmp%9#0 (copy)"
      ]
    },
    "573": {
      "op": "assert",
      "stack_out": [
        "key#0",
        "tmp%9#0"
      ]
    },
    "574": {
      "op": "bytec_0 // 0x6c697374696e6773",
      "defined_out": [
        "0x6c697374696e6773",
        "key#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "key#0",
        "tmp%9#0",
        "0x6c697374696e6773"
      ]
    },
    "575": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%9#0",
        "0x6c697374696e6773",
        "key#0"
      ]
    },
    "577": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0",
        "box_prefixed_key%0#0"
      ]
    },
    "578": {
      "op": "dup",
      "defined_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0 (copy)",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0",
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0 (copy)"
      ]
    },
    "579": {
      "op": "box_get",
      "defined_out": [
        "box_prefixed_key%0#0",
        "existing#0",
        "maybe_exists%0#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0",
        "box_prefixed_key%0#0",
        "existing#0",
        "maybe_exists%0#0"
      ]
    },
    "580": {
      "error": "check self.listings entry exists",
      "op": "assert // check self.listings entry exists",
      "stack_out": [
        "tmp%9#0",
        "box_prefixed_key%0#0",
        "existing#0"
      ]
    },
    "581": {
      "op": "dup",
      "defined_out": [
        "box_prefixed_key%0#0",
        "existing#0",
        "existing#0 (copy)",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0",
        "box_prefixed_key%0#0",
        "existing#0",
        "existing#0 (copy)"
      ]
    },
    "582": {
      "op": "intc_3 // 48",
      "defined_out": [
        "48",
        "box_prefixed_key%0#0",
        "existing#0",
        "existing#0 (copy)",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0",
        "box_prefixed_key%0#0",
        "existing#0",
        "existing#0 (copy)",
        "48"
      ]
    },
    "583": {
      "op": "extract_uint64",
      "defined_out": [
        "box_prefixed_key%0#0",
        "existing#0",
        "tmp%9#0",
        "values%0#0"
      ],
      "stack_out": [
        "tmp%9#0",
        "box_prefixed_key%0#0",
        "existing#0",
        "values%0#0"
      ]
    },
    "584": {
      "op": "dig 1",
      "stack_out": [
        "tmp%9#0",
        "box_prefixed_key%0#0",
        "existing#0",
        "values%0#0",
        "existing#0 (copy)"
      ]
    },
    "586": {
      "op": "pushint 56 // 56",
      "defined_out": [
        "56",
        "box_prefixed_key%0#0",
        "existing#0",
        "existing#0 (copy)",
        "tmp%9#0",
        "values%0#0"
      ],
      "stack_out": [
        "tmp%9#0",
        "box_prefixed_key%0#0",
        "existing#0",
        "values%0#0",
        "existing#0 (copy)",
        "56"
      ]
    },
    "588": {
      "op": "extract_uint64",
      "defined_out": [
        "box_prefixed_key%0#0",
        "existing#0",
        "tmp%9#0",
        "values%0#0",
        "values%1#0"
      ],
      "stack_out": [
        "tmp%9#0",
        "box_prefixed_key%0#0",
        "existing#0",
        "values%0#0",
        "values%1#0"
      ]
    },
    "589": {
      "op": "dig 2",
      "stack_out": [
        "tmp%9#0",
        "box_prefixed_key%0#0",
        "existing#0",
        "values%0#0",
        "values%1#0",
        "existing#0 (copy)"
      ]
    },
    "591": {
      "op": "extract 16 32",
      "defined_out": [
        "array%extract%2#1",
        "box_prefixed_key%0#0",
        "existing#0",
        "tmp%9#0",
        "values%0#0",
        "values%1#0"
      ],
      "stack_out": [
        "tmp%9#0",
        "box_prefixed_key%0#0",
        "existing#0",
        "values%0#0",
        "values%1#0",
        "array%extract%2#1"
      ]
    },
    "594": {
      "op": "dig 3",
      "stack_out": [
        "tmp%9#0",
        "box_prefixed_key%0#0",
        "existing#0",
        "values%0#0",
        "values%1#0",
        "array%extract%2#1",
        "existing#0 (copy)"
      ]
    },
    "596": {
      "op": "pushint 8 // 8",
      "defined_out": [
        "8",
        "array%extract%2#1",
        "box_prefixed_key%0#0",
        "existing#0",
        "existing#0 (copy)",
        "tmp%9#0",
        "values%0#0",
        "values%1#0"
      ],
      "stack_out": [
        "tmp%9#0",
        "box_prefixed_key%0#0",
        "existing#0",
        "values%0#0",
        "values%1#0",
        "array%extract%2#1",
        "existing#0 (copy)",
        "8"
      ]
    },
    "598": {
      "op": "extract_uint64",
      "defined_out": [
        "array%extract%2#1",
        "box_prefixed_key%0#0",
        "existing#0",
        "tmp%9#0",
        "values%0#0",
        "values%1#0",
        "values%3#0"
      ],
      "stack_out": [
        "tmp%9#0",
        "box_prefixed_key%0#0",
        "existing#0",
        "values%0#0",
        "values%1#0",
        "array%extract%2#1",
        "values%3#0"
      ]
    },
    "599": {
      "op": "uncover 4",
      "stack_out": [
        "tmp%9#0",
        "box_prefixed_key%0#0",
        "values%0#0",
        "values%1#0",
        "array%extract%2#1",
        "values%3#0",
        "existing#0"
      ]
    },
    "601": {
      "op": "intc_1 // 0",
      "defined_out": [
        "0",
        "array%extract%2#1",
        "box_prefixed_key%0#0",
        "existing#0",
        "tmp%9#0",
        "values%0#0",
        "values%1#0",
        "values%3#0"
      ],
      "stack_out": [
        "tmp%9#0",
        "box_prefixed_key%0#0",
        "values%0#0",
        "values%1#0",
        "array%extract%2#1",
        "values%3#0",
        "existing#0",
        "0"
      ]
    },
    "602": {
      "op": "extract_uint64",
      "defined_out": [
        "array%extract%2#1",
        "box_prefixed_key%0#0",
        "tmp%9#0",
        "values%0#0",
        "values%1#0",
        "values%3#0",
        "values%4#0"
      ],
      "stack_out": [
        "tmp%9#0",
        "box_prefixed_key%0#0",
        "values%0#0",
        "values%1#0",
        "array%extract%2#1",
        "values%3#0",
        "values%4#0"
      ]
    },
    "603": {
      "op": "uncover 6",
      "stack_out": [
        "box_prefixed_key%0#0",
        "values%0#0",
        "values%1#0",
        "array%extract%2#1",
        "values%3#0",
        "values%4#0",
        "tmp%9#0"
      ]
    },
    "605": {
      "op": "+",
      "defined_out": [
        "array%extract%2#1",
        "box_prefixed_key%0#0",
        "tmp%12#0",
        "values%0#0",
        "values%1#0",
        "values%3#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "values%0#0",
        "values%1#0",
        "array%extract%2#1",
        "values%3#0",
        "tmp%12#0"
      ]
    },
    "606": {
      "op": "itob",
      "defined_out": [
        "array%extract%2#1",
        "array%val_as_bytes%2#1",
        "box_prefixed_key%0#0",
        "values%0#0",
        "values%1#0",
        "values%3#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "values%0#0",
        "values%1#0",
        "array%extract%2#1",
        "values%3#0",
        "array%val_as_bytes%2#1"
      ]
    },
    "607": {
      "op": "swap",
      "stack_out": [
        "box_prefixed_key%0#0",
        "values%0#0",
        "values%1#0",
        "array%extract%2#1",
        "array%val_as_bytes%2#1",
        "values%3#0"
      ]
    },
    "608": {
      "op": "itob",
      "defined_out": [
        "array%extract%2#1",
        "array%val_as_bytes%2#1",
        "array%val_as_bytes%3#1",
        "box_prefixed_key%0#0",
        "values%0#0",
        "values%1#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "values%0#0",
        "values%1#0",
        "array%extract%2#1",
        "array%val_as_bytes%2#1",
        "array%val_as_bytes%3#1"
      ]
    },
    "609": {
      "op": "concat",
      "defined_out": [
        "array%encoded%5#1",
        "array%extract%2#1",
        "box_prefixed_key%0#0",
        "values%0#0",
        "values%1#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "values%0#0",
        "values%1#0",
        "array%extract%2#1",
        "array%encoded%5#1"
      ]
    },
    "610": {
      "op": "swap",
      "stack_out": [
        "box_prefixed_key%0#0",
        "values%0#0",
        "values%1#0",
        "array%encoded%5#1",
        "array%extract%2#1"
      ]
    },
    "611": {
      "op": "concat",
      "defined_out": [
        "array%encoded%6#1",
        "box_prefixed_key%0#0",
        "values%0#0",
        "values%1#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "values%0#0",
        "values%1#0",
        "array%encoded%6#1"
      ]
    },
    "612": {
      "op": "uncover 2",
      "stack_out": [
        "box_prefixed_key%0#0",
        "values%1#0",
        "array%encoded%6#1",
        "values%0#0"
      ]
    },
    "614": {
      "op": "itob",
      "defined_out": [
        "array%encoded%6#1",
        "array%val_as_bytes%4#1",
        "box_prefixed_key%0#0",
        "values%1#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "values%1#0",
        "array%encoded%6#1",
        "array%val_as_bytes%4#1"
      ]
    },
    "615": {
      "op": "concat",
      "defined_out": [
        "array%encoded%7#1",
        "box_prefixed_key%0#0",
        "values%1#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "values%1#0",
        "array%encoded%7#1"
      ]
    },
    "616": {
      "op": "swap",
      "stack_out": [
        "box_prefixed_key%0#0",
        "array%encoded%7#1",
        "values%1#0"
      ]
    },
    "617": {
      "op": "itob",
      "defined_out": [
        "array%encoded%7#1",
        "array%val_as_bytes%5#1",
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "array%encoded%7#1",
        "array%val_as_bytes%5#1"
      ]
    },
    "618": {
      "op": "concat",
      "defined_out": [
        "array%encoded%8#1",
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "array%encoded%8#1"
      ]
    },
    "619": {
      "op": "box_put",
      "stack_out": []
    },
    "620": {
      "retsub": true,
      "op": "retsub"
    },
    "621": {
      "subroutine": "marketplace_with_immutable_struct.DigitalMarketplaceWithImmStruct.set_price",
      "params": {
        "asset#0": "uint64",
        "nonce#0": "uint64",
        "unitary_price#0": "uint64"
      },
      "block": "set_price",
      "stack_in": [],
      "op": "proto 3 0"
    },
    "624": {
      "op": "txn Sender",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "626": {
      "op": "frame_dig -3",
      "defined_out": [
        "asset#0 (copy)",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "asset#0 (copy)"
      ]
    },
    "628": {
      "op": "itob",
      "defined_out": [
        "array%val_as_bytes%0#1",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "array%val_as_bytes%0#1"
      ]
    },
    "629": {
      "op": "concat",
      "defined_out": [
        "array%encoded%1#1"
      ],
      "stack_out": [
        "array%encoded%1#1"
      ]
    },
    "630": {
      "op": "frame_dig -2",
      "defined_out": [
        "array%encoded%1#1",
        "nonce#0 (copy)"
      ],
      "stack_out": [
        "array%encoded%1#1",
        "nonce#0 (copy)"
      ]
    },
    "632": {
      "op": "itob",
      "defined_out": [
        "array%encoded%1#1",
        "array%val_as_bytes%1#1"
      ],
      "stack_out": [
        "array%encoded%1#1",
        "array%val_as_bytes%1#1"
      ]
    },
    "633": {
      "op": "concat",
      "defined_out": [
        "key#0"
      ],
      "stack_out": [
        "key#0"
      ]
    },
    "634": {
      "op": "bytec_0 // 0x6c697374696e6773",
      "defined_out": [
        "0x6c697374696e6773",
        "key#0"
      ],
      "stack_out": [
        "key#0",
        "0x6c697374696e6773"
      ]
    },
    "635": {
      "op": "swap",
      "stack_out": [
        "0x6c697374696e6773",
        "key#0"
      ]
    },
    "636": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0"
      ]
    },
    "637": {
      "op": "dup",
      "defined_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0 (copy)"
      ]
    },
    "638": {
      "op": "box_get",
      "defined_out": [
        "box_prefixed_key%0#0",
        "existing#0",
        "maybe_exists%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "existing#0",
        "maybe_exists%0#0"
      ]
    },
    "639": {
      "error": "check self.listings entry exists",
      "op": "assert // check self.listings entry exists",
      "stack_out": [
        "box_prefixed_key%0#0",
        "existing#0"
      ]
    },
    "640": {
      "op": "dup",
      "defined_out": [
        "box_prefixed_key%0#0",
        "existing#0",
        "existing#0 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "existing#0",
        "existing#0 (copy)"
      ]
    },
    "641": {
      "op": "intc_3 // 48",
      "defined_out": [
        "48",
        "box_prefixed_key%0#0",
        "existing#0",
        "existing#0 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "existing#0",
        "existing#0 (copy)",
        "48"
      ]
    },
    "642": {
      "op": "extract_uint64",
      "defined_out": [
        "box_prefixed_key%0#0",
        "existing#0",
        "values%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "existing#0",
        "values%0#0"
      ]
    },
    "643": {
      "op": "dig 1",
      "stack_out": [
        "box_prefixed_key%0#0",
        "existing#0",
        "values%0#0",
        "existing#0 (copy)"
      ]
    },
    "645": {
      "op": "pushint 56 // 56",
      "defined_out": [
        "56",
        "box_prefixed_key%0#0",
        "existing#0",
        "existing#0 (copy)",
        "values%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "existing#0",
        "values%0#0",
        "existing#0 (copy)",
        "56"
      ]
    },
    "647": {
      "op": "extract_uint64",
      "defined_out": [
        "box_prefixed_key%0#0",
        "existing#0",
        "values%0#0",
        "values%1#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "existing#0",
        "values%0#0",
        "values%1#0"
      ]
    },
    "648": {
      "op": "dig 2",
      "stack_out": [
        "box_prefixed_key%0#0",
        "existing#0",
        "values%0#0",
        "values%1#0",
        "existing#0 (copy)"
      ]
    },
    "650": {
      "op": "extract 16 32",
      "defined_out": [
        "array%extract%2#1",
        "box_prefixed_key%0#0",
        "existing#0",
        "values%0#0",
        "values%1#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "existing#0",
        "values%0#0",
        "values%1#0",
        "array%extract%2#1"
      ]
    },
    "653": {
      "op": "uncover 3",
      "stack_out": [
        "box_prefixed_key%0#0",
        "values%0#0",
        "values%1#0",
        "array%extract%2#1",
        "existing#0"
      ]
    },
    "655": {
      "op": "intc_1 // 0",
      "defined_out": [
        "0",
        "array%extract%2#1",
        "box_prefixed_key%0#0",
        "existing#0",
        "values%0#0",
        "values%1#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "values%0#0",
        "values%1#0",
        "array%extract%2#1",
        "existing#0",
        "0"
      ]
    },
    "656": {
      "op": "extract_uint64",
      "defined_out": [
        "array%extract%2#1",
        "box_prefixed_key%0#0",
        "values%0#0",
        "values%1#0",
        "values%3#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "values%0#0",
        "values%1#0",
        "array%extract%2#1",
        "values%3#0"
      ]
    },
    "657": {
      "op": "itob",
      "defined_out": [
        "array%extract%2#1",
        "array%val_as_bytes%2#1",
        "box_prefixed_key%0#0",
        "values%0#0",
        "values%1#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "values%0#0",
        "values%1#0",
        "array%extract%2#1",
        "array%val_as_bytes%2#1"
      ]
    },
    "658": {
      "op": "frame_dig -1",
      "defined_out": [
        "array%extract%2#1",
        "array%val_as_bytes%2#1",
        "box_prefixed_key%0#0",
        "unitary_price#0 (copy)",
        "values%0#0",
        "values%1#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "values%0#0",
        "values%1#0",
        "array%extract%2#1",
        "array%val_as_bytes%2#1",
        "unitary_price#0 (copy)"
      ]
    },
    "660": {
      "op": "itob",
      "defined_out": [
        "array%extract%2#1",
        "array%val_as_bytes%2#1",
        "array%val_as_bytes%3#1",
        "box_prefixed_key%0#0",
        "values%0#0",
        "values%1#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "values%0#0",
        "values%1#0",
        "array%extract%2#1",
        "array%val_as_bytes%2#1",
        "array%val_as_bytes%3#1"
      ]
    },
    "661": {
      "op": "concat",
      "defined_out": [
        "array%encoded%5#1",
        "array%extract%2#1",
        "box_prefixed_key%0#0",
        "values%0#0",
        "values%1#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "values%0#0",
        "values%1#0",
        "array%extract%2#1",
        "array%encoded%5#1"
      ]
    },
    "662": {
      "op": "swap",
      "stack_out": [
        "box_prefixed_key%0#0",
        "values%0#0",
        "values%1#0",
        "array%encoded%5#1",
        "array%extract%2#1"
      ]
    },
    "663": {
      "op": "concat",
      "defined_out": [
        "array%encoded%6#1",
        "box_prefixed_key%0#0",
        "values%0#0",
        "values%1#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "values%0#0",
        "values%1#0",
        "array%encoded%6#1"
      ]
    },
    "664": {
      "op": "uncover 2",
      "stack_out": [
        "box_prefixed_key%0#0",
        "values%1#0",
        "array%encoded%6#1",
        "values%0#0"
      ]
    },
    "666": {
      "op": "itob",
      "defined_out": [
        "array%encoded%6#1",
        "array%val_as_bytes%4#1",
        "box_prefixed_key%0#0",
        "values%1#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "values%1#0",
        "array%encoded%6#1",
        "array%val_as_bytes%4#1"
      ]
    },
    "667": {
      "op": "concat",
      "defined_out": [
        "array%encoded%7#1",
        "box_prefixed_key%0#0",
        "values%1#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "values%1#0",
        "array%encoded%7#1"
      ]
    },
    "668": {
      "op": "swap",
      "stack_out": [
        "box_prefixed_key%0#0",
        "array%encoded%7#1",
        "values%1#0"
      ]
    },
    "669": {
      "op": "itob",
      "defined_out": [
        "array%encoded%7#1",
        "array%val_as_bytes%5#1",
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "array%encoded%7#1",
        "array%val_as_bytes%5#1"
      ]
    },
    "670": {
      "op": "concat",
      "defined_out": [
        "array%encoded%8#1",
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "array%encoded%8#1"
      ]
    },
    "671": {
      "op": "box_put",
      "stack_out": []
    },
    "672": {
      "retsub": true,
      "op": "retsub"
    },
    "673": {
      "subroutine": "marketplace_with_immutable_struct.DigitalMarketplaceWithImmStruct.buy",
      "params": {
        "owner#0": "bytes",
        "asset#0": "uint64",
        "nonce#0": "uint64",
        "buy_pay#0": "uint64",
        "quantity#0": "uint64"
      },
      "block": "buy",
      "stack_in": [],
      "op": "proto 5 0"
    },
    "676": {
      "op": "frame_dig -4",
      "defined_out": [
        "asset#0 (copy)"
      ],
      "stack_out": [
        "asset#0 (copy)"
      ]
    },
    "678": {
      "op": "itob",
      "defined_out": [
        "array%val_as_bytes%0#1"
      ],
      "stack_out": [
        "array%val_as_bytes%0#1"
      ]
    },
    "679": {
      "op": "frame_dig -5",
      "defined_out": [
        "array%val_as_bytes%0#1",
        "owner#0 (copy)"
      ],
      "stack_out": [
        "array%val_as_bytes%0#1",
        "owner#0 (copy)"
      ]
    },
    "681": {
      "op": "swap",
      "stack_out": [
        "owner#0 (copy)",
        "array%val_as_bytes%0#1"
      ]
    },
    "682": {
      "op": "concat",
      "defined_out": [
        "array%encoded%1#1"
      ],
      "stack_out": [
        "array%encoded%1#1"
      ]
    },
    "683": {
      "op": "frame_dig -3",
      "defined_out": [
        "array%encoded%1#1",
        "nonce#0 (copy)"
      ],
      "stack_out": [
        "array%encoded%1#1",
        "nonce#0 (copy)"
      ]
    },
    "685": {
      "op": "itob",
      "defined_out": [
        "array%encoded%1#1",
        "array%val_as_bytes%1#1"
      ],
      "stack_out": [
        "array%encoded%1#1",
        "array%val_as_bytes%1#1"
      ]
    },
    "686": {
      "op": "concat",
      "defined_out": [
        "key#0"
      ],
      "stack_out": [
        "key#0"
      ]
    },
    "687": {
      "op": "bytec_0 // 0x6c697374696e6773",
      "defined_out": [
        "0x6c697374696e6773",
        "key#0"
      ],
      "stack_out": [
        "key#0",
        "0x6c697374696e6773"
      ]
    },
    "688": {
      "op": "swap",
      "stack_out": [
        "0x6c697374696e6773",
        "key#0"
      ]
    },
    "689": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0"
      ]
    },
    "690": {
      "op": "dup",
      "defined_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0 (copy)"
      ]
    },
    "691": {
      "op": "box_get",
      "defined_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "maybe_exists%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "maybe_exists%0#0"
      ]
    },
    "692": {
      "error": "check self.listings entry exists",
      "op": "assert // check self.listings entry exists",
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0"
      ]
    },
    "693": {
      "op": "dup",
      "defined_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "listing#0 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "listing#0 (copy)"
      ]
    },
    "694": {
      "op": "pushint 8 // 8",
      "defined_out": [
        "8",
        "box_prefixed_key%0#0",
        "listing#0",
        "listing#0 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "listing#0 (copy)",
        "8"
      ]
    },
    "696": {
      "op": "extract_uint64",
      "defined_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "price#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "price#0"
      ]
    },
    "697": {
      "op": "frame_dig -4",
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "price#0",
        "asset#0 (copy)"
      ]
    },
    "699": {
      "op": "asset_params_get AssetDecimals",
      "defined_out": [
        "asset_decimals#0",
        "box_prefixed_key%0#0",
        "check%0#0",
        "listing#0",
        "price#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "price#0",
        "asset_decimals#0",
        "check%0#0"
      ]
    },
    "701": {
      "error": "asset exists",
      "op": "assert // asset exists",
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "price#0",
        "asset_decimals#0"
      ]
    },
    "702": {
      "op": "dig 1",
      "defined_out": [
        "asset_decimals#0",
        "box_prefixed_key%0#0",
        "listing#0",
        "price#0",
        "price#0 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "price#0",
        "asset_decimals#0",
        "price#0 (copy)"
      ]
    },
    "704": {
      "op": "frame_dig -1",
      "defined_out": [
        "asset_decimals#0",
        "box_prefixed_key%0#0",
        "listing#0",
        "price#0",
        "price#0 (copy)",
        "quantity#0 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "price#0",
        "asset_decimals#0",
        "price#0 (copy)",
        "quantity#0 (copy)"
      ]
    },
    "706": {
      "op": "mulw",
      "defined_out": [
        "amount_not_scaled_high#0",
        "amount_not_scaled_low#0",
        "asset_decimals#0",
        "box_prefixed_key%0#0",
        "listing#0",
        "price#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "price#0",
        "asset_decimals#0",
        "amount_not_scaled_high#0",
        "amount_not_scaled_low#0"
      ]
    },
    "707": {
      "op": "pushint 10 // 10",
      "defined_out": [
        "10",
        "amount_not_scaled_high#0",
        "amount_not_scaled_low#0",
        "asset_decimals#0",
        "box_prefixed_key%0#0",
        "listing#0",
        "price#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "price#0",
        "asset_decimals#0",
        "amount_not_scaled_high#0",
        "amount_not_scaled_low#0",
        "10"
      ]
    },
    "709": {
      "op": "uncover 3",
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "price#0",
        "amount_not_scaled_high#0",
        "amount_not_scaled_low#0",
        "10",
        "asset_decimals#0"
      ]
    },
    "711": {
      "op": "expw",
      "defined_out": [
        "amount_not_scaled_high#0",
        "amount_not_scaled_low#0",
        "box_prefixed_key%0#0",
        "listing#0",
        "price#0",
        "scaling_factor_high#0",
        "scaling_factor_low#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "price#0",
        "amount_not_scaled_high#0",
        "amount_not_scaled_low#0",
        "scaling_factor_high#0",
        "scaling_factor_low#0"
      ]
    },
    "712": {
      "op": "divmodw",
      "defined_out": [
        "_quotient_high#0",
        "_remainder_high#0",
        "_remainder_low#0",
        "amount_to_be_paid#1",
        "box_prefixed_key%0#0",
        "listing#0",
        "price#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "price#0",
        "_quotient_high#0",
        "amount_to_be_paid#1",
        "_remainder_high#0",
        "_remainder_low#0"
      ]
    },
    "713": {
      "op": "popn 2",
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "price#0",
        "_quotient_high#0",
        "amount_to_be_paid#1"
      ]
    },
    "715": {
      "op": "swap",
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "price#0",
        "amount_to_be_paid#1",
        "_quotient_high#0"
      ]
    },
    "716": {
      "op": "!",
      "defined_out": [
        "amount_to_be_paid#1",
        "box_prefixed_key%0#0",
        "listing#0",
        "price#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "price#0",
        "amount_to_be_paid#1",
        "tmp%8#0"
      ]
    },
    "717": {
      "op": "assert",
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "price#0",
        "amount_to_be_paid#1"
      ]
    },
    "718": {
      "op": "frame_dig -2",
      "defined_out": [
        "amount_to_be_paid#1",
        "box_prefixed_key%0#0",
        "buy_pay#0 (copy)",
        "listing#0",
        "price#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "price#0",
        "amount_to_be_paid#1",
        "buy_pay#0 (copy)"
      ]
    },
    "720": {
      "op": "gtxns Sender",
      "defined_out": [
        "amount_to_be_paid#1",
        "box_prefixed_key%0#0",
        "listing#0",
        "price#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "price#0",
        "amount_to_be_paid#1",
        "tmp%2#0"
      ]
    },
    "722": {
      "op": "txn Sender",
      "defined_out": [
        "amount_to_be_paid#1",
        "box_prefixed_key%0#0",
        "listing#0",
        "price#0",
        "tmp%2#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "price#0",
        "amount_to_be_paid#1",
        "tmp%2#0",
        "tmp%3#0"
      ]
    },
    "724": {
      "op": "==",
      "defined_out": [
        "amount_to_be_paid#1",
        "box_prefixed_key%0#0",
        "listing#0",
        "price#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "price#0",
        "amount_to_be_paid#1",
        "tmp%4#0"
      ]
    },
    "725": {
      "op": "assert",
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "price#0",
        "amount_to_be_paid#1"
      ]
    },
    "726": {
      "op": "frame_dig -2",
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "price#0",
        "amount_to_be_paid#1",
        "buy_pay#0 (copy)"
      ]
    },
    "728": {
      "op": "gtxns Receiver",
      "defined_out": [
        "amount_to_be_paid#1",
        "box_prefixed_key%0#0",
        "listing#0",
        "price#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "price#0",
        "amount_to_be_paid#1",
        "tmp%5#0"
      ]
    },
    "730": {
      "op": "frame_dig -5",
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "price#0",
        "amount_to_be_paid#1",
        "tmp%5#0",
        "owner#0 (copy)"
      ]
    },
    "732": {
      "op": "==",
      "defined_out": [
        "amount_to_be_paid#1",
        "box_prefixed_key%0#0",
        "listing#0",
        "price#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "price#0",
        "amount_to_be_paid#1",
        "tmp%6#0"
      ]
    },
    "733": {
      "op": "assert",
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "price#0",
        "amount_to_be_paid#1"
      ]
    },
    "734": {
      "op": "frame_dig -2",
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "price#0",
        "amount_to_be_paid#1",
        "buy_pay#0 (copy)"
      ]
    },
    "736": {
      "op": "gtxns Amount",
      "defined_out": [
        "amount_to_be_paid#1",
        "box_prefixed_key%0#0",
        "listing#0",
        "price#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "price#0",
        "amount_to_be_paid#1",
        "tmp%7#0"
      ]
    },
    "738": {
      "op": "==",
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "price#0",
        "tmp%8#0"
      ]
    },
    "739": {
      "op": "assert",
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "price#0"
      ]
    },
    "740": {
      "op": "dig 1",
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "price#0",
        "listing#0 (copy)"
      ]
    },
    "742": {
      "op": "intc_3 // 48",
      "defined_out": [
        "48",
        "box_prefixed_key%0#0",
        "listing#0",
        "listing#0 (copy)",
        "price#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "price#0",
        "listing#0 (copy)",
        "48"
      ]
    },
    "743": {
      "op": "extract_uint64",
      "defined_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "price#0",
        "values%1#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "price#0",
        "values%1#0"
      ]
    },
    "744": {
      "op": "dig 2",
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "price#0",
        "values%1#0",
        "listing#0 (copy)"
      ]
    },
    "746": {
      "op": "pushint 56 // 56",
      "defined_out": [
        "56",
        "box_prefixed_key%0#0",
        "listing#0",
        "listing#0 (copy)",
        "price#0",
        "values%1#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "price#0",
        "values%1#0",
        "listing#0 (copy)",
        "56"
      ]
    },
    "748": {
      "op": "extract_uint64",
      "defined_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "price#0",
        "values%1#0",
        "values%2#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "price#0",
        "values%1#0",
        "values%2#0"
      ]
    },
    "749": {
      "op": "dig 3",
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "price#0",
        "values%1#0",
        "values%2#0",
        "listing#0 (copy)"
      ]
    },
    "751": {
      "op": "extract 16 32",
      "defined_out": [
        "array%extract%3#1",
        "box_prefixed_key%0#0",
        "listing#0",
        "price#0",
        "values%1#0",
        "values%2#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "price#0",
        "values%1#0",
        "values%2#0",
        "array%extract%3#1"
      ]
    },
    "754": {
      "op": "uncover 4",
      "stack_out": [
        "box_prefixed_key%0#0",
        "price#0",
        "values%1#0",
        "values%2#0",
        "array%extract%3#1",
        "listing#0"
      ]
    },
    "756": {
      "op": "intc_1 // 0",
      "defined_out": [
        "0",
        "array%extract%3#1",
        "box_prefixed_key%0#0",
        "listing#0",
        "price#0",
        "values%1#0",
        "values%2#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "price#0",
        "values%1#0",
        "values%2#0",
        "array%extract%3#1",
        "listing#0",
        "0"
      ]
    },
    "757": {
      "op": "extract_uint64",
      "defined_out": [
        "array%extract%3#1",
        "box_prefixed_key%0#0",
        "price#0",
        "values%1#0",
        "values%2#0",
        "values%5#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "price#0",
        "values%1#0",
        "values%2#0",
        "array%extract%3#1",
        "values%5#0"
      ]
    },
    "758": {
      "op": "frame_dig -1",
      "stack_out": [
        "box_prefixed_key%0#0",
        "price#0",
        "values%1#0",
        "values%2#0",
        "array%extract%3#1",
        "values%5#0",
        "quantity#0 (copy)"
      ]
    },
    "760": {
      "op": "-",
      "defined_out": [
        "array%extract%3#1",
        "box_prefixed_key%0#0",
        "price#0",
        "tmp%9#0",
        "values%1#0",
        "values%2#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "price#0",
        "values%1#0",
        "values%2#0",
        "array%extract%3#1",
        "tmp%9#0"
      ]
    },
    "761": {
      "op": "itob",
      "defined_out": [
        "array%extract%3#1",
        "array%val_as_bytes%2#1",
        "box_prefixed_key%0#0",
        "price#0",
        "values%1#0",
        "values%2#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "price#0",
        "values%1#0",
        "values%2#0",
        "array%extract%3#1",
        "array%val_as_bytes%2#1"
      ]
    },
    "762": {
      "op": "uncover 4",
      "stack_out": [
        "box_prefixed_key%0#0",
        "values%1#0",
        "values%2#0",
        "array%extract%3#1",
        "array%val_as_bytes%2#1",
        "price#0"
      ]
    },
    "764": {
      "op": "itob",
      "defined_out": [
        "array%extract%3#1",
        "array%val_as_bytes%2#1",
        "array%val_as_bytes%3#1",
        "box_prefixed_key%0#0",
        "values%1#0",
        "values%2#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "values%1#0",
        "values%2#0",
        "array%extract%3#1",
        "array%val_as_bytes%2#1",
        "array%val_as_bytes%3#1"
      ]
    },
    "765": {
      "op": "concat",
      "defined_out": [
        "array%encoded%5#1",
        "array%extract%3#1",
        "box_prefixed_key%0#0",
        "values%1#0",
        "values%2#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "values%1#0",
        "values%2#0",
        "array%extract%3#1",
        "array%encoded%5#1"
      ]
    },
    "766": {
      "op": "swap",
      "stack_out": [
        "box_prefixed_key%0#0",
        "values%1#0",
        "values%2#0",
        "array%encoded%5#1",
        "array%extract%3#1"
      ]
    },
    "767": {
      "op": "concat",
      "defined_out": [
        "array%encoded%6#1",
        "box_prefixed_key%0#0",
        "values%1#0",
        "values%2#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "values%1#0",
        "values%2#0",
        "array%encoded%6#1"
      ]
    },
    "768": {
      "op": "uncover 2",
      "stack_out": [
        "box_prefixed_key%0#0",
        "values%2#0",
        "array%encoded%6#1",
        "values%1#0"
      ]
    },
    "770": {
      "op": "itob",
      "defined_out": [
        "array%encoded%6#1",
        "array%val_as_bytes%4#1",
        "box_prefixed_key%0#0",
        "values%2#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "values%2#0",
        "array%encoded%6#1",
        "array%val_as_bytes%4#1"
      ]
    },
    "771": {
      "op": "concat",
      "defined_out": [
        "array%encoded%7#1",
        "box_prefixed_key%0#0",
        "values%2#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "values%2#0",
        "array%encoded%7#1"
      ]
    },
    "772": {
      "op": "swap",
      "stack_out": [
        "box_prefixed_key%0#0",
        "array%encoded%7#1",
        "values%2#0"
      ]
    },
    "773": {
      "op": "itob",
      "defined_out": [
        "array%encoded%7#1",
        "array%val_as_bytes%5#1",
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "array%encoded%7#1",
        "array%val_as_bytes%5#1"
      ]
    },
    "774": {
      "op": "concat",
      "defined_out": [
        "array%encoded%8#1",
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "array%encoded%8#1"
      ]
    },
    "775": {
      "op": "box_put",
      "stack_out": []
    },
    "776": {
      "op": "itxn_begin"
    },
    "777": {
      "op": "txn Sender",
      "defined_out": [
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0"
      ]
    },
    "779": {
      "op": "frame_dig -1",
      "stack_out": [
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "quantity#0 (copy)"
      ]
    },
    "781": {
      "op": "itxn_field AssetAmount",
      "stack_out": [
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0"
      ]
    },
    "783": {
      "op": "itxn_field AssetReceiver",
      "stack_out": []
    },
    "785": {
      "op": "frame_dig -4",
      "stack_out": [
        "asset#0 (copy)"
      ]
    },
    "787": {
      "op": "itxn_field XferAsset",
      "stack_out": []
    },
    "789": {
      "op": "intc_2 // axfer",
      "defined_out": [
        "axfer"
      ],
      "stack_out": [
        "axfer"
      ]
    },
    "790": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "792": {
      "op": "intc_1 // 0",
      "stack_out": [
        "0"
      ]
    },
    "793": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "795": {
      "op": "itxn_submit"
    },
    "796": {
      "retsub": true,
      "op": "retsub"
    },
    "797": {
      "subroutine": "marketplace_with_immutable_struct.DigitalMarketplaceWithImmStruct.withdraw",
      "params": {
        "asset#0": "uint64",
        "nonce#0": "uint64"
      },
      "block": "withdraw",
      "stack_in": [],
      "op": "proto 2 0"
    },
    "800": {
      "op": "txn Sender",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "802": {
      "op": "frame_dig -2",
      "defined_out": [
        "asset#0 (copy)",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "asset#0 (copy)"
      ]
    },
    "804": {
      "op": "itob",
      "defined_out": [
        "array%val_as_bytes%0#1",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "array%val_as_bytes%0#1"
      ]
    },
    "805": {
      "op": "concat",
      "defined_out": [
        "array%encoded%1#1"
      ],
      "stack_out": [
        "array%encoded%1#1"
      ]
    },
    "806": {
      "op": "frame_dig -1",
      "defined_out": [
        "array%encoded%1#1",
        "nonce#0 (copy)"
      ],
      "stack_out": [
        "array%encoded%1#1",
        "nonce#0 (copy)"
      ]
    },
    "808": {
      "op": "itob",
      "defined_out": [
        "array%encoded%1#1",
        "array%val_as_bytes%1#1"
      ],
      "stack_out": [
        "array%encoded%1#1",
        "array%val_as_bytes%1#1"
      ]
    },
    "809": {
      "op": "concat",
      "defined_out": [
        "key#0"
      ],
      "stack_out": [
        "key#0"
      ]
    },
    "810": {
      "op": "bytec_0 // 0x6c697374696e6773",
      "defined_out": [
        "0x6c697374696e6773",
        "key#0"
      ],
      "stack_out": [
        "key#0",
        "0x6c697374696e6773"
      ]
    },
    "811": {
      "op": "swap",
      "stack_out": [
        "0x6c697374696e6773",
        "key#0"
      ]
    },
    "812": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0"
      ]
    },
    "813": {
      "op": "dup",
      "defined_out": [
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0"
      ]
    },
    "814": {
      "op": "box_get",
      "defined_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "maybe_exists%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "maybe_exists%0#0"
      ]
    },
    "815": {
      "op": "swap",
      "stack_out": [
        "box_prefixed_key%0#0",
        "maybe_exists%0#0",
        "listing#0"
      ]
    },
    "816": {
      "op": "dup",
      "stack_out": [
        "box_prefixed_key%0#0",
        "maybe_exists%0#0",
        "listing#0",
        "listing#0 (copy)"
      ]
    },
    "817": {
      "op": "uncover 2",
      "defined_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "maybe_exists%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "listing#0",
        "maybe_exists%0#0"
      ]
    },
    "819": {
      "error": "check self.listings entry exists",
      "op": "assert // check self.listings entry exists",
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "listing#0"
      ]
    },
    "820": {
      "op": "extract 16 32",
      "defined_out": [
        "array%extract%0#1",
        "box_prefixed_key%0#0",
        "listing#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "array%extract%0#1"
      ]
    },
    "823": {
      "op": "dup",
      "defined_out": [
        "array%extract%0#1",
        "box_prefixed_key%0#0",
        "listing#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "array%extract%0#1",
        "array%extract%0#1"
      ]
    },
    "824": {
      "op": "global ZeroAddress",
      "defined_out": [
        "array%extract%0#1",
        "box_prefixed_key%0#0",
        "listing#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "array%extract%0#1",
        "array%extract%0#1",
        "tmp%2#0"
      ]
    },
    "826": {
      "op": "!=",
      "defined_out": [
        "array%extract%0#1",
        "box_prefixed_key%0#0",
        "listing#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "array%extract%0#1",
        "tmp%3#0"
      ]
    },
    "827": {
      "op": "bz withdraw_after_if_else@3",
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "array%extract%0#1"
      ]
    },
    "830": {
      "op": "frame_dig 1",
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "array%extract%0#1",
        "listing#0"
      ]
    },
    "832": {
      "op": "dup",
      "defined_out": [
        "array%extract%0#1",
        "box_prefixed_key%0#0",
        "listing#0",
        "listing#0 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "array%extract%0#1",
        "listing#0",
        "listing#0 (copy)"
      ]
    },
    "833": {
      "op": "intc_3 // 48",
      "defined_out": [
        "48",
        "array%extract%0#1",
        "box_prefixed_key%0#0",
        "listing#0",
        "listing#0 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "array%extract%0#1",
        "listing#0",
        "listing#0 (copy)",
        "48"
      ]
    },
    "834": {
      "op": "extract_uint64",
      "defined_out": [
        "array%extract%0#1",
        "box_prefixed_key%0#0",
        "listing#0",
        "quantity#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "array%extract%0#1",
        "listing#0",
        "quantity#0"
      ]
    },
    "835": {
      "op": "swap",
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "array%extract%0#1",
        "quantity#0",
        "listing#0"
      ]
    },
    "836": {
      "op": "pushint 56 // 56",
      "defined_out": [
        "56",
        "array%extract%0#1",
        "box_prefixed_key%0#0",
        "listing#0",
        "quantity#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "array%extract%0#1",
        "quantity#0",
        "listing#0",
        "56"
      ]
    },
    "838": {
      "op": "extract_uint64",
      "defined_out": [
        "array%extract%0#1",
        "box_prefixed_key%0#0",
        "listing#0",
        "price#0",
        "quantity#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "array%extract%0#1",
        "quantity#0",
        "price#0"
      ]
    },
    "839": {
      "op": "frame_dig -2",
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "array%extract%0#1",
        "quantity#0",
        "price#0",
        "asset#0 (copy)"
      ]
    },
    "841": {
      "op": "asset_params_get AssetDecimals",
      "defined_out": [
        "array%extract%0#1",
        "asset_decimals#0",
        "box_prefixed_key%0#0",
        "check%0#0",
        "listing#0",
        "price#0",
        "quantity#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "array%extract%0#1",
        "quantity#0",
        "price#0",
        "asset_decimals#0",
        "check%0#0"
      ]
    },
    "843": {
      "error": "asset exists",
      "op": "assert // asset exists",
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "array%extract%0#1",
        "quantity#0",
        "price#0",
        "asset_decimals#0"
      ]
    },
    "844": {
      "op": "swap",
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "array%extract%0#1",
        "quantity#0",
        "asset_decimals#0",
        "price#0"
      ]
    },
    "845": {
      "op": "uncover 2",
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "array%extract%0#1",
        "asset_decimals#0",
        "price#0",
        "quantity#0"
      ]
    },
    "847": {
      "op": "mulw",
      "defined_out": [
        "amount_not_scaled_high#0",
        "amount_not_scaled_low#0",
        "array%extract%0#1",
        "asset_decimals#0",
        "box_prefixed_key%0#0",
        "listing#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "array%extract%0#1",
        "asset_decimals#0",
        "amount_not_scaled_high#0",
        "amount_not_scaled_low#0"
      ]
    },
    "848": {
      "op": "pushint 10 // 10",
      "defined_out": [
        "10",
        "amount_not_scaled_high#0",
        "amount_not_scaled_low#0",
        "array%extract%0#1",
        "asset_decimals#0",
        "box_prefixed_key%0#0",
        "listing#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "array%extract%0#1",
        "asset_decimals#0",
        "amount_not_scaled_high#0",
        "amount_not_scaled_low#0",
        "10"
      ]
    },
    "850": {
      "op": "uncover 3",
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "array%extract%0#1",
        "amount_not_scaled_high#0",
        "amount_not_scaled_low#0",
        "10",
        "asset_decimals#0"
      ]
    },
    "852": {
      "op": "expw",
      "defined_out": [
        "amount_not_scaled_high#0",
        "amount_not_scaled_low#0",
        "array%extract%0#1",
        "box_prefixed_key%0#0",
        "listing#0",
        "scaling_factor_high#0",
        "scaling_factor_low#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "array%extract%0#1",
        "amount_not_scaled_high#0",
        "amount_not_scaled_low#0",
        "scaling_factor_high#0",
        "scaling_factor_low#0"
      ]
    },
    "853": {
      "op": "divmodw",
      "defined_out": [
        "_quotient_high#0",
        "_remainder_high#0",
        "_remainder_low#0",
        "amount_to_be_paid#0",
        "array%extract%0#1",
        "box_prefixed_key%0#0",
        "listing#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "array%extract%0#1",
        "_quotient_high#0",
        "amount_to_be_paid#0",
        "_remainder_high#0",
        "_remainder_low#0"
      ]
    },
    "854": {
      "op": "popn 2",
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "array%extract%0#1",
        "_quotient_high#0",
        "amount_to_be_paid#0"
      ]
    },
    "856": {
      "op": "swap",
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "array%extract%0#1",
        "amount_to_be_paid#0",
        "_quotient_high#0"
      ]
    },
    "857": {
      "op": "!",
      "defined_out": [
        "amount_to_be_paid#0",
        "array%extract%0#1",
        "box_prefixed_key%0#0",
        "listing#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "array%extract%0#1",
        "amount_to_be_paid#0",
        "tmp%8#0"
      ]
    },
    "858": {
      "op": "assert",
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "array%extract%0#1",
        "amount_to_be_paid#0"
      ]
    },
    "859": {
      "op": "itxn_begin"
    },
    "860": {
      "op": "itxn_field Amount",
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "array%extract%0#1"
      ]
    },
    "862": {
      "op": "frame_dig 2",
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "array%extract%0#1",
        "array%extract%0#1"
      ]
    },
    "864": {
      "op": "itxn_field Receiver",
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "array%extract%0#1"
      ]
    },
    "866": {
      "op": "intc_0 // pay",
      "defined_out": [
        "array%extract%0#1",
        "box_prefixed_key%0#0",
        "listing#0",
        "pay"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "array%extract%0#1",
        "pay"
      ]
    },
    "867": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "array%extract%0#1"
      ]
    },
    "869": {
      "op": "intc_1 // 0",
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "array%extract%0#1",
        "0"
      ]
    },
    "870": {
      "op": "itxn_field Fee",
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "array%extract%0#1"
      ]
    },
    "872": {
      "op": "itxn_submit"
    },
    "873": {
      "block": "withdraw_after_if_else@3",
      "stack_in": [
        "box_prefixed_key%0#0",
        "listing#0",
        "array%extract%0#1"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "array%extract%0#1",
        "box_prefixed_key%0#0"
      ]
    },
    "875": {
      "op": "box_del",
      "defined_out": [
        "box_prefixed_key%0#0",
        "{box_del}"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "array%extract%0#1",
        "{box_del}"
      ]
    },
    "876": {
      "op": "pop",
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "array%extract%0#1"
      ]
    },
    "877": {
      "op": "itxn_begin"
    },
    "878": {
      "op": "txn Sender",
      "defined_out": [
        "box_prefixed_key%0#0",
        "inner_txn_params%1%%param_Receiver_idx_0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "array%extract%0#1",
        "inner_txn_params%1%%param_Receiver_idx_0#0"
      ]
    },
    "880": {
      "op": "intc 4 // 50500",
      "defined_out": [
        "50500",
        "box_prefixed_key%0#0",
        "inner_txn_params%1%%param_Receiver_idx_0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "array%extract%0#1",
        "inner_txn_params%1%%param_Receiver_idx_0#0",
        "50500"
      ]
    },
    "882": {
      "op": "itxn_field Amount",
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "array%extract%0#1",
        "inner_txn_params%1%%param_Receiver_idx_0#0"
      ]
    },
    "884": {
      "op": "itxn_field Receiver",
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "array%extract%0#1"
      ]
    },
    "886": {
      "op": "intc_0 // pay",
      "defined_out": [
        "box_prefixed_key%0#0",
        "pay"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "array%extract%0#1",
        "pay"
      ]
    },
    "887": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "array%extract%0#1"
      ]
    },
    "889": {
      "op": "intc_1 // 0",
      "defined_out": [
        "0",
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "array%extract%0#1",
        "0"
      ]
    },
    "890": {
      "op": "itxn_field Fee",
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "array%extract%0#1"
      ]
    },
    "892": {
      "op": "itxn_submit"
    },
    "893": {
      "op": "itxn_begin"
    },
    "894": {
      "op": "txn Sender",
      "defined_out": [
        "box_prefixed_key%0#0",
        "inner_txn_params%2%%param_AssetReceiver_idx_0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "array%extract%0#1",
        "inner_txn_params%2%%param_AssetReceiver_idx_0#0"
      ]
    },
    "896": {
      "op": "frame_dig 1",
      "defined_out": [
        "box_prefixed_key%0#0",
        "inner_txn_params%2%%param_AssetReceiver_idx_0#0",
        "listing#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "array%extract%0#1",
        "inner_txn_params%2%%param_AssetReceiver_idx_0#0",
        "listing#0"
      ]
    },
    "898": {
      "op": "intc_1 // 0",
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "array%extract%0#1",
        "inner_txn_params%2%%param_AssetReceiver_idx_0#0",
        "listing#0",
        "0"
      ]
    },
    "899": {
      "op": "extract_uint64",
      "defined_out": [
        "box_prefixed_key%0#0",
        "inner_txn_params%2%%param_AssetReceiver_idx_0#0",
        "listing#0",
        "values%4#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "array%extract%0#1",
        "inner_txn_params%2%%param_AssetReceiver_idx_0#0",
        "values%4#0"
      ]
    },
    "900": {
      "op": "itxn_field AssetAmount",
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "array%extract%0#1",
        "inner_txn_params%2%%param_AssetReceiver_idx_0#0"
      ]
    },
    "902": {
      "op": "itxn_field AssetReceiver",
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "array%extract%0#1"
      ]
    },
    "904": {
      "op": "frame_dig -2",
      "defined_out": [
        "asset#0 (copy)",
        "box_prefixed_key%0#0",
        "listing#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "array%extract%0#1",
        "asset#0 (copy)"
      ]
    },
    "906": {
      "op": "itxn_field XferAsset",
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "array%extract%0#1"
      ]
    },
    "908": {
      "op": "intc_2 // axfer",
      "defined_out": [
        "axfer",
        "box_prefixed_key%0#0",
        "listing#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "array%extract%0#1",
        "axfer"
      ]
    },
    "909": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "array%extract%0#1"
      ]
    },
    "911": {
      "op": "intc_1 // 0",
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "array%extract%0#1",
        "0"
      ]
    },
    "912": {
      "op": "itxn_field Fee",
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "array%extract%0#1"
      ]
    },
    "914": {
      "op": "itxn_submit"
    },
    "915": {
      "retsub": true,
      "op": "retsub"
    },
    "916": {
      "subroutine": "marketplace_with_immutable_struct.DigitalMarketplaceWithImmStruct.bid",
      "params": {
        "owner#0": "bytes",
        "asset#0": "uint64",
        "nonce#0": "uint64",
        "bid_pay#0": "uint64",
        "quantity#0": "uint64",
        "unitary_price#0": "uint64"
      },
      "block": "bid",
      "stack_in": [],
      "op": "proto 6 0"
    },
    "919": {
      "op": "frame_dig -5",
      "defined_out": [
        "asset#0 (copy)"
      ],
      "stack_out": [
        "asset#0 (copy)"
      ]
    },
    "921": {
      "op": "itob",
      "defined_out": [
        "array%val_as_bytes%0#1"
      ],
      "stack_out": [
        "array%val_as_bytes%0#1"
      ]
    },
    "922": {
      "op": "frame_dig -6",
      "defined_out": [
        "array%val_as_bytes%0#1",
        "owner#0 (copy)"
      ],
      "stack_out": [
        "array%val_as_bytes%0#1",
        "owner#0 (copy)"
      ]
    },
    "924": {
      "op": "swap",
      "stack_out": [
        "owner#0 (copy)",
        "array%val_as_bytes%0#1"
      ]
    },
    "925": {
      "op": "concat",
      "defined_out": [
        "array%encoded%1#1"
      ],
      "stack_out": [
        "array%encoded%1#1"
      ]
    },
    "926": {
      "op": "frame_dig -4",
      "defined_out": [
        "array%encoded%1#1",
        "nonce#0 (copy)"
      ],
      "stack_out": [
        "array%encoded%1#1",
        "nonce#0 (copy)"
      ]
    },
    "928": {
      "op": "itob",
      "defined_out": [
        "array%encoded%1#1",
        "array%val_as_bytes%1#1"
      ],
      "stack_out": [
        "array%encoded%1#1",
        "array%val_as_bytes%1#1"
      ]
    },
    "929": {
      "op": "concat",
      "defined_out": [
        "key#0"
      ],
      "stack_out": [
        "key#0"
      ]
    },
    "930": {
      "op": "bytec_0 // 0x6c697374696e6773",
      "defined_out": [
        "0x6c697374696e6773",
        "key#0"
      ],
      "stack_out": [
        "key#0",
        "0x6c697374696e6773"
      ]
    },
    "931": {
      "op": "swap",
      "stack_out": [
        "0x6c697374696e6773",
        "key#0"
      ]
    },
    "932": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0"
      ]
    },
    "933": {
      "op": "dup",
      "defined_out": [
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0"
      ]
    },
    "934": {
      "op": "box_get",
      "defined_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "maybe_exists%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "maybe_exists%0#0"
      ]
    },
    "935": {
      "op": "swap",
      "stack_out": [
        "box_prefixed_key%0#0",
        "maybe_exists%0#0",
        "listing#0"
      ]
    },
    "936": {
      "op": "dup",
      "stack_out": [
        "box_prefixed_key%0#0",
        "maybe_exists%0#0",
        "listing#0",
        "listing#0 (copy)"
      ]
    },
    "937": {
      "op": "uncover 2",
      "defined_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "maybe_exists%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "listing#0",
        "maybe_exists%0#0"
      ]
    },
    "939": {
      "error": "check self.listings entry exists",
      "op": "assert // check self.listings entry exists",
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "listing#0"
      ]
    },
    "940": {
      "op": "extract 16 32",
      "defined_out": [
        "array%extract%0#1",
        "box_prefixed_key%0#0",
        "listing#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "array%extract%0#1"
      ]
    },
    "943": {
      "op": "dup",
      "defined_out": [
        "array%extract%0#1",
        "box_prefixed_key%0#0",
        "listing#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "array%extract%0#1",
        "array%extract%0#1"
      ]
    },
    "944": {
      "op": "global ZeroAddress",
      "defined_out": [
        "array%extract%0#1",
        "box_prefixed_key%0#0",
        "listing#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "array%extract%0#1",
        "array%extract%0#1",
        "tmp%1#0"
      ]
    },
    "946": {
      "op": "!=",
      "defined_out": [
        "array%extract%0#1",
        "box_prefixed_key%0#0",
        "listing#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "array%extract%0#1",
        "tmp%2#0"
      ]
    },
    "947": {
      "op": "bz bid_after_if_else@3",
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "array%extract%0#1"
      ]
    },
    "950": {
      "op": "frame_dig 1",
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "array%extract%0#1",
        "listing#0"
      ]
    },
    "952": {
      "op": "dup",
      "defined_out": [
        "array%extract%0#1",
        "box_prefixed_key%0#0",
        "listing#0",
        "listing#0 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "array%extract%0#1",
        "listing#0",
        "listing#0 (copy)"
      ]
    },
    "953": {
      "op": "pushint 56 // 56",
      "defined_out": [
        "56",
        "array%extract%0#1",
        "box_prefixed_key%0#0",
        "listing#0",
        "listing#0 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "array%extract%0#1",
        "listing#0",
        "listing#0 (copy)",
        "56"
      ]
    },
    "955": {
      "op": "extract_uint64",
      "defined_out": [
        "array%extract%0#1",
        "box_prefixed_key%0#0",
        "listing#0",
        "price#1"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "array%extract%0#1",
        "listing#0",
        "price#1"
      ]
    },
    "956": {
      "op": "frame_dig -1",
      "defined_out": [
        "array%extract%0#1",
        "box_prefixed_key%0#0",
        "listing#0",
        "price#1",
        "unitary_price#0 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "array%extract%0#1",
        "listing#0",
        "price#1",
        "unitary_price#0 (copy)"
      ]
    },
    "958": {
      "op": "dig 1",
      "defined_out": [
        "array%extract%0#1",
        "box_prefixed_key%0#0",
        "listing#0",
        "price#1",
        "price#1 (copy)",
        "unitary_price#0 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "array%extract%0#1",
        "listing#0",
        "price#1",
        "unitary_price#0 (copy)",
        "price#1 (copy)"
      ]
    },
    "960": {
      "op": ">",
      "defined_out": [
        "array%extract%0#1",
        "box_prefixed_key%0#0",
        "listing#0",
        "price#1",
        "tmp%3#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "array%extract%0#1",
        "listing#0",
        "price#1",
        "tmp%3#0"
      ]
    },
    "961": {
      "op": "assert",
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "array%extract%0#1",
        "listing#0",
        "price#1"
      ]
    },
    "962": {
      "op": "swap",
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "array%extract%0#1",
        "price#1",
        "listing#0"
      ]
    },
    "963": {
      "op": "intc_3 // 48",
      "defined_out": [
        "48",
        "array%extract%0#1",
        "box_prefixed_key%0#0",
        "listing#0",
        "price#1"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "array%extract%0#1",
        "price#1",
        "listing#0",
        "48"
      ]
    },
    "964": {
      "op": "extract_uint64",
      "defined_out": [
        "array%extract%0#1",
        "box_prefixed_key%0#0",
        "listing#0",
        "price#1",
        "quantity#2"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "array%extract%0#1",
        "price#1",
        "quantity#2"
      ]
    },
    "965": {
      "op": "frame_dig -5",
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "array%extract%0#1",
        "price#1",
        "quantity#2",
        "asset#0 (copy)"
      ]
    },
    "967": {
      "op": "asset_params_get AssetDecimals",
      "defined_out": [
        "array%extract%0#1",
        "asset_decimals#0",
        "box_prefixed_key%0#0",
        "check%0#0",
        "listing#0",
        "price#1",
        "quantity#2"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "array%extract%0#1",
        "price#1",
        "quantity#2",
        "asset_decimals#0",
        "check%0#0"
      ]
    },
    "969": {
      "error": "asset exists",
      "op": "assert // asset exists",
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "array%extract%0#1",
        "price#1",
        "quantity#2",
        "asset_decimals#0"
      ]
    },
    "970": {
      "op": "cover 2",
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "array%extract%0#1",
        "asset_decimals#0",
        "price#1",
        "quantity#2"
      ]
    },
    "972": {
      "op": "mulw",
      "defined_out": [
        "amount_not_scaled_high#0",
        "amount_not_scaled_low#0",
        "array%extract%0#1",
        "asset_decimals#0",
        "box_prefixed_key%0#0",
        "listing#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "array%extract%0#1",
        "asset_decimals#0",
        "amount_not_scaled_high#0",
        "amount_not_scaled_low#0"
      ]
    },
    "973": {
      "op": "pushint 10 // 10",
      "defined_out": [
        "10",
        "amount_not_scaled_high#0",
        "amount_not_scaled_low#0",
        "array%extract%0#1",
        "asset_decimals#0",
        "box_prefixed_key%0#0",
        "listing#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "array%extract%0#1",
        "asset_decimals#0",
        "amount_not_scaled_high#0",
        "amount_not_scaled_low#0",
        "10"
      ]
    },
    "975": {
      "op": "uncover 3",
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "array%extract%0#1",
        "amount_not_scaled_high#0",
        "amount_not_scaled_low#0",
        "10",
        "asset_decimals#0"
      ]
    },
    "977": {
      "op": "expw",
      "defined_out": [
        "amount_not_scaled_high#0",
        "amount_not_scaled_low#0",
        "array%extract%0#1",
        "box_prefixed_key%0#0",
        "listing#0",
        "scaling_factor_high#0",
        "scaling_factor_low#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "array%extract%0#1",
        "amount_not_scaled_high#0",
        "amount_not_scaled_low#0",
        "scaling_factor_high#0",
        "scaling_factor_low#0"
      ]
    },
    "978": {
      "op": "divmodw",
      "defined_out": [
        "_quotient_high#0",
        "_remainder_high#0",
        "_remainder_low#0",
        "amount_to_be_paid#0",
        "array%extract%0#1",
        "box_prefixed_key%0#0",
        "listing#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "array%extract%0#1",
        "_quotient_high#0",
        "amount_to_be_paid#0",
        "_remainder_high#0",
        "_remainder_low#0"
      ]
    },
    "979": {
      "op": "popn 2",
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "array%extract%0#1",
        "_quotient_high#0",
        "amount_to_be_paid#0"
      ]
    },
    "981": {
      "op": "swap",
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "array%extract%0#1",
        "amount_to_be_paid#0",
        "_quotient_high#0"
      ]
    },
    "982": {
      "op": "!",
      "defined_out": [
        "amount_to_be_paid#0",
        "array%extract%0#1",
        "box_prefixed_key%0#0",
        "listing#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "array%extract%0#1",
        "amount_to_be_paid#0",
        "tmp%8#0"
      ]
    },
    "983": {
      "op": "assert",
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "array%extract%0#1",
        "amount_to_be_paid#0"
      ]
    },
    "984": {
      "op": "itxn_begin"
    },
    "985": {
      "op": "itxn_field Amount",
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "array%extract%0#1"
      ]
    },
    "987": {
      "op": "frame_dig 2",
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "array%extract%0#1",
        "array%extract%0#1"
      ]
    },
    "989": {
      "op": "itxn_field Receiver",
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "array%extract%0#1"
      ]
    },
    "991": {
      "op": "intc_0 // pay",
      "defined_out": [
        "array%extract%0#1",
        "box_prefixed_key%0#0",
        "listing#0",
        "pay"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "array%extract%0#1",
        "pay"
      ]
    },
    "992": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "array%extract%0#1"
      ]
    },
    "994": {
      "op": "intc_1 // 0",
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "array%extract%0#1",
        "0"
      ]
    },
    "995": {
      "op": "itxn_field Fee",
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "array%extract%0#1"
      ]
    },
    "997": {
      "op": "itxn_submit"
    },
    "998": {
      "block": "bid_after_if_else@3",
      "stack_in": [
        "box_prefixed_key%0#0",
        "listing#0",
        "array%extract%0#1"
      ],
      "op": "frame_dig -5",
      "defined_out": [
        "asset#0 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "array%extract%0#1",
        "asset#0 (copy)"
      ]
    },
    "1000": {
      "op": "asset_params_get AssetDecimals",
      "defined_out": [
        "asset_decimals#0",
        "check%1#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "array%extract%0#1",
        "asset_decimals#0",
        "check%1#0"
      ]
    },
    "1002": {
      "error": "asset exists",
      "op": "assert // asset exists",
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "array%extract%0#1",
        "asset_decimals#0"
      ]
    },
    "1003": {
      "op": "frame_dig -1",
      "defined_out": [
        "asset_decimals#0",
        "unitary_price#0 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "array%extract%0#1",
        "asset_decimals#0",
        "unitary_price#0 (copy)"
      ]
    },
    "1005": {
      "op": "frame_dig -2",
      "defined_out": [
        "asset_decimals#0",
        "quantity#0 (copy)",
        "unitary_price#0 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "array%extract%0#1",
        "asset_decimals#0",
        "unitary_price#0 (copy)",
        "quantity#0 (copy)"
      ]
    },
    "1007": {
      "op": "mulw",
      "defined_out": [
        "amount_not_scaled_high#0",
        "amount_not_scaled_low#0",
        "asset_decimals#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "array%extract%0#1",
        "asset_decimals#0",
        "amount_not_scaled_high#0",
        "amount_not_scaled_low#0"
      ]
    },
    "1008": {
      "op": "pushint 10 // 10",
      "defined_out": [
        "10",
        "amount_not_scaled_high#0",
        "amount_not_scaled_low#0",
        "asset_decimals#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "array%extract%0#1",
        "asset_decimals#0",
        "amount_not_scaled_high#0",
        "amount_not_scaled_low#0",
        "10"
      ]
    },
    "1010": {
      "op": "uncover 3",
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "array%extract%0#1",
        "amount_not_scaled_high#0",
        "amount_not_scaled_low#0",
        "10",
        "asset_decimals#0"
      ]
    },
    "1012": {
      "op": "expw",
      "defined_out": [
        "amount_not_scaled_high#0",
        "amount_not_scaled_low#0",
        "scaling_factor_high#0",
        "scaling_factor_low#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "array%extract%0#1",
        "amount_not_scaled_high#0",
        "amount_not_scaled_low#0",
        "scaling_factor_high#0",
        "scaling_factor_low#0"
      ]
    },
    "1013": {
      "op": "divmodw",
      "defined_out": [
        "_quotient_high#0",
        "_remainder_high#0",
        "_remainder_low#0",
        "amount_to_be_paid#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "array%extract%0#1",
        "_quotient_high#0",
        "amount_to_be_paid#0",
        "_remainder_high#0",
        "_remainder_low#0"
      ]
    },
    "1014": {
      "op": "popn 2",
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "array%extract%0#1",
        "_quotient_high#0",
        "amount_to_be_paid#0"
      ]
    },
    "1016": {
      "op": "swap",
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "array%extract%0#1",
        "amount_to_be_paid#0",
        "_quotient_high#0"
      ]
    },
    "1017": {
      "op": "!",
      "defined_out": [
        "amount_to_be_paid#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "array%extract%0#1",
        "amount_to_be_paid#0",
        "tmp%8#0"
      ]
    },
    "1018": {
      "op": "assert",
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "array%extract%0#1",
        "amount_to_be_paid#0"
      ]
    },
    "1019": {
      "op": "frame_dig -3",
      "defined_out": [
        "amount_to_be_paid#0",
        "bid_pay#0 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "array%extract%0#1",
        "amount_to_be_paid#0",
        "bid_pay#0 (copy)"
      ]
    },
    "1021": {
      "op": "gtxns Sender",
      "defined_out": [
        "amount_to_be_paid#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "array%extract%0#1",
        "amount_to_be_paid#0",
        "tmp%6#0"
      ]
    },
    "1023": {
      "op": "txn Sender",
      "defined_out": [
        "amount_to_be_paid#0",
        "tmp%6#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "array%extract%0#1",
        "amount_to_be_paid#0",
        "tmp%6#0",
        "tmp%7#0"
      ]
    },
    "1025": {
      "op": "==",
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "array%extract%0#1",
        "amount_to_be_paid#0",
        "tmp%8#0"
      ]
    },
    "1026": {
      "op": "assert",
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "array%extract%0#1",
        "amount_to_be_paid#0"
      ]
    },
    "1027": {
      "op": "frame_dig -3",
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "array%extract%0#1",
        "amount_to_be_paid#0",
        "bid_pay#0 (copy)"
      ]
    },
    "1029": {
      "op": "gtxns Receiver",
      "defined_out": [
        "amount_to_be_paid#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "array%extract%0#1",
        "amount_to_be_paid#0",
        "tmp%9#0"
      ]
    },
    "1031": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "amount_to_be_paid#0",
        "tmp%10#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "array%extract%0#1",
        "amount_to_be_paid#0",
        "tmp%9#0",
        "tmp%10#0"
      ]
    },
    "1033": {
      "op": "==",
      "defined_out": [
        "amount_to_be_paid#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "array%extract%0#1",
        "amount_to_be_paid#0",
        "tmp%11#0"
      ]
    },
    "1034": {
      "op": "assert",
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "array%extract%0#1",
        "amount_to_be_paid#0"
      ]
    },
    "1035": {
      "op": "frame_dig -3",
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "array%extract%0#1",
        "amount_to_be_paid#0",
        "bid_pay#0 (copy)"
      ]
    },
    "1037": {
      "op": "gtxns Amount",
      "defined_out": [
        "amount_to_be_paid#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "array%extract%0#1",
        "amount_to_be_paid#0",
        "tmp%12#0"
      ]
    },
    "1039": {
      "op": "==",
      "defined_out": [
        "tmp%13#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "array%extract%0#1",
        "tmp%13#0"
      ]
    },
    "1040": {
      "op": "assert",
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "array%extract%0#1"
      ]
    },
    "1041": {
      "op": "frame_dig 1",
      "defined_out": [
        "listing#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "array%extract%0#1",
        "listing#0"
      ]
    },
    "1043": {
      "op": "dup",
      "defined_out": [
        "listing#0",
        "listing#0 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "array%extract%0#1",
        "listing#0",
        "listing#0 (copy)"
      ]
    },
    "1044": {
      "op": "intc_1 // 0",
      "defined_out": [
        "0",
        "listing#0",
        "listing#0 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "array%extract%0#1",
        "listing#0",
        "listing#0 (copy)",
        "0"
      ]
    },
    "1045": {
      "op": "extract_uint64",
      "defined_out": [
        "listing#0",
        "values%5#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "array%extract%0#1",
        "listing#0",
        "values%5#0"
      ]
    },
    "1046": {
      "op": "swap",
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "array%extract%0#1",
        "values%5#0",
        "listing#0"
      ]
    },
    "1047": {
      "op": "pushint 8 // 8",
      "defined_out": [
        "8",
        "listing#0",
        "values%5#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "array%extract%0#1",
        "values%5#0",
        "listing#0",
        "8"
      ]
    },
    "1049": {
      "op": "extract_uint64",
      "defined_out": [
        "listing#0",
        "values%5#0",
        "values%6#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "array%extract%0#1",
        "values%5#0",
        "values%6#0"
      ]
    },
    "1050": {
      "op": "txn Sender",
      "defined_out": [
        "listing#0",
        "tmp%14#0",
        "values%5#0",
        "values%6#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "array%extract%0#1",
        "values%5#0",
        "values%6#0",
        "tmp%14#0"
      ]
    },
    "1052": {
      "op": "uncover 2",
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "array%extract%0#1",
        "values%6#0",
        "tmp%14#0",
        "values%5#0"
      ]
    },
    "1054": {
      "op": "itob",
      "defined_out": [
        "array%val_as_bytes%2#1",
        "listing#0",
        "tmp%14#0",
        "values%6#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "array%extract%0#1",
        "values%6#0",
        "tmp%14#0",
        "array%val_as_bytes%2#1"
      ]
    },
    "1055": {
      "op": "uncover 2",
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "array%extract%0#1",
        "tmp%14#0",
        "array%val_as_bytes%2#1",
        "values%6#0"
      ]
    },
    "1057": {
      "op": "itob",
      "defined_out": [
        "array%val_as_bytes%2#1",
        "array%val_as_bytes%3#1",
        "listing#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "array%extract%0#1",
        "tmp%14#0",
        "array%val_as_bytes%2#1",
        "array%val_as_bytes%3#1"
      ]
    },
    "1058": {
      "op": "concat",
      "defined_out": [
        "array%encoded%5#1",
        "listing#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "array%extract%0#1",
        "tmp%14#0",
        "array%encoded%5#1"
      ]
    },
    "1059": {
      "op": "swap",
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "array%extract%0#1",
        "array%encoded%5#1",
        "tmp%14#0"
      ]
    },
    "1060": {
      "op": "concat",
      "defined_out": [
        "array%encoded%6#1",
        "listing#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "array%extract%0#1",
        "array%encoded%6#1"
      ]
    },
    "1061": {
      "op": "frame_dig -2",
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "array%extract%0#1",
        "array%encoded%6#1",
        "quantity#0 (copy)"
      ]
    },
    "1063": {
      "op": "itob",
      "defined_out": [
        "array%encoded%6#1",
        "array%val_as_bytes%4#1",
        "listing#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "array%extract%0#1",
        "array%encoded%6#1",
        "array%val_as_bytes%4#1"
      ]
    },
    "1064": {
      "op": "concat",
      "defined_out": [
        "array%encoded%7#1",
        "listing#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "array%extract%0#1",
        "array%encoded%7#1"
      ]
    },
    "1065": {
      "op": "frame_dig -1",
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "array%extract%0#1",
        "array%encoded%7#1",
        "unitary_price#0 (copy)"
      ]
    },
    "1067": {
      "op": "itob",
      "defined_out": [
        "array%encoded%7#1",
        "array%val_as_bytes%5#1",
        "listing#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "array%extract%0#1",
        "array%encoded%7#1",
        "array%val_as_bytes%5#1"
      ]
    },
    "1068": {
      "op": "concat",
      "defined_out": [
        "array%encoded%8#1",
        "listing#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "array%extract%0#1",
        "array%encoded%8#1"
      ]
    },
    "1069": {
      "op": "frame_dig 0",
      "defined_out": [
        "array%encoded%8#1",
        "box_prefixed_key%0#0",
        "listing#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "array%extract%0#1",
        "array%encoded%8#1",
        "box_prefixed_key%0#0"
      ]
    },
    "1071": {
      "op": "swap",
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "array%extract%0#1",
        "box_prefixed_key%0#0",
        "array%encoded%8#1"
      ]
    },
    "1072": {
      "op": "box_put",
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "array%extract%0#1"
      ]
    },
    "1073": {
      "retsub": true,
      "op": "retsub"
    },
    "1074": {
      "subroutine": "marketplace_with_immutable_struct.DigitalMarketplaceWithImmStruct.accept_bid",
      "params": {
        "asset#0": "uint64",
        "nonce#0": "uint64"
      },
      "block": "accept_bid",
      "stack_in": [],
      "op": "proto 2 0"
    },
    "1077": {
      "op": "txn Sender",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1079": {
      "op": "frame_dig -2",
      "defined_out": [
        "asset#0 (copy)",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "asset#0 (copy)"
      ]
    },
    "1081": {
      "op": "itob",
      "defined_out": [
        "array%val_as_bytes%0#1",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "array%val_as_bytes%0#1"
      ]
    },
    "1082": {
      "op": "concat",
      "defined_out": [
        "array%encoded%1#1"
      ],
      "stack_out": [
        "array%encoded%1#1"
      ]
    },
    "1083": {
      "op": "frame_dig -1",
      "defined_out": [
        "array%encoded%1#1",
        "nonce#0 (copy)"
      ],
      "stack_out": [
        "array%encoded%1#1",
        "nonce#0 (copy)"
      ]
    },
    "1085": {
      "op": "itob",
      "defined_out": [
        "array%encoded%1#1",
        "array%val_as_bytes%1#1"
      ],
      "stack_out": [
        "array%encoded%1#1",
        "array%val_as_bytes%1#1"
      ]
    },
    "1086": {
      "op": "concat",
      "defined_out": [
        "key#0"
      ],
      "stack_out": [
        "key#0"
      ]
    },
    "1087": {
      "op": "bytec_0 // 0x6c697374696e6773",
      "defined_out": [
        "0x6c697374696e6773",
        "key#0"
      ],
      "stack_out": [
        "key#0",
        "0x6c697374696e6773"
      ]
    },
    "1088": {
      "op": "swap",
      "stack_out": [
        "0x6c697374696e6773",
        "key#0"
      ]
    },
    "1089": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0"
      ]
    },
    "1090": {
      "op": "dup",
      "defined_out": [
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0"
      ]
    },
    "1091": {
      "op": "box_get",
      "defined_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "maybe_exists%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "maybe_exists%0#0"
      ]
    },
    "1092": {
      "op": "swap",
      "stack_out": [
        "box_prefixed_key%0#0",
        "maybe_exists%0#0",
        "listing#0"
      ]
    },
    "1093": {
      "op": "dup",
      "stack_out": [
        "box_prefixed_key%0#0",
        "maybe_exists%0#0",
        "listing#0",
        "listing#0 (copy)"
      ]
    },
    "1094": {
      "op": "uncover 2",
      "defined_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "maybe_exists%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "listing#0",
        "maybe_exists%0#0"
      ]
    },
    "1096": {
      "error": "check self.listings entry exists",
      "op": "assert // check self.listings entry exists",
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "listing#0"
      ]
    },
    "1097": {
      "op": "dup",
      "defined_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "listing#0 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "listing#0",
        "listing#0 (copy)"
      ]
    },
    "1098": {
      "op": "extract 16 32",
      "defined_out": [
        "array%extract%0#1",
        "box_prefixed_key%0#0",
        "listing#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "listing#0",
        "array%extract%0#1"
      ]
    },
    "1101": {
      "op": "dup",
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "listing#0",
        "array%extract%0#1",
        "array%extract%0#1"
      ]
    },
    "1102": {
      "op": "cover 2",
      "defined_out": [
        "array%extract%0#1",
        "box_prefixed_key%0#0",
        "listing#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "array%extract%0#1",
        "listing#0",
        "array%extract%0#1"
      ]
    },
    "1104": {
      "op": "global ZeroAddress",
      "defined_out": [
        "array%extract%0#1",
        "box_prefixed_key%0#0",
        "listing#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "array%extract%0#1",
        "listing#0",
        "array%extract%0#1",
        "tmp%2#0"
      ]
    },
    "1106": {
      "op": "!=",
      "defined_out": [
        "array%extract%0#1",
        "box_prefixed_key%0#0",
        "listing#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "array%extract%0#1",
        "listing#0",
        "tmp%3#0"
      ]
    },
    "1107": {
      "op": "assert",
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "array%extract%0#1",
        "listing#0"
      ]
    },
    "1108": {
      "op": "dup",
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "array%extract%0#1",
        "listing#0",
        "listing#0 (copy)"
      ]
    },
    "1109": {
      "op": "intc_1 // 0",
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "array%extract%0#1",
        "listing#0",
        "listing#0 (copy)",
        "0"
      ]
    },
    "1110": {
      "op": "extract_uint64",
      "defined_out": [
        "array%extract%0#1",
        "box_prefixed_key%0#0",
        "listing#0",
        "values%1#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "array%extract%0#1",
        "listing#0",
        "values%1#0"
      ]
    },
    "1111": {
      "op": "dup",
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "array%extract%0#1",
        "listing#0",
        "values%1#0",
        "values%1#0 (copy)"
      ]
    },
    "1112": {
      "op": "uncover 2",
      "defined_out": [
        "array%extract%0#1",
        "box_prefixed_key%0#0",
        "listing#0",
        "values%1#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "array%extract%0#1",
        "values%1#0",
        "values%1#0",
        "listing#0"
      ]
    },
    "1114": {
      "op": "intc_3 // 48",
      "defined_out": [
        "48",
        "array%extract%0#1",
        "box_prefixed_key%0#0",
        "listing#0",
        "values%1#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "array%extract%0#1",
        "values%1#0",
        "values%1#0",
        "listing#0",
        "48"
      ]
    },
    "1115": {
      "op": "extract_uint64",
      "defined_out": [
        "array%extract%0#1",
        "box_prefixed_key%0#0",
        "listing#0",
        "values%1#0",
        "values%2#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "array%extract%0#1",
        "values%1#0",
        "values%1#0",
        "values%2#0"
      ]
    },
    "1116": {
      "op": "dup",
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "array%extract%0#1",
        "values%1#0",
        "values%1#0",
        "values%2#0",
        "values%2#0"
      ]
    },
    "1117": {
      "op": "cover 2",
      "defined_out": [
        "array%extract%0#1",
        "box_prefixed_key%0#0",
        "listing#0",
        "values%1#0",
        "values%2#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "array%extract%0#1",
        "values%1#0",
        "values%2#0",
        "values%1#0",
        "values%2#0"
      ]
    },
    "1119": {
      "op": "<",
      "defined_out": [
        "array%extract%0#1",
        "box_prefixed_key%0#0",
        "listing#0",
        "tmp%4#0",
        "values%1#0",
        "values%2#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "array%extract%0#1",
        "values%1#0",
        "values%2#0",
        "tmp%4#0"
      ]
    },
    "1120": {
      "op": "bz accept_bid_ternary_false@2",
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "array%extract%0#1",
        "values%1#0",
        "values%2#0"
      ]
    },
    "1123": {
      "op": "frame_dig 3",
      "defined_out": [
        "array%extract%0#1",
        "box_prefixed_key%0#0",
        "listing#0",
        "min_quantity#0",
        "values%1#0",
        "values%2#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "array%extract%0#1",
        "values%1#0",
        "values%2#0",
        "min_quantity#0"
      ]
    },
    "1125": {
      "block": "accept_bid_ternary_merge@3",
      "stack_in": [
        "box_prefixed_key%0#0",
        "listing#0",
        "array%extract%0#1",
        "values%1#0",
        "values%2#0",
        "min_quantity#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "listing#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "array%extract%0#1",
        "values%1#0",
        "values%2#0",
        "min_quantity#0",
        "listing#0"
      ]
    },
    "1127": {
      "op": "dup",
      "defined_out": [
        "listing#0",
        "listing#0 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "array%extract%0#1",
        "values%1#0",
        "values%2#0",
        "min_quantity#0",
        "listing#0",
        "listing#0 (copy)"
      ]
    },
    "1128": {
      "op": "pushint 56 // 56",
      "defined_out": [
        "56",
        "listing#0",
        "listing#0 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "array%extract%0#1",
        "values%1#0",
        "values%2#0",
        "min_quantity#0",
        "listing#0",
        "listing#0 (copy)",
        "56"
      ]
    },
    "1130": {
      "op": "extract_uint64",
      "defined_out": [
        "listing#0",
        "price#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "array%extract%0#1",
        "values%1#0",
        "values%2#0",
        "min_quantity#0",
        "listing#0",
        "price#0"
      ]
    },
    "1131": {
      "op": "frame_dig -2",
      "defined_out": [
        "asset#0 (copy)",
        "listing#0",
        "price#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "array%extract%0#1",
        "values%1#0",
        "values%2#0",
        "min_quantity#0",
        "listing#0",
        "price#0",
        "asset#0 (copy)"
      ]
    },
    "1133": {
      "op": "asset_params_get AssetDecimals",
      "defined_out": [
        "asset_decimals#0",
        "check%0#0",
        "listing#0",
        "price#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "array%extract%0#1",
        "values%1#0",
        "values%2#0",
        "min_quantity#0",
        "listing#0",
        "price#0",
        "asset_decimals#0",
        "check%0#0"
      ]
    },
    "1135": {
      "error": "asset exists",
      "op": "assert // asset exists",
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "array%extract%0#1",
        "values%1#0",
        "values%2#0",
        "min_quantity#0",
        "listing#0",
        "price#0",
        "asset_decimals#0"
      ]
    },
    "1136": {
      "op": "dig 1",
      "defined_out": [
        "asset_decimals#0",
        "listing#0",
        "price#0",
        "price#0 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "array%extract%0#1",
        "values%1#0",
        "values%2#0",
        "min_quantity#0",
        "listing#0",
        "price#0",
        "asset_decimals#0",
        "price#0 (copy)"
      ]
    },
    "1138": {
      "op": "uncover 4",
      "defined_out": [
        "asset_decimals#0",
        "listing#0",
        "min_quantity#0",
        "price#0",
        "price#0 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "array%extract%0#1",
        "values%1#0",
        "values%2#0",
        "listing#0",
        "price#0",
        "asset_decimals#0",
        "price#0 (copy)",
        "min_quantity#0"
      ]
    },
    "1140": {
      "op": "dup",
      "defined_out": [
        "asset_decimals#0",
        "listing#0",
        "min_quantity#0 (copy)",
        "price#0",
        "price#0 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "array%extract%0#1",
        "values%1#0",
        "values%2#0",
        "listing#0",
        "price#0",
        "asset_decimals#0",
        "price#0 (copy)",
        "min_quantity#0 (copy)",
        "min_quantity#0 (copy)"
      ]
    },
    "1141": {
      "op": "cover 3",
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "array%extract%0#1",
        "values%1#0",
        "values%2#0",
        "listing#0",
        "price#0",
        "min_quantity#0",
        "asset_decimals#0",
        "price#0 (copy)",
        "min_quantity#0 (copy)"
      ]
    },
    "1143": {
      "op": "mulw",
      "defined_out": [
        "amount_not_scaled_high#0",
        "amount_not_scaled_low#0",
        "asset_decimals#0",
        "listing#0",
        "min_quantity#0",
        "price#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "array%extract%0#1",
        "values%1#0",
        "values%2#0",
        "listing#0",
        "price#0",
        "min_quantity#0",
        "asset_decimals#0",
        "amount_not_scaled_high#0",
        "amount_not_scaled_low#0"
      ]
    },
    "1144": {
      "op": "pushint 10 // 10",
      "defined_out": [
        "10",
        "amount_not_scaled_high#0",
        "amount_not_scaled_low#0",
        "asset_decimals#0",
        "listing#0",
        "min_quantity#0",
        "price#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "array%extract%0#1",
        "values%1#0",
        "values%2#0",
        "listing#0",
        "price#0",
        "min_quantity#0",
        "asset_decimals#0",
        "amount_not_scaled_high#0",
        "amount_not_scaled_low#0",
        "10"
      ]
    },
    "1146": {
      "op": "uncover 3",
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "array%extract%0#1",
        "values%1#0",
        "values%2#0",
        "listing#0",
        "price#0",
        "min_quantity#0",
        "amount_not_scaled_high#0",
        "amount_not_scaled_low#0",
        "10",
        "asset_decimals#0"
      ]
    },
    "1148": {
      "op": "expw",
      "defined_out": [
        "amount_not_scaled_high#0",
        "amount_not_scaled_low#0",
        "listing#0",
        "min_quantity#0",
        "price#0",
        "scaling_factor_high#0",
        "scaling_factor_low#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "array%extract%0#1",
        "values%1#0",
        "values%2#0",
        "listing#0",
        "price#0",
        "min_quantity#0",
        "amount_not_scaled_high#0",
        "amount_not_scaled_low#0",
        "scaling_factor_high#0",
        "scaling_factor_low#0"
      ]
    },
    "1149": {
      "op": "divmodw",
      "defined_out": [
        "_quotient_high#0",
        "_remainder_high#0",
        "_remainder_low#0",
        "amount_to_be_paid#0",
        "listing#0",
        "min_quantity#0",
        "price#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "array%extract%0#1",
        "values%1#0",
        "values%2#0",
        "listing#0",
        "price#0",
        "min_quantity#0",
        "_quotient_high#0",
        "amount_to_be_paid#0",
        "_remainder_high#0",
        "_remainder_low#0"
      ]
    },
    "1150": {
      "op": "popn 2",
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "array%extract%0#1",
        "values%1#0",
        "values%2#0",
        "listing#0",
        "price#0",
        "min_quantity#0",
        "_quotient_high#0",
        "amount_to_be_paid#0"
      ]
    },
    "1152": {
      "op": "swap",
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "array%extract%0#1",
        "values%1#0",
        "values%2#0",
        "listing#0",
        "price#0",
        "min_quantity#0",
        "amount_to_be_paid#0",
        "_quotient_high#0"
      ]
    },
    "1153": {
      "op": "!",
      "defined_out": [
        "amount_to_be_paid#0",
        "listing#0",
        "min_quantity#0",
        "price#0",
        "tmp%8#1"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "array%extract%0#1",
        "values%1#0",
        "values%2#0",
        "listing#0",
        "price#0",
        "min_quantity#0",
        "amount_to_be_paid#0",
        "tmp%8#1"
      ]
    },
    "1154": {
      "op": "assert",
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "array%extract%0#1",
        "values%1#0",
        "values%2#0",
        "listing#0",
        "price#0",
        "min_quantity#0",
        "amount_to_be_paid#0"
      ]
    },
    "1155": {
      "op": "itxn_begin"
    },
    "1156": {
      "op": "txn Sender",
      "defined_out": [
        "amount_to_be_paid#0",
        "inner_txn_params%0%%param_Receiver_idx_0#0",
        "listing#0",
        "min_quantity#0",
        "price#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "array%extract%0#1",
        "values%1#0",
        "values%2#0",
        "listing#0",
        "price#0",
        "min_quantity#0",
        "amount_to_be_paid#0",
        "inner_txn_params%0%%param_Receiver_idx_0#0"
      ]
    },
    "1158": {
      "op": "itxn_field Receiver"
    },
    "1160": {
      "op": "itxn_field Amount",
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "array%extract%0#1",
        "values%1#0",
        "values%2#0",
        "listing#0",
        "price#0",
        "min_quantity#0"
      ]
    },
    "1162": {
      "op": "intc_0 // pay",
      "defined_out": [
        "listing#0",
        "min_quantity#0",
        "pay",
        "price#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "array%extract%0#1",
        "values%1#0",
        "values%2#0",
        "listing#0",
        "price#0",
        "min_quantity#0",
        "pay"
      ]
    },
    "1163": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "array%extract%0#1",
        "values%1#0",
        "values%2#0",
        "listing#0",
        "price#0",
        "min_quantity#0"
      ]
    },
    "1165": {
      "op": "intc_1 // 0",
      "defined_out": [
        "0",
        "listing#0",
        "min_quantity#0",
        "price#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "array%extract%0#1",
        "values%1#0",
        "values%2#0",
        "listing#0",
        "price#0",
        "min_quantity#0",
        "0"
      ]
    },
    "1166": {
      "op": "itxn_field Fee",
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "array%extract%0#1",
        "values%1#0",
        "values%2#0",
        "listing#0",
        "price#0",
        "min_quantity#0"
      ]
    },
    "1168": {
      "op": "itxn_submit"
    },
    "1169": {
      "op": "itxn_begin"
    },
    "1170": {
      "op": "dup",
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "array%extract%0#1",
        "values%1#0",
        "values%2#0",
        "listing#0",
        "price#0",
        "min_quantity#0",
        "min_quantity#0 (copy)"
      ]
    },
    "1171": {
      "op": "itxn_field AssetAmount",
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "array%extract%0#1",
        "values%1#0",
        "values%2#0",
        "listing#0",
        "price#0",
        "min_quantity#0"
      ]
    },
    "1173": {
      "op": "frame_dig 2",
      "defined_out": [
        "array%extract%0#1",
        "listing#0",
        "min_quantity#0",
        "price#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "array%extract%0#1",
        "values%1#0",
        "values%2#0",
        "listing#0",
        "price#0",
        "min_quantity#0",
        "array%extract%0#1"
      ]
    },
    "1175": {
      "op": "dup",
      "defined_out": [
        "array%extract%0#1",
        "array%extract%0#1 (copy)",
        "listing#0",
        "min_quantity#0",
        "price#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "array%extract%0#1",
        "values%1#0",
        "values%2#0",
        "listing#0",
        "price#0",
        "min_quantity#0",
        "array%extract%0#1 (copy)",
        "array%extract%0#1 (copy)"
      ]
    },
    "1176": {
      "op": "cover 2",
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "array%extract%0#1",
        "values%1#0",
        "values%2#0",
        "listing#0",
        "price#0",
        "array%extract%0#1",
        "min_quantity#0",
        "array%extract%0#1 (copy)"
      ]
    },
    "1178": {
      "op": "itxn_field AssetReceiver",
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "array%extract%0#1",
        "values%1#0",
        "values%2#0",
        "listing#0",
        "price#0",
        "array%extract%0#1",
        "min_quantity#0"
      ]
    },
    "1180": {
      "op": "frame_dig -2",
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "array%extract%0#1",
        "values%1#0",
        "values%2#0",
        "listing#0",
        "price#0",
        "array%extract%0#1",
        "min_quantity#0",
        "asset#0 (copy)"
      ]
    },
    "1182": {
      "op": "itxn_field XferAsset",
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "array%extract%0#1",
        "values%1#0",
        "values%2#0",
        "listing#0",
        "price#0",
        "array%extract%0#1",
        "min_quantity#0"
      ]
    },
    "1184": {
      "op": "intc_2 // axfer",
      "defined_out": [
        "array%extract%0#1",
        "axfer",
        "listing#0",
        "min_quantity#0",
        "price#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "array%extract%0#1",
        "values%1#0",
        "values%2#0",
        "listing#0",
        "price#0",
        "array%extract%0#1",
        "min_quantity#0",
        "axfer"
      ]
    },
    "1185": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "array%extract%0#1",
        "values%1#0",
        "values%2#0",
        "listing#0",
        "price#0",
        "array%extract%0#1",
        "min_quantity#0"
      ]
    },
    "1187": {
      "op": "intc_1 // 0",
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "array%extract%0#1",
        "values%1#0",
        "values%2#0",
        "listing#0",
        "price#0",
        "array%extract%0#1",
        "min_quantity#0",
        "0"
      ]
    },
    "1188": {
      "op": "itxn_field Fee",
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "array%extract%0#1",
        "values%1#0",
        "values%2#0",
        "listing#0",
        "price#0",
        "array%extract%0#1",
        "min_quantity#0"
      ]
    },
    "1190": {
      "op": "itxn_submit"
    },
    "1191": {
      "op": "uncover 3",
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "array%extract%0#1",
        "values%1#0",
        "values%2#0",
        "price#0",
        "array%extract%0#1",
        "min_quantity#0",
        "listing#0"
      ]
    },
    "1193": {
      "op": "pushint 8 // 8",
      "defined_out": [
        "8",
        "array%extract%0#1",
        "listing#0",
        "min_quantity#0",
        "price#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "array%extract%0#1",
        "values%1#0",
        "values%2#0",
        "price#0",
        "array%extract%0#1",
        "min_quantity#0",
        "listing#0",
        "8"
      ]
    },
    "1195": {
      "op": "extract_uint64",
      "defined_out": [
        "array%extract%0#1",
        "listing#0",
        "min_quantity#0",
        "price#0",
        "values%9#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "array%extract%0#1",
        "values%1#0",
        "values%2#0",
        "price#0",
        "array%extract%0#1",
        "min_quantity#0",
        "values%9#0"
      ]
    },
    "1196": {
      "op": "frame_dig 3",
      "defined_out": [
        "array%extract%0#1",
        "listing#0",
        "min_quantity#0",
        "price#0",
        "values%1#0",
        "values%9#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "array%extract%0#1",
        "values%1#0",
        "values%2#0",
        "price#0",
        "array%extract%0#1",
        "min_quantity#0",
        "values%9#0",
        "values%1#0"
      ]
    },
    "1198": {
      "op": "dig 2",
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "array%extract%0#1",
        "values%1#0",
        "values%2#0",
        "price#0",
        "array%extract%0#1",
        "min_quantity#0",
        "values%9#0",
        "values%1#0",
        "min_quantity#0 (copy)"
      ]
    },
    "1200": {
      "op": "-",
      "defined_out": [
        "array%extract%0#1",
        "listing#0",
        "min_quantity#0",
        "price#0",
        "tmp%6#0",
        "values%1#0",
        "values%9#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "array%extract%0#1",
        "values%1#0",
        "values%2#0",
        "price#0",
        "array%extract%0#1",
        "min_quantity#0",
        "values%9#0",
        "tmp%6#0"
      ]
    },
    "1201": {
      "op": "frame_dig 4",
      "defined_out": [
        "array%extract%0#1",
        "listing#0",
        "min_quantity#0",
        "price#0",
        "tmp%6#0",
        "values%1#0",
        "values%2#0",
        "values%9#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "array%extract%0#1",
        "values%1#0",
        "values%2#0",
        "price#0",
        "array%extract%0#1",
        "min_quantity#0",
        "values%9#0",
        "tmp%6#0",
        "values%2#0"
      ]
    },
    "1203": {
      "op": "uncover 3",
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "array%extract%0#1",
        "values%1#0",
        "values%2#0",
        "price#0",
        "array%extract%0#1",
        "values%9#0",
        "tmp%6#0",
        "values%2#0",
        "min_quantity#0"
      ]
    },
    "1205": {
      "op": "-",
      "defined_out": [
        "array%extract%0#1",
        "listing#0",
        "price#0",
        "tmp%6#0",
        "tmp%7#0",
        "values%1#0",
        "values%2#0",
        "values%9#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "array%extract%0#1",
        "values%1#0",
        "values%2#0",
        "price#0",
        "array%extract%0#1",
        "values%9#0",
        "tmp%6#0",
        "tmp%7#0"
      ]
    },
    "1206": {
      "op": "swap",
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "array%extract%0#1",
        "values%1#0",
        "values%2#0",
        "price#0",
        "array%extract%0#1",
        "values%9#0",
        "tmp%7#0",
        "tmp%6#0"
      ]
    },
    "1207": {
      "op": "itob",
      "defined_out": [
        "array%extract%0#1",
        "array%val_as_bytes%2#1",
        "listing#0",
        "price#0",
        "tmp%7#0",
        "values%1#0",
        "values%2#0",
        "values%9#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "array%extract%0#1",
        "values%1#0",
        "values%2#0",
        "price#0",
        "array%extract%0#1",
        "values%9#0",
        "tmp%7#0",
        "array%val_as_bytes%2#1"
      ]
    },
    "1208": {
      "op": "uncover 2",
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "array%extract%0#1",
        "values%1#0",
        "values%2#0",
        "price#0",
        "array%extract%0#1",
        "tmp%7#0",
        "array%val_as_bytes%2#1",
        "values%9#0"
      ]
    },
    "1210": {
      "op": "itob",
      "defined_out": [
        "array%extract%0#1",
        "array%val_as_bytes%2#1",
        "array%val_as_bytes%3#1",
        "listing#0",
        "price#0",
        "tmp%7#0",
        "values%1#0",
        "values%2#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "array%extract%0#1",
        "values%1#0",
        "values%2#0",
        "price#0",
        "array%extract%0#1",
        "tmp%7#0",
        "array%val_as_bytes%2#1",
        "array%val_as_bytes%3#1"
      ]
    },
    "1211": {
      "op": "concat",
      "defined_out": [
        "array%encoded%5#1",
        "array%extract%0#1",
        "listing#0",
        "price#0",
        "tmp%7#0",
        "values%1#0",
        "values%2#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "array%extract%0#1",
        "values%1#0",
        "values%2#0",
        "price#0",
        "array%extract%0#1",
        "tmp%7#0",
        "array%encoded%5#1"
      ]
    },
    "1212": {
      "op": "uncover 2",
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "array%extract%0#1",
        "values%1#0",
        "values%2#0",
        "price#0",
        "tmp%7#0",
        "array%encoded%5#1",
        "array%extract%0#1"
      ]
    },
    "1214": {
      "op": "concat",
      "defined_out": [
        "array%encoded%6#1",
        "array%extract%0#1",
        "listing#0",
        "price#0",
        "tmp%7#0",
        "values%1#0",
        "values%2#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "array%extract%0#1",
        "values%1#0",
        "values%2#0",
        "price#0",
        "tmp%7#0",
        "array%encoded%6#1"
      ]
    },
    "1215": {
      "op": "swap",
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "array%extract%0#1",
        "values%1#0",
        "values%2#0",
        "price#0",
        "array%encoded%6#1",
        "tmp%7#0"
      ]
    },
    "1216": {
      "op": "itob",
      "defined_out": [
        "array%encoded%6#1",
        "array%extract%0#1",
        "array%val_as_bytes%4#1",
        "listing#0",
        "price#0",
        "values%1#0",
        "values%2#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "array%extract%0#1",
        "values%1#0",
        "values%2#0",
        "price#0",
        "array%encoded%6#1",
        "array%val_as_bytes%4#1"
      ]
    },
    "1217": {
      "op": "concat",
      "defined_out": [
        "array%encoded%7#1",
        "array%extract%0#1",
        "listing#0",
        "price#0",
        "values%1#0",
        "values%2#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "array%extract%0#1",
        "values%1#0",
        "values%2#0",
        "price#0",
        "array%encoded%7#1"
      ]
    },
    "1218": {
      "op": "swap",
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "array%extract%0#1",
        "values%1#0",
        "values%2#0",
        "array%encoded%7#1",
        "price#0"
      ]
    },
    "1219": {
      "op": "itob",
      "defined_out": [
        "array%encoded%7#1",
        "array%extract%0#1",
        "array%val_as_bytes%5#1",
        "listing#0",
        "values%1#0",
        "values%2#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "array%extract%0#1",
        "values%1#0",
        "values%2#0",
        "array%encoded%7#1",
        "array%val_as_bytes%5#1"
      ]
    },
    "1220": {
      "op": "concat",
      "defined_out": [
        "array%encoded%8#1",
        "array%extract%0#1",
        "listing#0",
        "values%1#0",
        "values%2#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "array%extract%0#1",
        "values%1#0",
        "values%2#0",
        "array%encoded%8#1"
      ]
    },
    "1221": {
      "op": "frame_dig 0",
      "defined_out": [
        "array%encoded%8#1",
        "array%extract%0#1",
        "box_prefixed_key%0#0",
        "listing#0",
        "values%1#0",
        "values%2#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "array%extract%0#1",
        "values%1#0",
        "values%2#0",
        "array%encoded%8#1",
        "box_prefixed_key%0#0"
      ]
    },
    "1223": {
      "op": "swap",
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "array%extract%0#1",
        "values%1#0",
        "values%2#0",
        "box_prefixed_key%0#0",
        "array%encoded%8#1"
      ]
    },
    "1224": {
      "op": "box_put",
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "array%extract%0#1",
        "values%1#0",
        "values%2#0"
      ]
    },
    "1225": {
      "retsub": true,
      "op": "retsub"
    },
    "1226": {
      "block": "accept_bid_ternary_false@2",
      "stack_in": [
        "box_prefixed_key%0#0",
        "listing#0",
        "array%extract%0#1",
        "values%1#0",
        "values%2#0"
      ],
      "op": "frame_dig 4",
      "defined_out": [
        "min_quantity#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "listing#0",
        "array%extract%0#1",
        "values%1#0",
        "values%2#0",
        "min_quantity#0"
      ]
    },
    "1228": {
      "op": "b accept_bid_ternary_merge@3"
    }
  }
}