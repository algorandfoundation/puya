debug: PuyaPyOptions(output_teal=True, output_source_map=True, output_arc32=False, output_arc56=False, output_ssa_ir=False, output_optimization_ir=False, output_destructured_ir=True, output_memory_ir=False, output_bytecode=True, output_teal_intermediates=False, output_op_statistics=True, debug_level=1, optimization_level=0, target_avm_version=10, cli_template_definitions={}, template_vars_prefix='TMPL_', locals_coalescing_strategy=<LocalsCoalescingStrategy.root_operand: 'root_operand'>, optimizations_override=immutabledict({}), expand_all_bytes=False, paths=['contains'], resource_encoding='value', output_awst=False, output_awst_json=False, output_source_annotations_json=False, output_client=False, log_level=<LogLevel.debug: 10>)
info: Found python prefix: <git root>/.venv
debug: Building IR for function _puya_lib.util.ensure_budget
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'required_budget_with_buffer' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let required_budget_with_buffer#1: uint64 = undefined while trying to resolve 'required_budget_with_buffer' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'fee_source' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let fee_source#1: uint64 = undefined while trying to resolve 'fee_source' in block@1
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@4
debug: Terminated block@4
debug: Sealing block@5
debug: Terminated block@5
debug: Sealing block@6
debug: Terminated block@6
debug: Sealing block@1
debug: Added required_budget_with_buffer#0 to Phi node: let required_budget_with_buffer#1: uint64 = φ(required_budget_with_buffer#0 <- block@0) in block@0
debug: Created Phi assignment: let required_budget_with_buffer#2: uint64 = undefined while trying to resolve 'required_budget_with_buffer' in block@6
debug: Added required_budget_with_buffer#1 to Phi node: let required_budget_with_buffer#2: uint64 = φ(required_budget_with_buffer#1 <- block@3) in block@3
debug: Added required_budget_with_buffer#1 to Phi node: let required_budget_with_buffer#2: uint64 = φ(required_budget_with_buffer#1 <- block@3, required_budget_with_buffer#1 <- block@4) in block@4
debug: Added required_budget_with_buffer#1 to Phi node: let required_budget_with_buffer#2: uint64 = φ(required_budget_with_buffer#1 <- block@3, required_budget_with_buffer#1 <- block@4, required_budget_with_buffer#1 <- block@5) in block@5
debug: Replacing trivial Phi node: let required_budget_with_buffer#2: uint64 = φ(required_budget_with_buffer#1 <- block@3, required_budget_with_buffer#1 <- block@4, required_budget_with_buffer#1 <- block@5) (required_budget_with_buffer#2) with required_budget_with_buffer#1
debug: Deleting Phi assignment: let required_budget_with_buffer#2: uint64 = φ(required_budget_with_buffer#1 <- block@3, required_budget_with_buffer#1 <- block@4, required_budget_with_buffer#1 <- block@5)
debug: Replaced trivial Phi node: let required_budget_with_buffer#2: uint64 = φ(required_budget_with_buffer#1 <- block@3, required_budget_with_buffer#1 <- block@4, required_budget_with_buffer#1 <- block@5) (required_budget_with_buffer#2) with required_budget_with_buffer#1 in current definition for 1 blocks
debug: Added required_budget_with_buffer#1 to Phi node: let required_budget_with_buffer#1: uint64 = φ(required_budget_with_buffer#0 <- block@0, required_budget_with_buffer#1 <- block@6) in block@6
debug: Replacing trivial Phi node: let required_budget_with_buffer#1: uint64 = φ(required_budget_with_buffer#0 <- block@0, required_budget_with_buffer#1 <- block@6) (required_budget_with_buffer#1) with required_budget_with_buffer#0
debug: Deleting Phi assignment: let required_budget_with_buffer#1: uint64 = φ(required_budget_with_buffer#0 <- block@0, required_budget_with_buffer#1 <- block@6)
debug: Replaced trivial Phi node: let required_budget_with_buffer#1: uint64 = φ(required_budget_with_buffer#0 <- block@0, required_budget_with_buffer#1 <- block@6) (required_budget_with_buffer#1) with required_budget_with_buffer#0 in current definition for 6 blocks
debug: Added fee_source#0 to Phi node: let fee_source#1: uint64 = φ(fee_source#0 <- block@0) in block@0
debug: Created Phi assignment: let fee_source#2: uint64 = undefined while trying to resolve 'fee_source' in block@6
debug: Added fee_source#1 to Phi node: let fee_source#2: uint64 = φ(fee_source#1 <- block@3) in block@3
debug: Added fee_source#1 to Phi node: let fee_source#2: uint64 = φ(fee_source#1 <- block@3, fee_source#1 <- block@4) in block@4
debug: Added fee_source#1 to Phi node: let fee_source#2: uint64 = φ(fee_source#1 <- block@3, fee_source#1 <- block@4, fee_source#1 <- block@5) in block@5
debug: Replacing trivial Phi node: let fee_source#2: uint64 = φ(fee_source#1 <- block@3, fee_source#1 <- block@4, fee_source#1 <- block@5) (fee_source#2) with fee_source#1
debug: Deleting Phi assignment: let fee_source#2: uint64 = φ(fee_source#1 <- block@3, fee_source#1 <- block@4, fee_source#1 <- block@5)
debug: Replaced trivial Phi node: let fee_source#2: uint64 = φ(fee_source#1 <- block@3, fee_source#1 <- block@4, fee_source#1 <- block@5) (fee_source#2) with fee_source#1 in current definition for 1 blocks
debug: Added fee_source#1 to Phi node: let fee_source#1: uint64 = φ(fee_source#0 <- block@0, fee_source#1 <- block@6) in block@6
debug: Replacing trivial Phi node: let fee_source#1: uint64 = φ(fee_source#0 <- block@0, fee_source#1 <- block@6) (fee_source#1) with fee_source#0
debug: Deleting Phi assignment: let fee_source#1: uint64 = φ(fee_source#0 <- block@0, fee_source#1 <- block@6)
debug: Replaced trivial Phi node: let fee_source#1: uint64 = φ(fee_source#0 <- block@0, fee_source#1 <- block@6) (fee_source#1) with fee_source#0 in current definition for 6 blocks
debug: Sealing block@7
debug: Terminated block@7
debug: Building IR for function _puya_lib.bytes_.is_substring
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'start' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let start#1: uint64 = undefined while trying to resolve 'start' in block@1
debug: Looking for 'item' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let item#1: bytes = undefined while trying to resolve 'item' in block@1
debug: Looking for 'sequence' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let sequence#1: bytes = undefined while trying to resolve 'sequence' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@4
debug: Terminated block@4
debug: Sealing block@1
debug: Added start#0 to Phi node: let start#1: uint64 = φ(start#0 <- block@0) in block@0
debug: Added start#2 to Phi node: let start#1: uint64 = φ(start#0 <- block@0, start#2 <- block@4) in block@4
debug: Added item#0 to Phi node: let item#1: bytes = φ(item#0 <- block@0) in block@0
debug: Added item#1 to Phi node: let item#1: bytes = φ(item#0 <- block@0, item#1 <- block@4) in block@4
debug: Replacing trivial Phi node: let item#1: bytes = φ(item#0 <- block@0, item#1 <- block@4) (item#1) with item#0
debug: Deleting Phi assignment: let item#1: bytes = φ(item#0 <- block@0, item#1 <- block@4)
debug: Replaced trivial Phi node: let item#1: bytes = φ(item#0 <- block@0, item#1 <- block@4) (item#1) with item#0 in current definition for 3 blocks
debug: Added sequence#0 to Phi node: let sequence#1: bytes = φ(sequence#0 <- block@0) in block@0
debug: Added sequence#1 to Phi node: let sequence#1: bytes = φ(sequence#0 <- block@0, sequence#1 <- block@4) in block@4
debug: Replacing trivial Phi node: let sequence#1: bytes = φ(sequence#0 <- block@0, sequence#1 <- block@4) (sequence#1) with sequence#0
debug: Deleting Phi assignment: let sequence#1: bytes = φ(sequence#0 <- block@0, sequence#1 <- block@4)
debug: Replaced trivial Phi node: let sequence#1: bytes = φ(sequence#0 <- block@0, sequence#1 <- block@4) (sequence#1) with sequence#0 in current definition for 3 blocks
debug: Sealing block@5
debug: Terminated block@5
debug: Building IR for function _puya_lib.arc4.dynamic_array_pop_bit
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function _puya_lib.arc4.dynamic_array_pop_fixed_size
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function _puya_lib.arc4.dynamic_array_pop_byte_length_head
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function _puya_lib.arc4.dynamic_array_pop_dynamic_element
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'head_offset' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let head_offset#1: uint64 = undefined while trying to resolve 'head_offset' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'head_and_tail' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let head_and_tail#1: bytes = undefined while trying to resolve 'head_and_tail' in block@1
debug: Looking for 'new_head' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let new_head#1: bytes = undefined while trying to resolve 'new_head' in block@1
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@1
debug: Added head_offset#0 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0) in block@0
debug: Added head_offset#2 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0, head_offset#2 <- block@3) in block@3
debug: Added head_and_tail#0 to Phi node: let head_and_tail#1: bytes = φ(head_and_tail#0 <- block@0) in block@0
debug: Added head_and_tail#1 to Phi node: let head_and_tail#1: bytes = φ(head_and_tail#0 <- block@0, head_and_tail#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let head_and_tail#1: bytes = φ(head_and_tail#0 <- block@0, head_and_tail#1 <- block@3) (head_and_tail#1) with head_and_tail#0
debug: Deleting Phi assignment: let head_and_tail#1: bytes = φ(head_and_tail#0 <- block@0, head_and_tail#1 <- block@3)
debug: Replaced trivial Phi node: let head_and_tail#1: bytes = φ(head_and_tail#0 <- block@0, head_and_tail#1 <- block@3) (head_and_tail#1) with head_and_tail#0 in current definition for 3 blocks
debug: Added new_head#0 to Phi node: let new_head#1: bytes = φ(new_head#0 <- block@0) in block@0
debug: Added new_head#2 to Phi node: let new_head#1: bytes = φ(new_head#0 <- block@0, new_head#2 <- block@3) in block@3
debug: Sealing block@4
debug: Created Phi assignment: let length_minus_1#1: uint64 = undefined while trying to resolve 'length_minus_1' in block@1
debug: Added length_minus_1#0 to Phi node: let length_minus_1#1: uint64 = φ(length_minus_1#0 <- block@0) in block@0
debug: Added length_minus_1#1 to Phi node: let length_minus_1#1: uint64 = φ(length_minus_1#0 <- block@0, length_minus_1#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let length_minus_1#1: uint64 = φ(length_minus_1#0 <- block@0, length_minus_1#1 <- block@3) (length_minus_1#1) with length_minus_1#0
debug: Deleting Phi assignment: let length_minus_1#1: uint64 = φ(length_minus_1#0 <- block@0, length_minus_1#1 <- block@3)
debug: Replaced trivial Phi node: let length_minus_1#1: uint64 = φ(length_minus_1#0 <- block@0, length_minus_1#1 <- block@3) (length_minus_1#1) with length_minus_1#0 in current definition for 3 blocks
debug: Created Phi assignment: let popped_header_offset#1: uint64 = undefined while trying to resolve 'popped_header_offset' in block@1
debug: Added popped_header_offset#0 to Phi node: let popped_header_offset#1: uint64 = φ(popped_header_offset#0 <- block@0) in block@0
debug: Added popped_header_offset#1 to Phi node: let popped_header_offset#1: uint64 = φ(popped_header_offset#0 <- block@0, popped_header_offset#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let popped_header_offset#1: uint64 = φ(popped_header_offset#0 <- block@0, popped_header_offset#1 <- block@3) (popped_header_offset#1) with popped_header_offset#0
debug: Deleting Phi assignment: let popped_header_offset#1: uint64 = φ(popped_header_offset#0 <- block@0, popped_header_offset#1 <- block@3)
debug: Replaced trivial Phi node: let popped_header_offset#1: uint64 = φ(popped_header_offset#0 <- block@0, popped_header_offset#1 <- block@3) (popped_header_offset#1) with popped_header_offset#0 in current definition for 3 blocks
debug: Created Phi assignment: let popped_offset#1: uint64 = undefined while trying to resolve 'popped_offset' in block@1
debug: Added popped_offset#0 to Phi node: let popped_offset#1: uint64 = φ(popped_offset#0 <- block@0) in block@0
debug: Added popped_offset#1 to Phi node: let popped_offset#1: uint64 = φ(popped_offset#0 <- block@0, popped_offset#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let popped_offset#1: uint64 = φ(popped_offset#0 <- block@0, popped_offset#1 <- block@3) (popped_offset#1) with popped_offset#0
debug: Deleting Phi assignment: let popped_offset#1: uint64 = φ(popped_offset#0 <- block@0, popped_offset#1 <- block@3)
debug: Replaced trivial Phi node: let popped_offset#1: uint64 = φ(popped_offset#0 <- block@0, popped_offset#1 <- block@3) (popped_offset#1) with popped_offset#0 in current definition for 3 blocks
debug: Created Phi assignment: let popped#1: bytes = undefined while trying to resolve 'popped' in block@1
debug: Added popped#0 to Phi node: let popped#1: bytes = φ(popped#0 <- block@0) in block@0
debug: Added popped#1 to Phi node: let popped#1: bytes = φ(popped#0 <- block@0, popped#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let popped#1: bytes = φ(popped#0 <- block@0, popped#1 <- block@3) (popped#1) with popped#0
debug: Deleting Phi assignment: let popped#1: bytes = φ(popped#0 <- block@0, popped#1 <- block@3)
debug: Replaced trivial Phi node: let popped#1: bytes = φ(popped#0 <- block@0, popped#1 <- block@3) (popped#1) with popped#0 in current definition for 3 blocks
debug: Terminated block@4
debug: Building IR for function _puya_lib.arc4.dynamic_array_concat_bits
debug: Sealing block@0
debug: Terminated block@0
debug: Sealing block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Created Phi assignment: let array_length#1: uint64 = undefined while trying to resolve 'array_length' in block@2
debug: Added array_length#0 to Phi node: let array_length#1: uint64 = φ(array_length#0 <- block@0) in block@0
debug: Added array_length#0 to Phi node: let array_length#1: uint64 = φ(array_length#0 <- block@0, array_length#0 <- block@1) in block@1
debug: Replacing trivial Phi node: let array_length#1: uint64 = φ(array_length#0 <- block@0, array_length#0 <- block@1) (array_length#1) with array_length#0
debug: Deleting Phi assignment: let array_length#1: uint64 = φ(array_length#0 <- block@0, array_length#0 <- block@1)
debug: Replaced trivial Phi node: let array_length#1: uint64 = φ(array_length#0 <- block@0, array_length#0 <- block@1) (array_length#1) with array_length#0 in current definition for 1 blocks
debug: Created Phi assignment: let new_items_count#1: uint64 = undefined while trying to resolve 'new_items_count' in block@2
debug: Added new_items_count#0 to Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0) in block@0
debug: Added new_items_count#0 to Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#0 <- block@1) in block@1
debug: Replacing trivial Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#0 <- block@1) (new_items_count#1) with new_items_count#0
debug: Deleting Phi assignment: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#0 <- block@1)
debug: Replaced trivial Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#0 <- block@1) (new_items_count#1) with new_items_count#0 in current definition for 1 blocks
debug: Terminated block@2
debug: Looking for 'write_offset' in an unsealed block creating an incomplete Phi: block@3
debug: Created Phi assignment: let write_offset#1: uint64 = undefined while trying to resolve 'write_offset' in block@3
debug: Looking for 'write_end' in an unsealed block creating an incomplete Phi: block@3
debug: Created Phi assignment: let write_end#1: uint64 = undefined while trying to resolve 'write_end' in block@3
debug: Terminated block@3
debug: Sealing block@4
debug: Looking for 'result' in an unsealed block creating an incomplete Phi: block@3
debug: Created Phi assignment: let result#2: bytes = undefined while trying to resolve 'result' in block@3
debug: Looking for 'new_items_bytes' in an unsealed block creating an incomplete Phi: block@3
debug: Created Phi assignment: let new_items_bytes#1: bytes = undefined while trying to resolve 'new_items_bytes' in block@3
debug: Looking for 'read_offset' in an unsealed block creating an incomplete Phi: block@3
debug: Created Phi assignment: let read_offset#1: uint64 = undefined while trying to resolve 'read_offset' in block@3
debug: Looking for 'read_step' in an unsealed block creating an incomplete Phi: block@3
debug: Created Phi assignment: let read_step#1: uint64 = undefined while trying to resolve 'read_step' in block@3
debug: Terminated block@4
debug: Sealing block@3
debug: Added write_offset#0 to Phi node: let write_offset#1: uint64 = φ(write_offset#0 <- block@2) in block@2
debug: Added write_offset#2 to Phi node: let write_offset#1: uint64 = φ(write_offset#0 <- block@2, write_offset#2 <- block@4) in block@4
debug: Added write_end#0 to Phi node: let write_end#1: uint64 = φ(write_end#0 <- block@2) in block@2
debug: Added write_end#1 to Phi node: let write_end#1: uint64 = φ(write_end#0 <- block@2, write_end#1 <- block@4) in block@4
debug: Replacing trivial Phi node: let write_end#1: uint64 = φ(write_end#0 <- block@2, write_end#1 <- block@4) (write_end#1) with write_end#0
debug: Deleting Phi assignment: let write_end#1: uint64 = φ(write_end#0 <- block@2, write_end#1 <- block@4)
debug: Replaced trivial Phi node: let write_end#1: uint64 = φ(write_end#0 <- block@2, write_end#1 <- block@4) (write_end#1) with write_end#0 in current definition for 2 blocks
debug: Created Phi assignment: let result#4: bytes = undefined while trying to resolve 'result' in block@2
debug: Added result#0 to Phi node: let result#4: bytes = φ(result#0 <- block@0) in block@0
debug: Added result#1 to Phi node: let result#4: bytes = φ(result#0 <- block@0, result#1 <- block@1) in block@1
debug: Added result#4 to Phi node: let result#2: bytes = φ(result#4 <- block@2) in block@2
debug: Added result#3 to Phi node: let result#2: bytes = φ(result#4 <- block@2, result#3 <- block@4) in block@4
debug: Created Phi assignment: let new_items_bytes#2: bytes = undefined while trying to resolve 'new_items_bytes' in block@2
debug: Added new_items_bytes#0 to Phi node: let new_items_bytes#2: bytes = φ(new_items_bytes#0 <- block@0) in block@0
debug: Added new_items_bytes#0 to Phi node: let new_items_bytes#2: bytes = φ(new_items_bytes#0 <- block@0, new_items_bytes#0 <- block@1) in block@1
debug: Replacing trivial Phi node: let new_items_bytes#2: bytes = φ(new_items_bytes#0 <- block@0, new_items_bytes#0 <- block@1) (new_items_bytes#2) with new_items_bytes#0
debug: Deleting Phi assignment: let new_items_bytes#2: bytes = φ(new_items_bytes#0 <- block@0, new_items_bytes#0 <- block@1)
debug: Replaced trivial Phi node: let new_items_bytes#2: bytes = φ(new_items_bytes#0 <- block@0, new_items_bytes#0 <- block@1) (new_items_bytes#2) with new_items_bytes#0 in current definition for 1 blocks
debug: Added new_items_bytes#0 to Phi node: let new_items_bytes#1: bytes = φ(new_items_bytes#0 <- block@2) in block@2
debug: Added new_items_bytes#1 to Phi node: let new_items_bytes#1: bytes = φ(new_items_bytes#0 <- block@2, new_items_bytes#1 <- block@4) in block@4
debug: Replacing trivial Phi node: let new_items_bytes#1: bytes = φ(new_items_bytes#0 <- block@2, new_items_bytes#1 <- block@4) (new_items_bytes#1) with new_items_bytes#0
debug: Deleting Phi assignment: let new_items_bytes#1: bytes = φ(new_items_bytes#0 <- block@2, new_items_bytes#1 <- block@4)
debug: Replaced trivial Phi node: let new_items_bytes#1: bytes = φ(new_items_bytes#0 <- block@2, new_items_bytes#1 <- block@4) (new_items_bytes#1) with new_items_bytes#0 in current definition for 2 blocks
debug: Added read_offset#0 to Phi node: let read_offset#1: uint64 = φ(read_offset#0 <- block@2) in block@2
debug: Added read_offset#2 to Phi node: let read_offset#1: uint64 = φ(read_offset#0 <- block@2, read_offset#2 <- block@4) in block@4
debug: Created Phi assignment: let read_step#2: uint64 = undefined while trying to resolve 'read_step' in block@2
debug: Added read_step#0 to Phi node: let read_step#2: uint64 = φ(read_step#0 <- block@0) in block@0
debug: Added read_step#0 to Phi node: let read_step#2: uint64 = φ(read_step#0 <- block@0, read_step#0 <- block@1) in block@1
debug: Replacing trivial Phi node: let read_step#2: uint64 = φ(read_step#0 <- block@0, read_step#0 <- block@1) (read_step#2) with read_step#0
debug: Deleting Phi assignment: let read_step#2: uint64 = φ(read_step#0 <- block@0, read_step#0 <- block@1)
debug: Replaced trivial Phi node: let read_step#2: uint64 = φ(read_step#0 <- block@0, read_step#0 <- block@1) (read_step#2) with read_step#0 in current definition for 1 blocks
debug: Added read_step#0 to Phi node: let read_step#1: uint64 = φ(read_step#0 <- block@2) in block@2
debug: Added read_step#1 to Phi node: let read_step#1: uint64 = φ(read_step#0 <- block@2, read_step#1 <- block@4) in block@4
debug: Replacing trivial Phi node: let read_step#1: uint64 = φ(read_step#0 <- block@2, read_step#1 <- block@4) (read_step#1) with read_step#0
debug: Deleting Phi assignment: let read_step#1: uint64 = φ(read_step#0 <- block@2, read_step#1 <- block@4)
debug: Replaced trivial Phi node: let read_step#1: uint64 = φ(read_step#0 <- block@2, read_step#1 <- block@4) (read_step#1) with read_step#0 in current definition for 2 blocks
debug: Sealing block@5
debug: Terminated block@5
debug: Building IR for function _puya_lib.arc4.dynamic_array_concat_byte_length_head
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function _puya_lib.arc4.dynamic_array_concat_dynamic_element
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'head_offset' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let head_offset#1: uint64 = undefined while trying to resolve 'head_offset' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'array_head_and_tail' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let array_head_and_tail#1: bytes = undefined while trying to resolve 'array_head_and_tail' in block@1
debug: Looking for 'new_head' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let new_head#1: bytes = undefined while trying to resolve 'new_head' in block@1
debug: Looking for 'item_offset_adjustment' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let item_offset_adjustment#1: uint64 = undefined while trying to resolve 'item_offset_adjustment' in block@1
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@1
debug: Added head_offset#0 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0) in block@0
debug: Added head_offset#2 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0, head_offset#2 <- block@3) in block@3
debug: Added array_head_and_tail#0 to Phi node: let array_head_and_tail#1: bytes = φ(array_head_and_tail#0 <- block@0) in block@0
debug: Added array_head_and_tail#1 to Phi node: let array_head_and_tail#1: bytes = φ(array_head_and_tail#0 <- block@0, array_head_and_tail#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let array_head_and_tail#1: bytes = φ(array_head_and_tail#0 <- block@0, array_head_and_tail#1 <- block@3) (array_head_and_tail#1) with array_head_and_tail#0
debug: Deleting Phi assignment: let array_head_and_tail#1: bytes = φ(array_head_and_tail#0 <- block@0, array_head_and_tail#1 <- block@3)
debug: Replaced trivial Phi node: let array_head_and_tail#1: bytes = φ(array_head_and_tail#0 <- block@0, array_head_and_tail#1 <- block@3) (array_head_and_tail#1) with array_head_and_tail#0 in current definition for 3 blocks
debug: Added new_head#0 to Phi node: let new_head#1: bytes = φ(new_head#0 <- block@0) in block@0
debug: Added new_head#2 to Phi node: let new_head#1: bytes = φ(new_head#0 <- block@0, new_head#2 <- block@3) in block@3
debug: Added item_offset_adjustment#0 to Phi node: let item_offset_adjustment#1: uint64 = φ(item_offset_adjustment#0 <- block@0) in block@0
debug: Added item_offset_adjustment#1 to Phi node: let item_offset_adjustment#1: uint64 = φ(item_offset_adjustment#0 <- block@0, item_offset_adjustment#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let item_offset_adjustment#1: uint64 = φ(item_offset_adjustment#0 <- block@0, item_offset_adjustment#1 <- block@3) (item_offset_adjustment#1) with item_offset_adjustment#0
debug: Deleting Phi assignment: let item_offset_adjustment#1: uint64 = φ(item_offset_adjustment#0 <- block@0, item_offset_adjustment#1 <- block@3)
debug: Replaced trivial Phi node: let item_offset_adjustment#1: uint64 = φ(item_offset_adjustment#0 <- block@0, item_offset_adjustment#1 <- block@3) (item_offset_adjustment#1) with item_offset_adjustment#0 in current definition for 3 blocks
debug: Sealing block@4
debug: Created Phi assignment: let new_items_count#1: uint64 = undefined while trying to resolve 'new_items_count' in block@1
debug: Added new_items_count#0 to Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0) in block@0
debug: Added new_items_count#1 to Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#1 <- block@3) (new_items_count#1) with new_items_count#0
debug: Deleting Phi assignment: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#1 <- block@3)
debug: Replaced trivial Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#1 <- block@3) (new_items_count#1) with new_items_count#0 in current definition for 3 blocks
debug: Terminated block@4
debug: Looking for 'head_offset' in an unsealed block creating an incomplete Phi: block@5
debug: Created Phi assignment: let head_offset#4: uint64 = undefined while trying to resolve 'head_offset' in block@5
debug: Terminated block@5
debug: Sealing block@6
debug: Looking for 'new_head_and_tail' in an unsealed block creating an incomplete Phi: block@5
debug: Created Phi assignment: let new_head_and_tail#1: bytes = undefined while trying to resolve 'new_head_and_tail' in block@5
debug: Looking for 'new_head' in an unsealed block creating an incomplete Phi: block@5
debug: Created Phi assignment: let new_head#3: bytes = undefined while trying to resolve 'new_head' in block@5
debug: Looking for 'item_offset_adjustment' in an unsealed block creating an incomplete Phi: block@5
debug: Created Phi assignment: let item_offset_adjustment#3: uint64 = undefined while trying to resolve 'item_offset_adjustment' in block@5
debug: Terminated block@6
debug: Sealing block@7
debug: Terminated block@7
debug: Sealing block@5
debug: Added head_offset#3 to Phi node: let head_offset#4: uint64 = φ(head_offset#3 <- block@4) in block@4
debug: Added head_offset#5 to Phi node: let head_offset#4: uint64 = φ(head_offset#3 <- block@4, head_offset#5 <- block@7) in block@7
debug: Created Phi assignment: let new_head_and_tail#2: bytes = undefined while trying to resolve 'new_head_and_tail' in block@1
debug: Added new_head_and_tail#0 to Phi node: let new_head_and_tail#2: bytes = φ(new_head_and_tail#0 <- block@0) in block@0
debug: Added new_head_and_tail#2 to Phi node: let new_head_and_tail#2: bytes = φ(new_head_and_tail#0 <- block@0, new_head_and_tail#2 <- block@3) in block@3
debug: Replacing trivial Phi node: let new_head_and_tail#2: bytes = φ(new_head_and_tail#0 <- block@0, new_head_and_tail#2 <- block@3) (new_head_and_tail#2) with new_head_and_tail#0
debug: Deleting Phi assignment: let new_head_and_tail#2: bytes = φ(new_head_and_tail#0 <- block@0, new_head_and_tail#2 <- block@3)
debug: Replaced trivial Phi node: let new_head_and_tail#2: bytes = φ(new_head_and_tail#0 <- block@0, new_head_and_tail#2 <- block@3) (new_head_and_tail#2) with new_head_and_tail#0 in current definition for 3 blocks
debug: Added new_head_and_tail#0 to Phi node: let new_head_and_tail#1: bytes = φ(new_head_and_tail#0 <- block@4) in block@4
debug: Added new_head_and_tail#1 to Phi node: let new_head_and_tail#1: bytes = φ(new_head_and_tail#0 <- block@4, new_head_and_tail#1 <- block@7) in block@7
debug: Replacing trivial Phi node: let new_head_and_tail#1: bytes = φ(new_head_and_tail#0 <- block@4, new_head_and_tail#1 <- block@7) (new_head_and_tail#1) with new_head_and_tail#0
debug: Deleting Phi assignment: let new_head_and_tail#1: bytes = φ(new_head_and_tail#0 <- block@4, new_head_and_tail#1 <- block@7)
debug: Replaced trivial Phi node: let new_head_and_tail#1: bytes = φ(new_head_and_tail#0 <- block@4, new_head_and_tail#1 <- block@7) (new_head_and_tail#1) with new_head_and_tail#0 in current definition for 3 blocks
debug: Added new_head#1 to Phi node: let new_head#3: bytes = φ(new_head#1 <- block@4) in block@4
debug: Added new_head#4 to Phi node: let new_head#3: bytes = φ(new_head#1 <- block@4, new_head#4 <- block@7) in block@7
debug: Added item_offset_adjustment#2 to Phi node: let item_offset_adjustment#3: uint64 = φ(item_offset_adjustment#2 <- block@4) in block@4
debug: Added item_offset_adjustment#3 to Phi node: let item_offset_adjustment#3: uint64 = φ(item_offset_adjustment#2 <- block@4, item_offset_adjustment#3 <- block@7) in block@7
debug: Replacing trivial Phi node: let item_offset_adjustment#3: uint64 = φ(item_offset_adjustment#2 <- block@4, item_offset_adjustment#3 <- block@7) (item_offset_adjustment#3) with item_offset_adjustment#2
debug: Deleting Phi assignment: let item_offset_adjustment#3: uint64 = φ(item_offset_adjustment#2 <- block@4, item_offset_adjustment#3 <- block@7)
debug: Replaced trivial Phi node: let item_offset_adjustment#3: uint64 = φ(item_offset_adjustment#2 <- block@4, item_offset_adjustment#3 <- block@7) (item_offset_adjustment#3) with item_offset_adjustment#2 in current definition for 3 blocks
debug: Sealing block@8
debug: Created Phi assignment: let array_items_count#1: uint64 = undefined while trying to resolve 'array_items_count' in block@5
debug: Created Phi assignment: let array_items_count#2: uint64 = undefined while trying to resolve 'array_items_count' in block@1
debug: Added array_items_count#0 to Phi node: let array_items_count#2: uint64 = φ(array_items_count#0 <- block@0) in block@0
debug: Added array_items_count#2 to Phi node: let array_items_count#2: uint64 = φ(array_items_count#0 <- block@0, array_items_count#2 <- block@3) in block@3
debug: Replacing trivial Phi node: let array_items_count#2: uint64 = φ(array_items_count#0 <- block@0, array_items_count#2 <- block@3) (array_items_count#2) with array_items_count#0
debug: Deleting Phi assignment: let array_items_count#2: uint64 = φ(array_items_count#0 <- block@0, array_items_count#2 <- block@3)
debug: Replaced trivial Phi node: let array_items_count#2: uint64 = φ(array_items_count#0 <- block@0, array_items_count#2 <- block@3) (array_items_count#2) with array_items_count#0 in current definition for 3 blocks
debug: Added array_items_count#0 to Phi node: let array_items_count#1: uint64 = φ(array_items_count#0 <- block@4) in block@4
debug: Added array_items_count#1 to Phi node: let array_items_count#1: uint64 = φ(array_items_count#0 <- block@4, array_items_count#1 <- block@7) in block@7
debug: Replacing trivial Phi node: let array_items_count#1: uint64 = φ(array_items_count#0 <- block@4, array_items_count#1 <- block@7) (array_items_count#1) with array_items_count#0
debug: Deleting Phi assignment: let array_items_count#1: uint64 = φ(array_items_count#0 <- block@4, array_items_count#1 <- block@7)
debug: Replaced trivial Phi node: let array_items_count#1: uint64 = φ(array_items_count#0 <- block@4, array_items_count#1 <- block@7) (array_items_count#1) with array_items_count#0 in current definition for 3 blocks
debug: Created Phi assignment: let new_items_count#2: uint64 = undefined while trying to resolve 'new_items_count' in block@5
debug: Added new_items_count#0 to Phi node: let new_items_count#2: uint64 = φ(new_items_count#0 <- block@4) in block@4
debug: Added new_items_count#2 to Phi node: let new_items_count#2: uint64 = φ(new_items_count#0 <- block@4, new_items_count#2 <- block@7) in block@7
debug: Replacing trivial Phi node: let new_items_count#2: uint64 = φ(new_items_count#0 <- block@4, new_items_count#2 <- block@7) (new_items_count#2) with new_items_count#0
debug: Deleting Phi assignment: let new_items_count#2: uint64 = φ(new_items_count#0 <- block@4, new_items_count#2 <- block@7)
debug: Replaced trivial Phi node: let new_items_count#2: uint64 = φ(new_items_count#0 <- block@4, new_items_count#2 <- block@7) (new_items_count#2) with new_items_count#0 in current definition for 3 blocks
debug: Created Phi assignment: let array_head_and_tail#2: bytes = undefined while trying to resolve 'array_head_and_tail' in block@5
debug: Added array_head_and_tail#0 to Phi node: let array_head_and_tail#2: bytes = φ(array_head_and_tail#0 <- block@4) in block@4
debug: Added array_head_and_tail#2 to Phi node: let array_head_and_tail#2: bytes = φ(array_head_and_tail#0 <- block@4, array_head_and_tail#2 <- block@7) in block@7
debug: Replacing trivial Phi node: let array_head_and_tail#2: bytes = φ(array_head_and_tail#0 <- block@4, array_head_and_tail#2 <- block@7) (array_head_and_tail#2) with array_head_and_tail#0
debug: Deleting Phi assignment: let array_head_and_tail#2: bytes = φ(array_head_and_tail#0 <- block@4, array_head_and_tail#2 <- block@7)
debug: Replaced trivial Phi node: let array_head_and_tail#2: bytes = φ(array_head_and_tail#0 <- block@4, array_head_and_tail#2 <- block@7) (array_head_and_tail#2) with array_head_and_tail#0 in current definition for 3 blocks
debug: Terminated block@8
debug: Building IR for function _puya_lib.arc4.dynamic_array_replace_byte_length_head
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function _puya_lib.arc4.dynamic_array_replace_dynamic_element
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function _puya_lib.arc4.static_array_replace_dynamic_element
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'head_offset' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let head_offset#1: uint64 = undefined while trying to resolve 'head_offset' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'new_head_and_tail' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let new_head_and_tail#1: bytes = undefined while trying to resolve 'new_head_and_tail' in block@1
debug: Looking for 'new_item_length' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let new_item_length#1: uint64 = undefined while trying to resolve 'new_item_length' in block@1
debug: Looking for 'original_item_length' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let original_item_length#1: uint64 = undefined while trying to resolve 'original_item_length' in block@1
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@1
debug: Added head_offset#0 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0) in block@0
debug: Added head_offset#2 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0, head_offset#2 <- block@3) in block@3
debug: Added new_head_and_tail#0 to Phi node: let new_head_and_tail#1: bytes = φ(new_head_and_tail#0 <- block@0) in block@0
debug: Added new_head_and_tail#2 to Phi node: let new_head_and_tail#1: bytes = φ(new_head_and_tail#0 <- block@0, new_head_and_tail#2 <- block@3) in block@3
debug: Added new_item_length#0 to Phi node: let new_item_length#1: uint64 = φ(new_item_length#0 <- block@0) in block@0
debug: Added new_item_length#1 to Phi node: let new_item_length#1: uint64 = φ(new_item_length#0 <- block@0, new_item_length#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let new_item_length#1: uint64 = φ(new_item_length#0 <- block@0, new_item_length#1 <- block@3) (new_item_length#1) with new_item_length#0
debug: Deleting Phi assignment: let new_item_length#1: uint64 = φ(new_item_length#0 <- block@0, new_item_length#1 <- block@3)
debug: Replaced trivial Phi node: let new_item_length#1: uint64 = φ(new_item_length#0 <- block@0, new_item_length#1 <- block@3) (new_item_length#1) with new_item_length#0 in current definition for 3 blocks
debug: Added original_item_length#0 to Phi node: let original_item_length#1: uint64 = φ(original_item_length#0 <- block@0) in block@0
debug: Added original_item_length#1 to Phi node: let original_item_length#1: uint64 = φ(original_item_length#0 <- block@0, original_item_length#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let original_item_length#1: uint64 = φ(original_item_length#0 <- block@0, original_item_length#1 <- block@3) (original_item_length#1) with original_item_length#0
debug: Deleting Phi assignment: let original_item_length#1: uint64 = φ(original_item_length#0 <- block@0, original_item_length#1 <- block@3)
debug: Replaced trivial Phi node: let original_item_length#1: uint64 = φ(original_item_length#0 <- block@0, original_item_length#1 <- block@3) (original_item_length#1) with original_item_length#0 in current definition for 3 blocks
debug: Sealing block@4
debug: Terminated block@4
debug: Building IR for function _puya_lib.arc4.static_array_replace_byte_length_head
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function _puya_lib.arc4.recalculate_head_for_elements_with_byte_length_head
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'head_offset' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let head_offset#1: uint64 = undefined while trying to resolve 'head_offset' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'tail_offset' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let tail_offset#1: uint64 = undefined while trying to resolve 'tail_offset' in block@1
debug: Looking for 'array_head_and_tail' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let array_head_and_tail#1: bytes = undefined while trying to resolve 'array_head_and_tail' in block@1
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@1
debug: Added head_offset#0 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0) in block@0
debug: Added head_offset#3 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0, head_offset#3 <- block@3) in block@3
debug: Added tail_offset#0 to Phi node: let tail_offset#1: uint64 = φ(tail_offset#0 <- block@0) in block@0
debug: Added tail_offset#2 to Phi node: let tail_offset#1: uint64 = φ(tail_offset#0 <- block@0, tail_offset#2 <- block@3) in block@3
debug: Added array_head_and_tail#0 to Phi node: let array_head_and_tail#1: bytes = φ(array_head_and_tail#0 <- block@0) in block@0
debug: Added array_head_and_tail#2 to Phi node: let array_head_and_tail#1: bytes = φ(array_head_and_tail#0 <- block@0, array_head_and_tail#2 <- block@3) in block@3
debug: Sealing block@4
debug: Terminated block@4
debug: Building IR for function test_cases.contains.contract.one_u64
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.contains.contract.one_arc4u64
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.contains.contract.two_u64
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.contains.contract.two_u8
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.contains.contract.three_u512
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.contains.contract.four_biguint
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.contains.contract.foo_string
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.contains.contract.foo_arc4
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.contains.contract.bar_string
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.contains.contract.bar_arc4
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.contains.contract.baz_string
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.contains.contract.MyContract.__puya_arc4_router__
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.contains.contract.MyContract.approval_program
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.contains.contract.MyContract.clear_state_program
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.contains.contract.MyContract.is_in_tuple_1
debug: Sealing block@0
debug: Terminated block@0
debug: Sealing block@1
contains/contract.py:44:16 debug: encountered already materialized expression (x), reusing result: x#0
contains/contract.py:44:21 debug: encountered already materialized expression (y), reusing result: (y.0#0, y.1#0, y.2#0)
debug: Terminated block@1
debug: Sealing block@2
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@4
debug: Created Phi assignment: let or_result%0#2: bool = undefined while trying to resolve 'or_result%0' in block@4
debug: Added or_result%0#0 to Phi node: let or_result%0#2: bool = φ(or_result%0#0 <- block@2) in block@2
debug: Added or_result%0#1 to Phi node: let or_result%0#2: bool = φ(or_result%0#0 <- block@2, or_result%0#1 <- block@3) in block@3
debug: Terminated block@4
debug: Building IR for function test_cases.contains.contract.MyContract.is_in_tuple_2
debug: Sealing block@0
debug: Terminated block@0
debug: Sealing block@1
contains/contract.py:48:16 debug: encountered already materialized expression (x), reusing result: x#0
contains/contract.py:48:21 debug: encountered already materialized expression (y), reusing result: (y.0#0, y.1#0, y.2#0)
debug: Terminated block@1
debug: Sealing block@2
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@4
debug: Created Phi assignment: let or_result%0#2: bool = undefined while trying to resolve 'or_result%0' in block@4
debug: Added or_result%0#0 to Phi node: let or_result%0#2: bool = φ(or_result%0#0 <- block@2) in block@2
debug: Added or_result%0#1 to Phi node: let or_result%0#2: bool = φ(or_result%0#0 <- block@2, or_result%0#1 <- block@3) in block@3
debug: Terminated block@4
debug: Building IR for function test_cases.contains.contract.MyContract.is_in_tuple_3
debug: Sealing block@0
debug: Terminated block@0
debug: Sealing block@1
contains/contract.py:52:16 debug: encountered already materialized expression (x), reusing result: x#0
contains/contract.py:52:21 debug: encountered already materialized expression (y), reusing result: (y.0#0, y.1#0)
debug: Terminated block@1
debug: Sealing block@2
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@4
debug: Created Phi assignment: let or_result%0#2: bool = undefined while trying to resolve 'or_result%0' in block@4
debug: Added or_result%0#0 to Phi node: let or_result%0#2: bool = φ(or_result%0#0 <- block@2) in block@2
debug: Added or_result%0#1 to Phi node: let or_result%0#2: bool = φ(or_result%0#0 <- block@2, or_result%0#1 <- block@3) in block@3
debug: Terminated block@4
debug: Building IR for function test_cases.contains.contract.MyContract.test_string_types
debug: Sealing block@0
debug: Terminated block@0
debug: Sealing block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@4
debug: Created Phi assignment: let or_result%0#2: bool = undefined while trying to resolve 'or_result%0' in block@4
debug: Added or_result%0#0 to Phi node: let or_result%0#2: bool = φ(or_result%0#0 <- block@2) in block@2
debug: Added or_result%0#1 to Phi node: let or_result%0#2: bool = φ(or_result%0#0 <- block@2, or_result%0#1 <- block@3) in block@3
debug: Terminated block@4
debug: Sealing block@5
debug: Terminated block@5
debug: Sealing block@6
debug: Terminated block@6
debug: Sealing block@7
debug: Terminated block@7
debug: Sealing block@8
debug: Created Phi assignment: let or_result%1#2: bool = undefined while trying to resolve 'or_result%1' in block@8
debug: Added or_result%1#0 to Phi node: let or_result%1#2: bool = φ(or_result%1#0 <- block@6) in block@6
debug: Added or_result%1#1 to Phi node: let or_result%1#2: bool = φ(or_result%1#0 <- block@6, or_result%1#1 <- block@7) in block@7
debug: Terminated block@8
debug: Sealing block@9
debug: Terminated block@9
debug: Sealing block@10
debug: Terminated block@10
debug: Sealing block@11
debug: Terminated block@11
debug: Sealing block@12
debug: Terminated block@12
debug: Sealing block@13
debug: Created Phi assignment: let or_result%2#2: bool = undefined while trying to resolve 'or_result%2' in block@13
debug: Added or_result%2#0 to Phi node: let or_result%2#2: bool = φ(or_result%2#0 <- block@11) in block@11
debug: Added or_result%2#1 to Phi node: let or_result%2#2: bool = φ(or_result%2#0 <- block@11, or_result%2#1 <- block@12) in block@12
debug: Terminated block@13
debug: Sealing block@14
debug: Terminated block@14
debug: Sealing block@15
debug: Terminated block@15
debug: Sealing block@16
debug: Terminated block@16
debug: Sealing block@17
debug: Terminated block@17
debug: Sealing block@18
debug: Created Phi assignment: let or_result%3#2: bool = undefined while trying to resolve 'or_result%3' in block@18
debug: Added or_result%3#0 to Phi node: let or_result%3#2: bool = φ(or_result%3#0 <- block@16) in block@16
debug: Added or_result%3#1 to Phi node: let or_result%3#2: bool = φ(or_result%3#0 <- block@16, or_result%3#1 <- block@17) in block@17
debug: Terminated block@18
debug: Sealing block@19
debug: Terminated block@19
debug: Sealing block@20
debug: Terminated block@20
debug: Sealing block@21
debug: Terminated block@21
debug: Sealing block@22
debug: Created Phi assignment: let or_result%4#2: bool = undefined while trying to resolve 'or_result%4' in block@22
debug: Added or_result%4#0 to Phi node: let or_result%4#2: bool = φ(or_result%4#0 <- block@20) in block@20
debug: Added or_result%4#1 to Phi node: let or_result%4#2: bool = φ(or_result%4#0 <- block@20, or_result%4#1 <- block@21) in block@21
debug: Terminated block@22
debug: Sealing block@23
debug: Terminated block@23
debug: Sealing block@24
debug: Terminated block@24
debug: Sealing block@25
debug: Terminated block@25
debug: Sealing block@26
debug: Created Phi assignment: let or_result%5#2: bool = undefined while trying to resolve 'or_result%5' in block@26
debug: Added or_result%5#0 to Phi node: let or_result%5#2: bool = φ(or_result%5#0 <- block@24) in block@24
debug: Added or_result%5#1 to Phi node: let or_result%5#2: bool = φ(or_result%5#0 <- block@24, or_result%5#1 <- block@25) in block@25
debug: Terminated block@26
debug: Sealing block@27
debug: Terminated block@27
debug: Sealing block@28
debug: Terminated block@28
debug: Sealing block@29
debug: Terminated block@29
debug: Sealing block@30
debug: Terminated block@30
debug: Sealing block@31
debug: Created Phi assignment: let or_result%6#2: bool = undefined while trying to resolve 'or_result%6' in block@31
debug: Added or_result%6#0 to Phi node: let or_result%6#2: bool = φ(or_result%6#0 <- block@29) in block@29
debug: Added or_result%6#1 to Phi node: let or_result%6#2: bool = φ(or_result%6#0 <- block@29, or_result%6#1 <- block@30) in block@30
debug: Terminated block@31
debug: Sealing block@32
debug: Terminated block@32
debug: Sealing block@33
debug: Terminated block@33
debug: Sealing block@34
debug: Terminated block@34
debug: Sealing block@35
debug: Terminated block@35
debug: Sealing block@36
debug: Created Phi assignment: let or_result%7#2: bool = undefined while trying to resolve 'or_result%7' in block@36
debug: Added or_result%7#0 to Phi node: let or_result%7#2: bool = φ(or_result%7#0 <- block@34) in block@34
debug: Added or_result%7#1 to Phi node: let or_result%7#2: bool = φ(or_result%7#0 <- block@34, or_result%7#1 <- block@35) in block@35
debug: Terminated block@36
debug: Sealing block@37
debug: Terminated block@37
debug: Sealing block@38
debug: Terminated block@38
debug: Sealing block@39
debug: Terminated block@39
debug: Sealing block@40
debug: Created Phi assignment: let or_result%8#2: bool = undefined while trying to resolve 'or_result%8' in block@40
debug: Added or_result%8#0 to Phi node: let or_result%8#2: bool = φ(or_result%8#0 <- block@38) in block@38
debug: Added or_result%8#1 to Phi node: let or_result%8#2: bool = φ(or_result%8#0 <- block@38, or_result%8#1 <- block@39) in block@39
debug: Terminated block@40
debug: Sealing block@41
debug: Terminated block@41
debug: Sealing block@42
debug: Terminated block@42
debug: Sealing block@43
debug: Terminated block@43
debug: Sealing block@44
debug: Created Phi assignment: let or_result%9#2: bool = undefined while trying to resolve 'or_result%9' in block@44
debug: Added or_result%9#0 to Phi node: let or_result%9#2: bool = φ(or_result%9#0 <- block@42) in block@42
debug: Added or_result%9#1 to Phi node: let or_result%9#2: bool = φ(or_result%9#0 <- block@42, or_result%9#1 <- block@43) in block@43
debug: Terminated block@44
debug: Building IR for function test_cases.contains.contract.MyContract.test_numeric_types
debug: Sealing block@0
debug: Terminated block@0
debug: Sealing block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@4
debug: Created Phi assignment: let or_result%0#2: bool = undefined while trying to resolve 'or_result%0' in block@4
debug: Added or_result%0#0 to Phi node: let or_result%0#2: bool = φ(or_result%0#0 <- block@2) in block@2
debug: Added or_result%0#1 to Phi node: let or_result%0#2: bool = φ(or_result%0#0 <- block@2, or_result%0#1 <- block@3) in block@3
debug: Terminated block@4
debug: Sealing block@5
debug: Terminated block@5
debug: Sealing block@6
debug: Terminated block@6
debug: Sealing block@7
debug: Terminated block@7
debug: Sealing block@8
debug: Created Phi assignment: let or_result%1#2: bool = undefined while trying to resolve 'or_result%1' in block@8
debug: Added or_result%1#0 to Phi node: let or_result%1#2: bool = φ(or_result%1#0 <- block@6) in block@6
debug: Added or_result%1#1 to Phi node: let or_result%1#2: bool = φ(or_result%1#0 <- block@6, or_result%1#1 <- block@7) in block@7
debug: Terminated block@8
debug: Sealing block@9
debug: Terminated block@9
debug: Sealing block@10
debug: Terminated block@10
debug: Sealing block@11
debug: Terminated block@11
debug: Sealing block@12
debug: Terminated block@12
debug: Sealing block@13
debug: Created Phi assignment: let or_result%2#2: bool = undefined while trying to resolve 'or_result%2' in block@13
debug: Added or_result%2#0 to Phi node: let or_result%2#2: bool = φ(or_result%2#0 <- block@11) in block@11
debug: Added or_result%2#1 to Phi node: let or_result%2#2: bool = φ(or_result%2#0 <- block@11, or_result%2#1 <- block@12) in block@12
debug: Terminated block@13
debug: Sealing block@14
debug: Terminated block@14
debug: Sealing block@15
debug: Terminated block@15
debug: Sealing block@16
debug: Terminated block@16
debug: Sealing block@17
debug: Terminated block@17
debug: Sealing block@18
debug: Created Phi assignment: let or_result%3#2: bool = undefined while trying to resolve 'or_result%3' in block@18
debug: Added or_result%3#0 to Phi node: let or_result%3#2: bool = φ(or_result%3#0 <- block@16) in block@16
debug: Added or_result%3#1 to Phi node: let or_result%3#2: bool = φ(or_result%3#0 <- block@16, or_result%3#1 <- block@17) in block@17
debug: Terminated block@18
debug: Sealing block@19
contains/contract.py:93:16 debug: encountered already materialized expression (2u), reusing result: 2u
debug: Terminated block@19
debug: Sealing block@20
contains/contract.py:93:16 debug: encountered already materialized expression (2u), reusing result: 2u
debug: Terminated block@20
debug: Sealing block@21
debug: Terminated block@21
debug: Sealing block@22
debug: Terminated block@22
debug: Sealing block@23
debug: Created Phi assignment: let or_result%4#2: bool = undefined while trying to resolve 'or_result%4' in block@23
debug: Added or_result%4#0 to Phi node: let or_result%4#2: bool = φ(or_result%4#0 <- block@21) in block@21
debug: Added or_result%4#1 to Phi node: let or_result%4#2: bool = φ(or_result%4#0 <- block@21, or_result%4#1 <- block@22) in block@22
debug: Terminated block@23
debug: Sealing block@24
debug: Terminated block@24
debug: Sealing block@25
debug: Terminated block@25
debug: Sealing block@26
debug: Terminated block@26
debug: Sealing block@27
debug: Terminated block@27
debug: Sealing block@28
debug: Created Phi assignment: let or_result%5#2: bool = undefined while trying to resolve 'or_result%5' in block@28
debug: Added or_result%5#0 to Phi node: let or_result%5#2: bool = φ(or_result%5#0 <- block@26) in block@26
debug: Added or_result%5#1 to Phi node: let or_result%5#2: bool = φ(or_result%5#0 <- block@26, or_result%5#1 <- block@27) in block@27
debug: Terminated block@28
debug: Sealing block@29
debug: Terminated block@29
debug: Sealing block@30
debug: Terminated block@30
debug: Sealing block@31
debug: Terminated block@31
debug: Sealing block@32
debug: Terminated block@32
debug: Sealing block@33
debug: Created Phi assignment: let or_result%6#2: bool = undefined while trying to resolve 'or_result%6' in block@33
debug: Added or_result%6#0 to Phi node: let or_result%6#2: bool = φ(or_result%6#0 <- block@31) in block@31
debug: Added or_result%6#1 to Phi node: let or_result%6#2: bool = φ(or_result%6#0 <- block@31, or_result%6#1 <- block@32) in block@32
debug: Terminated block@33
debug: Sealing block@34
debug: Terminated block@34
debug: Sealing block@35
debug: Terminated block@35
debug: Sealing block@36
debug: Terminated block@36
debug: Sealing block@37
debug: Created Phi assignment: let or_result%7#2: bool = undefined while trying to resolve 'or_result%7' in block@37
debug: Added or_result%7#0 to Phi node: let or_result%7#2: bool = φ(or_result%7#0 <- block@35) in block@35
debug: Added or_result%7#1 to Phi node: let or_result%7#2: bool = φ(or_result%7#0 <- block@35, or_result%7#1 <- block@36) in block@36
debug: Terminated block@37
debug: Sealing block@38
debug: Terminated block@38
debug: Sealing block@39
debug: Terminated block@39
debug: Sealing block@40
debug: Terminated block@40
debug: Sealing block@41
debug: Created Phi assignment: let or_result%8#2: bool = undefined while trying to resolve 'or_result%8' in block@41
debug: Added or_result%8#0 to Phi node: let or_result%8#2: bool = φ(or_result%8#0 <- block@39) in block@39
debug: Added or_result%8#1 to Phi node: let or_result%8#2: bool = φ(or_result%8#0 <- block@39, or_result%8#1 <- block@40) in block@40
debug: Terminated block@41
debug: Sealing block@42
debug: Terminated block@42
debug: Sealing block@43
debug: Terminated block@43
debug: Sealing block@44
debug: Terminated block@44
debug: Sealing block@45
debug: Created Phi assignment: let or_result%9#2: bool = undefined while trying to resolve 'or_result%9' in block@45
debug: Added or_result%9#0 to Phi node: let or_result%9#2: bool = φ(or_result%9#0 <- block@43) in block@43
debug: Added or_result%9#1 to Phi node: let or_result%9#2: bool = φ(or_result%9#0 <- block@43, or_result%9#1 <- block@44) in block@44
debug: Terminated block@45
debug: Sealing block@46
debug: Terminated block@46
debug: Sealing block@47
debug: Terminated block@47
debug: Sealing block@48
debug: Terminated block@48
debug: Sealing block@49
debug: Created Phi assignment: let or_result%10#2: bool = undefined while trying to resolve 'or_result%10' in block@49
debug: Added or_result%10#0 to Phi node: let or_result%10#2: bool = φ(or_result%10#0 <- block@47) in block@47
debug: Added or_result%10#1 to Phi node: let or_result%10#2: bool = φ(or_result%10#0 <- block@47, or_result%10#1 <- block@48) in block@48
debug: Terminated block@49
debug: Sealing block@50
debug: Terminated block@50
debug: Sealing block@51
debug: Terminated block@51
debug: Sealing block@52
debug: Terminated block@52
debug: Sealing block@53
debug: Created Phi assignment: let or_result%11#2: bool = undefined while trying to resolve 'or_result%11' in block@53
debug: Added or_result%11#0 to Phi node: let or_result%11#2: bool = φ(or_result%11#0 <- block@51) in block@51
debug: Added or_result%11#1 to Phi node: let or_result%11#2: bool = φ(or_result%11#0 <- block@51, or_result%11#1 <- block@52) in block@52
debug: Terminated block@53
debug: Sealing block@54
contains/contract.py:102:16 debug: encountered already materialized expression (2u), reusing result: 2u
debug: Terminated block@54
debug: Sealing block@55
debug: Terminated block@55
debug: Sealing block@56
debug: Terminated block@56
debug: Sealing block@57
debug: Created Phi assignment: let or_result%12#2: bool = undefined while trying to resolve 'or_result%12' in block@57
debug: Added or_result%12#0 to Phi node: let or_result%12#2: bool = φ(or_result%12#0 <- block@55) in block@55
debug: Added or_result%12#1 to Phi node: let or_result%12#2: bool = φ(or_result%12#0 <- block@55, or_result%12#1 <- block@56) in block@56
debug: Terminated block@57
debug: Sealing block@58
debug: Terminated block@58
debug: Sealing block@59
debug: Terminated block@59
debug: Sealing block@60
debug: Terminated block@60
debug: Sealing block@61
debug: Created Phi assignment: let or_result%13#2: bool = undefined while trying to resolve 'or_result%13' in block@61
debug: Added or_result%13#0 to Phi node: let or_result%13#2: bool = φ(or_result%13#0 <- block@59) in block@59
debug: Added or_result%13#1 to Phi node: let or_result%13#2: bool = φ(or_result%13#0 <- block@59, or_result%13#1 <- block@60) in block@60
debug: Terminated block@61
debug: Sealing block@62
debug: Terminated block@62
debug: Sealing block@63
debug: Terminated block@63
debug: Sealing block@64
debug: Terminated block@64
debug: Sealing block@65
debug: Created Phi assignment: let or_result%14#2: bool = undefined while trying to resolve 'or_result%14' in block@65
debug: Added or_result%14#0 to Phi node: let or_result%14#2: bool = φ(or_result%14#0 <- block@63) in block@63
debug: Added or_result%14#1 to Phi node: let or_result%14#2: bool = φ(or_result%14#0 <- block@63, or_result%14#1 <- block@64) in block@64
debug: Terminated block@65
debug: Sealing block@66
debug: Terminated block@66
debug: Sealing block@67
debug: Terminated block@67
debug: Sealing block@68
debug: Terminated block@68
debug: Sealing block@69
debug: Created Phi assignment: let or_result%15#2: bool = undefined while trying to resolve 'or_result%15' in block@69
debug: Added or_result%15#0 to Phi node: let or_result%15#2: bool = φ(or_result%15#0 <- block@67) in block@67
debug: Added or_result%15#1 to Phi node: let or_result%15#2: bool = φ(or_result%15#0 <- block@67, or_result%15#1 <- block@68) in block@68
debug: Terminated block@69
debug: Sealing block@70
debug: Terminated block@70
debug: Sealing block@71
debug: Terminated block@71
debug: Sealing block@72
debug: Terminated block@72
debug: Sealing block@73
debug: Created Phi assignment: let or_result%16#2: bool = undefined while trying to resolve 'or_result%16' in block@73
debug: Added or_result%16#0 to Phi node: let or_result%16#2: bool = φ(or_result%16#0 <- block@71) in block@71
debug: Added or_result%16#1 to Phi node: let or_result%16#2: bool = φ(or_result%16#0 <- block@71, or_result%16#1 <- block@72) in block@72
debug: Terminated block@73
debug: Sealing block@74
debug: Terminated block@74
debug: Sealing block@75
debug: Terminated block@75
debug: Sealing block@76
debug: Terminated block@76
debug: Sealing block@77
debug: Terminated block@77
debug: Sealing block@78
debug: Created Phi assignment: let or_result%17#2: bool = undefined while trying to resolve 'or_result%17' in block@78
debug: Added or_result%17#0 to Phi node: let or_result%17#2: bool = φ(or_result%17#0 <- block@76) in block@76
debug: Added or_result%17#1 to Phi node: let or_result%17#2: bool = φ(or_result%17#0 <- block@76, or_result%17#1 <- block@77) in block@77
debug: Terminated block@78
debug: Sealing block@79
debug: Terminated block@79
debug: Sealing block@80
debug: Terminated block@80
debug: Sealing block@81
debug: Terminated block@81
debug: Sealing block@82
debug: Created Phi assignment: let or_result%18#2: bool = undefined while trying to resolve 'or_result%18' in block@82
debug: Added or_result%18#0 to Phi node: let or_result%18#2: bool = φ(or_result%18#0 <- block@80) in block@80
debug: Added or_result%18#1 to Phi node: let or_result%18#2: bool = φ(or_result%18#0 <- block@80, or_result%18#1 <- block@81) in block@81
debug: Terminated block@82
debug: Sealing block@83
contains/contract.py:115:16 debug: encountered already materialized expression (2u), reusing result: 2u
debug: Terminated block@83
debug: Sealing block@84
debug: Terminated block@84
debug: Sealing block@85
debug: Terminated block@85
debug: Sealing block@86
debug: Created Phi assignment: let or_result%19#2: bool = undefined while trying to resolve 'or_result%19' in block@86
debug: Added or_result%19#0 to Phi node: let or_result%19#2: bool = φ(or_result%19#0 <- block@84) in block@84
debug: Added or_result%19#1 to Phi node: let or_result%19#2: bool = φ(or_result%19#0 <- block@84, or_result%19#1 <- block@85) in block@85
debug: Terminated block@86
debug: Sealing block@87
debug: Terminated block@87
debug: Sealing block@88
debug: Terminated block@88
debug: Sealing block@89
debug: Terminated block@89
debug: Sealing block@90
debug: Created Phi assignment: let or_result%20#2: bool = undefined while trying to resolve 'or_result%20' in block@90
debug: Added or_result%20#0 to Phi node: let or_result%20#2: bool = φ(or_result%20#0 <- block@88) in block@88
debug: Added or_result%20#1 to Phi node: let or_result%20#2: bool = φ(or_result%20#0 <- block@88, or_result%20#1 <- block@89) in block@89
debug: Terminated block@90
debug: Sealing block@91
debug: Terminated block@91
debug: Sealing block@92
debug: Terminated block@92
debug: Sealing block@93
debug: Terminated block@93
debug: Sealing block@94
debug: Created Phi assignment: let or_result%21#2: bool = undefined while trying to resolve 'or_result%21' in block@94
debug: Added or_result%21#0 to Phi node: let or_result%21#2: bool = φ(or_result%21#0 <- block@92) in block@92
debug: Added or_result%21#1 to Phi node: let or_result%21#2: bool = φ(or_result%21#0 <- block@92, or_result%21#1 <- block@93) in block@93
debug: Terminated block@94
debug: Sealing block@95
debug: Terminated block@95
debug: Sealing block@96
debug: Terminated block@96
debug: Sealing block@97
debug: Terminated block@97
debug: Sealing block@98
debug: Created Phi assignment: let or_result%22#2: bool = undefined while trying to resolve 'or_result%22' in block@98
debug: Added or_result%22#0 to Phi node: let or_result%22#2: bool = φ(or_result%22#0 <- block@96) in block@96
debug: Added or_result%22#1 to Phi node: let or_result%22#2: bool = φ(or_result%22#0 <- block@96, or_result%22#1 <- block@97) in block@97
debug: Terminated block@98
debug: Sealing block@99
debug: Terminated block@99
debug: Sealing block@100
debug: Terminated block@100
debug: Sealing block@101
debug: Terminated block@101
debug: Sealing block@102
debug: Created Phi assignment: let or_result%23#2: bool = undefined while trying to resolve 'or_result%23' in block@102
debug: Added or_result%23#0 to Phi node: let or_result%23#2: bool = φ(or_result%23#0 <- block@100) in block@100
debug: Added or_result%23#1 to Phi node: let or_result%23#2: bool = φ(or_result%23#0 <- block@100, or_result%23#1 <- block@101) in block@101
debug: Terminated block@102
debug: Sealing block@103
contains/contract.py:130:16 debug: encountered already materialized expression (65_arc4u8), reusing result: 0x41
debug: Terminated block@103
debug: Sealing block@104
debug: Terminated block@104
debug: Sealing block@105
debug: Terminated block@105
debug: Sealing block@106
debug: Created Phi assignment: let or_result%24#2: bool = undefined while trying to resolve 'or_result%24' in block@106
debug: Added or_result%24#0 to Phi node: let or_result%24#2: bool = φ(or_result%24#0 <- block@104) in block@104
debug: Added or_result%24#1 to Phi node: let or_result%24#2: bool = φ(or_result%24#0 <- block@104, or_result%24#1 <- block@105) in block@105
debug: Terminated block@106
debug: Building IR for function algopy._contract.Contract.__init__
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.contains.contract.MyContract.approval_program
debug: Sealing block@0
debug: Terminated block@0
debug: removing unused subroutine _puya_lib.util.ensure_budget
debug: removing unused subroutine _puya_lib.bytes_.is_substring
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_bit
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_fixed_size
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_bits
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_replace_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_replace_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.static_array_replace_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.static_array_replace_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.recalculate_head_for_elements_with_byte_length_head
debug: removing unused subroutine test_cases.contains.contract.MyContract.__puya_arc4_router__
debug: removing unused subroutine test_cases.contains.contract.MyContract.approval_program
debug: removing unused subroutine test_cases.contains.contract.MyContract.clear_state_program
debug: removing unused subroutine algopy._contract.Contract.__init__
debug: Building IR for function test_cases.contains.contract.MyContract.clear_state_program
debug: Sealing block@0
debug: Terminated block@0
debug: removing unused subroutine _puya_lib.util.ensure_budget
debug: removing unused subroutine _puya_lib.bytes_.is_substring
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_bit
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_fixed_size
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_bits
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_replace_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_replace_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.static_array_replace_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.static_array_replace_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.recalculate_head_for_elements_with_byte_length_head
debug: removing unused subroutine test_cases.contains.contract.one_u64
debug: removing unused subroutine test_cases.contains.contract.one_arc4u64
debug: removing unused subroutine test_cases.contains.contract.two_u64
debug: removing unused subroutine test_cases.contains.contract.two_u8
debug: removing unused subroutine test_cases.contains.contract.three_u512
debug: removing unused subroutine test_cases.contains.contract.four_biguint
debug: removing unused subroutine test_cases.contains.contract.foo_string
debug: removing unused subroutine test_cases.contains.contract.foo_arc4
debug: removing unused subroutine test_cases.contains.contract.bar_string
debug: removing unused subroutine test_cases.contains.contract.bar_arc4
debug: removing unused subroutine test_cases.contains.contract.baz_string
debug: removing unused subroutine test_cases.contains.contract.MyContract.__puya_arc4_router__
debug: removing unused subroutine test_cases.contains.contract.MyContract.approval_program
debug: removing unused subroutine test_cases.contains.contract.MyContract.clear_state_program
debug: removing unused subroutine test_cases.contains.contract.MyContract.is_in_tuple_1
debug: removing unused subroutine test_cases.contains.contract.MyContract.is_in_tuple_2
debug: removing unused subroutine test_cases.contains.contract.MyContract.is_in_tuple_3
debug: removing unused subroutine test_cases.contains.contract.MyContract.test_string_types
debug: removing unused subroutine test_cases.contains.contract.MyContract.test_numeric_types
debug: removing unused subroutine algopy._contract.Contract.__init__
debug: optimizing approval program of test_cases.contains.contract.MyContract at level 0
debug: Begin optimization pass 1/100
debug: Optimizing subroutine test_cases.contains.contract.MyContract.approval_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable not_ten#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.contains.contract.one_u64
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.contains.contract.one_arc4u64
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.contains.contract.two_u64
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.contains.contract.two_u8
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.contains.contract.three_u512
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.contains.contract.four_biguint
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.contains.contract.foo_string
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.contains.contract.foo_arc4
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.contains.contract.bar_string
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.contains.contract.bar_arc4
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.contains.contract.baz_string
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.contains.contract.MyContract.is_in_tuple_1
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.contains.contract.MyContract.is_in_tuple_2
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.contains.contract.MyContract.is_in_tuple_3
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.contains.contract.MyContract.test_string_types
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Not removing unused assignment since source is not marked as pure: let tmp%40#0: uint64 = test_cases.contains.contract.one_u64()
debug: Not removing unused assignment since source is not marked as pure: let tmp%48#0: uint64 = test_cases.contains.contract.one_u64()
debug: Not removing unused assignment since source is not marked as pure: let tmp%56#0: uint64 = test_cases.contains.contract.one_u64()
debug: Not removing unused assignment since source is not marked as pure: let tmp%63#0: uint64 = test_cases.contains.contract.one_u64()
debug: Not removing unused assignment since source is not marked as pure: let tmp%68#0: string = test_cases.contains.contract.foo_string()
debug: Not removing unused assignment since source is not marked as pure: let tmp%69#0: Encoded(len+utf8[]) = test_cases.contains.contract.foo_arc4()
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.contains.contract.MyContract.test_numeric_types
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Not removing unused assignment since source is not marked as pure: let tmp%88#0: string = test_cases.contains.contract.foo_string()
debug: Not removing unused assignment since source is not marked as pure: let tmp%96#0: string = test_cases.contains.contract.bar_string()
debug: Not removing unused assignment since source is not marked as pure: let tmp%102#0: Encoded(len+utf8[]) = test_cases.contains.contract.foo_arc4()
debug: Not removing unused assignment since source is not marked as pure: let tmp%107#0: Encoded(len+utf8[]) = test_cases.contains.contract.bar_arc4()
debug: Not removing unused assignment since source is not marked as pure: let tmp%112#0: string = test_cases.contains.contract.foo_string()
debug: Not removing unused assignment since source is not marked as pure: let tmp%117#0: string = test_cases.contains.contract.foo_string()
debug: Not removing unused assignment since source is not marked as pure: let tmp%122#0: string = test_cases.contains.contract.foo_string()
debug: Not removing unused assignment since source is not marked as pure: let tmp%128#0: string = test_cases.contains.contract.bar_string()
debug: Not removing unused assignment since source is not marked as pure: let tmp%133#0: Encoded(len+utf8[]) = test_cases.contains.contract.foo_arc4()
debug: Not removing unused assignment since source is not marked as pure: let tmp%136#0: Encoded(len+utf8[]) = test_cases.contains.contract.bar_arc4()
debug: Not removing unused assignment since source is not marked as pure: let tmp%140#0: string = test_cases.contains.contract.foo_string()
debug: Not removing unused assignment since source is not marked as pure: let tmp%144#0: string = test_cases.contains.contract.foo_string()
debug: Removing unused variable reinterpret_biguint%44#0
debug: Removing unused variable reinterpret_biguint%45#0
debug: Not removing unused assignment since source is not marked as pure: let tmp%88#0: string = test_cases.contains.contract.foo_string()
debug: Not removing unused assignment since source is not marked as pure: let tmp%96#0: string = test_cases.contains.contract.bar_string()
debug: Not removing unused assignment since source is not marked as pure: let tmp%102#0: Encoded(len+utf8[]) = test_cases.contains.contract.foo_arc4()
debug: Not removing unused assignment since source is not marked as pure: let tmp%107#0: Encoded(len+utf8[]) = test_cases.contains.contract.bar_arc4()
debug: Not removing unused assignment since source is not marked as pure: let tmp%112#0: string = test_cases.contains.contract.foo_string()
debug: Not removing unused assignment since source is not marked as pure: let tmp%117#0: string = test_cases.contains.contract.foo_string()
debug: Not removing unused assignment since source is not marked as pure: let tmp%122#0: string = test_cases.contains.contract.foo_string()
debug: Not removing unused assignment since source is not marked as pure: let tmp%128#0: string = test_cases.contains.contract.bar_string()
debug: Not removing unused assignment since source is not marked as pure: let tmp%133#0: Encoded(len+utf8[]) = test_cases.contains.contract.foo_arc4()
debug: Not removing unused assignment since source is not marked as pure: let tmp%136#0: Encoded(len+utf8[]) = test_cases.contains.contract.bar_arc4()
debug: Not removing unused assignment since source is not marked as pure: let tmp%140#0: string = test_cases.contains.contract.foo_string()
debug: Not removing unused assignment since source is not marked as pure: let tmp%144#0: string = test_cases.contains.contract.foo_string()
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Begin optimization pass 2/100
debug: Optimizing subroutine test_cases.contains.contract.MyContract.approval_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.contains.contract.one_u64
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.contains.contract.one_arc4u64
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.contains.contract.two_u64
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.contains.contract.two_u8
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.contains.contract.three_u512
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.contains.contract.four_biguint
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.contains.contract.foo_string
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.contains.contract.foo_arc4
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.contains.contract.bar_string
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.contains.contract.bar_arc4
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.contains.contract.baz_string
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.contains.contract.MyContract.is_in_tuple_1
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.contains.contract.MyContract.is_in_tuple_2
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.contains.contract.MyContract.is_in_tuple_3
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.contains.contract.MyContract.test_string_types
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Not removing unused assignment since source is not marked as pure: let tmp%40#0: uint64 = test_cases.contains.contract.one_u64()
debug: Not removing unused assignment since source is not marked as pure: let tmp%48#0: uint64 = test_cases.contains.contract.one_u64()
debug: Not removing unused assignment since source is not marked as pure: let tmp%56#0: uint64 = test_cases.contains.contract.one_u64()
debug: Not removing unused assignment since source is not marked as pure: let tmp%63#0: uint64 = test_cases.contains.contract.one_u64()
debug: Not removing unused assignment since source is not marked as pure: let tmp%68#0: string = test_cases.contains.contract.foo_string()
debug: Not removing unused assignment since source is not marked as pure: let tmp%69#0: Encoded(len+utf8[]) = test_cases.contains.contract.foo_arc4()
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.contains.contract.MyContract.test_numeric_types
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Not removing unused assignment since source is not marked as pure: let tmp%88#0: string = test_cases.contains.contract.foo_string()
debug: Not removing unused assignment since source is not marked as pure: let tmp%96#0: string = test_cases.contains.contract.bar_string()
debug: Not removing unused assignment since source is not marked as pure: let tmp%102#0: Encoded(len+utf8[]) = test_cases.contains.contract.foo_arc4()
debug: Not removing unused assignment since source is not marked as pure: let tmp%107#0: Encoded(len+utf8[]) = test_cases.contains.contract.bar_arc4()
debug: Not removing unused assignment since source is not marked as pure: let tmp%112#0: string = test_cases.contains.contract.foo_string()
debug: Not removing unused assignment since source is not marked as pure: let tmp%117#0: string = test_cases.contains.contract.foo_string()
debug: Not removing unused assignment since source is not marked as pure: let tmp%122#0: string = test_cases.contains.contract.foo_string()
debug: Not removing unused assignment since source is not marked as pure: let tmp%128#0: string = test_cases.contains.contract.bar_string()
debug: Not removing unused assignment since source is not marked as pure: let tmp%133#0: Encoded(len+utf8[]) = test_cases.contains.contract.foo_arc4()
debug: Not removing unused assignment since source is not marked as pure: let tmp%136#0: Encoded(len+utf8[]) = test_cases.contains.contract.bar_arc4()
debug: Not removing unused assignment since source is not marked as pure: let tmp%140#0: string = test_cases.contains.contract.foo_string()
debug: Not removing unused assignment since source is not marked as pure: let tmp%144#0: string = test_cases.contains.contract.foo_string()
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: No optimizations performed in pass 2, ending loop
debug: optimizing clear program of test_cases.contains.contract.MyContract at level 0
debug: Begin optimization pass 1/100
debug: Optimizing subroutine test_cases.contains.contract.MyContract.clear_state_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: No optimizations performed in pass 1, ending loop
debug: lowering array IR nodes in approval program of test_cases.contains.contract.MyContract
debug: lowering array IR nodes in clear program of test_cases.contains.contract.MyContract
debug: optimizing approval program of test_cases.contains.contract.MyContract at level 0
debug: Begin optimization pass 1/100
debug: Optimizing subroutine test_cases.contains.contract.MyContract.approval_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.contains.contract.one_u64
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.contains.contract.one_arc4u64
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.contains.contract.two_u64
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.contains.contract.two_u8
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.contains.contract.three_u512
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.contains.contract.four_biguint
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.contains.contract.foo_string
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.contains.contract.foo_arc4
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.contains.contract.bar_string
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.contains.contract.bar_arc4
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.contains.contract.baz_string
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.contains.contract.MyContract.is_in_tuple_1
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.contains.contract.MyContract.is_in_tuple_2
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.contains.contract.MyContract.is_in_tuple_3
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.contains.contract.MyContract.test_string_types
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Not removing unused assignment since source is not marked as pure: let tmp%40#0: uint64 = test_cases.contains.contract.one_u64()
debug: Not removing unused assignment since source is not marked as pure: let tmp%48#0: uint64 = test_cases.contains.contract.one_u64()
debug: Not removing unused assignment since source is not marked as pure: let tmp%56#0: uint64 = test_cases.contains.contract.one_u64()
debug: Not removing unused assignment since source is not marked as pure: let tmp%63#0: uint64 = test_cases.contains.contract.one_u64()
debug: Not removing unused assignment since source is not marked as pure: let tmp%68#0: string = test_cases.contains.contract.foo_string()
debug: Not removing unused assignment since source is not marked as pure: let tmp%69#0: Encoded(len+utf8[]) = test_cases.contains.contract.foo_arc4()
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.contains.contract.MyContract.test_numeric_types
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Not removing unused assignment since source is not marked as pure: let tmp%88#0: string = test_cases.contains.contract.foo_string()
debug: Not removing unused assignment since source is not marked as pure: let tmp%96#0: string = test_cases.contains.contract.bar_string()
debug: Not removing unused assignment since source is not marked as pure: let tmp%102#0: Encoded(len+utf8[]) = test_cases.contains.contract.foo_arc4()
debug: Not removing unused assignment since source is not marked as pure: let tmp%107#0: Encoded(len+utf8[]) = test_cases.contains.contract.bar_arc4()
debug: Not removing unused assignment since source is not marked as pure: let tmp%112#0: string = test_cases.contains.contract.foo_string()
debug: Not removing unused assignment since source is not marked as pure: let tmp%117#0: string = test_cases.contains.contract.foo_string()
debug: Not removing unused assignment since source is not marked as pure: let tmp%122#0: string = test_cases.contains.contract.foo_string()
debug: Not removing unused assignment since source is not marked as pure: let tmp%128#0: string = test_cases.contains.contract.bar_string()
debug: Not removing unused assignment since source is not marked as pure: let tmp%133#0: Encoded(len+utf8[]) = test_cases.contains.contract.foo_arc4()
debug: Not removing unused assignment since source is not marked as pure: let tmp%136#0: Encoded(len+utf8[]) = test_cases.contains.contract.bar_arc4()
debug: Not removing unused assignment since source is not marked as pure: let tmp%140#0: string = test_cases.contains.contract.foo_string()
debug: Not removing unused assignment since source is not marked as pure: let tmp%144#0: string = test_cases.contains.contract.foo_string()
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: No optimizations performed in pass 1, ending loop
debug: optimizing clear program of test_cases.contains.contract.MyContract at level 0
debug: Begin optimization pass 1/100
debug: Optimizing subroutine test_cases.contains.contract.MyContract.clear_state_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: No optimizations performed in pass 1, ending loop
debug: removing local static slots in approval program of test_cases.contains.contract.MyContract
contains/contract.py:7 debug: auto reserving slots in test_cases.contains.contract.MyContract.approval_program, []
contains/contract.py:137 debug: auto reserving slots in test_cases.contains.contract.one_u64, []
contains/contract.py:142 debug: auto reserving slots in test_cases.contains.contract.one_arc4u64, []
contains/contract.py:147 debug: auto reserving slots in test_cases.contains.contract.two_u64, []
contains/contract.py:152 debug: auto reserving slots in test_cases.contains.contract.two_u8, []
contains/contract.py:157 debug: auto reserving slots in test_cases.contains.contract.three_u512, []
contains/contract.py:162 debug: auto reserving slots in test_cases.contains.contract.four_biguint, []
contains/contract.py:167 debug: auto reserving slots in test_cases.contains.contract.foo_string, []
contains/contract.py:172 debug: auto reserving slots in test_cases.contains.contract.foo_arc4, []
contains/contract.py:177 debug: auto reserving slots in test_cases.contains.contract.bar_string, []
contains/contract.py:182 debug: auto reserving slots in test_cases.contains.contract.bar_arc4, []
contains/contract.py:187 debug: auto reserving slots in test_cases.contains.contract.baz_string, []
contains/contract.py:42 debug: auto reserving slots in test_cases.contains.contract.MyContract.is_in_tuple_1, []
contains/contract.py:46 debug: auto reserving slots in test_cases.contains.contract.MyContract.is_in_tuple_2, []
contains/contract.py:50 debug: auto reserving slots in test_cases.contains.contract.MyContract.is_in_tuple_3, []
contains/contract.py:54 debug: auto reserving slots in test_cases.contains.contract.MyContract.test_string_types, []
contains/contract.py:86 debug: auto reserving slots in test_cases.contains.contract.MyContract.test_numeric_types, []
debug: Slot allocation not required
debug: removing local static slots in clear program of test_cases.contains.contract.MyContract
contains/contract.py:39 debug: auto reserving slots in test_cases.contains.contract.MyContract.clear_state_program, []
debug: Slot allocation not required
debug: Performing SSA IR destructuring for test_cases.contains.contract.MyContract.approval_program
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in test_cases.contains.contract.MyContract.approval_program using strategy 'root_operand'
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in test_cases.contains.contract.MyContract.approval_program
debug: Performing post-SSA optimizations at level 0
debug: Performing SSA IR destructuring for test_cases.contains.contract.one_u64
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in test_cases.contains.contract.one_u64 using strategy 'root_operand'
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in test_cases.contains.contract.one_u64
debug: Performing post-SSA optimizations at level 0
debug: Performing SSA IR destructuring for test_cases.contains.contract.one_arc4u64
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in test_cases.contains.contract.one_arc4u64 using strategy 'root_operand'
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in test_cases.contains.contract.one_arc4u64
debug: Performing post-SSA optimizations at level 0
debug: Performing SSA IR destructuring for test_cases.contains.contract.two_u64
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in test_cases.contains.contract.two_u64 using strategy 'root_operand'
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in test_cases.contains.contract.two_u64
debug: Performing post-SSA optimizations at level 0
debug: Performing SSA IR destructuring for test_cases.contains.contract.two_u8
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in test_cases.contains.contract.two_u8 using strategy 'root_operand'
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in test_cases.contains.contract.two_u8
debug: Performing post-SSA optimizations at level 0
debug: Performing SSA IR destructuring for test_cases.contains.contract.three_u512
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in test_cases.contains.contract.three_u512 using strategy 'root_operand'
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in test_cases.contains.contract.three_u512
debug: Performing post-SSA optimizations at level 0
debug: Performing SSA IR destructuring for test_cases.contains.contract.four_biguint
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in test_cases.contains.contract.four_biguint using strategy 'root_operand'
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in test_cases.contains.contract.four_biguint
debug: Performing post-SSA optimizations at level 0
debug: Performing SSA IR destructuring for test_cases.contains.contract.foo_string
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in test_cases.contains.contract.foo_string using strategy 'root_operand'
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in test_cases.contains.contract.foo_string
debug: Performing post-SSA optimizations at level 0
debug: Performing SSA IR destructuring for test_cases.contains.contract.foo_arc4
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in test_cases.contains.contract.foo_arc4 using strategy 'root_operand'
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in test_cases.contains.contract.foo_arc4
debug: Performing post-SSA optimizations at level 0
debug: Performing SSA IR destructuring for test_cases.contains.contract.bar_string
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in test_cases.contains.contract.bar_string using strategy 'root_operand'
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in test_cases.contains.contract.bar_string
debug: Performing post-SSA optimizations at level 0
debug: Performing SSA IR destructuring for test_cases.contains.contract.bar_arc4
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in test_cases.contains.contract.bar_arc4 using strategy 'root_operand'
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in test_cases.contains.contract.bar_arc4
debug: Performing post-SSA optimizations at level 0
debug: Performing SSA IR destructuring for test_cases.contains.contract.baz_string
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in test_cases.contains.contract.baz_string using strategy 'root_operand'
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in test_cases.contains.contract.baz_string
debug: Performing post-SSA optimizations at level 0
debug: Performing SSA IR destructuring for test_cases.contains.contract.MyContract.is_in_tuple_1
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in test_cases.contains.contract.MyContract.is_in_tuple_1 using strategy 'root_operand'
debug: Coalescing or_result%0#0 with [or_result%0#5, or_result%0#1, or_result%0#2]
debug: Coalescing resulted in 7 replacement/s
debug: Sequentializing parallel copies in test_cases.contains.contract.MyContract.is_in_tuple_1
debug: Performing post-SSA optimizations at level 0
debug: Performing SSA IR destructuring for test_cases.contains.contract.MyContract.is_in_tuple_2
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in test_cases.contains.contract.MyContract.is_in_tuple_2 using strategy 'root_operand'
debug: Coalescing or_result%0#0 with [or_result%0#5, or_result%0#1, or_result%0#2]
debug: Coalescing resulted in 7 replacement/s
debug: Sequentializing parallel copies in test_cases.contains.contract.MyContract.is_in_tuple_2
debug: Performing post-SSA optimizations at level 0
debug: Performing SSA IR destructuring for test_cases.contains.contract.MyContract.is_in_tuple_3
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in test_cases.contains.contract.MyContract.is_in_tuple_3 using strategy 'root_operand'
debug: Coalescing or_result%0#0 with [or_result%0#5, or_result%0#1, or_result%0#2]
debug: Coalescing resulted in 7 replacement/s
debug: Sequentializing parallel copies in test_cases.contains.contract.MyContract.is_in_tuple_3
debug: Performing post-SSA optimizations at level 0
debug: Performing SSA IR destructuring for test_cases.contains.contract.MyContract.test_string_types
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in test_cases.contains.contract.MyContract.test_string_types using strategy 'root_operand'
debug: Coalescing or_result%0#0 with [or_result%0#5, or_result%0#1, or_result%0#2]
debug: Coalescing or_result%1#0 with [or_result%1#5, or_result%1#1, or_result%1#2]
debug: Coalescing or_result%2#0 with [or_result%2#5, or_result%2#1, or_result%2#2]
debug: Coalescing or_result%3#0 with [or_result%3#5, or_result%3#1, or_result%3#2]
debug: Coalescing or_result%4#0 with [or_result%4#5, or_result%4#1, or_result%4#2]
debug: Coalescing or_result%5#0 with [or_result%5#5, or_result%5#1, or_result%5#2]
debug: Coalescing or_result%6#0 with [or_result%6#5, or_result%6#1, or_result%6#2]
debug: Coalescing or_result%7#0 with [or_result%7#5, or_result%7#1, or_result%7#2]
debug: Coalescing or_result%8#0 with [or_result%8#5, or_result%8#1, or_result%8#2]
debug: Coalescing or_result%9#0 with [or_result%9#5, or_result%9#1, or_result%9#2]
debug: Coalescing resulted in 70 replacement/s
debug: Sequentializing parallel copies in test_cases.contains.contract.MyContract.test_string_types
debug: Performing post-SSA optimizations at level 0
debug: Performing SSA IR destructuring for test_cases.contains.contract.MyContract.test_numeric_types
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in test_cases.contains.contract.MyContract.test_numeric_types using strategy 'root_operand'
debug: Coalescing or_result%0#0 with [or_result%0#5, or_result%0#1, or_result%0#2]
debug: Coalescing or_result%1#0 with [or_result%1#5, or_result%1#1, or_result%1#2]
debug: Coalescing or_result%2#0 with [or_result%2#5, or_result%2#1, or_result%2#2]
debug: Coalescing or_result%3#0 with [or_result%3#5, or_result%3#1, or_result%3#2]
debug: Coalescing or_result%4#0 with [or_result%4#5, or_result%4#1, or_result%4#2]
debug: Coalescing or_result%5#0 with [or_result%5#5, or_result%5#1, or_result%5#2]
debug: Coalescing or_result%6#0 with [or_result%6#5, or_result%6#1, or_result%6#2]
debug: Coalescing or_result%7#0 with [or_result%7#5, or_result%7#1, or_result%7#2]
debug: Coalescing or_result%8#0 with [or_result%8#5, or_result%8#1, or_result%8#2]
debug: Coalescing or_result%9#0 with [or_result%9#5, or_result%9#1, or_result%9#2]
debug: Coalescing or_result%10#0 with [or_result%10#5, or_result%10#1, or_result%10#2]
debug: Coalescing or_result%11#0 with [or_result%11#5, or_result%11#1, or_result%11#2]
debug: Coalescing or_result%12#0 with [or_result%12#5, or_result%12#1, or_result%12#2]
debug: Coalescing or_result%13#0 with [or_result%13#5, or_result%13#1, or_result%13#2]
debug: Coalescing or_result%14#0 with [or_result%14#5, or_result%14#1, or_result%14#2]
debug: Coalescing or_result%15#0 with [or_result%15#5, or_result%15#1, or_result%15#2]
debug: Coalescing or_result%16#0 with [or_result%16#5, or_result%16#1, or_result%16#2]
debug: Coalescing or_result%17#0 with [or_result%17#5, or_result%17#1, or_result%17#2]
debug: Coalescing or_result%18#0 with [or_result%18#5, or_result%18#1, or_result%18#2]
debug: Coalescing or_result%19#0 with [or_result%19#5, or_result%19#1, or_result%19#2]
debug: Coalescing or_result%20#0 with [or_result%20#5, or_result%20#1, or_result%20#2]
debug: Coalescing or_result%21#0 with [or_result%21#5, or_result%21#1, or_result%21#2]
debug: Coalescing or_result%22#0 with [or_result%22#5, or_result%22#1, or_result%22#2]
debug: Coalescing or_result%23#0 with [or_result%23#5, or_result%23#1, or_result%23#2]
debug: Coalescing or_result%24#0 with [or_result%24#5, or_result%24#1, or_result%24#2]
debug: Coalescing resulted in 175 replacement/s
debug: Sequentializing parallel copies in test_cases.contains.contract.MyContract.test_numeric_types
debug: Performing post-SSA optimizations at level 0
debug: Output IR to contains/out_unoptimized/MyContract.ir/MyContract.approval.400.destructured.ir
debug: Performing SSA IR destructuring for test_cases.contains.contract.MyContract.clear_state_program
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in test_cases.contains.contract.MyContract.clear_state_program using strategy 'root_operand'
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in test_cases.contains.contract.MyContract.clear_state_program
debug: Performing post-SSA optimizations at level 0
debug: Output IR to contains/out_unoptimized/MyContract.ir/MyContract.clear.400.destructured.ir
debug: Inserted main_block@0.ops[5]: 'l-store-copy tmp%0#0 0'
debug: Replaced main_block@0.ops[7]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted main_block@0.ops[14]: 'l-store-copy tmp%1#0 0'
debug: Replaced main_block@0.ops[16]: 'v-load tmp%1#0' with 'l-load tmp%1#0'
debug: Inserted main_block@0.ops[22]: 'l-store-copy tmp%2#0 0'
debug: Replaced main_block@0.ops[24]: 'v-load tmp%2#0' with 'l-load tmp%2#0'
debug: Inserted main_block@0.ops[31]: 'l-store-copy tmp%3#0 0'
debug: Replaced main_block@0.ops[33]: 'v-load tmp%3#0' with 'l-load tmp%3#0'
debug: Inserted main_block@0.ops[40]: 'l-store-copy tmp%4#0 0'
debug: Replaced main_block@0.ops[42]: 'v-load tmp%4#0' with 'l-load tmp%4#0'
debug: Inserted main_block@0.ops[48]: 'l-store-copy tmp%5#0 0'
debug: Replaced main_block@0.ops[50]: 'v-load tmp%5#0' with 'l-load tmp%5#0'
debug: Inserted main_block@0.ops[56]: 'l-store-copy tmp%6#0 0'
debug: Replaced main_block@0.ops[58]: 'v-load tmp%6#0' with 'l-load tmp%6#0'
debug: Inserted main_block@0.ops[63]: 'l-store-copy tmp%7#0 0'
debug: Replaced main_block@0.ops[65]: 'v-load tmp%7#0' with 'l-load tmp%7#0'
debug: Inserted main_block@0.ops[69]: 'l-store-copy tmp%8#0 0'
debug: Replaced main_block@0.ops[71]: 'v-load tmp%8#0' with 'l-load tmp%8#0'
debug: Inserted main_block@0.ops[77]: 'l-store-copy tmp%9#0 0'
debug: Replaced main_block@0.ops[79]: 'v-load tmp%9#0' with 'l-load tmp%9#0'
debug: Inserted main_block@0.ops[17]: 'l-store-copy one_false#0 0'
debug: Replaced main_block@0.ops[21]: 'v-load one_false#0' with 'l-load one_false#0'
debug: Inserted main_block@0.ops[44]: 'l-store-copy two_false#0 0'
debug: Replaced main_block@0.ops[48]: 'v-load two_false#0' with 'l-load two_false#0'
debug: Inserted main_block@0.ops[74]: 'l-store-copy three_false#0 0'
debug: Replaced main_block@0.ops[78]: 'v-load three_false#0' with 'l-load three_false#0'
debug: Inserted main_block@0.ops[8]: 'l-store-copy one_true#0 0'
debug: Replaced main_block@0.ops[20]: 'v-load one_true#0' with 'l-load one_true#0'
debug: Inserted main_block@0.ops[36]: 'l-store-copy two_true#0 0'
debug: Replaced main_block@0.ops[48]: 'v-load two_true#0' with 'l-load two_true#0'
debug: Inserted main_block@0.ops[63]: 'l-store-copy three_true#0 0'
debug: Replaced main_block@0.ops[79]: 'v-load three_true#0' with 'l-load three_true#0'
debug: Inserted foo_arc4_block@0.ops[2]: 'l-store-copy aggregate%length%0#0 0'
debug: Replaced foo_arc4_block@0.ops[4]: 'v-load aggregate%length%0#0' with 'l-load aggregate%length%0#0'
debug: Inserted foo_arc4_block@0.ops[6]: 'l-store-copy aggregate%as_bytes%0#0 0'
debug: Replaced foo_arc4_block@0.ops[8]: 'v-load aggregate%as_bytes%0#0' with 'l-load aggregate%as_bytes%0#0'
debug: Inserted foo_arc4_block@0.ops[10]: 'l-store-copy aggregate%length_uint16%0#0 0'
debug: Replaced foo_arc4_block@0.ops[12]: 'v-load aggregate%length_uint16%0#0' with 'l-load aggregate%length_uint16%0#0'
debug: Inserted foo_arc4_block@0.ops[15]: 'l-store-copy aggregate%encoded_value%0#0 0'
debug: Replaced foo_arc4_block@0.ops[17]: 'v-load aggregate%encoded_value%0#0' with 'l-load aggregate%encoded_value%0#0'
debug: Inserted foo_arc4_block@0.ops[18]: 'l-store-copy aggregate%as_Encoded(len+utf8[])%0#0 0'
debug: Replaced foo_arc4_block@0.ops[20]: 'v-load aggregate%as_Encoded(len+utf8[])%0#0' with 'l-load aggregate%as_Encoded(len+utf8[])%0#0'
debug: Inserted foo_arc4_block@0.ops[21]: 'l-store-copy tmp%0#0 0'
debug: Replaced foo_arc4_block@0.ops[23]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted bar_arc4_block@0.ops[2]: 'l-store-copy aggregate%length%0#0 0'
debug: Replaced bar_arc4_block@0.ops[4]: 'v-load aggregate%length%0#0' with 'l-load aggregate%length%0#0'
debug: Inserted bar_arc4_block@0.ops[6]: 'l-store-copy aggregate%as_bytes%0#0 0'
debug: Replaced bar_arc4_block@0.ops[8]: 'v-load aggregate%as_bytes%0#0' with 'l-load aggregate%as_bytes%0#0'
debug: Inserted bar_arc4_block@0.ops[10]: 'l-store-copy aggregate%length_uint16%0#0 0'
debug: Replaced bar_arc4_block@0.ops[12]: 'v-load aggregate%length_uint16%0#0' with 'l-load aggregate%length_uint16%0#0'
debug: Inserted bar_arc4_block@0.ops[15]: 'l-store-copy aggregate%encoded_value%0#0 0'
debug: Replaced bar_arc4_block@0.ops[17]: 'v-load aggregate%encoded_value%0#0' with 'l-load aggregate%encoded_value%0#0'
debug: Inserted bar_arc4_block@0.ops[18]: 'l-store-copy aggregate%as_Encoded(len+utf8[])%0#0 0'
debug: Replaced bar_arc4_block@0.ops[20]: 'v-load aggregate%as_Encoded(len+utf8[])%0#0' with 'l-load aggregate%as_Encoded(len+utf8[])%0#0'
debug: Inserted bar_arc4_block@0.ops[21]: 'l-store-copy tmp%0#0 0'
debug: Replaced bar_arc4_block@0.ops[23]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted is_in_tuple_1_block@0.ops[3]: 'l-store-copy tmp%0#0 0'
debug: Replaced is_in_tuple_1_block@0.ops[5]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted is_in_tuple_1_or_contd@1.ops[3]: 'l-store-copy tmp%1#0 0'
debug: Replaced is_in_tuple_1_or_contd@1.ops[5]: 'v-load tmp%1#0' with 'l-load tmp%1#0'
debug: Inserted is_in_tuple_2_block@0.ops[3]: 'l-store-copy tmp%0#0 0'
debug: Replaced is_in_tuple_2_block@0.ops[5]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted is_in_tuple_2_or_contd@1.ops[3]: 'l-store-copy tmp%1#0 0'
debug: Replaced is_in_tuple_2_or_contd@1.ops[5]: 'v-load tmp%1#0' with 'l-load tmp%1#0'
debug: Inserted is_in_tuple_3_block@0.ops[3]: 'l-store-copy tmp%0#0 0'
debug: Replaced is_in_tuple_3_block@0.ops[5]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted is_in_tuple_3_or_contd@1.ops[3]: 'l-store-copy tmp%1#0 0'
debug: Replaced is_in_tuple_3_or_contd@1.ops[5]: 'v-load tmp%1#0' with 'l-load tmp%1#0'
debug: Inserted test_string_types_block@0.ops[9]: 'l-store-copy tmp%2#0 0'
debug: Replaced test_string_types_block@0.ops[11]: 'v-load tmp%2#0' with 'l-load tmp%2#0'
debug: Inserted test_string_types_block@0.ops[3]: 'l-store-copy tmp%0#0 0'
debug: Replaced test_string_types_block@0.ops[8]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted test_string_types_block@0.ops[1]: 'l-store-copy awst_tmp%0#0 0'
debug: Replaced test_string_types_block@0.ops[8]: 'v-load awst_tmp%0#0' with 'l-load awst_tmp%0#0'
debug: Inserted test_string_types_or_contd@1.ops[3]: 'l-store-copy tmp%3#0 0'
debug: Replaced test_string_types_or_contd@1.ops[5]: 'v-load tmp%3#0' with 'l-load tmp%3#0'
debug: Inserted test_string_types_bool_merge@4.ops[11]: 'l-store-copy tmp%6#0 0'
debug: Replaced test_string_types_bool_merge@4.ops[13]: 'v-load tmp%6#0' with 'l-load tmp%6#0'
debug: Inserted test_string_types_bool_merge@4.ops[5]: 'l-store-copy tmp%4#0 0'
debug: Replaced test_string_types_bool_merge@4.ops[10]: 'v-load tmp%4#0' with 'l-load tmp%4#0'
debug: Inserted test_string_types_bool_merge@4.ops[3]: 'l-store-copy awst_tmp%1#0 0'
debug: Replaced test_string_types_bool_merge@4.ops[10]: 'v-load awst_tmp%1#0' with 'l-load awst_tmp%1#0'
debug: Inserted test_string_types_or_contd@5.ops[3]: 'l-store-copy tmp%7#0 0'
debug: Replaced test_string_types_or_contd@5.ops[5]: 'v-load tmp%7#0' with 'l-load tmp%7#0'
debug: Inserted test_string_types_bool_merge@8.ops[2]: 'l-store-copy tmp%8#0 0'
debug: Replaced test_string_types_bool_merge@8.ops[4]: 'v-load tmp%8#0' with 'l-load tmp%8#0'
debug: Inserted test_string_types_bool_merge@8.ops[20]: 'l-store-copy tmp%13#0 0'
debug: Replaced test_string_types_bool_merge@8.ops[22]: 'v-load tmp%13#0' with 'l-load tmp%13#0'
debug: Inserted test_string_types_bool_merge@8.ops[16]: 'l-store-copy awst_tmp%2#0 0'
debug: Replaced test_string_types_bool_merge@8.ops[19]: 'v-load awst_tmp%2#0' with 'l-load awst_tmp%2#0'
debug: Inserted test_string_types_bool_merge@8.ops[14]: 'l-store-copy tmp%12#0 0'
debug: Replaced test_string_types_bool_merge@8.ops[19]: 'v-load tmp%12#0' with 'l-load tmp%12#0'
debug: Inserted test_string_types_bool_merge@8.ops[7]: 'l-store-copy tmp%9#0 0'
debug: Replaced test_string_types_bool_merge@8.ops[13]: 'v-load tmp%9#0' with 'l-load tmp%9#0'
debug: Inserted test_string_types_or_contd@9.ops[3]: 'l-store-copy tmp%14#0 0'
debug: Replaced test_string_types_or_contd@9.ops[5]: 'v-load tmp%14#0' with 'l-load tmp%14#0'
debug: Inserted test_string_types_or_contd@10.ops[3]: 'l-store-copy tmp%15#0 0'
debug: Replaced test_string_types_or_contd@10.ops[5]: 'v-load tmp%15#0' with 'l-load tmp%15#0'
debug: Inserted test_string_types_bool_merge@13.ops[3]: 'l-store-copy awst_tmp%3#0 0'
debug: Replaced test_string_types_bool_merge@13.ops[5]: 'v-load awst_tmp%3#0' with 'l-load awst_tmp%3#0'
debug: Inserted test_string_types_bool_merge@13.ops[17]: 'l-store-copy tmp%20#0 0'
debug: Replaced test_string_types_bool_merge@13.ops[19]: 'v-load tmp%20#0' with 'l-load tmp%20#0'
debug: Inserted test_string_types_bool_merge@13.ops[9]: 'l-store-copy tmp%17#0 0'
debug: Replaced test_string_types_bool_merge@13.ops[16]: 'v-load tmp%17#0' with 'l-load tmp%17#0'
debug: Inserted test_string_types_bool_merge@13.ops[7]: 'l-store-copy tmp%16#0 0'
debug: Replaced test_string_types_bool_merge@13.ops[16]: 'v-load tmp%16#0' with 'l-load tmp%16#0'
debug: Inserted test_string_types_or_contd@14.ops[2]: 'l-store-copy tmp%21#0 0'
debug: Replaced test_string_types_or_contd@14.ops[4]: 'v-load tmp%21#0' with 'l-load tmp%21#0'
debug: Inserted test_string_types_or_contd@14.ops[7]: 'l-store-copy tmp%22#0 0'
debug: Replaced test_string_types_or_contd@14.ops[9]: 'v-load tmp%22#0' with 'l-load tmp%22#0'
debug: Inserted test_string_types_or_contd@15.ops[2]: 'l-store-copy tmp%23#0 0'
debug: Replaced test_string_types_or_contd@15.ops[4]: 'v-load tmp%23#0' with 'l-load tmp%23#0'
debug: Inserted test_string_types_or_contd@15.ops[7]: 'l-store-copy tmp%24#0 0'
debug: Replaced test_string_types_or_contd@15.ops[9]: 'v-load tmp%24#0' with 'l-load tmp%24#0'
debug: Inserted test_string_types_bool_merge@18.ops[14]: 'l-store-copy tmp%28#0 0'
debug: Replaced test_string_types_bool_merge@18.ops[16]: 'v-load tmp%28#0' with 'l-load tmp%28#0'
debug: Inserted test_string_types_bool_merge@18.ops[10]: 'l-store-copy awst_tmp%4#0 0'
debug: Replaced test_string_types_bool_merge@18.ops[13]: 'v-load awst_tmp%4#0' with 'l-load awst_tmp%4#0'
debug: Inserted test_string_types_bool_merge@18.ops[3]: 'l-store-copy tmp%25#0 0'
debug: Replaced test_string_types_bool_merge@18.ops[7]: 'v-load tmp%25#0' with 'l-load tmp%25#0'
debug: Inserted test_string_types_bool_merge@18.ops[9]: 'l-store-copy tmp%27#0 0'
debug: Replaced test_string_types_bool_merge@18.ops[14]: 'v-load tmp%27#0' with 'l-load tmp%27#0'
debug: Inserted test_string_types_or_contd@19.ops[3]: 'l-store-copy tmp%29#0 0'
debug: Replaced test_string_types_or_contd@19.ops[5]: 'v-load tmp%29#0' with 'l-load tmp%29#0'
debug: Inserted test_string_types_bool_merge@22.ops[2]: 'l-store-copy tmp%30#0 0'
debug: Replaced test_string_types_bool_merge@22.ops[4]: 'v-load tmp%30#0' with 'l-load tmp%30#0'
debug: Inserted test_string_types_bool_merge@22.ops[15]: 'l-store-copy tmp%33#0 0'
debug: Replaced test_string_types_bool_merge@22.ops[17]: 'v-load tmp%33#0' with 'l-load tmp%33#0'
debug: Inserted test_string_types_bool_merge@22.ops[9]: 'l-store-copy tmp%31#0 0'
debug: Replaced test_string_types_bool_merge@22.ops[14]: 'v-load tmp%31#0' with 'l-load tmp%31#0'
debug: Inserted test_string_types_bool_merge@22.ops[7]: 'l-store-copy awst_tmp%5#0 0'
debug: Replaced test_string_types_bool_merge@22.ops[14]: 'v-load awst_tmp%5#0' with 'l-load awst_tmp%5#0'
debug: Inserted test_string_types_or_contd@23.ops[2]: 'l-store-copy tmp%34#0 0'
debug: Replaced test_string_types_or_contd@23.ops[4]: 'v-load tmp%34#0' with 'l-load tmp%34#0'
debug: Inserted test_string_types_or_contd@23.ops[7]: 'l-store-copy tmp%35#0 0'
debug: Replaced test_string_types_or_contd@23.ops[9]: 'v-load tmp%35#0' with 'l-load tmp%35#0'
debug: Inserted test_string_types_bool_merge@26.ops[2]: 'l-store-copy tmp%36#0 0'
debug: Replaced test_string_types_bool_merge@26.ops[4]: 'v-load tmp%36#0' with 'l-load tmp%36#0'
debug: Inserted test_string_types_bool_merge@26.ops[22]: 'l-store-copy tmp%42#0 0'
debug: Replaced test_string_types_bool_merge@26.ops[24]: 'v-load tmp%42#0' with 'l-load tmp%42#0'
debug: Inserted test_string_types_bool_merge@26.ops[18]: 'l-store-copy awst_tmp%6#0 0'
debug: Replaced test_string_types_bool_merge@26.ops[21]: 'v-load awst_tmp%6#0' with 'l-load awst_tmp%6#0'
debug: Inserted test_string_types_bool_merge@26.ops[16]: 'l-store-copy tmp%41#0 0'
debug: Replaced test_string_types_bool_merge@26.ops[21]: 'v-load tmp%41#0' with 'l-load tmp%41#0'
debug: Inserted test_string_types_bool_merge@26.ops[7]: 'l-store-copy tmp%37#0 0'
debug: Replaced test_string_types_bool_merge@26.ops[15]: 'v-load tmp%37#0' with 'l-load tmp%37#0'
debug: Inserted test_string_types_or_contd@27.ops[3]: 'l-store-copy tmp%43#0 0'
debug: Replaced test_string_types_or_contd@27.ops[5]: 'v-load tmp%43#0' with 'l-load tmp%43#0'
debug: Inserted test_string_types_or_contd@28.ops[3]: 'l-store-copy tmp%44#0 0'
debug: Replaced test_string_types_or_contd@28.ops[5]: 'v-load tmp%44#0' with 'l-load tmp%44#0'
debug: Inserted test_string_types_bool_merge@31.ops[15]: 'l-store-copy tmp%49#0 0'
debug: Replaced test_string_types_bool_merge@31.ops[17]: 'v-load tmp%49#0' with 'l-load tmp%49#0'
debug: Inserted test_string_types_bool_merge@31.ops[5]: 'l-store-copy tmp%45#0 0'
debug: Replaced test_string_types_bool_merge@31.ops[14]: 'v-load tmp%45#0' with 'l-load tmp%45#0'
debug: Inserted test_string_types_bool_merge@31.ops[3]: 'l-store-copy awst_tmp%7#0 0'
debug: Replaced test_string_types_bool_merge@31.ops[14]: 'v-load awst_tmp%7#0' with 'l-load awst_tmp%7#0'
debug: Inserted test_string_types_or_contd@32.ops[2]: 'l-store-copy tmp%50#0 0'
debug: Replaced test_string_types_or_contd@32.ops[4]: 'v-load tmp%50#0' with 'l-load tmp%50#0'
debug: Inserted test_string_types_or_contd@32.ops[7]: 'l-store-copy tmp%51#0 0'
debug: Replaced test_string_types_or_contd@32.ops[9]: 'v-load tmp%51#0' with 'l-load tmp%51#0'
debug: Inserted test_string_types_or_contd@33.ops[2]: 'l-store-copy tmp%52#0 0'
debug: Replaced test_string_types_or_contd@33.ops[4]: 'v-load tmp%52#0' with 'l-load tmp%52#0'
debug: Inserted test_string_types_or_contd@33.ops[7]: 'l-store-copy tmp%53#0 0'
debug: Replaced test_string_types_or_contd@33.ops[9]: 'v-load tmp%53#0' with 'l-load tmp%53#0'
debug: Inserted test_string_types_bool_merge@36.ops[16]: 'l-store-copy tmp%58#0 0'
debug: Replaced test_string_types_bool_merge@36.ops[18]: 'v-load tmp%58#0' with 'l-load tmp%58#0'
debug: Inserted test_string_types_bool_merge@36.ops[12]: 'l-store-copy awst_tmp%8#0 0'
debug: Replaced test_string_types_bool_merge@36.ops[15]: 'v-load awst_tmp%8#0' with 'l-load awst_tmp%8#0'
debug: Inserted test_string_types_bool_merge@36.ops[10]: 'l-store-copy tmp%57#0 0'
debug: Replaced test_string_types_bool_merge@36.ops[15]: 'v-load tmp%57#0' with 'l-load tmp%57#0'
debug: Inserted test_string_types_bool_merge@36.ops[3]: 'l-store-copy tmp%54#0 0'
debug: Replaced test_string_types_bool_merge@36.ops[9]: 'v-load tmp%54#0' with 'l-load tmp%54#0'
debug: Inserted test_string_types_or_contd@37.ops[3]: 'l-store-copy tmp%59#0 0'
debug: Replaced test_string_types_or_contd@37.ops[5]: 'v-load tmp%59#0' with 'l-load tmp%59#0'
debug: Inserted test_string_types_bool_merge@40.ops[2]: 'l-store-copy tmp%60#0 0'
debug: Replaced test_string_types_bool_merge@40.ops[4]: 'v-load tmp%60#0' with 'l-load tmp%60#0'
debug: Inserted test_string_types_bool_merge@40.ops[17]: 'l-store-copy tmp%64#0 0'
debug: Replaced test_string_types_bool_merge@40.ops[19]: 'v-load tmp%64#0' with 'l-load tmp%64#0'
debug: Inserted test_string_types_bool_merge@40.ops[9]: 'l-store-copy tmp%61#0 0'
debug: Replaced test_string_types_bool_merge@40.ops[16]: 'v-load tmp%61#0' with 'l-load tmp%61#0'
debug: Inserted test_string_types_bool_merge@40.ops[7]: 'l-store-copy awst_tmp%9#0 0'
debug: Replaced test_string_types_bool_merge@40.ops[16]: 'v-load awst_tmp%9#0' with 'l-load awst_tmp%9#0'
debug: Inserted test_string_types_or_contd@41.ops[2]: 'l-store-copy tmp%65#0 0'
debug: Replaced test_string_types_or_contd@41.ops[4]: 'v-load tmp%65#0' with 'l-load tmp%65#0'
debug: Inserted test_string_types_or_contd@41.ops[7]: 'l-store-copy tmp%66#0 0'
debug: Replaced test_string_types_or_contd@41.ops[9]: 'v-load tmp%66#0' with 'l-load tmp%66#0'
debug: Inserted test_string_types_bool_merge@44.ops[2]: 'l-store-copy tmp%67#0 0'
debug: Replaced test_string_types_bool_merge@44.ops[4]: 'v-load tmp%67#0' with 'l-load tmp%67#0'
debug: Inserted test_string_types_bool_merge@44.ops[13]: 'l-store-copy tmp%70#0 0'
debug: Replaced test_string_types_bool_merge@44.ops[15]: 'v-load tmp%70#0' with 'l-load tmp%70#0'
debug: Inserted test_string_types_bool_merge@44.ops[17]: 'l-store-copy tmp%71#0 0'
debug: Replaced test_string_types_bool_merge@44.ops[19]: 'v-load tmp%71#0' with 'l-load tmp%71#0'
debug: Inserted test_numeric_types_block@0.ops[9]: 'l-store-copy tmp%2#0 0'
debug: Replaced test_numeric_types_block@0.ops[11]: 'v-load tmp%2#0' with 'l-load tmp%2#0'
debug: Inserted test_numeric_types_block@0.ops[3]: 'l-store-copy tmp%0#0 0'
debug: Replaced test_numeric_types_block@0.ops[8]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted test_numeric_types_block@0.ops[1]: 'l-store-copy awst_tmp%0#0 0'
debug: Replaced test_numeric_types_block@0.ops[8]: 'v-load awst_tmp%0#0' with 'l-load awst_tmp%0#0'
debug: Inserted test_numeric_types_or_contd@1.ops[3]: 'l-store-copy tmp%3#0 0'
debug: Replaced test_numeric_types_or_contd@1.ops[5]: 'v-load tmp%3#0' with 'l-load tmp%3#0'
debug: Inserted test_numeric_types_bool_merge@4.ops[9]: 'l-store-copy tmp%5#0 0'
debug: Replaced test_numeric_types_bool_merge@4.ops[11]: 'v-load tmp%5#0' with 'l-load tmp%5#0'
debug: Inserted test_numeric_types_bool_merge@4.ops[3]: 'l-store-copy awst_tmp%1#0 0'
debug: Replaced test_numeric_types_bool_merge@4.ops[7]: 'v-load awst_tmp%1#0' with 'l-load awst_tmp%1#0'
debug: Inserted test_numeric_types_or_contd@5.ops[3]: 'l-store-copy tmp%6#0 0'
debug: Replaced test_numeric_types_or_contd@5.ops[5]: 'v-load tmp%6#0' with 'l-load tmp%6#0'
debug: Inserted test_numeric_types_bool_merge@8.ops[2]: 'l-store-copy tmp%7#0 0'
debug: Replaced test_numeric_types_bool_merge@8.ops[4]: 'v-load tmp%7#0' with 'l-load tmp%7#0'
debug: Inserted test_numeric_types_bool_merge@8.ops[15]: 'l-store-copy tmp%10#0 0'
debug: Replaced test_numeric_types_bool_merge@8.ops[17]: 'v-load tmp%10#0' with 'l-load tmp%10#0'
debug: Inserted test_numeric_types_bool_merge@8.ops[9]: 'l-store-copy tmp%8#0 0'
debug: Replaced test_numeric_types_bool_merge@8.ops[14]: 'v-load tmp%8#0' with 'l-load tmp%8#0'
debug: Inserted test_numeric_types_bool_merge@8.ops[7]: 'l-store-copy awst_tmp%2#0 0'
debug: Replaced test_numeric_types_bool_merge@8.ops[14]: 'v-load awst_tmp%2#0' with 'l-load awst_tmp%2#0'
debug: Inserted test_numeric_types_or_contd@9.ops[3]: 'l-store-copy tmp%11#0 0'
debug: Replaced test_numeric_types_or_contd@9.ops[5]: 'v-load tmp%11#0' with 'l-load tmp%11#0'
debug: Inserted test_numeric_types_or_contd@10.ops[8]: 'l-store-copy tmp%13#0 0'
debug: Replaced test_numeric_types_or_contd@10.ops[10]: 'v-load tmp%13#0' with 'l-load tmp%13#0'
debug: Inserted test_numeric_types_or_contd@10.ops[4]: 'l-store-copy tmp%12#0 0'
debug: Replaced test_numeric_types_or_contd@10.ops[7]: 'v-load tmp%12#0' with 'l-load tmp%12#0'
debug: Inserted test_numeric_types_or_contd@10.ops[1]: 'l-store-copy reinterpret_biguint%0#0 0'
debug: Replaced test_numeric_types_or_contd@10.ops[7]: 'v-load reinterpret_biguint%0#0' with 'l-load reinterpret_biguint%0#0'
debug: Inserted test_numeric_types_bool_merge@13.ops[9]: 'l-store-copy awst_tmp%3#0 0'
debug: Replaced test_numeric_types_bool_merge@13.ops[11]: 'v-load awst_tmp%3#0' with 'l-load awst_tmp%3#0'
debug: Inserted test_numeric_types_bool_merge@13.ops[17]: 'l-store-copy tmp%17#0 0'
debug: Replaced test_numeric_types_bool_merge@13.ops[19]: 'v-load tmp%17#0' with 'l-load tmp%17#0'
debug: Inserted test_numeric_types_bool_merge@13.ops[13]: 'l-store-copy tmp%16#0 0'
debug: Replaced test_numeric_types_bool_merge@13.ops[16]: 'v-load tmp%16#0' with 'l-load tmp%16#0'
debug: Inserted test_numeric_types_bool_merge@13.ops[3]: 'l-store-copy tmp%14#0 0'
debug: Replaced test_numeric_types_bool_merge@13.ops[7]: 'v-load tmp%14#0' with 'l-load tmp%14#0'
debug: Inserted test_numeric_types_bool_merge@13.ops[8]: 'l-store-copy reinterpret_biguint%1#0 0'
debug: Replaced test_numeric_types_bool_merge@13.ops[17]: 'v-load reinterpret_biguint%1#0' with 'l-load reinterpret_biguint%1#0'
debug: Inserted test_numeric_types_or_contd@14.ops[3]: 'l-store-copy tmp%18#0 0'
debug: Replaced test_numeric_types_or_contd@14.ops[5]: 'v-load tmp%18#0' with 'l-load tmp%18#0'
debug: Inserted test_numeric_types_or_contd@15.ops[8]: 'l-store-copy tmp%20#0 0'
debug: Replaced test_numeric_types_or_contd@15.ops[10]: 'v-load tmp%20#0' with 'l-load tmp%20#0'
debug: Inserted test_numeric_types_or_contd@15.ops[4]: 'l-store-copy tmp%19#0 0'
debug: Replaced test_numeric_types_or_contd@15.ops[7]: 'v-load tmp%19#0' with 'l-load tmp%19#0'
debug: Inserted test_numeric_types_or_contd@15.ops[1]: 'l-store-copy reinterpret_biguint%2#0 0'
debug: Replaced test_numeric_types_or_contd@15.ops[7]: 'v-load reinterpret_biguint%2#0' with 'l-load reinterpret_biguint%2#0'
debug: Inserted test_numeric_types_bool_merge@18.ops[14]: 'l-store-copy tmp%24#0 0'
debug: Replaced test_numeric_types_bool_merge@18.ops[16]: 'v-load tmp%24#0' with 'l-load tmp%24#0'
debug: Inserted test_numeric_types_bool_merge@18.ops[10]: 'l-store-copy tmp%23#0 0'
debug: Replaced test_numeric_types_bool_merge@18.ops[13]: 'v-load tmp%23#0' with 'l-load tmp%23#0'
debug: Inserted test_numeric_types_bool_merge@18.ops[3]: 'l-store-copy tmp%21#0 0'
debug: Replaced test_numeric_types_bool_merge@18.ops[7]: 'v-load tmp%21#0' with 'l-load tmp%21#0'
debug: Inserted test_numeric_types_bool_merge@18.ops[8]: 'l-store-copy reinterpret_biguint%3#0 0'
debug: Replaced test_numeric_types_bool_merge@18.ops[14]: 'v-load reinterpret_biguint%3#0' with 'l-load reinterpret_biguint%3#0'
debug: Inserted test_numeric_types_or_contd@19.ops[3]: 'l-store-copy tmp%25#0 0'
debug: Replaced test_numeric_types_or_contd@19.ops[5]: 'v-load tmp%25#0' with 'l-load tmp%25#0'
debug: Inserted test_numeric_types_or_contd@20.ops[8]: 'l-store-copy tmp%27#0 0'
debug: Replaced test_numeric_types_or_contd@20.ops[10]: 'v-load tmp%27#0' with 'l-load tmp%27#0'
debug: Inserted test_numeric_types_or_contd@20.ops[4]: 'l-store-copy tmp%26#0 0'
debug: Replaced test_numeric_types_or_contd@20.ops[7]: 'v-load tmp%26#0' with 'l-load tmp%26#0'
debug: Inserted test_numeric_types_or_contd@20.ops[1]: 'l-store-copy reinterpret_biguint%4#0 0'
debug: Replaced test_numeric_types_or_contd@20.ops[7]: 'v-load reinterpret_biguint%4#0' with 'l-load reinterpret_biguint%4#0'
debug: Inserted test_numeric_types_bool_merge@23.ops[3]: 'l-store-copy awst_tmp%4#0 0'
debug: Replaced test_numeric_types_bool_merge@23.ops[5]: 'v-load awst_tmp%4#0' with 'l-load awst_tmp%4#0'
debug: Inserted test_numeric_types_bool_merge@23.ops[16]: 'l-store-copy tmp%30#0 0'
debug: Replaced test_numeric_types_bool_merge@23.ops[18]: 'v-load tmp%30#0' with 'l-load tmp%30#0'
debug: Inserted test_numeric_types_bool_merge@23.ops[12]: 'l-store-copy reinterpret_biguint%6#0 0'
debug: Replaced test_numeric_types_bool_merge@23.ops[15]: 'v-load reinterpret_biguint%6#0' with 'l-load reinterpret_biguint%6#0'
debug: Inserted test_numeric_types_bool_merge@23.ops[8]: 'l-store-copy tmp%28#0 0'
debug: Replaced test_numeric_types_bool_merge@23.ops[12]: 'v-load tmp%28#0' with 'l-load tmp%28#0'
debug: Inserted test_numeric_types_bool_merge@23.ops[6]: 'l-store-copy reinterpret_biguint%5#0 0'
debug: Replaced test_numeric_types_bool_merge@23.ops[16]: 'v-load reinterpret_biguint%5#0' with 'l-load reinterpret_biguint%5#0'
debug: Inserted test_numeric_types_or_contd@24.ops[8]: 'l-store-copy tmp%32#0 0'
debug: Replaced test_numeric_types_or_contd@24.ops[10]: 'v-load tmp%32#0' with 'l-load tmp%32#0'
debug: Inserted test_numeric_types_or_contd@24.ops[4]: 'l-store-copy tmp%31#0 0'
debug: Replaced test_numeric_types_or_contd@24.ops[7]: 'v-load tmp%31#0' with 'l-load tmp%31#0'
debug: Inserted test_numeric_types_or_contd@24.ops[1]: 'l-store-copy reinterpret_biguint%7#0 0'
debug: Replaced test_numeric_types_or_contd@24.ops[7]: 'v-load reinterpret_biguint%7#0' with 'l-load reinterpret_biguint%7#0'
debug: Inserted test_numeric_types_or_contd@25.ops[7]: 'l-store-copy tmp%33#0 0'
debug: Replaced test_numeric_types_or_contd@25.ops[9]: 'v-load tmp%33#0' with 'l-load tmp%33#0'
debug: Inserted test_numeric_types_or_contd@25.ops[3]: 'l-store-copy reinterpret_biguint%9#0 0'
debug: Replaced test_numeric_types_or_contd@25.ops[6]: 'v-load reinterpret_biguint%9#0' with 'l-load reinterpret_biguint%9#0'
debug: Inserted test_numeric_types_or_contd@25.ops[1]: 'l-store-copy reinterpret_biguint%8#0 0'
debug: Replaced test_numeric_types_or_contd@25.ops[6]: 'v-load reinterpret_biguint%8#0' with 'l-load reinterpret_biguint%8#0'
debug: Inserted test_numeric_types_bool_merge@28.ops[3]: 'l-store-copy awst_tmp%5#0 0'
debug: Replaced test_numeric_types_bool_merge@28.ops[5]: 'v-load awst_tmp%5#0' with 'l-load awst_tmp%5#0'
debug: Inserted test_numeric_types_bool_merge@28.ops[8]: 'l-store-copy tmp%34#0 0'
debug: Replaced test_numeric_types_bool_merge@28.ops[10]: 'v-load tmp%34#0' with 'l-load tmp%34#0'
debug: Inserted test_numeric_types_bool_merge@28.ops[15]: 'l-store-copy tmp%35#0 0'
debug: Replaced test_numeric_types_bool_merge@28.ops[17]: 'v-load tmp%35#0' with 'l-load tmp%35#0'
debug: Inserted test_numeric_types_bool_merge@28.ops[11]: 'l-store-copy reinterpret_biguint%11#0 0'
debug: Replaced test_numeric_types_bool_merge@28.ops[14]: 'v-load reinterpret_biguint%11#0' with 'l-load reinterpret_biguint%11#0'
debug: Inserted test_numeric_types_bool_merge@28.ops[6]: 'l-store-copy reinterpret_biguint%10#0 0'
debug: Replaced test_numeric_types_bool_merge@28.ops[14]: 'v-load reinterpret_biguint%10#0' with 'l-load reinterpret_biguint%10#0'
debug: Inserted test_numeric_types_or_contd@29.ops[8]: 'l-store-copy tmp%37#0 0'
debug: Replaced test_numeric_types_or_contd@29.ops[10]: 'v-load tmp%37#0' with 'l-load tmp%37#0'
debug: Inserted test_numeric_types_or_contd@29.ops[4]: 'l-store-copy tmp%36#0 0'
debug: Replaced test_numeric_types_or_contd@29.ops[7]: 'v-load tmp%36#0' with 'l-load tmp%36#0'
debug: Inserted test_numeric_types_or_contd@29.ops[1]: 'l-store-copy reinterpret_biguint%12#0 0'
debug: Replaced test_numeric_types_or_contd@29.ops[7]: 'v-load reinterpret_biguint%12#0' with 'l-load reinterpret_biguint%12#0'
debug: Inserted test_numeric_types_or_contd@30.ops[8]: 'l-store-copy tmp%39#0 0'
debug: Replaced test_numeric_types_or_contd@30.ops[10]: 'v-load tmp%39#0' with 'l-load tmp%39#0'
debug: Inserted test_numeric_types_or_contd@30.ops[4]: 'l-store-copy tmp%38#0 0'
debug: Replaced test_numeric_types_or_contd@30.ops[7]: 'v-load tmp%38#0' with 'l-load tmp%38#0'
debug: Inserted test_numeric_types_or_contd@30.ops[1]: 'l-store-copy reinterpret_biguint%13#0 0'
debug: Replaced test_numeric_types_or_contd@30.ops[7]: 'v-load reinterpret_biguint%13#0' with 'l-load reinterpret_biguint%13#0'
debug: Inserted test_numeric_types_bool_merge@33.ops[3]: 'l-store-copy awst_tmp%6#0 0'
debug: Replaced test_numeric_types_bool_merge@33.ops[5]: 'v-load awst_tmp%6#0' with 'l-load awst_tmp%6#0'
debug: Inserted test_numeric_types_bool_merge@33.ops[13]: 'l-store-copy tmp%41#0 0'
debug: Replaced test_numeric_types_bool_merge@33.ops[15]: 'v-load tmp%41#0' with 'l-load tmp%41#0'
debug: Inserted test_numeric_types_bool_merge@33.ops[9]: 'l-store-copy tmp%40#0 0'
debug: Replaced test_numeric_types_bool_merge@33.ops[12]: 'v-load tmp%40#0' with 'l-load tmp%40#0'
debug: Inserted test_numeric_types_bool_merge@33.ops[6]: 'l-store-copy reinterpret_biguint%14#0 0'
debug: Replaced test_numeric_types_bool_merge@33.ops[12]: 'v-load reinterpret_biguint%14#0' with 'l-load reinterpret_biguint%14#0'
debug: Inserted test_numeric_types_or_contd@34.ops[8]: 'l-store-copy tmp%43#0 0'
debug: Replaced test_numeric_types_or_contd@34.ops[10]: 'v-load tmp%43#0' with 'l-load tmp%43#0'
debug: Inserted test_numeric_types_or_contd@34.ops[4]: 'l-store-copy tmp%42#0 0'
debug: Replaced test_numeric_types_or_contd@34.ops[7]: 'v-load tmp%42#0' with 'l-load tmp%42#0'
debug: Inserted test_numeric_types_or_contd@34.ops[1]: 'l-store-copy reinterpret_biguint%15#0 0'
debug: Replaced test_numeric_types_or_contd@34.ops[7]: 'v-load reinterpret_biguint%15#0' with 'l-load reinterpret_biguint%15#0'
debug: Inserted test_numeric_types_bool_merge@37.ops[10]: 'l-store-copy tmp%45#0 0'
debug: Replaced test_numeric_types_bool_merge@37.ops[12]: 'v-load tmp%45#0' with 'l-load tmp%45#0'
debug: Inserted test_numeric_types_bool_merge@37.ops[6]: 'l-store-copy tmp%44#0 0'
debug: Replaced test_numeric_types_bool_merge@37.ops[9]: 'v-load tmp%44#0' with 'l-load tmp%44#0'
debug: Inserted test_numeric_types_bool_merge@37.ops[3]: 'l-store-copy awst_tmp%7#0 0'
debug: Replaced test_numeric_types_bool_merge@37.ops[9]: 'v-load awst_tmp%7#0' with 'l-load awst_tmp%7#0'
debug: Inserted test_numeric_types_or_contd@38.ops[6]: 'l-store-copy tmp%47#0 0'
debug: Replaced test_numeric_types_or_contd@38.ops[8]: 'v-load tmp%47#0' with 'l-load tmp%47#0'
debug: Inserted test_numeric_types_or_contd@38.ops[2]: 'l-store-copy tmp%46#0 0'
debug: Replaced test_numeric_types_or_contd@38.ops[5]: 'v-load tmp%46#0' with 'l-load tmp%46#0'
debug: Inserted test_numeric_types_bool_merge@41.ops[9]: 'l-store-copy tmp%49#0 0'
debug: Replaced test_numeric_types_bool_merge@41.ops[11]: 'v-load tmp%49#0' with 'l-load tmp%49#0'
debug: Inserted test_numeric_types_bool_merge@41.ops[3]: 'l-store-copy awst_tmp%8#0 0'
debug: Replaced test_numeric_types_bool_merge@41.ops[7]: 'v-load awst_tmp%8#0' with 'l-load awst_tmp%8#0'
debug: Inserted test_numeric_types_or_contd@42.ops[8]: 'l-store-copy tmp%51#0 0'
debug: Replaced test_numeric_types_or_contd@42.ops[10]: 'v-load tmp%51#0' with 'l-load tmp%51#0'
debug: Inserted test_numeric_types_or_contd@42.ops[4]: 'l-store-copy tmp%50#0 0'
debug: Replaced test_numeric_types_or_contd@42.ops[7]: 'v-load tmp%50#0' with 'l-load tmp%50#0'
debug: Inserted test_numeric_types_or_contd@42.ops[1]: 'l-store-copy reinterpret_biguint%16#0 0'
debug: Replaced test_numeric_types_or_contd@42.ops[7]: 'v-load reinterpret_biguint%16#0' with 'l-load reinterpret_biguint%16#0'
debug: Inserted test_numeric_types_bool_merge@45.ops[2]: 'l-store-copy tmp%52#0 0'
debug: Replaced test_numeric_types_bool_merge@45.ops[4]: 'v-load tmp%52#0' with 'l-load tmp%52#0'
debug: Inserted test_numeric_types_bool_merge@45.ops[13]: 'l-store-copy tmp%54#0 0'
debug: Replaced test_numeric_types_bool_merge@45.ops[15]: 'v-load tmp%54#0' with 'l-load tmp%54#0'
debug: Inserted test_numeric_types_bool_merge@45.ops[7]: 'l-store-copy awst_tmp%9#0 0'
debug: Replaced test_numeric_types_bool_merge@45.ops[11]: 'v-load awst_tmp%9#0' with 'l-load awst_tmp%9#0'
debug: Inserted test_numeric_types_or_contd@46.ops[8]: 'l-store-copy tmp%56#0 0'
debug: Replaced test_numeric_types_or_contd@46.ops[10]: 'v-load tmp%56#0' with 'l-load tmp%56#0'
debug: Inserted test_numeric_types_or_contd@46.ops[4]: 'l-store-copy tmp%55#0 0'
debug: Replaced test_numeric_types_or_contd@46.ops[7]: 'v-load tmp%55#0' with 'l-load tmp%55#0'
debug: Inserted test_numeric_types_or_contd@46.ops[1]: 'l-store-copy reinterpret_biguint%17#0 0'
debug: Replaced test_numeric_types_or_contd@46.ops[7]: 'v-load reinterpret_biguint%17#0' with 'l-load reinterpret_biguint%17#0'
debug: Inserted test_numeric_types_bool_merge@49.ops[2]: 'l-store-copy tmp%57#0 0'
debug: Replaced test_numeric_types_bool_merge@49.ops[4]: 'v-load tmp%57#0' with 'l-load tmp%57#0'
debug: Inserted test_numeric_types_bool_merge@49.ops[13]: 'l-store-copy tmp%59#0 0'
debug: Replaced test_numeric_types_bool_merge@49.ops[15]: 'v-load tmp%59#0' with 'l-load tmp%59#0'
debug: Inserted test_numeric_types_bool_merge@49.ops[7]: 'l-store-copy awst_tmp%10#0 0'
debug: Replaced test_numeric_types_bool_merge@49.ops[11]: 'v-load awst_tmp%10#0' with 'l-load awst_tmp%10#0'
debug: Inserted test_numeric_types_or_contd@50.ops[8]: 'l-store-copy tmp%61#0 0'
debug: Replaced test_numeric_types_or_contd@50.ops[10]: 'v-load tmp%61#0' with 'l-load tmp%61#0'
debug: Inserted test_numeric_types_or_contd@50.ops[4]: 'l-store-copy tmp%60#0 0'
debug: Replaced test_numeric_types_or_contd@50.ops[7]: 'v-load tmp%60#0' with 'l-load tmp%60#0'
debug: Inserted test_numeric_types_or_contd@50.ops[1]: 'l-store-copy reinterpret_biguint%18#0 0'
debug: Replaced test_numeric_types_or_contd@50.ops[7]: 'v-load reinterpret_biguint%18#0' with 'l-load reinterpret_biguint%18#0'
debug: Inserted test_numeric_types_bool_merge@53.ops[2]: 'l-store-copy tmp%62#0 0'
debug: Replaced test_numeric_types_bool_merge@53.ops[4]: 'v-load tmp%62#0' with 'l-load tmp%62#0'
debug: Inserted test_numeric_types_bool_merge@53.ops[7]: 'l-store-copy tmp%63#0 0'
debug: Replaced test_numeric_types_bool_merge@53.ops[9]: 'v-load tmp%63#0' with 'l-load tmp%63#0'
debug: Inserted test_numeric_types_bool_merge@53.ops[17]: 'l-store-copy tmp%65#0 0'
debug: Replaced test_numeric_types_bool_merge@53.ops[19]: 'v-load tmp%65#0' with 'l-load tmp%65#0'
debug: Inserted test_numeric_types_bool_merge@53.ops[13]: 'l-store-copy tmp%64#0 0'
debug: Replaced test_numeric_types_bool_merge@53.ops[16]: 'v-load tmp%64#0' with 'l-load tmp%64#0'
debug: Inserted test_numeric_types_bool_merge@53.ops[10]: 'l-store-copy reinterpret_biguint%19#0 0'
debug: Replaced test_numeric_types_bool_merge@53.ops[16]: 'v-load reinterpret_biguint%19#0' with 'l-load reinterpret_biguint%19#0'
debug: Inserted test_numeric_types_or_contd@54.ops[3]: 'l-store-copy tmp%66#0 0'
debug: Replaced test_numeric_types_or_contd@54.ops[5]: 'v-load tmp%66#0' with 'l-load tmp%66#0'
debug: Inserted test_numeric_types_bool_merge@57.ops[2]: 'l-store-copy tmp%67#0 0'
debug: Replaced test_numeric_types_bool_merge@57.ops[4]: 'v-load tmp%67#0' with 'l-load tmp%67#0'
debug: Inserted test_numeric_types_bool_merge@57.ops[7]: 'l-store-copy awst_tmp%11#0 0'
debug: Replaced test_numeric_types_bool_merge@57.ops[9]: 'v-load awst_tmp%11#0' with 'l-load awst_tmp%11#0'
debug: Inserted test_numeric_types_bool_merge@57.ops[12]: 'l-store-copy tmp%68#0 0'
debug: Replaced test_numeric_types_bool_merge@57.ops[14]: 'v-load tmp%68#0' with 'l-load tmp%68#0'
debug: Inserted test_numeric_types_bool_merge@57.ops[19]: 'l-store-copy tmp%69#0 0'
debug: Replaced test_numeric_types_bool_merge@57.ops[21]: 'v-load tmp%69#0' with 'l-load tmp%69#0'
debug: Inserted test_numeric_types_bool_merge@57.ops[15]: 'l-store-copy reinterpret_biguint%21#0 0'
debug: Replaced test_numeric_types_bool_merge@57.ops[18]: 'v-load reinterpret_biguint%21#0' with 'l-load reinterpret_biguint%21#0'
debug: Inserted test_numeric_types_bool_merge@57.ops[10]: 'l-store-copy reinterpret_biguint%20#0 0'
debug: Replaced test_numeric_types_bool_merge@57.ops[18]: 'v-load reinterpret_biguint%20#0' with 'l-load reinterpret_biguint%20#0'
debug: Inserted test_numeric_types_or_contd@58.ops[8]: 'l-store-copy tmp%71#0 0'
debug: Replaced test_numeric_types_or_contd@58.ops[10]: 'v-load tmp%71#0' with 'l-load tmp%71#0'
debug: Inserted test_numeric_types_or_contd@58.ops[4]: 'l-store-copy tmp%70#0 0'
debug: Replaced test_numeric_types_or_contd@58.ops[7]: 'v-load tmp%70#0' with 'l-load tmp%70#0'
debug: Inserted test_numeric_types_or_contd@58.ops[1]: 'l-store-copy reinterpret_biguint%22#0 0'
debug: Replaced test_numeric_types_or_contd@58.ops[7]: 'v-load reinterpret_biguint%22#0' with 'l-load reinterpret_biguint%22#0'
debug: Inserted test_numeric_types_bool_merge@61.ops[2]: 'l-store-copy tmp%72#0 0'
debug: Replaced test_numeric_types_bool_merge@61.ops[4]: 'v-load tmp%72#0' with 'l-load tmp%72#0'
debug: Inserted test_numeric_types_bool_merge@61.ops[7]: 'l-store-copy awst_tmp%12#0 0'
debug: Replaced test_numeric_types_bool_merge@61.ops[9]: 'v-load awst_tmp%12#0' with 'l-load awst_tmp%12#0'
debug: Inserted test_numeric_types_bool_merge@61.ops[12]: 'l-store-copy tmp%73#0 0'
debug: Replaced test_numeric_types_bool_merge@61.ops[14]: 'v-load tmp%73#0' with 'l-load tmp%73#0'
debug: Inserted test_numeric_types_bool_merge@61.ops[19]: 'l-store-copy tmp%74#0 0'
debug: Replaced test_numeric_types_bool_merge@61.ops[21]: 'v-load tmp%74#0' with 'l-load tmp%74#0'
debug: Inserted test_numeric_types_bool_merge@61.ops[15]: 'l-store-copy reinterpret_biguint%24#0 0'
debug: Replaced test_numeric_types_bool_merge@61.ops[18]: 'v-load reinterpret_biguint%24#0' with 'l-load reinterpret_biguint%24#0'
debug: Inserted test_numeric_types_bool_merge@61.ops[10]: 'l-store-copy reinterpret_biguint%23#0 0'
debug: Replaced test_numeric_types_bool_merge@61.ops[18]: 'v-load reinterpret_biguint%23#0' with 'l-load reinterpret_biguint%23#0'
debug: Inserted test_numeric_types_or_contd@62.ops[8]: 'l-store-copy tmp%76#0 0'
debug: Replaced test_numeric_types_or_contd@62.ops[10]: 'v-load tmp%76#0' with 'l-load tmp%76#0'
debug: Inserted test_numeric_types_or_contd@62.ops[4]: 'l-store-copy tmp%75#0 0'
debug: Replaced test_numeric_types_or_contd@62.ops[7]: 'v-load tmp%75#0' with 'l-load tmp%75#0'
debug: Inserted test_numeric_types_or_contd@62.ops[1]: 'l-store-copy reinterpret_biguint%25#0 0'
debug: Replaced test_numeric_types_or_contd@62.ops[7]: 'v-load reinterpret_biguint%25#0' with 'l-load reinterpret_biguint%25#0'
debug: Inserted test_numeric_types_bool_merge@65.ops[2]: 'l-store-copy tmp%77#0 0'
debug: Replaced test_numeric_types_bool_merge@65.ops[4]: 'v-load tmp%77#0' with 'l-load tmp%77#0'
debug: Inserted test_numeric_types_bool_merge@65.ops[7]: 'l-store-copy awst_tmp%13#0 0'
debug: Replaced test_numeric_types_bool_merge@65.ops[9]: 'v-load awst_tmp%13#0' with 'l-load awst_tmp%13#0'
debug: Inserted test_numeric_types_bool_merge@65.ops[17]: 'l-store-copy tmp%79#0 0'
debug: Replaced test_numeric_types_bool_merge@65.ops[19]: 'v-load tmp%79#0' with 'l-load tmp%79#0'
debug: Inserted test_numeric_types_bool_merge@65.ops[13]: 'l-store-copy tmp%78#0 0'
debug: Replaced test_numeric_types_bool_merge@65.ops[16]: 'v-load tmp%78#0' with 'l-load tmp%78#0'
debug: Inserted test_numeric_types_bool_merge@65.ops[10]: 'l-store-copy reinterpret_biguint%26#0 0'
debug: Replaced test_numeric_types_bool_merge@65.ops[16]: 'v-load reinterpret_biguint%26#0' with 'l-load reinterpret_biguint%26#0'
debug: Inserted test_numeric_types_or_contd@66.ops[8]: 'l-store-copy tmp%81#0 0'
debug: Replaced test_numeric_types_or_contd@66.ops[10]: 'v-load tmp%81#0' with 'l-load tmp%81#0'
debug: Inserted test_numeric_types_or_contd@66.ops[4]: 'l-store-copy tmp%80#0 0'
debug: Replaced test_numeric_types_or_contd@66.ops[7]: 'v-load tmp%80#0' with 'l-load tmp%80#0'
debug: Inserted test_numeric_types_or_contd@66.ops[1]: 'l-store-copy reinterpret_biguint%27#0 0'
debug: Replaced test_numeric_types_or_contd@66.ops[7]: 'v-load reinterpret_biguint%27#0' with 'l-load reinterpret_biguint%27#0'
debug: Inserted test_numeric_types_bool_merge@69.ops[2]: 'l-store-copy tmp%82#0 0'
debug: Replaced test_numeric_types_bool_merge@69.ops[4]: 'v-load tmp%82#0' with 'l-load tmp%82#0'
debug: Inserted test_numeric_types_bool_merge@69.ops[14]: 'l-store-copy tmp%84#0 0'
debug: Replaced test_numeric_types_bool_merge@69.ops[16]: 'v-load tmp%84#0' with 'l-load tmp%84#0'
debug: Inserted test_numeric_types_bool_merge@69.ops[10]: 'l-store-copy tmp%83#0 0'
debug: Replaced test_numeric_types_bool_merge@69.ops[13]: 'v-load tmp%83#0' with 'l-load tmp%83#0'
debug: Inserted test_numeric_types_bool_merge@69.ops[7]: 'l-store-copy awst_tmp%14#0 0'
debug: Replaced test_numeric_types_bool_merge@69.ops[13]: 'v-load awst_tmp%14#0' with 'l-load awst_tmp%14#0'
debug: Inserted test_numeric_types_or_contd@70.ops[6]: 'l-store-copy tmp%86#0 0'
debug: Replaced test_numeric_types_or_contd@70.ops[8]: 'v-load tmp%86#0' with 'l-load tmp%86#0'
debug: Inserted test_numeric_types_or_contd@70.ops[2]: 'l-store-copy tmp%85#0 0'
debug: Replaced test_numeric_types_or_contd@70.ops[5]: 'v-load tmp%85#0' with 'l-load tmp%85#0'
debug: Inserted test_numeric_types_bool_merge@73.ops[2]: 'l-store-copy tmp%87#0 0'
debug: Replaced test_numeric_types_bool_merge@73.ops[4]: 'v-load tmp%87#0' with 'l-load tmp%87#0'
debug: Inserted test_numeric_types_bool_merge@73.ops[17]: 'l-store-copy tmp%91#0 0'
debug: Replaced test_numeric_types_bool_merge@73.ops[19]: 'v-load tmp%91#0' with 'l-load tmp%91#0'
debug: Inserted test_numeric_types_bool_merge@73.ops[11]: 'l-store-copy tmp%89#0 0'
debug: Replaced test_numeric_types_bool_merge@73.ops[16]: 'v-load tmp%89#0' with 'l-load tmp%89#0'
debug: Inserted test_numeric_types_bool_merge@73.ops[7]: 'l-store-copy awst_tmp%15#0 0'
debug: Replaced test_numeric_types_bool_merge@73.ops[16]: 'v-load awst_tmp%15#0' with 'l-load awst_tmp%15#0'
debug: Inserted test_numeric_types_or_contd@74.ops[3]: 'l-store-copy tmp%92#0 0'
debug: Replaced test_numeric_types_or_contd@74.ops[5]: 'v-load tmp%92#0' with 'l-load tmp%92#0'
debug: Inserted test_numeric_types_or_contd@75.ops[8]: 'l-store-copy tmp%94#0 0'
debug: Replaced test_numeric_types_or_contd@75.ops[10]: 'v-load tmp%94#0' with 'l-load tmp%94#0'
debug: Inserted test_numeric_types_or_contd@75.ops[4]: 'l-store-copy tmp%93#0 0'
debug: Replaced test_numeric_types_or_contd@75.ops[7]: 'v-load tmp%93#0' with 'l-load tmp%93#0'
debug: Inserted test_numeric_types_or_contd@75.ops[1]: 'l-store-copy reinterpret_biguint%28#0 0'
debug: Replaced test_numeric_types_or_contd@75.ops[7]: 'v-load reinterpret_biguint%28#0' with 'l-load reinterpret_biguint%28#0'
debug: Inserted test_numeric_types_bool_merge@78.ops[11]: 'l-store-copy awst_tmp%16#0 0'
debug: Replaced test_numeric_types_bool_merge@78.ops[13]: 'v-load awst_tmp%16#0' with 'l-load awst_tmp%16#0'
debug: Inserted test_numeric_types_bool_merge@78.ops[19]: 'l-store-copy tmp%99#0 0'
debug: Replaced test_numeric_types_bool_merge@78.ops[21]: 'v-load tmp%99#0' with 'l-load tmp%99#0'
debug: Inserted test_numeric_types_bool_merge@78.ops[15]: 'l-store-copy tmp%98#0 0'
debug: Replaced test_numeric_types_bool_merge@78.ops[18]: 'v-load tmp%98#0' with 'l-load tmp%98#0'
debug: Inserted test_numeric_types_bool_merge@78.ops[3]: 'l-store-copy tmp%95#0 0'
debug: Replaced test_numeric_types_bool_merge@78.ops[9]: 'v-load tmp%95#0' with 'l-load tmp%95#0'
debug: Inserted test_numeric_types_bool_merge@78.ops[10]: 'l-store-copy reinterpret_biguint%29#0 0'
debug: Replaced test_numeric_types_bool_merge@78.ops[19]: 'v-load reinterpret_biguint%29#0' with 'l-load reinterpret_biguint%29#0'
debug: Inserted test_numeric_types_or_contd@79.ops[8]: 'l-store-copy tmp%101#0 0'
debug: Replaced test_numeric_types_or_contd@79.ops[10]: 'v-load tmp%101#0' with 'l-load tmp%101#0'
debug: Inserted test_numeric_types_or_contd@79.ops[4]: 'l-store-copy tmp%100#0 0'
debug: Replaced test_numeric_types_or_contd@79.ops[7]: 'v-load tmp%100#0' with 'l-load tmp%100#0'
debug: Inserted test_numeric_types_or_contd@79.ops[1]: 'l-store-copy reinterpret_biguint%30#0 0'
debug: Replaced test_numeric_types_or_contd@79.ops[7]: 'v-load reinterpret_biguint%30#0' with 'l-load reinterpret_biguint%30#0'
debug: Inserted test_numeric_types_bool_merge@82.ops[9]: 'l-store-copy tmp%104#0 0'
debug: Replaced test_numeric_types_bool_merge@82.ops[11]: 'v-load tmp%104#0' with 'l-load tmp%104#0'
debug: Inserted test_numeric_types_or_contd@83.ops[8]: 'l-store-copy tmp%106#0 0'
debug: Replaced test_numeric_types_or_contd@83.ops[10]: 'v-load tmp%106#0' with 'l-load tmp%106#0'
debug: Inserted test_numeric_types_or_contd@83.ops[4]: 'l-store-copy tmp%105#0 0'
debug: Replaced test_numeric_types_or_contd@83.ops[7]: 'v-load tmp%105#0' with 'l-load tmp%105#0'
debug: Inserted test_numeric_types_or_contd@83.ops[1]: 'l-store-copy reinterpret_biguint%31#0 0'
debug: Replaced test_numeric_types_or_contd@83.ops[7]: 'v-load reinterpret_biguint%31#0' with 'l-load reinterpret_biguint%31#0'
debug: Inserted test_numeric_types_bool_merge@86.ops[3]: 'l-store-copy awst_tmp%17#0 0'
debug: Replaced test_numeric_types_bool_merge@86.ops[5]: 'v-load awst_tmp%17#0' with 'l-load awst_tmp%17#0'
debug: Inserted test_numeric_types_bool_merge@86.ops[17]: 'l-store-copy tmp%110#0 0'
debug: Replaced test_numeric_types_bool_merge@86.ops[19]: 'v-load tmp%110#0' with 'l-load tmp%110#0'
debug: Inserted test_numeric_types_bool_merge@86.ops[13]: 'l-store-copy tmp%109#0 0'
debug: Replaced test_numeric_types_bool_merge@86.ops[16]: 'v-load tmp%109#0' with 'l-load tmp%109#0'
debug: Inserted test_numeric_types_bool_merge@86.ops[6]: 'l-store-copy reinterpret_biguint%32#0 0'
debug: Replaced test_numeric_types_bool_merge@86.ops[16]: 'v-load reinterpret_biguint%32#0' with 'l-load reinterpret_biguint%32#0'
debug: Inserted test_numeric_types_or_contd@87.ops[7]: 'l-store-copy tmp%111#0 0'
debug: Replaced test_numeric_types_or_contd@87.ops[9]: 'v-load tmp%111#0' with 'l-load tmp%111#0'
debug: Inserted test_numeric_types_or_contd@87.ops[3]: 'l-store-copy reinterpret_biguint%34#0 0'
debug: Replaced test_numeric_types_or_contd@87.ops[6]: 'v-load reinterpret_biguint%34#0' with 'l-load reinterpret_biguint%34#0'
debug: Inserted test_numeric_types_or_contd@87.ops[1]: 'l-store-copy reinterpret_biguint%33#0 0'
debug: Replaced test_numeric_types_or_contd@87.ops[6]: 'v-load reinterpret_biguint%33#0' with 'l-load reinterpret_biguint%33#0'
debug: Inserted test_numeric_types_bool_merge@90.ops[3]: 'l-store-copy awst_tmp%18#0 0'
debug: Replaced test_numeric_types_bool_merge@90.ops[5]: 'v-load awst_tmp%18#0' with 'l-load awst_tmp%18#0'
debug: Inserted test_numeric_types_bool_merge@90.ops[15]: 'l-store-copy tmp%114#0 0'
debug: Replaced test_numeric_types_bool_merge@90.ops[17]: 'v-load tmp%114#0' with 'l-load tmp%114#0'
debug: Inserted test_numeric_types_bool_merge@90.ops[11]: 'l-store-copy tmp%113#0 0'
debug: Replaced test_numeric_types_bool_merge@90.ops[14]: 'v-load tmp%113#0' with 'l-load tmp%113#0'
debug: Inserted test_numeric_types_bool_merge@90.ops[6]: 'l-store-copy reinterpret_biguint%35#0 0'
debug: Replaced test_numeric_types_bool_merge@90.ops[14]: 'v-load reinterpret_biguint%35#0' with 'l-load reinterpret_biguint%35#0'
debug: Inserted test_numeric_types_or_contd@91.ops[8]: 'l-store-copy tmp%116#0 0'
debug: Replaced test_numeric_types_or_contd@91.ops[10]: 'v-load tmp%116#0' with 'l-load tmp%116#0'
debug: Inserted test_numeric_types_or_contd@91.ops[4]: 'l-store-copy tmp%115#0 0'
debug: Replaced test_numeric_types_or_contd@91.ops[7]: 'v-load tmp%115#0' with 'l-load tmp%115#0'
debug: Inserted test_numeric_types_or_contd@91.ops[1]: 'l-store-copy reinterpret_biguint%36#0 0'
debug: Replaced test_numeric_types_or_contd@91.ops[7]: 'v-load reinterpret_biguint%36#0' with 'l-load reinterpret_biguint%36#0'
debug: Inserted test_numeric_types_bool_merge@94.ops[3]: 'l-store-copy awst_tmp%19#0 0'
debug: Replaced test_numeric_types_bool_merge@94.ops[5]: 'v-load awst_tmp%19#0' with 'l-load awst_tmp%19#0'
debug: Inserted test_numeric_types_bool_merge@94.ops[15]: 'l-store-copy tmp%119#0 0'
debug: Replaced test_numeric_types_bool_merge@94.ops[17]: 'v-load tmp%119#0' with 'l-load tmp%119#0'
debug: Inserted test_numeric_types_bool_merge@94.ops[11]: 'l-store-copy tmp%118#0 0'
debug: Replaced test_numeric_types_bool_merge@94.ops[14]: 'v-load tmp%118#0' with 'l-load tmp%118#0'
debug: Inserted test_numeric_types_bool_merge@94.ops[6]: 'l-store-copy reinterpret_biguint%37#0 0'
debug: Replaced test_numeric_types_bool_merge@94.ops[14]: 'v-load reinterpret_biguint%37#0' with 'l-load reinterpret_biguint%37#0'
debug: Inserted test_numeric_types_or_contd@95.ops[8]: 'l-store-copy tmp%121#0 0'
debug: Replaced test_numeric_types_or_contd@95.ops[10]: 'v-load tmp%121#0' with 'l-load tmp%121#0'
debug: Inserted test_numeric_types_or_contd@95.ops[4]: 'l-store-copy tmp%120#0 0'
debug: Replaced test_numeric_types_or_contd@95.ops[7]: 'v-load tmp%120#0' with 'l-load tmp%120#0'
debug: Inserted test_numeric_types_or_contd@95.ops[1]: 'l-store-copy reinterpret_biguint%38#0 0'
debug: Replaced test_numeric_types_or_contd@95.ops[7]: 'v-load reinterpret_biguint%38#0' with 'l-load reinterpret_biguint%38#0'
debug: Inserted test_numeric_types_bool_merge@98.ops[11]: 'l-store-copy tmp%124#0 0'
debug: Replaced test_numeric_types_bool_merge@98.ops[13]: 'v-load tmp%124#0' with 'l-load tmp%124#0'
debug: Inserted test_numeric_types_bool_merge@98.ops[3]: 'l-store-copy awst_tmp%20#0 0'
debug: Replaced test_numeric_types_bool_merge@98.ops[9]: 'v-load awst_tmp%20#0' with 'l-load awst_tmp%20#0'
debug: Inserted test_numeric_types_or_contd@99.ops[8]: 'l-store-copy tmp%126#0 0'
debug: Replaced test_numeric_types_or_contd@99.ops[10]: 'v-load tmp%126#0' with 'l-load tmp%126#0'
debug: Inserted test_numeric_types_or_contd@99.ops[4]: 'l-store-copy tmp%125#0 0'
debug: Replaced test_numeric_types_or_contd@99.ops[7]: 'v-load tmp%125#0' with 'l-load tmp%125#0'
debug: Inserted test_numeric_types_or_contd@99.ops[1]: 'l-store-copy reinterpret_biguint%39#0 0'
debug: Replaced test_numeric_types_or_contd@99.ops[7]: 'v-load reinterpret_biguint%39#0' with 'l-load reinterpret_biguint%39#0'
debug: Inserted test_numeric_types_bool_merge@102.ops[2]: 'l-store-copy tmp%127#0 0'
debug: Replaced test_numeric_types_bool_merge@102.ops[4]: 'v-load tmp%127#0' with 'l-load tmp%127#0'
debug: Inserted test_numeric_types_bool_merge@102.ops[9]: 'l-store-copy tmp%129#0 0'
debug: Replaced test_numeric_types_bool_merge@102.ops[11]: 'v-load tmp%129#0' with 'l-load tmp%129#0'
debug: Inserted test_numeric_types_bool_merge@102.ops[14]: 'l-store-copy awst_tmp%21#0 0'
debug: Replaced test_numeric_types_bool_merge@102.ops[16]: 'v-load awst_tmp%21#0' with 'l-load awst_tmp%21#0'
debug: Inserted test_numeric_types_bool_merge@102.ops[22]: 'l-store-copy tmp%131#0 0'
debug: Replaced test_numeric_types_bool_merge@102.ops[24]: 'v-load tmp%131#0' with 'l-load tmp%131#0'
debug: Inserted test_numeric_types_bool_merge@102.ops[26]: 'l-store-copy tmp%132#0 0'
debug: Replaced test_numeric_types_bool_merge@102.ops[28]: 'v-load tmp%132#0' with 'l-load tmp%132#0'
debug: Inserted test_numeric_types_bool_merge@102.ops[35]: 'l-store-copy tmp%134#0 0'
debug: Replaced test_numeric_types_bool_merge@102.ops[37]: 'v-load tmp%134#0' with 'l-load tmp%134#0'
debug: Inserted test_numeric_types_bool_merge@102.ops[39]: 'l-store-copy tmp%135#0 0'
debug: Replaced test_numeric_types_bool_merge@102.ops[41]: 'v-load tmp%135#0' with 'l-load tmp%135#0'
debug: Inserted test_numeric_types_bool_merge@102.ops[44]: 'l-store-copy awst_tmp%22#0 0'
debug: Replaced test_numeric_types_bool_merge@102.ops[46]: 'v-load awst_tmp%22#0' with 'l-load awst_tmp%22#0'
debug: Inserted test_numeric_types_bool_merge@102.ops[56]: 'l-store-copy tmp%138#0 0'
debug: Replaced test_numeric_types_bool_merge@102.ops[58]: 'v-load tmp%138#0' with 'l-load tmp%138#0'
debug: Inserted test_numeric_types_bool_merge@102.ops[60]: 'l-store-copy tmp%139#0 0'
debug: Replaced test_numeric_types_bool_merge@102.ops[62]: 'v-load tmp%139#0' with 'l-load tmp%139#0'
debug: Inserted test_numeric_types_bool_merge@102.ops[65]: 'l-store-copy awst_tmp%23#0 0'
debug: Replaced test_numeric_types_bool_merge@102.ops[67]: 'v-load awst_tmp%23#0' with 'l-load awst_tmp%23#0'
debug: Inserted test_numeric_types_bool_merge@102.ops[77]: 'l-store-copy tmp%142#0 0'
debug: Replaced test_numeric_types_bool_merge@102.ops[79]: 'v-load tmp%142#0' with 'l-load tmp%142#0'
debug: Inserted test_numeric_types_bool_merge@102.ops[81]: 'l-store-copy tmp%143#0 0'
debug: Replaced test_numeric_types_bool_merge@102.ops[83]: 'v-load tmp%143#0' with 'l-load tmp%143#0'
debug: Inserted test_numeric_types_bool_merge@102.ops[86]: 'l-store-copy awst_tmp%24#0 0'
debug: Replaced test_numeric_types_bool_merge@102.ops[88]: 'v-load awst_tmp%24#0' with 'l-load awst_tmp%24#0'
debug: Inserted test_numeric_types_bool_merge@102.ops[98]: 'l-store-copy tmp%146#0 0'
debug: Replaced test_numeric_types_bool_merge@102.ops[100]: 'v-load tmp%146#0' with 'l-load tmp%146#0'
debug: Inserted test_numeric_types_bool_merge@102.ops[102]: 'l-store-copy tmp%147#0 0'
debug: Replaced test_numeric_types_bool_merge@102.ops[104]: 'v-load tmp%147#0' with 'l-load tmp%147#0'
debug: Inserted test_numeric_types_bool_merge@102.ops[112]: 'l-store-copy tmp%149#0 0'
debug: Replaced test_numeric_types_bool_merge@102.ops[114]: 'v-load tmp%149#0' with 'l-load tmp%149#0'
debug: Inserted test_numeric_types_bool_merge@102.ops[18]: 'l-store-copy tmp%130#0 0'
debug: Replaced test_numeric_types_bool_merge@102.ops[21]: 'v-load tmp%130#0' with 'l-load tmp%130#0'
debug: Inserted test_numeric_types_bool_merge@102.ops[53]: 'l-store-copy tmp%137#0 0'
debug: Replaced test_numeric_types_bool_merge@102.ops[56]: 'v-load tmp%137#0' with 'l-load tmp%137#0'
debug: Inserted test_numeric_types_bool_merge@102.ops[75]: 'l-store-copy tmp%141#0 0'
debug: Replaced test_numeric_types_bool_merge@102.ops[78]: 'v-load tmp%141#0' with 'l-load tmp%141#0'
debug: Inserted test_numeric_types_bool_merge@102.ops[97]: 'l-store-copy tmp%145#0 0'
debug: Replaced test_numeric_types_bool_merge@102.ops[100]: 'v-load tmp%145#0' with 'l-load tmp%145#0'
debug: Inserted test_numeric_types_bool_merge@102.ops[112]: 'l-store-copy tmp%148#0 0'
debug: Replaced test_numeric_types_bool_merge@102.ops[115]: 'v-load tmp%148#0' with 'l-load tmp%148#0'
debug: Inserted test_numeric_types_bool_merge@102.ops[12]: 'l-store-copy reinterpret_biguint%40#0 0'
debug: Replaced test_numeric_types_bool_merge@102.ops[21]: 'v-load reinterpret_biguint%40#0' with 'l-load reinterpret_biguint%40#0'
debug: Inserted test_numeric_types_bool_merge@102.ops[49]: 'l-store-copy reinterpret_biguint%41#0 0'
debug: Replaced test_numeric_types_bool_merge@102.ops[57]: 'v-load reinterpret_biguint%41#0' with 'l-load reinterpret_biguint%41#0'
debug: Inserted test_numeric_types_bool_merge@102.ops[72]: 'l-store-copy reinterpret_biguint%42#0 0'
debug: Replaced test_numeric_types_bool_merge@102.ops[80]: 'v-load reinterpret_biguint%42#0' with 'l-load reinterpret_biguint%42#0'
debug: Inserted test_numeric_types_bool_merge@102.ops[95]: 'l-store-copy reinterpret_biguint%43#0 0'
debug: Replaced test_numeric_types_bool_merge@102.ops[103]: 'v-load reinterpret_biguint%43#0' with 'l-load reinterpret_biguint%43#0'
debug: Inserted test_numeric_types_or_contd@103.ops[6]: 'l-store-copy tmp%151#0 0'
debug: Replaced test_numeric_types_or_contd@103.ops[8]: 'v-load tmp%151#0' with 'l-load tmp%151#0'
debug: Inserted test_numeric_types_or_contd@103.ops[2]: 'l-store-copy tmp%150#0 0'
debug: Replaced test_numeric_types_or_contd@103.ops[5]: 'v-load tmp%150#0' with 'l-load tmp%150#0'
debug: Inserted test_numeric_types_bool_merge@106.ops[2]: 'l-store-copy tmp%152#0 0'
debug: Replaced test_numeric_types_bool_merge@106.ops[4]: 'v-load tmp%152#0' with 'l-load tmp%152#0'
debug: test_cases.contains.contract.MyContract.is_in_tuple_1 f-stack entry: ['or_result%0#0']
debug: test_cases.contains.contract.MyContract.is_in_tuple_1 f-stack on first store: []
debug: test_cases.contains.contract.MyContract.is_in_tuple_2 f-stack entry: ['or_result%0#0']
debug: test_cases.contains.contract.MyContract.is_in_tuple_2 f-stack on first store: []
debug: test_cases.contains.contract.MyContract.is_in_tuple_3 f-stack entry: ['or_result%0#0']
debug: test_cases.contains.contract.MyContract.is_in_tuple_3 f-stack on first store: []
debug: test_cases.contains.contract.MyContract.test_string_types f-stack entry: ['awst_tmp%1#0', 'awst_tmp%2#0', 'awst_tmp%3#0', 'awst_tmp%4#0', 'awst_tmp%5#0', 'awst_tmp%6#0', 'awst_tmp%7#0', 'awst_tmp%8#0', 'awst_tmp%9#0', 'tmp%10#0', 'tmp%11#0', 'tmp%18#0', 'tmp%19#0', 'tmp%26#0', 'tmp%32#0', 'tmp%38#0', 'tmp%39#0', 'tmp%46#0', 'tmp%47#0', 'tmp%5#0', 'tmp%55#0', 'tmp%62#0', 'tmp%68#0', 'tmp%69#0', 'or_result%0#0', 'or_result%1#0', 'or_result%2#0', 'or_result%3#0', 'or_result%4#0', 'or_result%5#0', 'or_result%6#0', 'or_result%7#0', 'or_result%8#0', 'or_result%9#0', 'tmp%40#0', 'tmp%48#0', 'tmp%56#0', 'tmp%63#0']
debug: test_cases.contains.contract.MyContract.test_string_types f-stack on first store: ['awst_tmp%0#0', 'tmp%1#0']
debug: test_cases.contains.contract.MyContract.test_numeric_types f-stack entry: ['awst_tmp%11#0', 'awst_tmp%12#0', 'awst_tmp%13#0', 'awst_tmp%14#0', 'awst_tmp%17#0', 'awst_tmp%18#0', 'awst_tmp%19#0', 'awst_tmp%4#0', 'awst_tmp%5#0', 'awst_tmp%6#0', 'awst_tmp%7#0', 'tmp%102#0', 'tmp%103#0', 'tmp%107#0', 'tmp%108#0', 'tmp%112#0', 'tmp%117#0', 'tmp%122#0', 'tmp%123#0', 'tmp%128#0', 'tmp%133#0', 'tmp%136#0', 'tmp%140#0', 'tmp%144#0', 'tmp%15#0', 'tmp%22#0', 'tmp%29#0', 'tmp%48#0', 'tmp%53#0', 'tmp%58#0', 'tmp%88#0', 'tmp%9#0', 'tmp%90#0', 'tmp%96#0', 'tmp%97#0', 'awst_tmp%1#0', 'awst_tmp%10#0', 'awst_tmp%15#0', 'awst_tmp%16#0', 'awst_tmp%2#0', 'awst_tmp%20#0', 'awst_tmp%3#0', 'awst_tmp%8#0', 'awst_tmp%9#0', 'or_result%0#0', 'or_result%1#0', 'or_result%10#0', 'or_result%11#0', 'or_result%12#0', 'or_result%13#0', 'or_result%14#0', 'or_result%15#0', 'or_result%16#0', 'or_result%17#0', 'or_result%18#0', 'or_result%19#0', 'or_result%2#0', 'or_result%20#0', 'or_result%21#0', 'or_result%22#0', 'or_result%23#0', 'or_result%24#0', 'or_result%3#0', 'or_result%4#0', 'or_result%5#0', 'or_result%6#0', 'or_result%7#0', 'or_result%8#0', 'or_result%9#0', 'tmp%4#0']
debug: test_cases.contains.contract.MyContract.test_numeric_types f-stack on first store: ['awst_tmp%0#0', 'tmp%1#0']
contains/contract.py:7 debug: optimizing TEAL subroutine ops test_cases.contains.contract.MyContract.approval_program() -> uint64:
contains/contract.py:137 debug: optimizing TEAL subroutine ops test_cases.contains.contract.one_u64() -> uint64:
contains/contract.py:142 debug: optimizing TEAL subroutine ops test_cases.contains.contract.one_arc4u64() -> bytes:
contains/contract.py:147 debug: optimizing TEAL subroutine ops test_cases.contains.contract.two_u64() -> uint64:
contains/contract.py:152 debug: optimizing TEAL subroutine ops test_cases.contains.contract.two_u8() -> bytes:
contains/contract.py:157 debug: optimizing TEAL subroutine ops test_cases.contains.contract.three_u512() -> bytes:
contains/contract.py:162 debug: optimizing TEAL subroutine ops test_cases.contains.contract.four_biguint() -> bytes:
contains/contract.py:167 debug: optimizing TEAL subroutine ops test_cases.contains.contract.foo_string() -> bytes:
contains/contract.py:172 debug: optimizing TEAL subroutine ops test_cases.contains.contract.foo_arc4() -> bytes:
contains/contract.py:177 debug: optimizing TEAL subroutine ops test_cases.contains.contract.bar_string() -> bytes:
contains/contract.py:182 debug: optimizing TEAL subroutine ops test_cases.contains.contract.bar_arc4() -> bytes:
contains/contract.py:187 debug: optimizing TEAL subroutine ops test_cases.contains.contract.baz_string() -> bytes:
contains/contract.py:42 debug: optimizing TEAL subroutine ops test_cases.contains.contract.MyContract.is_in_tuple_1(x: uint64, y.0: uint64, y.1: uint64, y.2: bytes) -> uint64:
contains/contract.py:46 debug: optimizing TEAL subroutine ops test_cases.contains.contract.MyContract.is_in_tuple_2(x: bytes, y.0: bytes, y.1: uint64, y.2: bytes) -> uint64:
contains/contract.py:50 debug: optimizing TEAL subroutine ops test_cases.contains.contract.MyContract.is_in_tuple_3(x: bytes, y.0: bytes, y.1: bytes) -> uint64:
contains/contract.py:54 debug: optimizing TEAL subroutine ops test_cases.contains.contract.MyContract.test_string_types() -> void:
contains/contract.py:86 debug: optimizing TEAL subroutine ops test_cases.contains.contract.MyContract.test_numeric_types() -> void:
contains/contract.py:39 debug: optimizing TEAL subroutine ops test_cases.contains.contract.MyContract.clear_state_program() -> uint64:
info: Writing contains/out_unoptimized/MyContract.approval.teal
info: Writing contains/out_unoptimized/MyContract.clear.teal
info: Writing contains/out_unoptimized/MyContract.approval.bin
info: Writing contains/out_unoptimized/MyContract.clear.bin
info: Writing contains/out_unoptimized/MyContract.approval.stats.txt
info: Writing contains/out_unoptimized/MyContract.clear.stats.txt
info: Writing contains/out_unoptimized/MyContract.approval.puya.map
info: Writing contains/out_unoptimized/MyContract.clear.puya.map