// Op                         //                                                 Op Description                                        Stack (out)                                                  X stack                                                                                              Source code                                                                                          Source line

#pragma version 10

// test_cases.contains.contract.MyContract.approval_program() -> uint64:
main_block@0:
    int 10                    //                                                                                                       10                                                                                                                                                                UInt64(10)                                                                                           contains/contract.py:10
    int 10                    //                                                                                                       10,10                                                                                                                                                             UInt64(10)                                                                                           contains/contract.py:10
    int 15                    //                                                                                                       10,10,15                                                                                                                                                          UInt64(15)                                                                                           contains/contract.py:8
    byte "five"               //                                                                                                       10,10,15,"five"                                                                                                                                                   b"five"                                                                                              contains/contract.py:10
    callsub is_in_tuple_1     //                                                                                                       {is_in_tuple_1}                                                                                                                                                   self.is_in_tuple_1(UInt64(10), (UInt64(10), not_ten, Bytes(b"five")))                                contains/contract.py:10
    //                        virtual: store one_true#0 to l-stack (no copy)     one_true#0                                                                                                         one_true = self.is_in_tuple_1(UInt64(10), (UInt64(10), not_ten, Bytes(b"five")))                     contains/contract.py:10
    int 5                     //                                                                                                       one_true#0,5                                                                                                                                                      UInt64(5)                                                                                            contains/contract.py:11
    int 10                    //                                                                                                       one_true#0,5,10                                                                                                                                                   UInt64(10)                                                                                           contains/contract.py:11
    int 15                    //                                                                                                       one_true#0,5,10,15                                                                                                                                                UInt64(15)                                                                                           contains/contract.py:8
    byte "five"               //                                                                                                       one_true#0,5,10,15,"five"                                                                                                                                         b"five"                                                                                              contains/contract.py:11
    callsub is_in_tuple_1     //                                                                                                       one_true#0,{is_in_tuple_1}                                                                                                                                        self.is_in_tuple_1(UInt64(5), (UInt64(10), not_ten, Bytes(b"five")))                                 contains/contract.py:11
    //                        virtual: store one_false#0 to l-stack (no copy)    one_true#0,one_false#0                                                                                             one_false = self.is_in_tuple_1(UInt64(5), (UInt64(10), not_ten, Bytes(b"five")))                     contains/contract.py:11
    uncover 1                 //                                                 load one_true#0 from l-stack (no copy)                one_false#0,one_true#0                                                                                                                                            assert one_true, "Should be true"                                                                    contains/contract.py:12
    assert // Should be true  //                                                                                                       one_false#0                                                                                                                                                       assert one_true, "Should be true"                                                                    contains/contract.py:12
    //                        virtual: load one_false#0 from l-stack (no copy)   one_false#0                                                                                                        not one_false                                                                                        contains/contract.py:13
    !                         //                                                                                                       {!}                                                                                                                                                               not one_false                                                                                        contains/contract.py:13
    //                        virtual: store tmp%0#0 to l-stack (no copy)        tmp%0#0                                                                                                            not one_false                                                                                        contains/contract.py:13
    //                        virtual: load tmp%0#0 from l-stack (no copy)       tmp%0#0                                                                                                            assert not one_false, "Should be false"                                                              contains/contract.py:13
    assert // Should be false //                                                                                                                                                                                                                                                                         assert not one_false, "Should be false"                                                              contains/contract.py:13
    byte "hello"              //                                                                                                       "hello"                                                                                                                                                           b"hello"                                                                                             contains/contract.py:16
    byte "hello"              //                                                                                                       "hello","hello"                                                                                                                                                   b"hello"                                                                                             contains/contract.py:16
    int 0                     //                                                                                                       "hello","hello",0                                                                                                                                                 UInt64(0)                                                                                            contains/contract.py:16
    byte "bonjour"            //                                                                                                       "hello","hello",0,"bonjour"                                                                                                                                       b"bonjour"                                                                                           contains/contract.py:16
    callsub is_in_tuple_2     //                                                                                                       {is_in_tuple_2}                                                                                                                                                   self.is_in_tuple_2(\nBytes(b"hello"), (Bytes(b"hello"), UInt64(0), Bytes(b"bonjour"))\n)             contains/contract.py:15-17
    //                        virtual: store two_true#0 to l-stack (no copy)     two_true#0                                                                                                         two_true = self.is_in_tuple_2(\nBytes(b"hello"), (Bytes(b"hello"), UInt64(0), Bytes(b"bonjour"))\n)  contains/contract.py:15-17
    byte "ciao"               //                                                                                                       two_true#0,"ciao"                                                                                                                                                 b"ciao"                                                                                              contains/contract.py:19
    byte "hello"              //                                                                                                       two_true#0,"ciao","hello"                                                                                                                                         b"hello"                                                                                             contains/contract.py:19
    int 0                     //                                                                                                       two_true#0,"ciao","hello",0                                                                                                                                       UInt64(0)                                                                                            contains/contract.py:19
    byte "bonjour"            //                                                                                                       two_true#0,"ciao","hello",0,"bonjour"                                                                                                                             b"bonjour"                                                                                           contains/contract.py:19
    callsub is_in_tuple_2     //                                                                                                       two_true#0,{is_in_tuple_2}                                                                                                                                        self.is_in_tuple_2(\nBytes(b"ciao"), (Bytes(b"hello"), UInt64(0), Bytes(b"bonjour"))\n)              contains/contract.py:18-20
    //                        virtual: store two_false#0 to l-stack (no copy)    two_true#0,two_false#0                                                                                             two_false = self.is_in_tuple_2(\nBytes(b"ciao"), (Bytes(b"hello"), UInt64(0), Bytes(b"bonjour"))\n)  contains/contract.py:18-20
    uncover 1                 //                                                 load two_true#0 from l-stack (no copy)                two_false#0,two_true#0                                                                                                                                            assert two_true, "Should be true"                                                                    contains/contract.py:21
    assert // Should be true  //                                                                                                       two_false#0                                                                                                                                                       assert two_true, "Should be true"                                                                    contains/contract.py:21
    //                        virtual: load two_false#0 from l-stack (no copy)   two_false#0                                                                                                        not two_false                                                                                        contains/contract.py:22
    !                         //                                                                                                       {!}                                                                                                                                                               not two_false                                                                                        contains/contract.py:22
    //                        virtual: store tmp%1#0 to l-stack (no copy)        tmp%1#0                                                                                                            not two_false                                                                                        contains/contract.py:22
    //                        virtual: load tmp%1#0 from l-stack (no copy)       tmp%1#0                                                                                                            assert not two_false, "Should be false"                                                              contains/contract.py:22
    assert // Should be false //                                                                                                                                                                                                                                                                         assert not two_false, "Should be false"                                                              contains/contract.py:22
    byte 0x1d65e22bcbbf       //                                                                                                       0x1d65e22bcbbf                                                                                                                                                    BigUInt(32323423423423)                                                                              contains/contract.py:25
    byte 0x1d65e22bcbbf       //                                                                                                       0x1d65e22bcbbf,0x1d65e22bcbbf                                                                                                                                     BigUInt(32323423423423)                                                                              contains/contract.py:25
    byte 0x07acf5cae41e       //                                                                                                       0x1d65e22bcbbf,0x1d65e22bcbbf,0x07acf5cae41e                                                                                                                      BigUInt(8439439483934)                                                                               contains/contract.py:25
    callsub is_in_tuple_3     //                                                                                                       {is_in_tuple_3}                                                                                                                                                   self.is_in_tuple_3(\nBigUInt(32323423423423), (BigUInt(32323423423423), BigUInt(8439439483934))\n)   contains/contract.py:24-26
    //                        virtual: store three_true#0 to l-stack (no copy)   three_true#0                                                                                                       three_true = self.is_in_tuple_3(\nBigUInt(32323423423423), (BigUInt(32323423423423), BigUInt(8439... contains/contract.py:24-26
    byte 0x3acbc457977e       //                                                                                                       three_true#0,0x3acbc457977e                                                                                                                                       BigUInt(32323423423423) + BigUInt(32323423423423)                                                    contains/contract.py:28
    byte 0x1d65e22bcbbf       //                                                                                                       three_true#0,0x3acbc457977e,0x1d65e22bcbbf                                                                                                                        BigUInt(32323423423423)                                                                              contains/contract.py:29
    byte 0x07acf5cae41e       //                                                                                                       three_true#0,0x3acbc457977e,0x1d65e22bcbbf,0x07acf5cae41e                                                                                                         BigUInt(8439439483934)                                                                               contains/contract.py:29
    callsub is_in_tuple_3     //                                                                                                       three_true#0,{is_in_tuple_3}                                                                                                                                      self.is_in_tuple_3(\nBigUInt(32323423423423) + BigUInt(32323423423423),\n(BigUInt(32323423423423)... contains/contract.py:27-30
    //                        virtual: store three_false#0 to l-stack (no copy)  three_true#0,three_false#0                                                                                         three_false = self.is_in_tuple_3(\nBigUInt(32323423423423) + BigUInt(32323423423423),\n(BigUInt(3... contains/contract.py:27-30
    uncover 1                 //                                                 load three_true#0 from l-stack (no copy)              three_false#0,three_true#0                                                                                                                                        assert three_true, "Should be true"                                                                  contains/contract.py:31
    assert // Should be true  //                                                                                                       three_false#0                                                                                                                                                     assert three_true, "Should be true"                                                                  contains/contract.py:31
    //                        virtual: load three_false#0 from l-stack (no copy) three_false#0                                                                                                      not three_false                                                                                      contains/contract.py:32
    !                         //                                                                                                       {!}                                                                                                                                                               not three_false                                                                                      contains/contract.py:32
    //                        virtual: store tmp%3#0 to l-stack (no copy)        tmp%3#0                                                                                                            not three_false                                                                                      contains/contract.py:32
    //                        virtual: load tmp%3#0 from l-stack (no copy)       tmp%3#0                                                                                                            assert not three_false, "Should be false"                                                            contains/contract.py:32
    assert // Should be false //                                                                                                                                                                                                                                                                         assert not three_false, "Should be false"                                                            contains/contract.py:32
    int 1                     //                                                                                                       1                                                                                                                                                                 UInt64(1)                                                                                            contains/contract.py:34
    return                    //                                                                                                                                                                                                                                                                         return UInt64(1)                                                                                     contains/contract.py:34


// test_cases.contains.contract.MyContract.is_in_tuple_1(x: uint64, y.0: uint64, y.1: uint64, y.2: bytes) -> uint64:
is_in_tuple_1:
    proto 4 1                 //                                                                                                       (𝕡) x#0,y.0#0,y.1#0,y.2#0 |                                                                                                                                       @subroutine\ndef is_in_tuple_1(self, x: UInt64, y: tuple[UInt64, UInt64, Bytes]) -> bool:            contains/contract.py:39-40

is_in_tuple_1_block@0:
    frame_dig -4              //                                                 load x#0 from parameters                              (𝕡) x#0,y.0#0,y.1#0,y.2#0 | x#0                                                                                                                                   x in y                                                                                               contains/contract.py:41
    frame_dig -3              //                                                 load y.0#0 from parameters                            (𝕡) x#0,y.0#0,y.1#0,y.2#0 | x#0,y.0#0                                                                                                                             x in y                                                                                               contains/contract.py:41
    ==                        //                                                                                                       (𝕡) x#0,y.0#0,y.1#0,y.2#0 | {==}                                                                                                                                  x in y                                                                                               contains/contract.py:41
    //                        virtual: store contains%0#0 to l-stack (no copy)   (𝕡) x#0,y.0#0,y.1#0,y.2#0 | contains%0#0                                                                           x in y                                                                                               contains/contract.py:41
    frame_dig -4              //                                                 load x#0 from parameters                              (𝕡) x#0,y.0#0,y.1#0,y.2#0 | contains%0#0,x#0                                                                                                                      x in y                                                                                               contains/contract.py:41
    frame_dig -2              //                                                 load y.1#0 from parameters                            (𝕡) x#0,y.0#0,y.1#0,y.2#0 | contains%0#0,x#0,y.1#0                                                                                                                x in y                                                                                               contains/contract.py:41
    ==                        //                                                                                                       (𝕡) x#0,y.0#0,y.1#0,y.2#0 | contains%0#0,{==}                                                                                                                     x in y                                                                                               contains/contract.py:41
    //                        virtual: store is_equal%0#0 to l-stack (no copy)   (𝕡) x#0,y.0#0,y.1#0,y.2#0 | contains%0#0,is_equal%0#0                                                              x in y                                                                                               contains/contract.py:41
    //                        virtual: load contains%0#0 from l-stack (no copy)  (𝕡) x#0,y.0#0,y.1#0,y.2#0 | is_equal%0#0,contains%0#0                                                              x in y                                                                                               contains/contract.py:41
    //                        virtual: load is_equal%0#0 from l-stack (no copy)  (𝕡) x#0,y.0#0,y.1#0,y.2#0 | contains%0#0,is_equal%0#0                                                              x in y                                                                                               contains/contract.py:41
    ||                        //                                                                                                       (𝕡) x#0,y.0#0,y.1#0,y.2#0 | {||}                                                                                                                                  x in y                                                                                               contains/contract.py:41
    //                        virtual: store tmp%0#0 to l-stack (no copy)        (𝕡) x#0,y.0#0,y.1#0,y.2#0 | tmp%0#0                                                                                x in y                                                                                               contains/contract.py:41
    //                        virtual: load tmp%0#0 from l-stack (no copy)       (𝕡) x#0,y.0#0,y.1#0,y.2#0 | tmp%0#0                                                                                return x in y                                                                                        contains/contract.py:41
    retsub                    //                                                                                                       tmp%0#0                                                                                                                                                           return x in y                                                                                        contains/contract.py:41


// test_cases.contains.contract.MyContract.is_in_tuple_2(x: bytes, y.0: bytes, y.1: uint64, y.2: bytes) -> uint64:
is_in_tuple_2:
    proto 4 1                 //                                                                                                       (𝕡) x#0,y.0#0,y.1#0,y.2#0 |                                                                                                                                       @subroutine\ndef is_in_tuple_2(self, x: Bytes, y: tuple[Bytes, UInt64, Bytes]) -> bool:              contains/contract.py:43-44

is_in_tuple_2_block@0:
    frame_dig -4              //                                                 load x#0 from parameters                              (𝕡) x#0,y.0#0,y.1#0,y.2#0 | x#0                                                                                                                                   x in y                                                                                               contains/contract.py:45
    frame_dig -3              //                                                 load y.0#0 from parameters                            (𝕡) x#0,y.0#0,y.1#0,y.2#0 | x#0,y.0#0                                                                                                                             x in y                                                                                               contains/contract.py:45
    ==                        //                                                                                                       (𝕡) x#0,y.0#0,y.1#0,y.2#0 | {==}                                                                                                                                  x in y                                                                                               contains/contract.py:45
    //                        virtual: store contains%0#0 to l-stack (no copy)   (𝕡) x#0,y.0#0,y.1#0,y.2#0 | contains%0#0                                                                           x in y                                                                                               contains/contract.py:45
    frame_dig -4              //                                                 load x#0 from parameters                              (𝕡) x#0,y.0#0,y.1#0,y.2#0 | contains%0#0,x#0                                                                                                                      x in y                                                                                               contains/contract.py:45
    frame_dig -1              //                                                 load y.2#0 from parameters                            (𝕡) x#0,y.0#0,y.1#0,y.2#0 | contains%0#0,x#0,y.2#0                                                                                                                x in y                                                                                               contains/contract.py:45
    ==                        //                                                                                                       (𝕡) x#0,y.0#0,y.1#0,y.2#0 | contains%0#0,{==}                                                                                                                     x in y                                                                                               contains/contract.py:45
    //                        virtual: store is_equal%0#0 to l-stack (no copy)   (𝕡) x#0,y.0#0,y.1#0,y.2#0 | contains%0#0,is_equal%0#0                                                              x in y                                                                                               contains/contract.py:45
    //                        virtual: load contains%0#0 from l-stack (no copy)  (𝕡) x#0,y.0#0,y.1#0,y.2#0 | is_equal%0#0,contains%0#0                                                              x in y                                                                                               contains/contract.py:45
    //                        virtual: load is_equal%0#0 from l-stack (no copy)  (𝕡) x#0,y.0#0,y.1#0,y.2#0 | contains%0#0,is_equal%0#0                                                              x in y                                                                                               contains/contract.py:45
    ||                        //                                                                                                       (𝕡) x#0,y.0#0,y.1#0,y.2#0 | {||}                                                                                                                                  x in y                                                                                               contains/contract.py:45
    //                        virtual: store tmp%0#0 to l-stack (no copy)        (𝕡) x#0,y.0#0,y.1#0,y.2#0 | tmp%0#0                                                                                x in y                                                                                               contains/contract.py:45
    //                        virtual: load tmp%0#0 from l-stack (no copy)       (𝕡) x#0,y.0#0,y.1#0,y.2#0 | tmp%0#0                                                                                return x in y                                                                                        contains/contract.py:45
    retsub                    //                                                                                                       tmp%0#0                                                                                                                                                           return x in y                                                                                        contains/contract.py:45


// test_cases.contains.contract.MyContract.is_in_tuple_3(x: bytes, y.0: bytes, y.1: bytes) -> uint64:
is_in_tuple_3:
    proto 3 1                 //                                                                                                       (𝕡) x#0,y.0#0,y.1#0 |                                                                                                                                             @subroutine\ndef is_in_tuple_3(self, x: BigUInt, y: tuple[BigUInt, BigUInt]) -> bool:                contains/contract.py:47-48

is_in_tuple_3_block@0:
    frame_dig -3              //                                                 load x#0 from parameters                              (𝕡) x#0,y.0#0,y.1#0 | x#0                                                                                                                                         x in y                                                                                               contains/contract.py:49
    frame_dig -2              //                                                 load y.0#0 from parameters                            (𝕡) x#0,y.0#0,y.1#0 | x#0,y.0#0                                                                                                                                   x in y                                                                                               contains/contract.py:49
    b==                       //                                                                                                       (𝕡) x#0,y.0#0,y.1#0 | {b==}                                                                                                                                       x in y                                                                                               contains/contract.py:49
    //                        virtual: store contains%0#0 to l-stack (no copy)   (𝕡) x#0,y.0#0,y.1#0 | contains%0#0                                                                                 x in y                                                                                               contains/contract.py:49
    frame_dig -3              //                                                 load x#0 from parameters                              (𝕡) x#0,y.0#0,y.1#0 | contains%0#0,x#0                                                                                                                            x in y                                                                                               contains/contract.py:49
    frame_dig -1              //                                                 load y.1#0 from parameters                            (𝕡) x#0,y.0#0,y.1#0 | contains%0#0,x#0,y.1#0                                                                                                                      x in y                                                                                               contains/contract.py:49
    b==                       //                                                                                                       (𝕡) x#0,y.0#0,y.1#0 | contains%0#0,{b==}                                                                                                                          x in y                                                                                               contains/contract.py:49
    //                        virtual: store is_equal%0#0 to l-stack (no copy)   (𝕡) x#0,y.0#0,y.1#0 | contains%0#0,is_equal%0#0                                                                    x in y                                                                                               contains/contract.py:49
    //                        virtual: load contains%0#0 from l-stack (no copy)  (𝕡) x#0,y.0#0,y.1#0 | is_equal%0#0,contains%0#0                                                                    x in y                                                                                               contains/contract.py:49
    //                        virtual: load is_equal%0#0 from l-stack (no copy)  (𝕡) x#0,y.0#0,y.1#0 | contains%0#0,is_equal%0#0                                                                    x in y                                                                                               contains/contract.py:49
    ||                        //                                                                                                       (𝕡) x#0,y.0#0,y.1#0 | {||}                                                                                                                                        x in y                                                                                               contains/contract.py:49
    //                        virtual: store tmp%0#0 to l-stack (no copy)        (𝕡) x#0,y.0#0,y.1#0 | tmp%0#0                                                                                      x in y                                                                                               contains/contract.py:49
    //                        virtual: load tmp%0#0 from l-stack (no copy)       (𝕡) x#0,y.0#0,y.1#0 | tmp%0#0                                                                                      return x in y                                                                                        contains/contract.py:49
    retsub                    //                                                                                                       tmp%0#0                                                                                                                                                           return x in y                                                                                        contains/contract.py:49

