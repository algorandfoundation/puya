// Op                                                                                             Stack (out)
// test_cases.contains.contract.MyContract.approval_program() -> uint64:
main_block@0:
    // contains/contract.py:10
    // one_true = self.is_in_tuple_1(UInt64(10), (UInt64(10), not_ten, Bytes(b"five")))
    int 10                                                                                        10
    int 10                                                                                        10,10
    // contains/contract.py:8
    // not_ten = UInt64(15)
    int 15                                                                                        10,10,15
    // contains/contract.py:10
    // one_true = self.is_in_tuple_1(UInt64(10), (UInt64(10), not_ten, Bytes(b"five")))
    byte 0x66697665                                                                               10,10,15,0x66697665
    callsub is_in_tuple_1                                                                         one_true#0
    // contains/contract.py:11
    // one_false = self.is_in_tuple_1(UInt64(5), (UInt64(10), not_ten, Bytes(b"five")))
    int 5                                                                                         one_true#0,5
    int 10                                                                                        one_true#0,5,10
    // contains/contract.py:8
    // not_ten = UInt64(15)
    int 15                                                                                        one_true#0,5,10,15
    // contains/contract.py:11
    // one_false = self.is_in_tuple_1(UInt64(5), (UInt64(10), not_ten, Bytes(b"five")))
    byte 0x66697665                                                                               one_true#0,5,10,15,0x66697665
    callsub is_in_tuple_1                                                                         one_true#0,one_false#0
    // contains/contract.py:12
    // assert one_true, "Should be true"
    l-load one_true#0 1                                                                           one_false#0,one_true#0
    assert // Should be true                                                                      one_false#0
    // contains/contract.py:13
    // assert not one_false, "Should be false"
    l-load one_false#0 0                                                                          one_false#0
    !                                                                                             tmp%0#0
    assert // Should be false
    // contains/contract.py:16
    // Bytes(b"hello"), (Bytes(b"hello"), UInt64(0), Bytes(b"bonjour"))
    byte 0x68656c6c6f                                                                             0x68656c6c6f
    byte 0x68656c6c6f                                                                             0x68656c6c6f,0x68656c6c6f
    int 0                                                                                         0x68656c6c6f,0x68656c6c6f,0
    byte 0x626f6e6a6f7572                                                                         0x68656c6c6f,0x68656c6c6f,0,0x626f6e6a6f7572
    // contains/contract.py:15-17
    // two_true = self.is_in_tuple_2(
    //     Bytes(b"hello"), (Bytes(b"hello"), UInt64(0), Bytes(b"bonjour"))
    // )
    callsub is_in_tuple_2                                                                         two_true#0
    // contains/contract.py:19
    // Bytes(b"ciao"), (Bytes(b"hello"), UInt64(0), Bytes(b"bonjour"))
    byte 0x6369616f                                                                               two_true#0,0x6369616f
    byte 0x68656c6c6f                                                                             two_true#0,0x6369616f,0x68656c6c6f
    int 0                                                                                         two_true#0,0x6369616f,0x68656c6c6f,0
    byte 0x626f6e6a6f7572                                                                         two_true#0,0x6369616f,0x68656c6c6f,0,0x626f6e6a6f7572
    // contains/contract.py:18-20
    // two_false = self.is_in_tuple_2(
    //     Bytes(b"ciao"), (Bytes(b"hello"), UInt64(0), Bytes(b"bonjour"))
    // )
    callsub is_in_tuple_2                                                                         two_true#0,two_false#0
    // contains/contract.py:21
    // assert two_true, "Should be true"
    l-load two_true#0 1                                                                           two_false#0,two_true#0
    assert // Should be true                                                                      two_false#0
    // contains/contract.py:22
    // assert not two_false, "Should be false"
    l-load two_false#0 0                                                                          two_false#0
    !                                                                                             tmp%1#0
    assert // Should be false
    // contains/contract.py:25
    // BigUInt(32323423423423), (BigUInt(32323423423423), BigUInt(8439439483934))
    byte 0x1d65e22bcbbf                                                                           0x1d65e22bcbbf
    byte 0x1d65e22bcbbf                                                                           0x1d65e22bcbbf,0x1d65e22bcbbf
    byte 0x07acf5cae41e                                                                           0x1d65e22bcbbf,0x1d65e22bcbbf,0x07acf5cae41e
    // contains/contract.py:24-26
    // three_true = self.is_in_tuple_3(
    //     BigUInt(32323423423423), (BigUInt(32323423423423), BigUInt(8439439483934))
    // )
    callsub is_in_tuple_3                                                                         three_true#0
    // contains/contract.py:28
    // BigUInt(32323423423423) + BigUInt(32323423423423),
    byte 0x3acbc457977e                                                                           three_true#0,0x3acbc457977e
    // contains/contract.py:29
    // (BigUInt(32323423423423), BigUInt(8439439483934)),
    byte 0x1d65e22bcbbf                                                                           three_true#0,0x3acbc457977e,0x1d65e22bcbbf
    byte 0x07acf5cae41e                                                                           three_true#0,0x3acbc457977e,0x1d65e22bcbbf,0x07acf5cae41e
    // contains/contract.py:27-30
    // three_false = self.is_in_tuple_3(
    //     BigUInt(32323423423423) + BigUInt(32323423423423),
    //     (BigUInt(32323423423423), BigUInt(8439439483934)),
    // )
    callsub is_in_tuple_3                                                                         three_true#0,three_false#0
    // contains/contract.py:31
    // assert three_true, "Should be true"
    l-load three_true#0 1                                                                         three_false#0,three_true#0
    assert // Should be true                                                                      three_false#0
    // contains/contract.py:32
    // assert not three_false, "Should be false"
    l-load three_false#0 0                                                                        three_false#0
    !                                                                                             tmp%3#0
    assert // Should be false
    // contains/contract.py:34
    // self.test_string_types()
    callsub test_string_types
    // contains/contract.py:35
    // self.test_numeric_types()
    callsub test_numeric_types
    // contains/contract.py:37
    // return UInt64(1)
    int 1                                                                                         1
    return


// test_cases.contains.contract.MyContract.is_in_tuple_1(x: uint64, y.0: uint64, y.1: uint64, y.2: bytes) -> uint64:
is_in_tuple_1:                                                                                    (洧도) x#0,y.0#0,y.1#0,y.2#0 |
    // contains/contract.py:42-43
    // @subroutine
    // def is_in_tuple_1(self, x: UInt64, y: tuple[UInt64, UInt64, Bytes]) -> bool:
    proto 4 1                                                                                     (洧도) x#0,y.0#0,y.1#0,y.2#0 |

is_in_tuple_1_block@0:                                                                            (洧도) x#0,y.0#0,y.1#0,y.2#0 |
    // contains/contract.py:44
    // return x in y
    p-load x#0                                                                                    (洧도) x#0,y.0#0,y.1#0,y.2#0 | x#0 (copy)
    p-load y.0#0                                                                                  (洧도) x#0,y.0#0,y.1#0,y.2#0 | x#0 (copy),y.0#0 (copy)
    ==                                                                                            (洧도) x#0,y.0#0,y.1#0,y.2#0 | tmp%0#0
    bnz is_in_tuple_1_bool_true@2                                                                 (洧도) x#0,y.0#0,y.1#0,y.2#0 |
    // Implicit fall through to is_in_tuple_1_or_contd@1                                          (洧도) x#0,y.0#0,y.1#0,y.2#0 |

is_in_tuple_1_or_contd@1:                                                                         (洧도) x#0,y.0#0,y.1#0,y.2#0 |
    // contains/contract.py:44
    // return x in y
    p-load x#0                                                                                    (洧도) x#0,y.0#0,y.1#0,y.2#0 | x#0 (copy)
    p-load y.1#0                                                                                  (洧도) x#0,y.0#0,y.1#0,y.2#0 | x#0 (copy),y.1#0 (copy)
    ==                                                                                            (洧도) x#0,y.0#0,y.1#0,y.2#0 | tmp%1#0
    bz is_in_tuple_1_bool_false@3                                                                 (洧도) x#0,y.0#0,y.1#0,y.2#0 |
    // Implicit fall through to is_in_tuple_1_bool_true@2                                         (洧도) x#0,y.0#0,y.1#0,y.2#0 |

is_in_tuple_1_bool_true@2:                                                                        (洧도) x#0,y.0#0,y.1#0,y.2#0 |
    int 1                                                                                         (洧도) x#0,y.0#0,y.1#0,y.2#0 | or_result%0#0
    x-store or_result%0#0                                                                         (洧도) x#0,y.0#0,y.1#0,y.2#0 | (洧뎶) or_result%0#0 |
    b is_in_tuple_1_bool_merge@4                                                                  (洧도) x#0,y.0#0,y.1#0,y.2#0 | (洧뎶) or_result%0#0 |

is_in_tuple_1_bool_false@3:                                                                       (洧도) x#0,y.0#0,y.1#0,y.2#0 |
    int 0                                                                                         (洧도) x#0,y.0#0,y.1#0,y.2#0 | or_result%0#0
    x-store or_result%0#0                                                                         (洧도) x#0,y.0#0,y.1#0,y.2#0 | (洧뎶) or_result%0#0 |
    // Implicit fall through to is_in_tuple_1_bool_merge@4                                        (洧도) x#0,y.0#0,y.1#0,y.2#0 | (洧뎶) or_result%0#0 |

is_in_tuple_1_bool_merge@4:                                                                       (洧도) x#0,y.0#0,y.1#0,y.2#0 | (洧뎶) or_result%0#0 |
    // contains/contract.py:44
    // return x in y
    x-load or_result%0#0                                                                          (洧도) x#0,y.0#0,y.1#0,y.2#0 | or_result%0#0
    retsub                                                                                        or_result%0#0


// test_cases.contains.contract.MyContract.is_in_tuple_2(x: bytes, y.0: bytes, y.1: uint64, y.2: bytes) -> uint64:
is_in_tuple_2:                                                                                    (洧도) x#0,y.0#0,y.1#0,y.2#0 |
    // contains/contract.py:46-47
    // @subroutine
    // def is_in_tuple_2(self, x: Bytes, y: tuple[Bytes, UInt64, Bytes]) -> bool:
    proto 4 1                                                                                     (洧도) x#0,y.0#0,y.1#0,y.2#0 |

is_in_tuple_2_block@0:                                                                            (洧도) x#0,y.0#0,y.1#0,y.2#0 |
    // contains/contract.py:48
    // return x in y
    p-load x#0                                                                                    (洧도) x#0,y.0#0,y.1#0,y.2#0 | x#0 (copy)
    p-load y.0#0                                                                                  (洧도) x#0,y.0#0,y.1#0,y.2#0 | x#0 (copy),y.0#0 (copy)
    ==                                                                                            (洧도) x#0,y.0#0,y.1#0,y.2#0 | tmp%0#0
    bnz is_in_tuple_2_bool_true@2                                                                 (洧도) x#0,y.0#0,y.1#0,y.2#0 |
    // Implicit fall through to is_in_tuple_2_or_contd@1                                          (洧도) x#0,y.0#0,y.1#0,y.2#0 |

is_in_tuple_2_or_contd@1:                                                                         (洧도) x#0,y.0#0,y.1#0,y.2#0 |
    // contains/contract.py:48
    // return x in y
    p-load x#0                                                                                    (洧도) x#0,y.0#0,y.1#0,y.2#0 | x#0 (copy)
    p-load y.2#0                                                                                  (洧도) x#0,y.0#0,y.1#0,y.2#0 | x#0 (copy),y.2#0 (copy)
    ==                                                                                            (洧도) x#0,y.0#0,y.1#0,y.2#0 | tmp%1#0
    bz is_in_tuple_2_bool_false@3                                                                 (洧도) x#0,y.0#0,y.1#0,y.2#0 |
    // Implicit fall through to is_in_tuple_2_bool_true@2                                         (洧도) x#0,y.0#0,y.1#0,y.2#0 |

is_in_tuple_2_bool_true@2:                                                                        (洧도) x#0,y.0#0,y.1#0,y.2#0 |
    int 1                                                                                         (洧도) x#0,y.0#0,y.1#0,y.2#0 | or_result%0#0
    x-store or_result%0#0                                                                         (洧도) x#0,y.0#0,y.1#0,y.2#0 | (洧뎶) or_result%0#0 |
    b is_in_tuple_2_bool_merge@4                                                                  (洧도) x#0,y.0#0,y.1#0,y.2#0 | (洧뎶) or_result%0#0 |

is_in_tuple_2_bool_false@3:                                                                       (洧도) x#0,y.0#0,y.1#0,y.2#0 |
    int 0                                                                                         (洧도) x#0,y.0#0,y.1#0,y.2#0 | or_result%0#0
    x-store or_result%0#0                                                                         (洧도) x#0,y.0#0,y.1#0,y.2#0 | (洧뎶) or_result%0#0 |
    // Implicit fall through to is_in_tuple_2_bool_merge@4                                        (洧도) x#0,y.0#0,y.1#0,y.2#0 | (洧뎶) or_result%0#0 |

is_in_tuple_2_bool_merge@4:                                                                       (洧도) x#0,y.0#0,y.1#0,y.2#0 | (洧뎶) or_result%0#0 |
    // contains/contract.py:48
    // return x in y
    x-load or_result%0#0                                                                          (洧도) x#0,y.0#0,y.1#0,y.2#0 | or_result%0#0
    retsub                                                                                        or_result%0#0


// test_cases.contains.contract.MyContract.is_in_tuple_3(x: bytes, y.0: bytes, y.1: bytes) -> uint64:
is_in_tuple_3:                                                                                    (洧도) x#0,y.0#0,y.1#0 |
    // contains/contract.py:50-51
    // @subroutine
    // def is_in_tuple_3(self, x: BigUInt, y: tuple[BigUInt, BigUInt]) -> bool:
    proto 3 1                                                                                     (洧도) x#0,y.0#0,y.1#0 |

is_in_tuple_3_block@0:                                                                            (洧도) x#0,y.0#0,y.1#0 |
    // contains/contract.py:52
    // return x in y
    p-load x#0                                                                                    (洧도) x#0,y.0#0,y.1#0 | x#0 (copy)
    p-load y.0#0                                                                                  (洧도) x#0,y.0#0,y.1#0 | x#0 (copy),y.0#0 (copy)
    b==                                                                                           (洧도) x#0,y.0#0,y.1#0 | tmp%0#0
    bnz is_in_tuple_3_bool_true@2                                                                 (洧도) x#0,y.0#0,y.1#0 |
    // Implicit fall through to is_in_tuple_3_or_contd@1                                          (洧도) x#0,y.0#0,y.1#0 |

is_in_tuple_3_or_contd@1:                                                                         (洧도) x#0,y.0#0,y.1#0 |
    // contains/contract.py:52
    // return x in y
    p-load x#0                                                                                    (洧도) x#0,y.0#0,y.1#0 | x#0 (copy)
    p-load y.1#0                                                                                  (洧도) x#0,y.0#0,y.1#0 | x#0 (copy),y.1#0 (copy)
    b==                                                                                           (洧도) x#0,y.0#0,y.1#0 | tmp%1#0
    bz is_in_tuple_3_bool_false@3                                                                 (洧도) x#0,y.0#0,y.1#0 |
    // Implicit fall through to is_in_tuple_3_bool_true@2                                         (洧도) x#0,y.0#0,y.1#0 |

is_in_tuple_3_bool_true@2:                                                                        (洧도) x#0,y.0#0,y.1#0 |
    int 1                                                                                         (洧도) x#0,y.0#0,y.1#0 | or_result%0#0
    x-store or_result%0#0                                                                         (洧도) x#0,y.0#0,y.1#0 | (洧뎶) or_result%0#0 |
    b is_in_tuple_3_bool_merge@4                                                                  (洧도) x#0,y.0#0,y.1#0 | (洧뎶) or_result%0#0 |

is_in_tuple_3_bool_false@3:                                                                       (洧도) x#0,y.0#0,y.1#0 |
    int 0                                                                                         (洧도) x#0,y.0#0,y.1#0 | or_result%0#0
    x-store or_result%0#0                                                                         (洧도) x#0,y.0#0,y.1#0 | (洧뎶) or_result%0#0 |
    // Implicit fall through to is_in_tuple_3_bool_merge@4                                        (洧도) x#0,y.0#0,y.1#0 | (洧뎶) or_result%0#0 |

is_in_tuple_3_bool_merge@4:                                                                       (洧도) x#0,y.0#0,y.1#0 | (洧뎶) or_result%0#0 |
    // contains/contract.py:52
    // return x in y
    x-load or_result%0#0                                                                          (洧도) x#0,y.0#0,y.1#0 | or_result%0#0
    retsub                                                                                        or_result%0#0


// test_cases.contains.contract.MyContract.test_string_types() -> void:
test_string_types:
    // contains/contract.py:54-55
    // @subroutine
    // def test_string_types(self) -> None:
    proto 0 0
    allocate 23 to stack                                                                          (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0 |

test_string_types_block@0:                                                                        (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0 |
    // contains/contract.py:56
    // assert foo_string() in (foo_string(), baz_string()), "foo in (foo, baz)"
    callsub foo_string                                                                            (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0 | awst_tmp%0#0
    l-store-copy awst_tmp%0#0 0                                                                   (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0 | awst_tmp%0#0,awst_tmp%0#0
    f-store awst_tmp%0#0                                                                          (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0 | awst_tmp%0#0
    callsub foo_string                                                                            (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0 | awst_tmp%0#0,tmp%0#0
    callsub baz_string                                                                            (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0 | awst_tmp%0#0,tmp%0#0,tmp%1#0
    f-store tmp%1#0                                                                               (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 | awst_tmp%0#0,tmp%0#0
    l-load awst_tmp%0#0 1                                                                         (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 | tmp%0#0,awst_tmp%0#0
    l-load tmp%0#0 1                                                                              (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 | awst_tmp%0#0,tmp%0#0
    ==                                                                                            (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 | tmp%2#0
    bnz test_string_types_bool_true@2                                                             (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 |
    // Implicit fall through to test_string_types_or_contd@1                                      (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 |

test_string_types_or_contd@1:                                                                     (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 |
    // contains/contract.py:56
    // assert foo_string() in (foo_string(), baz_string()), "foo in (foo, baz)"
    f-load awst_tmp%0#0                                                                           (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 | awst_tmp%0#0
    f-load tmp%1#0                                                                                (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 | awst_tmp%0#0,tmp%1#0
    ==                                                                                            (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 | tmp%3#0
    bz test_string_types_bool_false@3                                                             (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 |
    // Implicit fall through to test_string_types_bool_true@2                                     (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 |

test_string_types_bool_true@2:                                                                    (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 |
    int 1                                                                                         (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 | or_result%0#0
    x-store or_result%0#0                                                                         (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 | (洧뎶) or_result%0#0 |
    b test_string_types_bool_merge@4                                                              (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 | (洧뎶) or_result%0#0 |

test_string_types_bool_false@3:                                                                   (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 |
    int 0                                                                                         (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 | or_result%0#0
    x-store or_result%0#0                                                                         (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 | (洧뎶) or_result%0#0 |
    // Implicit fall through to test_string_types_bool_merge@4                                    (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 | (洧뎶) or_result%0#0 |

test_string_types_bool_merge@4:                                                                   (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 | (洧뎶) or_result%0#0 |
    // contains/contract.py:56
    // assert foo_string() in (foo_string(), baz_string()), "foo in (foo, baz)"
    x-load or_result%0#0                                                                          (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 | or_result%0#0
    assert // foo in (foo, baz)                                                                   (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 |
    // contains/contract.py:57
    // assert foo_string() not in (bar_string(), baz_string()), "foo not in (bar, baz)"
    callsub foo_string                                                                            (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 | awst_tmp%1#0
    l-store-copy awst_tmp%1#0 0                                                                   (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 | awst_tmp%1#0,awst_tmp%1#0
    f-store awst_tmp%1#0                                                                          (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 | awst_tmp%1#0
    callsub bar_string                                                                            (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 | awst_tmp%1#0,tmp%4#0
    callsub baz_string                                                                            (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 | awst_tmp%1#0,tmp%4#0,tmp%5#0
    f-store tmp%5#0                                                                               (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 | awst_tmp%1#0,tmp%4#0
    l-load awst_tmp%1#0 1                                                                         (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 | tmp%4#0,awst_tmp%1#0
    l-load tmp%4#0 1                                                                              (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 | awst_tmp%1#0,tmp%4#0
    ==                                                                                            (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 | tmp%6#0
    bnz test_string_types_bool_true@6                                                             (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 |
    // Implicit fall through to test_string_types_or_contd@5                                      (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 |

test_string_types_or_contd@5:                                                                     (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 |
    // contains/contract.py:57
    // assert foo_string() not in (bar_string(), baz_string()), "foo not in (bar, baz)"
    f-load awst_tmp%1#0                                                                           (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 | awst_tmp%1#0
    f-load tmp%5#0                                                                                (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 | awst_tmp%1#0,tmp%5#0
    ==                                                                                            (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 | tmp%7#0
    bz test_string_types_bool_false@7                                                             (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 |
    // Implicit fall through to test_string_types_bool_true@6                                     (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 |

test_string_types_bool_true@6:                                                                    (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 |
    int 1                                                                                         (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 | or_result%1#0
    x-store or_result%1#0                                                                         (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 | (洧뎶) or_result%1#0 |
    b test_string_types_bool_merge@8                                                              (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 | (洧뎶) or_result%1#0 |

test_string_types_bool_false@7:                                                                   (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 |
    int 0                                                                                         (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 | or_result%1#0
    x-store or_result%1#0                                                                         (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 | (洧뎶) or_result%1#0 |
    // Implicit fall through to test_string_types_bool_merge@8                                    (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 | (洧뎶) or_result%1#0 |

test_string_types_bool_merge@8:                                                                   (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 | (洧뎶) or_result%1#0 |
    // contains/contract.py:57
    // assert foo_string() not in (bar_string(), baz_string()), "foo not in (bar, baz)"
    x-load or_result%1#0                                                                          (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 | or_result%1#0
    !                                                                                             (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 | tmp%8#0
    assert // foo not in (bar, baz)                                                               (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 |
    // contains/contract.py:58
    // assert foo_string() in (foo_arc4(), baz_string(), bar_string()), "foo in (foo, baz, bar)"
    callsub foo_arc4                                                                              (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 | tmp%9#0
    callsub baz_string                                                                            (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 | tmp%9#0,tmp%10#0
    f-store tmp%10#0                                                                              (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 | tmp%9#0
    callsub bar_string                                                                            (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 | tmp%9#0,tmp%11#0
    f-store tmp%11#0                                                                              (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 | tmp%9#0
    l-load tmp%9#0 0                                                                              (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 | tmp%9#0
    extract 2 0                                                                                   (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 | tmp%12#0
    callsub foo_string                                                                            (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 | tmp%12#0,awst_tmp%2#0
    l-store-copy awst_tmp%2#0 0                                                                   (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 | tmp%12#0,awst_tmp%2#0,awst_tmp%2#0
    f-store awst_tmp%2#0                                                                          (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 | tmp%12#0,awst_tmp%2#0
    l-load tmp%12#0 1                                                                             (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 | awst_tmp%2#0,tmp%12#0
    l-load awst_tmp%2#0 1                                                                         (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 | tmp%12#0,awst_tmp%2#0
    ==                                                                                            (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 | tmp%13#0
    bnz test_string_types_bool_true@11                                                            (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 |
    // Implicit fall through to test_string_types_or_contd@9                                      (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 |

test_string_types_or_contd@9:                                                                     (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 |
    // contains/contract.py:58
    // assert foo_string() in (foo_arc4(), baz_string(), bar_string()), "foo in (foo, baz, bar)"
    f-load awst_tmp%2#0                                                                           (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 | awst_tmp%2#0
    f-load tmp%10#0                                                                               (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 | awst_tmp%2#0,tmp%10#0
    ==                                                                                            (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 | tmp%14#0
    bnz test_string_types_bool_true@11                                                            (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 |
    // Implicit fall through to test_string_types_or_contd@10                                     (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 |

test_string_types_or_contd@10:                                                                    (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 |
    // contains/contract.py:58
    // assert foo_string() in (foo_arc4(), baz_string(), bar_string()), "foo in (foo, baz, bar)"
    f-load awst_tmp%2#0                                                                           (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 | awst_tmp%2#0
    f-load tmp%11#0                                                                               (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 | awst_tmp%2#0,tmp%11#0
    ==                                                                                            (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 | tmp%15#0
    bz test_string_types_bool_false@12                                                            (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 |
    // Implicit fall through to test_string_types_bool_true@11                                    (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 |

test_string_types_bool_true@11:                                                                   (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 |
    int 1                                                                                         (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 | or_result%2#0
    x-store or_result%2#0                                                                         (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 | (洧뎶) or_result%2#0 |
    b test_string_types_bool_merge@13                                                             (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 | (洧뎶) or_result%2#0 |

test_string_types_bool_false@12:                                                                  (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 |
    int 0                                                                                         (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 | or_result%2#0
    x-store or_result%2#0                                                                         (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 | (洧뎶) or_result%2#0 |
    // Implicit fall through to test_string_types_bool_merge@13                                   (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 | (洧뎶) or_result%2#0 |

test_string_types_bool_merge@13:                                                                  (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 | (洧뎶) or_result%2#0 |
    // contains/contract.py:58
    // assert foo_string() in (foo_arc4(), baz_string(), bar_string()), "foo in (foo, baz, bar)"
    x-load or_result%2#0                                                                          (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 | or_result%2#0
    assert // foo in (foo, baz, bar)                                                              (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 |
    // contains/contract.py:59
    // assert foo_arc4() in (foo_string(), baz_string(), bar_string()), "foo in (foo, baz, bar)"
    callsub foo_arc4                                                                              (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 | awst_tmp%3#0
    extract 2 0                                                                                   (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 | tmp%16#0
    l-store-copy tmp%16#0 0                                                                       (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 | tmp%16#0,tmp%16#0
    f-store tmp%16#0                                                                              (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 | tmp%16#0
    callsub foo_string                                                                            (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 | tmp%16#0,tmp%17#0
    callsub baz_string                                                                            (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 | tmp%16#0,tmp%17#0,tmp%18#0
    f-store tmp%18#0                                                                              (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 | tmp%16#0,tmp%17#0
    callsub bar_string                                                                            (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 | tmp%16#0,tmp%17#0,tmp%19#0
    f-store tmp%19#0                                                                              (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 | tmp%16#0,tmp%17#0
    l-load tmp%16#0 1                                                                             (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 | tmp%17#0,tmp%16#0
    l-load tmp%17#0 1                                                                             (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 | tmp%16#0,tmp%17#0
    ==                                                                                            (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 | tmp%20#0
    bnz test_string_types_bool_true@16                                                            (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 |
    // Implicit fall through to test_string_types_or_contd@14                                     (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 |

test_string_types_or_contd@14:                                                                    (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 |
    // contains/contract.py:59
    // assert foo_arc4() in (foo_string(), baz_string(), bar_string()), "foo in (foo, baz, bar)"
    f-load tmp%16#0                                                                               (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 | tmp%16#0
    f-load tmp%18#0                                                                               (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 | tmp%16#0,tmp%18#0
    ==                                                                                            (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 | tmp%22#0
    bnz test_string_types_bool_true@16                                                            (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 |
    // Implicit fall through to test_string_types_or_contd@15                                     (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 |

test_string_types_or_contd@15:                                                                    (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 |
    // contains/contract.py:59
    // assert foo_arc4() in (foo_string(), baz_string(), bar_string()), "foo in (foo, baz, bar)"
    f-load tmp%16#0                                                                               (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 | tmp%16#0
    f-load tmp%19#0                                                                               (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 | tmp%16#0,tmp%19#0
    ==                                                                                            (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 | tmp%24#0
    bz test_string_types_bool_false@17                                                            (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 |
    // Implicit fall through to test_string_types_bool_true@16                                    (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 |

test_string_types_bool_true@16:                                                                   (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 |
    int 1                                                                                         (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 | or_result%3#0
    x-store or_result%3#0                                                                         (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 | (洧뎶) or_result%3#0 |
    b test_string_types_bool_merge@18                                                             (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 | (洧뎶) or_result%3#0 |

test_string_types_bool_false@17:                                                                  (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 |
    int 0                                                                                         (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 | or_result%3#0
    x-store or_result%3#0                                                                         (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 | (洧뎶) or_result%3#0 |
    // Implicit fall through to test_string_types_bool_merge@18                                   (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 | (洧뎶) or_result%3#0 |

test_string_types_bool_merge@18:                                                                  (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 | (洧뎶) or_result%3#0 |
    // contains/contract.py:59
    // assert foo_arc4() in (foo_string(), baz_string(), bar_string()), "foo in (foo, baz, bar)"
    x-load or_result%3#0                                                                          (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 | or_result%3#0
    assert // foo in (foo, baz, bar)                                                              (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 |
    // contains/contract.py:60
    // assert foo_string() not in (bar_arc4(), baz_string()), "foo not in (bar, baz)"
    callsub bar_arc4                                                                              (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 | tmp%25#0
    callsub baz_string                                                                            (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 | tmp%25#0,tmp%26#0
    f-store tmp%26#0                                                                              (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 | tmp%25#0
    l-load tmp%25#0 0                                                                             (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 | tmp%25#0
    extract 2 0                                                                                   (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 | tmp%27#0
    callsub foo_string                                                                            (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 | tmp%27#0,awst_tmp%4#0
    l-store-copy awst_tmp%4#0 0                                                                   (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 | tmp%27#0,awst_tmp%4#0,awst_tmp%4#0
    f-store awst_tmp%4#0                                                                          (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 | tmp%27#0,awst_tmp%4#0
    l-load tmp%27#0 1                                                                             (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 | awst_tmp%4#0,tmp%27#0
    l-load awst_tmp%4#0 1                                                                         (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 | tmp%27#0,awst_tmp%4#0
    ==                                                                                            (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 | tmp%28#0
    bnz test_string_types_bool_true@20                                                            (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 |
    // Implicit fall through to test_string_types_or_contd@19                                     (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 |

test_string_types_or_contd@19:                                                                    (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 |
    // contains/contract.py:60
    // assert foo_string() not in (bar_arc4(), baz_string()), "foo not in (bar, baz)"
    f-load awst_tmp%4#0                                                                           (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 | awst_tmp%4#0
    f-load tmp%26#0                                                                               (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 | awst_tmp%4#0,tmp%26#0
    ==                                                                                            (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 | tmp%29#0
    bz test_string_types_bool_false@21                                                            (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 |
    // Implicit fall through to test_string_types_bool_true@20                                    (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 |

test_string_types_bool_true@20:                                                                   (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 |
    int 1                                                                                         (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 | or_result%4#0
    x-store or_result%4#0                                                                         (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 | (洧뎶) or_result%4#0 |
    b test_string_types_bool_merge@22                                                             (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 | (洧뎶) or_result%4#0 |

test_string_types_bool_false@21:                                                                  (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 |
    int 0                                                                                         (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 | or_result%4#0
    x-store or_result%4#0                                                                         (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 | (洧뎶) or_result%4#0 |
    // Implicit fall through to test_string_types_bool_merge@22                                   (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 | (洧뎶) or_result%4#0 |

test_string_types_bool_merge@22:                                                                  (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 | (洧뎶) or_result%4#0 |
    // contains/contract.py:60
    // assert foo_string() not in (bar_arc4(), baz_string()), "foo not in (bar, baz)"
    x-load or_result%4#0                                                                          (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 | or_result%4#0
    !                                                                                             (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 | tmp%30#0
    assert // foo not in (bar, baz)                                                               (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 |
    // contains/contract.py:61
    // assert foo_arc4() not in (bar_arc4(), baz_string()), "foo not in (bar, baz)"
    callsub foo_arc4                                                                              (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 | awst_tmp%5#0
    l-store-copy awst_tmp%5#0 0                                                                   (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 | awst_tmp%5#0,awst_tmp%5#0
    f-store awst_tmp%5#0                                                                          (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 | awst_tmp%5#0
    callsub bar_arc4                                                                              (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 | awst_tmp%5#0,tmp%31#0
    callsub baz_string                                                                            (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 | awst_tmp%5#0,tmp%31#0,tmp%32#0
    f-store tmp%32#0                                                                              (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 | awst_tmp%5#0,tmp%31#0
    l-load awst_tmp%5#0 1                                                                         (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 | tmp%31#0,awst_tmp%5#0
    l-load tmp%31#0 1                                                                             (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 | awst_tmp%5#0,tmp%31#0
    ==                                                                                            (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 | tmp%33#0
    bnz test_string_types_bool_true@24                                                            (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 |
    // Implicit fall through to test_string_types_or_contd@23                                     (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 |

test_string_types_or_contd@23:                                                                    (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 |
    // contains/contract.py:61
    // assert foo_arc4() not in (bar_arc4(), baz_string()), "foo not in (bar, baz)"
    f-load awst_tmp%5#0                                                                           (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 | awst_tmp%5#0
    extract 2 0                                                                                   (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 | tmp%34#0
    f-load tmp%32#0                                                                               (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 | tmp%34#0,tmp%32#0
    ==                                                                                            (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 | tmp%35#0
    bz test_string_types_bool_false@25                                                            (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 |
    // Implicit fall through to test_string_types_bool_true@24                                    (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 |

test_string_types_bool_true@24:                                                                   (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 |
    int 1                                                                                         (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 | or_result%5#0
    x-store or_result%5#0                                                                         (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 | (洧뎶) or_result%5#0 |
    b test_string_types_bool_merge@26                                                             (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 | (洧뎶) or_result%5#0 |

test_string_types_bool_false@25:                                                                  (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 |
    int 0                                                                                         (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 | or_result%5#0
    x-store or_result%5#0                                                                         (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 | (洧뎶) or_result%5#0 |
    // Implicit fall through to test_string_types_bool_merge@26                                   (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 | (洧뎶) or_result%5#0 |

test_string_types_bool_merge@26:                                                                  (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 | (洧뎶) or_result%5#0 |
    // contains/contract.py:61
    // assert foo_arc4() not in (bar_arc4(), baz_string()), "foo not in (bar, baz)"
    x-load or_result%5#0                                                                          (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 | or_result%5#0
    !                                                                                             (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 | tmp%36#0
    assert // foo not in (bar, baz)                                                               (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 |
    // contains/contract.py:63
    // bar_arc4(),
    callsub bar_arc4                                                                              (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 | tmp%37#0
    // contains/contract.py:64
    // baz_string(),
    callsub baz_string                                                                            (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 | tmp%37#0,tmp%38#0
    f-store tmp%38#0                                                                              (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 | tmp%37#0
    // contains/contract.py:65
    // foo_string(),
    callsub foo_string                                                                            (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 | tmp%37#0,tmp%39#0
    f-store tmp%39#0                                                                              (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 | tmp%37#0
    // contains/contract.py:66
    // one_u64(),
    callsub one_u64                                                                               (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 | tmp%37#0,tmp%40#0
    pop 1                                                                                         (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 | tmp%37#0
    // contains/contract.py:62-67
    // assert foo_string() in (
    //     bar_arc4(),
    //     baz_string(),
    //     foo_string(),
    //     one_u64(),
    // ), "foo in (bar, baz, foo, 1)"
    l-load tmp%37#0 0                                                                             (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 | tmp%37#0
    extract 2 0                                                                                   (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 | tmp%41#0
    // contains/contract.py:62
    // assert foo_string() in (
    callsub foo_string                                                                            (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 | tmp%41#0,awst_tmp%6#0
    l-store-copy awst_tmp%6#0 0                                                                   (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 | tmp%41#0,awst_tmp%6#0,awst_tmp%6#0
    f-store awst_tmp%6#0                                                                          (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 | tmp%41#0,awst_tmp%6#0
    // contains/contract.py:62-67
    // assert foo_string() in (
    //     bar_arc4(),
    //     baz_string(),
    //     foo_string(),
    //     one_u64(),
    // ), "foo in (bar, baz, foo, 1)"
    l-load tmp%41#0 1                                                                             (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 | awst_tmp%6#0,tmp%41#0
    l-load awst_tmp%6#0 1                                                                         (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 | tmp%41#0,awst_tmp%6#0
    ==                                                                                            (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 | tmp%42#0
    bnz test_string_types_bool_true@29                                                            (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 |
    // Implicit fall through to test_string_types_or_contd@27                                     (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 |

test_string_types_or_contd@27:                                                                    (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 |
    // contains/contract.py:62-67
    // assert foo_string() in (
    //     bar_arc4(),
    //     baz_string(),
    //     foo_string(),
    //     one_u64(),
    // ), "foo in (bar, baz, foo, 1)"
    f-load awst_tmp%6#0                                                                           (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 | awst_tmp%6#0
    f-load tmp%38#0                                                                               (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 | awst_tmp%6#0,tmp%38#0
    ==                                                                                            (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 | tmp%43#0
    bnz test_string_types_bool_true@29                                                            (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 |
    // Implicit fall through to test_string_types_or_contd@28                                     (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 |

test_string_types_or_contd@28:                                                                    (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 |
    // contains/contract.py:62-67
    // assert foo_string() in (
    //     bar_arc4(),
    //     baz_string(),
    //     foo_string(),
    //     one_u64(),
    // ), "foo in (bar, baz, foo, 1)"
    f-load awst_tmp%6#0                                                                           (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 | awst_tmp%6#0
    f-load tmp%39#0                                                                               (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 | awst_tmp%6#0,tmp%39#0
    ==                                                                                            (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 | tmp%44#0
    bz test_string_types_bool_false@30                                                            (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 |
    // Implicit fall through to test_string_types_bool_true@29                                    (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 |

test_string_types_bool_true@29:                                                                   (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 |
    int 1                                                                                         (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 | or_result%6#0
    x-store or_result%6#0                                                                         (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 | (洧뎶) or_result%6#0 |
    b test_string_types_bool_merge@31                                                             (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 | (洧뎶) or_result%6#0 |

test_string_types_bool_false@30:                                                                  (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 |
    int 0                                                                                         (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 | or_result%6#0
    x-store or_result%6#0                                                                         (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 | (洧뎶) or_result%6#0 |
    // Implicit fall through to test_string_types_bool_merge@31                                   (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 | (洧뎶) or_result%6#0 |

test_string_types_bool_merge@31:                                                                  (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 | (洧뎶) or_result%6#0 |
    // contains/contract.py:62-67
    // assert foo_string() in (
    //     bar_arc4(),
    //     baz_string(),
    //     foo_string(),
    //     one_u64(),
    // ), "foo in (bar, baz, foo, 1)"
    x-load or_result%6#0                                                                          (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 | or_result%6#0
    assert // foo in (bar, baz, foo, 1)                                                           (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 |
    // contains/contract.py:68
    // assert foo_arc4() in (
    callsub foo_arc4                                                                              (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 | awst_tmp%7#0
    l-store-copy awst_tmp%7#0 0                                                                   (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 | awst_tmp%7#0,awst_tmp%7#0
    f-store awst_tmp%7#0                                                                          (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 | awst_tmp%7#0
    // contains/contract.py:69
    // bar_arc4(),
    callsub bar_arc4                                                                              (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 | awst_tmp%7#0,tmp%45#0
    // contains/contract.py:70
    // baz_string(),
    callsub baz_string                                                                            (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 | awst_tmp%7#0,tmp%45#0,tmp%46#0
    f-store tmp%46#0                                                                              (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 | awst_tmp%7#0,tmp%45#0
    // contains/contract.py:71
    // foo_string(),
    callsub foo_string                                                                            (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 | awst_tmp%7#0,tmp%45#0,tmp%47#0
    f-store tmp%47#0                                                                              (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 | awst_tmp%7#0,tmp%45#0
    // contains/contract.py:72
    // one_u64(),
    callsub one_u64                                                                               (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 | awst_tmp%7#0,tmp%45#0,tmp%48#0
    pop 1                                                                                         (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 | awst_tmp%7#0,tmp%45#0
    // contains/contract.py:68-73
    // assert foo_arc4() in (
    //     bar_arc4(),
    //     baz_string(),
    //     foo_string(),
    //     one_u64(),
    // ), "foo in (bar, baz, foo, 1)"
    l-load awst_tmp%7#0 1                                                                         (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 | tmp%45#0,awst_tmp%7#0
    l-load tmp%45#0 1                                                                             (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 | awst_tmp%7#0,tmp%45#0
    ==                                                                                            (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 | tmp%49#0
    bnz test_string_types_bool_true@34                                                            (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 |
    // Implicit fall through to test_string_types_or_contd@32                                     (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 |

test_string_types_or_contd@32:                                                                    (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 |
    // contains/contract.py:68
    // assert foo_arc4() in (
    f-load awst_tmp%7#0                                                                           (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 | awst_tmp%7#0
    extract 2 0                                                                                   (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 | tmp%50#0
    l-store-copy tmp%50#0 0                                                                       (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 | tmp%50#0,tmp%50#0
    f-store tmp%50#0                                                                              (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 | tmp%50#0
    // contains/contract.py:68-73
    // assert foo_arc4() in (
    //     bar_arc4(),
    //     baz_string(),
    //     foo_string(),
    //     one_u64(),
    // ), "foo in (bar, baz, foo, 1)"
    l-load tmp%50#0 0                                                                             (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 | tmp%50#0
    f-load tmp%46#0                                                                               (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 | tmp%50#0,tmp%46#0
    ==                                                                                            (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 | tmp%51#0
    bnz test_string_types_bool_true@34                                                            (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 |
    // Implicit fall through to test_string_types_or_contd@33                                     (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 |

test_string_types_or_contd@33:                                                                    (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 |
    // contains/contract.py:68-73
    // assert foo_arc4() in (
    //     bar_arc4(),
    //     baz_string(),
    //     foo_string(),
    //     one_u64(),
    // ), "foo in (bar, baz, foo, 1)"
    f-load tmp%50#0                                                                               (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 | tmp%50#0
    f-load tmp%47#0                                                                               (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 | tmp%50#0,tmp%47#0
    ==                                                                                            (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 | tmp%53#0
    bz test_string_types_bool_false@35                                                            (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 |
    // Implicit fall through to test_string_types_bool_true@34                                    (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 |

test_string_types_bool_true@34:                                                                   (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 |
    int 1                                                                                         (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 | or_result%7#0
    x-store or_result%7#0                                                                         (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 | (洧뎶) or_result%7#0 |
    b test_string_types_bool_merge@36                                                             (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 | (洧뎶) or_result%7#0 |

test_string_types_bool_false@35:                                                                  (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 |
    int 0                                                                                         (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 | or_result%7#0
    x-store or_result%7#0                                                                         (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 | (洧뎶) or_result%7#0 |
    // Implicit fall through to test_string_types_bool_merge@36                                   (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 | (洧뎶) or_result%7#0 |

test_string_types_bool_merge@36:                                                                  (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 | (洧뎶) or_result%7#0 |
    // contains/contract.py:68-73
    // assert foo_arc4() in (
    //     bar_arc4(),
    //     baz_string(),
    //     foo_string(),
    //     one_u64(),
    // ), "foo in (bar, baz, foo, 1)"
    x-load or_result%7#0                                                                          (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 | or_result%7#0
    assert // foo in (bar, baz, foo, 1)                                                           (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 |
    // contains/contract.py:75
    // bar_arc4(),
    callsub bar_arc4                                                                              (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 | tmp%54#0
    // contains/contract.py:76
    // baz_string(),
    callsub baz_string                                                                            (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 | tmp%54#0,tmp%55#0
    f-store tmp%55#0                                                                              (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 | tmp%54#0
    // contains/contract.py:77
    // one_u64(),
    callsub one_u64                                                                               (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 | tmp%54#0,tmp%56#0
    pop 1                                                                                         (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 | tmp%54#0
    // contains/contract.py:74-78
    // assert foo_string() not in (
    //     bar_arc4(),
    //     baz_string(),
    //     one_u64(),
    // ), "foo not in (bar, baz, 1)"
    l-load tmp%54#0 0                                                                             (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 | tmp%54#0
    extract 2 0                                                                                   (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 | tmp%57#0
    // contains/contract.py:74
    // assert foo_string() not in (
    callsub foo_string                                                                            (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 | tmp%57#0,awst_tmp%8#0
    l-store-copy awst_tmp%8#0 0                                                                   (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 | tmp%57#0,awst_tmp%8#0,awst_tmp%8#0
    f-store awst_tmp%8#0                                                                          (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 | tmp%57#0,awst_tmp%8#0
    // contains/contract.py:74-78
    // assert foo_string() not in (
    //     bar_arc4(),
    //     baz_string(),
    //     one_u64(),
    // ), "foo not in (bar, baz, 1)"
    l-load tmp%57#0 1                                                                             (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 | awst_tmp%8#0,tmp%57#0
    l-load awst_tmp%8#0 1                                                                         (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 | tmp%57#0,awst_tmp%8#0
    ==                                                                                            (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 | tmp%58#0
    bnz test_string_types_bool_true@38                                                            (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 |
    // Implicit fall through to test_string_types_or_contd@37                                     (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 |

test_string_types_or_contd@37:                                                                    (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 |
    // contains/contract.py:74-78
    // assert foo_string() not in (
    //     bar_arc4(),
    //     baz_string(),
    //     one_u64(),
    // ), "foo not in (bar, baz, 1)"
    f-load awst_tmp%8#0                                                                           (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 | awst_tmp%8#0
    f-load tmp%55#0                                                                               (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 | awst_tmp%8#0,tmp%55#0
    ==                                                                                            (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 | tmp%59#0
    bz test_string_types_bool_false@39                                                            (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 |
    // Implicit fall through to test_string_types_bool_true@38                                    (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 |

test_string_types_bool_true@38:                                                                   (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 |
    int 1                                                                                         (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 | or_result%8#0
    x-store or_result%8#0                                                                         (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 | (洧뎶) or_result%8#0 |
    b test_string_types_bool_merge@40                                                             (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 | (洧뎶) or_result%8#0 |

test_string_types_bool_false@39:                                                                  (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 |
    int 0                                                                                         (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 | or_result%8#0
    x-store or_result%8#0                                                                         (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 | (洧뎶) or_result%8#0 |
    // Implicit fall through to test_string_types_bool_merge@40                                   (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 | (洧뎶) or_result%8#0 |

test_string_types_bool_merge@40:                                                                  (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 | (洧뎶) or_result%8#0 |
    // contains/contract.py:74-78
    // assert foo_string() not in (
    //     bar_arc4(),
    //     baz_string(),
    //     one_u64(),
    // ), "foo not in (bar, baz, 1)"
    x-load or_result%8#0                                                                          (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 | or_result%8#0
    !                                                                                             (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 | tmp%60#0
    assert // foo not in (bar, baz, 1)                                                            (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 |
    // contains/contract.py:79
    // assert foo_arc4() not in (bar_arc4(), baz_string(), one_u64()), "foo not in (bar, baz, 1)"
    callsub foo_arc4                                                                              (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 | awst_tmp%9#0
    l-store-copy awst_tmp%9#0 0                                                                   (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 | awst_tmp%9#0,awst_tmp%9#0
    f-store awst_tmp%9#0                                                                          (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 | awst_tmp%9#0
    callsub bar_arc4                                                                              (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 | awst_tmp%9#0,tmp%61#0
    callsub baz_string                                                                            (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 | awst_tmp%9#0,tmp%61#0,tmp%62#0
    f-store tmp%62#0                                                                              (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 | awst_tmp%9#0,tmp%61#0
    callsub one_u64                                                                               (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 | awst_tmp%9#0,tmp%61#0,tmp%63#0
    pop 1                                                                                         (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 | awst_tmp%9#0,tmp%61#0
    l-load awst_tmp%9#0 1                                                                         (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 | tmp%61#0,awst_tmp%9#0
    l-load tmp%61#0 1                                                                             (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 | awst_tmp%9#0,tmp%61#0
    ==                                                                                            (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 | tmp%64#0
    bnz test_string_types_bool_true@42                                                            (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 |
    // Implicit fall through to test_string_types_or_contd@41                                     (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 |

test_string_types_or_contd@41:                                                                    (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 |
    // contains/contract.py:79
    // assert foo_arc4() not in (bar_arc4(), baz_string(), one_u64()), "foo not in (bar, baz, 1)"
    f-load awst_tmp%9#0                                                                           (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 | awst_tmp%9#0
    extract 2 0                                                                                   (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 | tmp%65#0
    f-load tmp%62#0                                                                               (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 | tmp%65#0,tmp%62#0
    ==                                                                                            (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 | tmp%66#0
    bz test_string_types_bool_false@43                                                            (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 |
    // Implicit fall through to test_string_types_bool_true@42                                    (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 |

test_string_types_bool_true@42:                                                                   (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 |
    int 1                                                                                         (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 | or_result%9#0
    x-store or_result%9#0                                                                         (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 | (洧뎶) or_result%9#0 |
    b test_string_types_bool_merge@44                                                             (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 | (洧뎶) or_result%9#0 |

test_string_types_bool_false@43:                                                                  (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 |
    int 0                                                                                         (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 | or_result%9#0
    x-store or_result%9#0                                                                         (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 | (洧뎶) or_result%9#0 |
    // Implicit fall through to test_string_types_bool_merge@44                                   (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 | (洧뎶) or_result%9#0 |

test_string_types_bool_merge@44:                                                                  (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 | (洧뎶) or_result%9#0 |
    // contains/contract.py:79
    // assert foo_arc4() not in (bar_arc4(), baz_string(), one_u64()), "foo not in (bar, baz, 1)"
    x-load or_result%9#0                                                                          (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 | or_result%9#0
    !                                                                                             (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 | tmp%67#0
    assert // foo not in (bar, baz, 1)                                                            (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 |
    // contains/contract.py:81
    // foo_string(),
    callsub foo_string                                                                            (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 | tmp%68#0
    pop 1                                                                                         (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 |
    // contains/contract.py:82
    // foo_arc4(),
    callsub foo_arc4                                                                              (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 | tmp%69#0
    pop 1                                                                                         (洧뎽) awst_tmp%1#0,awst_tmp%2#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,awst_tmp%8#0,awst_tmp%9#0,tmp%10#0,tmp%11#0,tmp%16#0,tmp%18#0,tmp%19#0,tmp%26#0,tmp%32#0,tmp%38#0,tmp%39#0,tmp%46#0,tmp%47#0,tmp%5#0,tmp%50#0,tmp%55#0,tmp%62#0,awst_tmp%0#0,tmp%1#0 |
    retsub


// test_cases.contains.contract.foo_string() -> bytes:
foo_string:
    // contains/contract.py:167-168
    // @subroutine
    // def foo_string() -> String:
    proto 0 1

foo_string_block@0:
    // contains/contract.py:169
    // return String("foo")
    byte "foo"                                                                                    "foo"
    retsub                                                                                        "foo"


// test_cases.contains.contract.baz_string() -> bytes:
baz_string:
    // contains/contract.py:187-188
    // @subroutine
    // def baz_string() -> String:
    proto 0 1

baz_string_block@0:
    // contains/contract.py:189
    // return String("baz")
    byte "baz"                                                                                    "baz"
    retsub                                                                                        "baz"


// test_cases.contains.contract.bar_string() -> bytes:
bar_string:
    // contains/contract.py:177-178
    // @subroutine
    // def bar_string() -> String:
    proto 0 1

bar_string_block@0:
    // contains/contract.py:179
    // return String("bar")
    byte "bar"                                                                                    "bar"
    retsub                                                                                        "bar"


// test_cases.contains.contract.foo_arc4() -> bytes:
foo_arc4:
    // contains/contract.py:172-173
    // @subroutine
    // def foo_arc4() -> arc4.String:
    proto 0 1

foo_arc4_block@0:
    // contains/contract.py:174
    // return arc4.String("foo")
    byte "\x00\x03foo"                                                                            "\x00\x03foo"
    retsub                                                                                        "\x00\x03foo"


// test_cases.contains.contract.bar_arc4() -> bytes:
bar_arc4:
    // contains/contract.py:182-183
    // @subroutine
    // def bar_arc4() -> arc4.String:
    proto 0 1

bar_arc4_block@0:
    // contains/contract.py:184
    // return arc4.String("bar")
    byte "\x00\x03bar"                                                                            "\x00\x03bar"
    retsub                                                                                        "\x00\x03bar"


// test_cases.contains.contract.one_u64() -> uint64:
one_u64:
    // contains/contract.py:137-138
    // @subroutine
    // def one_u64() -> UInt64:
    proto 0 1

one_u64_block@0:
    // contains/contract.py:139
    // return UInt64(1)
    int 1                                                                                         1
    retsub                                                                                        1


// test_cases.contains.contract.MyContract.test_numeric_types() -> void:
test_numeric_types:
    // contains/contract.py:86-87
    // @subroutine
    // def test_numeric_types(self) -> None:
    proto 0 0
    allocate 36 to stack                                                                          (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0 |

test_numeric_types_block@0:                                                                       (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0 |
    // contains/contract.py:88
    // assert one_u64() in (one_u64(), two_u64()), "1 in (1, 2)"
    callsub one_u64                                                                               (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0 | awst_tmp%0#0
    l-store-copy awst_tmp%0#0 0                                                                   (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0 | awst_tmp%0#0,awst_tmp%0#0
    f-store awst_tmp%0#0                                                                          (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0 | awst_tmp%0#0
    callsub one_u64                                                                               (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0 | awst_tmp%0#0,tmp%0#0
    callsub two_u64                                                                               (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0 | awst_tmp%0#0,tmp%0#0,tmp%1#0
    f-store tmp%1#0                                                                               (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | awst_tmp%0#0,tmp%0#0
    l-load awst_tmp%0#0 1                                                                         (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | tmp%0#0,awst_tmp%0#0
    l-load tmp%0#0 1                                                                              (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | awst_tmp%0#0,tmp%0#0
    ==                                                                                            (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | tmp%2#0
    bnz test_numeric_types_bool_true@2                                                            (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 |
    // Implicit fall through to test_numeric_types_or_contd@1                                     (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 |

test_numeric_types_or_contd@1:                                                                    (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 |
    // contains/contract.py:88
    // assert one_u64() in (one_u64(), two_u64()), "1 in (1, 2)"
    f-load awst_tmp%0#0                                                                           (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | awst_tmp%0#0
    f-load tmp%1#0                                                                                (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | awst_tmp%0#0,tmp%1#0
    ==                                                                                            (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | tmp%3#0
    bz test_numeric_types_bool_false@3                                                            (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 |
    // Implicit fall through to test_numeric_types_bool_true@2                                    (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 |

test_numeric_types_bool_true@2:                                                                   (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 |
    int 1                                                                                         (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | or_result%0#0
    x-store or_result%0#0                                                                         (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | (洧뎶) or_result%0#0 |
    b test_numeric_types_bool_merge@4                                                             (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | (洧뎶) or_result%0#0 |

test_numeric_types_bool_false@3:                                                                  (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 |
    int 0                                                                                         (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | or_result%0#0
    x-store or_result%0#0                                                                         (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | (洧뎶) or_result%0#0 |
    // Implicit fall through to test_numeric_types_bool_merge@4                                   (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | (洧뎶) or_result%0#0 |

test_numeric_types_bool_merge@4:                                                                  (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | (洧뎶) or_result%0#0 |
    // contains/contract.py:88
    // assert one_u64() in (one_u64(), two_u64()), "1 in (1, 2)"
    x-load or_result%0#0                                                                          (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | or_result%0#0
    assert // 1 in (1, 2)                                                                         (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 |
    // contains/contract.py:89
    // assert one_u64() not in (UInt64(3), two_u64()), "1 not in (3, 2)"
    callsub one_u64                                                                               (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | awst_tmp%1#0
    l-store-copy awst_tmp%1#0 0                                                                   (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | awst_tmp%1#0,awst_tmp%1#0
    f-store awst_tmp%1#0                                                                          (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | awst_tmp%1#0
    callsub two_u64                                                                               (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | awst_tmp%1#0,tmp%4#0
    f-store tmp%4#0                                                                               (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | awst_tmp%1#0
    l-load awst_tmp%1#0 0                                                                         (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | awst_tmp%1#0
    int 3                                                                                         (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | awst_tmp%1#0,3
    ==                                                                                            (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | tmp%5#0
    bnz test_numeric_types_bool_true@6                                                            (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 |
    // Implicit fall through to test_numeric_types_or_contd@5                                     (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 |

test_numeric_types_or_contd@5:                                                                    (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 |
    // contains/contract.py:89
    // assert one_u64() not in (UInt64(3), two_u64()), "1 not in (3, 2)"
    f-load awst_tmp%1#0                                                                           (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | awst_tmp%1#0
    f-load tmp%4#0                                                                                (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | awst_tmp%1#0,tmp%4#0
    ==                                                                                            (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | tmp%6#0
    bz test_numeric_types_bool_false@7                                                            (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 |
    // Implicit fall through to test_numeric_types_bool_true@6                                    (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 |

test_numeric_types_bool_true@6:                                                                   (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 |
    int 1                                                                                         (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | or_result%1#0
    x-store or_result%1#0                                                                         (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | (洧뎶) or_result%1#0 |
    b test_numeric_types_bool_merge@8                                                             (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | (洧뎶) or_result%1#0 |

test_numeric_types_bool_false@7:                                                                  (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 |
    int 0                                                                                         (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | or_result%1#0
    x-store or_result%1#0                                                                         (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | (洧뎶) or_result%1#0 |
    // Implicit fall through to test_numeric_types_bool_merge@8                                   (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | (洧뎶) or_result%1#0 |

test_numeric_types_bool_merge@8:                                                                  (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | (洧뎶) or_result%1#0 |
    // contains/contract.py:89
    // assert one_u64() not in (UInt64(3), two_u64()), "1 not in (3, 2)"
    x-load or_result%1#0                                                                          (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | or_result%1#0
    !                                                                                             (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | tmp%7#0
    assert // 1 not in (3, 2)                                                                     (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 |
    // contains/contract.py:91
    // assert one_u64() in (one_u64(), UInt64(3), two_u8()), "1 in (1, 3, 2)"
    callsub one_u64                                                                               (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | awst_tmp%2#0
    l-store-copy awst_tmp%2#0 0                                                                   (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | awst_tmp%2#0,awst_tmp%2#0
    f-store awst_tmp%2#0                                                                          (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | awst_tmp%2#0
    callsub one_u64                                                                               (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | awst_tmp%2#0,tmp%8#0
    callsub two_u8                                                                                (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | awst_tmp%2#0,tmp%8#0,tmp%9#0
    f-store tmp%9#0                                                                               (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | awst_tmp%2#0,tmp%8#0
    l-load awst_tmp%2#0 1                                                                         (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | tmp%8#0,awst_tmp%2#0
    l-load tmp%8#0 1                                                                              (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | awst_tmp%2#0,tmp%8#0
    ==                                                                                            (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | tmp%10#0
    bnz test_numeric_types_bool_true@11                                                           (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 |
    // Implicit fall through to test_numeric_types_or_contd@9                                     (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 |

test_numeric_types_or_contd@9:                                                                    (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 |
    // contains/contract.py:91
    // assert one_u64() in (one_u64(), UInt64(3), two_u8()), "1 in (1, 3, 2)"
    f-load awst_tmp%2#0                                                                           (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | awst_tmp%2#0
    int 3                                                                                         (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | awst_tmp%2#0,3
    ==                                                                                            (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | tmp%11#0
    bnz test_numeric_types_bool_true@11                                                           (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 |
    // Implicit fall through to test_numeric_types_or_contd@10                                    (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 |

test_numeric_types_or_contd@10:                                                                   (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 |
    // contains/contract.py:91
    // assert one_u64() in (one_u64(), UInt64(3), two_u8()), "1 in (1, 3, 2)"
    f-load awst_tmp%2#0                                                                           (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | awst_tmp%2#0
    itob                                                                                          (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | tmp%12#0
    f-load tmp%9#0                                                                                (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | tmp%12#0,tmp%9#0
    l-load tmp%12#0 1                                                                             (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | tmp%9#0,tmp%12#0
    b==                                                                                           (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | tmp%13#0
    bz test_numeric_types_bool_false@12                                                           (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 |
    // Implicit fall through to test_numeric_types_bool_true@11                                   (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 |

test_numeric_types_bool_true@11:                                                                  (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 |
    int 1                                                                                         (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | or_result%2#0
    x-store or_result%2#0                                                                         (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | (洧뎶) or_result%2#0 |
    b test_numeric_types_bool_merge@13                                                            (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | (洧뎶) or_result%2#0 |

test_numeric_types_bool_false@12:                                                                 (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 |
    int 0                                                                                         (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | or_result%2#0
    x-store or_result%2#0                                                                         (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | (洧뎶) or_result%2#0 |
    // Implicit fall through to test_numeric_types_bool_merge@13                                  (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | (洧뎶) or_result%2#0 |

test_numeric_types_bool_merge@13:                                                                 (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | (洧뎶) or_result%2#0 |
    // contains/contract.py:91
    // assert one_u64() in (one_u64(), UInt64(3), two_u8()), "1 in (1, 3, 2)"
    x-load or_result%2#0                                                                          (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | or_result%2#0
    assert // 1 in (1, 3, 2)                                                                      (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 |
    // contains/contract.py:92
    // assert one_u64() in (one_arc4u64(), UInt64(4), two_u8()), "1 in (1, 4, 2)"
    callsub one_arc4u64                                                                           (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | tmp%14#0
    callsub two_u8                                                                                (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | tmp%14#0,tmp%15#0
    f-store tmp%15#0                                                                              (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | tmp%14#0
    callsub one_u64                                                                               (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | tmp%14#0,awst_tmp%3#0
    l-store-copy awst_tmp%3#0 0                                                                   (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | tmp%14#0,awst_tmp%3#0,awst_tmp%3#0
    f-store awst_tmp%3#0                                                                          (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | tmp%14#0,awst_tmp%3#0
    l-load awst_tmp%3#0 0                                                                         (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | tmp%14#0,awst_tmp%3#0
    itob                                                                                          (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | tmp%14#0,tmp%16#0
    l-store-copy tmp%16#0 0                                                                       (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | tmp%14#0,tmp%16#0,tmp%16#0
    f-store tmp%16#0                                                                              (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | tmp%14#0,tmp%16#0
    l-load tmp%14#0 1                                                                             (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | tmp%16#0,tmp%14#0
    l-load tmp%16#0 1                                                                             (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | tmp%14#0,tmp%16#0
    b==                                                                                           (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | tmp%17#0
    bnz test_numeric_types_bool_true@16                                                           (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 |
    // Implicit fall through to test_numeric_types_or_contd@14                                    (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 |

test_numeric_types_or_contd@14:                                                                   (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 |
    // contains/contract.py:92
    // assert one_u64() in (one_arc4u64(), UInt64(4), two_u8()), "1 in (1, 4, 2)"
    f-load awst_tmp%3#0                                                                           (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | awst_tmp%3#0
    int 4                                                                                         (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | awst_tmp%3#0,4
    ==                                                                                            (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | tmp%18#0
    bnz test_numeric_types_bool_true@16                                                           (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 |
    // Implicit fall through to test_numeric_types_or_contd@15                                    (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 |

test_numeric_types_or_contd@15:                                                                   (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 |
    // contains/contract.py:92
    // assert one_u64() in (one_arc4u64(), UInt64(4), two_u8()), "1 in (1, 4, 2)"
    f-load tmp%15#0                                                                               (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | tmp%15#0
    f-load tmp%16#0                                                                               (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | tmp%15#0,tmp%16#0
    b==                                                                                           (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | tmp%20#0
    bz test_numeric_types_bool_false@17                                                           (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 |
    // Implicit fall through to test_numeric_types_bool_true@16                                   (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 |

test_numeric_types_bool_true@16:                                                                  (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 |
    int 1                                                                                         (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | or_result%3#0
    x-store or_result%3#0                                                                         (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | (洧뎶) or_result%3#0 |
    b test_numeric_types_bool_merge@18                                                            (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | (洧뎶) or_result%3#0 |

test_numeric_types_bool_false@17:                                                                 (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 |
    int 0                                                                                         (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | or_result%3#0
    x-store or_result%3#0                                                                         (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | (洧뎶) or_result%3#0 |
    // Implicit fall through to test_numeric_types_bool_merge@18                                  (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | (洧뎶) or_result%3#0 |

test_numeric_types_bool_merge@18:                                                                 (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | (洧뎶) or_result%3#0 |
    // contains/contract.py:92
    // assert one_u64() in (one_arc4u64(), UInt64(4), two_u8()), "1 in (1, 4, 2)"
    x-load or_result%3#0                                                                          (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | or_result%3#0
    assert // 1 in (1, 4, 2)                                                                      (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 |
    // contains/contract.py:93
    // assert UInt64(2) in (one_arc4u64(), UInt64(3), two_u8()), "2 in (1, 3, 2)"
    callsub one_arc4u64                                                                           (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | tmp%21#0
    callsub two_u8                                                                                (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | tmp%21#0,tmp%22#0
    f-store tmp%22#0                                                                              (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | tmp%21#0
    int 2                                                                                         (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | tmp%21#0,2
    itob                                                                                          (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | tmp%21#0,tmp%23#0
    l-store-copy tmp%23#0 0                                                                       (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | tmp%21#0,tmp%23#0,tmp%23#0
    f-store tmp%23#0                                                                              (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | tmp%21#0,tmp%23#0
    l-load tmp%21#0 1                                                                             (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | tmp%23#0,tmp%21#0
    l-load tmp%23#0 1                                                                             (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | tmp%21#0,tmp%23#0
    b==                                                                                           (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | tmp%24#0
    bnz test_numeric_types_bool_true@21                                                           (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 |
    // Implicit fall through to test_numeric_types_or_contd@19                                    (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 |

test_numeric_types_or_contd@19:                                                                   (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 |
    // contains/contract.py:93
    // assert UInt64(2) in (one_arc4u64(), UInt64(3), two_u8()), "2 in (1, 3, 2)"
    f-load tmp%22#0                                                                               (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | tmp%22#0
    f-load tmp%23#0                                                                               (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | tmp%22#0,tmp%23#0
    b==                                                                                           (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | tmp%27#0
    bz test_numeric_types_bool_false@22                                                           (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 |
    // Implicit fall through to test_numeric_types_bool_true@21                                   (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 |

test_numeric_types_bool_true@21:                                                                  (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 |
    int 1                                                                                         (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | or_result%4#0
    x-store or_result%4#0                                                                         (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | (洧뎶) or_result%4#0 |
    b test_numeric_types_bool_merge@23                                                            (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | (洧뎶) or_result%4#0 |

test_numeric_types_bool_false@22:                                                                 (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 |
    int 0                                                                                         (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | or_result%4#0
    x-store or_result%4#0                                                                         (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | (洧뎶) or_result%4#0 |
    // Implicit fall through to test_numeric_types_bool_merge@23                                  (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | (洧뎶) or_result%4#0 |

test_numeric_types_bool_merge@23:                                                                 (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | (洧뎶) or_result%4#0 |
    // contains/contract.py:93
    // assert UInt64(2) in (one_arc4u64(), UInt64(3), two_u8()), "2 in (1, 3, 2)"
    x-load or_result%4#0                                                                          (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | or_result%4#0
    assert // 2 in (1, 3, 2)                                                                      (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 |
    // contains/contract.py:94
    // assert two_u8() in (one_arc4u64(), UInt64(3), two_u8()), "2 in (1, 3, 2)"
    callsub two_u8                                                                                (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | awst_tmp%4#0
    l-store-copy awst_tmp%4#0 0                                                                   (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | awst_tmp%4#0,awst_tmp%4#0
    f-store awst_tmp%4#0                                                                          (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | awst_tmp%4#0
    callsub one_arc4u64                                                                           (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | awst_tmp%4#0,tmp%28#0
    callsub two_u8                                                                                (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | awst_tmp%4#0,tmp%28#0,tmp%29#0
    f-store tmp%29#0                                                                              (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | awst_tmp%4#0,tmp%28#0
    l-load awst_tmp%4#0 1                                                                         (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | tmp%28#0,awst_tmp%4#0
    l-load tmp%28#0 1                                                                             (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | awst_tmp%4#0,tmp%28#0
    b==                                                                                           (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | tmp%30#0
    bnz test_numeric_types_bool_true@26                                                           (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 |
    // Implicit fall through to test_numeric_types_or_contd@24                                    (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 |

test_numeric_types_or_contd@24:                                                                   (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 |
    // contains/contract.py:94
    // assert two_u8() in (one_arc4u64(), UInt64(3), two_u8()), "2 in (1, 3, 2)"
    int 3                                                                                         (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | 3
    itob                                                                                          (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | tmp%31#0
    f-load awst_tmp%4#0                                                                           (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | tmp%31#0,awst_tmp%4#0
    l-load tmp%31#0 1                                                                             (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | awst_tmp%4#0,tmp%31#0
    b==                                                                                           (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | tmp%32#0
    bnz test_numeric_types_bool_true@26                                                           (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 |
    // Implicit fall through to test_numeric_types_or_contd@25                                    (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 |

test_numeric_types_or_contd@25:                                                                   (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 |
    // contains/contract.py:94
    // assert two_u8() in (one_arc4u64(), UInt64(3), two_u8()), "2 in (1, 3, 2)"
    f-load awst_tmp%4#0                                                                           (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | awst_tmp%4#0
    f-load tmp%29#0                                                                               (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | awst_tmp%4#0,tmp%29#0
    b==                                                                                           (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | tmp%33#0
    bz test_numeric_types_bool_false@27                                                           (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 |
    // Implicit fall through to test_numeric_types_bool_true@26                                   (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 |

test_numeric_types_bool_true@26:                                                                  (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 |
    int 1                                                                                         (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | or_result%5#0
    x-store or_result%5#0                                                                         (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | (洧뎶) or_result%5#0 |
    b test_numeric_types_bool_merge@28                                                            (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | (洧뎶) or_result%5#0 |

test_numeric_types_bool_false@27:                                                                 (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 |
    int 0                                                                                         (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | or_result%5#0
    x-store or_result%5#0                                                                         (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | (洧뎶) or_result%5#0 |
    // Implicit fall through to test_numeric_types_bool_merge@28                                  (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | (洧뎶) or_result%5#0 |

test_numeric_types_bool_merge@28:                                                                 (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | (洧뎶) or_result%5#0 |
    // contains/contract.py:94
    // assert two_u8() in (one_arc4u64(), UInt64(3), two_u8()), "2 in (1, 3, 2)"
    x-load or_result%5#0                                                                          (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | or_result%5#0
    assert // 2 in (1, 3, 2)                                                                      (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 |
    // contains/contract.py:95
    // assert two_u8() in (one_arc4u64(), UInt64(2), UInt64(3)), "2 in (1, 2, 3)"
    callsub two_u8                                                                                (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | awst_tmp%5#0
    l-store-copy awst_tmp%5#0 0                                                                   (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | awst_tmp%5#0,awst_tmp%5#0
    f-store awst_tmp%5#0                                                                          (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | awst_tmp%5#0
    callsub one_arc4u64                                                                           (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | awst_tmp%5#0,tmp%34#0
    l-load awst_tmp%5#0 1                                                                         (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | tmp%34#0,awst_tmp%5#0
    l-load tmp%34#0 1                                                                             (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | awst_tmp%5#0,tmp%34#0
    b==                                                                                           (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | tmp%35#0
    bnz test_numeric_types_bool_true@31                                                           (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 |
    // Implicit fall through to test_numeric_types_or_contd@29                                    (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 |

test_numeric_types_or_contd@29:                                                                   (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 |
    // contains/contract.py:95
    // assert two_u8() in (one_arc4u64(), UInt64(2), UInt64(3)), "2 in (1, 2, 3)"
    f-load awst_tmp%5#0                                                                           (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | awst_tmp%5#0
    f-load tmp%23#0                                                                               (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | awst_tmp%5#0,tmp%23#0
    b==                                                                                           (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | tmp%37#0
    bnz test_numeric_types_bool_true@31                                                           (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 |
    // Implicit fall through to test_numeric_types_or_contd@30                                    (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 |

test_numeric_types_or_contd@30:                                                                   (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 |
    // contains/contract.py:95
    // assert two_u8() in (one_arc4u64(), UInt64(2), UInt64(3)), "2 in (1, 2, 3)"
    int 3                                                                                         (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | 3
    itob                                                                                          (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | tmp%38#0
    f-load awst_tmp%5#0                                                                           (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | tmp%38#0,awst_tmp%5#0
    l-load tmp%38#0 1                                                                             (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | awst_tmp%5#0,tmp%38#0
    b==                                                                                           (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | tmp%39#0
    bz test_numeric_types_bool_false@32                                                           (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 |
    // Implicit fall through to test_numeric_types_bool_true@31                                   (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 |

test_numeric_types_bool_true@31:                                                                  (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 |
    int 1                                                                                         (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | or_result%6#0
    x-store or_result%6#0                                                                         (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | (洧뎶) or_result%6#0 |
    b test_numeric_types_bool_merge@33                                                            (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | (洧뎶) or_result%6#0 |

test_numeric_types_bool_false@32:                                                                 (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 |
    int 0                                                                                         (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | or_result%6#0
    x-store or_result%6#0                                                                         (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | (洧뎶) or_result%6#0 |
    // Implicit fall through to test_numeric_types_bool_merge@33                                  (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | (洧뎶) or_result%6#0 |

test_numeric_types_bool_merge@33:                                                                 (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | (洧뎶) or_result%6#0 |
    // contains/contract.py:95
    // assert two_u8() in (one_arc4u64(), UInt64(2), UInt64(3)), "2 in (1, 2, 3)"
    x-load or_result%6#0                                                                          (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | or_result%6#0
    assert // 2 in (1, 2, 3)                                                                      (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 |
    // contains/contract.py:96
    // assert three_u512() in (UInt64(3), UInt64(4)), "3 in (3, 4)"
    callsub three_u512                                                                            (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | awst_tmp%6#0
    l-store-copy awst_tmp%6#0 0                                                                   (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | awst_tmp%6#0,awst_tmp%6#0
    f-store awst_tmp%6#0                                                                          (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | awst_tmp%6#0
    int 3                                                                                         (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | awst_tmp%6#0,3
    itob                                                                                          (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | awst_tmp%6#0,tmp%40#0
    l-store-copy tmp%40#0 0                                                                       (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | awst_tmp%6#0,tmp%40#0,tmp%40#0
    f-store tmp%40#0                                                                              (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | awst_tmp%6#0,tmp%40#0
    l-load awst_tmp%6#0 1                                                                         (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | tmp%40#0,awst_tmp%6#0
    l-load tmp%40#0 1                                                                             (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | awst_tmp%6#0,tmp%40#0
    b==                                                                                           (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | tmp%41#0
    bnz test_numeric_types_bool_true@35                                                           (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 |
    // Implicit fall through to test_numeric_types_or_contd@34                                    (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 |

test_numeric_types_or_contd@34:                                                                   (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 |
    // contains/contract.py:96
    // assert three_u512() in (UInt64(3), UInt64(4)), "3 in (3, 4)"
    int 4                                                                                         (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | 4
    itob                                                                                          (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | tmp%42#0
    f-load awst_tmp%6#0                                                                           (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | tmp%42#0,awst_tmp%6#0
    l-load tmp%42#0 1                                                                             (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | awst_tmp%6#0,tmp%42#0
    b==                                                                                           (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | tmp%43#0
    bz test_numeric_types_bool_false@36                                                           (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 |
    // Implicit fall through to test_numeric_types_bool_true@35                                   (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 |

test_numeric_types_bool_true@35:                                                                  (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 |
    int 1                                                                                         (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | or_result%7#0
    x-store or_result%7#0                                                                         (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | (洧뎶) or_result%7#0 |
    b test_numeric_types_bool_merge@37                                                            (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | (洧뎶) or_result%7#0 |

test_numeric_types_bool_false@36:                                                                 (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 |
    int 0                                                                                         (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | or_result%7#0
    x-store or_result%7#0                                                                         (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | (洧뎶) or_result%7#0 |
    // Implicit fall through to test_numeric_types_bool_merge@37                                  (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | (洧뎶) or_result%7#0 |

test_numeric_types_bool_merge@37:                                                                 (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | (洧뎶) or_result%7#0 |
    // contains/contract.py:96
    // assert three_u512() in (UInt64(3), UInt64(4)), "3 in (3, 4)"
    x-load or_result%7#0                                                                          (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | or_result%7#0
    assert // 3 in (3, 4)                                                                         (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 |
    // contains/contract.py:97
    // assert four_biguint() in (UInt64(5), UInt64(4)), "4 in (5, 4)"
    callsub four_biguint                                                                          (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | awst_tmp%7#0
    l-store-copy awst_tmp%7#0 0                                                                   (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | awst_tmp%7#0,awst_tmp%7#0
    f-store awst_tmp%7#0                                                                          (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | awst_tmp%7#0
    int 5                                                                                         (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | awst_tmp%7#0,5
    itob                                                                                          (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | awst_tmp%7#0,tmp%44#0
    l-store-copy tmp%44#0 0                                                                       (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | awst_tmp%7#0,tmp%44#0,tmp%44#0
    f-store tmp%44#0                                                                              (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | awst_tmp%7#0,tmp%44#0
    l-load awst_tmp%7#0 1                                                                         (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | tmp%44#0,awst_tmp%7#0
    l-load tmp%44#0 1                                                                             (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | awst_tmp%7#0,tmp%44#0
    b==                                                                                           (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | tmp%45#0
    bnz test_numeric_types_bool_true@39                                                           (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 |
    // Implicit fall through to test_numeric_types_or_contd@38                                    (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 |

test_numeric_types_or_contd@38:                                                                   (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 |
    // contains/contract.py:97
    // assert four_biguint() in (UInt64(5), UInt64(4)), "4 in (5, 4)"
    int 4                                                                                         (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | 4
    itob                                                                                          (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | tmp%46#0
    f-load awst_tmp%7#0                                                                           (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | tmp%46#0,awst_tmp%7#0
    l-load tmp%46#0 1                                                                             (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | awst_tmp%7#0,tmp%46#0
    b==                                                                                           (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | tmp%47#0
    bz test_numeric_types_bool_false@40                                                           (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 |
    // Implicit fall through to test_numeric_types_bool_true@39                                   (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 |

test_numeric_types_bool_true@39:                                                                  (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 |
    int 1                                                                                         (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | or_result%8#0
    x-store or_result%8#0                                                                         (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | (洧뎶) or_result%8#0 |
    b test_numeric_types_bool_merge@41                                                            (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | (洧뎶) or_result%8#0 |

test_numeric_types_bool_false@40:                                                                 (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 |
    int 0                                                                                         (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | or_result%8#0
    x-store or_result%8#0                                                                         (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | (洧뎶) or_result%8#0 |
    // Implicit fall through to test_numeric_types_bool_merge@41                                  (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | (洧뎶) or_result%8#0 |

test_numeric_types_bool_merge@41:                                                                 (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | (洧뎶) or_result%8#0 |
    // contains/contract.py:97
    // assert four_biguint() in (UInt64(5), UInt64(4)), "4 in (5, 4)"
    x-load or_result%8#0                                                                          (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | or_result%8#0
    assert // 4 in (5, 4)                                                                         (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 |
    // contains/contract.py:99
    // assert one_u64() not in (UInt64(5), two_u8()), "1 not in (5, 2)"
    callsub one_u64                                                                               (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | awst_tmp%8#0
    l-store-copy awst_tmp%8#0 0                                                                   (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | awst_tmp%8#0,awst_tmp%8#0
    f-store awst_tmp%8#0                                                                          (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | awst_tmp%8#0
    callsub two_u8                                                                                (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | awst_tmp%8#0,tmp%48#0
    f-store tmp%48#0                                                                              (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | awst_tmp%8#0
    l-load awst_tmp%8#0 0                                                                         (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | awst_tmp%8#0
    int 5                                                                                         (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | awst_tmp%8#0,5
    ==                                                                                            (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | tmp%49#0
    bnz test_numeric_types_bool_true@43                                                           (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 |
    // Implicit fall through to test_numeric_types_or_contd@42                                    (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 |

test_numeric_types_or_contd@42:                                                                   (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 |
    // contains/contract.py:99
    // assert one_u64() not in (UInt64(5), two_u8()), "1 not in (5, 2)"
    f-load awst_tmp%8#0                                                                           (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | awst_tmp%8#0
    itob                                                                                          (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | tmp%50#0
    f-load tmp%48#0                                                                               (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | tmp%50#0,tmp%48#0
    l-load tmp%50#0 1                                                                             (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | tmp%48#0,tmp%50#0
    b==                                                                                           (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | tmp%51#0
    bz test_numeric_types_bool_false@44                                                           (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 |
    // Implicit fall through to test_numeric_types_bool_true@43                                   (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 |

test_numeric_types_bool_true@43:                                                                  (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 |
    int 1                                                                                         (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | or_result%9#0
    x-store or_result%9#0                                                                         (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | (洧뎶) or_result%9#0 |
    b test_numeric_types_bool_merge@45                                                            (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | (洧뎶) or_result%9#0 |

test_numeric_types_bool_false@44:                                                                 (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 |
    int 0                                                                                         (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | or_result%9#0
    x-store or_result%9#0                                                                         (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | (洧뎶) or_result%9#0 |
    // Implicit fall through to test_numeric_types_bool_merge@45                                  (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | (洧뎶) or_result%9#0 |

test_numeric_types_bool_merge@45:                                                                 (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | (洧뎶) or_result%9#0 |
    // contains/contract.py:99
    // assert one_u64() not in (UInt64(5), two_u8()), "1 not in (5, 2)"
    x-load or_result%9#0                                                                          (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | or_result%9#0
    !                                                                                             (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | tmp%52#0
    assert // 1 not in (5, 2)                                                                     (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 |
    // contains/contract.py:100
    // assert one_u64() not in (Application(1), UInt64(3), two_u8()), "1 not in (app(1), 3, 2)"
    callsub one_u64                                                                               (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | awst_tmp%9#0
    l-store-copy awst_tmp%9#0 0                                                                   (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | awst_tmp%9#0,awst_tmp%9#0
    f-store awst_tmp%9#0                                                                          (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | awst_tmp%9#0
    callsub two_u8                                                                                (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | awst_tmp%9#0,tmp%53#0
    f-store tmp%53#0                                                                              (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | awst_tmp%9#0
    l-load awst_tmp%9#0 0                                                                         (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | awst_tmp%9#0
    int 3                                                                                         (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | awst_tmp%9#0,3
    ==                                                                                            (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | tmp%54#0
    bnz test_numeric_types_bool_true@47                                                           (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 |
    // Implicit fall through to test_numeric_types_or_contd@46                                    (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 |

test_numeric_types_or_contd@46:                                                                   (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 |
    // contains/contract.py:100
    // assert one_u64() not in (Application(1), UInt64(3), two_u8()), "1 not in (app(1), 3, 2)"
    f-load awst_tmp%9#0                                                                           (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | awst_tmp%9#0
    itob                                                                                          (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | tmp%55#0
    f-load tmp%53#0                                                                               (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | tmp%55#0,tmp%53#0
    l-load tmp%55#0 1                                                                             (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | tmp%53#0,tmp%55#0
    b==                                                                                           (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | tmp%56#0
    bz test_numeric_types_bool_false@48                                                           (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 |
    // Implicit fall through to test_numeric_types_bool_true@47                                   (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 |

test_numeric_types_bool_true@47:                                                                  (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 |
    int 1                                                                                         (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | or_result%10#0
    x-store or_result%10#0                                                                        (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | (洧뎶) or_result%10#0 |
    b test_numeric_types_bool_merge@49                                                            (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | (洧뎶) or_result%10#0 |

test_numeric_types_bool_false@48:                                                                 (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 |
    int 0                                                                                         (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | or_result%10#0
    x-store or_result%10#0                                                                        (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | (洧뎶) or_result%10#0 |
    // Implicit fall through to test_numeric_types_bool_merge@49                                  (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | (洧뎶) or_result%10#0 |

test_numeric_types_bool_merge@49:                                                                 (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | (洧뎶) or_result%10#0 |
    // contains/contract.py:100
    // assert one_u64() not in (Application(1), UInt64(3), two_u8()), "1 not in (app(1), 3, 2)"
    x-load or_result%10#0                                                                         (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | or_result%10#0
    !                                                                                             (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | tmp%57#0
    assert // 1 not in (app(1), 3, 2)                                                             (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 |
    // contains/contract.py:101
    // assert one_u64() not in (UInt64(3), two_u8()), "1 not in (3, 2)"
    callsub one_u64                                                                               (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | awst_tmp%10#0
    l-store-copy awst_tmp%10#0 0                                                                  (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | awst_tmp%10#0,awst_tmp%10#0
    f-store awst_tmp%10#0                                                                         (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | awst_tmp%10#0
    callsub two_u8                                                                                (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | awst_tmp%10#0,tmp%58#0
    f-store tmp%58#0                                                                              (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | awst_tmp%10#0
    l-load awst_tmp%10#0 0                                                                        (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | awst_tmp%10#0
    int 3                                                                                         (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | awst_tmp%10#0,3
    ==                                                                                            (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | tmp%59#0
    bnz test_numeric_types_bool_true@51                                                           (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 |
    // Implicit fall through to test_numeric_types_or_contd@50                                    (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 |

test_numeric_types_or_contd@50:                                                                   (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 |
    // contains/contract.py:101
    // assert one_u64() not in (UInt64(3), two_u8()), "1 not in (3, 2)"
    f-load awst_tmp%10#0                                                                          (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | awst_tmp%10#0
    itob                                                                                          (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | tmp%60#0
    f-load tmp%58#0                                                                               (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | tmp%60#0,tmp%58#0
    l-load tmp%60#0 1                                                                             (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | tmp%58#0,tmp%60#0
    b==                                                                                           (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | tmp%61#0
    bz test_numeric_types_bool_false@52                                                           (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 |
    // Implicit fall through to test_numeric_types_bool_true@51                                   (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 |

test_numeric_types_bool_true@51:                                                                  (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 |
    int 1                                                                                         (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | or_result%11#0
    x-store or_result%11#0                                                                        (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | (洧뎶) or_result%11#0 |
    b test_numeric_types_bool_merge@53                                                            (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | (洧뎶) or_result%11#0 |

test_numeric_types_bool_false@52:                                                                 (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 |
    int 0                                                                                         (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | or_result%11#0
    x-store or_result%11#0                                                                        (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | (洧뎶) or_result%11#0 |
    // Implicit fall through to test_numeric_types_bool_merge@53                                  (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | (洧뎶) or_result%11#0 |

test_numeric_types_bool_merge@53:                                                                 (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | (洧뎶) or_result%11#0 |
    // contains/contract.py:101
    // assert one_u64() not in (UInt64(3), two_u8()), "1 not in (3, 2)"
    x-load or_result%11#0                                                                         (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | or_result%11#0
    !                                                                                             (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | tmp%62#0
    assert // 1 not in (3, 2)                                                                     (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 |
    // contains/contract.py:102
    // assert UInt64(2) not in (one_arc4u64(), UInt64(3)), "2 not in (1, 3)"
    callsub one_arc4u64                                                                           (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | tmp%63#0
    f-load tmp%23#0                                                                               (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | tmp%63#0,tmp%23#0
    b==                                                                                           (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | tmp%65#0
    bnz test_numeric_types_bool_true@55                                                           (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 |
    // Implicit fall through to test_numeric_types_or_contd@54                                    (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 |

test_numeric_types_or_contd@54:                                                                   (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 |
    int 0                                                                                         (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | or_result%12#0
    x-store or_result%12#0                                                                        (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | (洧뎶) or_result%12#0 |
    b test_numeric_types_bool_merge@57                                                            (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | (洧뎶) or_result%12#0 |

test_numeric_types_bool_true@55:                                                                  (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 |
    int 1                                                                                         (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | or_result%12#0
    x-store or_result%12#0                                                                        (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | (洧뎶) or_result%12#0 |
    // Implicit fall through to test_numeric_types_bool_merge@57                                  (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | (洧뎶) or_result%12#0 |

test_numeric_types_bool_merge@57:                                                                 (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | (洧뎶) or_result%12#0 |
    // contains/contract.py:102
    // assert UInt64(2) not in (one_arc4u64(), UInt64(3)), "2 not in (1, 3)"
    x-load or_result%12#0                                                                         (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | or_result%12#0
    !                                                                                             (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | tmp%67#0
    assert // 2 not in (1, 3)                                                                     (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 |
    // contains/contract.py:103
    // assert two_u8() not in (one_arc4u64(), UInt64(3)), "2 not in (1, 3)"
    callsub two_u8                                                                                (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | awst_tmp%11#0
    l-store-copy awst_tmp%11#0 0                                                                  (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | awst_tmp%11#0,awst_tmp%11#0
    f-store awst_tmp%11#0                                                                         (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | awst_tmp%11#0
    callsub one_arc4u64                                                                           (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | awst_tmp%11#0,tmp%68#0
    l-load awst_tmp%11#0 1                                                                        (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | tmp%68#0,awst_tmp%11#0
    l-load tmp%68#0 1                                                                             (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | awst_tmp%11#0,tmp%68#0
    b==                                                                                           (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | tmp%69#0
    bnz test_numeric_types_bool_true@59                                                           (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 |
    // Implicit fall through to test_numeric_types_or_contd@58                                    (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 |

test_numeric_types_or_contd@58:                                                                   (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 |
    // contains/contract.py:103
    // assert two_u8() not in (one_arc4u64(), UInt64(3)), "2 not in (1, 3)"
    f-load awst_tmp%11#0                                                                          (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | awst_tmp%11#0
    f-load tmp%40#0                                                                               (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | awst_tmp%11#0,tmp%40#0
    b==                                                                                           (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | tmp%71#0
    bz test_numeric_types_bool_false@60                                                           (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 |
    // Implicit fall through to test_numeric_types_bool_true@59                                   (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 |

test_numeric_types_bool_true@59:                                                                  (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 |
    int 1                                                                                         (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | or_result%13#0
    x-store or_result%13#0                                                                        (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | (洧뎶) or_result%13#0 |
    b test_numeric_types_bool_merge@61                                                            (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | (洧뎶) or_result%13#0 |

test_numeric_types_bool_false@60:                                                                 (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 |
    int 0                                                                                         (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | or_result%13#0
    x-store or_result%13#0                                                                        (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | (洧뎶) or_result%13#0 |
    // Implicit fall through to test_numeric_types_bool_merge@61                                  (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | (洧뎶) or_result%13#0 |

test_numeric_types_bool_merge@61:                                                                 (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | (洧뎶) or_result%13#0 |
    // contains/contract.py:103
    // assert two_u8() not in (one_arc4u64(), UInt64(3)), "2 not in (1, 3)"
    x-load or_result%13#0                                                                         (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | or_result%13#0
    !                                                                                             (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | tmp%72#0
    assert // 2 not in (1, 3)                                                                     (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 |
    // contains/contract.py:104
    // assert two_u8() not in (one_arc4u64(), UInt64(3)), "2 not in (1, 3)"
    callsub two_u8                                                                                (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | awst_tmp%12#0
    l-store-copy awst_tmp%12#0 0                                                                  (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | awst_tmp%12#0,awst_tmp%12#0
    f-store awst_tmp%12#0                                                                         (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | awst_tmp%12#0
    callsub one_arc4u64                                                                           (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | awst_tmp%12#0,tmp%73#0
    l-load awst_tmp%12#0 1                                                                        (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | tmp%73#0,awst_tmp%12#0
    l-load tmp%73#0 1                                                                             (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | awst_tmp%12#0,tmp%73#0
    b==                                                                                           (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | tmp%74#0
    bnz test_numeric_types_bool_true@63                                                           (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 |
    // Implicit fall through to test_numeric_types_or_contd@62                                    (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 |

test_numeric_types_or_contd@62:                                                                   (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 |
    // contains/contract.py:104
    // assert two_u8() not in (one_arc4u64(), UInt64(3)), "2 not in (1, 3)"
    f-load awst_tmp%12#0                                                                          (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | awst_tmp%12#0
    f-load tmp%40#0                                                                               (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | awst_tmp%12#0,tmp%40#0
    b==                                                                                           (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | tmp%76#0
    bz test_numeric_types_bool_false@64                                                           (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 |
    // Implicit fall through to test_numeric_types_bool_true@63                                   (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 |

test_numeric_types_bool_true@63:                                                                  (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 |
    int 1                                                                                         (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | or_result%14#0
    x-store or_result%14#0                                                                        (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | (洧뎶) or_result%14#0 |
    b test_numeric_types_bool_merge@65                                                            (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | (洧뎶) or_result%14#0 |

test_numeric_types_bool_false@64:                                                                 (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 |
    int 0                                                                                         (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | or_result%14#0
    x-store or_result%14#0                                                                        (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | (洧뎶) or_result%14#0 |
    // Implicit fall through to test_numeric_types_bool_merge@65                                  (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | (洧뎶) or_result%14#0 |

test_numeric_types_bool_merge@65:                                                                 (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | (洧뎶) or_result%14#0 |
    // contains/contract.py:104
    // assert two_u8() not in (one_arc4u64(), UInt64(3)), "2 not in (1, 3)"
    x-load or_result%14#0                                                                         (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | or_result%14#0
    !                                                                                             (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | tmp%77#0
    assert // 2 not in (1, 3)                                                                     (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 |
    // contains/contract.py:105
    // assert three_u512() not in (UInt64(5), UInt64(7)), "3 not in (5, 7)"
    callsub three_u512                                                                            (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | awst_tmp%13#0
    l-store-copy awst_tmp%13#0 0                                                                  (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | awst_tmp%13#0,awst_tmp%13#0
    f-store awst_tmp%13#0                                                                         (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | awst_tmp%13#0
    l-load awst_tmp%13#0 0                                                                        (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | awst_tmp%13#0
    f-load tmp%44#0                                                                               (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | awst_tmp%13#0,tmp%44#0
    b==                                                                                           (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | tmp%79#0
    bnz test_numeric_types_bool_true@67                                                           (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 |
    // Implicit fall through to test_numeric_types_or_contd@66                                    (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 |

test_numeric_types_or_contd@66:                                                                   (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 |
    // contains/contract.py:105
    // assert three_u512() not in (UInt64(5), UInt64(7)), "3 not in (5, 7)"
    int 7                                                                                         (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | 7
    itob                                                                                          (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | tmp%80#0
    f-load awst_tmp%13#0                                                                          (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | tmp%80#0,awst_tmp%13#0
    l-load tmp%80#0 1                                                                             (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | awst_tmp%13#0,tmp%80#0
    b==                                                                                           (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | tmp%81#0
    bz test_numeric_types_bool_false@68                                                           (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 |
    // Implicit fall through to test_numeric_types_bool_true@67                                   (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 |

test_numeric_types_bool_true@67:                                                                  (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 |
    int 1                                                                                         (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | or_result%15#0
    x-store or_result%15#0                                                                        (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | (洧뎶) or_result%15#0 |
    b test_numeric_types_bool_merge@69                                                            (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | (洧뎶) or_result%15#0 |

test_numeric_types_bool_false@68:                                                                 (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 |
    int 0                                                                                         (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | or_result%15#0
    x-store or_result%15#0                                                                        (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | (洧뎶) or_result%15#0 |
    // Implicit fall through to test_numeric_types_bool_merge@69                                  (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | (洧뎶) or_result%15#0 |

test_numeric_types_bool_merge@69:                                                                 (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | (洧뎶) or_result%15#0 |
    // contains/contract.py:105
    // assert three_u512() not in (UInt64(5), UInt64(7)), "3 not in (5, 7)"
    x-load or_result%15#0                                                                         (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | or_result%15#0
    !                                                                                             (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | tmp%82#0
    assert // 3 not in (5, 7)                                                                     (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 |
    // contains/contract.py:106
    // assert four_biguint() not in (UInt64(2), UInt64(9)), "4 not in (2, 9)"
    callsub four_biguint                                                                          (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | awst_tmp%14#0
    l-store-copy awst_tmp%14#0 0                                                                  (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | awst_tmp%14#0,awst_tmp%14#0
    f-store awst_tmp%14#0                                                                         (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | awst_tmp%14#0
    l-load awst_tmp%14#0 0                                                                        (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | awst_tmp%14#0
    f-load tmp%23#0                                                                               (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | awst_tmp%14#0,tmp%23#0
    b==                                                                                           (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | tmp%84#0
    bnz test_numeric_types_bool_true@71                                                           (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 |
    // Implicit fall through to test_numeric_types_or_contd@70                                    (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 |

test_numeric_types_or_contd@70:                                                                   (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 |
    // contains/contract.py:106
    // assert four_biguint() not in (UInt64(2), UInt64(9)), "4 not in (2, 9)"
    int 9                                                                                         (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | 9
    itob                                                                                          (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | tmp%85#0
    f-load awst_tmp%14#0                                                                          (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | tmp%85#0,awst_tmp%14#0
    l-load tmp%85#0 1                                                                             (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | awst_tmp%14#0,tmp%85#0
    b==                                                                                           (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | tmp%86#0
    bz test_numeric_types_bool_false@72                                                           (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 |
    // Implicit fall through to test_numeric_types_bool_true@71                                   (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 |

test_numeric_types_bool_true@71:                                                                  (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 |
    int 1                                                                                         (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | or_result%16#0
    x-store or_result%16#0                                                                        (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | (洧뎶) or_result%16#0 |
    b test_numeric_types_bool_merge@73                                                            (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | (洧뎶) or_result%16#0 |

test_numeric_types_bool_false@72:                                                                 (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 |
    int 0                                                                                         (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | or_result%16#0
    x-store or_result%16#0                                                                        (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | (洧뎶) or_result%16#0 |
    // Implicit fall through to test_numeric_types_bool_merge@73                                  (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | (洧뎶) or_result%16#0 |

test_numeric_types_bool_merge@73:                                                                 (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | (洧뎶) or_result%16#0 |
    // contains/contract.py:106
    // assert four_biguint() not in (UInt64(2), UInt64(9)), "4 not in (2, 9)"
    x-load or_result%16#0                                                                         (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | or_result%16#0
    !                                                                                             (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | tmp%87#0
    assert // 4 not in (2, 9)                                                                     (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 |
    // contains/contract.py:108
    // assert one_u64() in (
    callsub one_u64                                                                               (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | awst_tmp%15#0
    l-store-copy awst_tmp%15#0 0                                                                  (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | awst_tmp%15#0,awst_tmp%15#0
    f-store awst_tmp%15#0                                                                         (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | awst_tmp%15#0
    // contains/contract.py:109
    // foo_string(),
    callsub foo_string                                                                            (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | awst_tmp%15#0,tmp%88#0
    pop 1                                                                                         (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | awst_tmp%15#0
    // contains/contract.py:110
    // one_u64(),
    callsub one_u64                                                                               (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | awst_tmp%15#0,tmp%89#0
    // contains/contract.py:112
    // two_u8(),
    callsub two_u8                                                                                (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | awst_tmp%15#0,tmp%89#0,tmp%90#0
    f-store tmp%90#0                                                                              (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | awst_tmp%15#0,tmp%89#0
    // contains/contract.py:108-113
    // assert one_u64() in (
    //     foo_string(),
    //     one_u64(),
    //     UInt64(3),
    //     two_u8(),
    // ), "1 in (foo, 1, 3, 2)"
    l-load awst_tmp%15#0 1                                                                        (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | tmp%89#0,awst_tmp%15#0
    l-load tmp%89#0 1                                                                             (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | awst_tmp%15#0,tmp%89#0
    ==                                                                                            (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | tmp%91#0
    bnz test_numeric_types_bool_true@76                                                           (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 |
    // Implicit fall through to test_numeric_types_or_contd@74                                    (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 |

test_numeric_types_or_contd@74:                                                                   (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 |
    // contains/contract.py:108-113
    // assert one_u64() in (
    //     foo_string(),
    //     one_u64(),
    //     UInt64(3),
    //     two_u8(),
    // ), "1 in (foo, 1, 3, 2)"
    f-load awst_tmp%15#0                                                                          (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | awst_tmp%15#0
    // contains/contract.py:111
    // UInt64(3),
    int 3                                                                                         (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | awst_tmp%15#0,3
    // contains/contract.py:108-113
    // assert one_u64() in (
    //     foo_string(),
    //     one_u64(),
    //     UInt64(3),
    //     two_u8(),
    // ), "1 in (foo, 1, 3, 2)"
    ==                                                                                            (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | tmp%92#0
    bnz test_numeric_types_bool_true@76                                                           (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 |
    // Implicit fall through to test_numeric_types_or_contd@75                                    (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 |

test_numeric_types_or_contd@75:                                                                   (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 |
    // contains/contract.py:108-113
    // assert one_u64() in (
    //     foo_string(),
    //     one_u64(),
    //     UInt64(3),
    //     two_u8(),
    // ), "1 in (foo, 1, 3, 2)"
    f-load awst_tmp%15#0                                                                          (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | awst_tmp%15#0
    itob                                                                                          (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | tmp%93#0
    f-load tmp%90#0                                                                               (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | tmp%93#0,tmp%90#0
    l-load tmp%93#0 1                                                                             (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | tmp%90#0,tmp%93#0
    b==                                                                                           (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | tmp%94#0
    bz test_numeric_types_bool_false@77                                                           (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 |
    // Implicit fall through to test_numeric_types_bool_true@76                                   (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 |

test_numeric_types_bool_true@76:                                                                  (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 |
    int 1                                                                                         (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | or_result%17#0
    x-store or_result%17#0                                                                        (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | (洧뎶) or_result%17#0 |
    b test_numeric_types_bool_merge@78                                                            (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | (洧뎶) or_result%17#0 |

test_numeric_types_bool_false@77:                                                                 (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 |
    int 0                                                                                         (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | or_result%17#0
    x-store or_result%17#0                                                                        (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | (洧뎶) or_result%17#0 |
    // Implicit fall through to test_numeric_types_bool_merge@78                                  (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | (洧뎶) or_result%17#0 |

test_numeric_types_bool_merge@78:                                                                 (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | (洧뎶) or_result%17#0 |
    // contains/contract.py:108-113
    // assert one_u64() in (
    //     foo_string(),
    //     one_u64(),
    //     UInt64(3),
    //     two_u8(),
    // ), "1 in (foo, 1, 3, 2)"
    x-load or_result%17#0                                                                         (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | or_result%17#0
    assert // 1 in (foo, 1, 3, 2)                                                                 (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 |
    // contains/contract.py:114
    // assert one_u64() in (one_arc4u64(), bar_string(), two_u8()), "1 in (1, bar, 2)"
    callsub one_arc4u64                                                                           (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | tmp%95#0
    callsub bar_string                                                                            (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | tmp%95#0,tmp%96#0
    pop 1                                                                                         (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | tmp%95#0
    callsub two_u8                                                                                (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | tmp%95#0,tmp%97#0
    f-store tmp%97#0                                                                              (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | tmp%95#0
    callsub one_u64                                                                               (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | tmp%95#0,awst_tmp%16#0
    itob                                                                                          (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | tmp%95#0,tmp%98#0
    l-store-copy tmp%98#0 0                                                                       (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | tmp%95#0,tmp%98#0,tmp%98#0
    f-store tmp%98#0                                                                              (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | tmp%95#0,tmp%98#0
    l-load tmp%95#0 1                                                                             (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | tmp%98#0,tmp%95#0
    l-load tmp%98#0 1                                                                             (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | tmp%95#0,tmp%98#0
    b==                                                                                           (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | tmp%99#0
    bnz test_numeric_types_bool_true@80                                                           (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 |
    // Implicit fall through to test_numeric_types_or_contd@79                                    (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 |

test_numeric_types_or_contd@79:                                                                   (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 |
    // contains/contract.py:114
    // assert one_u64() in (one_arc4u64(), bar_string(), two_u8()), "1 in (1, bar, 2)"
    f-load tmp%97#0                                                                               (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | tmp%97#0
    f-load tmp%98#0                                                                               (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | tmp%97#0,tmp%98#0
    b==                                                                                           (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | tmp%101#0
    bz test_numeric_types_bool_false@81                                                           (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 |
    // Implicit fall through to test_numeric_types_bool_true@80                                   (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 |

test_numeric_types_bool_true@80:                                                                  (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 |
    int 1                                                                                         (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | or_result%18#0
    x-store or_result%18#0                                                                        (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | (洧뎶) or_result%18#0 |
    b test_numeric_types_bool_merge@82                                                            (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | (洧뎶) or_result%18#0 |

test_numeric_types_bool_false@81:                                                                 (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 |
    int 0                                                                                         (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | or_result%18#0
    x-store or_result%18#0                                                                        (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | (洧뎶) or_result%18#0 |
    // Implicit fall through to test_numeric_types_bool_merge@82                                  (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | (洧뎶) or_result%18#0 |

test_numeric_types_bool_merge@82:                                                                 (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | (洧뎶) or_result%18#0 |
    // contains/contract.py:114
    // assert one_u64() in (one_arc4u64(), bar_string(), two_u8()), "1 in (1, bar, 2)"
    x-load or_result%18#0                                                                         (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | or_result%18#0
    assert // 1 in (1, bar, 2)                                                                    (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 |
    // contains/contract.py:115
    // assert UInt64(2) in (foo_arc4(), UInt64(3), two_u8()), "2 in (foo, 3, 2)"
    callsub foo_arc4                                                                              (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | tmp%102#0
    pop 1                                                                                         (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 |
    callsub two_u8                                                                                (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | tmp%103#0
    f-load tmp%23#0                                                                               (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | tmp%103#0,tmp%23#0
    b==                                                                                           (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | tmp%106#0
    bz test_numeric_types_bool_false@85                                                           (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 |
    // Implicit fall through to test_numeric_types_bool_true@84                                   (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 |

test_numeric_types_bool_true@84:                                                                  (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 |
    int 1                                                                                         (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | or_result%19#0
    x-store or_result%19#0                                                                        (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | (洧뎶) or_result%19#0 |
    b test_numeric_types_bool_merge@86                                                            (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | (洧뎶) or_result%19#0 |

test_numeric_types_bool_false@85:                                                                 (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 |
    int 0                                                                                         (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | or_result%19#0
    x-store or_result%19#0                                                                        (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | (洧뎶) or_result%19#0 |
    // Implicit fall through to test_numeric_types_bool_merge@86                                  (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | (洧뎶) or_result%19#0 |

test_numeric_types_bool_merge@86:                                                                 (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | (洧뎶) or_result%19#0 |
    // contains/contract.py:115
    // assert UInt64(2) in (foo_arc4(), UInt64(3), two_u8()), "2 in (foo, 3, 2)"
    x-load or_result%19#0                                                                         (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | or_result%19#0
    assert // 2 in (foo, 3, 2)                                                                    (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 |
    // contains/contract.py:116
    // assert two_u8() in (bar_arc4(), UInt64(3), two_u8()), "2 in (bar, 3, 2)"
    callsub two_u8                                                                                (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | awst_tmp%17#0
    l-store-copy awst_tmp%17#0 0                                                                  (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | awst_tmp%17#0,awst_tmp%17#0
    f-store awst_tmp%17#0                                                                         (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | awst_tmp%17#0
    callsub bar_arc4                                                                              (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | awst_tmp%17#0,tmp%107#0
    pop 1                                                                                         (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | awst_tmp%17#0
    callsub two_u8                                                                                (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | awst_tmp%17#0,tmp%108#0
    f-store tmp%108#0                                                                             (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | awst_tmp%17#0
    l-load awst_tmp%17#0 0                                                                        (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | awst_tmp%17#0
    f-load tmp%40#0                                                                               (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | awst_tmp%17#0,tmp%40#0
    b==                                                                                           (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | tmp%110#0
    bnz test_numeric_types_bool_true@88                                                           (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 |
    // Implicit fall through to test_numeric_types_or_contd@87                                    (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 |

test_numeric_types_or_contd@87:                                                                   (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 |
    // contains/contract.py:116
    // assert two_u8() in (bar_arc4(), UInt64(3), two_u8()), "2 in (bar, 3, 2)"
    f-load awst_tmp%17#0                                                                          (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | awst_tmp%17#0
    f-load tmp%108#0                                                                              (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | awst_tmp%17#0,tmp%108#0
    b==                                                                                           (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | tmp%111#0
    bz test_numeric_types_bool_false@89                                                           (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 |
    // Implicit fall through to test_numeric_types_bool_true@88                                   (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 |

test_numeric_types_bool_true@88:                                                                  (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 |
    int 1                                                                                         (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | or_result%20#0
    x-store or_result%20#0                                                                        (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | (洧뎶) or_result%20#0 |
    b test_numeric_types_bool_merge@90                                                            (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | (洧뎶) or_result%20#0 |

test_numeric_types_bool_false@89:                                                                 (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 |
    int 0                                                                                         (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | or_result%20#0
    x-store or_result%20#0                                                                        (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | (洧뎶) or_result%20#0 |
    // Implicit fall through to test_numeric_types_bool_merge@90                                  (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | (洧뎶) or_result%20#0 |

test_numeric_types_bool_merge@90:                                                                 (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | (洧뎶) or_result%20#0 |
    // contains/contract.py:116
    // assert two_u8() in (bar_arc4(), UInt64(3), two_u8()), "2 in (bar, 3, 2)"
    x-load or_result%20#0                                                                         (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | or_result%20#0
    assert // 2 in (bar, 3, 2)                                                                    (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 |
    // contains/contract.py:117
    // assert two_u8() in (foo_string(), UInt64(2), UInt64(3)), "2 in foo(2, 3)"
    callsub two_u8                                                                                (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | awst_tmp%18#0
    l-store-copy awst_tmp%18#0 0                                                                  (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | awst_tmp%18#0,awst_tmp%18#0
    f-store awst_tmp%18#0                                                                         (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | awst_tmp%18#0
    callsub foo_string                                                                            (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | awst_tmp%18#0,tmp%112#0
    pop 1                                                                                         (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | awst_tmp%18#0
    l-load awst_tmp%18#0 0                                                                        (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | awst_tmp%18#0
    f-load tmp%23#0                                                                               (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | awst_tmp%18#0,tmp%23#0
    b==                                                                                           (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | tmp%114#0
    bnz test_numeric_types_bool_true@92                                                           (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 |
    // Implicit fall through to test_numeric_types_or_contd@91                                    (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 |

test_numeric_types_or_contd@91:                                                                   (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 |
    // contains/contract.py:117
    // assert two_u8() in (foo_string(), UInt64(2), UInt64(3)), "2 in foo(2, 3)"
    f-load awst_tmp%18#0                                                                          (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | awst_tmp%18#0
    f-load tmp%40#0                                                                               (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | awst_tmp%18#0,tmp%40#0
    b==                                                                                           (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | tmp%116#0
    bz test_numeric_types_bool_false@93                                                           (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 |
    // Implicit fall through to test_numeric_types_bool_true@92                                   (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 |

test_numeric_types_bool_true@92:                                                                  (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 |
    int 1                                                                                         (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | or_result%21#0
    x-store or_result%21#0                                                                        (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | (洧뎶) or_result%21#0 |
    b test_numeric_types_bool_merge@94                                                            (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | (洧뎶) or_result%21#0 |

test_numeric_types_bool_false@93:                                                                 (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 |
    int 0                                                                                         (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | or_result%21#0
    x-store or_result%21#0                                                                        (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | (洧뎶) or_result%21#0 |
    // Implicit fall through to test_numeric_types_bool_merge@94                                  (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | (洧뎶) or_result%21#0 |

test_numeric_types_bool_merge@94:                                                                 (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | (洧뎶) or_result%21#0 |
    // contains/contract.py:117
    // assert two_u8() in (foo_string(), UInt64(2), UInt64(3)), "2 in foo(2, 3)"
    x-load or_result%21#0                                                                         (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | or_result%21#0
    assert // 2 in foo(2, 3)                                                                      (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 |
    // contains/contract.py:118
    // assert three_u512() in (UInt64(5), UInt64(3), foo_string()), "3 in (5, 3, foo)"
    callsub three_u512                                                                            (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | awst_tmp%19#0
    l-store-copy awst_tmp%19#0 0                                                                  (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | awst_tmp%19#0,awst_tmp%19#0
    f-store awst_tmp%19#0                                                                         (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | awst_tmp%19#0
    callsub foo_string                                                                            (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | awst_tmp%19#0,tmp%117#0
    pop 1                                                                                         (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | awst_tmp%19#0
    l-load awst_tmp%19#0 0                                                                        (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | awst_tmp%19#0
    f-load tmp%44#0                                                                               (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | awst_tmp%19#0,tmp%44#0
    b==                                                                                           (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | tmp%119#0
    bnz test_numeric_types_bool_true@96                                                           (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 |
    // Implicit fall through to test_numeric_types_or_contd@95                                    (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 |

test_numeric_types_or_contd@95:                                                                   (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 |
    // contains/contract.py:118
    // assert three_u512() in (UInt64(5), UInt64(3), foo_string()), "3 in (5, 3, foo)"
    f-load awst_tmp%19#0                                                                          (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | awst_tmp%19#0
    f-load tmp%40#0                                                                               (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | awst_tmp%19#0,tmp%40#0
    b==                                                                                           (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | tmp%121#0
    bz test_numeric_types_bool_false@97                                                           (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 |
    // Implicit fall through to test_numeric_types_bool_true@96                                   (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 |

test_numeric_types_bool_true@96:                                                                  (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 |
    int 1                                                                                         (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | or_result%22#0
    x-store or_result%22#0                                                                        (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | (洧뎶) or_result%22#0 |
    b test_numeric_types_bool_merge@98                                                            (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | (洧뎶) or_result%22#0 |

test_numeric_types_bool_false@97:                                                                 (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 |
    int 0                                                                                         (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | or_result%22#0
    x-store or_result%22#0                                                                        (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | (洧뎶) or_result%22#0 |
    // Implicit fall through to test_numeric_types_bool_merge@98                                  (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | (洧뎶) or_result%22#0 |

test_numeric_types_bool_merge@98:                                                                 (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | (洧뎶) or_result%22#0 |
    // contains/contract.py:118
    // assert three_u512() in (UInt64(5), UInt64(3), foo_string()), "3 in (5, 3, foo)"
    x-load or_result%22#0                                                                         (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | or_result%22#0
    assert // 3 in (5, 3, foo)                                                                    (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 |
    // contains/contract.py:120
    // assert one_u64() not in (
    callsub one_u64                                                                               (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | awst_tmp%20#0
    l-store-copy awst_tmp%20#0 0                                                                  (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | awst_tmp%20#0,awst_tmp%20#0
    f-store awst_tmp%20#0                                                                         (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | awst_tmp%20#0
    // contains/contract.py:121
    // foo_string(),
    callsub foo_string                                                                            (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | awst_tmp%20#0,tmp%122#0
    pop 1                                                                                         (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | awst_tmp%20#0
    // contains/contract.py:123
    // two_u8(),
    callsub two_u8                                                                                (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | awst_tmp%20#0,tmp%123#0
    f-store tmp%123#0                                                                             (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | awst_tmp%20#0
    // contains/contract.py:120-124
    // assert one_u64() not in (
    //     foo_string(),
    //     UInt64(3),
    //     two_u8(),
    // ), "1 not in (foo, 3, 2)"
    l-load awst_tmp%20#0 0                                                                        (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | awst_tmp%20#0
    // contains/contract.py:122
    // UInt64(3),
    int 3                                                                                         (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | awst_tmp%20#0,3
    // contains/contract.py:120-124
    // assert one_u64() not in (
    //     foo_string(),
    //     UInt64(3),
    //     two_u8(),
    // ), "1 not in (foo, 3, 2)"
    ==                                                                                            (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | tmp%124#0
    bnz test_numeric_types_bool_true@100                                                          (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 |
    // Implicit fall through to test_numeric_types_or_contd@99                                    (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 |

test_numeric_types_or_contd@99:                                                                   (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 |
    // contains/contract.py:120-124
    // assert one_u64() not in (
    //     foo_string(),
    //     UInt64(3),
    //     two_u8(),
    // ), "1 not in (foo, 3, 2)"
    f-load awst_tmp%20#0                                                                          (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | awst_tmp%20#0
    itob                                                                                          (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | tmp%125#0
    f-load tmp%123#0                                                                              (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | tmp%125#0,tmp%123#0
    l-load tmp%125#0 1                                                                            (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | tmp%123#0,tmp%125#0
    b==                                                                                           (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | tmp%126#0
    bz test_numeric_types_bool_false@101                                                          (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 |
    // Implicit fall through to test_numeric_types_bool_true@100                                  (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 |

test_numeric_types_bool_true@100:                                                                 (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 |
    int 1                                                                                         (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | or_result%23#0
    x-store or_result%23#0                                                                        (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | (洧뎶) or_result%23#0 |
    b test_numeric_types_bool_merge@102                                                           (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | (洧뎶) or_result%23#0 |

test_numeric_types_bool_false@101:                                                                (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 |
    int 0                                                                                         (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | or_result%23#0
    x-store or_result%23#0                                                                        (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | (洧뎶) or_result%23#0 |
    // Implicit fall through to test_numeric_types_bool_merge@102                                 (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | (洧뎶) or_result%23#0 |

test_numeric_types_bool_merge@102:                                                                (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | (洧뎶) or_result%23#0 |
    // contains/contract.py:120-124
    // assert one_u64() not in (
    //     foo_string(),
    //     UInt64(3),
    //     two_u8(),
    // ), "1 not in (foo, 3, 2)"
    x-load or_result%23#0                                                                         (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | or_result%23#0
    !                                                                                             (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | tmp%127#0
    assert // 1 not in (foo, 3, 2)                                                                (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 |
    // contains/contract.py:125
    // assert one_u64() not in (bar_string(), two_u8()), "1 not in (bar, 2)"
    callsub bar_string                                                                            (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | tmp%128#0
    pop 1                                                                                         (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 |
    callsub two_u8                                                                                (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | tmp%129#0
    callsub one_u64                                                                               (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | tmp%129#0,awst_tmp%21#0
    itob                                                                                          (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | tmp%129#0,tmp%130#0
    l-load tmp%129#0 1                                                                            (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | tmp%130#0,tmp%129#0
    l-load tmp%130#0 1                                                                            (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | tmp%129#0,tmp%130#0
    b==                                                                                           (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | tmp%131#0
    !                                                                                             (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | tmp%132#0
    assert // 1 not in (bar, 2)                                                                   (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 |
    // contains/contract.py:126
    // assert UInt64(2) not in (foo_arc4(), UInt64(3)), "2 not in (foo, 3)"
    callsub foo_arc4                                                                              (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | tmp%133#0
    pop 1                                                                                         (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 |
    // contains/contract.py:127
    // assert two_u8() not in (bar_arc4(), UInt64(3)), "2 not in (bar, 3)"
    callsub two_u8                                                                                (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | awst_tmp%22#0
    callsub bar_arc4                                                                              (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | awst_tmp%22#0,tmp%136#0
    pop 1                                                                                         (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | awst_tmp%22#0
    l-load awst_tmp%22#0 0                                                                        (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | awst_tmp%22#0
    f-load tmp%40#0                                                                               (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | awst_tmp%22#0,tmp%40#0
    l-store-copy tmp%40#0 1                                                                       (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | tmp%40#0,awst_tmp%22#0,tmp%40#0 (copy)
    b==                                                                                           (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | tmp%40#0,tmp%138#0
    !                                                                                             (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | tmp%40#0,tmp%139#0
    assert // 2 not in (bar, 3)                                                                   (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | tmp%40#0
    // contains/contract.py:128
    // assert two_u8() not in (foo_string(), UInt64(3)), "2 not in (foo, 3)"
    callsub two_u8                                                                                (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | tmp%40#0,awst_tmp%23#0
    callsub foo_string                                                                            (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | tmp%40#0,awst_tmp%23#0,tmp%140#0
    pop 1                                                                                         (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | tmp%40#0,awst_tmp%23#0
    l-load awst_tmp%23#0 0                                                                        (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | tmp%40#0,awst_tmp%23#0
    l-load tmp%40#0 1                                                                             (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | awst_tmp%23#0,tmp%40#0
    b==                                                                                           (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | tmp%142#0
    !                                                                                             (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | tmp%143#0
    assert // 2 not in (foo, 3)                                                                   (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 |
    // contains/contract.py:129
    // assert three_u512() not in (UInt64(5), foo_string()), "3 not in (5, foo)"
    callsub three_u512                                                                            (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | awst_tmp%24#0
    callsub foo_string                                                                            (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | awst_tmp%24#0,tmp%144#0
    pop 1                                                                                         (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | awst_tmp%24#0
    l-load awst_tmp%24#0 0                                                                        (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | awst_tmp%24#0
    f-load tmp%44#0                                                                               (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | awst_tmp%24#0,tmp%44#0
    b==                                                                                           (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | tmp%146#0
    !                                                                                             (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 | tmp%147#0
    assert // 3 not in (5, foo)                                                                   (洧뎽) awst_tmp%11#0,awst_tmp%12#0,awst_tmp%13#0,awst_tmp%14#0,awst_tmp%17#0,awst_tmp%18#0,awst_tmp%19#0,awst_tmp%4#0,awst_tmp%5#0,awst_tmp%6#0,awst_tmp%7#0,tmp%108#0,tmp%123#0,tmp%15#0,tmp%16#0,tmp%22#0,tmp%23#0,tmp%29#0,tmp%40#0,tmp%44#0,tmp%48#0,tmp%53#0,tmp%58#0,tmp%9#0,tmp%90#0,tmp%97#0,tmp%98#0,awst_tmp%1#0,awst_tmp%10#0,awst_tmp%15#0,awst_tmp%2#0,awst_tmp%20#0,awst_tmp%3#0,awst_tmp%8#0,awst_tmp%9#0,tmp%4#0,awst_tmp%0#0,tmp%1#0 |
    retsub


// test_cases.contains.contract.two_u64() -> uint64:
two_u64:
    // contains/contract.py:147-148
    // @subroutine
    // def two_u64() -> UInt64:
    proto 0 1

two_u64_block@0:
    // contains/contract.py:149
    // return UInt64(2)
    int 2                                                                                         2
    retsub                                                                                        2


// test_cases.contains.contract.two_u8() -> bytes:
two_u8:
    // contains/contract.py:152-153
    // @subroutine
    // def two_u8() -> arc4.UInt8:
    proto 0 1

two_u8_block@0:
    // contains/contract.py:154
    // return arc4.UInt8(2)
    byte 0x02                                                                                     0x02
    retsub                                                                                        0x02


// test_cases.contains.contract.one_arc4u64() -> bytes:
one_arc4u64:
    // contains/contract.py:142-143
    // @subroutine
    // def one_arc4u64() -> arc4.UInt64:
    proto 0 1

one_arc4u64_block@0:
    // contains/contract.py:144
    // return arc4.UInt64(1)
    byte 0x0000000000000001                                                                       0x0000000000000001
    retsub                                                                                        0x0000000000000001


// test_cases.contains.contract.three_u512() -> bytes:
three_u512:
    // contains/contract.py:157-158
    // @subroutine
    // def three_u512() -> arc4.UInt512:
    proto 0 1

three_u512_block@0:
    // contains/contract.py:159
    // return arc4.UInt512(3)
    byte 0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000003 0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000003
    retsub                                                                                        0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000003


// test_cases.contains.contract.four_biguint() -> bytes:
four_biguint:
    // contains/contract.py:162-163
    // @subroutine
    // def four_biguint() -> BigUInt:
    proto 0 1

four_biguint_block@0:
    // contains/contract.py:164
    // return BigUInt(4)
    byte 0x04                                                                                     0x04
    retsub                                                                                        0x04


