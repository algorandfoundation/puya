debug: PuyaPyOptions(output_teal=True, output_source_map=True, output_arc32=False, output_arc56=False, output_ssa_ir=False, output_optimization_ir=False, output_destructured_ir=True, output_memory_ir=False, output_bytecode=True, output_teal_intermediates=False, output_op_statistics=True, debug_level=0, optimization_level=2, target_avm_version=10, cli_template_definitions={}, template_vars_prefix='TMPL_', locals_coalescing_strategy=<LocalsCoalescingStrategy.root_operand: 'root_operand'>, optimizations_override=immutabledict({}), expand_all_bytes=False, paths=['contains'], resource_encoding='value', output_awst=False, output_awst_json=False, output_source_annotations_json=False, output_client=False, log_level=<LogLevel.debug: 10>)
debug: Building IR for function _puya_lib.util.ensure_budget
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'required_budget_with_buffer' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let required_budget_with_buffer#1: uint64 = undefined while trying to resolve 'required_budget_with_buffer' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'fee_source' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let fee_source#1: uint64 = undefined while trying to resolve 'fee_source' in block@1
debug: Terminated block@2
debug: Terminated block@3
debug: Terminated block@4
debug: Sealing block@5
debug: Terminated block@5
debug: Sealing block@1
debug: Added required_budget_with_buffer#0 to Phi node: let required_budget_with_buffer#1: uint64 = φ(required_budget_with_buffer#0 <- block@0) in block@0
debug: Created Phi assignment: let required_budget_with_buffer#2: uint64 = undefined while trying to resolve 'required_budget_with_buffer' in block@5
debug: Added required_budget_with_buffer#1 to Phi node: let required_budget_with_buffer#2: uint64 = φ(required_budget_with_buffer#1 <- block@2) in block@2
debug: Looking for 'required_budget_with_buffer' in an unsealed block creating an incomplete Phi: block@3
debug: Created Phi assignment: let required_budget_with_buffer#3: uint64 = undefined while trying to resolve 'required_budget_with_buffer' in block@3
debug: Added required_budget_with_buffer#3 to Phi node: let required_budget_with_buffer#2: uint64 = φ(required_budget_with_buffer#1 <- block@2, required_budget_with_buffer#3 <- block@3) in block@3
debug: Looking for 'required_budget_with_buffer' in an unsealed block creating an incomplete Phi: block@4
debug: Created Phi assignment: let required_budget_with_buffer#4: uint64 = undefined while trying to resolve 'required_budget_with_buffer' in block@4
debug: Added required_budget_with_buffer#4 to Phi node: let required_budget_with_buffer#2: uint64 = φ(required_budget_with_buffer#1 <- block@2, required_budget_with_buffer#3 <- block@3, required_budget_with_buffer#4 <- block@4) in block@4
debug: Added required_budget_with_buffer#2 to Phi node: let required_budget_with_buffer#1: uint64 = φ(required_budget_with_buffer#0 <- block@0, required_budget_with_buffer#2 <- block@5) in block@5
debug: Added fee_source#0 to Phi node: let fee_source#1: uint64 = φ(fee_source#0 <- block@0) in block@0
debug: Created Phi assignment: let fee_source#2: uint64 = undefined while trying to resolve 'fee_source' in block@5
debug: Added fee_source#1 to Phi node: let fee_source#2: uint64 = φ(fee_source#1 <- block@2) in block@2
debug: Looking for 'fee_source' in an unsealed block creating an incomplete Phi: block@3
debug: Created Phi assignment: let fee_source#3: uint64 = undefined while trying to resolve 'fee_source' in block@3
debug: Added fee_source#3 to Phi node: let fee_source#2: uint64 = φ(fee_source#1 <- block@2, fee_source#3 <- block@3) in block@3
debug: Looking for 'fee_source' in an unsealed block creating an incomplete Phi: block@4
debug: Created Phi assignment: let fee_source#4: uint64 = undefined while trying to resolve 'fee_source' in block@4
debug: Added fee_source#4 to Phi node: let fee_source#2: uint64 = φ(fee_source#1 <- block@2, fee_source#3 <- block@3, fee_source#4 <- block@4) in block@4
debug: Added fee_source#2 to Phi node: let fee_source#1: uint64 = φ(fee_source#0 <- block@0, fee_source#2 <- block@5) in block@5
debug: Sealing block@6
debug: Terminated block@6
debug: Sealing block@3
debug: Added required_budget_with_buffer#1 to Phi node: let required_budget_with_buffer#3: uint64 = φ(required_budget_with_buffer#1 <- block@2) in block@2
debug: Replacing trivial Phi node: let required_budget_with_buffer#3: uint64 = φ(required_budget_with_buffer#1 <- block@2) (required_budget_with_buffer#3) with required_budget_with_buffer#1
debug: Deleting Phi assignment: let required_budget_with_buffer#3: uint64 = φ(required_budget_with_buffer#1 <- block@2)
debug: Replaced trivial Phi node: let required_budget_with_buffer#3: uint64 = φ(required_budget_with_buffer#1 <- block@2) (required_budget_with_buffer#3) with required_budget_with_buffer#1 in current definition for 1 blocks
debug: Added fee_source#1 to Phi node: let fee_source#3: uint64 = φ(fee_source#1 <- block@2) in block@2
debug: Replacing trivial Phi node: let fee_source#3: uint64 = φ(fee_source#1 <- block@2) (fee_source#3) with fee_source#1
debug: Deleting Phi assignment: let fee_source#3: uint64 = φ(fee_source#1 <- block@2)
debug: Replaced trivial Phi node: let fee_source#3: uint64 = φ(fee_source#1 <- block@2) (fee_source#3) with fee_source#1 in current definition for 1 blocks
debug: Sealing block@4
debug: Added required_budget_with_buffer#1 to Phi node: let required_budget_with_buffer#4: uint64 = φ(required_budget_with_buffer#1 <- block@2) in block@2
debug: Replacing trivial Phi node: let required_budget_with_buffer#4: uint64 = φ(required_budget_with_buffer#1 <- block@2) (required_budget_with_buffer#4) with required_budget_with_buffer#1
debug: Deleting Phi assignment: let required_budget_with_buffer#4: uint64 = φ(required_budget_with_buffer#1 <- block@2)
debug: Replacing trivial Phi node: let required_budget_with_buffer#2: uint64 = φ(required_budget_with_buffer#1 <- block@2, required_budget_with_buffer#1 <- block@3, required_budget_with_buffer#1 <- block@4) (required_budget_with_buffer#2) with required_budget_with_buffer#1
debug: Deleting Phi assignment: let required_budget_with_buffer#2: uint64 = φ(required_budget_with_buffer#1 <- block@2, required_budget_with_buffer#1 <- block@3, required_budget_with_buffer#1 <- block@4)
debug: Replacing trivial Phi node: let required_budget_with_buffer#1: uint64 = φ(required_budget_with_buffer#0 <- block@0, required_budget_with_buffer#1 <- block@5) (required_budget_with_buffer#1) with required_budget_with_buffer#0
debug: Deleting Phi assignment: let required_budget_with_buffer#1: uint64 = φ(required_budget_with_buffer#0 <- block@0, required_budget_with_buffer#1 <- block@5)
debug: Replaced trivial Phi node: let required_budget_with_buffer#4: uint64 = φ(required_budget_with_buffer#1 <- block@2) (required_budget_with_buffer#4) with required_budget_with_buffer#1 in current definition for 1 blocks
debug: Replaced trivial Phi node: let required_budget_with_buffer#2: uint64 = φ(required_budget_with_buffer#1 <- block@2, required_budget_with_buffer#1 <- block@3, required_budget_with_buffer#1 <- block@4) (required_budget_with_buffer#2) with required_budget_with_buffer#1 in current definition for 1 blocks
debug: Replaced trivial Phi node: let required_budget_with_buffer#1: uint64 = φ(required_budget_with_buffer#0 <- block@0, required_budget_with_buffer#1 <- block@5) (required_budget_with_buffer#1) with required_budget_with_buffer#0 in current definition for 5 blocks
debug: Added fee_source#1 to Phi node: let fee_source#4: uint64 = φ(fee_source#1 <- block@2) in block@2
debug: Replacing trivial Phi node: let fee_source#4: uint64 = φ(fee_source#1 <- block@2) (fee_source#4) with fee_source#1
debug: Deleting Phi assignment: let fee_source#4: uint64 = φ(fee_source#1 <- block@2)
debug: Replacing trivial Phi node: let fee_source#2: uint64 = φ(fee_source#1 <- block@2, fee_source#1 <- block@3, fee_source#1 <- block@4) (fee_source#2) with fee_source#1
debug: Deleting Phi assignment: let fee_source#2: uint64 = φ(fee_source#1 <- block@2, fee_source#1 <- block@3, fee_source#1 <- block@4)
debug: Replacing trivial Phi node: let fee_source#1: uint64 = φ(fee_source#0 <- block@0, fee_source#1 <- block@5) (fee_source#1) with fee_source#0
debug: Deleting Phi assignment: let fee_source#1: uint64 = φ(fee_source#0 <- block@0, fee_source#1 <- block@5)
debug: Replaced trivial Phi node: let fee_source#4: uint64 = φ(fee_source#1 <- block@2) (fee_source#4) with fee_source#1 in current definition for 1 blocks
debug: Replaced trivial Phi node: let fee_source#2: uint64 = φ(fee_source#1 <- block@2, fee_source#1 <- block@3, fee_source#1 <- block@4) (fee_source#2) with fee_source#1 in current definition for 1 blocks
debug: Replaced trivial Phi node: let fee_source#1: uint64 = φ(fee_source#0 <- block@0, fee_source#1 <- block@5) (fee_source#1) with fee_source#0 in current definition for 5 blocks
debug: Building IR for function _puya_lib.bytes_.is_substring
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'start' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let start#1: uint64 = undefined while trying to resolve 'start' in block@1
debug: Looking for 'item' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let item#1: bytes = undefined while trying to resolve 'item' in block@1
debug: Looking for 'sequence' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let sequence#1: bytes = undefined while trying to resolve 'sequence' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@4
debug: Terminated block@4
debug: Sealing block@1
debug: Added start#0 to Phi node: let start#1: uint64 = φ(start#0 <- block@0) in block@0
debug: Added start#2 to Phi node: let start#1: uint64 = φ(start#0 <- block@0, start#2 <- block@4) in block@4
debug: Added item#0 to Phi node: let item#1: bytes = φ(item#0 <- block@0) in block@0
debug: Added item#1 to Phi node: let item#1: bytes = φ(item#0 <- block@0, item#1 <- block@4) in block@4
debug: Replacing trivial Phi node: let item#1: bytes = φ(item#0 <- block@0, item#1 <- block@4) (item#1) with item#0
debug: Deleting Phi assignment: let item#1: bytes = φ(item#0 <- block@0, item#1 <- block@4)
debug: Replaced trivial Phi node: let item#1: bytes = φ(item#0 <- block@0, item#1 <- block@4) (item#1) with item#0 in current definition for 3 blocks
debug: Added sequence#0 to Phi node: let sequence#1: bytes = φ(sequence#0 <- block@0) in block@0
debug: Added sequence#1 to Phi node: let sequence#1: bytes = φ(sequence#0 <- block@0, sequence#1 <- block@4) in block@4
debug: Replacing trivial Phi node: let sequence#1: bytes = φ(sequence#0 <- block@0, sequence#1 <- block@4) (sequence#1) with sequence#0
debug: Deleting Phi assignment: let sequence#1: bytes = φ(sequence#0 <- block@0, sequence#1 <- block@4)
debug: Replaced trivial Phi node: let sequence#1: bytes = φ(sequence#0 <- block@0, sequence#1 <- block@4) (sequence#1) with sequence#0 in current definition for 3 blocks
debug: Sealing block@5
debug: Terminated block@5
debug: Building IR for function _puya_lib.arc4.dynamic_array_pop_bit
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function _puya_lib.arc4.dynamic_array_pop_fixed_size
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function _puya_lib.arc4.dynamic_array_pop_byte_length_head
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function _puya_lib.arc4.dynamic_array_pop_dynamic_element
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'value_internal%0' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let value_internal%0#1: uint64 = undefined while trying to resolve 'value_internal%0' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'head_and_tail' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let head_and_tail#1: bytes = undefined while trying to resolve 'head_and_tail' in block@1
debug: Looking for 'new_head' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let new_head#1: bytes = undefined while trying to resolve 'new_head' in block@1
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@1
debug: Added value_internal%0#0 to Phi node: let value_internal%0#1: uint64 = φ(value_internal%0#0 <- block@0) in block@0
debug: Added value_internal%0#2 to Phi node: let value_internal%0#1: uint64 = φ(value_internal%0#0 <- block@0, value_internal%0#2 <- block@3) in block@3
debug: Added head_and_tail#0 to Phi node: let head_and_tail#1: bytes = φ(head_and_tail#0 <- block@0) in block@0
debug: Added head_and_tail#1 to Phi node: let head_and_tail#1: bytes = φ(head_and_tail#0 <- block@0, head_and_tail#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let head_and_tail#1: bytes = φ(head_and_tail#0 <- block@0, head_and_tail#1 <- block@3) (head_and_tail#1) with head_and_tail#0
debug: Deleting Phi assignment: let head_and_tail#1: bytes = φ(head_and_tail#0 <- block@0, head_and_tail#1 <- block@3)
debug: Replaced trivial Phi node: let head_and_tail#1: bytes = φ(head_and_tail#0 <- block@0, head_and_tail#1 <- block@3) (head_and_tail#1) with head_and_tail#0 in current definition for 3 blocks
debug: Added new_head#0 to Phi node: let new_head#1: bytes = φ(new_head#0 <- block@0) in block@0
debug: Added new_head#2 to Phi node: let new_head#1: bytes = φ(new_head#0 <- block@0, new_head#2 <- block@3) in block@3
debug: Sealing block@4
debug: Created Phi assignment: let length_minus_1#1: uint64 = undefined while trying to resolve 'length_minus_1' in block@1
debug: Added length_minus_1#0 to Phi node: let length_minus_1#1: uint64 = φ(length_minus_1#0 <- block@0) in block@0
debug: Added length_minus_1#1 to Phi node: let length_minus_1#1: uint64 = φ(length_minus_1#0 <- block@0, length_minus_1#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let length_minus_1#1: uint64 = φ(length_minus_1#0 <- block@0, length_minus_1#1 <- block@3) (length_minus_1#1) with length_minus_1#0
debug: Deleting Phi assignment: let length_minus_1#1: uint64 = φ(length_minus_1#0 <- block@0, length_minus_1#1 <- block@3)
debug: Replaced trivial Phi node: let length_minus_1#1: uint64 = φ(length_minus_1#0 <- block@0, length_minus_1#1 <- block@3) (length_minus_1#1) with length_minus_1#0 in current definition for 3 blocks
debug: Created Phi assignment: let popped_header_offset#1: uint64 = undefined while trying to resolve 'popped_header_offset' in block@1
debug: Added popped_header_offset#0 to Phi node: let popped_header_offset#1: uint64 = φ(popped_header_offset#0 <- block@0) in block@0
debug: Added popped_header_offset#1 to Phi node: let popped_header_offset#1: uint64 = φ(popped_header_offset#0 <- block@0, popped_header_offset#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let popped_header_offset#1: uint64 = φ(popped_header_offset#0 <- block@0, popped_header_offset#1 <- block@3) (popped_header_offset#1) with popped_header_offset#0
debug: Deleting Phi assignment: let popped_header_offset#1: uint64 = φ(popped_header_offset#0 <- block@0, popped_header_offset#1 <- block@3)
debug: Replaced trivial Phi node: let popped_header_offset#1: uint64 = φ(popped_header_offset#0 <- block@0, popped_header_offset#1 <- block@3) (popped_header_offset#1) with popped_header_offset#0 in current definition for 3 blocks
debug: Created Phi assignment: let popped_offset#1: uint64 = undefined while trying to resolve 'popped_offset' in block@1
debug: Added popped_offset#0 to Phi node: let popped_offset#1: uint64 = φ(popped_offset#0 <- block@0) in block@0
debug: Added popped_offset#1 to Phi node: let popped_offset#1: uint64 = φ(popped_offset#0 <- block@0, popped_offset#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let popped_offset#1: uint64 = φ(popped_offset#0 <- block@0, popped_offset#1 <- block@3) (popped_offset#1) with popped_offset#0
debug: Deleting Phi assignment: let popped_offset#1: uint64 = φ(popped_offset#0 <- block@0, popped_offset#1 <- block@3)
debug: Replaced trivial Phi node: let popped_offset#1: uint64 = φ(popped_offset#0 <- block@0, popped_offset#1 <- block@3) (popped_offset#1) with popped_offset#0 in current definition for 3 blocks
debug: Created Phi assignment: let popped#1: bytes = undefined while trying to resolve 'popped' in block@1
debug: Added popped#0 to Phi node: let popped#1: bytes = φ(popped#0 <- block@0) in block@0
debug: Added popped#1 to Phi node: let popped#1: bytes = φ(popped#0 <- block@0, popped#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let popped#1: bytes = φ(popped#0 <- block@0, popped#1 <- block@3) (popped#1) with popped#0
debug: Deleting Phi assignment: let popped#1: bytes = φ(popped#0 <- block@0, popped#1 <- block@3)
debug: Replaced trivial Phi node: let popped#1: bytes = φ(popped#0 <- block@0, popped#1 <- block@3) (popped#1) with popped#0 in current definition for 3 blocks
debug: Terminated block@4
debug: Building IR for function _puya_lib.arc4.dynamic_array_concat_bits
debug: Sealing block@0
debug: Terminated block@0
debug: Sealing block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Created Phi assignment: let array_length#1: uint64 = undefined while trying to resolve 'array_length' in block@2
debug: Added array_length#0 to Phi node: let array_length#1: uint64 = φ(array_length#0 <- block@0) in block@0
debug: Added array_length#0 to Phi node: let array_length#1: uint64 = φ(array_length#0 <- block@0, array_length#0 <- block@1) in block@1
debug: Replacing trivial Phi node: let array_length#1: uint64 = φ(array_length#0 <- block@0, array_length#0 <- block@1) (array_length#1) with array_length#0
debug: Deleting Phi assignment: let array_length#1: uint64 = φ(array_length#0 <- block@0, array_length#0 <- block@1)
debug: Replaced trivial Phi node: let array_length#1: uint64 = φ(array_length#0 <- block@0, array_length#0 <- block@1) (array_length#1) with array_length#0 in current definition for 1 blocks
debug: Created Phi assignment: let new_items_count#1: uint64 = undefined while trying to resolve 'new_items_count' in block@2
debug: Added new_items_count#0 to Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0) in block@0
debug: Added new_items_count#0 to Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#0 <- block@1) in block@1
debug: Replacing trivial Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#0 <- block@1) (new_items_count#1) with new_items_count#0
debug: Deleting Phi assignment: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#0 <- block@1)
debug: Replaced trivial Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#0 <- block@1) (new_items_count#1) with new_items_count#0 in current definition for 1 blocks
debug: Terminated block@2
debug: Looking for 'write_offset' in an unsealed block creating an incomplete Phi: block@3
debug: Created Phi assignment: let write_offset#1: uint64 = undefined while trying to resolve 'write_offset' in block@3
debug: Looking for 'write_end' in an unsealed block creating an incomplete Phi: block@3
debug: Created Phi assignment: let write_end#1: uint64 = undefined while trying to resolve 'write_end' in block@3
debug: Terminated block@3
debug: Sealing block@4
debug: Looking for 'result' in an unsealed block creating an incomplete Phi: block@3
debug: Created Phi assignment: let result#2: bytes = undefined while trying to resolve 'result' in block@3
debug: Looking for 'new_items_bytes' in an unsealed block creating an incomplete Phi: block@3
debug: Created Phi assignment: let new_items_bytes#1: bytes = undefined while trying to resolve 'new_items_bytes' in block@3
debug: Looking for 'read_offset' in an unsealed block creating an incomplete Phi: block@3
debug: Created Phi assignment: let read_offset#1: uint64 = undefined while trying to resolve 'read_offset' in block@3
debug: Looking for 'read_step' in an unsealed block creating an incomplete Phi: block@3
debug: Created Phi assignment: let read_step#1: uint64 = undefined while trying to resolve 'read_step' in block@3
debug: Terminated block@4
debug: Sealing block@3
debug: Added write_offset#0 to Phi node: let write_offset#1: uint64 = φ(write_offset#0 <- block@2) in block@2
debug: Added write_offset#2 to Phi node: let write_offset#1: uint64 = φ(write_offset#0 <- block@2, write_offset#2 <- block@4) in block@4
debug: Added write_end#0 to Phi node: let write_end#1: uint64 = φ(write_end#0 <- block@2) in block@2
debug: Added write_end#1 to Phi node: let write_end#1: uint64 = φ(write_end#0 <- block@2, write_end#1 <- block@4) in block@4
debug: Replacing trivial Phi node: let write_end#1: uint64 = φ(write_end#0 <- block@2, write_end#1 <- block@4) (write_end#1) with write_end#0
debug: Deleting Phi assignment: let write_end#1: uint64 = φ(write_end#0 <- block@2, write_end#1 <- block@4)
debug: Replaced trivial Phi node: let write_end#1: uint64 = φ(write_end#0 <- block@2, write_end#1 <- block@4) (write_end#1) with write_end#0 in current definition for 2 blocks
debug: Created Phi assignment: let result#4: bytes = undefined while trying to resolve 'result' in block@2
debug: Added result#0 to Phi node: let result#4: bytes = φ(result#0 <- block@0) in block@0
debug: Added result#1 to Phi node: let result#4: bytes = φ(result#0 <- block@0, result#1 <- block@1) in block@1
debug: Added result#4 to Phi node: let result#2: bytes = φ(result#4 <- block@2) in block@2
debug: Added result#3 to Phi node: let result#2: bytes = φ(result#4 <- block@2, result#3 <- block@4) in block@4
debug: Created Phi assignment: let new_items_bytes#2: bytes = undefined while trying to resolve 'new_items_bytes' in block@2
debug: Added new_items_bytes#0 to Phi node: let new_items_bytes#2: bytes = φ(new_items_bytes#0 <- block@0) in block@0
debug: Added new_items_bytes#0 to Phi node: let new_items_bytes#2: bytes = φ(new_items_bytes#0 <- block@0, new_items_bytes#0 <- block@1) in block@1
debug: Replacing trivial Phi node: let new_items_bytes#2: bytes = φ(new_items_bytes#0 <- block@0, new_items_bytes#0 <- block@1) (new_items_bytes#2) with new_items_bytes#0
debug: Deleting Phi assignment: let new_items_bytes#2: bytes = φ(new_items_bytes#0 <- block@0, new_items_bytes#0 <- block@1)
debug: Replaced trivial Phi node: let new_items_bytes#2: bytes = φ(new_items_bytes#0 <- block@0, new_items_bytes#0 <- block@1) (new_items_bytes#2) with new_items_bytes#0 in current definition for 1 blocks
debug: Added new_items_bytes#0 to Phi node: let new_items_bytes#1: bytes = φ(new_items_bytes#0 <- block@2) in block@2
debug: Added new_items_bytes#1 to Phi node: let new_items_bytes#1: bytes = φ(new_items_bytes#0 <- block@2, new_items_bytes#1 <- block@4) in block@4
debug: Replacing trivial Phi node: let new_items_bytes#1: bytes = φ(new_items_bytes#0 <- block@2, new_items_bytes#1 <- block@4) (new_items_bytes#1) with new_items_bytes#0
debug: Deleting Phi assignment: let new_items_bytes#1: bytes = φ(new_items_bytes#0 <- block@2, new_items_bytes#1 <- block@4)
debug: Replaced trivial Phi node: let new_items_bytes#1: bytes = φ(new_items_bytes#0 <- block@2, new_items_bytes#1 <- block@4) (new_items_bytes#1) with new_items_bytes#0 in current definition for 2 blocks
debug: Added read_offset#0 to Phi node: let read_offset#1: uint64 = φ(read_offset#0 <- block@2) in block@2
debug: Added read_offset#2 to Phi node: let read_offset#1: uint64 = φ(read_offset#0 <- block@2, read_offset#2 <- block@4) in block@4
debug: Created Phi assignment: let read_step#2: uint64 = undefined while trying to resolve 'read_step' in block@2
debug: Added read_step#0 to Phi node: let read_step#2: uint64 = φ(read_step#0 <- block@0) in block@0
debug: Added read_step#0 to Phi node: let read_step#2: uint64 = φ(read_step#0 <- block@0, read_step#0 <- block@1) in block@1
debug: Replacing trivial Phi node: let read_step#2: uint64 = φ(read_step#0 <- block@0, read_step#0 <- block@1) (read_step#2) with read_step#0
debug: Deleting Phi assignment: let read_step#2: uint64 = φ(read_step#0 <- block@0, read_step#0 <- block@1)
debug: Replaced trivial Phi node: let read_step#2: uint64 = φ(read_step#0 <- block@0, read_step#0 <- block@1) (read_step#2) with read_step#0 in current definition for 1 blocks
debug: Added read_step#0 to Phi node: let read_step#1: uint64 = φ(read_step#0 <- block@2) in block@2
debug: Added read_step#1 to Phi node: let read_step#1: uint64 = φ(read_step#0 <- block@2, read_step#1 <- block@4) in block@4
debug: Replacing trivial Phi node: let read_step#1: uint64 = φ(read_step#0 <- block@2, read_step#1 <- block@4) (read_step#1) with read_step#0
debug: Deleting Phi assignment: let read_step#1: uint64 = φ(read_step#0 <- block@2, read_step#1 <- block@4)
debug: Replaced trivial Phi node: let read_step#1: uint64 = φ(read_step#0 <- block@2, read_step#1 <- block@4) (read_step#1) with read_step#0 in current definition for 2 blocks
debug: Sealing block@5
debug: Terminated block@5
debug: Building IR for function _puya_lib.arc4.dynamic_array_concat_byte_length_head
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function _puya_lib.arc4.dynamic_array_concat_dynamic_element
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'value_internal%0' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let value_internal%0#1: uint64 = undefined while trying to resolve 'value_internal%0' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'array_head_and_tail' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let array_head_and_tail#1: bytes = undefined while trying to resolve 'array_head_and_tail' in block@1
debug: Looking for 'new_head' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let new_head#1: bytes = undefined while trying to resolve 'new_head' in block@1
debug: Looking for 'item_offset_adjustment' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let item_offset_adjustment#1: uint64 = undefined while trying to resolve 'item_offset_adjustment' in block@1
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@1
debug: Added value_internal%0#0 to Phi node: let value_internal%0#1: uint64 = φ(value_internal%0#0 <- block@0) in block@0
debug: Added value_internal%0#2 to Phi node: let value_internal%0#1: uint64 = φ(value_internal%0#0 <- block@0, value_internal%0#2 <- block@3) in block@3
debug: Added array_head_and_tail#0 to Phi node: let array_head_and_tail#1: bytes = φ(array_head_and_tail#0 <- block@0) in block@0
debug: Added array_head_and_tail#1 to Phi node: let array_head_and_tail#1: bytes = φ(array_head_and_tail#0 <- block@0, array_head_and_tail#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let array_head_and_tail#1: bytes = φ(array_head_and_tail#0 <- block@0, array_head_and_tail#1 <- block@3) (array_head_and_tail#1) with array_head_and_tail#0
debug: Deleting Phi assignment: let array_head_and_tail#1: bytes = φ(array_head_and_tail#0 <- block@0, array_head_and_tail#1 <- block@3)
debug: Replaced trivial Phi node: let array_head_and_tail#1: bytes = φ(array_head_and_tail#0 <- block@0, array_head_and_tail#1 <- block@3) (array_head_and_tail#1) with array_head_and_tail#0 in current definition for 3 blocks
debug: Added new_head#0 to Phi node: let new_head#1: bytes = φ(new_head#0 <- block@0) in block@0
debug: Added new_head#2 to Phi node: let new_head#1: bytes = φ(new_head#0 <- block@0, new_head#2 <- block@3) in block@3
debug: Added item_offset_adjustment#0 to Phi node: let item_offset_adjustment#1: uint64 = φ(item_offset_adjustment#0 <- block@0) in block@0
debug: Added item_offset_adjustment#1 to Phi node: let item_offset_adjustment#1: uint64 = φ(item_offset_adjustment#0 <- block@0, item_offset_adjustment#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let item_offset_adjustment#1: uint64 = φ(item_offset_adjustment#0 <- block@0, item_offset_adjustment#1 <- block@3) (item_offset_adjustment#1) with item_offset_adjustment#0
debug: Deleting Phi assignment: let item_offset_adjustment#1: uint64 = φ(item_offset_adjustment#0 <- block@0, item_offset_adjustment#1 <- block@3)
debug: Replaced trivial Phi node: let item_offset_adjustment#1: uint64 = φ(item_offset_adjustment#0 <- block@0, item_offset_adjustment#1 <- block@3) (item_offset_adjustment#1) with item_offset_adjustment#0 in current definition for 3 blocks
debug: Sealing block@4
debug: Created Phi assignment: let new_items_count#1: uint64 = undefined while trying to resolve 'new_items_count' in block@1
debug: Added new_items_count#0 to Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0) in block@0
debug: Added new_items_count#1 to Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#1 <- block@3) (new_items_count#1) with new_items_count#0
debug: Deleting Phi assignment: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#1 <- block@3)
debug: Replaced trivial Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#1 <- block@3) (new_items_count#1) with new_items_count#0 in current definition for 3 blocks
debug: Terminated block@4
debug: Looking for 'value_internal%1' in an unsealed block creating an incomplete Phi: block@5
debug: Created Phi assignment: let value_internal%1#1: uint64 = undefined while trying to resolve 'value_internal%1' in block@5
debug: Terminated block@5
debug: Sealing block@6
debug: Looking for 'new_head_and_tail' in an unsealed block creating an incomplete Phi: block@5
debug: Created Phi assignment: let new_head_and_tail#1: bytes = undefined while trying to resolve 'new_head_and_tail' in block@5
debug: Looking for 'new_head' in an unsealed block creating an incomplete Phi: block@5
debug: Created Phi assignment: let new_head#3: bytes = undefined while trying to resolve 'new_head' in block@5
debug: Looking for 'head_and_tail_length' in an unsealed block creating an incomplete Phi: block@5
debug: Created Phi assignment: let head_and_tail_length#1: uint64 = undefined while trying to resolve 'head_and_tail_length' in block@5
debug: Terminated block@6
debug: Sealing block@7
debug: Terminated block@7
debug: Sealing block@5
debug: Added value_internal%1#0 to Phi node: let value_internal%1#1: uint64 = φ(value_internal%1#0 <- block@4) in block@4
debug: Added value_internal%1#2 to Phi node: let value_internal%1#1: uint64 = φ(value_internal%1#0 <- block@4, value_internal%1#2 <- block@7) in block@7
debug: Created Phi assignment: let new_head_and_tail#2: bytes = undefined while trying to resolve 'new_head_and_tail' in block@1
debug: Added new_head_and_tail#0 to Phi node: let new_head_and_tail#2: bytes = φ(new_head_and_tail#0 <- block@0) in block@0
debug: Added new_head_and_tail#2 to Phi node: let new_head_and_tail#2: bytes = φ(new_head_and_tail#0 <- block@0, new_head_and_tail#2 <- block@3) in block@3
debug: Replacing trivial Phi node: let new_head_and_tail#2: bytes = φ(new_head_and_tail#0 <- block@0, new_head_and_tail#2 <- block@3) (new_head_and_tail#2) with new_head_and_tail#0
debug: Deleting Phi assignment: let new_head_and_tail#2: bytes = φ(new_head_and_tail#0 <- block@0, new_head_and_tail#2 <- block@3)
debug: Replaced trivial Phi node: let new_head_and_tail#2: bytes = φ(new_head_and_tail#0 <- block@0, new_head_and_tail#2 <- block@3) (new_head_and_tail#2) with new_head_and_tail#0 in current definition for 3 blocks
debug: Added new_head_and_tail#0 to Phi node: let new_head_and_tail#1: bytes = φ(new_head_and_tail#0 <- block@4) in block@4
debug: Added new_head_and_tail#1 to Phi node: let new_head_and_tail#1: bytes = φ(new_head_and_tail#0 <- block@4, new_head_and_tail#1 <- block@7) in block@7
debug: Replacing trivial Phi node: let new_head_and_tail#1: bytes = φ(new_head_and_tail#0 <- block@4, new_head_and_tail#1 <- block@7) (new_head_and_tail#1) with new_head_and_tail#0
debug: Deleting Phi assignment: let new_head_and_tail#1: bytes = φ(new_head_and_tail#0 <- block@4, new_head_and_tail#1 <- block@7)
debug: Replaced trivial Phi node: let new_head_and_tail#1: bytes = φ(new_head_and_tail#0 <- block@4, new_head_and_tail#1 <- block@7) (new_head_and_tail#1) with new_head_and_tail#0 in current definition for 3 blocks
debug: Added new_head#1 to Phi node: let new_head#3: bytes = φ(new_head#1 <- block@4) in block@4
debug: Added new_head#4 to Phi node: let new_head#3: bytes = φ(new_head#1 <- block@4, new_head#4 <- block@7) in block@7
debug: Added head_and_tail_length#0 to Phi node: let head_and_tail_length#1: uint64 = φ(head_and_tail_length#0 <- block@4) in block@4
debug: Added head_and_tail_length#1 to Phi node: let head_and_tail_length#1: uint64 = φ(head_and_tail_length#0 <- block@4, head_and_tail_length#1 <- block@7) in block@7
debug: Replacing trivial Phi node: let head_and_tail_length#1: uint64 = φ(head_and_tail_length#0 <- block@4, head_and_tail_length#1 <- block@7) (head_and_tail_length#1) with head_and_tail_length#0
debug: Deleting Phi assignment: let head_and_tail_length#1: uint64 = φ(head_and_tail_length#0 <- block@4, head_and_tail_length#1 <- block@7)
debug: Replaced trivial Phi node: let head_and_tail_length#1: uint64 = φ(head_and_tail_length#0 <- block@4, head_and_tail_length#1 <- block@7) (head_and_tail_length#1) with head_and_tail_length#0 in current definition for 3 blocks
debug: Sealing block@8
debug: Created Phi assignment: let array_items_count#1: uint64 = undefined while trying to resolve 'array_items_count' in block@5
debug: Created Phi assignment: let array_items_count#2: uint64 = undefined while trying to resolve 'array_items_count' in block@1
debug: Added array_items_count#0 to Phi node: let array_items_count#2: uint64 = φ(array_items_count#0 <- block@0) in block@0
debug: Added array_items_count#2 to Phi node: let array_items_count#2: uint64 = φ(array_items_count#0 <- block@0, array_items_count#2 <- block@3) in block@3
debug: Replacing trivial Phi node: let array_items_count#2: uint64 = φ(array_items_count#0 <- block@0, array_items_count#2 <- block@3) (array_items_count#2) with array_items_count#0
debug: Deleting Phi assignment: let array_items_count#2: uint64 = φ(array_items_count#0 <- block@0, array_items_count#2 <- block@3)
debug: Replaced trivial Phi node: let array_items_count#2: uint64 = φ(array_items_count#0 <- block@0, array_items_count#2 <- block@3) (array_items_count#2) with array_items_count#0 in current definition for 3 blocks
debug: Added array_items_count#0 to Phi node: let array_items_count#1: uint64 = φ(array_items_count#0 <- block@4) in block@4
debug: Added array_items_count#1 to Phi node: let array_items_count#1: uint64 = φ(array_items_count#0 <- block@4, array_items_count#1 <- block@7) in block@7
debug: Replacing trivial Phi node: let array_items_count#1: uint64 = φ(array_items_count#0 <- block@4, array_items_count#1 <- block@7) (array_items_count#1) with array_items_count#0
debug: Deleting Phi assignment: let array_items_count#1: uint64 = φ(array_items_count#0 <- block@4, array_items_count#1 <- block@7)
debug: Replaced trivial Phi node: let array_items_count#1: uint64 = φ(array_items_count#0 <- block@4, array_items_count#1 <- block@7) (array_items_count#1) with array_items_count#0 in current definition for 3 blocks
debug: Created Phi assignment: let new_items_count#2: uint64 = undefined while trying to resolve 'new_items_count' in block@5
debug: Added new_items_count#0 to Phi node: let new_items_count#2: uint64 = φ(new_items_count#0 <- block@4) in block@4
debug: Added new_items_count#2 to Phi node: let new_items_count#2: uint64 = φ(new_items_count#0 <- block@4, new_items_count#2 <- block@7) in block@7
debug: Replacing trivial Phi node: let new_items_count#2: uint64 = φ(new_items_count#0 <- block@4, new_items_count#2 <- block@7) (new_items_count#2) with new_items_count#0
debug: Deleting Phi assignment: let new_items_count#2: uint64 = φ(new_items_count#0 <- block@4, new_items_count#2 <- block@7)
debug: Replaced trivial Phi node: let new_items_count#2: uint64 = φ(new_items_count#0 <- block@4, new_items_count#2 <- block@7) (new_items_count#2) with new_items_count#0 in current definition for 3 blocks
debug: Created Phi assignment: let array_head_and_tail#2: bytes = undefined while trying to resolve 'array_head_and_tail' in block@5
debug: Added array_head_and_tail#0 to Phi node: let array_head_and_tail#2: bytes = φ(array_head_and_tail#0 <- block@4) in block@4
debug: Added array_head_and_tail#2 to Phi node: let array_head_and_tail#2: bytes = φ(array_head_and_tail#0 <- block@4, array_head_and_tail#2 <- block@7) in block@7
debug: Replacing trivial Phi node: let array_head_and_tail#2: bytes = φ(array_head_and_tail#0 <- block@4, array_head_and_tail#2 <- block@7) (array_head_and_tail#2) with array_head_and_tail#0
debug: Deleting Phi assignment: let array_head_and_tail#2: bytes = φ(array_head_and_tail#0 <- block@4, array_head_and_tail#2 <- block@7)
debug: Replaced trivial Phi node: let array_head_and_tail#2: bytes = φ(array_head_and_tail#0 <- block@4, array_head_and_tail#2 <- block@7) (array_head_and_tail#2) with array_head_and_tail#0 in current definition for 3 blocks
debug: Terminated block@8
debug: Building IR for function _puya_lib.arc4.dynamic_array_replace_byte_length_head
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function _puya_lib.arc4.dynamic_array_replace_dynamic_element
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function _puya_lib.arc4.static_array_replace_dynamic_element
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'value_internal%0' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let value_internal%0#1: uint64 = undefined while trying to resolve 'value_internal%0' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'new_head_and_tail' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let new_head_and_tail#1: bytes = undefined while trying to resolve 'new_head_and_tail' in block@1
debug: Looking for 'new_item_length' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let new_item_length#1: uint64 = undefined while trying to resolve 'new_item_length' in block@1
debug: Looking for 'original_item_length' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let original_item_length#1: uint64 = undefined while trying to resolve 'original_item_length' in block@1
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@1
debug: Added value_internal%0#0 to Phi node: let value_internal%0#1: uint64 = φ(value_internal%0#0 <- block@0) in block@0
debug: Added value_internal%0#2 to Phi node: let value_internal%0#1: uint64 = φ(value_internal%0#0 <- block@0, value_internal%0#2 <- block@3) in block@3
debug: Added new_head_and_tail#0 to Phi node: let new_head_and_tail#1: bytes = φ(new_head_and_tail#0 <- block@0) in block@0
debug: Added new_head_and_tail#2 to Phi node: let new_head_and_tail#1: bytes = φ(new_head_and_tail#0 <- block@0, new_head_and_tail#2 <- block@3) in block@3
debug: Added new_item_length#0 to Phi node: let new_item_length#1: uint64 = φ(new_item_length#0 <- block@0) in block@0
debug: Added new_item_length#1 to Phi node: let new_item_length#1: uint64 = φ(new_item_length#0 <- block@0, new_item_length#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let new_item_length#1: uint64 = φ(new_item_length#0 <- block@0, new_item_length#1 <- block@3) (new_item_length#1) with new_item_length#0
debug: Deleting Phi assignment: let new_item_length#1: uint64 = φ(new_item_length#0 <- block@0, new_item_length#1 <- block@3)
debug: Replaced trivial Phi node: let new_item_length#1: uint64 = φ(new_item_length#0 <- block@0, new_item_length#1 <- block@3) (new_item_length#1) with new_item_length#0 in current definition for 3 blocks
debug: Added original_item_length#0 to Phi node: let original_item_length#1: uint64 = φ(original_item_length#0 <- block@0) in block@0
debug: Added original_item_length#1 to Phi node: let original_item_length#1: uint64 = φ(original_item_length#0 <- block@0, original_item_length#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let original_item_length#1: uint64 = φ(original_item_length#0 <- block@0, original_item_length#1 <- block@3) (original_item_length#1) with original_item_length#0
debug: Deleting Phi assignment: let original_item_length#1: uint64 = φ(original_item_length#0 <- block@0, original_item_length#1 <- block@3)
debug: Replaced trivial Phi node: let original_item_length#1: uint64 = φ(original_item_length#0 <- block@0, original_item_length#1 <- block@3) (original_item_length#1) with original_item_length#0 in current definition for 3 blocks
debug: Sealing block@4
debug: Terminated block@4
debug: Building IR for function _puya_lib.arc4.static_array_replace_byte_length_head
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function _puya_lib.arc4.recalculate_head_for_elements_with_byte_length_head
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'value_internal%0' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let value_internal%0#1: uint64 = undefined while trying to resolve 'value_internal%0' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'tail_offset' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let tail_offset#1: uint64 = undefined while trying to resolve 'tail_offset' in block@1
debug: Looking for 'array_head_and_tail' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let array_head_and_tail#1: bytes = undefined while trying to resolve 'array_head_and_tail' in block@1
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@1
debug: Added value_internal%0#0 to Phi node: let value_internal%0#1: uint64 = φ(value_internal%0#0 <- block@0) in block@0
debug: Added value_internal%0#2 to Phi node: let value_internal%0#1: uint64 = φ(value_internal%0#0 <- block@0, value_internal%0#2 <- block@3) in block@3
debug: Added tail_offset#0 to Phi node: let tail_offset#1: uint64 = φ(tail_offset#0 <- block@0) in block@0
debug: Added tail_offset#2 to Phi node: let tail_offset#1: uint64 = φ(tail_offset#0 <- block@0, tail_offset#2 <- block@3) in block@3
debug: Added array_head_and_tail#0 to Phi node: let array_head_and_tail#1: bytes = φ(array_head_and_tail#0 <- block@0) in block@0
debug: Added array_head_and_tail#2 to Phi node: let array_head_and_tail#1: bytes = φ(array_head_and_tail#0 <- block@0, array_head_and_tail#2 <- block@3) in block@3
debug: Sealing block@4
debug: Terminated block@4
debug: Building IR for function test_cases.contains.contract.one_u64
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.contains.contract.one_arc4u64
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.contains.contract.two_u64
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.contains.contract.two_u8
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.contains.contract.three_u512
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.contains.contract.four_biguint
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.contains.contract.foo_string
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.contains.contract.foo_arc4
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.contains.contract.bar_string
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.contains.contract.bar_arc4
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.contains.contract.baz_string
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.contains.contract.MyContract.approval_program
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.contains.contract.MyContract.clear_state_program
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.contains.contract.MyContract.is_in_tuple_1
debug: Sealing block@0
debug: Terminated block@0
debug: Sealing block@1
contains/contract.py:44:16 debug: encountered already materialized expression (x), reusing result: x#0
contains/contract.py:44:21 debug: encountered already materialized expression (y), reusing result: (y.0#0, y.1#0, y.2#0)
debug: Terminated block@1
debug: Sealing block@2
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@4
debug: Created Phi assignment: let or_result%0#2: bool = undefined while trying to resolve 'or_result%0' in block@4
debug: Added or_result%0#0 to Phi node: let or_result%0#2: bool = φ(or_result%0#0 <- block@2) in block@2
debug: Added or_result%0#1 to Phi node: let or_result%0#2: bool = φ(or_result%0#0 <- block@2, or_result%0#1 <- block@3) in block@3
debug: Terminated block@4
debug: Building IR for function test_cases.contains.contract.MyContract.is_in_tuple_2
debug: Sealing block@0
debug: Terminated block@0
debug: Sealing block@1
contains/contract.py:48:16 debug: encountered already materialized expression (x), reusing result: x#0
contains/contract.py:48:21 debug: encountered already materialized expression (y), reusing result: (y.0#0, y.1#0, y.2#0)
debug: Terminated block@1
debug: Sealing block@2
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@4
debug: Created Phi assignment: let or_result%0#2: bool = undefined while trying to resolve 'or_result%0' in block@4
debug: Added or_result%0#0 to Phi node: let or_result%0#2: bool = φ(or_result%0#0 <- block@2) in block@2
debug: Added or_result%0#1 to Phi node: let or_result%0#2: bool = φ(or_result%0#0 <- block@2, or_result%0#1 <- block@3) in block@3
debug: Terminated block@4
debug: Building IR for function test_cases.contains.contract.MyContract.is_in_tuple_3
debug: Sealing block@0
debug: Terminated block@0
debug: Sealing block@1
contains/contract.py:52:16 debug: encountered already materialized expression (x), reusing result: x#0
contains/contract.py:52:21 debug: encountered already materialized expression (y), reusing result: (y.0#0, y.1#0)
debug: Terminated block@1
debug: Sealing block@2
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@4
debug: Created Phi assignment: let or_result%0#2: bool = undefined while trying to resolve 'or_result%0' in block@4
debug: Added or_result%0#0 to Phi node: let or_result%0#2: bool = φ(or_result%0#0 <- block@2) in block@2
debug: Added or_result%0#1 to Phi node: let or_result%0#2: bool = φ(or_result%0#0 <- block@2, or_result%0#1 <- block@3) in block@3
debug: Terminated block@4
debug: Building IR for function test_cases.contains.contract.MyContract.test_string_types
debug: Sealing block@0
debug: Terminated block@0
debug: Sealing block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@4
debug: Created Phi assignment: let or_result%0#2: bool = undefined while trying to resolve 'or_result%0' in block@4
debug: Added or_result%0#0 to Phi node: let or_result%0#2: bool = φ(or_result%0#0 <- block@2) in block@2
debug: Added or_result%0#1 to Phi node: let or_result%0#2: bool = φ(or_result%0#0 <- block@2, or_result%0#1 <- block@3) in block@3
debug: Terminated block@4
debug: Sealing block@5
debug: Terminated block@5
debug: Sealing block@6
debug: Terminated block@6
debug: Sealing block@7
debug: Terminated block@7
debug: Sealing block@8
debug: Created Phi assignment: let or_result%1#2: bool = undefined while trying to resolve 'or_result%1' in block@8
debug: Added or_result%1#0 to Phi node: let or_result%1#2: bool = φ(or_result%1#0 <- block@6) in block@6
debug: Added or_result%1#1 to Phi node: let or_result%1#2: bool = φ(or_result%1#0 <- block@6, or_result%1#1 <- block@7) in block@7
debug: Terminated block@8
debug: Sealing block@9
debug: Terminated block@9
debug: Sealing block@10
debug: Terminated block@10
debug: Sealing block@11
debug: Terminated block@11
debug: Sealing block@12
debug: Terminated block@12
debug: Sealing block@13
debug: Created Phi assignment: let or_result%2#2: bool = undefined while trying to resolve 'or_result%2' in block@13
debug: Added or_result%2#0 to Phi node: let or_result%2#2: bool = φ(or_result%2#0 <- block@11) in block@11
debug: Added or_result%2#1 to Phi node: let or_result%2#2: bool = φ(or_result%2#0 <- block@11, or_result%2#1 <- block@12) in block@12
debug: Terminated block@13
debug: Sealing block@14
debug: Terminated block@14
debug: Sealing block@15
debug: Terminated block@15
debug: Sealing block@16
debug: Terminated block@16
debug: Sealing block@17
debug: Terminated block@17
debug: Sealing block@18
debug: Created Phi assignment: let or_result%3#2: bool = undefined while trying to resolve 'or_result%3' in block@18
debug: Added or_result%3#0 to Phi node: let or_result%3#2: bool = φ(or_result%3#0 <- block@16) in block@16
debug: Added or_result%3#1 to Phi node: let or_result%3#2: bool = φ(or_result%3#0 <- block@16, or_result%3#1 <- block@17) in block@17
debug: Terminated block@18
debug: Sealing block@19
debug: Terminated block@19
debug: Sealing block@20
debug: Terminated block@20
debug: Sealing block@21
debug: Terminated block@21
debug: Sealing block@22
debug: Created Phi assignment: let or_result%4#2: bool = undefined while trying to resolve 'or_result%4' in block@22
debug: Added or_result%4#0 to Phi node: let or_result%4#2: bool = φ(or_result%4#0 <- block@20) in block@20
debug: Added or_result%4#1 to Phi node: let or_result%4#2: bool = φ(or_result%4#0 <- block@20, or_result%4#1 <- block@21) in block@21
debug: Terminated block@22
debug: Sealing block@23
debug: Terminated block@23
debug: Sealing block@24
debug: Terminated block@24
debug: Sealing block@25
debug: Terminated block@25
debug: Sealing block@26
debug: Created Phi assignment: let or_result%5#2: bool = undefined while trying to resolve 'or_result%5' in block@26
debug: Added or_result%5#0 to Phi node: let or_result%5#2: bool = φ(or_result%5#0 <- block@24) in block@24
debug: Added or_result%5#1 to Phi node: let or_result%5#2: bool = φ(or_result%5#0 <- block@24, or_result%5#1 <- block@25) in block@25
debug: Terminated block@26
debug: Sealing block@27
debug: Terminated block@27
debug: Sealing block@28
debug: Terminated block@28
debug: Sealing block@29
debug: Terminated block@29
debug: Sealing block@30
debug: Terminated block@30
debug: Sealing block@31
debug: Created Phi assignment: let or_result%6#2: bool = undefined while trying to resolve 'or_result%6' in block@31
debug: Added or_result%6#0 to Phi node: let or_result%6#2: bool = φ(or_result%6#0 <- block@29) in block@29
debug: Added or_result%6#1 to Phi node: let or_result%6#2: bool = φ(or_result%6#0 <- block@29, or_result%6#1 <- block@30) in block@30
debug: Terminated block@31
debug: Sealing block@32
debug: Terminated block@32
debug: Sealing block@33
debug: Terminated block@33
debug: Sealing block@34
debug: Terminated block@34
debug: Sealing block@35
debug: Terminated block@35
debug: Sealing block@36
debug: Created Phi assignment: let or_result%7#2: bool = undefined while trying to resolve 'or_result%7' in block@36
debug: Added or_result%7#0 to Phi node: let or_result%7#2: bool = φ(or_result%7#0 <- block@34) in block@34
debug: Added or_result%7#1 to Phi node: let or_result%7#2: bool = φ(or_result%7#0 <- block@34, or_result%7#1 <- block@35) in block@35
debug: Terminated block@36
debug: Sealing block@37
debug: Terminated block@37
debug: Sealing block@38
debug: Terminated block@38
debug: Sealing block@39
debug: Terminated block@39
debug: Sealing block@40
debug: Created Phi assignment: let or_result%8#2: bool = undefined while trying to resolve 'or_result%8' in block@40
debug: Added or_result%8#0 to Phi node: let or_result%8#2: bool = φ(or_result%8#0 <- block@38) in block@38
debug: Added or_result%8#1 to Phi node: let or_result%8#2: bool = φ(or_result%8#0 <- block@38, or_result%8#1 <- block@39) in block@39
debug: Terminated block@40
debug: Sealing block@41
debug: Terminated block@41
debug: Sealing block@42
debug: Terminated block@42
debug: Sealing block@43
debug: Terminated block@43
debug: Sealing block@44
debug: Created Phi assignment: let or_result%9#2: bool = undefined while trying to resolve 'or_result%9' in block@44
debug: Added or_result%9#0 to Phi node: let or_result%9#2: bool = φ(or_result%9#0 <- block@42) in block@42
debug: Added or_result%9#1 to Phi node: let or_result%9#2: bool = φ(or_result%9#0 <- block@42, or_result%9#1 <- block@43) in block@43
debug: Terminated block@44
debug: Building IR for function test_cases.contains.contract.MyContract.test_numeric_types
debug: Sealing block@0
debug: Terminated block@0
debug: Sealing block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@4
debug: Created Phi assignment: let or_result%0#2: bool = undefined while trying to resolve 'or_result%0' in block@4
debug: Added or_result%0#0 to Phi node: let or_result%0#2: bool = φ(or_result%0#0 <- block@2) in block@2
debug: Added or_result%0#1 to Phi node: let or_result%0#2: bool = φ(or_result%0#0 <- block@2, or_result%0#1 <- block@3) in block@3
debug: Terminated block@4
debug: Sealing block@5
debug: Terminated block@5
debug: Sealing block@6
debug: Terminated block@6
debug: Sealing block@7
debug: Terminated block@7
debug: Sealing block@8
debug: Created Phi assignment: let or_result%1#2: bool = undefined while trying to resolve 'or_result%1' in block@8
debug: Added or_result%1#0 to Phi node: let or_result%1#2: bool = φ(or_result%1#0 <- block@6) in block@6
debug: Added or_result%1#1 to Phi node: let or_result%1#2: bool = φ(or_result%1#0 <- block@6, or_result%1#1 <- block@7) in block@7
debug: Terminated block@8
debug: Sealing block@9
debug: Terminated block@9
debug: Sealing block@10
debug: Terminated block@10
debug: Sealing block@11
debug: Terminated block@11
debug: Sealing block@12
debug: Terminated block@12
debug: Sealing block@13
debug: Created Phi assignment: let or_result%2#2: bool = undefined while trying to resolve 'or_result%2' in block@13
debug: Added or_result%2#0 to Phi node: let or_result%2#2: bool = φ(or_result%2#0 <- block@11) in block@11
debug: Added or_result%2#1 to Phi node: let or_result%2#2: bool = φ(or_result%2#0 <- block@11, or_result%2#1 <- block@12) in block@12
debug: Terminated block@13
debug: Sealing block@14
debug: Terminated block@14
debug: Sealing block@15
debug: Terminated block@15
debug: Sealing block@16
debug: Terminated block@16
debug: Sealing block@17
debug: Terminated block@17
debug: Sealing block@18
debug: Created Phi assignment: let or_result%3#2: bool = undefined while trying to resolve 'or_result%3' in block@18
debug: Added or_result%3#0 to Phi node: let or_result%3#2: bool = φ(or_result%3#0 <- block@16) in block@16
debug: Added or_result%3#1 to Phi node: let or_result%3#2: bool = φ(or_result%3#0 <- block@16, or_result%3#1 <- block@17) in block@17
debug: Terminated block@18
debug: Sealing block@19
contains/contract.py:93:16 debug: encountered already materialized expression (2u), reusing result: 2u
debug: Terminated block@19
debug: Sealing block@20
contains/contract.py:93:16 debug: encountered already materialized expression (2u), reusing result: 2u
debug: Terminated block@20
debug: Sealing block@21
debug: Terminated block@21
debug: Sealing block@22
debug: Terminated block@22
debug: Sealing block@23
debug: Created Phi assignment: let or_result%4#2: bool = undefined while trying to resolve 'or_result%4' in block@23
debug: Added or_result%4#0 to Phi node: let or_result%4#2: bool = φ(or_result%4#0 <- block@21) in block@21
debug: Added or_result%4#1 to Phi node: let or_result%4#2: bool = φ(or_result%4#0 <- block@21, or_result%4#1 <- block@22) in block@22
debug: Terminated block@23
debug: Sealing block@24
debug: Terminated block@24
debug: Sealing block@25
debug: Terminated block@25
debug: Sealing block@26
debug: Terminated block@26
debug: Sealing block@27
debug: Terminated block@27
debug: Sealing block@28
debug: Created Phi assignment: let or_result%5#2: bool = undefined while trying to resolve 'or_result%5' in block@28
debug: Added or_result%5#0 to Phi node: let or_result%5#2: bool = φ(or_result%5#0 <- block@26) in block@26
debug: Added or_result%5#1 to Phi node: let or_result%5#2: bool = φ(or_result%5#0 <- block@26, or_result%5#1 <- block@27) in block@27
debug: Terminated block@28
debug: Sealing block@29
debug: Terminated block@29
debug: Sealing block@30
debug: Terminated block@30
debug: Sealing block@31
debug: Terminated block@31
debug: Sealing block@32
debug: Terminated block@32
debug: Sealing block@33
debug: Created Phi assignment: let or_result%6#2: bool = undefined while trying to resolve 'or_result%6' in block@33
debug: Added or_result%6#0 to Phi node: let or_result%6#2: bool = φ(or_result%6#0 <- block@31) in block@31
debug: Added or_result%6#1 to Phi node: let or_result%6#2: bool = φ(or_result%6#0 <- block@31, or_result%6#1 <- block@32) in block@32
debug: Terminated block@33
debug: Sealing block@34
debug: Terminated block@34
debug: Sealing block@35
debug: Terminated block@35
debug: Sealing block@36
debug: Terminated block@36
debug: Sealing block@37
debug: Created Phi assignment: let or_result%7#2: bool = undefined while trying to resolve 'or_result%7' in block@37
debug: Added or_result%7#0 to Phi node: let or_result%7#2: bool = φ(or_result%7#0 <- block@35) in block@35
debug: Added or_result%7#1 to Phi node: let or_result%7#2: bool = φ(or_result%7#0 <- block@35, or_result%7#1 <- block@36) in block@36
debug: Terminated block@37
debug: Sealing block@38
debug: Terminated block@38
debug: Sealing block@39
debug: Terminated block@39
debug: Sealing block@40
debug: Terminated block@40
debug: Sealing block@41
debug: Created Phi assignment: let or_result%8#2: bool = undefined while trying to resolve 'or_result%8' in block@41
debug: Added or_result%8#0 to Phi node: let or_result%8#2: bool = φ(or_result%8#0 <- block@39) in block@39
debug: Added or_result%8#1 to Phi node: let or_result%8#2: bool = φ(or_result%8#0 <- block@39, or_result%8#1 <- block@40) in block@40
debug: Terminated block@41
debug: Sealing block@42
debug: Terminated block@42
debug: Sealing block@43
debug: Terminated block@43
debug: Sealing block@44
debug: Terminated block@44
debug: Sealing block@45
debug: Created Phi assignment: let or_result%9#2: bool = undefined while trying to resolve 'or_result%9' in block@45
debug: Added or_result%9#0 to Phi node: let or_result%9#2: bool = φ(or_result%9#0 <- block@43) in block@43
debug: Added or_result%9#1 to Phi node: let or_result%9#2: bool = φ(or_result%9#0 <- block@43, or_result%9#1 <- block@44) in block@44
debug: Terminated block@45
debug: Sealing block@46
debug: Terminated block@46
debug: Sealing block@47
debug: Terminated block@47
debug: Sealing block@48
debug: Terminated block@48
debug: Sealing block@49
debug: Created Phi assignment: let or_result%10#2: bool = undefined while trying to resolve 'or_result%10' in block@49
debug: Added or_result%10#0 to Phi node: let or_result%10#2: bool = φ(or_result%10#0 <- block@47) in block@47
debug: Added or_result%10#1 to Phi node: let or_result%10#2: bool = φ(or_result%10#0 <- block@47, or_result%10#1 <- block@48) in block@48
debug: Terminated block@49
debug: Sealing block@50
debug: Terminated block@50
debug: Sealing block@51
debug: Terminated block@51
debug: Sealing block@52
debug: Terminated block@52
debug: Sealing block@53
debug: Created Phi assignment: let or_result%11#2: bool = undefined while trying to resolve 'or_result%11' in block@53
debug: Added or_result%11#0 to Phi node: let or_result%11#2: bool = φ(or_result%11#0 <- block@51) in block@51
debug: Added or_result%11#1 to Phi node: let or_result%11#2: bool = φ(or_result%11#0 <- block@51, or_result%11#1 <- block@52) in block@52
debug: Terminated block@53
debug: Sealing block@54
contains/contract.py:102:16 debug: encountered already materialized expression (2u), reusing result: 2u
debug: Terminated block@54
debug: Sealing block@55
debug: Terminated block@55
debug: Sealing block@56
debug: Terminated block@56
debug: Sealing block@57
debug: Created Phi assignment: let or_result%12#2: bool = undefined while trying to resolve 'or_result%12' in block@57
debug: Added or_result%12#0 to Phi node: let or_result%12#2: bool = φ(or_result%12#0 <- block@55) in block@55
debug: Added or_result%12#1 to Phi node: let or_result%12#2: bool = φ(or_result%12#0 <- block@55, or_result%12#1 <- block@56) in block@56
debug: Terminated block@57
debug: Sealing block@58
debug: Terminated block@58
debug: Sealing block@59
debug: Terminated block@59
debug: Sealing block@60
debug: Terminated block@60
debug: Sealing block@61
debug: Created Phi assignment: let or_result%13#2: bool = undefined while trying to resolve 'or_result%13' in block@61
debug: Added or_result%13#0 to Phi node: let or_result%13#2: bool = φ(or_result%13#0 <- block@59) in block@59
debug: Added or_result%13#1 to Phi node: let or_result%13#2: bool = φ(or_result%13#0 <- block@59, or_result%13#1 <- block@60) in block@60
debug: Terminated block@61
debug: Sealing block@62
debug: Terminated block@62
debug: Sealing block@63
debug: Terminated block@63
debug: Sealing block@64
debug: Terminated block@64
debug: Sealing block@65
debug: Created Phi assignment: let or_result%14#2: bool = undefined while trying to resolve 'or_result%14' in block@65
debug: Added or_result%14#0 to Phi node: let or_result%14#2: bool = φ(or_result%14#0 <- block@63) in block@63
debug: Added or_result%14#1 to Phi node: let or_result%14#2: bool = φ(or_result%14#0 <- block@63, or_result%14#1 <- block@64) in block@64
debug: Terminated block@65
debug: Sealing block@66
debug: Terminated block@66
debug: Sealing block@67
debug: Terminated block@67
debug: Sealing block@68
debug: Terminated block@68
debug: Sealing block@69
debug: Created Phi assignment: let or_result%15#2: bool = undefined while trying to resolve 'or_result%15' in block@69
debug: Added or_result%15#0 to Phi node: let or_result%15#2: bool = φ(or_result%15#0 <- block@67) in block@67
debug: Added or_result%15#1 to Phi node: let or_result%15#2: bool = φ(or_result%15#0 <- block@67, or_result%15#1 <- block@68) in block@68
debug: Terminated block@69
debug: Sealing block@70
debug: Terminated block@70
debug: Sealing block@71
debug: Terminated block@71
debug: Sealing block@72
debug: Terminated block@72
debug: Sealing block@73
debug: Created Phi assignment: let or_result%16#2: bool = undefined while trying to resolve 'or_result%16' in block@73
debug: Added or_result%16#0 to Phi node: let or_result%16#2: bool = φ(or_result%16#0 <- block@71) in block@71
debug: Added or_result%16#1 to Phi node: let or_result%16#2: bool = φ(or_result%16#0 <- block@71, or_result%16#1 <- block@72) in block@72
debug: Terminated block@73
debug: Sealing block@74
debug: Terminated block@74
debug: Sealing block@75
debug: Terminated block@75
debug: Sealing block@76
debug: Terminated block@76
debug: Sealing block@77
debug: Terminated block@77
debug: Sealing block@78
debug: Created Phi assignment: let or_result%17#2: bool = undefined while trying to resolve 'or_result%17' in block@78
debug: Added or_result%17#0 to Phi node: let or_result%17#2: bool = φ(or_result%17#0 <- block@76) in block@76
debug: Added or_result%17#1 to Phi node: let or_result%17#2: bool = φ(or_result%17#0 <- block@76, or_result%17#1 <- block@77) in block@77
debug: Terminated block@78
debug: Sealing block@79
debug: Terminated block@79
debug: Sealing block@80
debug: Terminated block@80
debug: Sealing block@81
debug: Terminated block@81
debug: Sealing block@82
debug: Created Phi assignment: let or_result%18#2: bool = undefined while trying to resolve 'or_result%18' in block@82
debug: Added or_result%18#0 to Phi node: let or_result%18#2: bool = φ(or_result%18#0 <- block@80) in block@80
debug: Added or_result%18#1 to Phi node: let or_result%18#2: bool = φ(or_result%18#0 <- block@80, or_result%18#1 <- block@81) in block@81
debug: Terminated block@82
debug: Sealing block@83
contains/contract.py:115:16 debug: encountered already materialized expression (2u), reusing result: 2u
debug: Terminated block@83
debug: Sealing block@84
debug: Terminated block@84
debug: Sealing block@85
debug: Terminated block@85
debug: Sealing block@86
debug: Created Phi assignment: let or_result%19#2: bool = undefined while trying to resolve 'or_result%19' in block@86
debug: Added or_result%19#0 to Phi node: let or_result%19#2: bool = φ(or_result%19#0 <- block@84) in block@84
debug: Added or_result%19#1 to Phi node: let or_result%19#2: bool = φ(or_result%19#0 <- block@84, or_result%19#1 <- block@85) in block@85
debug: Terminated block@86
debug: Sealing block@87
debug: Terminated block@87
debug: Sealing block@88
debug: Terminated block@88
debug: Sealing block@89
debug: Terminated block@89
debug: Sealing block@90
debug: Created Phi assignment: let or_result%20#2: bool = undefined while trying to resolve 'or_result%20' in block@90
debug: Added or_result%20#0 to Phi node: let or_result%20#2: bool = φ(or_result%20#0 <- block@88) in block@88
debug: Added or_result%20#1 to Phi node: let or_result%20#2: bool = φ(or_result%20#0 <- block@88, or_result%20#1 <- block@89) in block@89
debug: Terminated block@90
debug: Sealing block@91
debug: Terminated block@91
debug: Sealing block@92
debug: Terminated block@92
debug: Sealing block@93
debug: Terminated block@93
debug: Sealing block@94
debug: Created Phi assignment: let or_result%21#2: bool = undefined while trying to resolve 'or_result%21' in block@94
debug: Added or_result%21#0 to Phi node: let or_result%21#2: bool = φ(or_result%21#0 <- block@92) in block@92
debug: Added or_result%21#1 to Phi node: let or_result%21#2: bool = φ(or_result%21#0 <- block@92, or_result%21#1 <- block@93) in block@93
debug: Terminated block@94
debug: Sealing block@95
debug: Terminated block@95
debug: Sealing block@96
debug: Terminated block@96
debug: Sealing block@97
debug: Terminated block@97
debug: Sealing block@98
debug: Created Phi assignment: let or_result%22#2: bool = undefined while trying to resolve 'or_result%22' in block@98
debug: Added or_result%22#0 to Phi node: let or_result%22#2: bool = φ(or_result%22#0 <- block@96) in block@96
debug: Added or_result%22#1 to Phi node: let or_result%22#2: bool = φ(or_result%22#0 <- block@96, or_result%22#1 <- block@97) in block@97
debug: Terminated block@98
debug: Sealing block@99
debug: Terminated block@99
debug: Sealing block@100
debug: Terminated block@100
debug: Sealing block@101
debug: Terminated block@101
debug: Sealing block@102
debug: Created Phi assignment: let or_result%23#2: bool = undefined while trying to resolve 'or_result%23' in block@102
debug: Added or_result%23#0 to Phi node: let or_result%23#2: bool = φ(or_result%23#0 <- block@100) in block@100
debug: Added or_result%23#1 to Phi node: let or_result%23#2: bool = φ(or_result%23#0 <- block@100, or_result%23#1 <- block@101) in block@101
debug: Terminated block@102
debug: Sealing block@103
contains/contract.py:130:16 debug: encountered already materialized expression (65_arc4u8), reusing result: 0x41
debug: Terminated block@103
debug: Sealing block@104
debug: Terminated block@104
debug: Sealing block@105
debug: Terminated block@105
debug: Sealing block@106
debug: Created Phi assignment: let or_result%24#2: bool = undefined while trying to resolve 'or_result%24' in block@106
debug: Added or_result%24#0 to Phi node: let or_result%24#2: bool = φ(or_result%24#0 <- block@104) in block@104
debug: Added or_result%24#1 to Phi node: let or_result%24#2: bool = φ(or_result%24#0 <- block@104, or_result%24#1 <- block@105) in block@105
debug: Terminated block@106
debug: Building IR for function algopy._contract.Contract.__init__
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.contains.contract.MyContract.approval_program
debug: Sealing block@0
debug: Terminated block@0
debug: removing unused subroutine _puya_lib.util.ensure_budget
debug: removing unused subroutine _puya_lib.bytes_.is_substring
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_bit
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_fixed_size
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_bits
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_replace_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_replace_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.static_array_replace_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.static_array_replace_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.recalculate_head_for_elements_with_byte_length_head
debug: removing unused subroutine test_cases.contains.contract.MyContract.approval_program
debug: removing unused subroutine test_cases.contains.contract.MyContract.clear_state_program
debug: removing unused subroutine algopy._contract.Contract.__init__
debug: Building IR for function test_cases.contains.contract.MyContract.clear_state_program
debug: Sealing block@0
debug: Terminated block@0
debug: removing unused subroutine _puya_lib.util.ensure_budget
debug: removing unused subroutine _puya_lib.bytes_.is_substring
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_bit
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_fixed_size
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_bits
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_replace_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_replace_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.static_array_replace_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.static_array_replace_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.recalculate_head_for_elements_with_byte_length_head
debug: removing unused subroutine test_cases.contains.contract.one_u64
debug: removing unused subroutine test_cases.contains.contract.one_arc4u64
debug: removing unused subroutine test_cases.contains.contract.two_u64
debug: removing unused subroutine test_cases.contains.contract.two_u8
debug: removing unused subroutine test_cases.contains.contract.three_u512
debug: removing unused subroutine test_cases.contains.contract.four_biguint
debug: removing unused subroutine test_cases.contains.contract.foo_string
debug: removing unused subroutine test_cases.contains.contract.foo_arc4
debug: removing unused subroutine test_cases.contains.contract.bar_string
debug: removing unused subroutine test_cases.contains.contract.bar_arc4
debug: removing unused subroutine test_cases.contains.contract.baz_string
debug: removing unused subroutine test_cases.contains.contract.MyContract.approval_program
debug: removing unused subroutine test_cases.contains.contract.MyContract.clear_state_program
debug: removing unused subroutine test_cases.contains.contract.MyContract.is_in_tuple_1
debug: removing unused subroutine test_cases.contains.contract.MyContract.is_in_tuple_2
debug: removing unused subroutine test_cases.contains.contract.MyContract.is_in_tuple_3
debug: removing unused subroutine test_cases.contains.contract.MyContract.test_string_types
debug: removing unused subroutine test_cases.contains.contract.MyContract.test_numeric_types
debug: removing unused subroutine algopy._contract.Contract.__init__
debug: optimizing approval program of test_cases.contains.contract.MyContract at level 2
debug: Begin optimization pass 1/100
debug: marking trivial method test_cases.contains.contract.one_u64 as inlineable
debug: marking trivial method test_cases.contains.contract.one_arc4u64 as inlineable
debug: marking trivial method test_cases.contains.contract.two_u64 as inlineable
debug: marking trivial method test_cases.contains.contract.two_u8 as inlineable
debug: marking trivial method test_cases.contains.contract.three_u512 as inlineable
debug: marking trivial method test_cases.contains.contract.four_biguint as inlineable
debug: marking trivial method test_cases.contains.contract.foo_string as inlineable
debug: marking trivial method test_cases.contains.contract.bar_string as inlineable
debug: marking trivial method test_cases.contains.contract.baz_string as inlineable
debug: marking single-use function test_cases.contains.contract.MyContract.test_string_types for inlining
debug: marking single-use function test_cases.contains.contract.MyContract.test_numeric_types for inlining
debug: Optimizing subroutine test_cases.contains.contract.MyContract.approval_program
debug: Optimizer: Perform Subroutine Inlining
contains/contract.py:15:20 debug: constant function call to test_cases.contains.contract.MyContract.is_in_tuple_2 in test_cases.contains.contract.MyContract.approval_program
contains/contract.py:18:21 debug: constant function call to test_cases.contains.contract.MyContract.is_in_tuple_2 in test_cases.contains.contract.MyContract.approval_program
contains/contract.py:24:22 debug: constant function call to test_cases.contains.contract.MyContract.is_in_tuple_3 in test_cases.contains.contract.MyContract.approval_program
contains/contract.py:34:9 debug: inlining call to test_cases.contains.contract.MyContract.test_string_types in test_cases.contains.contract.MyContract.approval_program
contains/contract.py:35:9 debug: inlining call to test_cases.contains.contract.MyContract.test_numeric_types in test_cases.contains.contract.MyContract.approval_program
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: tmp%0#0, one_true#0
debug: selected one_true#0 from equivalence set
debug: Found equivalence set: tmp%1#0, one_false#0
debug: selected one_false#0 from equivalence set
debug: Found equivalence set: or_result%0#2, tmp%3#0, two_true#0
debug: selected two_true#0 from equivalence set
debug: Found equivalence set: or_result%0#5, tmp%4#0, two_false#0
debug: selected two_false#0 from equivalence set
debug: Found equivalence set: or_result%0#8, tmp%6#0, three_true#0
debug: selected three_true#0 from equivalence set
debug: Found equivalence set: tmp%8#0, three_false#0
debug: selected three_false#0 from equivalence set
debug: Found equivalence set: tmp%9#2, reinterpret_biguint%0#0
debug: selected tmp%9#2 from equivalence set
debug: Found equivalence set: tmp%14#1, reinterpret_biguint%1#0
debug: selected tmp%14#1 from equivalence set
debug: Found equivalence set: tmp%15#1, reinterpret_biguint%2#0
debug: selected tmp%15#1 from equivalence set
debug: Found equivalence set: tmp%21#1, reinterpret_biguint%3#0
debug: selected tmp%21#1 from equivalence set
debug: Found equivalence set: tmp%22#1, reinterpret_biguint%4#0
debug: selected tmp%22#1 from equivalence set
debug: Found equivalence set: awst_tmp%4#1, reinterpret_biguint%5#0, reinterpret_biguint%7#0, reinterpret_biguint%8#0
debug: selected awst_tmp%4#1 from equivalence set
debug: Found equivalence set: tmp%28#1, reinterpret_biguint%6#0
debug: selected tmp%28#1 from equivalence set
debug: Found equivalence set: tmp%29#1, reinterpret_biguint%9#0
debug: selected tmp%29#1 from equivalence set
debug: Found equivalence set: awst_tmp%5#1, reinterpret_biguint%10#0, reinterpret_biguint%12#0, reinterpret_biguint%13#0
debug: selected awst_tmp%5#1 from equivalence set
debug: Found equivalence set: tmp%34#1, reinterpret_biguint%11#0
debug: selected tmp%34#1 from equivalence set
debug: Found equivalence set: awst_tmp%6#1, reinterpret_biguint%14#0, reinterpret_biguint%15#0
debug: selected awst_tmp%6#1 from equivalence set
debug: Found equivalence set: tmp%48#1, reinterpret_biguint%16#0
debug: selected tmp%48#1 from equivalence set
debug: Found equivalence set: tmp%53#1, reinterpret_biguint%17#0
debug: selected tmp%53#1 from equivalence set
debug: Found equivalence set: tmp%58#1, reinterpret_biguint%18#0
debug: selected tmp%58#1 from equivalence set
debug: Found equivalence set: tmp%63#1, reinterpret_biguint%19#0
debug: selected tmp%63#1 from equivalence set
debug: Found equivalence set: awst_tmp%11#0, reinterpret_biguint%20#0, reinterpret_biguint%22#0
debug: selected awst_tmp%11#0 from equivalence set
debug: Found equivalence set: tmp%68#1, reinterpret_biguint%21#0
debug: selected tmp%68#1 from equivalence set
debug: Found equivalence set: awst_tmp%12#0, reinterpret_biguint%23#0, reinterpret_biguint%25#0
debug: selected awst_tmp%12#0 from equivalence set
debug: Found equivalence set: tmp%73#0, reinterpret_biguint%24#0
debug: selected tmp%73#0 from equivalence set
debug: Found equivalence set: awst_tmp%13#0, reinterpret_biguint%26#0, reinterpret_biguint%27#0
debug: selected awst_tmp%13#0 from equivalence set
debug: Found equivalence set: tmp%90#0, reinterpret_biguint%28#0
debug: selected tmp%90#0 from equivalence set
debug: Found equivalence set: tmp%95#0, reinterpret_biguint%29#0
debug: selected tmp%95#0 from equivalence set
debug: Found equivalence set: tmp%97#0, reinterpret_biguint%30#0
debug: selected tmp%97#0 from equivalence set
debug: Found equivalence set: tmp%103#0, reinterpret_biguint%31#0
debug: selected tmp%103#0 from equivalence set
debug: Found equivalence set: awst_tmp%17#0, reinterpret_biguint%32#0, reinterpret_biguint%33#0
debug: selected awst_tmp%17#0 from equivalence set
debug: Found equivalence set: tmp%108#0, reinterpret_biguint%34#0
debug: selected tmp%108#0 from equivalence set
debug: Found equivalence set: awst_tmp%18#0, reinterpret_biguint%35#0, reinterpret_biguint%36#0
debug: selected awst_tmp%18#0 from equivalence set
debug: Found equivalence set: awst_tmp%19#0, reinterpret_biguint%37#0, reinterpret_biguint%38#0
debug: selected awst_tmp%19#0 from equivalence set
debug: Found equivalence set: tmp%123#0, reinterpret_biguint%39#0
debug: selected tmp%123#0 from equivalence set
debug: Found equivalence set: tmp%129#0, reinterpret_biguint%40#0
debug: selected tmp%129#0 from equivalence set
debug: Found equivalence set: awst_tmp%22#0, reinterpret_biguint%41#0
debug: selected awst_tmp%22#0 from equivalence set
debug: Found equivalence set: awst_tmp%23#0, reinterpret_biguint%42#0
debug: selected awst_tmp%23#0 from equivalence set
debug: Found equivalence set: awst_tmp%24#0, reinterpret_biguint%43#0
debug: selected awst_tmp%24#0 from equivalence set
debug: Copy propagation made 50 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable not_ten#0
debug: Removing unused variable x#0
debug: Removing unused variable y.0#0
debug: Removing unused variable y.1#0
debug: Removing unused variable y.2#0
debug: Removing unused variable x#1
debug: Removing unused variable y.0#1
debug: Removing unused variable y.1#1
debug: Removing unused variable y.2#1
debug: Removing unused variable x#2
debug: Removing unused variable y.0#2
debug: Removing unused variable y.1#2
debug: Not removing unused assignment since source is not marked as pure: let tmp%40#0: uint64 = test_cases.contains.contract.one_u64()
debug: Not removing unused assignment since source is not marked as pure: let tmp%48#0: uint64 = test_cases.contains.contract.one_u64()
debug: Not removing unused assignment since source is not marked as pure: let tmp%56#0: uint64 = test_cases.contains.contract.one_u64()
debug: Not removing unused assignment since source is not marked as pure: let tmp%63#0: uint64 = test_cases.contains.contract.one_u64()
debug: Not removing unused assignment since source is not marked as pure: let tmp%68#0: string = test_cases.contains.contract.foo_string()
debug: Not removing unused assignment since source is not marked as pure: let tmp%69#0: Encoded(len+utf8[]) = test_cases.contains.contract.foo_arc4()
debug: Not removing unused assignment since source is not marked as pure: let tmp%88#0: string = test_cases.contains.contract.foo_string()
debug: Not removing unused assignment since source is not marked as pure: let tmp%96#0: string = test_cases.contains.contract.bar_string()
debug: Not removing unused assignment since source is not marked as pure: let tmp%102#0: Encoded(len+utf8[]) = test_cases.contains.contract.foo_arc4()
debug: Not removing unused assignment since source is not marked as pure: let tmp%107#0: Encoded(len+utf8[]) = test_cases.contains.contract.bar_arc4()
debug: Not removing unused assignment since source is not marked as pure: let tmp%112#0: string = test_cases.contains.contract.foo_string()
debug: Not removing unused assignment since source is not marked as pure: let tmp%117#0: string = test_cases.contains.contract.foo_string()
debug: Not removing unused assignment since source is not marked as pure: let tmp%122#0: string = test_cases.contains.contract.foo_string()
debug: Not removing unused assignment since source is not marked as pure: let tmp%128#0: string = test_cases.contains.contract.bar_string()
debug: Not removing unused assignment since source is not marked as pure: let tmp%133#0: Encoded(len+utf8[]) = test_cases.contains.contract.foo_arc4()
debug: Not removing unused assignment since source is not marked as pure: let tmp%136#0: Encoded(len+utf8[]) = test_cases.contains.contract.bar_arc4()
debug: Not removing unused assignment since source is not marked as pure: let tmp%140#0: string = test_cases.contains.contract.foo_string()
debug: Not removing unused assignment since source is not marked as pure: let tmp%144#0: string = test_cases.contains.contract.foo_string()
debug: Removing unused variable reinterpret_biguint%44#0
debug: Removing unused variable reinterpret_biguint%45#0
debug: Not removing unused assignment since source is not marked as pure: let tmp%40#0: uint64 = test_cases.contains.contract.one_u64()
debug: Not removing unused assignment since source is not marked as pure: let tmp%48#0: uint64 = test_cases.contains.contract.one_u64()
debug: Not removing unused assignment since source is not marked as pure: let tmp%56#0: uint64 = test_cases.contains.contract.one_u64()
debug: Not removing unused assignment since source is not marked as pure: let tmp%63#0: uint64 = test_cases.contains.contract.one_u64()
debug: Not removing unused assignment since source is not marked as pure: let tmp%68#0: string = test_cases.contains.contract.foo_string()
debug: Not removing unused assignment since source is not marked as pure: let tmp%69#0: Encoded(len+utf8[]) = test_cases.contains.contract.foo_arc4()
debug: Not removing unused assignment since source is not marked as pure: let tmp%88#0: string = test_cases.contains.contract.foo_string()
debug: Not removing unused assignment since source is not marked as pure: let tmp%96#0: string = test_cases.contains.contract.bar_string()
debug: Not removing unused assignment since source is not marked as pure: let tmp%102#0: Encoded(len+utf8[]) = test_cases.contains.contract.foo_arc4()
debug: Not removing unused assignment since source is not marked as pure: let tmp%107#0: Encoded(len+utf8[]) = test_cases.contains.contract.bar_arc4()
debug: Not removing unused assignment since source is not marked as pure: let tmp%112#0: string = test_cases.contains.contract.foo_string()
debug: Not removing unused assignment since source is not marked as pure: let tmp%117#0: string = test_cases.contains.contract.foo_string()
debug: Not removing unused assignment since source is not marked as pure: let tmp%122#0: string = test_cases.contains.contract.foo_string()
debug: Not removing unused assignment since source is not marked as pure: let tmp%128#0: string = test_cases.contains.contract.bar_string()
debug: Not removing unused assignment since source is not marked as pure: let tmp%133#0: Encoded(len+utf8[]) = test_cases.contains.contract.foo_arc4()
debug: Not removing unused assignment since source is not marked as pure: let tmp%136#0: Encoded(len+utf8[]) = test_cases.contains.contract.bar_arc4()
debug: Not removing unused assignment since source is not marked as pure: let tmp%140#0: string = test_cases.contains.contract.foo_string()
debug: Not removing unused assignment since source is not marked as pure: let tmp%144#0: string = test_cases.contains.contract.foo_string()
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (== 0x68656c6c6f 0x68656c6c6f) to 1u
debug: Simplified (== 0x68656c6c6f 0x626f6e6a6f7572) to 0u
debug: Simplified (== 0x6369616f 0x68656c6c6f) to 0u
debug: Simplified (== 0x6369616f 0x626f6e6a6f7572) to 0u
debug: Simplified (b== 32323423423423b 32323423423423b) to 1u
debug: Simplified (b== 32323423423423b 8439439483934b) to 0u
debug: Simplified (b+ 32323423423423b 32323423423423b) to 64646846846846b
debug: Simplified (== 0x666f6f 0x626172) to 0u
debug: Simplified (! 0u) to 1u
debug: Simplified (== 2u 3u) to 0u
debug: Simplified (== 2u 3u) to 0u
debug: Simplified (== 2u 3u) to 0u
debug: Simplified (== 2u 3u) to 0u
debug: Simplified (! 0u) to 1u
debug: Simplified (b== 0x41 tmp%148#0) to 0u
debug: Simplified (b== 0x41 tmp%150#0) to 0u
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: simplifying conditional branch with a constant into a goto
debug: simplified terminator of block@1 from goto 1u ? block@3 : block@2 to goto block@3
debug: simplifying conditional branch with a constant into a goto
debug: simplified terminator of block@2 from goto 0u ? block@3 : block@4 to goto block@4
debug: simplifying conditional branch with a constant into a goto
debug: simplified terminator of block@7 from goto 0u ? block@9 : block@8 to goto block@8
debug: simplifying conditional branch with a constant into a goto
debug: simplified terminator of block@8 from goto 0u ? block@9 : block@10 to goto block@10
debug: simplifying conditional branch with a constant into a goto
debug: simplified terminator of block@13 from goto 1u ? block@15 : block@14 to goto block@15
debug: simplifying conditional branch with a constant into a goto
debug: simplified terminator of block@14 from goto 0u ? block@15 : block@16 to goto block@16
debug: simplifying conditional branch with a constant into a goto
debug: simplified terminator of block@84 from goto 0u ? block@86 : block@85 to goto block@85
debug: simplifying conditional branch with a constant into a goto
debug: simplified terminator of block@119 from goto 0u ? block@120 : block@121 to goto block@121
debug: simplifying conditional branch with a constant into a goto
debug: simplified terminator of block@147 from goto 0u ? block@149 : block@148 to goto block@148
debug: simplifying conditional branch with a constant into a goto
debug: simplified terminator of block@167 from goto 0u ? block@169 : block@168 to goto block@168
debug: simplifying conditional branch with a constant into a goto
debug: simplified terminator of block@168 from goto 0u ? block@169 : block@170 to goto block@170
debug: Optimizer: Merge Blocks
debug: Replaced predecessor block@1 with block@0 in block@3
debug: Merged linear block@1 into block@0
debug: Replaced predecessor block@3 with block@0 in block@5
debug: Merged linear block@3 into block@0
debug: Replaced predecessor block@4 with block@2 in block@5
debug: Merged linear block@4 into block@2
debug: Replaced predecessor block@6 with block@5 in block@7
debug: Merged linear block@6 into block@5
debug: Replaced predecessor block@7 with block@5 in block@8
debug: Merged linear block@7 into block@5
debug: Replaced predecessor block@8 with block@5 in block@10
debug: Merged linear block@8 into block@5
debug: Replaced predecessor block@10 with block@5 in block@11
debug: Merged linear block@10 into block@5
debug: Replaced predecessor block@12 with block@11 in block@13
debug: Merged linear block@12 into block@11
debug: Replaced predecessor block@13 with block@11 in block@15
debug: Merged linear block@13 into block@11
debug: Replaced predecessor block@15 with block@11 in block@17
debug: Merged linear block@15 into block@11
debug: Replaced predecessor block@16 with block@14 in block@17
debug: Merged linear block@16 into block@14
debug: Replaced predecessor block@18 with block@17 in block@19
debug: Merged linear block@18 into block@17
debug: Replaced predecessor block@19 with block@17 in block@20
debug: Replaced predecessor block@19 with block@17 in block@21
debug: Merged linear block@19 into block@17
debug: Replaced predecessor block@64 with block@63 in block@65
debug: Merged linear block@64 into block@63
debug: Replaced predecessor block@65 with block@63 in block@66
debug: Replaced predecessor block@65 with block@63 in block@67
debug: Merged linear block@65 into block@63
debug: Replaced predecessor block@85 with block@84 in block@87
debug: Replaced predecessor block@85 with block@84 in block@86
debug: Merged linear block@85 into block@84
debug: Replaced predecessor block@121 with block@119 in block@122
debug: Merged linear block@121 into block@119
debug: Replaced predecessor block@148 with block@147 in block@150
debug: Replaced predecessor block@148 with block@147 in block@149
debug: Merged linear block@148 into block@147
debug: Replaced predecessor block@168 with block@167 in block@170
debug: Merged linear block@168 into block@167
debug: Replaced predecessor block@170 with block@167 in block@171
debug: Merged linear block@170 into block@167
debug: Merged linear block@172 into block@171
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Removing unreachable block: block@2
debug: Removing unreachable block: block@9
debug: Removing unreachable block: block@14
debug: Removing unreachable block: block@169
debug: Optimizer: Repeated Expression Elimination
debug: Replacing redundant declaration let tmp%21#0: string = decode_bytes<string>(awst_tmp%3#0) with copy of existing registers [Register(source_location=contains/contract.py:59:15-25, ir_type=string, name='tmp%16', version=0)]
debug: Replacing redundant declaration let tmp%23#0: string = decode_bytes<string>(awst_tmp%3#0) with copy of existing registers [Register(source_location=contains/contract.py:59:15-25, ir_type=string, name='tmp%16', version=0)]
debug: Replacing redundant declaration let tmp%52#0: string = decode_bytes<string>(awst_tmp%7#0) with copy of existing registers [Register(source_location=contains/contract.py:68:15-25, ir_type=string, name='tmp%50', version=0)]
debug: Replacing redundant declaration let tmp%19#1: biguint = (itob awst_tmp%3#1) with copy of existing registers [Register(source_location=contains/contract.py:92:15-64, ir_type=biguint, name='tmp%16', version=1)]
debug: Replacing redundant declaration let tmp%26#1: biguint = (itob 2u) with copy of existing registers [Register(source_location=contains/contract.py:93:15-64, ir_type=biguint, name='tmp%23', version=1)]
debug: Replacing redundant declaration let tmp%36#1: biguint = (itob 2u) with copy of existing registers [Register(source_location=contains/contract.py:93:15-64, ir_type=biguint, name='tmp%23', version=1)]
debug: Replacing redundant declaration let tmp%64#1: biguint = (itob 2u) with copy of existing registers [Register(source_location=contains/contract.py:93:15-64, ir_type=biguint, name='tmp%23', version=1)]
debug: Replacing redundant declaration let tmp%70#1: biguint = (itob 3u) with copy of existing registers [Register(source_location=contains/contract.py:96:15-53, ir_type=biguint, name='tmp%40', version=1)]
debug: Replacing redundant declaration let tmp%75#0: biguint = (itob 3u) with copy of existing registers [Register(source_location=contains/contract.py:96:15-53, ir_type=biguint, name='tmp%40', version=1)]
debug: Replacing redundant declaration let tmp%78#0: biguint = (itob 5u) with copy of existing registers [Register(source_location=contains/contract.py:97:15-55, ir_type=biguint, name='tmp%44', version=1)]
debug: Replacing redundant declaration let tmp%83#0: biguint = (itob 2u) with copy of existing registers [Register(source_location=contains/contract.py:93:15-64, ir_type=biguint, name='tmp%23', version=1)]
debug: Replacing redundant declaration let tmp%100#0: biguint = (itob awst_tmp%16#0) with copy of existing registers [Register(source_location=contains/contract.py:114:15-67, ir_type=biguint, name='tmp%98', version=0)]
debug: Replacing redundant declaration let tmp%105#0: biguint = (itob 2u) with copy of existing registers [Register(source_location=contains/contract.py:93:15-64, ir_type=biguint, name='tmp%23', version=1)]
debug: Replacing redundant declaration let tmp%109#0: biguint = (itob 3u) with copy of existing registers [Register(source_location=contains/contract.py:96:15-53, ir_type=biguint, name='tmp%40', version=1)]
debug: Replacing redundant declaration let tmp%113#0: biguint = (itob 2u) with copy of existing registers [Register(source_location=contains/contract.py:93:15-64, ir_type=biguint, name='tmp%23', version=1)]
debug: Replacing redundant declaration let tmp%115#0: biguint = (itob 3u) with copy of existing registers [Register(source_location=contains/contract.py:96:15-53, ir_type=biguint, name='tmp%40', version=1)]
debug: Replacing redundant declaration let tmp%118#0: biguint = (itob 5u) with copy of existing registers [Register(source_location=contains/contract.py:97:15-55, ir_type=biguint, name='tmp%44', version=1)]
debug: Replacing redundant declaration let tmp%120#0: biguint = (itob 3u) with copy of existing registers [Register(source_location=contains/contract.py:96:15-53, ir_type=biguint, name='tmp%40', version=1)]
debug: Replacing redundant declaration let tmp%137#0: biguint = (itob 3u) with copy of existing registers [Register(source_location=contains/contract.py:96:15-53, ir_type=biguint, name='tmp%40', version=1)]
debug: Replacing redundant declaration let tmp%141#0: biguint = (itob 3u) with copy of existing registers [Register(source_location=contains/contract.py:96:15-53, ir_type=biguint, name='tmp%40', version=1)]
debug: Replacing redundant declaration let tmp%145#0: biguint = (itob 5u) with copy of existing registers [Register(source_location=contains/contract.py:97:15-55, ir_type=biguint, name='tmp%44', version=1)]
debug: Found equivalence set: or_result%0#0, two_true#0
debug: selected two_true#0 from equivalence set
debug: Found equivalence set: or_result%0#4, two_false#0
debug: selected two_false#0 from equivalence set
debug: Found equivalence set: or_result%0#6, three_true#0
debug: selected three_true#0 from equivalence set
debug: Found equivalence set: tmp%16#0, tmp%21#0, tmp%23#0
debug: selected tmp%16#0 from equivalence set
debug: Found equivalence set: tmp%50#0, tmp%52#0
debug: selected tmp%50#0 from equivalence set
debug: Found equivalence set: tmp%16#1, tmp%19#1
debug: selected tmp%16#1 from equivalence set
debug: Found equivalence set: tmp%23#1, tmp%26#1, tmp%36#1, tmp%64#1, tmp%83#0, tmp%105#0, tmp%113#0
debug: selected tmp%23#1 from equivalence set
debug: Found equivalence set: tmp%40#1, tmp%70#1, tmp%75#0, tmp%109#0, tmp%115#0, tmp%120#0, tmp%137#0, tmp%141#0
debug: selected tmp%40#1 from equivalence set
debug: Found equivalence set: tmp%44#1, tmp%78#0, tmp%118#0, tmp%145#0
debug: selected tmp%44#1 from equivalence set
debug: Found equivalence set: tmp%98#0, tmp%100#0
debug: selected tmp%98#0 from equivalence set
debug: Found equivalence set: or_result%24#1, or_result%24#2
debug: selected or_result%24#1 from equivalence set
debug: Copy propagation made 25 modifications
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.contains.contract.one_u64
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.contains.contract.one_arc4u64
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.contains.contract.two_u64
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.contains.contract.two_u8
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.contains.contract.three_u512
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.contains.contract.four_biguint
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.contains.contract.foo_string
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.contains.contract.foo_arc4
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.contains.contract.bar_string
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.contains.contract.bar_arc4
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.contains.contract.baz_string
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.contains.contract.MyContract.is_in_tuple_1
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.contains.contract.MyContract.is_in_tuple_2
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.contains.contract.MyContract.is_in_tuple_3
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.contains.contract.MyContract.test_string_types
debug: Optimizer: Perform Subroutine Inlining
contains/contract.py:81:13 debug: inlining call to test_cases.contains.contract.foo_string in test_cases.contains.contract.MyContract.test_string_types
contains/contract.py:82:13 debug: constant function call to test_cases.contains.contract.foo_arc4 in test_cases.contains.contract.MyContract.test_string_types
contains/contract.py:79:16 debug: constant function call to test_cases.contains.contract.foo_arc4 in test_cases.contains.contract.MyContract.test_string_types
contains/contract.py:79:35 debug: constant function call to test_cases.contains.contract.bar_arc4 in test_cases.contains.contract.MyContract.test_string_types
contains/contract.py:79:47 debug: inlining call to test_cases.contains.contract.baz_string in test_cases.contains.contract.MyContract.test_string_types
contains/contract.py:79:61 debug: inlining call to test_cases.contains.contract.one_u64 in test_cases.contains.contract.MyContract.test_string_types
contains/contract.py:75:13 debug: constant function call to test_cases.contains.contract.bar_arc4 in test_cases.contains.contract.MyContract.test_string_types
contains/contract.py:76:13 debug: inlining call to test_cases.contains.contract.baz_string in test_cases.contains.contract.MyContract.test_string_types
contains/contract.py:77:13 debug: inlining call to test_cases.contains.contract.one_u64 in test_cases.contains.contract.MyContract.test_string_types
contains/contract.py:74:16 debug: inlining call to test_cases.contains.contract.foo_string in test_cases.contains.contract.MyContract.test_string_types
contains/contract.py:68:16 debug: constant function call to test_cases.contains.contract.foo_arc4 in test_cases.contains.contract.MyContract.test_string_types
contains/contract.py:69:13 debug: constant function call to test_cases.contains.contract.bar_arc4 in test_cases.contains.contract.MyContract.test_string_types
contains/contract.py:70:13 debug: inlining call to test_cases.contains.contract.baz_string in test_cases.contains.contract.MyContract.test_string_types
contains/contract.py:71:13 debug: inlining call to test_cases.contains.contract.foo_string in test_cases.contains.contract.MyContract.test_string_types
contains/contract.py:72:13 debug: inlining call to test_cases.contains.contract.one_u64 in test_cases.contains.contract.MyContract.test_string_types
contains/contract.py:63:13 debug: constant function call to test_cases.contains.contract.bar_arc4 in test_cases.contains.contract.MyContract.test_string_types
contains/contract.py:64:13 debug: inlining call to test_cases.contains.contract.baz_string in test_cases.contains.contract.MyContract.test_string_types
contains/contract.py:65:13 debug: inlining call to test_cases.contains.contract.foo_string in test_cases.contains.contract.MyContract.test_string_types
contains/contract.py:66:13 debug: inlining call to test_cases.contains.contract.one_u64 in test_cases.contains.contract.MyContract.test_string_types
contains/contract.py:62:16 debug: inlining call to test_cases.contains.contract.foo_string in test_cases.contains.contract.MyContract.test_string_types
contains/contract.py:61:16 debug: constant function call to test_cases.contains.contract.foo_arc4 in test_cases.contains.contract.MyContract.test_string_types
contains/contract.py:61:35 debug: constant function call to test_cases.contains.contract.bar_arc4 in test_cases.contains.contract.MyContract.test_string_types
contains/contract.py:61:47 debug: inlining call to test_cases.contains.contract.baz_string in test_cases.contains.contract.MyContract.test_string_types
contains/contract.py:60:37 debug: constant function call to test_cases.contains.contract.bar_arc4 in test_cases.contains.contract.MyContract.test_string_types
contains/contract.py:60:49 debug: inlining call to test_cases.contains.contract.baz_string in test_cases.contains.contract.MyContract.test_string_types
contains/contract.py:60:16 debug: inlining call to test_cases.contains.contract.foo_string in test_cases.contains.contract.MyContract.test_string_types
contains/contract.py:59:16 debug: constant function call to test_cases.contains.contract.foo_arc4 in test_cases.contains.contract.MyContract.test_string_types
contains/contract.py:59:31 debug: inlining call to test_cases.contains.contract.foo_string in test_cases.contains.contract.MyContract.test_string_types
contains/contract.py:59:45 debug: inlining call to test_cases.contains.contract.baz_string in test_cases.contains.contract.MyContract.test_string_types
contains/contract.py:59:59 debug: inlining call to test_cases.contains.contract.bar_string in test_cases.contains.contract.MyContract.test_string_types
contains/contract.py:58:33 debug: constant function call to test_cases.contains.contract.foo_arc4 in test_cases.contains.contract.MyContract.test_string_types
contains/contract.py:58:45 debug: inlining call to test_cases.contains.contract.baz_string in test_cases.contains.contract.MyContract.test_string_types
contains/contract.py:58:59 debug: inlining call to test_cases.contains.contract.bar_string in test_cases.contains.contract.MyContract.test_string_types
contains/contract.py:58:16 debug: inlining call to test_cases.contains.contract.foo_string in test_cases.contains.contract.MyContract.test_string_types
contains/contract.py:57:16 debug: inlining call to test_cases.contains.contract.foo_string in test_cases.contains.contract.MyContract.test_string_types
contains/contract.py:57:37 debug: inlining call to test_cases.contains.contract.bar_string in test_cases.contains.contract.MyContract.test_string_types
contains/contract.py:57:51 debug: inlining call to test_cases.contains.contract.baz_string in test_cases.contains.contract.MyContract.test_string_types
contains/contract.py:56:16 debug: inlining call to test_cases.contains.contract.foo_string in test_cases.contains.contract.MyContract.test_string_types
contains/contract.py:56:33 debug: inlining call to test_cases.contains.contract.foo_string in test_cases.contains.contract.MyContract.test_string_types
contains/contract.py:56:47 debug: inlining call to test_cases.contains.contract.baz_string in test_cases.contains.contract.MyContract.test_string_types
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: tmp%0#12, tmp%9#0
debug: selected tmp%0#12 from equivalence set
debug: Found equivalence set: tmp%0#11, awst_tmp%3#0
debug: selected tmp%0#11 from equivalence set
debug: Found equivalence set: tmp%0#10, tmp%25#0
debug: selected tmp%0#10 from equivalence set
debug: Found equivalence set: tmp%0#8, awst_tmp%5#0
debug: selected tmp%0#8 from equivalence set
debug: Found equivalence set: tmp%0#9, tmp%31#0
debug: selected tmp%0#9 from equivalence set
debug: Found equivalence set: tmp%0#7, tmp%37#0
debug: selected tmp%0#7 from equivalence set
debug: Found equivalence set: tmp%0#5, awst_tmp%7#0
debug: selected tmp%0#5 from equivalence set
debug: Found equivalence set: tmp%0#6, tmp%45#0
debug: selected tmp%0#6 from equivalence set
debug: Found equivalence set: tmp%0#4, tmp%54#0
debug: selected tmp%0#4 from equivalence set
debug: Found equivalence set: tmp%0#2, awst_tmp%9#0
debug: selected tmp%0#2 from equivalence set
debug: Found equivalence set: tmp%0#3, tmp%61#0
debug: selected tmp%0#3 from equivalence set
debug: Found equivalence set: tmp%0#1, tmp%69#0
debug: selected tmp%0#1 from equivalence set
debug: Copy propagation made 17 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable awst_tmp%0#0
debug: Removing unused variable tmp%0#0
debug: Removing unused variable tmp%1#0
debug: Removing unused variable awst_tmp%1#0
debug: Removing unused variable tmp%4#0
debug: Removing unused variable tmp%5#0
debug: Removing unused variable tmp%10#0
debug: Removing unused variable tmp%11#0
debug: Removing unused variable awst_tmp%2#0
debug: Removing unused variable tmp%17#0
debug: Removing unused variable tmp%18#0
debug: Removing unused variable tmp%19#0
debug: Removing unused variable tmp%26#0
debug: Removing unused variable awst_tmp%4#0
debug: Removing unused variable tmp%32#0
debug: Removing unused variable tmp%38#0
debug: Removing unused variable tmp%39#0
debug: Removing unused variable tmp%40#0
debug: Removing unused variable awst_tmp%6#0
debug: Removing unused variable tmp%46#0
debug: Removing unused variable tmp%47#0
debug: Removing unused variable tmp%48#0
debug: Removing unused variable tmp%55#0
debug: Removing unused variable tmp%56#0
debug: Removing unused variable awst_tmp%8#0
debug: Removing unused variable tmp%62#0
debug: Removing unused variable tmp%63#0
debug: Removing unused variable tmp%68#0
debug: Removing unused variable tmp%0#1
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (== "foo" "foo") to 1u
debug: Simplified (== "foo" "baz") to 0u
debug: Simplified (== "foo" "bar") to 0u
debug: Simplified (== "foo" "baz") to 0u
debug: Simplified (== "foo" "baz") to 0u
debug: Simplified (== "foo" "bar") to 0u
debug: Simplified (== "foo" "baz") to 0u
debug: Simplified (== "foo" "baz") to 0u
debug: Simplified (== "foo" "foo") to 1u
debug: Simplified (== "foo" "baz") to 0u
debug: Simplified (== 0x666f6f 0x626172) to 0u
debug: Simplified (! 0u) to 1u
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: simplifying conditional branch with a constant into a goto
debug: simplified terminator of block@124 from goto 1u ? block@2 : block@1 to goto block@2
debug: simplifying conditional branch with a constant into a goto
debug: simplified terminator of block@1 from goto 0u ? block@2 : block@3 to goto block@3
debug: simplifying conditional branch with a constant into a goto
debug: simplified terminator of block@118 from goto 0u ? block@6 : block@5 to goto block@5
debug: simplifying conditional branch with a constant into a goto
debug: simplified terminator of block@5 from goto 0u ? block@6 : block@7 to goto block@7
debug: simplifying conditional branch with a constant into a goto
debug: simplified terminator of block@9 from goto 0u ? block@11 : block@10 to goto block@10
debug: simplifying conditional branch with a constant into a goto
debug: simplified terminator of block@10 from goto 0u ? block@11 : block@12 to goto block@12
debug: simplifying conditional branch with a constant into a goto
debug: simplified terminator of block@19 from goto 0u ? block@20 : block@21 to goto block@21
debug: simplifying conditional branch with a constant into a goto
debug: simplified terminator of block@27 from goto 0u ? block@29 : block@28 to goto block@28
debug: simplifying conditional branch with a constant into a goto
debug: simplified terminator of block@28 from goto 1u ? block@29 : block@30 to goto block@29
debug: simplifying conditional branch with a constant into a goto
debug: simplified terminator of block@37 from goto 0u ? block@38 : block@39 to goto block@39
debug: Optimizer: Merge Blocks
debug: Replaced predecessor block@119 with block@0 in block@120
debug: Merged linear block@119 into block@0
debug: Replaced predecessor block@120 with block@0 in block@121
debug: Merged linear block@120 into block@0
debug: Replaced predecessor block@121 with block@0 in block@122
debug: Merged linear block@121 into block@0
debug: Replaced predecessor block@122 with block@0 in block@123
debug: Merged linear block@122 into block@0
debug: Replaced predecessor block@123 with block@0 in block@124
debug: Merged linear block@123 into block@0
debug: Replaced predecessor block@124 with block@0 in block@2
debug: Merged linear block@124 into block@0
debug: Replaced predecessor block@2 with block@0 in block@4
debug: Merged linear block@2 into block@0
debug: Replaced predecessor block@3 with block@1 in block@4
debug: Merged linear block@3 into block@1
debug: Replaced predecessor block@113 with block@4 in block@114
debug: Merged linear block@113 into block@4
debug: Replaced predecessor block@114 with block@4 in block@115
debug: Merged linear block@114 into block@4
debug: Replaced predecessor block@115 with block@4 in block@116
debug: Merged linear block@115 into block@4
debug: Replaced predecessor block@116 with block@4 in block@117
debug: Merged linear block@116 into block@4
debug: Replaced predecessor block@117 with block@4 in block@118
debug: Merged linear block@117 into block@4
debug: Replaced predecessor block@118 with block@4 in block@5
debug: Merged linear block@118 into block@4
debug: Replaced predecessor block@5 with block@4 in block@7
debug: Merged linear block@5 into block@4
debug: Replaced predecessor block@7 with block@4 in block@8
debug: Merged linear block@7 into block@4
debug: Replaced predecessor block@105 with block@8 in block@106
debug: Merged linear block@105 into block@8
debug: Replaced predecessor block@106 with block@8 in block@107
debug: Merged linear block@106 into block@8
debug: Replaced predecessor block@107 with block@8 in block@108
debug: Merged linear block@107 into block@8
debug: Replaced predecessor block@108 with block@8 in block@109
debug: Merged linear block@108 into block@8
debug: Replaced predecessor block@109 with block@8 in block@110
debug: Merged linear block@109 into block@8
debug: Replaced predecessor block@110 with block@8 in block@111
debug: Merged linear block@110 into block@8
debug: Replaced predecessor block@111 with block@8 in block@112
debug: Merged linear block@111 into block@8
debug: Replaced predecessor block@112 with block@8 in block@9
debug: Replaced predecessor block@112 with block@8 in block@11
debug: Merged linear block@112 into block@8
debug: Replaced predecessor block@10 with block@9 in block@12
debug: Merged linear block@10 into block@9
debug: Replaced predecessor block@12 with block@9 in block@13
debug: Merged linear block@12 into block@9
debug: Replaced predecessor block@97 with block@13 in block@98
debug: Merged linear block@97 into block@13
debug: Replaced predecessor block@98 with block@13 in block@99
debug: Merged linear block@98 into block@13
debug: Replaced predecessor block@99 with block@13 in block@100
debug: Merged linear block@99 into block@13
debug: Replaced predecessor block@100 with block@13 in block@101
debug: Merged linear block@100 into block@13
debug: Replaced predecessor block@101 with block@13 in block@102
debug: Merged linear block@101 into block@13
debug: Replaced predecessor block@102 with block@13 in block@103
debug: Merged linear block@102 into block@13
debug: Replaced predecessor block@103 with block@13 in block@104
debug: Merged linear block@103 into block@13
debug: Replaced predecessor block@104 with block@13 in block@14
debug: Replaced predecessor block@104 with block@13 in block@16
debug: Merged linear block@104 into block@13
debug: Replaced predecessor block@91 with block@18 in block@92
debug: Merged linear block@91 into block@18
debug: Replaced predecessor block@92 with block@18 in block@93
debug: Merged linear block@92 into block@18
debug: Replaced predecessor block@93 with block@18 in block@94
debug: Merged linear block@93 into block@18
debug: Replaced predecessor block@94 with block@18 in block@95
debug: Merged linear block@94 into block@18
debug: Replaced predecessor block@95 with block@18 in block@96
debug: Merged linear block@95 into block@18
debug: Replaced predecessor block@96 with block@18 in block@19
debug: Replaced predecessor block@96 with block@18 in block@20
debug: Merged linear block@96 into block@18
debug: Replaced predecessor block@21 with block@19 in block@22
debug: Merged linear block@21 into block@19
debug: Replaced predecessor block@85 with block@22 in block@86
debug: Merged linear block@85 into block@22
debug: Replaced predecessor block@86 with block@22 in block@87
debug: Merged linear block@86 into block@22
debug: Replaced predecessor block@87 with block@22 in block@88
debug: Merged linear block@87 into block@22
debug: Replaced predecessor block@88 with block@22 in block@89
debug: Merged linear block@88 into block@22
debug: Replaced predecessor block@89 with block@22 in block@90
debug: Merged linear block@89 into block@22
debug: Replaced predecessor block@90 with block@22 in block@23
debug: Replaced predecessor block@90 with block@22 in block@24
debug: Merged linear block@90 into block@22
debug: Replaced predecessor block@75 with block@26 in block@76
debug: Merged linear block@75 into block@26
debug: Replaced predecessor block@76 with block@26 in block@77
debug: Merged linear block@76 into block@26
debug: Replaced predecessor block@77 with block@26 in block@78
debug: Merged linear block@77 into block@26
debug: Replaced predecessor block@78 with block@26 in block@79
debug: Merged linear block@78 into block@26
debug: Replaced predecessor block@79 with block@26 in block@80
debug: Merged linear block@79 into block@26
debug: Replaced predecessor block@80 with block@26 in block@81
debug: Merged linear block@80 into block@26
debug: Replaced predecessor block@81 with block@26 in block@82
debug: Merged linear block@81 into block@26
debug: Replaced predecessor block@82 with block@26 in block@83
debug: Merged linear block@82 into block@26
debug: Replaced predecessor block@83 with block@26 in block@84
debug: Merged linear block@83 into block@26
debug: Replaced predecessor block@84 with block@26 in block@27
debug: Replaced predecessor block@84 with block@26 in block@29
debug: Merged linear block@84 into block@26
debug: Replaced predecessor block@28 with block@27 in block@29
debug: Merged linear block@28 into block@27
debug: Replaced predecessor block@65 with block@31 in block@66
debug: Merged linear block@65 into block@31
debug: Replaced predecessor block@66 with block@31 in block@67
debug: Merged linear block@66 into block@31
debug: Replaced predecessor block@67 with block@31 in block@68
debug: Merged linear block@67 into block@31
debug: Replaced predecessor block@68 with block@31 in block@69
debug: Merged linear block@68 into block@31
debug: Replaced predecessor block@69 with block@31 in block@70
debug: Merged linear block@69 into block@31
debug: Replaced predecessor block@70 with block@31 in block@71
debug: Merged linear block@70 into block@31
debug: Replaced predecessor block@71 with block@31 in block@72
debug: Merged linear block@71 into block@31
debug: Replaced predecessor block@72 with block@31 in block@73
debug: Merged linear block@72 into block@31
debug: Replaced predecessor block@73 with block@31 in block@74
debug: Merged linear block@73 into block@31
debug: Replaced predecessor block@74 with block@31 in block@32
debug: Replaced predecessor block@74 with block@31 in block@34
debug: Merged linear block@74 into block@31
debug: Replaced predecessor block@57 with block@36 in block@58
debug: Merged linear block@57 into block@36
debug: Replaced predecessor block@58 with block@36 in block@59
debug: Merged linear block@58 into block@36
debug: Replaced predecessor block@59 with block@36 in block@60
debug: Merged linear block@59 into block@36
debug: Replaced predecessor block@60 with block@36 in block@61
debug: Merged linear block@60 into block@36
debug: Replaced predecessor block@61 with block@36 in block@62
debug: Merged linear block@61 into block@36
debug: Replaced predecessor block@62 with block@36 in block@63
debug: Merged linear block@62 into block@36
debug: Replaced predecessor block@63 with block@36 in block@64
debug: Merged linear block@63 into block@36
debug: Replaced predecessor block@64 with block@36 in block@37
debug: Replaced predecessor block@64 with block@36 in block@38
debug: Merged linear block@64 into block@36
debug: Replaced predecessor block@39 with block@37 in block@40
debug: Merged linear block@39 into block@37
debug: Replaced predecessor block@49 with block@40 in block@50
debug: Merged linear block@49 into block@40
debug: Replaced predecessor block@50 with block@40 in block@51
debug: Merged linear block@50 into block@40
debug: Replaced predecessor block@51 with block@40 in block@52
debug: Merged linear block@51 into block@40
debug: Replaced predecessor block@52 with block@40 in block@53
debug: Merged linear block@52 into block@40
debug: Replaced predecessor block@53 with block@40 in block@54
debug: Merged linear block@53 into block@40
debug: Replaced predecessor block@54 with block@40 in block@55
debug: Merged linear block@54 into block@40
debug: Replaced predecessor block@55 with block@40 in block@56
debug: Merged linear block@55 into block@40
debug: Replaced predecessor block@56 with block@40 in block@41
debug: Replaced predecessor block@56 with block@40 in block@42
debug: Merged linear block@56 into block@40
debug: Replaced predecessor block@45 with block@44 in block@46
debug: Merged linear block@45 into block@44
debug: Replaced predecessor block@46 with block@44 in block@47
debug: Merged linear block@46 into block@44
debug: Replaced predecessor block@47 with block@44 in block@48
debug: Merged linear block@47 into block@44
debug: Merged linear block@48 into block@44
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Removing unreachable block: block@1
debug: Removing unreachable block: block@6
debug: Removing unreachable block: block@30
debug: Optimizer: Repeated Expression Elimination
debug: Replacing redundant declaration let tmp%0#11: Encoded(len+utf8[]) = bytes_encode<(len+utf8[])>("foo") with copy of existing registers [Register(source_location=contains/contract.py:174:11-29, ir_type=Encoded(len+utf8[]), name='tmp%0', version=12)]
debug: Replacing redundant declaration let tmp%21#0: string = decode_bytes<string>(tmp%0#11) with copy of existing registers [Register(source_location=contains/contract.py:59:15-25, ir_type=string, name='tmp%16', version=0)]
debug: Replacing redundant declaration let tmp%23#0: string = decode_bytes<string>(tmp%0#11) with copy of existing registers [Register(source_location=contains/contract.py:59:15-25, ir_type=string, name='tmp%16', version=0)]
debug: Replacing redundant declaration let tmp%0#8: Encoded(len+utf8[]) = bytes_encode<(len+utf8[])>("foo") with copy of existing registers [Register(source_location=contains/contract.py:174:11-29, ir_type=Encoded(len+utf8[]), name='tmp%0', version=12)]
debug: Replacing redundant declaration let tmp%0#9: Encoded(len+utf8[]) = bytes_encode<(len+utf8[])>("bar") with copy of existing registers [Register(source_location=contains/contract.py:184:11-29, ir_type=Encoded(len+utf8[]), name='tmp%0', version=10)]
debug: Replacing redundant declaration let tmp%0#7: Encoded(len+utf8[]) = bytes_encode<(len+utf8[])>("bar") with copy of existing registers [Register(source_location=contains/contract.py:184:11-29, ir_type=Encoded(len+utf8[]), name='tmp%0', version=10)]
debug: Replacing redundant declaration let tmp%0#5: Encoded(len+utf8[]) = bytes_encode<(len+utf8[])>("foo") with copy of existing registers [Register(source_location=contains/contract.py:174:11-29, ir_type=Encoded(len+utf8[]), name='tmp%0', version=12)]
debug: Replacing redundant declaration let tmp%0#6: Encoded(len+utf8[]) = bytes_encode<(len+utf8[])>("bar") with copy of existing registers [Register(source_location=contains/contract.py:184:11-29, ir_type=Encoded(len+utf8[]), name='tmp%0', version=10)]
debug: Replacing redundant declaration let tmp%52#0: string = decode_bytes<string>(tmp%0#5) with copy of existing registers [Register(source_location=contains/contract.py:68:15-25, ir_type=string, name='tmp%50', version=0)]
debug: Replacing redundant declaration let tmp%0#4: Encoded(len+utf8[]) = bytes_encode<(len+utf8[])>("bar") with copy of existing registers [Register(source_location=contains/contract.py:184:11-29, ir_type=Encoded(len+utf8[]), name='tmp%0', version=10)]
debug: Replacing redundant declaration let tmp%0#2: Encoded(len+utf8[]) = bytes_encode<(len+utf8[])>("foo") with copy of existing registers [Register(source_location=contains/contract.py:174:11-29, ir_type=Encoded(len+utf8[]), name='tmp%0', version=12)]
debug: Replacing redundant declaration let tmp%0#3: Encoded(len+utf8[]) = bytes_encode<(len+utf8[])>("bar") with copy of existing registers [Register(source_location=contains/contract.py:184:11-29, ir_type=Encoded(len+utf8[]), name='tmp%0', version=10)]
debug: Found equivalence set: or_result%0#0, or_result%0#2
debug: selected or_result%0#0 from equivalence set
debug: Found equivalence set: or_result%1#1, or_result%1#2
debug: selected or_result%1#1 from equivalence set
debug: Found equivalence set: tmp%0#12, tmp%0#11, tmp%0#8, tmp%0#5, tmp%0#2
debug: selected tmp%0#12 from equivalence set
debug: Found equivalence set: tmp%16#0, tmp%21#0, tmp%23#0
debug: selected tmp%16#0 from equivalence set
debug: Found equivalence set: tmp%0#10, tmp%0#9, tmp%0#7, tmp%0#6, tmp%0#4, tmp%0#3
debug: selected tmp%0#10 from equivalence set
debug: Found equivalence set: or_result%6#0, or_result%6#2
debug: selected or_result%6#0 from equivalence set
debug: Found equivalence set: tmp%50#0, tmp%52#0
debug: selected tmp%50#0 from equivalence set
debug: Copy propagation made 18 modifications
debug: Replacing redundant declaration let tmp%16#0: string = decode_bytes<string>(tmp%0#12) with copy of existing registers [Register(source_location=contains/contract.py:58:31-71, ir_type=string, name='tmp%12', version=0)]
debug: Replacing redundant declaration let tmp%34#0: string = decode_bytes<string>(tmp%0#12) with copy of existing registers [Register(source_location=contains/contract.py:58:31-71, ir_type=string, name='tmp%12', version=0)]
debug: Replacing redundant declaration let tmp%41#0: string = decode_bytes<string>(tmp%0#10) with copy of existing registers [Register(source_location=contains/contract.py:60:35-61, ir_type=string, name='tmp%27', version=0)]
debug: Replacing redundant declaration let tmp%49#0: bool = (== tmp%0#12 tmp%0#10) with copy of existing registers [Register(source_location=contains/contract.py:61:15-59, ir_type=bool, name='tmp%33', version=0)]
debug: Replacing redundant declaration let tmp%50#0: string = decode_bytes<string>(tmp%0#12) with copy of existing registers [Register(source_location=contains/contract.py:58:31-71, ir_type=string, name='tmp%12', version=0)]
debug: Replacing redundant declaration let tmp%57#0: string = decode_bytes<string>(tmp%0#10) with copy of existing registers [Register(source_location=contains/contract.py:60:35-61, ir_type=string, name='tmp%27', version=0)]
debug: Replacing redundant declaration let tmp%64#0: bool = (== tmp%0#12 tmp%0#10) with copy of existing registers [Register(source_location=contains/contract.py:61:15-59, ir_type=bool, name='tmp%33', version=0)]
debug: Replacing redundant declaration let tmp%65#0: string = decode_bytes<string>(tmp%0#12) with copy of existing registers [Register(source_location=contains/contract.py:58:31-71, ir_type=string, name='tmp%12', version=0)]
debug: Found equivalence set: tmp%12#0, tmp%16#0, tmp%34#0, tmp%50#0, tmp%65#0
debug: selected tmp%12#0 from equivalence set
debug: Found equivalence set: tmp%27#0, tmp%41#0, tmp%57#0
debug: selected tmp%27#0 from equivalence set
debug: Found equivalence set: tmp%33#0, tmp%49#0, tmp%64#0
debug: selected tmp%33#0 from equivalence set
debug: Copy propagation made 11 modifications
debug: Replacing redundant declaration let tmp%20#0: bool = (== tmp%12#0 "foo") with copy of existing registers [Register(source_location=contains/contract.py:58:15-71, ir_type=bool, name='tmp%13', version=0)]
debug: Replacing redundant declaration let tmp%42#0: bool = (== tmp%27#0 "foo") with copy of existing registers [Register(source_location=contains/contract.py:60:15-61, ir_type=bool, name='tmp%28', version=0)]
debug: Replacing redundant declaration let tmp%53#0: bool = (== tmp%12#0 "foo") with copy of existing registers [Register(source_location=contains/contract.py:58:15-71, ir_type=bool, name='tmp%13', version=0)]
debug: Replacing redundant declaration let tmp%58#0: bool = (== tmp%27#0 "foo") with copy of existing registers [Register(source_location=contains/contract.py:60:15-61, ir_type=bool, name='tmp%28', version=0)]
debug: Found equivalence set: tmp%13#0, tmp%20#0, tmp%53#0
debug: selected tmp%13#0 from equivalence set
debug: Found equivalence set: tmp%28#0, tmp%42#0, tmp%58#0
debug: selected tmp%28#0 from equivalence set
debug: Copy propagation made 4 modifications
debug: Optimizer: Encode Decode Pair Elimination
debug: replacing redundant decode-of-encode with: "foo"
debug: replacing redundant decode-of-encode with: "bar"
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.contains.contract.MyContract.test_numeric_types
debug: Optimizer: Perform Subroutine Inlining
contains/contract.py:125:34 debug: inlining call to test_cases.contains.contract.bar_string in test_cases.contains.contract.MyContract.test_numeric_types
contains/contract.py:125:48 debug: inlining call to test_cases.contains.contract.two_u8 in test_cases.contains.contract.MyContract.test_numeric_types
contains/contract.py:125:16 debug: inlining call to test_cases.contains.contract.one_u64 in test_cases.contains.contract.MyContract.test_numeric_types
contains/contract.py:126:34 debug: constant function call to test_cases.contains.contract.foo_arc4 in test_cases.contains.contract.MyContract.test_numeric_types
contains/contract.py:127:16 debug: inlining call to test_cases.contains.contract.two_u8 in test_cases.contains.contract.MyContract.test_numeric_types
contains/contract.py:127:33 debug: constant function call to test_cases.contains.contract.bar_arc4 in test_cases.contains.contract.MyContract.test_numeric_types
contains/contract.py:128:16 debug: inlining call to test_cases.contains.contract.two_u8 in test_cases.contains.contract.MyContract.test_numeric_types
contains/contract.py:128:33 debug: inlining call to test_cases.contains.contract.foo_string in test_cases.contains.contract.MyContract.test_numeric_types
contains/contract.py:129:16 debug: inlining call to test_cases.contains.contract.three_u512 in test_cases.contains.contract.MyContract.test_numeric_types
contains/contract.py:129:48 debug: inlining call to test_cases.contains.contract.foo_string in test_cases.contains.contract.MyContract.test_numeric_types
contains/contract.py:120:16 debug: inlining call to test_cases.contains.contract.one_u64 in test_cases.contains.contract.MyContract.test_numeric_types
contains/contract.py:121:13 debug: inlining call to test_cases.contains.contract.foo_string in test_cases.contains.contract.MyContract.test_numeric_types
contains/contract.py:123:13 debug: inlining call to test_cases.contains.contract.two_u8 in test_cases.contains.contract.MyContract.test_numeric_types
contains/contract.py:118:16 debug: inlining call to test_cases.contains.contract.three_u512 in test_cases.contains.contract.MyContract.test_numeric_types
contains/contract.py:118:55 debug: inlining call to test_cases.contains.contract.foo_string in test_cases.contains.contract.MyContract.test_numeric_types
contains/contract.py:117:16 debug: inlining call to test_cases.contains.contract.two_u8 in test_cases.contains.contract.MyContract.test_numeric_types
contains/contract.py:117:29 debug: inlining call to test_cases.contains.contract.foo_string in test_cases.contains.contract.MyContract.test_numeric_types
contains/contract.py:116:16 debug: inlining call to test_cases.contains.contract.two_u8 in test_cases.contains.contract.MyContract.test_numeric_types
contains/contract.py:116:29 debug: constant function call to test_cases.contains.contract.bar_arc4 in test_cases.contains.contract.MyContract.test_numeric_types
contains/contract.py:116:52 debug: inlining call to test_cases.contains.contract.two_u8 in test_cases.contains.contract.MyContract.test_numeric_types
contains/contract.py:115:30 debug: constant function call to test_cases.contains.contract.foo_arc4 in test_cases.contains.contract.MyContract.test_numeric_types
contains/contract.py:115:53 debug: inlining call to test_cases.contains.contract.two_u8 in test_cases.contains.contract.MyContract.test_numeric_types
contains/contract.py:114:30 debug: inlining call to test_cases.contains.contract.one_arc4u64 in test_cases.contains.contract.MyContract.test_numeric_types
contains/contract.py:114:45 debug: inlining call to test_cases.contains.contract.bar_string in test_cases.contains.contract.MyContract.test_numeric_types
contains/contract.py:114:59 debug: inlining call to test_cases.contains.contract.two_u8 in test_cases.contains.contract.MyContract.test_numeric_types
contains/contract.py:114:16 debug: inlining call to test_cases.contains.contract.one_u64 in test_cases.contains.contract.MyContract.test_numeric_types
contains/contract.py:108:16 debug: inlining call to test_cases.contains.contract.one_u64 in test_cases.contains.contract.MyContract.test_numeric_types
contains/contract.py:109:13 debug: inlining call to test_cases.contains.contract.foo_string in test_cases.contains.contract.MyContract.test_numeric_types
contains/contract.py:110:13 debug: inlining call to test_cases.contains.contract.one_u64 in test_cases.contains.contract.MyContract.test_numeric_types
contains/contract.py:112:13 debug: inlining call to test_cases.contains.contract.two_u8 in test_cases.contains.contract.MyContract.test_numeric_types
contains/contract.py:106:16 debug: inlining call to test_cases.contains.contract.four_biguint in test_cases.contains.contract.MyContract.test_numeric_types
contains/contract.py:105:16 debug: inlining call to test_cases.contains.contract.three_u512 in test_cases.contains.contract.MyContract.test_numeric_types
contains/contract.py:104:16 debug: inlining call to test_cases.contains.contract.two_u8 in test_cases.contains.contract.MyContract.test_numeric_types
contains/contract.py:104:33 debug: inlining call to test_cases.contains.contract.one_arc4u64 in test_cases.contains.contract.MyContract.test_numeric_types
contains/contract.py:103:16 debug: inlining call to test_cases.contains.contract.two_u8 in test_cases.contains.contract.MyContract.test_numeric_types
contains/contract.py:103:33 debug: inlining call to test_cases.contains.contract.one_arc4u64 in test_cases.contains.contract.MyContract.test_numeric_types
contains/contract.py:102:34 debug: inlining call to test_cases.contains.contract.one_arc4u64 in test_cases.contains.contract.MyContract.test_numeric_types
contains/contract.py:101:16 debug: inlining call to test_cases.contains.contract.one_u64 in test_cases.contains.contract.MyContract.test_numeric_types
contains/contract.py:101:45 debug: inlining call to test_cases.contains.contract.two_u8 in test_cases.contains.contract.MyContract.test_numeric_types
contains/contract.py:100:16 debug: inlining call to test_cases.contains.contract.one_u64 in test_cases.contains.contract.MyContract.test_numeric_types
contains/contract.py:100:61 debug: inlining call to test_cases.contains.contract.two_u8 in test_cases.contains.contract.MyContract.test_numeric_types
contains/contract.py:99:16 debug: inlining call to test_cases.contains.contract.one_u64 in test_cases.contains.contract.MyContract.test_numeric_types
contains/contract.py:99:45 debug: inlining call to test_cases.contains.contract.two_u8 in test_cases.contains.contract.MyContract.test_numeric_types
contains/contract.py:97:16 debug: inlining call to test_cases.contains.contract.four_biguint in test_cases.contains.contract.MyContract.test_numeric_types
contains/contract.py:96:16 debug: inlining call to test_cases.contains.contract.three_u512 in test_cases.contains.contract.MyContract.test_numeric_types
contains/contract.py:95:16 debug: inlining call to test_cases.contains.contract.two_u8 in test_cases.contains.contract.MyContract.test_numeric_types
contains/contract.py:95:29 debug: inlining call to test_cases.contains.contract.one_arc4u64 in test_cases.contains.contract.MyContract.test_numeric_types
contains/contract.py:94:16 debug: inlining call to test_cases.contains.contract.two_u8 in test_cases.contains.contract.MyContract.test_numeric_types
contains/contract.py:94:29 debug: inlining call to test_cases.contains.contract.one_arc4u64 in test_cases.contains.contract.MyContract.test_numeric_types
contains/contract.py:94:55 debug: inlining call to test_cases.contains.contract.two_u8 in test_cases.contains.contract.MyContract.test_numeric_types
contains/contract.py:93:30 debug: inlining call to test_cases.contains.contract.one_arc4u64 in test_cases.contains.contract.MyContract.test_numeric_types
contains/contract.py:93:56 debug: inlining call to test_cases.contains.contract.two_u8 in test_cases.contains.contract.MyContract.test_numeric_types
contains/contract.py:92:30 debug: inlining call to test_cases.contains.contract.one_arc4u64 in test_cases.contains.contract.MyContract.test_numeric_types
contains/contract.py:92:56 debug: inlining call to test_cases.contains.contract.two_u8 in test_cases.contains.contract.MyContract.test_numeric_types
contains/contract.py:92:16 debug: inlining call to test_cases.contains.contract.one_u64 in test_cases.contains.contract.MyContract.test_numeric_types
contains/contract.py:91:16 debug: inlining call to test_cases.contains.contract.one_u64 in test_cases.contains.contract.MyContract.test_numeric_types
contains/contract.py:91:30 debug: inlining call to test_cases.contains.contract.one_u64 in test_cases.contains.contract.MyContract.test_numeric_types
contains/contract.py:91:52 debug: inlining call to test_cases.contains.contract.two_u8 in test_cases.contains.contract.MyContract.test_numeric_types
contains/contract.py:89:16 debug: inlining call to test_cases.contains.contract.one_u64 in test_cases.contains.contract.MyContract.test_numeric_types
contains/contract.py:89:45 debug: inlining call to test_cases.contains.contract.two_u64 in test_cases.contains.contract.MyContract.test_numeric_types
contains/contract.py:88:16 debug: inlining call to test_cases.contains.contract.one_u64 in test_cases.contains.contract.MyContract.test_numeric_types
contains/contract.py:88:30 debug: inlining call to test_cases.contains.contract.one_u64 in test_cases.contains.contract.MyContract.test_numeric_types
contains/contract.py:88:41 debug: inlining call to test_cases.contains.contract.two_u64 in test_cases.contains.contract.MyContract.test_numeric_types
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: tmp%0#4, tmp%102#0
debug: selected tmp%0#4 from equivalence set
debug: Found equivalence set: tmp%0#3, tmp%107#0
debug: selected tmp%0#3 from equivalence set
debug: Found equivalence set: tmp%0#1, tmp%133#0
debug: selected tmp%0#1 from equivalence set
debug: Found equivalence set: tmp%0#2, tmp%136#0
debug: selected tmp%0#2 from equivalence set
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable awst_tmp%0#0
debug: Removing unused variable tmp%0#0
debug: Removing unused variable tmp%1#0
debug: Removing unused variable awst_tmp%1#0
debug: Removing unused variable tmp%4#0
debug: Removing unused variable awst_tmp%2#0
debug: Removing unused variable tmp%8#0
debug: Removing unused variable tmp%9#0
debug: Removing unused variable reinterpret_biguint%0#0
debug: Removing unused variable tmp%14#0
debug: Removing unused variable tmp%15#0
debug: Removing unused variable reinterpret_biguint%1#0
debug: Removing unused variable awst_tmp%3#0
debug: Removing unused variable reinterpret_biguint%2#0
debug: Removing unused variable tmp%21#0
debug: Removing unused variable tmp%22#0
debug: Removing unused variable reinterpret_biguint%3#0
debug: Removing unused variable reinterpret_biguint%4#0
debug: Removing unused variable awst_tmp%4#0
debug: Removing unused variable reinterpret_biguint%5#0
debug: Removing unused variable tmp%28#0
debug: Removing unused variable tmp%29#0
debug: Removing unused variable reinterpret_biguint%6#0
debug: Removing unused variable reinterpret_biguint%7#0
debug: Removing unused variable reinterpret_biguint%8#0
debug: Removing unused variable reinterpret_biguint%9#0
debug: Removing unused variable awst_tmp%5#0
debug: Removing unused variable reinterpret_biguint%10#0
debug: Removing unused variable tmp%34#0
debug: Removing unused variable reinterpret_biguint%11#0
debug: Removing unused variable reinterpret_biguint%12#0
debug: Removing unused variable reinterpret_biguint%13#0
debug: Removing unused variable awst_tmp%6#0
debug: Removing unused variable reinterpret_biguint%14#0
debug: Removing unused variable reinterpret_biguint%15#0
debug: Removing unused variable awst_tmp%7#0
debug: Removing unused variable awst_tmp%8#0
debug: Removing unused variable tmp%48#0
debug: Removing unused variable reinterpret_biguint%16#0
debug: Removing unused variable awst_tmp%9#0
debug: Removing unused variable tmp%53#0
debug: Removing unused variable reinterpret_biguint%17#0
debug: Removing unused variable awst_tmp%10#0
debug: Removing unused variable tmp%58#0
debug: Removing unused variable reinterpret_biguint%18#0
debug: Removing unused variable tmp%63#0
debug: Removing unused variable reinterpret_biguint%19#0
debug: Removing unused variable awst_tmp%11#0
debug: Removing unused variable reinterpret_biguint%20#0
debug: Removing unused variable tmp%68#0
debug: Removing unused variable reinterpret_biguint%21#0
debug: Removing unused variable reinterpret_biguint%22#0
debug: Removing unused variable awst_tmp%12#0
debug: Removing unused variable reinterpret_biguint%23#0
debug: Removing unused variable tmp%73#0
debug: Removing unused variable reinterpret_biguint%24#0
debug: Removing unused variable reinterpret_biguint%25#0
debug: Removing unused variable awst_tmp%13#0
debug: Removing unused variable reinterpret_biguint%26#0
debug: Removing unused variable reinterpret_biguint%27#0
debug: Removing unused variable awst_tmp%14#0
debug: Removing unused variable awst_tmp%15#0
debug: Removing unused variable tmp%88#0
debug: Removing unused variable tmp%89#0
debug: Removing unused variable tmp%90#0
debug: Removing unused variable reinterpret_biguint%28#0
debug: Removing unused variable tmp%95#0
debug: Removing unused variable tmp%96#0
debug: Removing unused variable tmp%97#0
debug: Removing unused variable reinterpret_biguint%29#0
debug: Removing unused variable awst_tmp%16#0
debug: Removing unused variable reinterpret_biguint%30#0
debug: Removing unused variable tmp%0#4
debug: Removing unused variable tmp%103#0
debug: Removing unused variable reinterpret_biguint%31#0
debug: Removing unused variable awst_tmp%17#0
debug: Removing unused variable reinterpret_biguint%32#0
debug: Removing unused variable tmp%0#3
debug: Removing unused variable tmp%108#0
debug: Removing unused variable reinterpret_biguint%33#0
debug: Removing unused variable reinterpret_biguint%34#0
debug: Removing unused variable awst_tmp%18#0
debug: Removing unused variable reinterpret_biguint%35#0
debug: Removing unused variable tmp%112#0
debug: Removing unused variable reinterpret_biguint%36#0
debug: Removing unused variable awst_tmp%19#0
debug: Removing unused variable reinterpret_biguint%37#0
debug: Removing unused variable tmp%117#0
debug: Removing unused variable reinterpret_biguint%38#0
debug: Removing unused variable awst_tmp%20#0
debug: Removing unused variable tmp%122#0
debug: Removing unused variable tmp%123#0
debug: Removing unused variable reinterpret_biguint%39#0
debug: Removing unused variable tmp%128#0
debug: Removing unused variable tmp%129#0
debug: Removing unused variable reinterpret_biguint%40#0
debug: Removing unused variable awst_tmp%21#0
debug: Removing unused variable tmp%0#1
debug: Removing unused variable awst_tmp%22#0
debug: Removing unused variable reinterpret_biguint%41#0
debug: Removing unused variable tmp%0#2
debug: Removing unused variable awst_tmp%23#0
debug: Removing unused variable reinterpret_biguint%42#0
debug: Removing unused variable tmp%140#0
debug: Removing unused variable awst_tmp%24#0
debug: Removing unused variable reinterpret_biguint%43#0
debug: Removing unused variable tmp%144#0
debug: Removing unused variable reinterpret_biguint%44#0
debug: Removing unused variable reinterpret_biguint%45#0
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (== 1u 1u) to 1u
debug: Simplified (== 1u 2u) to 0u
debug: Simplified (== 1u 3u) to 0u
debug: Simplified (== 1u 2u) to 0u
debug: Simplified (== 1u 1u) to 1u
debug: Simplified (== 1u 3u) to 0u
debug: Simplified (b== 0x02 tmp%12#0) to 0u
debug: Simplified (b== 0x0000000000000001 tmp%16#0) to 1u
debug: Simplified (== 1u 4u) to 0u
debug: Simplified (b== 0x02 tmp%19#0) to 0u
debug: Simplified (b== 0x0000000000000001 tmp%23#0) to 0u
debug: Simplified (== 2u 3u) to 0u
debug: Simplified (b== 0x02 tmp%26#0) to 1u
debug: Simplified (b== 0x02 0x0000000000000001) to 0u
debug: Simplified (b== 0x02 tmp%31#0) to 0u
debug: Simplified (b== 0x02 0x02) to 1u
debug: Simplified (b== 0x02 0x0000000000000001) to 0u
debug: Simplified (b== 0x02 tmp%36#0) to 1u
debug: Simplified (b== 0x02 tmp%38#0) to 0u
debug: Simplified (b== 0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000003 tmp%40#0) to 1u
debug: Simplified (b== 0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000003 tmp%42#0) to 0u
debug: Simplified (b== 4b tmp%44#0) to 0u
debug: Simplified (b== 4b tmp%46#0) to 1u
debug: Simplified (== 1u 5u) to 0u
debug: Simplified (b== 0x02 tmp%50#0) to 0u
debug: Simplified (== 1u 3u) to 0u
debug: Simplified (b== 0x02 tmp%55#0) to 0u
debug: Simplified (== 1u 3u) to 0u
debug: Simplified (b== 0x02 tmp%60#0) to 0u
debug: Simplified (b== 0x0000000000000001 tmp%64#0) to 0u
debug: Simplified (== 2u 3u) to 0u
debug: Simplified (b== 0x02 0x0000000000000001) to 0u
debug: Simplified (b== 0x02 tmp%70#0) to 0u
debug: Simplified (b== 0x02 0x0000000000000001) to 0u
debug: Simplified (b== 0x02 tmp%75#0) to 0u
debug: Simplified (b== 0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000003 tmp%78#0) to 0u
debug: Simplified (b== 0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000003 tmp%80#0) to 0u
debug: Simplified (b== 4b tmp%83#0) to 0u
debug: Simplified (b== 4b tmp%85#0) to 0u
debug: Simplified (== 1u 1u) to 1u
debug: Simplified (== 1u 3u) to 0u
debug: Simplified (b== 0x02 tmp%93#0) to 0u
debug: Simplified (b== 0x0000000000000001 tmp%98#0) to 1u
debug: Simplified (b== 0x02 tmp%100#0) to 0u
debug: Simplified (== 2u 3u) to 0u
debug: Simplified (b== 0x02 tmp%105#0) to 1u
debug: Simplified (b== 0x02 tmp%109#0) to 0u
debug: Simplified (b== 0x02 0x02) to 1u
debug: Simplified (b== 0x02 tmp%113#0) to 1u
debug: Simplified (b== 0x02 tmp%115#0) to 0u
debug: Simplified (b== 0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000003 tmp%118#0) to 0u
debug: Simplified (b== 0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000003 tmp%120#0) to 1u
debug: Simplified (== 1u 3u) to 0u
debug: Simplified (b== 0x02 tmp%125#0) to 0u
debug: Simplified (b== 0x02 tmp%130#0) to 0u
debug: Simplified (! 0u) to 1u
debug: Simplified (== 2u 3u) to 0u
debug: Simplified (! 0u) to 1u
debug: Simplified (b== 0x02 tmp%137#0) to 0u
debug: Simplified (! 0u) to 1u
debug: Simplified (b== 0x02 tmp%141#0) to 0u
debug: Simplified (! 0u) to 1u
debug: Simplified (b== 0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000003 tmp%145#0) to 0u
debug: Simplified (! 0u) to 1u
debug: Simplified (b== 0x41 tmp%148#0) to 0u
debug: Simplified (b== 0x41 tmp%150#0) to 0u
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: simplifying conditional branch with a constant into a goto
debug: simplified terminator of block@232 from goto 1u ? block@2 : block@1 to goto block@2
debug: simplifying conditional branch with a constant into a goto
debug: simplified terminator of block@1 from goto 0u ? block@2 : block@3 to goto block@3
debug: simplifying conditional branch with a constant into a goto
debug: simplified terminator of block@226 from goto 0u ? block@6 : block@5 to goto block@5
debug: simplifying conditional branch with a constant into a goto
debug: simplified terminator of block@5 from goto 0u ? block@6 : block@7 to goto block@7
debug: simplifying conditional branch with a constant into a goto
debug: simplified terminator of block@222 from goto 1u ? block@11 : block@9 to goto block@11
debug: simplifying conditional branch with a constant into a goto
debug: simplified terminator of block@9 from goto 0u ? block@11 : block@10 to goto block@10
debug: simplifying conditional branch with a constant into a goto
debug: simplified terminator of block@10 from goto 0u ? block@11 : block@12 to goto block@12
debug: simplifying conditional branch with a constant into a goto
debug: simplified terminator of block@216 from goto 1u ? block@16 : block@14 to goto block@16
debug: simplifying conditional branch with a constant into a goto
debug: simplified terminator of block@14 from goto 0u ? block@16 : block@15 to goto block@15
debug: simplifying conditional branch with a constant into a goto
debug: simplified terminator of block@15 from goto 0u ? block@16 : block@17 to goto block@17
debug: simplifying conditional branch with a constant into a goto
debug: simplified terminator of block@210 from goto 0u ? block@21 : block@19 to goto block@19
debug: simplifying conditional branch with a constant into a goto
debug: simplified terminator of block@19 from goto 0u ? block@21 : block@20 to goto block@20
debug: simplifying conditional branch with a constant into a goto
debug: simplified terminator of block@20 from goto 1u ? block@21 : block@22 to goto block@21
debug: simplifying conditional branch with a constant into a goto
debug: simplified terminator of block@206 from goto 0u ? block@26 : block@24 to goto block@24
debug: simplifying conditional branch with a constant into a goto
debug: simplified terminator of block@24 from goto 0u ? block@26 : block@25 to goto block@25
debug: simplifying conditional branch with a constant into a goto
debug: simplified terminator of block@25 from goto 1u ? block@26 : block@27 to goto block@26
debug: simplifying conditional branch with a constant into a goto
debug: simplified terminator of block@200 from goto 0u ? block@31 : block@29 to goto block@29
debug: simplifying conditional branch with a constant into a goto
debug: simplified terminator of block@29 from goto 1u ? block@31 : block@30 to goto block@31
debug: simplifying conditional branch with a constant into a goto
debug: simplified terminator of block@30 from goto 0u ? block@31 : block@32 to goto block@32
debug: simplifying conditional branch with a constant into a goto
debug: simplified terminator of block@196 from goto 1u ? block@35 : block@34 to goto block@35
debug: simplifying conditional branch with a constant into a goto
debug: simplified terminator of block@34 from goto 0u ? block@35 : block@36 to goto block@36
debug: simplifying conditional branch with a constant into a goto
debug: simplified terminator of block@194 from goto 0u ? block@39 : block@38 to goto block@38
debug: simplifying conditional branch with a constant into a goto
debug: simplified terminator of block@38 from goto 1u ? block@39 : block@40 to goto block@39
debug: simplifying conditional branch with a constant into a goto
debug: simplified terminator of block@192 from goto 0u ? block@43 : block@42 to goto block@42
debug: simplifying conditional branch with a constant into a goto
debug: simplified terminator of block@42 from goto 0u ? block@43 : block@44 to goto block@44
debug: simplifying conditional branch with a constant into a goto
debug: simplified terminator of block@188 from goto 0u ? block@47 : block@46 to goto block@46
debug: simplifying conditional branch with a constant into a goto
debug: simplified terminator of block@46 from goto 0u ? block@47 : block@48 to goto block@48
debug: simplifying conditional branch with a constant into a goto
debug: simplified terminator of block@184 from goto 0u ? block@51 : block@50 to goto block@50
debug: simplifying conditional branch with a constant into a goto
debug: simplified terminator of block@50 from goto 0u ? block@51 : block@52 to goto block@52
debug: simplifying conditional branch with a constant into a goto
debug: simplified terminator of block@180 from goto 0u ? block@55 : block@54 to goto block@54
debug: simplifying conditional branch with a constant into a goto
debug: simplified terminator of block@54 from goto 0u ? block@55 : block@56 to goto block@56
debug: simplifying conditional branch with a constant into a goto
debug: simplified terminator of block@178 from goto 0u ? block@59 : block@58 to goto block@58
debug: simplifying conditional branch with a constant into a goto
debug: simplified terminator of block@58 from goto 0u ? block@59 : block@60 to goto block@60
debug: simplifying conditional branch with a constant into a goto
debug: simplified terminator of block@174 from goto 0u ? block@63 : block@62 to goto block@62
debug: simplifying conditional branch with a constant into a goto
debug: simplified terminator of block@62 from goto 0u ? block@63 : block@64 to goto block@64
debug: simplifying conditional branch with a constant into a goto
debug: simplified terminator of block@170 from goto 0u ? block@67 : block@66 to goto block@66
debug: simplifying conditional branch with a constant into a goto
debug: simplified terminator of block@66 from goto 0u ? block@67 : block@68 to goto block@68
debug: simplifying conditional branch with a constant into a goto
debug: simplified terminator of block@168 from goto 0u ? block@71 : block@70 to goto block@70
debug: simplifying conditional branch with a constant into a goto
debug: simplified terminator of block@70 from goto 0u ? block@71 : block@72 to goto block@72
debug: simplifying conditional branch with a constant into a goto
debug: simplified terminator of block@166 from goto 1u ? block@76 : block@74 to goto block@76
debug: simplifying conditional branch with a constant into a goto
debug: simplified terminator of block@74 from goto 0u ? block@76 : block@75 to goto block@75
debug: simplifying conditional branch with a constant into a goto
debug: simplified terminator of block@75 from goto 0u ? block@76 : block@77 to goto block@77
debug: simplifying conditional branch with a constant into a goto
debug: simplified terminator of block@158 from goto 1u ? block@80 : block@79 to goto block@80
debug: simplifying conditional branch with a constant into a goto
debug: simplified terminator of block@79 from goto 0u ? block@80 : block@81 to goto block@81
debug: simplifying conditional branch with a constant into a goto
debug: simplified terminator of block@150 from goto 0u ? block@84 : block@83 to goto block@83
debug: simplifying conditional branch with a constant into a goto
debug: simplified terminator of block@83 from goto 1u ? block@84 : block@85 to goto block@84
debug: simplifying conditional branch with a constant into a goto
debug: simplified terminator of block@146 from goto 0u ? block@88 : block@87 to goto block@87
debug: simplifying conditional branch with a constant into a goto
debug: simplified terminator of block@87 from goto 1u ? block@88 : block@89 to goto block@88
debug: simplifying conditional branch with a constant into a goto
debug: simplified terminator of block@140 from goto 1u ? block@92 : block@91 to goto block@92
debug: simplifying conditional branch with a constant into a goto
debug: simplified terminator of block@91 from goto 0u ? block@92 : block@93 to goto block@93
debug: simplifying conditional branch with a constant into a goto
debug: simplified terminator of block@136 from goto 0u ? block@96 : block@95 to goto block@95
debug: simplifying conditional branch with a constant into a goto
debug: simplified terminator of block@95 from goto 1u ? block@96 : block@97 to goto block@96
debug: simplifying conditional branch with a constant into a goto
debug: simplified terminator of block@132 from goto 0u ? block@100 : block@99 to goto block@99
debug: simplifying conditional branch with a constant into a goto
debug: simplified terminator of block@99 from goto 0u ? block@100 : block@101 to goto block@101
debug: simplifying conditional branch with a constant into a goto
debug: simplified terminator of block@126 from goto 0u ? block@104 : block@103 to goto block@103
debug: simplifying conditional branch with a constant into a goto
debug: simplified terminator of block@103 from goto 0u ? block@104 : block@105 to goto block@105
debug: Optimizer: Merge Blocks
debug: Replaced predecessor block@227 with block@0 in block@228
debug: Merged linear block@227 into block@0
debug: Replaced predecessor block@228 with block@0 in block@229
debug: Merged linear block@228 into block@0
debug: Replaced predecessor block@229 with block@0 in block@230
debug: Merged linear block@229 into block@0
debug: Replaced predecessor block@230 with block@0 in block@231
debug: Merged linear block@230 into block@0
debug: Replaced predecessor block@231 with block@0 in block@232
debug: Merged linear block@231 into block@0
debug: Replaced predecessor block@232 with block@0 in block@2
debug: Merged linear block@232 into block@0
debug: Replaced predecessor block@2 with block@0 in block@4
debug: Merged linear block@2 into block@0
debug: Replaced predecessor block@3 with block@1 in block@4
debug: Merged linear block@3 into block@1
debug: Replaced predecessor block@223 with block@4 in block@224
debug: Merged linear block@223 into block@4
debug: Replaced predecessor block@224 with block@4 in block@225
debug: Merged linear block@224 into block@4
debug: Replaced predecessor block@225 with block@4 in block@226
debug: Merged linear block@225 into block@4
debug: Replaced predecessor block@226 with block@4 in block@5
debug: Merged linear block@226 into block@4
debug: Replaced predecessor block@5 with block@4 in block@7
debug: Merged linear block@5 into block@4
debug: Replaced predecessor block@7 with block@4 in block@8
debug: Merged linear block@7 into block@4
debug: Replaced predecessor block@217 with block@8 in block@218
debug: Merged linear block@217 into block@8
debug: Replaced predecessor block@218 with block@8 in block@219
debug: Merged linear block@218 into block@8
debug: Replaced predecessor block@219 with block@8 in block@220
debug: Merged linear block@219 into block@8
debug: Replaced predecessor block@220 with block@8 in block@221
debug: Merged linear block@220 into block@8
debug: Replaced predecessor block@221 with block@8 in block@222
debug: Merged linear block@221 into block@8
debug: Replaced predecessor block@222 with block@8 in block@11
debug: Merged linear block@222 into block@8
debug: Replaced predecessor block@10 with block@9 in block@12
debug: Merged linear block@10 into block@9
debug: Replaced predecessor block@11 with block@8 in block@13
debug: Merged linear block@11 into block@8
debug: Replaced predecessor block@12 with block@9 in block@13
debug: Merged linear block@12 into block@9
debug: Replaced predecessor block@211 with block@13 in block@212
debug: Merged linear block@211 into block@13
debug: Replaced predecessor block@212 with block@13 in block@213
debug: Merged linear block@212 into block@13
debug: Replaced predecessor block@213 with block@13 in block@214
debug: Merged linear block@213 into block@13
debug: Replaced predecessor block@214 with block@13 in block@215
debug: Merged linear block@214 into block@13
debug: Replaced predecessor block@215 with block@13 in block@216
debug: Merged linear block@215 into block@13
debug: Replaced predecessor block@216 with block@13 in block@16
debug: Merged linear block@216 into block@13
debug: Replaced predecessor block@15 with block@14 in block@17
debug: Merged linear block@15 into block@14
debug: Replaced predecessor block@16 with block@13 in block@18
debug: Merged linear block@16 into block@13
debug: Replaced predecessor block@17 with block@14 in block@18
debug: Merged linear block@17 into block@14
debug: Replaced predecessor block@207 with block@18 in block@208
debug: Merged linear block@207 into block@18
debug: Replaced predecessor block@208 with block@18 in block@209
debug: Merged linear block@208 into block@18
debug: Replaced predecessor block@209 with block@18 in block@210
debug: Merged linear block@209 into block@18
debug: Replaced predecessor block@210 with block@18 in block@19
debug: Merged linear block@210 into block@18
debug: Replaced predecessor block@19 with block@18 in block@20
debug: Merged linear block@19 into block@18
debug: Replaced predecessor block@20 with block@18 in block@21
debug: Merged linear block@20 into block@18
debug: Replaced predecessor block@21 with block@18 in block@23
debug: Merged linear block@21 into block@18
debug: Replaced predecessor block@201 with block@23 in block@202
debug: Merged linear block@201 into block@23
debug: Replaced predecessor block@202 with block@23 in block@203
debug: Merged linear block@202 into block@23
debug: Replaced predecessor block@203 with block@23 in block@204
debug: Merged linear block@203 into block@23
debug: Replaced predecessor block@204 with block@23 in block@205
debug: Merged linear block@204 into block@23
debug: Replaced predecessor block@205 with block@23 in block@206
debug: Merged linear block@205 into block@23
debug: Replaced predecessor block@206 with block@23 in block@24
debug: Merged linear block@206 into block@23
debug: Replaced predecessor block@24 with block@23 in block@25
debug: Merged linear block@24 into block@23
debug: Replaced predecessor block@25 with block@23 in block@26
debug: Merged linear block@25 into block@23
debug: Replaced predecessor block@26 with block@23 in block@28
debug: Merged linear block@26 into block@23
debug: Replaced predecessor block@197 with block@28 in block@198
debug: Merged linear block@197 into block@28
debug: Replaced predecessor block@198 with block@28 in block@199
debug: Merged linear block@198 into block@28
debug: Replaced predecessor block@199 with block@28 in block@200
debug: Merged linear block@199 into block@28
debug: Replaced predecessor block@200 with block@28 in block@29
debug: Merged linear block@200 into block@28
debug: Replaced predecessor block@29 with block@28 in block@31
debug: Merged linear block@29 into block@28
debug: Replaced predecessor block@31 with block@28 in block@33
debug: Merged linear block@31 into block@28
debug: Replaced predecessor block@32 with block@30 in block@33
debug: Merged linear block@32 into block@30
debug: Replaced predecessor block@195 with block@33 in block@196
debug: Merged linear block@195 into block@33
debug: Replaced predecessor block@196 with block@33 in block@35
debug: Merged linear block@196 into block@33
debug: Replaced predecessor block@35 with block@33 in block@37
debug: Merged linear block@35 into block@33
debug: Replaced predecessor block@36 with block@34 in block@37
debug: Merged linear block@36 into block@34
debug: Replaced predecessor block@193 with block@37 in block@194
debug: Merged linear block@193 into block@37
debug: Replaced predecessor block@194 with block@37 in block@38
debug: Merged linear block@194 into block@37
debug: Replaced predecessor block@38 with block@37 in block@39
debug: Merged linear block@38 into block@37
debug: Replaced predecessor block@39 with block@37 in block@41
debug: Merged linear block@39 into block@37
debug: Replaced predecessor block@189 with block@41 in block@190
debug: Merged linear block@189 into block@41
debug: Replaced predecessor block@190 with block@41 in block@191
debug: Merged linear block@190 into block@41
debug: Replaced predecessor block@191 with block@41 in block@192
debug: Merged linear block@191 into block@41
debug: Replaced predecessor block@192 with block@41 in block@42
debug: Merged linear block@192 into block@41
debug: Replaced predecessor block@42 with block@41 in block@44
debug: Merged linear block@42 into block@41
debug: Replaced predecessor block@44 with block@41 in block@45
debug: Merged linear block@44 into block@41
debug: Replaced predecessor block@185 with block@45 in block@186
debug: Merged linear block@185 into block@45
debug: Replaced predecessor block@186 with block@45 in block@187
debug: Merged linear block@186 into block@45
debug: Replaced predecessor block@187 with block@45 in block@188
debug: Merged linear block@187 into block@45
debug: Replaced predecessor block@188 with block@45 in block@46
debug: Merged linear block@188 into block@45
debug: Replaced predecessor block@46 with block@45 in block@48
debug: Merged linear block@46 into block@45
debug: Replaced predecessor block@48 with block@45 in block@49
debug: Merged linear block@48 into block@45
debug: Replaced predecessor block@181 with block@49 in block@182
debug: Merged linear block@181 into block@49
debug: Replaced predecessor block@182 with block@49 in block@183
debug: Merged linear block@182 into block@49
debug: Replaced predecessor block@183 with block@49 in block@184
debug: Merged linear block@183 into block@49
debug: Replaced predecessor block@184 with block@49 in block@50
debug: Merged linear block@184 into block@49
debug: Replaced predecessor block@50 with block@49 in block@52
debug: Merged linear block@50 into block@49
debug: Replaced predecessor block@52 with block@49 in block@53
debug: Merged linear block@52 into block@49
debug: Replaced predecessor block@179 with block@53 in block@180
debug: Merged linear block@179 into block@53
debug: Replaced predecessor block@180 with block@53 in block@54
debug: Merged linear block@180 into block@53
debug: Replaced predecessor block@54 with block@53 in block@56
debug: Merged linear block@54 into block@53
debug: Replaced predecessor block@56 with block@53 in block@57
debug: Merged linear block@56 into block@53
debug: Replaced predecessor block@175 with block@57 in block@176
debug: Merged linear block@175 into block@57
debug: Replaced predecessor block@176 with block@57 in block@177
debug: Merged linear block@176 into block@57
debug: Replaced predecessor block@177 with block@57 in block@178
debug: Merged linear block@177 into block@57
debug: Replaced predecessor block@178 with block@57 in block@58
debug: Merged linear block@178 into block@57
debug: Replaced predecessor block@58 with block@57 in block@60
debug: Merged linear block@58 into block@57
debug: Replaced predecessor block@60 with block@57 in block@61
debug: Merged linear block@60 into block@57
debug: Replaced predecessor block@171 with block@61 in block@172
debug: Merged linear block@171 into block@61
debug: Replaced predecessor block@172 with block@61 in block@173
debug: Merged linear block@172 into block@61
debug: Replaced predecessor block@173 with block@61 in block@174
debug: Merged linear block@173 into block@61
debug: Replaced predecessor block@174 with block@61 in block@62
debug: Merged linear block@174 into block@61
debug: Replaced predecessor block@62 with block@61 in block@64
debug: Merged linear block@62 into block@61
debug: Replaced predecessor block@64 with block@61 in block@65
debug: Merged linear block@64 into block@61
debug: Replaced predecessor block@169 with block@65 in block@170
debug: Merged linear block@169 into block@65
debug: Replaced predecessor block@170 with block@65 in block@66
debug: Merged linear block@170 into block@65
debug: Replaced predecessor block@66 with block@65 in block@68
debug: Merged linear block@66 into block@65
debug: Replaced predecessor block@68 with block@65 in block@69
debug: Merged linear block@68 into block@65
debug: Replaced predecessor block@167 with block@69 in block@168
debug: Merged linear block@167 into block@69
debug: Replaced predecessor block@168 with block@69 in block@70
debug: Merged linear block@168 into block@69
debug: Replaced predecessor block@70 with block@69 in block@72
debug: Merged linear block@70 into block@69
debug: Replaced predecessor block@72 with block@69 in block@73
debug: Merged linear block@72 into block@69
debug: Replaced predecessor block@159 with block@73 in block@160
debug: Merged linear block@159 into block@73
debug: Replaced predecessor block@160 with block@73 in block@161
debug: Merged linear block@160 into block@73
debug: Replaced predecessor block@161 with block@73 in block@162
debug: Merged linear block@161 into block@73
debug: Replaced predecessor block@162 with block@73 in block@163
debug: Merged linear block@162 into block@73
debug: Replaced predecessor block@163 with block@73 in block@164
debug: Merged linear block@163 into block@73
debug: Replaced predecessor block@164 with block@73 in block@165
debug: Merged linear block@164 into block@73
debug: Replaced predecessor block@165 with block@73 in block@166
debug: Merged linear block@165 into block@73
debug: Replaced predecessor block@166 with block@73 in block@76
debug: Merged linear block@166 into block@73
debug: Replaced predecessor block@75 with block@74 in block@77
debug: Merged linear block@75 into block@74
debug: Replaced predecessor block@76 with block@73 in block@78
debug: Merged linear block@76 into block@73
debug: Replaced predecessor block@77 with block@74 in block@78
debug: Merged linear block@77 into block@74
debug: Replaced predecessor block@151 with block@78 in block@152
debug: Merged linear block@151 into block@78
debug: Replaced predecessor block@152 with block@78 in block@153
debug: Merged linear block@152 into block@78
debug: Replaced predecessor block@153 with block@78 in block@154
debug: Merged linear block@153 into block@78
debug: Replaced predecessor block@154 with block@78 in block@155
debug: Merged linear block@154 into block@78
debug: Replaced predecessor block@155 with block@78 in block@156
debug: Merged linear block@155 into block@78
debug: Replaced predecessor block@156 with block@78 in block@157
debug: Merged linear block@156 into block@78
debug: Replaced predecessor block@157 with block@78 in block@158
debug: Merged linear block@157 into block@78
debug: Replaced predecessor block@158 with block@78 in block@80
debug: Merged linear block@158 into block@78
debug: Replaced predecessor block@80 with block@78 in block@82
debug: Merged linear block@80 into block@78
debug: Replaced predecessor block@81 with block@79 in block@82
debug: Merged linear block@81 into block@79
debug: Replaced predecessor block@147 with block@82 in block@148
debug: Merged linear block@147 into block@82
debug: Replaced predecessor block@148 with block@82 in block@149
debug: Merged linear block@148 into block@82
debug: Replaced predecessor block@149 with block@82 in block@150
debug: Merged linear block@149 into block@82
debug: Replaced predecessor block@150 with block@82 in block@83
debug: Merged linear block@150 into block@82
debug: Replaced predecessor block@83 with block@82 in block@84
debug: Merged linear block@83 into block@82
debug: Replaced predecessor block@84 with block@82 in block@86
debug: Merged linear block@84 into block@82
debug: Replaced predecessor block@141 with block@86 in block@142
debug: Merged linear block@141 into block@86
debug: Replaced predecessor block@142 with block@86 in block@143
debug: Merged linear block@142 into block@86
debug: Replaced predecessor block@143 with block@86 in block@144
debug: Merged linear block@143 into block@86
debug: Replaced predecessor block@144 with block@86 in block@145
debug: Merged linear block@144 into block@86
debug: Replaced predecessor block@145 with block@86 in block@146
debug: Merged linear block@145 into block@86
debug: Replaced predecessor block@146 with block@86 in block@87
debug: Merged linear block@146 into block@86
debug: Replaced predecessor block@87 with block@86 in block@88
debug: Merged linear block@87 into block@86
debug: Replaced predecessor block@88 with block@86 in block@90
debug: Merged linear block@88 into block@86
debug: Replaced predecessor block@137 with block@90 in block@138
debug: Merged linear block@137 into block@90
debug: Replaced predecessor block@138 with block@90 in block@139
debug: Merged linear block@138 into block@90
debug: Replaced predecessor block@139 with block@90 in block@140
debug: Merged linear block@139 into block@90
debug: Replaced predecessor block@140 with block@90 in block@92
debug: Merged linear block@140 into block@90
debug: Replaced predecessor block@92 with block@90 in block@94
debug: Merged linear block@92 into block@90
debug: Replaced predecessor block@93 with block@91 in block@94
debug: Merged linear block@93 into block@91
debug: Replaced predecessor block@133 with block@94 in block@134
debug: Merged linear block@133 into block@94
debug: Replaced predecessor block@134 with block@94 in block@135
debug: Merged linear block@134 into block@94
debug: Replaced predecessor block@135 with block@94 in block@136
debug: Merged linear block@135 into block@94
debug: Replaced predecessor block@136 with block@94 in block@95
debug: Merged linear block@136 into block@94
debug: Replaced predecessor block@95 with block@94 in block@96
debug: Merged linear block@95 into block@94
debug: Replaced predecessor block@96 with block@94 in block@98
debug: Merged linear block@96 into block@94
debug: Replaced predecessor block@127 with block@98 in block@128
debug: Merged linear block@127 into block@98
debug: Replaced predecessor block@128 with block@98 in block@129
debug: Merged linear block@128 into block@98
debug: Replaced predecessor block@129 with block@98 in block@130
debug: Merged linear block@129 into block@98
debug: Replaced predecessor block@130 with block@98 in block@131
debug: Merged linear block@130 into block@98
debug: Replaced predecessor block@131 with block@98 in block@132
debug: Merged linear block@131 into block@98
debug: Replaced predecessor block@132 with block@98 in block@99
debug: Merged linear block@132 into block@98
debug: Replaced predecessor block@99 with block@98 in block@101
debug: Merged linear block@99 into block@98
debug: Replaced predecessor block@101 with block@98 in block@102
debug: Merged linear block@101 into block@98
debug: Replaced predecessor block@107 with block@102 in block@108
debug: Merged linear block@107 into block@102
debug: Replaced predecessor block@108 with block@102 in block@109
debug: Merged linear block@108 into block@102
debug: Replaced predecessor block@109 with block@102 in block@110
debug: Merged linear block@109 into block@102
debug: Replaced predecessor block@110 with block@102 in block@111
debug: Merged linear block@110 into block@102
debug: Replaced predecessor block@111 with block@102 in block@112
debug: Merged linear block@111 into block@102
debug: Replaced predecessor block@112 with block@102 in block@113
debug: Merged linear block@112 into block@102
debug: Replaced predecessor block@113 with block@102 in block@114
debug: Merged linear block@113 into block@102
debug: Replaced predecessor block@114 with block@102 in block@115
debug: Merged linear block@114 into block@102
debug: Replaced predecessor block@115 with block@102 in block@116
debug: Merged linear block@115 into block@102
debug: Replaced predecessor block@116 with block@102 in block@117
debug: Merged linear block@116 into block@102
debug: Replaced predecessor block@117 with block@102 in block@118
debug: Merged linear block@117 into block@102
debug: Replaced predecessor block@118 with block@102 in block@119
debug: Merged linear block@118 into block@102
debug: Replaced predecessor block@119 with block@102 in block@120
debug: Merged linear block@119 into block@102
debug: Replaced predecessor block@120 with block@102 in block@121
debug: Merged linear block@120 into block@102
debug: Replaced predecessor block@121 with block@102 in block@122
debug: Merged linear block@121 into block@102
debug: Replaced predecessor block@122 with block@102 in block@123
debug: Merged linear block@122 into block@102
debug: Replaced predecessor block@123 with block@102 in block@124
debug: Merged linear block@123 into block@102
debug: Replaced predecessor block@124 with block@102 in block@125
debug: Merged linear block@124 into block@102
debug: Replaced predecessor block@125 with block@102 in block@126
debug: Merged linear block@125 into block@102
debug: Replaced predecessor block@126 with block@102 in block@103
debug: Merged linear block@126 into block@102
debug: Replaced predecessor block@103 with block@102 in block@105
debug: Merged linear block@103 into block@102
debug: Replaced predecessor block@105 with block@102 in block@106
debug: Merged linear block@105 into block@102
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Removing unreachable block: block@1
debug: Removing unreachable block: block@6
debug: Removing unreachable block: block@9
debug: Removing unreachable block: block@14
debug: Removing unreachable block: block@22
debug: Removing unreachable block: block@27
debug: Removing unreachable block: block@30
debug: Removing unreachable block: block@34
debug: Removing unreachable block: block@40
debug: Removing unreachable block: block@43
debug: Removing unreachable block: block@47
debug: Removing unreachable block: block@51
debug: Removing unreachable block: block@55
debug: Removing unreachable block: block@59
debug: Removing unreachable block: block@63
debug: Removing unreachable block: block@67
debug: Removing unreachable block: block@71
debug: Removing unreachable block: block@74
debug: Removing unreachable block: block@79
debug: Removing unreachable block: block@85
debug: Removing unreachable block: block@89
debug: Removing unreachable block: block@91
debug: Removing unreachable block: block@97
debug: Removing unreachable block: block@100
debug: Removing unreachable block: block@104
debug: Optimizer: Repeated Expression Elimination
debug: Replacing redundant declaration let tmp%26#0: biguint = (itob 2u) with copy of existing registers [Register(source_location=contains/contract.py:93:15-64, ir_type=biguint, name='tmp%23', version=0)]
debug: Replacing redundant declaration let tmp%36#0: biguint = (itob 2u) with copy of existing registers [Register(source_location=contains/contract.py:93:15-64, ir_type=biguint, name='tmp%23', version=0)]
debug: Replacing redundant declaration let tmp%40#0: biguint = (itob 3u) with copy of existing registers [Register(source_location=contains/contract.py:94:15-63, ir_type=biguint, name='tmp%31', version=0)]
debug: Replacing redundant declaration let tmp%50#0: biguint = (itob 1u) with copy of existing registers [Register(source_location=contains/contract.py:92:15-64, ir_type=biguint, name='tmp%16', version=0)]
debug: Replacing redundant declaration let tmp%55#0: biguint = (itob 1u) with copy of existing registers [Register(source_location=contains/contract.py:92:15-64, ir_type=biguint, name='tmp%16', version=0)]
debug: Replacing redundant declaration let tmp%60#0: biguint = (itob 1u) with copy of existing registers [Register(source_location=contains/contract.py:92:15-64, ir_type=biguint, name='tmp%16', version=0)]
debug: Replacing redundant declaration let tmp%64#0: biguint = (itob 2u) with copy of existing registers [Register(source_location=contains/contract.py:93:15-64, ir_type=biguint, name='tmp%23', version=0)]
debug: Replacing redundant declaration let tmp%70#0: biguint = (itob 3u) with copy of existing registers [Register(source_location=contains/contract.py:94:15-63, ir_type=biguint, name='tmp%31', version=0)]
debug: Replacing redundant declaration let tmp%75#0: biguint = (itob 3u) with copy of existing registers [Register(source_location=contains/contract.py:94:15-63, ir_type=biguint, name='tmp%31', version=0)]
debug: Replacing redundant declaration let tmp%78#0: biguint = (itob 5u) with copy of existing registers [Register(source_location=contains/contract.py:97:15-55, ir_type=biguint, name='tmp%44', version=0)]
debug: Replacing redundant declaration let tmp%83#0: biguint = (itob 2u) with copy of existing registers [Register(source_location=contains/contract.py:93:15-64, ir_type=biguint, name='tmp%23', version=0)]
debug: Replacing redundant declaration let tmp%98#0: biguint = (itob 1u) with copy of existing registers [Register(source_location=contains/contract.py:92:15-64, ir_type=biguint, name='tmp%16', version=0)]
debug: Replacing redundant declaration let tmp%105#0: biguint = (itob 2u) with copy of existing registers [Register(source_location=contains/contract.py:93:15-64, ir_type=biguint, name='tmp%23', version=0)]
debug: Replacing redundant declaration let tmp%109#0: biguint = (itob 3u) with copy of existing registers [Register(source_location=contains/contract.py:94:15-63, ir_type=biguint, name='tmp%31', version=0)]
debug: Replacing redundant declaration let tmp%113#0: biguint = (itob 2u) with copy of existing registers [Register(source_location=contains/contract.py:93:15-64, ir_type=biguint, name='tmp%23', version=0)]
debug: Replacing redundant declaration let tmp%118#0: biguint = (itob 5u) with copy of existing registers [Register(source_location=contains/contract.py:97:15-55, ir_type=biguint, name='tmp%44', version=0)]
debug: Replacing redundant declaration let tmp%120#0: biguint = (itob 3u) with copy of existing registers [Register(source_location=contains/contract.py:94:15-63, ir_type=biguint, name='tmp%31', version=0)]
debug: Replacing redundant declaration let tmp%125#0: biguint = (itob 1u) with copy of existing registers [Register(source_location=contains/contract.py:92:15-64, ir_type=biguint, name='tmp%16', version=0)]
debug: Replacing redundant declaration let tmp%130#0: biguint = (itob 1u) with copy of existing registers [Register(source_location=contains/contract.py:92:15-64, ir_type=biguint, name='tmp%16', version=0)]
debug: Replacing redundant declaration let tmp%137#0: biguint = (itob 3u) with copy of existing registers [Register(source_location=contains/contract.py:94:15-63, ir_type=biguint, name='tmp%31', version=0)]
debug: Replacing redundant declaration let tmp%141#0: biguint = (itob 3u) with copy of existing registers [Register(source_location=contains/contract.py:94:15-63, ir_type=biguint, name='tmp%31', version=0)]
debug: Replacing redundant declaration let tmp%145#0: biguint = (itob 5u) with copy of existing registers [Register(source_location=contains/contract.py:97:15-55, ir_type=biguint, name='tmp%44', version=0)]
debug: Found equivalence set: or_result%0#0, or_result%0#2
debug: selected or_result%0#0 from equivalence set
debug: Found equivalence set: or_result%1#1, or_result%1#2
debug: selected or_result%1#1 from equivalence set
debug: Found equivalence set: or_result%2#0, or_result%2#2
debug: selected or_result%2#0 from equivalence set
debug: Found equivalence set: or_result%3#0, or_result%3#2
debug: selected or_result%3#0 from equivalence set
debug: Found equivalence set: tmp%23#0, tmp%26#0, tmp%36#0, tmp%64#0, tmp%83#0, tmp%105#0, tmp%113#0
debug: selected tmp%23#0 from equivalence set
debug: Found equivalence set: or_result%4#0, or_result%4#2
debug: selected or_result%4#0 from equivalence set
debug: Found equivalence set: or_result%5#0, or_result%5#2
debug: selected or_result%5#0 from equivalence set
debug: Found equivalence set: or_result%6#0, or_result%6#2
debug: selected or_result%6#0 from equivalence set
debug: Found equivalence set: tmp%31#0, tmp%40#0, tmp%70#0, tmp%75#0, tmp%109#0, tmp%120#0, tmp%137#0, tmp%141#0
debug: selected tmp%31#0 from equivalence set
debug: Found equivalence set: or_result%7#0, or_result%7#2
debug: selected or_result%7#0 from equivalence set
debug: Found equivalence set: or_result%8#0, or_result%8#2
debug: selected or_result%8#0 from equivalence set
debug: Found equivalence set: tmp%16#0, tmp%50#0, tmp%55#0, tmp%60#0, tmp%98#0, tmp%125#0, tmp%130#0
debug: selected tmp%16#0 from equivalence set
debug: Found equivalence set: or_result%9#1, or_result%9#2
debug: selected or_result%9#1 from equivalence set
debug: Found equivalence set: or_result%10#1, or_result%10#2
debug: selected or_result%10#1 from equivalence set
debug: Found equivalence set: or_result%11#1, or_result%11#2
debug: selected or_result%11#1 from equivalence set
debug: Found equivalence set: or_result%12#1, or_result%12#2
debug: selected or_result%12#1 from equivalence set
debug: Found equivalence set: or_result%13#1, or_result%13#2
debug: selected or_result%13#1 from equivalence set
debug: Found equivalence set: or_result%14#1, or_result%14#2
debug: selected or_result%14#1 from equivalence set
debug: Found equivalence set: tmp%44#0, tmp%78#0, tmp%118#0, tmp%145#0
debug: selected tmp%44#0 from equivalence set
debug: Found equivalence set: or_result%15#1, or_result%15#2
debug: selected or_result%15#1 from equivalence set
debug: Found equivalence set: or_result%16#1, or_result%16#2
debug: selected or_result%16#1 from equivalence set
debug: Found equivalence set: or_result%17#0, or_result%17#2
debug: selected or_result%17#0 from equivalence set
debug: Found equivalence set: or_result%18#0, or_result%18#2
debug: selected or_result%18#0 from equivalence set
debug: Found equivalence set: or_result%19#0, or_result%19#2
debug: selected or_result%19#0 from equivalence set
debug: Found equivalence set: or_result%20#0, or_result%20#2
debug: selected or_result%20#0 from equivalence set
debug: Found equivalence set: or_result%21#0, or_result%21#2
debug: selected or_result%21#0 from equivalence set
debug: Found equivalence set: or_result%22#0, or_result%22#2
debug: selected or_result%22#0 from equivalence set
debug: Found equivalence set: or_result%23#1, or_result%23#2
debug: selected or_result%23#1 from equivalence set
debug: Found equivalence set: or_result%24#1, or_result%24#2
debug: selected or_result%24#1 from equivalence set
debug: Copy propagation made 25 modifications
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: removing unused subroutine test_cases.contains.contract.MyContract.is_in_tuple_2
debug: removing unused subroutine test_cases.contains.contract.MyContract.test_string_types
debug: removing unused subroutine test_cases.contains.contract.MyContract.test_numeric_types
debug: Unused subroutines removed
debug: Begin optimization pass 2/100
debug: marking trivial method test_cases.contains.contract.one_u64 as inlineable
debug: marking trivial method test_cases.contains.contract.one_arc4u64 as inlineable
debug: marking trivial method test_cases.contains.contract.two_u64 as inlineable
debug: marking trivial method test_cases.contains.contract.two_u8 as inlineable
debug: marking trivial method test_cases.contains.contract.three_u512 as inlineable
debug: marking trivial method test_cases.contains.contract.four_biguint as inlineable
debug: marking trivial method test_cases.contains.contract.foo_string as inlineable
debug: marking trivial method test_cases.contains.contract.bar_string as inlineable
debug: marking trivial method test_cases.contains.contract.baz_string as inlineable
debug: marking single-use function test_cases.contains.contract.MyContract.is_in_tuple_3 for inlining
debug: Optimizing subroutine test_cases.contains.contract.MyContract.approval_program
debug: Optimizer: Perform Subroutine Inlining
contains/contract.py:125:34 debug: inlining call to test_cases.contains.contract.bar_string in test_cases.contains.contract.MyContract.approval_program
contains/contract.py:125:48 debug: inlining call to test_cases.contains.contract.two_u8 in test_cases.contains.contract.MyContract.approval_program
contains/contract.py:125:16 debug: inlining call to test_cases.contains.contract.one_u64 in test_cases.contains.contract.MyContract.approval_program
contains/contract.py:126:34 debug: constant function call to test_cases.contains.contract.foo_arc4 in test_cases.contains.contract.MyContract.approval_program
contains/contract.py:127:16 debug: inlining call to test_cases.contains.contract.two_u8 in test_cases.contains.contract.MyContract.approval_program
contains/contract.py:127:33 debug: constant function call to test_cases.contains.contract.bar_arc4 in test_cases.contains.contract.MyContract.approval_program
contains/contract.py:128:16 debug: inlining call to test_cases.contains.contract.two_u8 in test_cases.contains.contract.MyContract.approval_program
contains/contract.py:128:33 debug: inlining call to test_cases.contains.contract.foo_string in test_cases.contains.contract.MyContract.approval_program
contains/contract.py:129:16 debug: inlining call to test_cases.contains.contract.three_u512 in test_cases.contains.contract.MyContract.approval_program
contains/contract.py:129:48 debug: inlining call to test_cases.contains.contract.foo_string in test_cases.contains.contract.MyContract.approval_program
contains/contract.py:120:16 debug: inlining call to test_cases.contains.contract.one_u64 in test_cases.contains.contract.MyContract.approval_program
contains/contract.py:121:13 debug: inlining call to test_cases.contains.contract.foo_string in test_cases.contains.contract.MyContract.approval_program
contains/contract.py:123:13 debug: inlining call to test_cases.contains.contract.two_u8 in test_cases.contains.contract.MyContract.approval_program
contains/contract.py:118:16 debug: inlining call to test_cases.contains.contract.three_u512 in test_cases.contains.contract.MyContract.approval_program
contains/contract.py:118:55 debug: inlining call to test_cases.contains.contract.foo_string in test_cases.contains.contract.MyContract.approval_program
contains/contract.py:117:16 debug: inlining call to test_cases.contains.contract.two_u8 in test_cases.contains.contract.MyContract.approval_program
contains/contract.py:117:29 debug: inlining call to test_cases.contains.contract.foo_string in test_cases.contains.contract.MyContract.approval_program
contains/contract.py:116:16 debug: inlining call to test_cases.contains.contract.two_u8 in test_cases.contains.contract.MyContract.approval_program
contains/contract.py:116:29 debug: constant function call to test_cases.contains.contract.bar_arc4 in test_cases.contains.contract.MyContract.approval_program
contains/contract.py:116:52 debug: inlining call to test_cases.contains.contract.two_u8 in test_cases.contains.contract.MyContract.approval_program
contains/contract.py:115:30 debug: constant function call to test_cases.contains.contract.foo_arc4 in test_cases.contains.contract.MyContract.approval_program
contains/contract.py:115:53 debug: inlining call to test_cases.contains.contract.two_u8 in test_cases.contains.contract.MyContract.approval_program
contains/contract.py:114:30 debug: inlining call to test_cases.contains.contract.one_arc4u64 in test_cases.contains.contract.MyContract.approval_program
contains/contract.py:114:45 debug: inlining call to test_cases.contains.contract.bar_string in test_cases.contains.contract.MyContract.approval_program
contains/contract.py:114:59 debug: inlining call to test_cases.contains.contract.two_u8 in test_cases.contains.contract.MyContract.approval_program
contains/contract.py:114:16 debug: inlining call to test_cases.contains.contract.one_u64 in test_cases.contains.contract.MyContract.approval_program
contains/contract.py:108:16 debug: inlining call to test_cases.contains.contract.one_u64 in test_cases.contains.contract.MyContract.approval_program
contains/contract.py:109:13 debug: inlining call to test_cases.contains.contract.foo_string in test_cases.contains.contract.MyContract.approval_program
contains/contract.py:110:13 debug: inlining call to test_cases.contains.contract.one_u64 in test_cases.contains.contract.MyContract.approval_program
contains/contract.py:112:13 debug: inlining call to test_cases.contains.contract.two_u8 in test_cases.contains.contract.MyContract.approval_program
contains/contract.py:106:16 debug: inlining call to test_cases.contains.contract.four_biguint in test_cases.contains.contract.MyContract.approval_program
contains/contract.py:105:16 debug: inlining call to test_cases.contains.contract.three_u512 in test_cases.contains.contract.MyContract.approval_program
contains/contract.py:104:16 debug: inlining call to test_cases.contains.contract.two_u8 in test_cases.contains.contract.MyContract.approval_program
contains/contract.py:104:33 debug: inlining call to test_cases.contains.contract.one_arc4u64 in test_cases.contains.contract.MyContract.approval_program
contains/contract.py:103:16 debug: inlining call to test_cases.contains.contract.two_u8 in test_cases.contains.contract.MyContract.approval_program
contains/contract.py:103:33 debug: inlining call to test_cases.contains.contract.one_arc4u64 in test_cases.contains.contract.MyContract.approval_program
contains/contract.py:102:34 debug: inlining call to test_cases.contains.contract.one_arc4u64 in test_cases.contains.contract.MyContract.approval_program
contains/contract.py:101:16 debug: inlining call to test_cases.contains.contract.one_u64 in test_cases.contains.contract.MyContract.approval_program
contains/contract.py:101:45 debug: inlining call to test_cases.contains.contract.two_u8 in test_cases.contains.contract.MyContract.approval_program
contains/contract.py:100:16 debug: inlining call to test_cases.contains.contract.one_u64 in test_cases.contains.contract.MyContract.approval_program
contains/contract.py:100:61 debug: inlining call to test_cases.contains.contract.two_u8 in test_cases.contains.contract.MyContract.approval_program
contains/contract.py:99:16 debug: inlining call to test_cases.contains.contract.one_u64 in test_cases.contains.contract.MyContract.approval_program
contains/contract.py:99:45 debug: inlining call to test_cases.contains.contract.two_u8 in test_cases.contains.contract.MyContract.approval_program
contains/contract.py:97:16 debug: inlining call to test_cases.contains.contract.four_biguint in test_cases.contains.contract.MyContract.approval_program
contains/contract.py:96:16 debug: inlining call to test_cases.contains.contract.three_u512 in test_cases.contains.contract.MyContract.approval_program
contains/contract.py:95:16 debug: inlining call to test_cases.contains.contract.two_u8 in test_cases.contains.contract.MyContract.approval_program
contains/contract.py:95:29 debug: inlining call to test_cases.contains.contract.one_arc4u64 in test_cases.contains.contract.MyContract.approval_program
contains/contract.py:94:16 debug: inlining call to test_cases.contains.contract.two_u8 in test_cases.contains.contract.MyContract.approval_program
contains/contract.py:94:29 debug: inlining call to test_cases.contains.contract.one_arc4u64 in test_cases.contains.contract.MyContract.approval_program
contains/contract.py:94:55 debug: inlining call to test_cases.contains.contract.two_u8 in test_cases.contains.contract.MyContract.approval_program
contains/contract.py:93:30 debug: inlining call to test_cases.contains.contract.one_arc4u64 in test_cases.contains.contract.MyContract.approval_program
contains/contract.py:93:56 debug: inlining call to test_cases.contains.contract.two_u8 in test_cases.contains.contract.MyContract.approval_program
contains/contract.py:92:30 debug: inlining call to test_cases.contains.contract.one_arc4u64 in test_cases.contains.contract.MyContract.approval_program
contains/contract.py:92:56 debug: inlining call to test_cases.contains.contract.two_u8 in test_cases.contains.contract.MyContract.approval_program
contains/contract.py:92:16 debug: inlining call to test_cases.contains.contract.one_u64 in test_cases.contains.contract.MyContract.approval_program
contains/contract.py:91:16 debug: inlining call to test_cases.contains.contract.one_u64 in test_cases.contains.contract.MyContract.approval_program
contains/contract.py:91:30 debug: inlining call to test_cases.contains.contract.one_u64 in test_cases.contains.contract.MyContract.approval_program
contains/contract.py:91:52 debug: inlining call to test_cases.contains.contract.two_u8 in test_cases.contains.contract.MyContract.approval_program
contains/contract.py:89:16 debug: inlining call to test_cases.contains.contract.one_u64 in test_cases.contains.contract.MyContract.approval_program
contains/contract.py:89:45 debug: inlining call to test_cases.contains.contract.two_u64 in test_cases.contains.contract.MyContract.approval_program
contains/contract.py:81:13 debug: inlining call to test_cases.contains.contract.foo_string in test_cases.contains.contract.MyContract.approval_program
contains/contract.py:82:13 debug: constant function call to test_cases.contains.contract.foo_arc4 in test_cases.contains.contract.MyContract.approval_program
contains/contract.py:88:16 debug: inlining call to test_cases.contains.contract.one_u64 in test_cases.contains.contract.MyContract.approval_program
contains/contract.py:88:30 debug: inlining call to test_cases.contains.contract.one_u64 in test_cases.contains.contract.MyContract.approval_program
contains/contract.py:88:41 debug: inlining call to test_cases.contains.contract.two_u64 in test_cases.contains.contract.MyContract.approval_program
contains/contract.py:79:16 debug: constant function call to test_cases.contains.contract.foo_arc4 in test_cases.contains.contract.MyContract.approval_program
contains/contract.py:79:35 debug: constant function call to test_cases.contains.contract.bar_arc4 in test_cases.contains.contract.MyContract.approval_program
contains/contract.py:79:47 debug: inlining call to test_cases.contains.contract.baz_string in test_cases.contains.contract.MyContract.approval_program
contains/contract.py:79:61 debug: inlining call to test_cases.contains.contract.one_u64 in test_cases.contains.contract.MyContract.approval_program
contains/contract.py:75:13 debug: constant function call to test_cases.contains.contract.bar_arc4 in test_cases.contains.contract.MyContract.approval_program
contains/contract.py:76:13 debug: inlining call to test_cases.contains.contract.baz_string in test_cases.contains.contract.MyContract.approval_program
contains/contract.py:77:13 debug: inlining call to test_cases.contains.contract.one_u64 in test_cases.contains.contract.MyContract.approval_program
contains/contract.py:74:16 debug: inlining call to test_cases.contains.contract.foo_string in test_cases.contains.contract.MyContract.approval_program
contains/contract.py:68:16 debug: constant function call to test_cases.contains.contract.foo_arc4 in test_cases.contains.contract.MyContract.approval_program
contains/contract.py:69:13 debug: constant function call to test_cases.contains.contract.bar_arc4 in test_cases.contains.contract.MyContract.approval_program
contains/contract.py:70:13 debug: inlining call to test_cases.contains.contract.baz_string in test_cases.contains.contract.MyContract.approval_program
contains/contract.py:71:13 debug: inlining call to test_cases.contains.contract.foo_string in test_cases.contains.contract.MyContract.approval_program
contains/contract.py:72:13 debug: inlining call to test_cases.contains.contract.one_u64 in test_cases.contains.contract.MyContract.approval_program
contains/contract.py:63:13 debug: constant function call to test_cases.contains.contract.bar_arc4 in test_cases.contains.contract.MyContract.approval_program
contains/contract.py:64:13 debug: inlining call to test_cases.contains.contract.baz_string in test_cases.contains.contract.MyContract.approval_program
contains/contract.py:65:13 debug: inlining call to test_cases.contains.contract.foo_string in test_cases.contains.contract.MyContract.approval_program
contains/contract.py:66:13 debug: inlining call to test_cases.contains.contract.one_u64 in test_cases.contains.contract.MyContract.approval_program
contains/contract.py:62:16 debug: inlining call to test_cases.contains.contract.foo_string in test_cases.contains.contract.MyContract.approval_program
contains/contract.py:61:16 debug: constant function call to test_cases.contains.contract.foo_arc4 in test_cases.contains.contract.MyContract.approval_program
contains/contract.py:61:35 debug: constant function call to test_cases.contains.contract.bar_arc4 in test_cases.contains.contract.MyContract.approval_program
contains/contract.py:61:47 debug: inlining call to test_cases.contains.contract.baz_string in test_cases.contains.contract.MyContract.approval_program
contains/contract.py:60:37 debug: constant function call to test_cases.contains.contract.bar_arc4 in test_cases.contains.contract.MyContract.approval_program
contains/contract.py:60:49 debug: inlining call to test_cases.contains.contract.baz_string in test_cases.contains.contract.MyContract.approval_program
contains/contract.py:60:16 debug: inlining call to test_cases.contains.contract.foo_string in test_cases.contains.contract.MyContract.approval_program
contains/contract.py:59:16 debug: constant function call to test_cases.contains.contract.foo_arc4 in test_cases.contains.contract.MyContract.approval_program
contains/contract.py:59:31 debug: inlining call to test_cases.contains.contract.foo_string in test_cases.contains.contract.MyContract.approval_program
contains/contract.py:59:45 debug: inlining call to test_cases.contains.contract.baz_string in test_cases.contains.contract.MyContract.approval_program
contains/contract.py:59:59 debug: inlining call to test_cases.contains.contract.bar_string in test_cases.contains.contract.MyContract.approval_program
contains/contract.py:58:33 debug: constant function call to test_cases.contains.contract.foo_arc4 in test_cases.contains.contract.MyContract.approval_program
contains/contract.py:58:45 debug: inlining call to test_cases.contains.contract.baz_string in test_cases.contains.contract.MyContract.approval_program
contains/contract.py:58:59 debug: inlining call to test_cases.contains.contract.bar_string in test_cases.contains.contract.MyContract.approval_program
contains/contract.py:58:16 debug: inlining call to test_cases.contains.contract.foo_string in test_cases.contains.contract.MyContract.approval_program
contains/contract.py:57:16 debug: inlining call to test_cases.contains.contract.foo_string in test_cases.contains.contract.MyContract.approval_program
contains/contract.py:57:37 debug: inlining call to test_cases.contains.contract.bar_string in test_cases.contains.contract.MyContract.approval_program
contains/contract.py:57:51 debug: inlining call to test_cases.contains.contract.baz_string in test_cases.contains.contract.MyContract.approval_program
contains/contract.py:27:23 debug: inlining call to test_cases.contains.contract.MyContract.is_in_tuple_3 in test_cases.contains.contract.MyContract.approval_program
contains/contract.py:56:16 debug: inlining call to test_cases.contains.contract.foo_string in test_cases.contains.contract.MyContract.approval_program
contains/contract.py:56:33 debug: inlining call to test_cases.contains.contract.foo_string in test_cases.contains.contract.MyContract.approval_program
contains/contract.py:56:47 debug: inlining call to test_cases.contains.contract.baz_string in test_cases.contains.contract.MyContract.approval_program
contains/contract.py:10:20 debug: constant function call to test_cases.contains.contract.MyContract.is_in_tuple_1 in test_cases.contains.contract.MyContract.approval_program
contains/contract.py:11:21 debug: constant function call to test_cases.contains.contract.MyContract.is_in_tuple_1 in test_cases.contains.contract.MyContract.approval_program
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: or_result%0#20, one_true#0
debug: selected one_true#0 from equivalence set
debug: Found equivalence set: or_result%0#23, one_false#0
debug: selected one_false#0 from equivalence set
debug: Found equivalence set: or_result%0#17, three_false#0
debug: selected three_false#0 from equivalence set
debug: Found equivalence set: tmp%0#21, tmp%9#1
debug: selected tmp%0#21 from equivalence set
debug: Found equivalence set: tmp%0#20, awst_tmp%3#0
debug: selected tmp%0#20 from equivalence set
debug: Found equivalence set: tmp%0#19, tmp%25#0
debug: selected tmp%0#19 from equivalence set
debug: Found equivalence set: tmp%0#17, awst_tmp%5#0
debug: selected tmp%0#17 from equivalence set
debug: Found equivalence set: tmp%0#18, tmp%31#0
debug: selected tmp%0#18 from equivalence set
debug: Found equivalence set: tmp%0#16, tmp%37#0
debug: selected tmp%0#16 from equivalence set
debug: Found equivalence set: tmp%0#14, awst_tmp%7#0
debug: selected tmp%0#14 from equivalence set
debug: Found equivalence set: tmp%0#15, tmp%45#0
debug: selected tmp%0#15 from equivalence set
debug: Found equivalence set: tmp%0#13, tmp%54#0
debug: selected tmp%0#13 from equivalence set
debug: Found equivalence set: tmp%0#11, awst_tmp%9#0
debug: selected tmp%0#11 from equivalence set
debug: Found equivalence set: tmp%0#12, tmp%61#0
debug: selected tmp%0#12 from equivalence set
debug: Found equivalence set: tmp%0#10, tmp%69#0
debug: selected tmp%0#10 from equivalence set
debug: Found equivalence set: tmp%0#9, tmp%102#0
debug: selected tmp%0#9 from equivalence set
debug: Found equivalence set: tmp%0#8, tmp%107#0
debug: selected tmp%0#8 from equivalence set
debug: Found equivalence set: tmp%0#6, tmp%133#0
debug: selected tmp%0#6 from equivalence set
debug: Found equivalence set: tmp%0#7, tmp%136#0
debug: selected tmp%0#7 from equivalence set
debug: Copy propagation made 17 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable x#1
debug: Removing unused variable y.0#1
debug: Removing unused variable y.1#1
debug: Removing unused variable y.2#0
debug: Removing unused variable x#2
debug: Removing unused variable y.0#2
debug: Removing unused variable y.1#2
debug: Removing unused variable y.2#1
debug: Removing unused variable tmp%0#1
debug: Removing unused variable two_true#0
debug: Removing unused variable tmp%0#2
debug: Removing unused variable tmp%1#2
debug: Removing unused variable two_false#0
debug: Removing unused variable tmp%0#3
debug: Removing unused variable three_true#0
debug: Removing unused variable tmp%7#0
debug: Removing unused variable x#0
debug: Removing unused variable y.0#0
debug: Removing unused variable y.1#0
debug: Removing unused variable awst_tmp%0#0
debug: Removing unused variable tmp%0#4
debug: Removing unused variable tmp%1#4
debug: Removing unused variable awst_tmp%1#0
debug: Removing unused variable tmp%4#1
debug: Removing unused variable tmp%5#1
debug: Removing unused variable tmp%10#0
debug: Removing unused variable tmp%11#0
debug: Removing unused variable awst_tmp%2#0
debug: Removing unused variable tmp%17#0
debug: Removing unused variable tmp%18#0
debug: Removing unused variable tmp%19#0
debug: Removing unused variable tmp%26#0
debug: Removing unused variable awst_tmp%4#0
debug: Removing unused variable tmp%32#0
debug: Removing unused variable tmp%38#0
debug: Removing unused variable tmp%39#0
debug: Removing unused variable tmp%40#0
debug: Removing unused variable awst_tmp%6#0
debug: Removing unused variable tmp%46#0
debug: Removing unused variable tmp%47#0
debug: Removing unused variable tmp%48#0
debug: Removing unused variable tmp%55#0
debug: Removing unused variable tmp%56#0
debug: Removing unused variable awst_tmp%8#0
debug: Removing unused variable tmp%62#0
debug: Removing unused variable tmp%63#0
debug: Removing unused variable tmp%68#0
debug: Removing unused variable tmp%0#10
debug: Removing unused variable tmp%70#0
debug: Removing unused variable tmp%71#0
debug: Removing unused variable awst_tmp%0#1
debug: Removing unused variable tmp%0#5
debug: Removing unused variable tmp%1#5
debug: Removing unused variable awst_tmp%1#1
debug: Removing unused variable tmp%4#2
debug: Removing unused variable awst_tmp%2#1
debug: Removing unused variable tmp%8#2
debug: Removing unused variable tmp%9#2
debug: Removing unused variable tmp%14#1
debug: Removing unused variable tmp%15#1
debug: Removing unused variable awst_tmp%3#1
debug: Removing unused variable tmp%21#1
debug: Removing unused variable tmp%22#1
debug: Removing unused variable tmp%25#1
debug: Removing unused variable awst_tmp%4#1
debug: Removing unused variable tmp%28#1
debug: Removing unused variable tmp%29#1
debug: Removing unused variable awst_tmp%5#1
debug: Removing unused variable tmp%34#1
debug: Removing unused variable awst_tmp%6#1
debug: Removing unused variable awst_tmp%7#1
debug: Removing unused variable awst_tmp%8#1
debug: Removing unused variable tmp%48#1
debug: Removing unused variable awst_tmp%9#1
debug: Removing unused variable tmp%53#1
debug: Removing unused variable awst_tmp%10#0
debug: Removing unused variable tmp%58#1
debug: Removing unused variable tmp%63#1
debug: Removing unused variable tmp%66#1
debug: Removing unused variable awst_tmp%11#0
debug: Removing unused variable tmp%68#1
debug: Removing unused variable awst_tmp%12#0
debug: Removing unused variable tmp%73#0
debug: Removing unused variable awst_tmp%13#0
debug: Removing unused variable awst_tmp%14#0
debug: Removing unused variable awst_tmp%15#0
debug: Removing unused variable tmp%88#0
debug: Removing unused variable tmp%89#0
debug: Removing unused variable tmp%90#0
debug: Removing unused variable tmp%95#0
debug: Removing unused variable tmp%96#0
debug: Removing unused variable tmp%97#0
debug: Removing unused variable awst_tmp%16#0
debug: Removing unused variable tmp%0#9
debug: Removing unused variable tmp%103#0
debug: Removing unused variable tmp%104#0
debug: Removing unused variable awst_tmp%17#0
debug: Removing unused variable tmp%0#8
debug: Removing unused variable tmp%108#0
debug: Removing unused variable awst_tmp%18#0
debug: Removing unused variable tmp%112#0
debug: Removing unused variable awst_tmp%19#0
debug: Removing unused variable tmp%117#0
debug: Removing unused variable awst_tmp%20#0
debug: Removing unused variable tmp%122#0
debug: Removing unused variable tmp%123#0
debug: Removing unused variable tmp%128#0
debug: Removing unused variable tmp%129#0
debug: Removing unused variable awst_tmp%21#0
debug: Removing unused variable tmp%0#6
debug: Removing unused variable tmp%134#0
debug: Removing unused variable tmp%135#0
debug: Removing unused variable awst_tmp%22#0
debug: Removing unused variable tmp%0#7
debug: Removing unused variable awst_tmp%23#0
debug: Removing unused variable tmp%140#0
debug: Removing unused variable awst_tmp%24#0
debug: Removing unused variable tmp%144#0
debug: Removing unused variable tmp%148#0
debug: Removing unused variable tmp%149#0
debug: Removing unused variable tmp%150#0
debug: Removing unused variable tmp%151#0
debug: Removing unused variable or_result%24#1
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (== 10u 10u) to 1u
debug: Simplified (== 10u 15u) to 0u
debug: Simplified (== 5u 10u) to 0u
debug: Simplified (== 5u 15u) to 0u
debug: Simplified (! 0u) to 1u
debug: Simplified (b== 64646846846846b 32323423423423b) to 0u
debug: Simplified (b== 64646846846846b 8439439483934b) to 0u
debug: Simplified (== "foo" "foo") to 1u
debug: Simplified (== "foo" "baz") to 0u
debug: Simplified (== "foo" "bar") to 0u
debug: Simplified (== "foo" "baz") to 0u
debug: Simplified (== "foo" "baz") to 0u
debug: Simplified (== "foo" "bar") to 0u
debug: Simplified (== "foo" "baz") to 0u
debug: Simplified (== "foo" "baz") to 0u
debug: Simplified (== "foo" "foo") to 1u
debug: Simplified (== "foo" "baz") to 0u
debug: Simplified (== 1u 1u) to 1u
debug: Simplified (== 1u 2u) to 0u
debug: Simplified (== 1u 3u) to 0u
debug: Simplified (== 1u 2u) to 0u
debug: Simplified (== 1u 1u) to 1u
debug: Simplified (== 1u 3u) to 0u
debug: Simplified (b== 0x02 tmp%12#1) to 0u
debug: Simplified (b== 0x0000000000000001 tmp%16#1) to 1u
debug: Simplified (== 1u 4u) to 0u
debug: Simplified (b== 0x02 tmp%16#1) to 0u
debug: Simplified (b== 0x0000000000000001 tmp%23#1) to 0u
debug: Simplified (b== 0x02 tmp%23#1) to 1u
debug: Simplified (b== 0x02 0x0000000000000001) to 0u
debug: Simplified (b== 0x02 tmp%31#1) to 0u
debug: Simplified (b== 0x02 0x02) to 1u
debug: Simplified (b== 0x02 0x0000000000000001) to 0u
debug: Simplified (b== 0x02 tmp%23#1) to 1u
debug: Simplified (b== 0x02 tmp%38#1) to 0u
debug: Simplified (b== 0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000003 tmp%40#1) to 1u
debug: Simplified (b== 0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000003 tmp%42#1) to 0u
debug: Simplified (b== 4b tmp%44#1) to 0u
debug: Simplified (b== 4b tmp%46#1) to 1u
debug: Simplified (== 1u 5u) to 0u
debug: Simplified (b== 0x02 tmp%50#1) to 0u
debug: Simplified (== 1u 3u) to 0u
debug: Simplified (b== 0x02 tmp%55#1) to 0u
debug: Simplified (== 1u 3u) to 0u
debug: Simplified (b== 0x02 tmp%60#1) to 0u
debug: Simplified (b== 0x0000000000000001 tmp%23#1) to 0u
debug: Simplified (b== 0x02 0x0000000000000001) to 0u
debug: Simplified (b== 0x02 tmp%40#1) to 0u
debug: Simplified (b== 0x02 0x0000000000000001) to 0u
debug: Simplified (b== 0x02 tmp%40#1) to 0u
debug: Simplified (b== 0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000003 tmp%44#1) to 0u
debug: Simplified (b== 0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000003 tmp%80#0) to 0u
debug: Simplified (b== 4b tmp%23#1) to 0u
debug: Simplified (b== 4b tmp%85#0) to 0u
debug: Simplified (== 1u 1u) to 1u
debug: Simplified (== 1u 3u) to 0u
debug: Simplified (b== 0x02 tmp%93#0) to 0u
debug: Simplified (b== 0x0000000000000001 tmp%98#0) to 1u
debug: Simplified (b== 0x02 tmp%98#0) to 0u
debug: Simplified (b== 0x02 tmp%23#1) to 1u
debug: Simplified (b== 0x02 tmp%40#1) to 0u
debug: Simplified (b== 0x02 0x02) to 1u
debug: Simplified (b== 0x02 tmp%23#1) to 1u
debug: Simplified (b== 0x02 tmp%40#1) to 0u
debug: Simplified (b== 0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000003 tmp%44#1) to 0u
debug: Simplified (b== 0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000003 tmp%40#1) to 1u
debug: Simplified (== 1u 3u) to 0u
debug: Simplified (b== 0x02 tmp%125#0) to 0u
debug: Simplified (b== 0x02 tmp%130#0) to 0u
debug: Simplified (! 0u) to 1u
debug: Simplified (b== 0x02 tmp%40#1) to 0u
debug: Simplified (! 0u) to 1u
debug: Simplified (b== 0x02 tmp%40#1) to 0u
debug: Simplified (! 0u) to 1u
debug: Simplified (b== 0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000003 tmp%44#1) to 0u
debug: Simplified (! 0u) to 1u
debug: Simplified (! 0u) to 1u
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: simplifying conditional branch with a constant into a goto
debug: simplified terminator of block@384 from goto 1u ? block@386 : block@385 to goto block@386
debug: simplifying conditional branch with a constant into a goto
debug: simplified terminator of block@385 from goto 0u ? block@386 : block@387 to goto block@387
debug: simplifying conditional branch with a constant into a goto
debug: simplified terminator of block@390 from goto 0u ? block@392 : block@391 to goto block@391
debug: simplifying conditional branch with a constant into a goto
debug: simplified terminator of block@391 from goto 0u ? block@392 : block@393 to goto block@393
debug: simplifying conditional branch with a constant into a goto
debug: simplified terminator of block@372 from goto 0u ? block@374 : block@373 to goto block@373
debug: simplifying conditional branch with a constant into a goto
debug: simplified terminator of block@373 from goto 0u ? block@374 : block@375 to goto block@375
debug: simplifying conditional branch with a constant into a goto
debug: simplified terminator of block@383 from goto 1u ? block@21 : block@20 to goto block@21
debug: simplifying conditional branch with a constant into a goto
debug: simplified terminator of block@20 from goto 0u ? block@21 : block@22 to goto block@22
debug: simplifying conditional branch with a constant into a goto
debug: simplified terminator of block@371 from goto 0u ? block@25 : block@24 to goto block@24
debug: simplifying conditional branch with a constant into a goto
debug: simplified terminator of block@24 from goto 0u ? block@25 : block@26 to goto block@26
debug: simplifying conditional branch with a constant into a goto
debug: simplified terminator of block@28 from goto 0u ? block@30 : block@29 to goto block@29
debug: simplifying conditional branch with a constant into a goto
debug: simplified terminator of block@29 from goto 0u ? block@30 : block@31 to goto block@31
debug: simplifying conditional branch with a constant into a goto
debug: simplified terminator of block@38 from goto 0u ? block@39 : block@40 to goto block@40
debug: simplifying conditional branch with a constant into a goto
debug: simplified terminator of block@46 from goto 0u ? block@48 : block@47 to goto block@47
debug: simplifying conditional branch with a constant into a goto
debug: simplified terminator of block@47 from goto 1u ? block@48 : block@49 to goto block@48
debug: simplifying conditional branch with a constant into a goto
debug: simplified terminator of block@56 from goto 0u ? block@57 : block@58 to goto block@58
debug: simplifying conditional branch with a constant into a goto
debug: simplified terminator of block@301 from goto 1u ? block@67 : block@66 to goto block@67
debug: simplifying conditional branch with a constant into a goto
debug: simplified terminator of block@66 from goto 0u ? block@67 : block@68 to goto block@68
debug: simplifying conditional branch with a constant into a goto
debug: simplified terminator of block@291 from goto 0u ? block@71 : block@70 to goto block@70
debug: simplifying conditional branch with a constant into a goto
debug: simplified terminator of block@70 from goto 0u ? block@71 : block@72 to goto block@72
debug: simplifying conditional branch with a constant into a goto
debug: simplified terminator of block@287 from goto 1u ? block@76 : block@74 to goto block@76
debug: simplifying conditional branch with a constant into a goto
debug: simplified terminator of block@74 from goto 0u ? block@76 : block@75 to goto block@75
debug: simplifying conditional branch with a constant into a goto
debug: simplified terminator of block@75 from goto 0u ? block@76 : block@77 to goto block@77
debug: simplifying conditional branch with a constant into a goto
debug: simplified terminator of block@281 from goto 1u ? block@81 : block@79 to goto block@81
debug: simplifying conditional branch with a constant into a goto
debug: simplified terminator of block@79 from goto 0u ? block@81 : block@80 to goto block@80
debug: simplifying conditional branch with a constant into a goto
debug: simplified terminator of block@80 from goto 0u ? block@81 : block@82 to goto block@82
debug: simplifying conditional branch with a constant into a goto
debug: simplified terminator of block@275 from goto 0u ? block@86 : block@84 to goto block@84
debug: simplifying conditional branch with a constant into a goto
debug: simplified terminator of block@84 from goto 1u ? block@86 : block@87 to goto block@86
debug: simplifying conditional branch with a constant into a goto
debug: simplified terminator of block@271 from goto 0u ? block@91 : block@89 to goto block@89
debug: simplifying conditional branch with a constant into a goto
debug: simplified terminator of block@89 from goto 0u ? block@91 : block@90 to goto block@90
debug: simplifying conditional branch with a constant into a goto
debug: simplified terminator of block@90 from goto 1u ? block@91 : block@92 to goto block@91
debug: simplifying conditional branch with a constant into a goto
debug: simplified terminator of block@265 from goto 0u ? block@96 : block@94 to goto block@94
debug: simplifying conditional branch with a constant into a goto
debug: simplified terminator of block@94 from goto 1u ? block@96 : block@95 to goto block@96
debug: simplifying conditional branch with a constant into a goto
debug: simplified terminator of block@95 from goto 0u ? block@96 : block@97 to goto block@97
debug: simplifying conditional branch with a constant into a goto
debug: simplified terminator of block@261 from goto 1u ? block@100 : block@99 to goto block@100
debug: simplifying conditional branch with a constant into a goto
debug: simplified terminator of block@99 from goto 0u ? block@100 : block@101 to goto block@101
debug: simplifying conditional branch with a constant into a goto
debug: simplified terminator of block@259 from goto 0u ? block@104 : block@103 to goto block@103
debug: simplifying conditional branch with a constant into a goto
debug: simplified terminator of block@103 from goto 1u ? block@104 : block@105 to goto block@104
debug: simplifying conditional branch with a constant into a goto
debug: simplified terminator of block@257 from goto 0u ? block@108 : block@107 to goto block@107
debug: simplifying conditional branch with a constant into a goto
debug: simplified terminator of block@107 from goto 0u ? block@108 : block@109 to goto block@109
debug: simplifying conditional branch with a constant into a goto
debug: simplified terminator of block@253 from goto 0u ? block@112 : block@111 to goto block@111
debug: simplifying conditional branch with a constant into a goto
debug: simplified terminator of block@111 from goto 0u ? block@112 : block@113 to goto block@113
debug: simplifying conditional branch with a constant into a goto
debug: simplified terminator of block@249 from goto 0u ? block@116 : block@115 to goto block@115
debug: simplifying conditional branch with a constant into a goto
debug: simplified terminator of block@115 from goto 0u ? block@116 : block@117 to goto block@117
debug: simplifying conditional branch with a constant into a goto
debug: simplified terminator of block@245 from goto 0u ? block@120 : block@119 to goto block@119
debug: simplifying conditional branch with a constant into a goto
debug: simplified terminator of block@243 from goto 0u ? block@124 : block@123 to goto block@123
debug: simplifying conditional branch with a constant into a goto
debug: simplified terminator of block@123 from goto 0u ? block@124 : block@125 to goto block@125
debug: simplifying conditional branch with a constant into a goto
debug: simplified terminator of block@239 from goto 0u ? block@128 : block@127 to goto block@127
debug: simplifying conditional branch with a constant into a goto
debug: simplified terminator of block@127 from goto 0u ? block@128 : block@129 to goto block@129
debug: simplifying conditional branch with a constant into a goto
debug: simplified terminator of block@235 from goto 0u ? block@132 : block@131 to goto block@131
debug: simplifying conditional branch with a constant into a goto
debug: simplified terminator of block@131 from goto 0u ? block@132 : block@133 to goto block@133
debug: simplifying conditional branch with a constant into a goto
debug: simplified terminator of block@233 from goto 0u ? block@136 : block@135 to goto block@135
debug: simplifying conditional branch with a constant into a goto
debug: simplified terminator of block@135 from goto 0u ? block@136 : block@137 to goto block@137
debug: simplifying conditional branch with a constant into a goto
debug: simplified terminator of block@231 from goto 1u ? block@141 : block@139 to goto block@141
debug: simplifying conditional branch with a constant into a goto
debug: simplified terminator of block@139 from goto 0u ? block@141 : block@140 to goto block@140
debug: simplifying conditional branch with a constant into a goto
debug: simplified terminator of block@140 from goto 0u ? block@141 : block@142 to goto block@142
debug: simplifying conditional branch with a constant into a goto
debug: simplified terminator of block@223 from goto 1u ? block@145 : block@144 to goto block@145
debug: simplifying conditional branch with a constant into a goto
debug: simplified terminator of block@144 from goto 0u ? block@145 : block@146 to goto block@146
debug: simplifying conditional branch with a constant into a goto
debug: simplified terminator of block@215 from goto 1u ? block@149 : block@150 to goto block@149
debug: simplifying conditional branch with a constant into a goto
debug: simplified terminator of block@211 from goto 0u ? block@153 : block@152 to goto block@152
debug: simplifying conditional branch with a constant into a goto
debug: simplified terminator of block@152 from goto 1u ? block@153 : block@154 to goto block@153
debug: simplifying conditional branch with a constant into a goto
debug: simplified terminator of block@205 from goto 1u ? block@157 : block@156 to goto block@157
debug: simplifying conditional branch with a constant into a goto
debug: simplified terminator of block@156 from goto 0u ? block@157 : block@158 to goto block@158
debug: simplifying conditional branch with a constant into a goto
debug: simplified terminator of block@201 from goto 0u ? block@161 : block@160 to goto block@160
debug: simplifying conditional branch with a constant into a goto
debug: simplified terminator of block@160 from goto 1u ? block@161 : block@162 to goto block@161
debug: simplifying conditional branch with a constant into a goto
debug: simplified terminator of block@197 from goto 0u ? block@165 : block@164 to goto block@164
debug: simplifying conditional branch with a constant into a goto
debug: simplified terminator of block@164 from goto 0u ? block@165 : block@166 to goto block@166
debug: Optimizer: Merge Blocks
debug: Replaced predecessor block@384 with block@0 in block@386
debug: Merged linear block@384 into block@0
debug: Replaced predecessor block@386 with block@0 in block@388
debug: Merged linear block@386 into block@0
debug: Replaced predecessor block@387 with block@385 in block@388
debug: Merged linear block@387 into block@385
debug: Replaced predecessor block@389 with block@388 in block@390
debug: Merged linear block@389 into block@388
debug: Replaced predecessor block@390 with block@388 in block@391
debug: Merged linear block@390 into block@388
debug: Replaced predecessor block@391 with block@388 in block@393
debug: Merged linear block@391 into block@388
debug: Replaced predecessor block@393 with block@388 in block@394
debug: Merged linear block@393 into block@388
debug: Replaced predecessor block@395 with block@394 in block@5
debug: Merged linear block@395 into block@394
debug: Replaced predecessor block@5 with block@394 in block@11
debug: Merged linear block@5 into block@394
debug: Replaced predecessor block@11 with block@394 in block@17
debug: Merged linear block@11 into block@394
debug: Replaced predecessor block@17 with block@394 in block@372
debug: Merged linear block@17 into block@394
debug: Replaced predecessor block@372 with block@394 in block@373
debug: Merged linear block@372 into block@394
debug: Replaced predecessor block@373 with block@394 in block@375
debug: Merged linear block@373 into block@394
debug: Replaced predecessor block@375 with block@394 in block@376
debug: Merged linear block@375 into block@394
debug: Replaced predecessor block@377 with block@376 in block@378
debug: Merged linear block@377 into block@376
debug: Replaced predecessor block@378 with block@376 in block@379
debug: Merged linear block@378 into block@376
debug: Replaced predecessor block@379 with block@376 in block@380
debug: Merged linear block@379 into block@376
debug: Replaced predecessor block@380 with block@376 in block@381
debug: Merged linear block@380 into block@376
debug: Replaced predecessor block@381 with block@376 in block@382
debug: Merged linear block@381 into block@376
debug: Replaced predecessor block@382 with block@376 in block@383
debug: Merged linear block@382 into block@376
debug: Replaced predecessor block@383 with block@376 in block@21
debug: Merged linear block@383 into block@376
debug: Replaced predecessor block@21 with block@376 in block@23
debug: Merged linear block@21 into block@376
debug: Replaced predecessor block@22 with block@20 in block@23
debug: Merged linear block@22 into block@20
debug: Replaced predecessor block@366 with block@23 in block@367
debug: Merged linear block@366 into block@23
debug: Replaced predecessor block@367 with block@23 in block@368
debug: Merged linear block@367 into block@23
debug: Replaced predecessor block@368 with block@23 in block@369
debug: Merged linear block@368 into block@23
debug: Replaced predecessor block@369 with block@23 in block@370
debug: Merged linear block@369 into block@23
debug: Replaced predecessor block@370 with block@23 in block@371
debug: Merged linear block@370 into block@23
debug: Replaced predecessor block@371 with block@23 in block@24
debug: Merged linear block@371 into block@23
debug: Replaced predecessor block@24 with block@23 in block@26
debug: Merged linear block@24 into block@23
debug: Replaced predecessor block@26 with block@23 in block@27
debug: Merged linear block@26 into block@23
debug: Replaced predecessor block@358 with block@27 in block@359
debug: Merged linear block@358 into block@27
debug: Replaced predecessor block@359 with block@27 in block@360
debug: Merged linear block@359 into block@27
debug: Replaced predecessor block@360 with block@27 in block@361
debug: Merged linear block@360 into block@27
debug: Replaced predecessor block@361 with block@27 in block@362
debug: Merged linear block@361 into block@27
debug: Replaced predecessor block@362 with block@27 in block@363
debug: Merged linear block@362 into block@27
debug: Replaced predecessor block@363 with block@27 in block@364
debug: Merged linear block@363 into block@27
debug: Replaced predecessor block@364 with block@27 in block@365
debug: Merged linear block@364 into block@27
debug: Replaced predecessor block@365 with block@27 in block@28
debug: Replaced predecessor block@365 with block@27 in block@30
debug: Merged linear block@365 into block@27
debug: Replaced predecessor block@29 with block@28 in block@31
debug: Merged linear block@29 into block@28
debug: Replaced predecessor block@31 with block@28 in block@32
debug: Merged linear block@31 into block@28
debug: Replaced predecessor block@350 with block@32 in block@351
debug: Merged linear block@350 into block@32
debug: Replaced predecessor block@351 with block@32 in block@352
debug: Merged linear block@351 into block@32
debug: Replaced predecessor block@352 with block@32 in block@353
debug: Merged linear block@352 into block@32
debug: Replaced predecessor block@353 with block@32 in block@354
debug: Merged linear block@353 into block@32
debug: Replaced predecessor block@354 with block@32 in block@355
debug: Merged linear block@354 into block@32
debug: Replaced predecessor block@355 with block@32 in block@356
debug: Merged linear block@355 into block@32
debug: Replaced predecessor block@356 with block@32 in block@357
debug: Merged linear block@356 into block@32
debug: Replaced predecessor block@357 with block@32 in block@33
debug: Replaced predecessor block@357 with block@32 in block@35
debug: Merged linear block@357 into block@32
debug: Replaced predecessor block@344 with block@37 in block@345
debug: Merged linear block@344 into block@37
debug: Replaced predecessor block@345 with block@37 in block@346
debug: Merged linear block@345 into block@37
debug: Replaced predecessor block@346 with block@37 in block@347
debug: Merged linear block@346 into block@37
debug: Replaced predecessor block@347 with block@37 in block@348
debug: Merged linear block@347 into block@37
debug: Replaced predecessor block@348 with block@37 in block@349
debug: Merged linear block@348 into block@37
debug: Replaced predecessor block@349 with block@37 in block@38
debug: Replaced predecessor block@349 with block@37 in block@39
debug: Merged linear block@349 into block@37
debug: Replaced predecessor block@40 with block@38 in block@41
debug: Merged linear block@40 into block@38
debug: Replaced predecessor block@338 with block@41 in block@339
debug: Merged linear block@338 into block@41
debug: Replaced predecessor block@339 with block@41 in block@340
debug: Merged linear block@339 into block@41
debug: Replaced predecessor block@340 with block@41 in block@341
debug: Merged linear block@340 into block@41
debug: Replaced predecessor block@341 with block@41 in block@342
debug: Merged linear block@341 into block@41
debug: Replaced predecessor block@342 with block@41 in block@343
debug: Merged linear block@342 into block@41
debug: Replaced predecessor block@343 with block@41 in block@42
debug: Replaced predecessor block@343 with block@41 in block@43
debug: Merged linear block@343 into block@41
debug: Replaced predecessor block@328 with block@45 in block@329
debug: Merged linear block@328 into block@45
debug: Replaced predecessor block@329 with block@45 in block@330
debug: Merged linear block@329 into block@45
debug: Replaced predecessor block@330 with block@45 in block@331
debug: Merged linear block@330 into block@45
debug: Replaced predecessor block@331 with block@45 in block@332
debug: Merged linear block@331 into block@45
debug: Replaced predecessor block@332 with block@45 in block@333
debug: Merged linear block@332 into block@45
debug: Replaced predecessor block@333 with block@45 in block@334
debug: Merged linear block@333 into block@45
debug: Replaced predecessor block@334 with block@45 in block@335
debug: Merged linear block@334 into block@45
debug: Replaced predecessor block@335 with block@45 in block@336
debug: Merged linear block@335 into block@45
debug: Replaced predecessor block@336 with block@45 in block@337
debug: Merged linear block@336 into block@45
debug: Replaced predecessor block@337 with block@45 in block@46
debug: Replaced predecessor block@337 with block@45 in block@48
debug: Merged linear block@337 into block@45
debug: Replaced predecessor block@47 with block@46 in block@48
debug: Merged linear block@47 into block@46
debug: Replaced predecessor block@318 with block@50 in block@319
debug: Merged linear block@318 into block@50
debug: Replaced predecessor block@319 with block@50 in block@320
debug: Merged linear block@319 into block@50
debug: Replaced predecessor block@320 with block@50 in block@321
debug: Merged linear block@320 into block@50
debug: Replaced predecessor block@321 with block@50 in block@322
debug: Merged linear block@321 into block@50
debug: Replaced predecessor block@322 with block@50 in block@323
debug: Merged linear block@322 into block@50
debug: Replaced predecessor block@323 with block@50 in block@324
debug: Merged linear block@323 into block@50
debug: Replaced predecessor block@324 with block@50 in block@325
debug: Merged linear block@324 into block@50
debug: Replaced predecessor block@325 with block@50 in block@326
debug: Merged linear block@325 into block@50
debug: Replaced predecessor block@326 with block@50 in block@327
debug: Merged linear block@326 into block@50
debug: Replaced predecessor block@327 with block@50 in block@51
debug: Replaced predecessor block@327 with block@50 in block@53
debug: Merged linear block@327 into block@50
debug: Replaced predecessor block@310 with block@55 in block@311
debug: Merged linear block@310 into block@55
debug: Replaced predecessor block@311 with block@55 in block@312
debug: Merged linear block@311 into block@55
debug: Replaced predecessor block@312 with block@55 in block@313
debug: Merged linear block@312 into block@55
debug: Replaced predecessor block@313 with block@55 in block@314
debug: Merged linear block@313 into block@55
debug: Replaced predecessor block@314 with block@55 in block@315
debug: Merged linear block@314 into block@55
debug: Replaced predecessor block@315 with block@55 in block@316
debug: Merged linear block@315 into block@55
debug: Replaced predecessor block@316 with block@55 in block@317
debug: Merged linear block@316 into block@55
debug: Replaced predecessor block@317 with block@55 in block@56
debug: Replaced predecessor block@317 with block@55 in block@57
debug: Merged linear block@317 into block@55
debug: Replaced predecessor block@58 with block@56 in block@59
debug: Merged linear block@58 into block@56
debug: Replaced predecessor block@302 with block@59 in block@303
debug: Merged linear block@302 into block@59
debug: Replaced predecessor block@303 with block@59 in block@304
debug: Merged linear block@303 into block@59
debug: Replaced predecessor block@304 with block@59 in block@305
debug: Merged linear block@304 into block@59
debug: Replaced predecessor block@305 with block@59 in block@306
debug: Merged linear block@305 into block@59
debug: Replaced predecessor block@306 with block@59 in block@307
debug: Merged linear block@306 into block@59
debug: Replaced predecessor block@307 with block@59 in block@308
debug: Merged linear block@307 into block@59
debug: Replaced predecessor block@308 with block@59 in block@309
debug: Merged linear block@308 into block@59
debug: Replaced predecessor block@309 with block@59 in block@60
debug: Replaced predecessor block@309 with block@59 in block@61
debug: Merged linear block@309 into block@59
debug: Replaced predecessor block@292 with block@63 in block@293
debug: Merged linear block@292 into block@63
debug: Replaced predecessor block@293 with block@63 in block@294
debug: Merged linear block@293 into block@63
debug: Replaced predecessor block@294 with block@63 in block@295
debug: Merged linear block@294 into block@63
debug: Replaced predecessor block@295 with block@63 in block@296
debug: Merged linear block@295 into block@63
debug: Replaced predecessor block@296 with block@63 in block@297
debug: Merged linear block@296 into block@63
debug: Replaced predecessor block@297 with block@63 in block@298
debug: Merged linear block@297 into block@63
debug: Replaced predecessor block@298 with block@63 in block@299
debug: Merged linear block@298 into block@63
debug: Replaced predecessor block@299 with block@63 in block@300
debug: Merged linear block@299 into block@63
debug: Replaced predecessor block@300 with block@63 in block@301
debug: Merged linear block@300 into block@63
debug: Replaced predecessor block@301 with block@63 in block@67
debug: Merged linear block@301 into block@63
debug: Replaced predecessor block@67 with block@63 in block@69
debug: Merged linear block@67 into block@63
debug: Replaced predecessor block@68 with block@66 in block@69
debug: Merged linear block@68 into block@66
debug: Replaced predecessor block@288 with block@69 in block@289
debug: Merged linear block@288 into block@69
debug: Replaced predecessor block@289 with block@69 in block@290
debug: Merged linear block@289 into block@69
debug: Replaced predecessor block@290 with block@69 in block@291
debug: Merged linear block@290 into block@69
debug: Replaced predecessor block@291 with block@69 in block@70
debug: Merged linear block@291 into block@69
debug: Replaced predecessor block@70 with block@69 in block@72
debug: Merged linear block@70 into block@69
debug: Replaced predecessor block@72 with block@69 in block@73
debug: Merged linear block@72 into block@69
debug: Replaced predecessor block@282 with block@73 in block@283
debug: Merged linear block@282 into block@73
debug: Replaced predecessor block@283 with block@73 in block@284
debug: Merged linear block@283 into block@73
debug: Replaced predecessor block@284 with block@73 in block@285
debug: Merged linear block@284 into block@73
debug: Replaced predecessor block@285 with block@73 in block@286
debug: Merged linear block@285 into block@73
debug: Replaced predecessor block@286 with block@73 in block@287
debug: Merged linear block@286 into block@73
debug: Replaced predecessor block@287 with block@73 in block@76
debug: Merged linear block@287 into block@73
debug: Replaced predecessor block@75 with block@74 in block@77
debug: Merged linear block@75 into block@74
debug: Replaced predecessor block@76 with block@73 in block@78
debug: Merged linear block@76 into block@73
debug: Replaced predecessor block@77 with block@74 in block@78
debug: Merged linear block@77 into block@74
debug: Replaced predecessor block@276 with block@78 in block@277
debug: Merged linear block@276 into block@78
debug: Replaced predecessor block@277 with block@78 in block@278
debug: Merged linear block@277 into block@78
debug: Replaced predecessor block@278 with block@78 in block@279
debug: Merged linear block@278 into block@78
debug: Replaced predecessor block@279 with block@78 in block@280
debug: Merged linear block@279 into block@78
debug: Replaced predecessor block@280 with block@78 in block@281
debug: Merged linear block@280 into block@78
debug: Replaced predecessor block@281 with block@78 in block@81
debug: Merged linear block@281 into block@78
debug: Replaced predecessor block@80 with block@79 in block@82
debug: Merged linear block@80 into block@79
debug: Replaced predecessor block@81 with block@78 in block@83
debug: Merged linear block@81 into block@78
debug: Replaced predecessor block@82 with block@79 in block@83
debug: Merged linear block@82 into block@79
debug: Replaced predecessor block@272 with block@83 in block@273
debug: Merged linear block@272 into block@83
debug: Replaced predecessor block@273 with block@83 in block@274
debug: Merged linear block@273 into block@83
debug: Replaced predecessor block@274 with block@83 in block@275
debug: Merged linear block@274 into block@83
debug: Replaced predecessor block@275 with block@83 in block@84
debug: Merged linear block@275 into block@83
debug: Replaced predecessor block@84 with block@83 in block@86
debug: Merged linear block@84 into block@83
debug: Replaced predecessor block@86 with block@83 in block@88
debug: Merged linear block@86 into block@83
debug: Replaced predecessor block@266 with block@88 in block@267
debug: Merged linear block@266 into block@88
debug: Replaced predecessor block@267 with block@88 in block@268
debug: Merged linear block@267 into block@88
debug: Replaced predecessor block@268 with block@88 in block@269
debug: Merged linear block@268 into block@88
debug: Replaced predecessor block@269 with block@88 in block@270
debug: Merged linear block@269 into block@88
debug: Replaced predecessor block@270 with block@88 in block@271
debug: Merged linear block@270 into block@88
debug: Replaced predecessor block@271 with block@88 in block@89
debug: Merged linear block@271 into block@88
debug: Replaced predecessor block@89 with block@88 in block@90
debug: Merged linear block@89 into block@88
debug: Replaced predecessor block@90 with block@88 in block@91
debug: Merged linear block@90 into block@88
debug: Replaced predecessor block@91 with block@88 in block@93
debug: Merged linear block@91 into block@88
debug: Replaced predecessor block@262 with block@93 in block@263
debug: Merged linear block@262 into block@93
debug: Replaced predecessor block@263 with block@93 in block@264
debug: Merged linear block@263 into block@93
debug: Replaced predecessor block@264 with block@93 in block@265
debug: Merged linear block@264 into block@93
debug: Replaced predecessor block@265 with block@93 in block@94
debug: Merged linear block@265 into block@93
debug: Replaced predecessor block@94 with block@93 in block@96
debug: Merged linear block@94 into block@93
debug: Replaced predecessor block@96 with block@93 in block@98
debug: Merged linear block@96 into block@93
debug: Replaced predecessor block@97 with block@95 in block@98
debug: Merged linear block@97 into block@95
debug: Replaced predecessor block@260 with block@98 in block@261
debug: Merged linear block@260 into block@98
debug: Replaced predecessor block@261 with block@98 in block@100
debug: Merged linear block@261 into block@98
debug: Replaced predecessor block@100 with block@98 in block@102
debug: Merged linear block@100 into block@98
debug: Replaced predecessor block@101 with block@99 in block@102
debug: Merged linear block@101 into block@99
debug: Replaced predecessor block@258 with block@102 in block@259
debug: Merged linear block@258 into block@102
debug: Replaced predecessor block@259 with block@102 in block@103
debug: Merged linear block@259 into block@102
debug: Replaced predecessor block@103 with block@102 in block@104
debug: Merged linear block@103 into block@102
debug: Replaced predecessor block@104 with block@102 in block@106
debug: Merged linear block@104 into block@102
debug: Replaced predecessor block@254 with block@106 in block@255
debug: Merged linear block@254 into block@106
debug: Replaced predecessor block@255 with block@106 in block@256
debug: Merged linear block@255 into block@106
debug: Replaced predecessor block@256 with block@106 in block@257
debug: Merged linear block@256 into block@106
debug: Replaced predecessor block@257 with block@106 in block@107
debug: Merged linear block@257 into block@106
debug: Replaced predecessor block@107 with block@106 in block@109
debug: Merged linear block@107 into block@106
debug: Replaced predecessor block@109 with block@106 in block@110
debug: Merged linear block@109 into block@106
debug: Replaced predecessor block@250 with block@110 in block@251
debug: Merged linear block@250 into block@110
debug: Replaced predecessor block@251 with block@110 in block@252
debug: Merged linear block@251 into block@110
debug: Replaced predecessor block@252 with block@110 in block@253
debug: Merged linear block@252 into block@110
debug: Replaced predecessor block@253 with block@110 in block@111
debug: Merged linear block@253 into block@110
debug: Replaced predecessor block@111 with block@110 in block@113
debug: Merged linear block@111 into block@110
debug: Replaced predecessor block@113 with block@110 in block@114
debug: Merged linear block@113 into block@110
debug: Replaced predecessor block@246 with block@114 in block@247
debug: Merged linear block@246 into block@114
debug: Replaced predecessor block@247 with block@114 in block@248
debug: Merged linear block@247 into block@114
debug: Replaced predecessor block@248 with block@114 in block@249
debug: Merged linear block@248 into block@114
debug: Replaced predecessor block@249 with block@114 in block@115
debug: Merged linear block@249 into block@114
debug: Replaced predecessor block@115 with block@114 in block@117
debug: Merged linear block@115 into block@114
debug: Replaced predecessor block@117 with block@114 in block@118
debug: Merged linear block@117 into block@114
debug: Replaced predecessor block@244 with block@118 in block@245
debug: Merged linear block@244 into block@118
debug: Replaced predecessor block@245 with block@118 in block@119
debug: Merged linear block@245 into block@118
debug: Replaced predecessor block@119 with block@118 in block@122
debug: Merged linear block@119 into block@118
debug: Replaced predecessor block@240 with block@122 in block@241
debug: Merged linear block@240 into block@122
debug: Replaced predecessor block@241 with block@122 in block@242
debug: Merged linear block@241 into block@122
debug: Replaced predecessor block@242 with block@122 in block@243
debug: Merged linear block@242 into block@122
debug: Replaced predecessor block@243 with block@122 in block@123
debug: Merged linear block@243 into block@122
debug: Replaced predecessor block@123 with block@122 in block@125
debug: Merged linear block@123 into block@122
debug: Replaced predecessor block@125 with block@122 in block@126
debug: Merged linear block@125 into block@122
debug: Replaced predecessor block@236 with block@126 in block@237
debug: Merged linear block@236 into block@126
debug: Replaced predecessor block@237 with block@126 in block@238
debug: Merged linear block@237 into block@126
debug: Replaced predecessor block@238 with block@126 in block@239
debug: Merged linear block@238 into block@126
debug: Replaced predecessor block@239 with block@126 in block@127
debug: Merged linear block@239 into block@126
debug: Replaced predecessor block@127 with block@126 in block@129
debug: Merged linear block@127 into block@126
debug: Replaced predecessor block@129 with block@126 in block@130
debug: Merged linear block@129 into block@126
debug: Replaced predecessor block@234 with block@130 in block@235
debug: Merged linear block@234 into block@130
debug: Replaced predecessor block@235 with block@130 in block@131
debug: Merged linear block@235 into block@130
debug: Replaced predecessor block@131 with block@130 in block@133
debug: Merged linear block@131 into block@130
debug: Replaced predecessor block@133 with block@130 in block@134
debug: Merged linear block@133 into block@130
debug: Replaced predecessor block@232 with block@134 in block@233
debug: Merged linear block@232 into block@134
debug: Replaced predecessor block@233 with block@134 in block@135
debug: Merged linear block@233 into block@134
debug: Replaced predecessor block@135 with block@134 in block@137
debug: Merged linear block@135 into block@134
debug: Replaced predecessor block@137 with block@134 in block@138
debug: Merged linear block@137 into block@134
debug: Replaced predecessor block@224 with block@138 in block@225
debug: Merged linear block@224 into block@138
debug: Replaced predecessor block@225 with block@138 in block@226
debug: Merged linear block@225 into block@138
debug: Replaced predecessor block@226 with block@138 in block@227
debug: Merged linear block@226 into block@138
debug: Replaced predecessor block@227 with block@138 in block@228
debug: Merged linear block@227 into block@138
debug: Replaced predecessor block@228 with block@138 in block@229
debug: Merged linear block@228 into block@138
debug: Replaced predecessor block@229 with block@138 in block@230
debug: Merged linear block@229 into block@138
debug: Replaced predecessor block@230 with block@138 in block@231
debug: Merged linear block@230 into block@138
debug: Replaced predecessor block@231 with block@138 in block@141
debug: Merged linear block@231 into block@138
debug: Replaced predecessor block@140 with block@139 in block@142
debug: Merged linear block@140 into block@139
debug: Replaced predecessor block@141 with block@138 in block@143
debug: Merged linear block@141 into block@138
debug: Replaced predecessor block@142 with block@139 in block@143
debug: Merged linear block@142 into block@139
debug: Replaced predecessor block@216 with block@143 in block@217
debug: Merged linear block@216 into block@143
debug: Replaced predecessor block@217 with block@143 in block@218
debug: Merged linear block@217 into block@143
debug: Replaced predecessor block@218 with block@143 in block@219
debug: Merged linear block@218 into block@143
debug: Replaced predecessor block@219 with block@143 in block@220
debug: Merged linear block@219 into block@143
debug: Replaced predecessor block@220 with block@143 in block@221
debug: Merged linear block@220 into block@143
debug: Replaced predecessor block@221 with block@143 in block@222
debug: Merged linear block@221 into block@143
debug: Replaced predecessor block@222 with block@143 in block@223
debug: Merged linear block@222 into block@143
debug: Replaced predecessor block@223 with block@143 in block@145
debug: Merged linear block@223 into block@143
debug: Replaced predecessor block@145 with block@143 in block@147
debug: Merged linear block@145 into block@143
debug: Replaced predecessor block@146 with block@144 in block@147
debug: Merged linear block@146 into block@144
debug: Replaced predecessor block@212 with block@147 in block@213
debug: Merged linear block@212 into block@147
debug: Replaced predecessor block@213 with block@147 in block@214
debug: Merged linear block@213 into block@147
debug: Replaced predecessor block@214 with block@147 in block@215
debug: Merged linear block@214 into block@147
debug: Replaced predecessor block@215 with block@147 in block@149
debug: Merged linear block@215 into block@147
debug: Replaced predecessor block@149 with block@147 in block@151
debug: Merged linear block@149 into block@147
debug: Replaced predecessor block@206 with block@151 in block@207
debug: Merged linear block@206 into block@151
debug: Replaced predecessor block@207 with block@151 in block@208
debug: Merged linear block@207 into block@151
debug: Replaced predecessor block@208 with block@151 in block@209
debug: Merged linear block@208 into block@151
debug: Replaced predecessor block@209 with block@151 in block@210
debug: Merged linear block@209 into block@151
debug: Replaced predecessor block@210 with block@151 in block@211
debug: Merged linear block@210 into block@151
debug: Replaced predecessor block@211 with block@151 in block@152
debug: Merged linear block@211 into block@151
debug: Replaced predecessor block@152 with block@151 in block@153
debug: Merged linear block@152 into block@151
debug: Replaced predecessor block@153 with block@151 in block@155
debug: Merged linear block@153 into block@151
debug: Replaced predecessor block@202 with block@155 in block@203
debug: Merged linear block@202 into block@155
debug: Replaced predecessor block@203 with block@155 in block@204
debug: Merged linear block@203 into block@155
debug: Replaced predecessor block@204 with block@155 in block@205
debug: Merged linear block@204 into block@155
debug: Replaced predecessor block@205 with block@155 in block@157
debug: Merged linear block@205 into block@155
debug: Replaced predecessor block@157 with block@155 in block@159
debug: Merged linear block@157 into block@155
debug: Replaced predecessor block@158 with block@156 in block@159
debug: Merged linear block@158 into block@156
debug: Replaced predecessor block@198 with block@159 in block@199
debug: Merged linear block@198 into block@159
debug: Replaced predecessor block@199 with block@159 in block@200
debug: Merged linear block@199 into block@159
debug: Replaced predecessor block@200 with block@159 in block@201
debug: Merged linear block@200 into block@159
debug: Replaced predecessor block@201 with block@159 in block@160
debug: Merged linear block@201 into block@159
debug: Replaced predecessor block@160 with block@159 in block@161
debug: Merged linear block@160 into block@159
debug: Replaced predecessor block@161 with block@159 in block@163
debug: Merged linear block@161 into block@159
debug: Replaced predecessor block@192 with block@163 in block@193
debug: Merged linear block@192 into block@163
debug: Replaced predecessor block@193 with block@163 in block@194
debug: Merged linear block@193 into block@163
debug: Replaced predecessor block@194 with block@163 in block@195
debug: Merged linear block@194 into block@163
debug: Replaced predecessor block@195 with block@163 in block@196
debug: Merged linear block@195 into block@163
debug: Replaced predecessor block@196 with block@163 in block@197
debug: Merged linear block@196 into block@163
debug: Replaced predecessor block@197 with block@163 in block@164
debug: Merged linear block@197 into block@163
debug: Replaced predecessor block@164 with block@163 in block@166
debug: Merged linear block@164 into block@163
debug: Replaced predecessor block@166 with block@163 in block@167
debug: Merged linear block@166 into block@163
debug: Replaced predecessor block@172 with block@167 in block@173
debug: Merged linear block@172 into block@167
debug: Replaced predecessor block@173 with block@167 in block@174
debug: Merged linear block@173 into block@167
debug: Replaced predecessor block@174 with block@167 in block@175
debug: Merged linear block@174 into block@167
debug: Replaced predecessor block@175 with block@167 in block@176
debug: Merged linear block@175 into block@167
debug: Replaced predecessor block@176 with block@167 in block@177
debug: Merged linear block@176 into block@167
debug: Replaced predecessor block@177 with block@167 in block@178
debug: Merged linear block@177 into block@167
debug: Replaced predecessor block@178 with block@167 in block@179
debug: Merged linear block@178 into block@167
debug: Replaced predecessor block@179 with block@167 in block@180
debug: Merged linear block@179 into block@167
debug: Replaced predecessor block@180 with block@167 in block@181
debug: Merged linear block@180 into block@167
debug: Replaced predecessor block@181 with block@167 in block@182
debug: Merged linear block@181 into block@167
debug: Replaced predecessor block@182 with block@167 in block@183
debug: Merged linear block@182 into block@167
debug: Replaced predecessor block@183 with block@167 in block@184
debug: Merged linear block@183 into block@167
debug: Replaced predecessor block@184 with block@167 in block@185
debug: Merged linear block@184 into block@167
debug: Replaced predecessor block@185 with block@167 in block@186
debug: Merged linear block@185 into block@167
debug: Replaced predecessor block@186 with block@167 in block@187
debug: Merged linear block@186 into block@167
debug: Replaced predecessor block@187 with block@167 in block@188
debug: Merged linear block@187 into block@167
debug: Replaced predecessor block@188 with block@167 in block@189
debug: Merged linear block@188 into block@167
debug: Replaced predecessor block@189 with block@167 in block@190
debug: Merged linear block@189 into block@167
debug: Replaced predecessor block@190 with block@167 in block@191
debug: Merged linear block@190 into block@167
debug: Replaced predecessor block@191 with block@167 in block@171
debug: Merged linear block@191 into block@167
debug: Merged linear block@171 into block@167
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Removing unreachable block: block@385
debug: Removing unreachable block: block@392
debug: Removing unreachable block: block@374
debug: Removing unreachable block: block@20
debug: Removing unreachable block: block@25
debug: Removing unreachable block: block@49
debug: Removing unreachable block: block@66
debug: Removing unreachable block: block@71
debug: Removing unreachable block: block@74
debug: Removing unreachable block: block@79
debug: Removing unreachable block: block@87
debug: Removing unreachable block: block@92
debug: Removing unreachable block: block@95
debug: Removing unreachable block: block@99
debug: Removing unreachable block: block@105
debug: Removing unreachable block: block@108
debug: Removing unreachable block: block@112
debug: Removing unreachable block: block@116
debug: Removing unreachable block: block@120
debug: Removing unreachable block: block@124
debug: Removing unreachable block: block@128
debug: Removing unreachable block: block@132
debug: Removing unreachable block: block@136
debug: Removing unreachable block: block@139
debug: Removing unreachable block: block@144
debug: Removing unreachable block: block@150
debug: Removing unreachable block: block@154
debug: Removing unreachable block: block@156
debug: Removing unreachable block: block@162
debug: Removing unreachable block: block@165
debug: Optimizer: Repeated Expression Elimination
debug: Replacing redundant declaration let tmp%0#20: Encoded(len+utf8[]) = bytes_encode<(len+utf8[])>("foo") with copy of existing registers [Register(source_location=contains/contract.py:174:11-29, ir_type=Encoded(len+utf8[]), name='tmp%0', version=21)]
debug: Replacing redundant declaration let tmp%0#17: Encoded(len+utf8[]) = bytes_encode<(len+utf8[])>("foo") with copy of existing registers [Register(source_location=contains/contract.py:174:11-29, ir_type=Encoded(len+utf8[]), name='tmp%0', version=21)]
debug: Replacing redundant declaration let tmp%0#18: Encoded(len+utf8[]) = bytes_encode<(len+utf8[])>("bar") with copy of existing registers [Register(source_location=contains/contract.py:184:11-29, ir_type=Encoded(len+utf8[]), name='tmp%0', version=19)]
debug: Replacing redundant declaration let tmp%0#16: Encoded(len+utf8[]) = bytes_encode<(len+utf8[])>("bar") with copy of existing registers [Register(source_location=contains/contract.py:184:11-29, ir_type=Encoded(len+utf8[]), name='tmp%0', version=19)]
debug: Replacing redundant declaration let tmp%0#14: Encoded(len+utf8[]) = bytes_encode<(len+utf8[])>("foo") with copy of existing registers [Register(source_location=contains/contract.py:174:11-29, ir_type=Encoded(len+utf8[]), name='tmp%0', version=21)]
debug: Replacing redundant declaration let tmp%0#15: Encoded(len+utf8[]) = bytes_encode<(len+utf8[])>("bar") with copy of existing registers [Register(source_location=contains/contract.py:184:11-29, ir_type=Encoded(len+utf8[]), name='tmp%0', version=19)]
debug: Replacing redundant declaration let tmp%0#13: Encoded(len+utf8[]) = bytes_encode<(len+utf8[])>("bar") with copy of existing registers [Register(source_location=contains/contract.py:184:11-29, ir_type=Encoded(len+utf8[]), name='tmp%0', version=19)]
debug: Replacing redundant declaration let tmp%0#11: Encoded(len+utf8[]) = bytes_encode<(len+utf8[])>("foo") with copy of existing registers [Register(source_location=contains/contract.py:174:11-29, ir_type=Encoded(len+utf8[]), name='tmp%0', version=21)]
debug: Replacing redundant declaration let tmp%0#12: Encoded(len+utf8[]) = bytes_encode<(len+utf8[])>("bar") with copy of existing registers [Register(source_location=contains/contract.py:184:11-29, ir_type=Encoded(len+utf8[]), name='tmp%0', version=19)]
debug: Replacing redundant declaration let tmp%40#1: biguint = (itob 3u) with copy of existing registers [Register(source_location=contains/contract.py:94:15-63, ir_type=biguint, name='tmp%31', version=1)]
debug: Replacing redundant declaration let tmp%50#1: biguint = (itob 1u) with copy of existing registers [Register(source_location=contains/contract.py:92:15-64, ir_type=biguint, name='tmp%16', version=1)]
debug: Replacing redundant declaration let tmp%55#1: biguint = (itob 1u) with copy of existing registers [Register(source_location=contains/contract.py:92:15-64, ir_type=biguint, name='tmp%16', version=1)]
debug: Replacing redundant declaration let tmp%60#1: biguint = (itob 1u) with copy of existing registers [Register(source_location=contains/contract.py:92:15-64, ir_type=biguint, name='tmp%16', version=1)]
debug: Replacing redundant declaration let tmp%98#0: biguint = (itob 1u) with copy of existing registers [Register(source_location=contains/contract.py:92:15-64, ir_type=biguint, name='tmp%16', version=1)]
debug: Replacing redundant declaration let tmp%125#0: biguint = (itob 1u) with copy of existing registers [Register(source_location=contains/contract.py:92:15-64, ir_type=biguint, name='tmp%16', version=1)]
debug: Replacing redundant declaration let tmp%130#0: biguint = (itob 1u) with copy of existing registers [Register(source_location=contains/contract.py:92:15-64, ir_type=biguint, name='tmp%16', version=1)]
debug: Found equivalence set: or_result%0#18, one_true#0
debug: selected one_true#0 from equivalence set
debug: Found equivalence set: or_result%0#22, one_false#0
debug: selected one_false#0 from equivalence set
debug: Found equivalence set: or_result%0#16, three_false#0
debug: selected three_false#0 from equivalence set
debug: Found equivalence set: or_result%0#9, or_result%0#11
debug: selected or_result%0#9 from equivalence set
debug: Found equivalence set: or_result%1#1, or_result%1#2
debug: selected or_result%1#1 from equivalence set
debug: Found equivalence set: tmp%0#21, tmp%0#20, tmp%0#17, tmp%0#14, tmp%0#11
debug: selected tmp%0#21 from equivalence set
debug: Found equivalence set: tmp%0#19, tmp%0#18, tmp%0#16, tmp%0#15, tmp%0#13, tmp%0#12
debug: selected tmp%0#19 from equivalence set
debug: Found equivalence set: or_result%6#0, or_result%6#2
debug: selected or_result%6#0 from equivalence set
debug: Found equivalence set: or_result%0#12, or_result%0#14
debug: selected or_result%0#12 from equivalence set
debug: Found equivalence set: or_result%1#4, or_result%1#5
debug: selected or_result%1#4 from equivalence set
debug: Found equivalence set: or_result%2#3, or_result%2#5
debug: selected or_result%2#3 from equivalence set
debug: Found equivalence set: or_result%3#3, or_result%3#5
debug: selected or_result%3#3 from equivalence set
debug: Found equivalence set: or_result%4#3, or_result%4#5
debug: selected or_result%4#3 from equivalence set
debug: Found equivalence set: or_result%5#3, or_result%5#5
debug: selected or_result%5#3 from equivalence set
debug: Found equivalence set: or_result%6#3, or_result%6#5
debug: selected or_result%6#3 from equivalence set
debug: Found equivalence set: tmp%31#1, tmp%40#1
debug: selected tmp%31#1 from equivalence set
debug: Found equivalence set: or_result%7#3, or_result%7#5
debug: selected or_result%7#3 from equivalence set
debug: Found equivalence set: or_result%8#3, or_result%8#5
debug: selected or_result%8#3 from equivalence set
debug: Found equivalence set: tmp%16#1, tmp%50#1, tmp%55#1, tmp%60#1, tmp%98#0, tmp%125#0, tmp%130#0
debug: selected tmp%16#1 from equivalence set
debug: Found equivalence set: or_result%9#4, or_result%9#5
debug: selected or_result%9#4 from equivalence set
debug: Found equivalence set: or_result%10#1, or_result%10#2
debug: selected or_result%10#1 from equivalence set
debug: Found equivalence set: or_result%11#1, or_result%11#2
debug: selected or_result%11#1 from equivalence set
debug: Found equivalence set: or_result%12#1, or_result%12#2
debug: selected or_result%12#1 from equivalence set
debug: Found equivalence set: or_result%13#1, or_result%13#2
debug: selected or_result%13#1 from equivalence set
debug: Found equivalence set: or_result%14#1, or_result%14#2
debug: selected or_result%14#1 from equivalence set
debug: Found equivalence set: or_result%15#1, or_result%15#2
debug: selected or_result%15#1 from equivalence set
debug: Found equivalence set: or_result%16#1, or_result%16#2
debug: selected or_result%16#1 from equivalence set
debug: Found equivalence set: or_result%17#0, or_result%17#2
debug: selected or_result%17#0 from equivalence set
debug: Found equivalence set: or_result%18#0, or_result%18#2
debug: selected or_result%18#0 from equivalence set
debug: Found equivalence set: or_result%19#0, or_result%19#2
debug: selected or_result%19#0 from equivalence set
debug: Found equivalence set: or_result%20#0, or_result%20#2
debug: selected or_result%20#0 from equivalence set
debug: Found equivalence set: or_result%21#0, or_result%21#2
debug: selected or_result%21#0 from equivalence set
debug: Found equivalence set: or_result%22#0, or_result%22#2
debug: selected or_result%22#0 from equivalence set
debug: Found equivalence set: or_result%23#1, or_result%23#2
debug: selected or_result%23#1 from equivalence set
debug: Copy propagation made 42 modifications
debug: Replacing redundant declaration let tmp%16#0: string = decode_bytes<string>(tmp%0#21) with copy of existing registers [Register(source_location=contains/contract.py:58:31-71, ir_type=string, name='tmp%12', version=0)]
debug: Replacing redundant declaration let tmp%34#0: string = decode_bytes<string>(tmp%0#21) with copy of existing registers [Register(source_location=contains/contract.py:58:31-71, ir_type=string, name='tmp%12', version=0)]
debug: Replacing redundant declaration let tmp%41#0: string = decode_bytes<string>(tmp%0#19) with copy of existing registers [Register(source_location=contains/contract.py:60:35-61, ir_type=string, name='tmp%27', version=0)]
debug: Replacing redundant declaration let tmp%49#0: bool = (== tmp%0#21 tmp%0#19) with copy of existing registers [Register(source_location=contains/contract.py:61:15-59, ir_type=bool, name='tmp%33', version=0)]
debug: Replacing redundant declaration let tmp%50#0: string = decode_bytes<string>(tmp%0#21) with copy of existing registers [Register(source_location=contains/contract.py:58:31-71, ir_type=string, name='tmp%12', version=0)]
debug: Replacing redundant declaration let tmp%57#0: string = decode_bytes<string>(tmp%0#19) with copy of existing registers [Register(source_location=contains/contract.py:60:35-61, ir_type=string, name='tmp%27', version=0)]
debug: Replacing redundant declaration let tmp%64#0: bool = (== tmp%0#21 tmp%0#19) with copy of existing registers [Register(source_location=contains/contract.py:61:15-59, ir_type=bool, name='tmp%33', version=0)]
debug: Replacing redundant declaration let tmp%65#0: string = decode_bytes<string>(tmp%0#21) with copy of existing registers [Register(source_location=contains/contract.py:58:31-71, ir_type=string, name='tmp%12', version=0)]
debug: Found equivalence set: tmp%12#0, tmp%16#0, tmp%34#0, tmp%50#0, tmp%65#0
debug: selected tmp%12#0 from equivalence set
debug: Found equivalence set: tmp%27#0, tmp%41#0, tmp%57#0
debug: selected tmp%27#0 from equivalence set
debug: Found equivalence set: tmp%33#0, tmp%49#0, tmp%64#0
debug: selected tmp%33#0 from equivalence set
debug: Copy propagation made 11 modifications
debug: Replacing redundant declaration let tmp%20#0: bool = (== tmp%12#0 "foo") with copy of existing registers [Register(source_location=contains/contract.py:58:15-71, ir_type=bool, name='tmp%13', version=0)]
debug: Replacing redundant declaration let tmp%42#0: bool = (== tmp%27#0 "foo") with copy of existing registers [Register(source_location=contains/contract.py:60:15-61, ir_type=bool, name='tmp%28', version=0)]
debug: Replacing redundant declaration let tmp%53#0: bool = (== tmp%12#0 "foo") with copy of existing registers [Register(source_location=contains/contract.py:58:15-71, ir_type=bool, name='tmp%13', version=0)]
debug: Replacing redundant declaration let tmp%58#0: bool = (== tmp%27#0 "foo") with copy of existing registers [Register(source_location=contains/contract.py:60:15-61, ir_type=bool, name='tmp%28', version=0)]
debug: Found equivalence set: tmp%13#0, tmp%20#0, tmp%53#0
debug: selected tmp%13#0 from equivalence set
debug: Found equivalence set: tmp%28#0, tmp%42#0, tmp%58#0
debug: selected tmp%28#0 from equivalence set
debug: Copy propagation made 4 modifications
debug: Optimizer: Encode Decode Pair Elimination
debug: replacing redundant decode-of-encode with: "foo"
debug: replacing redundant decode-of-encode with: "bar"
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.contains.contract.one_u64
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.contains.contract.one_arc4u64
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.contains.contract.two_u64
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.contains.contract.two_u8
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.contains.contract.three_u512
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.contains.contract.four_biguint
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.contains.contract.foo_string
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.contains.contract.foo_arc4
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.contains.contract.bar_string
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.contains.contract.bar_arc4
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.contains.contract.baz_string
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.contains.contract.MyContract.is_in_tuple_1
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.contains.contract.MyContract.is_in_tuple_3
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: removing unused subroutine test_cases.contains.contract.one_u64
debug: removing unused subroutine test_cases.contains.contract.one_arc4u64
debug: removing unused subroutine test_cases.contains.contract.two_u64
debug: removing unused subroutine test_cases.contains.contract.two_u8
debug: removing unused subroutine test_cases.contains.contract.three_u512
debug: removing unused subroutine test_cases.contains.contract.four_biguint
debug: removing unused subroutine test_cases.contains.contract.foo_string
debug: removing unused subroutine test_cases.contains.contract.foo_arc4
debug: removing unused subroutine test_cases.contains.contract.bar_string
debug: removing unused subroutine test_cases.contains.contract.bar_arc4
debug: removing unused subroutine test_cases.contains.contract.baz_string
debug: removing unused subroutine test_cases.contains.contract.MyContract.is_in_tuple_1
debug: removing unused subroutine test_cases.contains.contract.MyContract.is_in_tuple_3
debug: Unused subroutines removed
debug: Begin optimization pass 3/100
debug: Optimizing subroutine test_cases.contains.contract.MyContract.approval_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable tmp%0#23
debug: Removing unused variable one_true#0
debug: Removing unused variable tmp%0#24
debug: Removing unused variable tmp%1#8
debug: Removing unused variable one_false#0
debug: Removing unused variable tmp%5#0
debug: Removing unused variable tmp%0#22
debug: Removing unused variable tmp%1#6
debug: Removing unused variable three_false#0
debug: Removing unused variable tmp%2#1
debug: Removing unused variable or_result%0#9
debug: Removing unused variable tmp%6#1
debug: Removing unused variable tmp%7#1
debug: Removing unused variable or_result%1#1
debug: Removing unused variable tmp%12#0
debug: Removing unused variable tmp%14#0
debug: Removing unused variable tmp%15#0
debug: Removing unused variable tmp%27#0
debug: Removing unused variable tmp%29#0
debug: Removing unused variable tmp%43#0
debug: Removing unused variable tmp%44#0
debug: Removing unused variable or_result%6#0
debug: Removing unused variable tmp%59#0
debug: Removing unused variable tmp%2#2
debug: Removing unused variable or_result%0#12
debug: Removing unused variable tmp%5#2
debug: Removing unused variable tmp%6#2
debug: Removing unused variable or_result%1#4
debug: Removing unused variable tmp%10#1
debug: Removing unused variable or_result%2#3
debug: Removing unused variable tmp%16#1
debug: Removing unused variable tmp%17#1
debug: Removing unused variable or_result%3#3
debug: Removing unused variable tmp%23#1
debug: Removing unused variable tmp%24#1
debug: Removing unused variable tmp%27#1
debug: Removing unused variable or_result%4#3
debug: Removing unused variable tmp%30#1
debug: Removing unused variable tmp%31#1
debug: Removing unused variable tmp%32#1
debug: Removing unused variable tmp%33#1
debug: Removing unused variable or_result%5#3
debug: Removing unused variable tmp%35#1
debug: Removing unused variable tmp%37#1
debug: Removing unused variable or_result%6#3
debug: Removing unused variable tmp%41#1
debug: Removing unused variable or_result%7#3
debug: Removing unused variable tmp%44#1
debug: Removing unused variable tmp%45#1
debug: Removing unused variable tmp%46#1
debug: Removing unused variable tmp%47#1
debug: Removing unused variable or_result%8#3
debug: Removing unused variable tmp%49#1
debug: Removing unused variable tmp%51#1
debug: Removing unused variable or_result%9#4
debug: Removing unused variable tmp%54#1
debug: Removing unused variable tmp%56#1
debug: Removing unused variable or_result%10#1
debug: Removing unused variable tmp%59#1
debug: Removing unused variable tmp%61#1
debug: Removing unused variable or_result%11#1
debug: Removing unused variable tmp%65#1
debug: Removing unused variable or_result%12#1
debug: Removing unused variable tmp%69#1
debug: Removing unused variable tmp%71#1
debug: Removing unused variable or_result%13#1
debug: Removing unused variable tmp%74#0
debug: Removing unused variable tmp%76#0
debug: Removing unused variable or_result%14#1
debug: Removing unused variable tmp%79#0
debug: Removing unused variable tmp%80#0
debug: Removing unused variable tmp%81#0
debug: Removing unused variable or_result%15#1
debug: Removing unused variable tmp%84#0
debug: Removing unused variable tmp%85#0
debug: Removing unused variable tmp%86#0
debug: Removing unused variable or_result%16#1
debug: Removing unused variable tmp%91#0
debug: Removing unused variable or_result%17#0
debug: Removing unused variable tmp%99#0
debug: Removing unused variable or_result%18#0
debug: Removing unused variable tmp%106#0
debug: Removing unused variable or_result%19#0
debug: Removing unused variable tmp%110#0
debug: Removing unused variable tmp%111#0
debug: Removing unused variable or_result%20#0
debug: Removing unused variable tmp%114#0
debug: Removing unused variable or_result%21#0
debug: Removing unused variable tmp%119#0
debug: Removing unused variable tmp%121#0
debug: Removing unused variable or_result%22#0
debug: Removing unused variable tmp%124#0
debug: Removing unused variable tmp%126#0
debug: Removing unused variable or_result%23#1
debug: Removing unused variable tmp%131#0
debug: Removing unused variable tmp%132#0
debug: Removing unused variable tmp%138#0
debug: Removing unused variable tmp%139#0
debug: Removing unused variable tmp%142#0
debug: Removing unused variable tmp%143#0
debug: Removing unused variable tmp%146#0
debug: Removing unused variable tmp%147#0
debug: Removing unused variable tmp%152#0
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (! 0u) to 1u
debug: Simplified (! 0u) to 1u
debug: Simplified (! 0u) to 1u
debug: Simplified (== "foo" "foo") to 1u
debug: Simplified (== "foo" "baz") to 0u
debug: Simplified (== "foo" "bar") to 0u
debug: Simplified (== "bar" "foo") to 0u
debug: Simplified (== "foo" "baz") to 0u
debug: Simplified (== "foo" "baz") to 0u
debug: Simplified (== "foo" "baz") to 0u
debug: Simplified (! 0u) to 1u
debug: Simplified (! 0u) to 1u
debug: Simplified (! 0u) to 1u
debug: Simplified (! 0u) to 1u
debug: Simplified (! 0u) to 1u
debug: Simplified (! 0u) to 1u
debug: Simplified (! 0u) to 1u
debug: Simplified (! 0u) to 1u
debug: Simplified (! 0u) to 1u
debug: Simplified (! 0u) to 1u
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: simplifying conditional branch with a constant into a goto
debug: simplified terminator of block@27 from goto 1u ? block@30 : block@28 to goto block@30
debug: simplifying conditional branch with a constant into a goto
debug: simplified terminator of block@32 from goto 1u ? block@35 : block@33 to goto block@35
debug: simplifying conditional branch with a constant into a goto
debug: simplified terminator of block@33 from goto 0u ? block@35 : block@34 to goto block@34
debug: simplifying conditional branch with a constant into a goto
debug: simplified terminator of block@34 from goto 0u ? block@35 : block@36 to goto block@36
debug: simplifying conditional branch with a constant into a goto
debug: simplified terminator of block@37 from goto 0u ? block@39 : block@38 to goto block@38
debug: simplifying conditional branch with a constant into a goto
debug: simplified terminator of block@42 from goto 0u ? block@43 : block@44 to goto block@44
debug: simplifying conditional branch with a constant into a goto
debug: simplified terminator of block@45 from goto 0u ? block@48 : block@46 to goto block@46
debug: simplifying conditional branch with a constant into a goto
debug: simplified terminator of block@51 from goto 0u ? block@53 : block@52 to goto block@52
debug: simplifying conditional branch with a constant into a goto
debug: simplified terminator of block@52 from goto 1u ? block@53 : block@54 to goto block@53
debug: simplifying conditional branch with a constant into a goto
debug: simplified terminator of block@55 from goto 0u ? block@57 : block@56 to goto block@56
debug: simplifying conditional branch with a constant into a goto
debug: simplified terminator of block@60 from goto 0u ? block@61 : block@62 to goto block@62
debug: Optimizer: Merge Blocks
debug: Replaced predecessor block@388 with block@0 in block@394
debug: Merged linear block@388 into block@0
debug: Replaced predecessor block@394 with block@0 in block@376
debug: Merged linear block@394 into block@0
debug: Replaced predecessor block@376 with block@0 in block@23
debug: Merged linear block@376 into block@0
debug: Replaced predecessor block@23 with block@0 in block@27
debug: Merged linear block@23 into block@0
debug: Replaced predecessor block@27 with block@0 in block@30
debug: Merged linear block@27 into block@0
debug: Replaced predecessor block@30 with block@0 in block@32
debug: Merged linear block@30 into block@0
debug: Replaced predecessor block@34 with block@33 in block@36
debug: Merged linear block@34 into block@33
debug: Replaced predecessor block@35 with block@32 in block@37
debug: Merged linear block@35 into block@32
debug: Replaced predecessor block@36 with block@33 in block@37
debug: Merged linear block@36 into block@33
debug: Replaced predecessor block@38 with block@37 in block@41
debug: Merged linear block@38 into block@37
debug: Replaced predecessor block@44 with block@42 in block@45
debug: Merged linear block@44 into block@42
debug: Replaced predecessor block@46 with block@45 in block@48
debug: Merged linear block@46 into block@45
debug: Replaced predecessor block@48 with block@45 in block@50
debug: Merged linear block@48 into block@45
debug: Replaced predecessor block@50 with block@45 in block@51
debug: Replaced predecessor block@50 with block@45 in block@53
debug: Merged linear block@50 into block@45
debug: Replaced predecessor block@52 with block@51 in block@53
debug: Merged linear block@52 into block@51
debug: Replaced predecessor block@56 with block@55 in block@59
debug: Merged linear block@56 into block@55
debug: Replaced predecessor block@62 with block@60 in block@63
debug: Merged linear block@62 into block@60
debug: Replaced predecessor block@69 with block@63 in block@73
debug: Merged linear block@69 into block@63
debug: Replaced predecessor block@73 with block@63 in block@78
debug: Merged linear block@73 into block@63
debug: Replaced predecessor block@78 with block@63 in block@83
debug: Merged linear block@78 into block@63
debug: Replaced predecessor block@83 with block@63 in block@88
debug: Merged linear block@83 into block@63
debug: Replaced predecessor block@88 with block@63 in block@93
debug: Merged linear block@88 into block@63
debug: Replaced predecessor block@93 with block@63 in block@98
debug: Merged linear block@93 into block@63
debug: Replaced predecessor block@98 with block@63 in block@102
debug: Merged linear block@98 into block@63
debug: Replaced predecessor block@102 with block@63 in block@106
debug: Merged linear block@102 into block@63
debug: Replaced predecessor block@106 with block@63 in block@110
debug: Merged linear block@106 into block@63
debug: Replaced predecessor block@110 with block@63 in block@114
debug: Merged linear block@110 into block@63
debug: Replaced predecessor block@114 with block@63 in block@118
debug: Merged linear block@114 into block@63
debug: Replaced predecessor block@118 with block@63 in block@122
debug: Merged linear block@118 into block@63
debug: Replaced predecessor block@122 with block@63 in block@126
debug: Merged linear block@122 into block@63
debug: Replaced predecessor block@126 with block@63 in block@130
debug: Merged linear block@126 into block@63
debug: Replaced predecessor block@130 with block@63 in block@134
debug: Merged linear block@130 into block@63
debug: Replaced predecessor block@134 with block@63 in block@138
debug: Merged linear block@134 into block@63
debug: Replaced predecessor block@138 with block@63 in block@143
debug: Merged linear block@138 into block@63
debug: Replaced predecessor block@143 with block@63 in block@147
debug: Merged linear block@143 into block@63
debug: Replaced predecessor block@147 with block@63 in block@151
debug: Merged linear block@147 into block@63
debug: Replaced predecessor block@151 with block@63 in block@155
debug: Merged linear block@151 into block@63
debug: Replaced predecessor block@155 with block@63 in block@159
debug: Merged linear block@155 into block@63
debug: Replaced predecessor block@159 with block@63 in block@163
debug: Merged linear block@159 into block@63
debug: Replaced predecessor block@163 with block@63 in block@167
debug: Merged linear block@163 into block@63
debug: Merged linear block@167 into block@63
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Removing unreachable block: block@28
debug: Removing unreachable block: block@33
debug: Removing unreachable block: block@39
debug: Removing unreachable block: block@54
debug: Removing unreachable block: block@57
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Begin optimization pass 4/100
debug: Optimizing subroutine test_cases.contains.contract.MyContract.approval_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable tmp%2#0
debug: Removing unused variable tmp%9#0
debug: Removing unused variable tmp%8#1
debug: Removing unused variable tmp%13#0
debug: Removing unused variable or_result%2#0
debug: Removing unused variable or_result%2#2
debug: Removing unused variable or_result%3#0
debug: Removing unused variable or_result%3#2
debug: Removing unused variable tmp%28#0
debug: Removing unused variable or_result%4#1
debug: Removing unused variable or_result%4#2
debug: Removing unused variable tmp%35#0
debug: Removing unused variable tmp%51#0
debug: Removing unused variable or_result%7#0
debug: Removing unused variable or_result%7#2
debug: Removing unused variable or_result%8#1
debug: Removing unused variable or_result%8#2
debug: Removing unused variable tmp%66#0
debug: Removing unused variable tmp%7#2
debug: Removing unused variable tmp%52#1
debug: Removing unused variable tmp%57#1
debug: Removing unused variable tmp%62#1
debug: Removing unused variable tmp%67#1
debug: Removing unused variable tmp%72#0
debug: Removing unused variable tmp%77#0
debug: Removing unused variable tmp%82#0
debug: Removing unused variable tmp%87#0
debug: Removing unused variable tmp%127#0
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (! 0u) to 1u
debug: Simplified (! 0u) to 1u
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Replaced predecessor block@32 with block@0 in block@37
debug: Merged linear block@32 into block@0
debug: Replaced predecessor block@37 with block@0 in block@41
debug: Merged linear block@37 into block@0
debug: Replaced predecessor block@41 with block@0 in block@42
debug: Replaced predecessor block@41 with block@0 in block@43
debug: Merged linear block@41 into block@0
debug: Replaced predecessor block@55 with block@53 in block@59
debug: Merged linear block@55 into block@53
debug: Replaced predecessor block@59 with block@53 in block@60
debug: Replaced predecessor block@59 with block@53 in block@61
debug: Merged linear block@59 into block@53
debug: Optimizer: Remove Linear Jumps
debug: Removing jump block block@51
debug: branching to block@51 will be replaced with block@53
debug: replaced goto tmp%33#0 ? block@53 : block@53 with goto block@53
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Begin optimization pass 5/100
debug: Optimizing subroutine test_cases.contains.contract.MyContract.approval_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable tmp%30#0
debug: Removing unused variable tmp%60#0
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Replaced predecessor block@53 with block@45 in block@60
debug: Replaced predecessor block@53 with block@45 in block@61
debug: Merged linear block@53 into block@45
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Begin optimization pass 6/100
debug: Optimizing subroutine test_cases.contains.contract.MyContract.approval_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: No optimizations performed in pass 6, ending loop
debug: optimizing clear program of test_cases.contains.contract.MyContract at level 2
debug: Begin optimization pass 1/100
debug: Optimizing subroutine test_cases.contains.contract.MyContract.clear_state_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: No optimizations performed in pass 1, ending loop
debug: lowering array IR nodes in approval program of test_cases.contains.contract.MyContract
debug: lowering array IR nodes in clear program of test_cases.contains.contract.MyContract
debug: optimizing approval program of test_cases.contains.contract.MyContract at level 2
debug: Begin optimization pass 1/100
debug: Optimizing subroutine test_cases.contains.contract.MyContract.approval_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: aggregate%encoded_value%0#0, aggregate%as_Encoded(len+utf8[])%0#0, tmp%0#21
debug: selected aggregate%encoded_value%0#0 from equivalence set
debug: Found equivalence set: aggregate%encoded_value%1#0, aggregate%as_Encoded(len+utf8[])%1#0, tmp%0#19
debug: selected aggregate%encoded_value%1#0 from equivalence set
debug: Copy propagation made 2 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (len "foo") to 3u
debug: Simplified ((extract 6 2) aggregate%as_bytes%0#0) to 0x0003
debug: Simplified (concat 0x0003 "foo") to 0x0003666f6f
debug: Simplified (len "bar") to 3u
debug: Simplified ((extract 6 2) aggregate%as_bytes%1#0) to 0x0003
debug: Simplified (concat 0x0003 "bar") to 0x0003626172
debug: Simplified (== 0x0003666f6f 0x0003626172) to 0u
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: simplifying conditional branch with a constant into a goto
debug: simplified terminator of block@0 from goto 0u ? block@43 : block@42 to goto block@42
debug: simplifying conditional branch with a constant into a goto
debug: simplified terminator of block@45 from goto 0u ? block@61 : block@60 to goto block@60
debug: Optimizer: Merge Blocks
debug: Replaced predecessor block@42 with block@0 in block@45
debug: Merged linear block@42 into block@0
debug: Replaced predecessor block@60 with block@45 in block@63
debug: Merged linear block@60 into block@45
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Removing unreachable block: block@43
debug: Removing unreachable block: block@61
debug: Optimizer: Repeated Expression Elimination
debug: Replacing redundant declaration let aggregate%as_bytes%1#0: bytes[8] = (itob 3u) with copy of existing registers [Register(source_location=contains/contract.py:174:11-29, ir_type=bytes[8], name='aggregate%as_bytes%0', version=0)]
debug: Found equivalence set: aggregate%as_bytes%0#0, aggregate%as_bytes%1#0
debug: selected aggregate%as_bytes%0#0 from equivalence set
debug: Found equivalence set: or_result%5#1, or_result%5#2
debug: selected or_result%5#1 from equivalence set
debug: Found equivalence set: or_result%9#1, or_result%9#2
debug: selected or_result%9#1 from equivalence set
debug: Copy propagation made 2 modifications
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Begin optimization pass 2/100
debug: Optimizing subroutine test_cases.contains.contract.MyContract.approval_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable aggregate%length%0#0
debug: Removing unused variable aggregate%as_bytes%0#0
debug: Removing unused variable aggregate%length_uint16%0#0
debug: Removing unused variable aggregate%encoded_value%0#0
debug: Removing unused variable aggregate%length%1#0
debug: Removing unused variable aggregate%length_uint16%1#0
debug: Removing unused variable aggregate%encoded_value%1#0
debug: Removing unused variable tmp%33#0
debug: Removing unused variable or_result%5#1
debug: Removing unused variable or_result%9#1
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (! 0u) to 1u
debug: Simplified (! 0u) to 1u
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Replaced predecessor block@45 with block@0 in block@63
debug: Merged linear block@45 into block@0
debug: Merged linear block@63 into block@0
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Begin optimization pass 3/100
debug: Optimizing subroutine test_cases.contains.contract.MyContract.approval_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable tmp%36#0
debug: Removing unused variable tmp%67#0
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Begin optimization pass 4/100
debug: Optimizing subroutine test_cases.contains.contract.MyContract.approval_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: No optimizations performed in pass 4, ending loop
debug: optimizing clear program of test_cases.contains.contract.MyContract at level 2
debug: Begin optimization pass 1/100
debug: Optimizing subroutine test_cases.contains.contract.MyContract.clear_state_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Merge Blocks
debug: Optimizer: Remove Linear Jumps
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: No optimizations performed in pass 1, ending loop
debug: removing local static slots in approval program of test_cases.contains.contract.MyContract
contains/contract.py:7 debug: auto reserving slots in test_cases.contains.contract.MyContract.approval_program, []
debug: Slot allocation not required
debug: removing local static slots in clear program of test_cases.contains.contract.MyContract
contains/contract.py:39 debug: auto reserving slots in test_cases.contains.contract.MyContract.clear_state_program, []
debug: Slot allocation not required
debug: Performing SSA IR destructuring for test_cases.contains.contract.MyContract.approval_program
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in test_cases.contains.contract.MyContract.approval_program using strategy 'root_operand'
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in test_cases.contains.contract.MyContract.approval_program
debug: Performing post-SSA optimizations at level 2
debug: Output IR to contains/out_O2/MyContract.ir/MyContract.approval.400.destructured.ir
debug: Performing SSA IR destructuring for test_cases.contains.contract.MyContract.clear_state_program
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in test_cases.contains.contract.MyContract.clear_state_program using strategy 'root_operand'
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in test_cases.contains.contract.MyContract.clear_state_program
debug: Performing post-SSA optimizations at level 2
debug: Output IR to contains/out_O2/MyContract.ir/MyContract.clear.400.destructured.ir
contains/contract.py:7 debug: optimizing TEAL subroutine ops test_cases.contains.contract.MyContract.approval_program() -> uint64:
contains/contract.py:7 debug: optimizing TEAL subroutine blocks test_cases.contains.contract.MyContract.approval_program() -> uint64:
debug: inlining single reference block main_block@0 into main
contains/contract.py:39 debug: optimizing TEAL subroutine ops test_cases.contains.contract.MyContract.clear_state_program() -> uint64:
contains/contract.py:39 debug: optimizing TEAL subroutine blocks test_cases.contains.contract.MyContract.clear_state_program() -> uint64:
debug: inlining single reference block main_block@0 into main
info: Writing contains/out_O2/MyContract.approval.teal
info: Writing contains/out_O2/MyContract.clear.teal
info: Writing contains/out_O2/MyContract.approval.bin
info: Writing contains/out_O2/MyContract.clear.bin
info: Writing contains/out_O2/MyContract.approval.stats.txt
info: Writing contains/out_O2/MyContract.clear.stats.txt
info: Writing contains/out_O2/MyContract.approval.puya.map
info: Writing contains/out_O2/MyContract.clear.puya.map