debug: PuyaOptions(paths=['contains'], output_teal=True, output_arc32=True, output_client=True, output_awst=True, output_ssa_ir=True, output_optimization_ir=True, output_destructured_ir=True, output_memory_ir=True, output_bytecode=True, match_algod_bytecode=False, debug_level=1, optimization_level=1, log_level=<LogLevel.debug: 10>, target_avm_version=10, cli_template_definitions=[], template_vars_prefix='TMPL_', locals_coalescing_strategy=<LocalsCoalescingStrategy.root_operand: 'root_operand'>)
info: Found python prefix: <git root>/.venv
debug: Sealing block@0: // L4
debug: Terminated block@0: // L4
debug: Looking for 'start' in an unsealed block creating an incomplete Phi: block@1: // while_top_L11
debug: Created Phi assignment: let start#1: uint64 = undefined while trying to resolve 'start' in block@1: // while_top_L11
debug: Looking for 'item' in an unsealed block creating an incomplete Phi: block@1: // while_top_L11
debug: Created Phi assignment: let item#1: bytes = undefined while trying to resolve 'item' in block@1: // while_top_L11
debug: Looking for 'sequence' in an unsealed block creating an incomplete Phi: block@1: // while_top_L11
debug: Created Phi assignment: let sequence#1: bytes = undefined while trying to resolve 'sequence' in block@1: // while_top_L11
debug: Terminated block@1: // while_top_L11
debug: Sealing block@2: // while_body_L12
debug: Terminated block@2: // while_body_L12
debug: Sealing block@3: // if_body_L13
debug: Terminated block@3: // if_body_L13
debug: Sealing block@4: // after_if_else_L12
debug: Terminated block@4: // after_if_else_L12
debug: Sealing block@1: // while_top_L11
debug: Added start#0 to Phi node: let start#1: uint64 = φ(start#0 <- block@0) in block@0: // L4
debug: Added start#2 to Phi node: let start#1: uint64 = φ(start#0 <- block@0, start#2 <- block@4) in block@4: // after_if_else_L12
debug: Added item#0 to Phi node: let item#1: bytes = φ(item#0 <- block@0) in block@0: // L4
debug: Added item#1 to Phi node: let item#1: bytes = φ(item#0 <- block@0, item#1 <- block@4) in block@4: // after_if_else_L12
debug: Replacing trivial Phi node: let item#1: bytes = φ(item#0 <- block@0, item#1 <- block@4) (item#1) with item#0
debug: Deleting Phi assignment: let item#1: bytes = φ(item#0 <- block@0, item#1 <- block@4)
debug: Replaced trivial Phi node: let item#1: bytes = φ(item#0 <- block@0, item#1 <- block@4) (item#1) with item#0 in current definition for 3 blocks
debug: Added sequence#0 to Phi node: let sequence#1: bytes = φ(sequence#0 <- block@0) in block@0: // L4
debug: Added sequence#1 to Phi node: let sequence#1: bytes = φ(sequence#0 <- block@0, sequence#1 <- block@4) in block@4: // after_if_else_L12
debug: Replacing trivial Phi node: let sequence#1: bytes = φ(sequence#0 <- block@0, sequence#1 <- block@4) (sequence#1) with sequence#0
debug: Deleting Phi assignment: let sequence#1: bytes = φ(sequence#0 <- block@0, sequence#1 <- block@4)
debug: Replaced trivial Phi node: let sequence#1: bytes = φ(sequence#0 <- block@0, sequence#1 <- block@4) (sequence#1) with sequence#0 in current definition for 3 blocks
debug: Sealing block@5: // after_while_L11
debug: Terminated block@5: // after_while_L11
debug: Sealing block@0: // L25
debug: Terminated block@0: // L25
debug: Sealing block@0: // L44
debug: Terminated block@0: // L44
debug: Sealing block@0: // L62
debug: Terminated block@0: // L62
debug: Sealing block@0: // L92
debug: Terminated block@0: // L92
debug: Looking for 'head_offset' in an unsealed block creating an incomplete Phi: block@1: // for_header_L110
debug: Created Phi assignment: let head_offset#1: uint64 = undefined while trying to resolve 'head_offset' in block@1: // for_header_L110
debug: Terminated block@1: // for_header_L110
debug: Sealing block@2: // for_body_L111
debug: Looking for 'head_and_tail' in an unsealed block creating an incomplete Phi: block@1: // for_header_L110
debug: Created Phi assignment: let head_and_tail#1: bytes = undefined while trying to resolve 'head_and_tail' in block@1: // for_header_L110
debug: Looking for 'new_head' in an unsealed block creating an incomplete Phi: block@1: // for_header_L110
debug: Created Phi assignment: let new_head#1: bytes = undefined while trying to resolve 'new_head' in block@1: // for_header_L110
debug: Terminated block@2: // for_body_L111
debug: Sealing block@3: // for_footer_L110
debug: Terminated block@3: // for_footer_L110
debug: Sealing block@1: // for_header_L110
debug: Added head_offset#0 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0) in block@0: // L92
debug: Added head_offset#2 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0, head_offset#2 <- block@3) in block@3: // for_footer_L110
debug: Added head_and_tail#0 to Phi node: let head_and_tail#1: bytes = φ(head_and_tail#0 <- block@0) in block@0: // L92
debug: Added head_and_tail#1 to Phi node: let head_and_tail#1: bytes = φ(head_and_tail#0 <- block@0, head_and_tail#1 <- block@3) in block@3: // for_footer_L110
debug: Replacing trivial Phi node: let head_and_tail#1: bytes = φ(head_and_tail#0 <- block@0, head_and_tail#1 <- block@3) (head_and_tail#1) with head_and_tail#0
debug: Deleting Phi assignment: let head_and_tail#1: bytes = φ(head_and_tail#0 <- block@0, head_and_tail#1 <- block@3)
debug: Replaced trivial Phi node: let head_and_tail#1: bytes = φ(head_and_tail#0 <- block@0, head_and_tail#1 <- block@3) (head_and_tail#1) with head_and_tail#0 in current definition for 3 blocks
debug: Added new_head#0 to Phi node: let new_head#1: bytes = φ(new_head#0 <- block@0) in block@0: // L92
debug: Added new_head#2 to Phi node: let new_head#1: bytes = φ(new_head#0 <- block@0, new_head#2 <- block@3) in block@3: // for_footer_L110
debug: Sealing block@4: // after_for_L110
debug: Created Phi assignment: let length_minus_1#1: uint64 = undefined while trying to resolve 'length_minus_1' in block@1: // for_header_L110
debug: Added length_minus_1#0 to Phi node: let length_minus_1#1: uint64 = φ(length_minus_1#0 <- block@0) in block@0: // L92
debug: Added length_minus_1#1 to Phi node: let length_minus_1#1: uint64 = φ(length_minus_1#0 <- block@0, length_minus_1#1 <- block@3) in block@3: // for_footer_L110
debug: Replacing trivial Phi node: let length_minus_1#1: uint64 = φ(length_minus_1#0 <- block@0, length_minus_1#1 <- block@3) (length_minus_1#1) with length_minus_1#0
debug: Deleting Phi assignment: let length_minus_1#1: uint64 = φ(length_minus_1#0 <- block@0, length_minus_1#1 <- block@3)
debug: Replaced trivial Phi node: let length_minus_1#1: uint64 = φ(length_minus_1#0 <- block@0, length_minus_1#1 <- block@3) (length_minus_1#1) with length_minus_1#0 in current definition for 3 blocks
debug: Created Phi assignment: let popped_header_offset#1: uint64 = undefined while trying to resolve 'popped_header_offset' in block@1: // for_header_L110
debug: Added popped_header_offset#0 to Phi node: let popped_header_offset#1: uint64 = φ(popped_header_offset#0 <- block@0) in block@0: // L92
debug: Added popped_header_offset#1 to Phi node: let popped_header_offset#1: uint64 = φ(popped_header_offset#0 <- block@0, popped_header_offset#1 <- block@3) in block@3: // for_footer_L110
debug: Replacing trivial Phi node: let popped_header_offset#1: uint64 = φ(popped_header_offset#0 <- block@0, popped_header_offset#1 <- block@3) (popped_header_offset#1) with popped_header_offset#0
debug: Deleting Phi assignment: let popped_header_offset#1: uint64 = φ(popped_header_offset#0 <- block@0, popped_header_offset#1 <- block@3)
debug: Replaced trivial Phi node: let popped_header_offset#1: uint64 = φ(popped_header_offset#0 <- block@0, popped_header_offset#1 <- block@3) (popped_header_offset#1) with popped_header_offset#0 in current definition for 3 blocks
debug: Created Phi assignment: let popped_offset#1: uint64 = undefined while trying to resolve 'popped_offset' in block@1: // for_header_L110
debug: Added popped_offset#0 to Phi node: let popped_offset#1: uint64 = φ(popped_offset#0 <- block@0) in block@0: // L92
debug: Added popped_offset#1 to Phi node: let popped_offset#1: uint64 = φ(popped_offset#0 <- block@0, popped_offset#1 <- block@3) in block@3: // for_footer_L110
debug: Replacing trivial Phi node: let popped_offset#1: uint64 = φ(popped_offset#0 <- block@0, popped_offset#1 <- block@3) (popped_offset#1) with popped_offset#0
debug: Deleting Phi assignment: let popped_offset#1: uint64 = φ(popped_offset#0 <- block@0, popped_offset#1 <- block@3)
debug: Replaced trivial Phi node: let popped_offset#1: uint64 = φ(popped_offset#0 <- block@0, popped_offset#1 <- block@3) (popped_offset#1) with popped_offset#0 in current definition for 3 blocks
debug: Created Phi assignment: let popped#1: bytes = undefined while trying to resolve 'popped' in block@1: // for_header_L110
debug: Added popped#0 to Phi node: let popped#1: bytes = φ(popped#0 <- block@0) in block@0: // L92
debug: Added popped#1 to Phi node: let popped#1: bytes = φ(popped#0 <- block@0, popped#1 <- block@3) in block@3: // for_footer_L110
debug: Replacing trivial Phi node: let popped#1: bytes = φ(popped#0 <- block@0, popped#1 <- block@3) (popped#1) with popped#0
debug: Deleting Phi assignment: let popped#1: bytes = φ(popped#0 <- block@0, popped#1 <- block@3)
debug: Replaced trivial Phi node: let popped#1: bytes = φ(popped#0 <- block@0, popped#1 <- block@3) (popped#1) with popped#0 in current definition for 3 blocks
debug: Terminated block@4: // after_for_L110
debug: Sealing block@0: // L124
debug: Terminated block@0: // L124
debug: Sealing block@1: // if_body_L147
debug: Terminated block@1: // if_body_L147
debug: Sealing block@2: // after_if_else_L146
debug: Created Phi assignment: let array_length#1: uint64 = undefined while trying to resolve 'array_length' in block@2: // after_if_else_L146
debug: Added array_length#0 to Phi node: let array_length#1: uint64 = φ(array_length#0 <- block@0) in block@0: // L124
debug: Added array_length#0 to Phi node: let array_length#1: uint64 = φ(array_length#0 <- block@0, array_length#0 <- block@1) in block@1: // if_body_L147
debug: Replacing trivial Phi node: let array_length#1: uint64 = φ(array_length#0 <- block@0, array_length#0 <- block@1) (array_length#1) with array_length#0
debug: Deleting Phi assignment: let array_length#1: uint64 = φ(array_length#0 <- block@0, array_length#0 <- block@1)
debug: Replaced trivial Phi node: let array_length#1: uint64 = φ(array_length#0 <- block@0, array_length#0 <- block@1) (array_length#1) with array_length#0 in current definition for 1 blocks
debug: Created Phi assignment: let is_packed#1: bool = undefined while trying to resolve 'is_packed' in block@2: // after_if_else_L146
debug: Added is_packed#0 to Phi node: let is_packed#1: bool = φ(is_packed#0 <- block@0) in block@0: // L124
debug: Added is_packed#0 to Phi node: let is_packed#1: bool = φ(is_packed#0 <- block@0, is_packed#0 <- block@1) in block@1: // if_body_L147
debug: Replacing trivial Phi node: let is_packed#1: bool = φ(is_packed#0 <- block@0, is_packed#0 <- block@1) (is_packed#1) with is_packed#0
debug: Deleting Phi assignment: let is_packed#1: bool = φ(is_packed#0 <- block@0, is_packed#0 <- block@1)
debug: Replaced trivial Phi node: let is_packed#1: bool = φ(is_packed#0 <- block@0, is_packed#0 <- block@1) (is_packed#1) with is_packed#0 in current definition for 1 blocks
debug: Created Phi assignment: let new_items_count#1: uint64 = undefined while trying to resolve 'new_items_count' in block@2: // after_if_else_L146
debug: Added new_items_count#0 to Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0) in block@0: // L124
debug: Added new_items_count#0 to Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#0 <- block@1) in block@1: // if_body_L147
debug: Replacing trivial Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#0 <- block@1) (new_items_count#1) with new_items_count#0
debug: Deleting Phi assignment: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#0 <- block@1)
debug: Replaced trivial Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#0 <- block@1) (new_items_count#1) with new_items_count#0 in current definition for 1 blocks
debug: Terminated block@2: // after_if_else_L146
debug: Looking for 'i' in an unsealed block creating an incomplete Phi: block@3: // for_header_L150
debug: Created Phi assignment: let i#1: uint64 = undefined while trying to resolve 'i' in block@3: // for_header_L150
debug: Terminated block@3: // for_header_L150
debug: Sealing block@4: // for_body_L151
debug: Looking for 'result' in an unsealed block creating an incomplete Phi: block@3: // for_header_L150
debug: Created Phi assignment: let result#2: bytes = undefined while trying to resolve 'result' in block@3: // for_header_L150
debug: Looking for 'write_offset' in an unsealed block creating an incomplete Phi: block@3: // for_header_L150
debug: Created Phi assignment: let write_offset#1: uint64 = undefined while trying to resolve 'write_offset' in block@3: // for_header_L150
debug: Looking for 'new_items_bytes' in an unsealed block creating an incomplete Phi: block@3: // for_header_L150
debug: Created Phi assignment: let new_items_bytes#1: bytes = undefined while trying to resolve 'new_items_bytes' in block@3: // for_header_L150
debug: Terminated block@4: // for_body_L151
debug: Sealing block@5: // for_footer_L150
debug: Terminated block@5: // for_footer_L150
debug: Sealing block@3: // for_header_L150
debug: Added i#0 to Phi node: let i#1: uint64 = φ(i#0 <- block@2) in block@2: // after_if_else_L146
debug: Added i#2 to Phi node: let i#1: uint64 = φ(i#0 <- block@2, i#2 <- block@5) in block@5: // for_footer_L150
debug: Created Phi assignment: let result#4: bytes = undefined while trying to resolve 'result' in block@2: // after_if_else_L146
debug: Added result#0 to Phi node: let result#4: bytes = φ(result#0 <- block@0) in block@0: // L124
debug: Added result#1 to Phi node: let result#4: bytes = φ(result#0 <- block@0, result#1 <- block@1) in block@1: // if_body_L147
debug: Added result#4 to Phi node: let result#2: bytes = φ(result#4 <- block@2) in block@2: // after_if_else_L146
debug: Added result#3 to Phi node: let result#2: bytes = φ(result#4 <- block@2, result#3 <- block@5) in block@5: // for_footer_L150
debug: Added write_offset#0 to Phi node: let write_offset#1: uint64 = φ(write_offset#0 <- block@2) in block@2: // after_if_else_L146
debug: Added write_offset#2 to Phi node: let write_offset#1: uint64 = φ(write_offset#0 <- block@2, write_offset#2 <- block@5) in block@5: // for_footer_L150
debug: Created Phi assignment: let new_items_bytes#2: bytes = undefined while trying to resolve 'new_items_bytes' in block@2: // after_if_else_L146
debug: Added new_items_bytes#0 to Phi node: let new_items_bytes#2: bytes = φ(new_items_bytes#0 <- block@0) in block@0: // L124
debug: Added new_items_bytes#0 to Phi node: let new_items_bytes#2: bytes = φ(new_items_bytes#0 <- block@0, new_items_bytes#0 <- block@1) in block@1: // if_body_L147
debug: Replacing trivial Phi node: let new_items_bytes#2: bytes = φ(new_items_bytes#0 <- block@0, new_items_bytes#0 <- block@1) (new_items_bytes#2) with new_items_bytes#0
debug: Deleting Phi assignment: let new_items_bytes#2: bytes = φ(new_items_bytes#0 <- block@0, new_items_bytes#0 <- block@1)
debug: Replaced trivial Phi node: let new_items_bytes#2: bytes = φ(new_items_bytes#0 <- block@0, new_items_bytes#0 <- block@1) (new_items_bytes#2) with new_items_bytes#0 in current definition for 1 blocks
debug: Added new_items_bytes#0 to Phi node: let new_items_bytes#1: bytes = φ(new_items_bytes#0 <- block@2) in block@2: // after_if_else_L146
debug: Added new_items_bytes#1 to Phi node: let new_items_bytes#1: bytes = φ(new_items_bytes#0 <- block@2, new_items_bytes#1 <- block@5) in block@5: // for_footer_L150
debug: Replacing trivial Phi node: let new_items_bytes#1: bytes = φ(new_items_bytes#0 <- block@2, new_items_bytes#1 <- block@5) (new_items_bytes#1) with new_items_bytes#0
debug: Deleting Phi assignment: let new_items_bytes#1: bytes = φ(new_items_bytes#0 <- block@2, new_items_bytes#1 <- block@5)
debug: Replaced trivial Phi node: let new_items_bytes#1: bytes = φ(new_items_bytes#0 <- block@2, new_items_bytes#1 <- block@5) (new_items_bytes#1) with new_items_bytes#0 in current definition for 3 blocks
debug: Sealing block@6: // after_for_L150
debug: Terminated block@6: // after_for_L150
debug: Sealing block@0: // L157
debug: Terminated block@0: // L157
debug: Sealing block@0: // L189
debug: Terminated block@0: // L189
debug: Looking for 'head_offset' in an unsealed block creating an incomplete Phi: block@1: // for_header_L199
debug: Created Phi assignment: let head_offset#1: uint64 = undefined while trying to resolve 'head_offset' in block@1: // for_header_L199
debug: Terminated block@1: // for_header_L199
debug: Sealing block@2: // for_body_L200
debug: Looking for 'array_head_and_tail' in an unsealed block creating an incomplete Phi: block@1: // for_header_L199
debug: Created Phi assignment: let array_head_and_tail#1: bytes = undefined while trying to resolve 'array_head_and_tail' in block@1: // for_header_L199
debug: Looking for 'new_head' in an unsealed block creating an incomplete Phi: block@1: // for_header_L199
debug: Created Phi assignment: let new_head#1: bytes = undefined while trying to resolve 'new_head' in block@1: // for_header_L199
debug: Looking for 'item_offset_adjustment' in an unsealed block creating an incomplete Phi: block@1: // for_header_L199
debug: Created Phi assignment: let item_offset_adjustment#1: uint64 = undefined while trying to resolve 'item_offset_adjustment' in block@1: // for_header_L199
debug: Terminated block@2: // for_body_L200
debug: Sealing block@3: // for_footer_L199
debug: Terminated block@3: // for_footer_L199
debug: Sealing block@1: // for_header_L199
debug: Added head_offset#0 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0) in block@0: // L189
debug: Added head_offset#2 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0, head_offset#2 <- block@3) in block@3: // for_footer_L199
debug: Added array_head_and_tail#0 to Phi node: let array_head_and_tail#1: bytes = φ(array_head_and_tail#0 <- block@0) in block@0: // L189
debug: Added array_head_and_tail#1 to Phi node: let array_head_and_tail#1: bytes = φ(array_head_and_tail#0 <- block@0, array_head_and_tail#1 <- block@3) in block@3: // for_footer_L199
debug: Replacing trivial Phi node: let array_head_and_tail#1: bytes = φ(array_head_and_tail#0 <- block@0, array_head_and_tail#1 <- block@3) (array_head_and_tail#1) with array_head_and_tail#0
debug: Deleting Phi assignment: let array_head_and_tail#1: bytes = φ(array_head_and_tail#0 <- block@0, array_head_and_tail#1 <- block@3)
debug: Replaced trivial Phi node: let array_head_and_tail#1: bytes = φ(array_head_and_tail#0 <- block@0, array_head_and_tail#1 <- block@3) (array_head_and_tail#1) with array_head_and_tail#0 in current definition for 3 blocks
debug: Added new_head#0 to Phi node: let new_head#1: bytes = φ(new_head#0 <- block@0) in block@0: // L189
debug: Added new_head#2 to Phi node: let new_head#1: bytes = φ(new_head#0 <- block@0, new_head#2 <- block@3) in block@3: // for_footer_L199
debug: Added item_offset_adjustment#0 to Phi node: let item_offset_adjustment#1: uint64 = φ(item_offset_adjustment#0 <- block@0) in block@0: // L189
debug: Added item_offset_adjustment#1 to Phi node: let item_offset_adjustment#1: uint64 = φ(item_offset_adjustment#0 <- block@0, item_offset_adjustment#1 <- block@3) in block@3: // for_footer_L199
debug: Replacing trivial Phi node: let item_offset_adjustment#1: uint64 = φ(item_offset_adjustment#0 <- block@0, item_offset_adjustment#1 <- block@3) (item_offset_adjustment#1) with item_offset_adjustment#0
debug: Deleting Phi assignment: let item_offset_adjustment#1: uint64 = φ(item_offset_adjustment#0 <- block@0, item_offset_adjustment#1 <- block@3)
debug: Replaced trivial Phi node: let item_offset_adjustment#1: uint64 = φ(item_offset_adjustment#0 <- block@0, item_offset_adjustment#1 <- block@3) (item_offset_adjustment#1) with item_offset_adjustment#0 in current definition for 3 blocks
debug: Sealing block@4: // after_for_L199
debug: Created Phi assignment: let new_items_count#1: uint64 = undefined while trying to resolve 'new_items_count' in block@1: // for_header_L199
debug: Added new_items_count#0 to Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0) in block@0: // L189
debug: Added new_items_count#1 to Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#1 <- block@3) in block@3: // for_footer_L199
debug: Replacing trivial Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#1 <- block@3) (new_items_count#1) with new_items_count#0
debug: Deleting Phi assignment: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#1 <- block@3)
debug: Replaced trivial Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#1 <- block@3) (new_items_count#1) with new_items_count#0 in current definition for 3 blocks
debug: Terminated block@4: // after_for_L199
debug: Looking for 'head_offset' in an unsealed block creating an incomplete Phi: block@5: // for_header_L204
debug: Created Phi assignment: let head_offset#4: uint64 = undefined while trying to resolve 'head_offset' in block@5: // for_header_L204
debug: Terminated block@5: // for_header_L204
debug: Sealing block@6: // for_body_L205
debug: Looking for 'new_head_and_tail' in an unsealed block creating an incomplete Phi: block@5: // for_header_L204
debug: Created Phi assignment: let new_head_and_tail#1: bytes = undefined while trying to resolve 'new_head_and_tail' in block@5: // for_header_L204
debug: Looking for 'new_head' in an unsealed block creating an incomplete Phi: block@5: // for_header_L204
debug: Created Phi assignment: let new_head#3: bytes = undefined while trying to resolve 'new_head' in block@5: // for_header_L204
debug: Looking for 'item_offset_adjustment' in an unsealed block creating an incomplete Phi: block@5: // for_header_L204
debug: Created Phi assignment: let item_offset_adjustment#3: uint64 = undefined while trying to resolve 'item_offset_adjustment' in block@5: // for_header_L204
debug: Terminated block@6: // for_body_L205
debug: Sealing block@7: // for_footer_L204
debug: Terminated block@7: // for_footer_L204
debug: Sealing block@5: // for_header_L204
debug: Added head_offset#3 to Phi node: let head_offset#4: uint64 = φ(head_offset#3 <- block@4) in block@4: // after_for_L199
debug: Added head_offset#5 to Phi node: let head_offset#4: uint64 = φ(head_offset#3 <- block@4, head_offset#5 <- block@7) in block@7: // for_footer_L204
debug: Created Phi assignment: let new_head_and_tail#2: bytes = undefined while trying to resolve 'new_head_and_tail' in block@1: // for_header_L199
debug: Added new_head_and_tail#0 to Phi node: let new_head_and_tail#2: bytes = φ(new_head_and_tail#0 <- block@0) in block@0: // L189
debug: Added new_head_and_tail#2 to Phi node: let new_head_and_tail#2: bytes = φ(new_head_and_tail#0 <- block@0, new_head_and_tail#2 <- block@3) in block@3: // for_footer_L199
debug: Replacing trivial Phi node: let new_head_and_tail#2: bytes = φ(new_head_and_tail#0 <- block@0, new_head_and_tail#2 <- block@3) (new_head_and_tail#2) with new_head_and_tail#0
debug: Deleting Phi assignment: let new_head_and_tail#2: bytes = φ(new_head_and_tail#0 <- block@0, new_head_and_tail#2 <- block@3)
debug: Replaced trivial Phi node: let new_head_and_tail#2: bytes = φ(new_head_and_tail#0 <- block@0, new_head_and_tail#2 <- block@3) (new_head_and_tail#2) with new_head_and_tail#0 in current definition for 3 blocks
debug: Added new_head_and_tail#0 to Phi node: let new_head_and_tail#1: bytes = φ(new_head_and_tail#0 <- block@4) in block@4: // after_for_L199
debug: Added new_head_and_tail#1 to Phi node: let new_head_and_tail#1: bytes = φ(new_head_and_tail#0 <- block@4, new_head_and_tail#1 <- block@7) in block@7: // for_footer_L204
debug: Replacing trivial Phi node: let new_head_and_tail#1: bytes = φ(new_head_and_tail#0 <- block@4, new_head_and_tail#1 <- block@7) (new_head_and_tail#1) with new_head_and_tail#0
debug: Deleting Phi assignment: let new_head_and_tail#1: bytes = φ(new_head_and_tail#0 <- block@4, new_head_and_tail#1 <- block@7)
debug: Replaced trivial Phi node: let new_head_and_tail#1: bytes = φ(new_head_and_tail#0 <- block@4, new_head_and_tail#1 <- block@7) (new_head_and_tail#1) with new_head_and_tail#0 in current definition for 3 blocks
debug: Added new_head#1 to Phi node: let new_head#3: bytes = φ(new_head#1 <- block@4) in block@4: // after_for_L199
debug: Added new_head#4 to Phi node: let new_head#3: bytes = φ(new_head#1 <- block@4, new_head#4 <- block@7) in block@7: // for_footer_L204
debug: Added item_offset_adjustment#2 to Phi node: let item_offset_adjustment#3: uint64 = φ(item_offset_adjustment#2 <- block@4) in block@4: // after_for_L199
debug: Added item_offset_adjustment#3 to Phi node: let item_offset_adjustment#3: uint64 = φ(item_offset_adjustment#2 <- block@4, item_offset_adjustment#3 <- block@7) in block@7: // for_footer_L204
debug: Replacing trivial Phi node: let item_offset_adjustment#3: uint64 = φ(item_offset_adjustment#2 <- block@4, item_offset_adjustment#3 <- block@7) (item_offset_adjustment#3) with item_offset_adjustment#2
debug: Deleting Phi assignment: let item_offset_adjustment#3: uint64 = φ(item_offset_adjustment#2 <- block@4, item_offset_adjustment#3 <- block@7)
debug: Replaced trivial Phi node: let item_offset_adjustment#3: uint64 = φ(item_offset_adjustment#2 <- block@4, item_offset_adjustment#3 <- block@7) (item_offset_adjustment#3) with item_offset_adjustment#2 in current definition for 3 blocks
debug: Sealing block@8: // after_for_L204
debug: Created Phi assignment: let array_items_count#1: uint64 = undefined while trying to resolve 'array_items_count' in block@5: // for_header_L204
debug: Created Phi assignment: let array_items_count#2: uint64 = undefined while trying to resolve 'array_items_count' in block@1: // for_header_L199
debug: Added array_items_count#0 to Phi node: let array_items_count#2: uint64 = φ(array_items_count#0 <- block@0) in block@0: // L189
debug: Added array_items_count#2 to Phi node: let array_items_count#2: uint64 = φ(array_items_count#0 <- block@0, array_items_count#2 <- block@3) in block@3: // for_footer_L199
debug: Replacing trivial Phi node: let array_items_count#2: uint64 = φ(array_items_count#0 <- block@0, array_items_count#2 <- block@3) (array_items_count#2) with array_items_count#0
debug: Deleting Phi assignment: let array_items_count#2: uint64 = φ(array_items_count#0 <- block@0, array_items_count#2 <- block@3)
debug: Replaced trivial Phi node: let array_items_count#2: uint64 = φ(array_items_count#0 <- block@0, array_items_count#2 <- block@3) (array_items_count#2) with array_items_count#0 in current definition for 3 blocks
debug: Added array_items_count#0 to Phi node: let array_items_count#1: uint64 = φ(array_items_count#0 <- block@4) in block@4: // after_for_L199
debug: Added array_items_count#1 to Phi node: let array_items_count#1: uint64 = φ(array_items_count#0 <- block@4, array_items_count#1 <- block@7) in block@7: // for_footer_L204
debug: Replacing trivial Phi node: let array_items_count#1: uint64 = φ(array_items_count#0 <- block@4, array_items_count#1 <- block@7) (array_items_count#1) with array_items_count#0
debug: Deleting Phi assignment: let array_items_count#1: uint64 = φ(array_items_count#0 <- block@4, array_items_count#1 <- block@7)
debug: Replaced trivial Phi node: let array_items_count#1: uint64 = φ(array_items_count#0 <- block@4, array_items_count#1 <- block@7) (array_items_count#1) with array_items_count#0 in current definition for 3 blocks
debug: Created Phi assignment: let new_items_count#2: uint64 = undefined while trying to resolve 'new_items_count' in block@5: // for_header_L204
debug: Added new_items_count#0 to Phi node: let new_items_count#2: uint64 = φ(new_items_count#0 <- block@4) in block@4: // after_for_L199
debug: Added new_items_count#2 to Phi node: let new_items_count#2: uint64 = φ(new_items_count#0 <- block@4, new_items_count#2 <- block@7) in block@7: // for_footer_L204
debug: Replacing trivial Phi node: let new_items_count#2: uint64 = φ(new_items_count#0 <- block@4, new_items_count#2 <- block@7) (new_items_count#2) with new_items_count#0
debug: Deleting Phi assignment: let new_items_count#2: uint64 = φ(new_items_count#0 <- block@4, new_items_count#2 <- block@7)
debug: Replaced trivial Phi node: let new_items_count#2: uint64 = φ(new_items_count#0 <- block@4, new_items_count#2 <- block@7) (new_items_count#2) with new_items_count#0 in current definition for 3 blocks
debug: Created Phi assignment: let array_head_and_tail#2: bytes = undefined while trying to resolve 'array_head_and_tail' in block@5: // for_header_L204
debug: Added array_head_and_tail#0 to Phi node: let array_head_and_tail#2: bytes = φ(array_head_and_tail#0 <- block@4) in block@4: // after_for_L199
debug: Added array_head_and_tail#2 to Phi node: let array_head_and_tail#2: bytes = φ(array_head_and_tail#0 <- block@4, array_head_and_tail#2 <- block@7) in block@7: // for_footer_L204
debug: Replacing trivial Phi node: let array_head_and_tail#2: bytes = φ(array_head_and_tail#0 <- block@4, array_head_and_tail#2 <- block@7) (array_head_and_tail#2) with array_head_and_tail#0
debug: Deleting Phi assignment: let array_head_and_tail#2: bytes = φ(array_head_and_tail#0 <- block@4, array_head_and_tail#2 <- block@7)
debug: Replaced trivial Phi node: let array_head_and_tail#2: bytes = φ(array_head_and_tail#0 <- block@4, array_head_and_tail#2 <- block@7) (array_head_and_tail#2) with array_head_and_tail#0 in current definition for 3 blocks
debug: Terminated block@8: // after_for_L204
debug: Sealing block@0: // L217
debug: Terminated block@0: // L217
debug: Sealing block@0: // L240
debug: Terminated block@0: // L240
debug: Sealing block@0: // L252
debug: Terminated block@0: // L252
debug: Looking for 'head_offset' in an unsealed block creating an incomplete Phi: block@1: // for_header_L269
debug: Created Phi assignment: let head_offset#1: uint64 = undefined while trying to resolve 'head_offset' in block@1: // for_header_L269
debug: Terminated block@1: // for_header_L269
debug: Sealing block@2: // for_body_L270
debug: Looking for 'new_head_and_tail' in an unsealed block creating an incomplete Phi: block@1: // for_header_L269
debug: Created Phi assignment: let new_head_and_tail#1: bytes = undefined while trying to resolve 'new_head_and_tail' in block@1: // for_header_L269
debug: Looking for 'new_item_length' in an unsealed block creating an incomplete Phi: block@1: // for_header_L269
debug: Created Phi assignment: let new_item_length#1: uint64 = undefined while trying to resolve 'new_item_length' in block@1: // for_header_L269
debug: Looking for 'original_item_length' in an unsealed block creating an incomplete Phi: block@1: // for_header_L269
debug: Created Phi assignment: let original_item_length#1: uint64 = undefined while trying to resolve 'original_item_length' in block@1: // for_header_L269
debug: Terminated block@2: // for_body_L270
debug: Sealing block@3: // for_footer_L269
debug: Terminated block@3: // for_footer_L269
debug: Sealing block@1: // for_header_L269
debug: Added head_offset#0 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0) in block@0: // L252
debug: Added head_offset#2 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0, head_offset#2 <- block@3) in block@3: // for_footer_L269
debug: Added new_head_and_tail#0 to Phi node: let new_head_and_tail#1: bytes = φ(new_head_and_tail#0 <- block@0) in block@0: // L252
debug: Added new_head_and_tail#2 to Phi node: let new_head_and_tail#1: bytes = φ(new_head_and_tail#0 <- block@0, new_head_and_tail#2 <- block@3) in block@3: // for_footer_L269
debug: Added new_item_length#0 to Phi node: let new_item_length#1: uint64 = φ(new_item_length#0 <- block@0) in block@0: // L252
debug: Added new_item_length#1 to Phi node: let new_item_length#1: uint64 = φ(new_item_length#0 <- block@0, new_item_length#1 <- block@3) in block@3: // for_footer_L269
debug: Replacing trivial Phi node: let new_item_length#1: uint64 = φ(new_item_length#0 <- block@0, new_item_length#1 <- block@3) (new_item_length#1) with new_item_length#0
debug: Deleting Phi assignment: let new_item_length#1: uint64 = φ(new_item_length#0 <- block@0, new_item_length#1 <- block@3)
debug: Replaced trivial Phi node: let new_item_length#1: uint64 = φ(new_item_length#0 <- block@0, new_item_length#1 <- block@3) (new_item_length#1) with new_item_length#0 in current definition for 3 blocks
debug: Added original_item_length#0 to Phi node: let original_item_length#1: uint64 = φ(original_item_length#0 <- block@0) in block@0: // L252
debug: Added original_item_length#1 to Phi node: let original_item_length#1: uint64 = φ(original_item_length#0 <- block@0, original_item_length#1 <- block@3) in block@3: // for_footer_L269
debug: Replacing trivial Phi node: let original_item_length#1: uint64 = φ(original_item_length#0 <- block@0, original_item_length#1 <- block@3) (original_item_length#1) with original_item_length#0
debug: Deleting Phi assignment: let original_item_length#1: uint64 = φ(original_item_length#0 <- block@0, original_item_length#1 <- block@3)
debug: Replaced trivial Phi node: let original_item_length#1: uint64 = φ(original_item_length#0 <- block@0, original_item_length#1 <- block@3) (original_item_length#1) with original_item_length#0 in current definition for 3 blocks
debug: Sealing block@4: // after_for_L269
debug: Terminated block@4: // after_for_L269
debug: Sealing block@0: // L278
debug: Terminated block@0: // L278
debug: Sealing block@0: // L306
debug: Terminated block@0: // L306
debug: Looking for 'head_offset' in an unsealed block creating an incomplete Phi: block@1: // for_header_L327
debug: Created Phi assignment: let head_offset#1: uint64 = undefined while trying to resolve 'head_offset' in block@1: // for_header_L327
debug: Terminated block@1: // for_header_L327
debug: Sealing block@2: // for_body_L328
debug: Looking for 'tail_offset' in an unsealed block creating an incomplete Phi: block@1: // for_header_L327
debug: Created Phi assignment: let tail_offset#1: uint64 = undefined while trying to resolve 'tail_offset' in block@1: // for_header_L327
debug: Looking for 'array_head_and_tail' in an unsealed block creating an incomplete Phi: block@1: // for_header_L327
debug: Created Phi assignment: let array_head_and_tail#1: bytes = undefined while trying to resolve 'array_head_and_tail' in block@1: // for_header_L327
debug: Terminated block@2: // for_body_L328
debug: Sealing block@3: // for_footer_L327
debug: Terminated block@3: // for_footer_L327
debug: Sealing block@1: // for_header_L327
debug: Added head_offset#0 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0) in block@0: // L306
debug: Added head_offset#3 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0, head_offset#3 <- block@3) in block@3: // for_footer_L327
debug: Added tail_offset#0 to Phi node: let tail_offset#1: uint64 = φ(tail_offset#0 <- block@0) in block@0: // L306
debug: Added tail_offset#2 to Phi node: let tail_offset#1: uint64 = φ(tail_offset#0 <- block@0, tail_offset#2 <- block@3) in block@3: // for_footer_L327
debug: Added array_head_and_tail#0 to Phi node: let array_head_and_tail#1: bytes = φ(array_head_and_tail#0 <- block@0) in block@0: // L306
debug: Added array_head_and_tail#2 to Phi node: let array_head_and_tail#1: bytes = φ(array_head_and_tail#0 <- block@0, array_head_and_tail#2 <- block@3) in block@3: // for_footer_L327
debug: Sealing block@4: // after_for_L327
debug: Terminated block@4: // after_for_L327
debug: Sealing block@0: // L11
debug: Terminated block@0: // L11
debug: Looking for 'required_budget_with_buffer' in an unsealed block creating an incomplete Phi: block@1: // while_top_L19
debug: Created Phi assignment: let required_budget_with_buffer#1: uint64 = undefined while trying to resolve 'required_budget_with_buffer' in block@1: // while_top_L19
debug: Terminated block@1: // while_top_L19
debug: Sealing block@2: // while_body_L20
debug: Looking for 'fee_source' in an unsealed block creating an incomplete Phi: block@1: // while_top_L19
debug: Created Phi assignment: let fee_source#1: uint64 = undefined while trying to resolve 'fee_source' in block@1: // while_top_L19
debug: Terminated block@2: // while_body_L20
debug: Sealing block@3: // switch_case_0_L27
debug: Terminated block@3: // switch_case_0_L27
debug: Sealing block@4: // switch_case_1_L29
debug: Terminated block@4: // switch_case_1_L29
debug: Sealing block@5: // switch_case_default_L25
debug: Terminated block@5: // switch_case_default_L25
debug: Sealing block@6: // switch_case_next_L25
debug: Terminated block@6: // switch_case_next_L25
debug: Sealing block@1: // while_top_L19
debug: Added required_budget_with_buffer#0 to Phi node: let required_budget_with_buffer#1: uint64 = φ(required_budget_with_buffer#0 <- block@0) in block@0: // L11
debug: Created Phi assignment: let required_budget_with_buffer#2: uint64 = undefined while trying to resolve 'required_budget_with_buffer' in block@6: // switch_case_next_L25
debug: Added required_budget_with_buffer#1 to Phi node: let required_budget_with_buffer#2: uint64 = φ(required_budget_with_buffer#1 <- block@3) in block@3: // switch_case_0_L27
debug: Added required_budget_with_buffer#1 to Phi node: let required_budget_with_buffer#2: uint64 = φ(required_budget_with_buffer#1 <- block@3, required_budget_with_buffer#1 <- block@4) in block@4: // switch_case_1_L29
debug: Added required_budget_with_buffer#1 to Phi node: let required_budget_with_buffer#2: uint64 = φ(required_budget_with_buffer#1 <- block@3, required_budget_with_buffer#1 <- block@4, required_budget_with_buffer#1 <- block@5) in block@5: // switch_case_default_L25
debug: Replacing trivial Phi node: let required_budget_with_buffer#2: uint64 = φ(required_budget_with_buffer#1 <- block@3, required_budget_with_buffer#1 <- block@4, required_budget_with_buffer#1 <- block@5) (required_budget_with_buffer#2) with required_budget_with_buffer#1
debug: Deleting Phi assignment: let required_budget_with_buffer#2: uint64 = φ(required_budget_with_buffer#1 <- block@3, required_budget_with_buffer#1 <- block@4, required_budget_with_buffer#1 <- block@5)
debug: Replaced trivial Phi node: let required_budget_with_buffer#2: uint64 = φ(required_budget_with_buffer#1 <- block@3, required_budget_with_buffer#1 <- block@4, required_budget_with_buffer#1 <- block@5) (required_budget_with_buffer#2) with required_budget_with_buffer#1 in current definition for 1 blocks
debug: Added required_budget_with_buffer#1 to Phi node: let required_budget_with_buffer#1: uint64 = φ(required_budget_with_buffer#0 <- block@0, required_budget_with_buffer#1 <- block@6) in block@6: // switch_case_next_L25
debug: Replacing trivial Phi node: let required_budget_with_buffer#1: uint64 = φ(required_budget_with_buffer#0 <- block@0, required_budget_with_buffer#1 <- block@6) (required_budget_with_buffer#1) with required_budget_with_buffer#0
debug: Deleting Phi assignment: let required_budget_with_buffer#1: uint64 = φ(required_budget_with_buffer#0 <- block@0, required_budget_with_buffer#1 <- block@6)
debug: Replaced trivial Phi node: let required_budget_with_buffer#1: uint64 = φ(required_budget_with_buffer#0 <- block@0, required_budget_with_buffer#1 <- block@6) (required_budget_with_buffer#1) with required_budget_with_buffer#0 in current definition for 6 blocks
debug: Added fee_source#0 to Phi node: let fee_source#1: uint64 = φ(fee_source#0 <- block@0) in block@0: // L11
debug: Created Phi assignment: let fee_source#2: uint64 = undefined while trying to resolve 'fee_source' in block@6: // switch_case_next_L25
debug: Added fee_source#1 to Phi node: let fee_source#2: uint64 = φ(fee_source#1 <- block@3) in block@3: // switch_case_0_L27
debug: Added fee_source#1 to Phi node: let fee_source#2: uint64 = φ(fee_source#1 <- block@3, fee_source#1 <- block@4) in block@4: // switch_case_1_L29
debug: Added fee_source#1 to Phi node: let fee_source#2: uint64 = φ(fee_source#1 <- block@3, fee_source#1 <- block@4, fee_source#1 <- block@5) in block@5: // switch_case_default_L25
debug: Replacing trivial Phi node: let fee_source#2: uint64 = φ(fee_source#1 <- block@3, fee_source#1 <- block@4, fee_source#1 <- block@5) (fee_source#2) with fee_source#1
debug: Deleting Phi assignment: let fee_source#2: uint64 = φ(fee_source#1 <- block@3, fee_source#1 <- block@4, fee_source#1 <- block@5)
debug: Replaced trivial Phi node: let fee_source#2: uint64 = φ(fee_source#1 <- block@3, fee_source#1 <- block@4, fee_source#1 <- block@5) (fee_source#2) with fee_source#1 in current definition for 1 blocks
debug: Added fee_source#1 to Phi node: let fee_source#1: uint64 = φ(fee_source#0 <- block@0, fee_source#1 <- block@6) in block@6: // switch_case_next_L25
debug: Replacing trivial Phi node: let fee_source#1: uint64 = φ(fee_source#0 <- block@0, fee_source#1 <- block@6) (fee_source#1) with fee_source#0
debug: Deleting Phi assignment: let fee_source#1: uint64 = φ(fee_source#0 <- block@0, fee_source#1 <- block@6)
debug: Replaced trivial Phi node: let fee_source#1: uint64 = φ(fee_source#0 <- block@0, fee_source#1 <- block@6) (fee_source#1) with fee_source#0 in current definition for 6 blocks
debug: Sealing block@7: // after_while_L19
debug: Terminated block@7: // after_while_L19
debug: Sealing block@0: // L4
debug: Terminated block@0: // L4
debug: Sealing block@1: // abi_routing_L4
debug: Terminated block@1: // abi_routing_L4
debug: Sealing block@2: // bare_routing_L4
debug: Terminated block@2: // bare_routing_L4
debug: Sealing block@3: // after_if_else_L4
debug: Terminated block@3: // after_if_else_L4
debug: Sealing block@0: // L42
debug: Terminated block@0: // L42
debug: Sealing block@1: // or_contd_L44
debug: Terminated block@1: // or_contd_L44
debug: Sealing block@2: // bool_true_L44
debug: Terminated block@2: // bool_true_L44
debug: Sealing block@3: // bool_false_L44
debug: Terminated block@3: // bool_false_L44
debug: Sealing block@4: // bool_merge_L44
debug: Created Phi assignment: let or_result%0#2: bool = undefined while trying to resolve 'or_result%0' in block@4: // bool_merge_L44
debug: Added or_result%0#0 to Phi node: let or_result%0#2: bool = φ(or_result%0#0 <- block@2) in block@2: // bool_true_L44
debug: Added or_result%0#1 to Phi node: let or_result%0#2: bool = φ(or_result%0#0 <- block@2, or_result%0#1 <- block@3) in block@3: // bool_false_L44
debug: Terminated block@4: // bool_merge_L44
debug: Sealing block@0: // L46
debug: Terminated block@0: // L46
debug: Sealing block@1: // or_contd_L48
debug: Terminated block@1: // or_contd_L48
debug: Sealing block@2: // bool_true_L48
debug: Terminated block@2: // bool_true_L48
debug: Sealing block@3: // bool_false_L48
debug: Terminated block@3: // bool_false_L48
debug: Sealing block@4: // bool_merge_L48
debug: Created Phi assignment: let or_result%0#2: bool = undefined while trying to resolve 'or_result%0' in block@4: // bool_merge_L48
debug: Added or_result%0#0 to Phi node: let or_result%0#2: bool = φ(or_result%0#0 <- block@2) in block@2: // bool_true_L48
debug: Added or_result%0#1 to Phi node: let or_result%0#2: bool = φ(or_result%0#0 <- block@2, or_result%0#1 <- block@3) in block@3: // bool_false_L48
debug: Terminated block@4: // bool_merge_L48
debug: Sealing block@0: // L50
debug: Terminated block@0: // L50
debug: Sealing block@1: // or_contd_L52
debug: Terminated block@1: // or_contd_L52
debug: Sealing block@2: // bool_true_L52
debug: Terminated block@2: // bool_true_L52
debug: Sealing block@3: // bool_false_L52
debug: Terminated block@3: // bool_false_L52
debug: Sealing block@4: // bool_merge_L52
debug: Created Phi assignment: let or_result%0#2: bool = undefined while trying to resolve 'or_result%0' in block@4: // bool_merge_L52
debug: Added or_result%0#0 to Phi node: let or_result%0#2: bool = φ(or_result%0#0 <- block@2) in block@2: // bool_true_L52
debug: Added or_result%0#1 to Phi node: let or_result%0#2: bool = φ(or_result%0#0 <- block@2, or_result%0#1 <- block@3) in block@3: // bool_false_L52
debug: Terminated block@4: // bool_merge_L52
debug: Sealing block@0: // L54
debug: Terminated block@0: // L54
debug: Sealing block@1: // or_contd_L56
debug: Terminated block@1: // or_contd_L56
debug: Sealing block@2: // bool_true_L56
debug: Terminated block@2: // bool_true_L56
debug: Sealing block@3: // bool_false_L56
debug: Terminated block@3: // bool_false_L56
debug: Sealing block@4: // bool_merge_L56
debug: Created Phi assignment: let or_result%0#2: bool = undefined while trying to resolve 'or_result%0' in block@4: // bool_merge_L56
debug: Added or_result%0#0 to Phi node: let or_result%0#2: bool = φ(or_result%0#0 <- block@2) in block@2: // bool_true_L56
debug: Added or_result%0#1 to Phi node: let or_result%0#2: bool = φ(or_result%0#0 <- block@2, or_result%0#1 <- block@3) in block@3: // bool_false_L56
debug: Terminated block@4: // bool_merge_L56
debug: Sealing block@5: // or_contd_L57
debug: Terminated block@5: // or_contd_L57
debug: Sealing block@6: // bool_true_L57
debug: Terminated block@6: // bool_true_L57
debug: Sealing block@7: // bool_false_L57
debug: Terminated block@7: // bool_false_L57
debug: Sealing block@8: // bool_merge_L57
debug: Created Phi assignment: let or_result%1#2: bool = undefined while trying to resolve 'or_result%1' in block@8: // bool_merge_L57
debug: Added or_result%1#0 to Phi node: let or_result%1#2: bool = φ(or_result%1#0 <- block@6) in block@6: // bool_true_L57
debug: Added or_result%1#1 to Phi node: let or_result%1#2: bool = φ(or_result%1#0 <- block@6, or_result%1#1 <- block@7) in block@7: // bool_false_L57
debug: Terminated block@8: // bool_merge_L57
debug: Sealing block@9: // or_contd_L58
debug: Terminated block@9: // or_contd_L58
debug: Sealing block@10: // or_contd_L58
debug: Terminated block@10: // or_contd_L58
debug: Sealing block@11: // bool_true_L58
debug: Terminated block@11: // bool_true_L58
debug: Sealing block@12: // bool_false_L58
debug: Terminated block@12: // bool_false_L58
debug: Sealing block@13: // bool_merge_L58
debug: Created Phi assignment: let or_result%2#2: bool = undefined while trying to resolve 'or_result%2' in block@13: // bool_merge_L58
debug: Added or_result%2#0 to Phi node: let or_result%2#2: bool = φ(or_result%2#0 <- block@11) in block@11: // bool_true_L58
debug: Added or_result%2#1 to Phi node: let or_result%2#2: bool = φ(or_result%2#0 <- block@11, or_result%2#1 <- block@12) in block@12: // bool_false_L58
debug: Terminated block@13: // bool_merge_L58
debug: Sealing block@14: // or_contd_L59
debug: Terminated block@14: // or_contd_L59
debug: Sealing block@15: // or_contd_L59
debug: Terminated block@15: // or_contd_L59
debug: Sealing block@16: // bool_true_L59
debug: Terminated block@16: // bool_true_L59
debug: Sealing block@17: // bool_false_L59
debug: Terminated block@17: // bool_false_L59
debug: Sealing block@18: // bool_merge_L59
debug: Created Phi assignment: let or_result%3#2: bool = undefined while trying to resolve 'or_result%3' in block@18: // bool_merge_L59
debug: Added or_result%3#0 to Phi node: let or_result%3#2: bool = φ(or_result%3#0 <- block@16) in block@16: // bool_true_L59
debug: Added or_result%3#1 to Phi node: let or_result%3#2: bool = φ(or_result%3#0 <- block@16, or_result%3#1 <- block@17) in block@17: // bool_false_L59
debug: Terminated block@18: // bool_merge_L59
debug: Sealing block@19: // or_contd_L60
debug: Terminated block@19: // or_contd_L60
debug: Sealing block@20: // bool_true_L60
debug: Terminated block@20: // bool_true_L60
debug: Sealing block@21: // bool_false_L60
debug: Terminated block@21: // bool_false_L60
debug: Sealing block@22: // bool_merge_L60
debug: Created Phi assignment: let or_result%4#2: bool = undefined while trying to resolve 'or_result%4' in block@22: // bool_merge_L60
debug: Added or_result%4#0 to Phi node: let or_result%4#2: bool = φ(or_result%4#0 <- block@20) in block@20: // bool_true_L60
debug: Added or_result%4#1 to Phi node: let or_result%4#2: bool = φ(or_result%4#0 <- block@20, or_result%4#1 <- block@21) in block@21: // bool_false_L60
debug: Terminated block@22: // bool_merge_L60
debug: Sealing block@23: // or_contd_L61
debug: Terminated block@23: // or_contd_L61
debug: Sealing block@24: // bool_true_L61
debug: Terminated block@24: // bool_true_L61
debug: Sealing block@25: // bool_false_L61
debug: Terminated block@25: // bool_false_L61
debug: Sealing block@26: // bool_merge_L61
debug: Created Phi assignment: let or_result%5#2: bool = undefined while trying to resolve 'or_result%5' in block@26: // bool_merge_L61
debug: Added or_result%5#0 to Phi node: let or_result%5#2: bool = φ(or_result%5#0 <- block@24) in block@24: // bool_true_L61
debug: Added or_result%5#1 to Phi node: let or_result%5#2: bool = φ(or_result%5#0 <- block@24, or_result%5#1 <- block@25) in block@25: // bool_false_L61
debug: Terminated block@26: // bool_merge_L61
debug: Sealing block@27: // or_contd_L62
debug: Terminated block@27: // or_contd_L62
debug: Sealing block@28: // or_contd_L62
debug: Terminated block@28: // or_contd_L62
debug: Sealing block@29: // bool_true_L62
debug: Terminated block@29: // bool_true_L62
debug: Sealing block@30: // bool_false_L62
debug: Terminated block@30: // bool_false_L62
debug: Sealing block@31: // bool_merge_L62
debug: Created Phi assignment: let or_result%6#2: bool = undefined while trying to resolve 'or_result%6' in block@31: // bool_merge_L62
debug: Added or_result%6#0 to Phi node: let or_result%6#2: bool = φ(or_result%6#0 <- block@29) in block@29: // bool_true_L62
debug: Added or_result%6#1 to Phi node: let or_result%6#2: bool = φ(or_result%6#0 <- block@29, or_result%6#1 <- block@30) in block@30: // bool_false_L62
debug: Terminated block@31: // bool_merge_L62
debug: Sealing block@32: // or_contd_L68
debug: Terminated block@32: // or_contd_L68
debug: Sealing block@33: // or_contd_L68
debug: Terminated block@33: // or_contd_L68
debug: Sealing block@34: // bool_true_L68
debug: Terminated block@34: // bool_true_L68
debug: Sealing block@35: // bool_false_L68
debug: Terminated block@35: // bool_false_L68
debug: Sealing block@36: // bool_merge_L68
debug: Created Phi assignment: let or_result%7#2: bool = undefined while trying to resolve 'or_result%7' in block@36: // bool_merge_L68
debug: Added or_result%7#0 to Phi node: let or_result%7#2: bool = φ(or_result%7#0 <- block@34) in block@34: // bool_true_L68
debug: Added or_result%7#1 to Phi node: let or_result%7#2: bool = φ(or_result%7#0 <- block@34, or_result%7#1 <- block@35) in block@35: // bool_false_L68
debug: Terminated block@36: // bool_merge_L68
debug: Sealing block@37: // or_contd_L74
debug: Terminated block@37: // or_contd_L74
debug: Sealing block@38: // bool_true_L74
debug: Terminated block@38: // bool_true_L74
debug: Sealing block@39: // bool_false_L74
debug: Terminated block@39: // bool_false_L74
debug: Sealing block@40: // bool_merge_L74
debug: Created Phi assignment: let or_result%8#2: bool = undefined while trying to resolve 'or_result%8' in block@40: // bool_merge_L74
debug: Added or_result%8#0 to Phi node: let or_result%8#2: bool = φ(or_result%8#0 <- block@38) in block@38: // bool_true_L74
debug: Added or_result%8#1 to Phi node: let or_result%8#2: bool = φ(or_result%8#0 <- block@38, or_result%8#1 <- block@39) in block@39: // bool_false_L74
debug: Terminated block@40: // bool_merge_L74
debug: Sealing block@41: // or_contd_L79
debug: Terminated block@41: // or_contd_L79
debug: Sealing block@42: // bool_true_L79
debug: Terminated block@42: // bool_true_L79
debug: Sealing block@43: // bool_false_L79
debug: Terminated block@43: // bool_false_L79
debug: Sealing block@44: // bool_merge_L79
debug: Created Phi assignment: let or_result%9#2: bool = undefined while trying to resolve 'or_result%9' in block@44: // bool_merge_L79
debug: Added or_result%9#0 to Phi node: let or_result%9#2: bool = φ(or_result%9#0 <- block@42) in block@42: // bool_true_L79
debug: Added or_result%9#1 to Phi node: let or_result%9#2: bool = φ(or_result%9#0 <- block@42, or_result%9#1 <- block@43) in block@43: // bool_false_L79
debug: Terminated block@44: // bool_merge_L79
debug: Sealing block@0: // L167
debug: Terminated block@0: // L167
debug: Sealing block@0: // L187
debug: Terminated block@0: // L187
debug: Sealing block@0: // L177
debug: Terminated block@0: // L177
debug: Sealing block@0: // L172
debug: Terminated block@0: // L172
debug: Sealing block@0: // L182
debug: Terminated block@0: // L182
debug: Sealing block@0: // L137
debug: Terminated block@0: // L137
debug: Sealing block@0: // L86
debug: Terminated block@0: // L86
debug: Sealing block@1: // or_contd_L88
debug: Terminated block@1: // or_contd_L88
debug: Sealing block@2: // bool_true_L88
debug: Terminated block@2: // bool_true_L88
debug: Sealing block@3: // bool_false_L88
debug: Terminated block@3: // bool_false_L88
debug: Sealing block@4: // bool_merge_L88
debug: Created Phi assignment: let or_result%0#2: bool = undefined while trying to resolve 'or_result%0' in block@4: // bool_merge_L88
debug: Added or_result%0#0 to Phi node: let or_result%0#2: bool = φ(or_result%0#0 <- block@2) in block@2: // bool_true_L88
debug: Added or_result%0#1 to Phi node: let or_result%0#2: bool = φ(or_result%0#0 <- block@2, or_result%0#1 <- block@3) in block@3: // bool_false_L88
debug: Terminated block@4: // bool_merge_L88
debug: Sealing block@5: // or_contd_L89
debug: Terminated block@5: // or_contd_L89
debug: Sealing block@6: // bool_true_L89
debug: Terminated block@6: // bool_true_L89
debug: Sealing block@7: // bool_false_L89
debug: Terminated block@7: // bool_false_L89
debug: Sealing block@8: // bool_merge_L89
debug: Created Phi assignment: let or_result%1#2: bool = undefined while trying to resolve 'or_result%1' in block@8: // bool_merge_L89
debug: Added or_result%1#0 to Phi node: let or_result%1#2: bool = φ(or_result%1#0 <- block@6) in block@6: // bool_true_L89
debug: Added or_result%1#1 to Phi node: let or_result%1#2: bool = φ(or_result%1#0 <- block@6, or_result%1#1 <- block@7) in block@7: // bool_false_L89
debug: Terminated block@8: // bool_merge_L89
debug: Sealing block@9: // or_contd_L91
debug: Terminated block@9: // or_contd_L91
debug: Sealing block@10: // or_contd_L91
debug: Terminated block@10: // or_contd_L91
debug: Sealing block@11: // bool_true_L91
debug: Terminated block@11: // bool_true_L91
debug: Sealing block@12: // bool_false_L91
debug: Terminated block@12: // bool_false_L91
debug: Sealing block@13: // bool_merge_L91
debug: Created Phi assignment: let or_result%2#2: bool = undefined while trying to resolve 'or_result%2' in block@13: // bool_merge_L91
debug: Added or_result%2#0 to Phi node: let or_result%2#2: bool = φ(or_result%2#0 <- block@11) in block@11: // bool_true_L91
debug: Added or_result%2#1 to Phi node: let or_result%2#2: bool = φ(or_result%2#0 <- block@11, or_result%2#1 <- block@12) in block@12: // bool_false_L91
debug: Terminated block@13: // bool_merge_L91
debug: Sealing block@14: // or_contd_L92
debug: Terminated block@14: // or_contd_L92
debug: Sealing block@15: // or_contd_L92
debug: Terminated block@15: // or_contd_L92
debug: Sealing block@16: // bool_true_L92
debug: Terminated block@16: // bool_true_L92
debug: Sealing block@17: // bool_false_L92
debug: Terminated block@17: // bool_false_L92
debug: Sealing block@18: // bool_merge_L92
debug: Created Phi assignment: let or_result%3#2: bool = undefined while trying to resolve 'or_result%3' in block@18: // bool_merge_L92
debug: Added or_result%3#0 to Phi node: let or_result%3#2: bool = φ(or_result%3#0 <- block@16) in block@16: // bool_true_L92
debug: Added or_result%3#1 to Phi node: let or_result%3#2: bool = φ(or_result%3#0 <- block@16, or_result%3#1 <- block@17) in block@17: // bool_false_L92
debug: Terminated block@18: // bool_merge_L92
debug: Sealing block@19: // or_contd_L93
debug: Terminated block@19: // or_contd_L93
debug: Sealing block@20: // or_contd_L93
debug: Terminated block@20: // or_contd_L93
debug: Sealing block@21: // bool_true_L93
debug: Terminated block@21: // bool_true_L93
debug: Sealing block@22: // bool_false_L93
debug: Terminated block@22: // bool_false_L93
debug: Sealing block@23: // bool_merge_L93
debug: Created Phi assignment: let or_result%4#2: bool = undefined while trying to resolve 'or_result%4' in block@23: // bool_merge_L93
debug: Added or_result%4#0 to Phi node: let or_result%4#2: bool = φ(or_result%4#0 <- block@21) in block@21: // bool_true_L93
debug: Added or_result%4#1 to Phi node: let or_result%4#2: bool = φ(or_result%4#0 <- block@21, or_result%4#1 <- block@22) in block@22: // bool_false_L93
debug: Terminated block@23: // bool_merge_L93
debug: Sealing block@24: // or_contd_L94
debug: Terminated block@24: // or_contd_L94
debug: Sealing block@25: // or_contd_L94
debug: Terminated block@25: // or_contd_L94
debug: Sealing block@26: // bool_true_L94
debug: Terminated block@26: // bool_true_L94
debug: Sealing block@27: // bool_false_L94
debug: Terminated block@27: // bool_false_L94
debug: Sealing block@28: // bool_merge_L94
debug: Created Phi assignment: let or_result%5#2: bool = undefined while trying to resolve 'or_result%5' in block@28: // bool_merge_L94
debug: Added or_result%5#0 to Phi node: let or_result%5#2: bool = φ(or_result%5#0 <- block@26) in block@26: // bool_true_L94
debug: Added or_result%5#1 to Phi node: let or_result%5#2: bool = φ(or_result%5#0 <- block@26, or_result%5#1 <- block@27) in block@27: // bool_false_L94
debug: Terminated block@28: // bool_merge_L94
debug: Sealing block@29: // or_contd_L95
debug: Terminated block@29: // or_contd_L95
debug: Sealing block@30: // or_contd_L95
debug: Terminated block@30: // or_contd_L95
debug: Sealing block@31: // bool_true_L95
debug: Terminated block@31: // bool_true_L95
debug: Sealing block@32: // bool_false_L95
debug: Terminated block@32: // bool_false_L95
debug: Sealing block@33: // bool_merge_L95
debug: Created Phi assignment: let or_result%6#2: bool = undefined while trying to resolve 'or_result%6' in block@33: // bool_merge_L95
debug: Added or_result%6#0 to Phi node: let or_result%6#2: bool = φ(or_result%6#0 <- block@31) in block@31: // bool_true_L95
debug: Added or_result%6#1 to Phi node: let or_result%6#2: bool = φ(or_result%6#0 <- block@31, or_result%6#1 <- block@32) in block@32: // bool_false_L95
debug: Terminated block@33: // bool_merge_L95
debug: Sealing block@34: // or_contd_L96
debug: Terminated block@34: // or_contd_L96
debug: Sealing block@35: // bool_true_L96
debug: Terminated block@35: // bool_true_L96
debug: Sealing block@36: // bool_false_L96
debug: Terminated block@36: // bool_false_L96
debug: Sealing block@37: // bool_merge_L96
debug: Created Phi assignment: let or_result%7#2: bool = undefined while trying to resolve 'or_result%7' in block@37: // bool_merge_L96
debug: Added or_result%7#0 to Phi node: let or_result%7#2: bool = φ(or_result%7#0 <- block@35) in block@35: // bool_true_L96
debug: Added or_result%7#1 to Phi node: let or_result%7#2: bool = φ(or_result%7#0 <- block@35, or_result%7#1 <- block@36) in block@36: // bool_false_L96
debug: Terminated block@37: // bool_merge_L96
debug: Sealing block@38: // or_contd_L97
debug: Terminated block@38: // or_contd_L97
debug: Sealing block@39: // bool_true_L97
debug: Terminated block@39: // bool_true_L97
debug: Sealing block@40: // bool_false_L97
debug: Terminated block@40: // bool_false_L97
debug: Sealing block@41: // bool_merge_L97
debug: Created Phi assignment: let or_result%8#2: bool = undefined while trying to resolve 'or_result%8' in block@41: // bool_merge_L97
debug: Added or_result%8#0 to Phi node: let or_result%8#2: bool = φ(or_result%8#0 <- block@39) in block@39: // bool_true_L97
debug: Added or_result%8#1 to Phi node: let or_result%8#2: bool = φ(or_result%8#0 <- block@39, or_result%8#1 <- block@40) in block@40: // bool_false_L97
debug: Terminated block@41: // bool_merge_L97
debug: Sealing block@42: // or_contd_L99
debug: Terminated block@42: // or_contd_L99
debug: Sealing block@43: // bool_true_L99
debug: Terminated block@43: // bool_true_L99
debug: Sealing block@44: // bool_false_L99
debug: Terminated block@44: // bool_false_L99
debug: Sealing block@45: // bool_merge_L99
debug: Created Phi assignment: let or_result%9#2: bool = undefined while trying to resolve 'or_result%9' in block@45: // bool_merge_L99
debug: Added or_result%9#0 to Phi node: let or_result%9#2: bool = φ(or_result%9#0 <- block@43) in block@43: // bool_true_L99
debug: Added or_result%9#1 to Phi node: let or_result%9#2: bool = φ(or_result%9#0 <- block@43, or_result%9#1 <- block@44) in block@44: // bool_false_L99
debug: Terminated block@45: // bool_merge_L99
debug: Sealing block@46: // or_contd_L100
debug: Terminated block@46: // or_contd_L100
debug: Sealing block@47: // bool_true_L100
debug: Terminated block@47: // bool_true_L100
debug: Sealing block@48: // bool_false_L100
debug: Terminated block@48: // bool_false_L100
debug: Sealing block@49: // bool_merge_L100
debug: Created Phi assignment: let or_result%10#2: bool = undefined while trying to resolve 'or_result%10' in block@49: // bool_merge_L100
debug: Added or_result%10#0 to Phi node: let or_result%10#2: bool = φ(or_result%10#0 <- block@47) in block@47: // bool_true_L100
debug: Added or_result%10#1 to Phi node: let or_result%10#2: bool = φ(or_result%10#0 <- block@47, or_result%10#1 <- block@48) in block@48: // bool_false_L100
debug: Terminated block@49: // bool_merge_L100
debug: Sealing block@50: // or_contd_L101
debug: Terminated block@50: // or_contd_L101
debug: Sealing block@51: // bool_true_L101
debug: Terminated block@51: // bool_true_L101
debug: Sealing block@52: // bool_false_L101
debug: Terminated block@52: // bool_false_L101
debug: Sealing block@53: // bool_merge_L101
debug: Created Phi assignment: let or_result%11#2: bool = undefined while trying to resolve 'or_result%11' in block@53: // bool_merge_L101
debug: Added or_result%11#0 to Phi node: let or_result%11#2: bool = φ(or_result%11#0 <- block@51) in block@51: // bool_true_L101
debug: Added or_result%11#1 to Phi node: let or_result%11#2: bool = φ(or_result%11#0 <- block@51, or_result%11#1 <- block@52) in block@52: // bool_false_L101
debug: Terminated block@53: // bool_merge_L101
debug: Sealing block@54: // or_contd_L102
debug: Terminated block@54: // or_contd_L102
debug: Sealing block@55: // bool_true_L102
debug: Terminated block@55: // bool_true_L102
debug: Sealing block@56: // bool_false_L102
debug: Terminated block@56: // bool_false_L102
debug: Sealing block@57: // bool_merge_L102
debug: Created Phi assignment: let or_result%12#2: bool = undefined while trying to resolve 'or_result%12' in block@57: // bool_merge_L102
debug: Added or_result%12#0 to Phi node: let or_result%12#2: bool = φ(or_result%12#0 <- block@55) in block@55: // bool_true_L102
debug: Added or_result%12#1 to Phi node: let or_result%12#2: bool = φ(or_result%12#0 <- block@55, or_result%12#1 <- block@56) in block@56: // bool_false_L102
debug: Terminated block@57: // bool_merge_L102
debug: Sealing block@58: // or_contd_L103
debug: Terminated block@58: // or_contd_L103
debug: Sealing block@59: // bool_true_L103
debug: Terminated block@59: // bool_true_L103
debug: Sealing block@60: // bool_false_L103
debug: Terminated block@60: // bool_false_L103
debug: Sealing block@61: // bool_merge_L103
debug: Created Phi assignment: let or_result%13#2: bool = undefined while trying to resolve 'or_result%13' in block@61: // bool_merge_L103
debug: Added or_result%13#0 to Phi node: let or_result%13#2: bool = φ(or_result%13#0 <- block@59) in block@59: // bool_true_L103
debug: Added or_result%13#1 to Phi node: let or_result%13#2: bool = φ(or_result%13#0 <- block@59, or_result%13#1 <- block@60) in block@60: // bool_false_L103
debug: Terminated block@61: // bool_merge_L103
debug: Sealing block@62: // or_contd_L104
debug: Terminated block@62: // or_contd_L104
debug: Sealing block@63: // bool_true_L104
debug: Terminated block@63: // bool_true_L104
debug: Sealing block@64: // bool_false_L104
debug: Terminated block@64: // bool_false_L104
debug: Sealing block@65: // bool_merge_L104
debug: Created Phi assignment: let or_result%14#2: bool = undefined while trying to resolve 'or_result%14' in block@65: // bool_merge_L104
debug: Added or_result%14#0 to Phi node: let or_result%14#2: bool = φ(or_result%14#0 <- block@63) in block@63: // bool_true_L104
debug: Added or_result%14#1 to Phi node: let or_result%14#2: bool = φ(or_result%14#0 <- block@63, or_result%14#1 <- block@64) in block@64: // bool_false_L104
debug: Terminated block@65: // bool_merge_L104
debug: Sealing block@66: // or_contd_L105
debug: Terminated block@66: // or_contd_L105
debug: Sealing block@67: // bool_true_L105
debug: Terminated block@67: // bool_true_L105
debug: Sealing block@68: // bool_false_L105
debug: Terminated block@68: // bool_false_L105
debug: Sealing block@69: // bool_merge_L105
debug: Created Phi assignment: let or_result%15#2: bool = undefined while trying to resolve 'or_result%15' in block@69: // bool_merge_L105
debug: Added or_result%15#0 to Phi node: let or_result%15#2: bool = φ(or_result%15#0 <- block@67) in block@67: // bool_true_L105
debug: Added or_result%15#1 to Phi node: let or_result%15#2: bool = φ(or_result%15#0 <- block@67, or_result%15#1 <- block@68) in block@68: // bool_false_L105
debug: Terminated block@69: // bool_merge_L105
debug: Sealing block@70: // or_contd_L106
debug: Terminated block@70: // or_contd_L106
debug: Sealing block@71: // bool_true_L106
debug: Terminated block@71: // bool_true_L106
debug: Sealing block@72: // bool_false_L106
debug: Terminated block@72: // bool_false_L106
debug: Sealing block@73: // bool_merge_L106
debug: Created Phi assignment: let or_result%16#2: bool = undefined while trying to resolve 'or_result%16' in block@73: // bool_merge_L106
debug: Added or_result%16#0 to Phi node: let or_result%16#2: bool = φ(or_result%16#0 <- block@71) in block@71: // bool_true_L106
debug: Added or_result%16#1 to Phi node: let or_result%16#2: bool = φ(or_result%16#0 <- block@71, or_result%16#1 <- block@72) in block@72: // bool_false_L106
debug: Terminated block@73: // bool_merge_L106
debug: Sealing block@74: // or_contd_L108
debug: Terminated block@74: // or_contd_L108
debug: Sealing block@75: // or_contd_L108
debug: Terminated block@75: // or_contd_L108
debug: Sealing block@76: // bool_true_L108
debug: Terminated block@76: // bool_true_L108
debug: Sealing block@77: // bool_false_L108
debug: Terminated block@77: // bool_false_L108
debug: Sealing block@78: // bool_merge_L108
debug: Created Phi assignment: let or_result%17#2: bool = undefined while trying to resolve 'or_result%17' in block@78: // bool_merge_L108
debug: Added or_result%17#0 to Phi node: let or_result%17#2: bool = φ(or_result%17#0 <- block@76) in block@76: // bool_true_L108
debug: Added or_result%17#1 to Phi node: let or_result%17#2: bool = φ(or_result%17#0 <- block@76, or_result%17#1 <- block@77) in block@77: // bool_false_L108
debug: Terminated block@78: // bool_merge_L108
debug: Sealing block@79: // or_contd_L114
debug: Terminated block@79: // or_contd_L114
debug: Sealing block@80: // bool_true_L114
debug: Terminated block@80: // bool_true_L114
debug: Sealing block@81: // bool_false_L114
debug: Terminated block@81: // bool_false_L114
debug: Sealing block@82: // bool_merge_L114
debug: Created Phi assignment: let or_result%18#2: bool = undefined while trying to resolve 'or_result%18' in block@82: // bool_merge_L114
debug: Added or_result%18#0 to Phi node: let or_result%18#2: bool = φ(or_result%18#0 <- block@80) in block@80: // bool_true_L114
debug: Added or_result%18#1 to Phi node: let or_result%18#2: bool = φ(or_result%18#0 <- block@80, or_result%18#1 <- block@81) in block@81: // bool_false_L114
debug: Terminated block@82: // bool_merge_L114
debug: Sealing block@83: // or_contd_L115
debug: Terminated block@83: // or_contd_L115
debug: Sealing block@84: // bool_true_L115
debug: Terminated block@84: // bool_true_L115
debug: Sealing block@85: // bool_false_L115
debug: Terminated block@85: // bool_false_L115
debug: Sealing block@86: // bool_merge_L115
debug: Created Phi assignment: let or_result%19#2: bool = undefined while trying to resolve 'or_result%19' in block@86: // bool_merge_L115
debug: Added or_result%19#0 to Phi node: let or_result%19#2: bool = φ(or_result%19#0 <- block@84) in block@84: // bool_true_L115
debug: Added or_result%19#1 to Phi node: let or_result%19#2: bool = φ(or_result%19#0 <- block@84, or_result%19#1 <- block@85) in block@85: // bool_false_L115
debug: Terminated block@86: // bool_merge_L115
debug: Sealing block@87: // or_contd_L116
debug: Terminated block@87: // or_contd_L116
debug: Sealing block@88: // bool_true_L116
debug: Terminated block@88: // bool_true_L116
debug: Sealing block@89: // bool_false_L116
debug: Terminated block@89: // bool_false_L116
debug: Sealing block@90: // bool_merge_L116
debug: Created Phi assignment: let or_result%20#2: bool = undefined while trying to resolve 'or_result%20' in block@90: // bool_merge_L116
debug: Added or_result%20#0 to Phi node: let or_result%20#2: bool = φ(or_result%20#0 <- block@88) in block@88: // bool_true_L116
debug: Added or_result%20#1 to Phi node: let or_result%20#2: bool = φ(or_result%20#0 <- block@88, or_result%20#1 <- block@89) in block@89: // bool_false_L116
debug: Terminated block@90: // bool_merge_L116
debug: Sealing block@91: // or_contd_L117
debug: Terminated block@91: // or_contd_L117
debug: Sealing block@92: // bool_true_L117
debug: Terminated block@92: // bool_true_L117
debug: Sealing block@93: // bool_false_L117
debug: Terminated block@93: // bool_false_L117
debug: Sealing block@94: // bool_merge_L117
debug: Created Phi assignment: let or_result%21#2: bool = undefined while trying to resolve 'or_result%21' in block@94: // bool_merge_L117
debug: Added or_result%21#0 to Phi node: let or_result%21#2: bool = φ(or_result%21#0 <- block@92) in block@92: // bool_true_L117
debug: Added or_result%21#1 to Phi node: let or_result%21#2: bool = φ(or_result%21#0 <- block@92, or_result%21#1 <- block@93) in block@93: // bool_false_L117
debug: Terminated block@94: // bool_merge_L117
debug: Sealing block@95: // or_contd_L118
debug: Terminated block@95: // or_contd_L118
debug: Sealing block@96: // bool_true_L118
debug: Terminated block@96: // bool_true_L118
debug: Sealing block@97: // bool_false_L118
debug: Terminated block@97: // bool_false_L118
debug: Sealing block@98: // bool_merge_L118
debug: Created Phi assignment: let or_result%22#2: bool = undefined while trying to resolve 'or_result%22' in block@98: // bool_merge_L118
debug: Added or_result%22#0 to Phi node: let or_result%22#2: bool = φ(or_result%22#0 <- block@96) in block@96: // bool_true_L118
debug: Added or_result%22#1 to Phi node: let or_result%22#2: bool = φ(or_result%22#0 <- block@96, or_result%22#1 <- block@97) in block@97: // bool_false_L118
debug: Terminated block@98: // bool_merge_L118
debug: Sealing block@99: // or_contd_L120
debug: Terminated block@99: // or_contd_L120
debug: Sealing block@100: // bool_true_L120
debug: Terminated block@100: // bool_true_L120
debug: Sealing block@101: // bool_false_L120
debug: Terminated block@101: // bool_false_L120
debug: Sealing block@102: // bool_merge_L120
debug: Created Phi assignment: let or_result%23#2: bool = undefined while trying to resolve 'or_result%23' in block@102: // bool_merge_L120
debug: Added or_result%23#0 to Phi node: let or_result%23#2: bool = φ(or_result%23#0 <- block@100) in block@100: // bool_true_L120
debug: Added or_result%23#1 to Phi node: let or_result%23#2: bool = φ(or_result%23#0 <- block@100, or_result%23#1 <- block@101) in block@101: // bool_false_L120
debug: Terminated block@102: // bool_merge_L120
debug: Sealing block@103: // or_contd_L130
debug: Terminated block@103: // or_contd_L130
debug: Sealing block@104: // bool_true_L130
debug: Terminated block@104: // bool_true_L130
debug: Sealing block@105: // bool_false_L130
debug: Terminated block@105: // bool_false_L130
debug: Sealing block@106: // bool_merge_L130
debug: Created Phi assignment: let or_result%24#2: bool = undefined while trying to resolve 'or_result%24' in block@106: // bool_merge_L130
debug: Added or_result%24#0 to Phi node: let or_result%24#2: bool = φ(or_result%24#0 <- block@104) in block@104: // bool_true_L130
debug: Added or_result%24#1 to Phi node: let or_result%24#2: bool = φ(or_result%24#0 <- block@104, or_result%24#1 <- block@105) in block@105: // bool_false_L130
debug: Terminated block@106: // bool_merge_L130
debug: Sealing block@0: // L147
debug: Terminated block@0: // L147
debug: Sealing block@0: // L152
debug: Terminated block@0: // L152
debug: Sealing block@0: // L142
debug: Terminated block@0: // L142
debug: Sealing block@0: // L157
debug: Terminated block@0: // L157
debug: Sealing block@0: // L162
debug: Terminated block@0: // L162
debug: Sealing block@0: // L7
debug: Terminated block@0: // L7
debug: Sealing block@0: // L39
debug: Terminated block@0: // L39
debug: Output IR to contains/out/MyContract.ssa.ir
info: optimizing test_cases.contains.contract.MyContract at level 1
debug: Begin optimization pass 1/100
debug: Optimizing subroutine test_cases.contains.contract.MyContract.approval_program
debug: Splitting parallel copies prior to optimization
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (b+ 32323423423423b 32323423423423b) to 64646846846846b
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable not_ten#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.contains.contract.MyContract.is_in_tuple_1
debug: Splitting parallel copies prior to optimization
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.contains.contract.MyContract.is_in_tuple_2
debug: Splitting parallel copies prior to optimization
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.contains.contract.MyContract.is_in_tuple_3
debug: Splitting parallel copies prior to optimization
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.contains.contract.MyContract.test_string_types
debug: Splitting parallel copies prior to optimization
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (== 0x666f6f 0x626172) to 0u
debug: Optimizer: Remove Unused Variables
debug: Not removing unused assignment since source is not marked as pure: let tmp%40#0: uint64 = test_cases.contains.contract.one_u64()
debug: Not removing unused assignment since source is not marked as pure: let tmp%48#0: uint64 = test_cases.contains.contract.one_u64()
debug: Not removing unused assignment since source is not marked as pure: let tmp%56#0: uint64 = test_cases.contains.contract.one_u64()
debug: Not removing unused assignment since source is not marked as pure: let tmp%63#0: uint64 = test_cases.contains.contract.one_u64()
debug: Not removing unused assignment since source is not marked as pure: let tmp%68#0: bytes = test_cases.contains.contract.foo_string()
debug: Not removing unused assignment since source is not marked as pure: let tmp%69#0: bytes = test_cases.contains.contract.foo_arc4()
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Replacing redundant declaration let tmp%21#0: bytes = ((extract 2 0) awst_tmp%3#0) with copy of existing registers (Register(source_location=contains/contract.py:59:15-25, ir_type=bytes, name='tmp%16', version=0),)
debug: Replacing redundant declaration let tmp%23#0: bytes = ((extract 2 0) awst_tmp%3#0) with copy of existing registers (Register(source_location=contains/contract.py:59:15-25, ir_type=bytes, name='tmp%21', version=0),)
debug: Replacing redundant declaration let tmp%52#0: bytes = ((extract 2 0) awst_tmp%7#0) with copy of existing registers (Register(source_location=contains/contract.py:68:15-25, ir_type=bytes, name='tmp%50', version=0),)
debug: Found equivalence set: tmp%16#0, tmp%21#0, tmp%23#0
debug: Replacing {tmp%21#0, tmp%23#0} with tmp%16#0 made 2 modifications
debug: Found equivalence set: tmp%50#0, tmp%52#0
debug: Replacing {tmp%52#0} with tmp%50#0 made 1 modifications
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.contains.contract.foo_string
debug: Splitting parallel copies prior to optimization
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.contains.contract.baz_string
debug: Splitting parallel copies prior to optimization
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.contains.contract.bar_string
debug: Splitting parallel copies prior to optimization
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.contains.contract.foo_arc4
debug: Splitting parallel copies prior to optimization
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (len "foo") to 3u
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.contains.contract.bar_arc4
debug: Splitting parallel copies prior to optimization
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (len "bar") to 3u
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.contains.contract.one_u64
debug: Splitting parallel copies prior to optimization
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.contains.contract.MyContract.test_numeric_types
debug: Splitting parallel copies prior to optimization
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: tmp%9#0, reinterpret_biguint%0#0
debug: Replacing {reinterpret_biguint%0#0} with tmp%9#0 made 1 modifications
debug: Found equivalence set: tmp%14#0, reinterpret_biguint%1#0
debug: Replacing {reinterpret_biguint%1#0} with tmp%14#0 made 1 modifications
debug: Found equivalence set: tmp%15#0, reinterpret_biguint%2#0
debug: Replacing {reinterpret_biguint%2#0} with tmp%15#0 made 1 modifications
debug: Found equivalence set: tmp%21#0, reinterpret_biguint%3#0
debug: Replacing {reinterpret_biguint%3#0} with tmp%21#0 made 1 modifications
debug: Found equivalence set: tmp%22#0, reinterpret_biguint%4#0
debug: Replacing {reinterpret_biguint%4#0} with tmp%22#0 made 1 modifications
debug: Found equivalence set: awst_tmp%4#0, reinterpret_biguint%5#0, reinterpret_biguint%7#0, reinterpret_biguint%8#0
debug: Replacing {reinterpret_biguint%5#0, reinterpret_biguint%7#0, reinterpret_biguint%8#0} with awst_tmp%4#0 made 3 modifications
debug: Found equivalence set: tmp%28#0, reinterpret_biguint%6#0
debug: Replacing {reinterpret_biguint%6#0} with tmp%28#0 made 1 modifications
debug: Found equivalence set: tmp%29#0, reinterpret_biguint%9#0
debug: Replacing {reinterpret_biguint%9#0} with tmp%29#0 made 1 modifications
debug: Found equivalence set: awst_tmp%5#0, reinterpret_biguint%10#0, reinterpret_biguint%12#0, reinterpret_biguint%13#0
debug: Replacing {reinterpret_biguint%10#0, reinterpret_biguint%12#0, reinterpret_biguint%13#0} with awst_tmp%5#0 made 3 modifications
debug: Found equivalence set: tmp%34#0, reinterpret_biguint%11#0
debug: Replacing {reinterpret_biguint%11#0} with tmp%34#0 made 1 modifications
debug: Found equivalence set: awst_tmp%6#0, reinterpret_biguint%14#0, reinterpret_biguint%15#0
debug: Replacing {reinterpret_biguint%14#0, reinterpret_biguint%15#0} with awst_tmp%6#0 made 2 modifications
debug: Found equivalence set: tmp%48#0, reinterpret_biguint%16#0
debug: Replacing {reinterpret_biguint%16#0} with tmp%48#0 made 1 modifications
debug: Found equivalence set: tmp%53#0, reinterpret_biguint%17#0
debug: Replacing {reinterpret_biguint%17#0} with tmp%53#0 made 1 modifications
debug: Found equivalence set: tmp%58#0, reinterpret_biguint%18#0
debug: Replacing {reinterpret_biguint%18#0} with tmp%58#0 made 1 modifications
debug: Found equivalence set: tmp%63#0, reinterpret_biguint%19#0
debug: Replacing {reinterpret_biguint%19#0} with tmp%63#0 made 1 modifications
debug: Found equivalence set: awst_tmp%11#0, reinterpret_biguint%20#0, reinterpret_biguint%22#0
debug: Replacing {reinterpret_biguint%20#0, reinterpret_biguint%22#0} with awst_tmp%11#0 made 2 modifications
debug: Found equivalence set: tmp%68#0, reinterpret_biguint%21#0
debug: Replacing {reinterpret_biguint%21#0} with tmp%68#0 made 1 modifications
debug: Found equivalence set: awst_tmp%12#0, reinterpret_biguint%23#0, reinterpret_biguint%25#0
debug: Replacing {reinterpret_biguint%23#0, reinterpret_biguint%25#0} with awst_tmp%12#0 made 2 modifications
debug: Found equivalence set: tmp%73#0, reinterpret_biguint%24#0
debug: Replacing {reinterpret_biguint%24#0} with tmp%73#0 made 1 modifications
debug: Found equivalence set: awst_tmp%13#0, reinterpret_biguint%26#0, reinterpret_biguint%27#0
debug: Replacing {reinterpret_biguint%26#0, reinterpret_biguint%27#0} with awst_tmp%13#0 made 2 modifications
debug: Found equivalence set: tmp%90#0, reinterpret_biguint%28#0
debug: Replacing {reinterpret_biguint%28#0} with tmp%90#0 made 1 modifications
debug: Found equivalence set: tmp%95#0, reinterpret_biguint%29#0
debug: Replacing {reinterpret_biguint%29#0} with tmp%95#0 made 1 modifications
debug: Found equivalence set: tmp%97#0, reinterpret_biguint%30#0
debug: Replacing {reinterpret_biguint%30#0} with tmp%97#0 made 1 modifications
debug: Found equivalence set: tmp%103#0, reinterpret_biguint%31#0
debug: Replacing {reinterpret_biguint%31#0} with tmp%103#0 made 1 modifications
debug: Found equivalence set: awst_tmp%17#0, reinterpret_biguint%32#0, reinterpret_biguint%33#0
debug: Replacing {reinterpret_biguint%32#0, reinterpret_biguint%33#0} with awst_tmp%17#0 made 2 modifications
debug: Found equivalence set: tmp%108#0, reinterpret_biguint%34#0
debug: Replacing {reinterpret_biguint%34#0} with tmp%108#0 made 1 modifications
debug: Found equivalence set: awst_tmp%18#0, reinterpret_biguint%35#0, reinterpret_biguint%36#0
debug: Replacing {reinterpret_biguint%35#0, reinterpret_biguint%36#0} with awst_tmp%18#0 made 2 modifications
debug: Found equivalence set: awst_tmp%19#0, reinterpret_biguint%37#0, reinterpret_biguint%38#0
debug: Replacing {reinterpret_biguint%37#0, reinterpret_biguint%38#0} with awst_tmp%19#0 made 2 modifications
debug: Found equivalence set: tmp%123#0, reinterpret_biguint%39#0
debug: Replacing {reinterpret_biguint%39#0} with tmp%123#0 made 1 modifications
debug: Found equivalence set: tmp%129#0, reinterpret_biguint%40#0
debug: Replacing {reinterpret_biguint%40#0} with tmp%129#0 made 1 modifications
debug: Found equivalence set: awst_tmp%22#0, reinterpret_biguint%41#0
debug: Replacing {reinterpret_biguint%41#0} with awst_tmp%22#0 made 1 modifications
debug: Found equivalence set: awst_tmp%23#0, reinterpret_biguint%42#0
debug: Replacing {reinterpret_biguint%42#0} with awst_tmp%23#0 made 1 modifications
debug: Found equivalence set: awst_tmp%24#0, reinterpret_biguint%43#0
debug: Replacing {reinterpret_biguint%43#0} with awst_tmp%24#0 made 1 modifications
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (== 2u 3u) to 0u
debug: Simplified (== 2u 3u) to 0u
debug: Simplified (== 2u 3u) to 0u
debug: Simplified (== 2u 3u) to 0u
debug: Simplified (b== 0x41 tmp%148#0) to 0u
debug: Simplified (b== 0x41 tmp%150#0) to 0u
debug: Optimizer: Remove Unused Variables
debug: Not removing unused assignment since source is not marked as pure: let tmp%88#0: bytes = test_cases.contains.contract.foo_string()
debug: Not removing unused assignment since source is not marked as pure: let tmp%96#0: bytes = test_cases.contains.contract.bar_string()
debug: Not removing unused assignment since source is not marked as pure: let tmp%102#0: bytes = test_cases.contains.contract.foo_arc4()
debug: Not removing unused assignment since source is not marked as pure: let tmp%107#0: bytes = test_cases.contains.contract.bar_arc4()
debug: Not removing unused assignment since source is not marked as pure: let tmp%112#0: bytes = test_cases.contains.contract.foo_string()
debug: Not removing unused assignment since source is not marked as pure: let tmp%117#0: bytes = test_cases.contains.contract.foo_string()
debug: Not removing unused assignment since source is not marked as pure: let tmp%122#0: bytes = test_cases.contains.contract.foo_string()
debug: Not removing unused assignment since source is not marked as pure: let tmp%128#0: bytes = test_cases.contains.contract.bar_string()
debug: Not removing unused assignment since source is not marked as pure: let tmp%133#0: bytes = test_cases.contains.contract.foo_arc4()
debug: Not removing unused assignment since source is not marked as pure: let tmp%136#0: bytes = test_cases.contains.contract.bar_arc4()
debug: Not removing unused assignment since source is not marked as pure: let tmp%140#0: bytes = test_cases.contains.contract.foo_string()
debug: Not removing unused assignment since source is not marked as pure: let tmp%144#0: bytes = test_cases.contains.contract.foo_string()
debug: Removing unused variable reinterpret_biguint%44#0
debug: Removing unused variable tmp%148#0
debug: Removing unused variable reinterpret_biguint%45#0
debug: Removing unused variable tmp%150#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Replacing redundant declaration let tmp%141#0: biguint = (itob 3u) with copy of existing registers (Register(source_location=contains/contract.py:127:15, ir_type=biguint, name='tmp%137', version=0),)
debug: Replacing redundant declaration let tmp%19#0: biguint = (itob awst_tmp%3#0) with copy of existing registers (Register(source_location=contains/contract.py:92:15, ir_type=biguint, name='tmp%16', version=0),)
debug: Replacing redundant declaration let tmp%26#0: biguint = (itob 2u) with copy of existing registers (Register(source_location=contains/contract.py:93:15, ir_type=biguint, name='tmp%23', version=0),)
debug: Replacing redundant declaration let tmp%36#0: biguint = (itob 2u) with copy of existing registers (Register(source_location=contains/contract.py:93:15, ir_type=biguint, name='tmp%23', version=0),)
debug: Replacing redundant declaration let tmp%64#0: biguint = (itob 2u) with copy of existing registers (Register(source_location=contains/contract.py:93:15, ir_type=biguint, name='tmp%23', version=0),)
debug: Replacing redundant declaration let tmp%70#0: biguint = (itob 3u) with copy of existing registers (Register(source_location=contains/contract.py:96:15, ir_type=biguint, name='tmp%40', version=0),)
debug: Replacing redundant declaration let tmp%75#0: biguint = (itob 3u) with copy of existing registers (Register(source_location=contains/contract.py:96:15, ir_type=biguint, name='tmp%40', version=0),)
debug: Replacing redundant declaration let tmp%78#0: biguint = (itob 5u) with copy of existing registers (Register(source_location=contains/contract.py:97:15, ir_type=biguint, name='tmp%44', version=0),)
debug: Replacing redundant declaration let tmp%83#0: biguint = (itob 2u) with copy of existing registers (Register(source_location=contains/contract.py:102:15, ir_type=biguint, name='tmp%64', version=0),)
debug: Replacing redundant declaration let tmp%100#0: biguint = (itob awst_tmp%16#0) with copy of existing registers (Register(source_location=contains/contract.py:114:15, ir_type=biguint, name='tmp%98', version=0),)
debug: Replacing redundant declaration let tmp%105#0: biguint = (itob 2u) with copy of existing registers (Register(source_location=contains/contract.py:106:15, ir_type=biguint, name='tmp%83', version=0),)
debug: Replacing redundant declaration let tmp%109#0: biguint = (itob 3u) with copy of existing registers (Register(source_location=contains/contract.py:96:15, ir_type=biguint, name='tmp%40', version=0),)
debug: Replacing redundant declaration let tmp%113#0: biguint = (itob 2u) with copy of existing registers (Register(source_location=contains/contract.py:106:15, ir_type=biguint, name='tmp%83', version=0),)
debug: Replacing redundant declaration let tmp%115#0: biguint = (itob 3u) with copy of existing registers (Register(source_location=contains/contract.py:116:15, ir_type=biguint, name='tmp%109', version=0),)
debug: Replacing redundant declaration let tmp%118#0: biguint = (itob 5u) with copy of existing registers (Register(source_location=contains/contract.py:105:15, ir_type=biguint, name='tmp%78', version=0),)
debug: Replacing redundant declaration let tmp%120#0: biguint = (itob 3u) with copy of existing registers (Register(source_location=contains/contract.py:116:15, ir_type=biguint, name='tmp%109', version=0),)
debug: Replacing redundant declaration let tmp%137#0: biguint = (itob 3u) with copy of existing registers (Register(source_location=contains/contract.py:116:15, ir_type=biguint, name='tmp%109', version=0),)
debug: Replacing redundant declaration let tmp%145#0: biguint = (itob 5u) with copy of existing registers (Register(source_location=contains/contract.py:118:15, ir_type=biguint, name='tmp%118', version=0),)
debug: Found equivalence set: tmp%16#0, tmp%19#0
debug: Replacing {tmp%19#0} with tmp%16#0 made 1 modifications
debug: Found equivalence set: tmp%23#0, tmp%26#0, tmp%36#0, tmp%64#0, tmp%83#0, tmp%105#0, tmp%113#0
debug: Replacing {tmp%26#0, tmp%36#0, tmp%64#0, tmp%83#0, tmp%105#0, tmp%113#0} with tmp%23#0 made 6 modifications
debug: Found equivalence set: tmp%40#0, tmp%70#0, tmp%75#0, tmp%109#0, tmp%115#0, tmp%120#0, tmp%137#0, tmp%141#0
debug: Replacing {tmp%70#0, tmp%75#0, tmp%109#0, tmp%115#0, tmp%120#0, tmp%137#0, tmp%141#0} with tmp%40#0 made 7 modifications
debug: Found equivalence set: tmp%44#0, tmp%78#0, tmp%118#0, tmp%145#0
debug: Replacing {tmp%78#0, tmp%118#0, tmp%145#0} with tmp%44#0 made 3 modifications
debug: Found equivalence set: tmp%98#0, tmp%100#0
debug: Replacing {tmp%100#0} with tmp%98#0 made 1 modifications
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.contains.contract.two_u64
debug: Splitting parallel copies prior to optimization
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.contains.contract.two_u8
debug: Splitting parallel copies prior to optimization
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.contains.contract.one_arc4u64
debug: Splitting parallel copies prior to optimization
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.contains.contract.three_u512
debug: Splitting parallel copies prior to optimization
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.contains.contract.four_biguint
debug: Splitting parallel copies prior to optimization
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.contains.contract.MyContract.clear_state_program
debug: Splitting parallel copies prior to optimization
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Output IR to contains/out/MyContract.ssa.opt_pass_1.ir
debug: Begin optimization pass 2/100
debug: Optimizing subroutine test_cases.contains.contract.MyContract.approval_program
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable tmp%2#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.contains.contract.MyContract.is_in_tuple_1
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.contains.contract.MyContract.is_in_tuple_2
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.contains.contract.MyContract.is_in_tuple_3
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.contains.contract.MyContract.test_string_types
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (! 0u) to 1u
debug: Optimizer: Remove Unused Variables
debug: Not removing unused assignment since source is not marked as pure: let tmp%40#0: uint64 = test_cases.contains.contract.one_u64()
debug: Not removing unused assignment since source is not marked as pure: let tmp%48#0: uint64 = test_cases.contains.contract.one_u64()
debug: Not removing unused assignment since source is not marked as pure: let tmp%56#0: uint64 = test_cases.contains.contract.one_u64()
debug: Not removing unused assignment since source is not marked as pure: let tmp%63#0: uint64 = test_cases.contains.contract.one_u64()
debug: Not removing unused assignment since source is not marked as pure: let tmp%68#0: bytes = test_cases.contains.contract.foo_string()
debug: Not removing unused assignment since source is not marked as pure: let tmp%69#0: bytes = test_cases.contains.contract.foo_arc4()
debug: Removing unused variable tmp%70#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.contains.contract.foo_string
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.contains.contract.baz_string
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.contains.contract.bar_string
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.contains.contract.foo_arc4
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Simplified ((extract 6 2) as_bytes%0#0) to 0x0003
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable length%0#0
debug: Removing unused variable as_bytes%0#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.contains.contract.bar_arc4
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Simplified ((extract 6 2) as_bytes%0#0) to 0x0003
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable length%0#0
debug: Removing unused variable as_bytes%0#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.contains.contract.one_u64
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.contains.contract.MyContract.test_numeric_types
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (! 0u) to 1u
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable tmp%25#0
debug: Removing unused variable tmp%66#0
debug: Not removing unused assignment since source is not marked as pure: let tmp%88#0: bytes = test_cases.contains.contract.foo_string()
debug: Not removing unused assignment since source is not marked as pure: let tmp%96#0: bytes = test_cases.contains.contract.bar_string()
debug: Not removing unused assignment since source is not marked as pure: let tmp%102#0: bytes = test_cases.contains.contract.foo_arc4()
debug: Removing unused variable tmp%104#0
debug: Not removing unused assignment since source is not marked as pure: let tmp%107#0: bytes = test_cases.contains.contract.bar_arc4()
debug: Not removing unused assignment since source is not marked as pure: let tmp%112#0: bytes = test_cases.contains.contract.foo_string()
debug: Not removing unused assignment since source is not marked as pure: let tmp%117#0: bytes = test_cases.contains.contract.foo_string()
debug: Not removing unused assignment since source is not marked as pure: let tmp%122#0: bytes = test_cases.contains.contract.foo_string()
debug: Not removing unused assignment since source is not marked as pure: let tmp%128#0: bytes = test_cases.contains.contract.bar_string()
debug: Not removing unused assignment since source is not marked as pure: let tmp%133#0: bytes = test_cases.contains.contract.foo_arc4()
debug: Removing unused variable tmp%134#0
debug: Not removing unused assignment since source is not marked as pure: let tmp%136#0: bytes = test_cases.contains.contract.bar_arc4()
debug: Not removing unused assignment since source is not marked as pure: let tmp%140#0: bytes = test_cases.contains.contract.foo_string()
debug: Not removing unused assignment since source is not marked as pure: let tmp%144#0: bytes = test_cases.contains.contract.foo_string()
debug: Removing unused variable tmp%149#0
debug: Removing unused variable tmp%151#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: simplifying conditional branch with a constant into a goto
debug: simplified terminator of block@19: // or_contd_L93 from goto 0u ? block@21 : block@20 to goto block@20
debug: simplifying conditional branch with a constant into a goto
debug: simplified terminator of block@54: // or_contd_L102 from goto 0u ? block@55 : block@56 to goto block@56
debug: simplifying conditional branch with a constant into a goto
debug: simplified terminator of block@82: // bool_merge_L114 from goto 0u ? block@84 : block@83 to goto block@83
debug: simplifying conditional branch with a constant into a goto
debug: simplified terminator of block@102: // bool_merge_L120 from goto 0u ? block@104 : block@103 to goto block@103
debug: simplifying conditional branch with a constant into a goto
debug: simplified terminator of block@103: // or_contd_L130 from goto 0u ? block@104 : block@105 to goto block@105
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@20: // or_contd_L93 with block@19: // or_contd_L93 in block@22: // bool_false_L93
debug: Replaced predecessor block@20: // or_contd_L93 with block@19: // or_contd_L93 in block@21: // bool_true_L93
debug: Merged linear block@20: // or_contd_L93 into block@19: // or_contd_L93
debug: Replaced predecessor block@56: // bool_false_L102 with block@54: // or_contd_L102 in block@57: // bool_merge_L102
debug: Merged linear block@56: // bool_false_L102 into block@54: // or_contd_L102
debug: Replaced predecessor block@83: // or_contd_L115 with block@82: // bool_merge_L114 in block@85: // bool_false_L115
debug: Replaced predecessor block@83: // or_contd_L115 with block@82: // bool_merge_L114 in block@84: // bool_true_L115
debug: Merged linear block@83: // or_contd_L115 into block@82: // bool_merge_L114
debug: Replaced predecessor block@103: // or_contd_L130 with block@102: // bool_merge_L120 in block@105: // bool_false_L130
debug: Merged linear block@103: // or_contd_L130 into block@102: // bool_merge_L120
debug: Replaced predecessor block@105: // bool_false_L130 with block@102: // bool_merge_L120 in block@106: // bool_merge_L130
debug: Merged linear block@105: // bool_false_L130 into block@102: // bool_merge_L120
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Removing unreachable blocks: block@104: // bool_true_L130
debug: Removed unreachable predecessors from block@106: // bool_merge_L130
debug: Removing unreachable phi arguments: or_result%24#0 <- block@104
debug: Replacing trivial Phi node: let or_result%24#2: bool = φ(or_result%24#1 <- block@102) (or_result%24#2) with or_result%24#1
debug: Deleting Phi assignment: let or_result%24#2: bool = φ(or_result%24#1 <- block@102)
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.contains.contract.two_u64
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.contains.contract.two_u8
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.contains.contract.one_arc4u64
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.contains.contract.three_u512
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.contains.contract.four_biguint
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.contains.contract.MyContract.clear_state_program
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Output IR to contains/out/MyContract.ssa.opt_pass_2.ir
debug: Begin optimization pass 3/100
debug: Optimizing subroutine test_cases.contains.contract.MyContract.approval_program
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.contains.contract.MyContract.is_in_tuple_1
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.contains.contract.MyContract.is_in_tuple_2
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.contains.contract.MyContract.is_in_tuple_3
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.contains.contract.MyContract.test_string_types
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Not removing unused assignment since source is not marked as pure: let tmp%40#0: uint64 = test_cases.contains.contract.one_u64()
debug: Not removing unused assignment since source is not marked as pure: let tmp%48#0: uint64 = test_cases.contains.contract.one_u64()
debug: Not removing unused assignment since source is not marked as pure: let tmp%56#0: uint64 = test_cases.contains.contract.one_u64()
debug: Not removing unused assignment since source is not marked as pure: let tmp%63#0: uint64 = test_cases.contains.contract.one_u64()
debug: Not removing unused assignment since source is not marked as pure: let tmp%68#0: bytes = test_cases.contains.contract.foo_string()
debug: Not removing unused assignment since source is not marked as pure: let tmp%69#0: bytes = test_cases.contains.contract.foo_arc4()
debug: Removing unused variable tmp%71#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.contains.contract.foo_string
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.contains.contract.baz_string
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.contains.contract.bar_string
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.contains.contract.foo_arc4
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (concat 0x0003 "foo") to 0x0003666f6f
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable length_uint16%0#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.contains.contract.bar_arc4
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (concat 0x0003 "bar") to 0x0003626172
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable length_uint16%0#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.contains.contract.one_u64
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.contains.contract.MyContract.test_numeric_types
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (! 0u) to 1u
debug: Optimizer: Remove Unused Variables
debug: Not removing unused assignment since source is not marked as pure: let tmp%88#0: bytes = test_cases.contains.contract.foo_string()
debug: Not removing unused assignment since source is not marked as pure: let tmp%96#0: bytes = test_cases.contains.contract.bar_string()
debug: Not removing unused assignment since source is not marked as pure: let tmp%102#0: bytes = test_cases.contains.contract.foo_arc4()
debug: Not removing unused assignment since source is not marked as pure: let tmp%107#0: bytes = test_cases.contains.contract.bar_arc4()
debug: Not removing unused assignment since source is not marked as pure: let tmp%112#0: bytes = test_cases.contains.contract.foo_string()
debug: Not removing unused assignment since source is not marked as pure: let tmp%117#0: bytes = test_cases.contains.contract.foo_string()
debug: Not removing unused assignment since source is not marked as pure: let tmp%122#0: bytes = test_cases.contains.contract.foo_string()
debug: Not removing unused assignment since source is not marked as pure: let tmp%128#0: bytes = test_cases.contains.contract.bar_string()
debug: Not removing unused assignment since source is not marked as pure: let tmp%133#0: bytes = test_cases.contains.contract.foo_arc4()
debug: Removing unused variable tmp%135#0
debug: Not removing unused assignment since source is not marked as pure: let tmp%136#0: bytes = test_cases.contains.contract.bar_arc4()
debug: Not removing unused assignment since source is not marked as pure: let tmp%140#0: bytes = test_cases.contains.contract.foo_string()
debug: Not removing unused assignment since source is not marked as pure: let tmp%144#0: bytes = test_cases.contains.contract.foo_string()
debug: Removing unused variable or_result%24#1
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Merged linear block@106: // bool_merge_L130 into block@102: // bool_merge_L120
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.contains.contract.two_u64
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.contains.contract.two_u8
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.contains.contract.one_arc4u64
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.contains.contract.three_u512
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.contains.contract.four_biguint
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.contains.contract.MyContract.clear_state_program
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Output IR to contains/out/MyContract.ssa.opt_pass_3.ir
debug: Begin optimization pass 4/100
debug: Optimizing subroutine test_cases.contains.contract.MyContract.approval_program
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.contains.contract.MyContract.is_in_tuple_1
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.contains.contract.MyContract.is_in_tuple_2
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.contains.contract.MyContract.is_in_tuple_3
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.contains.contract.MyContract.test_string_types
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Not removing unused assignment since source is not marked as pure: let tmp%40#0: uint64 = test_cases.contains.contract.one_u64()
debug: Not removing unused assignment since source is not marked as pure: let tmp%48#0: uint64 = test_cases.contains.contract.one_u64()
debug: Not removing unused assignment since source is not marked as pure: let tmp%56#0: uint64 = test_cases.contains.contract.one_u64()
debug: Not removing unused assignment since source is not marked as pure: let tmp%63#0: uint64 = test_cases.contains.contract.one_u64()
debug: Not removing unused assignment since source is not marked as pure: let tmp%68#0: bytes = test_cases.contains.contract.foo_string()
debug: Not removing unused assignment since source is not marked as pure: let tmp%69#0: bytes = test_cases.contains.contract.foo_arc4()
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.contains.contract.foo_string
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.contains.contract.baz_string
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.contains.contract.bar_string
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.contains.contract.foo_arc4
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable encoded_value%0#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.contains.contract.bar_arc4
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable encoded_value%0#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.contains.contract.one_u64
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.contains.contract.MyContract.test_numeric_types
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Not removing unused assignment since source is not marked as pure: let tmp%88#0: bytes = test_cases.contains.contract.foo_string()
debug: Not removing unused assignment since source is not marked as pure: let tmp%96#0: bytes = test_cases.contains.contract.bar_string()
debug: Not removing unused assignment since source is not marked as pure: let tmp%102#0: bytes = test_cases.contains.contract.foo_arc4()
debug: Not removing unused assignment since source is not marked as pure: let tmp%107#0: bytes = test_cases.contains.contract.bar_arc4()
debug: Not removing unused assignment since source is not marked as pure: let tmp%112#0: bytes = test_cases.contains.contract.foo_string()
debug: Not removing unused assignment since source is not marked as pure: let tmp%117#0: bytes = test_cases.contains.contract.foo_string()
debug: Not removing unused assignment since source is not marked as pure: let tmp%122#0: bytes = test_cases.contains.contract.foo_string()
debug: Not removing unused assignment since source is not marked as pure: let tmp%128#0: bytes = test_cases.contains.contract.bar_string()
debug: Not removing unused assignment since source is not marked as pure: let tmp%133#0: bytes = test_cases.contains.contract.foo_arc4()
debug: Not removing unused assignment since source is not marked as pure: let tmp%136#0: bytes = test_cases.contains.contract.bar_arc4()
debug: Not removing unused assignment since source is not marked as pure: let tmp%140#0: bytes = test_cases.contains.contract.foo_string()
debug: Not removing unused assignment since source is not marked as pure: let tmp%144#0: bytes = test_cases.contains.contract.foo_string()
debug: Removing unused variable tmp%152#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.contains.contract.two_u64
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.contains.contract.two_u8
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.contains.contract.one_arc4u64
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.contains.contract.three_u512
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.contains.contract.four_biguint
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.contains.contract.MyContract.clear_state_program
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Output IR to contains/out/MyContract.ssa.opt_pass_4.ir
debug: Begin optimization pass 5/100
debug: Optimizing subroutine test_cases.contains.contract.MyContract.approval_program
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.contains.contract.MyContract.is_in_tuple_1
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.contains.contract.MyContract.is_in_tuple_2
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.contains.contract.MyContract.is_in_tuple_3
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.contains.contract.MyContract.test_string_types
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Not removing unused assignment since source is not marked as pure: let tmp%40#0: uint64 = test_cases.contains.contract.one_u64()
debug: Not removing unused assignment since source is not marked as pure: let tmp%48#0: uint64 = test_cases.contains.contract.one_u64()
debug: Not removing unused assignment since source is not marked as pure: let tmp%56#0: uint64 = test_cases.contains.contract.one_u64()
debug: Not removing unused assignment since source is not marked as pure: let tmp%63#0: uint64 = test_cases.contains.contract.one_u64()
debug: Not removing unused assignment since source is not marked as pure: let tmp%68#0: bytes = test_cases.contains.contract.foo_string()
debug: Not removing unused assignment since source is not marked as pure: let tmp%69#0: bytes = test_cases.contains.contract.foo_arc4()
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.contains.contract.foo_string
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.contains.contract.baz_string
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.contains.contract.bar_string
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.contains.contract.foo_arc4
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.contains.contract.bar_arc4
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.contains.contract.one_u64
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.contains.contract.MyContract.test_numeric_types
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Not removing unused assignment since source is not marked as pure: let tmp%88#0: bytes = test_cases.contains.contract.foo_string()
debug: Not removing unused assignment since source is not marked as pure: let tmp%96#0: bytes = test_cases.contains.contract.bar_string()
debug: Not removing unused assignment since source is not marked as pure: let tmp%102#0: bytes = test_cases.contains.contract.foo_arc4()
debug: Not removing unused assignment since source is not marked as pure: let tmp%107#0: bytes = test_cases.contains.contract.bar_arc4()
debug: Not removing unused assignment since source is not marked as pure: let tmp%112#0: bytes = test_cases.contains.contract.foo_string()
debug: Not removing unused assignment since source is not marked as pure: let tmp%117#0: bytes = test_cases.contains.contract.foo_string()
debug: Not removing unused assignment since source is not marked as pure: let tmp%122#0: bytes = test_cases.contains.contract.foo_string()
debug: Not removing unused assignment since source is not marked as pure: let tmp%128#0: bytes = test_cases.contains.contract.bar_string()
debug: Not removing unused assignment since source is not marked as pure: let tmp%133#0: bytes = test_cases.contains.contract.foo_arc4()
debug: Not removing unused assignment since source is not marked as pure: let tmp%136#0: bytes = test_cases.contains.contract.bar_arc4()
debug: Not removing unused assignment since source is not marked as pure: let tmp%140#0: bytes = test_cases.contains.contract.foo_string()
debug: Not removing unused assignment since source is not marked as pure: let tmp%144#0: bytes = test_cases.contains.contract.foo_string()
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.contains.contract.two_u64
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.contains.contract.two_u8
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.contains.contract.one_arc4u64
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.contains.contract.three_u512
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.contains.contract.four_biguint
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.contains.contract.MyContract.clear_state_program
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: No optimizations performed in pass 5, ending loop
debug: Removing Phis from test_cases.contains.contract.MyContract.approval_program
debug: Removing Phis from test_cases.contains.contract.MyContract.is_in_tuple_1
debug: Removing Phis from test_cases.contains.contract.MyContract.is_in_tuple_2
debug: Removing Phis from test_cases.contains.contract.MyContract.is_in_tuple_3
debug: Removing Phis from test_cases.contains.contract.MyContract.test_string_types
debug: Removing Phis from test_cases.contains.contract.foo_string
debug: Removing Phis from test_cases.contains.contract.baz_string
debug: Removing Phis from test_cases.contains.contract.bar_string
debug: Removing Phis from test_cases.contains.contract.foo_arc4
debug: Removing Phis from test_cases.contains.contract.bar_arc4
debug: Removing Phis from test_cases.contains.contract.one_u64
debug: Removing Phis from test_cases.contains.contract.MyContract.test_numeric_types
debug: Removing Phis from test_cases.contains.contract.two_u64
debug: Removing Phis from test_cases.contains.contract.two_u8
debug: Removing Phis from test_cases.contains.contract.one_arc4u64
debug: Removing Phis from test_cases.contains.contract.three_u512
debug: Removing Phis from test_cases.contains.contract.four_biguint
debug: Removing Phis from test_cases.contains.contract.MyContract.clear_state_program
debug: Coalescing local variables in test_cases.contains.contract.MyContract.approval_program using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Coalescing local variables in test_cases.contains.contract.MyContract.is_in_tuple_1 using strategy RootOperandGrouping
debug: Coalescing or_result%0#0 with [or_result%0#5, or_result%0#1, or_result%0#2]
debug: Coalescing resulted in 7 replacement/s
debug: Coalescing local variables in test_cases.contains.contract.MyContract.is_in_tuple_2 using strategy RootOperandGrouping
debug: Coalescing or_result%0#0 with [or_result%0#5, or_result%0#1, or_result%0#2]
debug: Coalescing resulted in 7 replacement/s
debug: Coalescing local variables in test_cases.contains.contract.MyContract.is_in_tuple_3 using strategy RootOperandGrouping
debug: Coalescing or_result%0#0 with [or_result%0#5, or_result%0#1, or_result%0#2]
debug: Coalescing resulted in 7 replacement/s
debug: Coalescing local variables in test_cases.contains.contract.MyContract.test_string_types using strategy RootOperandGrouping
debug: Coalescing or_result%0#0 with [or_result%0#5, or_result%0#1, or_result%0#2]
debug: Coalescing or_result%1#0 with [or_result%1#5, or_result%1#1, or_result%1#2]
debug: Coalescing or_result%2#0 with [or_result%2#5, or_result%2#1, or_result%2#2]
debug: Coalescing or_result%3#0 with [or_result%3#5, or_result%3#1, or_result%3#2]
debug: Coalescing or_result%4#0 with [or_result%4#5, or_result%4#1, or_result%4#2]
debug: Coalescing or_result%5#0 with [or_result%5#5, or_result%5#1, or_result%5#2]
debug: Coalescing or_result%6#0 with [or_result%6#5, or_result%6#1, or_result%6#2]
debug: Coalescing or_result%7#0 with [or_result%7#5, or_result%7#1, or_result%7#2]
debug: Coalescing or_result%8#0 with [or_result%8#5, or_result%8#1, or_result%8#2]
debug: Coalescing or_result%9#0 with [or_result%9#5, or_result%9#1, or_result%9#2]
debug: Coalescing resulted in 70 replacement/s
debug: Coalescing local variables in test_cases.contains.contract.foo_string using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Coalescing local variables in test_cases.contains.contract.baz_string using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Coalescing local variables in test_cases.contains.contract.bar_string using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Coalescing local variables in test_cases.contains.contract.foo_arc4 using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Coalescing local variables in test_cases.contains.contract.bar_arc4 using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Coalescing local variables in test_cases.contains.contract.one_u64 using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Coalescing local variables in test_cases.contains.contract.MyContract.test_numeric_types using strategy RootOperandGrouping
debug: Coalescing or_result%0#0 with [or_result%0#5, or_result%0#1, or_result%0#2]
debug: Coalescing or_result%1#0 with [or_result%1#5, or_result%1#1, or_result%1#2]
debug: Coalescing or_result%2#0 with [or_result%2#5, or_result%2#1, or_result%2#2]
debug: Coalescing or_result%3#0 with [or_result%3#5, or_result%3#1, or_result%3#2]
debug: Coalescing or_result%4#0 with [or_result%4#5, or_result%4#1, or_result%4#2]
debug: Coalescing or_result%5#0 with [or_result%5#5, or_result%5#1, or_result%5#2]
debug: Coalescing or_result%6#0 with [or_result%6#5, or_result%6#1, or_result%6#2]
debug: Coalescing or_result%7#0 with [or_result%7#5, or_result%7#1, or_result%7#2]
debug: Coalescing or_result%8#0 with [or_result%8#5, or_result%8#1, or_result%8#2]
debug: Coalescing or_result%9#0 with [or_result%9#5, or_result%9#1, or_result%9#2]
debug: Coalescing or_result%10#0 with [or_result%10#5, or_result%10#1, or_result%10#2]
debug: Coalescing or_result%11#0 with [or_result%11#5, or_result%11#1, or_result%11#2]
debug: Coalescing or_result%12#0 with [or_result%12#1, or_result%12#5, or_result%12#2]
debug: Coalescing or_result%13#0 with [or_result%13#5, or_result%13#1, or_result%13#2]
debug: Coalescing or_result%14#0 with [or_result%14#5, or_result%14#1, or_result%14#2]
debug: Coalescing or_result%15#0 with [or_result%15#5, or_result%15#1, or_result%15#2]
debug: Coalescing or_result%16#0 with [or_result%16#5, or_result%16#1, or_result%16#2]
debug: Coalescing or_result%17#0 with [or_result%17#5, or_result%17#1, or_result%17#2]
debug: Coalescing or_result%18#0 with [or_result%18#5, or_result%18#1, or_result%18#2]
debug: Coalescing or_result%19#0 with [or_result%19#5, or_result%19#1, or_result%19#2]
debug: Coalescing or_result%20#0 with [or_result%20#5, or_result%20#1, or_result%20#2]
debug: Coalescing or_result%21#0 with [or_result%21#5, or_result%21#1, or_result%21#2]
debug: Coalescing or_result%22#0 with [or_result%22#5, or_result%22#1, or_result%22#2]
debug: Coalescing or_result%23#0 with [or_result%23#5, or_result%23#1, or_result%23#2]
debug: Coalescing resulted in 168 replacement/s
debug: Coalescing local variables in test_cases.contains.contract.two_u64 using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Coalescing local variables in test_cases.contains.contract.two_u8 using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Coalescing local variables in test_cases.contains.contract.one_arc4u64 using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Coalescing local variables in test_cases.contains.contract.three_u512 using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Coalescing local variables in test_cases.contains.contract.four_biguint using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Coalescing local variables in test_cases.contains.contract.MyContract.clear_state_program using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in test_cases.contains.contract.MyContract.approval_program
debug: Sequentializing parallel copies in test_cases.contains.contract.MyContract.is_in_tuple_1
debug: Sequentializing parallel copies in test_cases.contains.contract.MyContract.is_in_tuple_2
debug: Sequentializing parallel copies in test_cases.contains.contract.MyContract.is_in_tuple_3
debug: Sequentializing parallel copies in test_cases.contains.contract.MyContract.test_string_types
debug: Sequentializing parallel copies in test_cases.contains.contract.foo_string
debug: Sequentializing parallel copies in test_cases.contains.contract.baz_string
debug: Sequentializing parallel copies in test_cases.contains.contract.bar_string
debug: Sequentializing parallel copies in test_cases.contains.contract.foo_arc4
debug: Sequentializing parallel copies in test_cases.contains.contract.bar_arc4
debug: Sequentializing parallel copies in test_cases.contains.contract.one_u64
debug: Sequentializing parallel copies in test_cases.contains.contract.MyContract.test_numeric_types
debug: Sequentializing parallel copies in test_cases.contains.contract.two_u64
debug: Sequentializing parallel copies in test_cases.contains.contract.two_u8
debug: Sequentializing parallel copies in test_cases.contains.contract.one_arc4u64
debug: Sequentializing parallel copies in test_cases.contains.contract.three_u512
debug: Sequentializing parallel copies in test_cases.contains.contract.four_biguint
debug: Sequentializing parallel copies in test_cases.contains.contract.MyContract.clear_state_program
debug: Performing post-SSA optimizations
debug: Output IR to contains/out/MyContract.destructured.ir
debug: Inserted main_block@0.ops[16]: 'store tmp%0#0 to l-stack (copy)'
debug: Replaced main_block@0.ops[18]: 'load tmp%0#0' with 'load tmp%0#0 from l-stack (no copy)'
debug: Inserted main_block@0.ops[36]: 'store tmp%1#0 to l-stack (copy)'
debug: Replaced main_block@0.ops[38]: 'load tmp%1#0' with 'load tmp%1#0 from l-stack (no copy)'
debug: Inserted main_block@0.ops[54]: 'store tmp%3#0 to l-stack (copy)'
debug: Replaced main_block@0.ops[56]: 'load tmp%3#0' with 'load tmp%3#0 from l-stack (no copy)'
debug: Inserted main_block@0.ops[11]: 'store one_false#0 to l-stack (copy)'
debug: Replaced main_block@0.ops[15]: 'load one_false#0' with 'load one_false#0 from l-stack (no copy)'
debug: Inserted main_block@0.ops[32]: 'store two_false#0 to l-stack (copy)'
debug: Replaced main_block@0.ops[36]: 'load two_false#0' with 'load two_false#0 from l-stack (no copy)'
debug: Inserted main_block@0.ops[51]: 'store three_false#0 to l-stack (copy)'
debug: Replaced main_block@0.ops[55]: 'load three_false#0' with 'load three_false#0 from l-stack (no copy)'
debug: Inserted main_block@0.ops[46]: 'store three_true#0 to l-stack (copy)'
debug: Replaced main_block@0.ops[54]: 'load three_true#0' with 'load three_true#0 from l-stack (no copy)'
debug: Inserted main_block@0.ops[5]: 'store one_true#0 to l-stack (copy)'
debug: Replaced main_block@0.ops[14]: 'load one_true#0' with 'load one_true#0 from l-stack (no copy)'
debug: Inserted main_block@0.ops[27]: 'store two_true#0 to l-stack (copy)'
debug: Replaced main_block@0.ops[36]: 'load two_true#0' with 'load two_true#0 from l-stack (no copy)'
debug: Inserted is_in_tuple_1_block@0.ops[3]: 'store tmp%0#0 to l-stack (copy)'
debug: Replaced is_in_tuple_1_block@0.ops[5]: 'load tmp%0#0' with 'load tmp%0#0 from l-stack (no copy)'
debug: Inserted is_in_tuple_1_or_contd@1.ops[3]: 'store tmp%1#0 to l-stack (copy)'
debug: Replaced is_in_tuple_1_or_contd@1.ops[5]: 'load tmp%1#0' with 'load tmp%1#0 from l-stack (no copy)'
debug: Found 2 edge set/s for test_cases.contains.contract.MyContract.is_in_tuple_1
debug: Allocated 1 variable/s to x-stack: or_result%0#0
debug: shared x-stack for is_in_tuple_1_bool_true@2 -> is_in_tuple_1_bool_merge@4: or_result%0#0
debug: shared x-stack for is_in_tuple_1_bool_false@3 -> is_in_tuple_1_bool_merge@4: or_result%0#0
debug: Inserted is_in_tuple_2_block@0.ops[3]: 'store tmp%0#0 to l-stack (copy)'
debug: Replaced is_in_tuple_2_block@0.ops[5]: 'load tmp%0#0' with 'load tmp%0#0 from l-stack (no copy)'
debug: Inserted is_in_tuple_2_or_contd@1.ops[3]: 'store tmp%1#0 to l-stack (copy)'
debug: Replaced is_in_tuple_2_or_contd@1.ops[5]: 'load tmp%1#0' with 'load tmp%1#0 from l-stack (no copy)'
debug: Found 2 edge set/s for test_cases.contains.contract.MyContract.is_in_tuple_2
debug: Allocated 1 variable/s to x-stack: or_result%0#0
debug: shared x-stack for is_in_tuple_2_bool_true@2 -> is_in_tuple_2_bool_merge@4: or_result%0#0
debug: shared x-stack for is_in_tuple_2_bool_false@3 -> is_in_tuple_2_bool_merge@4: or_result%0#0
debug: Inserted is_in_tuple_3_block@0.ops[3]: 'store tmp%0#0 to l-stack (copy)'
debug: Replaced is_in_tuple_3_block@0.ops[5]: 'load tmp%0#0' with 'load tmp%0#0 from l-stack (no copy)'
debug: Inserted is_in_tuple_3_or_contd@1.ops[3]: 'store tmp%1#0 to l-stack (copy)'
debug: Replaced is_in_tuple_3_or_contd@1.ops[5]: 'load tmp%1#0' with 'load tmp%1#0 from l-stack (no copy)'
debug: Found 2 edge set/s for test_cases.contains.contract.MyContract.is_in_tuple_3
debug: Allocated 1 variable/s to x-stack: or_result%0#0
debug: shared x-stack for is_in_tuple_3_bool_true@2 -> is_in_tuple_3_bool_merge@4: or_result%0#0
debug: shared x-stack for is_in_tuple_3_bool_false@3 -> is_in_tuple_3_bool_merge@4: or_result%0#0
debug: Inserted test_string_types_block@0.ops[9]: 'store tmp%2#0 to l-stack (copy)'
debug: Replaced test_string_types_block@0.ops[11]: 'load tmp%2#0' with 'load tmp%2#0 from l-stack (no copy)'
debug: Inserted test_string_types_block@0.ops[3]: 'store tmp%0#0 to l-stack (copy)'
debug: Replaced test_string_types_block@0.ops[8]: 'load tmp%0#0' with 'load tmp%0#0 from l-stack (no copy)'
debug: Inserted test_string_types_block@0.ops[1]: 'store awst_tmp%0#0 to l-stack (copy)'
debug: Replaced test_string_types_block@0.ops[8]: 'load awst_tmp%0#0' with 'load awst_tmp%0#0 from l-stack (no copy)'
debug: Inserted test_string_types_or_contd@1.ops[3]: 'store tmp%3#0 to l-stack (copy)'
debug: Replaced test_string_types_or_contd@1.ops[5]: 'load tmp%3#0' with 'load tmp%3#0 from l-stack (no copy)'
debug: Inserted test_string_types_bool_merge@4.ops[11]: 'store tmp%6#0 to l-stack (copy)'
debug: Replaced test_string_types_bool_merge@4.ops[13]: 'load tmp%6#0' with 'load tmp%6#0 from l-stack (no copy)'
debug: Inserted test_string_types_bool_merge@4.ops[5]: 'store tmp%4#0 to l-stack (copy)'
debug: Replaced test_string_types_bool_merge@4.ops[10]: 'load tmp%4#0' with 'load tmp%4#0 from l-stack (no copy)'
debug: Inserted test_string_types_bool_merge@4.ops[3]: 'store awst_tmp%1#0 to l-stack (copy)'
debug: Replaced test_string_types_bool_merge@4.ops[10]: 'load awst_tmp%1#0' with 'load awst_tmp%1#0 from l-stack (no copy)'
debug: Inserted test_string_types_or_contd@5.ops[3]: 'store tmp%7#0 to l-stack (copy)'
debug: Replaced test_string_types_or_contd@5.ops[5]: 'load tmp%7#0' with 'load tmp%7#0 from l-stack (no copy)'
debug: Inserted test_string_types_bool_merge@8.ops[2]: 'store tmp%8#0 to l-stack (copy)'
debug: Replaced test_string_types_bool_merge@8.ops[4]: 'load tmp%8#0' with 'load tmp%8#0 from l-stack (no copy)'
debug: Inserted test_string_types_bool_merge@8.ops[20]: 'store tmp%13#0 to l-stack (copy)'
debug: Replaced test_string_types_bool_merge@8.ops[22]: 'load tmp%13#0' with 'load tmp%13#0 from l-stack (no copy)'
debug: Inserted test_string_types_bool_merge@8.ops[16]: 'store awst_tmp%2#0 to l-stack (copy)'
debug: Replaced test_string_types_bool_merge@8.ops[19]: 'load awst_tmp%2#0' with 'load awst_tmp%2#0 from l-stack (no copy)'
debug: Inserted test_string_types_bool_merge@8.ops[14]: 'store tmp%12#0 to l-stack (copy)'
debug: Replaced test_string_types_bool_merge@8.ops[19]: 'load tmp%12#0' with 'load tmp%12#0 from l-stack (no copy)'
debug: Inserted test_string_types_bool_merge@8.ops[7]: 'store tmp%9#0 to l-stack (copy)'
debug: Replaced test_string_types_bool_merge@8.ops[13]: 'load tmp%9#0' with 'load tmp%9#0 from l-stack (no copy)'
debug: Inserted test_string_types_or_contd@9.ops[3]: 'store tmp%14#0 to l-stack (copy)'
debug: Replaced test_string_types_or_contd@9.ops[5]: 'load tmp%14#0' with 'load tmp%14#0 from l-stack (no copy)'
debug: Inserted test_string_types_or_contd@10.ops[3]: 'store tmp%15#0 to l-stack (copy)'
debug: Replaced test_string_types_or_contd@10.ops[5]: 'load tmp%15#0' with 'load tmp%15#0 from l-stack (no copy)'
debug: Inserted test_string_types_bool_merge@13.ops[3]: 'store awst_tmp%3#0 to l-stack (copy)'
debug: Replaced test_string_types_bool_merge@13.ops[5]: 'load awst_tmp%3#0' with 'load awst_tmp%3#0 from l-stack (no copy)'
debug: Inserted test_string_types_bool_merge@13.ops[17]: 'store tmp%20#0 to l-stack (copy)'
debug: Replaced test_string_types_bool_merge@13.ops[19]: 'load tmp%20#0' with 'load tmp%20#0 from l-stack (no copy)'
debug: Inserted test_string_types_bool_merge@13.ops[9]: 'store tmp%17#0 to l-stack (copy)'
debug: Replaced test_string_types_bool_merge@13.ops[16]: 'load tmp%17#0' with 'load tmp%17#0 from l-stack (no copy)'
debug: Inserted test_string_types_bool_merge@13.ops[7]: 'store tmp%16#0 to l-stack (copy)'
debug: Replaced test_string_types_bool_merge@13.ops[16]: 'load tmp%16#0' with 'load tmp%16#0 from l-stack (no copy)'
debug: Inserted test_string_types_or_contd@14.ops[3]: 'store tmp%22#0 to l-stack (copy)'
debug: Replaced test_string_types_or_contd@14.ops[5]: 'load tmp%22#0' with 'load tmp%22#0 from l-stack (no copy)'
debug: Inserted test_string_types_or_contd@15.ops[3]: 'store tmp%24#0 to l-stack (copy)'
debug: Replaced test_string_types_or_contd@15.ops[5]: 'load tmp%24#0' with 'load tmp%24#0 from l-stack (no copy)'
debug: Inserted test_string_types_bool_merge@18.ops[14]: 'store tmp%28#0 to l-stack (copy)'
debug: Replaced test_string_types_bool_merge@18.ops[16]: 'load tmp%28#0' with 'load tmp%28#0 from l-stack (no copy)'
debug: Inserted test_string_types_bool_merge@18.ops[10]: 'store awst_tmp%4#0 to l-stack (copy)'
debug: Replaced test_string_types_bool_merge@18.ops[13]: 'load awst_tmp%4#0' with 'load awst_tmp%4#0 from l-stack (no copy)'
debug: Inserted test_string_types_bool_merge@18.ops[3]: 'store tmp%25#0 to l-stack (copy)'
debug: Replaced test_string_types_bool_merge@18.ops[7]: 'load tmp%25#0' with 'load tmp%25#0 from l-stack (no copy)'
debug: Inserted test_string_types_bool_merge@18.ops[9]: 'store tmp%27#0 to l-stack (copy)'
debug: Replaced test_string_types_bool_merge@18.ops[14]: 'load tmp%27#0' with 'load tmp%27#0 from l-stack (no copy)'
debug: Inserted test_string_types_or_contd@19.ops[3]: 'store tmp%29#0 to l-stack (copy)'
debug: Replaced test_string_types_or_contd@19.ops[5]: 'load tmp%29#0' with 'load tmp%29#0 from l-stack (no copy)'
debug: Inserted test_string_types_bool_merge@22.ops[2]: 'store tmp%30#0 to l-stack (copy)'
debug: Replaced test_string_types_bool_merge@22.ops[4]: 'load tmp%30#0' with 'load tmp%30#0 from l-stack (no copy)'
debug: Inserted test_string_types_bool_merge@22.ops[15]: 'store tmp%33#0 to l-stack (copy)'
debug: Replaced test_string_types_bool_merge@22.ops[17]: 'load tmp%33#0' with 'load tmp%33#0 from l-stack (no copy)'
debug: Inserted test_string_types_bool_merge@22.ops[9]: 'store tmp%31#0 to l-stack (copy)'
debug: Replaced test_string_types_bool_merge@22.ops[14]: 'load tmp%31#0' with 'load tmp%31#0 from l-stack (no copy)'
debug: Inserted test_string_types_bool_merge@22.ops[7]: 'store awst_tmp%5#0 to l-stack (copy)'
debug: Replaced test_string_types_bool_merge@22.ops[14]: 'load awst_tmp%5#0' with 'load awst_tmp%5#0 from l-stack (no copy)'
debug: Inserted test_string_types_or_contd@23.ops[2]: 'store tmp%34#0 to l-stack (copy)'
debug: Replaced test_string_types_or_contd@23.ops[4]: 'load tmp%34#0' with 'load tmp%34#0 from l-stack (no copy)'
debug: Inserted test_string_types_or_contd@23.ops[7]: 'store tmp%35#0 to l-stack (copy)'
debug: Replaced test_string_types_or_contd@23.ops[9]: 'load tmp%35#0' with 'load tmp%35#0 from l-stack (no copy)'
debug: Inserted test_string_types_bool_merge@26.ops[2]: 'store tmp%36#0 to l-stack (copy)'
debug: Replaced test_string_types_bool_merge@26.ops[4]: 'load tmp%36#0' with 'load tmp%36#0 from l-stack (no copy)'
debug: Inserted test_string_types_bool_merge@26.ops[22]: 'store tmp%42#0 to l-stack (copy)'
debug: Replaced test_string_types_bool_merge@26.ops[24]: 'load tmp%42#0' with 'load tmp%42#0 from l-stack (no copy)'
debug: Inserted test_string_types_bool_merge@26.ops[18]: 'store awst_tmp%6#0 to l-stack (copy)'
debug: Replaced test_string_types_bool_merge@26.ops[21]: 'load awst_tmp%6#0' with 'load awst_tmp%6#0 from l-stack (no copy)'
debug: Inserted test_string_types_bool_merge@26.ops[16]: 'store tmp%41#0 to l-stack (copy)'
debug: Replaced test_string_types_bool_merge@26.ops[21]: 'load tmp%41#0' with 'load tmp%41#0 from l-stack (no copy)'
debug: Inserted test_string_types_bool_merge@26.ops[7]: 'store tmp%37#0 to l-stack (copy)'
debug: Replaced test_string_types_bool_merge@26.ops[15]: 'load tmp%37#0' with 'load tmp%37#0 from l-stack (no copy)'
debug: Inserted test_string_types_or_contd@27.ops[3]: 'store tmp%43#0 to l-stack (copy)'
debug: Replaced test_string_types_or_contd@27.ops[5]: 'load tmp%43#0' with 'load tmp%43#0 from l-stack (no copy)'
debug: Inserted test_string_types_or_contd@28.ops[3]: 'store tmp%44#0 to l-stack (copy)'
debug: Replaced test_string_types_or_contd@28.ops[5]: 'load tmp%44#0' with 'load tmp%44#0 from l-stack (no copy)'
debug: Inserted test_string_types_bool_merge@31.ops[15]: 'store tmp%49#0 to l-stack (copy)'
debug: Replaced test_string_types_bool_merge@31.ops[17]: 'load tmp%49#0' with 'load tmp%49#0 from l-stack (no copy)'
debug: Inserted test_string_types_bool_merge@31.ops[5]: 'store tmp%45#0 to l-stack (copy)'
debug: Replaced test_string_types_bool_merge@31.ops[14]: 'load tmp%45#0' with 'load tmp%45#0 from l-stack (no copy)'
debug: Inserted test_string_types_bool_merge@31.ops[3]: 'store awst_tmp%7#0 to l-stack (copy)'
debug: Replaced test_string_types_bool_merge@31.ops[14]: 'load awst_tmp%7#0' with 'load awst_tmp%7#0 from l-stack (no copy)'
debug: Inserted test_string_types_or_contd@32.ops[2]: 'store tmp%50#0 to l-stack (copy)'
debug: Replaced test_string_types_or_contd@32.ops[4]: 'load tmp%50#0' with 'load tmp%50#0 from l-stack (no copy)'
debug: Inserted test_string_types_or_contd@32.ops[7]: 'store tmp%51#0 to l-stack (copy)'
debug: Replaced test_string_types_or_contd@32.ops[9]: 'load tmp%51#0' with 'load tmp%51#0 from l-stack (no copy)'
debug: Inserted test_string_types_or_contd@33.ops[3]: 'store tmp%53#0 to l-stack (copy)'
debug: Replaced test_string_types_or_contd@33.ops[5]: 'load tmp%53#0' with 'load tmp%53#0 from l-stack (no copy)'
debug: Inserted test_string_types_bool_merge@36.ops[16]: 'store tmp%58#0 to l-stack (copy)'
debug: Replaced test_string_types_bool_merge@36.ops[18]: 'load tmp%58#0' with 'load tmp%58#0 from l-stack (no copy)'
debug: Inserted test_string_types_bool_merge@36.ops[12]: 'store awst_tmp%8#0 to l-stack (copy)'
debug: Replaced test_string_types_bool_merge@36.ops[15]: 'load awst_tmp%8#0' with 'load awst_tmp%8#0 from l-stack (no copy)'
debug: Inserted test_string_types_bool_merge@36.ops[10]: 'store tmp%57#0 to l-stack (copy)'
debug: Replaced test_string_types_bool_merge@36.ops[15]: 'load tmp%57#0' with 'load tmp%57#0 from l-stack (no copy)'
debug: Inserted test_string_types_bool_merge@36.ops[3]: 'store tmp%54#0 to l-stack (copy)'
debug: Replaced test_string_types_bool_merge@36.ops[9]: 'load tmp%54#0' with 'load tmp%54#0 from l-stack (no copy)'
debug: Inserted test_string_types_or_contd@37.ops[3]: 'store tmp%59#0 to l-stack (copy)'
debug: Replaced test_string_types_or_contd@37.ops[5]: 'load tmp%59#0' with 'load tmp%59#0 from l-stack (no copy)'
debug: Inserted test_string_types_bool_merge@40.ops[2]: 'store tmp%60#0 to l-stack (copy)'
debug: Replaced test_string_types_bool_merge@40.ops[4]: 'load tmp%60#0' with 'load tmp%60#0 from l-stack (no copy)'
debug: Inserted test_string_types_bool_merge@40.ops[17]: 'store tmp%64#0 to l-stack (copy)'
debug: Replaced test_string_types_bool_merge@40.ops[19]: 'load tmp%64#0' with 'load tmp%64#0 from l-stack (no copy)'
debug: Inserted test_string_types_bool_merge@40.ops[9]: 'store tmp%61#0 to l-stack (copy)'
debug: Replaced test_string_types_bool_merge@40.ops[16]: 'load tmp%61#0' with 'load tmp%61#0 from l-stack (no copy)'
debug: Inserted test_string_types_bool_merge@40.ops[7]: 'store awst_tmp%9#0 to l-stack (copy)'
debug: Replaced test_string_types_bool_merge@40.ops[16]: 'load awst_tmp%9#0' with 'load awst_tmp%9#0 from l-stack (no copy)'
debug: Inserted test_string_types_or_contd@41.ops[2]: 'store tmp%65#0 to l-stack (copy)'
debug: Replaced test_string_types_or_contd@41.ops[4]: 'load tmp%65#0' with 'load tmp%65#0 from l-stack (no copy)'
debug: Inserted test_string_types_or_contd@41.ops[7]: 'store tmp%66#0 to l-stack (copy)'
debug: Replaced test_string_types_or_contd@41.ops[9]: 'load tmp%66#0' with 'load tmp%66#0 from l-stack (no copy)'
debug: Inserted test_string_types_bool_merge@44.ops[2]: 'store tmp%67#0 to l-stack (copy)'
debug: Replaced test_string_types_bool_merge@44.ops[4]: 'load tmp%67#0' with 'load tmp%67#0 from l-stack (no copy)'
debug: Found 20 edge set/s for test_cases.contains.contract.MyContract.test_string_types
debug: Allocated 10 variable/s to x-stack: or_result%0#0, or_result%1#0, or_result%2#0, or_result%3#0, or_result%4#0, or_result%5#0, or_result%6#0, or_result%7#0, or_result%8#0, or_result%9#0
debug: shared x-stack for test_string_types_bool_true@2 -> test_string_types_bool_merge@4: or_result%0#0
debug: shared x-stack for test_string_types_bool_false@3 -> test_string_types_bool_merge@4: or_result%0#0
debug: shared x-stack for test_string_types_bool_true@6 -> test_string_types_bool_merge@8: or_result%1#0
debug: shared x-stack for test_string_types_bool_false@7 -> test_string_types_bool_merge@8: or_result%1#0
debug: shared x-stack for test_string_types_bool_true@11 -> test_string_types_bool_merge@13: or_result%2#0
debug: shared x-stack for test_string_types_bool_false@12 -> test_string_types_bool_merge@13: or_result%2#0
debug: shared x-stack for test_string_types_bool_true@16 -> test_string_types_bool_merge@18: or_result%3#0
debug: shared x-stack for test_string_types_bool_false@17 -> test_string_types_bool_merge@18: or_result%3#0
debug: shared x-stack for test_string_types_bool_true@20 -> test_string_types_bool_merge@22: or_result%4#0
debug: shared x-stack for test_string_types_bool_false@21 -> test_string_types_bool_merge@22: or_result%4#0
debug: shared x-stack for test_string_types_bool_true@24 -> test_string_types_bool_merge@26: or_result%5#0
debug: shared x-stack for test_string_types_bool_false@25 -> test_string_types_bool_merge@26: or_result%5#0
debug: shared x-stack for test_string_types_bool_true@29 -> test_string_types_bool_merge@31: or_result%6#0
debug: shared x-stack for test_string_types_bool_false@30 -> test_string_types_bool_merge@31: or_result%6#0
debug: shared x-stack for test_string_types_bool_true@34 -> test_string_types_bool_merge@36: or_result%7#0
debug: shared x-stack for test_string_types_bool_false@35 -> test_string_types_bool_merge@36: or_result%7#0
debug: shared x-stack for test_string_types_bool_true@38 -> test_string_types_bool_merge@40: or_result%8#0
debug: shared x-stack for test_string_types_bool_false@39 -> test_string_types_bool_merge@40: or_result%8#0
debug: shared x-stack for test_string_types_bool_true@42 -> test_string_types_bool_merge@44: or_result%9#0
debug: shared x-stack for test_string_types_bool_false@43 -> test_string_types_bool_merge@44: or_result%9#0
debug: test_cases.contains.contract.MyContract.test_string_types f-stack entry: ['awst_tmp%1#0', 'awst_tmp%2#0', 'awst_tmp%4#0', 'awst_tmp%5#0', 'awst_tmp%6#0', 'awst_tmp%7#0', 'awst_tmp%8#0', 'awst_tmp%9#0', 'tmp%10#0', 'tmp%11#0', 'tmp%16#0', 'tmp%18#0', 'tmp%19#0', 'tmp%26#0', 'tmp%32#0', 'tmp%38#0', 'tmp%39#0', 'tmp%46#0', 'tmp%47#0', 'tmp%5#0', 'tmp%50#0', 'tmp%55#0', 'tmp%62#0']
debug: test_cases.contains.contract.MyContract.test_string_types f-stack on first store: ['awst_tmp%0#0', 'tmp%1#0']
debug: Inserted test_numeric_types_block@0.ops[9]: 'store tmp%2#0 to l-stack (copy)'
debug: Replaced test_numeric_types_block@0.ops[11]: 'load tmp%2#0' with 'load tmp%2#0 from l-stack (no copy)'
debug: Inserted test_numeric_types_block@0.ops[3]: 'store tmp%0#0 to l-stack (copy)'
debug: Replaced test_numeric_types_block@0.ops[8]: 'load tmp%0#0' with 'load tmp%0#0 from l-stack (no copy)'
debug: Inserted test_numeric_types_block@0.ops[1]: 'store awst_tmp%0#0 to l-stack (copy)'
debug: Replaced test_numeric_types_block@0.ops[8]: 'load awst_tmp%0#0' with 'load awst_tmp%0#0 from l-stack (no copy)'
debug: Inserted test_numeric_types_or_contd@1.ops[3]: 'store tmp%3#0 to l-stack (copy)'
debug: Replaced test_numeric_types_or_contd@1.ops[5]: 'load tmp%3#0' with 'load tmp%3#0 from l-stack (no copy)'
debug: Inserted test_numeric_types_bool_merge@4.ops[9]: 'store tmp%5#0 to l-stack (copy)'
debug: Replaced test_numeric_types_bool_merge@4.ops[11]: 'load tmp%5#0' with 'load tmp%5#0 from l-stack (no copy)'
debug: Inserted test_numeric_types_bool_merge@4.ops[3]: 'store awst_tmp%1#0 to l-stack (copy)'
debug: Replaced test_numeric_types_bool_merge@4.ops[7]: 'load awst_tmp%1#0' with 'load awst_tmp%1#0 from l-stack (no copy)'
debug: Inserted test_numeric_types_or_contd@5.ops[3]: 'store tmp%6#0 to l-stack (copy)'
debug: Replaced test_numeric_types_or_contd@5.ops[5]: 'load tmp%6#0' with 'load tmp%6#0 from l-stack (no copy)'
debug: Inserted test_numeric_types_bool_merge@8.ops[2]: 'store tmp%7#0 to l-stack (copy)'
debug: Replaced test_numeric_types_bool_merge@8.ops[4]: 'load tmp%7#0' with 'load tmp%7#0 from l-stack (no copy)'
debug: Inserted test_numeric_types_bool_merge@8.ops[15]: 'store tmp%10#0 to l-stack (copy)'
debug: Replaced test_numeric_types_bool_merge@8.ops[17]: 'load tmp%10#0' with 'load tmp%10#0 from l-stack (no copy)'
debug: Inserted test_numeric_types_bool_merge@8.ops[9]: 'store tmp%8#0 to l-stack (copy)'
debug: Replaced test_numeric_types_bool_merge@8.ops[14]: 'load tmp%8#0' with 'load tmp%8#0 from l-stack (no copy)'
debug: Inserted test_numeric_types_bool_merge@8.ops[7]: 'store awst_tmp%2#0 to l-stack (copy)'
debug: Replaced test_numeric_types_bool_merge@8.ops[14]: 'load awst_tmp%2#0' with 'load awst_tmp%2#0 from l-stack (no copy)'
debug: Inserted test_numeric_types_or_contd@9.ops[3]: 'store tmp%11#0 to l-stack (copy)'
debug: Replaced test_numeric_types_or_contd@9.ops[5]: 'load tmp%11#0' with 'load tmp%11#0 from l-stack (no copy)'
debug: Inserted test_numeric_types_or_contd@10.ops[6]: 'store tmp%13#0 to l-stack (copy)'
debug: Replaced test_numeric_types_or_contd@10.ops[8]: 'load tmp%13#0' with 'load tmp%13#0 from l-stack (no copy)'
debug: Inserted test_numeric_types_or_contd@10.ops[2]: 'store tmp%12#0 to l-stack (copy)'
debug: Replaced test_numeric_types_or_contd@10.ops[5]: 'load tmp%12#0' with 'load tmp%12#0 from l-stack (no copy)'
debug: Inserted test_numeric_types_bool_merge@13.ops[7]: 'store awst_tmp%3#0 to l-stack (copy)'
debug: Replaced test_numeric_types_bool_merge@13.ops[9]: 'load awst_tmp%3#0' with 'load awst_tmp%3#0 from l-stack (no copy)'
debug: Inserted test_numeric_types_bool_merge@13.ops[15]: 'store tmp%17#0 to l-stack (copy)'
debug: Replaced test_numeric_types_bool_merge@13.ops[17]: 'load tmp%17#0' with 'load tmp%17#0 from l-stack (no copy)'
debug: Inserted test_numeric_types_bool_merge@13.ops[11]: 'store tmp%16#0 to l-stack (copy)'
debug: Replaced test_numeric_types_bool_merge@13.ops[14]: 'load tmp%16#0' with 'load tmp%16#0 from l-stack (no copy)'
debug: Inserted test_numeric_types_bool_merge@13.ops[3]: 'store tmp%14#0 to l-stack (copy)'
debug: Replaced test_numeric_types_bool_merge@13.ops[14]: 'load tmp%14#0' with 'load tmp%14#0 from l-stack (no copy)'
debug: Inserted test_numeric_types_or_contd@14.ops[3]: 'store tmp%18#0 to l-stack (copy)'
debug: Replaced test_numeric_types_or_contd@14.ops[5]: 'load tmp%18#0' with 'load tmp%18#0 from l-stack (no copy)'
debug: Inserted test_numeric_types_or_contd@15.ops[3]: 'store tmp%20#0 to l-stack (copy)'
debug: Replaced test_numeric_types_or_contd@15.ops[5]: 'load tmp%20#0' with 'load tmp%20#0 from l-stack (no copy)'
debug: Inserted test_numeric_types_bool_merge@18.ops[12]: 'store tmp%24#0 to l-stack (copy)'
debug: Replaced test_numeric_types_bool_merge@18.ops[14]: 'load tmp%24#0' with 'load tmp%24#0 from l-stack (no copy)'
debug: Inserted test_numeric_types_bool_merge@18.ops[8]: 'store tmp%23#0 to l-stack (copy)'
debug: Replaced test_numeric_types_bool_merge@18.ops[11]: 'load tmp%23#0' with 'load tmp%23#0 from l-stack (no copy)'
debug: Inserted test_numeric_types_bool_merge@18.ops[3]: 'store tmp%21#0 to l-stack (copy)'
debug: Replaced test_numeric_types_bool_merge@18.ops[11]: 'load tmp%21#0' with 'load tmp%21#0 from l-stack (no copy)'
debug: Inserted test_numeric_types_or_contd@19.ops[3]: 'store tmp%27#0 to l-stack (copy)'
debug: Replaced test_numeric_types_or_contd@19.ops[5]: 'load tmp%27#0' with 'load tmp%27#0 from l-stack (no copy)'
debug: Inserted test_numeric_types_bool_merge@23.ops[11]: 'store tmp%30#0 to l-stack (copy)'
debug: Replaced test_numeric_types_bool_merge@23.ops[13]: 'load tmp%30#0' with 'load tmp%30#0 from l-stack (no copy)'
debug: Inserted test_numeric_types_bool_merge@23.ops[5]: 'store tmp%28#0 to l-stack (copy)'
debug: Replaced test_numeric_types_bool_merge@23.ops[10]: 'load tmp%28#0' with 'load tmp%28#0 from l-stack (no copy)'
debug: Inserted test_numeric_types_bool_merge@23.ops[3]: 'store awst_tmp%4#0 to l-stack (copy)'
debug: Replaced test_numeric_types_bool_merge@23.ops[10]: 'load awst_tmp%4#0' with 'load awst_tmp%4#0 from l-stack (no copy)'
debug: Inserted test_numeric_types_or_contd@24.ops[6]: 'store tmp%32#0 to l-stack (copy)'
debug: Replaced test_numeric_types_or_contd@24.ops[8]: 'load tmp%32#0' with 'load tmp%32#0 from l-stack (no copy)'
debug: Inserted test_numeric_types_or_contd@24.ops[2]: 'store tmp%31#0 to l-stack (copy)'
debug: Replaced test_numeric_types_or_contd@24.ops[5]: 'load tmp%31#0' with 'load tmp%31#0 from l-stack (no copy)'
debug: Inserted test_numeric_types_or_contd@25.ops[3]: 'store tmp%33#0 to l-stack (copy)'
debug: Replaced test_numeric_types_or_contd@25.ops[5]: 'load tmp%33#0' with 'load tmp%33#0 from l-stack (no copy)'
debug: Inserted test_numeric_types_bool_merge@28.ops[9]: 'store tmp%35#0 to l-stack (copy)'
debug: Replaced test_numeric_types_bool_merge@28.ops[11]: 'load tmp%35#0' with 'load tmp%35#0 from l-stack (no copy)'
debug: Inserted test_numeric_types_bool_merge@28.ops[5]: 'store tmp%34#0 to l-stack (copy)'
debug: Replaced test_numeric_types_bool_merge@28.ops[8]: 'load tmp%34#0' with 'load tmp%34#0 from l-stack (no copy)'
debug: Inserted test_numeric_types_bool_merge@28.ops[3]: 'store awst_tmp%5#0 to l-stack (copy)'
debug: Replaced test_numeric_types_bool_merge@28.ops[8]: 'load awst_tmp%5#0' with 'load awst_tmp%5#0 from l-stack (no copy)'
debug: Inserted test_numeric_types_or_contd@29.ops[3]: 'store tmp%37#0 to l-stack (copy)'
debug: Replaced test_numeric_types_or_contd@29.ops[5]: 'load tmp%37#0' with 'load tmp%37#0 from l-stack (no copy)'
debug: Inserted test_numeric_types_or_contd@30.ops[6]: 'store tmp%39#0 to l-stack (copy)'
debug: Replaced test_numeric_types_or_contd@30.ops[8]: 'load tmp%39#0' with 'load tmp%39#0 from l-stack (no copy)'
debug: Inserted test_numeric_types_or_contd@30.ops[2]: 'store tmp%38#0 to l-stack (copy)'
debug: Replaced test_numeric_types_or_contd@30.ops[5]: 'load tmp%38#0' with 'load tmp%38#0 from l-stack (no copy)'
debug: Inserted test_numeric_types_bool_merge@33.ops[10]: 'store tmp%41#0 to l-stack (copy)'
debug: Replaced test_numeric_types_bool_merge@33.ops[12]: 'load tmp%41#0' with 'load tmp%41#0 from l-stack (no copy)'
debug: Inserted test_numeric_types_bool_merge@33.ops[6]: 'store tmp%40#0 to l-stack (copy)'
debug: Replaced test_numeric_types_bool_merge@33.ops[9]: 'load tmp%40#0' with 'load tmp%40#0 from l-stack (no copy)'
debug: Inserted test_numeric_types_bool_merge@33.ops[3]: 'store awst_tmp%6#0 to l-stack (copy)'
debug: Replaced test_numeric_types_bool_merge@33.ops[9]: 'load awst_tmp%6#0' with 'load awst_tmp%6#0 from l-stack (no copy)'
debug: Inserted test_numeric_types_or_contd@34.ops[6]: 'store tmp%43#0 to l-stack (copy)'
debug: Replaced test_numeric_types_or_contd@34.ops[8]: 'load tmp%43#0' with 'load tmp%43#0 from l-stack (no copy)'
debug: Inserted test_numeric_types_or_contd@34.ops[2]: 'store tmp%42#0 to l-stack (copy)'
debug: Replaced test_numeric_types_or_contd@34.ops[5]: 'load tmp%42#0' with 'load tmp%42#0 from l-stack (no copy)'
debug: Inserted test_numeric_types_bool_merge@37.ops[10]: 'store tmp%45#0 to l-stack (copy)'
debug: Replaced test_numeric_types_bool_merge@37.ops[12]: 'load tmp%45#0' with 'load tmp%45#0 from l-stack (no copy)'
debug: Inserted test_numeric_types_bool_merge@37.ops[6]: 'store tmp%44#0 to l-stack (copy)'
debug: Replaced test_numeric_types_bool_merge@37.ops[9]: 'load tmp%44#0' with 'load tmp%44#0 from l-stack (no copy)'
debug: Inserted test_numeric_types_bool_merge@37.ops[3]: 'store awst_tmp%7#0 to l-stack (copy)'
debug: Replaced test_numeric_types_bool_merge@37.ops[9]: 'load awst_tmp%7#0' with 'load awst_tmp%7#0 from l-stack (no copy)'
debug: Inserted test_numeric_types_or_contd@38.ops[6]: 'store tmp%47#0 to l-stack (copy)'
debug: Replaced test_numeric_types_or_contd@38.ops[8]: 'load tmp%47#0' with 'load tmp%47#0 from l-stack (no copy)'
debug: Inserted test_numeric_types_or_contd@38.ops[2]: 'store tmp%46#0 to l-stack (copy)'
debug: Replaced test_numeric_types_or_contd@38.ops[5]: 'load tmp%46#0' with 'load tmp%46#0 from l-stack (no copy)'
debug: Inserted test_numeric_types_bool_merge@41.ops[9]: 'store tmp%49#0 to l-stack (copy)'
debug: Replaced test_numeric_types_bool_merge@41.ops[11]: 'load tmp%49#0' with 'load tmp%49#0 from l-stack (no copy)'
debug: Inserted test_numeric_types_bool_merge@41.ops[3]: 'store awst_tmp%8#0 to l-stack (copy)'
debug: Replaced test_numeric_types_bool_merge@41.ops[7]: 'load awst_tmp%8#0' with 'load awst_tmp%8#0 from l-stack (no copy)'
debug: Inserted test_numeric_types_or_contd@42.ops[6]: 'store tmp%51#0 to l-stack (copy)'
debug: Replaced test_numeric_types_or_contd@42.ops[8]: 'load tmp%51#0' with 'load tmp%51#0 from l-stack (no copy)'
debug: Inserted test_numeric_types_or_contd@42.ops[2]: 'store tmp%50#0 to l-stack (copy)'
debug: Replaced test_numeric_types_or_contd@42.ops[5]: 'load tmp%50#0' with 'load tmp%50#0 from l-stack (no copy)'
debug: Inserted test_numeric_types_bool_merge@45.ops[2]: 'store tmp%52#0 to l-stack (copy)'
debug: Replaced test_numeric_types_bool_merge@45.ops[4]: 'load tmp%52#0' with 'load tmp%52#0 from l-stack (no copy)'
debug: Inserted test_numeric_types_bool_merge@45.ops[13]: 'store tmp%54#0 to l-stack (copy)'
debug: Replaced test_numeric_types_bool_merge@45.ops[15]: 'load tmp%54#0' with 'load tmp%54#0 from l-stack (no copy)'
debug: Inserted test_numeric_types_bool_merge@45.ops[7]: 'store awst_tmp%9#0 to l-stack (copy)'
debug: Replaced test_numeric_types_bool_merge@45.ops[11]: 'load awst_tmp%9#0' with 'load awst_tmp%9#0 from l-stack (no copy)'
debug: Inserted test_numeric_types_or_contd@46.ops[6]: 'store tmp%56#0 to l-stack (copy)'
debug: Replaced test_numeric_types_or_contd@46.ops[8]: 'load tmp%56#0' with 'load tmp%56#0 from l-stack (no copy)'
debug: Inserted test_numeric_types_or_contd@46.ops[2]: 'store tmp%55#0 to l-stack (copy)'
debug: Replaced test_numeric_types_or_contd@46.ops[5]: 'load tmp%55#0' with 'load tmp%55#0 from l-stack (no copy)'
debug: Inserted test_numeric_types_bool_merge@49.ops[2]: 'store tmp%57#0 to l-stack (copy)'
debug: Replaced test_numeric_types_bool_merge@49.ops[4]: 'load tmp%57#0' with 'load tmp%57#0 from l-stack (no copy)'
debug: Inserted test_numeric_types_bool_merge@49.ops[13]: 'store tmp%59#0 to l-stack (copy)'
debug: Replaced test_numeric_types_bool_merge@49.ops[15]: 'load tmp%59#0' with 'load tmp%59#0 from l-stack (no copy)'
debug: Inserted test_numeric_types_bool_merge@49.ops[7]: 'store awst_tmp%10#0 to l-stack (copy)'
debug: Replaced test_numeric_types_bool_merge@49.ops[11]: 'load awst_tmp%10#0' with 'load awst_tmp%10#0 from l-stack (no copy)'
debug: Inserted test_numeric_types_or_contd@50.ops[6]: 'store tmp%61#0 to l-stack (copy)'
debug: Replaced test_numeric_types_or_contd@50.ops[8]: 'load tmp%61#0' with 'load tmp%61#0 from l-stack (no copy)'
debug: Inserted test_numeric_types_or_contd@50.ops[2]: 'store tmp%60#0 to l-stack (copy)'
debug: Replaced test_numeric_types_or_contd@50.ops[5]: 'load tmp%60#0' with 'load tmp%60#0 from l-stack (no copy)'
debug: Inserted test_numeric_types_bool_merge@53.ops[2]: 'store tmp%62#0 to l-stack (copy)'
debug: Replaced test_numeric_types_bool_merge@53.ops[4]: 'load tmp%62#0' with 'load tmp%62#0 from l-stack (no copy)'
debug: Inserted test_numeric_types_bool_merge@53.ops[7]: 'store tmp%63#0 to l-stack (copy)'
debug: Replaced test_numeric_types_bool_merge@53.ops[9]: 'load tmp%63#0' with 'load tmp%63#0 from l-stack (no copy)'
debug: Inserted test_numeric_types_bool_merge@53.ops[12]: 'store tmp%65#0 to l-stack (copy)'
debug: Replaced test_numeric_types_bool_merge@53.ops[14]: 'load tmp%65#0' with 'load tmp%65#0 from l-stack (no copy)'
debug: Inserted test_numeric_types_bool_merge@57.ops[2]: 'store tmp%67#0 to l-stack (copy)'
debug: Replaced test_numeric_types_bool_merge@57.ops[4]: 'load tmp%67#0' with 'load tmp%67#0 from l-stack (no copy)'
debug: Inserted test_numeric_types_bool_merge@57.ops[13]: 'store tmp%69#0 to l-stack (copy)'
debug: Replaced test_numeric_types_bool_merge@57.ops[15]: 'load tmp%69#0' with 'load tmp%69#0 from l-stack (no copy)'
debug: Inserted test_numeric_types_bool_merge@57.ops[9]: 'store tmp%68#0 to l-stack (copy)'
debug: Replaced test_numeric_types_bool_merge@57.ops[12]: 'load tmp%68#0' with 'load tmp%68#0 from l-stack (no copy)'
debug: Inserted test_numeric_types_bool_merge@57.ops[7]: 'store awst_tmp%11#0 to l-stack (copy)'
debug: Replaced test_numeric_types_bool_merge@57.ops[12]: 'load awst_tmp%11#0' with 'load awst_tmp%11#0 from l-stack (no copy)'
debug: Inserted test_numeric_types_or_contd@58.ops[3]: 'store tmp%71#0 to l-stack (copy)'
debug: Replaced test_numeric_types_or_contd@58.ops[5]: 'load tmp%71#0' with 'load tmp%71#0 from l-stack (no copy)'
debug: Inserted test_numeric_types_bool_merge@61.ops[2]: 'store tmp%72#0 to l-stack (copy)'
debug: Replaced test_numeric_types_bool_merge@61.ops[4]: 'load tmp%72#0' with 'load tmp%72#0 from l-stack (no copy)'
debug: Inserted test_numeric_types_bool_merge@61.ops[13]: 'store tmp%74#0 to l-stack (copy)'
debug: Replaced test_numeric_types_bool_merge@61.ops[15]: 'load tmp%74#0' with 'load tmp%74#0 from l-stack (no copy)'
debug: Inserted test_numeric_types_bool_merge@61.ops[9]: 'store tmp%73#0 to l-stack (copy)'
debug: Replaced test_numeric_types_bool_merge@61.ops[12]: 'load tmp%73#0' with 'load tmp%73#0 from l-stack (no copy)'
debug: Inserted test_numeric_types_bool_merge@61.ops[7]: 'store awst_tmp%12#0 to l-stack (copy)'
debug: Replaced test_numeric_types_bool_merge@61.ops[12]: 'load awst_tmp%12#0' with 'load awst_tmp%12#0 from l-stack (no copy)'
debug: Inserted test_numeric_types_or_contd@62.ops[3]: 'store tmp%76#0 to l-stack (copy)'
debug: Replaced test_numeric_types_or_contd@62.ops[5]: 'load tmp%76#0' with 'load tmp%76#0 from l-stack (no copy)'
debug: Inserted test_numeric_types_bool_merge@65.ops[2]: 'store tmp%77#0 to l-stack (copy)'
debug: Replaced test_numeric_types_bool_merge@65.ops[4]: 'load tmp%77#0' with 'load tmp%77#0 from l-stack (no copy)'
debug: Inserted test_numeric_types_bool_merge@65.ops[7]: 'store awst_tmp%13#0 to l-stack (copy)'
debug: Replaced test_numeric_types_bool_merge@65.ops[9]: 'load awst_tmp%13#0' with 'load awst_tmp%13#0 from l-stack (no copy)'
debug: Inserted test_numeric_types_bool_merge@65.ops[12]: 'store tmp%79#0 to l-stack (copy)'
debug: Replaced test_numeric_types_bool_merge@65.ops[14]: 'load tmp%79#0' with 'load tmp%79#0 from l-stack (no copy)'
debug: Inserted test_numeric_types_or_contd@66.ops[6]: 'store tmp%81#0 to l-stack (copy)'
debug: Replaced test_numeric_types_or_contd@66.ops[8]: 'load tmp%81#0' with 'load tmp%81#0 from l-stack (no copy)'
debug: Inserted test_numeric_types_or_contd@66.ops[2]: 'store tmp%80#0 to l-stack (copy)'
debug: Replaced test_numeric_types_or_contd@66.ops[5]: 'load tmp%80#0' with 'load tmp%80#0 from l-stack (no copy)'
debug: Inserted test_numeric_types_bool_merge@69.ops[2]: 'store tmp%82#0 to l-stack (copy)'
debug: Replaced test_numeric_types_bool_merge@69.ops[4]: 'load tmp%82#0' with 'load tmp%82#0 from l-stack (no copy)'
debug: Inserted test_numeric_types_bool_merge@69.ops[7]: 'store awst_tmp%14#0 to l-stack (copy)'
debug: Replaced test_numeric_types_bool_merge@69.ops[9]: 'load awst_tmp%14#0' with 'load awst_tmp%14#0 from l-stack (no copy)'
debug: Inserted test_numeric_types_bool_merge@69.ops[12]: 'store tmp%84#0 to l-stack (copy)'
debug: Replaced test_numeric_types_bool_merge@69.ops[14]: 'load tmp%84#0' with 'load tmp%84#0 from l-stack (no copy)'
debug: Inserted test_numeric_types_or_contd@70.ops[6]: 'store tmp%86#0 to l-stack (copy)'
debug: Replaced test_numeric_types_or_contd@70.ops[8]: 'load tmp%86#0' with 'load tmp%86#0 from l-stack (no copy)'
debug: Inserted test_numeric_types_or_contd@70.ops[2]: 'store tmp%85#0 to l-stack (copy)'
debug: Replaced test_numeric_types_or_contd@70.ops[5]: 'load tmp%85#0' with 'load tmp%85#0 from l-stack (no copy)'
debug: Inserted test_numeric_types_bool_merge@73.ops[2]: 'store tmp%87#0 to l-stack (copy)'
debug: Replaced test_numeric_types_bool_merge@73.ops[4]: 'load tmp%87#0' with 'load tmp%87#0 from l-stack (no copy)'
debug: Inserted test_numeric_types_bool_merge@73.ops[17]: 'store tmp%91#0 to l-stack (copy)'
debug: Replaced test_numeric_types_bool_merge@73.ops[19]: 'load tmp%91#0' with 'load tmp%91#0 from l-stack (no copy)'
debug: Inserted test_numeric_types_bool_merge@73.ops[11]: 'store tmp%89#0 to l-stack (copy)'
debug: Replaced test_numeric_types_bool_merge@73.ops[16]: 'load tmp%89#0' with 'load tmp%89#0 from l-stack (no copy)'
debug: Inserted test_numeric_types_bool_merge@73.ops[7]: 'store awst_tmp%15#0 to l-stack (copy)'
debug: Replaced test_numeric_types_bool_merge@73.ops[16]: 'load awst_tmp%15#0' with 'load awst_tmp%15#0 from l-stack (no copy)'
debug: Inserted test_numeric_types_or_contd@74.ops[3]: 'store tmp%92#0 to l-stack (copy)'
debug: Replaced test_numeric_types_or_contd@74.ops[5]: 'load tmp%92#0' with 'load tmp%92#0 from l-stack (no copy)'
debug: Inserted test_numeric_types_or_contd@75.ops[6]: 'store tmp%94#0 to l-stack (copy)'
debug: Replaced test_numeric_types_or_contd@75.ops[8]: 'load tmp%94#0' with 'load tmp%94#0 from l-stack (no copy)'
debug: Inserted test_numeric_types_or_contd@75.ops[2]: 'store tmp%93#0 to l-stack (copy)'
debug: Replaced test_numeric_types_or_contd@75.ops[5]: 'load tmp%93#0' with 'load tmp%93#0 from l-stack (no copy)'
debug: Inserted test_numeric_types_bool_merge@78.ops[9]: 'store awst_tmp%16#0 to l-stack (copy)'
debug: Replaced test_numeric_types_bool_merge@78.ops[11]: 'load awst_tmp%16#0' with 'load awst_tmp%16#0 from l-stack (no copy)'
debug: Inserted test_numeric_types_bool_merge@78.ops[17]: 'store tmp%99#0 to l-stack (copy)'
debug: Replaced test_numeric_types_bool_merge@78.ops[19]: 'load tmp%99#0' with 'load tmp%99#0 from l-stack (no copy)'
debug: Inserted test_numeric_types_bool_merge@78.ops[13]: 'store tmp%98#0 to l-stack (copy)'
debug: Replaced test_numeric_types_bool_merge@78.ops[16]: 'load tmp%98#0' with 'load tmp%98#0 from l-stack (no copy)'
debug: Inserted test_numeric_types_bool_merge@78.ops[3]: 'store tmp%95#0 to l-stack (copy)'
debug: Replaced test_numeric_types_bool_merge@78.ops[16]: 'load tmp%95#0' with 'load tmp%95#0 from l-stack (no copy)'
debug: Inserted test_numeric_types_or_contd@79.ops[3]: 'store tmp%101#0 to l-stack (copy)'
debug: Replaced test_numeric_types_or_contd@79.ops[5]: 'load tmp%101#0' with 'load tmp%101#0 from l-stack (no copy)'
debug: Inserted test_numeric_types_bool_merge@82.ops[5]: 'store tmp%103#0 to l-stack (copy)'
debug: Replaced test_numeric_types_bool_merge@82.ops[7]: 'load tmp%103#0' with 'load tmp%103#0 from l-stack (no copy)'
debug: Inserted test_numeric_types_bool_merge@82.ops[10]: 'store tmp%106#0 to l-stack (copy)'
debug: Replaced test_numeric_types_bool_merge@82.ops[12]: 'load tmp%106#0' with 'load tmp%106#0 from l-stack (no copy)'
debug: Inserted test_numeric_types_bool_merge@86.ops[11]: 'store tmp%110#0 to l-stack (copy)'
debug: Replaced test_numeric_types_bool_merge@86.ops[13]: 'load tmp%110#0' with 'load tmp%110#0 from l-stack (no copy)'
debug: Inserted test_numeric_types_bool_merge@86.ops[3]: 'store awst_tmp%17#0 to l-stack (copy)'
debug: Replaced test_numeric_types_bool_merge@86.ops[9]: 'load awst_tmp%17#0' with 'load awst_tmp%17#0 from l-stack (no copy)'
debug: Inserted test_numeric_types_or_contd@87.ops[3]: 'store tmp%111#0 to l-stack (copy)'
debug: Replaced test_numeric_types_or_contd@87.ops[5]: 'load tmp%111#0' with 'load tmp%111#0 from l-stack (no copy)'
debug: Inserted test_numeric_types_bool_merge@90.ops[9]: 'store tmp%114#0 to l-stack (copy)'
debug: Replaced test_numeric_types_bool_merge@90.ops[11]: 'load tmp%114#0' with 'load tmp%114#0 from l-stack (no copy)'
debug: Inserted test_numeric_types_bool_merge@90.ops[3]: 'store awst_tmp%18#0 to l-stack (copy)'
debug: Replaced test_numeric_types_bool_merge@90.ops[7]: 'load awst_tmp%18#0' with 'load awst_tmp%18#0 from l-stack (no copy)'
debug: Inserted test_numeric_types_or_contd@91.ops[3]: 'store tmp%116#0 to l-stack (copy)'
debug: Replaced test_numeric_types_or_contd@91.ops[5]: 'load tmp%116#0' with 'load tmp%116#0 from l-stack (no copy)'
debug: Inserted test_numeric_types_bool_merge@94.ops[9]: 'store tmp%119#0 to l-stack (copy)'
debug: Replaced test_numeric_types_bool_merge@94.ops[11]: 'load tmp%119#0' with 'load tmp%119#0 from l-stack (no copy)'
debug: Inserted test_numeric_types_bool_merge@94.ops[3]: 'store awst_tmp%19#0 to l-stack (copy)'
debug: Replaced test_numeric_types_bool_merge@94.ops[7]: 'load awst_tmp%19#0' with 'load awst_tmp%19#0 from l-stack (no copy)'
debug: Inserted test_numeric_types_or_contd@95.ops[3]: 'store tmp%121#0 to l-stack (copy)'
debug: Replaced test_numeric_types_or_contd@95.ops[5]: 'load tmp%121#0' with 'load tmp%121#0 from l-stack (no copy)'
debug: Inserted test_numeric_types_bool_merge@98.ops[11]: 'store tmp%124#0 to l-stack (copy)'
debug: Replaced test_numeric_types_bool_merge@98.ops[13]: 'load tmp%124#0' with 'load tmp%124#0 from l-stack (no copy)'
debug: Inserted test_numeric_types_bool_merge@98.ops[3]: 'store awst_tmp%20#0 to l-stack (copy)'
debug: Replaced test_numeric_types_bool_merge@98.ops[9]: 'load awst_tmp%20#0' with 'load awst_tmp%20#0 from l-stack (no copy)'
debug: Inserted test_numeric_types_or_contd@99.ops[6]: 'store tmp%126#0 to l-stack (copy)'
debug: Replaced test_numeric_types_or_contd@99.ops[8]: 'load tmp%126#0' with 'load tmp%126#0 from l-stack (no copy)'
debug: Inserted test_numeric_types_or_contd@99.ops[2]: 'store tmp%125#0 to l-stack (copy)'
debug: Replaced test_numeric_types_or_contd@99.ops[5]: 'load tmp%125#0' with 'load tmp%125#0 from l-stack (no copy)'
debug: Inserted test_numeric_types_bool_merge@102.ops[2]: 'store tmp%127#0 to l-stack (copy)'
debug: Replaced test_numeric_types_bool_merge@102.ops[4]: 'load tmp%127#0' with 'load tmp%127#0 from l-stack (no copy)'
debug: Inserted test_numeric_types_bool_merge@102.ops[11]: 'store awst_tmp%21#0 to l-stack (copy)'
debug: Replaced test_numeric_types_bool_merge@102.ops[13]: 'load awst_tmp%21#0' with 'load awst_tmp%21#0 from l-stack (no copy)'
debug: Inserted test_numeric_types_bool_merge@102.ops[19]: 'store tmp%131#0 to l-stack (copy)'
debug: Replaced test_numeric_types_bool_merge@102.ops[21]: 'load tmp%131#0' with 'load tmp%131#0 from l-stack (no copy)'
debug: Inserted test_numeric_types_bool_merge@102.ops[23]: 'store tmp%132#0 to l-stack (copy)'
debug: Replaced test_numeric_types_bool_merge@102.ops[25]: 'load tmp%132#0' with 'load tmp%132#0 from l-stack (no copy)'
debug: Inserted test_numeric_types_bool_merge@102.ops[36]: 'store tmp%138#0 to l-stack (copy)'
debug: Replaced test_numeric_types_bool_merge@102.ops[38]: 'load tmp%138#0' with 'load tmp%138#0 from l-stack (no copy)'
debug: Inserted test_numeric_types_bool_merge@102.ops[40]: 'store tmp%139#0 to l-stack (copy)'
debug: Replaced test_numeric_types_bool_merge@102.ops[42]: 'load tmp%139#0' with 'load tmp%139#0 from l-stack (no copy)'
debug: Inserted test_numeric_types_bool_merge@102.ops[51]: 'store tmp%142#0 to l-stack (copy)'
debug: Replaced test_numeric_types_bool_merge@102.ops[53]: 'load tmp%142#0' with 'load tmp%142#0 from l-stack (no copy)'
debug: Inserted test_numeric_types_bool_merge@102.ops[55]: 'store tmp%143#0 to l-stack (copy)'
debug: Replaced test_numeric_types_bool_merge@102.ops[57]: 'load tmp%143#0' with 'load tmp%143#0 from l-stack (no copy)'
debug: Inserted test_numeric_types_bool_merge@102.ops[66]: 'store tmp%146#0 to l-stack (copy)'
debug: Replaced test_numeric_types_bool_merge@102.ops[68]: 'load tmp%146#0' with 'load tmp%146#0 from l-stack (no copy)'
debug: Inserted test_numeric_types_bool_merge@102.ops[70]: 'store tmp%147#0 to l-stack (copy)'
debug: Replaced test_numeric_types_bool_merge@102.ops[72]: 'load tmp%147#0' with 'load tmp%147#0 from l-stack (no copy)'
debug: Inserted test_numeric_types_bool_merge@102.ops[15]: 'store tmp%130#0 to l-stack (copy)'
debug: Replaced test_numeric_types_bool_merge@102.ops[18]: 'load tmp%130#0' with 'load tmp%130#0 from l-stack (no copy)'
debug: Inserted test_numeric_types_bool_merge@102.ops[31]: 'store awst_tmp%22#0 to l-stack (copy)'
debug: Replaced test_numeric_types_bool_merge@102.ops[35]: 'load awst_tmp%22#0' with 'load awst_tmp%22#0 from l-stack (no copy)'
debug: Inserted test_numeric_types_bool_merge@102.ops[47]: 'store awst_tmp%23#0 to l-stack (copy)'
debug: Replaced test_numeric_types_bool_merge@102.ops[51]: 'load awst_tmp%23#0' with 'load awst_tmp%23#0 from l-stack (no copy)'
debug: Inserted test_numeric_types_bool_merge@102.ops[63]: 'store awst_tmp%24#0 to l-stack (copy)'
debug: Replaced test_numeric_types_bool_merge@102.ops[67]: 'load awst_tmp%24#0' with 'load awst_tmp%24#0 from l-stack (no copy)'
debug: Inserted test_numeric_types_bool_merge@102.ops[9]: 'store tmp%129#0 to l-stack (copy)'
debug: Replaced test_numeric_types_bool_merge@102.ops[18]: 'load tmp%129#0' with 'load tmp%129#0 from l-stack (no copy)'
debug: Inserted test_numeric_types_bool_merge@102.ops[38]: 'store tmp%40#0 to l-stack (copy)'
debug: Replaced test_numeric_types_bool_merge@102.ops[54]: 'load tmp%40#0' with 'load tmp%40#0 from l-stack (no copy)'
debug: Found 48 edge set/s for test_cases.contains.contract.MyContract.test_numeric_types
debug: Allocated 24 variable/s to x-stack: or_result%0#0, or_result%1#0, or_result%10#0, or_result%11#0, or_result%12#0, or_result%13#0, or_result%14#0, or_result%15#0, or_result%16#0, or_result%17#0, or_result%18#0, or_result%19#0, or_result%2#0, or_result%20#0, or_result%21#0, or_result%22#0, or_result%23#0, or_result%3#0, or_result%4#0, or_result%5#0, or_result%6#0, or_result%7#0, or_result%8#0, or_result%9#0
debug: shared x-stack for test_numeric_types_bool_true@2 -> test_numeric_types_bool_merge@4: or_result%0#0
debug: shared x-stack for test_numeric_types_bool_false@3 -> test_numeric_types_bool_merge@4: or_result%0#0
debug: shared x-stack for test_numeric_types_bool_true@6 -> test_numeric_types_bool_merge@8: or_result%1#0
debug: shared x-stack for test_numeric_types_bool_false@7 -> test_numeric_types_bool_merge@8: or_result%1#0
debug: shared x-stack for test_numeric_types_bool_true@11 -> test_numeric_types_bool_merge@13: or_result%2#0
debug: shared x-stack for test_numeric_types_bool_false@12 -> test_numeric_types_bool_merge@13: or_result%2#0
debug: shared x-stack for test_numeric_types_bool_true@16 -> test_numeric_types_bool_merge@18: or_result%3#0
debug: shared x-stack for test_numeric_types_bool_false@17 -> test_numeric_types_bool_merge@18: or_result%3#0
debug: shared x-stack for test_numeric_types_bool_true@21 -> test_numeric_types_bool_merge@23: or_result%4#0
debug: shared x-stack for test_numeric_types_bool_false@22 -> test_numeric_types_bool_merge@23: or_result%4#0
debug: shared x-stack for test_numeric_types_bool_true@26 -> test_numeric_types_bool_merge@28: or_result%5#0
debug: shared x-stack for test_numeric_types_bool_false@27 -> test_numeric_types_bool_merge@28: or_result%5#0
debug: shared x-stack for test_numeric_types_bool_true@31 -> test_numeric_types_bool_merge@33: or_result%6#0
debug: shared x-stack for test_numeric_types_bool_false@32 -> test_numeric_types_bool_merge@33: or_result%6#0
debug: shared x-stack for test_numeric_types_bool_true@35 -> test_numeric_types_bool_merge@37: or_result%7#0
debug: shared x-stack for test_numeric_types_bool_false@36 -> test_numeric_types_bool_merge@37: or_result%7#0
debug: shared x-stack for test_numeric_types_bool_true@39 -> test_numeric_types_bool_merge@41: or_result%8#0
debug: shared x-stack for test_numeric_types_bool_false@40 -> test_numeric_types_bool_merge@41: or_result%8#0
debug: shared x-stack for test_numeric_types_bool_true@43 -> test_numeric_types_bool_merge@45: or_result%9#0
debug: shared x-stack for test_numeric_types_bool_false@44 -> test_numeric_types_bool_merge@45: or_result%9#0
debug: shared x-stack for test_numeric_types_bool_true@47 -> test_numeric_types_bool_merge@49: or_result%10#0
debug: shared x-stack for test_numeric_types_bool_false@48 -> test_numeric_types_bool_merge@49: or_result%10#0
debug: shared x-stack for test_numeric_types_bool_true@51 -> test_numeric_types_bool_merge@53: or_result%11#0
debug: shared x-stack for test_numeric_types_bool_false@52 -> test_numeric_types_bool_merge@53: or_result%11#0
debug: shared x-stack for test_numeric_types_or_contd@54 -> test_numeric_types_bool_merge@57: or_result%12#0
debug: shared x-stack for test_numeric_types_bool_true@55 -> test_numeric_types_bool_merge@57: or_result%12#0
debug: shared x-stack for test_numeric_types_bool_true@59 -> test_numeric_types_bool_merge@61: or_result%13#0
debug: shared x-stack for test_numeric_types_bool_false@60 -> test_numeric_types_bool_merge@61: or_result%13#0
debug: shared x-stack for test_numeric_types_bool_true@63 -> test_numeric_types_bool_merge@65: or_result%14#0
debug: shared x-stack for test_numeric_types_bool_false@64 -> test_numeric_types_bool_merge@65: or_result%14#0
debug: shared x-stack for test_numeric_types_bool_true@67 -> test_numeric_types_bool_merge@69: or_result%15#0
debug: shared x-stack for test_numeric_types_bool_false@68 -> test_numeric_types_bool_merge@69: or_result%15#0
debug: shared x-stack for test_numeric_types_bool_true@71 -> test_numeric_types_bool_merge@73: or_result%16#0
debug: shared x-stack for test_numeric_types_bool_false@72 -> test_numeric_types_bool_merge@73: or_result%16#0
debug: shared x-stack for test_numeric_types_bool_true@76 -> test_numeric_types_bool_merge@78: or_result%17#0
debug: shared x-stack for test_numeric_types_bool_false@77 -> test_numeric_types_bool_merge@78: or_result%17#0
debug: shared x-stack for test_numeric_types_bool_true@80 -> test_numeric_types_bool_merge@82: or_result%18#0
debug: shared x-stack for test_numeric_types_bool_false@81 -> test_numeric_types_bool_merge@82: or_result%18#0
debug: shared x-stack for test_numeric_types_bool_true@84 -> test_numeric_types_bool_merge@86: or_result%19#0
debug: shared x-stack for test_numeric_types_bool_false@85 -> test_numeric_types_bool_merge@86: or_result%19#0
debug: shared x-stack for test_numeric_types_bool_true@88 -> test_numeric_types_bool_merge@90: or_result%20#0
debug: shared x-stack for test_numeric_types_bool_false@89 -> test_numeric_types_bool_merge@90: or_result%20#0
debug: shared x-stack for test_numeric_types_bool_true@92 -> test_numeric_types_bool_merge@94: or_result%21#0
debug: shared x-stack for test_numeric_types_bool_false@93 -> test_numeric_types_bool_merge@94: or_result%21#0
debug: shared x-stack for test_numeric_types_bool_true@96 -> test_numeric_types_bool_merge@98: or_result%22#0
debug: shared x-stack for test_numeric_types_bool_false@97 -> test_numeric_types_bool_merge@98: or_result%22#0
debug: shared x-stack for test_numeric_types_bool_true@100 -> test_numeric_types_bool_merge@102: or_result%23#0
debug: shared x-stack for test_numeric_types_bool_false@101 -> test_numeric_types_bool_merge@102: or_result%23#0
debug: test_cases.contains.contract.MyContract.test_numeric_types f-stack entry: ['awst_tmp%11#0', 'awst_tmp%12#0', 'awst_tmp%13#0', 'awst_tmp%14#0', 'awst_tmp%17#0', 'awst_tmp%18#0', 'awst_tmp%19#0', 'awst_tmp%4#0', 'awst_tmp%5#0', 'awst_tmp%6#0', 'awst_tmp%7#0', 'tmp%108#0', 'tmp%123#0', 'tmp%15#0', 'tmp%16#0', 'tmp%22#0', 'tmp%23#0', 'tmp%29#0', 'tmp%40#0', 'tmp%44#0', 'tmp%48#0', 'tmp%53#0', 'tmp%58#0', 'tmp%9#0', 'tmp%90#0', 'tmp%97#0', 'tmp%98#0', 'awst_tmp%1#0', 'awst_tmp%10#0', 'awst_tmp%15#0', 'awst_tmp%2#0', 'awst_tmp%20#0', 'awst_tmp%3#0', 'awst_tmp%8#0', 'awst_tmp%9#0', 'tmp%4#0']
debug: test_cases.contains.contract.MyContract.test_numeric_types f-stack on first store: ['awst_tmp%0#0', 'tmp%1#0']
info: Writing contains/out/MyContract.approval.teal
info: Writing contains/out/MyContract.clear.teal
info: Writing contains/out/MyContract.approval.bin
info: Writing contains/out/MyContract.clear.bin