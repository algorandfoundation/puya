#pragma version 10
#pragma typetrack false

// test_cases.contains.contract.MyContract.approval_program() -> uint64:
main:
    intcblock 0 1 3 2
    bytecblock 0x666f6f 0x626172 0x1d65e22bcbbf 0x66697665 0x68656c6c6f 0x626f6e6a6f7572 0x07acf5cae41e

main_block@0:
    // contains/contract.py:10
    // one_true = self.is_in_tuple_1(UInt64(10), (UInt64(10), not_ten, Bytes(b"five")))
    pushint 10 // 10
    dup
    // contains/contract.py:8
    // not_ten = UInt64(15)
    pushint 15 // 15
    // contains/contract.py:10
    // one_true = self.is_in_tuple_1(UInt64(10), (UInt64(10), not_ten, Bytes(b"five")))
    bytec_3 // 0x66697665
    callsub is_in_tuple_1
    // contains/contract.py:11
    // one_false = self.is_in_tuple_1(UInt64(5), (UInt64(10), not_ten, Bytes(b"five")))
    pushint 5 // 5
    pushint 10 // 10
    // contains/contract.py:8
    // not_ten = UInt64(15)
    pushint 15 // 15
    // contains/contract.py:11
    // one_false = self.is_in_tuple_1(UInt64(5), (UInt64(10), not_ten, Bytes(b"five")))
    bytec_3 // 0x66697665
    callsub is_in_tuple_1
    // contains/contract.py:12
    // assert one_true, "Should be true"
    swap
    assert // Should be true
    // contains/contract.py:13
    // assert not one_false, "Should be false"
    !
    assert // Should be false
    // contains/contract.py:16
    // Bytes(b"hello"), (Bytes(b"hello"), UInt64(0), Bytes(b"bonjour"))
    bytec 4 // 0x68656c6c6f
    dup
    intc_0 // 0
    bytec 5 // 0x626f6e6a6f7572
    // contains/contract.py:15-17
    // two_true = self.is_in_tuple_2(
    //     Bytes(b"hello"), (Bytes(b"hello"), UInt64(0), Bytes(b"bonjour"))
    // )
    callsub is_in_tuple_2
    // contains/contract.py:19
    // Bytes(b"ciao"), (Bytes(b"hello"), UInt64(0), Bytes(b"bonjour"))
    pushbytes 0x6369616f
    bytec 4 // 0x68656c6c6f
    intc_0 // 0
    bytec 5 // 0x626f6e6a6f7572
    // contains/contract.py:18-20
    // two_false = self.is_in_tuple_2(
    //     Bytes(b"ciao"), (Bytes(b"hello"), UInt64(0), Bytes(b"bonjour"))
    // )
    callsub is_in_tuple_2
    // contains/contract.py:21
    // assert two_true, "Should be true"
    swap
    assert // Should be true
    // contains/contract.py:22
    // assert not two_false, "Should be false"
    !
    assert // Should be false
    // contains/contract.py:25
    // BigUInt(32323423423423), (BigUInt(32323423423423), BigUInt(8439439483934))
    bytec_2 // 0x1d65e22bcbbf
    dup
    bytec 6 // 0x07acf5cae41e
    // contains/contract.py:24-26
    // three_true = self.is_in_tuple_3(
    //     BigUInt(32323423423423), (BigUInt(32323423423423), BigUInt(8439439483934))
    // )
    callsub is_in_tuple_3
    // contains/contract.py:28
    // BigUInt(32323423423423) + BigUInt(32323423423423),
    bytec_2 // 0x1d65e22bcbbf
    dup
    b+
    // contains/contract.py:29
    // (BigUInt(32323423423423), BigUInt(8439439483934)),
    bytec_2 // 0x1d65e22bcbbf
    bytec 6 // 0x07acf5cae41e
    // contains/contract.py:27-30
    // three_false = self.is_in_tuple_3(
    //     BigUInt(32323423423423) + BigUInt(32323423423423),
    //     (BigUInt(32323423423423), BigUInt(8439439483934)),
    // )
    callsub is_in_tuple_3
    // contains/contract.py:31
    // assert three_true, "Should be true"
    swap
    assert // Should be true
    // contains/contract.py:32
    // assert not three_false, "Should be false"
    !
    assert // Should be false
    // contains/contract.py:34
    // self.test_string_types()
    callsub test_string_types
    // contains/contract.py:35
    // self.test_numeric_types()
    callsub test_numeric_types
    // contains/contract.py:37
    // return UInt64(1)
    intc_1 // 1
    return


// test_cases.contains.contract.one_u64() -> uint64:
one_u64:

one_u64_block@0:
    // contains/contract.py:139
    // return UInt64(1)
    intc_1 // 1
    retsub


// test_cases.contains.contract.one_arc4u64() -> bytes:
one_arc4u64:

one_arc4u64_block@0:
    // contains/contract.py:144
    // return arc4.UInt64(1)
    pushbytes 0x0000000000000001
    retsub


// test_cases.contains.contract.two_u64() -> uint64:
two_u64:

two_u64_block@0:
    // contains/contract.py:149
    // return UInt64(2)
    intc_3 // 2
    retsub


// test_cases.contains.contract.two_u8() -> bytes:
two_u8:

two_u8_block@0:
    // contains/contract.py:154
    // return arc4.UInt8(2)
    pushbytes 0x02
    retsub


// test_cases.contains.contract.three_u512() -> bytes:
three_u512:

three_u512_block@0:
    // contains/contract.py:159
    // return arc4.UInt512(3)
    pushbytes 0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000003
    retsub


// test_cases.contains.contract.four_biguint() -> bytes:
four_biguint:

four_biguint_block@0:
    // contains/contract.py:164
    // return BigUInt(4)
    pushbytes 0x04
    retsub


// test_cases.contains.contract.foo_string() -> bytes:
foo_string:

foo_string_block@0:
    // contains/contract.py:169
    // return String("foo")
    bytec_0 // "foo"
    retsub


// test_cases.contains.contract.foo_arc4() -> bytes:
foo_arc4:

foo_arc4_block@0:
    // contains/contract.py:174
    // return arc4.String("foo")
    bytec_0 // 0x666f6f
    len
    itob
    extract 6 2
    bytec_0 // 0x666f6f
    concat
    retsub


// test_cases.contains.contract.bar_string() -> bytes:
bar_string:

bar_string_block@0:
    // contains/contract.py:179
    // return String("bar")
    bytec_1 // "bar"
    retsub


// test_cases.contains.contract.bar_arc4() -> bytes:
bar_arc4:

bar_arc4_block@0:
    // contains/contract.py:184
    // return arc4.String("bar")
    bytec_1 // 0x626172
    len
    itob
    extract 6 2
    bytec_1 // 0x626172
    concat
    retsub


// test_cases.contains.contract.baz_string() -> bytes:
baz_string:

baz_string_block@0:
    // contains/contract.py:189
    // return String("baz")
    pushbytes "baz"
    retsub


// test_cases.contains.contract.MyContract.is_in_tuple_1(x: uint64, y.0: uint64, y.1: uint64, y.2: bytes) -> uint64:
is_in_tuple_1:
    // contains/contract.py:42-43
    // @subroutine
    // def is_in_tuple_1(self, x: UInt64, y: tuple[UInt64, UInt64, Bytes]) -> bool:
    proto 4 1

is_in_tuple_1_block@0:
    // contains/contract.py:44
    // return x in y
    frame_dig -4
    frame_dig -3
    ==
    bnz is_in_tuple_1_bool_true@2

is_in_tuple_1_or_contd@1:
    // contains/contract.py:44
    // return x in y
    frame_dig -4
    frame_dig -2
    ==
    bz is_in_tuple_1_bool_false@3

is_in_tuple_1_bool_true@2:
    intc_1 // 1

is_in_tuple_1_bool_merge@4:
    // contains/contract.py:44
    // return x in y
    retsub

is_in_tuple_1_bool_false@3:
    intc_0 // 0
    b is_in_tuple_1_bool_merge@4


// test_cases.contains.contract.MyContract.is_in_tuple_2(x: bytes, y.0: bytes, y.1: uint64, y.2: bytes) -> uint64:
is_in_tuple_2:
    // contains/contract.py:46-47
    // @subroutine
    // def is_in_tuple_2(self, x: Bytes, y: tuple[Bytes, UInt64, Bytes]) -> bool:
    proto 4 1

is_in_tuple_2_block@0:
    // contains/contract.py:48
    // return x in y
    frame_dig -4
    frame_dig -3
    ==
    bnz is_in_tuple_2_bool_true@2

is_in_tuple_2_or_contd@1:
    // contains/contract.py:48
    // return x in y
    frame_dig -4
    frame_dig -1
    ==
    bz is_in_tuple_2_bool_false@3

is_in_tuple_2_bool_true@2:
    intc_1 // 1

is_in_tuple_2_bool_merge@4:
    // contains/contract.py:48
    // return x in y
    retsub

is_in_tuple_2_bool_false@3:
    intc_0 // 0
    b is_in_tuple_2_bool_merge@4


// test_cases.contains.contract.MyContract.is_in_tuple_3(x: bytes, y.0: bytes, y.1: bytes) -> uint64:
is_in_tuple_3:
    // contains/contract.py:50-51
    // @subroutine
    // def is_in_tuple_3(self, x: BigUInt, y: tuple[BigUInt, BigUInt]) -> bool:
    proto 3 1

is_in_tuple_3_block@0:
    // contains/contract.py:52
    // return x in y
    frame_dig -3
    frame_dig -2
    b==
    bnz is_in_tuple_3_bool_true@2

is_in_tuple_3_or_contd@1:
    // contains/contract.py:52
    // return x in y
    frame_dig -3
    frame_dig -1
    b==
    bz is_in_tuple_3_bool_false@3

is_in_tuple_3_bool_true@2:
    intc_1 // 1

is_in_tuple_3_bool_merge@4:
    // contains/contract.py:52
    // return x in y
    retsub

is_in_tuple_3_bool_false@3:
    intc_0 // 0
    b is_in_tuple_3_bool_merge@4


// test_cases.contains.contract.MyContract.test_string_types() -> void:
test_string_types:
    // contains/contract.py:54-55
    // @subroutine
    // def test_string_types(self) -> None:
    proto 0 0
    intc_0 // 0
    dupn 21

test_string_types_block@0:
    // contains/contract.py:56
    // assert foo_string() in (foo_string(), baz_string()), "foo in (foo, baz)"
    callsub foo_string
    dup
    callsub foo_string
    callsub baz_string
    cover 2
    ==
    bnz test_string_types_bool_true@2

test_string_types_or_contd@1:
    // contains/contract.py:56
    // assert foo_string() in (foo_string(), baz_string()), "foo in (foo, baz)"
    frame_dig 22
    frame_dig 23
    ==
    bz test_string_types_bool_false@3

test_string_types_bool_true@2:
    intc_1 // 1

test_string_types_bool_merge@4:
    // contains/contract.py:56
    // assert foo_string() in (foo_string(), baz_string()), "foo in (foo, baz)"
    assert // foo in (foo, baz)
    // contains/contract.py:57
    // assert foo_string() not in (bar_string(), baz_string()), "foo not in (bar, baz)"
    callsub foo_string
    dup
    frame_bury 0
    callsub bar_string
    callsub baz_string
    frame_bury 19
    ==
    bnz test_string_types_bool_true@6

test_string_types_or_contd@5:
    // contains/contract.py:57
    // assert foo_string() not in (bar_string(), baz_string()), "foo not in (bar, baz)"
    frame_dig 0
    frame_dig 19
    ==
    bz test_string_types_bool_false@7

test_string_types_bool_true@6:
    intc_1 // 1

test_string_types_bool_merge@8:
    // contains/contract.py:57
    // assert foo_string() not in (bar_string(), baz_string()), "foo not in (bar, baz)"
    !
    assert // foo not in (bar, baz)
    // contains/contract.py:58
    // assert foo_string() in (foo_arc4(), baz_string(), bar_string()), "foo in (foo, baz, bar)"
    callsub foo_arc4
    callsub baz_string
    frame_bury 9
    callsub bar_string
    frame_bury 10
    extract 2 0
    callsub foo_string
    dup
    frame_bury 1
    ==
    bnz test_string_types_bool_true@11

test_string_types_or_contd@9:
    // contains/contract.py:58
    // assert foo_string() in (foo_arc4(), baz_string(), bar_string()), "foo in (foo, baz, bar)"
    frame_dig 1
    frame_dig 9
    ==
    bnz test_string_types_bool_true@11

test_string_types_or_contd@10:
    // contains/contract.py:58
    // assert foo_string() in (foo_arc4(), baz_string(), bar_string()), "foo in (foo, baz, bar)"
    frame_dig 1
    frame_dig 10
    ==
    bz test_string_types_bool_false@12

test_string_types_bool_true@11:
    intc_1 // 1

test_string_types_bool_merge@13:
    // contains/contract.py:58
    // assert foo_string() in (foo_arc4(), baz_string(), bar_string()), "foo in (foo, baz, bar)"
    assert // foo in (foo, baz, bar)
    // contains/contract.py:59
    // assert foo_arc4() in (foo_string(), baz_string(), bar_string()), "foo in (foo, baz, bar)"
    callsub foo_arc4
    dup
    frame_bury 2
    extract 2 0
    callsub foo_string
    callsub baz_string
    frame_bury 11
    callsub bar_string
    frame_bury 12
    ==
    bnz test_string_types_bool_true@16

test_string_types_or_contd@14:
    // contains/contract.py:59
    // assert foo_arc4() in (foo_string(), baz_string(), bar_string()), "foo in (foo, baz, bar)"
    frame_dig 2
    extract 2 0
    frame_dig 11
    ==
    bnz test_string_types_bool_true@16

test_string_types_or_contd@15:
    // contains/contract.py:59
    // assert foo_arc4() in (foo_string(), baz_string(), bar_string()), "foo in (foo, baz, bar)"
    frame_dig 2
    extract 2 0
    frame_dig 12
    ==
    bz test_string_types_bool_false@17

test_string_types_bool_true@16:
    intc_1 // 1

test_string_types_bool_merge@18:
    // contains/contract.py:59
    // assert foo_arc4() in (foo_string(), baz_string(), bar_string()), "foo in (foo, baz, bar)"
    assert // foo in (foo, baz, bar)
    // contains/contract.py:60
    // assert foo_string() not in (bar_arc4(), baz_string()), "foo not in (bar, baz)"
    callsub bar_arc4
    callsub baz_string
    frame_bury 13
    extract 2 0
    callsub foo_string
    dup
    frame_bury 3
    ==
    bnz test_string_types_bool_true@20

test_string_types_or_contd@19:
    // contains/contract.py:60
    // assert foo_string() not in (bar_arc4(), baz_string()), "foo not in (bar, baz)"
    frame_dig 3
    frame_dig 13
    ==
    bz test_string_types_bool_false@21

test_string_types_bool_true@20:
    intc_1 // 1

test_string_types_bool_merge@22:
    // contains/contract.py:60
    // assert foo_string() not in (bar_arc4(), baz_string()), "foo not in (bar, baz)"
    !
    assert // foo not in (bar, baz)
    // contains/contract.py:61
    // assert foo_arc4() not in (bar_arc4(), baz_string()), "foo not in (bar, baz)"
    callsub foo_arc4
    dup
    frame_bury 4
    callsub bar_arc4
    callsub baz_string
    frame_bury 14
    ==
    bnz test_string_types_bool_true@24

test_string_types_or_contd@23:
    // contains/contract.py:61
    // assert foo_arc4() not in (bar_arc4(), baz_string()), "foo not in (bar, baz)"
    frame_dig 4
    extract 2 0
    frame_dig 14
    ==
    bz test_string_types_bool_false@25

test_string_types_bool_true@24:
    intc_1 // 1

test_string_types_bool_merge@26:
    // contains/contract.py:61
    // assert foo_arc4() not in (bar_arc4(), baz_string()), "foo not in (bar, baz)"
    !
    assert // foo not in (bar, baz)
    // contains/contract.py:63
    // bar_arc4(),
    callsub bar_arc4
    // contains/contract.py:64
    // baz_string(),
    callsub baz_string
    frame_bury 15
    // contains/contract.py:65
    // foo_string(),
    callsub foo_string
    frame_bury 16
    // contains/contract.py:66
    // one_u64(),
    callsub one_u64
    pop
    // contains/contract.py:62-67
    // assert foo_string() in (
    //     bar_arc4(),
    //     baz_string(),
    //     foo_string(),
    //     one_u64(),
    // ), "foo in (bar, baz, foo, 1)"
    extract 2 0
    // contains/contract.py:62
    // assert foo_string() in (
    callsub foo_string
    dup
    frame_bury 5
    // contains/contract.py:62-67
    // assert foo_string() in (
    //     bar_arc4(),
    //     baz_string(),
    //     foo_string(),
    //     one_u64(),
    // ), "foo in (bar, baz, foo, 1)"
    ==
    bnz test_string_types_bool_true@29

test_string_types_or_contd@27:
    // contains/contract.py:62-67
    // assert foo_string() in (
    //     bar_arc4(),
    //     baz_string(),
    //     foo_string(),
    //     one_u64(),
    // ), "foo in (bar, baz, foo, 1)"
    frame_dig 5
    frame_dig 15
    ==
    bnz test_string_types_bool_true@29

test_string_types_or_contd@28:
    // contains/contract.py:62-67
    // assert foo_string() in (
    //     bar_arc4(),
    //     baz_string(),
    //     foo_string(),
    //     one_u64(),
    // ), "foo in (bar, baz, foo, 1)"
    frame_dig 5
    frame_dig 16
    ==
    bz test_string_types_bool_false@30

test_string_types_bool_true@29:
    intc_1 // 1

test_string_types_bool_merge@31:
    // contains/contract.py:62-67
    // assert foo_string() in (
    //     bar_arc4(),
    //     baz_string(),
    //     foo_string(),
    //     one_u64(),
    // ), "foo in (bar, baz, foo, 1)"
    assert // foo in (bar, baz, foo, 1)
    // contains/contract.py:68
    // assert foo_arc4() in (
    callsub foo_arc4
    dup
    frame_bury 6
    // contains/contract.py:69
    // bar_arc4(),
    callsub bar_arc4
    // contains/contract.py:70
    // baz_string(),
    callsub baz_string
    frame_bury 17
    // contains/contract.py:71
    // foo_string(),
    callsub foo_string
    frame_bury 18
    // contains/contract.py:72
    // one_u64(),
    callsub one_u64
    pop
    // contains/contract.py:68-73
    // assert foo_arc4() in (
    //     bar_arc4(),
    //     baz_string(),
    //     foo_string(),
    //     one_u64(),
    // ), "foo in (bar, baz, foo, 1)"
    ==
    bnz test_string_types_bool_true@34

test_string_types_or_contd@32:
    // contains/contract.py:68
    // assert foo_arc4() in (
    frame_dig 6
    extract 2 0
    // contains/contract.py:68-73
    // assert foo_arc4() in (
    //     bar_arc4(),
    //     baz_string(),
    //     foo_string(),
    //     one_u64(),
    // ), "foo in (bar, baz, foo, 1)"
    frame_dig 17
    ==
    bnz test_string_types_bool_true@34

test_string_types_or_contd@33:
    // contains/contract.py:68
    // assert foo_arc4() in (
    frame_dig 6
    extract 2 0
    // contains/contract.py:68-73
    // assert foo_arc4() in (
    //     bar_arc4(),
    //     baz_string(),
    //     foo_string(),
    //     one_u64(),
    // ), "foo in (bar, baz, foo, 1)"
    frame_dig 18
    ==
    bz test_string_types_bool_false@35

test_string_types_bool_true@34:
    intc_1 // 1

test_string_types_bool_merge@36:
    // contains/contract.py:68-73
    // assert foo_arc4() in (
    //     bar_arc4(),
    //     baz_string(),
    //     foo_string(),
    //     one_u64(),
    // ), "foo in (bar, baz, foo, 1)"
    assert // foo in (bar, baz, foo, 1)
    // contains/contract.py:75
    // bar_arc4(),
    callsub bar_arc4
    // contains/contract.py:76
    // baz_string(),
    callsub baz_string
    frame_bury 20
    // contains/contract.py:77
    // one_u64(),
    callsub one_u64
    pop
    // contains/contract.py:74-78
    // assert foo_string() not in (
    //     bar_arc4(),
    //     baz_string(),
    //     one_u64(),
    // ), "foo not in (bar, baz, 1)"
    extract 2 0
    // contains/contract.py:74
    // assert foo_string() not in (
    callsub foo_string
    dup
    frame_bury 7
    // contains/contract.py:74-78
    // assert foo_string() not in (
    //     bar_arc4(),
    //     baz_string(),
    //     one_u64(),
    // ), "foo not in (bar, baz, 1)"
    ==
    bnz test_string_types_bool_true@38

test_string_types_or_contd@37:
    // contains/contract.py:74-78
    // assert foo_string() not in (
    //     bar_arc4(),
    //     baz_string(),
    //     one_u64(),
    // ), "foo not in (bar, baz, 1)"
    frame_dig 7
    frame_dig 20
    ==
    bz test_string_types_bool_false@39

test_string_types_bool_true@38:
    intc_1 // 1

test_string_types_bool_merge@40:
    // contains/contract.py:74-78
    // assert foo_string() not in (
    //     bar_arc4(),
    //     baz_string(),
    //     one_u64(),
    // ), "foo not in (bar, baz, 1)"
    !
    assert // foo not in (bar, baz, 1)
    // contains/contract.py:79
    // assert foo_arc4() not in (bar_arc4(), baz_string(), one_u64()), "foo not in (bar, baz, 1)"
    callsub foo_arc4
    dup
    frame_bury 8
    callsub bar_arc4
    callsub baz_string
    frame_bury 21
    callsub one_u64
    pop
    ==
    bnz test_string_types_bool_true@42

test_string_types_or_contd@41:
    // contains/contract.py:79
    // assert foo_arc4() not in (bar_arc4(), baz_string(), one_u64()), "foo not in (bar, baz, 1)"
    frame_dig 8
    extract 2 0
    frame_dig 21
    ==
    bz test_string_types_bool_false@43

test_string_types_bool_true@42:
    intc_1 // 1

test_string_types_bool_merge@44:
    // contains/contract.py:79
    // assert foo_arc4() not in (bar_arc4(), baz_string(), one_u64()), "foo not in (bar, baz, 1)"
    !
    assert // foo not in (bar, baz, 1)
    // contains/contract.py:81
    // foo_string(),
    callsub foo_string
    pop
    // contains/contract.py:82
    // foo_arc4(),
    callsub foo_arc4
    pop
    // contains/contract.py:80
    // assert Bytes(b"foo") not in (
    bytec_0 // 0x666f6f
    // contains/contract.py:83
    // Bytes(b"bar"),
    bytec_1 // 0x626172
    // contains/contract.py:80-84
    // assert Bytes(b"foo") not in (
    //     foo_string(),
    //     foo_arc4(),
    //     Bytes(b"bar"),
    // ), "b'foo' not in (foo, foo, b'bar')"
    ==
    !
    assert // b'foo' not in (foo, foo, b'bar')
    retsub

test_string_types_bool_false@43:
    intc_0 // 0
    b test_string_types_bool_merge@44

test_string_types_bool_false@39:
    intc_0 // 0
    b test_string_types_bool_merge@40

test_string_types_bool_false@35:
    intc_0 // 0
    b test_string_types_bool_merge@36

test_string_types_bool_false@30:
    intc_0 // 0
    b test_string_types_bool_merge@31

test_string_types_bool_false@25:
    intc_0 // 0
    b test_string_types_bool_merge@26

test_string_types_bool_false@21:
    intc_0 // 0
    b test_string_types_bool_merge@22

test_string_types_bool_false@17:
    intc_0 // 0
    b test_string_types_bool_merge@18

test_string_types_bool_false@12:
    intc_0 // 0
    b test_string_types_bool_merge@13

test_string_types_bool_false@7:
    intc_0 // 0
    b test_string_types_bool_merge@8

test_string_types_bool_false@3:
    intc_0 // 0
    b test_string_types_bool_merge@4


// test_cases.contains.contract.MyContract.test_numeric_types() -> void:
test_numeric_types:
    // contains/contract.py:86-87
    // @subroutine
    // def test_numeric_types(self) -> None:
    proto 0 0
    intc_0 // 0
    dupn 22
    pushbytes ""
    dupn 9

test_numeric_types_block@0:
    // contains/contract.py:88
    // assert one_u64() in (one_u64(), two_u64()), "1 in (1, 2)"
    callsub one_u64
    dup
    callsub one_u64
    callsub two_u64
    cover 2
    ==
    bnz test_numeric_types_bool_true@2

test_numeric_types_or_contd@1:
    // contains/contract.py:88
    // assert one_u64() in (one_u64(), two_u64()), "1 in (1, 2)"
    frame_dig 33
    frame_dig 34
    ==
    bz test_numeric_types_bool_false@3

test_numeric_types_bool_true@2:
    intc_1 // 1

test_numeric_types_bool_merge@4:
    // contains/contract.py:88
    // assert one_u64() in (one_u64(), two_u64()), "1 in (1, 2)"
    assert // 1 in (1, 2)
    // contains/contract.py:89
    // assert one_u64() not in (UInt64(3), two_u64()), "1 not in (3, 2)"
    callsub one_u64
    dup
    frame_bury 23
    callsub two_u64
    frame_bury 32
    intc_2 // 3
    ==
    bnz test_numeric_types_bool_true@6

test_numeric_types_or_contd@5:
    // contains/contract.py:89
    // assert one_u64() not in (UInt64(3), two_u64()), "1 not in (3, 2)"
    frame_dig 23
    frame_dig 32
    ==
    bz test_numeric_types_bool_false@7

test_numeric_types_bool_true@6:
    intc_1 // 1

test_numeric_types_bool_merge@8:
    // contains/contract.py:89
    // assert one_u64() not in (UInt64(3), two_u64()), "1 not in (3, 2)"
    !
    assert // 1 not in (3, 2)
    // contains/contract.py:91
    // assert one_u64() in (one_u64(), UInt64(3), two_u8()), "1 in (1, 3, 2)"
    callsub one_u64
    dup
    frame_bury 27
    callsub one_u64
    callsub two_u8
    frame_bury 20
    ==
    bnz test_numeric_types_bool_true@11

test_numeric_types_or_contd@9:
    // contains/contract.py:91
    // assert one_u64() in (one_u64(), UInt64(3), two_u8()), "1 in (1, 3, 2)"
    frame_dig 27
    intc_2 // 3
    ==
    bnz test_numeric_types_bool_true@11

test_numeric_types_or_contd@10:
    // contains/contract.py:91
    // assert one_u64() in (one_u64(), UInt64(3), two_u8()), "1 in (1, 3, 2)"
    frame_dig 20
    frame_dig 27
    itob
    b==
    bz test_numeric_types_bool_false@12

test_numeric_types_bool_true@11:
    intc_1 // 1

test_numeric_types_bool_merge@13:
    // contains/contract.py:91
    // assert one_u64() in (one_u64(), UInt64(3), two_u8()), "1 in (1, 3, 2)"
    assert // 1 in (1, 3, 2)
    // contains/contract.py:92
    // assert one_u64() in (one_arc4u64(), UInt64(4), two_u8()), "1 in (1, 4, 2)"
    callsub one_arc4u64
    callsub two_u8
    frame_bury 14
    callsub one_u64
    dup
    frame_bury 29
    itob
    b==
    bnz test_numeric_types_bool_true@16

test_numeric_types_or_contd@14:
    // contains/contract.py:92
    // assert one_u64() in (one_arc4u64(), UInt64(4), two_u8()), "1 in (1, 4, 2)"
    frame_dig 29
    pushint 4 // 4
    ==
    bnz test_numeric_types_bool_true@16

test_numeric_types_or_contd@15:
    // contains/contract.py:92
    // assert one_u64() in (one_arc4u64(), UInt64(4), two_u8()), "1 in (1, 4, 2)"
    frame_dig 14
    frame_dig 29
    itob
    b==
    bz test_numeric_types_bool_false@17

test_numeric_types_bool_true@16:
    intc_1 // 1

test_numeric_types_bool_merge@18:
    // contains/contract.py:92
    // assert one_u64() in (one_arc4u64(), UInt64(4), two_u8()), "1 in (1, 4, 2)"
    assert // 1 in (1, 4, 2)
    // contains/contract.py:93
    // assert UInt64(2) in (one_arc4u64(), UInt64(3), two_u8()), "2 in (1, 3, 2)"
    callsub one_arc4u64
    callsub two_u8
    frame_bury 15
    intc_3 // 2
    itob
    b==
    bnz test_numeric_types_bool_true@21

test_numeric_types_or_contd@19:
    // contains/contract.py:93
    // assert UInt64(2) in (one_arc4u64(), UInt64(3), two_u8()), "2 in (1, 3, 2)"
    intc_3 // 2
    intc_2 // 3
    ==
    bnz test_numeric_types_bool_true@21

test_numeric_types_or_contd@20:
    // contains/contract.py:93
    // assert UInt64(2) in (one_arc4u64(), UInt64(3), two_u8()), "2 in (1, 3, 2)"
    frame_dig 15
    intc_3 // 2
    itob
    b==
    bz test_numeric_types_bool_false@22

test_numeric_types_bool_true@21:
    intc_1 // 1

test_numeric_types_bool_merge@23:
    // contains/contract.py:93
    // assert UInt64(2) in (one_arc4u64(), UInt64(3), two_u8()), "2 in (1, 3, 2)"
    assert // 2 in (1, 3, 2)
    // contains/contract.py:94
    // assert two_u8() in (one_arc4u64(), UInt64(3), two_u8()), "2 in (1, 3, 2)"
    callsub two_u8
    dup
    frame_bury 7
    callsub one_arc4u64
    callsub two_u8
    frame_bury 16
    b==
    bnz test_numeric_types_bool_true@26

test_numeric_types_or_contd@24:
    // contains/contract.py:94
    // assert two_u8() in (one_arc4u64(), UInt64(3), two_u8()), "2 in (1, 3, 2)"
    frame_dig 7
    intc_2 // 3
    itob
    b==
    bnz test_numeric_types_bool_true@26

test_numeric_types_or_contd@25:
    // contains/contract.py:94
    // assert two_u8() in (one_arc4u64(), UInt64(3), two_u8()), "2 in (1, 3, 2)"
    frame_dig 7
    frame_dig 16
    b==
    bz test_numeric_types_bool_false@27

test_numeric_types_bool_true@26:
    intc_1 // 1

test_numeric_types_bool_merge@28:
    // contains/contract.py:94
    // assert two_u8() in (one_arc4u64(), UInt64(3), two_u8()), "2 in (1, 3, 2)"
    assert // 2 in (1, 3, 2)
    // contains/contract.py:95
    // assert two_u8() in (one_arc4u64(), UInt64(2), UInt64(3)), "2 in (1, 2, 3)"
    callsub two_u8
    dup
    frame_bury 8
    callsub one_arc4u64
    b==
    bnz test_numeric_types_bool_true@31

test_numeric_types_or_contd@29:
    // contains/contract.py:95
    // assert two_u8() in (one_arc4u64(), UInt64(2), UInt64(3)), "2 in (1, 2, 3)"
    frame_dig 8
    intc_3 // 2
    itob
    b==
    bnz test_numeric_types_bool_true@31

test_numeric_types_or_contd@30:
    // contains/contract.py:95
    // assert two_u8() in (one_arc4u64(), UInt64(2), UInt64(3)), "2 in (1, 2, 3)"
    frame_dig 8
    intc_2 // 3
    itob
    b==
    bz test_numeric_types_bool_false@32

test_numeric_types_bool_true@31:
    intc_1 // 1

test_numeric_types_bool_merge@33:
    // contains/contract.py:95
    // assert two_u8() in (one_arc4u64(), UInt64(2), UInt64(3)), "2 in (1, 2, 3)"
    assert // 2 in (1, 2, 3)
    // contains/contract.py:96
    // assert three_u512() in (UInt64(3), UInt64(4)), "3 in (3, 4)"
    callsub three_u512
    dup
    frame_bury 9
    intc_2 // 3
    itob
    b==
    bnz test_numeric_types_bool_true@35

test_numeric_types_or_contd@34:
    // contains/contract.py:96
    // assert three_u512() in (UInt64(3), UInt64(4)), "3 in (3, 4)"
    frame_dig 9
    pushint 4 // 4
    itob
    b==
    bz test_numeric_types_bool_false@36

test_numeric_types_bool_true@35:
    intc_1 // 1

test_numeric_types_bool_merge@37:
    // contains/contract.py:96
    // assert three_u512() in (UInt64(3), UInt64(4)), "3 in (3, 4)"
    assert // 3 in (3, 4)
    // contains/contract.py:97
    // assert four_biguint() in (UInt64(5), UInt64(4)), "4 in (5, 4)"
    callsub four_biguint
    dup
    frame_bury 10
    pushint 5 // 5
    itob
    b==
    bnz test_numeric_types_bool_true@39

test_numeric_types_or_contd@38:
    // contains/contract.py:97
    // assert four_biguint() in (UInt64(5), UInt64(4)), "4 in (5, 4)"
    pushint 4 // 4
    itob
    frame_dig 10
    b==
    bz test_numeric_types_bool_false@40

test_numeric_types_bool_true@39:
    intc_1 // 1

test_numeric_types_bool_merge@41:
    // contains/contract.py:97
    // assert four_biguint() in (UInt64(5), UInt64(4)), "4 in (5, 4)"
    assert // 4 in (5, 4)
    // contains/contract.py:99
    // assert one_u64() not in (UInt64(5), two_u8()), "1 not in (5, 2)"
    callsub one_u64
    dup
    frame_bury 30
    callsub two_u8
    frame_bury 17
    pushint 5 // 5
    ==
    bnz test_numeric_types_bool_true@43

test_numeric_types_or_contd@42:
    // contains/contract.py:99
    // assert one_u64() not in (UInt64(5), two_u8()), "1 not in (5, 2)"
    frame_dig 17
    frame_dig 30
    itob
    b==
    bz test_numeric_types_bool_false@44

test_numeric_types_bool_true@43:
    intc_1 // 1

test_numeric_types_bool_merge@45:
    // contains/contract.py:99
    // assert one_u64() not in (UInt64(5), two_u8()), "1 not in (5, 2)"
    !
    assert // 1 not in (5, 2)
    // contains/contract.py:100
    // assert one_u64() not in (Application(1), UInt64(3), two_u8()), "1 not in (app(1), 3, 2)"
    callsub one_u64
    dup
    frame_bury 31
    callsub two_u8
    frame_bury 18
    intc_2 // 3
    ==
    bnz test_numeric_types_bool_true@47

test_numeric_types_or_contd@46:
    // contains/contract.py:100
    // assert one_u64() not in (Application(1), UInt64(3), two_u8()), "1 not in (app(1), 3, 2)"
    frame_dig 18
    frame_dig 31
    itob
    b==
    bz test_numeric_types_bool_false@48

test_numeric_types_bool_true@47:
    intc_1 // 1

test_numeric_types_bool_merge@49:
    // contains/contract.py:100
    // assert one_u64() not in (Application(1), UInt64(3), two_u8()), "1 not in (app(1), 3, 2)"
    !
    assert // 1 not in (app(1), 3, 2)
    // contains/contract.py:101
    // assert one_u64() not in (UInt64(3), two_u8()), "1 not in (3, 2)"
    callsub one_u64
    dup
    frame_bury 24
    callsub two_u8
    frame_bury 19
    intc_2 // 3
    ==
    bnz test_numeric_types_bool_true@51

test_numeric_types_or_contd@50:
    // contains/contract.py:101
    // assert one_u64() not in (UInt64(3), two_u8()), "1 not in (3, 2)"
    frame_dig 19
    frame_dig 24
    itob
    b==
    bz test_numeric_types_bool_false@52

test_numeric_types_bool_true@51:
    intc_1 // 1

test_numeric_types_bool_merge@53:
    // contains/contract.py:101
    // assert one_u64() not in (UInt64(3), two_u8()), "1 not in (3, 2)"
    !
    assert // 1 not in (3, 2)
    // contains/contract.py:102
    // assert UInt64(2) not in (one_arc4u64(), UInt64(3)), "2 not in (1, 3)"
    callsub one_arc4u64
    intc_3 // 2
    itob
    b==
    bnz test_numeric_types_bool_true@55

test_numeric_types_or_contd@54:
    // contains/contract.py:102
    // assert UInt64(2) not in (one_arc4u64(), UInt64(3)), "2 not in (1, 3)"
    intc_3 // 2
    intc_2 // 3
    ==
    bz test_numeric_types_bool_false@56

test_numeric_types_bool_true@55:
    intc_1 // 1

test_numeric_types_bool_merge@57:
    // contains/contract.py:102
    // assert UInt64(2) not in (one_arc4u64(), UInt64(3)), "2 not in (1, 3)"
    !
    assert // 2 not in (1, 3)
    // contains/contract.py:103
    // assert two_u8() not in (one_arc4u64(), UInt64(3)), "2 not in (1, 3)"
    callsub two_u8
    dup
    frame_bury 0
    callsub one_arc4u64
    b==
    bnz test_numeric_types_bool_true@59

test_numeric_types_or_contd@58:
    // contains/contract.py:103
    // assert two_u8() not in (one_arc4u64(), UInt64(3)), "2 not in (1, 3)"
    frame_dig 0
    intc_2 // 3
    itob
    b==
    bz test_numeric_types_bool_false@60

test_numeric_types_bool_true@59:
    intc_1 // 1

test_numeric_types_bool_merge@61:
    // contains/contract.py:103
    // assert two_u8() not in (one_arc4u64(), UInt64(3)), "2 not in (1, 3)"
    !
    assert // 2 not in (1, 3)
    // contains/contract.py:104
    // assert two_u8() not in (one_arc4u64(), UInt64(3)), "2 not in (1, 3)"
    callsub two_u8
    dup
    frame_bury 1
    callsub one_arc4u64
    b==
    bnz test_numeric_types_bool_true@63

test_numeric_types_or_contd@62:
    // contains/contract.py:104
    // assert two_u8() not in (one_arc4u64(), UInt64(3)), "2 not in (1, 3)"
    frame_dig 1
    intc_2 // 3
    itob
    b==
    bz test_numeric_types_bool_false@64

test_numeric_types_bool_true@63:
    intc_1 // 1

test_numeric_types_bool_merge@65:
    // contains/contract.py:104
    // assert two_u8() not in (one_arc4u64(), UInt64(3)), "2 not in (1, 3)"
    !
    assert // 2 not in (1, 3)
    // contains/contract.py:105
    // assert three_u512() not in (UInt64(5), UInt64(7)), "3 not in (5, 7)"
    callsub three_u512
    dup
    frame_bury 2
    pushint 5 // 5
    itob
    b==
    bnz test_numeric_types_bool_true@67

test_numeric_types_or_contd@66:
    // contains/contract.py:105
    // assert three_u512() not in (UInt64(5), UInt64(7)), "3 not in (5, 7)"
    frame_dig 2
    pushint 7 // 7
    itob
    b==
    bz test_numeric_types_bool_false@68

test_numeric_types_bool_true@67:
    intc_1 // 1

test_numeric_types_bool_merge@69:
    // contains/contract.py:105
    // assert three_u512() not in (UInt64(5), UInt64(7)), "3 not in (5, 7)"
    !
    assert // 3 not in (5, 7)
    // contains/contract.py:106
    // assert four_biguint() not in (UInt64(2), UInt64(9)), "4 not in (2, 9)"
    callsub four_biguint
    dup
    frame_bury 3
    intc_3 // 2
    itob
    b==
    bnz test_numeric_types_bool_true@71

test_numeric_types_or_contd@70:
    // contains/contract.py:106
    // assert four_biguint() not in (UInt64(2), UInt64(9)), "4 not in (2, 9)"
    pushint 9 // 9
    itob
    frame_dig 3
    b==
    bz test_numeric_types_bool_false@72

test_numeric_types_bool_true@71:
    intc_1 // 1

test_numeric_types_bool_merge@73:
    // contains/contract.py:106
    // assert four_biguint() not in (UInt64(2), UInt64(9)), "4 not in (2, 9)"
    !
    assert // 4 not in (2, 9)
    // contains/contract.py:108
    // assert one_u64() in (
    callsub one_u64
    dup
    frame_bury 25
    // contains/contract.py:109
    // foo_string(),
    callsub foo_string
    pop
    // contains/contract.py:110
    // one_u64(),
    callsub one_u64
    // contains/contract.py:112
    // two_u8(),
    callsub two_u8
    frame_bury 21
    // contains/contract.py:108-113
    // assert one_u64() in (
    //     foo_string(),
    //     one_u64(),
    //     UInt64(3),
    //     two_u8(),
    // ), "1 in (foo, 1, 3, 2)"
    ==
    bnz test_numeric_types_bool_true@76

test_numeric_types_or_contd@74:
    // contains/contract.py:108-113
    // assert one_u64() in (
    //     foo_string(),
    //     one_u64(),
    //     UInt64(3),
    //     two_u8(),
    // ), "1 in (foo, 1, 3, 2)"
    frame_dig 25
    // contains/contract.py:111
    // UInt64(3),
    intc_2 // 3
    // contains/contract.py:108-113
    // assert one_u64() in (
    //     foo_string(),
    //     one_u64(),
    //     UInt64(3),
    //     two_u8(),
    // ), "1 in (foo, 1, 3, 2)"
    ==
    bnz test_numeric_types_bool_true@76

test_numeric_types_or_contd@75:
    // contains/contract.py:108-113
    // assert one_u64() in (
    //     foo_string(),
    //     one_u64(),
    //     UInt64(3),
    //     two_u8(),
    // ), "1 in (foo, 1, 3, 2)"
    frame_dig 21
    frame_dig 25
    itob
    b==
    bz test_numeric_types_bool_false@77

test_numeric_types_bool_true@76:
    intc_1 // 1

test_numeric_types_bool_merge@78:
    // contains/contract.py:108-113
    // assert one_u64() in (
    //     foo_string(),
    //     one_u64(),
    //     UInt64(3),
    //     two_u8(),
    // ), "1 in (foo, 1, 3, 2)"
    assert // 1 in (foo, 1, 3, 2)
    // contains/contract.py:114
    // assert one_u64() in (one_arc4u64(), bar_string(), two_u8()), "1 in (1, bar, 2)"
    callsub one_arc4u64
    callsub bar_string
    pop
    callsub two_u8
    frame_bury 22
    callsub one_u64
    dup
    frame_bury 26
    itob
    b==
    bnz test_numeric_types_bool_true@80

test_numeric_types_or_contd@79:
    // contains/contract.py:114
    // assert one_u64() in (one_arc4u64(), bar_string(), two_u8()), "1 in (1, bar, 2)"
    frame_dig 22
    frame_dig 26
    itob
    b==
    bz test_numeric_types_bool_false@81

test_numeric_types_bool_true@80:
    intc_1 // 1

test_numeric_types_bool_merge@82:
    // contains/contract.py:114
    // assert one_u64() in (one_arc4u64(), bar_string(), two_u8()), "1 in (1, bar, 2)"
    assert // 1 in (1, bar, 2)
    // contains/contract.py:115
    // assert UInt64(2) in (foo_arc4(), UInt64(3), two_u8()), "2 in (foo, 3, 2)"
    callsub foo_arc4
    pop
    callsub two_u8
    frame_bury 11
    intc_3 // 2
    intc_2 // 3
    ==
    bnz test_numeric_types_bool_true@84

test_numeric_types_or_contd@83:
    // contains/contract.py:115
    // assert UInt64(2) in (foo_arc4(), UInt64(3), two_u8()), "2 in (foo, 3, 2)"
    frame_dig 11
    intc_3 // 2
    itob
    b==
    bz test_numeric_types_bool_false@85

test_numeric_types_bool_true@84:
    intc_1 // 1

test_numeric_types_bool_merge@86:
    // contains/contract.py:115
    // assert UInt64(2) in (foo_arc4(), UInt64(3), two_u8()), "2 in (foo, 3, 2)"
    assert // 2 in (foo, 3, 2)
    // contains/contract.py:116
    // assert two_u8() in (bar_arc4(), UInt64(3), two_u8()), "2 in (bar, 3, 2)"
    callsub two_u8
    dup
    frame_bury 4
    callsub bar_arc4
    pop
    callsub two_u8
    frame_bury 12
    intc_2 // 3
    itob
    b==
    bnz test_numeric_types_bool_true@88

test_numeric_types_or_contd@87:
    // contains/contract.py:116
    // assert two_u8() in (bar_arc4(), UInt64(3), two_u8()), "2 in (bar, 3, 2)"
    frame_dig 4
    frame_dig 12
    b==
    bz test_numeric_types_bool_false@89

test_numeric_types_bool_true@88:
    intc_1 // 1

test_numeric_types_bool_merge@90:
    // contains/contract.py:116
    // assert two_u8() in (bar_arc4(), UInt64(3), two_u8()), "2 in (bar, 3, 2)"
    assert // 2 in (bar, 3, 2)
    // contains/contract.py:117
    // assert two_u8() in (foo_string(), UInt64(2), UInt64(3)), "2 in foo(2, 3)"
    callsub two_u8
    dup
    frame_bury 5
    callsub foo_string
    pop
    intc_3 // 2
    itob
    b==
    bnz test_numeric_types_bool_true@92

test_numeric_types_or_contd@91:
    // contains/contract.py:117
    // assert two_u8() in (foo_string(), UInt64(2), UInt64(3)), "2 in foo(2, 3)"
    frame_dig 5
    intc_2 // 3
    itob
    b==
    bz test_numeric_types_bool_false@93

test_numeric_types_bool_true@92:
    intc_1 // 1

test_numeric_types_bool_merge@94:
    // contains/contract.py:117
    // assert two_u8() in (foo_string(), UInt64(2), UInt64(3)), "2 in foo(2, 3)"
    assert // 2 in foo(2, 3)
    // contains/contract.py:118
    // assert three_u512() in (UInt64(5), UInt64(3), foo_string()), "3 in (5, 3, foo)"
    callsub three_u512
    dup
    frame_bury 6
    callsub foo_string
    pop
    pushint 5 // 5
    itob
    b==
    bnz test_numeric_types_bool_true@96

test_numeric_types_or_contd@95:
    // contains/contract.py:118
    // assert three_u512() in (UInt64(5), UInt64(3), foo_string()), "3 in (5, 3, foo)"
    frame_dig 6
    intc_2 // 3
    itob
    b==
    bz test_numeric_types_bool_false@97

test_numeric_types_bool_true@96:
    intc_1 // 1

test_numeric_types_bool_merge@98:
    // contains/contract.py:118
    // assert three_u512() in (UInt64(5), UInt64(3), foo_string()), "3 in (5, 3, foo)"
    assert // 3 in (5, 3, foo)
    // contains/contract.py:120
    // assert one_u64() not in (
    callsub one_u64
    dup
    frame_bury 28
    // contains/contract.py:121
    // foo_string(),
    callsub foo_string
    pop
    // contains/contract.py:123
    // two_u8(),
    callsub two_u8
    frame_bury 13
    // contains/contract.py:122
    // UInt64(3),
    intc_2 // 3
    // contains/contract.py:120-124
    // assert one_u64() not in (
    //     foo_string(),
    //     UInt64(3),
    //     two_u8(),
    // ), "1 not in (foo, 3, 2)"
    ==
    bnz test_numeric_types_bool_true@100

test_numeric_types_or_contd@99:
    // contains/contract.py:120-124
    // assert one_u64() not in (
    //     foo_string(),
    //     UInt64(3),
    //     two_u8(),
    // ), "1 not in (foo, 3, 2)"
    frame_dig 13
    frame_dig 28
    itob
    b==
    bz test_numeric_types_bool_false@101

test_numeric_types_bool_true@100:
    intc_1 // 1

test_numeric_types_bool_merge@102:
    // contains/contract.py:120-124
    // assert one_u64() not in (
    //     foo_string(),
    //     UInt64(3),
    //     two_u8(),
    // ), "1 not in (foo, 3, 2)"
    !
    assert // 1 not in (foo, 3, 2)
    // contains/contract.py:125
    // assert one_u64() not in (bar_string(), two_u8()), "1 not in (bar, 2)"
    callsub bar_string
    pop
    callsub two_u8
    callsub one_u64
    itob
    b==
    !
    assert // 1 not in (bar, 2)
    // contains/contract.py:126
    // assert UInt64(2) not in (foo_arc4(), UInt64(3)), "2 not in (foo, 3)"
    callsub foo_arc4
    pop
    intc_3 // 2
    intc_2 // 3
    ==
    !
    assert // 2 not in (foo, 3)
    // contains/contract.py:127
    // assert two_u8() not in (bar_arc4(), UInt64(3)), "2 not in (bar, 3)"
    callsub two_u8
    callsub bar_arc4
    pop
    intc_2 // 3
    itob
    b==
    !
    assert // 2 not in (bar, 3)
    // contains/contract.py:128
    // assert two_u8() not in (foo_string(), UInt64(3)), "2 not in (foo, 3)"
    callsub two_u8
    callsub foo_string
    pop
    intc_2 // 3
    itob
    b==
    !
    assert // 2 not in (foo, 3)
    // contains/contract.py:129
    // assert three_u512() not in (UInt64(5), foo_string()), "3 not in (5, foo)"
    callsub three_u512
    callsub foo_string
    pop
    pushint 5 // 5
    itob
    b==
    !
    assert // 3 not in (5, foo)
    // contains/contract.py:132
    // UInt64(64),
    pushint 64 // 64
    // contains/contract.py:130-134
    // assert arc4.UInt8(65) not in (
    //     Bytes(b"A"),
    //     UInt64(64),
    //     UInt64(66),
    // ), "65 not in (b'A', 64, 66)"
    itob
    // contains/contract.py:130
    // assert arc4.UInt8(65) not in (
    pushbytes 0x41
    // contains/contract.py:130-134
    // assert arc4.UInt8(65) not in (
    //     Bytes(b"A"),
    //     UInt64(64),
    //     UInt64(66),
    // ), "65 not in (b'A', 64, 66)"
    b==
    bnz test_numeric_types_bool_true@104

test_numeric_types_or_contd@103:
    // contains/contract.py:133
    // UInt64(66),
    pushint 66 // 66
    // contains/contract.py:130-134
    // assert arc4.UInt8(65) not in (
    //     Bytes(b"A"),
    //     UInt64(64),
    //     UInt64(66),
    // ), "65 not in (b'A', 64, 66)"
    itob
    // contains/contract.py:130
    // assert arc4.UInt8(65) not in (
    pushbytes 0x41
    // contains/contract.py:130-134
    // assert arc4.UInt8(65) not in (
    //     Bytes(b"A"),
    //     UInt64(64),
    //     UInt64(66),
    // ), "65 not in (b'A', 64, 66)"
    b==
    bz test_numeric_types_bool_false@105

test_numeric_types_bool_true@104:
    intc_1 // 1

test_numeric_types_bool_merge@106:
    // contains/contract.py:130-134
    // assert arc4.UInt8(65) not in (
    //     Bytes(b"A"),
    //     UInt64(64),
    //     UInt64(66),
    // ), "65 not in (b'A', 64, 66)"
    !
    assert // 65 not in (b'A', 64, 66)
    retsub

test_numeric_types_bool_false@105:
    intc_0 // 0
    b test_numeric_types_bool_merge@106

test_numeric_types_bool_false@101:
    intc_0 // 0
    b test_numeric_types_bool_merge@102

test_numeric_types_bool_false@97:
    intc_0 // 0
    b test_numeric_types_bool_merge@98

test_numeric_types_bool_false@93:
    intc_0 // 0
    b test_numeric_types_bool_merge@94

test_numeric_types_bool_false@89:
    intc_0 // 0
    b test_numeric_types_bool_merge@90

test_numeric_types_bool_false@85:
    intc_0 // 0
    b test_numeric_types_bool_merge@86

test_numeric_types_bool_false@81:
    intc_0 // 0
    b test_numeric_types_bool_merge@82

test_numeric_types_bool_false@77:
    intc_0 // 0
    b test_numeric_types_bool_merge@78

test_numeric_types_bool_false@72:
    intc_0 // 0
    b test_numeric_types_bool_merge@73

test_numeric_types_bool_false@68:
    intc_0 // 0
    b test_numeric_types_bool_merge@69

test_numeric_types_bool_false@64:
    intc_0 // 0
    b test_numeric_types_bool_merge@65

test_numeric_types_bool_false@60:
    intc_0 // 0
    b test_numeric_types_bool_merge@61

test_numeric_types_bool_false@56:
    intc_0 // 0
    b test_numeric_types_bool_merge@57

test_numeric_types_bool_false@52:
    intc_0 // 0
    b test_numeric_types_bool_merge@53

test_numeric_types_bool_false@48:
    intc_0 // 0
    b test_numeric_types_bool_merge@49

test_numeric_types_bool_false@44:
    intc_0 // 0
    b test_numeric_types_bool_merge@45

test_numeric_types_bool_false@40:
    intc_0 // 0
    b test_numeric_types_bool_merge@41

test_numeric_types_bool_false@36:
    intc_0 // 0
    b test_numeric_types_bool_merge@37

test_numeric_types_bool_false@32:
    intc_0 // 0
    b test_numeric_types_bool_merge@33

test_numeric_types_bool_false@27:
    intc_0 // 0
    b test_numeric_types_bool_merge@28

test_numeric_types_bool_false@22:
    intc_0 // 0
    b test_numeric_types_bool_merge@23

test_numeric_types_bool_false@17:
    intc_0 // 0
    b test_numeric_types_bool_merge@18

test_numeric_types_bool_false@12:
    intc_0 // 0
    b test_numeric_types_bool_merge@13

test_numeric_types_bool_false@7:
    intc_0 // 0
    b test_numeric_types_bool_merge@8

test_numeric_types_bool_false@3:
    intc_0 // 0
    b test_numeric_types_bool_merge@4
