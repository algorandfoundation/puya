contract test_cases.stubs.bytes.BytesContract:
    program approval:
        subroutine test_cases.stubs.bytes.BytesContract.approval_program() -> uint64:
            block@0: // L5
                test_cases.stubs.bytes.check_slicing_with_uint64("abc")
                return 1u
        
        subroutine test_cases.stubs.bytes.check_slicing_with_uint64(abc: bytes) -> void:
            block@0: // L76
                let tmp%1#0: uint64 = (len abc#0)
                let tmp%4#0: uint64 = (< 1u tmp%1#0)
                let tmp%5#0: any = (select tmp%1#0 1u tmp%4#0)
                let tmp%7#0: bytes = (substring3 abc#0 tmp%5#0 tmp%1#0)
                let tmp%8#0: uint64 = (== tmp%7#0 "bc")
                (assert tmp%8#0)
                let tmp%20#0: bytes = (substring3 abc#0 tmp%5#0 tmp%5#0)
                let tmp%21#0: uint64 = (== tmp%20#0 "")
                (assert tmp%21#0)
                let tmp%28#0: bytes = (substring3 abc#0 0u tmp%5#0)
                let tmp%29#0: uint64 = (== tmp%28#0 "a")
                (assert tmp%29#0)
                let awst_tmp%30#0: bytes = test_cases.stubs.bytes.one_to_seven()
                let tmp%31#0: uint64 = (len awst_tmp%30#0)
                let tmp%34#0: uint64 = (< 1u tmp%31#0)
                let tmp%35#0: any = (select tmp%31#0 1u tmp%34#0)
                let tmp%41#0: uint64 = (- tmp%31#0 tmp%35#0)
                let tmp%42#0: bytes = (substring3 awst_tmp%30#0 tmp%35#0 tmp%41#0)
                let tmp%43#0: uint64 = (== tmp%42#0 "23456")
                (assert tmp%43#0)
                let tmp%48#0: uint64 = (< 0u tmp%1#0)
                let tmp%49#0: any = (select tmp%1#0 0u tmp%48#0)
                let tmp%53#0: uint64 = (< 10u tmp%1#0)
                let tmp%54#0: any = (select tmp%1#0 10u tmp%53#0)
                let tmp%55#0: bytes = (substring3 abc#0 tmp%49#0 tmp%54#0)
                let tmp%56#0: uint64 = (== tmp%55#0 "abc")
                (assert tmp%56#0)
                return 
        
        subroutine test_cases.stubs.bytes.one_to_seven() -> bytes:
            block@0: // L87
                (log "one_to_seven called")
                return "1234567"
    
    program clear-state:
        subroutine test_cases.stubs.bytes.BytesContract.clear_state_program() -> uint64:
            block@0: // L72
                return 1u