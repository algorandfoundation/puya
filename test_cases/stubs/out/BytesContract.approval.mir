// Op                                                                       Stack (out)
// test_cases.stubs.bytes.BytesContract.approval_program() -> uint64:
main_block@0:
    // stubs/bytes.py:23
    // abc = Bytes(b"abc")
    byte 0x616263                                                           0x616263
    // stubs/bytes.py:68
    // check_slicing_with_uint64(abc)
    callsub check_slicing_with_uint64
    // stubs/bytes.py:23
    // abc = Bytes(b"abc")
    byte 0x616263                                                           0x616263
    // stubs/bytes.py:69
    // check_end_before_start_slicing(abc)
    callsub check_end_before_start_slicing
    // stubs/bytes.py:72
    // Bytes(b"args" if Txn.num_app_args else b"no args") == b"no args"
    txn NumAppArgs                                                          tmp%72#0
    byte 0x6e6f2061726773                                                   tmp%72#0,0x6e6f2061726773
    byte 0x61726773                                                         tmp%72#0,0x6e6f2061726773,0x61726773
    l-load tmp%72#0 2                                                       0x6e6f2061726773,0x61726773,tmp%72#0
    select                                                                  tmp%74#0
    byte 0x6e6f2061726773                                                   tmp%74#0,0x6e6f2061726773
    ==                                                                      tmp%75#0
    // stubs/bytes.py:71-73
    // assert (
    //     Bytes(b"args" if Txn.num_app_args else b"no args") == b"no args"
    // ), "constructor expressions supported"
    assert // constructor expressions supported
    // stubs/bytes.py:75
    // return UInt64(1)
    int 1                                                                   1
    return


// test_cases.stubs.bytes.check_slicing_with_uint64(abc: bytes) -> void:
check_slicing_with_uint64:                                                  (洧도) abc#0 |
    // stubs/bytes.py:81-82
    // @subroutine
    // def check_slicing_with_uint64(abc: Bytes) -> None:
    proto 1 0                                                               (洧도) abc#0 |

check_slicing_with_uint64_block@0:                                          (洧도) abc#0 |
    // stubs/bytes.py:85
    // assert abc[one:] == b"bc"
    p-load abc#0                                                            (洧도) abc#0 | abc#0 (copy)
    len                                                                     (洧도) abc#0 | length%0#0
    // stubs/bytes.py:83
    // one = UInt64(1)
    int 1                                                                   (洧도) abc#0 | length%0#0,1
    // stubs/bytes.py:85
    // assert abc[one:] == b"bc"
    l-load-copy length%0#0 1                                                (洧도) abc#0 | length%0#0,1,length%0#0 (copy)
    >=                                                                      (洧도) abc#0 | length%0#0,is_out_of_bounds%0#0
    // stubs/bytes.py:83
    // one = UInt64(1)
    int 1                                                                   (洧도) abc#0 | length%0#0,is_out_of_bounds%0#0,1
    // stubs/bytes.py:85
    // assert abc[one:] == b"bc"
    l-load-copy length%0#0 2                                                (洧도) abc#0 | length%0#0,is_out_of_bounds%0#0,1,length%0#0 (copy)
    l-load is_out_of_bounds%0#0 2                                           (洧도) abc#0 | length%0#0,1,length%0#0 (copy),is_out_of_bounds%0#0
    select                                                                  (洧도) abc#0 | length%0#0,bounded_index%0#0
    p-load abc#0                                                            (洧도) abc#0 | length%0#0,bounded_index%0#0,abc#0 (copy)
    l-load-copy bounded_index%0#0 1                                         (洧도) abc#0 | length%0#0,bounded_index%0#0,abc#0 (copy),bounded_index%0#0 (copy)
    l-load-copy length%0#0 3                                                (洧도) abc#0 | length%0#0,bounded_index%0#0,abc#0 (copy),bounded_index%0#0 (copy),length%0#0 (copy)
    substring3                                                              (洧도) abc#0 | length%0#0,bounded_index%0#0,tmp%0#0
    byte 0x6263                                                             (洧도) abc#0 | length%0#0,bounded_index%0#0,tmp%0#0,0x6263
    ==                                                                      (洧도) abc#0 | length%0#0,bounded_index%0#0,tmp%1#0
    assert                                                                  (洧도) abc#0 | length%0#0,bounded_index%0#0
    // stubs/bytes.py:86
    // assert abc[one:one] == b""
    p-load abc#0                                                            (洧도) abc#0 | length%0#0,bounded_index%0#0,abc#0 (copy)
    l-load-copy bounded_index%0#0 1                                         (洧도) abc#0 | length%0#0,bounded_index%0#0,abc#0 (copy),bounded_index%0#0 (copy)
    l-load-copy bounded_index%0#0 2                                         (洧도) abc#0 | length%0#0,bounded_index%0#0,abc#0 (copy),bounded_index%0#0 (copy),bounded_index%0#0 (copy)
    substring3                                                              (洧도) abc#0 | length%0#0,bounded_index%0#0,tmp%2#0
    byte 0x                                                                 (洧도) abc#0 | length%0#0,bounded_index%0#0,tmp%2#0,0x
    ==                                                                      (洧도) abc#0 | length%0#0,bounded_index%0#0,tmp%3#0
    assert                                                                  (洧도) abc#0 | length%0#0,bounded_index%0#0
    // stubs/bytes.py:87
    // assert abc[:one] == b"a"
    p-load abc#0                                                            (洧도) abc#0 | length%0#0,bounded_index%0#0,abc#0 (copy)
    int 0                                                                   (洧도) abc#0 | length%0#0,bounded_index%0#0,abc#0 (copy),0
    l-load bounded_index%0#0 2                                              (洧도) abc#0 | length%0#0,abc#0 (copy),0,bounded_index%0#0
    substring3                                                              (洧도) abc#0 | length%0#0,tmp%4#0
    byte 0x61                                                               (洧도) abc#0 | length%0#0,tmp%4#0,0x61
    ==                                                                      (洧도) abc#0 | length%0#0,tmp%5#0
    assert                                                                  (洧도) abc#0 | length%0#0
    // stubs/bytes.py:88
    // assert one_to_seven()[one:-1] == b"23456"
    callsub one_to_seven                                                    (洧도) abc#0 | length%0#0,tmp%6#0
    l-load-copy tmp%6#0 0                                                   (洧도) abc#0 | length%0#0,tmp%6#0,tmp%6#0 (copy)
    len                                                                     (洧도) abc#0 | length%0#0,tmp%6#0,length%3#0
    // stubs/bytes.py:83
    // one = UInt64(1)
    int 1                                                                   (洧도) abc#0 | length%0#0,tmp%6#0,length%3#0,1
    // stubs/bytes.py:88
    // assert one_to_seven()[one:-1] == b"23456"
    l-load-copy length%3#0 1                                                (洧도) abc#0 | length%0#0,tmp%6#0,length%3#0,1,length%3#0 (copy)
    >=                                                                      (洧도) abc#0 | length%0#0,tmp%6#0,length%3#0,is_out_of_bounds%4#0
    // stubs/bytes.py:83
    // one = UInt64(1)
    int 1                                                                   (洧도) abc#0 | length%0#0,tmp%6#0,length%3#0,is_out_of_bounds%4#0,1
    // stubs/bytes.py:88
    // assert one_to_seven()[one:-1] == b"23456"
    l-load-copy length%3#0 2                                                (洧도) abc#0 | length%0#0,tmp%6#0,length%3#0,is_out_of_bounds%4#0,1,length%3#0 (copy)
    l-load is_out_of_bounds%4#0 2                                           (洧도) abc#0 | length%0#0,tmp%6#0,length%3#0,1,length%3#0 (copy),is_out_of_bounds%4#0
    select                                                                  (洧도) abc#0 | length%0#0,tmp%6#0,length%3#0,bounded_index%4#0
    l-load length%3#0 1                                                     (洧도) abc#0 | length%0#0,tmp%6#0,bounded_index%4#0,length%3#0
    l-load-copy bounded_index%4#0 1                                         (洧도) abc#0 | length%0#0,tmp%6#0,bounded_index%4#0,length%3#0,bounded_index%4#0 (copy)
    -                                                                       (洧도) abc#0 | length%0#0,tmp%6#0,bounded_index%4#0,bounded_index%5#0
    l-load-copy bounded_index%5#0 0                                         (洧도) abc#0 | length%0#0,tmp%6#0,bounded_index%4#0,bounded_index%5#0,bounded_index%5#0 (copy)
    l-load-copy bounded_index%4#0 2                                         (洧도) abc#0 | length%0#0,tmp%6#0,bounded_index%4#0,bounded_index%5#0,bounded_index%5#0 (copy),bounded_index%4#0 (copy)
    <                                                                       (洧도) abc#0 | length%0#0,tmp%6#0,bounded_index%4#0,bounded_index%5#0,end_before_start%1#0
    l-load bounded_index%5#0 1                                              (洧도) abc#0 | length%0#0,tmp%6#0,bounded_index%4#0,end_before_start%1#0,bounded_index%5#0
    l-load-copy bounded_index%4#0 2                                         (洧도) abc#0 | length%0#0,tmp%6#0,bounded_index%4#0,end_before_start%1#0,bounded_index%5#0,bounded_index%4#0 (copy)
    l-load end_before_start%1#0 2                                           (洧도) abc#0 | length%0#0,tmp%6#0,bounded_index%4#0,bounded_index%5#0,bounded_index%4#0 (copy),end_before_start%1#0
    select                                                                  (洧도) abc#0 | length%0#0,tmp%6#0,bounded_index%4#0,end%1#0
    l-load tmp%6#0 2                                                        (洧도) abc#0 | length%0#0,bounded_index%4#0,end%1#0,tmp%6#0
    l-load bounded_index%4#0 2                                              (洧도) abc#0 | length%0#0,end%1#0,tmp%6#0,bounded_index%4#0
    l-load end%1#0 2                                                        (洧도) abc#0 | length%0#0,tmp%6#0,bounded_index%4#0,end%1#0
    substring3                                                              (洧도) abc#0 | length%0#0,tmp%7#0
    byte 0x3233343536                                                       (洧도) abc#0 | length%0#0,tmp%7#0,0x3233343536
    ==                                                                      (洧도) abc#0 | length%0#0,tmp%8#0
    assert                                                                  (洧도) abc#0 | length%0#0
    // stubs/bytes.py:89
    // assert abc[UInt64(0) : ten] == b"abc"
    int 0                                                                   (洧도) abc#0 | length%0#0,0
    l-load-copy length%0#0 1                                                (洧도) abc#0 | length%0#0,0,length%0#0 (copy)
    >=                                                                      (洧도) abc#0 | length%0#0,is_out_of_bounds%6#0
    int 0                                                                   (洧도) abc#0 | length%0#0,is_out_of_bounds%6#0,0
    l-load-copy length%0#0 2                                                (洧도) abc#0 | length%0#0,is_out_of_bounds%6#0,0,length%0#0 (copy)
    l-load is_out_of_bounds%6#0 2                                           (洧도) abc#0 | length%0#0,0,length%0#0 (copy),is_out_of_bounds%6#0
    select                                                                  (洧도) abc#0 | length%0#0,bounded_index%6#0
    // stubs/bytes.py:84
    // ten = UInt64(10)
    int 10                                                                  (洧도) abc#0 | length%0#0,bounded_index%6#0,10
    // stubs/bytes.py:89
    // assert abc[UInt64(0) : ten] == b"abc"
    l-load-copy length%0#0 2                                                (洧도) abc#0 | length%0#0,bounded_index%6#0,10,length%0#0 (copy)
    >=                                                                      (洧도) abc#0 | length%0#0,bounded_index%6#0,is_out_of_bounds%7#0
    // stubs/bytes.py:84
    // ten = UInt64(10)
    int 10                                                                  (洧도) abc#0 | length%0#0,bounded_index%6#0,is_out_of_bounds%7#0,10
    // stubs/bytes.py:89
    // assert abc[UInt64(0) : ten] == b"abc"
    l-load length%0#0 3                                                     (洧도) abc#0 | bounded_index%6#0,is_out_of_bounds%7#0,10,length%0#0
    l-load is_out_of_bounds%7#0 2                                           (洧도) abc#0 | bounded_index%6#0,10,length%0#0,is_out_of_bounds%7#0
    select                                                                  (洧도) abc#0 | bounded_index%6#0,bounded_index%7#0
    p-load abc#0                                                            (洧도) abc#0 | bounded_index%6#0,bounded_index%7#0,abc#0 (copy)
    l-load bounded_index%6#0 2                                              (洧도) abc#0 | bounded_index%7#0,abc#0 (copy),bounded_index%6#0
    l-load bounded_index%7#0 2                                              (洧도) abc#0 | abc#0 (copy),bounded_index%6#0,bounded_index%7#0
    substring3                                                              (洧도) abc#0 | tmp%9#0
    byte 0x616263                                                           (洧도) abc#0 | tmp%9#0,0x616263
    ==                                                                      (洧도) abc#0 | tmp%10#0
    assert                                                                  (洧도) abc#0 |
    retsub


// test_cases.stubs.bytes.one_to_seven() -> bytes:
one_to_seven:
    // stubs/bytes.py:101-102
    // @subroutine
    // def one_to_seven() -> Bytes:
    proto 0 1

one_to_seven_block@0:
    // stubs/bytes.py:103
    // log("one_to_seven called")
    byte "one_to_seven called"                                              "one_to_seven called"
    log
    // stubs/bytes.py:104
    // return Bytes(b"1234567")
    byte 0x31323334353637                                                   0x31323334353637
    retsub                                                                  0x31323334353637


// test_cases.stubs.bytes.check_end_before_start_slicing(abc: bytes) -> void:
check_end_before_start_slicing:                                             (洧도) abc#0 |
    // stubs/bytes.py:92-93
    // @subroutine
    // def check_end_before_start_slicing(abc: Bytes) -> None:
    proto 1 0                                                               (洧도) abc#0 |

check_end_before_start_slicing_block@0:                                     (洧도) abc#0 |
    // stubs/bytes.py:94
    // assert abc[10:1] == b""
    p-load abc#0                                                            (洧도) abc#0 | abc#0 (copy)
    len                                                                     (洧도) abc#0 | length%0#0
    int 10                                                                  (洧도) abc#0 | length%0#0,10
    l-load-copy length%0#0 1                                                (洧도) abc#0 | length%0#0,10,length%0#0 (copy)
    >=                                                                      (洧도) abc#0 | length%0#0,is_out_of_bounds%0#0
    int 10                                                                  (洧도) abc#0 | length%0#0,is_out_of_bounds%0#0,10
    l-load-copy length%0#0 2                                                (洧도) abc#0 | length%0#0,is_out_of_bounds%0#0,10,length%0#0 (copy)
    l-load is_out_of_bounds%0#0 2                                           (洧도) abc#0 | length%0#0,10,length%0#0 (copy),is_out_of_bounds%0#0
    select                                                                  (洧도) abc#0 | length%0#0,bounded_index%0#0
    int 1                                                                   (洧도) abc#0 | length%0#0,bounded_index%0#0,1
    l-load-copy length%0#0 2                                                (洧도) abc#0 | length%0#0,bounded_index%0#0,1,length%0#0 (copy)
    >=                                                                      (洧도) abc#0 | length%0#0,bounded_index%0#0,is_out_of_bounds%1#0
    int 1                                                                   (洧도) abc#0 | length%0#0,bounded_index%0#0,is_out_of_bounds%1#0,1
    l-load-copy length%0#0 3                                                (洧도) abc#0 | length%0#0,bounded_index%0#0,is_out_of_bounds%1#0,1,length%0#0 (copy)
    l-load is_out_of_bounds%1#0 2                                           (洧도) abc#0 | length%0#0,bounded_index%0#0,1,length%0#0 (copy),is_out_of_bounds%1#0
    select                                                                  (洧도) abc#0 | length%0#0,bounded_index%0#0,bounded_index%1#0
    l-load-copy bounded_index%1#0 0                                         (洧도) abc#0 | length%0#0,bounded_index%0#0,bounded_index%1#0,bounded_index%1#0 (copy)
    l-load-copy bounded_index%0#0 2                                         (洧도) abc#0 | length%0#0,bounded_index%0#0,bounded_index%1#0,bounded_index%1#0 (copy),bounded_index%0#0 (copy)
    <                                                                       (洧도) abc#0 | length%0#0,bounded_index%0#0,bounded_index%1#0,end_before_start%0#0
    l-load bounded_index%1#0 1                                              (洧도) abc#0 | length%0#0,bounded_index%0#0,end_before_start%0#0,bounded_index%1#0
    l-load-copy bounded_index%0#0 2                                         (洧도) abc#0 | length%0#0,bounded_index%0#0,end_before_start%0#0,bounded_index%1#0,bounded_index%0#0 (copy)
    l-load end_before_start%0#0 2                                           (洧도) abc#0 | length%0#0,bounded_index%0#0,bounded_index%1#0,bounded_index%0#0 (copy),end_before_start%0#0
    select                                                                  (洧도) abc#0 | length%0#0,bounded_index%0#0,end%0#0
    p-load abc#0                                                            (洧도) abc#0 | length%0#0,bounded_index%0#0,end%0#0,abc#0 (copy)
    l-load-copy bounded_index%0#0 2                                         (洧도) abc#0 | length%0#0,bounded_index%0#0,end%0#0,abc#0 (copy),bounded_index%0#0 (copy)
    l-load end%0#0 2                                                        (洧도) abc#0 | length%0#0,bounded_index%0#0,abc#0 (copy),bounded_index%0#0 (copy),end%0#0
    substring3                                                              (洧도) abc#0 | length%0#0,bounded_index%0#0,tmp%0#0
    byte 0x                                                                 (洧도) abc#0 | length%0#0,bounded_index%0#0,tmp%0#0,0x
    ==                                                                      (洧도) abc#0 | length%0#0,bounded_index%0#0,tmp%1#0
    assert                                                                  (洧도) abc#0 | length%0#0,bounded_index%0#0
    // stubs/bytes.py:95
    // assert abc[-10:-12] == b""
    l-load-copy length%0#0 1                                                (洧도) abc#0 | length%0#0,bounded_index%0#0,length%0#0 (copy)
    l-load bounded_index%0#0 1                                              (洧도) abc#0 | length%0#0,length%0#0 (copy),bounded_index%0#0
    -                                                                       (洧도) abc#0 | length%0#0,bounded_index%2#0
    int 12                                                                  (洧도) abc#0 | length%0#0,bounded_index%2#0,12
    l-load-copy length%0#0 2                                                (洧도) abc#0 | length%0#0,bounded_index%2#0,12,length%0#0 (copy)
    >=                                                                      (洧도) abc#0 | length%0#0,bounded_index%2#0,is_out_of_bounds%3#0
    int 12                                                                  (洧도) abc#0 | length%0#0,bounded_index%2#0,is_out_of_bounds%3#0,12
    l-load-copy length%0#0 3                                                (洧도) abc#0 | length%0#0,bounded_index%2#0,is_out_of_bounds%3#0,12,length%0#0 (copy)
    l-load is_out_of_bounds%3#0 2                                           (洧도) abc#0 | length%0#0,bounded_index%2#0,12,length%0#0 (copy),is_out_of_bounds%3#0
    select                                                                  (洧도) abc#0 | length%0#0,bounded_index%2#0,bounded_offset%1#0
    l-load length%0#0 2                                                     (洧도) abc#0 | bounded_index%2#0,bounded_offset%1#0,length%0#0
    l-load bounded_offset%1#0 1                                             (洧도) abc#0 | bounded_index%2#0,length%0#0,bounded_offset%1#0
    -                                                                       (洧도) abc#0 | bounded_index%2#0,bounded_index%3#0
    l-load-copy bounded_index%3#0 0                                         (洧도) abc#0 | bounded_index%2#0,bounded_index%3#0,bounded_index%3#0 (copy)
    l-load-copy bounded_index%2#0 2                                         (洧도) abc#0 | bounded_index%2#0,bounded_index%3#0,bounded_index%3#0 (copy),bounded_index%2#0 (copy)
    <                                                                       (洧도) abc#0 | bounded_index%2#0,bounded_index%3#0,end_before_start%1#0
    l-load bounded_index%3#0 1                                              (洧도) abc#0 | bounded_index%2#0,end_before_start%1#0,bounded_index%3#0
    l-load-copy bounded_index%2#0 2                                         (洧도) abc#0 | bounded_index%2#0,end_before_start%1#0,bounded_index%3#0,bounded_index%2#0 (copy)
    l-load end_before_start%1#0 2                                           (洧도) abc#0 | bounded_index%2#0,bounded_index%3#0,bounded_index%2#0 (copy),end_before_start%1#0
    select                                                                  (洧도) abc#0 | bounded_index%2#0,end%1#0
    p-load abc#0                                                            (洧도) abc#0 | bounded_index%2#0,end%1#0,abc#0 (copy)
    l-load bounded_index%2#0 2                                              (洧도) abc#0 | end%1#0,abc#0 (copy),bounded_index%2#0
    l-load end%1#0 2                                                        (洧도) abc#0 | abc#0 (copy),bounded_index%2#0,end%1#0
    substring3                                                              (洧도) abc#0 | tmp%2#0
    byte 0x                                                                 (洧도) abc#0 | tmp%2#0,0x
    ==                                                                      (洧도) abc#0 | tmp%3#0
    assert                                                                  (洧도) abc#0 |
    retsub


