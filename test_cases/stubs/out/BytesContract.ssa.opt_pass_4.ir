contract test_cases.stubs.bytes.BytesContract:
    program approval:
        subroutine test_cases.stubs.bytes.BytesContract.approval_program() -> uint64:
            block@0: // L5
                let tmp%15#0: bytes = ((substring 1 3) "abc")
                let tmp%16#0: uint64 = (== tmp%15#0 "bc")
                (assert tmp%16#0)
                let tmp%22#0: bytes = ((substring 1 1) "abc")
                let tmp%23#0: uint64 = (== tmp%22#0 "")
                (assert tmp%23#0)
                let tmp%27#0: bytes = ((substring 0 1) "abc")
                let tmp%28#0: uint64 = (== tmp%27#0 "a")
                (assert tmp%28#0)
                let tmp%32#0: bytes = ((substring 0 2) "abc")
                let tmp%33#0: uint64 = (== tmp%32#0 "ab")
                (assert tmp%33#0)
                let tmp%45#0: bytes = ((substring 1 2) "abc")
                let tmp%46#0: uint64 = (== tmp%45#0 "b")
                (assert tmp%46#0)
                let tmp%54#0: bytes = ((substring 0 3) "abc")
                let tmp%55#0: uint64 = (== tmp%54#0 "abc")
                (assert tmp%55#0)
                let tmp%90#0: uint64 = (== 0x0f 0x0f)
                (assert tmp%90#0)
                return 1u
    
    program clear-state:
        subroutine test_cases.stubs.bytes.BytesContract.clear_state_program() -> uint64:
            block@0: // L70
                return 1u