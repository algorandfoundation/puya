contract test_cases.stubs.uint64.Uint64Contract:
    program approval:
        subroutine test_cases.stubs.uint64.Uint64Contract.approval_program() -> uint64:
            block@0: // L5
                let tmp%6#0: bool = 1u
                (assert tmp%6#0)
                let tmp%7#0: bool = 1u
                (assert tmp%7#0)
                let tmp%9#0: bool = 1u
                (assert tmp%9#0)
                let c#2: uint64 = 60u
                let tmp%10#0: bool = (== c#2 60u)
                (assert tmp%10#0)
                let tmp%12#0: bool = 1u
                (assert tmp%12#0)
                let c#3: uint64 = (/ c#2 5u)
                let tmp%13#0: bool = (== c#3 12u)
                (assert tmp%13#0)
                let tmp%15#0: bool = 1u
                (assert tmp%15#0)
                let tmp%17#0: bool = 1u
                (assert tmp%17#0)
                let c#4: uint64 = (exp c#3 2u)
                let tmp%18#0: bool = (== c#4 144u)
                (assert tmp%18#0)
                let tmp%20#0: bool = 1u
                (assert tmp%20#0)
                let c#5: uint64 = (shr c#4 6u)
                let tmp%21#0: bool = (== c#5 2u)
                (assert tmp%21#0)
                let c#6: uint64 = (shl c#5 6u)
                let tmp%22#0: bool = (== c#6 128u)
                (assert tmp%22#0)
                let tmp%24#0: bool = 1u
                (assert tmp%24#0)
                let tmp%26#0: bool = 1u
                (assert tmp%26#0)
                let tmp%28#0: bool = 1u
                (assert tmp%28#0)
                let tmp%29#0: bool = 1u
                (assert tmp%29#0)
                let tmp%32#0: bool = 1u
                (assert tmp%32#0)
                let tmp%33#0: bool = 1u
                (assert tmp%33#0)
                let tmp%36#0: bool = 1u
                (assert tmp%36#0)
                let tmp%38#0: bool = 1u
                (assert tmp%38#0)
                let tmp%40#0: bool = 1u
                (assert tmp%40#0)
                let tmp%41#0: bool = 1u
                (assert tmp%41#0)
                let y#2: uint64 = 62u
                let tmp%42#0: bool = (== y#2 62u)
                (assert tmp%42#0)
                let y#3: uint64 = (^ y#2 255u)
                let tmp%43#0: bool = (== y#3 193u)
                (assert tmp%43#0)
                let tmp%46#0: bool = 1u
                (assert tmp%46#0)
                return 1u
    
    program clear-state:
        subroutine test_cases.stubs.uint64.Uint64Contract.clear_state_program() -> bool:
            block@0: // L82
                return 1u