main test_cases.stubs.uint64.Uint64Contract.approval_program:
    block@0: // L5
        let tmp%0#0: bool = 1u
        let tmp%1#0: bool = 1u
        let tmp%2#0: bool = 1u
        let tmp%3#0: bool = 1u
        let tmp%4#0: bool = 1u
        let tmp%5#0: bool = 1u
        let tmp%6#0: uint64 = 6u
        let tmp%7#0: bool = 1u
        let c#1: uint64 = 65u
        let tmp%8#0: bool = 1u
        let tmp%9#0: uint64 = 55u
        let tmp%10#0: bool = 1u
        let c#2: uint64 = 60u
        let tmp%11#0: bool = 1u
        let tmp%12#0: uint64 = 12u
        let tmp%13#0: bool = 1u
        let c#3: uint64 = 12u
        let tmp%14#0: bool = 1u
        let tmp%15#0: uint64 = 300u
        let tmp%16#0: bool = 1u
        let tmp%17#0: uint64 = 125u
        let tmp%18#0: bool = 1u
        let c#4: uint64 = 144u
        let tmp%19#0: bool = 1u
        let tmp%20#0: uint64 = 4u
        let tmp%21#0: bool = 1u
        let c#5: uint64 = 2u
        let tmp%22#0: bool = 1u
        let c#6: uint64 = 128u
        let tmp%23#0: bool = 1u
        let tmp%24#0: uint64 = 0u
        let tmp%25#0: bool = 1u
        let tmp%26#0: uint64 = 18446744073709551614u
        let tmp%27#0: bool = 1u
        let tmp%28#0: bool = 0u
        let select%0#0: uint64 = 1u
        let tmp%29#0: bool = 1u
        let tmp%30#0: bool = 0u
        let select%1#0: uint64 = 0u
        let tmp%31#0: bool = 1u
        let tmp%32#0: bool = 1u
        let select%2#0: uint64 = 0u
        let tmp%33#0: bool = 1u
        let tmp%34#0: bool = 1u
        let select%3#0: uint64 = 0u
        let tmp%35#0: bool = 1u
        let tmp%36#0: bool = 1u
        let select%4#0: uint64 = 1u
        let tmp%37#0: bool = 1u
        let tmp%38#0: bool = 1u
        let select%5#0: uint64 = 1u
        let tmp%39#0: bool = 1u
        let tmp%40#0: bool = 0u
        let select%6#0: uint64 = 1u
        let tmp%41#0: bool = 1u
        let tmp%42#0: bool = 0u
        let select%7#0: uint64 = 0u
        let tmp%43#0: bool = 1u
        let tmp%44#0: uint64 = 1u
        let tmp%45#0: bool = 1u
        let tmp%46#0: uint64 = 61u
        let tmp%47#0: bool = 1u
        let tmp%48#0: uint64 = 57u
        let tmp%49#0: bool = 1u
        let y#1: uint64 = 30u
        let tmp%50#0: bool = 1u
        let y#2: uint64 = 62u
        let tmp%51#0: bool = 1u
        let y#3: uint64 = 193u
        let tmp%52#0: bool = 1u
        let tmp%53#0: uint64 = 4u
        let tmp%54#0: uint64 = 4u
        let tmp%55#0: bool = 1u
        let tmp%56#0: bool = 1u
        let tmp%57#0: uint64 = (txn NumAppArgs)
        let tmp%58#0: bool = (!= tmp%57#0 0u)
        let select%8#0: uint64 = (select 5u 1u tmp%57#0)
        let tmp%59#0: bool = (== select%8#0 5u)
        (assert tmp%59#0) // constructor expressions supported
        return 1u