contract StringContract
{
  approval_program(): bool
  {
    empty: puyapy.String = 
    assert(!(reinterpret_cast<bool>(len(reinterpret_cast<puyapy.Bytes>(empty)))), comment="Empty bytes should be False")
    non_empty: puyapy.String =  
    assert(reinterpret_cast<bool>(len(reinterpret_cast<puyapy.Bytes>(non_empty))), comment="Non-empty bytes should be True")
    assert(a + b == ab)
    assert(a + b == ab)
    assert(a + b == ab)
    assert(empty != non_empty)
    c: puyapy.String = c
    c += d
    c += e
    assert(c == cde)
    assert(puyapy_lib_bytes::is_substring(item=reinterpret_cast<puyapy.Bytes>(brown fox), sequence=reinterpret_cast<puyapy.Bytes>(The quick brown fox jumped over the lazy dog)))
    assert(!(puyapy_lib_bytes::is_substring(item=reinterpret_cast<puyapy.Bytes>(red fox), sequence=reinterpret_cast<puyapy.Bytes>(The quick brown fox jumped over the lazy dog))))
    return true
  }
  
  clear_state_program(): bool
  {
    return true
  }
}