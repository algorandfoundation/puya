contract BigUIntContract
{
  approval_program(): bool
  {
    test_cases.stubs.biguint::compare_biguints(1n, 2n)
    test_cases.stubs.biguint::compare_biguint_vs_uint64(1n, 2u)
    test_cases.stubs.biguint::compare_uint64_vs_biguint(1u, 2n)
    assert(bsqrt(9n) == bsqrt(10n))
    return true
  }
  
  clear_state_program(): bool
  {
    assert(0n == 0n)
    return true
  }
}

subroutine compare_biguints(one: algopy.BigUInt, two: algopy.BigUInt): None
{
  assert(one < two)
  assert(one <= two)
  assert(one == one)
  assert(two > one)
  assert(two >= one)
  assert(one != two)
}

subroutine compare_biguint_vs_uint64(one: algopy.BigUInt, two: algopy.UInt64): None
{
  assert(one < itob(two))
  assert(one <= itob(two))
  assert(one == one)
  assert(one < itob(two))
  assert(one <= itob(two))
  assert(one != itob(two))
}

subroutine compare_uint64_vs_biguint(one: algopy.UInt64, two: algopy.BigUInt): None
{
  assert(two > itob(one))
  assert(two >= itob(one))
  assert(one == one)
  assert(two > itob(one))
  assert(two >= itob(one))
  assert(two != itob(one))
}