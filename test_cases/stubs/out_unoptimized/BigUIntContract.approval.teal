#pragma version 10

test_cases.stubs.biguint.BigUIntContract.approval_program:
    // stubs/biguint.py:6
    // one = BigUInt(1)
    byte 0x01
    // stubs/biguint.py:7
    // compare_biguints(one, BigUInt(2))
    byte 0x02
    callsub compare_biguints
    // stubs/biguint.py:6
    // one = BigUInt(1)
    byte 0x01
    // stubs/biguint.py:8
    // compare_biguint_vs_uint64(one, UInt64(2))
    int 2
    callsub compare_biguint_vs_uint64
    // stubs/biguint.py:9
    // compare_uint64_vs_biguint(UInt64(1), BigUInt(2))
    int 1
    byte 0x02
    callsub compare_uint64_vs_biguint
    // stubs/biguint.py:10
    // assert op.bsqrt(BigUInt(9)) == op.bsqrt(10)
    byte 0x09
    bsqrt
    byte 0x0a
    bsqrt
    b==
    assert
    // stubs/biguint.py:6
    // one = BigUInt(1)
    byte 0x01
    byte 0x01
    // stubs/biguint.py:11
    // assert one == +one
    b==
    assert
    // stubs/biguint.py:12
    // return True
    int 1
    return


// test_cases.stubs.biguint.compare_biguints(one: bytes, two: bytes) -> void:
compare_biguints:
    // stubs/biguint.py:19-20
    // @subroutine
    // def compare_biguints(one: BigUInt, two: BigUInt) -> None:
    proto 2 0
    // stubs/biguint.py:21
    // assert one < two
    frame_dig -2
    frame_dig -1
    b<
    assert
    // stubs/biguint.py:22
    // assert one <= two
    frame_dig -2
    frame_dig -1
    b<=
    assert
    // stubs/biguint.py:23
    // assert one == one  # noqa: PLR0124
    frame_dig -2
    frame_dig -2
    b==
    assert
    // stubs/biguint.py:24
    // assert two > one
    frame_dig -1
    frame_dig -2
    b>
    assert
    // stubs/biguint.py:25
    // assert two >= one
    frame_dig -1
    frame_dig -2
    b>=
    assert
    // stubs/biguint.py:26
    // assert one != two
    frame_dig -2
    frame_dig -1
    b!=
    assert
    retsub


// test_cases.stubs.biguint.compare_biguint_vs_uint64(one: bytes, two: uint64) -> void:
compare_biguint_vs_uint64:
    // stubs/biguint.py:29-30
    // @subroutine
    // def compare_biguint_vs_uint64(one: BigUInt, two: UInt64) -> None:
    proto 2 0
    // stubs/biguint.py:31
    // assert one < two
    frame_dig -1
    itob
    frame_dig -2
    uncover 1
    b<
    assert
    // stubs/biguint.py:32
    // assert one <= two
    frame_dig -1
    itob
    frame_dig -2
    uncover 1
    b<=
    assert
    // stubs/biguint.py:33
    // assert one == one  # noqa: PLR0124
    frame_dig -2
    frame_dig -2
    b==
    assert
    // stubs/biguint.py:34
    // assert two > one
    frame_dig -1
    itob
    frame_dig -2
    uncover 1
    b<
    assert
    // stubs/biguint.py:35
    // assert two >= one
    frame_dig -1
    itob
    frame_dig -2
    uncover 1
    b<=
    assert
    // stubs/biguint.py:36
    // assert one != two
    frame_dig -1
    itob
    frame_dig -2
    uncover 1
    b!=
    assert
    retsub


// test_cases.stubs.biguint.compare_uint64_vs_biguint(one: uint64, two: bytes) -> void:
compare_uint64_vs_biguint:
    // stubs/biguint.py:39-40
    // @subroutine
    // def compare_uint64_vs_biguint(one: UInt64, two: BigUInt) -> None:
    proto 2 0
    // stubs/biguint.py:41
    // assert one < two
    frame_dig -2
    itob
    frame_dig -1
    uncover 1
    b>
    assert
    // stubs/biguint.py:42
    // assert one <= two
    frame_dig -2
    itob
    frame_dig -1
    uncover 1
    b>=
    assert
    // stubs/biguint.py:43
    // assert one == one  # noqa: PLR0124
    frame_dig -2
    frame_dig -2
    ==
    assert
    // stubs/biguint.py:44
    // assert two > one
    frame_dig -2
    itob
    frame_dig -1
    uncover 1
    b>
    assert
    // stubs/biguint.py:45
    // assert two >= one
    frame_dig -2
    itob
    frame_dig -1
    uncover 1
    b>=
    assert
    // stubs/biguint.py:46
    // assert one != two
    frame_dig -2
    itob
    frame_dig -1
    uncover 1
    b!=
    assert
    retsub
