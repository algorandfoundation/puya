{
  "version": 3,
  "sources": [
    "../bytes.py"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAKkB;;AACQ;;AAAX;AAAP;AACU;;AACQ;;AAAX;AAAP;AACU;;AACQ;;AAAX;AAAP;AALU;;AAQH;AAAA;AAAA;AAAP;AADQ;AAED;AAAA;AAAA;AAAP;AAEO;;AAAc;;;AAAd;AAA6B;;AAA7B;AAAP;AAEI;;;AACC;;;AAAL;AACY;;;;AAAL;AAAP;AAEM;AACK;AAAJ;AAAA;AAAU;;AAAV;AAAP;AADM;AAGC;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAHD;AAGC;;AAAA;;AAAA;AAAW;;AAAX;AAAP;AAHM;AAIC;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAJD;AAIC;;AAAA;;AAAA;AAAY;AAAZ;AAAP;AAJM;AAKC;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AALD;AAKC;AAAA;;AAAA;AAAW;;AAAX;AAAP;AALM;AAMC;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAND;AAMC;AAAA;;AAAA;AAAY;;AAAZ;AAAP;AANM;AAOC;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAPD;AAOC;;AAAA;;AAAA;AAAY;;AAAZ;AAAP;AAPM;AAQC;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AARD;AAQC;;AAAA;;AAAA;AAAc;;;AAAd;AAAP;AACO;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAA2B;;AAA3B;AAAP;AATM;AAUC;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAVD;AAUC;;AAAA;;AAAA;AAAe;AAAf;AAAP;AAEO;AAGF;AAAA;AAAA;AAHE;AAAA;AAGF;;AAAA;AAHE;AAGF;AACL;AAJO;AAKC;AAAA;AAAA;AALD;AAAA;AAKC;;AAAA;AALD;AAKC;AAAR;AALO;AAMC;AAAA;AAAA;AALA;AADD;AAMC;;AAAA;AALA;AAKA;AAAR;AALQ;AAMA;AAAA;AAAA;AAPD;AACC;AAMA;;AAAA;AANA;AAMA;AAAR;AANQ;AAOA;AAAA;AAAA;AAPA;AAAA;AAOA;;AAAA;AAPA;AAOA;AAAR;AARO;AASC;AAAA;AAAA;AATD;AAAA;AASC;;AAAA;AATD;AASC;AAAR;AATO;AAUC;AAAA;AAAA;AATA;AADD;AAUC;;AAAA;AAVD;AAUC;AAAR;AATQ;AAUA;AAAA;AAAA;AAXD;AACC;AAUA;;AAAA;AAXD;AAWC;AAAR;AAVQ;AAWA;AAAA;AAAA;AAXA;AAAA;AAWA;;AAAA;AAXA;AAWA;AAAR;AAGI;;AACA;;AAKG;AANH;;AAMG;AAAP;AALI;;AACA;;AAKG;AAJH;AAIG;AAAP;AANI;;AAEA;AAKG;AANH;;AAMG;AAAP;AARI;;AAGA;AAQJ;AACO;AAZH;;AAYG;AAAP;AATI;AAUJ;AACO;AAXH;AAWG;AAAP;AAZI;;AAaJ;AAdI;;AAeG;AAAP;AA3CM;AA6CN;;;AA7CM;AA8CN;;;AAGqB;;AAAA;AAAA;AAAjB;;AAAA;;;;;;AAAM;;AAAA;AAAgD;;AAAhD;AADV;AAIO;AAAP;AAMR;;;;;;AAIW;;AAAA;AAFD;AAEC;;AAAA;AAFD;AAEC;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAa;;AAAb;AAAP;AACO;;AAAA;AAHD;AAGC;;AAAA;AAHD;AAGC;;AAAA;;AAAA;AAAA;;AAHD;AAGC;;AAAA;AAHD;AAGC;;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAgB;AAAhB;AAAP;AACO;;AAAA;AAJD;AAIC;;AAAA;AAJD;AAIC;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAa;;AAAb;AAAP;AACO;;;AAAA;AAAA;AALD;AAKC;;AAAA;AALD;AAKC;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAA0B;;AAA1B;AAAP;AACO;;AAAA;AAAI;AAAJ;;AAAA;AAAI;AAAJ;;AAAA;;AAAA;AAAA;;AALD;AAKC;;AAAA;AALD;AAKC;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAwB;AAAxB;AAAP;;AAGJ;;;;;;AAEW;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAa;AAAb;AAAP;AACO;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAgB;AAAhB;AAAP;AAGO;;AAAA;AADD;AACC;;AAAA;AADD;AACC;;AAAA;;AAAA;AAAA;;AAFD;AAEC;;AAAA;AAFD;AAEC;;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAgB;AAAhB;AAAP;;;;;AAKI;;;;;;;;;;;;;;;;;;;;;AAAJ;AACO;;AAAP",
  "op_pc_offset": 0,
  "pc_events": {
    "1": {
      "subroutine": "test_cases.stubs.bytes.BytesContract.approval_program",
      "params": {},
      "block": "main",
      "stack_in": [],
      "op": "intcblock 1 0 10 2"
    },
    "7": {
      "op": "bytecblock 0x 0x31 0x616263 0xff 0x61 0x00 0x0f 0x4261736520363420656e636f646564 0x6263 0x31323334353637 0xf0 0x4261736520333220656e636f646564 0x4261736520313620656e636f646564 0x6162 0x3233343536 0x6e6f2061726773"
    },
    "102": {
      "op": "b main_block@0"
    },
    "105": {
      "block": "main_block@0",
      "stack_in": [],
      "op": "bytec 7 // base64(QmFzZSA2NCBlbmNvZGVk)",
      "defined_out": [
        "QmFzZSA2NCBlbmNvZGVk"
      ],
      "stack_out": [
        "QmFzZSA2NCBlbmNvZGVk"
      ]
    },
    "107": {
      "op": "bytec 7 // 0x4261736520363420656e636f646564",
      "defined_out": [
        "0x4261736520363420656e636f646564",
        "QmFzZSA2NCBlbmNvZGVk"
      ],
      "stack_out": [
        "QmFzZSA2NCBlbmNvZGVk",
        "0x4261736520363420656e636f646564"
      ]
    },
    "109": {
      "op": "==",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "110": {
      "op": "assert",
      "stack_out": []
    },
    "111": {
      "op": "bytec 11 // base32(IJQXGZJAGMZCAZLOMNXWIZLE)",
      "defined_out": [
        "IJQXGZJAGMZCAZLOMNXWIZLE"
      ],
      "stack_out": [
        "IJQXGZJAGMZCAZLOMNXWIZLE"
      ]
    },
    "113": {
      "op": "bytec 11 // 0x4261736520333220656e636f646564",
      "defined_out": [
        "0x4261736520333220656e636f646564",
        "IJQXGZJAGMZCAZLOMNXWIZLE"
      ],
      "stack_out": [
        "IJQXGZJAGMZCAZLOMNXWIZLE",
        "0x4261736520333220656e636f646564"
      ]
    },
    "115": {
      "op": "==",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "116": {
      "op": "assert",
      "stack_out": []
    },
    "117": {
      "op": "bytec 12 // 0x4261736520313620656e636f646564",
      "defined_out": [
        "0x4261736520313620656e636f646564"
      ],
      "stack_out": [
        "0x4261736520313620656e636f646564"
      ]
    },
    "119": {
      "op": "bytec 12 // 0x4261736520313620656e636f646564",
      "stack_out": [
        "0x4261736520313620656e636f646564",
        "0x4261736520313620656e636f646564"
      ]
    },
    "121": {
      "op": "==",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "122": {
      "op": "assert",
      "stack_out": []
    },
    "123": {
      "op": "bytec 7 // base64(QmFzZSA2NCBlbmNvZGVk)",
      "stack_out": [
        "QmFzZSA2NCBlbmNvZGVk"
      ]
    },
    "125": {
      "op": "len",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "126": {
      "op": "intc_1 // 0",
      "defined_out": [
        "0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "0"
      ]
    },
    "127": {
      "op": "!=",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "128": {
      "error": "Non empty bytes should be Truthy",
      "op": "assert // Non empty bytes should be Truthy",
      "stack_out": []
    },
    "129": {
      "op": "bytec_0 // 0x",
      "defined_out": [
        "0x"
      ],
      "stack_out": [
        "0x"
      ]
    },
    "130": {
      "op": "len",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "131": {
      "op": "intc_1 // 0",
      "stack_out": [
        "tmp%5#0",
        "0"
      ]
    },
    "132": {
      "op": "==",
      "defined_out": [
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0"
      ]
    },
    "133": {
      "error": "Empty bytes should be Falsy",
      "op": "assert // Empty bytes should be Falsy",
      "stack_out": []
    },
    "134": {
      "op": "bytec 4 // 0x61",
      "defined_out": [
        "0x61"
      ],
      "stack_out": [
        "0x61"
      ]
    },
    "136": {
      "op": "pushbytes 0x62",
      "defined_out": [
        "0x61",
        "0x62"
      ],
      "stack_out": [
        "0x61",
        "0x62"
      ]
    },
    "139": {
      "op": "concat",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0"
      ]
    },
    "140": {
      "op": "bytec 13 // 0x6162",
      "defined_out": [
        "0x6162",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0",
        "0x6162"
      ]
    },
    "142": {
      "op": "==",
      "defined_out": [
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0"
      ]
    },
    "143": {
      "op": "assert",
      "stack_out": []
    },
    "144": {
      "op": "pushbytes 0x63",
      "defined_out": [
        "0x63"
      ],
      "stack_out": [
        "0x63"
      ]
    },
    "147": {
      "op": "pushbytes 0x64",
      "defined_out": [
        "0x63",
        "0x64"
      ],
      "stack_out": [
        "0x63",
        "0x64"
      ]
    },
    "150": {
      "op": "concat",
      "defined_out": [
        "c#1"
      ],
      "stack_out": [
        "c#1"
      ]
    },
    "151": {
      "op": "pushbytes 0x6364",
      "defined_out": [
        "0x6364",
        "c#1"
      ],
      "stack_out": [
        "c#1",
        "0x6364"
      ]
    },
    "155": {
      "op": "==",
      "defined_out": [
        "tmp%10#0"
      ],
      "stack_out": [
        "tmp%10#0"
      ]
    },
    "156": {
      "op": "assert",
      "stack_out": []
    },
    "157": {
      "op": "bytec_2 // 0x616263",
      "defined_out": [
        "0x616263"
      ],
      "stack_out": [
        "0x616263"
      ]
    },
    "158": {
      "op": "intc_1 // 0",
      "stack_out": [
        "0x616263",
        "0"
      ]
    },
    "159": {
      "op": "intc_0 // 1",
      "defined_out": [
        "0",
        "0x616263",
        "1"
      ],
      "stack_out": [
        "0x616263",
        "0",
        "1"
      ]
    },
    "160": {
      "op": "extract3",
      "defined_out": [
        "extract%0#0"
      ],
      "stack_out": [
        "extract%0#0"
      ]
    },
    "161": {
      "op": "bytec 4 // 0x61",
      "stack_out": [
        "extract%0#0",
        "0x61"
      ]
    },
    "163": {
      "op": "==",
      "defined_out": [
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0"
      ]
    },
    "164": {
      "op": "assert",
      "stack_out": []
    },
    "165": {
      "op": "bytec_2 // 0x616263",
      "stack_out": [
        "0x616263"
      ]
    },
    "166": {
      "op": "len",
      "defined_out": [
        "length%0#0"
      ],
      "stack_out": [
        "length%0#0"
      ]
    },
    "167": {
      "op": "intc_0 // 1",
      "stack_out": [
        "length%0#0",
        "1"
      ]
    },
    "168": {
      "op": "dig 1",
      "defined_out": [
        "1",
        "length%0#0",
        "length%0#0 (copy)"
      ],
      "stack_out": [
        "length%0#0",
        "1",
        "length%0#0 (copy)"
      ]
    },
    "170": {
      "op": ">=",
      "defined_out": [
        "is_out_of_bounds%0#0",
        "length%0#0"
      ],
      "stack_out": [
        "length%0#0",
        "is_out_of_bounds%0#0"
      ]
    },
    "171": {
      "op": "intc_0 // 1",
      "stack_out": [
        "length%0#0",
        "is_out_of_bounds%0#0",
        "1"
      ]
    },
    "172": {
      "op": "dig 2",
      "stack_out": [
        "length%0#0",
        "is_out_of_bounds%0#0",
        "1",
        "length%0#0 (copy)"
      ]
    },
    "174": {
      "op": "uncover 2",
      "stack_out": [
        "length%0#0",
        "1",
        "length%0#0 (copy)",
        "is_out_of_bounds%0#0"
      ]
    },
    "176": {
      "op": "select",
      "defined_out": [
        "bounded_index%0#0",
        "length%0#0"
      ],
      "stack_out": [
        "length%0#0",
        "bounded_index%0#0"
      ]
    },
    "177": {
      "op": "bytec_2 // 0x616263",
      "stack_out": [
        "length%0#0",
        "bounded_index%0#0",
        "0x616263"
      ]
    },
    "178": {
      "op": "uncover 1",
      "stack_out": [
        "length%0#0",
        "0x616263",
        "bounded_index%0#0"
      ]
    },
    "180": {
      "op": "uncover 2",
      "stack_out": [
        "0x616263",
        "bounded_index%0#0",
        "length%0#0"
      ]
    },
    "182": {
      "op": "substring3",
      "defined_out": [
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%12#0"
      ]
    },
    "183": {
      "op": "bytec 8 // 0x6263",
      "defined_out": [
        "0x6263",
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%12#0",
        "0x6263"
      ]
    },
    "185": {
      "op": "==",
      "defined_out": [
        "tmp%13#0"
      ],
      "stack_out": [
        "tmp%13#0"
      ]
    },
    "186": {
      "op": "assert",
      "stack_out": []
    },
    "187": {
      "op": "bytec_2 // 0x616263",
      "stack_out": [
        "0x616263"
      ]
    },
    "188": {
      "op": "len",
      "defined_out": [
        "length%1#0"
      ],
      "stack_out": [
        "length%1#0"
      ]
    },
    "189": {
      "op": "intc_0 // 1",
      "stack_out": [
        "length%1#0",
        "1"
      ]
    },
    "190": {
      "op": "dig 1",
      "defined_out": [
        "1",
        "length%1#0",
        "length%1#0 (copy)"
      ],
      "stack_out": [
        "length%1#0",
        "1",
        "length%1#0 (copy)"
      ]
    },
    "192": {
      "op": ">=",
      "defined_out": [
        "is_out_of_bounds%1#0",
        "length%1#0"
      ],
      "stack_out": [
        "length%1#0",
        "is_out_of_bounds%1#0"
      ]
    },
    "193": {
      "op": "intc_0 // 1",
      "stack_out": [
        "length%1#0",
        "is_out_of_bounds%1#0",
        "1"
      ]
    },
    "194": {
      "op": "dig 2",
      "stack_out": [
        "length%1#0",
        "is_out_of_bounds%1#0",
        "1",
        "length%1#0 (copy)"
      ]
    },
    "196": {
      "op": "uncover 2",
      "stack_out": [
        "length%1#0",
        "1",
        "length%1#0 (copy)",
        "is_out_of_bounds%1#0"
      ]
    },
    "198": {
      "op": "select",
      "defined_out": [
        "bounded_index%1#0",
        "length%1#0"
      ],
      "stack_out": [
        "length%1#0",
        "bounded_index%1#0"
      ]
    },
    "199": {
      "op": "cover 1",
      "stack_out": [
        "bounded_index%1#0",
        "length%1#0"
      ]
    },
    "201": {
      "op": "intc_0 // 1",
      "stack_out": [
        "bounded_index%1#0",
        "length%1#0",
        "1"
      ]
    },
    "202": {
      "op": "dig 1",
      "stack_out": [
        "bounded_index%1#0",
        "length%1#0",
        "1",
        "length%1#0 (copy)"
      ]
    },
    "204": {
      "op": ">=",
      "defined_out": [
        "bounded_index%1#0",
        "is_out_of_bounds%2#0",
        "length%1#0"
      ],
      "stack_out": [
        "bounded_index%1#0",
        "length%1#0",
        "is_out_of_bounds%2#0"
      ]
    },
    "205": {
      "op": "intc_0 // 1",
      "stack_out": [
        "bounded_index%1#0",
        "length%1#0",
        "is_out_of_bounds%2#0",
        "1"
      ]
    },
    "206": {
      "op": "uncover 2",
      "stack_out": [
        "bounded_index%1#0",
        "is_out_of_bounds%2#0",
        "1",
        "length%1#0"
      ]
    },
    "208": {
      "op": "uncover 2",
      "stack_out": [
        "bounded_index%1#0",
        "1",
        "length%1#0",
        "is_out_of_bounds%2#0"
      ]
    },
    "210": {
      "op": "select",
      "defined_out": [
        "bounded_index%1#0",
        "bounded_index%2#0"
      ],
      "stack_out": [
        "bounded_index%1#0",
        "bounded_index%2#0"
      ]
    },
    "211": {
      "op": "bytec_2 // 0x616263",
      "stack_out": [
        "bounded_index%1#0",
        "bounded_index%2#0",
        "0x616263"
      ]
    },
    "212": {
      "op": "uncover 2",
      "stack_out": [
        "bounded_index%2#0",
        "0x616263",
        "bounded_index%1#0"
      ]
    },
    "214": {
      "op": "uncover 2",
      "stack_out": [
        "0x616263",
        "bounded_index%1#0",
        "bounded_index%2#0"
      ]
    },
    "216": {
      "op": "substring3",
      "defined_out": [
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%14#0"
      ]
    },
    "217": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "tmp%14#0",
        "0x"
      ]
    },
    "218": {
      "op": "==",
      "defined_out": [
        "tmp%15#0"
      ],
      "stack_out": [
        "tmp%15#0"
      ]
    },
    "219": {
      "op": "assert",
      "stack_out": []
    },
    "220": {
      "op": "bytec_2 // 0x616263",
      "stack_out": [
        "0x616263"
      ]
    },
    "221": {
      "op": "len",
      "defined_out": [
        "length%2#0"
      ],
      "stack_out": [
        "length%2#0"
      ]
    },
    "222": {
      "op": "intc_0 // 1",
      "stack_out": [
        "length%2#0",
        "1"
      ]
    },
    "223": {
      "op": "dig 1",
      "defined_out": [
        "1",
        "length%2#0",
        "length%2#0 (copy)"
      ],
      "stack_out": [
        "length%2#0",
        "1",
        "length%2#0 (copy)"
      ]
    },
    "225": {
      "op": ">=",
      "defined_out": [
        "is_out_of_bounds%3#0",
        "length%2#0"
      ],
      "stack_out": [
        "length%2#0",
        "is_out_of_bounds%3#0"
      ]
    },
    "226": {
      "op": "intc_0 // 1",
      "stack_out": [
        "length%2#0",
        "is_out_of_bounds%3#0",
        "1"
      ]
    },
    "227": {
      "op": "uncover 2",
      "stack_out": [
        "is_out_of_bounds%3#0",
        "1",
        "length%2#0"
      ]
    },
    "229": {
      "op": "uncover 2",
      "stack_out": [
        "1",
        "length%2#0",
        "is_out_of_bounds%3#0"
      ]
    },
    "231": {
      "op": "select",
      "defined_out": [
        "bounded_index%3#0"
      ],
      "stack_out": [
        "bounded_index%3#0"
      ]
    },
    "232": {
      "op": "bytec_2 // 0x616263",
      "stack_out": [
        "bounded_index%3#0",
        "0x616263"
      ]
    },
    "233": {
      "op": "intc_1 // 0",
      "stack_out": [
        "bounded_index%3#0",
        "0x616263",
        "0"
      ]
    },
    "234": {
      "op": "uncover 2",
      "stack_out": [
        "0x616263",
        "0",
        "bounded_index%3#0"
      ]
    },
    "236": {
      "op": "substring3",
      "defined_out": [
        "tmp%16#0"
      ],
      "stack_out": [
        "tmp%16#0"
      ]
    },
    "237": {
      "op": "bytec 4 // 0x61",
      "stack_out": [
        "tmp%16#0",
        "0x61"
      ]
    },
    "239": {
      "op": "==",
      "defined_out": [
        "tmp%17#0"
      ],
      "stack_out": [
        "tmp%17#0"
      ]
    },
    "240": {
      "op": "assert",
      "stack_out": []
    },
    "241": {
      "op": "bytec_2 // 0x616263",
      "stack_out": [
        "0x616263"
      ]
    },
    "242": {
      "op": "len",
      "defined_out": [
        "length%3#0"
      ],
      "stack_out": [
        "length%3#0"
      ]
    },
    "243": {
      "op": "intc_0 // 1",
      "stack_out": [
        "length%3#0",
        "1"
      ]
    },
    "244": {
      "op": "dig 1",
      "defined_out": [
        "1",
        "length%3#0",
        "length%3#0 (copy)"
      ],
      "stack_out": [
        "length%3#0",
        "1",
        "length%3#0 (copy)"
      ]
    },
    "246": {
      "op": ">=",
      "defined_out": [
        "is_out_of_bounds%4#0",
        "length%3#0"
      ],
      "stack_out": [
        "length%3#0",
        "is_out_of_bounds%4#0"
      ]
    },
    "247": {
      "op": "intc_0 // 1",
      "stack_out": [
        "length%3#0",
        "is_out_of_bounds%4#0",
        "1"
      ]
    },
    "248": {
      "op": "dig 2",
      "stack_out": [
        "length%3#0",
        "is_out_of_bounds%4#0",
        "1",
        "length%3#0 (copy)"
      ]
    },
    "250": {
      "op": "uncover 2",
      "stack_out": [
        "length%3#0",
        "1",
        "length%3#0 (copy)",
        "is_out_of_bounds%4#0"
      ]
    },
    "252": {
      "op": "select",
      "defined_out": [
        "bounded_offset%0#0",
        "length%3#0"
      ],
      "stack_out": [
        "length%3#0",
        "bounded_offset%0#0"
      ]
    },
    "253": {
      "op": "-",
      "defined_out": [
        "bounded_index%4#0"
      ],
      "stack_out": [
        "bounded_index%4#0"
      ]
    },
    "254": {
      "op": "bytec_2 // 0x616263",
      "stack_out": [
        "bounded_index%4#0",
        "0x616263"
      ]
    },
    "255": {
      "op": "intc_1 // 0",
      "stack_out": [
        "bounded_index%4#0",
        "0x616263",
        "0"
      ]
    },
    "256": {
      "op": "uncover 2",
      "stack_out": [
        "0x616263",
        "0",
        "bounded_index%4#0"
      ]
    },
    "258": {
      "op": "substring3",
      "defined_out": [
        "tmp%18#0"
      ],
      "stack_out": [
        "tmp%18#0"
      ]
    },
    "259": {
      "op": "bytec 13 // 0x6162",
      "stack_out": [
        "tmp%18#0",
        "0x6162"
      ]
    },
    "261": {
      "op": "==",
      "defined_out": [
        "tmp%19#0"
      ],
      "stack_out": [
        "tmp%19#0"
      ]
    },
    "262": {
      "op": "assert",
      "stack_out": []
    },
    "263": {
      "op": "bytec_2 // 0x616263",
      "stack_out": [
        "0x616263"
      ]
    },
    "264": {
      "op": "len",
      "defined_out": [
        "length%4#0"
      ],
      "stack_out": [
        "length%4#0"
      ]
    },
    "265": {
      "op": "intc_3 // 2",
      "defined_out": [
        "2",
        "length%4#0"
      ],
      "stack_out": [
        "length%4#0",
        "2"
      ]
    },
    "266": {
      "op": "dig 1",
      "defined_out": [
        "2",
        "length%4#0",
        "length%4#0 (copy)"
      ],
      "stack_out": [
        "length%4#0",
        "2",
        "length%4#0 (copy)"
      ]
    },
    "268": {
      "op": ">=",
      "defined_out": [
        "is_out_of_bounds%5#0",
        "length%4#0"
      ],
      "stack_out": [
        "length%4#0",
        "is_out_of_bounds%5#0"
      ]
    },
    "269": {
      "op": "intc_3 // 2",
      "stack_out": [
        "length%4#0",
        "is_out_of_bounds%5#0",
        "2"
      ]
    },
    "270": {
      "op": "dig 2",
      "stack_out": [
        "length%4#0",
        "is_out_of_bounds%5#0",
        "2",
        "length%4#0 (copy)"
      ]
    },
    "272": {
      "op": "uncover 2",
      "stack_out": [
        "length%4#0",
        "2",
        "length%4#0 (copy)",
        "is_out_of_bounds%5#0"
      ]
    },
    "274": {
      "op": "select",
      "defined_out": [
        "bounded_offset%1#0",
        "length%4#0"
      ],
      "stack_out": [
        "length%4#0",
        "bounded_offset%1#0"
      ]
    },
    "275": {
      "op": "dig 1",
      "stack_out": [
        "length%4#0",
        "bounded_offset%1#0",
        "length%4#0 (copy)"
      ]
    },
    "277": {
      "op": "uncover 1",
      "stack_out": [
        "length%4#0",
        "length%4#0 (copy)",
        "bounded_offset%1#0"
      ]
    },
    "279": {
      "op": "-",
      "defined_out": [
        "bounded_index%5#0",
        "length%4#0"
      ],
      "stack_out": [
        "length%4#0",
        "bounded_index%5#0"
      ]
    },
    "280": {
      "op": "bytec_2 // 0x616263",
      "stack_out": [
        "length%4#0",
        "bounded_index%5#0",
        "0x616263"
      ]
    },
    "281": {
      "op": "uncover 1",
      "stack_out": [
        "length%4#0",
        "0x616263",
        "bounded_index%5#0"
      ]
    },
    "283": {
      "op": "uncover 2",
      "stack_out": [
        "0x616263",
        "bounded_index%5#0",
        "length%4#0"
      ]
    },
    "285": {
      "op": "substring3",
      "defined_out": [
        "tmp%20#0"
      ],
      "stack_out": [
        "tmp%20#0"
      ]
    },
    "286": {
      "op": "bytec 8 // 0x6263",
      "stack_out": [
        "tmp%20#0",
        "0x6263"
      ]
    },
    "288": {
      "op": "==",
      "defined_out": [
        "tmp%21#0"
      ],
      "stack_out": [
        "tmp%21#0"
      ]
    },
    "289": {
      "op": "assert",
      "stack_out": []
    },
    "290": {
      "op": "bytec_2 // 0x616263",
      "stack_out": [
        "0x616263"
      ]
    },
    "291": {
      "op": "len",
      "defined_out": [
        "length%5#0"
      ],
      "stack_out": [
        "length%5#0"
      ]
    },
    "292": {
      "op": "intc_3 // 2",
      "stack_out": [
        "length%5#0",
        "2"
      ]
    },
    "293": {
      "op": "dig 1",
      "defined_out": [
        "2",
        "length%5#0",
        "length%5#0 (copy)"
      ],
      "stack_out": [
        "length%5#0",
        "2",
        "length%5#0 (copy)"
      ]
    },
    "295": {
      "op": ">=",
      "defined_out": [
        "is_out_of_bounds%6#0",
        "length%5#0"
      ],
      "stack_out": [
        "length%5#0",
        "is_out_of_bounds%6#0"
      ]
    },
    "296": {
      "op": "intc_3 // 2",
      "stack_out": [
        "length%5#0",
        "is_out_of_bounds%6#0",
        "2"
      ]
    },
    "297": {
      "op": "dig 2",
      "stack_out": [
        "length%5#0",
        "is_out_of_bounds%6#0",
        "2",
        "length%5#0 (copy)"
      ]
    },
    "299": {
      "op": "uncover 2",
      "stack_out": [
        "length%5#0",
        "2",
        "length%5#0 (copy)",
        "is_out_of_bounds%6#0"
      ]
    },
    "301": {
      "op": "select",
      "defined_out": [
        "bounded_offset%2#0",
        "length%5#0"
      ],
      "stack_out": [
        "length%5#0",
        "bounded_offset%2#0"
      ]
    },
    "302": {
      "op": "dig 1",
      "stack_out": [
        "length%5#0",
        "bounded_offset%2#0",
        "length%5#0 (copy)"
      ]
    },
    "304": {
      "op": "uncover 1",
      "stack_out": [
        "length%5#0",
        "length%5#0 (copy)",
        "bounded_offset%2#0"
      ]
    },
    "306": {
      "op": "-",
      "defined_out": [
        "bounded_index%6#0",
        "length%5#0"
      ],
      "stack_out": [
        "length%5#0",
        "bounded_index%6#0"
      ]
    },
    "307": {
      "op": "cover 1",
      "stack_out": [
        "bounded_index%6#0",
        "length%5#0"
      ]
    },
    "309": {
      "op": "intc_0 // 1",
      "stack_out": [
        "bounded_index%6#0",
        "length%5#0",
        "1"
      ]
    },
    "310": {
      "op": "dig 1",
      "stack_out": [
        "bounded_index%6#0",
        "length%5#0",
        "1",
        "length%5#0 (copy)"
      ]
    },
    "312": {
      "op": ">=",
      "defined_out": [
        "bounded_index%6#0",
        "is_out_of_bounds%7#0",
        "length%5#0"
      ],
      "stack_out": [
        "bounded_index%6#0",
        "length%5#0",
        "is_out_of_bounds%7#0"
      ]
    },
    "313": {
      "op": "intc_0 // 1",
      "stack_out": [
        "bounded_index%6#0",
        "length%5#0",
        "is_out_of_bounds%7#0",
        "1"
      ]
    },
    "314": {
      "op": "dig 2",
      "stack_out": [
        "bounded_index%6#0",
        "length%5#0",
        "is_out_of_bounds%7#0",
        "1",
        "length%5#0 (copy)"
      ]
    },
    "316": {
      "op": "uncover 2",
      "stack_out": [
        "bounded_index%6#0",
        "length%5#0",
        "1",
        "length%5#0 (copy)",
        "is_out_of_bounds%7#0"
      ]
    },
    "318": {
      "op": "select",
      "defined_out": [
        "bounded_index%6#0",
        "bounded_offset%3#0",
        "length%5#0"
      ],
      "stack_out": [
        "bounded_index%6#0",
        "length%5#0",
        "bounded_offset%3#0"
      ]
    },
    "319": {
      "op": "-",
      "defined_out": [
        "bounded_index%6#0",
        "bounded_index%7#0"
      ],
      "stack_out": [
        "bounded_index%6#0",
        "bounded_index%7#0"
      ]
    },
    "320": {
      "op": "bytec_2 // 0x616263",
      "stack_out": [
        "bounded_index%6#0",
        "bounded_index%7#0",
        "0x616263"
      ]
    },
    "321": {
      "op": "uncover 2",
      "stack_out": [
        "bounded_index%7#0",
        "0x616263",
        "bounded_index%6#0"
      ]
    },
    "323": {
      "op": "uncover 2",
      "stack_out": [
        "0x616263",
        "bounded_index%6#0",
        "bounded_index%7#0"
      ]
    },
    "325": {
      "op": "substring3",
      "defined_out": [
        "tmp%22#0"
      ],
      "stack_out": [
        "tmp%22#0"
      ]
    },
    "326": {
      "op": "pushbytes 0x62",
      "stack_out": [
        "tmp%22#0",
        "0x62"
      ]
    },
    "329": {
      "op": "==",
      "defined_out": [
        "tmp%23#0"
      ],
      "stack_out": [
        "tmp%23#0"
      ]
    },
    "330": {
      "op": "assert",
      "stack_out": []
    },
    "331": {
      "op": "bytec 9 // 0x31323334353637",
      "defined_out": [
        "0x31323334353637"
      ],
      "stack_out": [
        "0x31323334353637"
      ]
    },
    "333": {
      "op": "len",
      "defined_out": [
        "length%6#0"
      ],
      "stack_out": [
        "length%6#0"
      ]
    },
    "334": {
      "op": "intc_0 // 1",
      "stack_out": [
        "length%6#0",
        "1"
      ]
    },
    "335": {
      "op": "dig 1",
      "defined_out": [
        "1",
        "length%6#0",
        "length%6#0 (copy)"
      ],
      "stack_out": [
        "length%6#0",
        "1",
        "length%6#0 (copy)"
      ]
    },
    "337": {
      "op": ">=",
      "defined_out": [
        "is_out_of_bounds%8#0",
        "length%6#0"
      ],
      "stack_out": [
        "length%6#0",
        "is_out_of_bounds%8#0"
      ]
    },
    "338": {
      "op": "intc_0 // 1",
      "stack_out": [
        "length%6#0",
        "is_out_of_bounds%8#0",
        "1"
      ]
    },
    "339": {
      "op": "dig 2",
      "stack_out": [
        "length%6#0",
        "is_out_of_bounds%8#0",
        "1",
        "length%6#0 (copy)"
      ]
    },
    "341": {
      "op": "uncover 2",
      "stack_out": [
        "length%6#0",
        "1",
        "length%6#0 (copy)",
        "is_out_of_bounds%8#0"
      ]
    },
    "343": {
      "op": "select",
      "defined_out": [
        "bounded_index%8#0",
        "length%6#0"
      ],
      "stack_out": [
        "length%6#0",
        "bounded_index%8#0"
      ]
    },
    "344": {
      "op": "cover 1",
      "stack_out": [
        "bounded_index%8#0",
        "length%6#0"
      ]
    },
    "346": {
      "op": "intc_0 // 1",
      "stack_out": [
        "bounded_index%8#0",
        "length%6#0",
        "1"
      ]
    },
    "347": {
      "op": "dig 1",
      "stack_out": [
        "bounded_index%8#0",
        "length%6#0",
        "1",
        "length%6#0 (copy)"
      ]
    },
    "349": {
      "op": ">=",
      "defined_out": [
        "bounded_index%8#0",
        "is_out_of_bounds%9#0",
        "length%6#0"
      ],
      "stack_out": [
        "bounded_index%8#0",
        "length%6#0",
        "is_out_of_bounds%9#0"
      ]
    },
    "350": {
      "op": "intc_0 // 1",
      "stack_out": [
        "bounded_index%8#0",
        "length%6#0",
        "is_out_of_bounds%9#0",
        "1"
      ]
    },
    "351": {
      "op": "dig 2",
      "stack_out": [
        "bounded_index%8#0",
        "length%6#0",
        "is_out_of_bounds%9#0",
        "1",
        "length%6#0 (copy)"
      ]
    },
    "353": {
      "op": "uncover 2",
      "stack_out": [
        "bounded_index%8#0",
        "length%6#0",
        "1",
        "length%6#0 (copy)",
        "is_out_of_bounds%9#0"
      ]
    },
    "355": {
      "op": "select",
      "defined_out": [
        "bounded_index%8#0",
        "bounded_offset%4#0",
        "length%6#0"
      ],
      "stack_out": [
        "bounded_index%8#0",
        "length%6#0",
        "bounded_offset%4#0"
      ]
    },
    "356": {
      "op": "-",
      "defined_out": [
        "bounded_index%8#0",
        "bounded_index%9#0"
      ],
      "stack_out": [
        "bounded_index%8#0",
        "bounded_index%9#0"
      ]
    },
    "357": {
      "op": "dup",
      "defined_out": [
        "bounded_index%8#0",
        "bounded_index%9#0",
        "bounded_index%9#0 (copy)"
      ],
      "stack_out": [
        "bounded_index%8#0",
        "bounded_index%9#0",
        "bounded_index%9#0 (copy)"
      ]
    },
    "358": {
      "op": "dig 2",
      "defined_out": [
        "bounded_index%8#0",
        "bounded_index%8#0 (copy)",
        "bounded_index%9#0",
        "bounded_index%9#0 (copy)"
      ],
      "stack_out": [
        "bounded_index%8#0",
        "bounded_index%9#0",
        "bounded_index%9#0 (copy)",
        "bounded_index%8#0 (copy)"
      ]
    },
    "360": {
      "op": "<",
      "defined_out": [
        "bounded_index%8#0",
        "bounded_index%9#0",
        "end_before_start%0#0"
      ],
      "stack_out": [
        "bounded_index%8#0",
        "bounded_index%9#0",
        "end_before_start%0#0"
      ]
    },
    "361": {
      "op": "uncover 1",
      "stack_out": [
        "bounded_index%8#0",
        "end_before_start%0#0",
        "bounded_index%9#0"
      ]
    },
    "363": {
      "op": "dig 2",
      "stack_out": [
        "bounded_index%8#0",
        "end_before_start%0#0",
        "bounded_index%9#0",
        "bounded_index%8#0 (copy)"
      ]
    },
    "365": {
      "op": "uncover 2",
      "stack_out": [
        "bounded_index%8#0",
        "bounded_index%9#0",
        "bounded_index%8#0 (copy)",
        "end_before_start%0#0"
      ]
    },
    "367": {
      "op": "select",
      "defined_out": [
        "bounded_index%8#0",
        "end%0#0"
      ],
      "stack_out": [
        "bounded_index%8#0",
        "end%0#0"
      ]
    },
    "368": {
      "op": "bytec 9 // 0x31323334353637",
      "stack_out": [
        "bounded_index%8#0",
        "end%0#0",
        "0x31323334353637"
      ]
    },
    "370": {
      "op": "uncover 2",
      "stack_out": [
        "end%0#0",
        "0x31323334353637",
        "bounded_index%8#0"
      ]
    },
    "372": {
      "op": "uncover 2",
      "stack_out": [
        "0x31323334353637",
        "bounded_index%8#0",
        "end%0#0"
      ]
    },
    "374": {
      "op": "substring3",
      "defined_out": [
        "tmp%24#0"
      ],
      "stack_out": [
        "tmp%24#0"
      ]
    },
    "375": {
      "op": "bytec 14 // 0x3233343536",
      "defined_out": [
        "0x3233343536",
        "tmp%24#0"
      ],
      "stack_out": [
        "tmp%24#0",
        "0x3233343536"
      ]
    },
    "377": {
      "op": "==",
      "defined_out": [
        "tmp%25#0"
      ],
      "stack_out": [
        "tmp%25#0"
      ]
    },
    "378": {
      "op": "assert",
      "stack_out": []
    },
    "379": {
      "op": "bytec_2 // 0x616263",
      "stack_out": [
        "0x616263"
      ]
    },
    "380": {
      "op": "len",
      "defined_out": [
        "length%7#0"
      ],
      "stack_out": [
        "length%7#0"
      ]
    },
    "381": {
      "op": "intc_2 // 10",
      "defined_out": [
        "10",
        "length%7#0"
      ],
      "stack_out": [
        "length%7#0",
        "10"
      ]
    },
    "382": {
      "op": "dig 1",
      "defined_out": [
        "10",
        "length%7#0",
        "length%7#0 (copy)"
      ],
      "stack_out": [
        "length%7#0",
        "10",
        "length%7#0 (copy)"
      ]
    },
    "384": {
      "op": ">=",
      "defined_out": [
        "is_out_of_bounds%10#0",
        "length%7#0"
      ],
      "stack_out": [
        "length%7#0",
        "is_out_of_bounds%10#0"
      ]
    },
    "385": {
      "op": "intc_2 // 10",
      "stack_out": [
        "length%7#0",
        "is_out_of_bounds%10#0",
        "10"
      ]
    },
    "386": {
      "op": "dig 2",
      "stack_out": [
        "length%7#0",
        "is_out_of_bounds%10#0",
        "10",
        "length%7#0 (copy)"
      ]
    },
    "388": {
      "op": "uncover 2",
      "stack_out": [
        "length%7#0",
        "10",
        "length%7#0 (copy)",
        "is_out_of_bounds%10#0"
      ]
    },
    "390": {
      "op": "select",
      "defined_out": [
        "bounded_offset%5#0",
        "length%7#0"
      ],
      "stack_out": [
        "length%7#0",
        "bounded_offset%5#0"
      ]
    },
    "391": {
      "op": "dig 1",
      "stack_out": [
        "length%7#0",
        "bounded_offset%5#0",
        "length%7#0 (copy)"
      ]
    },
    "393": {
      "op": "uncover 1",
      "stack_out": [
        "length%7#0",
        "length%7#0 (copy)",
        "bounded_offset%5#0"
      ]
    },
    "395": {
      "op": "-",
      "defined_out": [
        "bounded_index%10#0",
        "length%7#0"
      ],
      "stack_out": [
        "length%7#0",
        "bounded_index%10#0"
      ]
    },
    "396": {
      "op": "cover 1",
      "stack_out": [
        "bounded_index%10#0",
        "length%7#0"
      ]
    },
    "398": {
      "op": "intc_2 // 10",
      "stack_out": [
        "bounded_index%10#0",
        "length%7#0",
        "10"
      ]
    },
    "399": {
      "op": "dig 1",
      "stack_out": [
        "bounded_index%10#0",
        "length%7#0",
        "10",
        "length%7#0 (copy)"
      ]
    },
    "401": {
      "op": ">=",
      "defined_out": [
        "bounded_index%10#0",
        "is_out_of_bounds%11#0",
        "length%7#0"
      ],
      "stack_out": [
        "bounded_index%10#0",
        "length%7#0",
        "is_out_of_bounds%11#0"
      ]
    },
    "402": {
      "op": "intc_2 // 10",
      "stack_out": [
        "bounded_index%10#0",
        "length%7#0",
        "is_out_of_bounds%11#0",
        "10"
      ]
    },
    "403": {
      "op": "uncover 2",
      "stack_out": [
        "bounded_index%10#0",
        "is_out_of_bounds%11#0",
        "10",
        "length%7#0"
      ]
    },
    "405": {
      "op": "uncover 2",
      "stack_out": [
        "bounded_index%10#0",
        "10",
        "length%7#0",
        "is_out_of_bounds%11#0"
      ]
    },
    "407": {
      "op": "select",
      "defined_out": [
        "bounded_index%10#0",
        "bounded_index%11#0"
      ],
      "stack_out": [
        "bounded_index%10#0",
        "bounded_index%11#0"
      ]
    },
    "408": {
      "op": "dup",
      "defined_out": [
        "bounded_index%10#0",
        "bounded_index%11#0",
        "bounded_index%11#0 (copy)"
      ],
      "stack_out": [
        "bounded_index%10#0",
        "bounded_index%11#0",
        "bounded_index%11#0 (copy)"
      ]
    },
    "409": {
      "op": "dig 2",
      "defined_out": [
        "bounded_index%10#0",
        "bounded_index%10#0 (copy)",
        "bounded_index%11#0",
        "bounded_index%11#0 (copy)"
      ],
      "stack_out": [
        "bounded_index%10#0",
        "bounded_index%11#0",
        "bounded_index%11#0 (copy)",
        "bounded_index%10#0 (copy)"
      ]
    },
    "411": {
      "op": "<",
      "defined_out": [
        "bounded_index%10#0",
        "bounded_index%11#0",
        "end_before_start%1#0"
      ],
      "stack_out": [
        "bounded_index%10#0",
        "bounded_index%11#0",
        "end_before_start%1#0"
      ]
    },
    "412": {
      "op": "uncover 1",
      "stack_out": [
        "bounded_index%10#0",
        "end_before_start%1#0",
        "bounded_index%11#0"
      ]
    },
    "414": {
      "op": "dig 2",
      "stack_out": [
        "bounded_index%10#0",
        "end_before_start%1#0",
        "bounded_index%11#0",
        "bounded_index%10#0 (copy)"
      ]
    },
    "416": {
      "op": "uncover 2",
      "stack_out": [
        "bounded_index%10#0",
        "bounded_index%11#0",
        "bounded_index%10#0 (copy)",
        "end_before_start%1#0"
      ]
    },
    "418": {
      "op": "select",
      "defined_out": [
        "bounded_index%10#0",
        "end%1#0"
      ],
      "stack_out": [
        "bounded_index%10#0",
        "end%1#0"
      ]
    },
    "419": {
      "op": "bytec_2 // 0x616263",
      "stack_out": [
        "bounded_index%10#0",
        "end%1#0",
        "0x616263"
      ]
    },
    "420": {
      "op": "uncover 2",
      "stack_out": [
        "end%1#0",
        "0x616263",
        "bounded_index%10#0"
      ]
    },
    "422": {
      "op": "uncover 2",
      "stack_out": [
        "0x616263",
        "bounded_index%10#0",
        "end%1#0"
      ]
    },
    "424": {
      "op": "substring3",
      "defined_out": [
        "tmp%26#0"
      ],
      "stack_out": [
        "tmp%26#0"
      ]
    },
    "425": {
      "op": "bytec_2 // 0x616263",
      "stack_out": [
        "tmp%26#0",
        "0x616263"
      ]
    },
    "426": {
      "op": "==",
      "defined_out": [
        "tmp%27#0"
      ],
      "stack_out": [
        "tmp%27#0"
      ]
    },
    "427": {
      "op": "assert",
      "stack_out": []
    },
    "428": {
      "op": "bytec_1 // 0x31",
      "defined_out": [
        "0x31"
      ],
      "stack_out": [
        "0x31"
      ]
    },
    "429": {
      "op": "len",
      "defined_out": [
        "tmp%28#0"
      ],
      "stack_out": [
        "tmp%28#0"
      ]
    },
    "430": {
      "op": "intc_1 // 0",
      "stack_out": [
        "tmp%28#0",
        "0"
      ]
    },
    "431": {
      "op": "==",
      "defined_out": [
        "tmp%29#0"
      ],
      "stack_out": [
        "tmp%29#0"
      ]
    },
    "432": {
      "op": "bytec_1 // 0x31",
      "stack_out": [
        "tmp%29#0",
        "0x31"
      ]
    },
    "433": {
      "op": "bytec_1 // 0x31",
      "stack_out": [
        "tmp%29#0",
        "0x31",
        "0x31"
      ]
    },
    "434": {
      "op": "uncover 2",
      "stack_out": [
        "0x31",
        "0x31",
        "tmp%29#0"
      ]
    },
    "436": {
      "op": "select",
      "defined_out": [
        "select%0#0"
      ],
      "stack_out": [
        "select%0#0"
      ]
    },
    "437": {
      "op": "bytec_1 // 0x31",
      "stack_out": [
        "select%0#0",
        "0x31"
      ]
    },
    "438": {
      "op": "==",
      "defined_out": [
        "x#0"
      ],
      "stack_out": [
        "x#0"
      ]
    },
    "439": {
      "op": "assert",
      "stack_out": []
    },
    "440": {
      "op": "bytec_1 // 0x31",
      "stack_out": [
        "0x31"
      ]
    },
    "441": {
      "op": "len",
      "defined_out": [
        "tmp%31#0"
      ],
      "stack_out": [
        "tmp%31#0"
      ]
    },
    "442": {
      "op": "intc_1 // 0",
      "stack_out": [
        "tmp%31#0",
        "0"
      ]
    },
    "443": {
      "op": "==",
      "defined_out": [
        "tmp%32#0"
      ],
      "stack_out": [
        "tmp%32#0"
      ]
    },
    "444": {
      "op": "bytec_1 // 0x31",
      "stack_out": [
        "tmp%32#0",
        "0x31"
      ]
    },
    "445": {
      "op": "bytec_1 // 0x31",
      "stack_out": [
        "tmp%32#0",
        "0x31",
        "0x31"
      ]
    },
    "446": {
      "op": "uncover 2",
      "stack_out": [
        "0x31",
        "0x31",
        "tmp%32#0"
      ]
    },
    "448": {
      "op": "select",
      "defined_out": [
        "select%1#0"
      ],
      "stack_out": [
        "select%1#0"
      ]
    },
    "449": {
      "op": "bytec_1 // 0x31",
      "stack_out": [
        "select%1#0",
        "0x31"
      ]
    },
    "450": {
      "op": "==",
      "defined_out": [
        "tmp%33#0"
      ],
      "stack_out": [
        "tmp%33#0"
      ]
    },
    "451": {
      "op": "assert",
      "stack_out": []
    },
    "452": {
      "op": "bytec_1 // 0x31",
      "stack_out": [
        "0x31"
      ]
    },
    "453": {
      "op": "len",
      "defined_out": [
        "tmp%34#0"
      ],
      "stack_out": [
        "tmp%34#0"
      ]
    },
    "454": {
      "op": "intc_1 // 0",
      "stack_out": [
        "tmp%34#0",
        "0"
      ]
    },
    "455": {
      "op": "==",
      "defined_out": [
        "tmp%35#0"
      ],
      "stack_out": [
        "tmp%35#0"
      ]
    },
    "456": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "tmp%35#0",
        "0x"
      ]
    },
    "457": {
      "op": "bytec_1 // 0x31",
      "stack_out": [
        "tmp%35#0",
        "0x",
        "0x31"
      ]
    },
    "458": {
      "op": "uncover 2",
      "stack_out": [
        "0x",
        "0x31",
        "tmp%35#0"
      ]
    },
    "460": {
      "op": "select",
      "defined_out": [
        "select%2#0"
      ],
      "stack_out": [
        "select%2#0"
      ]
    },
    "461": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "select%2#0",
        "0x"
      ]
    },
    "462": {
      "op": "==",
      "defined_out": [
        "tmp%36#0"
      ],
      "stack_out": [
        "tmp%36#0"
      ]
    },
    "463": {
      "op": "assert",
      "stack_out": []
    },
    "464": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "0x"
      ]
    },
    "465": {
      "op": "len",
      "defined_out": [
        "tmp%37#0"
      ],
      "stack_out": [
        "tmp%37#0"
      ]
    },
    "466": {
      "op": "intc_1 // 0",
      "stack_out": [
        "tmp%37#0",
        "0"
      ]
    },
    "467": {
      "op": "==",
      "defined_out": [
        "tmp%38#0"
      ],
      "stack_out": [
        "tmp%38#0"
      ]
    },
    "468": {
      "op": "bytec_1 // 0x31",
      "stack_out": [
        "tmp%38#0",
        "0x31"
      ]
    },
    "469": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "tmp%38#0",
        "0x31",
        "0x"
      ]
    },
    "470": {
      "op": "uncover 2",
      "stack_out": [
        "0x31",
        "0x",
        "tmp%38#0"
      ]
    },
    "472": {
      "op": "select",
      "defined_out": [
        "select%3#0"
      ],
      "stack_out": [
        "select%3#0"
      ]
    },
    "473": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "select%3#0",
        "0x"
      ]
    },
    "474": {
      "op": "==",
      "defined_out": [
        "tmp%39#0"
      ],
      "stack_out": [
        "tmp%39#0"
      ]
    },
    "475": {
      "op": "assert",
      "stack_out": []
    },
    "476": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "0x"
      ]
    },
    "477": {
      "op": "len",
      "defined_out": [
        "tmp%40#0"
      ],
      "stack_out": [
        "tmp%40#0"
      ]
    },
    "478": {
      "op": "intc_1 // 0",
      "stack_out": [
        "tmp%40#0",
        "0"
      ]
    },
    "479": {
      "op": "==",
      "defined_out": [
        "tmp%41#0"
      ],
      "stack_out": [
        "tmp%41#0"
      ]
    },
    "480": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "tmp%41#0",
        "0x"
      ]
    },
    "481": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "tmp%41#0",
        "0x",
        "0x"
      ]
    },
    "482": {
      "op": "uncover 2",
      "stack_out": [
        "0x",
        "0x",
        "tmp%41#0"
      ]
    },
    "484": {
      "op": "select",
      "defined_out": [
        "select%4#0"
      ],
      "stack_out": [
        "select%4#0"
      ]
    },
    "485": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "select%4#0",
        "0x"
      ]
    },
    "486": {
      "op": "==",
      "defined_out": [
        "tmp%42#0"
      ],
      "stack_out": [
        "tmp%42#0"
      ]
    },
    "487": {
      "op": "assert",
      "stack_out": []
    },
    "488": {
      "op": "bytec_1 // 0x31",
      "stack_out": [
        "0x31"
      ]
    },
    "489": {
      "op": "len",
      "defined_out": [
        "tmp%43#0"
      ],
      "stack_out": [
        "tmp%43#0"
      ]
    },
    "490": {
      "op": "intc_1 // 0",
      "stack_out": [
        "tmp%43#0",
        "0"
      ]
    },
    "491": {
      "op": "!=",
      "defined_out": [
        "tmp%44#0"
      ],
      "stack_out": [
        "tmp%44#0"
      ]
    },
    "492": {
      "op": "bytec_1 // 0x31",
      "stack_out": [
        "tmp%44#0",
        "0x31"
      ]
    },
    "493": {
      "op": "bytec_1 // 0x31",
      "stack_out": [
        "tmp%44#0",
        "0x31",
        "0x31"
      ]
    },
    "494": {
      "op": "uncover 2",
      "stack_out": [
        "0x31",
        "0x31",
        "tmp%44#0"
      ]
    },
    "496": {
      "op": "select",
      "defined_out": [
        "select%5#0"
      ],
      "stack_out": [
        "select%5#0"
      ]
    },
    "497": {
      "op": "bytec_1 // 0x31",
      "stack_out": [
        "select%5#0",
        "0x31"
      ]
    },
    "498": {
      "op": "==",
      "defined_out": [
        "tmp%45#0"
      ],
      "stack_out": [
        "tmp%45#0"
      ]
    },
    "499": {
      "op": "assert",
      "stack_out": []
    },
    "500": {
      "op": "bytec_1 // 0x31",
      "stack_out": [
        "0x31"
      ]
    },
    "501": {
      "op": "len",
      "defined_out": [
        "tmp%46#0"
      ],
      "stack_out": [
        "tmp%46#0"
      ]
    },
    "502": {
      "op": "intc_1 // 0",
      "stack_out": [
        "tmp%46#0",
        "0"
      ]
    },
    "503": {
      "op": "!=",
      "defined_out": [
        "tmp%47#0"
      ],
      "stack_out": [
        "tmp%47#0"
      ]
    },
    "504": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "tmp%47#0",
        "0x"
      ]
    },
    "505": {
      "op": "bytec_1 // 0x31",
      "stack_out": [
        "tmp%47#0",
        "0x",
        "0x31"
      ]
    },
    "506": {
      "op": "uncover 2",
      "stack_out": [
        "0x",
        "0x31",
        "tmp%47#0"
      ]
    },
    "508": {
      "op": "select",
      "defined_out": [
        "select%6#0"
      ],
      "stack_out": [
        "select%6#0"
      ]
    },
    "509": {
      "op": "bytec_1 // 0x31",
      "stack_out": [
        "select%6#0",
        "0x31"
      ]
    },
    "510": {
      "op": "==",
      "defined_out": [
        "tmp%48#0"
      ],
      "stack_out": [
        "tmp%48#0"
      ]
    },
    "511": {
      "op": "assert",
      "stack_out": []
    },
    "512": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "0x"
      ]
    },
    "513": {
      "op": "len",
      "defined_out": [
        "tmp%49#0"
      ],
      "stack_out": [
        "tmp%49#0"
      ]
    },
    "514": {
      "op": "intc_1 // 0",
      "stack_out": [
        "tmp%49#0",
        "0"
      ]
    },
    "515": {
      "op": "!=",
      "defined_out": [
        "tmp%50#0"
      ],
      "stack_out": [
        "tmp%50#0"
      ]
    },
    "516": {
      "op": "bytec_1 // 0x31",
      "stack_out": [
        "tmp%50#0",
        "0x31"
      ]
    },
    "517": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "tmp%50#0",
        "0x31",
        "0x"
      ]
    },
    "518": {
      "op": "uncover 2",
      "stack_out": [
        "0x31",
        "0x",
        "tmp%50#0"
      ]
    },
    "520": {
      "op": "select",
      "defined_out": [
        "select%7#0"
      ],
      "stack_out": [
        "select%7#0"
      ]
    },
    "521": {
      "op": "bytec_1 // 0x31",
      "stack_out": [
        "select%7#0",
        "0x31"
      ]
    },
    "522": {
      "op": "==",
      "defined_out": [
        "tmp%51#0"
      ],
      "stack_out": [
        "tmp%51#0"
      ]
    },
    "523": {
      "op": "assert",
      "stack_out": []
    },
    "524": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "0x"
      ]
    },
    "525": {
      "op": "len",
      "defined_out": [
        "tmp%52#0"
      ],
      "stack_out": [
        "tmp%52#0"
      ]
    },
    "526": {
      "op": "intc_1 // 0",
      "stack_out": [
        "tmp%52#0",
        "0"
      ]
    },
    "527": {
      "op": "!=",
      "defined_out": [
        "tmp%53#0"
      ],
      "stack_out": [
        "tmp%53#0"
      ]
    },
    "528": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "tmp%53#0",
        "0x"
      ]
    },
    "529": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "tmp%53#0",
        "0x",
        "0x"
      ]
    },
    "530": {
      "op": "uncover 2",
      "stack_out": [
        "0x",
        "0x",
        "tmp%53#0"
      ]
    },
    "532": {
      "op": "select",
      "defined_out": [
        "select%8#0"
      ],
      "stack_out": [
        "select%8#0"
      ]
    },
    "533": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "select%8#0",
        "0x"
      ]
    },
    "534": {
      "op": "==",
      "defined_out": [
        "tmp%54#0"
      ],
      "stack_out": [
        "tmp%54#0"
      ]
    },
    "535": {
      "op": "assert",
      "stack_out": []
    },
    "536": {
      "op": "bytec 5 // 0x00",
      "defined_out": [
        "0x00"
      ],
      "stack_out": [
        "0x00"
      ]
    },
    "538": {
      "op": "bytec 6 // 0x0f",
      "defined_out": [
        "0x00",
        "0x0f"
      ],
      "stack_out": [
        "0x00",
        "0x0f"
      ]
    },
    "540": {
      "op": "b&",
      "defined_out": [
        "tmp%55#0"
      ],
      "stack_out": [
        "tmp%55#0"
      ]
    },
    "541": {
      "op": "bytec 5 // 0x00",
      "stack_out": [
        "tmp%55#0",
        "0x00"
      ]
    },
    "543": {
      "op": "==",
      "defined_out": [
        "tmp%56#0"
      ],
      "stack_out": [
        "tmp%56#0"
      ]
    },
    "544": {
      "op": "assert",
      "stack_out": []
    },
    "545": {
      "op": "bytec 6 // 0x0f",
      "stack_out": [
        "0x0f"
      ]
    },
    "547": {
      "op": "bytec 10 // 0xf0",
      "defined_out": [
        "0x0f",
        "0xf0"
      ],
      "stack_out": [
        "0x0f",
        "0xf0"
      ]
    },
    "549": {
      "op": "b|",
      "defined_out": [
        "tmp%57#0"
      ],
      "stack_out": [
        "tmp%57#0"
      ]
    },
    "550": {
      "op": "bytec_3 // 0xff",
      "defined_out": [
        "0xff",
        "tmp%57#0"
      ],
      "stack_out": [
        "tmp%57#0",
        "0xff"
      ]
    },
    "551": {
      "op": "==",
      "defined_out": [
        "tmp%58#0"
      ],
      "stack_out": [
        "tmp%58#0"
      ]
    },
    "552": {
      "op": "assert",
      "stack_out": []
    },
    "553": {
      "op": "bytec 6 // 0x0f",
      "stack_out": [
        "0x0f"
      ]
    },
    "555": {
      "op": "bytec_3 // 0xff",
      "stack_out": [
        "0x0f",
        "0xff"
      ]
    },
    "556": {
      "op": "b^",
      "defined_out": [
        "tmp%59#0"
      ],
      "stack_out": [
        "tmp%59#0"
      ]
    },
    "557": {
      "op": "bytec 10 // 0xf0",
      "stack_out": [
        "tmp%59#0",
        "0xf0"
      ]
    },
    "559": {
      "op": "==",
      "defined_out": [
        "tmp%60#0"
      ],
      "stack_out": [
        "tmp%60#0"
      ]
    },
    "560": {
      "op": "assert",
      "stack_out": []
    },
    "561": {
      "op": "bytec 5 // 0x00",
      "stack_out": [
        "0x00"
      ]
    },
    "563": {
      "op": "bytec_3 // 0xff",
      "stack_out": [
        "0x00",
        "0xff"
      ]
    },
    "564": {
      "op": "b&",
      "defined_out": [
        "y#1"
      ],
      "stack_out": [
        "y#1"
      ]
    },
    "565": {
      "op": "dup",
      "defined_out": [
        "y#1",
        "y#1 (copy)"
      ],
      "stack_out": [
        "y#1",
        "y#1 (copy)"
      ]
    },
    "566": {
      "op": "bytec 5 // 0x00",
      "stack_out": [
        "y#1",
        "y#1 (copy)",
        "0x00"
      ]
    },
    "568": {
      "op": "==",
      "defined_out": [
        "tmp%62#0",
        "y#1"
      ],
      "stack_out": [
        "y#1",
        "tmp%62#0"
      ]
    },
    "569": {
      "op": "assert",
      "stack_out": [
        "y#1"
      ]
    },
    "570": {
      "op": "bytec_3 // 0xff",
      "stack_out": [
        "y#1",
        "0xff"
      ]
    },
    "571": {
      "op": "b|",
      "defined_out": [
        "y#1"
      ],
      "stack_out": [
        "y#1"
      ]
    },
    "572": {
      "op": "dup",
      "stack_out": [
        "y#1",
        "y#1 (copy)"
      ]
    },
    "573": {
      "op": "bytec_3 // 0xff",
      "stack_out": [
        "y#1",
        "y#1 (copy)",
        "0xff"
      ]
    },
    "574": {
      "op": "==",
      "defined_out": [
        "tmp%64#0",
        "y#1"
      ],
      "stack_out": [
        "y#1",
        "tmp%64#0"
      ]
    },
    "575": {
      "op": "assert",
      "stack_out": [
        "y#1"
      ]
    },
    "576": {
      "op": "bytec 10 // 0xf0",
      "stack_out": [
        "y#1",
        "0xf0"
      ]
    },
    "578": {
      "op": "b^",
      "defined_out": [
        "y#1"
      ],
      "stack_out": [
        "y#1"
      ]
    },
    "579": {
      "op": "bytec 6 // 0x0f",
      "stack_out": [
        "y#1",
        "0x0f"
      ]
    },
    "581": {
      "op": "==",
      "defined_out": [
        "tmp%66#0"
      ],
      "stack_out": [
        "tmp%66#0"
      ]
    },
    "582": {
      "op": "assert",
      "stack_out": []
    },
    "583": {
      "op": "bytec_2 // 0x616263",
      "stack_out": [
        "0x616263"
      ]
    },
    "584": {
      "callsub": "test_cases.stubs.bytes.check_slicing_with_uint64",
      "op": "callsub check_slicing_with_uint64",
      "stack_out": []
    },
    "587": {
      "op": "bytec_2 // 0x616263",
      "stack_out": [
        "0x616263"
      ]
    },
    "588": {
      "callsub": "test_cases.stubs.bytes.check_end_before_start_slicing",
      "op": "callsub check_end_before_start_slicing",
      "stack_out": []
    },
    "591": {
      "op": "txn NumAppArgs",
      "defined_out": [
        "tmp%67#0"
      ],
      "stack_out": [
        "tmp%67#0"
      ]
    },
    "593": {
      "op": "intc_1 // 0",
      "stack_out": [
        "tmp%67#0",
        "0"
      ]
    },
    "594": {
      "op": "!=",
      "defined_out": [
        "tmp%68#0"
      ],
      "stack_out": [
        "tmp%68#0"
      ]
    },
    "595": {
      "op": "bytec 15 // 0x6e6f2061726773",
      "defined_out": [
        "0x6e6f2061726773",
        "tmp%68#0"
      ],
      "stack_out": [
        "tmp%68#0",
        "0x6e6f2061726773"
      ]
    },
    "597": {
      "op": "pushbytes 0x61726773",
      "defined_out": [
        "0x61726773",
        "0x6e6f2061726773",
        "tmp%68#0"
      ],
      "stack_out": [
        "tmp%68#0",
        "0x6e6f2061726773",
        "0x61726773"
      ]
    },
    "603": {
      "op": "uncover 2",
      "stack_out": [
        "0x6e6f2061726773",
        "0x61726773",
        "tmp%68#0"
      ]
    },
    "605": {
      "op": "select",
      "defined_out": [
        "select%9#0"
      ],
      "stack_out": [
        "select%9#0"
      ]
    },
    "606": {
      "op": "bytec 15 // 0x6e6f2061726773",
      "stack_out": [
        "select%9#0",
        "0x6e6f2061726773"
      ]
    },
    "608": {
      "op": "==",
      "defined_out": [
        "tmp%69#0"
      ],
      "stack_out": [
        "tmp%69#0"
      ]
    },
    "609": {
      "error": "constructor expressions supported",
      "op": "assert // constructor expressions supported",
      "stack_out": []
    },
    "610": {
      "op": "intc_0 // 1",
      "stack_out": [
        "1"
      ]
    },
    "611": {
      "op": "return",
      "stack_out": []
    },
    "612": {
      "subroutine": "test_cases.stubs.bytes.check_slicing_with_uint64",
      "params": {
        "abc#0": "bytes"
      },
      "block": "check_slicing_with_uint64",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "615": {
      "op": "b check_slicing_with_uint64_block@0"
    },
    "618": {
      "block": "check_slicing_with_uint64_block@0",
      "stack_in": [],
      "op": "frame_dig -1",
      "defined_out": [
        "abc#0 (copy)"
      ],
      "stack_out": [
        "abc#0 (copy)"
      ]
    },
    "620": {
      "op": "len",
      "defined_out": [
        "length%0#0"
      ],
      "stack_out": [
        "length%0#0"
      ]
    },
    "621": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "length%0#0"
      ],
      "stack_out": [
        "length%0#0",
        "1"
      ]
    },
    "622": {
      "op": "dig 1",
      "defined_out": [
        "1",
        "length%0#0",
        "length%0#0 (copy)"
      ],
      "stack_out": [
        "length%0#0",
        "1",
        "length%0#0 (copy)"
      ]
    },
    "624": {
      "op": ">=",
      "defined_out": [
        "is_out_of_bounds%0#0",
        "length%0#0"
      ],
      "stack_out": [
        "length%0#0",
        "is_out_of_bounds%0#0"
      ]
    },
    "625": {
      "op": "intc_0 // 1",
      "stack_out": [
        "length%0#0",
        "is_out_of_bounds%0#0",
        "1"
      ]
    },
    "626": {
      "op": "dig 2",
      "stack_out": [
        "length%0#0",
        "is_out_of_bounds%0#0",
        "1",
        "length%0#0 (copy)"
      ]
    },
    "628": {
      "op": "uncover 2",
      "stack_out": [
        "length%0#0",
        "1",
        "length%0#0 (copy)",
        "is_out_of_bounds%0#0"
      ]
    },
    "630": {
      "op": "select",
      "defined_out": [
        "bounded_index%0#0",
        "length%0#0"
      ],
      "stack_out": [
        "length%0#0",
        "bounded_index%0#0"
      ]
    },
    "631": {
      "op": "frame_dig -1",
      "stack_out": [
        "length%0#0",
        "bounded_index%0#0",
        "abc#0 (copy)"
      ]
    },
    "633": {
      "op": "uncover 1",
      "stack_out": [
        "length%0#0",
        "abc#0 (copy)",
        "bounded_index%0#0"
      ]
    },
    "635": {
      "op": "uncover 2",
      "stack_out": [
        "abc#0 (copy)",
        "bounded_index%0#0",
        "length%0#0"
      ]
    },
    "637": {
      "op": "substring3",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "638": {
      "op": "bytec 8 // 0x6263",
      "defined_out": [
        "0x6263",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "0x6263"
      ]
    },
    "640": {
      "op": "==",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "641": {
      "op": "assert",
      "stack_out": []
    },
    "642": {
      "op": "frame_dig -1",
      "stack_out": [
        "abc#0 (copy)"
      ]
    },
    "644": {
      "op": "len",
      "defined_out": [
        "length%1#0"
      ],
      "stack_out": [
        "length%1#0"
      ]
    },
    "645": {
      "op": "intc_0 // 1",
      "stack_out": [
        "length%1#0",
        "1"
      ]
    },
    "646": {
      "op": "dig 1",
      "defined_out": [
        "1",
        "length%1#0",
        "length%1#0 (copy)"
      ],
      "stack_out": [
        "length%1#0",
        "1",
        "length%1#0 (copy)"
      ]
    },
    "648": {
      "op": ">=",
      "defined_out": [
        "is_out_of_bounds%1#0",
        "length%1#0"
      ],
      "stack_out": [
        "length%1#0",
        "is_out_of_bounds%1#0"
      ]
    },
    "649": {
      "op": "intc_0 // 1",
      "stack_out": [
        "length%1#0",
        "is_out_of_bounds%1#0",
        "1"
      ]
    },
    "650": {
      "op": "dig 2",
      "stack_out": [
        "length%1#0",
        "is_out_of_bounds%1#0",
        "1",
        "length%1#0 (copy)"
      ]
    },
    "652": {
      "op": "uncover 2",
      "stack_out": [
        "length%1#0",
        "1",
        "length%1#0 (copy)",
        "is_out_of_bounds%1#0"
      ]
    },
    "654": {
      "op": "select",
      "defined_out": [
        "bounded_index%1#0",
        "length%1#0"
      ],
      "stack_out": [
        "length%1#0",
        "bounded_index%1#0"
      ]
    },
    "655": {
      "op": "cover 1",
      "stack_out": [
        "bounded_index%1#0",
        "length%1#0"
      ]
    },
    "657": {
      "op": "intc_0 // 1",
      "stack_out": [
        "bounded_index%1#0",
        "length%1#0",
        "1"
      ]
    },
    "658": {
      "op": "dig 1",
      "stack_out": [
        "bounded_index%1#0",
        "length%1#0",
        "1",
        "length%1#0 (copy)"
      ]
    },
    "660": {
      "op": ">=",
      "defined_out": [
        "bounded_index%1#0",
        "is_out_of_bounds%2#0",
        "length%1#0"
      ],
      "stack_out": [
        "bounded_index%1#0",
        "length%1#0",
        "is_out_of_bounds%2#0"
      ]
    },
    "661": {
      "op": "intc_0 // 1",
      "stack_out": [
        "bounded_index%1#0",
        "length%1#0",
        "is_out_of_bounds%2#0",
        "1"
      ]
    },
    "662": {
      "op": "uncover 2",
      "stack_out": [
        "bounded_index%1#0",
        "is_out_of_bounds%2#0",
        "1",
        "length%1#0"
      ]
    },
    "664": {
      "op": "uncover 2",
      "stack_out": [
        "bounded_index%1#0",
        "1",
        "length%1#0",
        "is_out_of_bounds%2#0"
      ]
    },
    "666": {
      "op": "select",
      "defined_out": [
        "bounded_index%1#0",
        "bounded_index%2#0"
      ],
      "stack_out": [
        "bounded_index%1#0",
        "bounded_index%2#0"
      ]
    },
    "667": {
      "op": "dup",
      "defined_out": [
        "bounded_index%1#0",
        "bounded_index%2#0",
        "bounded_index%2#0 (copy)"
      ],
      "stack_out": [
        "bounded_index%1#0",
        "bounded_index%2#0",
        "bounded_index%2#0 (copy)"
      ]
    },
    "668": {
      "op": "dig 2",
      "defined_out": [
        "bounded_index%1#0",
        "bounded_index%1#0 (copy)",
        "bounded_index%2#0",
        "bounded_index%2#0 (copy)"
      ],
      "stack_out": [
        "bounded_index%1#0",
        "bounded_index%2#0",
        "bounded_index%2#0 (copy)",
        "bounded_index%1#0 (copy)"
      ]
    },
    "670": {
      "op": "<",
      "defined_out": [
        "bounded_index%1#0",
        "bounded_index%2#0",
        "end_before_start%0#0"
      ],
      "stack_out": [
        "bounded_index%1#0",
        "bounded_index%2#0",
        "end_before_start%0#0"
      ]
    },
    "671": {
      "op": "uncover 1",
      "stack_out": [
        "bounded_index%1#0",
        "end_before_start%0#0",
        "bounded_index%2#0"
      ]
    },
    "673": {
      "op": "dig 2",
      "stack_out": [
        "bounded_index%1#0",
        "end_before_start%0#0",
        "bounded_index%2#0",
        "bounded_index%1#0 (copy)"
      ]
    },
    "675": {
      "op": "uncover 2",
      "stack_out": [
        "bounded_index%1#0",
        "bounded_index%2#0",
        "bounded_index%1#0 (copy)",
        "end_before_start%0#0"
      ]
    },
    "677": {
      "op": "select",
      "defined_out": [
        "bounded_index%1#0",
        "end%0#0"
      ],
      "stack_out": [
        "bounded_index%1#0",
        "end%0#0"
      ]
    },
    "678": {
      "op": "frame_dig -1",
      "stack_out": [
        "bounded_index%1#0",
        "end%0#0",
        "abc#0 (copy)"
      ]
    },
    "680": {
      "op": "uncover 2",
      "stack_out": [
        "end%0#0",
        "abc#0 (copy)",
        "bounded_index%1#0"
      ]
    },
    "682": {
      "op": "uncover 2",
      "stack_out": [
        "abc#0 (copy)",
        "bounded_index%1#0",
        "end%0#0"
      ]
    },
    "684": {
      "op": "substring3",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "685": {
      "op": "bytec_0 // 0x",
      "defined_out": [
        "0x",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "0x"
      ]
    },
    "686": {
      "op": "==",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "687": {
      "op": "assert",
      "stack_out": []
    },
    "688": {
      "op": "frame_dig -1",
      "stack_out": [
        "abc#0 (copy)"
      ]
    },
    "690": {
      "op": "len",
      "defined_out": [
        "length%2#0"
      ],
      "stack_out": [
        "length%2#0"
      ]
    },
    "691": {
      "op": "intc_0 // 1",
      "stack_out": [
        "length%2#0",
        "1"
      ]
    },
    "692": {
      "op": "dig 1",
      "defined_out": [
        "1",
        "length%2#0",
        "length%2#0 (copy)"
      ],
      "stack_out": [
        "length%2#0",
        "1",
        "length%2#0 (copy)"
      ]
    },
    "694": {
      "op": ">=",
      "defined_out": [
        "is_out_of_bounds%3#0",
        "length%2#0"
      ],
      "stack_out": [
        "length%2#0",
        "is_out_of_bounds%3#0"
      ]
    },
    "695": {
      "op": "intc_0 // 1",
      "stack_out": [
        "length%2#0",
        "is_out_of_bounds%3#0",
        "1"
      ]
    },
    "696": {
      "op": "uncover 2",
      "stack_out": [
        "is_out_of_bounds%3#0",
        "1",
        "length%2#0"
      ]
    },
    "698": {
      "op": "uncover 2",
      "stack_out": [
        "1",
        "length%2#0",
        "is_out_of_bounds%3#0"
      ]
    },
    "700": {
      "op": "select",
      "defined_out": [
        "bounded_index%3#0"
      ],
      "stack_out": [
        "bounded_index%3#0"
      ]
    },
    "701": {
      "op": "frame_dig -1",
      "stack_out": [
        "bounded_index%3#0",
        "abc#0 (copy)"
      ]
    },
    "703": {
      "op": "intc_1 // 0",
      "defined_out": [
        "0",
        "abc#0 (copy)",
        "bounded_index%3#0"
      ],
      "stack_out": [
        "bounded_index%3#0",
        "abc#0 (copy)",
        "0"
      ]
    },
    "704": {
      "op": "uncover 2",
      "stack_out": [
        "abc#0 (copy)",
        "0",
        "bounded_index%3#0"
      ]
    },
    "706": {
      "op": "substring3",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "707": {
      "op": "bytec 4 // 0x61",
      "defined_out": [
        "0x61",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "0x61"
      ]
    },
    "709": {
      "op": "==",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "710": {
      "op": "assert",
      "stack_out": []
    },
    "711": {
      "callsub": "test_cases.stubs.bytes.one_to_seven",
      "op": "callsub one_to_seven",
      "defined_out": [
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0"
      ]
    },
    "714": {
      "op": "dup",
      "defined_out": [
        "tmp%6#0",
        "tmp%6#0 (copy)"
      ],
      "stack_out": [
        "tmp%6#0",
        "tmp%6#0 (copy)"
      ]
    },
    "715": {
      "op": "len",
      "defined_out": [
        "length%3#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0",
        "length%3#0"
      ]
    },
    "716": {
      "op": "intc_0 // 1",
      "stack_out": [
        "tmp%6#0",
        "length%3#0",
        "1"
      ]
    },
    "717": {
      "op": "dig 1",
      "defined_out": [
        "1",
        "length%3#0",
        "length%3#0 (copy)",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0",
        "length%3#0",
        "1",
        "length%3#0 (copy)"
      ]
    },
    "719": {
      "op": ">=",
      "defined_out": [
        "is_out_of_bounds%4#0",
        "length%3#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0",
        "length%3#0",
        "is_out_of_bounds%4#0"
      ]
    },
    "720": {
      "op": "intc_0 // 1",
      "stack_out": [
        "tmp%6#0",
        "length%3#0",
        "is_out_of_bounds%4#0",
        "1"
      ]
    },
    "721": {
      "op": "dig 2",
      "stack_out": [
        "tmp%6#0",
        "length%3#0",
        "is_out_of_bounds%4#0",
        "1",
        "length%3#0 (copy)"
      ]
    },
    "723": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%6#0",
        "length%3#0",
        "1",
        "length%3#0 (copy)",
        "is_out_of_bounds%4#0"
      ]
    },
    "725": {
      "op": "select",
      "defined_out": [
        "bounded_index%4#0",
        "length%3#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0",
        "length%3#0",
        "bounded_index%4#0"
      ]
    },
    "726": {
      "op": "cover 1",
      "stack_out": [
        "tmp%6#0",
        "bounded_index%4#0",
        "length%3#0"
      ]
    },
    "728": {
      "op": "intc_0 // 1",
      "stack_out": [
        "tmp%6#0",
        "bounded_index%4#0",
        "length%3#0",
        "1"
      ]
    },
    "729": {
      "op": "dig 1",
      "stack_out": [
        "tmp%6#0",
        "bounded_index%4#0",
        "length%3#0",
        "1",
        "length%3#0 (copy)"
      ]
    },
    "731": {
      "op": ">=",
      "defined_out": [
        "bounded_index%4#0",
        "is_out_of_bounds%5#0",
        "length%3#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0",
        "bounded_index%4#0",
        "length%3#0",
        "is_out_of_bounds%5#0"
      ]
    },
    "732": {
      "op": "intc_0 // 1",
      "stack_out": [
        "tmp%6#0",
        "bounded_index%4#0",
        "length%3#0",
        "is_out_of_bounds%5#0",
        "1"
      ]
    },
    "733": {
      "op": "dig 2",
      "stack_out": [
        "tmp%6#0",
        "bounded_index%4#0",
        "length%3#0",
        "is_out_of_bounds%5#0",
        "1",
        "length%3#0 (copy)"
      ]
    },
    "735": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%6#0",
        "bounded_index%4#0",
        "length%3#0",
        "1",
        "length%3#0 (copy)",
        "is_out_of_bounds%5#0"
      ]
    },
    "737": {
      "op": "select",
      "defined_out": [
        "bounded_index%4#0",
        "bounded_offset%0#0",
        "length%3#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0",
        "bounded_index%4#0",
        "length%3#0",
        "bounded_offset%0#0"
      ]
    },
    "738": {
      "op": "-",
      "defined_out": [
        "bounded_index%4#0",
        "bounded_index%5#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0",
        "bounded_index%4#0",
        "bounded_index%5#0"
      ]
    },
    "739": {
      "op": "dup",
      "defined_out": [
        "bounded_index%4#0",
        "bounded_index%5#0",
        "bounded_index%5#0 (copy)",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0",
        "bounded_index%4#0",
        "bounded_index%5#0",
        "bounded_index%5#0 (copy)"
      ]
    },
    "740": {
      "op": "dig 2",
      "defined_out": [
        "bounded_index%4#0",
        "bounded_index%4#0 (copy)",
        "bounded_index%5#0",
        "bounded_index%5#0 (copy)",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0",
        "bounded_index%4#0",
        "bounded_index%5#0",
        "bounded_index%5#0 (copy)",
        "bounded_index%4#0 (copy)"
      ]
    },
    "742": {
      "op": "<",
      "defined_out": [
        "bounded_index%4#0",
        "bounded_index%5#0",
        "end_before_start%1#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0",
        "bounded_index%4#0",
        "bounded_index%5#0",
        "end_before_start%1#0"
      ]
    },
    "743": {
      "op": "uncover 1",
      "stack_out": [
        "tmp%6#0",
        "bounded_index%4#0",
        "end_before_start%1#0",
        "bounded_index%5#0"
      ]
    },
    "745": {
      "op": "dig 2",
      "stack_out": [
        "tmp%6#0",
        "bounded_index%4#0",
        "end_before_start%1#0",
        "bounded_index%5#0",
        "bounded_index%4#0 (copy)"
      ]
    },
    "747": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%6#0",
        "bounded_index%4#0",
        "bounded_index%5#0",
        "bounded_index%4#0 (copy)",
        "end_before_start%1#0"
      ]
    },
    "749": {
      "op": "select",
      "defined_out": [
        "bounded_index%4#0",
        "end%1#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0",
        "bounded_index%4#0",
        "end%1#0"
      ]
    },
    "750": {
      "op": "uncover 2",
      "stack_out": [
        "bounded_index%4#0",
        "end%1#0",
        "tmp%6#0"
      ]
    },
    "752": {
      "op": "uncover 2",
      "stack_out": [
        "end%1#0",
        "tmp%6#0",
        "bounded_index%4#0"
      ]
    },
    "754": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%6#0",
        "bounded_index%4#0",
        "end%1#0"
      ]
    },
    "756": {
      "op": "substring3",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0"
      ]
    },
    "757": {
      "op": "bytec 14 // 0x3233343536",
      "defined_out": [
        "0x3233343536",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0",
        "0x3233343536"
      ]
    },
    "759": {
      "op": "==",
      "defined_out": [
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0"
      ]
    },
    "760": {
      "op": "assert",
      "stack_out": []
    },
    "761": {
      "op": "frame_dig -1",
      "stack_out": [
        "abc#0 (copy)"
      ]
    },
    "763": {
      "op": "len",
      "defined_out": [
        "length%4#0"
      ],
      "stack_out": [
        "length%4#0"
      ]
    },
    "764": {
      "op": "intc_1 // 0",
      "stack_out": [
        "length%4#0",
        "0"
      ]
    },
    "765": {
      "op": "dig 1",
      "defined_out": [
        "0",
        "length%4#0",
        "length%4#0 (copy)"
      ],
      "stack_out": [
        "length%4#0",
        "0",
        "length%4#0 (copy)"
      ]
    },
    "767": {
      "op": ">=",
      "defined_out": [
        "is_out_of_bounds%6#0",
        "length%4#0"
      ],
      "stack_out": [
        "length%4#0",
        "is_out_of_bounds%6#0"
      ]
    },
    "768": {
      "op": "intc_1 // 0",
      "stack_out": [
        "length%4#0",
        "is_out_of_bounds%6#0",
        "0"
      ]
    },
    "769": {
      "op": "dig 2",
      "stack_out": [
        "length%4#0",
        "is_out_of_bounds%6#0",
        "0",
        "length%4#0 (copy)"
      ]
    },
    "771": {
      "op": "uncover 2",
      "stack_out": [
        "length%4#0",
        "0",
        "length%4#0 (copy)",
        "is_out_of_bounds%6#0"
      ]
    },
    "773": {
      "op": "select",
      "defined_out": [
        "bounded_index%6#0",
        "length%4#0"
      ],
      "stack_out": [
        "length%4#0",
        "bounded_index%6#0"
      ]
    },
    "774": {
      "op": "cover 1",
      "stack_out": [
        "bounded_index%6#0",
        "length%4#0"
      ]
    },
    "776": {
      "op": "intc_2 // 10",
      "defined_out": [
        "10",
        "bounded_index%6#0",
        "length%4#0"
      ],
      "stack_out": [
        "bounded_index%6#0",
        "length%4#0",
        "10"
      ]
    },
    "777": {
      "op": "dig 1",
      "stack_out": [
        "bounded_index%6#0",
        "length%4#0",
        "10",
        "length%4#0 (copy)"
      ]
    },
    "779": {
      "op": ">=",
      "defined_out": [
        "bounded_index%6#0",
        "is_out_of_bounds%7#0",
        "length%4#0"
      ],
      "stack_out": [
        "bounded_index%6#0",
        "length%4#0",
        "is_out_of_bounds%7#0"
      ]
    },
    "780": {
      "op": "intc_2 // 10",
      "stack_out": [
        "bounded_index%6#0",
        "length%4#0",
        "is_out_of_bounds%7#0",
        "10"
      ]
    },
    "781": {
      "op": "uncover 2",
      "stack_out": [
        "bounded_index%6#0",
        "is_out_of_bounds%7#0",
        "10",
        "length%4#0"
      ]
    },
    "783": {
      "op": "uncover 2",
      "stack_out": [
        "bounded_index%6#0",
        "10",
        "length%4#0",
        "is_out_of_bounds%7#0"
      ]
    },
    "785": {
      "op": "select",
      "defined_out": [
        "bounded_index%6#0",
        "bounded_index%7#0"
      ],
      "stack_out": [
        "bounded_index%6#0",
        "bounded_index%7#0"
      ]
    },
    "786": {
      "op": "frame_dig -1",
      "stack_out": [
        "bounded_index%6#0",
        "bounded_index%7#0",
        "abc#0 (copy)"
      ]
    },
    "788": {
      "op": "uncover 2",
      "stack_out": [
        "bounded_index%7#0",
        "abc#0 (copy)",
        "bounded_index%6#0"
      ]
    },
    "790": {
      "op": "uncover 2",
      "stack_out": [
        "abc#0 (copy)",
        "bounded_index%6#0",
        "bounded_index%7#0"
      ]
    },
    "792": {
      "op": "substring3",
      "defined_out": [
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0"
      ]
    },
    "793": {
      "op": "bytec_2 // 0x616263",
      "defined_out": [
        "0x616263",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0",
        "0x616263"
      ]
    },
    "794": {
      "op": "==",
      "defined_out": [
        "tmp%10#0"
      ],
      "stack_out": [
        "tmp%10#0"
      ]
    },
    "795": {
      "op": "assert",
      "stack_out": []
    },
    "796": {
      "retsub": true,
      "op": "retsub"
    },
    "797": {
      "subroutine": "test_cases.stubs.bytes.check_end_before_start_slicing",
      "params": {
        "abc#0": "bytes"
      },
      "block": "check_end_before_start_slicing",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "800": {
      "op": "b check_end_before_start_slicing_block@0"
    },
    "803": {
      "block": "check_end_before_start_slicing_block@0",
      "stack_in": [],
      "op": "frame_dig -1",
      "defined_out": [
        "abc#0 (copy)"
      ],
      "stack_out": [
        "abc#0 (copy)"
      ]
    },
    "805": {
      "op": "len",
      "defined_out": [
        "length%0#0"
      ],
      "stack_out": [
        "length%0#0"
      ]
    },
    "806": {
      "op": "intc_2 // 10",
      "defined_out": [
        "10",
        "length%0#0"
      ],
      "stack_out": [
        "length%0#0",
        "10"
      ]
    },
    "807": {
      "op": "dig 1",
      "defined_out": [
        "10",
        "length%0#0",
        "length%0#0 (copy)"
      ],
      "stack_out": [
        "length%0#0",
        "10",
        "length%0#0 (copy)"
      ]
    },
    "809": {
      "op": ">=",
      "defined_out": [
        "is_out_of_bounds%0#0",
        "length%0#0"
      ],
      "stack_out": [
        "length%0#0",
        "is_out_of_bounds%0#0"
      ]
    },
    "810": {
      "op": "intc_2 // 10",
      "stack_out": [
        "length%0#0",
        "is_out_of_bounds%0#0",
        "10"
      ]
    },
    "811": {
      "op": "dig 2",
      "stack_out": [
        "length%0#0",
        "is_out_of_bounds%0#0",
        "10",
        "length%0#0 (copy)"
      ]
    },
    "813": {
      "op": "uncover 2",
      "stack_out": [
        "length%0#0",
        "10",
        "length%0#0 (copy)",
        "is_out_of_bounds%0#0"
      ]
    },
    "815": {
      "op": "select",
      "defined_out": [
        "bounded_index%0#0",
        "length%0#0"
      ],
      "stack_out": [
        "length%0#0",
        "bounded_index%0#0"
      ]
    },
    "816": {
      "op": "cover 1",
      "stack_out": [
        "bounded_index%0#0",
        "length%0#0"
      ]
    },
    "818": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "bounded_index%0#0",
        "length%0#0"
      ],
      "stack_out": [
        "bounded_index%0#0",
        "length%0#0",
        "1"
      ]
    },
    "819": {
      "op": "dig 1",
      "stack_out": [
        "bounded_index%0#0",
        "length%0#0",
        "1",
        "length%0#0 (copy)"
      ]
    },
    "821": {
      "op": ">=",
      "defined_out": [
        "bounded_index%0#0",
        "is_out_of_bounds%1#0",
        "length%0#0"
      ],
      "stack_out": [
        "bounded_index%0#0",
        "length%0#0",
        "is_out_of_bounds%1#0"
      ]
    },
    "822": {
      "op": "intc_0 // 1",
      "stack_out": [
        "bounded_index%0#0",
        "length%0#0",
        "is_out_of_bounds%1#0",
        "1"
      ]
    },
    "823": {
      "op": "uncover 2",
      "stack_out": [
        "bounded_index%0#0",
        "is_out_of_bounds%1#0",
        "1",
        "length%0#0"
      ]
    },
    "825": {
      "op": "uncover 2",
      "stack_out": [
        "bounded_index%0#0",
        "1",
        "length%0#0",
        "is_out_of_bounds%1#0"
      ]
    },
    "827": {
      "op": "select",
      "defined_out": [
        "bounded_index%0#0",
        "bounded_index%1#0"
      ],
      "stack_out": [
        "bounded_index%0#0",
        "bounded_index%1#0"
      ]
    },
    "828": {
      "op": "dup",
      "defined_out": [
        "bounded_index%0#0",
        "bounded_index%1#0",
        "bounded_index%1#0 (copy)"
      ],
      "stack_out": [
        "bounded_index%0#0",
        "bounded_index%1#0",
        "bounded_index%1#0 (copy)"
      ]
    },
    "829": {
      "op": "dig 2",
      "defined_out": [
        "bounded_index%0#0",
        "bounded_index%0#0 (copy)",
        "bounded_index%1#0",
        "bounded_index%1#0 (copy)"
      ],
      "stack_out": [
        "bounded_index%0#0",
        "bounded_index%1#0",
        "bounded_index%1#0 (copy)",
        "bounded_index%0#0 (copy)"
      ]
    },
    "831": {
      "op": "<",
      "defined_out": [
        "bounded_index%0#0",
        "bounded_index%1#0",
        "end_before_start%0#0"
      ],
      "stack_out": [
        "bounded_index%0#0",
        "bounded_index%1#0",
        "end_before_start%0#0"
      ]
    },
    "832": {
      "op": "uncover 1",
      "stack_out": [
        "bounded_index%0#0",
        "end_before_start%0#0",
        "bounded_index%1#0"
      ]
    },
    "834": {
      "op": "dig 2",
      "stack_out": [
        "bounded_index%0#0",
        "end_before_start%0#0",
        "bounded_index%1#0",
        "bounded_index%0#0 (copy)"
      ]
    },
    "836": {
      "op": "uncover 2",
      "stack_out": [
        "bounded_index%0#0",
        "bounded_index%1#0",
        "bounded_index%0#0 (copy)",
        "end_before_start%0#0"
      ]
    },
    "838": {
      "op": "select",
      "defined_out": [
        "bounded_index%0#0",
        "end%0#0"
      ],
      "stack_out": [
        "bounded_index%0#0",
        "end%0#0"
      ]
    },
    "839": {
      "op": "frame_dig -1",
      "stack_out": [
        "bounded_index%0#0",
        "end%0#0",
        "abc#0 (copy)"
      ]
    },
    "841": {
      "op": "uncover 2",
      "stack_out": [
        "end%0#0",
        "abc#0 (copy)",
        "bounded_index%0#0"
      ]
    },
    "843": {
      "op": "uncover 2",
      "stack_out": [
        "abc#0 (copy)",
        "bounded_index%0#0",
        "end%0#0"
      ]
    },
    "845": {
      "op": "substring3",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "846": {
      "op": "bytec_0 // 0x",
      "defined_out": [
        "0x",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "0x"
      ]
    },
    "847": {
      "op": "==",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "848": {
      "op": "assert",
      "stack_out": []
    },
    "849": {
      "op": "frame_dig -1",
      "stack_out": [
        "abc#0 (copy)"
      ]
    },
    "851": {
      "op": "len",
      "defined_out": [
        "length%1#0"
      ],
      "stack_out": [
        "length%1#0"
      ]
    },
    "852": {
      "op": "intc_2 // 10",
      "stack_out": [
        "length%1#0",
        "10"
      ]
    },
    "853": {
      "op": "dig 1",
      "defined_out": [
        "10",
        "length%1#0",
        "length%1#0 (copy)"
      ],
      "stack_out": [
        "length%1#0",
        "10",
        "length%1#0 (copy)"
      ]
    },
    "855": {
      "op": ">=",
      "defined_out": [
        "is_out_of_bounds%2#0",
        "length%1#0"
      ],
      "stack_out": [
        "length%1#0",
        "is_out_of_bounds%2#0"
      ]
    },
    "856": {
      "op": "intc_2 // 10",
      "stack_out": [
        "length%1#0",
        "is_out_of_bounds%2#0",
        "10"
      ]
    },
    "857": {
      "op": "dig 2",
      "stack_out": [
        "length%1#0",
        "is_out_of_bounds%2#0",
        "10",
        "length%1#0 (copy)"
      ]
    },
    "859": {
      "op": "uncover 2",
      "stack_out": [
        "length%1#0",
        "10",
        "length%1#0 (copy)",
        "is_out_of_bounds%2#0"
      ]
    },
    "861": {
      "op": "select",
      "defined_out": [
        "bounded_offset%0#0",
        "length%1#0"
      ],
      "stack_out": [
        "length%1#0",
        "bounded_offset%0#0"
      ]
    },
    "862": {
      "op": "dig 1",
      "stack_out": [
        "length%1#0",
        "bounded_offset%0#0",
        "length%1#0 (copy)"
      ]
    },
    "864": {
      "op": "uncover 1",
      "stack_out": [
        "length%1#0",
        "length%1#0 (copy)",
        "bounded_offset%0#0"
      ]
    },
    "866": {
      "op": "-",
      "defined_out": [
        "bounded_index%2#0",
        "length%1#0"
      ],
      "stack_out": [
        "length%1#0",
        "bounded_index%2#0"
      ]
    },
    "867": {
      "op": "cover 1",
      "stack_out": [
        "bounded_index%2#0",
        "length%1#0"
      ]
    },
    "869": {
      "op": "pushint 12 // 12",
      "defined_out": [
        "12",
        "bounded_index%2#0",
        "length%1#0"
      ],
      "stack_out": [
        "bounded_index%2#0",
        "length%1#0",
        "12"
      ]
    },
    "871": {
      "op": "dig 1",
      "stack_out": [
        "bounded_index%2#0",
        "length%1#0",
        "12",
        "length%1#0 (copy)"
      ]
    },
    "873": {
      "op": ">=",
      "defined_out": [
        "bounded_index%2#0",
        "is_out_of_bounds%3#0",
        "length%1#0"
      ],
      "stack_out": [
        "bounded_index%2#0",
        "length%1#0",
        "is_out_of_bounds%3#0"
      ]
    },
    "874": {
      "op": "pushint 12 // 12",
      "stack_out": [
        "bounded_index%2#0",
        "length%1#0",
        "is_out_of_bounds%3#0",
        "12"
      ]
    },
    "876": {
      "op": "dig 2",
      "stack_out": [
        "bounded_index%2#0",
        "length%1#0",
        "is_out_of_bounds%3#0",
        "12",
        "length%1#0 (copy)"
      ]
    },
    "878": {
      "op": "uncover 2",
      "stack_out": [
        "bounded_index%2#0",
        "length%1#0",
        "12",
        "length%1#0 (copy)",
        "is_out_of_bounds%3#0"
      ]
    },
    "880": {
      "op": "select",
      "defined_out": [
        "bounded_index%2#0",
        "bounded_offset%1#0",
        "length%1#0"
      ],
      "stack_out": [
        "bounded_index%2#0",
        "length%1#0",
        "bounded_offset%1#0"
      ]
    },
    "881": {
      "op": "-",
      "defined_out": [
        "bounded_index%2#0",
        "bounded_index%3#0"
      ],
      "stack_out": [
        "bounded_index%2#0",
        "bounded_index%3#0"
      ]
    },
    "882": {
      "op": "dup",
      "defined_out": [
        "bounded_index%2#0",
        "bounded_index%3#0",
        "bounded_index%3#0 (copy)"
      ],
      "stack_out": [
        "bounded_index%2#0",
        "bounded_index%3#0",
        "bounded_index%3#0 (copy)"
      ]
    },
    "883": {
      "op": "dig 2",
      "defined_out": [
        "bounded_index%2#0",
        "bounded_index%2#0 (copy)",
        "bounded_index%3#0",
        "bounded_index%3#0 (copy)"
      ],
      "stack_out": [
        "bounded_index%2#0",
        "bounded_index%3#0",
        "bounded_index%3#0 (copy)",
        "bounded_index%2#0 (copy)"
      ]
    },
    "885": {
      "op": "<",
      "defined_out": [
        "bounded_index%2#0",
        "bounded_index%3#0",
        "end_before_start%1#0"
      ],
      "stack_out": [
        "bounded_index%2#0",
        "bounded_index%3#0",
        "end_before_start%1#0"
      ]
    },
    "886": {
      "op": "uncover 1",
      "stack_out": [
        "bounded_index%2#0",
        "end_before_start%1#0",
        "bounded_index%3#0"
      ]
    },
    "888": {
      "op": "dig 2",
      "stack_out": [
        "bounded_index%2#0",
        "end_before_start%1#0",
        "bounded_index%3#0",
        "bounded_index%2#0 (copy)"
      ]
    },
    "890": {
      "op": "uncover 2",
      "stack_out": [
        "bounded_index%2#0",
        "bounded_index%3#0",
        "bounded_index%2#0 (copy)",
        "end_before_start%1#0"
      ]
    },
    "892": {
      "op": "select",
      "defined_out": [
        "bounded_index%2#0",
        "end%1#0"
      ],
      "stack_out": [
        "bounded_index%2#0",
        "end%1#0"
      ]
    },
    "893": {
      "op": "frame_dig -1",
      "stack_out": [
        "bounded_index%2#0",
        "end%1#0",
        "abc#0 (copy)"
      ]
    },
    "895": {
      "op": "uncover 2",
      "stack_out": [
        "end%1#0",
        "abc#0 (copy)",
        "bounded_index%2#0"
      ]
    },
    "897": {
      "op": "uncover 2",
      "stack_out": [
        "abc#0 (copy)",
        "bounded_index%2#0",
        "end%1#0"
      ]
    },
    "899": {
      "op": "substring3",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "900": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "tmp%2#0",
        "0x"
      ]
    },
    "901": {
      "op": "==",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "902": {
      "op": "assert",
      "stack_out": []
    },
    "903": {
      "op": "frame_dig -1",
      "stack_out": [
        "abc#0 (copy)"
      ]
    },
    "905": {
      "op": "len",
      "defined_out": [
        "length%2#0"
      ],
      "stack_out": [
        "length%2#0"
      ]
    },
    "906": {
      "op": "intc_2 // 10",
      "stack_out": [
        "length%2#0",
        "10"
      ]
    },
    "907": {
      "op": "dig 1",
      "defined_out": [
        "10",
        "length%2#0",
        "length%2#0 (copy)"
      ],
      "stack_out": [
        "length%2#0",
        "10",
        "length%2#0 (copy)"
      ]
    },
    "909": {
      "op": ">=",
      "defined_out": [
        "is_out_of_bounds%4#0",
        "length%2#0"
      ],
      "stack_out": [
        "length%2#0",
        "is_out_of_bounds%4#0"
      ]
    },
    "910": {
      "op": "intc_2 // 10",
      "stack_out": [
        "length%2#0",
        "is_out_of_bounds%4#0",
        "10"
      ]
    },
    "911": {
      "op": "dig 2",
      "stack_out": [
        "length%2#0",
        "is_out_of_bounds%4#0",
        "10",
        "length%2#0 (copy)"
      ]
    },
    "913": {
      "op": "uncover 2",
      "stack_out": [
        "length%2#0",
        "10",
        "length%2#0 (copy)",
        "is_out_of_bounds%4#0"
      ]
    },
    "915": {
      "op": "select",
      "defined_out": [
        "bounded_index%4#0",
        "length%2#0"
      ],
      "stack_out": [
        "length%2#0",
        "bounded_index%4#0"
      ]
    },
    "916": {
      "op": "cover 1",
      "stack_out": [
        "bounded_index%4#0",
        "length%2#0"
      ]
    },
    "918": {
      "op": "intc_0 // 1",
      "stack_out": [
        "bounded_index%4#0",
        "length%2#0",
        "1"
      ]
    },
    "919": {
      "op": "dig 1",
      "stack_out": [
        "bounded_index%4#0",
        "length%2#0",
        "1",
        "length%2#0 (copy)"
      ]
    },
    "921": {
      "op": ">=",
      "defined_out": [
        "bounded_index%4#0",
        "is_out_of_bounds%5#0",
        "length%2#0"
      ],
      "stack_out": [
        "bounded_index%4#0",
        "length%2#0",
        "is_out_of_bounds%5#0"
      ]
    },
    "922": {
      "op": "intc_0 // 1",
      "stack_out": [
        "bounded_index%4#0",
        "length%2#0",
        "is_out_of_bounds%5#0",
        "1"
      ]
    },
    "923": {
      "op": "uncover 2",
      "stack_out": [
        "bounded_index%4#0",
        "is_out_of_bounds%5#0",
        "1",
        "length%2#0"
      ]
    },
    "925": {
      "op": "uncover 2",
      "stack_out": [
        "bounded_index%4#0",
        "1",
        "length%2#0",
        "is_out_of_bounds%5#0"
      ]
    },
    "927": {
      "op": "select",
      "defined_out": [
        "bounded_index%4#0",
        "bounded_index%5#0"
      ],
      "stack_out": [
        "bounded_index%4#0",
        "bounded_index%5#0"
      ]
    },
    "928": {
      "op": "dup",
      "defined_out": [
        "bounded_index%4#0",
        "bounded_index%5#0",
        "bounded_index%5#0 (copy)"
      ],
      "stack_out": [
        "bounded_index%4#0",
        "bounded_index%5#0",
        "bounded_index%5#0 (copy)"
      ]
    },
    "929": {
      "op": "dig 2",
      "defined_out": [
        "bounded_index%4#0",
        "bounded_index%4#0 (copy)",
        "bounded_index%5#0",
        "bounded_index%5#0 (copy)"
      ],
      "stack_out": [
        "bounded_index%4#0",
        "bounded_index%5#0",
        "bounded_index%5#0 (copy)",
        "bounded_index%4#0 (copy)"
      ]
    },
    "931": {
      "op": "<",
      "defined_out": [
        "bounded_index%4#0",
        "bounded_index%5#0",
        "end_before_start%2#0"
      ],
      "stack_out": [
        "bounded_index%4#0",
        "bounded_index%5#0",
        "end_before_start%2#0"
      ]
    },
    "932": {
      "op": "uncover 1",
      "stack_out": [
        "bounded_index%4#0",
        "end_before_start%2#0",
        "bounded_index%5#0"
      ]
    },
    "934": {
      "op": "dig 2",
      "stack_out": [
        "bounded_index%4#0",
        "end_before_start%2#0",
        "bounded_index%5#0",
        "bounded_index%4#0 (copy)"
      ]
    },
    "936": {
      "op": "uncover 2",
      "stack_out": [
        "bounded_index%4#0",
        "bounded_index%5#0",
        "bounded_index%4#0 (copy)",
        "end_before_start%2#0"
      ]
    },
    "938": {
      "op": "select",
      "defined_out": [
        "bounded_index%4#0",
        "end%2#0"
      ],
      "stack_out": [
        "bounded_index%4#0",
        "end%2#0"
      ]
    },
    "939": {
      "op": "frame_dig -1",
      "stack_out": [
        "bounded_index%4#0",
        "end%2#0",
        "abc#0 (copy)"
      ]
    },
    "941": {
      "op": "uncover 2",
      "stack_out": [
        "end%2#0",
        "abc#0 (copy)",
        "bounded_index%4#0"
      ]
    },
    "943": {
      "op": "uncover 2",
      "stack_out": [
        "abc#0 (copy)",
        "bounded_index%4#0",
        "end%2#0"
      ]
    },
    "945": {
      "op": "substring3",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "946": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "tmp%4#0",
        "0x"
      ]
    },
    "947": {
      "op": "==",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "948": {
      "op": "assert",
      "stack_out": []
    },
    "949": {
      "retsub": true,
      "op": "retsub"
    },
    "950": {
      "subroutine": "test_cases.stubs.bytes.one_to_seven",
      "params": {},
      "block": "one_to_seven",
      "stack_in": [],
      "op": "b one_to_seven_block@0"
    },
    "953": {
      "block": "one_to_seven_block@0",
      "stack_in": [],
      "op": "pushbytes \"one_to_seven called\"",
      "defined_out": [
        "\"one_to_seven called\""
      ],
      "stack_out": [
        "\"one_to_seven called\""
      ]
    },
    "974": {
      "op": "log",
      "stack_out": []
    },
    "975": {
      "op": "bytec 9 // 0x31323334353637",
      "defined_out": [
        "0x31323334353637"
      ],
      "stack_out": [
        "0x31323334353637"
      ]
    },
    "977": {
      "retsub": true,
      "op": "retsub"
    }
  }
}