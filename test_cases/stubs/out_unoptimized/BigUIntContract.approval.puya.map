{
  "version": 3,
  "sources": [
    "../biguint.py"
  ],
  "mappings": ";;;;;;;;;AAKc;AACgB;AAAtB;;;AADM;AAEyB;;AAA/B;;;AAC0B;;AAAW;AAArC;;;AACoB;;AAAA;;AAAA;AAAb;AAAA;AAAQ;;AAAA;AAAiC;AAAjC;AAAf;AACgB;;;AAAT;AAAiC;;;AAAT;AAAxB;AAAP;AALM;AAAA;AAMC;AAAP;AACO;;AAAP;AAOR;;;AAEW;;AAAA;;AAAA;AAAP;AACO;;AAAA;;AAAA;AAAP;AACO;;AAAA;AAAA;AAAP;AACO;;AAAA;;AAAA;AAAP;AACO;;AAAA;;AAAA;AAAP;AACO;;AAAA;;AAAA;AAAP;;AAGJ;;;AAEW;;AAAA;AAAA;;AAAA;AAAP;AACO;;AAAA;AAAA;;AAAA;AAAP;AACO;;AAAA;AAAA;AAAP;AACO;;AAAA;AAAA;;AAAA;AAAP;AACO;;AAAA;AAAA;;AAAA;AAAP;AACO;;AAAA;AAAA;;AAAA;AAAP;;AAGJ;;;AAEW;;AAAA;AAAA;;AAAA;AAAP;AACO;;AAAA;AAAA;;AAAA;AAAP;AACO;;AAAA;AAAA;AAAP;AACO;;AAAA;AAAA;;AAAA;AAAP;AACO;;AAAA;AAAA;;AAAA;AAAP;AACO;;AAAA;AAAA;;AAAA;AAAP;",
  "op_pc_offset": 0,
  "pc_events": {
    "1": {
      "subroutine": "test_cases.stubs.biguint.BigUIntContract.approval_program",
      "params": {},
      "block": "main",
      "stack_in": [],
      "op": "bytecblock 0x01 0x02 0x05"
    },
    "9": {
      "op": "bytec_0 // 0x01",
      "defined_out": [
        "0x01"
      ],
      "stack_out": [
        "0x01"
      ]
    },
    "10": {
      "op": "bytec_1 // 0x02",
      "defined_out": [
        "0x01",
        "0x02"
      ],
      "stack_out": [
        "0x01",
        "0x02"
      ]
    },
    "11": {
      "callsub": "test_cases.stubs.biguint.compare_biguints",
      "op": "callsub compare_biguints",
      "stack_out": []
    },
    "14": {
      "op": "bytec_0 // 0x01",
      "stack_out": [
        "0x01"
      ]
    },
    "15": {
      "op": "pushint 2 // 2",
      "defined_out": [
        "0x01",
        "2"
      ],
      "stack_out": [
        "0x01",
        "2"
      ]
    },
    "17": {
      "callsub": "test_cases.stubs.biguint.compare_biguint_vs_uint64",
      "op": "callsub compare_biguint_vs_uint64",
      "stack_out": []
    },
    "20": {
      "op": "pushint 1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "22": {
      "op": "bytec_1 // 0x02",
      "stack_out": [
        "1",
        "0x02"
      ]
    },
    "23": {
      "callsub": "test_cases.stubs.biguint.compare_uint64_vs_biguint",
      "op": "callsub compare_uint64_vs_biguint",
      "stack_out": []
    },
    "26": {
      "op": "txn NumAppArgs",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "28": {
      "op": "pushint 0 // 0",
      "defined_out": [
        "0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "0"
      ]
    },
    "30": {
      "op": "!=",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "31": {
      "op": "bytec_2 // 0x05",
      "defined_out": [
        "0x05",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "0x05"
      ]
    },
    "32": {
      "op": "bytec_0 // 0x01",
      "stack_out": [
        "tmp%1#0",
        "0x05",
        "0x01"
      ]
    },
    "33": {
      "op": "uncover 2",
      "stack_out": [
        "0x05",
        "0x01",
        "tmp%1#0"
      ]
    },
    "35": {
      "op": "select",
      "defined_out": [
        "select%0#0"
      ],
      "stack_out": [
        "select%0#0"
      ]
    },
    "36": {
      "op": "bytec_2 // 0x05",
      "stack_out": [
        "select%0#0",
        "0x05"
      ]
    },
    "37": {
      "op": "b==",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "38": {
      "error": "constructor expressions supported",
      "op": "assert // constructor expressions supported",
      "stack_out": []
    },
    "39": {
      "op": "pushbytes 0x09",
      "defined_out": [
        "0x09"
      ],
      "stack_out": [
        "0x09"
      ]
    },
    "42": {
      "op": "bsqrt",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "43": {
      "op": "pushbytes 0x0a",
      "defined_out": [
        "0x0a",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "0x0a"
      ]
    },
    "46": {
      "op": "bsqrt",
      "defined_out": [
        "tmp%3#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "tmp%4#0"
      ]
    },
    "47": {
      "op": "b==",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "48": {
      "op": "assert",
      "stack_out": []
    },
    "49": {
      "op": "bytec_0 // 0x01",
      "stack_out": [
        "0x01"
      ]
    },
    "50": {
      "op": "dup",
      "stack_out": [
        "0x01",
        "0x01"
      ]
    },
    "51": {
      "op": "b==",
      "defined_out": [
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0"
      ]
    },
    "52": {
      "op": "assert",
      "stack_out": []
    },
    "53": {
      "op": "pushint 1 // 1",
      "stack_out": [
        "1"
      ]
    },
    "55": {
      "op": "return",
      "stack_out": []
    },
    "56": {
      "subroutine": "test_cases.stubs.biguint.compare_biguints",
      "params": {
        "one#0": "bytes",
        "two#0": "bytes"
      },
      "block": "compare_biguints",
      "stack_in": [],
      "op": "proto 2 0"
    },
    "59": {
      "op": "frame_dig -2",
      "defined_out": [
        "one#0 (copy)"
      ],
      "stack_out": [
        "one#0 (copy)"
      ]
    },
    "61": {
      "op": "frame_dig -1",
      "defined_out": [
        "one#0 (copy)",
        "two#0 (copy)"
      ],
      "stack_out": [
        "one#0 (copy)",
        "two#0 (copy)"
      ]
    },
    "63": {
      "op": "b<",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "64": {
      "op": "assert",
      "stack_out": []
    },
    "65": {
      "op": "frame_dig -2",
      "stack_out": [
        "one#0 (copy)"
      ]
    },
    "67": {
      "op": "frame_dig -1",
      "stack_out": [
        "one#0 (copy)",
        "two#0 (copy)"
      ]
    },
    "69": {
      "op": "b<=",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "70": {
      "op": "assert",
      "stack_out": []
    },
    "71": {
      "op": "frame_dig -2",
      "stack_out": [
        "one#0 (copy)"
      ]
    },
    "73": {
      "op": "dup",
      "stack_out": [
        "one#0 (copy)",
        "one#0 (copy)"
      ]
    },
    "74": {
      "op": "b==",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "75": {
      "op": "assert",
      "stack_out": []
    },
    "76": {
      "op": "frame_dig -1",
      "stack_out": [
        "two#0 (copy)"
      ]
    },
    "78": {
      "op": "frame_dig -2",
      "stack_out": [
        "two#0 (copy)",
        "one#0 (copy)"
      ]
    },
    "80": {
      "op": "b>",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "81": {
      "op": "assert",
      "stack_out": []
    },
    "82": {
      "op": "frame_dig -1",
      "stack_out": [
        "two#0 (copy)"
      ]
    },
    "84": {
      "op": "frame_dig -2",
      "stack_out": [
        "two#0 (copy)",
        "one#0 (copy)"
      ]
    },
    "86": {
      "op": "b>=",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "87": {
      "op": "assert",
      "stack_out": []
    },
    "88": {
      "op": "frame_dig -2",
      "stack_out": [
        "one#0 (copy)"
      ]
    },
    "90": {
      "op": "frame_dig -1",
      "stack_out": [
        "one#0 (copy)",
        "two#0 (copy)"
      ]
    },
    "92": {
      "op": "b!=",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "93": {
      "op": "assert",
      "stack_out": []
    },
    "94": {
      "retsub": true,
      "op": "retsub"
    },
    "95": {
      "subroutine": "test_cases.stubs.biguint.compare_biguint_vs_uint64",
      "params": {
        "one#0": "bytes",
        "two#0": "uint64"
      },
      "block": "compare_biguint_vs_uint64",
      "stack_in": [],
      "op": "proto 2 0"
    },
    "98": {
      "op": "frame_dig -1",
      "defined_out": [
        "two#0 (copy)"
      ],
      "stack_out": [
        "two#0 (copy)"
      ]
    },
    "100": {
      "op": "itob",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "101": {
      "op": "frame_dig -2",
      "defined_out": [
        "one#0 (copy)",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "one#0 (copy)"
      ]
    },
    "103": {
      "op": "b>",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "104": {
      "op": "assert",
      "stack_out": []
    },
    "105": {
      "op": "frame_dig -1",
      "stack_out": [
        "two#0 (copy)"
      ]
    },
    "107": {
      "op": "itob",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "108": {
      "op": "frame_dig -2",
      "stack_out": [
        "tmp%2#0",
        "one#0 (copy)"
      ]
    },
    "110": {
      "op": "b>=",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "111": {
      "op": "assert",
      "stack_out": []
    },
    "112": {
      "op": "frame_dig -2",
      "stack_out": [
        "one#0 (copy)"
      ]
    },
    "114": {
      "op": "dup",
      "stack_out": [
        "one#0 (copy)",
        "one#0 (copy)"
      ]
    },
    "115": {
      "op": "b==",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "116": {
      "op": "assert",
      "stack_out": []
    },
    "117": {
      "op": "frame_dig -1",
      "stack_out": [
        "two#0 (copy)"
      ]
    },
    "119": {
      "op": "itob",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "120": {
      "op": "frame_dig -2",
      "stack_out": [
        "tmp%5#0",
        "one#0 (copy)"
      ]
    },
    "122": {
      "op": "b>",
      "defined_out": [
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0"
      ]
    },
    "123": {
      "op": "assert",
      "stack_out": []
    },
    "124": {
      "op": "frame_dig -1",
      "stack_out": [
        "two#0 (copy)"
      ]
    },
    "126": {
      "op": "itob",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0"
      ]
    },
    "127": {
      "op": "frame_dig -2",
      "stack_out": [
        "tmp%7#0",
        "one#0 (copy)"
      ]
    },
    "129": {
      "op": "b>=",
      "defined_out": [
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0"
      ]
    },
    "130": {
      "op": "assert",
      "stack_out": []
    },
    "131": {
      "op": "frame_dig -1",
      "stack_out": [
        "two#0 (copy)"
      ]
    },
    "133": {
      "op": "itob",
      "defined_out": [
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0"
      ]
    },
    "134": {
      "op": "frame_dig -2",
      "stack_out": [
        "tmp%9#0",
        "one#0 (copy)"
      ]
    },
    "136": {
      "op": "b!=",
      "defined_out": [
        "tmp%10#0"
      ],
      "stack_out": [
        "tmp%10#0"
      ]
    },
    "137": {
      "op": "assert",
      "stack_out": []
    },
    "138": {
      "retsub": true,
      "op": "retsub"
    },
    "139": {
      "subroutine": "test_cases.stubs.biguint.compare_uint64_vs_biguint",
      "params": {
        "one#0": "uint64",
        "two#0": "bytes"
      },
      "block": "compare_uint64_vs_biguint",
      "stack_in": [],
      "op": "proto 2 0"
    },
    "142": {
      "op": "frame_dig -2",
      "defined_out": [
        "one#0 (copy)"
      ],
      "stack_out": [
        "one#0 (copy)"
      ]
    },
    "144": {
      "op": "itob",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "145": {
      "op": "frame_dig -1",
      "defined_out": [
        "tmp%0#0",
        "two#0 (copy)"
      ],
      "stack_out": [
        "tmp%0#0",
        "two#0 (copy)"
      ]
    },
    "147": {
      "op": "b<",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "148": {
      "op": "assert",
      "stack_out": []
    },
    "149": {
      "op": "frame_dig -2",
      "stack_out": [
        "one#0 (copy)"
      ]
    },
    "151": {
      "op": "itob",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "152": {
      "op": "frame_dig -1",
      "stack_out": [
        "tmp%2#0",
        "two#0 (copy)"
      ]
    },
    "154": {
      "op": "b<=",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "155": {
      "op": "assert",
      "stack_out": []
    },
    "156": {
      "op": "frame_dig -2",
      "stack_out": [
        "one#0 (copy)"
      ]
    },
    "158": {
      "op": "dup",
      "stack_out": [
        "one#0 (copy)",
        "one#0 (copy)"
      ]
    },
    "159": {
      "op": "==",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "160": {
      "op": "assert",
      "stack_out": []
    },
    "161": {
      "op": "frame_dig -2",
      "stack_out": [
        "one#0 (copy)"
      ]
    },
    "163": {
      "op": "itob",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "164": {
      "op": "frame_dig -1",
      "stack_out": [
        "tmp%5#0",
        "two#0 (copy)"
      ]
    },
    "166": {
      "op": "b<",
      "defined_out": [
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0"
      ]
    },
    "167": {
      "op": "assert",
      "stack_out": []
    },
    "168": {
      "op": "frame_dig -2",
      "stack_out": [
        "one#0 (copy)"
      ]
    },
    "170": {
      "op": "itob",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0"
      ]
    },
    "171": {
      "op": "frame_dig -1",
      "stack_out": [
        "tmp%7#0",
        "two#0 (copy)"
      ]
    },
    "173": {
      "op": "b<=",
      "defined_out": [
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0"
      ]
    },
    "174": {
      "op": "assert",
      "stack_out": []
    },
    "175": {
      "op": "frame_dig -2",
      "stack_out": [
        "one#0 (copy)"
      ]
    },
    "177": {
      "op": "itob",
      "defined_out": [
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0"
      ]
    },
    "178": {
      "op": "frame_dig -1",
      "stack_out": [
        "tmp%9#0",
        "two#0 (copy)"
      ]
    },
    "180": {
      "op": "b!=",
      "defined_out": [
        "tmp%10#0"
      ],
      "stack_out": [
        "tmp%10#0"
      ]
    },
    "181": {
      "op": "assert",
      "stack_out": []
    },
    "182": {
      "retsub": true,
      "op": "retsub"
    }
  }
}