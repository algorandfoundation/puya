#pragma version 10
#pragma typetrack false

// algopy.arc4.ARC4Contract.approval_program() -> uint64:
main:
    // reinterpret_cast/contract.py:4
    // class Contract(ARC4Contract):
    txn NumAppArgs
    bz main_bare_routing@7
    pushbytess 0x4034b731 0x7e9fd4cf // method "bytes_to_bool()bool", method "test_bytes_to_biguint()void"
    txna ApplicationArgs 0
    match main_bytes_to_bool_route@3 main_test_bytes_to_biguint_route@4

main_after_if_else@11:
    err

main_test_bytes_to_biguint_route@4:
    // reinterpret_cast/contract.py:9
    // @arc4.abimethod()
    txn OnCompletion
    !
    assert // OnCompletion is not NoOp
    txn ApplicationID
    assert // can only call when not creating
    callsub test_bytes_to_biguint
    pushint 1 // 1
    return

main_bytes_to_bool_route@3:
    // reinterpret_cast/contract.py:5
    // @arc4.abimethod()
    txn OnCompletion
    !
    assert // OnCompletion is not NoOp
    txn ApplicationID
    assert // can only call when not creating
    pushbytes 0x151f7c7500
    log
    pushint 1 // 1
    return

main_bare_routing@7:
    // reinterpret_cast/contract.py:4
    // class Contract(ARC4Contract):
    txn OnCompletion
    bnz main_after_if_else@11
    txn ApplicationID
    !
    assert // can only call when creating
    pushint 1 // 1
    return


// test_cases.reinterpret_cast.contract.Contract.test_bytes_to_biguint() -> void:
test_bytes_to_biguint:
    // reinterpret_cast/contract.py:11
    // assert bytes_to_biguint()
    pushint 0 // 0
    assert
    retsub
