{
  "version": 3,
  "sources": [
    "../contract.py"
  ],
  "mappings": ";AAIK;;AADL;;AAAA;;;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;;;;;;;;;;AAAA;;;AAAA;;;;;;AAAA;AAKK;AAJA;;;;;;;AAAA;AAAA;AADL;;AAAA;AAAA;;;;",
  "op_pc_offset": 0,
  "pc_events": {
    "1": {
      "subroutine": "algopy.arc4.ARC4Contract.approval_program",
      "params": {},
      "block": "main",
      "stack_in": [],
      "op": "pushint 1 // 1"
    },
    "3": {
      "op": "txn NumAppArgs",
      "defined_out": [
        "lifted%return#0",
        "tmp%0#1"
      ],
      "stack_out": [
        "lifted%return#0",
        "tmp%0#1"
      ]
    },
    "5": {
      "op": "bz main_bare_routing@16",
      "stack_out": [
        "lifted%return#0"
      ]
    },
    "8": {
      "op": "txn OnCompletion",
      "defined_out": [
        "lifted%return#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "lifted%return#0",
        "tmp%3#0"
      ]
    },
    "10": {
      "op": "!",
      "defined_out": [
        "lifted%return#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "lifted%return#0",
        "tmp%4#0"
      ]
    },
    "11": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": [
        "lifted%return#0"
      ]
    },
    "12": {
      "op": "txn ApplicationID",
      "defined_out": [
        "lifted%return#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "lifted%return#0",
        "tmp%6#0"
      ]
    },
    "14": {
      "op": "assert",
      "stack_out": [
        "lifted%return#0"
      ]
    },
    "15": {
      "op": "pushbytess 0x4034b731 0x7e9fd4cf // method \"bytes_to_bool()bool\", method \"test_bytes_to_biguint()void\"",
      "defined_out": [
        "Method(bytes_to_bool()bool)",
        "Method(test_bytes_to_biguint()void)",
        "lifted%return#0"
      ],
      "stack_out": [
        "lifted%return#0",
        "Method(bytes_to_bool()bool)",
        "Method(test_bytes_to_biguint()void)"
      ]
    },
    "27": {
      "op": "txna ApplicationArgs 0",
      "defined_out": [
        "Method(bytes_to_bool()bool)",
        "Method(test_bytes_to_biguint()void)",
        "lifted%return#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "lifted%return#0",
        "Method(bytes_to_bool()bool)",
        "Method(test_bytes_to_biguint()void)",
        "tmp%7#0"
      ]
    },
    "30": {
      "op": "match main_bytes_to_bool_route@6 main_test_bytes_to_biguint_route@7",
      "stack_out": [
        "lifted%return#0"
      ]
    },
    "36": {
      "op": "err"
    },
    "37": {
      "block": "main_test_bytes_to_biguint_route@7",
      "stack_in": [
        "lifted%return#0"
      ],
      "op": "err",
      "defined_out": [
        "lifted%return#0"
      ]
    },
    "38": {
      "block": "main_bytes_to_bool_route@6",
      "stack_in": [
        "lifted%return#0"
      ],
      "op": "pushbytes 0x151f7c7500",
      "defined_out": [
        "0x151f7c7500"
      ],
      "stack_out": [
        "lifted%return#0",
        "0x151f7c7500"
      ]
    },
    "45": {
      "op": "log",
      "stack_out": [
        "lifted%return#0"
      ]
    },
    "46": {
      "op": "return",
      "defined_out": [
        "lifted%return#0"
      ]
    },
    "47": {
      "block": "main_bare_routing@16",
      "stack_in": [
        "lifted%return#0"
      ],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%9#0"
      ],
      "stack_out": [
        "lifted%return#0",
        "tmp%9#0"
      ]
    },
    "49": {
      "op": "!",
      "defined_out": [
        "not%tmp%9#0"
      ],
      "stack_out": [
        "lifted%return#0",
        "not%tmp%9#0"
      ]
    },
    "50": {
      "op": "assert",
      "stack_out": [
        "lifted%return#0"
      ]
    },
    "51": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%10#0"
      ],
      "stack_out": [
        "lifted%return#0",
        "tmp%10#0"
      ]
    },
    "53": {
      "op": "!",
      "defined_out": [
        "tmp%11#0"
      ],
      "stack_out": [
        "lifted%return#0",
        "tmp%11#0"
      ]
    },
    "54": {
      "error": "can only call when creating",
      "op": "return // on error: can only call when creating",
      "defined_out": [
        "lifted%return#0"
      ],
      "stack_out": [
        "lifted%return#0"
      ]
    }
  }
}