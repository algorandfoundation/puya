// Op                                                                   //                                                Op Description                      Stack (out)                                                                    X stack                       Source code                                                 Source line

#pragma version 10

// test_cases.reinterpret_cast.contract.Contract.approval_program() -> uint64:
main_block@0:
    txn NumAppArgs                                                      //                                                                                    {txn}                                                                                                        class Contract(ARC4Contract):                               reinterpret_cast/contract.py:4
    //                                                                  virtual: store tmp%0#0 to l-stack (no copy)       tmp%0#0                                                                                                            class Contract(ARC4Contract): reinterpret_cast/contract.py:4
    //                                                                  virtual: load tmp%0#0 from l-stack (no copy)      tmp%0#0                                                                                                            class Contract(ARC4Contract): reinterpret_cast/contract.py:4
    bz main_bare_routing@6                                              //                                                                                                                                                                                                 class Contract(ARC4Contract):                               reinterpret_cast/contract.py:4
    // Implicit fall through to main_abi_routing@1                      //                                                                                                                                                                                                 class Contract(ARC4Contract):                               reinterpret_cast/contract.py:4

main_abi_routing@1:
    txna ApplicationArgs 0                                              //                                                                                    {txna}                                                                                                       class Contract(ARC4Contract):                               reinterpret_cast/contract.py:4
    //                                                                  virtual: store tmp%1#0 to l-stack (no copy)       tmp%1#0                                                                                                            class Contract(ARC4Contract): reinterpret_cast/contract.py:4
    method "bytes_to_bool()bool"                                        //                                                                                    tmp%1#0,method<"bytes_to_bool()bool">                                                                        class Contract(ARC4Contract):                               reinterpret_cast/contract.py:4
    method "test_bytes_to_biguint()void"                                //                                                                                    tmp%1#0,method<"bytes_to_bool()bool">,method<"test_bytes_to_biguint()void">                                  class Contract(ARC4Contract):                               reinterpret_cast/contract.py:4
    uncover 2                                                           //                                                load tmp%1#0 from l-stack (no copy) method<"bytes_to_bool()bool">,method<"test_bytes_to_biguint()void">,tmp%1#0                                  class Contract(ARC4Contract):                               reinterpret_cast/contract.py:4
    match main_bytes_to_bool_route@2 main_test_bytes_to_biguint_route@3 //                                                                                                                                                                                                 class Contract(ARC4Contract):                               reinterpret_cast/contract.py:4
    err // reject transaction                                           //                                                                                                                                                                                                 class Contract(ARC4Contract):                               reinterpret_cast/contract.py:4

main_bytes_to_bool_route@2:
    txn OnCompletion                                                    //                                                                                    {txn}                                                                                                        arc4.abimethod()                                            reinterpret_cast/contract.py:6
    //                                                                  virtual: store tmp%2#0 to l-stack (no copy)       tmp%2#0                                                                                                            arc4.abimethod()              reinterpret_cast/contract.py:6
    //                                                                  virtual: load tmp%2#0 from l-stack (no copy)      tmp%2#0                                                                                                            arc4.abimethod()              reinterpret_cast/contract.py:6
    !                                                                   //                                                                                    {!}                                                                                                          arc4.abimethod()                                            reinterpret_cast/contract.py:6
    //                                                                  virtual: store tmp%3#0 to l-stack (no copy)       tmp%3#0                                                                                                            arc4.abimethod()              reinterpret_cast/contract.py:6
    //                                                                  virtual: load tmp%3#0 from l-stack (no copy)      tmp%3#0                                                                                                            arc4.abimethod()              reinterpret_cast/contract.py:6
    assert // OnCompletion is NoOp                                      //                                                                                                                                                                                                 arc4.abimethod()                                            reinterpret_cast/contract.py:6
    txn ApplicationID                                                   //                                                                                    {txn}                                                                                                        arc4.abimethod()                                            reinterpret_cast/contract.py:6
    //                                                                  virtual: store tmp%4#0 to l-stack (no copy)       tmp%4#0                                                                                                            arc4.abimethod()              reinterpret_cast/contract.py:6
    //                                                                  virtual: load tmp%4#0 from l-stack (no copy)      tmp%4#0                                                                                                            arc4.abimethod()              reinterpret_cast/contract.py:6
    assert // is not creating                                           //                                                                                                                                                                                                 arc4.abimethod()                                            reinterpret_cast/contract.py:6
    callsub bytes_to_bool                                               //                                                                                    {bytes_to_bool}                                                                                              arc4.abimethod()                                            reinterpret_cast/contract.py:6
    //                                                                  virtual: store tmp%5#0 to l-stack (no copy)       tmp%5#0                                                                                                            arc4.abimethod()              reinterpret_cast/contract.py:6
    byte 0x00                                                           //                                                                                    tmp%5#0,0x00                                                                                                 arc4.abimethod()                                            reinterpret_cast/contract.py:6
    int 0                                                               //                                                                                    tmp%5#0,0x00,0                                                                                               arc4.abimethod()                                            reinterpret_cast/contract.py:6
    uncover 2                                                           //                                                load tmp%5#0 from l-stack (no copy) 0x00,0,tmp%5#0                                                                                               arc4.abimethod()                                            reinterpret_cast/contract.py:6
    setbit                                                              //                                                                                    {setbit}                                                                                                     arc4.abimethod()                                            reinterpret_cast/contract.py:6
    //                                                                  virtual: store tmp%6#0 to l-stack (no copy)       tmp%6#0                                                                                                            arc4.abimethod()              reinterpret_cast/contract.py:6
    byte 0x151f7c75                                                     //                                                                                    tmp%6#0,0x151f7c75                                                                                           arc4.abimethod()                                            reinterpret_cast/contract.py:6
    swap                                                                //                                                load tmp%6#0 from l-stack (no copy) 0x151f7c75,tmp%6#0                                                                                           arc4.abimethod()                                            reinterpret_cast/contract.py:6
    concat                                                              //                                                                                    {concat}                                                                                                     arc4.abimethod()                                            reinterpret_cast/contract.py:6
    //                                                                  virtual: store tmp%7#0 to l-stack (no copy)       tmp%7#0                                                                                                            arc4.abimethod()              reinterpret_cast/contract.py:6
    //                                                                  virtual: load tmp%7#0 from l-stack (no copy)      tmp%7#0                                                                                                            arc4.abimethod()              reinterpret_cast/contract.py:6
    log                                                                 //                                                                                                                                                                                                 arc4.abimethod()                                            reinterpret_cast/contract.py:6
    int 1                                                               //                                                                                    1                                                                                                            arc4.abimethod()                                            reinterpret_cast/contract.py:6
    return                                                              //                                                                                                                                                                                                 arc4.abimethod()                                            reinterpret_cast/contract.py:6

main_test_bytes_to_biguint_route@3:
    txn OnCompletion                                                    //                                                                                    {txn}                                                                                                        arc4.abimethod()                                            reinterpret_cast/contract.py:10
    //                                                                  virtual: store tmp%8#0 to l-stack (no copy)       tmp%8#0                                                                                                            arc4.abimethod()              reinterpret_cast/contract.py:10
    //                                                                  virtual: load tmp%8#0 from l-stack (no copy)      tmp%8#0                                                                                                            arc4.abimethod()              reinterpret_cast/contract.py:10
    !                                                                   //                                                                                    {!}                                                                                                          arc4.abimethod()                                            reinterpret_cast/contract.py:10
    //                                                                  virtual: store tmp%9#0 to l-stack (no copy)       tmp%9#0                                                                                                            arc4.abimethod()              reinterpret_cast/contract.py:10
    //                                                                  virtual: load tmp%9#0 from l-stack (no copy)      tmp%9#0                                                                                                            arc4.abimethod()              reinterpret_cast/contract.py:10
    assert // OnCompletion is NoOp                                      //                                                                                                                                                                                                 arc4.abimethod()                                            reinterpret_cast/contract.py:10
    txn ApplicationID                                                   //                                                                                    {txn}                                                                                                        arc4.abimethod()                                            reinterpret_cast/contract.py:10
    //                                                                  virtual: store tmp%10#0 to l-stack (no copy)      tmp%10#0                                                                                                           arc4.abimethod()              reinterpret_cast/contract.py:10
    //                                                                  virtual: load tmp%10#0 from l-stack (no copy)     tmp%10#0                                                                                                           arc4.abimethod()              reinterpret_cast/contract.py:10
    assert // is not creating                                           //                                                                                                                                                                                                 arc4.abimethod()                                            reinterpret_cast/contract.py:10
    callsub test_bytes_to_biguint                                       //                                                                                                                                                                                                 arc4.abimethod()                                            reinterpret_cast/contract.py:10
    int 1                                                               //                                                                                    1                                                                                                            arc4.abimethod()                                            reinterpret_cast/contract.py:10
    return                                                              //                                                                                                                                                                                                 arc4.abimethod()                                            reinterpret_cast/contract.py:10

main_bare_routing@6:
    txn OnCompletion                                                    //                                                                                    {txn}                                                                                                        class Contract(ARC4Contract):                               reinterpret_cast/contract.py:4
    //                                                                  virtual: store tmp%11#0 to l-stack (no copy)      tmp%11#0                                                                                                           class Contract(ARC4Contract): reinterpret_cast/contract.py:4
    //                                                                  virtual: load tmp%11#0 from l-stack (no copy)     tmp%11#0                                                                                                           class Contract(ARC4Contract): reinterpret_cast/contract.py:4
    !                                                                   //                                                                                    {!}                                                                                                          class Contract(ARC4Contract):                               reinterpret_cast/contract.py:4
    //                                                                  virtual: store not%tmp%11#0 to l-stack (no copy)  not%tmp%11#0                                                                                                       class Contract(ARC4Contract): reinterpret_cast/contract.py:4
    //                                                                  virtual: load not%tmp%11#0 from l-stack (no copy) not%tmp%11#0                                                                                                       class Contract(ARC4Contract): reinterpret_cast/contract.py:4
    assert // reject transaction                                        //                                                                                                                                                                                                 class Contract(ARC4Contract):                               reinterpret_cast/contract.py:4
    txn ApplicationID                                                   //                                                                                    {txn}                                                                                                        class Contract(ARC4Contract):                               reinterpret_cast/contract.py:4
    //                                                                  virtual: store tmp%12#0 to l-stack (no copy)      tmp%12#0                                                                                                           class Contract(ARC4Contract): reinterpret_cast/contract.py:4
    //                                                                  virtual: load tmp%12#0 from l-stack (no copy)     tmp%12#0                                                                                                           class Contract(ARC4Contract): reinterpret_cast/contract.py:4
    !                                                                   //                                                                                    {!}                                                                                                          class Contract(ARC4Contract):                               reinterpret_cast/contract.py:4
    //                                                                  virtual: store tmp%13#0 to l-stack (no copy)      tmp%13#0                                                                                                           class Contract(ARC4Contract): reinterpret_cast/contract.py:4
    //                                                                  virtual: load tmp%13#0 from l-stack (no copy)     tmp%13#0                                                                                                           class Contract(ARC4Contract): reinterpret_cast/contract.py:4
    assert // is creating                                               //                                                                                                                                                                                                 class Contract(ARC4Contract):                               reinterpret_cast/contract.py:4
    int 1                                                               //                                                                                    1                                                                                                            class Contract(ARC4Contract):                               reinterpret_cast/contract.py:4
    return                                                              //                                                                                                                                                                                                 class Contract(ARC4Contract):                               reinterpret_cast/contract.py:4


// test_cases.reinterpret_cast.contract.Contract.bytes_to_bool() -> uint64:
bytes_to_bool:
    proto 0 1                                                           //                                                                                                                                                                                                 @arc4.abimethod()\ndef bytes_to_bool(self) -> bool:         reinterpret_cast/contract.py:6-7

bytes_to_bool_block@0:
    int 0                                                               //                                                                                    0                                                                                                            bool(Bytes())                                               reinterpret_cast/contract.py:8
    retsub                                                              //                                                                                    0                                                                                                            return bool(Bytes())                                        reinterpret_cast/contract.py:8


// test_cases.reinterpret_cast.contract.Contract.test_bytes_to_biguint() -> void:
test_bytes_to_biguint:
    proto 0 0                                                           //                                                                                                                                                                                                 @arc4.abimethod()\ndef test_bytes_to_biguint(self) -> None: reinterpret_cast/contract.py:10-11

test_bytes_to_biguint_block@0:
    callsub bytes_to_biguint                                            //                                                                                    {bytes_to_biguint}                                                                                           bytes_to_biguint()                                          reinterpret_cast/contract.py:12
    //                                                                  virtual: store tmp%0#0 to l-stack (no copy)       tmp%0#0                                                                                                            bytes_to_biguint()            reinterpret_cast/contract.py:12
    //                                                                  virtual: load tmp%0#0 from l-stack (no copy)      tmp%0#0                                                                                                            bytes_to_biguint()            reinterpret_cast/contract.py:12
    byte 0x                                                             //                                                                                    tmp%0#0,0x                                                                                                   bytes_to_biguint()                                          reinterpret_cast/contract.py:12
    b!=                                                                 //                                                                                    {b!=}                                                                                                        bytes_to_biguint()                                          reinterpret_cast/contract.py:12
    //                                                                  virtual: store tmp%1#0 to l-stack (no copy)       tmp%1#0                                                                                                            bytes_to_biguint()            reinterpret_cast/contract.py:12
    //                                                                  virtual: load tmp%1#0 from l-stack (no copy)      tmp%1#0                                                                                                            assert bytes_to_biguint()     reinterpret_cast/contract.py:12
    assert                                                              //                                                                                                                                                                                                 assert bytes_to_biguint()                                   reinterpret_cast/contract.py:12
    retsub                                                              //


// test_cases.reinterpret_cast.contract.bytes_to_biguint() -> bytes:
bytes_to_biguint:
    proto 0 1                                                           //                                                                                                                                                                                                 @subroutine\ndef bytes_to_biguint() -> BigUInt:             reinterpret_cast/contract.py:15-16

bytes_to_biguint_block@0:
    byte 0x                                                             //                                                                                    0x                                                                                                           Bytes()                                                     reinterpret_cast/contract.py:17
    retsub                                                              //                                                                                    0x                                                                                                           return BigUInt.from_bytes(Bytes())                          reinterpret_cast/contract.py:17

