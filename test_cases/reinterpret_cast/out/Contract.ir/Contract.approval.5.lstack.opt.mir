// Op                                                                                     Stack (out)
// algopy.arc4.ARC4Contract.approval_program() -> uint64:
main:
    // reinterpret_cast/contract.py:4
    // class Contract(ARC4Contract):
    txn NumAppArgs                                                                        tmp%0#1
    bz main_bare_routing@7 ; b main_abi_routing@2

main_abi_routing@2:
    // reinterpret_cast/contract.py:4
    // class Contract(ARC4Contract):
    txna ApplicationArgs 0                                                                tmp%2#0
    method bytes_to_bool()bool                                                            tmp%2#0,Method(bytes_to_bool()bool)
    method test_bytes_to_biguint()void                                                    tmp%2#0,Method(bytes_to_bool()bool),Method(test_bytes_to_biguint()void)
    l-load tmp%2#0 2                                                                      Method(bytes_to_bool()bool),Method(test_bytes_to_biguint()void),tmp%2#0
    match main_bytes_to_bool_route@3 main_test_bytes_to_biguint_route@4 ; b main_after_if_else@11 

main_bytes_to_bool_route@3:
    // reinterpret_cast/contract.py:5
    // @arc4.abimethod()
    txn OnCompletion                                                                      tmp%3#0
    !                                                                                     tmp%4#0
    assert // OnCompletion is not NoOp
    txn ApplicationID                                                                     tmp%5#0
    assert // can only call when not creating
    byte 0x151f7c7500                                                                     0x151f7c7500
    log
    int 1                                                                                 test_cases.reinterpret_cast.contract.Contract.__puya_arc4_router__%0#0
    v-store tmp%0#0
    b main_after_inlined_test_cases.reinterpret_cast.contract.Contract.__puya_arc4_router__@12 

main_test_bytes_to_biguint_route@4:
    // reinterpret_cast/contract.py:9
    // @arc4.abimethod()
    txn OnCompletion                                                                      tmp%8#0
    !                                                                                     tmp%9#0
    assert // OnCompletion is not NoOp
    txn ApplicationID                                                                     tmp%10#0
    assert // can only call when not creating
    callsub test_bytes_to_biguint
    int 1                                                                                 test_cases.reinterpret_cast.contract.Contract.__puya_arc4_router__%0#0
    v-store tmp%0#0
    b main_after_inlined_test_cases.reinterpret_cast.contract.Contract.__puya_arc4_router__@12 

main_bare_routing@7:
    // reinterpret_cast/contract.py:4
    // class Contract(ARC4Contract):
    txn OnCompletion                                                                      tmp%12#0
    bz main___algopy_default_create@8 ; b main_after_if_else@11

main___algopy_default_create@8:
    txn ApplicationID                                                                     tmp%13#0
    !                                                                                     tmp%14#0
    assert // can only call when creating
    int 1                                                                                 test_cases.reinterpret_cast.contract.Contract.__puya_arc4_router__%0#0
    v-store tmp%0#0
    b main_after_inlined_test_cases.reinterpret_cast.contract.Contract.__puya_arc4_router__@12 

main_after_if_else@11:
    // reinterpret_cast/contract.py:4
    // class Contract(ARC4Contract):
    int 0                                                                                 test_cases.reinterpret_cast.contract.Contract.__puya_arc4_router__%0#0
    v-store tmp%0#0
    b main_after_inlined_test_cases.reinterpret_cast.contract.Contract.__puya_arc4_router__@12 

main_after_inlined_test_cases.reinterpret_cast.contract.Contract.__puya_arc4_router__@12:
    v-load tmp%0#0                                                                        tmp%0#0
    return


// test_cases.reinterpret_cast.contract.Contract.test_bytes_to_biguint() -> void:
test_bytes_to_biguint:
    // reinterpret_cast/contract.py:11
    // assert bytes_to_biguint()
    int 0                                                                                 0
    assert
    retsub


