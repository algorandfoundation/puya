main algopy.arc4.ARC4Contract.approval_program:
    block@0: // L1
        let tmp%0#1: uint64 = (txn NumAppArgs)
        goto tmp%0#1 ? block@2 : block@7
    block@2: // abi_routing_L4
        let tmp%2#0: bytes = (txna ApplicationArgs 0)
        switch tmp%2#0 {method "bytes_to_bool()bool" => block@3, method "test_bytes_to_biguint()void" => block@4, * => block@11}
    block@3: // bytes_to_bool_route_L5
        let tmp%3#0: uint64 = (txn OnCompletion)
        let tmp%4#0: bool = (! tmp%3#0)
        (assert tmp%4#0) // OnCompletion is not NoOp
        let tmp%5#0: uint64 = (txn ApplicationID)
        (assert tmp%5#0) // can only call when not creating
        (log 0x151f7c7500)
        let test_cases.reinterpret_cast.contract.Contract.__puya_arc4_router__%0#0: bool = 1u
        let tmp%0#0: bool = test_cases.reinterpret_cast.contract.Contract.__puya_arc4_router__%0#0
        goto block@12
    block@4: // test_bytes_to_biguint_route_L9
        let tmp%9#0: uint64 = (txn OnCompletion)
        let tmp%10#0: bool = (! tmp%9#0)
        (assert tmp%10#0) // OnCompletion is not NoOp
        let tmp%11#0: uint64 = (txn ApplicationID)
        (assert tmp%11#0) // can only call when not creating
        test_cases.reinterpret_cast.contract.Contract.test_bytes_to_biguint()
        let test_cases.reinterpret_cast.contract.Contract.__puya_arc4_router__%0#0: bool = 1u
        let tmp%0#0: bool = test_cases.reinterpret_cast.contract.Contract.__puya_arc4_router__%0#0
        goto block@12
    block@7: // bare_routing_L4
        let tmp%13#0: uint64 = (txn OnCompletion)
        goto tmp%13#0 ? block@11 : block@8
    block@8: // __algopy_default_create_L1
        let tmp%14#0: uint64 = (txn ApplicationID)
        let tmp%15#0: bool = (! tmp%14#0)
        (assert tmp%15#0) // can only call when creating
        let test_cases.reinterpret_cast.contract.Contract.__puya_arc4_router__%0#0: bool = 1u
        let tmp%0#0: bool = test_cases.reinterpret_cast.contract.Contract.__puya_arc4_router__%0#0
        goto block@12
    block@11: // after_if_else_L4
        let test_cases.reinterpret_cast.contract.Contract.__puya_arc4_router__%0#0: bool = 0u
        let tmp%0#0: bool = test_cases.reinterpret_cast.contract.Contract.__puya_arc4_router__%0#0
        goto block@12
    block@12: // after_inlined_test_cases.reinterpret_cast.contract.Contract.__puya_arc4_router___L1
        return tmp%0#0

subroutine test_cases.reinterpret_cast.contract.Contract.test_bytes_to_biguint() -> void:
    block@0: // L9
        (assert 0u)
        return 