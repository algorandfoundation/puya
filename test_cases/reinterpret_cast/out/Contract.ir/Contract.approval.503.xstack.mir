// Op                                                                      Stack (out)
// algopy.arc4.ARC4Contract.approval_program() -> uint64:
subroutine main:
    main_block@0:
        // reinterpret_cast/contract.py:5
        // @arc4.abimethod()
        int 1                                                              1
        v-store lifted%return#0
        // reinterpret_cast/contract.py:4
        // class Contract(ARC4Contract):
        txn NumAppArgs                                                     tmp%0#1
        bz main___algopy_default_create@10 ; b main_abi_routing@2

    main_abi_routing@2:
        // reinterpret_cast/contract.py:4
        // class Contract(ARC4Contract):
        txn OnCompletion                                                   tmp%2#0
        !                                                                  tmp%3#0
        assert // OnCompletion is not NoOp
        txn ApplicationID                                                  tmp%4#0
        assert
        txna ApplicationArgs 0                                             tmp%5#0
        method bytes_to_bool()bool                                         tmp%5#0,Method(bytes_to_bool()bool)
        method test_bytes_to_biguint()void                                 tmp%5#0,Method(bytes_to_bool()bool),Method(test_bytes_to_biguint()void)
        l-load tmp%5#0 2                                                   Method(bytes_to_bool()bool),Method(test_bytes_to_biguint()void),tmp%5#0
        match main_bytes_to_bool_route@4 main_test_bytes_to_biguint_route@5 ; b main_after_if_else@9 

    main_bytes_to_bool_route@4:
        // reinterpret_cast/contract.py:5
        // @arc4.abimethod()
        byte 0x151f7c7500                                                  0x151f7c7500
        log
        v-load lifted%return#0                                             lifted%return#0
        return

    main_test_bytes_to_biguint_route@5:
        // reinterpret_cast/contract.py:11
        // assert bytes_to_biguint()
        int 0                                                              0
        assert
        // reinterpret_cast/contract.py:9
        // @arc4.abimethod()
        v-load lifted%return#0                                             lifted%return#0
        return

    main_after_if_else@9:
        // reinterpret_cast/contract.py:4
        // class Contract(ARC4Contract):
        err

    main___algopy_default_create@10:
        txn OnCompletion                                                   tmp%6#0
        !                                                                  tmp%7#0
        txn ApplicationID                                                  tmp%7#0,tmp%8#0
        !                                                                  tmp%7#0,tmp%9#0
        l-load tmp%7#0 1                                                   tmp%9#0,tmp%7#0
        l-load tmp%9#0 1                                                   tmp%7#0,tmp%9#0
        &&                                                                 tmp%10#0
        assert // OnCompletion must be NoOp && can only call when creating
        v-load lifted%return#0                                             lifted%return#0
        return


