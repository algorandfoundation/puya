// Op                                                  Stack (out)
// algopy.arc4.ARC4Contract.approval_program() -> uint64:
subroutine main:
    main_block@0:
        // reinterpret_cast/contract.py:5
        // @arc4.abimethod()
        int 1                                          1
        v-store lifted%return#0
        // reinterpret_cast/contract.py:4
        // class Contract(ARC4Contract):
        txn NumAppArgs                                 tmp%0#1
        v-store tmp%0#1
        v-load tmp%0#1                                 tmp%0#1
        bz main_bare_routing@16 ; b main_abi_routing@2

    main_abi_routing@2:
        // reinterpret_cast/contract.py:4
        // class Contract(ARC4Contract):
        txn OnCompletion                               tmp%3#0
        v-store tmp%3#0
        v-load tmp%3#0                                 tmp%3#0
        !                                              tmp%4#0
        v-store tmp%4#0
        v-load tmp%4#0                                 tmp%4#0
        assert // OnCompletion is not NoOp
        txn ApplicationID                              tmp%6#0
        v-store tmp%6#0
        v-load tmp%6#0                                 tmp%6#0
        assert
        txna ApplicationArgs 0                         tmp%7#0
        v-store tmp%7#0
        method bytes_to_bool()bool                     Method(bytes_to_bool()bool)
        method test_bytes_to_biguint()void             Method(bytes_to_bool()bool),Method(test_bytes_to_biguint()void)
        v-load tmp%7#0                                 Method(bytes_to_bool()bool),Method(test_bytes_to_biguint()void),tmp%7#0
        match main_bytes_to_bool_route@6 main_test_bytes_to_biguint_route@7 ; b main_switch_case_default@8 

    main_bytes_to_bool_route@6:
        // reinterpret_cast/contract.py:5
        // @arc4.abimethod()
        byte 0x151f7c7500                              0x151f7c7500
        log
        v-load lifted%return#0                         lifted%return#0
        return

    main_test_bytes_to_biguint_route@7:
        // reinterpret_cast/contract.py:11
        // assert bytes_to_biguint()
        int 0                                          0
        assert
        // reinterpret_cast/contract.py:9
        // @arc4.abimethod()
        v-load lifted%return#0                         lifted%return#0
        return

    main_switch_case_default@8:
        err

    main_bare_routing@16:
        // reinterpret_cast/contract.py:4
        // class Contract(ARC4Contract):
        txn OnCompletion                               tmp%9#0
        v-store tmp%9#0
        v-load tmp%9#0                                 tmp%9#0
        !                                              not%tmp%9#0
        v-store not%tmp%9#0
        v-load not%tmp%9#0                             not%tmp%9#0
        assert
        txn ApplicationID                              tmp%10#0
        v-store tmp%10#0
        v-load tmp%10#0                                tmp%10#0
        !                                              tmp%11#0
        v-store tmp%11#0
        v-load tmp%11#0                                tmp%11#0
        assert // can only call when creating
        v-load lifted%return#0                         lifted%return#0
        return


