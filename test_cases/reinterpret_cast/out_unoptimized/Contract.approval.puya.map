{
  "version": 3,
  "sources": [
    "../contract.py"
  ],
  "mappings": ";;;;;;;;;;;;;;;AAGA;;AAAA;AAAA;AAAA;;;AAAA;;;AAAA;;;AAAA;;;;;;AAAA;;;;;;AAAA;;AAAA;;;;;;AAAA;;;;;;;;;AAAA;;;;;;;AAKK;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;AAAA;;;;;;AAJA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;;;;;AAAA;;AAAA;AAAA;AAAA;;;;;;AADL;;AAAA;AAAA;;AAAA;;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAY8B;AAA1B;;;;AATgB;AAAL;AAAA;AAAA;AAAP;;;;AAIO;;;AAAA;AAAA;AAAP;",
  "op_pc_offset": 0,
  "pc_events": {
    "1": {
      "subroutine": "algopy.arc4.ARC4Contract.approval_program",
      "params": {},
      "block": "main",
      "stack_in": [],
      "op": "intcblock 0 1"
    },
    "5": {
      "op": "bytecblock 0x"
    },
    "8": {
      "op": "bytec_0 // \"\"",
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "9": {
      "op": "b main_block@0"
    },
    "12": {
      "block": "main_block@0",
      "stack_in": [
        "tmp%0#0"
      ],
      "op": "b main_block@1"
    },
    "15": {
      "block": "main_block@1",
      "stack_in": [
        "tmp%0#0"
      ],
      "op": "txn NumAppArgs",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%0#1"
      ]
    },
    "17": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%0#1",
        "0"
      ]
    },
    "18": {
      "op": "!=",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0"
      ]
    },
    "19": {
      "op": "bz main_bare_routing@7",
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "22": {
      "op": "b main_abi_routing@2"
    },
    "25": {
      "block": "main_abi_routing@2",
      "stack_in": [
        "tmp%0#0"
      ],
      "op": "txna ApplicationArgs 0",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%2#0"
      ]
    },
    "28": {
      "op": "pushbytes 0x4034b731 // method \"bytes_to_bool()bool\"",
      "defined_out": [
        "Method(bytes_to_bool()bool)",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%2#0",
        "Method(bytes_to_bool()bool)"
      ]
    },
    "34": {
      "op": "pushbytes 0x7e9fd4cf // method \"test_bytes_to_biguint()void\"",
      "defined_out": [
        "Method(bytes_to_bool()bool)",
        "Method(test_bytes_to_biguint()void)",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%2#0",
        "Method(bytes_to_bool()bool)",
        "Method(test_bytes_to_biguint()void)"
      ]
    },
    "40": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%0#0",
        "Method(bytes_to_bool()bool)",
        "Method(test_bytes_to_biguint()void)",
        "tmp%2#0"
      ]
    },
    "42": {
      "op": "match main_bytes_to_bool_route@3 main_test_bytes_to_biguint_route@4",
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "48": {
      "op": "b main_switch_case_default@5"
    },
    "51": {
      "block": "main_switch_case_default@5",
      "stack_in": [
        "tmp%0#0"
      ],
      "op": "b main_switch_case_next@6"
    },
    "54": {
      "block": "main_switch_case_next@6",
      "stack_in": [
        "tmp%0#0"
      ],
      "op": "b main_after_if_else@11"
    },
    "57": {
      "block": "main_after_if_else@11",
      "stack_in": [
        "tmp%0#0"
      ],
      "op": "intc_0 // 0",
      "defined_out": [
        "test_cases.reinterpret_cast.contract.Contract.__puya_arc4_router__%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "test_cases.reinterpret_cast.contract.Contract.__puya_arc4_router__%0#0"
      ]
    },
    "58": {
      "op": "bury 1",
      "defined_out": [],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "60": {
      "op": "b main_after_inlined_test_cases.reinterpret_cast.contract.Contract.__puya_arc4_router__@12"
    },
    "63": {
      "block": "main_after_inlined_test_cases.reinterpret_cast.contract.Contract.__puya_arc4_router__@12",
      "stack_in": [
        "tmp%0#0"
      ],
      "op": "return",
      "defined_out": [
        "tmp%0#0"
      ]
    },
    "64": {
      "block": "main_test_bytes_to_biguint_route@4",
      "stack_in": [
        "tmp%0#0"
      ],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%10#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%10#0"
      ]
    },
    "66": {
      "op": "intc_0 // NoOp",
      "defined_out": [
        "NoOp",
        "tmp%10#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%10#0",
        "NoOp"
      ]
    },
    "67": {
      "op": "==",
      "defined_out": [
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%11#0"
      ]
    },
    "68": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "69": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%12#0"
      ]
    },
    "71": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%12#0",
        "0"
      ]
    },
    "72": {
      "op": "!=",
      "defined_out": [
        "tmp%13#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%13#0"
      ]
    },
    "73": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "74": {
      "callsub": "test_cases.reinterpret_cast.contract.Contract.test_bytes_to_biguint",
      "op": "callsub test_bytes_to_biguint"
    },
    "77": {
      "op": "intc_1 // 1",
      "defined_out": [
        "test_cases.reinterpret_cast.contract.Contract.__puya_arc4_router__%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "test_cases.reinterpret_cast.contract.Contract.__puya_arc4_router__%0#0"
      ]
    },
    "78": {
      "op": "bury 1",
      "defined_out": [],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "80": {
      "op": "b main_after_inlined_test_cases.reinterpret_cast.contract.Contract.__puya_arc4_router__@12"
    },
    "83": {
      "block": "main_bytes_to_bool_route@3",
      "stack_in": [
        "tmp%0#0"
      ],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%3#0"
      ]
    },
    "85": {
      "op": "intc_0 // NoOp",
      "defined_out": [
        "NoOp",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%3#0",
        "NoOp"
      ]
    },
    "86": {
      "op": "==",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%4#0"
      ]
    },
    "87": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "88": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%5#0"
      ]
    },
    "90": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%5#0",
        "0"
      ]
    },
    "91": {
      "op": "!=",
      "defined_out": [
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%6#0"
      ]
    },
    "92": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "93": {
      "callsub": "test_cases.reinterpret_cast.contract.Contract.bytes_to_bool",
      "op": "callsub bytes_to_bool",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%7#0"
      ]
    },
    "96": {
      "op": "pushbytes 0x00",
      "defined_out": [
        "0x00",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%7#0",
        "0x00"
      ]
    },
    "99": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%0#0",
        "tmp%7#0",
        "0x00",
        "0"
      ]
    },
    "100": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%0#0",
        "0x00",
        "0",
        "tmp%7#0"
      ]
    },
    "102": {
      "op": "setbit",
      "defined_out": [
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%8#0"
      ]
    },
    "103": {
      "op": "pushbytes 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%8#0",
        "0x151f7c75"
      ]
    },
    "109": {
      "op": "uncover 1",
      "stack_out": [
        "tmp%0#0",
        "0x151f7c75",
        "tmp%8#0"
      ]
    },
    "111": {
      "op": "concat",
      "defined_out": [
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%9#0"
      ]
    },
    "112": {
      "op": "log",
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "113": {
      "op": "intc_1 // 1",
      "defined_out": [
        "test_cases.reinterpret_cast.contract.Contract.__puya_arc4_router__%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "test_cases.reinterpret_cast.contract.Contract.__puya_arc4_router__%0#0"
      ]
    },
    "114": {
      "op": "bury 1",
      "defined_out": [],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "116": {
      "op": "b main_after_inlined_test_cases.reinterpret_cast.contract.Contract.__puya_arc4_router__@12"
    },
    "119": {
      "block": "main_bare_routing@7",
      "stack_in": [
        "tmp%0#0"
      ],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%14#0"
      ]
    },
    "121": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%14#0",
        "0"
      ]
    },
    "122": {
      "op": "uncover 1",
      "stack_out": [
        "tmp%0#0",
        "0",
        "tmp%14#0"
      ]
    },
    "124": {
      "op": "match main___algopy_default_create@8",
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "128": {
      "op": "b main_switch_case_default@9"
    },
    "131": {
      "block": "main_switch_case_default@9",
      "stack_in": [
        "tmp%0#0"
      ],
      "op": "b main_switch_case_next@10"
    },
    "134": {
      "block": "main_switch_case_next@10",
      "stack_in": [
        "tmp%0#0"
      ],
      "op": "b main_after_if_else@11"
    },
    "137": {
      "block": "main___algopy_default_create@8",
      "stack_in": [
        "tmp%0#0"
      ],
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%15#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%15#0"
      ]
    },
    "139": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%15#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%15#0",
        "0"
      ]
    },
    "140": {
      "op": "==",
      "defined_out": [
        "tmp%16#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%16#0"
      ]
    },
    "141": {
      "error": "can only call when creating",
      "op": "assert // can only call when creating",
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "142": {
      "op": "b main_block@13"
    },
    "145": {
      "block": "main_block@13",
      "stack_in": [
        "tmp%0#0"
      ],
      "op": "b main_after_inlined_test_cases.reinterpret_cast.contract.Contract.__algopy_default_create@14"
    },
    "148": {
      "block": "main_after_inlined_test_cases.reinterpret_cast.contract.Contract.__algopy_default_create@14",
      "stack_in": [
        "tmp%0#0"
      ],
      "op": "intc_1 // 1",
      "defined_out": [
        "test_cases.reinterpret_cast.contract.Contract.__puya_arc4_router__%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "test_cases.reinterpret_cast.contract.Contract.__puya_arc4_router__%0#0"
      ]
    },
    "149": {
      "op": "bury 1",
      "defined_out": [],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "151": {
      "op": "b main_after_inlined_test_cases.reinterpret_cast.contract.Contract.__puya_arc4_router__@12"
    },
    "154": {
      "subroutine": "test_cases.reinterpret_cast.contract.bytes_to_biguint",
      "params": {},
      "block": "bytes_to_biguint",
      "stack_in": [],
      "op": "b bytes_to_biguint_block@0"
    },
    "157": {
      "block": "bytes_to_biguint_block@0",
      "stack_in": [],
      "op": "bytec_0 // 0x",
      "defined_out": [
        "0x"
      ],
      "stack_out": [
        "0x"
      ]
    },
    "158": {
      "retsub": true,
      "op": "retsub"
    },
    "159": {
      "subroutine": "test_cases.reinterpret_cast.contract.Contract.bytes_to_bool",
      "params": {},
      "block": "bytes_to_bool",
      "stack_in": [],
      "op": "b bytes_to_bool_block@0"
    },
    "162": {
      "block": "bytes_to_bool_block@0",
      "stack_in": [],
      "op": "bytec_0 // 0x",
      "defined_out": [
        "0x"
      ],
      "stack_out": [
        "0x"
      ]
    },
    "163": {
      "op": "len",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "164": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "0"
      ]
    },
    "165": {
      "op": "!=",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "166": {
      "retsub": true,
      "op": "retsub"
    },
    "167": {
      "subroutine": "test_cases.reinterpret_cast.contract.Contract.test_bytes_to_biguint",
      "params": {},
      "block": "test_bytes_to_biguint",
      "stack_in": [],
      "op": "b test_bytes_to_biguint_block@0"
    },
    "170": {
      "block": "test_bytes_to_biguint_block@0",
      "stack_in": [],
      "callsub": "test_cases.reinterpret_cast.contract.bytes_to_biguint",
      "op": "callsub bytes_to_biguint",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "173": {
      "op": "bytec_0 // 0x",
      "defined_out": [
        "0x",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "0x"
      ]
    },
    "174": {
      "op": "b!=",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "175": {
      "op": "assert",
      "stack_out": []
    },
    "176": {
      "retsub": true,
      "op": "retsub"
    }
  }
}