// Op                                                  //                                                   Op Description                                Stack (out)                                                 X stack                                     Source code                                      Source line

#pragma version 10

// test_cases.with_reentrancy.contract.WithReentrancy.approval_program() -> uint64:
main_block@0:
    int 5                                              //                                                                                                 5                                                                                                       UInt64(5)                                        with_reentrancy/contract.py:8
    callsub fibonacci                                  //                                                                                                 {fibonacci}                                                                                             fibonacci(UInt64(5))                             with_reentrancy/contract.py:8
    //                                                 virtual: store tmp%0#0 to l-stack (no copy)          tmp%0#0                                                                                                   fibonacci(UInt64(5))                        with_reentrancy/contract.py:8
    //                                                 virtual: load tmp%0#0 from l-stack (no copy)         tmp%0#0                                                                                                   op.itob(fibonacci(UInt64(5)))               with_reentrancy/contract.py:8
    itob                                               //                                                                                                 {itob}                                                                                                  op.itob(fibonacci(UInt64(5)))                    with_reentrancy/contract.py:8
    //                                                 virtual: store tmp%1#0 to l-stack (no copy)          tmp%1#0                                                                                                   op.itob(fibonacci(UInt64(5)))               with_reentrancy/contract.py:8
    //                                                 virtual: load tmp%1#0 from l-stack (no copy)         tmp%1#0                                                                                                   log(op.itob(fibonacci(UInt64(5))))          with_reentrancy/contract.py:8
    log                                                //                                                                                                                                                                                                         log(op.itob(fibonacci(UInt64(5))))               with_reentrancy/contract.py:8
    int 2                                              //                                                                                                 2                                                                                                       UInt64(2)                                        with_reentrancy/contract.py:9
    callsub silly                                      //                                                                                                 {silly}                                                                                                 silly(UInt64(2))                                 with_reentrancy/contract.py:9
    pop                                                //
    int 1                                              //                                                                                                 1                                                                                                       True                                             with_reentrancy/contract.py:10
    return                                             //                                                                                                                                                                                                         return True                                      with_reentrancy/contract.py:10


// test_cases.with_reentrancy.contract.fibonacci(n: uint64) -> uint64:
fibonacci:
    proto 1 1                                          //                                                                                                 (洧도) n#0 |                                                                                               @subroutine\ndef fibonacci(n: UInt64) -> UInt64: with_reentrancy/contract.py:25-26

fibonacci_block@0:
    frame_dig -1                                       //                                                   load n#0 from parameters                      (洧도) n#0 | n#0                                                                                           n <= 1:                                          with_reentrancy/contract.py:27
    int 1                                              //                                                                                                 (洧도) n#0 | n#0,1                                                                                         1                                                with_reentrancy/contract.py:27
    <=                                                 //                                                                                                 (洧도) n#0 | {<=}                                                                                          n <= 1:                                          with_reentrancy/contract.py:27
    //                                                 virtual: store tmp%0#0 to l-stack (no copy)          (洧도) n#0 | tmp%0#0                                                                                         n <= 1:                                     with_reentrancy/contract.py:27
    //                                                 virtual: load tmp%0#0 from l-stack (no copy)         (洧도) n#0 | tmp%0#0                                                                                         if n <= 1:                                  with_reentrancy/contract.py:27
    bz fibonacci_after_if_else@2                       //                                                                                                 (洧도) n#0 |                                                                                               if n <= 1:                                       with_reentrancy/contract.py:27
    // Implicit fall through to fibonacci_if_body@1    //                                                                                                 (洧도) n#0 |                                                                                               if n <= 1:                                       with_reentrancy/contract.py:27

fibonacci_if_body@1:
    frame_dig -1                                       //                                                   load n#0 from parameters                      (洧도) n#0 | n#0                                                                                           return n                                         with_reentrancy/contract.py:28
    retsub                                             //                                                                                                 n#0                                                                                                     return n                                         with_reentrancy/contract.py:28

fibonacci_after_if_else@2:
    frame_dig -1                                       //                                                   load n#0 from parameters                      (洧도) n#0 | n#0                                                                                           n - 1                                            with_reentrancy/contract.py:29
    int 1                                              //                                                                                                 (洧도) n#0 | n#0,1                                                                                         1                                                with_reentrancy/contract.py:29
    -                                                  //                                                                                                 (洧도) n#0 | {-}                                                                                           n - 1                                            with_reentrancy/contract.py:29
    //                                                 virtual: store tmp%1#0 to l-stack (no copy)          (洧도) n#0 | tmp%1#0                                                                                         n - 1                                       with_reentrancy/contract.py:29
    //                                                 virtual: load tmp%1#0 from l-stack (no copy)         (洧도) n#0 | tmp%1#0                                                                                         fibonacci(n - 1)                            with_reentrancy/contract.py:29
    callsub fibonacci                                  //                                                                                                 (洧도) n#0 | {fibonacci}                                                                                   fibonacci(n - 1)                                 with_reentrancy/contract.py:29
    //                                                 virtual: store tmp%2#0 to l-stack (no copy)          (洧도) n#0 | tmp%2#0                                                                                         fibonacci(n - 1)                            with_reentrancy/contract.py:29
    frame_dig -1                                       //                                                   load n#0 from parameters                      (洧도) n#0 | tmp%2#0,n#0                                                                                   n - 2                                            with_reentrancy/contract.py:29
    int 2                                              //                                                                                                 (洧도) n#0 | tmp%2#0,n#0,2                                                                                 2                                                with_reentrancy/contract.py:29
    -                                                  //                                                                                                 (洧도) n#0 | tmp%2#0,{-}                                                                                   n - 2                                            with_reentrancy/contract.py:29
    //                                                 virtual: store tmp%3#0 to l-stack (no copy)          (洧도) n#0 | tmp%2#0,tmp%3#0                                                                                 n - 2                                       with_reentrancy/contract.py:29
    //                                                 virtual: load tmp%3#0 from l-stack (no copy)         (洧도) n#0 | tmp%2#0,tmp%3#0                                                                                 fibonacci(n - 2)                            with_reentrancy/contract.py:29
    callsub fibonacci                                  //                                                                                                 (洧도) n#0 | tmp%2#0,{fibonacci}                                                                           fibonacci(n - 2)                                 with_reentrancy/contract.py:29
    //                                                 virtual: store tmp%4#0 to l-stack (no copy)          (洧도) n#0 | tmp%2#0,tmp%4#0                                                                                 fibonacci(n - 2)                            with_reentrancy/contract.py:29
    //                                                 virtual: load tmp%2#0 from l-stack (no copy)         (洧도) n#0 | tmp%4#0,tmp%2#0                                                                                 fibonacci(n - 1) + fibonacci(n - 2)         with_reentrancy/contract.py:29
    //                                                 virtual: load tmp%4#0 from l-stack (no copy)         (洧도) n#0 | tmp%2#0,tmp%4#0                                                                                 fibonacci(n - 1) + fibonacci(n - 2)         with_reentrancy/contract.py:29
    +                                                  //                                                                                                 (洧도) n#0 | {+}                                                                                           fibonacci(n - 1) + fibonacci(n - 2)              with_reentrancy/contract.py:29
    //                                                 virtual: store tmp%5#0 to l-stack (no copy)          (洧도) n#0 | tmp%5#0                                                                                         fibonacci(n - 1) + fibonacci(n - 2)         with_reentrancy/contract.py:29
    //                                                 virtual: load tmp%5#0 from l-stack (no copy)         (洧도) n#0 | tmp%5#0                                                                                         return fibonacci(n - 1) + fibonacci(n - 2)  with_reentrancy/contract.py:29
    retsub                                             //                                                                                                 tmp%5#0                                                                                                 return fibonacci(n - 1) + fibonacci(n - 2)       with_reentrancy/contract.py:29


// test_cases.with_reentrancy.contract.silly(x: uint64) -> uint64:
silly:
    proto 1 1                                          //                                                                                                 (洧도) x#0 |                                                                                               @subroutine\ndef silly(x: UInt64) -> UInt64:     with_reentrancy/contract.py:32-33

silly_block@0:
    frame_dig -1                                       //                                                   load x#0 from parameters                      (洧도) x#0 | x#0                                                                                           x = x + 1                                        with_reentrancy/contract.py:34
    int 1                                              //                                                                                                 (洧도) x#0 | x#0,1                                                                                         1                                                with_reentrancy/contract.py:34
    +                                                  //                                                                                                 (洧도) x#0 | {+}                                                                                           x + 1                                            with_reentrancy/contract.py:34
    dup
    frame_bury -1                                      //                                                   store x#0 to parameters (copy)                (洧도) x#0 | x#0                                                                                           x = x + 1                                        with_reentrancy/contract.py:34
    callsub silly2                                     //                                                                                                 (洧도) x#0 | {silly2}                                                                                      silly2(x)                                        with_reentrancy/contract.py:35
    //                                                 virtual: store result#0 to l-stack (no copy)         (洧도) x#0 | result#0                                                                                        result = silly2(x)                          with_reentrancy/contract.py:35
    frame_dig -1                                       //                                                   load x#0 from parameters                      (洧도) x#0 | result#0,x#0                                                                                  itoa(x)                                          with_reentrancy/contract.py:36
    callsub itoa                                       //                                                                                                 (洧도) x#0 | result#0,{itoa}                                                                               itoa(x)                                          with_reentrancy/contract.py:36
    //                                                 virtual: store tmp%0#0 to l-stack (no copy)          (洧도) x#0 | result#0,tmp%0#0                                                                                itoa(x)                                     with_reentrancy/contract.py:36
    byte "silly = "                                    //                                                                                                 (洧도) x#0 | result#0,tmp%0#0,"silly = "                                                                   b"silly = "                                      with_reentrancy/contract.py:36
    uncover 1                                          //                                                   load tmp%0#0 from l-stack (no copy)           (洧도) x#0 | result#0,"silly = ",tmp%0#0                                                                   Bytes(b"silly = ") + itoa(x)                     with_reentrancy/contract.py:36
    concat                                             //                                                                                                 (洧도) x#0 | result#0,{concat}                                                                             Bytes(b"silly = ") + itoa(x)                     with_reentrancy/contract.py:36
    //                                                 virtual: store tmp%1#0 to l-stack (no copy)          (洧도) x#0 | result#0,tmp%1#0                                                                                Bytes(b"silly = ") + itoa(x)                with_reentrancy/contract.py:36
    //                                                 virtual: load tmp%1#0 from l-stack (no copy)         (洧도) x#0 | result#0,tmp%1#0                                                                                log(Bytes(b"silly = ") + itoa(x))           with_reentrancy/contract.py:36
    log                                                //                                                                                                 (洧도) x#0 | result#0                                                                                      log(Bytes(b"silly = ") + itoa(x))                with_reentrancy/contract.py:36
    //                                                 virtual: load result#0 from l-stack (no copy)        (洧도) x#0 | result#0                                                                                        return result                               with_reentrancy/contract.py:37
    retsub                                             //                                                                                                 result#0                                                                                                return result                                    with_reentrancy/contract.py:37


// test_cases.with_reentrancy.contract.silly2(x: uint64) -> uint64:
silly2:
    proto 1 1                                          //                                                                                                 (洧도) x#0 |                                                                                               @subroutine\ndef silly2(x: UInt64) -> UInt64:    with_reentrancy/contract.py:40-41

silly2_block@0:
    frame_dig -1                                       //                                                   load x#0 from parameters                      (洧도) x#0 | x#0                                                                                           x = x + 2                                        with_reentrancy/contract.py:42
    int 2                                              //                                                                                                 (洧도) x#0 | x#0,2                                                                                         2                                                with_reentrancy/contract.py:42
    +                                                  //                                                                                                 (洧도) x#0 | {+}                                                                                           x + 2                                            with_reentrancy/contract.py:42
    dup
    frame_bury -1                                      //                                                   store x#0 to parameters (copy)                (洧도) x#0 | x#0                                                                                           x = x + 2                                        with_reentrancy/contract.py:42
    callsub silly3                                     //                                                                                                 (洧도) x#0 | {silly3}                                                                                      silly3(x)                                        with_reentrancy/contract.py:43
    //                                                 virtual: store result#0 to l-stack (no copy)         (洧도) x#0 | result#0                                                                                        result = silly3(x)                          with_reentrancy/contract.py:43
    frame_dig -1                                       //                                                   load x#0 from parameters                      (洧도) x#0 | result#0,x#0                                                                                  itoa(x)                                          with_reentrancy/contract.py:44
    callsub itoa                                       //                                                                                                 (洧도) x#0 | result#0,{itoa}                                                                               itoa(x)                                          with_reentrancy/contract.py:44
    //                                                 virtual: store tmp%0#0 to l-stack (no copy)          (洧도) x#0 | result#0,tmp%0#0                                                                                itoa(x)                                     with_reentrancy/contract.py:44
    byte "silly2 = "                                   //                                                                                                 (洧도) x#0 | result#0,tmp%0#0,"silly2 = "                                                                  b"silly2 = "                                     with_reentrancy/contract.py:44
    uncover 1                                          //                                                   load tmp%0#0 from l-stack (no copy)           (洧도) x#0 | result#0,"silly2 = ",tmp%0#0                                                                  Bytes(b"silly2 = ") + itoa(x)                    with_reentrancy/contract.py:44
    concat                                             //                                                                                                 (洧도) x#0 | result#0,{concat}                                                                             Bytes(b"silly2 = ") + itoa(x)                    with_reentrancy/contract.py:44
    //                                                 virtual: store tmp%1#0 to l-stack (no copy)          (洧도) x#0 | result#0,tmp%1#0                                                                                Bytes(b"silly2 = ") + itoa(x)               with_reentrancy/contract.py:44
    //                                                 virtual: load tmp%1#0 from l-stack (no copy)         (洧도) x#0 | result#0,tmp%1#0                                                                                log(Bytes(b"silly2 = ") + itoa(x))          with_reentrancy/contract.py:44
    log                                                //                                                                                                 (洧도) x#0 | result#0                                                                                      log(Bytes(b"silly2 = ") + itoa(x))               with_reentrancy/contract.py:44
    //                                                 virtual: load result#0 from l-stack (no copy)        (洧도) x#0 | result#0                                                                                        return result                               with_reentrancy/contract.py:45
    retsub                                             //                                                                                                 result#0                                                                                                return result                                    with_reentrancy/contract.py:45


// test_cases.with_reentrancy.contract.silly3(x: uint64) -> uint64:
silly3:
    proto 1 1                                          //                                                                                                 (洧도) x#0 |                                                                                               @subroutine\ndef silly3(x: UInt64) -> UInt64:    with_reentrancy/contract.py:48-49
    byte ""                                            //                                                   allocate 1 to stack                           (洧도) x#0 | (洧뎽) result#0 |

silly3_block@0:
    frame_dig -1                                       //                                                   load x#0 from parameters                      (洧도) x#0 | (洧뎽) result#0 | x#0                                                                            x % 2                                            with_reentrancy/contract.py:50
    int 2                                              //                                                                                                 (洧도) x#0 | (洧뎽) result#0 | x#0,2                                                                          2                                                with_reentrancy/contract.py:50
    %                                                  //                                                                                                 (洧도) x#0 | (洧뎽) result#0 | {%}                                                                            x % 2                                            with_reentrancy/contract.py:50
    dup                                                //                                                   store tmp%0#0 to l-stack (copy)               (洧도) x#0 | (洧뎽) result#0 | tmp%0#0,tmp%0#0                                                                x % 2                                            with_reentrancy/contract.py:50
    cover 1                                            //                                                   store tmp%0#0 to f-stack                      (洧도) x#0 | (洧뎽) result#0,tmp%0#0 | tmp%0#0                                                                x % 2                                            with_reentrancy/contract.py:50
    frame_dig -1                                       //                                                   load x#0 from parameters                      (洧도) x#0 | (洧뎽) result#0,tmp%0#0 | tmp%0#0,x#0                                                            a = x + 2                                        with_reentrancy/contract.py:51
    int 2                                              //                                                                                                 (洧도) x#0 | (洧뎽) result#0,tmp%0#0 | tmp%0#0,x#0,2                                                          2                                                with_reentrancy/contract.py:51
    +                                                  //                                                                                                 (洧도) x#0 | (洧뎽) result#0,tmp%0#0 | tmp%0#0,{+}                                                            x + 2                                            with_reentrancy/contract.py:51
    cover 1                                            //                                                   store a#0 to f-stack                          (洧도) x#0 | (洧뎽) result#0,tmp%0#0,a#0 | tmp%0#0                                                            a = x + 2                                        with_reentrancy/contract.py:51
    //                                                 virtual: load tmp%0#0 from l-stack (no copy)         (洧도) x#0 | (洧뎽) result#0,tmp%0#0,a#0 | tmp%0#0                                                              if is_even:                                 with_reentrancy/contract.py:52
    bnz silly3_else_body@2                             //                                                                                                 (洧도) x#0 | (洧뎽) result#0,tmp%0#0,a#0 |                                                                    if is_even:                                      with_reentrancy/contract.py:52
    // Implicit fall through to silly3_if_body@1       //                                                                                                 (洧도) x#0 | (洧뎽) result#0,tmp%0#0,a#0 |                                                                    if is_even:                                      with_reentrancy/contract.py:52

silly3_if_body@1:
    frame_dig 2                                        //                                                   load a#0 from f-stack                         (洧도) x#0 | (洧뎽) result#0,tmp%0#0,a#0 | a#0                                                                result = a * 2                                   with_reentrancy/contract.py:53
    int 2                                              //                                                                                                 (洧도) x#0 | (洧뎽) result#0,tmp%0#0,a#0 | a#0,2                                                              2                                                with_reentrancy/contract.py:53
    *                                                  //                                                                                                 (洧도) x#0 | (洧뎽) result#0,tmp%0#0,a#0 | {*}                                                                a * 2                                            with_reentrancy/contract.py:53
    dup                                                //                                                   store result#0 to l-stack (copy)              (洧도) x#0 | (洧뎽) result#0,tmp%0#0,a#0 | result#0,result#0                                                  result = a * 2                                   with_reentrancy/contract.py:53
    frame_bury 0                                       //                                                   store result#0 to f-stack                     (洧도) x#0 | (洧뎽) result#0,tmp%0#0,a#0 | result#0                                                           result = a * 2                                   with_reentrancy/contract.py:53
    //                                                 virtual: load result#0 from l-stack (no copy)        (洧도) x#0 | (洧뎽) result#0,tmp%0#0,a#0 | result#0                                                             result // 2                                 with_reentrancy/contract.py:54
    int 2                                              //                                                                                                 (洧도) x#0 | (洧뎽) result#0,tmp%0#0,a#0 | result#0,2                                                         2                                                with_reentrancy/contract.py:54
    /                                                  //                                                                                                 (洧도) x#0 | (洧뎽) result#0,tmp%0#0,a#0 | {/}                                                                result // 2                                      with_reentrancy/contract.py:54
    //                                                 virtual: store tmp%1#0 to l-stack (no copy)          (洧도) x#0 | (洧뎽) result#0,tmp%0#0,a#0 | tmp%1#0                                                              result // 2                                 with_reentrancy/contract.py:54
    //                                                 virtual: load tmp%1#0 from l-stack (no copy)         (洧도) x#0 | (洧뎽) result#0,tmp%0#0,a#0 | tmp%1#0                                                              a = result // 2 - 2                         with_reentrancy/contract.py:54
    int 2                                              //                                                                                                 (洧도) x#0 | (洧뎽) result#0,tmp%0#0,a#0 | tmp%1#0,2                                                          2                                                with_reentrancy/contract.py:54
    -                                                  //                                                                                                 (洧도) x#0 | (洧뎽) result#0,tmp%0#0,a#0 | {-}                                                                result // 2 - 2                                  with_reentrancy/contract.py:54
    frame_bury 2                                       //                                                   store a#0 to f-stack                          (洧도) x#0 | (洧뎽) result#0,tmp%0#0,a#0 |                                                                    a = result // 2 - 2                              with_reentrancy/contract.py:54
    b silly3_after_if_else@3                           //                                                                                                 (洧도) x#0 | (洧뎽) result#0,tmp%0#0,a#0 |

silly3_else_body@2:
    frame_dig -1                                       //                                                   load x#0 from parameters                      (洧도) x#0 | (洧뎽) result#0,tmp%0#0,a#0 | x#0                                                                result = silly(x)                                with_reentrancy/contract.py:56
    callsub silly                                      //                                                                                                 (洧도) x#0 | (洧뎽) result#0,tmp%0#0,a#0 | {silly}                                                            silly(x)                                         with_reentrancy/contract.py:56
    frame_bury 0                                       //                                                   store result#0 to f-stack                     (洧도) x#0 | (洧뎽) result#0,tmp%0#0,a#0 |                                                                    result = silly(x)                                with_reentrancy/contract.py:56
    // Implicit fall through to silly3_after_if_else@3 //                                                                                                 (洧도) x#0 | (洧뎽) result#0,tmp%0#0,a#0 |

silly3_after_if_else@3:
    frame_dig 1                                        //                                                   load tmp%0#0 from f-stack                     (洧도) x#0 | (洧뎽) result#0,tmp%0#0,a#0 | tmp%0#0                                                            if is_even:                                      with_reentrancy/contract.py:58
    bnz silly3_after_if_else@5                         //                                                                                                 (洧도) x#0 | (洧뎽) result#0,tmp%0#0,a#0 |                                                                    if is_even:                                      with_reentrancy/contract.py:58
    // Implicit fall through to silly3_if_body@4       //                                                                                                 (洧도) x#0 | (洧뎽) result#0,tmp%0#0,a#0 |                                                                    if is_even:                                      with_reentrancy/contract.py:58

silly3_if_body@4:
    frame_dig 2                                        //                                                   load a#0 from f-stack                         (洧도) x#0 | (洧뎽) result#0,tmp%0#0,a#0 | a#0
    frame_bury 0                                       //                                                   store result#0 to f-stack                     (洧도) x#0 | (洧뎽) result#0,tmp%0#0,a#0 |
    // Implicit fall through to silly3_after_if_else@5 //                                                                                                 (洧도) x#0 | (洧뎽) result#0,tmp%0#0,a#0 |

silly3_after_if_else@5:
    frame_dig -1                                       //                                                   load x#0 from parameters                      (洧도) x#0 | (洧뎽) result#0,tmp%0#0,a#0 | x#0                                                                itoa(x)                                          with_reentrancy/contract.py:60
    callsub itoa                                       //                                                                                                 (洧도) x#0 | (洧뎽) result#0,tmp%0#0,a#0 | {itoa}                                                             itoa(x)                                          with_reentrancy/contract.py:60
    //                                                 virtual: store tmp%2#0 to l-stack (no copy)          (洧도) x#0 | (洧뎽) result#0,tmp%0#0,a#0 | tmp%2#0                                                              itoa(x)                                     with_reentrancy/contract.py:60
    byte "silly3 = "                                   //                                                                                                 (洧도) x#0 | (洧뎽) result#0,tmp%0#0,a#0 | tmp%2#0,"silly3 = "                                                b"silly3 = "                                     with_reentrancy/contract.py:60
    uncover 1                                          //                                                   load tmp%2#0 from l-stack (no copy)           (洧도) x#0 | (洧뎽) result#0,tmp%0#0,a#0 | "silly3 = ",tmp%2#0                                                Bytes(b"silly3 = ") + itoa(x)                    with_reentrancy/contract.py:60
    concat                                             //                                                                                                 (洧도) x#0 | (洧뎽) result#0,tmp%0#0,a#0 | {concat}                                                           Bytes(b"silly3 = ") + itoa(x)                    with_reentrancy/contract.py:60
    //                                                 virtual: store tmp%3#0 to l-stack (no copy)          (洧도) x#0 | (洧뎽) result#0,tmp%0#0,a#0 | tmp%3#0                                                              Bytes(b"silly3 = ") + itoa(x)               with_reentrancy/contract.py:60
    //                                                 virtual: load tmp%3#0 from l-stack (no copy)         (洧도) x#0 | (洧뎽) result#0,tmp%0#0,a#0 | tmp%3#0                                                              log(Bytes(b"silly3 = ") + itoa(x))          with_reentrancy/contract.py:60
    log                                                //                                                                                                 (洧도) x#0 | (洧뎽) result#0,tmp%0#0,a#0 |                                                                    log(Bytes(b"silly3 = ") + itoa(x))               with_reentrancy/contract.py:60
    frame_dig 0                                        //                                                   load result#0 from f-stack                    (洧도) x#0 | (洧뎽) result#0,tmp%0#0,a#0 | result#0                                                           return result                                    with_reentrancy/contract.py:61
    frame_bury 0
    retsub                                             //                                                                                                 result#0                                                                                                return result                                    with_reentrancy/contract.py:61


// test_cases.with_reentrancy.contract.itoa(i: uint64) -> bytes:
itoa:
    proto 1 1                                          //                                                                                                 (洧도) i#0 |                                                                                               @subroutine\ndef itoa(i: UInt64) -> Bytes:       with_reentrancy/contract.py:16-17

itoa_block@0:
    frame_dig -1                                       //                                                   load i#0 from parameters                      (洧도) i#0 | i#0                                                                                           i < radix:                                       with_reentrancy/contract.py:20
    int 10                                             //                                                                                                 (洧도) i#0 | i#0,10                                                                                        digits.length                                    with_reentrancy/contract.py:19
    <                                                  //                                                                                                 (洧도) i#0 | {<}                                                                                           i < radix:                                       with_reentrancy/contract.py:20
    //                                                 virtual: store tmp%0#0 to l-stack (no copy)          (洧도) i#0 | tmp%0#0                                                                                         i < radix:                                  with_reentrancy/contract.py:20
    //                                                 virtual: load tmp%0#0 from l-stack (no copy)         (洧도) i#0 | tmp%0#0                                                                                         if i < radix:                               with_reentrancy/contract.py:20
    bz itoa_after_if_else@2                            //                                                                                                 (洧도) i#0 |                                                                                               if i < radix:                                    with_reentrancy/contract.py:20
    // Implicit fall through to itoa_if_body@1         //                                                                                                 (洧도) i#0 |                                                                                               if i < radix:                                    with_reentrancy/contract.py:20

itoa_if_body@1:
    frame_dig -1                                       //                                                   load i#0 from parameters                      (洧도) i#0 | i#0                                                                                           digits[i]                                        with_reentrancy/contract.py:21
    int 1                                              //                                                                                                 (洧도) i#0 | i#0,1                                                                                         digits[i]                                        with_reentrancy/contract.py:21
    +                                                  //                                                                                                 (洧도) i#0 | {+}                                                                                           digits[i]                                        with_reentrancy/contract.py:21
    //                                                 virtual: store index_plus_1%0#0 to l-stack (no copy) (洧도) i#0 | index_plus_1%0#0                                                                                digits[i]                                   with_reentrancy/contract.py:21
    byte "0123456789"                                  //                                                                                                 (洧도) i#0 | index_plus_1%0#0,"0123456789"                                                                 b"0123456789"                                    with_reentrancy/contract.py:18
    frame_dig -1                                       //                                                   load i#0 from parameters                      (洧도) i#0 | index_plus_1%0#0,"0123456789",i#0                                                             digits[i]                                        with_reentrancy/contract.py:21
    uncover 2                                          //                                                   load index_plus_1%0#0 from l-stack (no copy)  (洧도) i#0 | "0123456789",i#0,index_plus_1%0#0                                                             digits[i]                                        with_reentrancy/contract.py:21
    substring3                                         //                                                                                                 (洧도) i#0 | {substring3}                                                                                  digits[i]                                        with_reentrancy/contract.py:21
    //                                                 virtual: store tmp%1#0 to l-stack (no copy)          (洧도) i#0 | tmp%1#0                                                                                         digits[i]                                   with_reentrancy/contract.py:21
    //                                                 virtual: load tmp%1#0 from l-stack (no copy)         (洧도) i#0 | tmp%1#0                                                                                         return digits[i]                            with_reentrancy/contract.py:21
    retsub                                             //                                                                                                 tmp%1#0                                                                                                 return digits[i]                                 with_reentrancy/contract.py:21

itoa_after_if_else@2:
    frame_dig -1                                       //                                                   load i#0 from parameters                      (洧도) i#0 | i#0                                                                                           i // radix                                       with_reentrancy/contract.py:22
    int 10                                             //                                                                                                 (洧도) i#0 | i#0,10                                                                                        digits.length                                    with_reentrancy/contract.py:19
    /                                                  //                                                                                                 (洧도) i#0 | {/}                                                                                           i // radix                                       with_reentrancy/contract.py:22
    //                                                 virtual: store tmp%2#0 to l-stack (no copy)          (洧도) i#0 | tmp%2#0                                                                                         i // radix                                  with_reentrancy/contract.py:22
    //                                                 virtual: load tmp%2#0 from l-stack (no copy)         (洧도) i#0 | tmp%2#0                                                                                         itoa(i // radix)                            with_reentrancy/contract.py:22
    callsub itoa                                       //                                                                                                 (洧도) i#0 | {itoa}                                                                                        itoa(i // radix)                                 with_reentrancy/contract.py:22
    //                                                 virtual: store tmp%3#0 to l-stack (no copy)          (洧도) i#0 | tmp%3#0                                                                                         itoa(i // radix)                            with_reentrancy/contract.py:22
    frame_dig -1                                       //                                                   load i#0 from parameters                      (洧도) i#0 | tmp%3#0,i#0                                                                                   i % radix                                        with_reentrancy/contract.py:22
    int 10                                             //                                                                                                 (洧도) i#0 | tmp%3#0,i#0,10                                                                                digits.length                                    with_reentrancy/contract.py:19
    %                                                  //                                                                                                 (洧도) i#0 | tmp%3#0,{%}                                                                                   i % radix                                        with_reentrancy/contract.py:22
    //                                                 virtual: store tmp%4#0 to l-stack (no copy)          (洧도) i#0 | tmp%3#0,tmp%4#0                                                                                 i % radix                                   with_reentrancy/contract.py:22
    dup                                                //                                                   load tmp%4#0 from l-stack (copy)              (洧도) i#0 | tmp%3#0,tmp%4#0,tmp%4#0                                                                       digits[i % radix]                                with_reentrancy/contract.py:22
    int 1                                              //                                                                                                 (洧도) i#0 | tmp%3#0,tmp%4#0,tmp%4#0,1                                                                     digits[i % radix]                                with_reentrancy/contract.py:22
    +                                                  //                                                                                                 (洧도) i#0 | tmp%3#0,tmp%4#0,{+}                                                                           digits[i % radix]                                with_reentrancy/contract.py:22
    //                                                 virtual: store index_plus_1%1#0 to l-stack (no copy) (洧도) i#0 | tmp%3#0,tmp%4#0,index_plus_1%1#0                                                                digits[i % radix]                           with_reentrancy/contract.py:22
    byte "0123456789"                                  //                                                                                                 (洧도) i#0 | tmp%3#0,tmp%4#0,index_plus_1%1#0,"0123456789"                                                 b"0123456789"                                    with_reentrancy/contract.py:18
    uncover 2                                          //                                                   load tmp%4#0 from l-stack (no copy)           (洧도) i#0 | tmp%3#0,index_plus_1%1#0,"0123456789",tmp%4#0                                                 digits[i % radix]                                with_reentrancy/contract.py:22
    uncover 2                                          //                                                   load index_plus_1%1#0 from l-stack (no copy)  (洧도) i#0 | tmp%3#0,"0123456789",tmp%4#0,index_plus_1%1#0                                                 digits[i % radix]                                with_reentrancy/contract.py:22
    substring3                                         //                                                                                                 (洧도) i#0 | tmp%3#0,{substring3}                                                                          digits[i % radix]                                with_reentrancy/contract.py:22
    //                                                 virtual: store tmp%5#0 to l-stack (no copy)          (洧도) i#0 | tmp%3#0,tmp%5#0                                                                                 digits[i % radix]                           with_reentrancy/contract.py:22
    //                                                 virtual: load tmp%3#0 from l-stack (no copy)         (洧도) i#0 | tmp%5#0,tmp%3#0                                                                                 itoa(i // radix) + digits[i % radix]        with_reentrancy/contract.py:22
    //                                                 virtual: load tmp%5#0 from l-stack (no copy)         (洧도) i#0 | tmp%3#0,tmp%5#0                                                                                 itoa(i // radix) + digits[i % radix]        with_reentrancy/contract.py:22
    concat                                             //                                                                                                 (洧도) i#0 | {concat}                                                                                      itoa(i // radix) + digits[i % radix]             with_reentrancy/contract.py:22
    //                                                 virtual: store tmp%6#0 to l-stack (no copy)          (洧도) i#0 | tmp%6#0                                                                                         itoa(i // radix) + digits[i % radix]        with_reentrancy/contract.py:22
    //                                                 virtual: load tmp%6#0 from l-stack (no copy)         (洧도) i#0 | tmp%6#0                                                                                         return itoa(i // radix) + digits[i % radix] with_reentrancy/contract.py:22
    retsub                                             //                                                                                                 tmp%6#0                                                                                                 return itoa(i // radix) + digits[i % radix]      with_reentrancy/contract.py:22

