{
  "version": 3,
  "sources": [
    "../contract.py"
  ],
  "mappings": ";;;;;;;;AAOY;AAAY;;AAAZ;AACA;;AAAY;AAAZ;AAMK;AAAjB;AAAiB;;;;;AAAjB;AAAwB;AAAxB;AAAA;;;AAAA;;;AAAiB;AACD;;AAAA;;AAAA;AAAA;;AAAA;AAAJ;;AACI;AAAJ;;;;;AAFK;AAAA;AAAA;AAAA;;;;;AAGF;;AAAA;;AAAA;AAAP",
  "op_pc_offset": 0,
  "pc_events": {
    "1": {
      "subroutine": "test_cases.ssa2.contract.MyContract.approval_program",
      "params": {},
      "block": "main",
      "stack_in": [],
      "op": "intcblock 1 5"
    },
    "5": {
      "op": "b main_block@0"
    },
    "8": {
      "block": "main_block@0",
      "stack_in": [],
      "op": "intc_0 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "9": {
      "op": "pushint 2 // 2",
      "defined_out": [
        "1",
        "2"
      ],
      "stack_out": [
        "1",
        "2"
      ]
    },
    "11": {
      "op": "+",
      "defined_out": [],
      "stack_out": [
        "a#0"
      ]
    },
    "12": {
      "op": "pushint 4 // 4",
      "defined_out": [
        "4"
      ],
      "stack_out": [
        "a#0",
        "4"
      ]
    },
    "14": {
      "op": "intc_1 // 5",
      "defined_out": [
        "4",
        "5"
      ],
      "stack_out": [
        "a#0",
        "4",
        "5"
      ]
    },
    "15": {
      "op": "*",
      "defined_out": [],
      "stack_out": [
        "a#0",
        "b#0"
      ]
    },
    "16": {
      "op": "intc_0 // 1",
      "stack_out": [
        "a#0",
        "b#0",
        "1"
      ]
    },
    "17": {
      "error": "Step cannot be zero",
      "op": "assert // Step cannot be zero",
      "stack_out": [
        "a#0",
        "b#0"
      ]
    },
    "18": {
      "op": "pushint 0 // 0",
      "defined_out": [],
      "stack_out": [
        "a#0",
        "b#0",
        "value_internal%0#0"
      ]
    },
    "20": {
      "op": "b main_for_header@1"
    },
    "23": {
      "block": "main_for_header@1",
      "stack_in": [
        "a#0",
        "b#0",
        "value_internal%0#0"
      ],
      "op": "dup",
      "defined_out": [
        "value_internal%0#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "value_internal%0#0",
        "value_internal%0#0"
      ]
    },
    "24": {
      "op": "intc_1 // 5",
      "defined_out": [
        "5",
        "value_internal%0#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "value_internal%0#0",
        "value_internal%0#0",
        "5"
      ]
    },
    "25": {
      "op": "<",
      "defined_out": [
        "continue_looping%0#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "value_internal%0#0",
        "continue_looping%0#0"
      ]
    },
    "26": {
      "op": "bz main_after_for@4",
      "stack_out": [
        "a#0",
        "b#0",
        "value_internal%0#0"
      ]
    },
    "29": {
      "op": "b main_for_body@2"
    },
    "32": {
      "block": "main_for_body@2",
      "stack_in": [
        "a#0",
        "b#0",
        "value_internal%0#0"
      ],
      "op": "dup",
      "defined_out": [
        "i#1",
        "value_internal%0#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "value_internal%0#0",
        "i#1"
      ]
    },
    "33": {
      "op": "dig 2",
      "defined_out": [
        "b#0",
        "i#1",
        "value_internal%0#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "value_internal%0#0",
        "i#1",
        "b#0"
      ]
    },
    "35": {
      "op": "dig 4",
      "defined_out": [
        "a#0",
        "b#0",
        "i#1",
        "value_internal%0#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "value_internal%0#0",
        "i#1",
        "b#0",
        "a#0"
      ]
    },
    "37": {
      "op": "dup",
      "defined_out": [
        "a#0",
        "a#0 (copy)",
        "b#0",
        "i#1",
        "value_internal%0#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "value_internal%0#0",
        "i#1",
        "b#0",
        "a#0 (copy)",
        "a#0 (copy)"
      ]
    },
    "38": {
      "op": "cover 2",
      "stack_out": [
        "a#0",
        "b#0",
        "value_internal%0#0",
        "i#1",
        "a#0",
        "b#0",
        "a#0 (copy)"
      ]
    },
    "40": {
      "op": "+",
      "defined_out": [
        "a#0",
        "b#0",
        "i#1",
        "tmp%2#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "value_internal%0#0",
        "i#1",
        "a#0",
        "tmp%2#0"
      ]
    },
    "41": {
      "op": "bury 4",
      "defined_out": [
        "a#0",
        "b#0",
        "i#1",
        "value_internal%0#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "value_internal%0#0",
        "i#1",
        "a#0"
      ]
    },
    "43": {
      "op": "+",
      "defined_out": [
        "a#0",
        "b#0",
        "tmp%3#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "value_internal%0#0",
        "tmp%3#0"
      ]
    },
    "44": {
      "op": "bury 3",
      "defined_out": [
        "a#0",
        "b#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "value_internal%0#0"
      ]
    },
    "46": {
      "op": "b main_for_footer@3"
    },
    "49": {
      "block": "main_for_footer@3",
      "stack_in": [
        "a#0",
        "b#0",
        "value_internal%0#0"
      ],
      "op": "dup",
      "defined_out": [
        "value_internal%0#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "value_internal%0#0",
        "value_internal%0#0"
      ]
    },
    "50": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "value_internal%0#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "value_internal%0#0",
        "value_internal%0#0",
        "1"
      ]
    },
    "51": {
      "op": "+",
      "stack_out": [
        "a#0",
        "b#0",
        "value_internal%0#0",
        "value_internal%0#0"
      ]
    },
    "52": {
      "op": "bury 1",
      "defined_out": [
        "value_internal%0#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "value_internal%0#0"
      ]
    },
    "54": {
      "op": "b main_for_header@1"
    },
    "57": {
      "block": "main_after_for@4",
      "stack_in": [
        "a#0",
        "b#0",
        "value_internal%0#0"
      ],
      "op": "dig 2",
      "defined_out": [
        "a#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "value_internal%0#0",
        "a#0"
      ]
    },
    "59": {
      "op": "dig 2",
      "defined_out": [
        "a#0",
        "b#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "value_internal%0#0",
        "a#0",
        "b#0"
      ]
    },
    "61": {
      "op": "+",
      "defined_out": [
        "a#0",
        "b#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "value_internal%0#0",
        "tmp%4#0"
      ]
    },
    "62": {
      "op": "return",
      "stack_out": [
        "a#0",
        "b#0",
        "value_internal%0#0"
      ]
    }
  }
}