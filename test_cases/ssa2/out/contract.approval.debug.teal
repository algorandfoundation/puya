// Op                                                 // Op Description              Stack (out)                      Source code         Source line

#pragma version 8

// test_cases.ssa2.contract.MyContract.approval_program() -> uint64:
main_block@0:
        int 3                                         //                             3                                UInt64(1) + 2       File "ssa2/contract.py", line 8
        int 20                                        //                             (𝕗) a#0 | 20                     UInt64(4) * 5       File "ssa2/contract.py", line 9
        int 0                                         //                             (𝕗) a#0,b#0 | 0                  urange(5)           File "ssa2/contract.py", line 15
        // Implicit fall through to main_for_header@1 //                             (𝕗) a#0,b#0,i#0 |

main_for_header@1:
        dup                                           // load i#0 from f-stack       (𝕗) a#0,b#0,i#0 | i#0            i                   File "ssa2/contract.py", line 15
        int 5                                         //                             (𝕗) a#0,b#0,i#0 | i#0,5          5                   File "ssa2/contract.py", line 15
        <                                             //                             (𝕗) a#0,b#0,i#0 | {<}            urange(5)           File "ssa2/contract.py", line 15
        bz main_after_for@4                           //                             (𝕗) a#0,b#0,i#0 |                for i in urange(5): File "ssa2/contract.py", line 15
        // Implicit fall through to main_for_body@2   //                             (𝕗) a#0,b#0,i#0 |                for i in urange(5): File "ssa2/contract.py", line 15

main_for_body@2:
        dig 1                                         // load b#0 from f-stack       (𝕗) a#0,b#0,i#0 | b#0            b                   File "ssa2/contract.py", line 9
        dig 3                                         // load a#0 from f-stack       (𝕗) a#0,b#0,i#0 | b#0,a#0        a                   File "ssa2/contract.py", line 8
        dup
        cover 2                                       // store a#0 to l-stack (copy) (𝕗) a#0,b#0,i#0 | a#0,b#0,a#0    a                   File "ssa2/contract.py", line 8
        +                                             //                             (𝕗) a#0,b#0,i#0 | a#0,{+}        b + a               File "ssa2/contract.py", line 16
        bury 3                                        // store b#0 to f-stack        (𝕗) a#0,b#0,i#0 | a#0            b                   File "ssa2/contract.py", line 9
        dig 1                                         // load i#0 from f-stack       (𝕗) a#0,b#0,i#0 | a#0,i#0        i                   File "ssa2/contract.py", line 15
        dup
        cover 2                                       // store i#0 to l-stack (copy) (𝕗) a#0,b#0,i#0 | i#0,a#0,i#0    i                   File "ssa2/contract.py", line 15
        +                                             //                             (𝕗) a#0,b#0,i#0 | i#0,{+}        a + i               File "ssa2/contract.py", line 17
        bury 4                                        // store a#0 to f-stack        (𝕗) a#0,b#0,i#0 | i#0            a                   File "ssa2/contract.py", line 8
        int 1                                         //                             (𝕗) a#0,b#0,i#0 | i#0,1          urange(5)           File "ssa2/contract.py", line 15
        +                                             //                             (𝕗) a#0,b#0,i#0 | {+}            urange(5)           File "ssa2/contract.py", line 15
        bury 1                                        // store i#0 to f-stack        (𝕗) a#0,b#0,i#0 |                i                   File "ssa2/contract.py", line 15
        b main_for_header@1                           //                             (𝕗) a#0,b#0,i#0 |

main_after_for@4:
        dig 2                                         // load a#0 from f-stack       (𝕗) a#0,b#0,i#0 | a#0            a                   File "ssa2/contract.py", line 8
        dig 2                                         // load b#0 from f-stack       (𝕗) a#0,b#0,i#0 | a#0,b#0        b                   File "ssa2/contract.py", line 9
        +                                             //                             (𝕗) a#0,b#0,i#0 | {+}            a + b               File "ssa2/contract.py", line 18
        return                                        //                             (𝕗) a#0,b#0,i#0 |                return a + b        File "ssa2/contract.py", line 18

