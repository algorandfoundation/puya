contract test_cases.biguint_binary_ops.contract.BiguintBinaryOps:
    program approval:
        subroutine test_cases.biguint_binary_ops.contract.BiguintBinaryOps.approval_program() -> bool:
            block@0: // L5
                let tmp%0#0: bytes = (b+ 58446744073709552000b 18446744073709552000b)
                let tmp%1#0: bool = (b== tmp%0#0 76893488147419104000b)
                (assert tmp%1#0)
                let tmp%2#0: biguint = (b- 58446744073709552000b 18446744073709552000b)
                let tmp%3#0: bool = (b== tmp%2#0 40000000000000000000b)
                (assert tmp%3#0)
                let tmp%4#0: bytes = (b* 58446744073709552000b 18446744073709552000b)
                let tmp%5#0: bool = (b== tmp%4#0 1078152129869320557630474056040704000000b)
                (assert tmp%5#0)
                let tmp%6#0: biguint = (b/ 58446744073709552000b 18446744073709552000b)
                let tmp%7#0: bool = (b== tmp%6#0 3b)
                (assert tmp%7#0)
                let tmp%8#0: biguint = (b% 58446744073709552000b 18446744073709552000b)
                let tmp%9#0: bool = (b== tmp%8#0 3106511852580896000b)
                (assert tmp%9#0)
                let tmp%10#0: bool = (b< 58446744073709552000b 18446744073709552000b)
                let tmp%11#0: bool = (! tmp%10#0)
                (assert tmp%11#0)
                let tmp%12#0: bool = (b<= 58446744073709552000b 18446744073709552000b)
                let tmp%13#0: bool = (! tmp%12#0)
                (assert tmp%13#0)
                let tmp%14#0: bool = (b> 58446744073709552000b 18446744073709552000b)
                (assert tmp%14#0)
                let tmp%15#0: bool = (b>= 58446744073709552000b 18446744073709552000b)
                (assert tmp%15#0)
                let tmp%16#0: bool = (b== 58446744073709552000b 18446744073709552000b)
                let tmp%17#0: bool = (! tmp%16#0)
                (assert tmp%17#0)
                let tmp%18#0: bool = (b!= 58446744073709552000b 18446744073709552000b)
                (assert tmp%18#0)
                let tmp%19#0: bytes = (b| 58446744073709552000b 18446744073709552000b)
                let tmp%20#0: bool = (b== tmp%19#0 58446744073709552000b)
                (assert tmp%20#0)
                let tmp%21#0: bytes = (b& 58446744073709552000b 18446744073709552000b)
                let tmp%22#0: bool = (b== tmp%21#0 18446744073709552000b)
                (assert tmp%22#0)
                let tmp%23#0: bytes = (b^ 58446744073709552000b 18446744073709552000b)
                let tmp%24#0: bool = (b== tmp%23#0 40000000000000000000b)
                (assert tmp%24#0)
                return 1u
    
    program clear-state:
        subroutine test_cases.biguint_binary_ops.contract.BiguintBinaryOps.clear_state_program() -> bool:
            block@0: // L27
                return 1u