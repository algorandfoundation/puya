// Op                                                                       // Op Description                                          Stack (out)                                                                                            Source code                                              Source line

#pragma version 10

// test_cases.biguint_binary_ops.contract.BiguintBinaryOps.approval_program() -> uint64:
main_block@0:
    byte 0x032b1c8c1227a00180                                               //                                                         0x032b1c8c1227a00180                                                                                   BigUInt(58446744073709552000)                            biguint_binary_ops/contract.py:6
    callsub bitwise_ops                                                     //                                                         {bitwise_ops}                                                                                          bitwise_ops(left)                                        biguint_binary_ops/contract.py:25
                                                                            // virtual: store tmp%25#0 to l-stack (no copy)            tmp%25#0                                                                                               bitwise_ops(left)                                        biguint_binary_ops/contract.py:25
    byte 0x032b1c8c1227a00180                                               //                                                         tmp%25#0,0x032b1c8c1227a00180                                                                          BigUInt(58446744073709552000)                            biguint_binary_ops/contract.py:6
    callsub bitwise_ops                                                     //                                                         tmp%25#0,{bitwise_ops}                                                                                 bitwise_ops(left)                                        biguint_binary_ops/contract.py:25
                                                                            // virtual: store tmp%26#0 to l-stack (no copy)            tmp%25#0,tmp%26#0                                                                                      bitwise_ops(left)                                        biguint_binary_ops/contract.py:25
                                                                            // virtual: load tmp%25#0 from l-stack (no copy)           tmp%26#0,tmp%25#0                                                                                      bitwise_ops(left) == bitwise_ops(left)                   biguint_binary_ops/contract.py:25
                                                                            // virtual: load tmp%26#0 from l-stack (no copy)           tmp%25#0,tmp%26#0                                                                                      bitwise_ops(left) == bitwise_ops(left)                   biguint_binary_ops/contract.py:25
    b==                                                                     //                                                         {b==}                                                                                                  bitwise_ops(left) == bitwise_ops(left)                   biguint_binary_ops/contract.py:25
                                                                            // virtual: store tmp%27#0 to l-stack (no copy)            tmp%27#0                                                                                               bitwise_ops(left) == bitwise_ops(left)                   biguint_binary_ops/contract.py:25
                                                                            // virtual: load tmp%27#0 from l-stack (no copy)           tmp%27#0                                                                                               assert bitwise_ops(left) == bitwise_ops(left)            biguint_binary_ops/contract.py:25
    assert                                                                  //                                                                                                                                                                assert bitwise_ops(left) == bitwise_ops(left)            biguint_binary_ops/contract.py:25
    int 1                                                                   //                                                         1                                                                                                      True                                                     biguint_binary_ops/contract.py:26
    return                                                                  //                                                                                                                                                                return True                                              biguint_binary_ops/contract.py:26


// test_cases.biguint_binary_ops.contract.bitwise_ops(value: bytes) -> bytes:
bitwise_ops:
    proto 1 1                                                               //                                                         (洧도) value#0 |                                                                                          @subroutine\ndef bitwise_ops(value: BigUInt) -> BigUInt: biguint_binary_ops/contract.py:32-33

bitwise_ops_block@0:
    frame_dig -1                                                            // load value#0 from parameters                            (洧도) value#0 | value#0 (copy)                                                                           value ^ low128                                           biguint_binary_ops/contract.py:35
    byte 0x00000000000000000000000000000000ffffffffffffffffffffffffffffffff //                                                         (洧도) value#0 | value#0 (copy),0x00000000000000000000000000000000ffffffffffffffffffffffffffffffff        op.bzero(16) + ~op.bzero(16)                             biguint_binary_ops/contract.py:34
    b^                                                                      //                                                         (洧도) value#0 | {b^}                                                                                     value ^ low128                                           biguint_binary_ops/contract.py:35
                                                                            // virtual: store tmp%3#0 to l-stack (no copy)             (洧도) value#0 | tmp%3#0                                                                                  value ^ low128                                           biguint_binary_ops/contract.py:35
                                                                            // virtual: load tmp%3#0 from l-stack (no copy)            (洧도) value#0 | tmp%3#0                                                                                  wide_value_compl = (value ^ low128) + BigUInt(1)         biguint_binary_ops/contract.py:35
    byte 0x01                                                               //                                                         (洧도) value#0 | tmp%3#0,0x01                                                                             BigUInt(1)                                               biguint_binary_ops/contract.py:35
    b+                                                                      //                                                         (洧도) value#0 | {b+}                                                                                     (value ^ low128) + BigUInt(1)                            biguint_binary_ops/contract.py:35
                                                                            // virtual: store wide_value_compl#0 to l-stack (no copy)  (洧도) value#0 | wide_value_compl#0                                                                       wide_value_compl = (value ^ low128) + BigUInt(1)         biguint_binary_ops/contract.py:35
                                                                            // virtual: load wide_value_compl#0 from l-stack (no copy) (洧도) value#0 | wide_value_compl#0                                                                       wide_value_compl & low128                                biguint_binary_ops/contract.py:37
    byte 0x00000000000000000000000000000000ffffffffffffffffffffffffffffffff //                                                         (洧도) value#0 | wide_value_compl#0,0x00000000000000000000000000000000ffffffffffffffffffffffffffffffff    op.bzero(16) + ~op.bzero(16)                             biguint_binary_ops/contract.py:34
    b&                                                                      //                                                         (洧도) value#0 | {b&}                                                                                     wide_value_compl & low128                                biguint_binary_ops/contract.py:37
                                                                            // virtual: store tmp%4#0 to l-stack (no copy)             (洧도) value#0 | tmp%4#0                                                                                  wide_value_compl & low128                                biguint_binary_ops/contract.py:37
                                                                            // virtual: load tmp%4#0 from l-stack (no copy)            (洧도) value#0 | tmp%4#0                                                                                  return wide_value_compl & low128                         biguint_binary_ops/contract.py:37
    retsub                                                                  //                                                         tmp%4#0                                                                                                return wide_value_compl & low128                         biguint_binary_ops/contract.py:37

