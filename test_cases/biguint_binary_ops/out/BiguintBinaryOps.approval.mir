// Op                                                                       Stack (out)
// test_cases.biguint_binary_ops.contract.BiguintBinaryOps.approval_program() -> uint64:
main_block@0:
    // biguint_binary_ops/contract.py:6
    // left = BigUInt(58446744073709552000)
    byte 0x032b1c8c1227a00180                                               0x032b1c8c1227a00180
    // biguint_binary_ops/contract.py:25
    // assert bitwise_ops(left) == bitwise_ops(left)
    callsub bitwise_ops                                                     tmp%25#0
    // biguint_binary_ops/contract.py:6
    // left = BigUInt(58446744073709552000)
    byte 0x032b1c8c1227a00180                                               tmp%25#0,0x032b1c8c1227a00180
    // biguint_binary_ops/contract.py:25
    // assert bitwise_ops(left) == bitwise_ops(left)
    callsub bitwise_ops                                                     tmp%25#0,tmp%26#0
    l-load tmp%25#0 1                                                       tmp%26#0,tmp%25#0
    l-load tmp%26#0 1                                                       tmp%25#0,tmp%26#0
    b==                                                                     tmp%27#0
    assert
    // biguint_binary_ops/contract.py:26
    // return True
    int 1                                                                   1
    return


// test_cases.biguint_binary_ops.contract.bitwise_ops(value: bytes) -> bytes:
bitwise_ops:                                                                (洧도) value#0 |
    // biguint_binary_ops/contract.py:32-33
    // @subroutine
    // def bitwise_ops(value: BigUInt) -> BigUInt:
    proto 1 1                                                               (洧도) value#0 |

bitwise_ops_block@0:                                                        (洧도) value#0 |
    // biguint_binary_ops/contract.py:35
    // wide_value_compl = (value ^ low128) + BigUInt(1)
    p-load value#0                                                          (洧도) value#0 | value#0 (copy)
    // biguint_binary_ops/contract.py:34
    // low128 = BigUInt.from_bytes(op.bzero(16) + ~op.bzero(16))
    byte 0x00000000000000000000000000000000ffffffffffffffffffffffffffffffff (洧도) value#0 | value#0 (copy),0x00000000000000000000000000000000ffffffffffffffffffffffffffffffff
    // biguint_binary_ops/contract.py:35
    // wide_value_compl = (value ^ low128) + BigUInt(1)
    b^                                                                      (洧도) value#0 | tmp%3#0
    byte 0x01                                                               (洧도) value#0 | tmp%3#0,0x01
    b+                                                                      (洧도) value#0 | wide_value_compl#0
    // biguint_binary_ops/contract.py:34
    // low128 = BigUInt.from_bytes(op.bzero(16) + ~op.bzero(16))
    byte 0x00000000000000000000000000000000ffffffffffffffffffffffffffffffff (洧도) value#0 | wide_value_compl#0,0x00000000000000000000000000000000ffffffffffffffffffffffffffffffff
    // biguint_binary_ops/contract.py:37
    // return wide_value_compl & low128
    b&                                                                      (洧도) value#0 | tmp%4#0
    retsub                                                                  tmp%4#0


