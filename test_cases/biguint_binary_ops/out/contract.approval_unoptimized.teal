#pragma version 8

// test_cases.biguint_binary_ops.contract.BiguintBinaryOps.approval_program() -> uint64:
main_block@0:
        byte 0x032b1c8c1227a00180
        byte 0x010000000000000180
        callsub do_some_ops
        cover 13
        cover 12
        cover 11
        cover 10
        cover 9
        cover 8
        cover 7
        cover 6
        cover 5
        cover 4
        cover 3
        cover 2
        swap
        cover 8
        cover 10
        cover 11
        cover 12
        cover 13
        cover 13
        cover 13
        cover 13
        cover 13
        swap
        cover 13
        swap
        cover 13
        uncover 2
        cover 13
        uncover 3
        cover 13
        uncover 4
        cover 13
        byte 0x042b1c8c1227a00300
        b==
        assert
        byte 0x022b1c8c1227a00000
        b==
        assert
        byte 0x032b1c8c1227a00640aad21b3b70024000
        b==
        assert
        byte 0x03
        b==
        assert
        byte 0x2b1c8c12279ffd00
        b==
        assert
        !
        assert
        !
        assert
        assert
        assert
        !
        assert
        assert
        byte 0x032b1c8c1227a00180
        b==
        assert
        byte 0x010000000000000180
        b==
        assert
        byte 0x022b1c8c1227a00000
        b==
        assert
        int 1
        return


// test_cases.biguint_binary_ops.contract.do_some_ops(left#0: bytes, right#0: bytes) -> bytes, bytes, bytes, bytes, bytes, uint64, uint64, uint64, uint64, uint64, uint64, bytes, bytes, bytes:
do_some_ops:
        proto 2 14

do_some_ops_block@0:
        frame_dig -2
        frame_dig -1
        b+
        frame_dig -2
        frame_dig -1
        b-
        frame_dig -2
        frame_dig -1
        b*
        frame_dig -2
        frame_dig -1
        b/
        frame_dig -2
        frame_dig -1
        b%
        frame_dig -2
        frame_dig -1
        b<
        frame_dig -2
        frame_dig -1
        b<=
        frame_dig -2
        frame_dig -1
        b>
        frame_dig -2
        frame_dig -1
        b>=
        frame_dig -2
        frame_dig -1
        b==
        frame_dig -2
        frame_dig -1
        b!=
        frame_dig -2
        frame_dig -1
        b|
        frame_dig -2
        frame_dig -1
        b&
        frame_dig -2
        frame_dig -1
        b^
        uncover 13
        uncover 13
        uncover 13
        uncover 13
        uncover 13
        uncover 13
        uncover 13
        uncover 13
        uncover 13
        uncover 13
        uncover 13
        uncover 13
        uncover 13
        uncover 13
        retsub

