contract test_cases.biguint_binary_ops.contract.BiguintBinaryOps:
    program approval:
        subroutine test_cases.biguint_binary_ops.contract.BiguintBinaryOps.approval_program() -> uint64:
            block@0: // L5
                let tmp%1#0: uint64 = 1u
                (assert tmp%1#0)
                let tmp%3#0: uint64 = 1u
                (assert tmp%3#0)
                let tmp%5#0: uint64 = 1u
                (assert tmp%5#0)
                let tmp%7#0: uint64 = 1u
                (assert tmp%7#0)
                let tmp%9#0: uint64 = 1u
                (assert tmp%9#0)
                let tmp%11#0: uint64 = 1u
                (assert tmp%11#0)
                let tmp%13#0: uint64 = 1u
                (assert tmp%13#0)
                let tmp%17#0: uint64 = 1u
                (assert tmp%17#0)
                let tmp%20#0: uint64 = 1u
                (assert tmp%20#0)
                let tmp%22#0: uint64 = 1u
                (assert tmp%22#0)
                let tmp%24#0: uint64 = 1u
                (assert tmp%24#0)
                return 1u
    
    program clear-state:
        subroutine test_cases.biguint_binary_ops.contract.BiguintBinaryOps.clear_state_program() -> uint64:
            block@0: // L27
                return 1u