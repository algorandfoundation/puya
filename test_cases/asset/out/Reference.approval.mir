// Op                                                 //                                                  Op Description                                     Stack (out)                                                  X stack                                                                                              Source code                                                                                          Source line

#pragma version 10

// test_cases.asset.contract.Reference.approval_program() -> uint64:
main_block@0:
    txn ApplicationID                                 //                                                                                                     {txn}
    //                                                virtual: store app_id%0#0 to l-stack (no copy)      app_id%0#0
    //                                                virtual: load app_id%0#0 from l-stack (no copy)     app_id%0#0
    bnz main_entrypoint@2                             //
    // Implicit fall through to main_on_create@1      //

main_on_create@1:
    callsub __init__                                  //
    // Implicit fall through to main_entrypoint@2     //

main_entrypoint@2:
    txn NumAppArgs                                    //                                                                                                     {txn}                                                                                                                                                             Txn.num_app_args                                                                                     asset/contract.py:21
    //                                                virtual: store tmp%0#0 to l-stack (no copy)         tmp%0#0                                                                                                         Txn.num_app_args                                                                                     asset/contract.py:21
    //                                                virtual: load tmp%0#0 from l-stack (no copy)        tmp%0#0                                                                                                         Txn.num_app_args == 1:                                                                               asset/contract.py:21
    int 1                                             //                                                                                                     tmp%0#0,1                                                                                                                                                         1                                                                                                    asset/contract.py:21
    ==                                                //                                                                                                     {==}                                                                                                                                                              Txn.num_app_args == 1:                                                                               asset/contract.py:21
    //                                                virtual: store tmp%1#0 to l-stack (no copy)         tmp%1#0                                                                                                         Txn.num_app_args == 1:                                                                               asset/contract.py:21
    //                                                virtual: load tmp%1#0 from l-stack (no copy)        tmp%1#0                                                                                                         if Txn.num_app_args == 1:                                                                            asset/contract.py:21
    bz main_after_if_else@10                          //                                                                                                                                                                                                                                                                       if Txn.num_app_args == 1:                                                                            asset/contract.py:21
    // Implicit fall through to main_if_body@3        //                                                                                                                                                                                                                                                                       if Txn.num_app_args == 1:                                                                            asset/contract.py:21

main_if_body@3:
    txna ApplicationArgs 0                            //                                                                                                     {txna}                                                                                                                                                            Txn.application_args(0)                                                                              asset/contract.py:22
    //                                                virtual: store tmp%2#0 to l-stack (no copy)         tmp%2#0                                                                                                         Txn.application_args(0)                                                                              asset/contract.py:22
    //                                                virtual: load tmp%2#0 from l-stack (no copy)        tmp%2#0                                                                                                         Txn.application_args(0) == b"opt_in":                                                                asset/contract.py:22
    byte "opt_in"                                     //                                                                                                     tmp%2#0,"opt_in"                                                                                                                                                  b"opt_in"                                                                                            asset/contract.py:22
    ==                                                //                                                                                                     {==}                                                                                                                                                              Txn.application_args(0) == b"opt_in":                                                                asset/contract.py:22
    //                                                virtual: store tmp%3#0 to l-stack (no copy)         tmp%3#0                                                                                                         Txn.application_args(0) == b"opt_in":                                                                asset/contract.py:22
    //                                                virtual: load tmp%3#0 from l-stack (no copy)        tmp%3#0                                                                                                         if Txn.application_args(0) == b"opt_in":                                                             asset/contract.py:22
    bz main_else_body@5                               //                                                                                                                                                                                                                                                                       if Txn.application_args(0) == b"opt_in":                                                             asset/contract.py:22
    // Implicit fall through to main_if_body@4        //                                                                                                                                                                                                                                                                       if Txn.application_args(0) == b"opt_in":                                                             asset/contract.py:22

main_if_body@4:
    txna Assets 0                                     //                                                                                                     {txna}                                                                                                                                                            Txn.assets(0)                                                                                        asset/contract.py:23
    //                                                virtual: store asset#0 to l-stack (no copy)         asset#0                                                                                                         asset = Txn.assets(0)                                                                                asset/contract.py:23
    //                                                virtual: load asset#0 from l-stack (no copy)        asset#0                                                                                                         self.opt_into_asset(asset)                                                                           asset/contract.py:24
    callsub opt_into_asset                            //                                                                                                                                                                                                                                                                       self.opt_into_asset(asset)                                                                           asset/contract.py:24
    b main_after_if_else@10                           //

main_else_body@5:
    txna ApplicationArgs 0                            //                                                                                                     {txna}                                                                                                                                                            Txn.application_args(0)                                                                              asset/contract.py:25
    //                                                virtual: store tmp%4#0 to l-stack (no copy)         tmp%4#0                                                                                                         Txn.application_args(0)                                                                              asset/contract.py:25
    //                                                virtual: load tmp%4#0 from l-stack (no copy)        tmp%4#0                                                                                                         Txn.application_args(0) == b"is_opted_in":                                                           asset/contract.py:25
    byte "is_opted_in"                                //                                                                                                     tmp%4#0,"is_opted_in"                                                                                                                                             b"is_opted_in"                                                                                       asset/contract.py:25
    ==                                                //                                                                                                     {==}                                                                                                                                                              Txn.application_args(0) == b"is_opted_in":                                                           asset/contract.py:25
    //                                                virtual: store tmp%5#0 to l-stack (no copy)         tmp%5#0                                                                                                         Txn.application_args(0) == b"is_opted_in":                                                           asset/contract.py:25
    //                                                virtual: load tmp%5#0 from l-stack (no copy)        tmp%5#0                                                                                                         elif Txn.application_args(0) == b"is_opted_in":                                                      asset/contract.py:25
    assert // Expected opt_in or is_opted_in          //                                                                                                                                                                                                                                                                       elif Txn.application_args(0) == b"is_opted_in":                                                      asset/contract.py:25
    txna Assets 0                                     //                                                                                                     {txna}                                                                                                                                                            Txn.assets(0)                                                                                        asset/contract.py:26
    //                                                virtual: store asset#0 to l-stack (no copy)         asset#0                                                                                                         asset = Txn.assets(0)                                                                                asset/contract.py:26
    //                                                virtual: load asset#0 from l-stack (no copy)        asset#0                                                                                                         self.is_opted_asset(asset)                                                                           asset/contract.py:27
    callsub is_opted_asset                            //                                                                                                                                                                                                                                                                       self.is_opted_asset(asset)                                                                           asset/contract.py:27
    // Implicit fall through to main_after_if_else@10 //

main_after_if_else@10:
    int 1                                             //                                                                                                     1                                                                                                                                                                 True                                                                                                 asset/contract.py:30
    return                                            //                                                                                                                                                                                                                                                                       return True                                                                                          asset/contract.py:30


// test_cases.asset.contract.Reference.opt_into_asset(asset: uint64) -> void:
opt_into_asset:
    proto 1 0                                         //                                                                                                     (𝕡) asset#0 |                                                                                                                                                     @subroutine\ndef opt_into_asset(self, asset: Asset) -> None:                                         asset/contract.py:35-36

opt_into_asset_block@0:
    txn Sender                                        //                                                                                                     (𝕡) asset#0 | {txn}                                                                                                                                               allow app creator to opt the app account into a ASA\nassert Txn.sender                               asset/contract.py:37-38
    //                                                virtual: store tmp%0#0 to l-stack (no copy)         (𝕡) asset#0 | tmp%0#0                                                                                           allow app creator to opt the app account into a ASA\nassert Txn.sender                               asset/contract.py:37-38
    global CreatorAddress                             //                                                                                                     (𝕡) asset#0 | tmp%0#0,{global}                                                                                                                                    tor to opt the app account into a ASA\nassert Txn.sender == Global.creator_address                   asset/contract.py:37-38
    //                                                virtual: store tmp%1#0 to l-stack (no copy)         (𝕡) asset#0 | tmp%0#0,tmp%1#0                                                                                   tor to opt the app account into a ASA\nassert Txn.sender == Global.creator_address                   asset/contract.py:37-38
    //                                                virtual: load tmp%0#0 from l-stack (no copy)        (𝕡) asset#0 | tmp%1#0,tmp%0#0                                                                                   allow app creator to opt the app account into a ASA\nassert Txn.sender == Global.creator_address     asset/contract.py:37-38
    //                                                virtual: load tmp%1#0 from l-stack (no copy)        (𝕡) asset#0 | tmp%0#0,tmp%1#0                                                                                   allow app creator to opt the app account into a ASA\nassert Txn.sender == Global.creator_address     asset/contract.py:37-38
    ==                                                //                                                                                                     (𝕡) asset#0 | {==}                                                                                                                                                allow app creator to opt the app account into a ASA\nassert Txn.sender == Global.creator_address     asset/contract.py:37-38
    //                                                virtual: store tmp%2#0 to l-stack (no copy)         (𝕡) asset#0 | tmp%2#0                                                                                           allow app creator to opt the app account into a ASA\nassert Txn.sender == Global.creator_address     asset/contract.py:37-38
    //                                                virtual: load tmp%2#0 from l-stack (no copy)        (𝕡) asset#0 | tmp%2#0                                                                                           # Only allow app creator to opt the app account into a ASA\nassert Txn.sender == Global.creator_a... asset/contract.py:37-38
    assert // Only creator can opt in to ASA          //                                                                                                     (𝕡) asset#0 |                                                                                                                                                     # Only allow app creator to opt the app account into a ASA\nassert Txn.sender == Global.creator_a... asset/contract.py:37-38
    int 0                                             //                                                                                                     (𝕡) asset#0 | 0                                                                                                                                                   ASA hasn't already been opted into\nassert not self.asa                                              asset/contract.py:39-40
    byte "asa"                                        //                                                                                                     (𝕡) asset#0 | 0,"asa"                                                                                                                                             ASA hasn't already been opted into\nassert not self.asa                                              asset/contract.py:39-40
    app_global_get_ex                                 //                                                                                                     (𝕡) asset#0 | {app_global_get_ex}.0,{app_global_get_ex}.1                                                                                                         ASA hasn't already been opted into\nassert not self.asa                                              asset/contract.py:39-40
    //                                                virtual: store asa_exists%0#0 to l-stack (no copy)  (𝕡) asset#0 | asa_exists%0#0,{app_global_get_ex}.0                                                              ASA hasn't already been opted into\nassert not self.asa                                              asset/contract.py:39-40
    //                                                virtual: store asa_value%0#0 to l-stack (no copy)   (𝕡) asset#0 | asa_value%0#0,asa_exists%0#0                                                                      ASA hasn't already been opted into\nassert not self.asa                                              asset/contract.py:39-40
    //                                                virtual: load asa_exists%0#0 from l-stack (no copy) (𝕡) asset#0 | asa_value%0#0,asa_exists%0#0                                                                      ASA hasn't already been opted into\nassert not self.asa                                              asset/contract.py:39-40
    assert // check asa exists                        //                                                                                                     (𝕡) asset#0 | asa_value%0#0                                                                                                                                       ASA hasn't already been opted into\nassert not self.asa                                              asset/contract.py:39-40
    //                                                virtual: load asa_value%0#0 from l-stack (no copy)  (𝕡) asset#0 | asa_value%0#0                                                                                     y a ASA hasn't already been opted into\nassert not self.asa                                          asset/contract.py:39-40
    !                                                 //                                                                                                     (𝕡) asset#0 | {!}                                                                                                                                                 y a ASA hasn't already been opted into\nassert not self.asa                                          asset/contract.py:39-40
    //                                                virtual: store tmp%3#0 to l-stack (no copy)         (𝕡) asset#0 | tmp%3#0                                                                                           y a ASA hasn't already been opted into\nassert not self.asa                                          asset/contract.py:39-40
    //                                                virtual: load tmp%3#0 from l-stack (no copy)        (𝕡) asset#0 | tmp%3#0                                                                                           # Verify a ASA hasn't already been opted into\nassert not self.asa, "ASA already opted in"           asset/contract.py:39-40
    assert // ASA already opted in                    //                                                                                                     (𝕡) asset#0 |                                                                                                                                                     # Verify a ASA hasn't already been opted into\nassert not self.asa, "ASA already opted in"           asset/contract.py:39-40
    byte "asa"                                        //                                                                                                     (𝕡) asset#0 | "asa"                                                                                                                                               # Save ASA ID in global state\nself.asa                                                              asset/contract.py:41-42
    frame_dig -1                                      //                                                  load asset#0 from parameters                       (𝕡) asset#0 | "asa",asset#0                                                                                                                                       # Save ASA ID in global state\nself.asa = asset                                                      asset/contract.py:41-42
    app_global_put                                    //                                                                                                     (𝕡) asset#0 |                                                                                                                                                     # Save ASA ID in global state\nself.asa = asset                                                      asset/contract.py:41-42
    itxn_begin                                        //                                                                                                     (𝕡) asset#0 |                                                                                                                                                     # Submit opt-in transaction: 0 asset transfer to self\nITxnCreate.begin()                            asset/contract.py:44-45
    int axfer                                         //                                                                                                     (𝕡) asset#0 | axfer                                                                                                                                               TransactionType.AssetTransfer                                                                        asset/contract.py:46
    itxn_field TypeEnum                               //                                                                                                     (𝕡) asset#0 |                                                                                                                                                     ITxnCreate.set_type_enum(TransactionType.AssetTransfer)                                              asset/contract.py:46
    int 0                                             //                                                                                                     (𝕡) asset#0 | 0                                                                                                                                                   UInt64(0)                                                                                            asset/contract.py:47
    itxn_field Fee                                    //                                                                                                     (𝕡) asset#0 |                                                                                                                                                     ITxnCreate.set_fee(UInt64(0))                                                                        asset/contract.py:47
    global CurrentApplicationAddress                  //                                                                                                     (𝕡) asset#0 | {global}                                                                                                                                            Global.current_application_address                                                                   asset/contract.py:48
    //                                                virtual: store tmp%4#0 to l-stack (no copy)         (𝕡) asset#0 | tmp%4#0                                                                                           Global.current_application_address                                                                   asset/contract.py:48
    //                                                virtual: load tmp%4#0 from l-stack (no copy)        (𝕡) asset#0 | tmp%4#0                                                                                           ITxnCreate.set_asset_receiver(Global.current_application_address)                                    asset/contract.py:48
    itxn_field AssetReceiver                          //                                                                                                     (𝕡) asset#0 |                                                                                                                                                     ITxnCreate.set_asset_receiver(Global.current_application_address)                                    asset/contract.py:48
    frame_dig -1                                      //                                                  load asset#0 from parameters                       (𝕡) asset#0 | asset#0                                                                                                                                             ITxnCreate.set_xfer_asset(asset)                                                                     asset/contract.py:49
    itxn_field XferAsset                              //                                                                                                     (𝕡) asset#0 |                                                                                                                                                     ITxnCreate.set_xfer_asset(asset)                                                                     asset/contract.py:49
    itxn_submit                                       //                                                                                                     (𝕡) asset#0 |                                                                                                                                                     ITxnCreate.submit()                                                                                  asset/contract.py:50
    retsub                                            //


// test_cases.asset.contract.Reference.is_opted_asset(asset: uint64) -> void:
is_opted_asset:
    proto 1 0                                         //                                                                                                     (𝕡) asset#0 |                                                                                                                                                     @subroutine\ndef is_opted_asset(self, asset: Asset) -> None:                                         asset/contract.py:52-53

is_opted_asset_block@0:
    int 0                                             //                                                                                                     (𝕡) asset#0 | 0                                                                                                                                                   self.asa                                                                                             asset/contract.py:54
    byte "asa"                                        //                                                                                                     (𝕡) asset#0 | 0,"asa"                                                                                                                                             self.asa                                                                                             asset/contract.py:54
    app_global_get_ex                                 //                                                                                                     (𝕡) asset#0 | {app_global_get_ex}.0,{app_global_get_ex}.1                                                                                                         self.asa                                                                                             asset/contract.py:54
    //                                                virtual: store asa_exists%0#0 to l-stack (no copy)  (𝕡) asset#0 | asa_exists%0#0,{app_global_get_ex}.0                                                              self.asa                                                                                             asset/contract.py:54
    //                                                virtual: store asa_value%0#0 to l-stack (no copy)   (𝕡) asset#0 | asa_value%0#0,asa_exists%0#0                                                                      self.asa                                                                                             asset/contract.py:54
    //                                                virtual: load asa_exists%0#0 from l-stack (no copy) (𝕡) asset#0 | asa_value%0#0,asa_exists%0#0                                                                      self.asa                                                                                             asset/contract.py:54
    assert // check asa exists                        //                                                                                                     (𝕡) asset#0 | asa_value%0#0                                                                                                                                       self.asa                                                                                             asset/contract.py:54
    //                                                virtual: load asa_value%0#0 from l-stack (no copy)  (𝕡) asset#0 | asa_value%0#0                                                                                     self.asa == asset, "asset self.asa == asset"                                                         asset/contract.py:54
    frame_dig -1                                      //                                                  load asset#0 from parameters                       (𝕡) asset#0 | asa_value%0#0,asset#0                                                                                                                               self.asa == asset, "asset self.asa == asset"                                                         asset/contract.py:54
    ==                                                //                                                                                                     (𝕡) asset#0 | {==}                                                                                                                                                self.asa == asset, "asset self.asa == asset"                                                         asset/contract.py:54
    //                                                virtual: store tmp%0#0 to l-stack (no copy)         (𝕡) asset#0 | tmp%0#0                                                                                           self.asa == asset, "asset self.asa == asset"                                                         asset/contract.py:54
    //                                                virtual: load tmp%0#0 from l-stack (no copy)        (𝕡) asset#0 | tmp%0#0                                                                                           assert self.asa == asset, "asset self.asa == asset"                                                  asset/contract.py:54
    assert // asset self.asa == asset                 //                                                                                                     (𝕡) asset#0 |                                                                                                                                                     assert self.asa == asset, "asset self.asa == asset"                                                  asset/contract.py:54
    frame_dig -1                                      //                                                  load asset#0 from parameters                       (𝕡) asset#0 | asset#0                                                                                                                                             asset.total                                                                                          asset/contract.py:55
    asset_params_get AssetTotal                       //                                                                                                     (𝕡) asset#0 | {asset_params_get}.0,{asset_params_get}.1                                                                                                           asset.total                                                                                          asset/contract.py:55
    //                                                virtual: store check%0#0 to l-stack (no copy)       (𝕡) asset#0 | check%0#0,{asset_params_get}.0                                                                    asset.total                                                                                          asset/contract.py:55
    //                                                virtual: store value%0#0 to l-stack (no copy)       (𝕡) asset#0 | value%0#0,check%0#0                                                                               asset.total                                                                                          asset/contract.py:55
    //                                                virtual: load check%0#0 from l-stack (no copy)      (𝕡) asset#0 | value%0#0,check%0#0                                                                               asset.total                                                                                          asset/contract.py:55
    assert // asset exists                            //                                                                                                     (𝕡) asset#0 | value%0#0                                                                                                                                           asset.total                                                                                          asset/contract.py:55
    //                                                virtual: load value%0#0 from l-stack (no copy)      (𝕡) asset#0 | value%0#0                                                                                         asset.total == 10000000, "total"                                                                     asset/contract.py:55
    int 10000000                                      //                                                                                                     (𝕡) asset#0 | value%0#0,10000000                                                                                                                                  10000000                                                                                             asset/contract.py:55
    ==                                                //                                                                                                     (𝕡) asset#0 | {==}                                                                                                                                                asset.total == 10000000, "total"                                                                     asset/contract.py:55
    //                                                virtual: store tmp%1#0 to l-stack (no copy)         (𝕡) asset#0 | tmp%1#0                                                                                           asset.total == 10000000, "total"                                                                     asset/contract.py:55
    //                                                virtual: load tmp%1#0 from l-stack (no copy)        (𝕡) asset#0 | tmp%1#0                                                                                           assert asset.total == 10000000, "total"                                                              asset/contract.py:55
    assert // total                                   //                                                                                                     (𝕡) asset#0 |                                                                                                                                                     assert asset.total == 10000000, "total"                                                              asset/contract.py:55
    frame_dig -1                                      //                                                  load asset#0 from parameters                       (𝕡) asset#0 | asset#0                                                                                                                                             asset.decimals                                                                                       asset/contract.py:56
    asset_params_get AssetDecimals                    //                                                                                                     (𝕡) asset#0 | {asset_params_get}.0,{asset_params_get}.1                                                                                                           asset.decimals                                                                                       asset/contract.py:56
    //                                                virtual: store check%1#0 to l-stack (no copy)       (𝕡) asset#0 | check%1#0,{asset_params_get}.0                                                                    asset.decimals                                                                                       asset/contract.py:56
    //                                                virtual: store value%1#0 to l-stack (no copy)       (𝕡) asset#0 | value%1#0,check%1#0                                                                               asset.decimals                                                                                       asset/contract.py:56
    //                                                virtual: load check%1#0 from l-stack (no copy)      (𝕡) asset#0 | value%1#0,check%1#0                                                                               asset.decimals                                                                                       asset/contract.py:56
    assert // asset exists                            //                                                                                                     (𝕡) asset#0 | value%1#0                                                                                                                                           asset.decimals                                                                                       asset/contract.py:56
    //                                                virtual: load value%1#0 from l-stack (no copy)      (𝕡) asset#0 | value%1#0                                                                                         asset.decimals == 0, "decimals"                                                                      asset/contract.py:56
    !                                                 //                                                                                                     (𝕡) asset#0 | {!}                                                                                                                                                 asset.decimals == 0, "decimals"                                                                      asset/contract.py:56
    //                                                virtual: store tmp%2#0 to l-stack (no copy)         (𝕡) asset#0 | tmp%2#0                                                                                           asset.decimals == 0, "decimals"                                                                      asset/contract.py:56
    //                                                virtual: load tmp%2#0 from l-stack (no copy)        (𝕡) asset#0 | tmp%2#0                                                                                           assert asset.decimals == 0, "decimals"                                                               asset/contract.py:56
    assert // decimals                                //                                                                                                     (𝕡) asset#0 |                                                                                                                                                     assert asset.decimals == 0, "decimals"                                                               asset/contract.py:56
    frame_dig -1                                      //                                                  load asset#0 from parameters                       (𝕡) asset#0 | asset#0                                                                                                                                             asset.default_frozen                                                                                 asset/contract.py:57
    asset_params_get AssetDefaultFrozen               //                                                                                                     (𝕡) asset#0 | {asset_params_get}.0,{asset_params_get}.1                                                                                                           asset.default_frozen                                                                                 asset/contract.py:57
    //                                                virtual: store check%2#0 to l-stack (no copy)       (𝕡) asset#0 | check%2#0,{asset_params_get}.0                                                                    asset.default_frozen                                                                                 asset/contract.py:57
    //                                                virtual: store value%2#0 to l-stack (no copy)       (𝕡) asset#0 | value%2#0,check%2#0                                                                               asset.default_frozen                                                                                 asset/contract.py:57
    //                                                virtual: load check%2#0 from l-stack (no copy)      (𝕡) asset#0 | value%2#0,check%2#0                                                                               asset.default_frozen                                                                                 asset/contract.py:57
    assert // asset exists                            //                                                                                                     (𝕡) asset#0 | value%2#0                                                                                                                                           asset.default_frozen                                                                                 asset/contract.py:57
    //                                                virtual: load value%2#0 from l-stack (no copy)      (𝕡) asset#0 | value%2#0                                                                                         not asset.default_frozen                                                                             asset/contract.py:57
    !                                                 //                                                                                                     (𝕡) asset#0 | {!}                                                                                                                                                 not asset.default_frozen                                                                             asset/contract.py:57
    //                                                virtual: store tmp%3#0 to l-stack (no copy)         (𝕡) asset#0 | tmp%3#0                                                                                           not asset.default_frozen                                                                             asset/contract.py:57
    //                                                virtual: load tmp%3#0 from l-stack (no copy)        (𝕡) asset#0 | tmp%3#0                                                                                           assert not asset.default_frozen, "default frozen"                                                    asset/contract.py:57
    assert // default frozen                          //                                                                                                     (𝕡) asset#0 |                                                                                                                                                     assert not asset.default_frozen, "default frozen"                                                    asset/contract.py:57
    frame_dig -1                                      //                                                  load asset#0 from parameters                       (𝕡) asset#0 | asset#0                                                                                                                                             asset.unit_name                                                                                      asset/contract.py:58
    asset_params_get AssetUnitName                    //                                                                                                     (𝕡) asset#0 | {asset_params_get}.0,{asset_params_get}.1                                                                                                           asset.unit_name                                                                                      asset/contract.py:58
    //                                                virtual: store check%3#0 to l-stack (no copy)       (𝕡) asset#0 | check%3#0,{asset_params_get}.0                                                                    asset.unit_name                                                                                      asset/contract.py:58
    //                                                virtual: store value%3#0 to l-stack (no copy)       (𝕡) asset#0 | value%3#0,check%3#0                                                                               asset.unit_name                                                                                      asset/contract.py:58
    //                                                virtual: load check%3#0 from l-stack (no copy)      (𝕡) asset#0 | value%3#0,check%3#0                                                                               asset.unit_name                                                                                      asset/contract.py:58
    assert // asset exists                            //                                                                                                     (𝕡) asset#0 | value%3#0                                                                                                                                           asset.unit_name                                                                                      asset/contract.py:58
    //                                                virtual: load value%3#0 from l-stack (no copy)      (𝕡) asset#0 | value%3#0                                                                                         asset.unit_name == b"a", "unit_name"                                                                 asset/contract.py:58
    byte "a"                                          //                                                                                                     (𝕡) asset#0 | value%3#0,"a"                                                                                                                                       b"a"                                                                                                 asset/contract.py:58
    ==                                                //                                                                                                     (𝕡) asset#0 | {==}                                                                                                                                                asset.unit_name == b"a", "unit_name"                                                                 asset/contract.py:58
    //                                                virtual: store tmp%4#0 to l-stack (no copy)         (𝕡) asset#0 | tmp%4#0                                                                                           asset.unit_name == b"a", "unit_name"                                                                 asset/contract.py:58
    //                                                virtual: load tmp%4#0 from l-stack (no copy)        (𝕡) asset#0 | tmp%4#0                                                                                           assert asset.unit_name == b"a", "unit_name"                                                          asset/contract.py:58
    assert // unit_name                               //                                                                                                     (𝕡) asset#0 |                                                                                                                                                     assert asset.unit_name == b"a", "unit_name"                                                          asset/contract.py:58
    frame_dig -1                                      //                                                  load asset#0 from parameters                       (𝕡) asset#0 | asset#0                                                                                                                                             asset.name                                                                                           asset/contract.py:59
    asset_params_get AssetName                        //                                                                                                     (𝕡) asset#0 | {asset_params_get}.0,{asset_params_get}.1                                                                                                           asset.name                                                                                           asset/contract.py:59
    //                                                virtual: store check%4#0 to l-stack (no copy)       (𝕡) asset#0 | check%4#0,{asset_params_get}.0                                                                    asset.name                                                                                           asset/contract.py:59
    //                                                virtual: store value%4#0 to l-stack (no copy)       (𝕡) asset#0 | value%4#0,check%4#0                                                                               asset.name                                                                                           asset/contract.py:59
    //                                                virtual: load check%4#0 from l-stack (no copy)      (𝕡) asset#0 | value%4#0,check%4#0                                                                               asset.name                                                                                           asset/contract.py:59
    assert // asset exists                            //                                                                                                     (𝕡) asset#0 | value%4#0                                                                                                                                           asset.name                                                                                           asset/contract.py:59
    //                                                virtual: load value%4#0 from l-stack (no copy)      (𝕡) asset#0 | value%4#0                                                                                         asset.name == b"asset a", "name"                                                                     asset/contract.py:59
    byte "asset a"                                    //                                                                                                     (𝕡) asset#0 | value%4#0,"asset a"                                                                                                                                 b"asset a"                                                                                           asset/contract.py:59
    ==                                                //                                                                                                     (𝕡) asset#0 | {==}                                                                                                                                                asset.name == b"asset a", "name"                                                                     asset/contract.py:59
    //                                                virtual: store tmp%5#0 to l-stack (no copy)         (𝕡) asset#0 | tmp%5#0                                                                                           asset.name == b"asset a", "name"                                                                     asset/contract.py:59
    //                                                virtual: load tmp%5#0 from l-stack (no copy)        (𝕡) asset#0 | tmp%5#0                                                                                           assert asset.name == b"asset a", "name"                                                              asset/contract.py:59
    assert // name                                    //                                                                                                     (𝕡) asset#0 |                                                                                                                                                     assert asset.name == b"asset a", "name"                                                              asset/contract.py:59
    frame_dig -1                                      //                                                  load asset#0 from parameters                       (𝕡) asset#0 | asset#0                                                                                                                                             asset.url                                                                                            asset/contract.py:60
    asset_params_get AssetURL                         //                                                                                                     (𝕡) asset#0 | {asset_params_get}.0,{asset_params_get}.1                                                                                                           asset.url                                                                                            asset/contract.py:60
    //                                                virtual: store check%5#0 to l-stack (no copy)       (𝕡) asset#0 | check%5#0,{asset_params_get}.0                                                                    asset.url                                                                                            asset/contract.py:60
    //                                                virtual: store value%5#0 to l-stack (no copy)       (𝕡) asset#0 | value%5#0,check%5#0                                                                               asset.url                                                                                            asset/contract.py:60
    //                                                virtual: load check%5#0 from l-stack (no copy)      (𝕡) asset#0 | value%5#0,check%5#0                                                                               asset.url                                                                                            asset/contract.py:60
    assert // asset exists                            //                                                                                                     (𝕡) asset#0 | value%5#0                                                                                                                                           asset.url                                                                                            asset/contract.py:60
    //                                                virtual: load value%5#0 from l-stack (no copy)      (𝕡) asset#0 | value%5#0                                                                                         asset.url == b"", "URL"                                                                              asset/contract.py:60
    byte ""                                           //                                                                                                     (𝕡) asset#0 | value%5#0,""                                                                                                                                        b""                                                                                                  asset/contract.py:60
    ==                                                //                                                                                                     (𝕡) asset#0 | {==}                                                                                                                                                asset.url == b"", "URL"                                                                              asset/contract.py:60
    //                                                virtual: store tmp%6#0 to l-stack (no copy)         (𝕡) asset#0 | tmp%6#0                                                                                           asset.url == b"", "URL"                                                                              asset/contract.py:60
    //                                                virtual: load tmp%6#0 from l-stack (no copy)        (𝕡) asset#0 | tmp%6#0                                                                                           assert asset.url == b"", "URL"                                                                       asset/contract.py:60
    assert // URL                                     //                                                                                                     (𝕡) asset#0 |                                                                                                                                                     assert asset.url == b"", "URL"                                                                       asset/contract.py:60
    frame_dig -1                                      //                                                  load asset#0 from parameters                       (𝕡) asset#0 | asset#0                                                                                                                                             asset.metadata_hash                                                                                  asset/contract.py:61
    asset_params_get AssetMetadataHash                //                                                                                                     (𝕡) asset#0 | {asset_params_get}.0,{asset_params_get}.1                                                                                                           asset.metadata_hash                                                                                  asset/contract.py:61
    //                                                virtual: store check%6#0 to l-stack (no copy)       (𝕡) asset#0 | check%6#0,{asset_params_get}.0                                                                    asset.metadata_hash                                                                                  asset/contract.py:61
    //                                                virtual: store value%6#0 to l-stack (no copy)       (𝕡) asset#0 | value%6#0,check%6#0                                                                               asset.metadata_hash                                                                                  asset/contract.py:61
    //                                                virtual: load check%6#0 from l-stack (no copy)      (𝕡) asset#0 | value%6#0,check%6#0                                                                               asset.metadata_hash                                                                                  asset/contract.py:61
    assert // asset exists                            //                                                                                                     (𝕡) asset#0 | value%6#0                                                                                                                                           asset.metadata_hash                                                                                  asset/contract.py:61
    int 32                                            //                                                                                                     (𝕡) asset#0 | value%6#0,32                                                                                                                                        32                                                                                                   asset/contract.py:61
    bzero                                             //                                                                                                     (𝕡) asset#0 | value%6#0,{bzero}                                                                                                                                   bzero(32)                                                                                            asset/contract.py:61
    //                                                virtual: store tmp%7#0 to l-stack (no copy)         (𝕡) asset#0 | value%6#0,tmp%7#0                                                                                 bzero(32)                                                                                            asset/contract.py:61
    //                                                virtual: load value%6#0 from l-stack (no copy)      (𝕡) asset#0 | tmp%7#0,value%6#0                                                                                 asset.metadata_hash == bzero(32), "hash"                                                             asset/contract.py:61
    //                                                virtual: load tmp%7#0 from l-stack (no copy)        (𝕡) asset#0 | value%6#0,tmp%7#0                                                                                 asset.metadata_hash == bzero(32), "hash"                                                             asset/contract.py:61
    ==                                                //                                                                                                     (𝕡) asset#0 | {==}                                                                                                                                                asset.metadata_hash == bzero(32), "hash"                                                             asset/contract.py:61
    //                                                virtual: store tmp%8#0 to l-stack (no copy)         (𝕡) asset#0 | tmp%8#0                                                                                           asset.metadata_hash == bzero(32), "hash"                                                             asset/contract.py:61
    //                                                virtual: load tmp%8#0 from l-stack (no copy)        (𝕡) asset#0 | tmp%8#0                                                                                           assert asset.metadata_hash == bzero(32), "hash"                                                      asset/contract.py:61
    assert // hash                                    //                                                                                                     (𝕡) asset#0 |                                                                                                                                                     assert asset.metadata_hash == bzero(32), "hash"                                                      asset/contract.py:61
    frame_dig -1                                      //                                                  load asset#0 from parameters                       (𝕡) asset#0 | asset#0                                                                                                                                             asset.manager                                                                                        asset/contract.py:62
    asset_params_get AssetManager                     //                                                                                                     (𝕡) asset#0 | {asset_params_get}.0,{asset_params_get}.1                                                                                                           asset.manager                                                                                        asset/contract.py:62
    //                                                virtual: store check%7#0 to l-stack (no copy)       (𝕡) asset#0 | check%7#0,{asset_params_get}.0                                                                    asset.manager                                                                                        asset/contract.py:62
    //                                                virtual: store value%7#0 to l-stack (no copy)       (𝕡) asset#0 | value%7#0,check%7#0                                                                               asset.manager                                                                                        asset/contract.py:62
    //                                                virtual: load check%7#0 from l-stack (no copy)      (𝕡) asset#0 | value%7#0,check%7#0                                                                               asset.manager                                                                                        asset/contract.py:62
    assert // asset exists                            //                                                                                                     (𝕡) asset#0 | value%7#0                                                                                                                                           asset.manager                                                                                        asset/contract.py:62
    global ZeroAddress                                //                                                                                                     (𝕡) asset#0 | value%7#0,{global}                                                                                                                                  Global.zero_address                                                                                  asset/contract.py:62
    //                                                virtual: store tmp%9#0 to l-stack (no copy)         (𝕡) asset#0 | value%7#0,tmp%9#0                                                                                 Global.zero_address                                                                                  asset/contract.py:62
    //                                                virtual: load value%7#0 from l-stack (no copy)      (𝕡) asset#0 | tmp%9#0,value%7#0                                                                                 asset.manager == Global.zero_address, "manager"                                                      asset/contract.py:62
    //                                                virtual: load tmp%9#0 from l-stack (no copy)        (𝕡) asset#0 | value%7#0,tmp%9#0                                                                                 asset.manager == Global.zero_address, "manager"                                                      asset/contract.py:62
    ==                                                //                                                                                                     (𝕡) asset#0 | {==}                                                                                                                                                asset.manager == Global.zero_address, "manager"                                                      asset/contract.py:62
    //                                                virtual: store tmp%10#0 to l-stack (no copy)        (𝕡) asset#0 | tmp%10#0                                                                                          asset.manager == Global.zero_address, "manager"                                                      asset/contract.py:62
    //                                                virtual: load tmp%10#0 from l-stack (no copy)       (𝕡) asset#0 | tmp%10#0                                                                                          assert asset.manager == Global.zero_address, "manager"                                               asset/contract.py:62
    assert // manager                                 //                                                                                                     (𝕡) asset#0 |                                                                                                                                                     assert asset.manager == Global.zero_address, "manager"                                               asset/contract.py:62
    frame_dig -1                                      //                                                  load asset#0 from parameters                       (𝕡) asset#0 | asset#0                                                                                                                                             asset.reserve                                                                                        asset/contract.py:63
    asset_params_get AssetReserve                     //                                                                                                     (𝕡) asset#0 | {asset_params_get}.0,{asset_params_get}.1                                                                                                           asset.reserve                                                                                        asset/contract.py:63
    //                                                virtual: store check%8#0 to l-stack (no copy)       (𝕡) asset#0 | check%8#0,{asset_params_get}.0                                                                    asset.reserve                                                                                        asset/contract.py:63
    //                                                virtual: store value%8#0 to l-stack (no copy)       (𝕡) asset#0 | value%8#0,check%8#0                                                                               asset.reserve                                                                                        asset/contract.py:63
    //                                                virtual: load check%8#0 from l-stack (no copy)      (𝕡) asset#0 | value%8#0,check%8#0                                                                               asset.reserve                                                                                        asset/contract.py:63
    assert // asset exists                            //                                                                                                     (𝕡) asset#0 | value%8#0                                                                                                                                           asset.reserve                                                                                        asset/contract.py:63
    global ZeroAddress                                //                                                                                                     (𝕡) asset#0 | value%8#0,{global}                                                                                                                                  Global.zero_address                                                                                  asset/contract.py:63
    //                                                virtual: store tmp%11#0 to l-stack (no copy)        (𝕡) asset#0 | value%8#0,tmp%11#0                                                                                Global.zero_address                                                                                  asset/contract.py:63
    //                                                virtual: load value%8#0 from l-stack (no copy)      (𝕡) asset#0 | tmp%11#0,value%8#0                                                                                asset.reserve == Global.zero_address, "reserve"                                                      asset/contract.py:63
    //                                                virtual: load tmp%11#0 from l-stack (no copy)       (𝕡) asset#0 | value%8#0,tmp%11#0                                                                                asset.reserve == Global.zero_address, "reserve"                                                      asset/contract.py:63
    ==                                                //                                                                                                     (𝕡) asset#0 | {==}                                                                                                                                                asset.reserve == Global.zero_address, "reserve"                                                      asset/contract.py:63
    //                                                virtual: store tmp%12#0 to l-stack (no copy)        (𝕡) asset#0 | tmp%12#0                                                                                          asset.reserve == Global.zero_address, "reserve"                                                      asset/contract.py:63
    //                                                virtual: load tmp%12#0 from l-stack (no copy)       (𝕡) asset#0 | tmp%12#0                                                                                          assert asset.reserve == Global.zero_address, "reserve"                                               asset/contract.py:63
    assert // reserve                                 //                                                                                                     (𝕡) asset#0 |                                                                                                                                                     assert asset.reserve == Global.zero_address, "reserve"                                               asset/contract.py:63
    frame_dig -1                                      //                                                  load asset#0 from parameters                       (𝕡) asset#0 | asset#0                                                                                                                                             asset.freeze                                                                                         asset/contract.py:64
    asset_params_get AssetFreeze                      //                                                                                                     (𝕡) asset#0 | {asset_params_get}.0,{asset_params_get}.1                                                                                                           asset.freeze                                                                                         asset/contract.py:64
    //                                                virtual: store check%9#0 to l-stack (no copy)       (𝕡) asset#0 | check%9#0,{asset_params_get}.0                                                                    asset.freeze                                                                                         asset/contract.py:64
    //                                                virtual: store value%9#0 to l-stack (no copy)       (𝕡) asset#0 | value%9#0,check%9#0                                                                               asset.freeze                                                                                         asset/contract.py:64
    //                                                virtual: load check%9#0 from l-stack (no copy)      (𝕡) asset#0 | value%9#0,check%9#0                                                                               asset.freeze                                                                                         asset/contract.py:64
    assert // asset exists                            //                                                                                                     (𝕡) asset#0 | value%9#0                                                                                                                                           asset.freeze                                                                                         asset/contract.py:64
    global ZeroAddress                                //                                                                                                     (𝕡) asset#0 | value%9#0,{global}                                                                                                                                  Global.zero_address                                                                                  asset/contract.py:64
    //                                                virtual: store tmp%13#0 to l-stack (no copy)        (𝕡) asset#0 | value%9#0,tmp%13#0                                                                                Global.zero_address                                                                                  asset/contract.py:64
    //                                                virtual: load value%9#0 from l-stack (no copy)      (𝕡) asset#0 | tmp%13#0,value%9#0                                                                                asset.freeze == Global.zero_address, "freeze"                                                        asset/contract.py:64
    //                                                virtual: load tmp%13#0 from l-stack (no copy)       (𝕡) asset#0 | value%9#0,tmp%13#0                                                                                asset.freeze == Global.zero_address, "freeze"                                                        asset/contract.py:64
    ==                                                //                                                                                                     (𝕡) asset#0 | {==}                                                                                                                                                asset.freeze == Global.zero_address, "freeze"                                                        asset/contract.py:64
    //                                                virtual: store tmp%14#0 to l-stack (no copy)        (𝕡) asset#0 | tmp%14#0                                                                                          asset.freeze == Global.zero_address, "freeze"                                                        asset/contract.py:64
    //                                                virtual: load tmp%14#0 from l-stack (no copy)       (𝕡) asset#0 | tmp%14#0                                                                                          assert asset.freeze == Global.zero_address, "freeze"                                                 asset/contract.py:64
    assert // freeze                                  //                                                                                                     (𝕡) asset#0 |                                                                                                                                                     assert asset.freeze == Global.zero_address, "freeze"                                                 asset/contract.py:64
    frame_dig -1                                      //                                                  load asset#0 from parameters                       (𝕡) asset#0 | asset#0                                                                                                                                             asset.clawback                                                                                       asset/contract.py:65
    asset_params_get AssetClawback                    //                                                                                                     (𝕡) asset#0 | {asset_params_get}.0,{asset_params_get}.1                                                                                                           asset.clawback                                                                                       asset/contract.py:65
    //                                                virtual: store check%10#0 to l-stack (no copy)      (𝕡) asset#0 | check%10#0,{asset_params_get}.0                                                                   asset.clawback                                                                                       asset/contract.py:65
    //                                                virtual: store value%10#0 to l-stack (no copy)      (𝕡) asset#0 | value%10#0,check%10#0                                                                             asset.clawback                                                                                       asset/contract.py:65
    //                                                virtual: load check%10#0 from l-stack (no copy)     (𝕡) asset#0 | value%10#0,check%10#0                                                                             asset.clawback                                                                                       asset/contract.py:65
    assert // asset exists                            //                                                                                                     (𝕡) asset#0 | value%10#0                                                                                                                                          asset.clawback                                                                                       asset/contract.py:65
    global ZeroAddress                                //                                                                                                     (𝕡) asset#0 | value%10#0,{global}                                                                                                                                 Global.zero_address                                                                                  asset/contract.py:65
    //                                                virtual: store tmp%15#0 to l-stack (no copy)        (𝕡) asset#0 | value%10#0,tmp%15#0                                                                               Global.zero_address                                                                                  asset/contract.py:65
    //                                                virtual: load value%10#0 from l-stack (no copy)     (𝕡) asset#0 | tmp%15#0,value%10#0                                                                               asset.clawback == Global.zero_address, "clawback"                                                    asset/contract.py:65
    //                                                virtual: load tmp%15#0 from l-stack (no copy)       (𝕡) asset#0 | value%10#0,tmp%15#0                                                                               asset.clawback == Global.zero_address, "clawback"                                                    asset/contract.py:65
    ==                                                //                                                                                                     (𝕡) asset#0 | {==}                                                                                                                                                asset.clawback == Global.zero_address, "clawback"                                                    asset/contract.py:65
    //                                                virtual: store tmp%16#0 to l-stack (no copy)        (𝕡) asset#0 | tmp%16#0                                                                                          asset.clawback == Global.zero_address, "clawback"                                                    asset/contract.py:65
    //                                                virtual: load tmp%16#0 from l-stack (no copy)       (𝕡) asset#0 | tmp%16#0                                                                                          assert asset.clawback == Global.zero_address, "clawback"                                             asset/contract.py:65
    assert // clawback                                //                                                                                                     (𝕡) asset#0 |                                                                                                                                                     assert asset.clawback == Global.zero_address, "clawback"                                             asset/contract.py:65
    frame_dig -1                                      //                                                  load asset#0 from parameters                       (𝕡) asset#0 | asset#0                                                                                                                                             asset.creator                                                                                        asset/contract.py:66
    asset_params_get AssetCreator                     //                                                                                                     (𝕡) asset#0 | {asset_params_get}.0,{asset_params_get}.1                                                                                                           asset.creator                                                                                        asset/contract.py:66
    //                                                virtual: store check%11#0 to l-stack (no copy)      (𝕡) asset#0 | check%11#0,{asset_params_get}.0                                                                   asset.creator                                                                                        asset/contract.py:66
    //                                                virtual: store value%11#0 to l-stack (no copy)      (𝕡) asset#0 | value%11#0,check%11#0                                                                             asset.creator                                                                                        asset/contract.py:66
    //                                                virtual: load check%11#0 from l-stack (no copy)     (𝕡) asset#0 | value%11#0,check%11#0                                                                             asset.creator                                                                                        asset/contract.py:66
    assert // asset exists                            //                                                                                                     (𝕡) asset#0 | value%11#0                                                                                                                                          asset.creator                                                                                        asset/contract.py:66
    global CreatorAddress                             //                                                                                                     (𝕡) asset#0 | value%11#0,{global}                                                                                                                                 Global.creator_address                                                                               asset/contract.py:66
    //                                                virtual: store tmp%17#0 to l-stack (no copy)        (𝕡) asset#0 | value%11#0,tmp%17#0                                                                               Global.creator_address                                                                               asset/contract.py:66
    //                                                virtual: load value%11#0 from l-stack (no copy)     (𝕡) asset#0 | tmp%17#0,value%11#0                                                                               asset.creator == Global.creator_address, "creator"                                                   asset/contract.py:66
    //                                                virtual: load tmp%17#0 from l-stack (no copy)       (𝕡) asset#0 | value%11#0,tmp%17#0                                                                               asset.creator == Global.creator_address, "creator"                                                   asset/contract.py:66
    ==                                                //                                                                                                     (𝕡) asset#0 | {==}                                                                                                                                                asset.creator == Global.creator_address, "creator"                                                   asset/contract.py:66
    //                                                virtual: store tmp%18#0 to l-stack (no copy)        (𝕡) asset#0 | tmp%18#0                                                                                          asset.creator == Global.creator_address, "creator"                                                   asset/contract.py:66
    //                                                virtual: load tmp%18#0 from l-stack (no copy)       (𝕡) asset#0 | tmp%18#0                                                                                          assert asset.creator == Global.creator_address, "creator"                                            asset/contract.py:66
    assert // creator                                 //                                                                                                     (𝕡) asset#0 |                                                                                                                                                     assert asset.creator == Global.creator_address, "creator"                                            asset/contract.py:66
    global CurrentApplicationAddress                  //                                                                                                     (𝕡) asset#0 | {global}                                                                                                                                            Global.current_application_address                                                                   asset/contract.py:67
    //                                                virtual: store tmp%19#0 to l-stack (no copy)        (𝕡) asset#0 | tmp%19#0                                                                                          Global.current_application_address                                                                   asset/contract.py:67
    //                                                virtual: load tmp%19#0 from l-stack (no copy)       (𝕡) asset#0 | tmp%19#0                                                                                          Global.current_application_address.is_opted_in(asset)                                                asset/contract.py:67
    frame_dig -1                                      //                                                  load asset#0 from parameters                       (𝕡) asset#0 | tmp%19#0,asset#0                                                                                                                                    Global.current_application_address.is_opted_in(asset)                                                asset/contract.py:67
    asset_holding_get AssetBalance                    //                                                                                                     (𝕡) asset#0 | {asset_holding_get}.0,{asset_holding_get}.1                                                                                                         Global.current_application_address.is_opted_in(asset)                                                asset/contract.py:67
    cover 1                                           //                                                  store tmp%21#0 to l-stack (no copy)                (𝕡) asset#0 | tmp%21#0,{asset_holding_get}.0                                                                                                                      Global.current_application_address.is_opted_in(asset)                                                asset/contract.py:67
    pop                                               //                                                                                                     (𝕡) asset#0 | tmp%21#0                                                                                                                                            Global.current_application_address.is_opted_in(asset)                                                asset/contract.py:67
    //                                                virtual: load tmp%21#0 from l-stack (no copy)       (𝕡) asset#0 | tmp%21#0                                                                                          assert Global.current_application_address.is_opted_in(asset), "asset opted in"                       asset/contract.py:67
    assert // asset opted in                          //                                                                                                     (𝕡) asset#0 |                                                                                                                                                     assert Global.current_application_address.is_opted_in(asset), "asset opted in"                       asset/contract.py:67
    retsub                                            //


// test_cases.asset.contract.Reference.__init__() -> void:
__init__:
    proto 0 0                                         //                                                                                                                                                                                                                                                                       def __init__(self) -> None:                                                                          asset/contract.py:17

__init___block@0:
    byte "asa"                                        //                                                                                                     "asa"                                                                                                                                                             self.asa                                                                                             asset/contract.py:18
    int 0                                             //                                                                                                     "asa",0                                                                                                                                                           Asset()                                                                                              asset/contract.py:18
    app_global_put                                    //                                                                                                                                                                                                                                                                       self.asa = Asset()                                                                                   asset/contract.py:18
    retsub                                            //

