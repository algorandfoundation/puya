// Op                                                                                     Stack (out)
// test_cases.asset.contract.Reference.approval_program() -> uint64:
subroutine main:
    main_block@0:
        txn ApplicationID                                                                 tmp%0#0
        v-store tmp%0#0
        v-load tmp%0#0                                                                    tmp%0#0
        bz main_call___init__@1 ; b main_after_if_else@2

    main_call___init__@1:
        // asset/contract.py:18
        // self.asa = Asset()
        byte "asa"                                                                        "asa"
        int 0                                                                             "asa",0
        app_global_put
        b main_after_if_else@2

    main_after_if_else@2:
        // asset/contract.py:22
        // if Txn.num_app_args == 1:
        txn NumAppArgs                                                                    tmp%4#0
        v-store tmp%4#0
        v-load tmp%4#0                                                                    tmp%4#0
        int 1                                                                             tmp%4#0,1
        ==                                                                                tmp%5#0
        v-store tmp%5#0
        v-load tmp%5#0                                                                    tmp%5#0
        bz main_after_if_else@10 ; b main_if_body@3

    main_if_body@3:
        // asset/contract.py:23
        // if Txn.application_args(0) == b"opt_in":
        txna ApplicationArgs 0                                                            tmp%6#0
        v-store tmp%6#0
        v-load tmp%6#0                                                                    tmp%6#0
        byte 0x6f70745f696e                                                               tmp%6#0,0x6f70745f696e
        ==                                                                                tmp%7#0
        v-store tmp%7#0
        v-load tmp%7#0                                                                    tmp%7#0
        bz main_else_body@5 ; b main_if_body@4

    main_if_body@4:
        // asset/contract.py:24
        // asset = Txn.assets(0)
        txna Assets 0                                                                     asset#0
        v-store asset#0
        // asset/contract.py:39
        // assert Txn.sender == Global.creator_address, "Only creator can opt in to ASA"
        txn Sender                                                                        tmp%0#2
        v-store tmp%0#2
        global CreatorAddress                                                             tmp%1#2
        v-store tmp%1#2
        v-load tmp%0#2                                                                    tmp%0#2
        v-load tmp%1#2                                                                    tmp%0#2,tmp%1#2
        ==                                                                                tmp%2#1
        v-store tmp%2#1
        v-load tmp%2#1                                                                    tmp%2#1
        assert // Only creator can opt in to ASA
        // asset/contract.py:41
        // assert not self.asa, "ASA already opted in"
        int 0                                                                             0
        byte "asa"                                                                        0,"asa"
        app_global_get_ex                                                                 maybe_value%0#0,maybe_exists%0#0
        v-store maybe_exists%0#0                                                          maybe_value%0#0
        v-store maybe_value%0#0
        v-load maybe_exists%0#0                                                           maybe_exists%0#0
        assert // check self.asa exists
        v-load maybe_value%0#0                                                            maybe_value%0#0
        !                                                                                 tmp%3#1
        v-store tmp%3#1
        v-load tmp%3#1                                                                    tmp%3#1
        assert // ASA already opted in
        // asset/contract.py:43
        // self.asa = asset
        byte "asa"                                                                        "asa"
        v-load asset#0                                                                    "asa",asset#0
        app_global_put
        // asset/contract.py:46
        // ITxnCreate.begin()
        itxn_begin
        // asset/contract.py:47
        // ITxnCreate.set_type_enum(TransactionType.AssetTransfer)
        int axfer                                                                         axfer
        itxn_field TypeEnum
        // asset/contract.py:48
        // ITxnCreate.set_fee(UInt64(0))  # cover fee with outer txn
        int 0                                                                             0
        itxn_field Fee
        // asset/contract.py:49
        // ITxnCreate.set_asset_receiver(Global.current_application_address)
        global CurrentApplicationAddress                                                  tmp%4#2
        v-store tmp%4#2
        v-load tmp%4#2                                                                    tmp%4#2
        itxn_field AssetReceiver
        // asset/contract.py:50
        // ITxnCreate.set_xfer_asset(asset)
        v-load asset#0                                                                    asset#0
        itxn_field XferAsset
        // asset/contract.py:51
        // ITxnCreate.submit()
        itxn_submit
        b main_after_if_else@10

    main_else_body@5:
        // asset/contract.py:26
        // elif Txn.application_args(0) == b"is_opted_in":
        txna ApplicationArgs 0                                                            tmp%9#0
        v-store tmp%9#0
        v-load tmp%9#0                                                                    tmp%9#0
        byte 0x69735f6f707465645f696e                                                     tmp%9#0,0x69735f6f707465645f696e
        ==                                                                                tmp%10#0
        v-store tmp%10#0
        v-load tmp%10#0                                                                   tmp%10#0
        assert // Expected opt_in or is_opted_in
        // asset/contract.py:27
        // asset = Txn.assets(0)
        txna Assets 0                                                                     asset#0
        v-store asset#0
        // asset/contract.py:55
        // assert self.asa == asset, "asset self.asa == asset"
        int 0                                                                             0
        byte "asa"                                                                        0,"asa"
        app_global_get_ex                                                                 maybe_value%0#0,maybe_exists%0#0
        v-store maybe_exists%0#0                                                          maybe_value%0#0
        v-store maybe_value%0#0
        v-load maybe_exists%0#0                                                           maybe_exists%0#0
        assert // check self.asa exists
        v-load maybe_value%0#0                                                            maybe_value%0#0
        v-load asset#0                                                                    maybe_value%0#0,asset#0
        ==                                                                                tmp%0#0
        v-store tmp%0#0
        v-load tmp%0#0                                                                    tmp%0#0
        assert // asset self.asa == asset
        // asset/contract.py:56
        // assert asset.total == 10000000, "total"
        v-load asset#0                                                                    asset#0
        asset_params_get AssetTotal                                                       value%0#0,check%0#0
        v-store check%0#0                                                                 value%0#0
        v-store value%0#0
        v-load check%0#0                                                                  check%0#0
        assert // asset exists
        v-load value%0#0                                                                  value%0#0
        int 10000000                                                                      value%0#0,10000000
        ==                                                                                tmp%1#1
        v-store tmp%1#1
        v-load tmp%1#1                                                                    tmp%1#1
        assert // total
        // asset/contract.py:57
        // assert asset.decimals == 0, "decimals"
        v-load asset#0                                                                    asset#0
        asset_params_get AssetDecimals                                                    value%1#0,check%1#0
        v-store check%1#0                                                                 value%1#0
        v-store value%1#0
        v-load check%1#0                                                                  check%1#0
        assert // asset exists
        v-load value%1#0                                                                  value%1#0
        !                                                                                 tmp%2#1
        v-store tmp%2#1
        v-load tmp%2#1                                                                    tmp%2#1
        assert // decimals
        // asset/contract.py:58
        // assert not asset.default_frozen, "default frozen"
        v-load asset#0                                                                    asset#0
        asset_params_get AssetDefaultFrozen                                               value%2#0,check%2#0
        v-store check%2#0                                                                 value%2#0
        v-store value%2#0
        v-load check%2#0                                                                  check%2#0
        assert // asset exists
        v-load value%2#0                                                                  value%2#0
        !                                                                                 tmp%3#1
        v-store tmp%3#1
        v-load tmp%3#1                                                                    tmp%3#1
        assert // default frozen
        // asset/contract.py:59
        // assert asset.unit_name == b"a", "unit_name"
        v-load asset#0                                                                    asset#0
        asset_params_get AssetUnitName                                                    value%3#0,check%3#0
        v-store check%3#0                                                                 value%3#0
        v-store value%3#0
        v-load check%3#0                                                                  check%3#0
        assert // asset exists
        v-load value%3#0                                                                  value%3#0
        byte 0x61                                                                         value%3#0,0x61
        ==                                                                                tmp%4#1
        v-store tmp%4#1
        v-load tmp%4#1                                                                    tmp%4#1
        assert // unit_name
        // asset/contract.py:60
        // assert asset.name == b"asset a", "name"
        v-load asset#0                                                                    asset#0
        asset_params_get AssetName                                                        value%4#0,check%4#0
        v-store check%4#0                                                                 value%4#0
        v-store value%4#0
        v-load check%4#0                                                                  check%4#0
        assert // asset exists
        v-load value%4#0                                                                  value%4#0
        byte 0x61737365742061                                                             value%4#0,0x61737365742061
        ==                                                                                tmp%5#0
        v-store tmp%5#0
        v-load tmp%5#0                                                                    tmp%5#0
        assert // name
        // asset/contract.py:61
        // assert asset.url == b"", "URL"
        v-load asset#0                                                                    asset#0
        asset_params_get AssetURL                                                         value%5#0,check%5#0
        v-store check%5#0                                                                 value%5#0
        v-store value%5#0
        v-load check%5#0                                                                  check%5#0
        assert // asset exists
        v-load value%5#0                                                                  value%5#0
        byte 0x                                                                           value%5#0,0x
        ==                                                                                tmp%6#1
        v-store tmp%6#1
        v-load tmp%6#1                                                                    tmp%6#1
        assert // URL
        // asset/contract.py:62
        // assert asset.metadata_hash == bzero(32), "hash"
        v-load asset#0                                                                    asset#0
        asset_params_get AssetMetadataHash                                                value%6#0,check%6#0
        v-store check%6#0                                                                 value%6#0
        v-store value%6#0
        v-load check%6#0                                                                  check%6#0
        assert // asset exists
        int 32                                                                            32
        bzero                                                                             tmp%7#1
        v-store tmp%7#1
        v-load value%6#0                                                                  value%6#0
        v-load tmp%7#1                                                                    value%6#0,tmp%7#1
        ==                                                                                tmp%8#1
        v-store tmp%8#1
        v-load tmp%8#1                                                                    tmp%8#1
        assert // hash
        // asset/contract.py:63
        // assert asset.manager == Global.zero_address, "manager"
        v-load asset#0                                                                    asset#0
        asset_params_get AssetManager                                                     value%7#0,check%7#0
        v-store check%7#0                                                                 value%7#0
        v-store value%7#0
        v-load check%7#0                                                                  check%7#0
        assert // asset exists
        global ZeroAddress                                                                tmp%9#1
        v-store tmp%9#1
        v-load value%7#0                                                                  value%7#0
        v-load tmp%9#1                                                                    value%7#0,tmp%9#1
        ==                                                                                tmp%10#0
        v-store tmp%10#0
        v-load tmp%10#0                                                                   tmp%10#0
        assert // manager
        // asset/contract.py:64
        // assert asset.reserve == Global.zero_address, "reserve"
        v-load asset#0                                                                    asset#0
        asset_params_get AssetReserve                                                     value%8#0,check%8#0
        v-store check%8#0                                                                 value%8#0
        v-store value%8#0
        v-load check%8#0                                                                  check%8#0
        assert // asset exists
        global ZeroAddress                                                                tmp%11#1
        v-store tmp%11#1
        v-load value%8#0                                                                  value%8#0
        v-load tmp%11#1                                                                   value%8#0,tmp%11#1
        ==                                                                                tmp%12#0
        v-store tmp%12#0
        v-load tmp%12#0                                                                   tmp%12#0
        assert // reserve
        // asset/contract.py:65
        // assert asset.freeze == Global.zero_address, "freeze"
        v-load asset#0                                                                    asset#0
        asset_params_get AssetFreeze                                                      value%9#0,check%9#0
        v-store check%9#0                                                                 value%9#0
        v-store value%9#0
        v-load check%9#0                                                                  check%9#0
        assert // asset exists
        global ZeroAddress                                                                tmp%13#0
        v-store tmp%13#0
        v-load value%9#0                                                                  value%9#0
        v-load tmp%13#0                                                                   value%9#0,tmp%13#0
        ==                                                                                tmp%14#0
        v-store tmp%14#0
        v-load tmp%14#0                                                                   tmp%14#0
        assert // freeze
        // asset/contract.py:66
        // assert asset.clawback == Global.zero_address, "clawback"
        v-load asset#0                                                                    asset#0
        asset_params_get AssetClawback                                                    value%10#0,check%10#0
        v-store check%10#0                                                                value%10#0
        v-store value%10#0
        v-load check%10#0                                                                 check%10#0
        assert // asset exists
        global ZeroAddress                                                                tmp%15#0
        v-store tmp%15#0
        v-load value%10#0                                                                 value%10#0
        v-load tmp%15#0                                                                   value%10#0,tmp%15#0
        ==                                                                                tmp%16#0
        v-store tmp%16#0
        v-load tmp%16#0                                                                   tmp%16#0
        assert // clawback
        // asset/contract.py:67
        // assert asset.creator == Global.creator_address, "creator"
        v-load asset#0                                                                    asset#0
        asset_params_get AssetCreator                                                     value%11#0,check%11#0
        v-store check%11#0                                                                value%11#0
        v-store value%11#0
        v-load check%11#0                                                                 check%11#0
        assert // asset exists
        global CreatorAddress                                                             tmp%17#0
        v-store tmp%17#0
        v-load value%11#0                                                                 value%11#0
        v-load tmp%17#0                                                                   value%11#0,tmp%17#0
        ==                                                                                tmp%18#0
        v-store tmp%18#0
        v-load tmp%18#0                                                                   tmp%18#0
        assert // creator
        // asset/contract.py:68
        // assert Global.current_application_address.is_opted_in(asset), "asset opted in"
        global CurrentApplicationAddress                                                  tmp%19#0
        v-store tmp%19#0
        v-load tmp%19#0                                                                   tmp%19#0
        v-load asset#0                                                                    tmp%19#0,asset#0
        asset_holding_get AssetBalance                                                    tmp%20#0,tmp%21#0
        v-store tmp%21#0                                                                  tmp%20#0
        v-store tmp%20#0
        v-load tmp%21#0                                                                   tmp%21#0
        assert // asset opted in
        b main_after_if_else@10

    main_after_if_else@10:
        // asset/contract.py:31
        // return True
        int 1                                                                             1
        return


