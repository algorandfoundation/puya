{
  "version": 3,
  "sources": [
    "../reference.py"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAQK;AALL;;AAAA;;;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;AASK;AAAA;AAAA;AAJA;AAAA;AAAA;AALL;;AAAA;AAAA;;;;;AACK;AAEU;;AAFV;AAAA;AAAA;AAAA;AAYA;;;AAAA;;;AAAA;AAAA;;;AAAA;AAEG;;;;;AAAA;;AAAA;AACA;;;;;;;AAAA;AAAA;AACA;;;;;AAAA;AAAA;AAJH;AAAA;AAQG;AAFH;;;AAEG;AAFH;AAAA;AAMG;AAFH;;;AAEG;AAFH;AAAA;AAMG;;AAFH;;;AAEG;AAFH;AAAA;AAMU;AAAA;AAAA;AAAA;AAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAMU;AAAA;AAAA;AAAA;AAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAMU;AAAA;;AAAA;AAAA;AAFV;AAAA;AAAA;AAAA;AAAA;AAAA",
  "op_pc_offset": 0,
  "pc_events": {
    "1": {
      "subroutine": "algopy.arc4.ARC4Contract.approval_program",
      "params": {},
      "block": "main",
      "stack_in": [],
      "op": "intcblock 1 0"
    },
    "5": {
      "op": "bytecblock 0x151f7c75 0x151f7c7500000000000004d2 \"apps\" \"assets\" \"accounts\""
    },
    "46": {
      "op": "intc_0 // 1"
    },
    "47": {
      "op": "txn NumAppArgs",
      "defined_out": [
        "lifted%return#0",
        "tmp%0#1"
      ],
      "stack_out": [
        "lifted%return#0",
        "tmp%0#1"
      ]
    },
    "49": {
      "op": "bz main_bare_routing@24",
      "stack_out": [
        "lifted%return#0"
      ]
    },
    "52": {
      "op": "txn OnCompletion",
      "defined_out": [
        "lifted%return#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "lifted%return#0",
        "tmp%3#0"
      ]
    },
    "54": {
      "op": "!",
      "defined_out": [
        "lifted%return#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "lifted%return#0",
        "tmp%4#0"
      ]
    },
    "55": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": [
        "lifted%return#0"
      ]
    },
    "56": {
      "op": "txn ApplicationID",
      "defined_out": [
        "lifted%return#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "lifted%return#0",
        "tmp%6#0"
      ]
    },
    "58": {
      "op": "assert",
      "stack_out": [
        "lifted%return#0"
      ]
    },
    "59": {
      "op": "pushbytess 0x6c7a1cb5 0xc8480f0c 0x37c0cbf2 0x2d018f8a 0x6728b1a1 0xce7e6cd3 0x0a37f6e1 0x4c894d7e 0x62ebcf89 0x924e778c // method \"acc_ret()address\", method \"asset_ret()uint64\", method \"app_ret()uint64\", method \"store(address,uint64,uint64)void\", method \"store_apps(uint64[])void\", method \"store_assets(uint64[])void\", method \"store_accounts(address[])void\", method \"return_apps()uint64[]\", method \"return_assets()uint64[]\", method \"return_accounts()address[]\"",
      "defined_out": [
        "Method(acc_ret()address)",
        "Method(app_ret()uint64)",
        "Method(asset_ret()uint64)",
        "Method(return_accounts()address[])",
        "Method(return_apps()uint64[])",
        "Method(return_assets()uint64[])",
        "Method(store(address,uint64,uint64)void)",
        "Method(store_accounts(address[])void)",
        "Method(store_apps(uint64[])void)",
        "Method(store_assets(uint64[])void)",
        "lifted%return#0"
      ],
      "stack_out": [
        "lifted%return#0",
        "Method(acc_ret()address)",
        "Method(asset_ret()uint64)",
        "Method(app_ret()uint64)",
        "Method(store(address,uint64,uint64)void)",
        "Method(store_apps(uint64[])void)",
        "Method(store_assets(uint64[])void)",
        "Method(store_accounts(address[])void)",
        "Method(return_apps()uint64[])",
        "Method(return_assets()uint64[])",
        "Method(return_accounts()address[])"
      ]
    },
    "111": {
      "op": "txna ApplicationArgs 0",
      "defined_out": [
        "Method(acc_ret()address)",
        "Method(app_ret()uint64)",
        "Method(asset_ret()uint64)",
        "Method(return_accounts()address[])",
        "Method(return_apps()uint64[])",
        "Method(return_assets()uint64[])",
        "Method(store(address,uint64,uint64)void)",
        "Method(store_accounts(address[])void)",
        "Method(store_apps(uint64[])void)",
        "Method(store_assets(uint64[])void)",
        "lifted%return#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "lifted%return#0",
        "Method(acc_ret()address)",
        "Method(asset_ret()uint64)",
        "Method(app_ret()uint64)",
        "Method(store(address,uint64,uint64)void)",
        "Method(store_apps(uint64[])void)",
        "Method(store_assets(uint64[])void)",
        "Method(store_accounts(address[])void)",
        "Method(return_apps()uint64[])",
        "Method(return_assets()uint64[])",
        "Method(return_accounts()address[])",
        "tmp%7#0"
      ]
    },
    "114": {
      "op": "match acc_ret main_asset_ret_route@7 main_app_ret_route@8 store store_apps store_assets store_accounts return_apps return_assets return_accounts",
      "stack_out": [
        "lifted%return#0"
      ]
    },
    "136": {
      "op": "err"
    },
    "137": {
      "block": "main_app_ret_route@8",
      "stack_in": [
        "lifted%return#0"
      ],
      "op": "bytec_1 // 0x151f7c7500000000000004d2",
      "defined_out": [
        "0x151f7c7500000000000004d2"
      ],
      "stack_out": [
        "lifted%return#0",
        "0x151f7c7500000000000004d2"
      ]
    },
    "138": {
      "op": "log",
      "stack_out": [
        "lifted%return#0"
      ]
    },
    "139": {
      "op": "return",
      "defined_out": [
        "lifted%return#0"
      ]
    },
    "140": {
      "block": "main_asset_ret_route@7",
      "stack_in": [
        "lifted%return#0"
      ],
      "op": "bytec_1 // 0x151f7c7500000000000004d2",
      "defined_out": [
        "0x151f7c7500000000000004d2"
      ],
      "stack_out": [
        "lifted%return#0",
        "0x151f7c7500000000000004d2"
      ]
    },
    "141": {
      "op": "log",
      "stack_out": [
        "lifted%return#0"
      ]
    },
    "142": {
      "op": "return",
      "defined_out": [
        "lifted%return#0"
      ]
    },
    "143": {
      "block": "main_bare_routing@24",
      "stack_in": [
        "lifted%return#0"
      ],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%9#0"
      ],
      "stack_out": [
        "lifted%return#0",
        "tmp%9#0"
      ]
    },
    "145": {
      "op": "!",
      "defined_out": [
        "not%tmp%9#0"
      ],
      "stack_out": [
        "lifted%return#0",
        "not%tmp%9#0"
      ]
    },
    "146": {
      "op": "assert",
      "stack_out": [
        "lifted%return#0"
      ]
    },
    "147": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%10#0"
      ],
      "stack_out": [
        "lifted%return#0",
        "tmp%10#0"
      ]
    },
    "149": {
      "op": "!",
      "defined_out": [
        "tmp%11#0"
      ],
      "stack_out": [
        "lifted%return#0",
        "tmp%11#0"
      ]
    },
    "150": {
      "error": "can only call when creating",
      "op": "return // on error: can only call when creating",
      "defined_out": [
        "lifted%return#0"
      ],
      "stack_out": [
        "lifted%return#0"
      ]
    },
    "151": {
      "subroutine": "test_cases.arc4_conversions.reference.ReferenceReturn.acc_ret[routing]",
      "params": {},
      "block": "acc_ret",
      "stack_in": [],
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75"
      ],
      "stack_out": [
        "0x151f7c75"
      ]
    },
    "152": {
      "op": "txn Sender",
      "defined_out": [
        "0x151f7c75",
        "tmp%0#1"
      ],
      "stack_out": [
        "0x151f7c75",
        "tmp%0#1"
      ]
    },
    "154": {
      "op": "concat",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "155": {
      "op": "log",
      "stack_out": []
    },
    "156": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "157": {
      "op": "return",
      "stack_out": []
    },
    "158": {
      "subroutine": "test_cases.arc4_conversions.reference.ReferenceReturn.store[routing]",
      "params": {},
      "block": "store",
      "stack_in": [],
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "acc#0"
      ],
      "stack_out": [
        "acc#0"
      ]
    },
    "161": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "acc#0",
        "reinterpret_Encoded(uint64)%0#0"
      ],
      "stack_out": [
        "acc#0",
        "reinterpret_Encoded(uint64)%0#0"
      ]
    },
    "164": {
      "op": "btoi",
      "defined_out": [
        "acc#0",
        "app#0"
      ],
      "stack_out": [
        "acc#0",
        "app#0"
      ]
    },
    "165": {
      "op": "txna ApplicationArgs 3",
      "defined_out": [
        "acc#0",
        "app#0",
        "reinterpret_Encoded(uint64)%1#0"
      ],
      "stack_out": [
        "acc#0",
        "app#0",
        "reinterpret_Encoded(uint64)%1#0"
      ]
    },
    "168": {
      "op": "btoi",
      "defined_out": [
        "acc#0",
        "app#0",
        "asset#0"
      ],
      "stack_out": [
        "acc#0",
        "app#0",
        "asset#0"
      ]
    },
    "169": {
      "op": "pushbytes \"acc\"",
      "defined_out": [
        "\"acc\"",
        "acc#0",
        "app#0",
        "asset#0"
      ],
      "stack_out": [
        "acc#0",
        "app#0",
        "asset#0",
        "\"acc\""
      ]
    },
    "174": {
      "op": "uncover 3",
      "stack_out": [
        "app#0",
        "asset#0",
        "\"acc\"",
        "acc#0"
      ]
    },
    "176": {
      "op": "app_global_put",
      "stack_out": [
        "app#0",
        "asset#0"
      ]
    },
    "177": {
      "op": "pushbytes \"asset\"",
      "defined_out": [
        "\"asset\"",
        "app#0",
        "asset#0"
      ],
      "stack_out": [
        "app#0",
        "asset#0",
        "\"asset\""
      ]
    },
    "184": {
      "op": "swap",
      "stack_out": [
        "app#0",
        "\"asset\"",
        "asset#0"
      ]
    },
    "185": {
      "op": "app_global_put",
      "stack_out": [
        "app#0"
      ]
    },
    "186": {
      "op": "pushbytes \"app\"",
      "defined_out": [
        "\"app\"",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "\"app\""
      ]
    },
    "191": {
      "op": "swap",
      "stack_out": [
        "\"app\"",
        "app#0"
      ]
    },
    "192": {
      "op": "app_global_put",
      "stack_out": []
    },
    "193": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "194": {
      "op": "return",
      "stack_out": []
    },
    "195": {
      "subroutine": "test_cases.arc4_conversions.reference.ReferenceReturn.store_apps[routing]",
      "params": {},
      "block": "store_apps",
      "stack_in": [],
      "op": "bytec_2 // \"apps\"",
      "defined_out": [
        "\"apps\""
      ],
      "stack_out": [
        "\"apps\""
      ]
    },
    "196": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "\"apps\"",
        "apps#0"
      ],
      "stack_out": [
        "\"apps\"",
        "apps#0"
      ]
    },
    "199": {
      "op": "app_global_put",
      "stack_out": []
    },
    "200": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "201": {
      "op": "return",
      "stack_out": []
    },
    "202": {
      "subroutine": "test_cases.arc4_conversions.reference.ReferenceReturn.store_assets[routing]",
      "params": {},
      "block": "store_assets",
      "stack_in": [],
      "op": "bytec_3 // \"assets\"",
      "defined_out": [
        "\"assets\""
      ],
      "stack_out": [
        "\"assets\""
      ]
    },
    "203": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "\"assets\"",
        "assets#0"
      ],
      "stack_out": [
        "\"assets\"",
        "assets#0"
      ]
    },
    "206": {
      "op": "app_global_put",
      "stack_out": []
    },
    "207": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "208": {
      "op": "return",
      "stack_out": []
    },
    "209": {
      "subroutine": "test_cases.arc4_conversions.reference.ReferenceReturn.store_accounts[routing]",
      "params": {},
      "block": "store_accounts",
      "stack_in": [],
      "op": "bytec 4 // \"accounts\"",
      "defined_out": [
        "\"accounts\""
      ],
      "stack_out": [
        "\"accounts\""
      ]
    },
    "211": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "\"accounts\"",
        "accounts#0"
      ],
      "stack_out": [
        "\"accounts\"",
        "accounts#0"
      ]
    },
    "214": {
      "op": "app_global_put",
      "stack_out": []
    },
    "215": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "216": {
      "op": "return",
      "stack_out": []
    },
    "217": {
      "subroutine": "test_cases.arc4_conversions.reference.ReferenceReturn.return_apps[routing]",
      "params": {},
      "block": "return_apps",
      "stack_in": [],
      "op": "intc_1 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "218": {
      "op": "bytec_2 // \"apps\"",
      "defined_out": [
        "\"apps\"",
        "0"
      ],
      "stack_out": [
        "0",
        "\"apps\""
      ]
    },
    "219": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "220": {
      "error": "check self.apps exists",
      "op": "assert // check self.apps exists",
      "stack_out": [
        "maybe_value%0#0"
      ]
    },
    "221": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "0x151f7c75"
      ]
    },
    "222": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "maybe_value%0#0"
      ]
    },
    "223": {
      "op": "concat",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "224": {
      "op": "log",
      "stack_out": []
    },
    "225": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "226": {
      "op": "return",
      "stack_out": []
    },
    "227": {
      "subroutine": "test_cases.arc4_conversions.reference.ReferenceReturn.return_assets[routing]",
      "params": {},
      "block": "return_assets",
      "stack_in": [],
      "op": "intc_1 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "228": {
      "op": "bytec_3 // \"assets\"",
      "defined_out": [
        "\"assets\"",
        "0"
      ],
      "stack_out": [
        "0",
        "\"assets\""
      ]
    },
    "229": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "230": {
      "error": "check self.assets exists",
      "op": "assert // check self.assets exists",
      "stack_out": [
        "maybe_value%0#0"
      ]
    },
    "231": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "0x151f7c75"
      ]
    },
    "232": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "maybe_value%0#0"
      ]
    },
    "233": {
      "op": "concat",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "234": {
      "op": "log",
      "stack_out": []
    },
    "235": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "236": {
      "op": "return",
      "stack_out": []
    },
    "237": {
      "subroutine": "test_cases.arc4_conversions.reference.ReferenceReturn.return_accounts[routing]",
      "params": {},
      "block": "return_accounts",
      "stack_in": [],
      "op": "intc_1 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "238": {
      "op": "bytec 4 // \"accounts\"",
      "defined_out": [
        "\"accounts\"",
        "0"
      ],
      "stack_out": [
        "0",
        "\"accounts\""
      ]
    },
    "240": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "241": {
      "error": "check self.accounts exists",
      "op": "assert // check self.accounts exists",
      "stack_out": [
        "maybe_value%0#0"
      ]
    },
    "242": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "0x151f7c75"
      ]
    },
    "243": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "maybe_value%0#0"
      ]
    },
    "244": {
      "op": "concat",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "245": {
      "op": "log",
      "stack_out": []
    },
    "246": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "247": {
      "op": "return",
      "stack_out": []
    }
  }
}