{
  "version": 3,
  "sources": [
    "../contract.py"
  ],
  "mappings": ";AAqOA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;;;;;;AAAA;;;AAAA;;;;AAAA;AACK;;AAAA;AADL;;AAAA;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAKK;;;AAAA;;;AAAA;;;AAEU;AAFV;AAIA;;;AAAA;;;AAAA;;;AAEU;AAFV;AAIA;;;AAAA;;;AAAA;;;AAEU;AAFV;AAIA;;;AAAA;;;AAAA;;;AAEU;AAFV;AAIA;;;AAAA;;;AAAA;;;AAEU;AAFV;AAIA;;;AAAA;;;AAAA;;;AAIU;AAJV;AAMA;;;AAAA;;;AAAA;;;AAIU;AAJV;AAMA;;;AAAA;;;AAAA;;;AAIU;AAJV;AAMA;;;AAAA;;;AAAA;;;AAIU;AAJV;AAMA;;;AAAA;;;AAAA;;;AAIU;AAJV;AAMA;;;AAAA;;;AAAA;;;AAIU;AAJV;AAMA;;;AAE2B;;AAAjB;AAFV",
  "op_pc_offset": 0,
  "pc_events": {
    "1": {
      "subroutine": "algopy.arc4.ARC4Contract.approval_program",
      "params": {},
      "block": "main",
      "stack_in": [],
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "3": {
      "op": "!",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "4": {
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%2#0"
      ]
    },
    "6": {
      "op": "pushint 1 // 1",
      "defined_out": [
        "1",
        "tmp%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%2#0",
        "1"
      ]
    },
    "8": {
      "op": "shl",
      "defined_out": [
        "tmp%1#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%3#0"
      ]
    },
    "9": {
      "op": "+",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "10": {
      "op": "switch call_NoOp create_NoOp *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED call_DeleteApplication *NOT_IMPLEMENTED",
      "stack_out": []
    },
    "36": {
      "error": "The requested action is not implemented in this contract. Are you using the correct OnComplete? Did you set your app ID?",
      "block": "*NOT_IMPLEMENTED",
      "stack_in": [],
      "op": "err // The requested action is not implemented in this contract. Are you using the correct OnComplete? Did you set your app ID?"
    },
    "37": {
      "block": "call_DeleteApplication",
      "stack_in": [],
      "op": "pushbytes 0x33b3499e // method \"delete_application()void\"",
      "defined_out": [
        "Method(delete_application()void)"
      ],
      "stack_out": [
        "Method(delete_application()void)"
      ]
    },
    "43": {
      "op": "txna ApplicationArgs 0",
      "defined_out": [
        "Method(delete_application()void)",
        "tmp%8#0"
      ],
      "stack_out": [
        "Method(delete_application()void)",
        "tmp%8#0"
      ]
    },
    "46": {
      "op": "match delete_application_route@29",
      "stack_out": []
    },
    "50": {
      "error": "this contract does not implement the given ABI method for call DeleteApplication",
      "op": "err // this contract does not implement the given ABI method for call DeleteApplication"
    },
    "51": {
      "block": "delete_application_route@29",
      "stack_in": [],
      "op": "pushint 1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "53": {
      "op": "return",
      "stack_out": []
    },
    "54": {
      "block": "create_NoOp",
      "stack_in": [],
      "op": "txn NumAppArgs",
      "defined_out": [
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0"
      ]
    },
    "56": {
      "op": "!",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0"
      ]
    },
    "57": {
      "error": "this contract does not implement the given ABI method for create NoOp",
      "op": "return // on error: this contract does not implement the given ABI method for create NoOp",
      "defined_out": [],
      "stack_out": []
    },
    "58": {
      "block": "call_NoOp",
      "stack_in": [],
      "op": "pushbytess 0x8d762fdf 0x2d329ee1 0x6a4ddf73 0xd6e0b7bc 0xe5cacd06 0x89af557b 0x46e196bd 0xf33886da 0x2595b95a 0x3f55266b 0x7d240945 0x0351a9de // method \"check_uint64(uint64,byte[])void\", method \"check_dynamic_bytes(byte[],byte[])void\", method \"check_string(string,byte[])void\", method \"check_biguint(uint512,byte[])void\", method \"check_bool(bool,byte[])void\", method \"check_dyn_array_uin64(uint64[],byte[])void\", method \"check_static_array_uin64_3(uint64[3],byte[])void\", method \"check_dyn_array_struct((uint64,address)[],byte[])void\", method \"check_static_array_struct((uint64,address)[3],byte[])void\", method \"check_dyn_array_dyn_struct((uint64,address,byte[])[],byte[])void\", method \"check_static_array_dyn_struct((uint64,address,byte[])[3],byte[])void\", method \"check_static_bytes(byte[32])void\"",
      "defined_out": [
        "Method(check_biguint(uint512,byte[])void)",
        "Method(check_bool(bool,byte[])void)",
        "Method(check_dyn_array_dyn_struct((uint64,address,byte[])[],byte[])void)",
        "Method(check_dyn_array_struct((uint64,address)[],byte[])void)",
        "Method(check_dyn_array_uin64(uint64[],byte[])void)",
        "Method(check_dynamic_bytes(byte[],byte[])void)",
        "Method(check_static_array_dyn_struct((uint64,address,byte[])[3],byte[])void)",
        "Method(check_static_array_struct((uint64,address)[3],byte[])void)",
        "Method(check_static_array_uin64_3(uint64[3],byte[])void)",
        "Method(check_static_bytes(byte[32])void)",
        "Method(check_string(string,byte[])void)",
        "Method(check_uint64(uint64,byte[])void)"
      ],
      "stack_out": [
        "Method(check_uint64(uint64,byte[])void)",
        "Method(check_dynamic_bytes(byte[],byte[])void)",
        "Method(check_string(string,byte[])void)",
        "Method(check_biguint(uint512,byte[])void)",
        "Method(check_bool(bool,byte[])void)",
        "Method(check_dyn_array_uin64(uint64[],byte[])void)",
        "Method(check_static_array_uin64_3(uint64[3],byte[])void)",
        "Method(check_dyn_array_struct((uint64,address)[],byte[])void)",
        "Method(check_static_array_struct((uint64,address)[3],byte[])void)",
        "Method(check_dyn_array_dyn_struct((uint64,address,byte[])[],byte[])void)",
        "Method(check_static_array_dyn_struct((uint64,address,byte[])[3],byte[])void)",
        "Method(check_static_bytes(byte[32])void)"
      ]
    },
    "120": {
      "op": "txna ApplicationArgs 0",
      "defined_out": [
        "Method(check_biguint(uint512,byte[])void)",
        "Method(check_bool(bool,byte[])void)",
        "Method(check_dyn_array_dyn_struct((uint64,address,byte[])[],byte[])void)",
        "Method(check_dyn_array_struct((uint64,address)[],byte[])void)",
        "Method(check_dyn_array_uin64(uint64[],byte[])void)",
        "Method(check_dynamic_bytes(byte[],byte[])void)",
        "Method(check_static_array_dyn_struct((uint64,address,byte[])[3],byte[])void)",
        "Method(check_static_array_struct((uint64,address)[3],byte[])void)",
        "Method(check_static_array_uin64_3(uint64[3],byte[])void)",
        "Method(check_static_bytes(byte[32])void)",
        "Method(check_string(string,byte[])void)",
        "Method(check_uint64(uint64,byte[])void)",
        "tmp%5#0"
      ],
      "stack_out": [
        "Method(check_uint64(uint64,byte[])void)",
        "Method(check_dynamic_bytes(byte[],byte[])void)",
        "Method(check_string(string,byte[])void)",
        "Method(check_biguint(uint512,byte[])void)",
        "Method(check_bool(bool,byte[])void)",
        "Method(check_dyn_array_uin64(uint64[],byte[])void)",
        "Method(check_static_array_uin64_3(uint64[3],byte[])void)",
        "Method(check_dyn_array_struct((uint64,address)[],byte[])void)",
        "Method(check_static_array_struct((uint64,address)[3],byte[])void)",
        "Method(check_dyn_array_dyn_struct((uint64,address,byte[])[],byte[])void)",
        "Method(check_static_array_dyn_struct((uint64,address,byte[])[3],byte[])void)",
        "Method(check_static_bytes(byte[32])void)",
        "tmp%5#0"
      ]
    },
    "123": {
      "op": "match check_uint64 check_dynamic_bytes check_string check_biguint check_bool check_dyn_array_uin64 check_static_array_uin64_3 check_dyn_array_struct check_static_array_struct check_dyn_array_dyn_struct check_static_array_dyn_struct check_static_bytes",
      "stack_out": []
    },
    "149": {
      "error": "this contract does not implement the given ABI method for call NoOp",
      "op": "err // this contract does not implement the given ABI method for call NoOp"
    },
    "150": {
      "subroutine": "test_cases.arc4_conversions.contract.CheckApp.check_uint64[routing]",
      "params": {},
      "block": "check_uint64",
      "stack_in": [],
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "value#0"
      ],
      "stack_out": [
        "value#0"
      ]
    },
    "153": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "reinterpret_Encoded(len+uint8[])%0#0",
        "value#0"
      ],
      "stack_out": [
        "value#0",
        "reinterpret_Encoded(len+uint8[])%0#0"
      ]
    },
    "156": {
      "op": "extract 2 0",
      "defined_out": [
        "expected#0",
        "value#0"
      ],
      "stack_out": [
        "value#0",
        "expected#0"
      ]
    },
    "159": {
      "op": "==",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "160": {
      "error": "expected to encode correctly",
      "op": "return // on error: expected to encode correctly",
      "defined_out": [],
      "stack_out": []
    },
    "161": {
      "subroutine": "test_cases.arc4_conversions.contract.CheckApp.check_dynamic_bytes[routing]",
      "params": {},
      "block": "check_dynamic_bytes",
      "stack_in": [],
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "value#0"
      ],
      "stack_out": [
        "value#0"
      ]
    },
    "164": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "reinterpret_Encoded(len+uint8[])%1#0",
        "value#0"
      ],
      "stack_out": [
        "value#0",
        "reinterpret_Encoded(len+uint8[])%1#0"
      ]
    },
    "167": {
      "op": "extract 2 0",
      "defined_out": [
        "expected#0",
        "value#0"
      ],
      "stack_out": [
        "value#0",
        "expected#0"
      ]
    },
    "170": {
      "op": "==",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "171": {
      "error": "expected to encode correctly",
      "op": "return // on error: expected to encode correctly",
      "defined_out": [],
      "stack_out": []
    },
    "172": {
      "subroutine": "test_cases.arc4_conversions.contract.CheckApp.check_string[routing]",
      "params": {},
      "block": "check_string",
      "stack_in": [],
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "value#0"
      ],
      "stack_out": [
        "value#0"
      ]
    },
    "175": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "reinterpret_Encoded(len+uint8[])%0#0",
        "value#0"
      ],
      "stack_out": [
        "value#0",
        "reinterpret_Encoded(len+uint8[])%0#0"
      ]
    },
    "178": {
      "op": "extract 2 0",
      "defined_out": [
        "expected#0",
        "value#0"
      ],
      "stack_out": [
        "value#0",
        "expected#0"
      ]
    },
    "181": {
      "op": "==",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "182": {
      "error": "expected to encode correctly",
      "op": "return // on error: expected to encode correctly",
      "defined_out": [],
      "stack_out": []
    },
    "183": {
      "subroutine": "test_cases.arc4_conversions.contract.CheckApp.check_biguint[routing]",
      "params": {},
      "block": "check_biguint",
      "stack_in": [],
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "value#0"
      ],
      "stack_out": [
        "value#0"
      ]
    },
    "186": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "reinterpret_Encoded(len+uint8[])%0#0",
        "value#0"
      ],
      "stack_out": [
        "value#0",
        "reinterpret_Encoded(len+uint8[])%0#0"
      ]
    },
    "189": {
      "op": "extract 2 0",
      "defined_out": [
        "expected#0",
        "value#0"
      ],
      "stack_out": [
        "value#0",
        "expected#0"
      ]
    },
    "192": {
      "op": "==",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "193": {
      "error": "expected to encode correctly",
      "op": "return // on error: expected to encode correctly",
      "defined_out": [],
      "stack_out": []
    },
    "194": {
      "subroutine": "test_cases.arc4_conversions.contract.CheckApp.check_bool[routing]",
      "params": {},
      "block": "check_bool",
      "stack_in": [],
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "value#0"
      ],
      "stack_out": [
        "value#0"
      ]
    },
    "197": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "reinterpret_Encoded(len+uint8[])%0#0",
        "value#0"
      ],
      "stack_out": [
        "value#0",
        "reinterpret_Encoded(len+uint8[])%0#0"
      ]
    },
    "200": {
      "op": "extract 2 0",
      "defined_out": [
        "expected#0",
        "value#0"
      ],
      "stack_out": [
        "value#0",
        "expected#0"
      ]
    },
    "203": {
      "op": "==",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "204": {
      "error": "expected to encode correctly",
      "op": "return // on error: expected to encode correctly",
      "defined_out": [],
      "stack_out": []
    },
    "205": {
      "subroutine": "test_cases.arc4_conversions.contract.CheckApp.check_dyn_array_uin64[routing]",
      "params": {},
      "block": "check_dyn_array_uin64",
      "stack_in": [],
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "value#0"
      ],
      "stack_out": [
        "value#0"
      ]
    },
    "208": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "reinterpret_Encoded(len+uint8[])%0#0",
        "value#0"
      ],
      "stack_out": [
        "value#0",
        "reinterpret_Encoded(len+uint8[])%0#0"
      ]
    },
    "211": {
      "op": "extract 2 0",
      "defined_out": [
        "expected#0",
        "value#0"
      ],
      "stack_out": [
        "value#0",
        "expected#0"
      ]
    },
    "214": {
      "op": "==",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "215": {
      "error": "expected to encode correctly",
      "op": "return // on error: expected to encode correctly",
      "defined_out": [],
      "stack_out": []
    },
    "216": {
      "subroutine": "test_cases.arc4_conversions.contract.CheckApp.check_static_array_uin64_3[routing]",
      "params": {},
      "block": "check_static_array_uin64_3",
      "stack_in": [],
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "value#0"
      ],
      "stack_out": [
        "value#0"
      ]
    },
    "219": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "reinterpret_Encoded(len+uint8[])%0#0",
        "value#0"
      ],
      "stack_out": [
        "value#0",
        "reinterpret_Encoded(len+uint8[])%0#0"
      ]
    },
    "222": {
      "op": "extract 2 0",
      "defined_out": [
        "expected#0",
        "value#0"
      ],
      "stack_out": [
        "value#0",
        "expected#0"
      ]
    },
    "225": {
      "op": "==",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "226": {
      "error": "expected to encode correctly",
      "op": "return // on error: expected to encode correctly",
      "defined_out": [],
      "stack_out": []
    },
    "227": {
      "subroutine": "test_cases.arc4_conversions.contract.CheckApp.check_dyn_array_struct[routing]",
      "params": {},
      "block": "check_dyn_array_struct",
      "stack_in": [],
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "value#0"
      ],
      "stack_out": [
        "value#0"
      ]
    },
    "230": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "reinterpret_Encoded(len+uint8[])%0#0",
        "value#0"
      ],
      "stack_out": [
        "value#0",
        "reinterpret_Encoded(len+uint8[])%0#0"
      ]
    },
    "233": {
      "op": "extract 2 0",
      "defined_out": [
        "expected#0",
        "value#0"
      ],
      "stack_out": [
        "value#0",
        "expected#0"
      ]
    },
    "236": {
      "op": "==",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "237": {
      "error": "expected to encode correctly",
      "op": "return // on error: expected to encode correctly",
      "defined_out": [],
      "stack_out": []
    },
    "238": {
      "subroutine": "test_cases.arc4_conversions.contract.CheckApp.check_static_array_struct[routing]",
      "params": {},
      "block": "check_static_array_struct",
      "stack_in": [],
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "value#0"
      ],
      "stack_out": [
        "value#0"
      ]
    },
    "241": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "reinterpret_Encoded(len+uint8[])%0#0",
        "value#0"
      ],
      "stack_out": [
        "value#0",
        "reinterpret_Encoded(len+uint8[])%0#0"
      ]
    },
    "244": {
      "op": "extract 2 0",
      "defined_out": [
        "expected#0",
        "value#0"
      ],
      "stack_out": [
        "value#0",
        "expected#0"
      ]
    },
    "247": {
      "op": "==",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "248": {
      "error": "expected to encode correctly",
      "op": "return // on error: expected to encode correctly",
      "defined_out": [],
      "stack_out": []
    },
    "249": {
      "subroutine": "test_cases.arc4_conversions.contract.CheckApp.check_dyn_array_dyn_struct[routing]",
      "params": {},
      "block": "check_dyn_array_dyn_struct",
      "stack_in": [],
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "value#0"
      ],
      "stack_out": [
        "value#0"
      ]
    },
    "252": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "reinterpret_Encoded(len+uint8[])%0#0",
        "value#0"
      ],
      "stack_out": [
        "value#0",
        "reinterpret_Encoded(len+uint8[])%0#0"
      ]
    },
    "255": {
      "op": "extract 2 0",
      "defined_out": [
        "expected#0",
        "value#0"
      ],
      "stack_out": [
        "value#0",
        "expected#0"
      ]
    },
    "258": {
      "op": "==",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "259": {
      "error": "expected to encode correctly",
      "op": "return // on error: expected to encode correctly",
      "defined_out": [],
      "stack_out": []
    },
    "260": {
      "subroutine": "test_cases.arc4_conversions.contract.CheckApp.check_static_array_dyn_struct[routing]",
      "params": {},
      "block": "check_static_array_dyn_struct",
      "stack_in": [],
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "value#0"
      ],
      "stack_out": [
        "value#0"
      ]
    },
    "263": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "reinterpret_Encoded(len+uint8[])%0#0",
        "value#0"
      ],
      "stack_out": [
        "value#0",
        "reinterpret_Encoded(len+uint8[])%0#0"
      ]
    },
    "266": {
      "op": "extract 2 0",
      "defined_out": [
        "expected#0",
        "value#0"
      ],
      "stack_out": [
        "value#0",
        "expected#0"
      ]
    },
    "269": {
      "op": "==",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "270": {
      "error": "expected to encode correctly",
      "op": "return // on error: expected to encode correctly",
      "defined_out": [],
      "stack_out": []
    },
    "271": {
      "subroutine": "test_cases.arc4_conversions.contract.CheckApp.check_static_bytes[routing]",
      "params": {},
      "block": "check_static_bytes",
      "stack_in": [],
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "bytes32#0"
      ],
      "stack_out": [
        "bytes32#0"
      ]
    },
    "274": {
      "op": "txn Sender",
      "defined_out": [
        "bytes32#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "bytes32#0",
        "tmp%0#0"
      ]
    },
    "276": {
      "op": "==",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "277": {
      "error": "expected to encode correctly",
      "op": "return // on error: expected to encode correctly",
      "defined_out": [],
      "stack_out": []
    }
  }
}