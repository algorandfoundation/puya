{
    "name": "CheckApp",
    "structs": {},
    "methods": [
        {
            "name": "delete_application",
            "args": [],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "DeleteApplication"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "check_uint64",
            "args": [
                {
                    "type": "uint64",
                    "name": "value"
                },
                {
                    "type": "byte[]",
                    "name": "expected"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "check_dynamic_bytes",
            "args": [
                {
                    "type": "byte[]",
                    "name": "value"
                },
                {
                    "type": "byte[]",
                    "name": "expected"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "check_string",
            "args": [
                {
                    "type": "string",
                    "name": "value"
                },
                {
                    "type": "byte[]",
                    "name": "expected"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "check_biguint",
            "args": [
                {
                    "type": "uint512",
                    "name": "value"
                },
                {
                    "type": "byte[]",
                    "name": "expected"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "check_bool",
            "args": [
                {
                    "type": "bool",
                    "name": "value"
                },
                {
                    "type": "byte[]",
                    "name": "expected"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "check_dyn_array_uin64",
            "args": [
                {
                    "type": "uint64[]",
                    "name": "value"
                },
                {
                    "type": "byte[]",
                    "name": "expected"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "check_static_array_uin64_3",
            "args": [
                {
                    "type": "uint64[3]",
                    "name": "value"
                },
                {
                    "type": "byte[]",
                    "name": "expected"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "check_dyn_array_struct",
            "args": [
                {
                    "type": "(uint64,address)[]",
                    "name": "value"
                },
                {
                    "type": "byte[]",
                    "name": "expected"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "check_static_array_struct",
            "args": [
                {
                    "type": "(uint64,address)[3]",
                    "name": "value"
                },
                {
                    "type": "byte[]",
                    "name": "expected"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "check_dyn_array_dyn_struct",
            "args": [
                {
                    "type": "(uint64,address,byte[])[]",
                    "name": "value"
                },
                {
                    "type": "byte[]",
                    "name": "expected"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "check_static_array_dyn_struct",
            "args": [
                {
                    "type": "(uint64,address,byte[])[3]",
                    "name": "value"
                },
                {
                    "type": "byte[]",
                    "name": "expected"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "check_static_bytes",
            "args": [
                {
                    "type": "byte[32]",
                    "name": "bytes32"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        }
    ],
    "arcs": [
        22,
        28
    ],
    "networks": {},
    "state": {
        "schema": {
            "global": {
                "ints": 0,
                "bytes": 0
            },
            "local": {
                "ints": 0,
                "bytes": 0
            }
        },
        "keys": {
            "global": {},
            "local": {},
            "box": {}
        },
        "maps": {
            "global": {},
            "local": {},
            "box": {}
        }
    },
    "bareActions": {
        "create": [
            "NoOp"
        ],
        "call": []
    },
    "sourceInfo": {
        "approval": {
            "sourceInfo": [
                {
                    "pc": [
                        131
                    ],
                    "errorMessage": "OnCompletion must be DeleteApplication && can only call when not creating"
                },
                {
                    "pc": [
                        27
                    ],
                    "errorMessage": "OnCompletion must be NoOp"
                },
                {
                    "pc": [
                        139
                    ],
                    "errorMessage": "OnCompletion must be NoOp && can only call when creating"
                },
                {
                    "pc": [
                        165,
                        196,
                        227,
                        254,
                        281,
                        314,
                        341,
                        375,
                        402,
                        423,
                        444,
                        457
                    ],
                    "errorMessage": "expected to encode correctly"
                },
                {
                    "pc": [
                        357
                    ],
                    "errorMessage": "invalid number of bytes for (len+(uint64,uint8[32])[])"
                },
                {
                    "pc": [
                        296
                    ],
                    "errorMessage": "invalid number of bytes for (len+uint64[])"
                },
                {
                    "pc": [
                        160,
                        178,
                        191,
                        222,
                        249,
                        276,
                        309,
                        336,
                        370,
                        397,
                        418,
                        439
                    ],
                    "errorMessage": "invalid number of bytes for (len+uint8[])"
                },
                {
                    "pc": [
                        209
                    ],
                    "errorMessage": "invalid number of bytes for (len+utf8[])"
                },
                {
                    "pc": [
                        384
                    ],
                    "errorMessage": "invalid number of bytes for (uint64,uint8[32])[3]"
                },
                {
                    "pc": [
                        263
                    ],
                    "errorMessage": "invalid number of bytes for bool8"
                },
                {
                    "pc": [
                        236
                    ],
                    "errorMessage": "invalid number of bytes for uint512"
                },
                {
                    "pc": [
                        147
                    ],
                    "errorMessage": "invalid number of bytes for uint64"
                },
                {
                    "pc": [
                        323
                    ],
                    "errorMessage": "invalid number of bytes for uint64[3]"
                },
                {
                    "pc": [
                        453
                    ],
                    "errorMessage": "invalid number of bytes for uint8[32]"
                }
            ],
            "pcOffsetMethod": "none"
        },
        "clear": {
            "sourceInfo": [],
            "pcOffsetMethod": "none"
        }
    },
    "source": {
        "approval": "",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDExCiNwcmFnbWEgdHlwZXRyYWNrIGZhbHNlCgovLyBhbGdvcHkuYXJjNC5BUkM0Q29udHJhY3QuY2xlYXJfc3RhdGVfcHJvZ3JhbSgpIC0+IHVpbnQ2NDoKbWFpbjoKICAgIHB1c2hpbnQgMSAvLyAxCiAgICByZXR1cm4K"
    },
    "byteCode": {
        "approval": "CyADAAIIMRtBAHmABDOzSZ42GgCOAQBjMRkURDEYRIIMBI12L98ELTKe4QRqTd9zBNbgt7wE5crNBgSJr1V7BEbhlr0E8ziG2gQllblaBD9VJmsEfSQJRQQDUaneNhoAjgwAEgAsAEsAagCFAKAAwQDcAP4BGQEuAUMAMRmBBRIxGBBDMRkUMRgUEEM2GgFJFSQSRDYaAkkiWSMISwEVEkRXAgASQzYaAUkiWSMISwEVEkQ2GgJJIlkjCEsBFRJEVwIAEkM2GgFJIlkjCEsBFRJENhoCSSJZIwhLARUSRFcCABJDNhoBSRWBQBJENhoCSSJZIwhLARUSRFcCABJDNhoBSRWBARJENhoCSSJZIwhLARUSRFcCABJDNhoBSSJZJAsjCEsBFRJENhoCSSJZIwhLARUSRFcCABJDNhoBSRWBGBJENhoCSSJZIwhLARUSRFcCABJDNhoBSSJZgSgLIwhLARUSRDYaAkkiWSMISwEVEkRXAgASQzYaAUkVgXgSRDYaAkkiWSMISwEVEkRXAgASQzYaATYaAkkiWSMISwEVEkRXAgASQzYaATYaAkkiWSMISwEVEkRXAgASQzYaAUkVgSASRDEAEkM=",
        "clear": "C4EBQw=="
    },
    "compilerInfo": {
        "compiler": "puya",
        "compilerVersion": {
            "major": 99,
            "minor": 99,
            "patch": 99
        }
    },
    "events": [],
    "templateVariables": {}
}