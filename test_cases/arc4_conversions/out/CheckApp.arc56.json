{
    "name": "CheckApp",
    "structs": {},
    "methods": [
        {
            "name": "delete_application",
            "args": [],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "DeleteApplication"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "check_uint64",
            "args": [
                {
                    "type": "uint64",
                    "name": "value"
                },
                {
                    "type": "byte[]",
                    "name": "expected"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "check_dynamic_bytes",
            "args": [
                {
                    "type": "byte[]",
                    "name": "value"
                },
                {
                    "type": "byte[]",
                    "name": "expected"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "check_string",
            "args": [
                {
                    "type": "string",
                    "name": "value"
                },
                {
                    "type": "byte[]",
                    "name": "expected"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "check_biguint",
            "args": [
                {
                    "type": "uint512",
                    "name": "value"
                },
                {
                    "type": "byte[]",
                    "name": "expected"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "check_bool",
            "args": [
                {
                    "type": "bool",
                    "name": "value"
                },
                {
                    "type": "byte[]",
                    "name": "expected"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "check_dyn_array_uin64",
            "args": [
                {
                    "type": "uint64[]",
                    "name": "value"
                },
                {
                    "type": "byte[]",
                    "name": "expected"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "check_static_array_uin64_3",
            "args": [
                {
                    "type": "uint64[3]",
                    "name": "value"
                },
                {
                    "type": "byte[]",
                    "name": "expected"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "check_dyn_array_struct",
            "args": [
                {
                    "type": "(uint64,address)[]",
                    "name": "value"
                },
                {
                    "type": "byte[]",
                    "name": "expected"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "check_static_array_struct",
            "args": [
                {
                    "type": "(uint64,address)[3]",
                    "name": "value"
                },
                {
                    "type": "byte[]",
                    "name": "expected"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "check_dyn_array_dyn_struct",
            "args": [
                {
                    "type": "(uint64,address,byte[])[]",
                    "name": "value"
                },
                {
                    "type": "byte[]",
                    "name": "expected"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "check_static_array_dyn_struct",
            "args": [
                {
                    "type": "(uint64,address,byte[])[3]",
                    "name": "value"
                },
                {
                    "type": "byte[]",
                    "name": "expected"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        }
    ],
    "arcs": [
        22,
        28
    ],
    "networks": {},
    "state": {
        "schema": {
            "global": {
                "ints": 0,
                "bytes": 0
            },
            "local": {
                "ints": 0,
                "bytes": 0
            }
        },
        "keys": {
            "global": {},
            "local": {},
            "box": {}
        },
        "maps": {
            "global": {},
            "local": {},
            "box": {}
        }
    },
    "bareActions": {
        "create": [
            "NoOp"
        ],
        "call": []
    },
    "sourceInfo": {
        "approval": {
            "sourceInfo": [
                {
                    "pc": [
                        339
                    ],
                    "errorMessage": "OnCompletion is not DeleteApplication"
                },
                {
                    "pc": [
                        106,
                        127,
                        148,
                        169,
                        190,
                        211,
                        232,
                        253,
                        274,
                        295,
                        316
                    ],
                    "errorMessage": "OnCompletion is not NoOp"
                },
                {
                    "pc": [
                        353
                    ],
                    "errorMessage": "can only call when creating"
                },
                {
                    "pc": [
                        109,
                        130,
                        151,
                        172,
                        193,
                        214,
                        235,
                        256,
                        277,
                        298,
                        319,
                        342
                    ],
                    "errorMessage": "can only call when not creating"
                },
                {
                    "pc": [
                        364,
                        374,
                        384,
                        394,
                        404,
                        414,
                        424,
                        434,
                        444,
                        454,
                        464
                    ],
                    "errorMessage": "expected to encode correctly"
                }
            ],
            "pcOffsetMethod": "none"
        },
        "clear": {
            "sourceInfo": [],
            "pcOffsetMethod": "none"
        }
    },
    "source": {
        "approval": "",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDEwCiNwcmFnbWEgdHlwZXRyYWNrIGZhbHNlCgovLyBhbGdvcHkuYXJjNC5BUkM0Q29udHJhY3QuY2xlYXJfc3RhdGVfcHJvZ3JhbSgpIC0+IHVpbnQ2NDoKbWFpbjoKICAgIHB1c2hpbnQgMSAvLyAxCiAgICByZXR1cm4K"
    },
    "byteCode": {
        "approval": "CiABATEbQQFQggwEM7NJngSNdi/fBC0ynuEEak3fcwTW4Le8BOXKzQYEia9VewRG4Za9BPM4htoEJZW5WgQ/VSZrBH0kCUU2GgCODADqANUAwACrAJYAgQBsAFcAQgAtABgAA4EAQzEZFEQxGEQ2GgE2GgJXAgCIAU4iQzEZFEQxGEQ2GgE2GgJXAgCIAS8iQzEZFEQxGEQ2GgE2GgJXAgCIARAiQzEZFEQxGEQ2GgE2GgJXAgCIAPEiQzEZFEQxGEQ2GgE2GgJXAgCIANIiQzEZFEQxGEQ2GgE2GgJXAgCIALMiQzEZFEQxGEQ2GgE2GgJXAgCIAJQiQzEZFEQxGEQ2GgE2GgJXAgCIAHUiQzEZFEQxGEQ2GgE2GgJXAgCIAFYiQzEZFEQxGEQ2GgE2GgJXAgCIADciQzEZFEQxGEQ2GgE2GgJXAgCIABgiQzEZgQUSRDEYRCJDMRlA/wYxGBREIkOKAgCL/ov/EkSJigIAi/6L/xJEiYoCAIv+i/8SRImKAgCL/ov/EkSJigIAi/6L/xJEiYoCAIv+i/8SRImKAgCL/ov/EkSJigIAi/6L/xJEiYoCAIv+i/8SRImKAgCL/ov/EkSJigIAi/6L/xJEiQ==",
        "clear": "CoEBQw=="
    },
    "compilerInfo": {
        "compiler": "puya",
        "compilerVersion": {
            "major": 99,
            "minor": 99,
            "patch": 99
        }
    },
    "events": [],
    "templateVariables": {}
}