// Op                                                                                         Stack (out)
// algopy.arc4.ARC4Contract.approval_program() -> uint64:
subroutine main:
    main_block@0:
        // arc4_conversions/contract.py:230
        // class CheckApp(arc4.ARC4Contract):
        txn NumAppArgs                                                                        tmp%0#1
        bz main_bare_routing@18 ; b main_abi_routing@2

    main_abi_routing@2:
        // arc4_conversions/contract.py:230
        // class CheckApp(arc4.ARC4Contract):
        txna ApplicationArgs 0                                                                tmp%2#0
        method delete_application()void                                                       tmp%2#0,Method(delete_application()void)
        method check_uint64(uint64,byte[])void                                                tmp%2#0,Method(delete_application()void),Method(check_uint64(uint64,byte[])void)
        method check_dynamic_bytes(byte[],byte[])void                                         tmp%2#0,Method(delete_application()void),Method(check_uint64(uint64,byte[])void),Method(check_dynamic_bytes(byte[],byte[])void)
        method check_string(string,byte[])void                                                tmp%2#0,Method(delete_application()void),Method(check_uint64(uint64,byte[])void),Method(check_dynamic_bytes(byte[],byte[])void),Method(check_string(string,byte[])void)
        method check_biguint(uint512,byte[])void                                              tmp%2#0,Method(delete_application()void),Method(check_uint64(uint64,byte[])void),Method(check_dynamic_bytes(byte[],byte[])void),Method(check_string(string,byte[])void),Method(check_biguint(uint512,byte[])void)
        method check_bool(bool,byte[])void                                                    tmp%2#0,Method(delete_application()void),Method(check_uint64(uint64,byte[])void),Method(check_dynamic_bytes(byte[],byte[])void),Method(check_string(string,byte[])void),Method(check_biguint(uint512,byte[])void),Method(check_bool(bool,byte[])void)
        method check_dyn_array_uin64(uint64[],byte[])void                                     tmp%2#0,Method(delete_application()void),Method(check_uint64(uint64,byte[])void),Method(check_dynamic_bytes(byte[],byte[])void),Method(check_string(string,byte[])void),Method(check_biguint(uint512,byte[])void),Method(check_bool(bool,byte[])void),Method(check_dyn_array_uin64(uint64[],byte[])void)
        method check_static_array_uin64_3(uint64[3],byte[])void                               tmp%2#0,Method(delete_application()void),Method(check_uint64(uint64,byte[])void),Method(check_dynamic_bytes(byte[],byte[])void),Method(check_string(string,byte[])void),Method(check_biguint(uint512,byte[])void),Method(check_bool(bool,byte[])void),Method(check_dyn_array_uin64(uint64[],byte[])void),Method(check_static_array_uin64_3(uint64[3],byte[])void)
        method check_dyn_array_struct((uint64,address)[],byte[])void                          tmp%2#0,Method(delete_application()void),Method(check_uint64(uint64,byte[])void),Method(check_dynamic_bytes(byte[],byte[])void),Method(check_string(string,byte[])void),Method(check_biguint(uint512,byte[])void),Method(check_bool(bool,byte[])void),Method(check_dyn_array_uin64(uint64[],byte[])void),Method(check_static_array_uin64_3(uint64[3],byte[])void),Method(check_dyn_array_struct((uint64,address)[],byte[])void)
        method check_static_array_struct((uint64,address)[3],byte[])void                      tmp%2#0,Method(delete_application()void),Method(check_uint64(uint64,byte[])void),Method(check_dynamic_bytes(byte[],byte[])void),Method(check_string(string,byte[])void),Method(check_biguint(uint512,byte[])void),Method(check_bool(bool,byte[])void),Method(check_dyn_array_uin64(uint64[],byte[])void),Method(check_static_array_uin64_3(uint64[3],byte[])void),Method(check_dyn_array_struct((uint64,address)[],byte[])void),Method(check_static_array_struct((uint64,address)[3],byte[])void)
        method check_dyn_array_dyn_struct((uint64,address,byte[])[],byte[])void               tmp%2#0,Method(delete_application()void),Method(check_uint64(uint64,byte[])void),Method(check_dynamic_bytes(byte[],byte[])void),Method(check_string(string,byte[])void),Method(check_biguint(uint512,byte[])void),Method(check_bool(bool,byte[])void),Method(check_dyn_array_uin64(uint64[],byte[])void),Method(check_static_array_uin64_3(uint64[3],byte[])void),Method(check_dyn_array_struct((uint64,address)[],byte[])void),Method(check_static_array_struct((uint64,address)[3],byte[])void),Method(check_dyn_array_dyn_struct((uint64,address,byte[])[],byte[])void)
        method check_static_array_dyn_struct((uint64,address,byte[])[3],byte[])void           tmp%2#0,Method(delete_application()void),Method(check_uint64(uint64,byte[])void),Method(check_dynamic_bytes(byte[],byte[])void),Method(check_string(string,byte[])void),Method(check_biguint(uint512,byte[])void),Method(check_bool(bool,byte[])void),Method(check_dyn_array_uin64(uint64[],byte[])void),Method(check_static_array_uin64_3(uint64[3],byte[])void),Method(check_dyn_array_struct((uint64,address)[],byte[])void),Method(check_static_array_struct((uint64,address)[3],byte[])void),Method(check_dyn_array_dyn_struct((uint64,address,byte[])[],byte[])void),Method(check_static_array_dyn_struct((uint64,address,byte[])[3],byte[])void)
        method check_static_bytes(byte[32])void                                               tmp%2#0,Method(delete_application()void),Method(check_uint64(uint64,byte[])void),Method(check_dynamic_bytes(byte[],byte[])void),Method(check_string(string,byte[])void),Method(check_biguint(uint512,byte[])void),Method(check_bool(bool,byte[])void),Method(check_dyn_array_uin64(uint64[],byte[])void),Method(check_static_array_uin64_3(uint64[3],byte[])void),Method(check_dyn_array_struct((uint64,address)[],byte[])void),Method(check_static_array_struct((uint64,address)[3],byte[])void),Method(check_dyn_array_dyn_struct((uint64,address,byte[])[],byte[])void),Method(check_static_array_dyn_struct((uint64,address,byte[])[3],byte[])void),Method(check_static_bytes(byte[32])void)
        l-load tmp%2#0 13                                                                     Method(delete_application()void),Method(check_uint64(uint64,byte[])void),Method(check_dynamic_bytes(byte[],byte[])void),Method(check_string(string,byte[])void),Method(check_biguint(uint512,byte[])void),Method(check_bool(bool,byte[])void),Method(check_dyn_array_uin64(uint64[],byte[])void),Method(check_static_array_uin64_3(uint64[3],byte[])void),Method(check_dyn_array_struct((uint64,address)[],byte[])void),Method(check_static_array_struct((uint64,address)[3],byte[])void),Method(check_dyn_array_dyn_struct((uint64,address,byte[])[],byte[])void),Method(check_static_array_dyn_struct((uint64,address,byte[])[3],byte[])void),Method(check_static_bytes(byte[32])void),tmp%2#0
        match main_delete_application_route@3 main_check_uint64_route@4 main_check_dynamic_bytes_route@5 main_check_string_route@6 main_check_biguint_route@7 main_check_bool_route@8 main_check_dyn_array_uin64_route@9 main_check_static_array_uin64_3_route@10 main_check_dyn_array_struct_route@11 main_check_static_array_struct_route@12 main_check_dyn_array_dyn_struct_route@13 main_check_static_array_dyn_struct_route@14 main_check_static_bytes_route@15 ; b main_after_if_else@22 

    main_delete_application_route@3:
        // arc4_conversions/contract.py:231
        // @arc4.abimethod(allow_actions=["DeleteApplication"])
        txn OnCompletion                                                                      tmp%3#0
        int DeleteApplication                                                                 tmp%3#0,DeleteApplication
        ==                                                                                    tmp%4#0
        assert // OnCompletion is not DeleteApplication
        txn ApplicationID                                                                     tmp%5#0
        assert // can only call when not creating
        int 1                                                                                 test_cases.arc4_conversions.contract.CheckApp.__puya_arc4_router__%0#0
        v-store tmp%0#0
        b main_after_inlined_test_cases.arc4_conversions.contract.CheckApp.__puya_arc4_router__@23 

    main_check_uint64_route@4:
        // arc4_conversions/contract.py:235
        // @arc4.abimethod
        txn OnCompletion                                                                      tmp%7#0
        !                                                                                     tmp%8#0
        assert // OnCompletion is not NoOp
        txn ApplicationID                                                                     tmp%9#0
        assert // can only call when not creating
        // arc4_conversions/contract.py:230
        // class CheckApp(arc4.ARC4Contract):
        txna ApplicationArgs 1                                                                reinterpret_bytes[8]%0#0
        txna ApplicationArgs 2                                                                reinterpret_bytes[8]%0#0,tmp%11#0
        extract 2 0                                                                           reinterpret_bytes[8]%0#0,tmp%12#0
        // arc4_conversions/contract.py:235
        // @arc4.abimethod
        l-load reinterpret_bytes[8]%0#0 1                                                     tmp%12#0,reinterpret_bytes[8]%0#0
        l-load tmp%12#0 1                                                                     reinterpret_bytes[8]%0#0,tmp%12#0
        callsub check_uint64
        int 1                                                                                 test_cases.arc4_conversions.contract.CheckApp.__puya_arc4_router__%0#0
        v-store tmp%0#0
        b main_after_inlined_test_cases.arc4_conversions.contract.CheckApp.__puya_arc4_router__@23 

    main_check_dynamic_bytes_route@5:
        // arc4_conversions/contract.py:239
        // @arc4.abimethod
        txn OnCompletion                                                                      tmp%13#0
        !                                                                                     tmp%14#0
        assert // OnCompletion is not NoOp
        txn ApplicationID                                                                     tmp%15#0
        assert // can only call when not creating
        // arc4_conversions/contract.py:230
        // class CheckApp(arc4.ARC4Contract):
        txna ApplicationArgs 1                                                                tmp%17#0
        txna ApplicationArgs 2                                                                tmp%17#0,tmp%18#0
        extract 2 0                                                                           tmp%17#0,tmp%19#0
        // arc4_conversions/contract.py:239
        // @arc4.abimethod
        l-load tmp%17#0 1                                                                     tmp%19#0,tmp%17#0
        l-load tmp%19#0 1                                                                     tmp%17#0,tmp%19#0
        callsub check_dynamic_bytes
        int 1                                                                                 test_cases.arc4_conversions.contract.CheckApp.__puya_arc4_router__%0#0
        v-store tmp%0#0
        b main_after_inlined_test_cases.arc4_conversions.contract.CheckApp.__puya_arc4_router__@23 

    main_check_string_route@6:
        // arc4_conversions/contract.py:243
        // @arc4.abimethod
        txn OnCompletion                                                                      tmp%20#0
        !                                                                                     tmp%21#0
        assert // OnCompletion is not NoOp
        txn ApplicationID                                                                     tmp%22#0
        assert // can only call when not creating
        // arc4_conversions/contract.py:230
        // class CheckApp(arc4.ARC4Contract):
        txna ApplicationArgs 1                                                                tmp%24#0
        txna ApplicationArgs 2                                                                tmp%24#0,tmp%25#0
        extract 2 0                                                                           tmp%24#0,tmp%26#0
        // arc4_conversions/contract.py:243
        // @arc4.abimethod
        l-load tmp%24#0 1                                                                     tmp%26#0,tmp%24#0
        l-load tmp%26#0 1                                                                     tmp%24#0,tmp%26#0
        callsub check_string
        int 1                                                                                 test_cases.arc4_conversions.contract.CheckApp.__puya_arc4_router__%0#0
        v-store tmp%0#0
        b main_after_inlined_test_cases.arc4_conversions.contract.CheckApp.__puya_arc4_router__@23 

    main_check_biguint_route@7:
        // arc4_conversions/contract.py:247
        // @arc4.abimethod
        txn OnCompletion                                                                      tmp%27#0
        !                                                                                     tmp%28#0
        assert // OnCompletion is not NoOp
        txn ApplicationID                                                                     tmp%29#0
        assert // can only call when not creating
        // arc4_conversions/contract.py:230
        // class CheckApp(arc4.ARC4Contract):
        txna ApplicationArgs 1                                                                reinterpret_bytes[64]%0#0
        txna ApplicationArgs 2                                                                reinterpret_bytes[64]%0#0,tmp%31#0
        extract 2 0                                                                           reinterpret_bytes[64]%0#0,tmp%32#0
        // arc4_conversions/contract.py:247
        // @arc4.abimethod
        l-load reinterpret_bytes[64]%0#0 1                                                    tmp%32#0,reinterpret_bytes[64]%0#0
        l-load tmp%32#0 1                                                                     reinterpret_bytes[64]%0#0,tmp%32#0
        callsub check_biguint
        int 1                                                                                 test_cases.arc4_conversions.contract.CheckApp.__puya_arc4_router__%0#0
        v-store tmp%0#0
        b main_after_inlined_test_cases.arc4_conversions.contract.CheckApp.__puya_arc4_router__@23 

    main_check_bool_route@8:
        // arc4_conversions/contract.py:251
        // @arc4.abimethod
        txn OnCompletion                                                                      tmp%33#0
        !                                                                                     tmp%34#0
        assert // OnCompletion is not NoOp
        txn ApplicationID                                                                     tmp%35#0
        assert // can only call when not creating
        // arc4_conversions/contract.py:230
        // class CheckApp(arc4.ARC4Contract):
        txna ApplicationArgs 1                                                                reinterpret_bytes[1]%0#0
        txna ApplicationArgs 2                                                                reinterpret_bytes[1]%0#0,tmp%37#0
        extract 2 0                                                                           reinterpret_bytes[1]%0#0,tmp%38#0
        // arc4_conversions/contract.py:251
        // @arc4.abimethod
        l-load reinterpret_bytes[1]%0#0 1                                                     tmp%38#0,reinterpret_bytes[1]%0#0
        l-load tmp%38#0 1                                                                     reinterpret_bytes[1]%0#0,tmp%38#0
        callsub check_bool
        int 1                                                                                 test_cases.arc4_conversions.contract.CheckApp.__puya_arc4_router__%0#0
        v-store tmp%0#0
        b main_after_inlined_test_cases.arc4_conversions.contract.CheckApp.__puya_arc4_router__@23 

    main_check_dyn_array_uin64_route@9:
        // arc4_conversions/contract.py:255
        // @arc4.abimethod
        txn OnCompletion                                                                      tmp%39#0
        !                                                                                     tmp%40#0
        assert // OnCompletion is not NoOp
        txn ApplicationID                                                                     tmp%41#0
        assert // can only call when not creating
        // arc4_conversions/contract.py:230
        // class CheckApp(arc4.ARC4Contract):
        txna ApplicationArgs 1                                                                tmp%43#0
        txna ApplicationArgs 2                                                                tmp%43#0,tmp%44#0
        extract 2 0                                                                           tmp%43#0,tmp%45#0
        // arc4_conversions/contract.py:255
        // @arc4.abimethod
        l-load tmp%43#0 1                                                                     tmp%45#0,tmp%43#0
        l-load tmp%45#0 1                                                                     tmp%43#0,tmp%45#0
        callsub check_dyn_array_uin64
        int 1                                                                                 test_cases.arc4_conversions.contract.CheckApp.__puya_arc4_router__%0#0
        v-store tmp%0#0
        b main_after_inlined_test_cases.arc4_conversions.contract.CheckApp.__puya_arc4_router__@23 

    main_check_static_array_uin64_3_route@10:
        // arc4_conversions/contract.py:261
        // @arc4.abimethod
        txn OnCompletion                                                                      tmp%46#0
        !                                                                                     tmp%47#0
        assert // OnCompletion is not NoOp
        txn ApplicationID                                                                     tmp%48#0
        assert // can only call when not creating
        // arc4_conversions/contract.py:230
        // class CheckApp(arc4.ARC4Contract):
        txna ApplicationArgs 1                                                                reinterpret_bytes[24]%0#0
        txna ApplicationArgs 2                                                                reinterpret_bytes[24]%0#0,tmp%50#0
        extract 2 0                                                                           reinterpret_bytes[24]%0#0,tmp%51#0
        // arc4_conversions/contract.py:261
        // @arc4.abimethod
        l-load reinterpret_bytes[24]%0#0 1                                                    tmp%51#0,reinterpret_bytes[24]%0#0
        l-load tmp%51#0 1                                                                     reinterpret_bytes[24]%0#0,tmp%51#0
        callsub check_static_array_uin64_3
        int 1                                                                                 test_cases.arc4_conversions.contract.CheckApp.__puya_arc4_router__%0#0
        v-store tmp%0#0
        b main_after_inlined_test_cases.arc4_conversions.contract.CheckApp.__puya_arc4_router__@23 

    main_check_dyn_array_struct_route@11:
        // arc4_conversions/contract.py:267
        // @arc4.abimethod
        txn OnCompletion                                                                      tmp%52#0
        !                                                                                     tmp%53#0
        assert // OnCompletion is not NoOp
        txn ApplicationID                                                                     tmp%54#0
        assert // can only call when not creating
        // arc4_conversions/contract.py:230
        // class CheckApp(arc4.ARC4Contract):
        txna ApplicationArgs 1                                                                tmp%56#0
        txna ApplicationArgs 2                                                                tmp%56#0,tmp%57#0
        extract 2 0                                                                           tmp%56#0,tmp%58#0
        // arc4_conversions/contract.py:267
        // @arc4.abimethod
        l-load tmp%56#0 1                                                                     tmp%58#0,tmp%56#0
        l-load tmp%58#0 1                                                                     tmp%56#0,tmp%58#0
        callsub check_dyn_array_struct
        int 1                                                                                 test_cases.arc4_conversions.contract.CheckApp.__puya_arc4_router__%0#0
        v-store tmp%0#0
        b main_after_inlined_test_cases.arc4_conversions.contract.CheckApp.__puya_arc4_router__@23 

    main_check_static_array_struct_route@12:
        // arc4_conversions/contract.py:273
        // @arc4.abimethod
        txn OnCompletion                                                                      tmp%59#0
        !                                                                                     tmp%60#0
        assert // OnCompletion is not NoOp
        txn ApplicationID                                                                     tmp%61#0
        assert // can only call when not creating
        // arc4_conversions/contract.py:230
        // class CheckApp(arc4.ARC4Contract):
        txna ApplicationArgs 1                                                                reinterpret_bytes[120]%0#0
        txna ApplicationArgs 2                                                                reinterpret_bytes[120]%0#0,tmp%63#0
        extract 2 0                                                                           reinterpret_bytes[120]%0#0,tmp%64#0
        // arc4_conversions/contract.py:273
        // @arc4.abimethod
        l-load reinterpret_bytes[120]%0#0 1                                                   tmp%64#0,reinterpret_bytes[120]%0#0
        l-load tmp%64#0 1                                                                     reinterpret_bytes[120]%0#0,tmp%64#0
        callsub check_static_array_struct
        int 1                                                                                 test_cases.arc4_conversions.contract.CheckApp.__puya_arc4_router__%0#0
        v-store tmp%0#0
        b main_after_inlined_test_cases.arc4_conversions.contract.CheckApp.__puya_arc4_router__@23 

    main_check_dyn_array_dyn_struct_route@13:
        // arc4_conversions/contract.py:279
        // @arc4.abimethod
        txn OnCompletion                                                                      tmp%65#0
        !                                                                                     tmp%66#0
        assert // OnCompletion is not NoOp
        txn ApplicationID                                                                     tmp%67#0
        assert // can only call when not creating
        // arc4_conversions/contract.py:230
        // class CheckApp(arc4.ARC4Contract):
        txna ApplicationArgs 1                                                                tmp%69#0
        txna ApplicationArgs 2                                                                tmp%69#0,tmp%70#0
        extract 2 0                                                                           tmp%69#0,tmp%71#0
        // arc4_conversions/contract.py:279
        // @arc4.abimethod
        l-load tmp%69#0 1                                                                     tmp%71#0,tmp%69#0
        l-load tmp%71#0 1                                                                     tmp%69#0,tmp%71#0
        callsub check_dyn_array_dyn_struct
        int 1                                                                                 test_cases.arc4_conversions.contract.CheckApp.__puya_arc4_router__%0#0
        v-store tmp%0#0
        b main_after_inlined_test_cases.arc4_conversions.contract.CheckApp.__puya_arc4_router__@23 

    main_check_static_array_dyn_struct_route@14:
        // arc4_conversions/contract.py:285
        // @arc4.abimethod
        txn OnCompletion                                                                      tmp%72#0
        !                                                                                     tmp%73#0
        assert // OnCompletion is not NoOp
        txn ApplicationID                                                                     tmp%74#0
        assert // can only call when not creating
        // arc4_conversions/contract.py:230
        // class CheckApp(arc4.ARC4Contract):
        txna ApplicationArgs 1                                                                tmp%76#0
        txna ApplicationArgs 2                                                                tmp%76#0,tmp%77#0
        extract 2 0                                                                           tmp%76#0,tmp%78#0
        // arc4_conversions/contract.py:285
        // @arc4.abimethod
        l-load tmp%76#0 1                                                                     tmp%78#0,tmp%76#0
        l-load tmp%78#0 1                                                                     tmp%76#0,tmp%78#0
        callsub check_static_array_dyn_struct
        int 1                                                                                 test_cases.arc4_conversions.contract.CheckApp.__puya_arc4_router__%0#0
        v-store tmp%0#0
        b main_after_inlined_test_cases.arc4_conversions.contract.CheckApp.__puya_arc4_router__@23 

    main_check_static_bytes_route@15:
        // arc4_conversions/contract.py:291
        // @arc4.abimethod
        txn OnCompletion                                                                      tmp%79#0
        !                                                                                     tmp%80#0
        assert // OnCompletion is not NoOp
        txn ApplicationID                                                                     tmp%81#0
        assert // can only call when not creating
        // arc4_conversions/contract.py:230
        // class CheckApp(arc4.ARC4Contract):
        txna ApplicationArgs 1                                                                reinterpret_bytes[32]%0#0
        // arc4_conversions/contract.py:291
        // @arc4.abimethod
        callsub check_static_bytes
        int 1                                                                                 test_cases.arc4_conversions.contract.CheckApp.__puya_arc4_router__%0#0
        v-store tmp%0#0
        b main_after_inlined_test_cases.arc4_conversions.contract.CheckApp.__puya_arc4_router__@23 

    main_bare_routing@18:
        // arc4_conversions/contract.py:230
        // class CheckApp(arc4.ARC4Contract):
        txn OnCompletion                                                                      tmp%83#0
        bz main___algopy_default_create@19 ; b main_after_if_else@22

    main___algopy_default_create@19:
        txn ApplicationID                                                                     tmp%84#0
        !                                                                                     tmp%85#0
        assert // can only call when creating
        int 1                                                                                 test_cases.arc4_conversions.contract.CheckApp.__puya_arc4_router__%0#0
        v-store tmp%0#0
        b main_after_inlined_test_cases.arc4_conversions.contract.CheckApp.__puya_arc4_router__@23 

    main_after_if_else@22:
        // arc4_conversions/contract.py:230
        // class CheckApp(arc4.ARC4Contract):
        int 0                                                                                 test_cases.arc4_conversions.contract.CheckApp.__puya_arc4_router__%0#0
        v-store tmp%0#0
        b main_after_inlined_test_cases.arc4_conversions.contract.CheckApp.__puya_arc4_router__@23 

    main_after_inlined_test_cases.arc4_conversions.contract.CheckApp.__puya_arc4_router__@23:
        v-load tmp%0#0                                                                        tmp%0#0
        return


// test_cases.arc4_conversions.contract.CheckApp.check_uint64(value: bytes, expected: bytes) -> void:
subroutine check_uint64:
    check_uint64_block@0:                                                                     (𝕡) value#0,expected#0 |
        // arc4_conversions/contract.py:237
        // assert value.bytes == expected, "expected to encode correctly"
        p-load value#0                                                                        (𝕡) value#0,expected#0 | value#0 (copy)
        p-load expected#0                                                                     (𝕡) value#0,expected#0 | value#0 (copy),expected#0 (copy)
        ==                                                                                    (𝕡) value#0,expected#0 | tmp%0#0
        assert // expected to encode correctly                                                (𝕡) value#0,expected#0 |
        retsub


// test_cases.arc4_conversions.contract.CheckApp.check_dynamic_bytes(value: bytes, expected: bytes) -> void:
subroutine check_dynamic_bytes:
    check_dynamic_bytes_block@0:                                                              (𝕡) value#0,expected#0 |
        // arc4_conversions/contract.py:241
        // assert value.bytes == expected, "expected to encode correctly"
        p-load value#0                                                                        (𝕡) value#0,expected#0 | value#0 (copy)
        p-load expected#0                                                                     (𝕡) value#0,expected#0 | value#0 (copy),expected#0 (copy)
        ==                                                                                    (𝕡) value#0,expected#0 | tmp%0#0
        assert // expected to encode correctly                                                (𝕡) value#0,expected#0 |
        retsub


// test_cases.arc4_conversions.contract.CheckApp.check_string(value: bytes, expected: bytes) -> void:
subroutine check_string:
    check_string_block@0:                                                                     (𝕡) value#0,expected#0 |
        // arc4_conversions/contract.py:245
        // assert value.bytes == expected, "expected to encode correctly"
        p-load value#0                                                                        (𝕡) value#0,expected#0 | value#0 (copy)
        p-load expected#0                                                                     (𝕡) value#0,expected#0 | value#0 (copy),expected#0 (copy)
        ==                                                                                    (𝕡) value#0,expected#0 | tmp%0#0
        assert // expected to encode correctly                                                (𝕡) value#0,expected#0 |
        retsub


// test_cases.arc4_conversions.contract.CheckApp.check_biguint(value: bytes, expected: bytes) -> void:
subroutine check_biguint:
    check_biguint_block@0:                                                                    (𝕡) value#0,expected#0 |
        // arc4_conversions/contract.py:249
        // assert value.bytes == expected, "expected to encode correctly"
        p-load value#0                                                                        (𝕡) value#0,expected#0 | value#0 (copy)
        p-load expected#0                                                                     (𝕡) value#0,expected#0 | value#0 (copy),expected#0 (copy)
        ==                                                                                    (𝕡) value#0,expected#0 | tmp%0#0
        assert // expected to encode correctly                                                (𝕡) value#0,expected#0 |
        retsub


// test_cases.arc4_conversions.contract.CheckApp.check_bool(value: bytes, expected: bytes) -> void:
subroutine check_bool:
    check_bool_block@0:                                                                       (𝕡) value#0,expected#0 |
        // arc4_conversions/contract.py:253
        // assert value.bytes == expected, "expected to encode correctly"
        p-load value#0                                                                        (𝕡) value#0,expected#0 | value#0 (copy)
        p-load expected#0                                                                     (𝕡) value#0,expected#0 | value#0 (copy),expected#0 (copy)
        ==                                                                                    (𝕡) value#0,expected#0 | tmp%0#0
        assert // expected to encode correctly                                                (𝕡) value#0,expected#0 |
        retsub


// test_cases.arc4_conversions.contract.CheckApp.check_dyn_array_uin64(value: bytes, expected: bytes) -> void:
subroutine check_dyn_array_uin64:
    check_dyn_array_uin64_block@0:                                                            (𝕡) value#0,expected#0 |
        // arc4_conversions/contract.py:259
        // assert value.bytes == expected, "expected to encode correctly"
        p-load value#0                                                                        (𝕡) value#0,expected#0 | value#0 (copy)
        p-load expected#0                                                                     (𝕡) value#0,expected#0 | value#0 (copy),expected#0 (copy)
        ==                                                                                    (𝕡) value#0,expected#0 | tmp%0#0
        assert // expected to encode correctly                                                (𝕡) value#0,expected#0 |
        retsub


// test_cases.arc4_conversions.contract.CheckApp.check_static_array_uin64_3(value: bytes, expected: bytes) -> void:
subroutine check_static_array_uin64_3:
    check_static_array_uin64_3_block@0:                                                       (𝕡) value#0,expected#0 |
        // arc4_conversions/contract.py:265
        // assert value.bytes == expected, "expected to encode correctly"
        p-load value#0                                                                        (𝕡) value#0,expected#0 | value#0 (copy)
        p-load expected#0                                                                     (𝕡) value#0,expected#0 | value#0 (copy),expected#0 (copy)
        ==                                                                                    (𝕡) value#0,expected#0 | tmp%0#0
        assert // expected to encode correctly                                                (𝕡) value#0,expected#0 |
        retsub


// test_cases.arc4_conversions.contract.CheckApp.check_dyn_array_struct(value: bytes, expected: bytes) -> void:
subroutine check_dyn_array_struct:
    check_dyn_array_struct_block@0:                                                           (𝕡) value#0,expected#0 |
        // arc4_conversions/contract.py:271
        // assert value.bytes == expected, "expected to encode correctly"
        p-load value#0                                                                        (𝕡) value#0,expected#0 | value#0 (copy)
        p-load expected#0                                                                     (𝕡) value#0,expected#0 | value#0 (copy),expected#0 (copy)
        ==                                                                                    (𝕡) value#0,expected#0 | tmp%0#0
        assert // expected to encode correctly                                                (𝕡) value#0,expected#0 |
        retsub


// test_cases.arc4_conversions.contract.CheckApp.check_static_array_struct(value: bytes, expected: bytes) -> void:
subroutine check_static_array_struct:
    check_static_array_struct_block@0:                                                        (𝕡) value#0,expected#0 |
        // arc4_conversions/contract.py:277
        // assert value.bytes == expected, "expected to encode correctly"
        p-load value#0                                                                        (𝕡) value#0,expected#0 | value#0 (copy)
        p-load expected#0                                                                     (𝕡) value#0,expected#0 | value#0 (copy),expected#0 (copy)
        ==                                                                                    (𝕡) value#0,expected#0 | tmp%0#0
        assert // expected to encode correctly                                                (𝕡) value#0,expected#0 |
        retsub


// test_cases.arc4_conversions.contract.CheckApp.check_dyn_array_dyn_struct(value: bytes, expected: bytes) -> void:
subroutine check_dyn_array_dyn_struct:
    check_dyn_array_dyn_struct_block@0:                                                       (𝕡) value#0,expected#0 |
        // arc4_conversions/contract.py:283
        // assert value.bytes == expected, "expected to encode correctly"
        p-load value#0                                                                        (𝕡) value#0,expected#0 | value#0 (copy)
        p-load expected#0                                                                     (𝕡) value#0,expected#0 | value#0 (copy),expected#0 (copy)
        ==                                                                                    (𝕡) value#0,expected#0 | tmp%0#0
        assert // expected to encode correctly                                                (𝕡) value#0,expected#0 |
        retsub


// test_cases.arc4_conversions.contract.CheckApp.check_static_array_dyn_struct(value: bytes, expected: bytes) -> void:
subroutine check_static_array_dyn_struct:
    check_static_array_dyn_struct_block@0:                                                    (𝕡) value#0,expected#0 |
        // arc4_conversions/contract.py:289
        // assert value.bytes == expected, "expected to encode correctly"
        p-load value#0                                                                        (𝕡) value#0,expected#0 | value#0 (copy)
        p-load expected#0                                                                     (𝕡) value#0,expected#0 | value#0 (copy),expected#0 (copy)
        ==                                                                                    (𝕡) value#0,expected#0 | tmp%0#0
        assert // expected to encode correctly                                                (𝕡) value#0,expected#0 |
        retsub


// test_cases.arc4_conversions.contract.CheckApp.check_static_bytes(bytes32: bytes) -> void:
subroutine check_static_bytes:
    check_static_bytes_block@0:                                                               (𝕡) bytes32#0 |
        // arc4_conversions/contract.py:293
        // assert bytes32.bytes == Txn.sender.bytes, "expected to encode correctly"
        txn Sender                                                                            (𝕡) bytes32#0 | tmp%0#0
        p-load bytes32#0                                                                      (𝕡) bytes32#0 | tmp%0#0,bytes32#0 (copy)
        l-load tmp%0#0 1                                                                      (𝕡) bytes32#0 | bytes32#0 (copy),tmp%0#0
        ==                                                                                    (𝕡) bytes32#0 | tmp%1#0
        assert // expected to encode correctly                                                (𝕡) bytes32#0 |
        retsub


