// Op                                                                               Stack (out)
// algopy.arc4.ARC4Contract.approval_program() -> uint64:
subroutine main:
    main_block@0:
        // arc4_conversions/contract.py:231
        // @arc4.abimethod(allow_actions=["DeleteApplication"])
        int 1                                                                       1
        f-store lifted%return#0                                                     (𝕗) lifted%return#0 |
        // arc4_conversions/contract.py:230
        // class CheckApp(arc4.ARC4Contract):
        txn NumAppArgs                                                              (𝕗) lifted%return#0 | tmp%0#1
        bz main_bare_routing@27 ; b main_abi_routing@2                              (𝕗) lifted%return#0 |

    main_abi_routing@2:                                                             (𝕗) lifted%return#0 |
        // arc4_conversions/contract.py:230
        // class CheckApp(arc4.ARC4Contract):
        txna ApplicationArgs 0                                                      (𝕗) lifted%return#0 | tmp%2#0
        method delete_application()void                                             (𝕗) lifted%return#0 | tmp%2#0,Method(delete_application()void)
        l-load tmp%2#0 1                                                            (𝕗) lifted%return#0 | Method(delete_application()void),tmp%2#0
        match main_delete_application_route@3 ; b main_route_NoOp@4                 (𝕗) lifted%return#0 |

    main_delete_application_route@3:                                                (𝕗) lifted%return#0 |
        // arc4_conversions/contract.py:231
        // @arc4.abimethod(allow_actions=["DeleteApplication"])
        txn OnCompletion                                                            (𝕗) lifted%return#0 | tmp%3#0
        int DeleteApplication                                                       (𝕗) lifted%return#0 | tmp%3#0,DeleteApplication
        ==                                                                          (𝕗) lifted%return#0 | tmp%4#0
        assert // OnCompletion is not DeleteApplication                             (𝕗) lifted%return#0 |
        txn ApplicationID                                                           (𝕗) lifted%return#0 | tmp%5#0
        assert // can only call when not creating                                   (𝕗) lifted%return#0 |
        f-load lifted%return#0                                                      (𝕗) lifted%return#0 | lifted%return#0
        return                                                                      (𝕗) lifted%return#0 |

    main_route_NoOp@4:                                                              (𝕗) lifted%return#0 |
        // arc4_conversions/contract.py:230
        // class CheckApp(arc4.ARC4Contract):
        txn OnCompletion                                                            (𝕗) lifted%return#0 | tmp%7#0
        !                                                                           (𝕗) lifted%return#0 | tmp%8#0
        assert // OnCompletion is not NoOp                                          (𝕗) lifted%return#0 |
        txn ApplicationID                                                           (𝕗) lifted%return#0 | tmp%10#0
        assert                                                                      (𝕗) lifted%return#0 |
        txna ApplicationArgs 0                                                      (𝕗) lifted%return#0 | tmp%11#0
        method check_uint64(uint64,byte[])void                                      (𝕗) lifted%return#0 | tmp%11#0,Method(check_uint64(uint64,byte[])void)
        method check_dynamic_bytes(byte[],byte[])void                               (𝕗) lifted%return#0 | tmp%11#0,Method(check_uint64(uint64,byte[])void),Method(check_dynamic_bytes(byte[],byte[])void)
        method check_string(string,byte[])void                                      (𝕗) lifted%return#0 | tmp%11#0,Method(check_uint64(uint64,byte[])void),Method(check_dynamic_bytes(byte[],byte[])void),Method(check_string(string,byte[])void)
        method check_biguint(uint512,byte[])void                                    (𝕗) lifted%return#0 | tmp%11#0,Method(check_uint64(uint64,byte[])void),Method(check_dynamic_bytes(byte[],byte[])void),Method(check_string(string,byte[])void),Method(check_biguint(uint512,byte[])void)
        method check_bool(bool,byte[])void                                          (𝕗) lifted%return#0 | tmp%11#0,Method(check_uint64(uint64,byte[])void),Method(check_dynamic_bytes(byte[],byte[])void),Method(check_string(string,byte[])void),Method(check_biguint(uint512,byte[])void),Method(check_bool(bool,byte[])void)
        method check_dyn_array_uin64(uint64[],byte[])void                           (𝕗) lifted%return#0 | tmp%11#0,Method(check_uint64(uint64,byte[])void),Method(check_dynamic_bytes(byte[],byte[])void),Method(check_string(string,byte[])void),Method(check_biguint(uint512,byte[])void),Method(check_bool(bool,byte[])void),Method(check_dyn_array_uin64(uint64[],byte[])void)
        method check_static_array_uin64_3(uint64[3],byte[])void                     (𝕗) lifted%return#0 | tmp%11#0,Method(check_uint64(uint64,byte[])void),Method(check_dynamic_bytes(byte[],byte[])void),Method(check_string(string,byte[])void),Method(check_biguint(uint512,byte[])void),Method(check_bool(bool,byte[])void),Method(check_dyn_array_uin64(uint64[],byte[])void),Method(check_static_array_uin64_3(uint64[3],byte[])void)
        method check_dyn_array_struct((uint64,address)[],byte[])void                (𝕗) lifted%return#0 | tmp%11#0,Method(check_uint64(uint64,byte[])void),Method(check_dynamic_bytes(byte[],byte[])void),Method(check_string(string,byte[])void),Method(check_biguint(uint512,byte[])void),Method(check_bool(bool,byte[])void),Method(check_dyn_array_uin64(uint64[],byte[])void),Method(check_static_array_uin64_3(uint64[3],byte[])void),Method(check_dyn_array_struct((uint64,address)[],byte[])void)
        method check_static_array_struct((uint64,address)[3],byte[])void            (𝕗) lifted%return#0 | tmp%11#0,Method(check_uint64(uint64,byte[])void),Method(check_dynamic_bytes(byte[],byte[])void),Method(check_string(string,byte[])void),Method(check_biguint(uint512,byte[])void),Method(check_bool(bool,byte[])void),Method(check_dyn_array_uin64(uint64[],byte[])void),Method(check_static_array_uin64_3(uint64[3],byte[])void),Method(check_dyn_array_struct((uint64,address)[],byte[])void),Method(check_static_array_struct((uint64,address)[3],byte[])void)
        method check_dyn_array_dyn_struct((uint64,address,byte[])[],byte[])void     (𝕗) lifted%return#0 | tmp%11#0,Method(check_uint64(uint64,byte[])void),Method(check_dynamic_bytes(byte[],byte[])void),Method(check_string(string,byte[])void),Method(check_biguint(uint512,byte[])void),Method(check_bool(bool,byte[])void),Method(check_dyn_array_uin64(uint64[],byte[])void),Method(check_static_array_uin64_3(uint64[3],byte[])void),Method(check_dyn_array_struct((uint64,address)[],byte[])void),Method(check_static_array_struct((uint64,address)[3],byte[])void),Method(check_dyn_array_dyn_struct((uint64,address,byte[])[],byte[])void)
        method check_static_array_dyn_struct((uint64,address,byte[])[3],byte[])void (𝕗) lifted%return#0 | tmp%11#0,Method(check_uint64(uint64,byte[])void),Method(check_dynamic_bytes(byte[],byte[])void),Method(check_string(string,byte[])void),Method(check_biguint(uint512,byte[])void),Method(check_bool(bool,byte[])void),Method(check_dyn_array_uin64(uint64[],byte[])void),Method(check_static_array_uin64_3(uint64[3],byte[])void),Method(check_dyn_array_struct((uint64,address)[],byte[])void),Method(check_static_array_struct((uint64,address)[3],byte[])void),Method(check_dyn_array_dyn_struct((uint64,address,byte[])[],byte[])void),Method(check_static_array_dyn_struct((uint64,address,byte[])[3],byte[])void)
        method check_static_bytes(byte[32])void                                     (𝕗) lifted%return#0 | tmp%11#0,Method(check_uint64(uint64,byte[])void),Method(check_dynamic_bytes(byte[],byte[])void),Method(check_string(string,byte[])void),Method(check_biguint(uint512,byte[])void),Method(check_bool(bool,byte[])void),Method(check_dyn_array_uin64(uint64[],byte[])void),Method(check_static_array_uin64_3(uint64[3],byte[])void),Method(check_dyn_array_struct((uint64,address)[],byte[])void),Method(check_static_array_struct((uint64,address)[3],byte[])void),Method(check_dyn_array_dyn_struct((uint64,address,byte[])[],byte[])void),Method(check_static_array_dyn_struct((uint64,address,byte[])[3],byte[])void),Method(check_static_bytes(byte[32])void)
        l-load tmp%11#0 12                                                          (𝕗) lifted%return#0 | Method(check_uint64(uint64,byte[])void),Method(check_dynamic_bytes(byte[],byte[])void),Method(check_string(string,byte[])void),Method(check_biguint(uint512,byte[])void),Method(check_bool(bool,byte[])void),Method(check_dyn_array_uin64(uint64[],byte[])void),Method(check_static_array_uin64_3(uint64[3],byte[])void),Method(check_dyn_array_struct((uint64,address)[],byte[])void),Method(check_static_array_struct((uint64,address)[3],byte[])void),Method(check_dyn_array_dyn_struct((uint64,address,byte[])[],byte[])void),Method(check_static_array_dyn_struct((uint64,address,byte[])[3],byte[])void),Method(check_static_bytes(byte[32])void),tmp%11#0
        match main_check_uint64_route@7 main_check_dynamic_bytes_route@8 main_check_string_route@9 main_check_biguint_route@10 main_check_bool_route@11 main_check_dyn_array_uin64_route@12 main_check_static_array_uin64_3_route@13 main_check_dyn_array_struct_route@14 main_check_static_array_struct_route@15 main_check_dyn_array_dyn_struct_route@16 main_check_static_array_dyn_struct_route@17 main_check_static_bytes_route@18 ; b main_switch_case_default@19 (𝕗) lifted%return#0 | 

    main_check_uint64_route@7:                                                      (𝕗) lifted%return#0 |
        // arc4_conversions/contract.py:235
        // @arc4.abimethod
        callsub check_uint64                                                        (𝕗) lifted%return#0 |
        err                                                                         (𝕗) lifted%return#0 |

    main_check_dynamic_bytes_route@8:                                               (𝕗) lifted%return#0 |
        // arc4_conversions/contract.py:239
        // @arc4.abimethod
        callsub check_dynamic_bytes                                                 (𝕗) lifted%return#0 |
        err                                                                         (𝕗) lifted%return#0 |

    main_check_string_route@9:                                                      (𝕗) lifted%return#0 |
        // arc4_conversions/contract.py:243
        // @arc4.abimethod
        callsub check_string                                                        (𝕗) lifted%return#0 |
        err                                                                         (𝕗) lifted%return#0 |

    main_check_biguint_route@10:                                                    (𝕗) lifted%return#0 |
        // arc4_conversions/contract.py:247
        // @arc4.abimethod
        callsub check_biguint                                                       (𝕗) lifted%return#0 |
        err                                                                         (𝕗) lifted%return#0 |

    main_check_bool_route@11:                                                       (𝕗) lifted%return#0 |
        // arc4_conversions/contract.py:251
        // @arc4.abimethod
        callsub check_bool                                                          (𝕗) lifted%return#0 |
        err                                                                         (𝕗) lifted%return#0 |

    main_check_dyn_array_uin64_route@12:                                            (𝕗) lifted%return#0 |
        // arc4_conversions/contract.py:255
        // @arc4.abimethod
        callsub check_dyn_array_uin64                                               (𝕗) lifted%return#0 |
        err                                                                         (𝕗) lifted%return#0 |

    main_check_static_array_uin64_3_route@13:                                       (𝕗) lifted%return#0 |
        // arc4_conversions/contract.py:261
        // @arc4.abimethod
        callsub check_static_array_uin64_3                                          (𝕗) lifted%return#0 |
        err                                                                         (𝕗) lifted%return#0 |

    main_check_dyn_array_struct_route@14:                                           (𝕗) lifted%return#0 |
        // arc4_conversions/contract.py:267
        // @arc4.abimethod
        callsub check_dyn_array_struct                                              (𝕗) lifted%return#0 |
        err                                                                         (𝕗) lifted%return#0 |

    main_check_static_array_struct_route@15:                                        (𝕗) lifted%return#0 |
        // arc4_conversions/contract.py:273
        // @arc4.abimethod
        callsub check_static_array_struct                                           (𝕗) lifted%return#0 |
        err                                                                         (𝕗) lifted%return#0 |

    main_check_dyn_array_dyn_struct_route@16:                                       (𝕗) lifted%return#0 |
        // arc4_conversions/contract.py:279
        // @arc4.abimethod
        callsub check_dyn_array_dyn_struct                                          (𝕗) lifted%return#0 |
        err                                                                         (𝕗) lifted%return#0 |

    main_check_static_array_dyn_struct_route@17:                                    (𝕗) lifted%return#0 |
        // arc4_conversions/contract.py:285
        // @arc4.abimethod
        callsub check_static_array_dyn_struct                                       (𝕗) lifted%return#0 |
        err                                                                         (𝕗) lifted%return#0 |

    main_check_static_bytes_route@18:                                               (𝕗) lifted%return#0 |
        // arc4_conversions/contract.py:291
        // @arc4.abimethod
        callsub check_static_bytes                                                  (𝕗) lifted%return#0 |
        err                                                                         (𝕗) lifted%return#0 |

    main_switch_case_default@19:                                                    (𝕗) lifted%return#0 |
        err                                                                         (𝕗) lifted%return#0 |

    main_bare_routing@27:                                                           (𝕗) lifted%return#0 |
        // arc4_conversions/contract.py:230
        // class CheckApp(arc4.ARC4Contract):
        txn OnCompletion                                                            (𝕗) lifted%return#0 | tmp%13#0
        !                                                                           (𝕗) lifted%return#0 | not%tmp%13#0
        assert                                                                      (𝕗) lifted%return#0 |
        txn ApplicationID                                                           (𝕗) lifted%return#0 | tmp%14#0
        !                                                                           (𝕗) lifted%return#0 | tmp%15#0
        assert // can only call when creating                                       (𝕗) lifted%return#0 |
        f-load lifted%return#0                                                      (𝕗) lifted%return#0 | lifted%return#0
        return                                                                      (𝕗) lifted%return#0 |


// test_cases.arc4_conversions.contract.CheckApp.check_uint64[routing]() -> void:
subroutine check_uint64:
    check_uint64_block@0:
        // arc4_conversions/contract.py:235
        // @arc4.abimethod
        txna ApplicationArgs 1                                                      value#0
        txna ApplicationArgs 2                                                      value#0,reinterpret_Encoded(len+uint8[])%0#0
        extract 2 0                                                                 value#0,expected#0
        // arc4_conversions/contract.py:237
        // assert value.bytes == expected, "expected to encode correctly"
        l-load value#0 1                                                            expected#0,value#0
        l-load expected#0 1                                                         value#0,expected#0
        ==                                                                          tmp%0#1
        assert // expected to encode correctly
        // arc4_conversions/contract.py:235
        // @arc4.abimethod
        int 1                                                                       1
        return


// test_cases.arc4_conversions.contract.CheckApp.check_dynamic_bytes[routing]() -> void:
subroutine check_dynamic_bytes:
    check_dynamic_bytes_block@0:
        // arc4_conversions/contract.py:239
        // @arc4.abimethod
        txna ApplicationArgs 1                                                      value#0
        txna ApplicationArgs 2                                                      value#0,reinterpret_Encoded(len+uint8[])%1#0
        extract 2 0                                                                 value#0,expected#0
        // arc4_conversions/contract.py:241
        // assert value.bytes == expected, "expected to encode correctly"
        l-load value#0 1                                                            expected#0,value#0
        l-load expected#0 1                                                         value#0,expected#0
        ==                                                                          tmp%0#1
        assert // expected to encode correctly
        // arc4_conversions/contract.py:239
        // @arc4.abimethod
        int 1                                                                       1
        return


// test_cases.arc4_conversions.contract.CheckApp.check_string[routing]() -> void:
subroutine check_string:
    check_string_block@0:
        // arc4_conversions/contract.py:243
        // @arc4.abimethod
        txna ApplicationArgs 1                                                      value#0
        txna ApplicationArgs 2                                                      value#0,reinterpret_Encoded(len+uint8[])%0#0
        extract 2 0                                                                 value#0,expected#0
        // arc4_conversions/contract.py:245
        // assert value.bytes == expected, "expected to encode correctly"
        l-load value#0 1                                                            expected#0,value#0
        l-load expected#0 1                                                         value#0,expected#0
        ==                                                                          tmp%0#1
        assert // expected to encode correctly
        // arc4_conversions/contract.py:243
        // @arc4.abimethod
        int 1                                                                       1
        return


// test_cases.arc4_conversions.contract.CheckApp.check_biguint[routing]() -> void:
subroutine check_biguint:
    check_biguint_block@0:
        // arc4_conversions/contract.py:247
        // @arc4.abimethod
        txna ApplicationArgs 1                                                      value#0
        txna ApplicationArgs 2                                                      value#0,reinterpret_Encoded(len+uint8[])%0#0
        extract 2 0                                                                 value#0,expected#0
        // arc4_conversions/contract.py:249
        // assert value.bytes == expected, "expected to encode correctly"
        l-load value#0 1                                                            expected#0,value#0
        l-load expected#0 1                                                         value#0,expected#0
        ==                                                                          tmp%0#1
        assert // expected to encode correctly
        // arc4_conversions/contract.py:247
        // @arc4.abimethod
        int 1                                                                       1
        return


// test_cases.arc4_conversions.contract.CheckApp.check_bool[routing]() -> void:
subroutine check_bool:
    check_bool_block@0:
        // arc4_conversions/contract.py:251
        // @arc4.abimethod
        txna ApplicationArgs 1                                                      value#0
        txna ApplicationArgs 2                                                      value#0,reinterpret_Encoded(len+uint8[])%0#0
        extract 2 0                                                                 value#0,expected#0
        // arc4_conversions/contract.py:253
        // assert value.bytes == expected, "expected to encode correctly"
        l-load value#0 1                                                            expected#0,value#0
        l-load expected#0 1                                                         value#0,expected#0
        ==                                                                          tmp%0#1
        assert // expected to encode correctly
        // arc4_conversions/contract.py:251
        // @arc4.abimethod
        int 1                                                                       1
        return


// test_cases.arc4_conversions.contract.CheckApp.check_dyn_array_uin64[routing]() -> void:
subroutine check_dyn_array_uin64:
    check_dyn_array_uin64_block@0:
        // arc4_conversions/contract.py:255
        // @arc4.abimethod
        txna ApplicationArgs 1                                                      value#0
        txna ApplicationArgs 2                                                      value#0,reinterpret_Encoded(len+uint8[])%0#0
        extract 2 0                                                                 value#0,expected#0
        // arc4_conversions/contract.py:259
        // assert value.bytes == expected, "expected to encode correctly"
        l-load value#0 1                                                            expected#0,value#0
        l-load expected#0 1                                                         value#0,expected#0
        ==                                                                          tmp%0#1
        assert // expected to encode correctly
        // arc4_conversions/contract.py:255
        // @arc4.abimethod
        int 1                                                                       1
        return


// test_cases.arc4_conversions.contract.CheckApp.check_static_array_uin64_3[routing]() -> void:
subroutine check_static_array_uin64_3:
    check_static_array_uin64_3_block@0:
        // arc4_conversions/contract.py:261
        // @arc4.abimethod
        txna ApplicationArgs 1                                                      value#0
        txna ApplicationArgs 2                                                      value#0,reinterpret_Encoded(len+uint8[])%0#0
        extract 2 0                                                                 value#0,expected#0
        // arc4_conversions/contract.py:265
        // assert value.bytes == expected, "expected to encode correctly"
        l-load value#0 1                                                            expected#0,value#0
        l-load expected#0 1                                                         value#0,expected#0
        ==                                                                          tmp%0#1
        assert // expected to encode correctly
        // arc4_conversions/contract.py:261
        // @arc4.abimethod
        int 1                                                                       1
        return


// test_cases.arc4_conversions.contract.CheckApp.check_dyn_array_struct[routing]() -> void:
subroutine check_dyn_array_struct:
    check_dyn_array_struct_block@0:
        // arc4_conversions/contract.py:267
        // @arc4.abimethod
        txna ApplicationArgs 1                                                      value#0
        txna ApplicationArgs 2                                                      value#0,reinterpret_Encoded(len+uint8[])%0#0
        extract 2 0                                                                 value#0,expected#0
        // arc4_conversions/contract.py:271
        // assert value.bytes == expected, "expected to encode correctly"
        l-load value#0 1                                                            expected#0,value#0
        l-load expected#0 1                                                         value#0,expected#0
        ==                                                                          tmp%0#1
        assert // expected to encode correctly
        // arc4_conversions/contract.py:267
        // @arc4.abimethod
        int 1                                                                       1
        return


// test_cases.arc4_conversions.contract.CheckApp.check_static_array_struct[routing]() -> void:
subroutine check_static_array_struct:
    check_static_array_struct_block@0:
        // arc4_conversions/contract.py:273
        // @arc4.abimethod
        txna ApplicationArgs 1                                                      value#0
        txna ApplicationArgs 2                                                      value#0,reinterpret_Encoded(len+uint8[])%0#0
        extract 2 0                                                                 value#0,expected#0
        // arc4_conversions/contract.py:277
        // assert value.bytes == expected, "expected to encode correctly"
        l-load value#0 1                                                            expected#0,value#0
        l-load expected#0 1                                                         value#0,expected#0
        ==                                                                          tmp%0#1
        assert // expected to encode correctly
        // arc4_conversions/contract.py:273
        // @arc4.abimethod
        int 1                                                                       1
        return


// test_cases.arc4_conversions.contract.CheckApp.check_dyn_array_dyn_struct[routing]() -> void:
subroutine check_dyn_array_dyn_struct:
    check_dyn_array_dyn_struct_block@0:
        // arc4_conversions/contract.py:279
        // @arc4.abimethod
        txna ApplicationArgs 1                                                      value#0
        txna ApplicationArgs 2                                                      value#0,reinterpret_Encoded(len+uint8[])%0#0
        extract 2 0                                                                 value#0,expected#0
        // arc4_conversions/contract.py:283
        // assert value.bytes == expected, "expected to encode correctly"
        l-load value#0 1                                                            expected#0,value#0
        l-load expected#0 1                                                         value#0,expected#0
        ==                                                                          tmp%0#1
        assert // expected to encode correctly
        // arc4_conversions/contract.py:279
        // @arc4.abimethod
        int 1                                                                       1
        return


// test_cases.arc4_conversions.contract.CheckApp.check_static_array_dyn_struct[routing]() -> void:
subroutine check_static_array_dyn_struct:
    check_static_array_dyn_struct_block@0:
        // arc4_conversions/contract.py:285
        // @arc4.abimethod
        txna ApplicationArgs 1                                                      value#0
        txna ApplicationArgs 2                                                      value#0,reinterpret_Encoded(len+uint8[])%0#0
        extract 2 0                                                                 value#0,expected#0
        // arc4_conversions/contract.py:289
        // assert value.bytes == expected, "expected to encode correctly"
        l-load value#0 1                                                            expected#0,value#0
        l-load expected#0 1                                                         value#0,expected#0
        ==                                                                          tmp%0#1
        assert // expected to encode correctly
        // arc4_conversions/contract.py:285
        // @arc4.abimethod
        int 1                                                                       1
        return


// test_cases.arc4_conversions.contract.CheckApp.check_static_bytes[routing]() -> void:
subroutine check_static_bytes:
    check_static_bytes_block@0:
        // arc4_conversions/contract.py:291
        // @arc4.abimethod
        txna ApplicationArgs 1                                                      bytes32#0
        // arc4_conversions/contract.py:293
        // assert bytes32.bytes == Txn.sender.bytes, "expected to encode correctly"
        txn Sender                                                                  bytes32#0,tmp%0#0
        l-load bytes32#0 1                                                          tmp%0#0,bytes32#0
        l-load tmp%0#0 1                                                            bytes32#0,tmp%0#0
        ==                                                                          tmp%1#0
        assert // expected to encode correctly
        // arc4_conversions/contract.py:291
        // @arc4.abimethod
        int 1                                                                       1
        return


