// Op                                                                               Stack (out)
// algopy.arc4.ARC4Contract.approval_program() -> uint64:
subroutine main:
    block@0:
        // arc4_conversions/contract.py:230
        // class CheckApp(arc4.ARC4Contract):
        txn NumAppArgs                                                              tmp%0#1
        v-store tmp%0#1
        v-load tmp%0#1                                                              tmp%0#1
        bz __algopy_default_create@23 ; b abi_routing@2

    abi_routing@2:
        // arc4_conversions/contract.py:230
        // class CheckApp(arc4.ARC4Contract):
        txna ApplicationArgs 0                                                      tmp%2#0
        v-store tmp%2#0
        method delete_application()void                                             Method(delete_application()void)
        v-load tmp%2#0                                                              Method(delete_application()void),tmp%2#0
        match delete_application_route@3 ; b switch_case_next@5

    delete_application_route@3:
        // arc4_conversions/contract.py:231
        // @arc4.abimethod(allow_actions=["DeleteApplication"])
        txn OnCompletion                                                            tmp%3#0
        v-store tmp%3#0
        v-load tmp%3#0                                                              tmp%3#0
        int DeleteApplication                                                       tmp%3#0,DeleteApplication
        ==                                                                          tmp%4#0
        v-store tmp%4#0
        txn ApplicationID                                                           tmp%5#0
        v-store tmp%5#0
        v-load tmp%4#0                                                              tmp%4#0
        v-load tmp%5#0                                                              tmp%4#0,tmp%5#0
        &&                                                                          tmp%7#0
        v-store tmp%7#0
        v-load tmp%7#0                                                              tmp%7#0
        assert // OnCompletion must be DeleteApplication && can only call when not creating 
        int 1                                                                       1
        return

    switch_case_next@5:
        // arc4_conversions/contract.py:230
        // class CheckApp(arc4.ARC4Contract):
        txn OnCompletion                                                            tmp%8#0
        v-store tmp%8#0
        v-load tmp%8#0                                                              tmp%8#0
        !                                                                           tmp%9#0
        v-store tmp%9#0
        v-load tmp%9#0                                                              tmp%9#0
        assert // OnCompletion must be NoOp
        txn ApplicationID                                                           tmp%10#0
        v-store tmp%10#0
        v-load tmp%10#0                                                             tmp%10#0
        assert
        txna ApplicationArgs 0                                                      tmp%12#0
        v-store tmp%12#0
        method check_uint64(uint64,byte[])void                                      Method(check_uint64(uint64,byte[])void)
        method check_dynamic_bytes(byte[],byte[])void                               Method(check_uint64(uint64,byte[])void),Method(check_dynamic_bytes(byte[],byte[])void)
        method check_string(string,byte[])void                                      Method(check_uint64(uint64,byte[])void),Method(check_dynamic_bytes(byte[],byte[])void),Method(check_string(string,byte[])void)
        method check_biguint(uint512,byte[])void                                    Method(check_uint64(uint64,byte[])void),Method(check_dynamic_bytes(byte[],byte[])void),Method(check_string(string,byte[])void),Method(check_biguint(uint512,byte[])void)
        method check_bool(bool,byte[])void                                          Method(check_uint64(uint64,byte[])void),Method(check_dynamic_bytes(byte[],byte[])void),Method(check_string(string,byte[])void),Method(check_biguint(uint512,byte[])void),Method(check_bool(bool,byte[])void)
        method check_dyn_array_uin64(uint64[],byte[])void                           Method(check_uint64(uint64,byte[])void),Method(check_dynamic_bytes(byte[],byte[])void),Method(check_string(string,byte[])void),Method(check_biguint(uint512,byte[])void),Method(check_bool(bool,byte[])void),Method(check_dyn_array_uin64(uint64[],byte[])void)
        method check_static_array_uin64_3(uint64[3],byte[])void                     Method(check_uint64(uint64,byte[])void),Method(check_dynamic_bytes(byte[],byte[])void),Method(check_string(string,byte[])void),Method(check_biguint(uint512,byte[])void),Method(check_bool(bool,byte[])void),Method(check_dyn_array_uin64(uint64[],byte[])void),Method(check_static_array_uin64_3(uint64[3],byte[])void)
        method check_dyn_array_struct((uint64,address)[],byte[])void                Method(check_uint64(uint64,byte[])void),Method(check_dynamic_bytes(byte[],byte[])void),Method(check_string(string,byte[])void),Method(check_biguint(uint512,byte[])void),Method(check_bool(bool,byte[])void),Method(check_dyn_array_uin64(uint64[],byte[])void),Method(check_static_array_uin64_3(uint64[3],byte[])void),Method(check_dyn_array_struct((uint64,address)[],byte[])void)
        method check_static_array_struct((uint64,address)[3],byte[])void            Method(check_uint64(uint64,byte[])void),Method(check_dynamic_bytes(byte[],byte[])void),Method(check_string(string,byte[])void),Method(check_biguint(uint512,byte[])void),Method(check_bool(bool,byte[])void),Method(check_dyn_array_uin64(uint64[],byte[])void),Method(check_static_array_uin64_3(uint64[3],byte[])void),Method(check_dyn_array_struct((uint64,address)[],byte[])void),Method(check_static_array_struct((uint64,address)[3],byte[])void)
        method check_dyn_array_dyn_struct((uint64,address,byte[])[],byte[])void     Method(check_uint64(uint64,byte[])void),Method(check_dynamic_bytes(byte[],byte[])void),Method(check_string(string,byte[])void),Method(check_biguint(uint512,byte[])void),Method(check_bool(bool,byte[])void),Method(check_dyn_array_uin64(uint64[],byte[])void),Method(check_static_array_uin64_3(uint64[3],byte[])void),Method(check_dyn_array_struct((uint64,address)[],byte[])void),Method(check_static_array_struct((uint64,address)[3],byte[])void),Method(check_dyn_array_dyn_struct((uint64,address,byte[])[],byte[])void)
        method check_static_array_dyn_struct((uint64,address,byte[])[3],byte[])void Method(check_uint64(uint64,byte[])void),Method(check_dynamic_bytes(byte[],byte[])void),Method(check_string(string,byte[])void),Method(check_biguint(uint512,byte[])void),Method(check_bool(bool,byte[])void),Method(check_dyn_array_uin64(uint64[],byte[])void),Method(check_static_array_uin64_3(uint64[3],byte[])void),Method(check_dyn_array_struct((uint64,address)[],byte[])void),Method(check_static_array_struct((uint64,address)[3],byte[])void),Method(check_dyn_array_dyn_struct((uint64,address,byte[])[],byte[])void),Method(check_static_array_dyn_struct((uint64,address,byte[])[3],byte[])void)
        method check_static_bytes(byte[32])void                                     Method(check_uint64(uint64,byte[])void),Method(check_dynamic_bytes(byte[],byte[])void),Method(check_string(string,byte[])void),Method(check_biguint(uint512,byte[])void),Method(check_bool(bool,byte[])void),Method(check_dyn_array_uin64(uint64[],byte[])void),Method(check_static_array_uin64_3(uint64[3],byte[])void),Method(check_dyn_array_struct((uint64,address)[],byte[])void),Method(check_static_array_struct((uint64,address)[3],byte[])void),Method(check_dyn_array_dyn_struct((uint64,address,byte[])[],byte[])void),Method(check_static_array_dyn_struct((uint64,address,byte[])[3],byte[])void),Method(check_static_bytes(byte[32])void)
        v-load tmp%12#0                                                             Method(check_uint64(uint64,byte[])void),Method(check_dynamic_bytes(byte[],byte[])void),Method(check_string(string,byte[])void),Method(check_biguint(uint512,byte[])void),Method(check_bool(bool,byte[])void),Method(check_dyn_array_uin64(uint64[],byte[])void),Method(check_static_array_uin64_3(uint64[3],byte[])void),Method(check_dyn_array_struct((uint64,address)[],byte[])void),Method(check_static_array_struct((uint64,address)[3],byte[])void),Method(check_dyn_array_dyn_struct((uint64,address,byte[])[],byte[])void),Method(check_static_array_dyn_struct((uint64,address,byte[])[3],byte[])void),Method(check_static_bytes(byte[32])void),tmp%12#0
        match check_uint64_route@7 check_dynamic_bytes_route@8 check_string_route@9 check_biguint_route@10 check_bool_route@11 check_dyn_array_uin64_route@12 check_static_array_uin64_3_route@13 check_dyn_array_struct_route@14 check_static_array_struct_route@15 check_dyn_array_dyn_struct_route@16 check_static_array_dyn_struct_route@17 check_static_bytes_route@18 ; b after_if_else@22 

    check_uint64_route@7:
        // arc4_conversions/contract.py:235
        // @arc4.abimethod
        callsub check_uint64
        b after_if_else@22

    check_dynamic_bytes_route@8:
        // arc4_conversions/contract.py:239
        // @arc4.abimethod
        callsub check_dynamic_bytes
        b after_if_else@22

    check_string_route@9:
        // arc4_conversions/contract.py:243
        // @arc4.abimethod
        callsub check_string
        b after_if_else@22

    check_biguint_route@10:
        // arc4_conversions/contract.py:247
        // @arc4.abimethod
        callsub check_biguint
        b after_if_else@22

    check_bool_route@11:
        // arc4_conversions/contract.py:251
        // @arc4.abimethod
        callsub check_bool
        b after_if_else@22

    check_dyn_array_uin64_route@12:
        // arc4_conversions/contract.py:255
        // @arc4.abimethod
        callsub check_dyn_array_uin64
        b after_if_else@22

    check_static_array_uin64_3_route@13:
        // arc4_conversions/contract.py:261
        // @arc4.abimethod
        callsub check_static_array_uin64_3
        b after_if_else@22

    check_dyn_array_struct_route@14:
        // arc4_conversions/contract.py:267
        // @arc4.abimethod
        callsub check_dyn_array_struct
        b after_if_else@22

    check_static_array_struct_route@15:
        // arc4_conversions/contract.py:273
        // @arc4.abimethod
        callsub check_static_array_struct
        b after_if_else@22

    check_dyn_array_dyn_struct_route@16:
        // arc4_conversions/contract.py:279
        // @arc4.abimethod
        callsub check_dyn_array_dyn_struct
        b after_if_else@22

    check_static_array_dyn_struct_route@17:
        // arc4_conversions/contract.py:285
        // @arc4.abimethod
        callsub check_static_array_dyn_struct
        b after_if_else@22

    check_static_bytes_route@18:
        // arc4_conversions/contract.py:291
        // @arc4.abimethod
        callsub check_static_bytes
        b after_if_else@22

    after_if_else@22:
        // arc4_conversions/contract.py:230
        // class CheckApp(arc4.ARC4Contract):
        err

    __algopy_default_create@23:
        txn OnCompletion                                                            tmp%13#0
        v-store tmp%13#0
        v-load tmp%13#0                                                             tmp%13#0
        !                                                                           tmp%14#0
        v-store tmp%14#0
        txn ApplicationID                                                           tmp%15#0
        v-store tmp%15#0
        v-load tmp%15#0                                                             tmp%15#0
        !                                                                           tmp%16#0
        v-store tmp%16#0
        v-load tmp%14#0                                                             tmp%14#0
        v-load tmp%16#0                                                             tmp%14#0,tmp%16#0
        &&                                                                          tmp%17#0
        v-store tmp%17#0
        v-load tmp%17#0                                                             tmp%17#0
        assert // OnCompletion must be NoOp && can only call when creating
        int 1                                                                       1
        return


// test_cases.arc4_conversions.contract.CheckApp.check_uint64[routing]() -> void:
subroutine check_uint64:
    check_uint64_block@0:
        // arc4_conversions/contract.py:235
        // @arc4.abimethod
        txna ApplicationArgs 1                                                      value#0
        v-store value#0
        txna ApplicationArgs 2                                                      reinterpret_Encoded(len+uint8[])%0#0
        v-store reinterpret_Encoded(len+uint8[])%0#0
        v-load reinterpret_Encoded(len+uint8[])%0#0                                 reinterpret_Encoded(len+uint8[])%0#0
        extract 2 0                                                                 expected#0
        v-store expected#0
        // arc4_conversions/contract.py:237
        // assert value.bytes == expected, "expected to encode correctly"
        v-load value#0                                                              value#0
        v-load expected#0                                                           value#0,expected#0
        ==                                                                          tmp%0#1
        v-store tmp%0#1
        v-load tmp%0#1                                                              tmp%0#1
        assert // expected to encode correctly
        // arc4_conversions/contract.py:235
        // @arc4.abimethod
        int 1                                                                       1
        return


// test_cases.arc4_conversions.contract.CheckApp.check_dynamic_bytes[routing]() -> void:
subroutine check_dynamic_bytes:
    check_dynamic_bytes_block@0:
        // arc4_conversions/contract.py:239
        // @arc4.abimethod
        txna ApplicationArgs 1                                                      value#0
        v-store value#0
        txna ApplicationArgs 2                                                      reinterpret_Encoded(len+uint8[])%1#0
        v-store reinterpret_Encoded(len+uint8[])%1#0
        v-load reinterpret_Encoded(len+uint8[])%1#0                                 reinterpret_Encoded(len+uint8[])%1#0
        extract 2 0                                                                 expected#0
        v-store expected#0
        // arc4_conversions/contract.py:241
        // assert value.bytes == expected, "expected to encode correctly"
        v-load value#0                                                              value#0
        v-load expected#0                                                           value#0,expected#0
        ==                                                                          tmp%0#1
        v-store tmp%0#1
        v-load tmp%0#1                                                              tmp%0#1
        assert // expected to encode correctly
        // arc4_conversions/contract.py:239
        // @arc4.abimethod
        int 1                                                                       1
        return


// test_cases.arc4_conversions.contract.CheckApp.check_string[routing]() -> void:
subroutine check_string:
    check_string_block@0:
        // arc4_conversions/contract.py:243
        // @arc4.abimethod
        txna ApplicationArgs 1                                                      value#0
        v-store value#0
        txna ApplicationArgs 2                                                      reinterpret_Encoded(len+uint8[])%0#0
        v-store reinterpret_Encoded(len+uint8[])%0#0
        v-load reinterpret_Encoded(len+uint8[])%0#0                                 reinterpret_Encoded(len+uint8[])%0#0
        extract 2 0                                                                 expected#0
        v-store expected#0
        // arc4_conversions/contract.py:245
        // assert value.bytes == expected, "expected to encode correctly"
        v-load value#0                                                              value#0
        v-load expected#0                                                           value#0,expected#0
        ==                                                                          tmp%0#1
        v-store tmp%0#1
        v-load tmp%0#1                                                              tmp%0#1
        assert // expected to encode correctly
        // arc4_conversions/contract.py:243
        // @arc4.abimethod
        int 1                                                                       1
        return


// test_cases.arc4_conversions.contract.CheckApp.check_biguint[routing]() -> void:
subroutine check_biguint:
    check_biguint_block@0:
        // arc4_conversions/contract.py:247
        // @arc4.abimethod
        txna ApplicationArgs 1                                                      value#0
        v-store value#0
        txna ApplicationArgs 2                                                      reinterpret_Encoded(len+uint8[])%0#0
        v-store reinterpret_Encoded(len+uint8[])%0#0
        v-load reinterpret_Encoded(len+uint8[])%0#0                                 reinterpret_Encoded(len+uint8[])%0#0
        extract 2 0                                                                 expected#0
        v-store expected#0
        // arc4_conversions/contract.py:249
        // assert value.bytes == expected, "expected to encode correctly"
        v-load value#0                                                              value#0
        v-load expected#0                                                           value#0,expected#0
        ==                                                                          tmp%0#1
        v-store tmp%0#1
        v-load tmp%0#1                                                              tmp%0#1
        assert // expected to encode correctly
        // arc4_conversions/contract.py:247
        // @arc4.abimethod
        int 1                                                                       1
        return


// test_cases.arc4_conversions.contract.CheckApp.check_bool[routing]() -> void:
subroutine check_bool:
    check_bool_block@0:
        // arc4_conversions/contract.py:251
        // @arc4.abimethod
        txna ApplicationArgs 1                                                      value#0
        v-store value#0
        txna ApplicationArgs 2                                                      reinterpret_Encoded(len+uint8[])%0#0
        v-store reinterpret_Encoded(len+uint8[])%0#0
        v-load reinterpret_Encoded(len+uint8[])%0#0                                 reinterpret_Encoded(len+uint8[])%0#0
        extract 2 0                                                                 expected#0
        v-store expected#0
        // arc4_conversions/contract.py:253
        // assert value.bytes == expected, "expected to encode correctly"
        v-load value#0                                                              value#0
        v-load expected#0                                                           value#0,expected#0
        ==                                                                          tmp%0#1
        v-store tmp%0#1
        v-load tmp%0#1                                                              tmp%0#1
        assert // expected to encode correctly
        // arc4_conversions/contract.py:251
        // @arc4.abimethod
        int 1                                                                       1
        return


// test_cases.arc4_conversions.contract.CheckApp.check_dyn_array_uin64[routing]() -> void:
subroutine check_dyn_array_uin64:
    check_dyn_array_uin64_block@0:
        // arc4_conversions/contract.py:255
        // @arc4.abimethod
        txna ApplicationArgs 1                                                      value#0
        v-store value#0
        txna ApplicationArgs 2                                                      reinterpret_Encoded(len+uint8[])%0#0
        v-store reinterpret_Encoded(len+uint8[])%0#0
        v-load reinterpret_Encoded(len+uint8[])%0#0                                 reinterpret_Encoded(len+uint8[])%0#0
        extract 2 0                                                                 expected#0
        v-store expected#0
        // arc4_conversions/contract.py:259
        // assert value.bytes == expected, "expected to encode correctly"
        v-load value#0                                                              value#0
        v-load expected#0                                                           value#0,expected#0
        ==                                                                          tmp%0#1
        v-store tmp%0#1
        v-load tmp%0#1                                                              tmp%0#1
        assert // expected to encode correctly
        // arc4_conversions/contract.py:255
        // @arc4.abimethod
        int 1                                                                       1
        return


// test_cases.arc4_conversions.contract.CheckApp.check_static_array_uin64_3[routing]() -> void:
subroutine check_static_array_uin64_3:
    check_static_array_uin64_3_block@0:
        // arc4_conversions/contract.py:261
        // @arc4.abimethod
        txna ApplicationArgs 1                                                      value#0
        v-store value#0
        txna ApplicationArgs 2                                                      reinterpret_Encoded(len+uint8[])%0#0
        v-store reinterpret_Encoded(len+uint8[])%0#0
        v-load reinterpret_Encoded(len+uint8[])%0#0                                 reinterpret_Encoded(len+uint8[])%0#0
        extract 2 0                                                                 expected#0
        v-store expected#0
        // arc4_conversions/contract.py:265
        // assert value.bytes == expected, "expected to encode correctly"
        v-load value#0                                                              value#0
        v-load expected#0                                                           value#0,expected#0
        ==                                                                          tmp%0#1
        v-store tmp%0#1
        v-load tmp%0#1                                                              tmp%0#1
        assert // expected to encode correctly
        // arc4_conversions/contract.py:261
        // @arc4.abimethod
        int 1                                                                       1
        return


// test_cases.arc4_conversions.contract.CheckApp.check_dyn_array_struct[routing]() -> void:
subroutine check_dyn_array_struct:
    check_dyn_array_struct_block@0:
        // arc4_conversions/contract.py:267
        // @arc4.abimethod
        txna ApplicationArgs 1                                                      value#0
        v-store value#0
        txna ApplicationArgs 2                                                      reinterpret_Encoded(len+uint8[])%0#0
        v-store reinterpret_Encoded(len+uint8[])%0#0
        v-load reinterpret_Encoded(len+uint8[])%0#0                                 reinterpret_Encoded(len+uint8[])%0#0
        extract 2 0                                                                 expected#0
        v-store expected#0
        // arc4_conversions/contract.py:271
        // assert value.bytes == expected, "expected to encode correctly"
        v-load value#0                                                              value#0
        v-load expected#0                                                           value#0,expected#0
        ==                                                                          tmp%0#1
        v-store tmp%0#1
        v-load tmp%0#1                                                              tmp%0#1
        assert // expected to encode correctly
        // arc4_conversions/contract.py:267
        // @arc4.abimethod
        int 1                                                                       1
        return


// test_cases.arc4_conversions.contract.CheckApp.check_static_array_struct[routing]() -> void:
subroutine check_static_array_struct:
    check_static_array_struct_block@0:
        // arc4_conversions/contract.py:273
        // @arc4.abimethod
        txna ApplicationArgs 1                                                      value#0
        v-store value#0
        txna ApplicationArgs 2                                                      reinterpret_Encoded(len+uint8[])%0#0
        v-store reinterpret_Encoded(len+uint8[])%0#0
        v-load reinterpret_Encoded(len+uint8[])%0#0                                 reinterpret_Encoded(len+uint8[])%0#0
        extract 2 0                                                                 expected#0
        v-store expected#0
        // arc4_conversions/contract.py:277
        // assert value.bytes == expected, "expected to encode correctly"
        v-load value#0                                                              value#0
        v-load expected#0                                                           value#0,expected#0
        ==                                                                          tmp%0#1
        v-store tmp%0#1
        v-load tmp%0#1                                                              tmp%0#1
        assert // expected to encode correctly
        // arc4_conversions/contract.py:273
        // @arc4.abimethod
        int 1                                                                       1
        return


// test_cases.arc4_conversions.contract.CheckApp.check_dyn_array_dyn_struct[routing]() -> void:
subroutine check_dyn_array_dyn_struct:
    check_dyn_array_dyn_struct_block@0:
        // arc4_conversions/contract.py:279
        // @arc4.abimethod
        txna ApplicationArgs 1                                                      value#0
        v-store value#0
        txna ApplicationArgs 2                                                      reinterpret_Encoded(len+uint8[])%0#0
        v-store reinterpret_Encoded(len+uint8[])%0#0
        v-load reinterpret_Encoded(len+uint8[])%0#0                                 reinterpret_Encoded(len+uint8[])%0#0
        extract 2 0                                                                 expected#0
        v-store expected#0
        // arc4_conversions/contract.py:283
        // assert value.bytes == expected, "expected to encode correctly"
        v-load value#0                                                              value#0
        v-load expected#0                                                           value#0,expected#0
        ==                                                                          tmp%0#1
        v-store tmp%0#1
        v-load tmp%0#1                                                              tmp%0#1
        assert // expected to encode correctly
        // arc4_conversions/contract.py:279
        // @arc4.abimethod
        int 1                                                                       1
        return


// test_cases.arc4_conversions.contract.CheckApp.check_static_array_dyn_struct[routing]() -> void:
subroutine check_static_array_dyn_struct:
    check_static_array_dyn_struct_block@0:
        // arc4_conversions/contract.py:285
        // @arc4.abimethod
        txna ApplicationArgs 1                                                      value#0
        v-store value#0
        txna ApplicationArgs 2                                                      reinterpret_Encoded(len+uint8[])%0#0
        v-store reinterpret_Encoded(len+uint8[])%0#0
        v-load reinterpret_Encoded(len+uint8[])%0#0                                 reinterpret_Encoded(len+uint8[])%0#0
        extract 2 0                                                                 expected#0
        v-store expected#0
        // arc4_conversions/contract.py:289
        // assert value.bytes == expected, "expected to encode correctly"
        v-load value#0                                                              value#0
        v-load expected#0                                                           value#0,expected#0
        ==                                                                          tmp%0#1
        v-store tmp%0#1
        v-load tmp%0#1                                                              tmp%0#1
        assert // expected to encode correctly
        // arc4_conversions/contract.py:285
        // @arc4.abimethod
        int 1                                                                       1
        return


// test_cases.arc4_conversions.contract.CheckApp.check_static_bytes[routing]() -> void:
subroutine check_static_bytes:
    check_static_bytes_block@0:
        // arc4_conversions/contract.py:291
        // @arc4.abimethod
        txna ApplicationArgs 1                                                      bytes32#0
        v-store bytes32#0
        // arc4_conversions/contract.py:293
        // assert bytes32.bytes == Txn.sender.bytes, "expected to encode correctly"
        txn Sender                                                                  tmp%0#0
        v-store tmp%0#0
        v-load bytes32#0                                                            bytes32#0
        v-load tmp%0#0                                                              bytes32#0,tmp%0#0
        ==                                                                          tmp%1#0
        v-store tmp%1#0
        v-load tmp%1#0                                                              tmp%1#0
        assert // expected to encode correctly
        // arc4_conversions/contract.py:291
        // @arc4.abimethod
        int 1                                                                       1
        return


