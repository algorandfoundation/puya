// Op                                                                                   Stack (out)
// algopy.arc4.ARC4Contract.approval_program() -> uint64:
subroutine main:
    block@0:
        // arc4_conversions/reference.py:4
        // class ReferenceReturn(arc4.ARC4Contract):
        txn ApplicationID                                                               tmp%0#1
        v-store tmp%0#1
        v-load tmp%0#1                                                                  tmp%0#1
        !                                                                               tmp%1#0
        v-store tmp%1#0
        txn OnCompletion                                                                tmp%2#0
        v-store tmp%2#0
        v-load tmp%2#0                                                                  tmp%2#0
        int 1                                                                           tmp%2#0,1
        shl                                                                             tmp%3#0
        v-store tmp%3#0
        v-load tmp%1#0                                                                  tmp%1#0
        v-load tmp%3#0                                                                  tmp%1#0,tmp%3#0
        +                                                                               tmp%4#0
        v-store tmp%4#0
        v-load tmp%4#0                                                                  tmp%4#0
        switch call_NoOp create_NoOp *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED ; b *NOT_IMPLEMENTED 

    call_NoOp:
        // arc4_conversions/reference.py:4
        // class ReferenceReturn(arc4.ARC4Contract):
        txna ApplicationArgs 0                                                          tmp%5#0
        v-store tmp%5#0
        method acc_ret()address                                                         Method(acc_ret()address)
        method asset_ret()uint64                                                        Method(acc_ret()address),Method(asset_ret()uint64)
        method app_ret()uint64                                                          Method(acc_ret()address),Method(asset_ret()uint64),Method(app_ret()uint64)
        method store(address,uint64,uint64)void                                         Method(acc_ret()address),Method(asset_ret()uint64),Method(app_ret()uint64),Method(store(address,uint64,uint64)void)
        method store_apps(uint64[])void                                                 Method(acc_ret()address),Method(asset_ret()uint64),Method(app_ret()uint64),Method(store(address,uint64,uint64)void),Method(store_apps(uint64[])void)
        method store_assets(uint64[])void                                               Method(acc_ret()address),Method(asset_ret()uint64),Method(app_ret()uint64),Method(store(address,uint64,uint64)void),Method(store_apps(uint64[])void),Method(store_assets(uint64[])void)
        method store_accounts(address[])void                                            Method(acc_ret()address),Method(asset_ret()uint64),Method(app_ret()uint64),Method(store(address,uint64,uint64)void),Method(store_apps(uint64[])void),Method(store_assets(uint64[])void),Method(store_accounts(address[])void)
        method return_apps()uint64[]                                                    Method(acc_ret()address),Method(asset_ret()uint64),Method(app_ret()uint64),Method(store(address,uint64,uint64)void),Method(store_apps(uint64[])void),Method(store_assets(uint64[])void),Method(store_accounts(address[])void),Method(return_apps()uint64[])
        method return_assets()uint64[]                                                  Method(acc_ret()address),Method(asset_ret()uint64),Method(app_ret()uint64),Method(store(address,uint64,uint64)void),Method(store_apps(uint64[])void),Method(store_assets(uint64[])void),Method(store_accounts(address[])void),Method(return_apps()uint64[]),Method(return_assets()uint64[])
        method return_accounts()address[]                                               Method(acc_ret()address),Method(asset_ret()uint64),Method(app_ret()uint64),Method(store(address,uint64,uint64)void),Method(store_apps(uint64[])void),Method(store_assets(uint64[])void),Method(store_accounts(address[])void),Method(return_apps()uint64[]),Method(return_assets()uint64[]),Method(return_accounts()address[])
        v-load tmp%5#0                                                                  Method(acc_ret()address),Method(asset_ret()uint64),Method(app_ret()uint64),Method(store(address,uint64,uint64)void),Method(store_apps(uint64[])void),Method(store_assets(uint64[])void),Method(store_accounts(address[])void),Method(return_apps()uint64[]),Method(return_assets()uint64[]),Method(return_accounts()address[]),tmp%5#0
        match acc_ret_route@3 asset_ret_route@4 app_ret_route@5 store_route@6 store_apps_route@7 store_assets_route@8 store_accounts_route@9 return_apps_route@10 return_assets_route@11 return_accounts_route@12 ; b switch_case_next@14 

    acc_ret_route@3:
        // arc4_conversions/reference.py:4
        // class ReferenceReturn(arc4.ARC4Contract):
        callsub acc_ret
        b switch_case_next@14

    asset_ret_route@4:
        // arc4_conversions/reference.py:9
        // @arc4.abimethod
        byte 0x151f7c7500000000000004d2                                                 0x151f7c7500000000000004d2
        log
        int 1                                                                           1
        return

    app_ret_route@5:
        // arc4_conversions/reference.py:13
        // @arc4.abimethod
        byte 0x151f7c7500000000000004d2                                                 0x151f7c7500000000000004d2
        log
        int 1                                                                           1
        return

    store_route@6:
        // arc4_conversions/reference.py:4
        // class ReferenceReturn(arc4.ARC4Contract):
        callsub store
        b switch_case_next@14

    store_apps_route@7:
        // arc4_conversions/reference.py:4
        // class ReferenceReturn(arc4.ARC4Contract):
        callsub store_apps
        b switch_case_next@14

    store_assets_route@8:
        // arc4_conversions/reference.py:4
        // class ReferenceReturn(arc4.ARC4Contract):
        callsub store_assets
        b switch_case_next@14

    store_accounts_route@9:
        // arc4_conversions/reference.py:4
        // class ReferenceReturn(arc4.ARC4Contract):
        callsub store_accounts
        b switch_case_next@14

    return_apps_route@10:
        // arc4_conversions/reference.py:4
        // class ReferenceReturn(arc4.ARC4Contract):
        callsub return_apps
        b switch_case_next@14

    return_assets_route@11:
        // arc4_conversions/reference.py:4
        // class ReferenceReturn(arc4.ARC4Contract):
        callsub return_assets
        b switch_case_next@14

    return_accounts_route@12:
        // arc4_conversions/reference.py:4
        // class ReferenceReturn(arc4.ARC4Contract):
        callsub return_accounts
        b switch_case_next@14

    switch_case_next@14:
        // arc4_conversions/reference.py:4
        // class ReferenceReturn(arc4.ARC4Contract):
        err // this contract does not implement the given ABI method for call NoOp

    create_NoOp:
        // arc4_conversions/reference.py:4
        // class ReferenceReturn(arc4.ARC4Contract):
        txn NumAppArgs                                                                  tmp%6#0
        v-store tmp%6#0
        v-load tmp%6#0                                                                  tmp%6#0
        !                                                                               tmp%7#0
        v-store tmp%7#0
        v-load tmp%7#0                                                                  tmp%7#0
        assert // this contract does not implement the given ABI method for create NoOp
        int 1                                                                           1
        return

    *NOT_IMPLEMENTED:
        // arc4_conversions/reference.py:4
        // class ReferenceReturn(arc4.ARC4Contract):
        err // The requested action is not implemented in this contract. Are you using the correct OnComplete? Did you set your app ID? 


// test_cases.arc4_conversions.reference.ReferenceReturn.acc_ret[routing]() -> void:
subroutine acc_ret:
    acc_ret_block@0:
        // arc4_conversions/reference.py:7
        // return Txn.sender
        txn Sender                                                                      tmp%0#1
        v-store tmp%0#1
        // arc4_conversions/reference.py:5
        // @arc4.abimethod
        byte 0x151f7c75                                                                 0x151f7c75
        v-load tmp%0#1                                                                  0x151f7c75,tmp%0#1
        concat                                                                          tmp%2#0
        v-store tmp%2#0
        v-load tmp%2#0                                                                  tmp%2#0
        log
        int 1                                                                           1
        return


// test_cases.arc4_conversions.reference.ReferenceReturn.store[routing]() -> void:
subroutine store:
    store_block@0:
        // arc4_conversions/reference.py:17
        // @arc4.abimethod
        txna ApplicationArgs 1                                                          acc#0
        v-store acc#0
        txna ApplicationArgs 2                                                          reinterpret_Encoded(uint64)%0#0
        v-store reinterpret_Encoded(uint64)%0#0
        v-load reinterpret_Encoded(uint64)%0#0                                          reinterpret_Encoded(uint64)%0#0
        btoi                                                                            app#0
        v-store app#0
        txna ApplicationArgs 3                                                          reinterpret_Encoded(uint64)%1#0
        v-store reinterpret_Encoded(uint64)%1#0
        v-load reinterpret_Encoded(uint64)%1#0                                          reinterpret_Encoded(uint64)%1#0
        btoi                                                                            asset#0
        v-store asset#0
        // arc4_conversions/reference.py:19
        // self.acc = acc
        byte "acc"                                                                      "acc"
        v-load acc#0                                                                    "acc",acc#0
        app_global_put
        // arc4_conversions/reference.py:20
        // self.asset = asset
        byte "asset"                                                                    "asset"
        v-load asset#0                                                                  "asset",asset#0
        app_global_put
        // arc4_conversions/reference.py:21
        // self.app = app
        byte "app"                                                                      "app"
        v-load app#0                                                                    "app",app#0
        app_global_put
        // arc4_conversions/reference.py:17
        // @arc4.abimethod
        int 1                                                                           1
        return


// test_cases.arc4_conversions.reference.ReferenceReturn.store_apps[routing]() -> void:
subroutine store_apps:
    store_apps_block@0:
        // arc4_conversions/reference.py:23
        // @arc4.abimethod
        txna ApplicationArgs 1                                                          apps#0
        v-store apps#0
        // arc4_conversions/reference.py:25
        // self.apps = apps
        byte "apps"                                                                     "apps"
        v-load apps#0                                                                   "apps",apps#0
        app_global_put
        // arc4_conversions/reference.py:23
        // @arc4.abimethod
        int 1                                                                           1
        return


// test_cases.arc4_conversions.reference.ReferenceReturn.store_assets[routing]() -> void:
subroutine store_assets:
    store_assets_block@0:
        // arc4_conversions/reference.py:27
        // @arc4.abimethod
        txna ApplicationArgs 1                                                          assets#0
        v-store assets#0
        // arc4_conversions/reference.py:29
        // self.assets = assets
        byte "assets"                                                                   "assets"
        v-load assets#0                                                                 "assets",assets#0
        app_global_put
        // arc4_conversions/reference.py:27
        // @arc4.abimethod
        int 1                                                                           1
        return


// test_cases.arc4_conversions.reference.ReferenceReturn.store_accounts[routing]() -> void:
subroutine store_accounts:
    store_accounts_block@0:
        // arc4_conversions/reference.py:31
        // @arc4.abimethod
        txna ApplicationArgs 1                                                          accounts#0
        v-store accounts#0
        // arc4_conversions/reference.py:33
        // self.accounts = accounts
        byte "accounts"                                                                 "accounts"
        v-load accounts#0                                                               "accounts",accounts#0
        app_global_put
        // arc4_conversions/reference.py:31
        // @arc4.abimethod
        int 1                                                                           1
        return


// test_cases.arc4_conversions.reference.ReferenceReturn.return_apps[routing]() -> void:
subroutine return_apps:
    return_apps_block@0:
        // arc4_conversions/reference.py:37
        // return self.apps
        int 0                                                                           0
        byte "apps"                                                                     0,"apps"
        app_global_get_ex                                                               maybe_value%0#0,maybe_exists%0#0
        v-store maybe_exists%0#0                                                        maybe_value%0#0
        v-store maybe_value%0#0
        v-load maybe_exists%0#0                                                         maybe_exists%0#0
        assert // check self.apps exists
        // arc4_conversions/reference.py:35
        // @arc4.abimethod
        byte 0x151f7c75                                                                 0x151f7c75
        v-load maybe_value%0#0                                                          0x151f7c75,maybe_value%0#0
        concat                                                                          tmp%1#0
        v-store tmp%1#0
        v-load tmp%1#0                                                                  tmp%1#0
        log
        int 1                                                                           1
        return


// test_cases.arc4_conversions.reference.ReferenceReturn.return_assets[routing]() -> void:
subroutine return_assets:
    return_assets_block@0:
        // arc4_conversions/reference.py:41
        // return self.assets
        int 0                                                                           0
        byte "assets"                                                                   0,"assets"
        app_global_get_ex                                                               maybe_value%0#0,maybe_exists%0#0
        v-store maybe_exists%0#0                                                        maybe_value%0#0
        v-store maybe_value%0#0
        v-load maybe_exists%0#0                                                         maybe_exists%0#0
        assert // check self.assets exists
        // arc4_conversions/reference.py:39
        // @arc4.abimethod
        byte 0x151f7c75                                                                 0x151f7c75
        v-load maybe_value%0#0                                                          0x151f7c75,maybe_value%0#0
        concat                                                                          tmp%1#0
        v-store tmp%1#0
        v-load tmp%1#0                                                                  tmp%1#0
        log
        int 1                                                                           1
        return


// test_cases.arc4_conversions.reference.ReferenceReturn.return_accounts[routing]() -> void:
subroutine return_accounts:
    return_accounts_block@0:
        // arc4_conversions/reference.py:45
        // return self.accounts
        int 0                                                                           0
        byte "accounts"                                                                 0,"accounts"
        app_global_get_ex                                                               maybe_value%0#0,maybe_exists%0#0
        v-store maybe_exists%0#0                                                        maybe_value%0#0
        v-store maybe_value%0#0
        v-load maybe_exists%0#0                                                         maybe_exists%0#0
        assert // check self.accounts exists
        // arc4_conversions/reference.py:43
        // @arc4.abimethod
        byte 0x151f7c75                                                                 0x151f7c75
        v-load maybe_value%0#0                                                          0x151f7c75,maybe_value%0#0
        concat                                                                          tmp%1#0
        v-store tmp%1#0
        v-load tmp%1#0                                                                  tmp%1#0
        log
        int 1                                                                           1
        return


