#pragma version 10
#pragma typetrack false

// algopy.arc4.ARC4Contract.approval_program() -> uint64:
main:
    intcblock 6 0 1 2
    bytecblock 0x0020 0x002a base64(CoEBQw==) base64(CiABATEbQQFQggwEM7NJngSNdi/fBC0ynuEEak3fcwTW4Le8BOXKzQYEia9VewRG4Za9BPM4htoEJZW5WgQ/VSZrBH0kCUU2GgCODADqANUAwACrAJYAgQBsAFcAQgAtABgAA4EAQzEZFEQxGEQ2GgE2GgJXAgCIAU4iQzEZFEQxGEQ2GgE2GgJXAgCIAS8iQzEZFEQxGEQ2GgE2GgJXAgCIARAiQzEZFEQxGEQ2GgE2GgJXAgCIAPEiQzEZFEQxGEQ2GgE2GgJXAgCIANIiQzEZFEQxGEQ2GgE2GgJXAgCIALMiQzEZFEQxGEQ2GgE2GgJXAgCIAJQiQzEZFEQxGEQ2GgE2GgJXAgCIAHUiQzEZFEQxGEQ2GgE2GgJXAgCIAFYiQzEZFEQxGEQ2GgE2GgJXAgCIADciQzEZFEQxGEQ2GgE2GgJXAgCIABgiQzEZgQUSRDEYRCJDMRlA/wYxGBREIkOKAgCL/ov/EkSJigIAi/6L/xJEiYoCAIv+i/8SRImKAgCL/ov/EkSJigIAi/6L/xJEiYoCAIv+i/8SRImKAgCL/ov/EkSJigIAi/6L/xJEiYoCAIv+i/8SRImKAgCL/ov/EkSJigIAi/6L/xJEiQ==) 0x33b3499e 0x000b48656c6c6f20576f726c64 0x000d000b48656c6c6f20576f726c64 0x0006 0x8d762fdf 0x00080000000000000000 0x2d329ee1 0x6a4ddf73 0xd6e0b7bc 0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 0x004000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 0xe5cacd06 0x000180 0x0003 0x0000000000000000 0x0004 0x89af557b 0x001a0003000000000000000100000000000000020000000000000003
    // arc4_conversions/contract.py:17
    // class TestContract(arc4.ARC4Contract):
    txn NumAppArgs
    bz main_bare_routing@11
    pushbytess 0xc36825ff 0x620ac6f0 0x344a880b 0xa92e03c4 0x6c4f8453 0x7bda9a46 // method "test_literal_encoding()void", method "test_native_encoding()void", method "test_arc4_encoding()void", method "test_array_uint64_encoding()void", method "test_array_static_encoding()void", method "test_array_dynamic_encoding()void"
    txna ApplicationArgs 0
    match main_test_literal_encoding_route@3 main_test_native_encoding_route@4 main_test_arc4_encoding_route@5 main_test_array_uint64_encoding_route@6 main_test_array_static_encoding_route@7 main_test_array_dynamic_encoding_route@8

main_after_if_else@15:
    // arc4_conversions/contract.py:17
    // class TestContract(arc4.ARC4Contract):
    intc_1 // 0
    return

main_test_array_dynamic_encoding_route@8:
    // arc4_conversions/contract.py:145
    // @arc4.abimethod()
    txn OnCompletion
    !
    assert // OnCompletion is not NoOp
    txn ApplicationID
    assert // can only call when not creating
    callsub test_array_dynamic_encoding
    intc_2 // 1
    return

main_test_array_static_encoding_route@7:
    // arc4_conversions/contract.py:121
    // @arc4.abimethod()
    txn OnCompletion
    !
    assert // OnCompletion is not NoOp
    txn ApplicationID
    assert // can only call when not creating
    callsub test_array_static_encoding
    intc_2 // 1
    return

main_test_array_uint64_encoding_route@6:
    // arc4_conversions/contract.py:97
    // @arc4.abimethod()
    txn OnCompletion
    !
    assert // OnCompletion is not NoOp
    txn ApplicationID
    assert // can only call when not creating
    callsub test_array_uint64_encoding
    intc_2 // 1
    return

main_test_arc4_encoding_route@5:
    // arc4_conversions/contract.py:69
    // @arc4.abimethod()
    txn OnCompletion
    !
    assert // OnCompletion is not NoOp
    txn ApplicationID
    assert // can only call when not creating
    callsub test_arc4_encoding
    intc_2 // 1
    return

main_test_native_encoding_route@4:
    // arc4_conversions/contract.py:41
    // @arc4.abimethod()
    txn OnCompletion
    !
    assert // OnCompletion is not NoOp
    txn ApplicationID
    assert // can only call when not creating
    callsub test_native_encoding
    intc_2 // 1
    return

main_test_literal_encoding_route@3:
    // arc4_conversions/contract.py:18
    // @arc4.abimethod()
    txn OnCompletion
    !
    assert // OnCompletion is not NoOp
    txn ApplicationID
    assert // can only call when not creating
    callsub test_literal_encoding
    intc_2 // 1
    return

main_bare_routing@11:
    // arc4_conversions/contract.py:17
    // class TestContract(arc4.ARC4Contract):
    txn OnCompletion
    bnz main_after_if_else@15
    txn ApplicationID
    !
    assert // can only call when creating
    intc_2 // 1
    return


// test_cases.arc4_conversions.contract.my_dyn_struct_arc4(value: uint64) -> bytes:
my_dyn_struct_arc4:
    // arc4_conversions/contract.py:206-207
    // @subroutine
    // def my_dyn_struct_arc4(value: UInt64) -> MyDynStructARC4:
    proto 1 1
    // arc4_conversions/contract.py:209
    // arc4.UInt64(value), arc4.Address(Txn.sender), arc4.DynamicBytes(Txn.sender.bytes)
    frame_dig -1
    itob
    txn Sender
    bytec_0 // 0x0020
    txn Sender
    concat
    // arc4_conversions/contract.py:208-210
    // return MyDynStructARC4(
    //     arc4.UInt64(value), arc4.Address(Txn.sender), arc4.DynamicBytes(Txn.sender.bytes)
    // )
    cover 2
    concat
    bytec_1 // 0x002a
    concat
    swap
    concat
    retsub


// test_cases.arc4_conversions.contract.TestContract.test_literal_encoding() -> void:
test_literal_encoding:
    // arc4_conversions/contract.py:20
    // app = arc4.arc4_create(CheckApp).created_app
    itxn_begin
    bytec_2 // base64(CoEBQw==)
    itxn_field ClearStateProgramPages
    bytec_3 // base64(CiABATEbQQFQggwEM7NJngSNdi/fBC0ynuEEak3fcwTW4Le8BOXKzQYEia9VewRG4Za9BPM4htoEJZW5WgQ/VSZrBH0kCUU2GgCODADqANUAwACrAJYAgQBsAFcAQgAtABgAA4EAQzEZFEQxGEQ2GgE2GgJXAgCIAU4iQzEZFEQxGEQ2GgE2GgJXAgCIAS8iQzEZFEQxGEQ2GgE2GgJXAgCIARAiQzEZFEQxGEQ2GgE2GgJXAgCIAPEiQzEZFEQxGEQ2GgE2GgJXAgCIANIiQzEZFEQxGEQ2GgE2GgJXAgCIALMiQzEZFEQxGEQ2GgE2GgJXAgCIAJQiQzEZFEQxGEQ2GgE2GgJXAgCIAHUiQzEZFEQxGEQ2GgE2GgJXAgCIAFYiQzEZFEQxGEQ2GgE2GgJXAgCIADciQzEZFEQxGEQ2GgE2GgJXAgCIABgiQzEZgQUSRDEYRCJDMRlA/wYxGBREIkOKAgCL/ov/EkSJigIAi/6L/xJEiYoCAIv+i/8SRImKAgCL/ov/EkSJigIAi/6L/xJEiYoCAIv+i/8SRImKAgCL/ov/EkSJigIAi/6L/xJEiYoCAIv+i/8SRImKAgCL/ov/EkSJigIAi/6L/xJEiQ==)
    itxn_field ApprovalProgramPages
    intc_0 // appl
    itxn_field TypeEnum
    intc_1 // 0
    itxn_field Fee
    itxn_submit
    itxn CreatedApplicationID
    // arc4_conversions/contract.py:22-23
    // # uint64
    // arc4.abi_call(CheckApp.check_uint64, 0, op.bzero(8), app_id=app)
    itxn_begin
    dup
    itxn_field ApplicationID
    bytec 8 // method "check_uint64(uint64,byte[])void"
    itxn_field ApplicationArgs
    bytec 18 // 0x0000000000000000
    itxn_field ApplicationArgs
    bytec 9 // 0x00080000000000000000
    itxn_field ApplicationArgs
    intc_0 // appl
    itxn_field TypeEnum
    intc_1 // 0
    itxn_field Fee
    itxn_submit
    // arc4_conversions/contract.py:25-28
    // # bytes
    // arc4.abi_call(
    //     CheckApp.check_dynamic_bytes, b"Hello World", b"\x00\x0bHello World", app_id=app
    // )
    itxn_begin
    dup
    itxn_field ApplicationID
    bytec 10 // method "check_dynamic_bytes(byte[],byte[])void"
    itxn_field ApplicationArgs
    // arc4_conversions/contract.py:27
    // CheckApp.check_dynamic_bytes, b"Hello World", b"\x00\x0bHello World", app_id=app
    bytec 5 // 0x000b48656c6c6f20576f726c64
    itxn_field ApplicationArgs
    bytec 6 // 0x000d000b48656c6c6f20576f726c64
    itxn_field ApplicationArgs
    // arc4_conversions/contract.py:25-28
    // # bytes
    // arc4.abi_call(
    //     CheckApp.check_dynamic_bytes, b"Hello World", b"\x00\x0bHello World", app_id=app
    // )
    intc_0 // appl
    itxn_field TypeEnum
    intc_1 // 0
    itxn_field Fee
    itxn_submit
    // arc4_conversions/contract.py:30-31
    // # string
    // arc4.abi_call(CheckApp.check_string, "Hello World", b"\x00\x0bHello World", app_id=app)
    itxn_begin
    dup
    itxn_field ApplicationID
    bytec 11 // method "check_string(string,byte[])void"
    itxn_field ApplicationArgs
    bytec 5 // 0x000b48656c6c6f20576f726c64
    itxn_field ApplicationArgs
    bytec 6 // 0x000d000b48656c6c6f20576f726c64
    itxn_field ApplicationArgs
    intc_0 // appl
    itxn_field TypeEnum
    intc_1 // 0
    itxn_field Fee
    itxn_submit
    // arc4_conversions/contract.py:33-34
    // # biguint
    // arc4.abi_call(CheckApp.check_biguint, BigUInt(), op.bzero(64), app_id=app)
    itxn_begin
    dup
    itxn_field ApplicationID
    bytec 12 // method "check_biguint(uint512,byte[])void"
    itxn_field ApplicationArgs
    bytec 13 // 0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
    itxn_field ApplicationArgs
    bytec 14 // 0x004000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
    itxn_field ApplicationArgs
    intc_0 // appl
    itxn_field TypeEnum
    intc_1 // 0
    itxn_field Fee
    itxn_submit
    // arc4_conversions/contract.py:36-37
    // # bool
    // arc4.abi_call(CheckApp.check_bool, True, b"\x80", app_id=app)
    itxn_begin
    dup
    itxn_field ApplicationID
    bytec 15 // method "check_bool(bool,byte[])void"
    itxn_field ApplicationArgs
    pushbytes 0x80
    itxn_field ApplicationArgs
    bytec 16 // 0x000180
    itxn_field ApplicationArgs
    intc_0 // appl
    itxn_field TypeEnum
    intc_1 // 0
    itxn_field Fee
    itxn_submit
    // arc4_conversions/contract.py:39
    // arc4.abi_call(CheckApp.delete_application, app_id=app)
    itxn_begin
    pushint 5 // DeleteApplication
    itxn_field OnCompletion
    itxn_field ApplicationID
    bytec 4 // method "delete_application()void"
    itxn_field ApplicationArgs
    intc_0 // appl
    itxn_field TypeEnum
    intc_1 // 0
    itxn_field Fee
    itxn_submit
    retsub


// test_cases.arc4_conversions.contract.TestContract.test_native_encoding() -> void:
test_native_encoding:
    // arc4_conversions/contract.py:43
    // app = arc4.arc4_create(CheckApp).created_app
    itxn_begin
    bytec_2 // base64(CoEBQw==)
    itxn_field ClearStateProgramPages
    bytec_3 // base64(CiABATEbQQFQggwEM7NJngSNdi/fBC0ynuEEak3fcwTW4Le8BOXKzQYEia9VewRG4Za9BPM4htoEJZW5WgQ/VSZrBH0kCUU2GgCODADqANUAwACrAJYAgQBsAFcAQgAtABgAA4EAQzEZFEQxGEQ2GgE2GgJXAgCIAU4iQzEZFEQxGEQ2GgE2GgJXAgCIAS8iQzEZFEQxGEQ2GgE2GgJXAgCIARAiQzEZFEQxGEQ2GgE2GgJXAgCIAPEiQzEZFEQxGEQ2GgE2GgJXAgCIANIiQzEZFEQxGEQ2GgE2GgJXAgCIALMiQzEZFEQxGEQ2GgE2GgJXAgCIAJQiQzEZFEQxGEQ2GgE2GgJXAgCIAHUiQzEZFEQxGEQ2GgE2GgJXAgCIAFYiQzEZFEQxGEQ2GgE2GgJXAgCIADciQzEZFEQxGEQ2GgE2GgJXAgCIABgiQzEZgQUSRDEYRCJDMRlA/wYxGBREIkOKAgCL/ov/EkSJigIAi/6L/xJEiYoCAIv+i/8SRImKAgCL/ov/EkSJigIAi/6L/xJEiYoCAIv+i/8SRImKAgCL/ov/EkSJigIAi/6L/xJEiYoCAIv+i/8SRImKAgCL/ov/EkSJigIAi/6L/xJEiQ==)
    itxn_field ApprovalProgramPages
    intc_0 // appl
    itxn_field TypeEnum
    intc_1 // 0
    itxn_field Fee
    itxn_submit
    itxn CreatedApplicationID
    // arc4_conversions/contract.py:45-46
    // # uint64
    // arc4.abi_call(CheckApp.check_uint64, Txn.num_app_args - 1, op.bzero(8), app_id=app)
    itxn_begin
    txn NumAppArgs
    intc_2 // 1
    -
    itob
    dig 1
    itxn_field ApplicationID
    bytec 8 // method "check_uint64(uint64,byte[])void"
    itxn_field ApplicationArgs
    itxn_field ApplicationArgs
    bytec 9 // 0x00080000000000000000
    itxn_field ApplicationArgs
    intc_0 // appl
    itxn_field TypeEnum
    intc_1 // 0
    itxn_field Fee
    itxn_submit
    // arc4_conversions/contract.py:48-54
    // # bytes
    // arc4.abi_call(
    //     CheckApp.check_dynamic_bytes,
    //     Txn.application_args(0),
    //     b"\x00\x04" + Txn.application_args(0),
    //     app_id=app,
    // )
    itxn_begin
    // arc4_conversions/contract.py:51
    // Txn.application_args(0),
    txna ApplicationArgs 0
    dup
    len
    itob
    extract 6 2
    swap
    concat
    // arc4_conversions/contract.py:52
    // b"\x00\x04" + Txn.application_args(0),
    bytec 19 // 0x0004
    txna ApplicationArgs 0
    concat
    dup
    len
    itob
    extract 6 2
    swap
    concat
    dig 2
    itxn_field ApplicationID
    // arc4_conversions/contract.py:48-54
    // # bytes
    // arc4.abi_call(
    //     CheckApp.check_dynamic_bytes,
    //     Txn.application_args(0),
    //     b"\x00\x04" + Txn.application_args(0),
    //     app_id=app,
    // )
    bytec 10 // method "check_dynamic_bytes(byte[],byte[])void"
    itxn_field ApplicationArgs
    swap
    itxn_field ApplicationArgs
    itxn_field ApplicationArgs
    intc_0 // appl
    itxn_field TypeEnum
    intc_1 // 0
    itxn_field Fee
    itxn_submit
    // arc4_conversions/contract.py:56-59
    // # bytes
    // arc4.abi_call(
    //     CheckApp.check_string, String("Hello World"), b"\x00\x0bHello World", app_id=app
    // )
    itxn_begin
    dup
    itxn_field ApplicationID
    bytec 11 // method "check_string(string,byte[])void"
    itxn_field ApplicationArgs
    // arc4_conversions/contract.py:58
    // CheckApp.check_string, String("Hello World"), b"\x00\x0bHello World", app_id=app
    bytec 5 // 0x000b48656c6c6f20576f726c64
    itxn_field ApplicationArgs
    bytec 6 // 0x000d000b48656c6c6f20576f726c64
    itxn_field ApplicationArgs
    // arc4_conversions/contract.py:56-59
    // # bytes
    // arc4.abi_call(
    //     CheckApp.check_string, String("Hello World"), b"\x00\x0bHello World", app_id=app
    // )
    intc_0 // appl
    itxn_field TypeEnum
    intc_1 // 0
    itxn_field Fee
    itxn_submit
    // arc4_conversions/contract.py:61-62
    // # biguint
    // arc4.abi_call(CheckApp.check_biguint, BigUInt(), op.bzero(64), app_id=app)
    itxn_begin
    dup
    itxn_field ApplicationID
    bytec 12 // method "check_biguint(uint512,byte[])void"
    itxn_field ApplicationArgs
    bytec 13 // 0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
    itxn_field ApplicationArgs
    bytec 14 // 0x004000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
    itxn_field ApplicationArgs
    intc_0 // appl
    itxn_field TypeEnum
    intc_1 // 0
    itxn_field Fee
    itxn_submit
    // arc4_conversions/contract.py:64-65
    // # bool
    // arc4.abi_call(CheckApp.check_bool, Txn.num_app_args == 1, b"\x80", app_id=app)
    itxn_begin
    txn NumAppArgs
    intc_2 // 1
    ==
    pushbytes 0x00
    intc_1 // 0
    uncover 2
    setbit
    dig 1
    itxn_field ApplicationID
    bytec 15 // method "check_bool(bool,byte[])void"
    itxn_field ApplicationArgs
    itxn_field ApplicationArgs
    bytec 16 // 0x000180
    itxn_field ApplicationArgs
    intc_0 // appl
    itxn_field TypeEnum
    intc_1 // 0
    itxn_field Fee
    itxn_submit
    // arc4_conversions/contract.py:67
    // arc4.abi_call(CheckApp.delete_application, app_id=app)
    itxn_begin
    pushint 5 // DeleteApplication
    itxn_field OnCompletion
    itxn_field ApplicationID
    bytec 4 // method "delete_application()void"
    itxn_field ApplicationArgs
    intc_0 // appl
    itxn_field TypeEnum
    intc_1 // 0
    itxn_field Fee
    itxn_submit
    retsub


// test_cases.arc4_conversions.contract.TestContract.test_arc4_encoding() -> void:
test_arc4_encoding:
    // arc4_conversions/contract.py:71
    // app = arc4.arc4_create(CheckApp).created_app
    itxn_begin
    bytec_2 // base64(CoEBQw==)
    itxn_field ClearStateProgramPages
    bytec_3 // base64(CiABATEbQQFQggwEM7NJngSNdi/fBC0ynuEEak3fcwTW4Le8BOXKzQYEia9VewRG4Za9BPM4htoEJZW5WgQ/VSZrBH0kCUU2GgCODADqANUAwACrAJYAgQBsAFcAQgAtABgAA4EAQzEZFEQxGEQ2GgE2GgJXAgCIAU4iQzEZFEQxGEQ2GgE2GgJXAgCIAS8iQzEZFEQxGEQ2GgE2GgJXAgCIARAiQzEZFEQxGEQ2GgE2GgJXAgCIAPEiQzEZFEQxGEQ2GgE2GgJXAgCIANIiQzEZFEQxGEQ2GgE2GgJXAgCIALMiQzEZFEQxGEQ2GgE2GgJXAgCIAJQiQzEZFEQxGEQ2GgE2GgJXAgCIAHUiQzEZFEQxGEQ2GgE2GgJXAgCIAFYiQzEZFEQxGEQ2GgE2GgJXAgCIADciQzEZFEQxGEQ2GgE2GgJXAgCIABgiQzEZgQUSRDEYRCJDMRlA/wYxGBREIkOKAgCL/ov/EkSJigIAi/6L/xJEiYoCAIv+i/8SRImKAgCL/ov/EkSJigIAi/6L/xJEiYoCAIv+i/8SRImKAgCL/ov/EkSJigIAi/6L/xJEiYoCAIv+i/8SRImKAgCL/ov/EkSJigIAi/6L/xJEiQ==)
    itxn_field ApprovalProgramPages
    intc_0 // appl
    itxn_field TypeEnum
    intc_1 // 0
    itxn_field Fee
    itxn_submit
    itxn CreatedApplicationID
    // arc4_conversions/contract.py:73-74
    // # uint64
    // arc4.abi_call(CheckApp.check_uint64, arc4.UInt64(), op.bzero(8), app_id=app)
    itxn_begin
    dup
    itxn_field ApplicationID
    bytec 8 // method "check_uint64(uint64,byte[])void"
    itxn_field ApplicationArgs
    bytec 18 // 0x0000000000000000
    itxn_field ApplicationArgs
    bytec 9 // 0x00080000000000000000
    itxn_field ApplicationArgs
    intc_0 // appl
    itxn_field TypeEnum
    intc_1 // 0
    itxn_field Fee
    itxn_submit
    // arc4_conversions/contract.py:76-82
    // # bytes
    // arc4.abi_call(
    //     CheckApp.check_dynamic_bytes,
    //     arc4.DynamicBytes(Txn.application_args(0)),
    //     b"\x00\x04" + Txn.application_args(0),
    //     app_id=app,
    // )
    itxn_begin
    // arc4_conversions/contract.py:79
    // arc4.DynamicBytes(Txn.application_args(0)),
    txna ApplicationArgs 0
    dup
    len
    itob
    extract 6 2
    swap
    concat
    // arc4_conversions/contract.py:80
    // b"\x00\x04" + Txn.application_args(0),
    bytec 19 // 0x0004
    txna ApplicationArgs 0
    concat
    dup
    len
    itob
    extract 6 2
    swap
    concat
    dig 2
    itxn_field ApplicationID
    // arc4_conversions/contract.py:76-82
    // # bytes
    // arc4.abi_call(
    //     CheckApp.check_dynamic_bytes,
    //     arc4.DynamicBytes(Txn.application_args(0)),
    //     b"\x00\x04" + Txn.application_args(0),
    //     app_id=app,
    // )
    bytec 10 // method "check_dynamic_bytes(byte[],byte[])void"
    itxn_field ApplicationArgs
    swap
    itxn_field ApplicationArgs
    itxn_field ApplicationArgs
    intc_0 // appl
    itxn_field TypeEnum
    intc_1 // 0
    itxn_field Fee
    itxn_submit
    // arc4_conversions/contract.py:84-87
    // # bytes
    // arc4.abi_call(
    //     CheckApp.check_string, arc4.String("Hello World"), b"\x00\x0bHello World", app_id=app
    // )
    itxn_begin
    dup
    itxn_field ApplicationID
    bytec 11 // method "check_string(string,byte[])void"
    itxn_field ApplicationArgs
    // arc4_conversions/contract.py:86
    // CheckApp.check_string, arc4.String("Hello World"), b"\x00\x0bHello World", app_id=app
    bytec 5 // 0x000b48656c6c6f20576f726c64
    itxn_field ApplicationArgs
    bytec 6 // 0x000d000b48656c6c6f20576f726c64
    itxn_field ApplicationArgs
    // arc4_conversions/contract.py:84-87
    // # bytes
    // arc4.abi_call(
    //     CheckApp.check_string, arc4.String("Hello World"), b"\x00\x0bHello World", app_id=app
    // )
    intc_0 // appl
    itxn_field TypeEnum
    intc_1 // 0
    itxn_field Fee
    itxn_submit
    // arc4_conversions/contract.py:89-90
    // # biguint
    // arc4.abi_call(CheckApp.check_biguint, arc4.UInt512(), op.bzero(64), app_id=app)
    itxn_begin
    dup
    itxn_field ApplicationID
    bytec 12 // method "check_biguint(uint512,byte[])void"
    itxn_field ApplicationArgs
    bytec 13 // 0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
    itxn_field ApplicationArgs
    bytec 14 // 0x004000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
    itxn_field ApplicationArgs
    intc_0 // appl
    itxn_field TypeEnum
    intc_1 // 0
    itxn_field Fee
    itxn_submit
    // arc4_conversions/contract.py:92-93
    // # bool
    // arc4.abi_call(CheckApp.check_bool, arc4.Bool(Txn.num_app_args == 1), b"\x80", app_id=app)
    itxn_begin
    txn NumAppArgs
    intc_2 // 1
    ==
    pushbytes 0x00
    intc_1 // 0
    uncover 2
    setbit
    dig 1
    itxn_field ApplicationID
    bytec 15 // method "check_bool(bool,byte[])void"
    itxn_field ApplicationArgs
    itxn_field ApplicationArgs
    bytec 16 // 0x000180
    itxn_field ApplicationArgs
    intc_0 // appl
    itxn_field TypeEnum
    intc_1 // 0
    itxn_field Fee
    itxn_submit
    // arc4_conversions/contract.py:95
    // arc4.abi_call(CheckApp.delete_application, app_id=app)
    itxn_begin
    pushint 5 // DeleteApplication
    itxn_field OnCompletion
    itxn_field ApplicationID
    bytec 4 // method "delete_application()void"
    itxn_field ApplicationArgs
    intc_0 // appl
    itxn_field TypeEnum
    intc_1 // 0
    itxn_field Fee
    itxn_submit
    retsub


// test_cases.arc4_conversions.contract.TestContract.test_array_uint64_encoding() -> void:
test_array_uint64_encoding:
    // arc4_conversions/contract.py:99
    // app = arc4.arc4_create(CheckApp).created_app
    itxn_begin
    bytec_2 // base64(CoEBQw==)
    itxn_field ClearStateProgramPages
    bytec_3 // base64(CiABATEbQQFQggwEM7NJngSNdi/fBC0ynuEEak3fcwTW4Le8BOXKzQYEia9VewRG4Za9BPM4htoEJZW5WgQ/VSZrBH0kCUU2GgCODADqANUAwACrAJYAgQBsAFcAQgAtABgAA4EAQzEZFEQxGEQ2GgE2GgJXAgCIAU4iQzEZFEQxGEQ2GgE2GgJXAgCIAS8iQzEZFEQxGEQ2GgE2GgJXAgCIARAiQzEZFEQxGEQ2GgE2GgJXAgCIAPEiQzEZFEQxGEQ2GgE2GgJXAgCIANIiQzEZFEQxGEQ2GgE2GgJXAgCIALMiQzEZFEQxGEQ2GgE2GgJXAgCIAJQiQzEZFEQxGEQ2GgE2GgJXAgCIAHUiQzEZFEQxGEQ2GgE2GgJXAgCIAFYiQzEZFEQxGEQ2GgE2GgJXAgCIADciQzEZFEQxGEQ2GgE2GgJXAgCIABgiQzEZgQUSRDEYRCJDMRlA/wYxGBREIkOKAgCL/ov/EkSJigIAi/6L/xJEiYoCAIv+i/8SRImKAgCL/ov/EkSJigIAi/6L/xJEiYoCAIv+i/8SRImKAgCL/ov/EkSJigIAi/6L/xJEiYoCAIv+i/8SRImKAgCL/ov/EkSJigIAi/6L/xJEiQ==)
    itxn_field ApprovalProgramPages
    intc_0 // appl
    itxn_field TypeEnum
    intc_1 // 0
    itxn_field Fee
    itxn_submit
    itxn CreatedApplicationID
    // arc4_conversions/contract.py:101
    // arr = ImmutableArray(Txn.num_app_args, Txn.num_app_args + 1, Txn.num_app_args + 2)
    txn NumAppArgs
    dup
    intc_2 // 1
    +
    txn NumAppArgs
    intc_3 // 2
    +
    uncover 2
    itob
    uncover 2
    itob
    concat
    swap
    itob
    concat
    dup
    len
    pushint 8 // 8
    /
    itob
    extract 6 2
    swap
    concat
    // arc4_conversions/contract.py:105
    // arc4.abi_call(CheckApp.check_dyn_array_uin64, arr, expected_bytes, app_id=app)
    itxn_begin
    dig 1
    itxn_field ApplicationID
    bytec 20 // method "check_dyn_array_uin64(uint64[],byte[])void"
    itxn_field ApplicationArgs
    itxn_field ApplicationArgs
    bytec 21 // 0x001a0003000000000000000100000000000000020000000000000003
    itxn_field ApplicationArgs
    intc_0 // appl
    itxn_field TypeEnum
    intc_1 // 0
    itxn_field Fee
    itxn_submit
    // arc4_conversions/contract.py:106-111
    // arc4.abi_call(
    //     CheckApp.check_dyn_array_uin64,
    //     (Txn.num_app_args, Txn.num_app_args + 1, Txn.num_app_args + 2),
    //     expected_bytes,
    //     app_id=app,
    // )
    itxn_begin
    // arc4_conversions/contract.py:108
    // (Txn.num_app_args, Txn.num_app_args + 1, Txn.num_app_args + 2),
    txn NumAppArgs
    dup
    intc_2 // 1
    +
    txn NumAppArgs
    intc_3 // 2
    +
    uncover 2
    itob
    uncover 2
    itob
    uncover 2
    itob
    cover 2
    concat
    swap
    concat
    bytec 17 // 0x0003
    swap
    concat
    dig 1
    itxn_field ApplicationID
    // arc4_conversions/contract.py:106-111
    // arc4.abi_call(
    //     CheckApp.check_dyn_array_uin64,
    //     (Txn.num_app_args, Txn.num_app_args + 1, Txn.num_app_args + 2),
    //     expected_bytes,
    //     app_id=app,
    // )
    bytec 20 // method "check_dyn_array_uin64(uint64[],byte[])void"
    itxn_field ApplicationArgs
    itxn_field ApplicationArgs
    // arc4_conversions/contract.py:109
    // expected_bytes,
    bytec 21 // 0x001a0003000000000000000100000000000000020000000000000003
    itxn_field ApplicationArgs
    // arc4_conversions/contract.py:106-111
    // arc4.abi_call(
    //     CheckApp.check_dyn_array_uin64,
    //     (Txn.num_app_args, Txn.num_app_args + 1, Txn.num_app_args + 2),
    //     expected_bytes,
    //     app_id=app,
    // )
    intc_0 // appl
    itxn_field TypeEnum
    intc_1 // 0
    itxn_field Fee
    itxn_submit
    // arc4_conversions/contract.py:112-117
    // arc4.abi_call(
    //     CheckApp.check_static_array_uin64_3,
    //     (Txn.num_app_args, Txn.num_app_args + 1, Txn.num_app_args + 2),
    //     expected_bytes[2:],
    //     app_id=app,
    // )
    itxn_begin
    // arc4_conversions/contract.py:114
    // (Txn.num_app_args, Txn.num_app_args + 1, Txn.num_app_args + 2),
    txn NumAppArgs
    dup
    intc_2 // 1
    +
    txn NumAppArgs
    intc_3 // 2
    +
    uncover 2
    itob
    uncover 2
    itob
    uncover 2
    itob
    cover 2
    concat
    swap
    concat
    dig 1
    itxn_field ApplicationID
    // arc4_conversions/contract.py:112-117
    // arc4.abi_call(
    //     CheckApp.check_static_array_uin64_3,
    //     (Txn.num_app_args, Txn.num_app_args + 1, Txn.num_app_args + 2),
    //     expected_bytes[2:],
    //     app_id=app,
    // )
    pushbytes 0x46e196bd // method "check_static_array_uin64_3(uint64[3],byte[])void"
    itxn_field ApplicationArgs
    itxn_field ApplicationArgs
    // arc4_conversions/contract.py:115
    // expected_bytes[2:],
    pushbytes 0x0018000000000000000100000000000000020000000000000003
    itxn_field ApplicationArgs
    // arc4_conversions/contract.py:112-117
    // arc4.abi_call(
    //     CheckApp.check_static_array_uin64_3,
    //     (Txn.num_app_args, Txn.num_app_args + 1, Txn.num_app_args + 2),
    //     expected_bytes[2:],
    //     app_id=app,
    // )
    intc_0 // appl
    itxn_field TypeEnum
    intc_1 // 0
    itxn_field Fee
    itxn_submit
    // arc4_conversions/contract.py:119
    // arc4.abi_call(CheckApp.delete_application, app_id=app)
    itxn_begin
    pushint 5 // DeleteApplication
    itxn_field OnCompletion
    itxn_field ApplicationID
    bytec 4 // method "delete_application()void"
    itxn_field ApplicationArgs
    intc_0 // appl
    itxn_field TypeEnum
    intc_1 // 0
    itxn_field Fee
    itxn_submit
    retsub


// test_cases.arc4_conversions.contract.TestContract.test_array_static_encoding() -> void:
test_array_static_encoding:
    // arc4_conversions/contract.py:123
    // app = arc4.arc4_create(CheckApp).created_app
    itxn_begin
    bytec_2 // base64(CoEBQw==)
    itxn_field ClearStateProgramPages
    bytec_3 // base64(CiABATEbQQFQggwEM7NJngSNdi/fBC0ynuEEak3fcwTW4Le8BOXKzQYEia9VewRG4Za9BPM4htoEJZW5WgQ/VSZrBH0kCUU2GgCODADqANUAwACrAJYAgQBsAFcAQgAtABgAA4EAQzEZFEQxGEQ2GgE2GgJXAgCIAU4iQzEZFEQxGEQ2GgE2GgJXAgCIAS8iQzEZFEQxGEQ2GgE2GgJXAgCIARAiQzEZFEQxGEQ2GgE2GgJXAgCIAPEiQzEZFEQxGEQ2GgE2GgJXAgCIANIiQzEZFEQxGEQ2GgE2GgJXAgCIALMiQzEZFEQxGEQ2GgE2GgJXAgCIAJQiQzEZFEQxGEQ2GgE2GgJXAgCIAHUiQzEZFEQxGEQ2GgE2GgJXAgCIAFYiQzEZFEQxGEQ2GgE2GgJXAgCIADciQzEZFEQxGEQ2GgE2GgJXAgCIABgiQzEZgQUSRDEYRCJDMRlA/wYxGBREIkOKAgCL/ov/EkSJigIAi/6L/xJEiYoCAIv+i/8SRImKAgCL/ov/EkSJigIAi/6L/xJEiYoCAIv+i/8SRImKAgCL/ov/EkSJigIAi/6L/xJEiYoCAIv+i/8SRImKAgCL/ov/EkSJigIAi/6L/xJEiQ==)
    itxn_field ApprovalProgramPages
    intc_0 // appl
    itxn_field TypeEnum
    intc_1 // 0
    itxn_field Fee
    itxn_submit
    itxn CreatedApplicationID
    // arc4_conversions/contract.py:186
    // return MyStruct(value, Txn.sender)
    txn Sender
    dupn 2
    // arc4_conversions/contract.py:125
    // arr = ImmutableArray(my_struct(UInt64(1)), my_struct(UInt64(2)), my_struct(UInt64(3)))
    intc_2 // 1
    itob
    dup
    uncover 4
    concat
    intc_3 // 2
    itob
    dup
    uncover 5
    concat
    uncover 2
    swap
    concat
    pushint 3 // 3
    itob
    dup
    uncover 5
    concat
    uncover 2
    swap
    concat
    dup
    len
    pushint 40 // 40
    /
    itob
    extract 6 2
    swap
    concat
    // arc4_conversions/contract.py:127-128
    // b"\x00\x03"
    // + (op.bzero(7) + b"\x01")
    pushbytes 0x00030000000000000001
    // arc4_conversions/contract.py:129
    // + Txn.sender.bytes
    txn Sender
    // arc4_conversions/contract.py:127-129
    // b"\x00\x03"
    // + (op.bzero(7) + b"\x01")
    // + Txn.sender.bytes
    concat
    // arc4_conversions/contract.py:130
    // + (op.bzero(7) + b"\x02")
    pushbytes 0x0000000000000002
    // arc4_conversions/contract.py:127-130
    // b"\x00\x03"
    // + (op.bzero(7) + b"\x01")
    // + Txn.sender.bytes
    // + (op.bzero(7) + b"\x02")
    concat
    // arc4_conversions/contract.py:131
    // + Txn.sender.bytes
    txn Sender
    // arc4_conversions/contract.py:127-131
    // b"\x00\x03"
    // + (op.bzero(7) + b"\x01")
    // + Txn.sender.bytes
    // + (op.bzero(7) + b"\x02")
    // + Txn.sender.bytes
    concat
    // arc4_conversions/contract.py:132
    // + (op.bzero(7) + b"\x03")
    pushbytes 0x0000000000000003
    // arc4_conversions/contract.py:127-132
    // b"\x00\x03"
    // + (op.bzero(7) + b"\x01")
    // + Txn.sender.bytes
    // + (op.bzero(7) + b"\x02")
    // + Txn.sender.bytes
    // + (op.bzero(7) + b"\x03")
    concat
    // arc4_conversions/contract.py:133
    // + Txn.sender.bytes
    txn Sender
    // arc4_conversions/contract.py:127-133
    // b"\x00\x03"
    // + (op.bzero(7) + b"\x01")
    // + Txn.sender.bytes
    // + (op.bzero(7) + b"\x02")
    // + Txn.sender.bytes
    // + (op.bzero(7) + b"\x03")
    // + Txn.sender.bytes
    concat
    // arc4_conversions/contract.py:135
    // arc4.abi_call(CheckApp.check_dyn_array_struct, arr, expected_bytes, app_id=app)
    itxn_begin
    dup
    len
    dup
    itob
    extract 6 2
    dig 2
    concat
    dig 7
    itxn_field ApplicationID
    pushbytes 0xf33886da // method "check_dyn_array_struct((uint64,address)[],byte[])void"
    itxn_field ApplicationArgs
    uncover 3
    itxn_field ApplicationArgs
    itxn_field ApplicationArgs
    intc_0 // appl
    itxn_field TypeEnum
    intc_1 // 0
    itxn_field Fee
    itxn_submit
    // arc4_conversions/contract.py:136-141
    // arc4.abi_call(
    //     CheckApp.check_static_array_struct,
    //     (my_struct(UInt64(1)), my_struct(UInt64(2)), my_struct(UInt64(3))),
    //     expected_bytes[2:],
    //     app_id=app,
    // )
    itxn_begin
    // arc4_conversions/contract.py:186
    // return MyStruct(value, Txn.sender)
    txn Sender
    dupn 2
    // arc4_conversions/contract.py:138
    // (my_struct(UInt64(1)), my_struct(UInt64(2)), my_struct(UInt64(3))),
    uncover 7
    uncover 3
    concat
    uncover 6
    uncover 3
    concat
    uncover 5
    uncover 3
    concat
    cover 2
    concat
    swap
    concat
    // arc4_conversions/contract.py:139
    // expected_bytes[2:],
    intc_3 // 2
    dig 2
    >=
    intc_3 // 2
    dig 3
    uncover 2
    select
    uncover 3
    swap
    uncover 3
    substring3
    dup
    len
    itob
    extract 6 2
    swap
    concat
    dig 2
    itxn_field ApplicationID
    // arc4_conversions/contract.py:136-141
    // arc4.abi_call(
    //     CheckApp.check_static_array_struct,
    //     (my_struct(UInt64(1)), my_struct(UInt64(2)), my_struct(UInt64(3))),
    //     expected_bytes[2:],
    //     app_id=app,
    // )
    pushbytes 0x2595b95a // method "check_static_array_struct((uint64,address)[3],byte[])void"
    itxn_field ApplicationArgs
    swap
    itxn_field ApplicationArgs
    itxn_field ApplicationArgs
    intc_0 // appl
    itxn_field TypeEnum
    intc_1 // 0
    itxn_field Fee
    itxn_submit
    // arc4_conversions/contract.py:143
    // arc4.abi_call(CheckApp.delete_application, app_id=app)
    itxn_begin
    pushint 5 // DeleteApplication
    itxn_field OnCompletion
    itxn_field ApplicationID
    bytec 4 // method "delete_application()void"
    itxn_field ApplicationArgs
    intc_0 // appl
    itxn_field TypeEnum
    intc_1 // 0
    itxn_field Fee
    itxn_submit
    retsub


// test_cases.arc4_conversions.contract.TestContract.test_array_dynamic_encoding() -> void:
test_array_dynamic_encoding:
    // arc4_conversions/contract.py:145-146
    // @arc4.abimethod()
    // def test_array_dynamic_encoding(self) -> None:
    proto 0 0
    // arc4_conversions/contract.py:147
    // app = arc4.arc4_create(CheckApp).created_app
    itxn_begin
    bytec_2 // base64(CoEBQw==)
    itxn_field ClearStateProgramPages
    bytec_3 // base64(CiABATEbQQFQggwEM7NJngSNdi/fBC0ynuEEak3fcwTW4Le8BOXKzQYEia9VewRG4Za9BPM4htoEJZW5WgQ/VSZrBH0kCUU2GgCODADqANUAwACrAJYAgQBsAFcAQgAtABgAA4EAQzEZFEQxGEQ2GgE2GgJXAgCIAU4iQzEZFEQxGEQ2GgE2GgJXAgCIAS8iQzEZFEQxGEQ2GgE2GgJXAgCIARAiQzEZFEQxGEQ2GgE2GgJXAgCIAPEiQzEZFEQxGEQ2GgE2GgJXAgCIANIiQzEZFEQxGEQ2GgE2GgJXAgCIALMiQzEZFEQxGEQ2GgE2GgJXAgCIAJQiQzEZFEQxGEQ2GgE2GgJXAgCIAHUiQzEZFEQxGEQ2GgE2GgJXAgCIAFYiQzEZFEQxGEQ2GgE2GgJXAgCIADciQzEZFEQxGEQ2GgE2GgJXAgCIABgiQzEZgQUSRDEYRCJDMRlA/wYxGBREIkOKAgCL/ov/EkSJigIAi/6L/xJEiYoCAIv+i/8SRImKAgCL/ov/EkSJigIAi/6L/xJEiYoCAIv+i/8SRImKAgCL/ov/EkSJigIAi/6L/xJEiYoCAIv+i/8SRImKAgCL/ov/EkSJigIAi/6L/xJEiQ==)
    itxn_field ApprovalProgramPages
    intc_0 // appl
    itxn_field TypeEnum
    intc_1 // 0
    itxn_field Fee
    itxn_submit
    itxn CreatedApplicationID
    // arc4_conversions/contract.py:203
    // return MyDynStruct(value, Txn.sender, Txn.sender.bytes)
    txn Sender
    dupn 5
    // arc4_conversions/contract.py:150
    // my_dyn_struct(UInt64(1)), my_dyn_struct(UInt64(2)), my_dyn_struct(UInt64(3))
    intc_2 // 1
    itob
    dup
    cover 7
    bytec_0 // 0x0020
    uncover 6
    concat
    // arc4_conversions/contract.py:149-151
    // arr = ImmutableArray(
    //     my_dyn_struct(UInt64(1)), my_dyn_struct(UInt64(2)), my_dyn_struct(UInt64(3))
    // )
    swap
    uncover 6
    concat
    bytec_1 // 0x002a
    concat
    swap
    concat
    // arc4_conversions/contract.py:150
    // my_dyn_struct(UInt64(1)), my_dyn_struct(UInt64(2)), my_dyn_struct(UInt64(3))
    intc_3 // 2
    itob
    dup
    cover 6
    bytec_0 // 0x0020
    uncover 5
    concat
    // arc4_conversions/contract.py:149-151
    // arr = ImmutableArray(
    //     my_dyn_struct(UInt64(1)), my_dyn_struct(UInt64(2)), my_dyn_struct(UInt64(3))
    // )
    swap
    uncover 5
    concat
    bytec_1 // 0x002a
    concat
    swap
    concat
    // arc4_conversions/contract.py:150
    // my_dyn_struct(UInt64(1)), my_dyn_struct(UInt64(2)), my_dyn_struct(UInt64(3))
    pushint 3 // 3
    itob
    dup
    cover 5
    bytec_0 // 0x0020
    uncover 4
    concat
    // arc4_conversions/contract.py:149-151
    // arr = ImmutableArray(
    //     my_dyn_struct(UInt64(1)), my_dyn_struct(UInt64(2)), my_dyn_struct(UInt64(3))
    // )
    swap
    uncover 4
    concat
    bytec_1 // 0x002a
    concat
    swap
    concat
    dig 2
    len
    intc_0 // 6
    +
    dup
    itob
    extract 6 2
    bytec 7 // 0x0006
    swap
    concat
    dig 3
    len
    uncover 2
    +
    itob
    extract 6 2
    concat
    uncover 3
    concat
    uncover 2
    concat
    swap
    concat
    pushbytes 0x
    intc_1 // 0

test_array_dynamic_encoding_for_header@6:
    frame_dig 6
    intc_1 // 0
    <
    bz test_array_dynamic_encoding_after_for@8
    // arc4_conversions/contract.py:149-151
    // arr = ImmutableArray(
    //     my_dyn_struct(UInt64(1)), my_dyn_struct(UInt64(2)), my_dyn_struct(UInt64(3))
    // )
    pushbytes 0x
    frame_dig 6
    dup
    cover 2
    extract_uint16
    intc_0 // 6
    +
    itob
    extract 6 2
    frame_dig 5
    swap
    concat
    frame_bury 5
    intc_3 // 2
    +
    frame_bury 6
    b test_array_dynamic_encoding_for_header@6

test_array_dynamic_encoding_after_for@8:
    intc_1 // 0
    frame_bury 6

test_array_dynamic_encoding_for_header@9:
    frame_dig 6
    intc_0 // 6
    <
    bz test_array_dynamic_encoding_after_for@11
    frame_dig 4
    frame_dig 6
    dup
    cover 2
    extract_uint16
    itob
    extract 6 2
    frame_dig 5
    swap
    concat
    frame_bury 5
    intc_3 // 2
    +
    frame_bury 6
    b test_array_dynamic_encoding_for_header@9

test_array_dynamic_encoding_after_for@11:
    bytec 17 // 0x0003
    frame_dig 5
    concat
    frame_dig 4
    dup
    len
    intc_0 // 6
    swap
    substring3
    concat
    // arc4_conversions/contract.py:153
    // my_dyn_struct_arc4(UInt64(1)),
    intc_2 // 1
    callsub my_dyn_struct_arc4
    // arc4_conversions/contract.py:154
    // my_dyn_struct_arc4(UInt64(2)),
    intc_3 // 2
    callsub my_dyn_struct_arc4
    // arc4_conversions/contract.py:155
    // my_dyn_struct_arc4(UInt64(3)),
    pushint 3 // 3
    callsub my_dyn_struct_arc4
    // arc4_conversions/contract.py:152-156
    // expected_bytes = arc4.DynamicArray(
    //     my_dyn_struct_arc4(UInt64(1)),
    //     my_dyn_struct_arc4(UInt64(2)),
    //     my_dyn_struct_arc4(UInt64(3)),
    // ).bytes
    dig 2
    len
    intc_0 // 6
    +
    dup
    itob
    extract 6 2
    bytec 7 // 0x0006
    swap
    concat
    dig 3
    len
    uncover 2
    +
    itob
    extract 6 2
    concat
    uncover 3
    concat
    uncover 2
    concat
    swap
    concat
    bytec 17 // 0x0003
    swap
    concat
    // arc4_conversions/contract.py:157
    // arc4.abi_call(CheckApp.check_dyn_array_dyn_struct, arr, expected_bytes, app_id=app)
    itxn_begin
    dup
    len
    itob
    extract 6 2
    swap
    concat
    frame_dig 0
    dup
    cover 3
    itxn_field ApplicationID
    pushbytes 0x3f55266b // method "check_dyn_array_dyn_struct((uint64,address,byte[])[],byte[])void"
    itxn_field ApplicationArgs
    swap
    itxn_field ApplicationArgs
    itxn_field ApplicationArgs
    intc_0 // appl
    itxn_field TypeEnum
    intc_1 // 0
    itxn_field Fee
    itxn_submit
    // arc4_conversions/contract.py:160
    // my_dyn_struct_arc4(UInt64(1)),
    intc_2 // 1
    callsub my_dyn_struct_arc4
    // arc4_conversions/contract.py:161
    // my_dyn_struct_arc4(UInt64(2)),
    intc_3 // 2
    callsub my_dyn_struct_arc4
    // arc4_conversions/contract.py:162
    // my_dyn_struct_arc4(UInt64(3)),
    pushint 3 // 3
    callsub my_dyn_struct_arc4
    // arc4_conversions/contract.py:159-163
    // expected_bytes = arc4.StaticArray(
    //     my_dyn_struct_arc4(UInt64(1)),
    //     my_dyn_struct_arc4(UInt64(2)),
    //     my_dyn_struct_arc4(UInt64(3)),
    // ).bytes
    dig 2
    len
    intc_0 // 6
    +
    dup
    itob
    extract 6 2
    bytec 7 // 0x0006
    swap
    concat
    dig 3
    len
    uncover 2
    +
    itob
    extract 6 2
    concat
    uncover 3
    concat
    uncover 2
    concat
    swap
    concat
    // arc4_conversions/contract.py:164-169
    // arc4.abi_call(
    //     CheckApp.check_static_array_dyn_struct,
    //     (my_dyn_struct(UInt64(1)), my_dyn_struct(UInt64(2)), my_dyn_struct(UInt64(3))),
    //     expected_bytes,
    //     app_id=app,
    // )
    itxn_begin
    // arc4_conversions/contract.py:203
    // return MyDynStruct(value, Txn.sender, Txn.sender.bytes)
    txn Sender
    dupn 4
    // arc4_conversions/contract.py:166
    // (my_dyn_struct(UInt64(1)), my_dyn_struct(UInt64(2)), my_dyn_struct(UInt64(3))),
    bytec_0 // 0x0020
    // arc4_conversions/contract.py:203
    // return MyDynStruct(value, Txn.sender, Txn.sender.bytes)
    txn Sender
    // arc4_conversions/contract.py:166
    // (my_dyn_struct(UInt64(1)), my_dyn_struct(UInt64(2)), my_dyn_struct(UInt64(3))),
    concat
    frame_dig 1
    uncover 6
    concat
    bytec_1 // 0x002a
    concat
    swap
    concat
    bytec_0 // 0x0020
    uncover 4
    concat
    frame_dig 2
    uncover 5
    concat
    bytec_1 // 0x002a
    concat
    swap
    concat
    bytec_0 // 0x0020
    uncover 3
    concat
    frame_dig 3
    uncover 4
    concat
    bytec_1 // 0x002a
    concat
    swap
    concat
    dig 2
    len
    intc_0 // 6
    +
    dup
    itob
    extract 6 2
    bytec 7 // 0x0006
    swap
    concat
    dig 3
    len
    uncover 2
    +
    itob
    extract 6 2
    concat
    uncover 3
    concat
    uncover 2
    concat
    swap
    concat
    // arc4_conversions/contract.py:167
    // expected_bytes,
    dig 1
    len
    itob
    extract 6 2
    uncover 2
    concat
    dig 2
    itxn_field ApplicationID
    // arc4_conversions/contract.py:164-169
    // arc4.abi_call(
    //     CheckApp.check_static_array_dyn_struct,
    //     (my_dyn_struct(UInt64(1)), my_dyn_struct(UInt64(2)), my_dyn_struct(UInt64(3))),
    //     expected_bytes,
    //     app_id=app,
    // )
    pushbytes 0x7d240945 // method "check_static_array_dyn_struct((uint64,address,byte[])[3],byte[])void"
    itxn_field ApplicationArgs
    swap
    itxn_field ApplicationArgs
    itxn_field ApplicationArgs
    intc_0 // appl
    itxn_field TypeEnum
    intc_1 // 0
    itxn_field Fee
    itxn_submit
    // arc4_conversions/contract.py:171
    // arc4.abi_call(CheckApp.delete_application, app_id=app)
    itxn_begin
    pushint 5 // DeleteApplication
    itxn_field OnCompletion
    itxn_field ApplicationID
    bytec 4 // method "delete_application()void"
    itxn_field ApplicationArgs
    intc_0 // appl
    itxn_field TypeEnum
    intc_1 // 0
    itxn_field Fee
    itxn_submit
    retsub
