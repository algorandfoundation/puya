#pragma version 10
#pragma typetrack false

// algopy.arc4.ARC4Contract.approval_program() -> uint64:
main:
    intcblock 1 0 1234
    bytecblock 0x151f7c75 "apps" "assets" "accounts"
    b main_block@0

main_block@0:
    b main_block@1

main_block@1:
    // arc4_conversions/reference.py:4
    // class ReferenceReturn(arc4.ARC4Contract):
    txn NumAppArgs
    intc_1 // 0
    !=
    bz main_bare_routing@24
    b main_abi_routing@2

main_abi_routing@2:
    // arc4_conversions/reference.py:4
    // class ReferenceReturn(arc4.ARC4Contract):
    txna ApplicationArgs 0
    match
    b main_route_NoOp@3

main_route_NoOp@3:
    // arc4_conversions/reference.py:4
    // class ReferenceReturn(arc4.ARC4Contract):
    txn OnCompletion
    intc_1 // NoOp
    ==
    assert // OnCompletion is not NoOp
    txna ApplicationArgs 0
    match
    b main_switch_case_default@4

main_switch_case_default@4:
    // arc4_conversions/reference.py:4
    // class ReferenceReturn(arc4.ARC4Contract):
    txn ApplicationID
    bz main_create_NoOp@18
    b main_call_NoOp@5

main_call_NoOp@5:
    // arc4_conversions/reference.py:4
    // class ReferenceReturn(arc4.ARC4Contract):
    txna ApplicationArgs 0
    pushbytes 0x6c7a1cb5 // method "acc_ret()address"
    pushbytes 0xc8480f0c // method "asset_ret()uint64"
    pushbytes 0x37c0cbf2 // method "app_ret()uint64"
    pushbytes 0x2d018f8a // method "store(address,uint64,uint64)void"
    pushbytes 0x6728b1a1 // method "store_apps(uint64[])void"
    pushbytes 0xce7e6cd3 // method "store_assets(uint64[])void"
    pushbytes 0x0a37f6e1 // method "store_accounts(address[])void"
    pushbytes 0x4c894d7e // method "return_apps()uint64[]"
    pushbytes 0x62ebcf89 // method "return_assets()uint64[]"
    pushbytes 0x924e778c // method "return_accounts()address[]"
    uncover 10
    match main_acc_ret_route@6 main_asset_ret_route@7 main_app_ret_route@8 main_store_route@9 main_store_apps_route@10 main_store_assets_route@11 main_store_accounts_route@12 main_return_apps_route@13 main_return_assets_route@14 main_return_accounts_route@15
    b main_switch_case_default@16

main_switch_case_default@16:
    b main_switch_case_next@17

main_switch_case_next@17:
    b main_after_if_else@21

main_after_if_else@21:
    b main_switch_case_next@22

main_switch_case_next@22:
    b main_switch_case_next@23

main_switch_case_next@23:
    b main_after_if_else@28

main_after_if_else@28:
    // arc4_conversions/reference.py:4
    // class ReferenceReturn(arc4.ARC4Contract):
    err

main_return_accounts_route@15:
    // arc4_conversions/reference.py:43
    // @arc4.abimethod
    callsub return_accounts
    b main_switch_case_next@17

main_return_assets_route@14:
    // arc4_conversions/reference.py:39
    // @arc4.abimethod
    callsub return_assets
    b main_switch_case_next@17

main_return_apps_route@13:
    // arc4_conversions/reference.py:35
    // @arc4.abimethod
    callsub return_apps
    b main_switch_case_next@17

main_store_accounts_route@12:
    // arc4_conversions/reference.py:31
    // @arc4.abimethod
    callsub store_accounts
    b main_switch_case_next@17

main_store_assets_route@11:
    // arc4_conversions/reference.py:27
    // @arc4.abimethod
    callsub store_assets
    b main_switch_case_next@17

main_store_apps_route@10:
    // arc4_conversions/reference.py:23
    // @arc4.abimethod
    callsub store_apps
    b main_switch_case_next@17

main_store_route@9:
    // arc4_conversions/reference.py:17
    // @arc4.abimethod
    callsub store
    b main_switch_case_next@17

main_app_ret_route@8:
    // arc4_conversions/reference.py:13
    // @arc4.abimethod
    callsub app_ret
    b main_switch_case_next@17

main_asset_ret_route@7:
    // arc4_conversions/reference.py:9
    // @arc4.abimethod
    callsub asset_ret
    b main_switch_case_next@17

main_acc_ret_route@6:
    // arc4_conversions/reference.py:5
    // @arc4.abimethod
    callsub acc_ret
    b main_switch_case_next@17

main_create_NoOp@18:
    // arc4_conversions/reference.py:4
    // class ReferenceReturn(arc4.ARC4Contract):
    txna ApplicationArgs 0
    match
    b main_switch_case_default@19

main_switch_case_default@19:
    b main_switch_case_next@20

main_switch_case_next@20:
    b main_after_if_else@21

main_bare_routing@24:
    // arc4_conversions/reference.py:4
    // class ReferenceReturn(arc4.ARC4Contract):
    txn OnCompletion
    intc_1 // 0
    uncover 1
    match main___algopy_default_create@25
    b main_switch_case_default@26

main_switch_case_default@26:
    b main_switch_case_next@27

main_switch_case_next@27:
    b main_after_if_else@28

main___algopy_default_create@25:
    txn ApplicationID
    intc_1 // 0
    ==
    assert // can only call when creating
    b main_block@30

main_block@30:
    b main_after_inlined_test_cases.arc4_conversions.reference.ReferenceReturn.__algopy_default_create@31

main_after_inlined_test_cases.arc4_conversions.reference.ReferenceReturn.__algopy_default_create@31:
    intc_0 // 1
    return


// test_cases.arc4_conversions.reference.ReferenceReturn.acc_ret[routing]() -> void:
acc_ret:
    b acc_ret_block@0

acc_ret_block@0:
    // arc4_conversions/reference.py:5
    // @arc4.abimethod
    callsub test_cases.arc4_conversions.reference.ReferenceReturn.acc_ret
    bytec_0 // 0x151f7c75
    uncover 1
    concat
    log
    intc_0 // 1
    return


// test_cases.arc4_conversions.reference.ReferenceReturn.asset_ret[routing]() -> void:
asset_ret:
    b asset_ret_block@0

asset_ret_block@0:
    // arc4_conversions/reference.py:9
    // @arc4.abimethod
    callsub test_cases.arc4_conversions.reference.ReferenceReturn.asset_ret
    itob
    bytec_0 // 0x151f7c75
    uncover 1
    concat
    log
    intc_0 // 1
    return


// test_cases.arc4_conversions.reference.ReferenceReturn.app_ret[routing]() -> void:
app_ret:
    b app_ret_block@0

app_ret_block@0:
    // arc4_conversions/reference.py:13
    // @arc4.abimethod
    callsub test_cases.arc4_conversions.reference.ReferenceReturn.app_ret
    itob
    bytec_0 // 0x151f7c75
    uncover 1
    concat
    log
    intc_0 // 1
    return


// test_cases.arc4_conversions.reference.ReferenceReturn.store[routing]() -> void:
store:
    b store_block@0

store_block@0:
    // arc4_conversions/reference.py:17
    // @arc4.abimethod
    txna ApplicationArgs 1
    txna ApplicationArgs 2
    btoi
    txna ApplicationArgs 3
    btoi
    uncover 2
    uncover 2
    uncover 2
    callsub test_cases.arc4_conversions.reference.ReferenceReturn.store
    intc_0 // 1
    return


// test_cases.arc4_conversions.reference.ReferenceReturn.store_apps[routing]() -> void:
store_apps:
    b store_apps_block@0

store_apps_block@0:
    // arc4_conversions/reference.py:23
    // @arc4.abimethod
    txna ApplicationArgs 1
    callsub test_cases.arc4_conversions.reference.ReferenceReturn.store_apps
    intc_0 // 1
    return


// test_cases.arc4_conversions.reference.ReferenceReturn.store_assets[routing]() -> void:
store_assets:
    b store_assets_block@0

store_assets_block@0:
    // arc4_conversions/reference.py:27
    // @arc4.abimethod
    txna ApplicationArgs 1
    callsub test_cases.arc4_conversions.reference.ReferenceReturn.store_assets
    intc_0 // 1
    return


// test_cases.arc4_conversions.reference.ReferenceReturn.store_accounts[routing]() -> void:
store_accounts:
    b store_accounts_block@0

store_accounts_block@0:
    // arc4_conversions/reference.py:31
    // @arc4.abimethod
    txna ApplicationArgs 1
    callsub test_cases.arc4_conversions.reference.ReferenceReturn.store_accounts
    intc_0 // 1
    return


// test_cases.arc4_conversions.reference.ReferenceReturn.return_apps[routing]() -> void:
return_apps:
    b return_apps_block@0

return_apps_block@0:
    // arc4_conversions/reference.py:35
    // @arc4.abimethod
    callsub test_cases.arc4_conversions.reference.ReferenceReturn.return_apps
    bytec_0 // 0x151f7c75
    uncover 1
    concat
    log
    intc_0 // 1
    return


// test_cases.arc4_conversions.reference.ReferenceReturn.return_assets[routing]() -> void:
return_assets:
    b return_assets_block@0

return_assets_block@0:
    // arc4_conversions/reference.py:39
    // @arc4.abimethod
    callsub test_cases.arc4_conversions.reference.ReferenceReturn.return_assets
    bytec_0 // 0x151f7c75
    uncover 1
    concat
    log
    intc_0 // 1
    return


// test_cases.arc4_conversions.reference.ReferenceReturn.return_accounts[routing]() -> void:
return_accounts:
    b return_accounts_block@0

return_accounts_block@0:
    // arc4_conversions/reference.py:43
    // @arc4.abimethod
    callsub test_cases.arc4_conversions.reference.ReferenceReturn.return_accounts
    bytec_0 // 0x151f7c75
    uncover 1
    concat
    log
    intc_0 // 1
    return


// test_cases.arc4_conversions.reference.ReferenceReturn.acc_ret() -> bytes:
test_cases.arc4_conversions.reference.ReferenceReturn.acc_ret:
    b test_cases.arc4_conversions.reference.ReferenceReturn.acc_ret_block@0

test_cases.arc4_conversions.reference.ReferenceReturn.acc_ret_block@0:
    // arc4_conversions/reference.py:7
    // return Txn.sender
    txn Sender
    retsub


// test_cases.arc4_conversions.reference.ReferenceReturn.asset_ret() -> uint64:
test_cases.arc4_conversions.reference.ReferenceReturn.asset_ret:
    b test_cases.arc4_conversions.reference.ReferenceReturn.asset_ret_block@0

test_cases.arc4_conversions.reference.ReferenceReturn.asset_ret_block@0:
    // arc4_conversions/reference.py:11
    // return Asset(1234)
    intc_2 // 1234
    retsub


// test_cases.arc4_conversions.reference.ReferenceReturn.app_ret() -> uint64:
test_cases.arc4_conversions.reference.ReferenceReturn.app_ret:
    b test_cases.arc4_conversions.reference.ReferenceReturn.app_ret_block@0

test_cases.arc4_conversions.reference.ReferenceReturn.app_ret_block@0:
    // arc4_conversions/reference.py:15
    // return Application(1234)
    intc_2 // 1234
    retsub


// test_cases.arc4_conversions.reference.ReferenceReturn.store(acc: bytes, app: uint64, asset: uint64) -> void:
test_cases.arc4_conversions.reference.ReferenceReturn.store:
    // arc4_conversions/reference.py:17-18
    // @arc4.abimethod
    // def store(self, acc: Account, app: Application, asset: Asset) -> None:
    proto 3 0
    b test_cases.arc4_conversions.reference.ReferenceReturn.store_block@0

test_cases.arc4_conversions.reference.ReferenceReturn.store_block@0:
    // arc4_conversions/reference.py:19
    // self.acc = acc
    pushbytes "acc"
    frame_dig -3
    app_global_put
    // arc4_conversions/reference.py:20
    // self.asset = asset
    pushbytes "asset"
    frame_dig -1
    app_global_put
    // arc4_conversions/reference.py:21
    // self.app = app
    pushbytes "app"
    frame_dig -2
    app_global_put
    retsub


// test_cases.arc4_conversions.reference.ReferenceReturn.store_apps(apps: bytes) -> void:
test_cases.arc4_conversions.reference.ReferenceReturn.store_apps:
    // arc4_conversions/reference.py:23-24
    // @arc4.abimethod
    // def store_apps(self, apps: ImmutableArray[Application]) -> None:
    proto 1 0
    b test_cases.arc4_conversions.reference.ReferenceReturn.store_apps_block@0

test_cases.arc4_conversions.reference.ReferenceReturn.store_apps_block@0:
    // arc4_conversions/reference.py:25
    // self.apps = apps
    bytec_1 // "apps"
    frame_dig -1
    app_global_put
    retsub


// test_cases.arc4_conversions.reference.ReferenceReturn.store_assets(assets: bytes) -> void:
test_cases.arc4_conversions.reference.ReferenceReturn.store_assets:
    // arc4_conversions/reference.py:27-28
    // @arc4.abimethod
    // def store_assets(self, assets: ImmutableArray[Asset]) -> None:
    proto 1 0
    b test_cases.arc4_conversions.reference.ReferenceReturn.store_assets_block@0

test_cases.arc4_conversions.reference.ReferenceReturn.store_assets_block@0:
    // arc4_conversions/reference.py:29
    // self.assets = assets
    bytec_2 // "assets"
    frame_dig -1
    app_global_put
    retsub


// test_cases.arc4_conversions.reference.ReferenceReturn.store_accounts(accounts: bytes) -> void:
test_cases.arc4_conversions.reference.ReferenceReturn.store_accounts:
    // arc4_conversions/reference.py:31-32
    // @arc4.abimethod
    // def store_accounts(self, accounts: ImmutableArray[Account]) -> None:
    proto 1 0
    b test_cases.arc4_conversions.reference.ReferenceReturn.store_accounts_block@0

test_cases.arc4_conversions.reference.ReferenceReturn.store_accounts_block@0:
    // arc4_conversions/reference.py:33
    // self.accounts = accounts
    bytec_3 // "accounts"
    frame_dig -1
    app_global_put
    retsub


// test_cases.arc4_conversions.reference.ReferenceReturn.return_apps() -> bytes:
test_cases.arc4_conversions.reference.ReferenceReturn.return_apps:
    b test_cases.arc4_conversions.reference.ReferenceReturn.return_apps_block@0

test_cases.arc4_conversions.reference.ReferenceReturn.return_apps_block@0:
    // arc4_conversions/reference.py:37
    // return self.apps
    intc_1 // 0
    bytec_1 // "apps"
    app_global_get_ex
    assert // check self.apps exists
    retsub


// test_cases.arc4_conversions.reference.ReferenceReturn.return_assets() -> bytes:
test_cases.arc4_conversions.reference.ReferenceReturn.return_assets:
    b test_cases.arc4_conversions.reference.ReferenceReturn.return_assets_block@0

test_cases.arc4_conversions.reference.ReferenceReturn.return_assets_block@0:
    // arc4_conversions/reference.py:41
    // return self.assets
    intc_1 // 0
    bytec_2 // "assets"
    app_global_get_ex
    assert // check self.assets exists
    retsub


// test_cases.arc4_conversions.reference.ReferenceReturn.return_accounts() -> bytes:
test_cases.arc4_conversions.reference.ReferenceReturn.return_accounts:
    b test_cases.arc4_conversions.reference.ReferenceReturn.return_accounts_block@0

test_cases.arc4_conversions.reference.ReferenceReturn.return_accounts_block@0:
    // arc4_conversions/reference.py:45
    // return self.accounts
    intc_1 // 0
    bytec_3 // "accounts"
    app_global_get_ex
    assert // check self.accounts exists
    retsub
