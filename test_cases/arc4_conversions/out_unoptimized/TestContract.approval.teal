#pragma version 10
#pragma typetrack false

// algopy.arc4.ARC4Contract.approval_program() -> uint64:
main:
    intcblock 0 6 1 2
    bytecblock 0x 0x000b48656c6c6f20576f726c64 base64(CoEBQw==) base64(CiACAAExGyITQQG1NhoAgAQzs0megASNdi/fgAQtMp7hgARqTd9zgATW4Le8gATlys0GgASJr1V7gARG4Za9gATzOIbagAQllblagAQ/VSZrgAR9JAlFgAQDUaneTw2ODQE0ARoBAADmAMwAsgCYAH4AZABKADAAFgACIkMxGSISRDEYIhNENhoBiAG3I0L/6zEZIhJEMRgiE0Q2GgE2GgJXAgCIAZMjQv/RMRkiEkQxGCITRDYaATYaAlcCAIgBbyNC/7cxGSISRDEYIhNENhoBNhoCVwIAiAFLI0L/nTEZIhJEMRgiE0Q2GgE2GgJXAgCIAScjQv+DMRkiEkQxGCITRDYaATYaAlcCAIgBAyNC/2kxGSISRDEYIhNENhoBNhoCVwIAiADfI0L/TzEZIhJEMRgiE0Q2GgE2GgJXAgCIALsjQv81MRkiEkQxGCITRDYaATYaAlcCAIgAlyNC/xsxGSISRDEYIhNENhoBNhoCVwIAiABzI0L/ATEZIhJEMRgiE0Q2GgE2GgJXAgCIAE8jQv7nMRkiEkQxGCITRDYaATYaAlcCAIgAKyNC/s0xGYEFEkQxGCITRIgAGCNC/rsxGSJMjgEAA0L+rzEYIhJEI0L+p4mKAgCL/ov/EkSJigIAi/6L/xJEiYoCAIv+i/8SRImKAgCL/ov/EkSJigIAi/6L/xJEiYoCAIv+i/8SRImKAgCL/ov/EkSJigIAi/6L/xJEiYoCAIv+i/8SRImKAgCL/ov/EkSJigIAi/6L/xJEiYoBADEAi/8SRIk=) 0x80 0x33b3499e 0x48656c6c6f20576f726c64 0x8d762fdf 0x2d329ee1 0x6a4ddf73 0xd6e0b7bc 0xe5cacd06 0x0000000000000000 0x0004 0x0003 0x89af557b

main_block@0:

main_block@1:
    // arc4_conversions/contract.py:20-22
    // # note these tests are using abi_call in order to test different scenarios of ARC-4 encoding
    // # these should be replaced with a more simplified algopy.arc4.encode/decode when it is available
    // class TestContract(arc4.ARC4Contract):
    txn NumAppArgs
    intc_0 // 0
    !=
    bz main_bare_routing@12

main_abi_routing@2:
    // arc4_conversions/contract.py:20-22
    // # note these tests are using abi_call in order to test different scenarios of ARC-4 encoding
    // # these should be replaced with a more simplified algopy.arc4.encode/decode when it is available
    // class TestContract(arc4.ARC4Contract):
    txna ApplicationArgs 0
    pushbytes 0xc36825ff // method "test_literal_encoding()void"
    pushbytes 0x620ac6f0 // method "test_native_encoding()void"
    pushbytes 0x344a880b // method "test_arc4_encoding()void"
    pushbytes 0xa92e03c4 // method "test_array_uint64_encoding()void"
    pushbytes 0x6c4f8453 // method "test_array_static_encoding()void"
    pushbytes 0x7bda9a46 // method "test_array_dynamic_encoding()void"
    pushbytes 0x9a3f8f9b // method "test_bytes_to_fixed(bool)void"
    uncover 7
    match main_test_literal_encoding_route@3 main_test_native_encoding_route@4 main_test_arc4_encoding_route@5 main_test_array_uint64_encoding_route@6 main_test_array_static_encoding_route@7 main_test_array_dynamic_encoding_route@8 main_test_bytes_to_fixed_route@9

main_switch_case_default@10:

main_switch_case_next@11:

main_after_if_else@16:
    // arc4_conversions/contract.py:20-22
    // # note these tests are using abi_call in order to test different scenarios of ARC-4 encoding
    // # these should be replaced with a more simplified algopy.arc4.encode/decode when it is available
    // class TestContract(arc4.ARC4Contract):
    intc_0 // 0

main_after_inlined_test_cases.arc4_conversions.contract.TestContract.__puya_arc4_router__@17:
    return

main_test_bytes_to_fixed_route@9:
    // arc4_conversions/contract.py:178
    // @arc4.abimethod
    txn OnCompletion
    intc_0 // NoOp
    ==
    assert // OnCompletion is not NoOp
    txn ApplicationID
    intc_0 // 0
    !=
    assert // can only call when not creating
    // arc4_conversions/contract.py:20-22
    // # note these tests are using abi_call in order to test different scenarios of ARC-4 encoding
    // # these should be replaced with a more simplified algopy.arc4.encode/decode when it is available
    // class TestContract(arc4.ARC4Contract):
    txna ApplicationArgs 1
    intc_0 // 0
    getbit
    // arc4_conversions/contract.py:178
    // @arc4.abimethod
    callsub test_bytes_to_fixed
    intc_2 // 1
    b main_after_inlined_test_cases.arc4_conversions.contract.TestContract.__puya_arc4_router__@17

main_test_array_dynamic_encoding_route@8:
    // arc4_conversions/contract.py:150
    // @arc4.abimethod()
    txn OnCompletion
    intc_0 // NoOp
    ==
    assert // OnCompletion is not NoOp
    txn ApplicationID
    intc_0 // 0
    !=
    assert // can only call when not creating
    callsub test_array_dynamic_encoding
    intc_2 // 1
    b main_after_inlined_test_cases.arc4_conversions.contract.TestContract.__puya_arc4_router__@17

main_test_array_static_encoding_route@7:
    // arc4_conversions/contract.py:126
    // @arc4.abimethod()
    txn OnCompletion
    intc_0 // NoOp
    ==
    assert // OnCompletion is not NoOp
    txn ApplicationID
    intc_0 // 0
    !=
    assert // can only call when not creating
    callsub test_array_static_encoding
    intc_2 // 1
    b main_after_inlined_test_cases.arc4_conversions.contract.TestContract.__puya_arc4_router__@17

main_test_array_uint64_encoding_route@6:
    // arc4_conversions/contract.py:102
    // @arc4.abimethod()
    txn OnCompletion
    intc_0 // NoOp
    ==
    assert // OnCompletion is not NoOp
    txn ApplicationID
    intc_0 // 0
    !=
    assert // can only call when not creating
    callsub test_array_uint64_encoding
    intc_2 // 1
    b main_after_inlined_test_cases.arc4_conversions.contract.TestContract.__puya_arc4_router__@17

main_test_arc4_encoding_route@5:
    // arc4_conversions/contract.py:74
    // @arc4.abimethod()
    txn OnCompletion
    intc_0 // NoOp
    ==
    assert // OnCompletion is not NoOp
    txn ApplicationID
    intc_0 // 0
    !=
    assert // can only call when not creating
    callsub test_arc4_encoding
    intc_2 // 1
    b main_after_inlined_test_cases.arc4_conversions.contract.TestContract.__puya_arc4_router__@17

main_test_native_encoding_route@4:
    // arc4_conversions/contract.py:46
    // @arc4.abimethod()
    txn OnCompletion
    intc_0 // NoOp
    ==
    assert // OnCompletion is not NoOp
    txn ApplicationID
    intc_0 // 0
    !=
    assert // can only call when not creating
    callsub test_native_encoding
    intc_2 // 1
    b main_after_inlined_test_cases.arc4_conversions.contract.TestContract.__puya_arc4_router__@17

main_test_literal_encoding_route@3:
    // arc4_conversions/contract.py:23
    // @arc4.abimethod()
    txn OnCompletion
    intc_0 // NoOp
    ==
    assert // OnCompletion is not NoOp
    txn ApplicationID
    intc_0 // 0
    !=
    assert // can only call when not creating
    callsub test_literal_encoding
    intc_2 // 1
    b main_after_inlined_test_cases.arc4_conversions.contract.TestContract.__puya_arc4_router__@17

main_bare_routing@12:
    // arc4_conversions/contract.py:20-22
    // # note these tests are using abi_call in order to test different scenarios of ARC-4 encoding
    // # these should be replaced with a more simplified algopy.arc4.encode/decode when it is available
    // class TestContract(arc4.ARC4Contract):
    txn OnCompletion
    intc_0 // 0
    swap
    match main___algopy_default_create@13

main_switch_case_default@14:

main_switch_case_next@15:
    b main_after_if_else@16

main___algopy_default_create@13:
    txn ApplicationID
    intc_0 // 0
    ==
    assert // can only call when creating

main_block@18:

main_after_inlined_test_cases.arc4_conversions.contract.TestContract.__algopy_default_create@19:
    intc_2 // 1
    b main_after_inlined_test_cases.arc4_conversions.contract.TestContract.__puya_arc4_router__@17


// test_cases.arc4_conversions.contract.my_struct(value: uint64) -> uint64, bytes:
my_struct:
    // arc4_conversions/contract.py:201-202
    // @subroutine
    // def my_struct(value: UInt64) -> MyStruct:
    proto 1 2

my_struct_block@0:
    // arc4_conversions/contract.py:203
    // return MyStruct(value, Txn.sender)
    txn Sender
    frame_dig -1
    swap
    retsub


// test_cases.arc4_conversions.contract.my_dyn_struct(value: uint64) -> uint64, bytes, bytes:
my_dyn_struct:
    // arc4_conversions/contract.py:218-219
    // @subroutine
    // def my_dyn_struct(value: UInt64) -> MyDynStruct:
    proto 1 3

my_dyn_struct_block@0:
    // arc4_conversions/contract.py:220
    // return MyDynStruct(value, Txn.sender, Txn.sender.bytes)
    txn Sender
    dup
    frame_dig -1
    uncover 2
    uncover 2
    retsub


// test_cases.arc4_conversions.contract.my_dyn_struct_arc4(value: uint64) -> bytes:
my_dyn_struct_arc4:
    // arc4_conversions/contract.py:223-224
    // @subroutine
    // def my_dyn_struct_arc4(value: UInt64) -> MyDynStructARC4:
    proto 1 1

my_dyn_struct_arc4_block@0:
    // arc4_conversions/contract.py:226
    // arc4.UInt64(value), arc4.Address(Txn.sender), arc4.DynamicBytes(Txn.sender.bytes)
    frame_dig -1
    itob
    txn Sender
    swap
    txn Sender
    dup
    len
    itob
    extract 6 2
    swap
    concat
    // arc4_conversions/contract.py:225-227
    // return MyDynStructARC4(
    //     arc4.UInt64(value), arc4.Address(Txn.sender), arc4.DynamicBytes(Txn.sender.bytes)
    // )
    bytec_0 // 0x
    uncover 2
    concat
    uncover 2
    concat
    swap
    bytec_0 // 0x
    swap
    concat
    swap
    pushint 42 // 42
    itob
    extract 6 2
    concat
    swap
    concat
    retsub


// test_cases.arc4_conversions.contract.TestContract.test_literal_encoding() -> void:
test_literal_encoding:
    // arc4_conversions/contract.py:23-24
    // @arc4.abimethod()
    // def test_literal_encoding(self) -> None:
    proto 0 0
    bytec_0 // ""

test_literal_encoding_block@0:
    // arc4_conversions/contract.py:25
    // app = arc4.arc4_create(CheckApp).created_app
    itxn_begin
    intc_0 // 0
    itxn_field LocalNumUint
    intc_0 // 0
    itxn_field LocalNumByteSlice
    intc_0 // 0
    itxn_field GlobalNumUint
    intc_0 // 0
    itxn_field GlobalNumByteSlice
    intc_0 // 0
    itxn_field ExtraProgramPages
    bytec_2 // base64(CoEBQw==)
    itxn_field ClearStateProgramPages
    bytec_0 // 0x
    itxn_field ClearStateProgramPages
    bytec_3 // base64(CiACAAExGyITQQG1NhoAgAQzs0megASNdi/fgAQtMp7hgARqTd9zgATW4Le8gATlys0GgASJr1V7gARG4Za9gATzOIbagAQllblagAQ/VSZrgAR9JAlFgAQDUaneTw2ODQE0ARoBAADmAMwAsgCYAH4AZABKADAAFgACIkMxGSISRDEYIhNENhoBiAG3I0L/6zEZIhJEMRgiE0Q2GgE2GgJXAgCIAZMjQv/RMRkiEkQxGCITRDYaATYaAlcCAIgBbyNC/7cxGSISRDEYIhNENhoBNhoCVwIAiAFLI0L/nTEZIhJEMRgiE0Q2GgE2GgJXAgCIAScjQv+DMRkiEkQxGCITRDYaATYaAlcCAIgBAyNC/2kxGSISRDEYIhNENhoBNhoCVwIAiADfI0L/TzEZIhJEMRgiE0Q2GgE2GgJXAgCIALsjQv81MRkiEkQxGCITRDYaATYaAlcCAIgAlyNC/xsxGSISRDEYIhNENhoBNhoCVwIAiABzI0L/ATEZIhJEMRgiE0Q2GgE2GgJXAgCIAE8jQv7nMRkiEkQxGCITRDYaATYaAlcCAIgAKyNC/s0xGYEFEkQxGCITRIgAGCNC/rsxGSJMjgEAA0L+rzEYIhJEI0L+p4mKAgCL/ov/EkSJigIAi/6L/xJEiYoCAIv+i/8SRImKAgCL/ov/EkSJigIAi/6L/xJEiYoCAIv+i/8SRImKAgCL/ov/EkSJigIAi/6L/xJEiYoCAIv+i/8SRImKAgCL/ov/EkSJigIAi/6L/xJEiYoBADEAi/8SRIk=)
    itxn_field ApprovalProgramPages
    bytec_0 // 0x
    itxn_field ApprovalProgramPages
    intc_1 // appl
    itxn_field TypeEnum
    intc_0 // 0
    itxn_field Fee

test_literal_encoding_next_txn@1:
    // arc4_conversions/contract.py:25
    // app = arc4.arc4_create(CheckApp).created_app
    itxn_submit
    itxn CreatedApplicationID
    dup
    frame_bury 0
    // arc4_conversions/contract.py:27-28
    // # uint64
    // arc4.abi_call(CheckApp.check_uint64, 0, op.bzero(8), app_id=app)
    itxn_begin
    pushint 8 // 8
    bzero
    dup
    len
    itob
    extract 6 2
    swap
    concat
    swap
    itxn_field ApplicationID
    bytec 7 // method "check_uint64(uint64,byte[])void"
    itxn_field ApplicationArgs
    bytec 12 // 0x0000000000000000
    itxn_field ApplicationArgs
    itxn_field ApplicationArgs
    intc_1 // appl
    itxn_field TypeEnum
    intc_0 // 0
    itxn_field Fee

test_literal_encoding_next_txn@2:
    // arc4_conversions/contract.py:27-28
    // # uint64
    // arc4.abi_call(CheckApp.check_uint64, 0, op.bzero(8), app_id=app)
    itxn_submit
    // arc4_conversions/contract.py:30-33
    // # bytes
    // arc4.abi_call(
    //     CheckApp.check_dynamic_bytes, b"Hello World", b"\x00\x0bHello World", app_id=app
    // )
    itxn_begin
    // arc4_conversions/contract.py:32
    // CheckApp.check_dynamic_bytes, b"Hello World", b"\x00\x0bHello World", app_id=app
    bytec 6 // 0x48656c6c6f20576f726c64
    len
    itob
    extract 6 2
    bytec 6 // 0x48656c6c6f20576f726c64
    concat
    bytec_1 // 0x000b48656c6c6f20576f726c64
    len
    itob
    extract 6 2
    bytec_1 // 0x000b48656c6c6f20576f726c64
    concat
    swap
    frame_dig 0
    itxn_field ApplicationID
    // arc4_conversions/contract.py:30-33
    // # bytes
    // arc4.abi_call(
    //     CheckApp.check_dynamic_bytes, b"Hello World", b"\x00\x0bHello World", app_id=app
    // )
    bytec 8 // method "check_dynamic_bytes(byte[],byte[])void"
    itxn_field ApplicationArgs
    itxn_field ApplicationArgs
    itxn_field ApplicationArgs
    intc_1 // appl
    itxn_field TypeEnum
    intc_0 // 0
    itxn_field Fee

test_literal_encoding_next_txn@3:
    // arc4_conversions/contract.py:30-33
    // # bytes
    // arc4.abi_call(
    //     CheckApp.check_dynamic_bytes, b"Hello World", b"\x00\x0bHello World", app_id=app
    // )
    itxn_submit
    // arc4_conversions/contract.py:35-36
    // # string
    // arc4.abi_call(CheckApp.check_string, "Hello World", b"\x00\x0bHello World", app_id=app)
    itxn_begin
    bytec_1 // 0x000b48656c6c6f20576f726c64
    len
    itob
    extract 6 2
    bytec_1 // 0x000b48656c6c6f20576f726c64
    concat
    frame_dig 0
    itxn_field ApplicationID
    bytec 9 // method "check_string(string,byte[])void"
    itxn_field ApplicationArgs
    bytec_1 // 0x000b48656c6c6f20576f726c64
    itxn_field ApplicationArgs
    itxn_field ApplicationArgs
    intc_1 // appl
    itxn_field TypeEnum
    intc_0 // 0
    itxn_field Fee

test_literal_encoding_next_txn@4:
    // arc4_conversions/contract.py:35-36
    // # string
    // arc4.abi_call(CheckApp.check_string, "Hello World", b"\x00\x0bHello World", app_id=app)
    itxn_submit
    // arc4_conversions/contract.py:38-39
    // # biguint
    // arc4.abi_call(CheckApp.check_biguint, BigUInt(), op.bzero(64), app_id=app)
    itxn_begin
    bytec_0 // 0x
    len
    pushint 64 // 64
    <=
    assert // overflow
    pushint 64 // 64
    bzero
    bytec_0 // 0x
    b|
    pushint 64 // 64
    bzero
    dup
    len
    itob
    extract 6 2
    swap
    concat
    swap
    frame_dig 0
    itxn_field ApplicationID
    bytec 10 // method "check_biguint(uint512,byte[])void"
    itxn_field ApplicationArgs
    itxn_field ApplicationArgs
    itxn_field ApplicationArgs
    intc_1 // appl
    itxn_field TypeEnum
    intc_0 // 0
    itxn_field Fee

test_literal_encoding_next_txn@5:
    // arc4_conversions/contract.py:38-39
    // # biguint
    // arc4.abi_call(CheckApp.check_biguint, BigUInt(), op.bzero(64), app_id=app)
    itxn_submit
    // arc4_conversions/contract.py:41-42
    // # bool
    // arc4.abi_call(CheckApp.check_bool, True, b"\x80", app_id=app)
    itxn_begin
    bytec 4 // 0x80
    len
    itob
    extract 6 2
    bytec 4 // 0x80
    concat
    frame_dig 0
    itxn_field ApplicationID
    bytec 11 // method "check_bool(bool,byte[])void"
    itxn_field ApplicationArgs
    bytec 4 // 0x80
    itxn_field ApplicationArgs
    itxn_field ApplicationArgs
    intc_1 // appl
    itxn_field TypeEnum
    intc_0 // 0
    itxn_field Fee

test_literal_encoding_next_txn@6:
    // arc4_conversions/contract.py:41-42
    // # bool
    // arc4.abi_call(CheckApp.check_bool, True, b"\x80", app_id=app)
    itxn_submit
    // arc4_conversions/contract.py:44
    // arc4.abi_call(CheckApp.delete_application, app_id=app)
    itxn_begin
    frame_dig 0
    pushint 5 // DeleteApplication
    itxn_field OnCompletion
    itxn_field ApplicationID
    bytec 5 // method "delete_application()void"
    itxn_field ApplicationArgs
    intc_1 // appl
    itxn_field TypeEnum
    intc_0 // 0
    itxn_field Fee

test_literal_encoding_next_txn@7:
    // arc4_conversions/contract.py:44
    // arc4.abi_call(CheckApp.delete_application, app_id=app)
    itxn_submit
    retsub


// test_cases.arc4_conversions.contract.TestContract.test_native_encoding() -> void:
test_native_encoding:
    // arc4_conversions/contract.py:46-47
    // @arc4.abimethod()
    // def test_native_encoding(self) -> None:
    proto 0 0
    bytec_0 // ""

test_native_encoding_block@0:
    // arc4_conversions/contract.py:48
    // app = arc4.arc4_create(CheckApp).created_app
    itxn_begin
    intc_0 // 0
    itxn_field LocalNumUint
    intc_0 // 0
    itxn_field LocalNumByteSlice
    intc_0 // 0
    itxn_field GlobalNumUint
    intc_0 // 0
    itxn_field GlobalNumByteSlice
    intc_0 // 0
    itxn_field ExtraProgramPages
    bytec_2 // base64(CoEBQw==)
    itxn_field ClearStateProgramPages
    bytec_0 // 0x
    itxn_field ClearStateProgramPages
    bytec_3 // base64(CiACAAExGyITQQG1NhoAgAQzs0megASNdi/fgAQtMp7hgARqTd9zgATW4Le8gATlys0GgASJr1V7gARG4Za9gATzOIbagAQllblagAQ/VSZrgAR9JAlFgAQDUaneTw2ODQE0ARoBAADmAMwAsgCYAH4AZABKADAAFgACIkMxGSISRDEYIhNENhoBiAG3I0L/6zEZIhJEMRgiE0Q2GgE2GgJXAgCIAZMjQv/RMRkiEkQxGCITRDYaATYaAlcCAIgBbyNC/7cxGSISRDEYIhNENhoBNhoCVwIAiAFLI0L/nTEZIhJEMRgiE0Q2GgE2GgJXAgCIAScjQv+DMRkiEkQxGCITRDYaATYaAlcCAIgBAyNC/2kxGSISRDEYIhNENhoBNhoCVwIAiADfI0L/TzEZIhJEMRgiE0Q2GgE2GgJXAgCIALsjQv81MRkiEkQxGCITRDYaATYaAlcCAIgAlyNC/xsxGSISRDEYIhNENhoBNhoCVwIAiABzI0L/ATEZIhJEMRgiE0Q2GgE2GgJXAgCIAE8jQv7nMRkiEkQxGCITRDYaATYaAlcCAIgAKyNC/s0xGYEFEkQxGCITRIgAGCNC/rsxGSJMjgEAA0L+rzEYIhJEI0L+p4mKAgCL/ov/EkSJigIAi/6L/xJEiYoCAIv+i/8SRImKAgCL/ov/EkSJigIAi/6L/xJEiYoCAIv+i/8SRImKAgCL/ov/EkSJigIAi/6L/xJEiYoCAIv+i/8SRImKAgCL/ov/EkSJigIAi/6L/xJEiYoBADEAi/8SRIk=)
    itxn_field ApprovalProgramPages
    bytec_0 // 0x
    itxn_field ApprovalProgramPages
    intc_1 // appl
    itxn_field TypeEnum
    intc_0 // 0
    itxn_field Fee

test_native_encoding_next_txn@1:
    // arc4_conversions/contract.py:48
    // app = arc4.arc4_create(CheckApp).created_app
    itxn_submit
    itxn CreatedApplicationID
    dup
    frame_bury 0
    // arc4_conversions/contract.py:50-51
    // # uint64
    // arc4.abi_call(CheckApp.check_uint64, Txn.num_app_args - 1, op.bzero(8), app_id=app)
    itxn_begin
    txn NumAppArgs
    intc_2 // 1
    -
    itob
    pushint 8 // 8
    bzero
    dup
    len
    itob
    extract 6 2
    swap
    concat
    swap
    uncover 2
    itxn_field ApplicationID
    bytec 7 // method "check_uint64(uint64,byte[])void"
    itxn_field ApplicationArgs
    itxn_field ApplicationArgs
    itxn_field ApplicationArgs
    intc_1 // appl
    itxn_field TypeEnum
    intc_0 // 0
    itxn_field Fee

test_native_encoding_next_txn@2:
    // arc4_conversions/contract.py:50-51
    // # uint64
    // arc4.abi_call(CheckApp.check_uint64, Txn.num_app_args - 1, op.bzero(8), app_id=app)
    itxn_submit
    // arc4_conversions/contract.py:53-59
    // # bytes
    // arc4.abi_call(
    //     CheckApp.check_dynamic_bytes,
    //     Txn.application_args(0),
    //     b"\x00\x04" + Txn.application_args(0),
    //     app_id=app,
    // )
    itxn_begin
    // arc4_conversions/contract.py:56
    // Txn.application_args(0),
    txna ApplicationArgs 0
    dup
    len
    itob
    extract 6 2
    swap
    concat
    // arc4_conversions/contract.py:57
    // b"\x00\x04" + Txn.application_args(0),
    txna ApplicationArgs 0
    bytec 13 // 0x0004
    swap
    concat
    dup
    len
    itob
    extract 6 2
    swap
    concat
    swap
    // arc4_conversions/contract.py:58
    // app_id=app,
    frame_dig 0
    itxn_field ApplicationID
    // arc4_conversions/contract.py:53-59
    // # bytes
    // arc4.abi_call(
    //     CheckApp.check_dynamic_bytes,
    //     Txn.application_args(0),
    //     b"\x00\x04" + Txn.application_args(0),
    //     app_id=app,
    // )
    bytec 8 // method "check_dynamic_bytes(byte[],byte[])void"
    itxn_field ApplicationArgs
    itxn_field ApplicationArgs
    itxn_field ApplicationArgs
    intc_1 // appl
    itxn_field TypeEnum
    intc_0 // 0
    itxn_field Fee

test_native_encoding_next_txn@3:
    // arc4_conversions/contract.py:53-59
    // # bytes
    // arc4.abi_call(
    //     CheckApp.check_dynamic_bytes,
    //     Txn.application_args(0),
    //     b"\x00\x04" + Txn.application_args(0),
    //     app_id=app,
    // )
    itxn_submit
    // arc4_conversions/contract.py:61-64
    // # bytes
    // arc4.abi_call(
    //     CheckApp.check_string, String("Hello World"), b"\x00\x0bHello World", app_id=app
    // )
    itxn_begin
    // arc4_conversions/contract.py:63
    // CheckApp.check_string, String("Hello World"), b"\x00\x0bHello World", app_id=app
    bytec 6 // "Hello World"
    len
    itob
    extract 6 2
    bytec 6 // "Hello World"
    concat
    bytec_1 // 0x000b48656c6c6f20576f726c64
    len
    itob
    extract 6 2
    bytec_1 // 0x000b48656c6c6f20576f726c64
    concat
    swap
    frame_dig 0
    itxn_field ApplicationID
    // arc4_conversions/contract.py:61-64
    // # bytes
    // arc4.abi_call(
    //     CheckApp.check_string, String("Hello World"), b"\x00\x0bHello World", app_id=app
    // )
    bytec 9 // method "check_string(string,byte[])void"
    itxn_field ApplicationArgs
    itxn_field ApplicationArgs
    itxn_field ApplicationArgs
    intc_1 // appl
    itxn_field TypeEnum
    intc_0 // 0
    itxn_field Fee

test_native_encoding_next_txn@4:
    // arc4_conversions/contract.py:61-64
    // # bytes
    // arc4.abi_call(
    //     CheckApp.check_string, String("Hello World"), b"\x00\x0bHello World", app_id=app
    // )
    itxn_submit
    // arc4_conversions/contract.py:66-67
    // # biguint
    // arc4.abi_call(CheckApp.check_biguint, BigUInt(), op.bzero(64), app_id=app)
    itxn_begin
    bytec_0 // 0x
    len
    pushint 64 // 64
    <=
    assert // overflow
    pushint 64 // 64
    bzero
    bytec_0 // 0x
    b|
    pushint 64 // 64
    bzero
    dup
    len
    itob
    extract 6 2
    swap
    concat
    swap
    frame_dig 0
    itxn_field ApplicationID
    bytec 10 // method "check_biguint(uint512,byte[])void"
    itxn_field ApplicationArgs
    itxn_field ApplicationArgs
    itxn_field ApplicationArgs
    intc_1 // appl
    itxn_field TypeEnum
    intc_0 // 0
    itxn_field Fee

test_native_encoding_next_txn@5:
    // arc4_conversions/contract.py:66-67
    // # biguint
    // arc4.abi_call(CheckApp.check_biguint, BigUInt(), op.bzero(64), app_id=app)
    itxn_submit
    // arc4_conversions/contract.py:69-70
    // # bool
    // arc4.abi_call(CheckApp.check_bool, Txn.num_app_args == 1, b"\x80", app_id=app)
    itxn_begin
    txn NumAppArgs
    intc_2 // 1
    ==
    pushbytes 0x00
    intc_0 // 0
    uncover 2
    setbit
    bytec 4 // 0x80
    len
    itob
    extract 6 2
    bytec 4 // 0x80
    concat
    swap
    frame_dig 0
    itxn_field ApplicationID
    bytec 11 // method "check_bool(bool,byte[])void"
    itxn_field ApplicationArgs
    itxn_field ApplicationArgs
    itxn_field ApplicationArgs
    intc_1 // appl
    itxn_field TypeEnum
    intc_0 // 0
    itxn_field Fee

test_native_encoding_next_txn@6:
    // arc4_conversions/contract.py:69-70
    // # bool
    // arc4.abi_call(CheckApp.check_bool, Txn.num_app_args == 1, b"\x80", app_id=app)
    itxn_submit
    // arc4_conversions/contract.py:72
    // arc4.abi_call(CheckApp.delete_application, app_id=app)
    itxn_begin
    frame_dig 0
    pushint 5 // DeleteApplication
    itxn_field OnCompletion
    itxn_field ApplicationID
    bytec 5 // method "delete_application()void"
    itxn_field ApplicationArgs
    intc_1 // appl
    itxn_field TypeEnum
    intc_0 // 0
    itxn_field Fee

test_native_encoding_next_txn@7:
    // arc4_conversions/contract.py:72
    // arc4.abi_call(CheckApp.delete_application, app_id=app)
    itxn_submit
    retsub


// test_cases.arc4_conversions.contract.TestContract.test_arc4_encoding() -> void:
test_arc4_encoding:
    // arc4_conversions/contract.py:74-75
    // @arc4.abimethod()
    // def test_arc4_encoding(self) -> None:
    proto 0 0
    bytec_0 // ""

test_arc4_encoding_block@0:
    // arc4_conversions/contract.py:76
    // app = arc4.arc4_create(CheckApp).created_app
    itxn_begin
    intc_0 // 0
    itxn_field LocalNumUint
    intc_0 // 0
    itxn_field LocalNumByteSlice
    intc_0 // 0
    itxn_field GlobalNumUint
    intc_0 // 0
    itxn_field GlobalNumByteSlice
    intc_0 // 0
    itxn_field ExtraProgramPages
    bytec_2 // base64(CoEBQw==)
    itxn_field ClearStateProgramPages
    bytec_0 // 0x
    itxn_field ClearStateProgramPages
    bytec_3 // base64(CiACAAExGyITQQG1NhoAgAQzs0megASNdi/fgAQtMp7hgARqTd9zgATW4Le8gATlys0GgASJr1V7gARG4Za9gATzOIbagAQllblagAQ/VSZrgAR9JAlFgAQDUaneTw2ODQE0ARoBAADmAMwAsgCYAH4AZABKADAAFgACIkMxGSISRDEYIhNENhoBiAG3I0L/6zEZIhJEMRgiE0Q2GgE2GgJXAgCIAZMjQv/RMRkiEkQxGCITRDYaATYaAlcCAIgBbyNC/7cxGSISRDEYIhNENhoBNhoCVwIAiAFLI0L/nTEZIhJEMRgiE0Q2GgE2GgJXAgCIAScjQv+DMRkiEkQxGCITRDYaATYaAlcCAIgBAyNC/2kxGSISRDEYIhNENhoBNhoCVwIAiADfI0L/TzEZIhJEMRgiE0Q2GgE2GgJXAgCIALsjQv81MRkiEkQxGCITRDYaATYaAlcCAIgAlyNC/xsxGSISRDEYIhNENhoBNhoCVwIAiABzI0L/ATEZIhJEMRgiE0Q2GgE2GgJXAgCIAE8jQv7nMRkiEkQxGCITRDYaATYaAlcCAIgAKyNC/s0xGYEFEkQxGCITRIgAGCNC/rsxGSJMjgEAA0L+rzEYIhJEI0L+p4mKAgCL/ov/EkSJigIAi/6L/xJEiYoCAIv+i/8SRImKAgCL/ov/EkSJigIAi/6L/xJEiYoCAIv+i/8SRImKAgCL/ov/EkSJigIAi/6L/xJEiYoCAIv+i/8SRImKAgCL/ov/EkSJigIAi/6L/xJEiYoBADEAi/8SRIk=)
    itxn_field ApprovalProgramPages
    bytec_0 // 0x
    itxn_field ApprovalProgramPages
    intc_1 // appl
    itxn_field TypeEnum
    intc_0 // 0
    itxn_field Fee

test_arc4_encoding_next_txn@1:
    // arc4_conversions/contract.py:76
    // app = arc4.arc4_create(CheckApp).created_app
    itxn_submit
    itxn CreatedApplicationID
    dup
    frame_bury 0
    // arc4_conversions/contract.py:78-79
    // # uint64
    // arc4.abi_call(CheckApp.check_uint64, arc4.UInt64(), op.bzero(8), app_id=app)
    itxn_begin
    pushint 8 // 8
    bzero
    dup
    len
    itob
    extract 6 2
    swap
    concat
    swap
    itxn_field ApplicationID
    bytec 7 // method "check_uint64(uint64,byte[])void"
    itxn_field ApplicationArgs
    bytec 12 // 0x0000000000000000
    itxn_field ApplicationArgs
    itxn_field ApplicationArgs
    intc_1 // appl
    itxn_field TypeEnum
    intc_0 // 0
    itxn_field Fee

test_arc4_encoding_next_txn@2:
    // arc4_conversions/contract.py:78-79
    // # uint64
    // arc4.abi_call(CheckApp.check_uint64, arc4.UInt64(), op.bzero(8), app_id=app)
    itxn_submit
    // arc4_conversions/contract.py:81-87
    // # bytes
    // arc4.abi_call(
    //     CheckApp.check_dynamic_bytes,
    //     arc4.DynamicBytes(Txn.application_args(0)),
    //     b"\x00\x04" + Txn.application_args(0),
    //     app_id=app,
    // )
    itxn_begin
    // arc4_conversions/contract.py:84
    // arc4.DynamicBytes(Txn.application_args(0)),
    txna ApplicationArgs 0
    dup
    len
    itob
    extract 6 2
    swap
    concat
    // arc4_conversions/contract.py:85
    // b"\x00\x04" + Txn.application_args(0),
    txna ApplicationArgs 0
    bytec 13 // 0x0004
    swap
    concat
    dup
    len
    itob
    extract 6 2
    swap
    concat
    swap
    // arc4_conversions/contract.py:86
    // app_id=app,
    frame_dig 0
    itxn_field ApplicationID
    // arc4_conversions/contract.py:81-87
    // # bytes
    // arc4.abi_call(
    //     CheckApp.check_dynamic_bytes,
    //     arc4.DynamicBytes(Txn.application_args(0)),
    //     b"\x00\x04" + Txn.application_args(0),
    //     app_id=app,
    // )
    bytec 8 // method "check_dynamic_bytes(byte[],byte[])void"
    itxn_field ApplicationArgs
    itxn_field ApplicationArgs
    itxn_field ApplicationArgs
    intc_1 // appl
    itxn_field TypeEnum
    intc_0 // 0
    itxn_field Fee

test_arc4_encoding_next_txn@3:
    // arc4_conversions/contract.py:81-87
    // # bytes
    // arc4.abi_call(
    //     CheckApp.check_dynamic_bytes,
    //     arc4.DynamicBytes(Txn.application_args(0)),
    //     b"\x00\x04" + Txn.application_args(0),
    //     app_id=app,
    // )
    itxn_submit
    // arc4_conversions/contract.py:89-92
    // # bytes
    // arc4.abi_call(
    //     CheckApp.check_string, arc4.String("Hello World"), b"\x00\x0bHello World", app_id=app
    // )
    itxn_begin
    // arc4_conversions/contract.py:91
    // CheckApp.check_string, arc4.String("Hello World"), b"\x00\x0bHello World", app_id=app
    bytec_1 // 0x000b48656c6c6f20576f726c64
    len
    itob
    extract 6 2
    bytec_1 // 0x000b48656c6c6f20576f726c64
    concat
    frame_dig 0
    itxn_field ApplicationID
    // arc4_conversions/contract.py:89-92
    // # bytes
    // arc4.abi_call(
    //     CheckApp.check_string, arc4.String("Hello World"), b"\x00\x0bHello World", app_id=app
    // )
    bytec 9 // method "check_string(string,byte[])void"
    itxn_field ApplicationArgs
    // arc4_conversions/contract.py:91
    // CheckApp.check_string, arc4.String("Hello World"), b"\x00\x0bHello World", app_id=app
    bytec_1 // 0x000b48656c6c6f20576f726c64
    itxn_field ApplicationArgs
    itxn_field ApplicationArgs
    // arc4_conversions/contract.py:89-92
    // # bytes
    // arc4.abi_call(
    //     CheckApp.check_string, arc4.String("Hello World"), b"\x00\x0bHello World", app_id=app
    // )
    intc_1 // appl
    itxn_field TypeEnum
    intc_0 // 0
    itxn_field Fee

test_arc4_encoding_next_txn@4:
    // arc4_conversions/contract.py:89-92
    // # bytes
    // arc4.abi_call(
    //     CheckApp.check_string, arc4.String("Hello World"), b"\x00\x0bHello World", app_id=app
    // )
    itxn_submit
    // arc4_conversions/contract.py:94-95
    // # biguint
    // arc4.abi_call(CheckApp.check_biguint, arc4.UInt512(), op.bzero(64), app_id=app)
    itxn_begin
    pushint 64 // 64
    bzero
    dup
    len
    itob
    extract 6 2
    swap
    concat
    frame_dig 0
    itxn_field ApplicationID
    bytec 10 // method "check_biguint(uint512,byte[])void"
    itxn_field ApplicationArgs
    pushbytes 0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
    itxn_field ApplicationArgs
    itxn_field ApplicationArgs
    intc_1 // appl
    itxn_field TypeEnum
    intc_0 // 0
    itxn_field Fee

test_arc4_encoding_next_txn@5:
    // arc4_conversions/contract.py:94-95
    // # biguint
    // arc4.abi_call(CheckApp.check_biguint, arc4.UInt512(), op.bzero(64), app_id=app)
    itxn_submit
    // arc4_conversions/contract.py:97-98
    // # bool
    // arc4.abi_call(CheckApp.check_bool, arc4.Bool(Txn.num_app_args == 1), b"\x80", app_id=app)
    itxn_begin
    txn NumAppArgs
    intc_2 // 1
    ==
    pushbytes 0x00
    intc_0 // 0
    uncover 2
    setbit
    bytec 4 // 0x80
    len
    itob
    extract 6 2
    bytec 4 // 0x80
    concat
    swap
    frame_dig 0
    itxn_field ApplicationID
    bytec 11 // method "check_bool(bool,byte[])void"
    itxn_field ApplicationArgs
    itxn_field ApplicationArgs
    itxn_field ApplicationArgs
    intc_1 // appl
    itxn_field TypeEnum
    intc_0 // 0
    itxn_field Fee

test_arc4_encoding_next_txn@6:
    // arc4_conversions/contract.py:97-98
    // # bool
    // arc4.abi_call(CheckApp.check_bool, arc4.Bool(Txn.num_app_args == 1), b"\x80", app_id=app)
    itxn_submit
    // arc4_conversions/contract.py:100
    // arc4.abi_call(CheckApp.delete_application, app_id=app)
    itxn_begin
    frame_dig 0
    pushint 5 // DeleteApplication
    itxn_field OnCompletion
    itxn_field ApplicationID
    bytec 5 // method "delete_application()void"
    itxn_field ApplicationArgs
    intc_1 // appl
    itxn_field TypeEnum
    intc_0 // 0
    itxn_field Fee

test_arc4_encoding_next_txn@7:
    // arc4_conversions/contract.py:100
    // arc4.abi_call(CheckApp.delete_application, app_id=app)
    itxn_submit
    retsub


// test_cases.arc4_conversions.contract.TestContract.test_array_uint64_encoding() -> void:
test_array_uint64_encoding:
    // arc4_conversions/contract.py:102-103
    // @arc4.abimethod()
    // def test_array_uint64_encoding(self) -> None:
    proto 0 0
    intc_0 // 0
    bytec_0 // ""

test_array_uint64_encoding_block@0:
    // arc4_conversions/contract.py:104
    // app = arc4.arc4_create(CheckApp).created_app
    itxn_begin
    intc_0 // 0
    itxn_field LocalNumUint
    intc_0 // 0
    itxn_field LocalNumByteSlice
    intc_0 // 0
    itxn_field GlobalNumUint
    intc_0 // 0
    itxn_field GlobalNumByteSlice
    intc_0 // 0
    itxn_field ExtraProgramPages
    bytec_2 // base64(CoEBQw==)
    itxn_field ClearStateProgramPages
    bytec_0 // 0x
    itxn_field ClearStateProgramPages
    bytec_3 // base64(CiACAAExGyITQQG1NhoAgAQzs0megASNdi/fgAQtMp7hgARqTd9zgATW4Le8gATlys0GgASJr1V7gARG4Za9gATzOIbagAQllblagAQ/VSZrgAR9JAlFgAQDUaneTw2ODQE0ARoBAADmAMwAsgCYAH4AZABKADAAFgACIkMxGSISRDEYIhNENhoBiAG3I0L/6zEZIhJEMRgiE0Q2GgE2GgJXAgCIAZMjQv/RMRkiEkQxGCITRDYaATYaAlcCAIgBbyNC/7cxGSISRDEYIhNENhoBNhoCVwIAiAFLI0L/nTEZIhJEMRgiE0Q2GgE2GgJXAgCIAScjQv+DMRkiEkQxGCITRDYaATYaAlcCAIgBAyNC/2kxGSISRDEYIhNENhoBNhoCVwIAiADfI0L/TzEZIhJEMRgiE0Q2GgE2GgJXAgCIALsjQv81MRkiEkQxGCITRDYaATYaAlcCAIgAlyNC/xsxGSISRDEYIhNENhoBNhoCVwIAiABzI0L/ATEZIhJEMRgiE0Q2GgE2GgJXAgCIAE8jQv7nMRkiEkQxGCITRDYaATYaAlcCAIgAKyNC/s0xGYEFEkQxGCITRIgAGCNC/rsxGSJMjgEAA0L+rzEYIhJEI0L+p4mKAgCL/ov/EkSJigIAi/6L/xJEiYoCAIv+i/8SRImKAgCL/ov/EkSJigIAi/6L/xJEiYoCAIv+i/8SRImKAgCL/ov/EkSJigIAi/6L/xJEiYoCAIv+i/8SRImKAgCL/ov/EkSJigIAi/6L/xJEiYoBADEAi/8SRIk=)
    itxn_field ApprovalProgramPages
    bytec_0 // 0x
    itxn_field ApprovalProgramPages
    intc_1 // appl
    itxn_field TypeEnum
    intc_0 // 0
    itxn_field Fee

test_array_uint64_encoding_next_txn@1:
    // arc4_conversions/contract.py:104
    // app = arc4.arc4_create(CheckApp).created_app
    itxn_submit
    itxn CreatedApplicationID
    dup
    frame_bury 1
    // arc4_conversions/contract.py:106
    // arr = ImmutableArray(Txn.num_app_args, Txn.num_app_args + 1, Txn.num_app_args + 2)
    txn NumAppArgs
    dup
    intc_2 // 1
    +
    swap
    txn NumAppArgs
    intc_3 // 2
    +
    cover 2
    itob
    bytec_0 // 0x
    swap
    concat
    swap
    itob
    concat
    swap
    itob
    concat
    bytec_0 // 0x
    concat
    pushint 3 // 3
    itob
    extract 6 2
    swap
    concat
    // arc4_conversions/contract.py:108
    // b"\x00\x03" + op.bzero(7) + b"\x01" + op.bzero(7) + b"\x02" + op.bzero(7) + b"\x03"
    pushint 7 // 7
    bzero
    bytec 14 // 0x0003
    swap
    concat
    pushbytes 0x01
    concat
    pushint 7 // 7
    bzero
    concat
    pushbytes 0x02
    concat
    pushint 7 // 7
    bzero
    concat
    pushbytes 0x03
    concat
    // arc4_conversions/contract.py:107-109
    // expected_bytes = (
    //     b"\x00\x03" + op.bzero(7) + b"\x01" + op.bzero(7) + b"\x02" + op.bzero(7) + b"\x03"
    // )
    dup
    frame_bury 0
    // arc4_conversions/contract.py:110
    // arc4.abi_call(CheckApp.check_dyn_array_uin64, arr, expected_bytes, app_id=app)
    itxn_begin
    dup
    len
    itob
    extract 6 2
    swap
    concat
    swap
    uncover 2
    itxn_field ApplicationID
    bytec 15 // method "check_dyn_array_uin64(uint64[],byte[])void"
    itxn_field ApplicationArgs
    itxn_field ApplicationArgs
    itxn_field ApplicationArgs
    intc_1 // appl
    itxn_field TypeEnum
    intc_0 // 0
    itxn_field Fee

test_array_uint64_encoding_next_txn@2:
    // arc4_conversions/contract.py:110
    // arc4.abi_call(CheckApp.check_dyn_array_uin64, arr, expected_bytes, app_id=app)
    itxn_submit
    // arc4_conversions/contract.py:111-116
    // arc4.abi_call(
    //     CheckApp.check_dyn_array_uin64,
    //     (Txn.num_app_args, Txn.num_app_args + 1, Txn.num_app_args + 2),
    //     expected_bytes,
    //     app_id=app,
    // )
    itxn_begin
    // arc4_conversions/contract.py:113
    // (Txn.num_app_args, Txn.num_app_args + 1, Txn.num_app_args + 2),
    txn NumAppArgs
    dup
    intc_2 // 1
    +
    swap
    txn NumAppArgs
    intc_3 // 2
    +
    cover 2
    itob
    bytec_0 // 0x
    swap
    concat
    swap
    itob
    concat
    swap
    itob
    concat
    bytec_0 // 0x
    concat
    pushint 3 // 3
    itob
    extract 6 2
    swap
    concat
    // arc4_conversions/contract.py:114
    // expected_bytes,
    frame_dig 0
    dup
    len
    itob
    extract 6 2
    swap
    concat
    swap
    // arc4_conversions/contract.py:115
    // app_id=app,
    frame_dig 1
    itxn_field ApplicationID
    // arc4_conversions/contract.py:111-116
    // arc4.abi_call(
    //     CheckApp.check_dyn_array_uin64,
    //     (Txn.num_app_args, Txn.num_app_args + 1, Txn.num_app_args + 2),
    //     expected_bytes,
    //     app_id=app,
    // )
    bytec 15 // method "check_dyn_array_uin64(uint64[],byte[])void"
    itxn_field ApplicationArgs
    itxn_field ApplicationArgs
    itxn_field ApplicationArgs
    intc_1 // appl
    itxn_field TypeEnum
    intc_0 // 0
    itxn_field Fee

test_array_uint64_encoding_next_txn@3:
    // arc4_conversions/contract.py:111-116
    // arc4.abi_call(
    //     CheckApp.check_dyn_array_uin64,
    //     (Txn.num_app_args, Txn.num_app_args + 1, Txn.num_app_args + 2),
    //     expected_bytes,
    //     app_id=app,
    // )
    itxn_submit
    // arc4_conversions/contract.py:117-122
    // arc4.abi_call(
    //     CheckApp.check_static_array_uin64_3,
    //     (Txn.num_app_args, Txn.num_app_args + 1, Txn.num_app_args + 2),
    //     expected_bytes[2:],
    //     app_id=app,
    // )
    itxn_begin
    // arc4_conversions/contract.py:119
    // (Txn.num_app_args, Txn.num_app_args + 1, Txn.num_app_args + 2),
    txn NumAppArgs
    dup
    intc_2 // 1
    +
    swap
    txn NumAppArgs
    intc_3 // 2
    +
    cover 2
    itob
    bytec_0 // 0x
    swap
    concat
    swap
    itob
    concat
    swap
    itob
    concat
    bytec_0 // 0x
    concat
    // arc4_conversions/contract.py:120
    // expected_bytes[2:],
    frame_dig 0
    dup
    len
    intc_3 // 2
    dig 1
    >=
    intc_3 // 2
    dig 2
    uncover 2
    select
    uncover 2
    swap
    uncover 2
    substring3
    dup
    len
    itob
    extract 6 2
    swap
    concat
    swap
    // arc4_conversions/contract.py:121
    // app_id=app,
    frame_dig 1
    itxn_field ApplicationID
    // arc4_conversions/contract.py:117-122
    // arc4.abi_call(
    //     CheckApp.check_static_array_uin64_3,
    //     (Txn.num_app_args, Txn.num_app_args + 1, Txn.num_app_args + 2),
    //     expected_bytes[2:],
    //     app_id=app,
    // )
    pushbytes 0x46e196bd // method "check_static_array_uin64_3(uint64[3],byte[])void"
    itxn_field ApplicationArgs
    itxn_field ApplicationArgs
    itxn_field ApplicationArgs
    intc_1 // appl
    itxn_field TypeEnum
    intc_0 // 0
    itxn_field Fee

test_array_uint64_encoding_next_txn@4:
    // arc4_conversions/contract.py:117-122
    // arc4.abi_call(
    //     CheckApp.check_static_array_uin64_3,
    //     (Txn.num_app_args, Txn.num_app_args + 1, Txn.num_app_args + 2),
    //     expected_bytes[2:],
    //     app_id=app,
    // )
    itxn_submit
    // arc4_conversions/contract.py:124
    // arc4.abi_call(CheckApp.delete_application, app_id=app)
    itxn_begin
    frame_dig 1
    pushint 5 // DeleteApplication
    itxn_field OnCompletion
    itxn_field ApplicationID
    bytec 5 // method "delete_application()void"
    itxn_field ApplicationArgs
    intc_1 // appl
    itxn_field TypeEnum
    intc_0 // 0
    itxn_field Fee

test_array_uint64_encoding_next_txn@5:
    // arc4_conversions/contract.py:124
    // arc4.abi_call(CheckApp.delete_application, app_id=app)
    itxn_submit
    retsub


// test_cases.arc4_conversions.contract.TestContract.test_array_static_encoding() -> void:
test_array_static_encoding:
    // arc4_conversions/contract.py:126-127
    // @arc4.abimethod()
    // def test_array_static_encoding(self) -> None:
    proto 0 0
    bytec_0 // ""

test_array_static_encoding_block@0:
    // arc4_conversions/contract.py:128
    // app = arc4.arc4_create(CheckApp).created_app
    itxn_begin
    intc_0 // 0
    itxn_field LocalNumUint
    intc_0 // 0
    itxn_field LocalNumByteSlice
    intc_0 // 0
    itxn_field GlobalNumUint
    intc_0 // 0
    itxn_field GlobalNumByteSlice
    intc_0 // 0
    itxn_field ExtraProgramPages
    bytec_2 // base64(CoEBQw==)
    itxn_field ClearStateProgramPages
    bytec_0 // 0x
    itxn_field ClearStateProgramPages
    bytec_3 // base64(CiACAAExGyITQQG1NhoAgAQzs0megASNdi/fgAQtMp7hgARqTd9zgATW4Le8gATlys0GgASJr1V7gARG4Za9gATzOIbagAQllblagAQ/VSZrgAR9JAlFgAQDUaneTw2ODQE0ARoBAADmAMwAsgCYAH4AZABKADAAFgACIkMxGSISRDEYIhNENhoBiAG3I0L/6zEZIhJEMRgiE0Q2GgE2GgJXAgCIAZMjQv/RMRkiEkQxGCITRDYaATYaAlcCAIgBbyNC/7cxGSISRDEYIhNENhoBNhoCVwIAiAFLI0L/nTEZIhJEMRgiE0Q2GgE2GgJXAgCIAScjQv+DMRkiEkQxGCITRDYaATYaAlcCAIgBAyNC/2kxGSISRDEYIhNENhoBNhoCVwIAiADfI0L/TzEZIhJEMRgiE0Q2GgE2GgJXAgCIALsjQv81MRkiEkQxGCITRDYaATYaAlcCAIgAlyNC/xsxGSISRDEYIhNENhoBNhoCVwIAiABzI0L/ATEZIhJEMRgiE0Q2GgE2GgJXAgCIAE8jQv7nMRkiEkQxGCITRDYaATYaAlcCAIgAKyNC/s0xGYEFEkQxGCITRIgAGCNC/rsxGSJMjgEAA0L+rzEYIhJEI0L+p4mKAgCL/ov/EkSJigIAi/6L/xJEiYoCAIv+i/8SRImKAgCL/ov/EkSJigIAi/6L/xJEiYoCAIv+i/8SRImKAgCL/ov/EkSJigIAi/6L/xJEiYoCAIv+i/8SRImKAgCL/ov/EkSJigIAi/6L/xJEiYoBADEAi/8SRIk=)
    itxn_field ApprovalProgramPages
    bytec_0 // 0x
    itxn_field ApprovalProgramPages
    intc_1 // appl
    itxn_field TypeEnum
    intc_0 // 0
    itxn_field Fee

test_array_static_encoding_next_txn@1:
    // arc4_conversions/contract.py:128
    // app = arc4.arc4_create(CheckApp).created_app
    itxn_submit
    itxn CreatedApplicationID
    dup
    frame_bury 0
    // arc4_conversions/contract.py:130
    // arr = ImmutableArray(my_struct(UInt64(1)), my_struct(UInt64(2)), my_struct(UInt64(3)))
    intc_2 // 1
    callsub my_struct
    swap
    intc_3 // 2
    callsub my_struct
    cover 3
    cover 2
    pushint 3 // 3
    callsub my_struct
    cover 5
    cover 4
    itob
    bytec_0 // 0x
    swap
    concat
    dig 1
    len
    pushint 32 // 32
    ==
    assert // invalid size
    swap
    concat
    bytec_0 // 0x
    concat
    bytec_0 // 0x
    swap
    concat
    swap
    itob
    bytec_0 // 0x
    swap
    concat
    dig 2
    len
    pushint 32 // 32
    ==
    assert // invalid size
    uncover 2
    concat
    bytec_0 // 0x
    concat
    concat
    swap
    itob
    bytec_0 // 0x
    swap
    concat
    dig 2
    len
    pushint 32 // 32
    ==
    assert // invalid size
    uncover 2
    concat
    bytec_0 // 0x
    concat
    concat
    bytec_0 // 0x
    concat
    pushint 3 // 3
    itob
    extract 6 2
    swap
    concat
    // arc4_conversions/contract.py:133
    // + (op.bzero(7) + b"\x01")
    pushint 7 // 7
    bzero
    pushbytes 0x01
    concat
    // arc4_conversions/contract.py:132
    // b"\x00\x03"
    bytec 14 // 0x0003
    // arc4_conversions/contract.py:132-133
    // b"\x00\x03"
    // + (op.bzero(7) + b"\x01")
    swap
    concat
    // arc4_conversions/contract.py:134
    // + Txn.sender.bytes
    txn Sender
    // arc4_conversions/contract.py:132-134
    // b"\x00\x03"
    // + (op.bzero(7) + b"\x01")
    // + Txn.sender.bytes
    concat
    // arc4_conversions/contract.py:135
    // + (op.bzero(7) + b"\x02")
    pushint 7 // 7
    bzero
    pushbytes 0x02
    concat
    // arc4_conversions/contract.py:132-135
    // b"\x00\x03"
    // + (op.bzero(7) + b"\x01")
    // + Txn.sender.bytes
    // + (op.bzero(7) + b"\x02")
    concat
    // arc4_conversions/contract.py:136
    // + Txn.sender.bytes
    txn Sender
    // arc4_conversions/contract.py:132-136
    // b"\x00\x03"
    // + (op.bzero(7) + b"\x01")
    // + Txn.sender.bytes
    // + (op.bzero(7) + b"\x02")
    // + Txn.sender.bytes
    concat
    // arc4_conversions/contract.py:137
    // + (op.bzero(7) + b"\x03")
    pushint 7 // 7
    bzero
    pushbytes 0x03
    concat
    // arc4_conversions/contract.py:132-137
    // b"\x00\x03"
    // + (op.bzero(7) + b"\x01")
    // + Txn.sender.bytes
    // + (op.bzero(7) + b"\x02")
    // + Txn.sender.bytes
    // + (op.bzero(7) + b"\x03")
    concat
    // arc4_conversions/contract.py:138
    // + Txn.sender.bytes
    txn Sender
    // arc4_conversions/contract.py:132-138
    // b"\x00\x03"
    // + (op.bzero(7) + b"\x01")
    // + Txn.sender.bytes
    // + (op.bzero(7) + b"\x02")
    // + Txn.sender.bytes
    // + (op.bzero(7) + b"\x03")
    // + Txn.sender.bytes
    concat
    // arc4_conversions/contract.py:131-139
    // expected_bytes = (
    //     b"\x00\x03"
    //     + (op.bzero(7) + b"\x01")
    //     + Txn.sender.bytes
    //     + (op.bzero(7) + b"\x02")
    //     + Txn.sender.bytes
    //     + (op.bzero(7) + b"\x03")
    //     + Txn.sender.bytes
    // )
    dup
    cover 3
    // arc4_conversions/contract.py:140
    // arc4.abi_call(CheckApp.check_dyn_array_struct, arr, expected_bytes, app_id=app)
    itxn_begin
    dup
    len
    itob
    extract 6 2
    swap
    concat
    swap
    uncover 2
    itxn_field ApplicationID
    pushbytes 0xf33886da // method "check_dyn_array_struct((uint64,address)[],byte[])void"
    itxn_field ApplicationArgs
    itxn_field ApplicationArgs
    itxn_field ApplicationArgs
    intc_1 // appl
    itxn_field TypeEnum
    intc_0 // 0
    itxn_field Fee

test_array_static_encoding_next_txn@2:
    // arc4_conversions/contract.py:140
    // arc4.abi_call(CheckApp.check_dyn_array_struct, arr, expected_bytes, app_id=app)
    itxn_submit
    // arc4_conversions/contract.py:141-146
    // arc4.abi_call(
    //     CheckApp.check_static_array_struct,
    //     (my_struct(UInt64(1)), my_struct(UInt64(2)), my_struct(UInt64(3))),
    //     expected_bytes[2:],
    //     app_id=app,
    // )
    itxn_begin
    // arc4_conversions/contract.py:143
    // (my_struct(UInt64(1)), my_struct(UInt64(2)), my_struct(UInt64(3))),
    intc_2 // 1
    callsub my_struct
    swap
    intc_3 // 2
    callsub my_struct
    cover 3
    cover 2
    pushint 3 // 3
    callsub my_struct
    cover 5
    cover 4
    itob
    bytec_0 // 0x
    swap
    concat
    dig 1
    len
    pushint 32 // 32
    ==
    assert // invalid size
    swap
    concat
    bytec_0 // 0x
    concat
    bytec_0 // 0x
    swap
    concat
    swap
    itob
    bytec_0 // 0x
    swap
    concat
    dig 2
    len
    pushint 32 // 32
    ==
    assert // invalid size
    uncover 2
    concat
    bytec_0 // 0x
    concat
    concat
    swap
    itob
    bytec_0 // 0x
    swap
    concat
    dig 2
    len
    pushint 32 // 32
    ==
    assert // invalid size
    uncover 2
    concat
    bytec_0 // 0x
    concat
    concat
    bytec_0 // 0x
    concat
    // arc4_conversions/contract.py:144
    // expected_bytes[2:],
    swap
    dup
    len
    intc_3 // 2
    dig 1
    >=
    intc_3 // 2
    dig 2
    uncover 2
    select
    uncover 2
    swap
    uncover 2
    substring3
    dup
    len
    itob
    extract 6 2
    swap
    concat
    swap
    // arc4_conversions/contract.py:145
    // app_id=app,
    frame_dig 0
    itxn_field ApplicationID
    // arc4_conversions/contract.py:141-146
    // arc4.abi_call(
    //     CheckApp.check_static_array_struct,
    //     (my_struct(UInt64(1)), my_struct(UInt64(2)), my_struct(UInt64(3))),
    //     expected_bytes[2:],
    //     app_id=app,
    // )
    pushbytes 0x2595b95a // method "check_static_array_struct((uint64,address)[3],byte[])void"
    itxn_field ApplicationArgs
    itxn_field ApplicationArgs
    itxn_field ApplicationArgs
    intc_1 // appl
    itxn_field TypeEnum
    intc_0 // 0
    itxn_field Fee

test_array_static_encoding_next_txn@3:
    // arc4_conversions/contract.py:141-146
    // arc4.abi_call(
    //     CheckApp.check_static_array_struct,
    //     (my_struct(UInt64(1)), my_struct(UInt64(2)), my_struct(UInt64(3))),
    //     expected_bytes[2:],
    //     app_id=app,
    // )
    itxn_submit
    // arc4_conversions/contract.py:148
    // arc4.abi_call(CheckApp.delete_application, app_id=app)
    itxn_begin
    frame_dig 0
    pushint 5 // DeleteApplication
    itxn_field OnCompletion
    itxn_field ApplicationID
    bytec 5 // method "delete_application()void"
    itxn_field ApplicationArgs
    intc_1 // appl
    itxn_field TypeEnum
    intc_0 // 0
    itxn_field Fee

test_array_static_encoding_next_txn@4:
    // arc4_conversions/contract.py:148
    // arc4.abi_call(CheckApp.delete_application, app_id=app)
    itxn_submit
    retsub


// test_cases.arc4_conversions.contract.TestContract.test_array_dynamic_encoding() -> void:
test_array_dynamic_encoding:
    // arc4_conversions/contract.py:150-151
    // @arc4.abimethod()
    // def test_array_dynamic_encoding(self) -> None:
    proto 0 0
    bytec_0 // ""

test_array_dynamic_encoding_block@0:
    // arc4_conversions/contract.py:152
    // app = arc4.arc4_create(CheckApp).created_app
    itxn_begin
    intc_0 // 0
    itxn_field LocalNumUint
    intc_0 // 0
    itxn_field LocalNumByteSlice
    intc_0 // 0
    itxn_field GlobalNumUint
    intc_0 // 0
    itxn_field GlobalNumByteSlice
    intc_0 // 0
    itxn_field ExtraProgramPages
    bytec_2 // base64(CoEBQw==)
    itxn_field ClearStateProgramPages
    bytec_0 // 0x
    itxn_field ClearStateProgramPages
    bytec_3 // base64(CiACAAExGyITQQG1NhoAgAQzs0megASNdi/fgAQtMp7hgARqTd9zgATW4Le8gATlys0GgASJr1V7gARG4Za9gATzOIbagAQllblagAQ/VSZrgAR9JAlFgAQDUaneTw2ODQE0ARoBAADmAMwAsgCYAH4AZABKADAAFgACIkMxGSISRDEYIhNENhoBiAG3I0L/6zEZIhJEMRgiE0Q2GgE2GgJXAgCIAZMjQv/RMRkiEkQxGCITRDYaATYaAlcCAIgBbyNC/7cxGSISRDEYIhNENhoBNhoCVwIAiAFLI0L/nTEZIhJEMRgiE0Q2GgE2GgJXAgCIAScjQv+DMRkiEkQxGCITRDYaATYaAlcCAIgBAyNC/2kxGSISRDEYIhNENhoBNhoCVwIAiADfI0L/TzEZIhJEMRgiE0Q2GgE2GgJXAgCIALsjQv81MRkiEkQxGCITRDYaATYaAlcCAIgAlyNC/xsxGSISRDEYIhNENhoBNhoCVwIAiABzI0L/ATEZIhJEMRgiE0Q2GgE2GgJXAgCIAE8jQv7nMRkiEkQxGCITRDYaATYaAlcCAIgAKyNC/s0xGYEFEkQxGCITRIgAGCNC/rsxGSJMjgEAA0L+rzEYIhJEI0L+p4mKAgCL/ov/EkSJigIAi/6L/xJEiYoCAIv+i/8SRImKAgCL/ov/EkSJigIAi/6L/xJEiYoCAIv+i/8SRImKAgCL/ov/EkSJigIAi/6L/xJEiYoCAIv+i/8SRImKAgCL/ov/EkSJigIAi/6L/xJEiYoBADEAi/8SRIk=)
    itxn_field ApprovalProgramPages
    bytec_0 // 0x
    itxn_field ApprovalProgramPages
    intc_1 // appl
    itxn_field TypeEnum
    intc_0 // 0
    itxn_field Fee

test_array_dynamic_encoding_next_txn@1:
    // arc4_conversions/contract.py:152
    // app = arc4.arc4_create(CheckApp).created_app
    itxn_submit
    itxn CreatedApplicationID
    dup
    frame_bury 0
    // arc4_conversions/contract.py:155
    // my_dyn_struct(UInt64(1)), my_dyn_struct(UInt64(2)), my_dyn_struct(UInt64(3))
    intc_2 // 1
    callsub my_dyn_struct
    cover 2
    swap
    intc_3 // 2
    callsub my_dyn_struct
    cover 5
    cover 4
    cover 3
    pushint 3 // 3
    callsub my_dyn_struct
    cover 8
    cover 7
    cover 6
    // arc4_conversions/contract.py:154-156
    // arr = ImmutableArray(
    //     my_dyn_struct(UInt64(1)), my_dyn_struct(UInt64(2)), my_dyn_struct(UInt64(3))
    // )
    itob
    bytec_0 // 0x
    swap
    concat
    dig 1
    len
    pushint 32 // 32
    ==
    assert // invalid size
    swap
    concat
    dig 1
    len
    itob
    extract 6 2
    uncover 2
    concat
    bytec_0 // 0x
    swap
    concat
    pushint 42 // 42
    itob
    extract 6 2
    uncover 2
    swap
    concat
    swap
    concat
    bytec_0 // 0x
    dig 1
    concat
    swap
    len
    intc_1 // 6
    +
    swap
    intc_1 // 6
    itob
    extract 6 2
    bytec_0 // 0x
    swap
    concat
    cover 2
    uncover 3
    itob
    bytec_0 // 0x
    swap
    concat
    dig 4
    len
    pushint 32 // 32
    ==
    assert // invalid size
    uncover 4
    concat
    dig 4
    len
    itob
    extract 6 2
    uncover 5
    concat
    bytec_0 // 0x
    swap
    concat
    pushint 42 // 42
    itob
    extract 6 2
    uncover 2
    swap
    concat
    swap
    concat
    swap
    dig 1
    concat
    cover 3
    len
    dig 1
    +
    swap
    itob
    extract 6 2
    uncover 2
    swap
    concat
    uncover 3
    itob
    bytec_0 // 0x
    swap
    concat
    dig 4
    len
    pushint 32 // 32
    ==
    assert // invalid size
    uncover 4
    concat
    dig 4
    len
    itob
    extract 6 2
    uncover 5
    concat
    bytec_0 // 0x
    swap
    concat
    pushint 42 // 42
    itob
    extract 6 2
    uncover 2
    swap
    concat
    swap
    concat
    uncover 3
    swap
    concat
    uncover 2
    itob
    extract 6 2
    uncover 2
    swap
    concat
    swap
    concat
    pushint 3 // 3
    itob
    extract 6 2
    swap
    concat
    // arc4_conversions/contract.py:158
    // my_dyn_struct_arc4(UInt64(1)),
    intc_2 // 1
    callsub my_dyn_struct_arc4
    // arc4_conversions/contract.py:159
    // my_dyn_struct_arc4(UInt64(2)),
    intc_3 // 2
    callsub my_dyn_struct_arc4
    swap
    // arc4_conversions/contract.py:160
    // my_dyn_struct_arc4(UInt64(3)),
    pushint 3 // 3
    callsub my_dyn_struct_arc4
    cover 2
    // arc4_conversions/contract.py:157-161
    // expected_bytes = arc4.DynamicArray(
    //     my_dyn_struct_arc4(UInt64(1)),
    //     my_dyn_struct_arc4(UInt64(2)),
    //     my_dyn_struct_arc4(UInt64(3)),
    // ).bytes
    bytec_0 // 0x
    dig 1
    concat
    swap
    len
    intc_1 // 6
    +
    swap
    intc_1 // 6
    itob
    extract 6 2
    bytec_0 // 0x
    swap
    concat
    cover 2
    dig 3
    concat
    cover 3
    uncover 2
    len
    dig 1
    +
    swap
    itob
    extract 6 2
    uncover 2
    swap
    concat
    uncover 2
    uncover 3
    concat
    swap
    uncover 2
    itob
    extract 6 2
    concat
    swap
    concat
    pushint 3 // 3
    itob
    extract 6 2
    swap
    concat
    // arc4_conversions/contract.py:162
    // arc4.abi_call(CheckApp.check_dyn_array_dyn_struct, arr, expected_bytes, app_id=app)
    itxn_begin
    dup
    len
    itob
    extract 6 2
    swap
    concat
    swap
    uncover 2
    itxn_field ApplicationID
    pushbytes 0x3f55266b // method "check_dyn_array_dyn_struct((uint64,address,byte[])[],byte[])void"
    itxn_field ApplicationArgs
    itxn_field ApplicationArgs
    itxn_field ApplicationArgs
    intc_1 // appl
    itxn_field TypeEnum
    intc_0 // 0
    itxn_field Fee

test_array_dynamic_encoding_next_txn@2:
    // arc4_conversions/contract.py:162
    // arc4.abi_call(CheckApp.check_dyn_array_dyn_struct, arr, expected_bytes, app_id=app)
    itxn_submit
    // arc4_conversions/contract.py:165
    // my_dyn_struct_arc4(UInt64(1)),
    intc_2 // 1
    callsub my_dyn_struct_arc4
    // arc4_conversions/contract.py:166
    // my_dyn_struct_arc4(UInt64(2)),
    intc_3 // 2
    callsub my_dyn_struct_arc4
    swap
    // arc4_conversions/contract.py:167
    // my_dyn_struct_arc4(UInt64(3)),
    pushint 3 // 3
    callsub my_dyn_struct_arc4
    cover 2
    // arc4_conversions/contract.py:164-168
    // expected_bytes = arc4.StaticArray(
    //     my_dyn_struct_arc4(UInt64(1)),
    //     my_dyn_struct_arc4(UInt64(2)),
    //     my_dyn_struct_arc4(UInt64(3)),
    // ).bytes
    bytec_0 // 0x
    dig 1
    concat
    swap
    len
    intc_1 // 6
    +
    swap
    intc_1 // 6
    itob
    extract 6 2
    bytec_0 // 0x
    swap
    concat
    cover 2
    dig 3
    concat
    cover 3
    uncover 2
    len
    dig 1
    +
    swap
    itob
    extract 6 2
    uncover 2
    swap
    concat
    uncover 2
    uncover 3
    concat
    swap
    uncover 2
    itob
    extract 6 2
    concat
    swap
    concat
    // arc4_conversions/contract.py:169-174
    // arc4.abi_call(
    //     CheckApp.check_static_array_dyn_struct,
    //     (my_dyn_struct(UInt64(1)), my_dyn_struct(UInt64(2)), my_dyn_struct(UInt64(3))),
    //     expected_bytes,
    //     app_id=app,
    // )
    itxn_begin
    // arc4_conversions/contract.py:171
    // (my_dyn_struct(UInt64(1)), my_dyn_struct(UInt64(2)), my_dyn_struct(UInt64(3))),
    intc_2 // 1
    callsub my_dyn_struct
    cover 2
    swap
    intc_3 // 2
    callsub my_dyn_struct
    cover 5
    cover 4
    cover 3
    pushint 3 // 3
    callsub my_dyn_struct
    cover 8
    cover 7
    cover 6
    itob
    bytec_0 // 0x
    swap
    concat
    dig 1
    len
    pushint 32 // 32
    ==
    assert // invalid size
    swap
    concat
    dig 1
    len
    itob
    extract 6 2
    uncover 2
    concat
    bytec_0 // 0x
    swap
    concat
    pushint 42 // 42
    itob
    extract 6 2
    uncover 2
    swap
    concat
    swap
    concat
    bytec_0 // 0x
    dig 1
    concat
    swap
    len
    intc_1 // 6
    +
    swap
    intc_1 // 6
    itob
    extract 6 2
    bytec_0 // 0x
    swap
    concat
    cover 2
    uncover 3
    itob
    bytec_0 // 0x
    swap
    concat
    dig 4
    len
    pushint 32 // 32
    ==
    assert // invalid size
    uncover 4
    concat
    dig 4
    len
    itob
    extract 6 2
    uncover 5
    concat
    bytec_0 // 0x
    swap
    concat
    pushint 42 // 42
    itob
    extract 6 2
    uncover 2
    swap
    concat
    swap
    concat
    swap
    dig 1
    concat
    cover 3
    len
    dig 1
    +
    swap
    itob
    extract 6 2
    uncover 2
    swap
    concat
    uncover 3
    itob
    bytec_0 // 0x
    swap
    concat
    dig 4
    len
    pushint 32 // 32
    ==
    assert // invalid size
    uncover 4
    concat
    dig 4
    len
    itob
    extract 6 2
    uncover 5
    concat
    bytec_0 // 0x
    swap
    concat
    pushint 42 // 42
    itob
    extract 6 2
    uncover 2
    swap
    concat
    swap
    concat
    uncover 3
    swap
    concat
    uncover 2
    itob
    extract 6 2
    uncover 2
    swap
    concat
    swap
    concat
    // arc4_conversions/contract.py:172
    // expected_bytes,
    dig 1
    len
    itob
    extract 6 2
    uncover 2
    concat
    swap
    // arc4_conversions/contract.py:173
    // app_id=app,
    frame_dig 0
    itxn_field ApplicationID
    // arc4_conversions/contract.py:169-174
    // arc4.abi_call(
    //     CheckApp.check_static_array_dyn_struct,
    //     (my_dyn_struct(UInt64(1)), my_dyn_struct(UInt64(2)), my_dyn_struct(UInt64(3))),
    //     expected_bytes,
    //     app_id=app,
    // )
    pushbytes 0x7d240945 // method "check_static_array_dyn_struct((uint64,address,byte[])[3],byte[])void"
    itxn_field ApplicationArgs
    itxn_field ApplicationArgs
    itxn_field ApplicationArgs
    intc_1 // appl
    itxn_field TypeEnum
    intc_0 // 0
    itxn_field Fee

test_array_dynamic_encoding_next_txn@3:
    // arc4_conversions/contract.py:169-174
    // arc4.abi_call(
    //     CheckApp.check_static_array_dyn_struct,
    //     (my_dyn_struct(UInt64(1)), my_dyn_struct(UInt64(2)), my_dyn_struct(UInt64(3))),
    //     expected_bytes,
    //     app_id=app,
    // )
    itxn_submit
    // arc4_conversions/contract.py:176
    // arc4.abi_call(CheckApp.delete_application, app_id=app)
    itxn_begin
    frame_dig 0
    pushint 5 // DeleteApplication
    itxn_field OnCompletion
    itxn_field ApplicationID
    bytec 5 // method "delete_application()void"
    itxn_field ApplicationArgs
    intc_1 // appl
    itxn_field TypeEnum
    intc_0 // 0
    itxn_field Fee

test_array_dynamic_encoding_next_txn@4:
    // arc4_conversions/contract.py:176
    // arc4.abi_call(CheckApp.delete_application, app_id=app)
    itxn_submit
    retsub


// test_cases.arc4_conversions.contract.TestContract.test_bytes_to_fixed(wrong_size: uint64) -> void:
test_bytes_to_fixed:
    // arc4_conversions/contract.py:178-179
    // @arc4.abimethod
    // def test_bytes_to_fixed(self, wrong_size: bool) -> None:
    proto 1 0
    intc_0 // 0
    dup
    bytec_0 // ""

test_bytes_to_fixed_block@0:
    // arc4_conversions/contract.py:180
    // app = arc4.arc4_create(CheckApp).created_app
    itxn_begin
    intc_0 // 0
    itxn_field LocalNumUint
    intc_0 // 0
    itxn_field LocalNumByteSlice
    intc_0 // 0
    itxn_field GlobalNumUint
    intc_0 // 0
    itxn_field GlobalNumByteSlice
    intc_0 // 0
    itxn_field ExtraProgramPages
    bytec_2 // base64(CoEBQw==)
    itxn_field ClearStateProgramPages
    bytec_0 // 0x
    itxn_field ClearStateProgramPages
    bytec_3 // base64(CiACAAExGyITQQG1NhoAgAQzs0megASNdi/fgAQtMp7hgARqTd9zgATW4Le8gATlys0GgASJr1V7gARG4Za9gATzOIbagAQllblagAQ/VSZrgAR9JAlFgAQDUaneTw2ODQE0ARoBAADmAMwAsgCYAH4AZABKADAAFgACIkMxGSISRDEYIhNENhoBiAG3I0L/6zEZIhJEMRgiE0Q2GgE2GgJXAgCIAZMjQv/RMRkiEkQxGCITRDYaATYaAlcCAIgBbyNC/7cxGSISRDEYIhNENhoBNhoCVwIAiAFLI0L/nTEZIhJEMRgiE0Q2GgE2GgJXAgCIAScjQv+DMRkiEkQxGCITRDYaATYaAlcCAIgBAyNC/2kxGSISRDEYIhNENhoBNhoCVwIAiADfI0L/TzEZIhJEMRgiE0Q2GgE2GgJXAgCIALsjQv81MRkiEkQxGCITRDYaATYaAlcCAIgAlyNC/xsxGSISRDEYIhNENhoBNhoCVwIAiABzI0L/ATEZIhJEMRgiE0Q2GgE2GgJXAgCIAE8jQv7nMRkiEkQxGCITRDYaATYaAlcCAIgAKyNC/s0xGYEFEkQxGCITRIgAGCNC/rsxGSJMjgEAA0L+rzEYIhJEI0L+p4mKAgCL/ov/EkSJigIAi/6L/xJEiYoCAIv+i/8SRImKAgCL/ov/EkSJigIAi/6L/xJEiYoCAIv+i/8SRImKAgCL/ov/EkSJigIAi/6L/xJEiYoCAIv+i/8SRImKAgCL/ov/EkSJigIAi/6L/xJEiYoBADEAi/8SRIk=)
    itxn_field ApprovalProgramPages
    bytec_0 // 0x
    itxn_field ApprovalProgramPages
    intc_1 // appl
    itxn_field TypeEnum
    intc_0 // 0
    itxn_field Fee

test_bytes_to_fixed_next_txn@1:
    // arc4_conversions/contract.py:180
    // app = arc4.arc4_create(CheckApp).created_app
    itxn_submit
    itxn CreatedApplicationID
    frame_bury 2
    // arc4_conversions/contract.py:181
    // sender = Global.current_application_address.bytes
    global CurrentApplicationAddress
    dup
    frame_bury 0
    frame_bury 1
    // arc4_conversions/contract.py:183
    // if wrong_size:
    frame_dig -1
    bz test_bytes_to_fixed_after_if_else@3

test_bytes_to_fixed_if_body@2:
    // arc4_conversions/contract.py:184
    // sender = sender + sender
    frame_dig 0
    dup
    concat
    frame_bury 1

test_bytes_to_fixed_after_if_else@3:
    frame_dig 1
    // arc4_conversions/contract.py:186
    // arc4.abi_call(CheckApp.check_static_bytes, sender, app_id=app)
    itxn_begin
    dup
    len
    pushint 32 // 32
    ==
    assert // invalid size
    frame_dig 2
    itxn_field ApplicationID
    pushbytes 0x0351a9de // method "check_static_bytes(byte[32])void"
    itxn_field ApplicationArgs
    itxn_field ApplicationArgs
    intc_1 // appl
    itxn_field TypeEnum
    intc_0 // 0
    itxn_field Fee

test_bytes_to_fixed_next_txn@4:
    // arc4_conversions/contract.py:186
    // arc4.abi_call(CheckApp.check_static_bytes, sender, app_id=app)
    itxn_submit
    // arc4_conversions/contract.py:188
    // arc4.abi_call(CheckApp.delete_application, app_id=app)
    itxn_begin
    frame_dig 2
    pushint 5 // DeleteApplication
    itxn_field OnCompletion
    itxn_field ApplicationID
    bytec 5 // method "delete_application()void"
    itxn_field ApplicationArgs
    intc_1 // appl
    itxn_field TypeEnum
    intc_0 // 0
    itxn_field Fee

test_bytes_to_fixed_next_txn@5:
    // arc4_conversions/contract.py:188
    // arc4.abi_call(CheckApp.delete_application, app_id=app)
    itxn_submit
    retsub
