main algopy.arc4.ARC4Contract.approval_program:
    block@0: // L1
        goto block@1
    block@1: // L17
        let tmp%0#1: uint64 = (txn NumAppArgs)
        let tmp%1#0: bool = (!= tmp%0#1 0u)
        goto tmp%1#0 ? block@2 : block@11
    block@2: // abi_routing_L17
        let tmp%2#0: bytes = (txna ApplicationArgs 0)
        switch tmp%2#0 {method "test_literal_encoding()void" => block@3, method "test_native_encoding()void" => block@4, method "test_arc4_encoding()void" => block@5, method "test_array_uint64_encoding()void" => block@6, method "test_array_static_encoding()void" => block@7, method "test_array_dynamic_encoding()void" => block@8, * => block@9}
    block@3: // test_literal_encoding_route_L18
        let tmp%3#0: uint64 = (txn OnCompletion)
        let tmp%4#0: bool = (== tmp%3#0 NoOp)
        (assert tmp%4#0) // OnCompletion is not NoOp
        let tmp%5#0: uint64 = (txn ApplicationID)
        let tmp%6#0: bool = (!= tmp%5#0 0u)
        (assert tmp%6#0) // can only call when not creating
        test_cases.arc4_conversions.contract.TestContract.test_literal_encoding()
        let test_cases.arc4_conversions.contract.TestContract.__puya_arc4_router__%0#0: bool = 1u
        let tmp%0#0: bool = test_cases.arc4_conversions.contract.TestContract.__puya_arc4_router__%0#0
        goto block@16
    block@4: // test_native_encoding_route_L41
        let tmp%7#0: uint64 = (txn OnCompletion)
        let tmp%8#0: bool = (== tmp%7#0 NoOp)
        (assert tmp%8#0) // OnCompletion is not NoOp
        let tmp%9#0: uint64 = (txn ApplicationID)
        let tmp%10#0: bool = (!= tmp%9#0 0u)
        (assert tmp%10#0) // can only call when not creating
        test_cases.arc4_conversions.contract.TestContract.test_native_encoding()
        let test_cases.arc4_conversions.contract.TestContract.__puya_arc4_router__%0#0: bool = 1u
        let tmp%0#0: bool = test_cases.arc4_conversions.contract.TestContract.__puya_arc4_router__%0#0
        goto block@16
    block@5: // test_arc4_encoding_route_L69
        let tmp%11#0: uint64 = (txn OnCompletion)
        let tmp%12#0: bool = (== tmp%11#0 NoOp)
        (assert tmp%12#0) // OnCompletion is not NoOp
        let tmp%13#0: uint64 = (txn ApplicationID)
        let tmp%14#0: bool = (!= tmp%13#0 0u)
        (assert tmp%14#0) // can only call when not creating
        test_cases.arc4_conversions.contract.TestContract.test_arc4_encoding()
        let test_cases.arc4_conversions.contract.TestContract.__puya_arc4_router__%0#0: bool = 1u
        let tmp%0#0: bool = test_cases.arc4_conversions.contract.TestContract.__puya_arc4_router__%0#0
        goto block@16
    block@6: // test_array_uint64_encoding_route_L97
        let tmp%15#0: uint64 = (txn OnCompletion)
        let tmp%16#0: bool = (== tmp%15#0 NoOp)
        (assert tmp%16#0) // OnCompletion is not NoOp
        let tmp%17#0: uint64 = (txn ApplicationID)
        let tmp%18#0: bool = (!= tmp%17#0 0u)
        (assert tmp%18#0) // can only call when not creating
        test_cases.arc4_conversions.contract.TestContract.test_array_uint64_encoding()
        let test_cases.arc4_conversions.contract.TestContract.__puya_arc4_router__%0#0: bool = 1u
        let tmp%0#0: bool = test_cases.arc4_conversions.contract.TestContract.__puya_arc4_router__%0#0
        goto block@16
    block@7: // test_array_static_encoding_route_L121
        let tmp%19#0: uint64 = (txn OnCompletion)
        let tmp%20#0: bool = (== tmp%19#0 NoOp)
        (assert tmp%20#0) // OnCompletion is not NoOp
        let tmp%21#0: uint64 = (txn ApplicationID)
        let tmp%22#0: bool = (!= tmp%21#0 0u)
        (assert tmp%22#0) // can only call when not creating
        test_cases.arc4_conversions.contract.TestContract.test_array_static_encoding()
        let test_cases.arc4_conversions.contract.TestContract.__puya_arc4_router__%0#0: bool = 1u
        let tmp%0#0: bool = test_cases.arc4_conversions.contract.TestContract.__puya_arc4_router__%0#0
        goto block@16
    block@8: // test_array_dynamic_encoding_route_L145
        let tmp%23#0: uint64 = (txn OnCompletion)
        let tmp%24#0: bool = (== tmp%23#0 NoOp)
        (assert tmp%24#0) // OnCompletion is not NoOp
        let tmp%25#0: uint64 = (txn ApplicationID)
        let tmp%26#0: bool = (!= tmp%25#0 0u)
        (assert tmp%26#0) // can only call when not creating
        test_cases.arc4_conversions.contract.TestContract.test_array_dynamic_encoding()
        let test_cases.arc4_conversions.contract.TestContract.__puya_arc4_router__%0#0: bool = 1u
        let tmp%0#0: bool = test_cases.arc4_conversions.contract.TestContract.__puya_arc4_router__%0#0
        goto block@16
    block@9: // switch_case_default_L17
        goto block@10
    block@10: // switch_case_next_L17
        goto block@15
    block@11: // bare_routing_L17
        let tmp%27#0: uint64 = (txn OnCompletion)
        switch tmp%27#0 {0u => block@12, * => block@13}
    block@12: // __algopy_default_create_L1
        let tmp%28#0: uint64 = (txn ApplicationID)
        let tmp%29#0: bool = (== tmp%28#0 0u)
        (assert tmp%29#0) // can only call when creating
        goto block@17
    block@17: // L1
        goto block@18
    block@18: // after_inlined_test_cases.arc4_conversions.contract.TestContract.__algopy_default_create_L1
        let test_cases.arc4_conversions.contract.TestContract.__puya_arc4_router__%0#0: bool = 1u
        let tmp%0#0: bool = test_cases.arc4_conversions.contract.TestContract.__puya_arc4_router__%0#0
        goto block@16
    block@13: // switch_case_default_L17
        goto block@14
    block@14: // switch_case_next_L17
        goto block@15
    block@15: // after_if_else_L17
        let test_cases.arc4_conversions.contract.TestContract.__puya_arc4_router__%0#0: bool = 0u
        let tmp%0#0: bool = test_cases.arc4_conversions.contract.TestContract.__puya_arc4_router__%0#0
        goto block@16
    block@16: // after_inlined_test_cases.arc4_conversions.contract.TestContract.__puya_arc4_router___L1
        return tmp%0#0

subroutine _puya_lib.arc4.dynamic_array_concat_dynamic_element(array_items_count: uint64, array_head_and_tail: bytes, new_items_count: uint64, new_head_and_tail: bytes) -> bytes:
    block@0: // L193
        let new_head#0: bytes = 0x
        let item_offset_adjustment#0: uint64 = (* new_items_count#0 2u)
        let tmp%0#0: uint64 = (* array_items_count#0 2u)
        (assert 2u) // Step cannot be zero
        let head_offset#0: uint64 = 0u
        goto block@1
    block@1: // for_header_L203
        let continue_looping%0#0: bool = (< head_offset#0 tmp%0#0)
        goto continue_looping%0#0 ? block@2 : block@4
    block@2: // for_body_L204
        let item_offset#0: uint64 = (extract_uint16 array_head_and_tail#0 head_offset#0)
        let tmp%1#0: uint64 = (+ item_offset_adjustment#0 item_offset#0)
        let tmp%2#0: bytes = (itob tmp%1#0)
        let tmp%3#0: bytes = ((extract 6 2) tmp%2#0)
        let new_head#0: bytes = (concat new_head#0 tmp%3#0)
        goto block@3
    block@3: // for_footer_L203
        let head_offset#0: uint64 = (+ head_offset#0 2u)
        goto block@1
    block@4: // after_for_L203
        let item_offset_adjustment#0: uint64 = (len array_head_and_tail#0)
        let tmp%4#0: uint64 = (* new_items_count#0 2u)
        (assert 2u) // Step cannot be zero
        let head_offset#0: uint64 = 0u
        goto block@5
    block@5: // for_header_L208
        let continue_looping%1#0: bool = (< head_offset#0 tmp%4#0)
        goto continue_looping%1#0 ? block@6 : block@8
    block@6: // for_body_L209
        let item_offset#0: uint64 = (extract_uint16 new_head_and_tail#0 head_offset#0)
        let tmp%5#0: uint64 = (+ item_offset_adjustment#0 item_offset#0)
        let tmp%6#0: bytes = (itob tmp%5#0)
        let tmp%7#0: bytes = ((extract 6 2) tmp%6#0)
        let new_head#0: bytes = (concat new_head#0 tmp%7#0)
        goto block@7
    block@7: // for_footer_L208
        let head_offset#0: uint64 = (+ head_offset#0 2u)
        goto block@5
    block@8: // after_for_L208
        let tmp%8#0: uint64 = (+ array_items_count#0 new_items_count#0)
        let tmp%9#0: bytes = (itob tmp%8#0)
        let tmp%10#0: bytes = ((extract 6 2) tmp%9#0)
        let tmp%11#0: bytes = (concat tmp%10#0 new_head#0)
        let tmp%12#0: uint64 = (* array_items_count#0 2u)
        let tmp%13#0: uint64 = (len array_head_and_tail#0)
        let tmp%14#0: bytes = (substring3 array_head_and_tail#0 tmp%12#0 tmp%13#0)
        let tmp%15#0: bytes = (concat tmp%11#0 tmp%14#0)
        let tmp%16#0: uint64 = (* new_items_count#0 2u)
        let tmp%17#0: uint64 = (len new_head_and_tail#0)
        let tmp%18#0: bytes = (substring3 new_head_and_tail#0 tmp%16#0 tmp%17#0)
        let tmp%19#0: bytes = (concat tmp%15#0 tmp%18#0)
        return tmp%19#0

subroutine test_cases.arc4_conversions.contract.my_struct(value: uint64) -> <uint64, bytes[32]>:
    block@0: // L184
        let tmp%0#0: bytes[32] = (txn Sender)
        return value#0 tmp%0#0

subroutine test_cases.arc4_conversions.contract.my_dyn_struct(value: uint64) -> <uint64, bytes[32], bytes>:
    block@0: // L201
        let tmp%0#0: bytes[32] = (txn Sender)
        let tmp%1#0: bytes[32] = (txn Sender)
        return value#0 tmp%0#0 tmp%1#0

subroutine test_cases.arc4_conversions.contract.my_dyn_struct_arc4(value: uint64) -> bytes:
    block@0: // L206
        let val_as_bytes%0#0: bytes[8] = (itob value#0)
        let tmp%0#0: bytes[32] = (txn Sender)
        let to_encode%0#0: bytes[32] = (txn Sender)
        let length%0#0: uint64 = (len to_encode%0#0)
        let as_bytes%0#0: bytes[8] = (itob length%0#0)
        let length_uint16%0#0: bytes = ((extract 6 2) as_bytes%0#0)
        let encoded_value%0#0: bytes = (concat length_uint16%0#0 to_encode%0#0)
        let encoded_tuple_buffer%1#0: bytes = (concat 0x val_as_bytes%0#0)
        let encoded_tuple_buffer%2#0: bytes = (concat encoded_tuple_buffer%1#0 tmp%0#0)
        let as_bytes%1#0: bytes[8] = (itob 42u)
        let offset_as_uint16%0#0: bytes = ((extract 6 2) as_bytes%1#0)
        let encoded_tuple_buffer%3#0: bytes = (concat encoded_tuple_buffer%2#0 offset_as_uint16%0#0)
        let encoded_tuple_buffer%4#0: bytes = (concat encoded_tuple_buffer%3#0 encoded_value%0#0)
        return encoded_tuple_buffer%4#0

subroutine test_cases.arc4_conversions.contract.TestContract.test_literal_encoding() -> void:
    block@0: // L18
        itxn_begin
        ((itxn_field LocalNumUint) 0u)
        ((itxn_field LocalNumByteSlice) 0u)
        ((itxn_field GlobalNumUint) 0u)
        ((itxn_field GlobalNumByteSlice) 0u)
        ((itxn_field ExtraProgramPages) 0u)
        ((itxn_field ClearStateProgramPages) CoEBQw==)
        (itxn_field ClearStateProgramPages)
        ((itxn_field ApprovalProgramPages) CiACAAExGyITQQGZNhoAgAQzs0megASNdi/fgAQtMp7hgARqTd9zgATW4Le8gATlys0GgASJr1V7gARG4Za9gATzOIbagAQllblagAQ/VSZrgAR9JAlFTwyODAEgAQYA7ADSALgAngCEAGoAUAA2ABwAAiJDMRkiEkQxGCITRDYaATYaAlcCAIgBkyNC/+UxGSISRDEYIhNENhoBNhoCVwIAiAFvI0L/yzEZIhJEMRgiE0Q2GgE2GgJXAgCIAUsjQv+xMRkiEkQxGCITRDYaATYaAlcCAIgBJyNC/5cxGSISRDEYIhNENhoBNhoCVwIAiAEDI0L/fTEZIhJEMRgiE0Q2GgE2GgJXAgCIAN8jQv9jMRkiEkQxGCITRDYaATYaAlcCAIgAuyNC/0kxGSISRDEYIhNENhoBNhoCVwIAiACXI0L/LzEZIhJEMRgiE0Q2GgE2GgJXAgCIAHMjQv8VMRkiEkQxGCITRDYaATYaAlcCAIgATyNC/vsxGSISRDEYIhNENhoBNhoCVwIAiAArI0L+4TEZgQUSRDEYIhNEiAAYI0L+zzEZIkyOAQADQv7DMRgiEkQjQv67iYoCAIv+i/8SRImKAgCL/ov/EkSJigIAi/6L/xJEiYoCAIv+i/8SRImKAgCL/ov/EkSJigIAi/6L/xJEiYoCAIv+i/8SRImKAgCL/ov/EkSJigIAi/6L/xJEiYoCAIv+i/8SRImKAgCL/ov/EkSJ)
        (itxn_field ApprovalProgramPages)
        ((itxn_field TypeEnum) appl)
        ((itxn_field Fee) 0u)
        goto block@1
    block@1: // next_txn_L20
        itxn_submit
        let app#0: uint64 = (itxn CreatedApplicationID)
        itxn_begin
        let to_encode%0#0: bytes = (bzero 8u)
        let length%0#0: uint64 = (len to_encode%0#0)
        let as_bytes%0#0: bytes[8] = (itob length%0#0)
        let length_uint16%0#0: bytes = ((extract 6 2) as_bytes%0#0)
        let encoded_value%0#0: bytes = (concat length_uint16%0#0 to_encode%0#0)
        let inner_txn_params%1%%param_ApplicationArgs_idx_2#0: bytes = encoded_value%0#0
        let inner_txn_params%1%%param_ApplicationID_idx_0#0: uint64 = app#0
        ((itxn_field ApplicationID) inner_txn_params%1%%param_ApplicationID_idx_0#0)
        ((itxn_field ApplicationArgs) method "check_uint64(uint64,byte[])void")
        ((itxn_field ApplicationArgs) 0x0000000000000000)
        ((itxn_field ApplicationArgs) inner_txn_params%1%%param_ApplicationArgs_idx_2#0)
        ((itxn_field TypeEnum) appl)
        ((itxn_field Fee) 0u)
        goto block@2
    block@2: // next_txn_L23
        itxn_submit
        itxn_begin
        let length%1#0: uint64 = (len 0x48656c6c6f20576f726c64)
        let as_bytes%1#0: bytes[8] = (itob length%1#0)
        let length_uint16%1#0: bytes = ((extract 6 2) as_bytes%1#0)
        let encoded_value%1#0: bytes = (concat length_uint16%1#0 0x48656c6c6f20576f726c64)
        let length%2#0: uint64 = (len 0x000b48656c6c6f20576f726c64)
        let as_bytes%2#0: bytes[8] = (itob length%2#0)
        let length_uint16%2#0: bytes = ((extract 6 2) as_bytes%2#0)
        let encoded_value%2#0: bytes = (concat length_uint16%2#0 0x000b48656c6c6f20576f726c64)
        let inner_txn_params%2%%param_ApplicationArgs_idx_1#0: bytes = encoded_value%1#0
        let inner_txn_params%2%%param_ApplicationArgs_idx_2#0: bytes = encoded_value%2#0
        let inner_txn_params%2%%param_ApplicationID_idx_0#0: uint64 = app#0
        ((itxn_field ApplicationID) inner_txn_params%2%%param_ApplicationID_idx_0#0)
        ((itxn_field ApplicationArgs) method "check_dynamic_bytes(byte[],byte[])void")
        ((itxn_field ApplicationArgs) inner_txn_params%2%%param_ApplicationArgs_idx_1#0)
        ((itxn_field ApplicationArgs) inner_txn_params%2%%param_ApplicationArgs_idx_2#0)
        ((itxn_field TypeEnum) appl)
        ((itxn_field Fee) 0u)
        goto block@3
    block@3: // next_txn_L26
        itxn_submit
        itxn_begin
        let length%3#0: uint64 = (len 0x000b48656c6c6f20576f726c64)
        let as_bytes%3#0: bytes[8] = (itob length%3#0)
        let length_uint16%3#0: bytes = ((extract 6 2) as_bytes%3#0)
        let encoded_value%3#0: bytes = (concat length_uint16%3#0 0x000b48656c6c6f20576f726c64)
        let inner_txn_params%3%%param_ApplicationArgs_idx_2#0: bytes = encoded_value%3#0
        let inner_txn_params%3%%param_ApplicationID_idx_0#0: uint64 = app#0
        ((itxn_field ApplicationID) inner_txn_params%3%%param_ApplicationID_idx_0#0)
        ((itxn_field ApplicationArgs) method "check_string(string,byte[])void")
        ((itxn_field ApplicationArgs) 0x000b48656c6c6f20576f726c64)
        ((itxn_field ApplicationArgs) inner_txn_params%3%%param_ApplicationArgs_idx_2#0)
        ((itxn_field TypeEnum) appl)
        ((itxn_field Fee) 0u)
        goto block@4
    block@4: // next_txn_L31
        itxn_submit
        itxn_begin
        let len_%0#0: uint64 = (len 0b)
        let no_overflow%0#0: bool = (<= len_%0#0 64u)
        (assert no_overflow%0#0) // overflow
        let b_zeros%0#0: bytes = (bzero 64u)
        let tmp%0#0: bytes = (b| 0b b_zeros%0#0)
        let to_encode%1#0: bytes = (bzero 64u)
        let length%4#0: uint64 = (len to_encode%1#0)
        let as_bytes%4#0: bytes[8] = (itob length%4#0)
        let length_uint16%4#0: bytes = ((extract 6 2) as_bytes%4#0)
        let encoded_value%4#0: bytes = (concat length_uint16%4#0 to_encode%1#0)
        let inner_txn_params%4%%param_ApplicationArgs_idx_1#0: bytes = tmp%0#0
        let inner_txn_params%4%%param_ApplicationArgs_idx_2#0: bytes = encoded_value%4#0
        let inner_txn_params%4%%param_ApplicationID_idx_0#0: uint64 = app#0
        ((itxn_field ApplicationID) inner_txn_params%4%%param_ApplicationID_idx_0#0)
        ((itxn_field ApplicationArgs) method "check_biguint(uint512,byte[])void")
        ((itxn_field ApplicationArgs) inner_txn_params%4%%param_ApplicationArgs_idx_1#0)
        ((itxn_field ApplicationArgs) inner_txn_params%4%%param_ApplicationArgs_idx_2#0)
        ((itxn_field TypeEnum) appl)
        ((itxn_field Fee) 0u)
        goto block@5
    block@5: // next_txn_L34
        itxn_submit
        itxn_begin
        let length%5#0: uint64 = (len 0x80)
        let as_bytes%5#0: bytes[8] = (itob length%5#0)
        let length_uint16%5#0: bytes = ((extract 6 2) as_bytes%5#0)
        let encoded_value%5#0: bytes = (concat length_uint16%5#0 0x80)
        let inner_txn_params%5%%param_ApplicationArgs_idx_2#0: bytes = encoded_value%5#0
        let inner_txn_params%5%%param_ApplicationID_idx_0#0: uint64 = app#0
        ((itxn_field ApplicationID) inner_txn_params%5%%param_ApplicationID_idx_0#0)
        ((itxn_field ApplicationArgs) method "check_bool(bool,byte[])void")
        ((itxn_field ApplicationArgs) 0x80)
        ((itxn_field ApplicationArgs) inner_txn_params%5%%param_ApplicationArgs_idx_2#0)
        ((itxn_field TypeEnum) appl)
        ((itxn_field Fee) 0u)
        goto block@6
    block@6: // next_txn_L37
        itxn_submit
        itxn_begin
        let inner_txn_params%6%%param_ApplicationID_idx_0#0: uint64 = app#0
        ((itxn_field OnCompletion) DeleteApplication)
        ((itxn_field ApplicationID) inner_txn_params%6%%param_ApplicationID_idx_0#0)
        ((itxn_field ApplicationArgs) method "delete_application()void")
        ((itxn_field TypeEnum) appl)
        ((itxn_field Fee) 0u)
        goto block@7
    block@7: // next_txn_L39
        itxn_submit
        return 

subroutine test_cases.arc4_conversions.contract.TestContract.test_native_encoding() -> void:
    block@0: // L41
        itxn_begin
        ((itxn_field LocalNumUint) 0u)
        ((itxn_field LocalNumByteSlice) 0u)
        ((itxn_field GlobalNumUint) 0u)
        ((itxn_field GlobalNumByteSlice) 0u)
        ((itxn_field ExtraProgramPages) 0u)
        ((itxn_field ClearStateProgramPages) CoEBQw==)
        (itxn_field ClearStateProgramPages)
        ((itxn_field ApprovalProgramPages) CiACAAExGyITQQGZNhoAgAQzs0megASNdi/fgAQtMp7hgARqTd9zgATW4Le8gATlys0GgASJr1V7gARG4Za9gATzOIbagAQllblagAQ/VSZrgAR9JAlFTwyODAEgAQYA7ADSALgAngCEAGoAUAA2ABwAAiJDMRkiEkQxGCITRDYaATYaAlcCAIgBkyNC/+UxGSISRDEYIhNENhoBNhoCVwIAiAFvI0L/yzEZIhJEMRgiE0Q2GgE2GgJXAgCIAUsjQv+xMRkiEkQxGCITRDYaATYaAlcCAIgBJyNC/5cxGSISRDEYIhNENhoBNhoCVwIAiAEDI0L/fTEZIhJEMRgiE0Q2GgE2GgJXAgCIAN8jQv9jMRkiEkQxGCITRDYaATYaAlcCAIgAuyNC/0kxGSISRDEYIhNENhoBNhoCVwIAiACXI0L/LzEZIhJEMRgiE0Q2GgE2GgJXAgCIAHMjQv8VMRkiEkQxGCITRDYaATYaAlcCAIgATyNC/vsxGSISRDEYIhNENhoBNhoCVwIAiAArI0L+4TEZgQUSRDEYIhNEiAAYI0L+zzEZIkyOAQADQv7DMRgiEkQjQv67iYoCAIv+i/8SRImKAgCL/ov/EkSJigIAi/6L/xJEiYoCAIv+i/8SRImKAgCL/ov/EkSJigIAi/6L/xJEiYoCAIv+i/8SRImKAgCL/ov/EkSJigIAi/6L/xJEiYoCAIv+i/8SRImKAgCL/ov/EkSJ)
        (itxn_field ApprovalProgramPages)
        ((itxn_field TypeEnum) appl)
        ((itxn_field Fee) 0u)
        goto block@1
    block@1: // next_txn_L43
        itxn_submit
        let app#0: uint64 = (itxn CreatedApplicationID)
        itxn_begin
        let tmp%0#0: uint64 = (txn NumAppArgs)
        let to_encode%0#0: uint64 = (- tmp%0#0 1u)
        let val_as_bytes%0#0: bytes[8] = (itob to_encode%0#0)
        let to_encode%1#0: bytes = (bzero 8u)
        let length%0#0: uint64 = (len to_encode%1#0)
        let as_bytes%0#0: bytes[8] = (itob length%0#0)
        let length_uint16%0#0: bytes = ((extract 6 2) as_bytes%0#0)
        let encoded_value%0#0: bytes = (concat length_uint16%0#0 to_encode%1#0)
        let inner_txn_params%1%%param_ApplicationArgs_idx_1#0: bytes[8] = val_as_bytes%0#0
        let inner_txn_params%1%%param_ApplicationArgs_idx_2#0: bytes = encoded_value%0#0
        let inner_txn_params%1%%param_ApplicationID_idx_0#0: uint64 = app#0
        ((itxn_field ApplicationID) inner_txn_params%1%%param_ApplicationID_idx_0#0)
        ((itxn_field ApplicationArgs) method "check_uint64(uint64,byte[])void")
        ((itxn_field ApplicationArgs) inner_txn_params%1%%param_ApplicationArgs_idx_1#0)
        ((itxn_field ApplicationArgs) inner_txn_params%1%%param_ApplicationArgs_idx_2#0)
        ((itxn_field TypeEnum) appl)
        ((itxn_field Fee) 0u)
        goto block@2
    block@2: // next_txn_L46
        itxn_submit
        itxn_begin
        let to_encode%2#0: bytes = (txna ApplicationArgs 0)
        let length%1#0: uint64 = (len to_encode%2#0)
        let as_bytes%1#0: bytes[8] = (itob length%1#0)
        let length_uint16%1#0: bytes = ((extract 6 2) as_bytes%1#0)
        let encoded_value%1#0: bytes = (concat length_uint16%1#0 to_encode%2#0)
        let tmp%1#0: bytes = (txna ApplicationArgs 0)
        let to_encode%3#0: bytes = (concat 0x0004 tmp%1#0)
        let length%2#0: uint64 = (len to_encode%3#0)
        let as_bytes%2#0: bytes[8] = (itob length%2#0)
        let length_uint16%2#0: bytes = ((extract 6 2) as_bytes%2#0)
        let encoded_value%2#0: bytes = (concat length_uint16%2#0 to_encode%3#0)
        let inner_txn_params%2%%param_ApplicationArgs_idx_1#0: bytes = encoded_value%1#0
        let inner_txn_params%2%%param_ApplicationArgs_idx_2#0: bytes = encoded_value%2#0
        let inner_txn_params%2%%param_ApplicationID_idx_0#0: uint64 = app#0
        ((itxn_field ApplicationID) inner_txn_params%2%%param_ApplicationID_idx_0#0)
        ((itxn_field ApplicationArgs) method "check_dynamic_bytes(byte[],byte[])void")
        ((itxn_field ApplicationArgs) inner_txn_params%2%%param_ApplicationArgs_idx_1#0)
        ((itxn_field ApplicationArgs) inner_txn_params%2%%param_ApplicationArgs_idx_2#0)
        ((itxn_field TypeEnum) appl)
        ((itxn_field Fee) 0u)
        goto block@3
    block@3: // next_txn_L49
        itxn_submit
        itxn_begin
        let length%3#0: uint64 = (len "Hello World")
        let as_bytes%3#0: bytes[8] = (itob length%3#0)
        let length_uint16%3#0: bytes = ((extract 6 2) as_bytes%3#0)
        let encoded_value%3#0: bytes = (concat length_uint16%3#0 "Hello World")
        let length%4#0: uint64 = (len 0x000b48656c6c6f20576f726c64)
        let as_bytes%4#0: bytes[8] = (itob length%4#0)
        let length_uint16%4#0: bytes = ((extract 6 2) as_bytes%4#0)
        let encoded_value%4#0: bytes = (concat length_uint16%4#0 0x000b48656c6c6f20576f726c64)
        let inner_txn_params%3%%param_ApplicationArgs_idx_1#0: bytes = encoded_value%3#0
        let inner_txn_params%3%%param_ApplicationArgs_idx_2#0: bytes = encoded_value%4#0
        let inner_txn_params%3%%param_ApplicationID_idx_0#0: uint64 = app#0
        ((itxn_field ApplicationID) inner_txn_params%3%%param_ApplicationID_idx_0#0)
        ((itxn_field ApplicationArgs) method "check_string(string,byte[])void")
        ((itxn_field ApplicationArgs) inner_txn_params%3%%param_ApplicationArgs_idx_1#0)
        ((itxn_field ApplicationArgs) inner_txn_params%3%%param_ApplicationArgs_idx_2#0)
        ((itxn_field TypeEnum) appl)
        ((itxn_field Fee) 0u)
        goto block@4
    block@4: // next_txn_L57
        itxn_submit
        itxn_begin
        let len_%0#0: uint64 = (len 0b)
        let no_overflow%0#0: bool = (<= len_%0#0 64u)
        (assert no_overflow%0#0) // overflow
        let b_zeros%0#0: bytes = (bzero 64u)
        let tmp%2#0: bytes = (b| 0b b_zeros%0#0)
        let to_encode%4#0: bytes = (bzero 64u)
        let length%5#0: uint64 = (len to_encode%4#0)
        let as_bytes%5#0: bytes[8] = (itob length%5#0)
        let length_uint16%5#0: bytes = ((extract 6 2) as_bytes%5#0)
        let encoded_value%5#0: bytes = (concat length_uint16%5#0 to_encode%4#0)
        let inner_txn_params%4%%param_ApplicationArgs_idx_1#0: bytes = tmp%2#0
        let inner_txn_params%4%%param_ApplicationArgs_idx_2#0: bytes = encoded_value%5#0
        let inner_txn_params%4%%param_ApplicationID_idx_0#0: uint64 = app#0
        ((itxn_field ApplicationID) inner_txn_params%4%%param_ApplicationID_idx_0#0)
        ((itxn_field ApplicationArgs) method "check_biguint(uint512,byte[])void")
        ((itxn_field ApplicationArgs) inner_txn_params%4%%param_ApplicationArgs_idx_1#0)
        ((itxn_field ApplicationArgs) inner_txn_params%4%%param_ApplicationArgs_idx_2#0)
        ((itxn_field TypeEnum) appl)
        ((itxn_field Fee) 0u)
        goto block@5
    block@5: // next_txn_L62
        itxn_submit
        itxn_begin
        let tmp%3#0: uint64 = (txn NumAppArgs)
        let to_encode%5#0: bool = (== tmp%3#0 1u)
        let encoded_bool%0#0: bytes[1] = (setbit 0x00 0u to_encode%5#0)
        let length%6#0: uint64 = (len 0x80)
        let as_bytes%6#0: bytes[8] = (itob length%6#0)
        let length_uint16%6#0: bytes = ((extract 6 2) as_bytes%6#0)
        let encoded_value%6#0: bytes = (concat length_uint16%6#0 0x80)
        let inner_txn_params%5%%param_ApplicationArgs_idx_1#0: bytes[1] = encoded_bool%0#0
        let inner_txn_params%5%%param_ApplicationArgs_idx_2#0: bytes = encoded_value%6#0
        let inner_txn_params%5%%param_ApplicationID_idx_0#0: uint64 = app#0
        ((itxn_field ApplicationID) inner_txn_params%5%%param_ApplicationID_idx_0#0)
        ((itxn_field ApplicationArgs) method "check_bool(bool,byte[])void")
        ((itxn_field ApplicationArgs) inner_txn_params%5%%param_ApplicationArgs_idx_1#0)
        ((itxn_field ApplicationArgs) inner_txn_params%5%%param_ApplicationArgs_idx_2#0)
        ((itxn_field TypeEnum) appl)
        ((itxn_field Fee) 0u)
        goto block@6
    block@6: // next_txn_L65
        itxn_submit
        itxn_begin
        let inner_txn_params%6%%param_ApplicationID_idx_0#0: uint64 = app#0
        ((itxn_field OnCompletion) DeleteApplication)
        ((itxn_field ApplicationID) inner_txn_params%6%%param_ApplicationID_idx_0#0)
        ((itxn_field ApplicationArgs) method "delete_application()void")
        ((itxn_field TypeEnum) appl)
        ((itxn_field Fee) 0u)
        goto block@7
    block@7: // next_txn_L67
        itxn_submit
        return 

subroutine test_cases.arc4_conversions.contract.TestContract.test_arc4_encoding() -> void:
    block@0: // L69
        itxn_begin
        ((itxn_field LocalNumUint) 0u)
        ((itxn_field LocalNumByteSlice) 0u)
        ((itxn_field GlobalNumUint) 0u)
        ((itxn_field GlobalNumByteSlice) 0u)
        ((itxn_field ExtraProgramPages) 0u)
        ((itxn_field ClearStateProgramPages) CoEBQw==)
        (itxn_field ClearStateProgramPages)
        ((itxn_field ApprovalProgramPages) CiACAAExGyITQQGZNhoAgAQzs0megASNdi/fgAQtMp7hgARqTd9zgATW4Le8gATlys0GgASJr1V7gARG4Za9gATzOIbagAQllblagAQ/VSZrgAR9JAlFTwyODAEgAQYA7ADSALgAngCEAGoAUAA2ABwAAiJDMRkiEkQxGCITRDYaATYaAlcCAIgBkyNC/+UxGSISRDEYIhNENhoBNhoCVwIAiAFvI0L/yzEZIhJEMRgiE0Q2GgE2GgJXAgCIAUsjQv+xMRkiEkQxGCITRDYaATYaAlcCAIgBJyNC/5cxGSISRDEYIhNENhoBNhoCVwIAiAEDI0L/fTEZIhJEMRgiE0Q2GgE2GgJXAgCIAN8jQv9jMRkiEkQxGCITRDYaATYaAlcCAIgAuyNC/0kxGSISRDEYIhNENhoBNhoCVwIAiACXI0L/LzEZIhJEMRgiE0Q2GgE2GgJXAgCIAHMjQv8VMRkiEkQxGCITRDYaATYaAlcCAIgATyNC/vsxGSISRDEYIhNENhoBNhoCVwIAiAArI0L+4TEZgQUSRDEYIhNEiAAYI0L+zzEZIkyOAQADQv7DMRgiEkQjQv67iYoCAIv+i/8SRImKAgCL/ov/EkSJigIAi/6L/xJEiYoCAIv+i/8SRImKAgCL/ov/EkSJigIAi/6L/xJEiYoCAIv+i/8SRImKAgCL/ov/EkSJigIAi/6L/xJEiYoCAIv+i/8SRImKAgCL/ov/EkSJ)
        (itxn_field ApprovalProgramPages)
        ((itxn_field TypeEnum) appl)
        ((itxn_field Fee) 0u)
        goto block@1
    block@1: // next_txn_L71
        itxn_submit
        let app#0: uint64 = (itxn CreatedApplicationID)
        itxn_begin
        let to_encode%0#0: bytes = (bzero 8u)
        let length%0#0: uint64 = (len to_encode%0#0)
        let as_bytes%0#0: bytes[8] = (itob length%0#0)
        let length_uint16%0#0: bytes = ((extract 6 2) as_bytes%0#0)
        let encoded_value%0#0: bytes = (concat length_uint16%0#0 to_encode%0#0)
        let inner_txn_params%1%%param_ApplicationArgs_idx_2#0: bytes = encoded_value%0#0
        let inner_txn_params%1%%param_ApplicationID_idx_0#0: uint64 = app#0
        ((itxn_field ApplicationID) inner_txn_params%1%%param_ApplicationID_idx_0#0)
        ((itxn_field ApplicationArgs) method "check_uint64(uint64,byte[])void")
        ((itxn_field ApplicationArgs) 0x0000000000000000)
        ((itxn_field ApplicationArgs) inner_txn_params%1%%param_ApplicationArgs_idx_2#0)
        ((itxn_field TypeEnum) appl)
        ((itxn_field Fee) 0u)
        goto block@2
    block@2: // next_txn_L74
        itxn_submit
        itxn_begin
        let to_encode%1#0: bytes = (txna ApplicationArgs 0)
        let length%1#0: uint64 = (len to_encode%1#0)
        let as_bytes%1#0: bytes[8] = (itob length%1#0)
        let length_uint16%1#0: bytes = ((extract 6 2) as_bytes%1#0)
        let encoded_value%1#0: bytes = (concat length_uint16%1#0 to_encode%1#0)
        let tmp%0#0: bytes = (txna ApplicationArgs 0)
        let to_encode%2#0: bytes = (concat 0x0004 tmp%0#0)
        let length%2#0: uint64 = (len to_encode%2#0)
        let as_bytes%2#0: bytes[8] = (itob length%2#0)
        let length_uint16%2#0: bytes = ((extract 6 2) as_bytes%2#0)
        let encoded_value%2#0: bytes = (concat length_uint16%2#0 to_encode%2#0)
        let inner_txn_params%2%%param_ApplicationArgs_idx_1#0: bytes = encoded_value%1#0
        let inner_txn_params%2%%param_ApplicationArgs_idx_2#0: bytes = encoded_value%2#0
        let inner_txn_params%2%%param_ApplicationID_idx_0#0: uint64 = app#0
        ((itxn_field ApplicationID) inner_txn_params%2%%param_ApplicationID_idx_0#0)
        ((itxn_field ApplicationArgs) method "check_dynamic_bytes(byte[],byte[])void")
        ((itxn_field ApplicationArgs) inner_txn_params%2%%param_ApplicationArgs_idx_1#0)
        ((itxn_field ApplicationArgs) inner_txn_params%2%%param_ApplicationArgs_idx_2#0)
        ((itxn_field TypeEnum) appl)
        ((itxn_field Fee) 0u)
        goto block@3
    block@3: // next_txn_L77
        itxn_submit
        itxn_begin
        let length%3#0: uint64 = (len 0x000b48656c6c6f20576f726c64)
        let as_bytes%3#0: bytes[8] = (itob length%3#0)
        let length_uint16%3#0: bytes = ((extract 6 2) as_bytes%3#0)
        let encoded_value%3#0: bytes = (concat length_uint16%3#0 0x000b48656c6c6f20576f726c64)
        let inner_txn_params%3%%param_ApplicationArgs_idx_2#0: bytes = encoded_value%3#0
        let inner_txn_params%3%%param_ApplicationID_idx_0#0: uint64 = app#0
        ((itxn_field ApplicationID) inner_txn_params%3%%param_ApplicationID_idx_0#0)
        ((itxn_field ApplicationArgs) method "check_string(string,byte[])void")
        ((itxn_field ApplicationArgs) 0x000b48656c6c6f20576f726c64)
        ((itxn_field ApplicationArgs) inner_txn_params%3%%param_ApplicationArgs_idx_2#0)
        ((itxn_field TypeEnum) appl)
        ((itxn_field Fee) 0u)
        goto block@4
    block@4: // next_txn_L85
        itxn_submit
        itxn_begin
        let to_encode%3#0: bytes = (bzero 64u)
        let length%4#0: uint64 = (len to_encode%3#0)
        let as_bytes%4#0: bytes[8] = (itob length%4#0)
        let length_uint16%4#0: bytes = ((extract 6 2) as_bytes%4#0)
        let encoded_value%4#0: bytes = (concat length_uint16%4#0 to_encode%3#0)
        let inner_txn_params%4%%param_ApplicationArgs_idx_2#0: bytes = encoded_value%4#0
        let inner_txn_params%4%%param_ApplicationID_idx_0#0: uint64 = app#0
        ((itxn_field ApplicationID) inner_txn_params%4%%param_ApplicationID_idx_0#0)
        ((itxn_field ApplicationArgs) method "check_biguint(uint512,byte[])void")
        ((itxn_field ApplicationArgs) 0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)
        ((itxn_field ApplicationArgs) inner_txn_params%4%%param_ApplicationArgs_idx_2#0)
        ((itxn_field TypeEnum) appl)
        ((itxn_field Fee) 0u)
        goto block@5
    block@5: // next_txn_L90
        itxn_submit
        itxn_begin
        let tmp%1#0: uint64 = (txn NumAppArgs)
        let to_encode%4#0: bool = (== tmp%1#0 1u)
        let encoded_bool%0#0: bytes[1] = (setbit 0x00 0u to_encode%4#0)
        let length%5#0: uint64 = (len 0x80)
        let as_bytes%5#0: bytes[8] = (itob length%5#0)
        let length_uint16%5#0: bytes = ((extract 6 2) as_bytes%5#0)
        let encoded_value%5#0: bytes = (concat length_uint16%5#0 0x80)
        let inner_txn_params%5%%param_ApplicationArgs_idx_1#0: bytes[1] = encoded_bool%0#0
        let inner_txn_params%5%%param_ApplicationArgs_idx_2#0: bytes = encoded_value%5#0
        let inner_txn_params%5%%param_ApplicationID_idx_0#0: uint64 = app#0
        ((itxn_field ApplicationID) inner_txn_params%5%%param_ApplicationID_idx_0#0)
        ((itxn_field ApplicationArgs) method "check_bool(bool,byte[])void")
        ((itxn_field ApplicationArgs) inner_txn_params%5%%param_ApplicationArgs_idx_1#0)
        ((itxn_field ApplicationArgs) inner_txn_params%5%%param_ApplicationArgs_idx_2#0)
        ((itxn_field TypeEnum) appl)
        ((itxn_field Fee) 0u)
        goto block@6
    block@6: // next_txn_L93
        itxn_submit
        itxn_begin
        let inner_txn_params%6%%param_ApplicationID_idx_0#0: uint64 = app#0
        ((itxn_field OnCompletion) DeleteApplication)
        ((itxn_field ApplicationID) inner_txn_params%6%%param_ApplicationID_idx_0#0)
        ((itxn_field ApplicationArgs) method "delete_application()void")
        ((itxn_field TypeEnum) appl)
        ((itxn_field Fee) 0u)
        goto block@7
    block@7: // next_txn_L95
        itxn_submit
        return 

subroutine test_cases.arc4_conversions.contract.TestContract.test_array_uint64_encoding() -> void:
    block@0: // L97
        itxn_begin
        ((itxn_field LocalNumUint) 0u)
        ((itxn_field LocalNumByteSlice) 0u)
        ((itxn_field GlobalNumUint) 0u)
        ((itxn_field GlobalNumByteSlice) 0u)
        ((itxn_field ExtraProgramPages) 0u)
        ((itxn_field ClearStateProgramPages) CoEBQw==)
        (itxn_field ClearStateProgramPages)
        ((itxn_field ApprovalProgramPages) CiACAAExGyITQQGZNhoAgAQzs0megASNdi/fgAQtMp7hgARqTd9zgATW4Le8gATlys0GgASJr1V7gARG4Za9gATzOIbagAQllblagAQ/VSZrgAR9JAlFTwyODAEgAQYA7ADSALgAngCEAGoAUAA2ABwAAiJDMRkiEkQxGCITRDYaATYaAlcCAIgBkyNC/+UxGSISRDEYIhNENhoBNhoCVwIAiAFvI0L/yzEZIhJEMRgiE0Q2GgE2GgJXAgCIAUsjQv+xMRkiEkQxGCITRDYaATYaAlcCAIgBJyNC/5cxGSISRDEYIhNENhoBNhoCVwIAiAEDI0L/fTEZIhJEMRgiE0Q2GgE2GgJXAgCIAN8jQv9jMRkiEkQxGCITRDYaATYaAlcCAIgAuyNC/0kxGSISRDEYIhNENhoBNhoCVwIAiACXI0L/LzEZIhJEMRgiE0Q2GgE2GgJXAgCIAHMjQv8VMRkiEkQxGCITRDYaATYaAlcCAIgATyNC/vsxGSISRDEYIhNENhoBNhoCVwIAiAArI0L+4TEZgQUSRDEYIhNEiAAYI0L+zzEZIkyOAQADQv7DMRgiEkQjQv67iYoCAIv+i/8SRImKAgCL/ov/EkSJigIAi/6L/xJEiYoCAIv+i/8SRImKAgCL/ov/EkSJigIAi/6L/xJEiYoCAIv+i/8SRImKAgCL/ov/EkSJigIAi/6L/xJEiYoCAIv+i/8SRImKAgCL/ov/EkSJ)
        (itxn_field ApprovalProgramPages)
        ((itxn_field TypeEnum) appl)
        ((itxn_field Fee) 0u)
        goto block@1
    block@1: // next_txn_L99
        itxn_submit
        let app#0: uint64 = (itxn CreatedApplicationID)
        let array_data%0#0: bytes = (concat 0x0000 0x)
        let expr_value_trimmed%0#0: bytes = ((extract 2 0) array_data%0#0)
        let tmp%0#0: uint64 = (txn NumAppArgs)
        let tmp%1#0: uint64 = (txn NumAppArgs)
        let tmp%2#0: uint64 = (+ tmp%1#0 1u)
        let tmp%3#0: uint64 = (txn NumAppArgs)
        let tmp%4#0: uint64 = (+ tmp%3#0 2u)
        let array%sub_item%0#1: bytes[8] = (itob tmp%0#0)
        let array%encoded%0#1: encoded_uint64[] = (concat 0x array%sub_item%0#1)
        let array%data%0#1: encoded_uint64[] = (concat 0x array%encoded%0#1)
        let array%sub_item%1#1: bytes[8] = (itob tmp%2#0)
        let array%encoded%1#1: encoded_uint64[] = (concat 0x array%sub_item%1#1)
        let array%data%1#1: encoded_uint64[] = (concat array%data%0#1 array%encoded%1#1)
        let array%sub_item%2#1: bytes[8] = (itob tmp%4#0)
        let array%encoded%2#1: encoded_uint64[] = (concat 0x array%sub_item%2#1)
        let array%data%2#1: encoded_uint64[] = (concat array%data%1#1 array%encoded%2#1)
        let encoded%0#0: encoded_uint64[] = array%data%2#1
        let concatenated%0#0: bytes = (concat expr_value_trimmed%0#0 encoded%0#0)
        let byte_len%0#0: uint64 = (len concatenated%0#0)
        let len_%0#0: uint64 = (/ byte_len%0#0 8u)
        let as_bytes%0#0: bytes[8] = (itob len_%0#0)
        let len_16_bit%0#0: bytes = ((extract 6 2) as_bytes%0#0)
        let concat_result%0#0: bytes = (concat len_16_bit%0#0 concatenated%0#0)
        let arr#0: encoded_uint64[] = concat_result%0#0
        let tmp%5#0: bytes = (bzero 7u)
        let tmp%6#0: bytes = (concat 0x0003 tmp%5#0)
        let tmp%7#0: bytes = (concat tmp%6#0 0x01)
        let tmp%8#0: bytes = (bzero 7u)
        let tmp%9#0: bytes = (concat tmp%7#0 tmp%8#0)
        let tmp%10#0: bytes = (concat tmp%9#0 0x02)
        let tmp%11#0: bytes = (bzero 7u)
        let tmp%12#0: bytes = (concat tmp%10#0 tmp%11#0)
        let expected_bytes#0: bytes = (concat tmp%12#0 0x03)
        itxn_begin
        let length%0#0: uint64 = (len expected_bytes#0)
        let as_bytes%1#0: bytes[8] = (itob length%0#0)
        let length_uint16%0#0: bytes = ((extract 6 2) as_bytes%1#0)
        let encoded_value%0#0: bytes = (concat length_uint16%0#0 expected_bytes#0)
        let inner_txn_params%1%%param_ApplicationArgs_idx_1#0: encoded_uint64[] = arr#0
        let inner_txn_params%1%%param_ApplicationArgs_idx_2#0: bytes = encoded_value%0#0
        let inner_txn_params%1%%param_ApplicationID_idx_0#0: uint64 = app#0
        ((itxn_field ApplicationID) inner_txn_params%1%%param_ApplicationID_idx_0#0)
        ((itxn_field ApplicationArgs) method "check_dyn_array_uin64(uint64[],byte[])void")
        ((itxn_field ApplicationArgs) inner_txn_params%1%%param_ApplicationArgs_idx_1#0)
        ((itxn_field ApplicationArgs) inner_txn_params%1%%param_ApplicationArgs_idx_2#0)
        ((itxn_field TypeEnum) appl)
        ((itxn_field Fee) 0u)
        goto block@2
    block@2: // next_txn_L105
        itxn_submit
        itxn_begin
        let tmp%13#0: uint64 = (txn NumAppArgs)
        let tmp%14#0: uint64 = (txn NumAppArgs)
        let tmp%15#0: uint64 = (+ tmp%14#0 1u)
        let tmp%16#0: uint64 = (txn NumAppArgs)
        let tmp%17#0: uint64 = (+ tmp%16#0 2u)
        let val_as_bytes%0#0: bytes[8] = (itob tmp%13#0)
        let val_as_bytes%1#0: bytes[8] = (itob tmp%15#0)
        let val_as_bytes%2#0: bytes[8] = (itob tmp%17#0)
        let result%0#0: bytes = (concat 0x val_as_bytes%0#0)
        let result%1#0: bytes = (concat result%0#0 val_as_bytes%1#0)
        let result%2#0: bytes = (concat result%1#0 val_as_bytes%2#0)
        let array_data%1#0: bytes = (concat 0x0003 result%2#0)
        let length%1#0: uint64 = (len expected_bytes#0)
        let as_bytes%2#0: bytes[8] = (itob length%1#0)
        let length_uint16%1#0: bytes = ((extract 6 2) as_bytes%2#0)
        let encoded_value%1#0: bytes = (concat length_uint16%1#0 expected_bytes#0)
        let inner_txn_params%2%%param_ApplicationArgs_idx_1#0: bytes = array_data%1#0
        let inner_txn_params%2%%param_ApplicationArgs_idx_2#0: bytes = encoded_value%1#0
        let inner_txn_params%2%%param_ApplicationID_idx_0#0: uint64 = app#0
        ((itxn_field ApplicationID) inner_txn_params%2%%param_ApplicationID_idx_0#0)
        ((itxn_field ApplicationArgs) method "check_dyn_array_uin64(uint64[],byte[])void")
        ((itxn_field ApplicationArgs) inner_txn_params%2%%param_ApplicationArgs_idx_1#0)
        ((itxn_field ApplicationArgs) inner_txn_params%2%%param_ApplicationArgs_idx_2#0)
        ((itxn_field TypeEnum) appl)
        ((itxn_field Fee) 0u)
        goto block@3
    block@3: // next_txn_L106
        itxn_submit
        itxn_begin
        let tmp%18#0: uint64 = (txn NumAppArgs)
        let tmp%19#0: uint64 = (txn NumAppArgs)
        let tmp%20#0: uint64 = (+ tmp%19#0 1u)
        let tmp%21#0: uint64 = (txn NumAppArgs)
        let tmp%22#0: uint64 = (+ tmp%21#0 2u)
        let val_as_bytes%3#0: bytes[8] = (itob tmp%18#0)
        let val_as_bytes%4#0: bytes[8] = (itob tmp%20#0)
        let val_as_bytes%5#0: bytes[8] = (itob tmp%22#0)
        let result%3#0: bytes = (concat 0x val_as_bytes%3#0)
        let result%4#0: bytes = (concat result%3#0 val_as_bytes%4#0)
        let result%5#0: bytes = (concat result%4#0 val_as_bytes%5#0)
        let array_data%2#0: bytes = (concat 0x result%5#0)
        let length%2#0: uint64 = (len expected_bytes#0)
        let is_out_of_bounds%0#0: bool = (>= 2u length%2#0)
        let bounded_index%0#0: uint64 = (select 2u length%2#0 is_out_of_bounds%0#0)
        let to_encode%0#0: bytes = (substring3 expected_bytes#0 bounded_index%0#0 length%2#0)
        let length%3#0: uint64 = (len to_encode%0#0)
        let as_bytes%3#0: bytes[8] = (itob length%3#0)
        let length_uint16%2#0: bytes = ((extract 6 2) as_bytes%3#0)
        let encoded_value%2#0: bytes = (concat length_uint16%2#0 to_encode%0#0)
        let inner_txn_params%3%%param_ApplicationArgs_idx_1#0: bytes = array_data%2#0
        let inner_txn_params%3%%param_ApplicationArgs_idx_2#0: bytes = encoded_value%2#0
        let inner_txn_params%3%%param_ApplicationID_idx_0#0: uint64 = app#0
        ((itxn_field ApplicationID) inner_txn_params%3%%param_ApplicationID_idx_0#0)
        ((itxn_field ApplicationArgs) method "check_static_array_uin64_3(uint64[3],byte[])void")
        ((itxn_field ApplicationArgs) inner_txn_params%3%%param_ApplicationArgs_idx_1#0)
        ((itxn_field ApplicationArgs) inner_txn_params%3%%param_ApplicationArgs_idx_2#0)
        ((itxn_field TypeEnum) appl)
        ((itxn_field Fee) 0u)
        goto block@4
    block@4: // next_txn_L112
        itxn_submit
        itxn_begin
        let inner_txn_params%4%%param_ApplicationID_idx_0#0: uint64 = app#0
        ((itxn_field OnCompletion) DeleteApplication)
        ((itxn_field ApplicationID) inner_txn_params%4%%param_ApplicationID_idx_0#0)
        ((itxn_field ApplicationArgs) method "delete_application()void")
        ((itxn_field TypeEnum) appl)
        ((itxn_field Fee) 0u)
        goto block@5
    block@5: // next_txn_L119
        itxn_submit
        return 

subroutine test_cases.arc4_conversions.contract.TestContract.test_array_static_encoding() -> void:
    block@0: // L121
        itxn_begin
        ((itxn_field LocalNumUint) 0u)
        ((itxn_field LocalNumByteSlice) 0u)
        ((itxn_field GlobalNumUint) 0u)
        ((itxn_field GlobalNumByteSlice) 0u)
        ((itxn_field ExtraProgramPages) 0u)
        ((itxn_field ClearStateProgramPages) CoEBQw==)
        (itxn_field ClearStateProgramPages)
        ((itxn_field ApprovalProgramPages) CiACAAExGyITQQGZNhoAgAQzs0megASNdi/fgAQtMp7hgARqTd9zgATW4Le8gATlys0GgASJr1V7gARG4Za9gATzOIbagAQllblagAQ/VSZrgAR9JAlFTwyODAEgAQYA7ADSALgAngCEAGoAUAA2ABwAAiJDMRkiEkQxGCITRDYaATYaAlcCAIgBkyNC/+UxGSISRDEYIhNENhoBNhoCVwIAiAFvI0L/yzEZIhJEMRgiE0Q2GgE2GgJXAgCIAUsjQv+xMRkiEkQxGCITRDYaATYaAlcCAIgBJyNC/5cxGSISRDEYIhNENhoBNhoCVwIAiAEDI0L/fTEZIhJEMRgiE0Q2GgE2GgJXAgCIAN8jQv9jMRkiEkQxGCITRDYaATYaAlcCAIgAuyNC/0kxGSISRDEYIhNENhoBNhoCVwIAiACXI0L/LzEZIhJEMRgiE0Q2GgE2GgJXAgCIAHMjQv8VMRkiEkQxGCITRDYaATYaAlcCAIgATyNC/vsxGSISRDEYIhNENhoBNhoCVwIAiAArI0L+4TEZgQUSRDEYIhNEiAAYI0L+zzEZIkyOAQADQv7DMRgiEkQjQv67iYoCAIv+i/8SRImKAgCL/ov/EkSJigIAi/6L/xJEiYoCAIv+i/8SRImKAgCL/ov/EkSJigIAi/6L/xJEiYoCAIv+i/8SRImKAgCL/ov/EkSJigIAi/6L/xJEiYoCAIv+i/8SRImKAgCL/ov/EkSJ)
        (itxn_field ApprovalProgramPages)
        ((itxn_field TypeEnum) appl)
        ((itxn_field Fee) 0u)
        goto block@1
    block@1: // next_txn_L123
        itxn_submit
        let app#0: uint64 = (itxn CreatedApplicationID)
        let array_data%0#0: bytes = (concat 0x0000 0x)
        let expr_value_trimmed%0#0: bytes = ((extract 2 0) array_data%0#0)
        let (tmp%0#0: uint64, tmp%1#0: bytes[32]) = test_cases.arc4_conversions.contract.my_struct(1u)
        let (tmp%2#0: uint64, tmp%3#0: bytes[32]) = test_cases.arc4_conversions.contract.my_struct(2u)
        let (tmp%4#0: uint64, tmp%5#0: bytes[32]) = test_cases.arc4_conversions.contract.my_struct(3u)
        let array%sub_item%0#1: bytes[8] = (itob tmp%0#0)
        let array%encoded%0#1: (encoded_uint64,bytes[32])[] = (concat 0x array%sub_item%0#1)
        let array%encoded%1#1: (encoded_uint64,bytes[32])[] = (concat array%encoded%0#1 tmp%1#0)
        let array%data%0#1: (encoded_uint64,bytes[32])[] = (concat 0x array%encoded%1#1)
        let array%sub_item%1#1: bytes[8] = (itob tmp%2#0)
        let array%encoded%2#1: (encoded_uint64,bytes[32])[] = (concat 0x array%sub_item%1#1)
        let array%encoded%3#1: (encoded_uint64,bytes[32])[] = (concat array%encoded%2#1 tmp%3#0)
        let array%data%1#1: (encoded_uint64,bytes[32])[] = (concat array%data%0#1 array%encoded%3#1)
        let array%sub_item%2#1: bytes[8] = (itob tmp%4#0)
        let array%encoded%4#1: (encoded_uint64,bytes[32])[] = (concat 0x array%sub_item%2#1)
        let array%encoded%5#1: (encoded_uint64,bytes[32])[] = (concat array%encoded%4#1 tmp%5#0)
        let array%data%2#1: (encoded_uint64,bytes[32])[] = (concat array%data%1#1 array%encoded%5#1)
        let encoded%0#0: (encoded_uint64,bytes[32])[] = array%data%2#1
        let concatenated%0#0: bytes = (concat expr_value_trimmed%0#0 encoded%0#0)
        let byte_len%0#0: uint64 = (len concatenated%0#0)
        let len_%0#0: uint64 = (/ byte_len%0#0 40u)
        let as_bytes%0#0: bytes[8] = (itob len_%0#0)
        let len_16_bit%0#0: bytes = ((extract 6 2) as_bytes%0#0)
        let concat_result%0#0: bytes = (concat len_16_bit%0#0 concatenated%0#0)
        let arr#0: (encoded_uint64,bytes[32])[] = concat_result%0#0
        let tmp%6#0: bytes = (bzero 7u)
        let tmp%7#0: bytes = (concat tmp%6#0 0x01)
        let tmp%8#0: bytes = (concat 0x0003 tmp%7#0)
        let tmp%9#0: bytes[32] = (txn Sender)
        let tmp%10#0: bytes = (concat tmp%8#0 tmp%9#0)
        let tmp%11#0: bytes = (bzero 7u)
        let tmp%12#0: bytes = (concat tmp%11#0 0x02)
        let tmp%13#0: bytes = (concat tmp%10#0 tmp%12#0)
        let tmp%14#0: bytes[32] = (txn Sender)
        let tmp%15#0: bytes = (concat tmp%13#0 tmp%14#0)
        let tmp%16#0: bytes = (bzero 7u)
        let tmp%17#0: bytes = (concat tmp%16#0 0x03)
        let tmp%18#0: bytes = (concat tmp%15#0 tmp%17#0)
        let tmp%19#0: bytes[32] = (txn Sender)
        let expected_bytes#0: bytes = (concat tmp%18#0 tmp%19#0)
        itxn_begin
        let length%0#0: uint64 = (len expected_bytes#0)
        let as_bytes%1#0: bytes[8] = (itob length%0#0)
        let length_uint16%0#0: bytes = ((extract 6 2) as_bytes%1#0)
        let encoded_value%0#0: bytes = (concat length_uint16%0#0 expected_bytes#0)
        let inner_txn_params%1%%param_ApplicationArgs_idx_1#0: (encoded_uint64,bytes[32])[] = arr#0
        let inner_txn_params%1%%param_ApplicationArgs_idx_2#0: bytes = encoded_value%0#0
        let inner_txn_params%1%%param_ApplicationID_idx_0#0: uint64 = app#0
        ((itxn_field ApplicationID) inner_txn_params%1%%param_ApplicationID_idx_0#0)
        ((itxn_field ApplicationArgs) method "check_dyn_array_struct((uint64,address)[],byte[])void")
        ((itxn_field ApplicationArgs) inner_txn_params%1%%param_ApplicationArgs_idx_1#0)
        ((itxn_field ApplicationArgs) inner_txn_params%1%%param_ApplicationArgs_idx_2#0)
        ((itxn_field TypeEnum) appl)
        ((itxn_field Fee) 0u)
        goto block@2
    block@2: // next_txn_L135
        itxn_submit
        itxn_begin
        let (tmp%20#0: uint64, tmp%21#0: bytes[32]) = test_cases.arc4_conversions.contract.my_struct(1u)
        let (tmp%22#0: uint64, tmp%23#0: bytes[32]) = test_cases.arc4_conversions.contract.my_struct(2u)
        let (tmp%24#0: uint64, tmp%25#0: bytes[32]) = test_cases.arc4_conversions.contract.my_struct(3u)
        let val_as_bytes%0#0: bytes[8] = (itob tmp%20#0)
        let encoded_tuple_buffer%1#0: bytes = (concat 0x val_as_bytes%0#0)
        let encoded_tuple_buffer%2#0: bytes = (concat encoded_tuple_buffer%1#0 tmp%21#0)
        let val_as_bytes%1#0: bytes[8] = (itob tmp%22#0)
        let encoded_tuple_buffer%4#0: bytes = (concat 0x val_as_bytes%1#0)
        let encoded_tuple_buffer%5#0: bytes = (concat encoded_tuple_buffer%4#0 tmp%23#0)
        let val_as_bytes%2#0: bytes[8] = (itob tmp%24#0)
        let encoded_tuple_buffer%7#0: bytes = (concat 0x val_as_bytes%2#0)
        let encoded_tuple_buffer%8#0: bytes = (concat encoded_tuple_buffer%7#0 tmp%25#0)
        let result%0#0: bytes = (concat 0x encoded_tuple_buffer%2#0)
        let result%1#0: bytes = (concat result%0#0 encoded_tuple_buffer%5#0)
        let result%2#0: bytes = (concat result%1#0 encoded_tuple_buffer%8#0)
        let array_data%1#0: bytes = (concat 0x result%2#0)
        let length%1#0: uint64 = (len expected_bytes#0)
        let is_out_of_bounds%0#0: bool = (>= 2u length%1#0)
        let bounded_index%0#0: uint64 = (select 2u length%1#0 is_out_of_bounds%0#0)
        let to_encode%0#0: bytes = (substring3 expected_bytes#0 bounded_index%0#0 length%1#0)
        let length%2#0: uint64 = (len to_encode%0#0)
        let as_bytes%2#0: bytes[8] = (itob length%2#0)
        let length_uint16%1#0: bytes = ((extract 6 2) as_bytes%2#0)
        let encoded_value%1#0: bytes = (concat length_uint16%1#0 to_encode%0#0)
        let inner_txn_params%2%%param_ApplicationArgs_idx_1#0: bytes = array_data%1#0
        let inner_txn_params%2%%param_ApplicationArgs_idx_2#0: bytes = encoded_value%1#0
        let inner_txn_params%2%%param_ApplicationID_idx_0#0: uint64 = app#0
        ((itxn_field ApplicationID) inner_txn_params%2%%param_ApplicationID_idx_0#0)
        ((itxn_field ApplicationArgs) method "check_static_array_struct((uint64,address)[3],byte[])void")
        ((itxn_field ApplicationArgs) inner_txn_params%2%%param_ApplicationArgs_idx_1#0)
        ((itxn_field ApplicationArgs) inner_txn_params%2%%param_ApplicationArgs_idx_2#0)
        ((itxn_field TypeEnum) appl)
        ((itxn_field Fee) 0u)
        goto block@3
    block@3: // next_txn_L136
        itxn_submit
        itxn_begin
        let inner_txn_params%3%%param_ApplicationID_idx_0#0: uint64 = app#0
        ((itxn_field OnCompletion) DeleteApplication)
        ((itxn_field ApplicationID) inner_txn_params%3%%param_ApplicationID_idx_0#0)
        ((itxn_field ApplicationArgs) method "delete_application()void")
        ((itxn_field TypeEnum) appl)
        ((itxn_field Fee) 0u)
        goto block@4
    block@4: // next_txn_L143
        itxn_submit
        return 

subroutine test_cases.arc4_conversions.contract.TestContract.test_array_dynamic_encoding() -> void:
    block@0: // L145
        itxn_begin
        ((itxn_field LocalNumUint) 0u)
        ((itxn_field LocalNumByteSlice) 0u)
        ((itxn_field GlobalNumUint) 0u)
        ((itxn_field GlobalNumByteSlice) 0u)
        ((itxn_field ExtraProgramPages) 0u)
        ((itxn_field ClearStateProgramPages) CoEBQw==)
        (itxn_field ClearStateProgramPages)
        ((itxn_field ApprovalProgramPages) CiACAAExGyITQQGZNhoAgAQzs0megASNdi/fgAQtMp7hgARqTd9zgATW4Le8gATlys0GgASJr1V7gARG4Za9gATzOIbagAQllblagAQ/VSZrgAR9JAlFTwyODAEgAQYA7ADSALgAngCEAGoAUAA2ABwAAiJDMRkiEkQxGCITRDYaATYaAlcCAIgBkyNC/+UxGSISRDEYIhNENhoBNhoCVwIAiAFvI0L/yzEZIhJEMRgiE0Q2GgE2GgJXAgCIAUsjQv+xMRkiEkQxGCITRDYaATYaAlcCAIgBJyNC/5cxGSISRDEYIhNENhoBNhoCVwIAiAEDI0L/fTEZIhJEMRgiE0Q2GgE2GgJXAgCIAN8jQv9jMRkiEkQxGCITRDYaATYaAlcCAIgAuyNC/0kxGSISRDEYIhNENhoBNhoCVwIAiACXI0L/LzEZIhJEMRgiE0Q2GgE2GgJXAgCIAHMjQv8VMRkiEkQxGCITRDYaATYaAlcCAIgATyNC/vsxGSISRDEYIhNENhoBNhoCVwIAiAArI0L+4TEZgQUSRDEYIhNEiAAYI0L+zzEZIkyOAQADQv7DMRgiEkQjQv67iYoCAIv+i/8SRImKAgCL/ov/EkSJigIAi/6L/xJEiYoCAIv+i/8SRImKAgCL/ov/EkSJigIAi/6L/xJEiYoCAIv+i/8SRImKAgCL/ov/EkSJigIAi/6L/xJEiYoCAIv+i/8SRImKAgCL/ov/EkSJ)
        (itxn_field ApprovalProgramPages)
        ((itxn_field TypeEnum) appl)
        ((itxn_field Fee) 0u)
        goto block@1
    block@1: // next_txn_L147
        itxn_submit
        let app#0: uint64 = (itxn CreatedApplicationID)
        let array_data%0#0: bytes = (concat 0x0000 0x)
        let (tmp%0#0: uint64, tmp%1#0: bytes[32], tmp%2#0: bytes) = test_cases.arc4_conversions.contract.my_dyn_struct(1u)
        let (tmp%3#0: uint64, tmp%4#0: bytes[32], tmp%5#0: bytes) = test_cases.arc4_conversions.contract.my_dyn_struct(2u)
        let (tmp%6#0: uint64, tmp%7#0: bytes[32], tmp%8#0: bytes) = test_cases.arc4_conversions.contract.my_dyn_struct(3u)
        let val_as_bytes%0#0: bytes[8] = (itob tmp%0#0)
        let length%0#0: uint64 = (len tmp%2#0)
        let as_bytes%0#0: bytes[8] = (itob length%0#0)
        let length_uint16%0#0: bytes = ((extract 6 2) as_bytes%0#0)
        let encoded_value%0#0: bytes = (concat length_uint16%0#0 tmp%2#0)
        let encoded_tuple_buffer%1#0: bytes = (concat 0x val_as_bytes%0#0)
        let encoded_tuple_buffer%2#0: bytes = (concat encoded_tuple_buffer%1#0 tmp%1#0)
        let as_bytes%1#0: bytes[8] = (itob 42u)
        let offset_as_uint16%0#0: bytes = ((extract 6 2) as_bytes%1#0)
        let encoded_tuple_buffer%3#0: bytes = (concat encoded_tuple_buffer%2#0 offset_as_uint16%0#0)
        let encoded_tuple_buffer%4#0: bytes = (concat encoded_tuple_buffer%3#0 encoded_value%0#0)
        let encoded_tuple%0#0: bytes = encoded_tuple_buffer%4#0
        let val_as_bytes%1#0: bytes[8] = (itob tmp%3#0)
        let length%1#0: uint64 = (len tmp%5#0)
        let as_bytes%2#0: bytes[8] = (itob length%1#0)
        let length_uint16%1#0: bytes = ((extract 6 2) as_bytes%2#0)
        let encoded_value%1#0: bytes = (concat length_uint16%1#0 tmp%5#0)
        let encoded_tuple_buffer%6#0: bytes = (concat 0x val_as_bytes%1#0)
        let encoded_tuple_buffer%7#0: bytes = (concat encoded_tuple_buffer%6#0 tmp%4#0)
        let as_bytes%3#0: bytes[8] = (itob 42u)
        let offset_as_uint16%1#0: bytes = ((extract 6 2) as_bytes%3#0)
        let encoded_tuple_buffer%8#0: bytes = (concat encoded_tuple_buffer%7#0 offset_as_uint16%1#0)
        let encoded_tuple_buffer%9#0: bytes = (concat encoded_tuple_buffer%8#0 encoded_value%1#0)
        let encoded_tuple%1#0: bytes = encoded_tuple_buffer%9#0
        let val_as_bytes%2#0: bytes[8] = (itob tmp%6#0)
        let length%2#0: uint64 = (len tmp%8#0)
        let as_bytes%4#0: bytes[8] = (itob length%2#0)
        let length_uint16%2#0: bytes = ((extract 6 2) as_bytes%4#0)
        let encoded_value%2#0: bytes = (concat length_uint16%2#0 tmp%8#0)
        let encoded_tuple_buffer%11#0: bytes = (concat 0x val_as_bytes%2#0)
        let encoded_tuple_buffer%12#0: bytes = (concat encoded_tuple_buffer%11#0 tmp%7#0)
        let as_bytes%5#0: bytes[8] = (itob 42u)
        let offset_as_uint16%2#0: bytes = ((extract 6 2) as_bytes%5#0)
        let encoded_tuple_buffer%13#0: bytes = (concat encoded_tuple_buffer%12#0 offset_as_uint16%2#0)
        let encoded_tuple_buffer%14#0: bytes = (concat encoded_tuple_buffer%13#0 encoded_value%2#0)
        let encoded_tuple%2#0: bytes = encoded_tuple_buffer%14#0
        let as_bytes%6#0: bytes[8] = (itob 6u)
        let next_item_head%0#0: bytes = ((extract 6 2) as_bytes%6#0)
        let result%0#0: bytes = (concat 0x next_item_head%0#0)
        let next_item_len%0#0: uint64 = (len encoded_tuple%0#0)
        let tail_offset%0#0: uint64 = (+ 6u next_item_len%0#0)
        let as_bytes%7#0: bytes[8] = (itob tail_offset%0#0)
        let next_item_head%1#0: bytes = ((extract 6 2) as_bytes%7#0)
        let result%1#0: bytes = (concat result%0#0 next_item_head%1#0)
        let next_item_len%1#0: uint64 = (len encoded_tuple%1#0)
        let tail_offset%1#0: uint64 = (+ tail_offset%0#0 next_item_len%1#0)
        let as_bytes%8#0: bytes[8] = (itob tail_offset%1#0)
        let next_item_head%2#0: bytes = ((extract 6 2) as_bytes%8#0)
        let result%2#0: bytes = (concat result%1#0 next_item_head%2#0)
        let result%3#0: bytes = (concat result%2#0 encoded_tuple%0#0)
        let result%4#0: bytes = (concat result%3#0 encoded_tuple%1#0)
        let result%5#0: bytes = (concat result%4#0 encoded_tuple%2#0)
        let l_count%0#0: uint64 = (extract_uint16 array_data%0#0 0u)
        let l_head_and_tail%0#0: bytes = ((extract 2 0) array_data%0#0)
        let r_head_and_tail%0#0: bytes = result%5#0
        let concat_result%0#0: bytes = _puya_lib.arc4.dynamic_array_concat_dynamic_element(l_count%0#0, l_head_and_tail%0#0, 3u, r_head_and_tail%0#0)
        let arr#0: (encoded_uint64,bytes[32],bytes)[] = concat_result%0#0
        let tmp%9#0: bytes = test_cases.arc4_conversions.contract.my_dyn_struct_arc4(1u)
        let tmp%10#0: bytes = test_cases.arc4_conversions.contract.my_dyn_struct_arc4(2u)
        let tmp%11#0: bytes = test_cases.arc4_conversions.contract.my_dyn_struct_arc4(3u)
        let as_bytes%9#0: bytes[8] = (itob 6u)
        let next_item_head%3#0: bytes = ((extract 6 2) as_bytes%9#0)
        let result%6#0: bytes = (concat 0x next_item_head%3#0)
        let next_item_len%3#0: uint64 = (len tmp%9#0)
        let tail_offset%3#0: uint64 = (+ 6u next_item_len%3#0)
        let as_bytes%10#0: bytes[8] = (itob tail_offset%3#0)
        let next_item_head%4#0: bytes = ((extract 6 2) as_bytes%10#0)
        let result%7#0: bytes = (concat result%6#0 next_item_head%4#0)
        let next_item_len%4#0: uint64 = (len tmp%10#0)
        let tail_offset%4#0: uint64 = (+ tail_offset%3#0 next_item_len%4#0)
        let as_bytes%11#0: bytes[8] = (itob tail_offset%4#0)
        let next_item_head%5#0: bytes = ((extract 6 2) as_bytes%11#0)
        let result%8#0: bytes = (concat result%7#0 next_item_head%5#0)
        let result%9#0: bytes = (concat result%8#0 tmp%9#0)
        let result%10#0: bytes = (concat result%9#0 tmp%10#0)
        let result%11#0: bytes = (concat result%10#0 tmp%11#0)
        let array_data%1#0: bytes = (concat 0x0003 result%11#0)
        let expected_bytes#0: bytes = array_data%1#0
        itxn_begin
        let length%3#0: uint64 = (len expected_bytes#0)
        let as_bytes%12#0: bytes[8] = (itob length%3#0)
        let length_uint16%3#0: bytes = ((extract 6 2) as_bytes%12#0)
        let encoded_value%3#0: bytes = (concat length_uint16%3#0 expected_bytes#0)
        let inner_txn_params%1%%param_ApplicationArgs_idx_1#0: (encoded_uint64,bytes[32],bytes)[] = arr#0
        let inner_txn_params%1%%param_ApplicationArgs_idx_2#0: bytes = encoded_value%3#0
        let inner_txn_params%1%%param_ApplicationID_idx_0#0: uint64 = app#0
        ((itxn_field ApplicationID) inner_txn_params%1%%param_ApplicationID_idx_0#0)
        ((itxn_field ApplicationArgs) method "check_dyn_array_dyn_struct((uint64,address,byte[])[],byte[])void")
        ((itxn_field ApplicationArgs) inner_txn_params%1%%param_ApplicationArgs_idx_1#0)
        ((itxn_field ApplicationArgs) inner_txn_params%1%%param_ApplicationArgs_idx_2#0)
        ((itxn_field TypeEnum) appl)
        ((itxn_field Fee) 0u)
        goto block@2
    block@2: // next_txn_L157
        itxn_submit
        let tmp%12#0: bytes = test_cases.arc4_conversions.contract.my_dyn_struct_arc4(1u)
        let tmp%13#0: bytes = test_cases.arc4_conversions.contract.my_dyn_struct_arc4(2u)
        let tmp%14#0: bytes = test_cases.arc4_conversions.contract.my_dyn_struct_arc4(3u)
        let as_bytes%13#0: bytes[8] = (itob 6u)
        let next_item_head%6#0: bytes = ((extract 6 2) as_bytes%13#0)
        let result%12#0: bytes = (concat 0x next_item_head%6#0)
        let next_item_len%6#0: uint64 = (len tmp%12#0)
        let tail_offset%6#0: uint64 = (+ 6u next_item_len%6#0)
        let as_bytes%14#0: bytes[8] = (itob tail_offset%6#0)
        let next_item_head%7#0: bytes = ((extract 6 2) as_bytes%14#0)
        let result%13#0: bytes = (concat result%12#0 next_item_head%7#0)
        let next_item_len%7#0: uint64 = (len tmp%13#0)
        let tail_offset%7#0: uint64 = (+ tail_offset%6#0 next_item_len%7#0)
        let as_bytes%15#0: bytes[8] = (itob tail_offset%7#0)
        let next_item_head%8#0: bytes = ((extract 6 2) as_bytes%15#0)
        let result%14#0: bytes = (concat result%13#0 next_item_head%8#0)
        let result%15#0: bytes = (concat result%14#0 tmp%12#0)
        let result%16#0: bytes = (concat result%15#0 tmp%13#0)
        let result%17#0: bytes = (concat result%16#0 tmp%14#0)
        let array_data%2#0: bytes = (concat 0x result%17#0)
        let expected_bytes#0: bytes = array_data%2#0
        itxn_begin
        let (tmp%15#0: uint64, tmp%16#0: bytes[32], tmp%17#0: bytes) = test_cases.arc4_conversions.contract.my_dyn_struct(1u)
        let (tmp%18#0: uint64, tmp%19#0: bytes[32], tmp%20#0: bytes) = test_cases.arc4_conversions.contract.my_dyn_struct(2u)
        let (tmp%21#0: uint64, tmp%22#0: bytes[32], tmp%23#0: bytes) = test_cases.arc4_conversions.contract.my_dyn_struct(3u)
        let val_as_bytes%3#0: bytes[8] = (itob tmp%15#0)
        let length%4#0: uint64 = (len tmp%17#0)
        let as_bytes%16#0: bytes[8] = (itob length%4#0)
        let length_uint16%4#0: bytes = ((extract 6 2) as_bytes%16#0)
        let encoded_value%4#0: bytes = (concat length_uint16%4#0 tmp%17#0)
        let encoded_tuple_buffer%16#0: bytes = (concat 0x val_as_bytes%3#0)
        let encoded_tuple_buffer%17#0: bytes = (concat encoded_tuple_buffer%16#0 tmp%16#0)
        let as_bytes%17#0: bytes[8] = (itob 42u)
        let offset_as_uint16%3#0: bytes = ((extract 6 2) as_bytes%17#0)
        let encoded_tuple_buffer%18#0: bytes = (concat encoded_tuple_buffer%17#0 offset_as_uint16%3#0)
        let encoded_tuple_buffer%19#0: bytes = (concat encoded_tuple_buffer%18#0 encoded_value%4#0)
        let val_as_bytes%4#0: bytes[8] = (itob tmp%18#0)
        let length%5#0: uint64 = (len tmp%20#0)
        let as_bytes%18#0: bytes[8] = (itob length%5#0)
        let length_uint16%5#0: bytes = ((extract 6 2) as_bytes%18#0)
        let encoded_value%5#0: bytes = (concat length_uint16%5#0 tmp%20#0)
        let encoded_tuple_buffer%21#0: bytes = (concat 0x val_as_bytes%4#0)
        let encoded_tuple_buffer%22#0: bytes = (concat encoded_tuple_buffer%21#0 tmp%19#0)
        let as_bytes%19#0: bytes[8] = (itob 42u)
        let offset_as_uint16%4#0: bytes = ((extract 6 2) as_bytes%19#0)
        let encoded_tuple_buffer%23#0: bytes = (concat encoded_tuple_buffer%22#0 offset_as_uint16%4#0)
        let encoded_tuple_buffer%24#0: bytes = (concat encoded_tuple_buffer%23#0 encoded_value%5#0)
        let val_as_bytes%5#0: bytes[8] = (itob tmp%21#0)
        let length%6#0: uint64 = (len tmp%23#0)
        let as_bytes%20#0: bytes[8] = (itob length%6#0)
        let length_uint16%6#0: bytes = ((extract 6 2) as_bytes%20#0)
        let encoded_value%6#0: bytes = (concat length_uint16%6#0 tmp%23#0)
        let encoded_tuple_buffer%26#0: bytes = (concat 0x val_as_bytes%5#0)
        let encoded_tuple_buffer%27#0: bytes = (concat encoded_tuple_buffer%26#0 tmp%22#0)
        let as_bytes%21#0: bytes[8] = (itob 42u)
        let offset_as_uint16%5#0: bytes = ((extract 6 2) as_bytes%21#0)
        let encoded_tuple_buffer%28#0: bytes = (concat encoded_tuple_buffer%27#0 offset_as_uint16%5#0)
        let encoded_tuple_buffer%29#0: bytes = (concat encoded_tuple_buffer%28#0 encoded_value%6#0)
        let as_bytes%22#0: bytes[8] = (itob 6u)
        let next_item_head%9#0: bytes = ((extract 6 2) as_bytes%22#0)
        let result%18#0: bytes = (concat 0x next_item_head%9#0)
        let next_item_len%9#0: uint64 = (len encoded_tuple_buffer%19#0)
        let tail_offset%9#0: uint64 = (+ 6u next_item_len%9#0)
        let as_bytes%23#0: bytes[8] = (itob tail_offset%9#0)
        let next_item_head%10#0: bytes = ((extract 6 2) as_bytes%23#0)
        let result%19#0: bytes = (concat result%18#0 next_item_head%10#0)
        let next_item_len%10#0: uint64 = (len encoded_tuple_buffer%24#0)
        let tail_offset%10#0: uint64 = (+ tail_offset%9#0 next_item_len%10#0)
        let as_bytes%24#0: bytes[8] = (itob tail_offset%10#0)
        let next_item_head%11#0: bytes = ((extract 6 2) as_bytes%24#0)
        let result%20#0: bytes = (concat result%19#0 next_item_head%11#0)
        let result%21#0: bytes = (concat result%20#0 encoded_tuple_buffer%19#0)
        let result%22#0: bytes = (concat result%21#0 encoded_tuple_buffer%24#0)
        let result%23#0: bytes = (concat result%22#0 encoded_tuple_buffer%29#0)
        let array_data%3#0: bytes = (concat 0x result%23#0)
        let length%7#0: uint64 = (len expected_bytes#0)
        let as_bytes%25#0: bytes[8] = (itob length%7#0)
        let length_uint16%7#0: bytes = ((extract 6 2) as_bytes%25#0)
        let encoded_value%7#0: bytes = (concat length_uint16%7#0 expected_bytes#0)
        let inner_txn_params%2%%param_ApplicationArgs_idx_1#0: bytes = array_data%3#0
        let inner_txn_params%2%%param_ApplicationArgs_idx_2#0: bytes = encoded_value%7#0
        let inner_txn_params%2%%param_ApplicationID_idx_0#0: uint64 = app#0
        ((itxn_field ApplicationID) inner_txn_params%2%%param_ApplicationID_idx_0#0)
        ((itxn_field ApplicationArgs) method "check_static_array_dyn_struct((uint64,address,byte[])[3],byte[])void")
        ((itxn_field ApplicationArgs) inner_txn_params%2%%param_ApplicationArgs_idx_1#0)
        ((itxn_field ApplicationArgs) inner_txn_params%2%%param_ApplicationArgs_idx_2#0)
        ((itxn_field TypeEnum) appl)
        ((itxn_field Fee) 0u)
        goto block@3
    block@3: // next_txn_L164
        itxn_submit
        itxn_begin
        let inner_txn_params%3%%param_ApplicationID_idx_0#0: uint64 = app#0
        ((itxn_field OnCompletion) DeleteApplication)
        ((itxn_field ApplicationID) inner_txn_params%3%%param_ApplicationID_idx_0#0)
        ((itxn_field ApplicationArgs) method "delete_application()void")
        ((itxn_field TypeEnum) appl)
        ((itxn_field Fee) 0u)
        goto block@4
    block@4: // next_txn_L171
        itxn_submit
        return 