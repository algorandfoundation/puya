{
  "version": 3,
  "sources": [
    "../contract.py"
  ],
  "mappings": ";;;;;;;;;;;;;AAqOA;;AAAA;AAAA;AAAA;;;AAAA;;;AAAA;;;AAAA;;;;;;AAAA;;;;;;AAAA;;;;;;AAAA;;;;;;AAAA;;;;;;AAAA;;;;;;AAAA;;;;;;AAAA;;;;;;AAAA;;;;;;AAAA;;;;;;AAAA;;;;;;AAAA;;;;;;AAAA;;;;;;AAAA;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;;;;;;AAAA;;;;;;;AA6DK;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AA7DL;;;AA6DK;;;AAAA;;;;;;AANA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAvDL;;;AAAA;;;AAAA;;;AAuDK;;;AAAA;;;;;;AANA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAjDL;;;AAAA;;;AAAA;;;AAiDK;;;AAAA;;;;;;AANA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AA3CL;;;AAAA;;;AAAA;;;AA2CK;;;AAAA;;;;;;AANA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AArCL;;;AAAA;;;AAAA;;;AAqCK;;;AAAA;;;;;;AANA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AA/BL;;;AAAA;;;AAAA;;;AA+BK;;;AAAA;;;;;;AANA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAzBL;;;AAAA;;;AAAA;;;AAyBK;;;AAAA;;;;;;AAJA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AArBL;;;AAAA;;;AAAA;;;AAqBK;;;AAAA;;;;;;AAJA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAjBL;;;AAAA;;;AAAA;;;AAiBK;;;AAAA;;;;;;AAJA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAbL;;;AAAA;;;AAAA;;;AAaK;;;AAAA;;;;;;AAJA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AATL;;;AAAA;;;AAAA;;;AASK;;;AAAA;;;;;;AAJA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AALL;;;AAAA;;;AAAA;;;AAKK;;;AAAA;;;;;;AAJA;;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;AAAA;;;;;;AADL;;AAAA;AAAA;;AAAA;;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAKA;;;;;;AAEe;;AAAA;;AAAA;AAAP;;AAER;;;;;;AAEe;;AAAA;;AAAA;AAAP;;AAER;;;;;;AAEe;;AAAA;;AAAA;AAAP;;AAER;;;;;;AAEe;;AAAA;;AAAA;AAAP;;AAER;;;;;;AAEe;;AAAA;;AAAA;AAAP;;AAER;;;;;;AAIe;;AAAA;;AAAA;AAAP;;AAER;;;;;;AAIe;;AAAA;;AAAA;AAAP;;AAER;;;;;;AAIe;;AAAA;;AAAA;AAAP;;AAER;;;;;;AAIe;;AAAA;;AAAA;AAAP;;AAER;;;;;;AAIe;;AAAA;;AAAA;AAAP;;AAER;;;;;;AAIe;;AAAA;;AAAA;AAAP;;AAER;;;;;;AAEgC;;AAAjB;;AAAA;AAAP;",
  "op_pc_offset": 0,
  "pc_events": {
    "1": {
      "subroutine": "algopy.arc4.ARC4Contract.approval_program",
      "params": {},
      "block": "main",
      "stack_in": [],
      "op": "intcblock 0 1"
    },
    "5": {
      "op": "pushbytes \"\"",
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "7": {
      "op": "b main_block@0"
    },
    "10": {
      "block": "main_block@0",
      "stack_in": [
        "tmp%0#0"
      ],
      "op": "b main_block@1"
    },
    "13": {
      "block": "main_block@1",
      "stack_in": [
        "tmp%0#0"
      ],
      "op": "txn NumAppArgs",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%0#1"
      ]
    },
    "15": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%0#1",
        "0"
      ]
    },
    "16": {
      "op": "!=",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0"
      ]
    },
    "17": {
      "op": "bz main_bare_routing@18",
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "20": {
      "op": "b main_abi_routing@2"
    },
    "23": {
      "block": "main_abi_routing@2",
      "stack_in": [
        "tmp%0#0"
      ],
      "op": "txna ApplicationArgs 0",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%2#0"
      ]
    },
    "26": {
      "op": "pushbytes 0x33b3499e // method \"delete_application()void\"",
      "defined_out": [
        "Method(delete_application()void)",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%2#0",
        "Method(delete_application()void)"
      ]
    },
    "32": {
      "op": "pushbytes 0x8d762fdf // method \"check_uint64(uint64,byte[])void\"",
      "defined_out": [
        "Method(check_uint64(uint64,byte[])void)",
        "Method(delete_application()void)",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%2#0",
        "Method(delete_application()void)",
        "Method(check_uint64(uint64,byte[])void)"
      ]
    },
    "38": {
      "op": "pushbytes 0x2d329ee1 // method \"check_dynamic_bytes(byte[],byte[])void\"",
      "defined_out": [
        "Method(check_dynamic_bytes(byte[],byte[])void)",
        "Method(check_uint64(uint64,byte[])void)",
        "Method(delete_application()void)",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%2#0",
        "Method(delete_application()void)",
        "Method(check_uint64(uint64,byte[])void)",
        "Method(check_dynamic_bytes(byte[],byte[])void)"
      ]
    },
    "44": {
      "op": "pushbytes 0x6a4ddf73 // method \"check_string(string,byte[])void\"",
      "defined_out": [
        "Method(check_dynamic_bytes(byte[],byte[])void)",
        "Method(check_string(string,byte[])void)",
        "Method(check_uint64(uint64,byte[])void)",
        "Method(delete_application()void)",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%2#0",
        "Method(delete_application()void)",
        "Method(check_uint64(uint64,byte[])void)",
        "Method(check_dynamic_bytes(byte[],byte[])void)",
        "Method(check_string(string,byte[])void)"
      ]
    },
    "50": {
      "op": "pushbytes 0xd6e0b7bc // method \"check_biguint(uint512,byte[])void\"",
      "defined_out": [
        "Method(check_biguint(uint512,byte[])void)",
        "Method(check_dynamic_bytes(byte[],byte[])void)",
        "Method(check_string(string,byte[])void)",
        "Method(check_uint64(uint64,byte[])void)",
        "Method(delete_application()void)",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%2#0",
        "Method(delete_application()void)",
        "Method(check_uint64(uint64,byte[])void)",
        "Method(check_dynamic_bytes(byte[],byte[])void)",
        "Method(check_string(string,byte[])void)",
        "Method(check_biguint(uint512,byte[])void)"
      ]
    },
    "56": {
      "op": "pushbytes 0xe5cacd06 // method \"check_bool(bool,byte[])void\"",
      "defined_out": [
        "Method(check_biguint(uint512,byte[])void)",
        "Method(check_bool(bool,byte[])void)",
        "Method(check_dynamic_bytes(byte[],byte[])void)",
        "Method(check_string(string,byte[])void)",
        "Method(check_uint64(uint64,byte[])void)",
        "Method(delete_application()void)",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%2#0",
        "Method(delete_application()void)",
        "Method(check_uint64(uint64,byte[])void)",
        "Method(check_dynamic_bytes(byte[],byte[])void)",
        "Method(check_string(string,byte[])void)",
        "Method(check_biguint(uint512,byte[])void)",
        "Method(check_bool(bool,byte[])void)"
      ]
    },
    "62": {
      "op": "pushbytes 0x89af557b // method \"check_dyn_array_uin64(uint64[],byte[])void\"",
      "defined_out": [
        "Method(check_biguint(uint512,byte[])void)",
        "Method(check_bool(bool,byte[])void)",
        "Method(check_dyn_array_uin64(uint64[],byte[])void)",
        "Method(check_dynamic_bytes(byte[],byte[])void)",
        "Method(check_string(string,byte[])void)",
        "Method(check_uint64(uint64,byte[])void)",
        "Method(delete_application()void)",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%2#0",
        "Method(delete_application()void)",
        "Method(check_uint64(uint64,byte[])void)",
        "Method(check_dynamic_bytes(byte[],byte[])void)",
        "Method(check_string(string,byte[])void)",
        "Method(check_biguint(uint512,byte[])void)",
        "Method(check_bool(bool,byte[])void)",
        "Method(check_dyn_array_uin64(uint64[],byte[])void)"
      ]
    },
    "68": {
      "op": "pushbytes 0x46e196bd // method \"check_static_array_uin64_3(uint64[3],byte[])void\"",
      "defined_out": [
        "Method(check_biguint(uint512,byte[])void)",
        "Method(check_bool(bool,byte[])void)",
        "Method(check_dyn_array_uin64(uint64[],byte[])void)",
        "Method(check_dynamic_bytes(byte[],byte[])void)",
        "Method(check_static_array_uin64_3(uint64[3],byte[])void)",
        "Method(check_string(string,byte[])void)",
        "Method(check_uint64(uint64,byte[])void)",
        "Method(delete_application()void)",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%2#0",
        "Method(delete_application()void)",
        "Method(check_uint64(uint64,byte[])void)",
        "Method(check_dynamic_bytes(byte[],byte[])void)",
        "Method(check_string(string,byte[])void)",
        "Method(check_biguint(uint512,byte[])void)",
        "Method(check_bool(bool,byte[])void)",
        "Method(check_dyn_array_uin64(uint64[],byte[])void)",
        "Method(check_static_array_uin64_3(uint64[3],byte[])void)"
      ]
    },
    "74": {
      "op": "pushbytes 0xf33886da // method \"check_dyn_array_struct((uint64,address)[],byte[])void\"",
      "defined_out": [
        "Method(check_biguint(uint512,byte[])void)",
        "Method(check_bool(bool,byte[])void)",
        "Method(check_dyn_array_struct((uint64,address)[],byte[])void)",
        "Method(check_dyn_array_uin64(uint64[],byte[])void)",
        "Method(check_dynamic_bytes(byte[],byte[])void)",
        "Method(check_static_array_uin64_3(uint64[3],byte[])void)",
        "Method(check_string(string,byte[])void)",
        "Method(check_uint64(uint64,byte[])void)",
        "Method(delete_application()void)",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%2#0",
        "Method(delete_application()void)",
        "Method(check_uint64(uint64,byte[])void)",
        "Method(check_dynamic_bytes(byte[],byte[])void)",
        "Method(check_string(string,byte[])void)",
        "Method(check_biguint(uint512,byte[])void)",
        "Method(check_bool(bool,byte[])void)",
        "Method(check_dyn_array_uin64(uint64[],byte[])void)",
        "Method(check_static_array_uin64_3(uint64[3],byte[])void)",
        "Method(check_dyn_array_struct((uint64,address)[],byte[])void)"
      ]
    },
    "80": {
      "op": "pushbytes 0x2595b95a // method \"check_static_array_struct((uint64,address)[3],byte[])void\"",
      "defined_out": [
        "Method(check_biguint(uint512,byte[])void)",
        "Method(check_bool(bool,byte[])void)",
        "Method(check_dyn_array_struct((uint64,address)[],byte[])void)",
        "Method(check_dyn_array_uin64(uint64[],byte[])void)",
        "Method(check_dynamic_bytes(byte[],byte[])void)",
        "Method(check_static_array_struct((uint64,address)[3],byte[])void)",
        "Method(check_static_array_uin64_3(uint64[3],byte[])void)",
        "Method(check_string(string,byte[])void)",
        "Method(check_uint64(uint64,byte[])void)",
        "Method(delete_application()void)",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%2#0",
        "Method(delete_application()void)",
        "Method(check_uint64(uint64,byte[])void)",
        "Method(check_dynamic_bytes(byte[],byte[])void)",
        "Method(check_string(string,byte[])void)",
        "Method(check_biguint(uint512,byte[])void)",
        "Method(check_bool(bool,byte[])void)",
        "Method(check_dyn_array_uin64(uint64[],byte[])void)",
        "Method(check_static_array_uin64_3(uint64[3],byte[])void)",
        "Method(check_dyn_array_struct((uint64,address)[],byte[])void)",
        "Method(check_static_array_struct((uint64,address)[3],byte[])void)"
      ]
    },
    "86": {
      "op": "pushbytes 0x3f55266b // method \"check_dyn_array_dyn_struct((uint64,address,byte[])[],byte[])void\"",
      "defined_out": [
        "Method(check_biguint(uint512,byte[])void)",
        "Method(check_bool(bool,byte[])void)",
        "Method(check_dyn_array_dyn_struct((uint64,address,byte[])[],byte[])void)",
        "Method(check_dyn_array_struct((uint64,address)[],byte[])void)",
        "Method(check_dyn_array_uin64(uint64[],byte[])void)",
        "Method(check_dynamic_bytes(byte[],byte[])void)",
        "Method(check_static_array_struct((uint64,address)[3],byte[])void)",
        "Method(check_static_array_uin64_3(uint64[3],byte[])void)",
        "Method(check_string(string,byte[])void)",
        "Method(check_uint64(uint64,byte[])void)",
        "Method(delete_application()void)",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%2#0",
        "Method(delete_application()void)",
        "Method(check_uint64(uint64,byte[])void)",
        "Method(check_dynamic_bytes(byte[],byte[])void)",
        "Method(check_string(string,byte[])void)",
        "Method(check_biguint(uint512,byte[])void)",
        "Method(check_bool(bool,byte[])void)",
        "Method(check_dyn_array_uin64(uint64[],byte[])void)",
        "Method(check_static_array_uin64_3(uint64[3],byte[])void)",
        "Method(check_dyn_array_struct((uint64,address)[],byte[])void)",
        "Method(check_static_array_struct((uint64,address)[3],byte[])void)",
        "Method(check_dyn_array_dyn_struct((uint64,address,byte[])[],byte[])void)"
      ]
    },
    "92": {
      "op": "pushbytes 0x7d240945 // method \"check_static_array_dyn_struct((uint64,address,byte[])[3],byte[])void\"",
      "defined_out": [
        "Method(check_biguint(uint512,byte[])void)",
        "Method(check_bool(bool,byte[])void)",
        "Method(check_dyn_array_dyn_struct((uint64,address,byte[])[],byte[])void)",
        "Method(check_dyn_array_struct((uint64,address)[],byte[])void)",
        "Method(check_dyn_array_uin64(uint64[],byte[])void)",
        "Method(check_dynamic_bytes(byte[],byte[])void)",
        "Method(check_static_array_dyn_struct((uint64,address,byte[])[3],byte[])void)",
        "Method(check_static_array_struct((uint64,address)[3],byte[])void)",
        "Method(check_static_array_uin64_3(uint64[3],byte[])void)",
        "Method(check_string(string,byte[])void)",
        "Method(check_uint64(uint64,byte[])void)",
        "Method(delete_application()void)",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%2#0",
        "Method(delete_application()void)",
        "Method(check_uint64(uint64,byte[])void)",
        "Method(check_dynamic_bytes(byte[],byte[])void)",
        "Method(check_string(string,byte[])void)",
        "Method(check_biguint(uint512,byte[])void)",
        "Method(check_bool(bool,byte[])void)",
        "Method(check_dyn_array_uin64(uint64[],byte[])void)",
        "Method(check_static_array_uin64_3(uint64[3],byte[])void)",
        "Method(check_dyn_array_struct((uint64,address)[],byte[])void)",
        "Method(check_static_array_struct((uint64,address)[3],byte[])void)",
        "Method(check_dyn_array_dyn_struct((uint64,address,byte[])[],byte[])void)",
        "Method(check_static_array_dyn_struct((uint64,address,byte[])[3],byte[])void)"
      ]
    },
    "98": {
      "op": "pushbytes 0x0351a9de // method \"check_static_bytes(byte[32])void\"",
      "defined_out": [
        "Method(check_biguint(uint512,byte[])void)",
        "Method(check_bool(bool,byte[])void)",
        "Method(check_dyn_array_dyn_struct((uint64,address,byte[])[],byte[])void)",
        "Method(check_dyn_array_struct((uint64,address)[],byte[])void)",
        "Method(check_dyn_array_uin64(uint64[],byte[])void)",
        "Method(check_dynamic_bytes(byte[],byte[])void)",
        "Method(check_static_array_dyn_struct((uint64,address,byte[])[3],byte[])void)",
        "Method(check_static_array_struct((uint64,address)[3],byte[])void)",
        "Method(check_static_array_uin64_3(uint64[3],byte[])void)",
        "Method(check_static_bytes(byte[32])void)",
        "Method(check_string(string,byte[])void)",
        "Method(check_uint64(uint64,byte[])void)",
        "Method(delete_application()void)",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%2#0",
        "Method(delete_application()void)",
        "Method(check_uint64(uint64,byte[])void)",
        "Method(check_dynamic_bytes(byte[],byte[])void)",
        "Method(check_string(string,byte[])void)",
        "Method(check_biguint(uint512,byte[])void)",
        "Method(check_bool(bool,byte[])void)",
        "Method(check_dyn_array_uin64(uint64[],byte[])void)",
        "Method(check_static_array_uin64_3(uint64[3],byte[])void)",
        "Method(check_dyn_array_struct((uint64,address)[],byte[])void)",
        "Method(check_static_array_struct((uint64,address)[3],byte[])void)",
        "Method(check_dyn_array_dyn_struct((uint64,address,byte[])[],byte[])void)",
        "Method(check_static_array_dyn_struct((uint64,address,byte[])[3],byte[])void)",
        "Method(check_static_bytes(byte[32])void)"
      ]
    },
    "104": {
      "op": "uncover 13",
      "stack_out": [
        "tmp%0#0",
        "Method(delete_application()void)",
        "Method(check_uint64(uint64,byte[])void)",
        "Method(check_dynamic_bytes(byte[],byte[])void)",
        "Method(check_string(string,byte[])void)",
        "Method(check_biguint(uint512,byte[])void)",
        "Method(check_bool(bool,byte[])void)",
        "Method(check_dyn_array_uin64(uint64[],byte[])void)",
        "Method(check_static_array_uin64_3(uint64[3],byte[])void)",
        "Method(check_dyn_array_struct((uint64,address)[],byte[])void)",
        "Method(check_static_array_struct((uint64,address)[3],byte[])void)",
        "Method(check_dyn_array_dyn_struct((uint64,address,byte[])[],byte[])void)",
        "Method(check_static_array_dyn_struct((uint64,address,byte[])[3],byte[])void)",
        "Method(check_static_bytes(byte[32])void)",
        "tmp%2#0"
      ]
    },
    "106": {
      "op": "match main_delete_application_route@3 main_check_uint64_route@4 main_check_dynamic_bytes_route@5 main_check_string_route@6 main_check_biguint_route@7 main_check_bool_route@8 main_check_dyn_array_uin64_route@9 main_check_static_array_uin64_3_route@10 main_check_dyn_array_struct_route@11 main_check_static_array_struct_route@12 main_check_dyn_array_dyn_struct_route@13 main_check_static_array_dyn_struct_route@14 main_check_static_bytes_route@15",
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "134": {
      "op": "b main_switch_case_default@16"
    },
    "137": {
      "block": "main_switch_case_default@16",
      "stack_in": [
        "tmp%0#0"
      ],
      "op": "b main_switch_case_next@17"
    },
    "140": {
      "block": "main_switch_case_next@17",
      "stack_in": [
        "tmp%0#0"
      ],
      "op": "b main_after_if_else@22"
    },
    "143": {
      "block": "main_after_if_else@22",
      "stack_in": [
        "tmp%0#0"
      ],
      "op": "intc_0 // 0",
      "defined_out": [
        "test_cases.arc4_conversions.contract.CheckApp.__puya_arc4_router__%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "test_cases.arc4_conversions.contract.CheckApp.__puya_arc4_router__%0#0"
      ]
    },
    "144": {
      "op": "bury 1",
      "defined_out": [],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "146": {
      "op": "b main_after_inlined_test_cases.arc4_conversions.contract.CheckApp.__puya_arc4_router__@23"
    },
    "149": {
      "block": "main_after_inlined_test_cases.arc4_conversions.contract.CheckApp.__puya_arc4_router__@23",
      "stack_in": [
        "tmp%0#0"
      ],
      "op": "return",
      "defined_out": [
        "tmp%0#0"
      ]
    },
    "150": {
      "block": "main_check_static_bytes_route@15",
      "stack_in": [
        "tmp%0#0"
      ],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%62#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%62#0"
      ]
    },
    "152": {
      "op": "intc_0 // NoOp",
      "defined_out": [
        "NoOp",
        "tmp%62#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%62#0",
        "NoOp"
      ]
    },
    "153": {
      "op": "==",
      "defined_out": [
        "tmp%63#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%63#0"
      ]
    },
    "154": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "155": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%64#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%64#0"
      ]
    },
    "157": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%64#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%64#0",
        "0"
      ]
    },
    "158": {
      "op": "!=",
      "defined_out": [
        "tmp%65#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%65#0"
      ]
    },
    "159": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "160": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded(uint8[32])%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "reinterpret_Encoded(uint8[32])%0#0"
      ]
    },
    "163": {
      "callsub": "test_cases.arc4_conversions.contract.CheckApp.check_static_bytes",
      "op": "callsub check_static_bytes",
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "166": {
      "op": "intc_1 // 1",
      "defined_out": [
        "test_cases.arc4_conversions.contract.CheckApp.__puya_arc4_router__%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "test_cases.arc4_conversions.contract.CheckApp.__puya_arc4_router__%0#0"
      ]
    },
    "167": {
      "op": "bury 1",
      "defined_out": [],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "169": {
      "op": "b main_after_inlined_test_cases.arc4_conversions.contract.CheckApp.__puya_arc4_router__@23"
    },
    "172": {
      "block": "main_check_static_array_dyn_struct_route@14",
      "stack_in": [
        "tmp%0#0"
      ],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%57#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%57#0"
      ]
    },
    "174": {
      "op": "intc_0 // NoOp",
      "defined_out": [
        "NoOp",
        "tmp%57#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%57#0",
        "NoOp"
      ]
    },
    "175": {
      "op": "==",
      "defined_out": [
        "tmp%58#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%58#0"
      ]
    },
    "176": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "177": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%59#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%59#0"
      ]
    },
    "179": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%59#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%59#0",
        "0"
      ]
    },
    "180": {
      "op": "!=",
      "defined_out": [
        "tmp%60#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%60#0"
      ]
    },
    "181": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "182": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded((uint64,uint8[32],(len+uint8[]))[3])%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "reinterpret_Encoded((uint64,uint8[32],(len+uint8[]))[3])%0#0"
      ]
    },
    "185": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "reinterpret_Encoded((uint64,uint8[32],(len+uint8[]))[3])%0#0",
        "reinterpret_Encoded(len+uint8[])%11#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "reinterpret_Encoded((uint64,uint8[32],(len+uint8[]))[3])%0#0",
        "reinterpret_Encoded(len+uint8[])%11#0"
      ]
    },
    "188": {
      "op": "extract 2 0",
      "defined_out": [
        "reinterpret_Encoded((uint64,uint8[32],(len+uint8[]))[3])%0#0",
        "tmp%61#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "reinterpret_Encoded((uint64,uint8[32],(len+uint8[]))[3])%0#0",
        "tmp%61#0"
      ]
    },
    "191": {
      "callsub": "test_cases.arc4_conversions.contract.CheckApp.check_static_array_dyn_struct",
      "op": "callsub check_static_array_dyn_struct",
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "194": {
      "op": "intc_1 // 1",
      "defined_out": [
        "test_cases.arc4_conversions.contract.CheckApp.__puya_arc4_router__%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "test_cases.arc4_conversions.contract.CheckApp.__puya_arc4_router__%0#0"
      ]
    },
    "195": {
      "op": "bury 1",
      "defined_out": [],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "197": {
      "op": "b main_after_inlined_test_cases.arc4_conversions.contract.CheckApp.__puya_arc4_router__@23"
    },
    "200": {
      "block": "main_check_dyn_array_dyn_struct_route@13",
      "stack_in": [
        "tmp%0#0"
      ],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%52#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%52#0"
      ]
    },
    "202": {
      "op": "intc_0 // NoOp",
      "defined_out": [
        "NoOp",
        "tmp%52#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%52#0",
        "NoOp"
      ]
    },
    "203": {
      "op": "==",
      "defined_out": [
        "tmp%53#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%53#0"
      ]
    },
    "204": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "205": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%54#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%54#0"
      ]
    },
    "207": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%54#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%54#0",
        "0"
      ]
    },
    "208": {
      "op": "!=",
      "defined_out": [
        "tmp%55#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%55#0"
      ]
    },
    "209": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "210": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded(len+(uint64,uint8[32],(len+uint8[]))[])%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "reinterpret_Encoded(len+(uint64,uint8[32],(len+uint8[]))[])%0#0"
      ]
    },
    "213": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "reinterpret_Encoded(len+(uint64,uint8[32],(len+uint8[]))[])%0#0",
        "reinterpret_Encoded(len+uint8[])%10#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "reinterpret_Encoded(len+(uint64,uint8[32],(len+uint8[]))[])%0#0",
        "reinterpret_Encoded(len+uint8[])%10#0"
      ]
    },
    "216": {
      "op": "extract 2 0",
      "defined_out": [
        "reinterpret_Encoded(len+(uint64,uint8[32],(len+uint8[]))[])%0#0",
        "tmp%56#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "reinterpret_Encoded(len+(uint64,uint8[32],(len+uint8[]))[])%0#0",
        "tmp%56#0"
      ]
    },
    "219": {
      "callsub": "test_cases.arc4_conversions.contract.CheckApp.check_dyn_array_dyn_struct",
      "op": "callsub check_dyn_array_dyn_struct",
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "222": {
      "op": "intc_1 // 1",
      "defined_out": [
        "test_cases.arc4_conversions.contract.CheckApp.__puya_arc4_router__%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "test_cases.arc4_conversions.contract.CheckApp.__puya_arc4_router__%0#0"
      ]
    },
    "223": {
      "op": "bury 1",
      "defined_out": [],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "225": {
      "op": "b main_after_inlined_test_cases.arc4_conversions.contract.CheckApp.__puya_arc4_router__@23"
    },
    "228": {
      "block": "main_check_static_array_struct_route@12",
      "stack_in": [
        "tmp%0#0"
      ],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%47#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%47#0"
      ]
    },
    "230": {
      "op": "intc_0 // NoOp",
      "defined_out": [
        "NoOp",
        "tmp%47#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%47#0",
        "NoOp"
      ]
    },
    "231": {
      "op": "==",
      "defined_out": [
        "tmp%48#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%48#0"
      ]
    },
    "232": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "233": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%49#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%49#0"
      ]
    },
    "235": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%49#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%49#0",
        "0"
      ]
    },
    "236": {
      "op": "!=",
      "defined_out": [
        "tmp%50#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%50#0"
      ]
    },
    "237": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "238": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded((uint64,uint8[32])[3])%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "reinterpret_Encoded((uint64,uint8[32])[3])%0#0"
      ]
    },
    "241": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "reinterpret_Encoded((uint64,uint8[32])[3])%0#0",
        "reinterpret_Encoded(len+uint8[])%9#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "reinterpret_Encoded((uint64,uint8[32])[3])%0#0",
        "reinterpret_Encoded(len+uint8[])%9#0"
      ]
    },
    "244": {
      "op": "extract 2 0",
      "defined_out": [
        "reinterpret_Encoded((uint64,uint8[32])[3])%0#0",
        "tmp%51#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "reinterpret_Encoded((uint64,uint8[32])[3])%0#0",
        "tmp%51#0"
      ]
    },
    "247": {
      "callsub": "test_cases.arc4_conversions.contract.CheckApp.check_static_array_struct",
      "op": "callsub check_static_array_struct",
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "250": {
      "op": "intc_1 // 1",
      "defined_out": [
        "test_cases.arc4_conversions.contract.CheckApp.__puya_arc4_router__%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "test_cases.arc4_conversions.contract.CheckApp.__puya_arc4_router__%0#0"
      ]
    },
    "251": {
      "op": "bury 1",
      "defined_out": [],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "253": {
      "op": "b main_after_inlined_test_cases.arc4_conversions.contract.CheckApp.__puya_arc4_router__@23"
    },
    "256": {
      "block": "main_check_dyn_array_struct_route@11",
      "stack_in": [
        "tmp%0#0"
      ],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%42#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%42#0"
      ]
    },
    "258": {
      "op": "intc_0 // NoOp",
      "defined_out": [
        "NoOp",
        "tmp%42#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%42#0",
        "NoOp"
      ]
    },
    "259": {
      "op": "==",
      "defined_out": [
        "tmp%43#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%43#0"
      ]
    },
    "260": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "261": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%44#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%44#0"
      ]
    },
    "263": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%44#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%44#0",
        "0"
      ]
    },
    "264": {
      "op": "!=",
      "defined_out": [
        "tmp%45#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%45#0"
      ]
    },
    "265": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "266": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded(len+(uint64,uint8[32])[])%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "reinterpret_Encoded(len+(uint64,uint8[32])[])%0#0"
      ]
    },
    "269": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "reinterpret_Encoded(len+(uint64,uint8[32])[])%0#0",
        "reinterpret_Encoded(len+uint8[])%8#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "reinterpret_Encoded(len+(uint64,uint8[32])[])%0#0",
        "reinterpret_Encoded(len+uint8[])%8#0"
      ]
    },
    "272": {
      "op": "extract 2 0",
      "defined_out": [
        "reinterpret_Encoded(len+(uint64,uint8[32])[])%0#0",
        "tmp%46#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "reinterpret_Encoded(len+(uint64,uint8[32])[])%0#0",
        "tmp%46#0"
      ]
    },
    "275": {
      "callsub": "test_cases.arc4_conversions.contract.CheckApp.check_dyn_array_struct",
      "op": "callsub check_dyn_array_struct",
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "278": {
      "op": "intc_1 // 1",
      "defined_out": [
        "test_cases.arc4_conversions.contract.CheckApp.__puya_arc4_router__%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "test_cases.arc4_conversions.contract.CheckApp.__puya_arc4_router__%0#0"
      ]
    },
    "279": {
      "op": "bury 1",
      "defined_out": [],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "281": {
      "op": "b main_after_inlined_test_cases.arc4_conversions.contract.CheckApp.__puya_arc4_router__@23"
    },
    "284": {
      "block": "main_check_static_array_uin64_3_route@10",
      "stack_in": [
        "tmp%0#0"
      ],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%37#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%37#0"
      ]
    },
    "286": {
      "op": "intc_0 // NoOp",
      "defined_out": [
        "NoOp",
        "tmp%37#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%37#0",
        "NoOp"
      ]
    },
    "287": {
      "op": "==",
      "defined_out": [
        "tmp%38#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%38#0"
      ]
    },
    "288": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "289": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%39#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%39#0"
      ]
    },
    "291": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%39#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%39#0",
        "0"
      ]
    },
    "292": {
      "op": "!=",
      "defined_out": [
        "tmp%40#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%40#0"
      ]
    },
    "293": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "294": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded(uint64[3])%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "reinterpret_Encoded(uint64[3])%0#0"
      ]
    },
    "297": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "reinterpret_Encoded(len+uint8[])%7#0",
        "reinterpret_Encoded(uint64[3])%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "reinterpret_Encoded(uint64[3])%0#0",
        "reinterpret_Encoded(len+uint8[])%7#0"
      ]
    },
    "300": {
      "op": "extract 2 0",
      "defined_out": [
        "reinterpret_Encoded(uint64[3])%0#0",
        "tmp%41#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "reinterpret_Encoded(uint64[3])%0#0",
        "tmp%41#0"
      ]
    },
    "303": {
      "callsub": "test_cases.arc4_conversions.contract.CheckApp.check_static_array_uin64_3",
      "op": "callsub check_static_array_uin64_3",
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "306": {
      "op": "intc_1 // 1",
      "defined_out": [
        "test_cases.arc4_conversions.contract.CheckApp.__puya_arc4_router__%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "test_cases.arc4_conversions.contract.CheckApp.__puya_arc4_router__%0#0"
      ]
    },
    "307": {
      "op": "bury 1",
      "defined_out": [],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "309": {
      "op": "b main_after_inlined_test_cases.arc4_conversions.contract.CheckApp.__puya_arc4_router__@23"
    },
    "312": {
      "block": "main_check_dyn_array_uin64_route@9",
      "stack_in": [
        "tmp%0#0"
      ],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%32#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%32#0"
      ]
    },
    "314": {
      "op": "intc_0 // NoOp",
      "defined_out": [
        "NoOp",
        "tmp%32#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%32#0",
        "NoOp"
      ]
    },
    "315": {
      "op": "==",
      "defined_out": [
        "tmp%33#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%33#0"
      ]
    },
    "316": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "317": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%34#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%34#0"
      ]
    },
    "319": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%34#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%34#0",
        "0"
      ]
    },
    "320": {
      "op": "!=",
      "defined_out": [
        "tmp%35#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%35#0"
      ]
    },
    "321": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "322": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded(len+uint64[])%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "reinterpret_Encoded(len+uint64[])%0#0"
      ]
    },
    "325": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "reinterpret_Encoded(len+uint64[])%0#0",
        "reinterpret_Encoded(len+uint8[])%6#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "reinterpret_Encoded(len+uint64[])%0#0",
        "reinterpret_Encoded(len+uint8[])%6#0"
      ]
    },
    "328": {
      "op": "extract 2 0",
      "defined_out": [
        "reinterpret_Encoded(len+uint64[])%0#0",
        "tmp%36#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "reinterpret_Encoded(len+uint64[])%0#0",
        "tmp%36#0"
      ]
    },
    "331": {
      "callsub": "test_cases.arc4_conversions.contract.CheckApp.check_dyn_array_uin64",
      "op": "callsub check_dyn_array_uin64",
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "334": {
      "op": "intc_1 // 1",
      "defined_out": [
        "test_cases.arc4_conversions.contract.CheckApp.__puya_arc4_router__%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "test_cases.arc4_conversions.contract.CheckApp.__puya_arc4_router__%0#0"
      ]
    },
    "335": {
      "op": "bury 1",
      "defined_out": [],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "337": {
      "op": "b main_after_inlined_test_cases.arc4_conversions.contract.CheckApp.__puya_arc4_router__@23"
    },
    "340": {
      "block": "main_check_bool_route@8",
      "stack_in": [
        "tmp%0#0"
      ],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%27#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%27#0"
      ]
    },
    "342": {
      "op": "intc_0 // NoOp",
      "defined_out": [
        "NoOp",
        "tmp%27#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%27#0",
        "NoOp"
      ]
    },
    "343": {
      "op": "==",
      "defined_out": [
        "tmp%28#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%28#0"
      ]
    },
    "344": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "345": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%29#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%29#0"
      ]
    },
    "347": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%29#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%29#0",
        "0"
      ]
    },
    "348": {
      "op": "!=",
      "defined_out": [
        "tmp%30#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%30#0"
      ]
    },
    "349": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "350": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded(bool8)%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "reinterpret_Encoded(bool8)%0#0"
      ]
    },
    "353": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "reinterpret_Encoded(bool8)%0#0",
        "reinterpret_Encoded(len+uint8[])%5#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "reinterpret_Encoded(bool8)%0#0",
        "reinterpret_Encoded(len+uint8[])%5#0"
      ]
    },
    "356": {
      "op": "extract 2 0",
      "defined_out": [
        "reinterpret_Encoded(bool8)%0#0",
        "tmp%31#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "reinterpret_Encoded(bool8)%0#0",
        "tmp%31#0"
      ]
    },
    "359": {
      "callsub": "test_cases.arc4_conversions.contract.CheckApp.check_bool",
      "op": "callsub check_bool",
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "362": {
      "op": "intc_1 // 1",
      "defined_out": [
        "test_cases.arc4_conversions.contract.CheckApp.__puya_arc4_router__%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "test_cases.arc4_conversions.contract.CheckApp.__puya_arc4_router__%0#0"
      ]
    },
    "363": {
      "op": "bury 1",
      "defined_out": [],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "365": {
      "op": "b main_after_inlined_test_cases.arc4_conversions.contract.CheckApp.__puya_arc4_router__@23"
    },
    "368": {
      "block": "main_check_biguint_route@7",
      "stack_in": [
        "tmp%0#0"
      ],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%22#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%22#0"
      ]
    },
    "370": {
      "op": "intc_0 // NoOp",
      "defined_out": [
        "NoOp",
        "tmp%22#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%22#0",
        "NoOp"
      ]
    },
    "371": {
      "op": "==",
      "defined_out": [
        "tmp%23#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%23#0"
      ]
    },
    "372": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "373": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%24#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%24#0"
      ]
    },
    "375": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%24#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%24#0",
        "0"
      ]
    },
    "376": {
      "op": "!=",
      "defined_out": [
        "tmp%25#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%25#0"
      ]
    },
    "377": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "378": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded(uint512)%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "reinterpret_Encoded(uint512)%0#0"
      ]
    },
    "381": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "reinterpret_Encoded(len+uint8[])%4#0",
        "reinterpret_Encoded(uint512)%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "reinterpret_Encoded(uint512)%0#0",
        "reinterpret_Encoded(len+uint8[])%4#0"
      ]
    },
    "384": {
      "op": "extract 2 0",
      "defined_out": [
        "reinterpret_Encoded(uint512)%0#0",
        "tmp%26#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "reinterpret_Encoded(uint512)%0#0",
        "tmp%26#0"
      ]
    },
    "387": {
      "callsub": "test_cases.arc4_conversions.contract.CheckApp.check_biguint",
      "op": "callsub check_biguint",
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "390": {
      "op": "intc_1 // 1",
      "defined_out": [
        "test_cases.arc4_conversions.contract.CheckApp.__puya_arc4_router__%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "test_cases.arc4_conversions.contract.CheckApp.__puya_arc4_router__%0#0"
      ]
    },
    "391": {
      "op": "bury 1",
      "defined_out": [],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "393": {
      "op": "b main_after_inlined_test_cases.arc4_conversions.contract.CheckApp.__puya_arc4_router__@23"
    },
    "396": {
      "block": "main_check_string_route@6",
      "stack_in": [
        "tmp%0#0"
      ],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%17#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%17#0"
      ]
    },
    "398": {
      "op": "intc_0 // NoOp",
      "defined_out": [
        "NoOp",
        "tmp%17#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%17#0",
        "NoOp"
      ]
    },
    "399": {
      "op": "==",
      "defined_out": [
        "tmp%18#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%18#0"
      ]
    },
    "400": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "401": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%19#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%19#0"
      ]
    },
    "403": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%19#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%19#0",
        "0"
      ]
    },
    "404": {
      "op": "!=",
      "defined_out": [
        "tmp%20#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%20#0"
      ]
    },
    "405": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "406": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded(len+utf8[])%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "reinterpret_Encoded(len+utf8[])%0#0"
      ]
    },
    "409": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "reinterpret_Encoded(len+uint8[])%3#0",
        "reinterpret_Encoded(len+utf8[])%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "reinterpret_Encoded(len+utf8[])%0#0",
        "reinterpret_Encoded(len+uint8[])%3#0"
      ]
    },
    "412": {
      "op": "extract 2 0",
      "defined_out": [
        "reinterpret_Encoded(len+utf8[])%0#0",
        "tmp%21#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "reinterpret_Encoded(len+utf8[])%0#0",
        "tmp%21#0"
      ]
    },
    "415": {
      "callsub": "test_cases.arc4_conversions.contract.CheckApp.check_string",
      "op": "callsub check_string",
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "418": {
      "op": "intc_1 // 1",
      "defined_out": [
        "test_cases.arc4_conversions.contract.CheckApp.__puya_arc4_router__%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "test_cases.arc4_conversions.contract.CheckApp.__puya_arc4_router__%0#0"
      ]
    },
    "419": {
      "op": "bury 1",
      "defined_out": [],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "421": {
      "op": "b main_after_inlined_test_cases.arc4_conversions.contract.CheckApp.__puya_arc4_router__@23"
    },
    "424": {
      "block": "main_check_dynamic_bytes_route@5",
      "stack_in": [
        "tmp%0#0"
      ],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%12#0"
      ]
    },
    "426": {
      "op": "intc_0 // NoOp",
      "defined_out": [
        "NoOp",
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%12#0",
        "NoOp"
      ]
    },
    "427": {
      "op": "==",
      "defined_out": [
        "tmp%13#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%13#0"
      ]
    },
    "428": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "429": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%14#0"
      ]
    },
    "431": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%14#0",
        "0"
      ]
    },
    "432": {
      "op": "!=",
      "defined_out": [
        "tmp%15#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%15#0"
      ]
    },
    "433": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "434": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded(len+uint8[])%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "reinterpret_Encoded(len+uint8[])%1#0"
      ]
    },
    "437": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "reinterpret_Encoded(len+uint8[])%1#0",
        "reinterpret_Encoded(len+uint8[])%2#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "reinterpret_Encoded(len+uint8[])%1#0",
        "reinterpret_Encoded(len+uint8[])%2#0"
      ]
    },
    "440": {
      "op": "extract 2 0",
      "defined_out": [
        "reinterpret_Encoded(len+uint8[])%1#0",
        "tmp%16#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "reinterpret_Encoded(len+uint8[])%1#0",
        "tmp%16#0"
      ]
    },
    "443": {
      "callsub": "test_cases.arc4_conversions.contract.CheckApp.check_dynamic_bytes",
      "op": "callsub check_dynamic_bytes",
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "446": {
      "op": "intc_1 // 1",
      "defined_out": [
        "test_cases.arc4_conversions.contract.CheckApp.__puya_arc4_router__%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "test_cases.arc4_conversions.contract.CheckApp.__puya_arc4_router__%0#0"
      ]
    },
    "447": {
      "op": "bury 1",
      "defined_out": [],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "449": {
      "op": "b main_after_inlined_test_cases.arc4_conversions.contract.CheckApp.__puya_arc4_router__@23"
    },
    "452": {
      "block": "main_check_uint64_route@4",
      "stack_in": [
        "tmp%0#0"
      ],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%7#0"
      ]
    },
    "454": {
      "op": "intc_0 // NoOp",
      "defined_out": [
        "NoOp",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%7#0",
        "NoOp"
      ]
    },
    "455": {
      "op": "==",
      "defined_out": [
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%8#0"
      ]
    },
    "456": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "457": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%9#0"
      ]
    },
    "459": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%9#0",
        "0"
      ]
    },
    "460": {
      "op": "!=",
      "defined_out": [
        "tmp%10#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%10#0"
      ]
    },
    "461": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "462": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded(uint64)%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "reinterpret_Encoded(uint64)%0#0"
      ]
    },
    "465": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "reinterpret_Encoded(len+uint8[])%0#0",
        "reinterpret_Encoded(uint64)%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "reinterpret_Encoded(uint64)%0#0",
        "reinterpret_Encoded(len+uint8[])%0#0"
      ]
    },
    "468": {
      "op": "extract 2 0",
      "defined_out": [
        "reinterpret_Encoded(uint64)%0#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "reinterpret_Encoded(uint64)%0#0",
        "tmp%11#0"
      ]
    },
    "471": {
      "callsub": "test_cases.arc4_conversions.contract.CheckApp.check_uint64",
      "op": "callsub check_uint64",
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "474": {
      "op": "intc_1 // 1",
      "defined_out": [
        "test_cases.arc4_conversions.contract.CheckApp.__puya_arc4_router__%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "test_cases.arc4_conversions.contract.CheckApp.__puya_arc4_router__%0#0"
      ]
    },
    "475": {
      "op": "bury 1",
      "defined_out": [],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "477": {
      "op": "b main_after_inlined_test_cases.arc4_conversions.contract.CheckApp.__puya_arc4_router__@23"
    },
    "480": {
      "block": "main_delete_application_route@3",
      "stack_in": [
        "tmp%0#0"
      ],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%3#0"
      ]
    },
    "482": {
      "op": "pushint 5 // DeleteApplication",
      "defined_out": [
        "DeleteApplication",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%3#0",
        "DeleteApplication"
      ]
    },
    "484": {
      "op": "==",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%4#0"
      ]
    },
    "485": {
      "error": "OnCompletion is not DeleteApplication",
      "op": "assert // OnCompletion is not DeleteApplication",
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "486": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%5#0"
      ]
    },
    "488": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%5#0",
        "0"
      ]
    },
    "489": {
      "op": "!=",
      "defined_out": [
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%6#0"
      ]
    },
    "490": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "491": {
      "callsub": "test_cases.arc4_conversions.contract.CheckApp.delete_application",
      "op": "callsub delete_application"
    },
    "494": {
      "op": "intc_1 // 1",
      "defined_out": [
        "test_cases.arc4_conversions.contract.CheckApp.__puya_arc4_router__%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "test_cases.arc4_conversions.contract.CheckApp.__puya_arc4_router__%0#0"
      ]
    },
    "495": {
      "op": "bury 1",
      "defined_out": [],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "497": {
      "op": "b main_after_inlined_test_cases.arc4_conversions.contract.CheckApp.__puya_arc4_router__@23"
    },
    "500": {
      "block": "main_bare_routing@18",
      "stack_in": [
        "tmp%0#0"
      ],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%66#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%66#0"
      ]
    },
    "502": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%66#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%66#0",
        "0"
      ]
    },
    "503": {
      "op": "uncover 1",
      "stack_out": [
        "tmp%0#0",
        "0",
        "tmp%66#0"
      ]
    },
    "505": {
      "op": "match main___algopy_default_create@19",
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "509": {
      "op": "b main_switch_case_default@20"
    },
    "512": {
      "block": "main_switch_case_default@20",
      "stack_in": [
        "tmp%0#0"
      ],
      "op": "b main_switch_case_next@21"
    },
    "515": {
      "block": "main_switch_case_next@21",
      "stack_in": [
        "tmp%0#0"
      ],
      "op": "b main_after_if_else@22"
    },
    "518": {
      "block": "main___algopy_default_create@19",
      "stack_in": [
        "tmp%0#0"
      ],
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%67#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%67#0"
      ]
    },
    "520": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%67#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%67#0",
        "0"
      ]
    },
    "521": {
      "op": "==",
      "defined_out": [
        "tmp%68#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%68#0"
      ]
    },
    "522": {
      "error": "can only call when creating",
      "op": "assert // can only call when creating",
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "523": {
      "op": "b main_block@24"
    },
    "526": {
      "block": "main_block@24",
      "stack_in": [
        "tmp%0#0"
      ],
      "op": "b main_after_inlined_test_cases.arc4_conversions.contract.CheckApp.__algopy_default_create@25"
    },
    "529": {
      "block": "main_after_inlined_test_cases.arc4_conversions.contract.CheckApp.__algopy_default_create@25",
      "stack_in": [
        "tmp%0#0"
      ],
      "op": "intc_1 // 1",
      "defined_out": [
        "test_cases.arc4_conversions.contract.CheckApp.__puya_arc4_router__%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "test_cases.arc4_conversions.contract.CheckApp.__puya_arc4_router__%0#0"
      ]
    },
    "530": {
      "op": "bury 1",
      "defined_out": [],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "532": {
      "op": "b main_after_inlined_test_cases.arc4_conversions.contract.CheckApp.__puya_arc4_router__@23"
    },
    "535": {
      "subroutine": "test_cases.arc4_conversions.contract.CheckApp.delete_application",
      "params": {},
      "block": "delete_application",
      "stack_in": [],
      "op": "b delete_application_block@0"
    },
    "538": {
      "block": "delete_application_block@0",
      "stack_in": [],
      "retsub": true,
      "op": "retsub"
    },
    "539": {
      "subroutine": "test_cases.arc4_conversions.contract.CheckApp.check_uint64",
      "params": {
        "value#0": "bytes",
        "expected#0": "bytes"
      },
      "block": "check_uint64",
      "stack_in": [],
      "op": "proto 2 0"
    },
    "542": {
      "op": "b check_uint64_block@0"
    },
    "545": {
      "block": "check_uint64_block@0",
      "stack_in": [],
      "op": "frame_dig -2",
      "defined_out": [
        "value#0 (copy)"
      ],
      "stack_out": [
        "value#0 (copy)"
      ]
    },
    "547": {
      "op": "frame_dig -1",
      "defined_out": [
        "expected#0 (copy)",
        "value#0 (copy)"
      ],
      "stack_out": [
        "value#0 (copy)",
        "expected#0 (copy)"
      ]
    },
    "549": {
      "op": "==",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "550": {
      "error": "expected to encode correctly",
      "op": "assert // expected to encode correctly",
      "stack_out": []
    },
    "551": {
      "retsub": true,
      "op": "retsub"
    },
    "552": {
      "subroutine": "test_cases.arc4_conversions.contract.CheckApp.check_dynamic_bytes",
      "params": {
        "value#0": "bytes",
        "expected#0": "bytes"
      },
      "block": "check_dynamic_bytes",
      "stack_in": [],
      "op": "proto 2 0"
    },
    "555": {
      "op": "b check_dynamic_bytes_block@0"
    },
    "558": {
      "block": "check_dynamic_bytes_block@0",
      "stack_in": [],
      "op": "frame_dig -2",
      "defined_out": [
        "value#0 (copy)"
      ],
      "stack_out": [
        "value#0 (copy)"
      ]
    },
    "560": {
      "op": "frame_dig -1",
      "defined_out": [
        "expected#0 (copy)",
        "value#0 (copy)"
      ],
      "stack_out": [
        "value#0 (copy)",
        "expected#0 (copy)"
      ]
    },
    "562": {
      "op": "==",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "563": {
      "error": "expected to encode correctly",
      "op": "assert // expected to encode correctly",
      "stack_out": []
    },
    "564": {
      "retsub": true,
      "op": "retsub"
    },
    "565": {
      "subroutine": "test_cases.arc4_conversions.contract.CheckApp.check_string",
      "params": {
        "value#0": "bytes",
        "expected#0": "bytes"
      },
      "block": "check_string",
      "stack_in": [],
      "op": "proto 2 0"
    },
    "568": {
      "op": "b check_string_block@0"
    },
    "571": {
      "block": "check_string_block@0",
      "stack_in": [],
      "op": "frame_dig -2",
      "defined_out": [
        "value#0 (copy)"
      ],
      "stack_out": [
        "value#0 (copy)"
      ]
    },
    "573": {
      "op": "frame_dig -1",
      "defined_out": [
        "expected#0 (copy)",
        "value#0 (copy)"
      ],
      "stack_out": [
        "value#0 (copy)",
        "expected#0 (copy)"
      ]
    },
    "575": {
      "op": "==",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "576": {
      "error": "expected to encode correctly",
      "op": "assert // expected to encode correctly",
      "stack_out": []
    },
    "577": {
      "retsub": true,
      "op": "retsub"
    },
    "578": {
      "subroutine": "test_cases.arc4_conversions.contract.CheckApp.check_biguint",
      "params": {
        "value#0": "bytes",
        "expected#0": "bytes"
      },
      "block": "check_biguint",
      "stack_in": [],
      "op": "proto 2 0"
    },
    "581": {
      "op": "b check_biguint_block@0"
    },
    "584": {
      "block": "check_biguint_block@0",
      "stack_in": [],
      "op": "frame_dig -2",
      "defined_out": [
        "value#0 (copy)"
      ],
      "stack_out": [
        "value#0 (copy)"
      ]
    },
    "586": {
      "op": "frame_dig -1",
      "defined_out": [
        "expected#0 (copy)",
        "value#0 (copy)"
      ],
      "stack_out": [
        "value#0 (copy)",
        "expected#0 (copy)"
      ]
    },
    "588": {
      "op": "==",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "589": {
      "error": "expected to encode correctly",
      "op": "assert // expected to encode correctly",
      "stack_out": []
    },
    "590": {
      "retsub": true,
      "op": "retsub"
    },
    "591": {
      "subroutine": "test_cases.arc4_conversions.contract.CheckApp.check_bool",
      "params": {
        "value#0": "bytes",
        "expected#0": "bytes"
      },
      "block": "check_bool",
      "stack_in": [],
      "op": "proto 2 0"
    },
    "594": {
      "op": "b check_bool_block@0"
    },
    "597": {
      "block": "check_bool_block@0",
      "stack_in": [],
      "op": "frame_dig -2",
      "defined_out": [
        "value#0 (copy)"
      ],
      "stack_out": [
        "value#0 (copy)"
      ]
    },
    "599": {
      "op": "frame_dig -1",
      "defined_out": [
        "expected#0 (copy)",
        "value#0 (copy)"
      ],
      "stack_out": [
        "value#0 (copy)",
        "expected#0 (copy)"
      ]
    },
    "601": {
      "op": "==",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "602": {
      "error": "expected to encode correctly",
      "op": "assert // expected to encode correctly",
      "stack_out": []
    },
    "603": {
      "retsub": true,
      "op": "retsub"
    },
    "604": {
      "subroutine": "test_cases.arc4_conversions.contract.CheckApp.check_dyn_array_uin64",
      "params": {
        "value#0": "bytes",
        "expected#0": "bytes"
      },
      "block": "check_dyn_array_uin64",
      "stack_in": [],
      "op": "proto 2 0"
    },
    "607": {
      "op": "b check_dyn_array_uin64_block@0"
    },
    "610": {
      "block": "check_dyn_array_uin64_block@0",
      "stack_in": [],
      "op": "frame_dig -2",
      "defined_out": [
        "value#0 (copy)"
      ],
      "stack_out": [
        "value#0 (copy)"
      ]
    },
    "612": {
      "op": "frame_dig -1",
      "defined_out": [
        "expected#0 (copy)",
        "value#0 (copy)"
      ],
      "stack_out": [
        "value#0 (copy)",
        "expected#0 (copy)"
      ]
    },
    "614": {
      "op": "==",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "615": {
      "error": "expected to encode correctly",
      "op": "assert // expected to encode correctly",
      "stack_out": []
    },
    "616": {
      "retsub": true,
      "op": "retsub"
    },
    "617": {
      "subroutine": "test_cases.arc4_conversions.contract.CheckApp.check_static_array_uin64_3",
      "params": {
        "value#0": "bytes",
        "expected#0": "bytes"
      },
      "block": "check_static_array_uin64_3",
      "stack_in": [],
      "op": "proto 2 0"
    },
    "620": {
      "op": "b check_static_array_uin64_3_block@0"
    },
    "623": {
      "block": "check_static_array_uin64_3_block@0",
      "stack_in": [],
      "op": "frame_dig -2",
      "defined_out": [
        "value#0 (copy)"
      ],
      "stack_out": [
        "value#0 (copy)"
      ]
    },
    "625": {
      "op": "frame_dig -1",
      "defined_out": [
        "expected#0 (copy)",
        "value#0 (copy)"
      ],
      "stack_out": [
        "value#0 (copy)",
        "expected#0 (copy)"
      ]
    },
    "627": {
      "op": "==",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "628": {
      "error": "expected to encode correctly",
      "op": "assert // expected to encode correctly",
      "stack_out": []
    },
    "629": {
      "retsub": true,
      "op": "retsub"
    },
    "630": {
      "subroutine": "test_cases.arc4_conversions.contract.CheckApp.check_dyn_array_struct",
      "params": {
        "value#0": "bytes",
        "expected#0": "bytes"
      },
      "block": "check_dyn_array_struct",
      "stack_in": [],
      "op": "proto 2 0"
    },
    "633": {
      "op": "b check_dyn_array_struct_block@0"
    },
    "636": {
      "block": "check_dyn_array_struct_block@0",
      "stack_in": [],
      "op": "frame_dig -2",
      "defined_out": [
        "value#0 (copy)"
      ],
      "stack_out": [
        "value#0 (copy)"
      ]
    },
    "638": {
      "op": "frame_dig -1",
      "defined_out": [
        "expected#0 (copy)",
        "value#0 (copy)"
      ],
      "stack_out": [
        "value#0 (copy)",
        "expected#0 (copy)"
      ]
    },
    "640": {
      "op": "==",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "641": {
      "error": "expected to encode correctly",
      "op": "assert // expected to encode correctly",
      "stack_out": []
    },
    "642": {
      "retsub": true,
      "op": "retsub"
    },
    "643": {
      "subroutine": "test_cases.arc4_conversions.contract.CheckApp.check_static_array_struct",
      "params": {
        "value#0": "bytes",
        "expected#0": "bytes"
      },
      "block": "check_static_array_struct",
      "stack_in": [],
      "op": "proto 2 0"
    },
    "646": {
      "op": "b check_static_array_struct_block@0"
    },
    "649": {
      "block": "check_static_array_struct_block@0",
      "stack_in": [],
      "op": "frame_dig -2",
      "defined_out": [
        "value#0 (copy)"
      ],
      "stack_out": [
        "value#0 (copy)"
      ]
    },
    "651": {
      "op": "frame_dig -1",
      "defined_out": [
        "expected#0 (copy)",
        "value#0 (copy)"
      ],
      "stack_out": [
        "value#0 (copy)",
        "expected#0 (copy)"
      ]
    },
    "653": {
      "op": "==",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "654": {
      "error": "expected to encode correctly",
      "op": "assert // expected to encode correctly",
      "stack_out": []
    },
    "655": {
      "retsub": true,
      "op": "retsub"
    },
    "656": {
      "subroutine": "test_cases.arc4_conversions.contract.CheckApp.check_dyn_array_dyn_struct",
      "params": {
        "value#0": "bytes",
        "expected#0": "bytes"
      },
      "block": "check_dyn_array_dyn_struct",
      "stack_in": [],
      "op": "proto 2 0"
    },
    "659": {
      "op": "b check_dyn_array_dyn_struct_block@0"
    },
    "662": {
      "block": "check_dyn_array_dyn_struct_block@0",
      "stack_in": [],
      "op": "frame_dig -2",
      "defined_out": [
        "value#0 (copy)"
      ],
      "stack_out": [
        "value#0 (copy)"
      ]
    },
    "664": {
      "op": "frame_dig -1",
      "defined_out": [
        "expected#0 (copy)",
        "value#0 (copy)"
      ],
      "stack_out": [
        "value#0 (copy)",
        "expected#0 (copy)"
      ]
    },
    "666": {
      "op": "==",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "667": {
      "error": "expected to encode correctly",
      "op": "assert // expected to encode correctly",
      "stack_out": []
    },
    "668": {
      "retsub": true,
      "op": "retsub"
    },
    "669": {
      "subroutine": "test_cases.arc4_conversions.contract.CheckApp.check_static_array_dyn_struct",
      "params": {
        "value#0": "bytes",
        "expected#0": "bytes"
      },
      "block": "check_static_array_dyn_struct",
      "stack_in": [],
      "op": "proto 2 0"
    },
    "672": {
      "op": "b check_static_array_dyn_struct_block@0"
    },
    "675": {
      "block": "check_static_array_dyn_struct_block@0",
      "stack_in": [],
      "op": "frame_dig -2",
      "defined_out": [
        "value#0 (copy)"
      ],
      "stack_out": [
        "value#0 (copy)"
      ]
    },
    "677": {
      "op": "frame_dig -1",
      "defined_out": [
        "expected#0 (copy)",
        "value#0 (copy)"
      ],
      "stack_out": [
        "value#0 (copy)",
        "expected#0 (copy)"
      ]
    },
    "679": {
      "op": "==",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "680": {
      "error": "expected to encode correctly",
      "op": "assert // expected to encode correctly",
      "stack_out": []
    },
    "681": {
      "retsub": true,
      "op": "retsub"
    },
    "682": {
      "subroutine": "test_cases.arc4_conversions.contract.CheckApp.check_static_bytes",
      "params": {
        "bytes32#0": "bytes"
      },
      "block": "check_static_bytes",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "685": {
      "op": "b check_static_bytes_block@0"
    },
    "688": {
      "block": "check_static_bytes_block@0",
      "stack_in": [],
      "op": "txn Sender",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "690": {
      "op": "frame_dig -1",
      "defined_out": [
        "bytes32#0 (copy)",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "bytes32#0 (copy)"
      ]
    },
    "692": {
      "op": "==",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "693": {
      "error": "expected to encode correctly",
      "op": "assert // expected to encode correctly",
      "stack_out": []
    },
    "694": {
      "retsub": true,
      "op": "retsub"
    }
  }
}