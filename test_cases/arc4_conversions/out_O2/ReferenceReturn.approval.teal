#pragma version 10
#pragma typetrack false

// algopy.arc4.ARC4Contract.approval_program() -> uint64:
main:
    intcblock 1 0
    bytecblock 0x151f7c75 "accounts" "assets" "apps" 0x151f7c7500000000000004d2
    txn NumAppArgs
    bz main_bare_routing@15
    pushbytess 0x6c7a1cb5 0xc8480f0c 0x37c0cbf2 0x864086a7 0x6728b1a1 0xce7e6cd3 0x0a37f6e1 0x4c894d7e 0x62ebcf89 0x924e778c // method "acc_ret()address", method "asset_ret()uint64", method "app_ret()uint64", method "store(account,application,asset)void", method "store_apps(uint64[])void", method "store_assets(uint64[])void", method "store_accounts(address[])void", method "return_apps()uint64[]", method "return_assets()uint64[]", method "return_accounts()address[]"
    txna ApplicationArgs 0
    match main_acc_ret_route@3 main_asset_ret_route@4 main_app_ret_route@5 main_store_route@6 main_store_apps_route@7 main_store_assets_route@8 main_store_accounts_route@9 main_return_apps_route@10 main_return_assets_route@11 main_return_accounts_route@12

main_after_if_else@19:
    intc_1 // 0
    return

main_return_accounts_route@12:
    txn OnCompletion
    !
    assert // OnCompletion is not NoOp
    txn ApplicationID
    assert // can only call when not creating
    intc_1 // 0
    bytec_1 // "accounts"
    app_global_get_ex
    assert // check self.accounts exists
    bytec_0 // 0x151f7c75
    swap
    concat
    log
    intc_0 // 1
    return

main_return_assets_route@11:
    txn OnCompletion
    !
    assert // OnCompletion is not NoOp
    txn ApplicationID
    assert // can only call when not creating
    intc_1 // 0
    bytec_2 // "assets"
    app_global_get_ex
    assert // check self.assets exists
    bytec_0 // 0x151f7c75
    swap
    concat
    log
    intc_0 // 1
    return

main_return_apps_route@10:
    txn OnCompletion
    !
    assert // OnCompletion is not NoOp
    txn ApplicationID
    assert // can only call when not creating
    intc_1 // 0
    bytec_3 // "apps"
    app_global_get_ex
    assert // check self.apps exists
    bytec_0 // 0x151f7c75
    swap
    concat
    log
    intc_0 // 1
    return

main_store_accounts_route@9:
    txn OnCompletion
    !
    assert // OnCompletion is not NoOp
    txn ApplicationID
    assert // can only call when not creating
    bytec_1 // "accounts"
    txna ApplicationArgs 1
    app_global_put
    intc_0 // 1
    return

main_store_assets_route@8:
    txn OnCompletion
    !
    assert // OnCompletion is not NoOp
    txn ApplicationID
    assert // can only call when not creating
    bytec_2 // "assets"
    txna ApplicationArgs 1
    app_global_put
    intc_0 // 1
    return

main_store_apps_route@7:
    txn OnCompletion
    !
    assert // OnCompletion is not NoOp
    txn ApplicationID
    assert // can only call when not creating
    bytec_3 // "apps"
    txna ApplicationArgs 1
    app_global_put
    intc_0 // 1
    return

main_store_route@6:
    txn OnCompletion
    !
    assert // OnCompletion is not NoOp
    txn ApplicationID
    assert // can only call when not creating
    txna ApplicationArgs 1
    btoi
    txnas Accounts
    txna ApplicationArgs 2
    btoi
    txnas Applications
    txna ApplicationArgs 3
    btoi
    txnas Assets
    pushbytes "acc"
    uncover 3
    app_global_put
    pushbytes "asset"
    swap
    app_global_put
    pushbytes "app"
    swap
    app_global_put
    intc_0 // 1
    return

main_app_ret_route@5:
    txn OnCompletion
    !
    assert // OnCompletion is not NoOp
    txn ApplicationID
    assert // can only call when not creating
    bytec 4 // 0x151f7c7500000000000004d2
    log
    intc_0 // 1
    return

main_asset_ret_route@4:
    txn OnCompletion
    !
    assert // OnCompletion is not NoOp
    txn ApplicationID
    assert // can only call when not creating
    bytec 4 // 0x151f7c7500000000000004d2
    log
    intc_0 // 1
    return

main_acc_ret_route@3:
    txn OnCompletion
    !
    assert // OnCompletion is not NoOp
    txn ApplicationID
    assert // can only call when not creating
    bytec_0 // 0x151f7c75
    txn Sender
    concat
    log
    intc_0 // 1
    return

main_bare_routing@15:
    txn OnCompletion
    bnz main_after_if_else@19
    txn ApplicationID
    !
    assert // can only call when creating
    intc_0 // 1
    return
