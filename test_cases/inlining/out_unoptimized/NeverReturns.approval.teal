#pragma version 10
#pragma typetrack false

// algopy.arc4.ARC4Contract.approval_program() -> uint64:
main:
    intcblock 0 1
    b block@0

block@0:
    b block@1

block@1:
    // inlining/contract.py:34
    // class NeverReturns(arc4.ARC4Contract):
    txn NumAppArgs
    intc_0 // 0
    !=
    bz __algopy_default_create@6
    b abi_routing@2

abi_routing@2:
    // inlining/contract.py:34
    // class NeverReturns(arc4.ARC4Contract):
    txna ApplicationArgs 0
    pushbytes 0xa79bc532 // method "err()void"
    uncover 1
    match err_route@3
    b switch_case_default@4

switch_case_default@4:
    b switch_case_next@5

switch_case_next@5:
    b after_if_else@7

after_if_else@7:
    // inlining/contract.py:34
    // class NeverReturns(arc4.ARC4Contract):
    err

err_route@3:
    // inlining/contract.py:35
    // @arc4.abimethod()
    txn OnCompletion
    intc_0 // NoOp
    ==
    txn ApplicationID
    intc_0 // 0
    !=
    &&
    assert // OnCompletion must be NoOp && can only call when not creating
    callsub err
    b switch_case_next@5

__algopy_default_create@6:
    txn OnCompletion
    intc_0 // NoOp
    ==
    txn ApplicationID
    intc_0 // 0
    ==
    &&
    assert // OnCompletion must be NoOp && can only call when creating
    b block@9

block@9:
    b after_inlined_test_cases.inlining.contract.NeverReturns.__algopy_default_create@10

after_inlined_test_cases.inlining.contract.NeverReturns.__algopy_default_create@10:
    intc_1 // 1
    return


// test_cases.inlining.contract.NeverReturns.err[routing]() -> void:
err:
    b err_block@0

err_block@0:
    // inlining/contract.py:35
    // @arc4.abimethod()
    callsub test_cases.inlining.contract.NeverReturns.err
    intc_1 // 1
    return


// test_cases.inlining.contract.NeverReturns.err() -> void:
test_cases.inlining.contract.NeverReturns.err:
    b test_cases.inlining.contract.NeverReturns.err_block@0

test_cases.inlining.contract.NeverReturns.err_block@0:
    // inlining/contract.py:37
    // op.err()
    err
