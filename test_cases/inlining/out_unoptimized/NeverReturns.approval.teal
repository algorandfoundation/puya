#pragma version 10
#pragma typetrack false

// algopy.arc4.ARC4Contract.approval_program() -> uint64:
main:
    intcblock 0 1

main_block@0:

main_block@1:
    // inlining/contract.py:34
    // class NeverReturns(arc4.ARC4Contract):
    txn NumAppArgs
    intc_0 // 0
    !=
    bz main_bare_routing@6

main_abi_routing@2:
    // inlining/contract.py:34
    // class NeverReturns(arc4.ARC4Contract):
    txna ApplicationArgs 0
    pushbytes 0xa79bc532 // method "err()void"
    swap
    match main_err_route@3

main_switch_case_default@4:

main_switch_case_next@5:

main_after_if_else@10:
    // inlining/contract.py:34
    // class NeverReturns(arc4.ARC4Contract):
    intc_0 // 0

main_after_inlined_test_cases.inlining.contract.NeverReturns.__puya_arc4_router__@11:
    return

main_err_route@3:
    // inlining/contract.py:35
    // @arc4.abimethod()
    txn OnCompletion
    intc_0 // NoOp
    ==
    assert // OnCompletion is not NoOp
    txn ApplicationID
    intc_0 // 0
    !=
    assert // can only call when not creating
    callsub err
    intc_1 // 1
    b main_after_inlined_test_cases.inlining.contract.NeverReturns.__puya_arc4_router__@11

main_bare_routing@6:
    // inlining/contract.py:34
    // class NeverReturns(arc4.ARC4Contract):
    txn OnCompletion
    intc_0 // 0
    swap
    match main___algopy_default_create@7

main_switch_case_default@8:

main_switch_case_next@9:
    b main_after_if_else@10

main___algopy_default_create@7:
    txn ApplicationID
    intc_0 // 0
    ==
    assert // can only call when creating

main_block@12:

main_after_inlined_test_cases.inlining.contract.NeverReturns.__algopy_default_create@13:
    intc_1 // 1
    b main_after_inlined_test_cases.inlining.contract.NeverReturns.__puya_arc4_router__@11


// test_cases.inlining.contract.NeverReturns.err() -> void:
err:

err_block@0:
    // inlining/contract.py:37
    // op.err()
    err
