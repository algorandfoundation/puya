{
  "version": 3,
  "sources": [
    "../contract.py"
  ],
  "mappings": ";;;;;;;;;;;;;;AAOY;;;AAAA;;;AACA;;;AAiBD;;;AAAA;;;AAKA;AALS;AAAT;AAAA;;AAjBC;;;AAAJ;;AAAA;;AACI;;;AAgBD;;;AAAA;;;AAKA;AALS;AAAT;;;AAhBC;;;AAAJ;AAqBG;AApBI;;AAAA;AAAA;AAAa;;AAAb;AAAP;AACA;;;AASJ",
  "op_pc_offset": 0,
  "pc_events": {
    "1": {
      "subroutine": "test_cases.inlining.contract.MyContract.approval_program",
      "params": {},
      "block": "main",
      "stack_in": [],
      "op": "intcblock 0 1"
    },
    "5": {
      "op": "pushbytes \"\"",
      "stack_out": [
        "a#0"
      ]
    },
    "7": {
      "op": "pushbytes \"\"",
      "stack_out": [
        "a#0",
        "tmp%1#0"
      ]
    },
    "9": {
      "op": "pushbytes \"\"",
      "stack_out": [
        "a#0",
        "tmp%1#0",
        "tmp%2#0"
      ]
    },
    "11": {
      "op": "b block@0"
    },
    "14": {
      "block": "block@0",
      "stack_in": [
        "a#0",
        "tmp%1#0",
        "tmp%2#0"
      ],
      "op": "b block@1"
    },
    "17": {
      "block": "block@1",
      "stack_in": [
        "a#0",
        "tmp%1#0",
        "tmp%2#0"
      ],
      "op": "b after_inlined_test_cases.inlining.contract.zero@2"
    },
    "20": {
      "block": "after_inlined_test_cases.inlining.contract.zero@2",
      "stack_in": [
        "a#0",
        "tmp%1#0",
        "tmp%2#0"
      ],
      "op": "b block@3"
    },
    "23": {
      "block": "block@3",
      "stack_in": [
        "a#0",
        "tmp%1#0",
        "tmp%2#0"
      ],
      "op": "b block@11"
    },
    "26": {
      "block": "block@11",
      "stack_in": [
        "a#0",
        "tmp%1#0",
        "tmp%2#0"
      ],
      "op": "b after_inlined_test_cases.inlining.contract.zero@12"
    },
    "29": {
      "block": "after_inlined_test_cases.inlining.contract.zero@12",
      "stack_in": [
        "a#0",
        "tmp%1#0",
        "tmp%2#0"
      ],
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "a#0",
        "tmp%1#0",
        "tmp%2#0",
        "0"
      ]
    },
    "30": {
      "op": "intc_1 // 1",
      "defined_out": [
        "0",
        "1"
      ],
      "stack_out": [
        "a#0",
        "tmp%1#0",
        "tmp%2#0",
        "0",
        "1"
      ]
    },
    "31": {
      "op": "+",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "a#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%1#0"
      ]
    },
    "32": {
      "op": "bury 2",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "a#0",
        "tmp%1#0",
        "tmp%2#0"
      ]
    },
    "34": {
      "op": "b after_inlined_test_cases.inlining.contract.one@4"
    },
    "37": {
      "block": "after_inlined_test_cases.inlining.contract.one@4",
      "stack_in": [
        "a#0",
        "tmp%1#0",
        "tmp%2#0"
      ],
      "op": "dig 1",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "a#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%1#0"
      ]
    },
    "39": {
      "op": "bury 3",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "a#0",
        "tmp%1#0",
        "tmp%2#0"
      ]
    },
    "41": {
      "op": "b block@5"
    },
    "44": {
      "block": "block@5",
      "stack_in": [
        "a#0",
        "tmp%1#0",
        "tmp%2#0"
      ],
      "op": "b block@9"
    },
    "47": {
      "block": "block@9",
      "stack_in": [
        "a#0",
        "tmp%1#0",
        "tmp%2#0"
      ],
      "op": "b after_inlined_test_cases.inlining.contract.zero@10"
    },
    "50": {
      "block": "after_inlined_test_cases.inlining.contract.zero@10",
      "stack_in": [
        "a#0",
        "tmp%1#0",
        "tmp%2#0"
      ],
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "a#0",
        "tmp%1#0",
        "tmp%2#0",
        "0"
      ]
    },
    "51": {
      "op": "intc_1 // 1",
      "defined_out": [
        "0",
        "1"
      ],
      "stack_out": [
        "a#0",
        "tmp%1#0",
        "tmp%2#0",
        "0",
        "1"
      ]
    },
    "52": {
      "op": "+",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "a#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%1#0"
      ]
    },
    "53": {
      "op": "bury 1",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "a#0",
        "tmp%1#0",
        "tmp%2#0"
      ]
    },
    "55": {
      "op": "b after_inlined_test_cases.inlining.contract.one@6"
    },
    "58": {
      "block": "after_inlined_test_cases.inlining.contract.one@6",
      "stack_in": [
        "a#0",
        "tmp%1#0",
        "tmp%2#0"
      ],
      "op": "dup",
      "defined_out": [
        "b#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "a#0",
        "tmp%1#0",
        "tmp%2#0",
        "b#0"
      ]
    },
    "59": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "b#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "a#0",
        "tmp%1#0",
        "tmp%2#0",
        "b#0",
        "0"
      ]
    },
    "60": {
      "op": "dig 4",
      "defined_out": [
        "0",
        "a#0",
        "b#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "a#0",
        "tmp%1#0",
        "tmp%2#0",
        "b#0",
        "0",
        "a#0"
      ]
    },
    "62": {
      "op": "+",
      "defined_out": [
        "a#0",
        "b#0",
        "tmp%2#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "a#0",
        "tmp%1#0",
        "tmp%2#0",
        "b#0",
        "tmp%3#0"
      ]
    },
    "63": {
      "op": "+",
      "defined_out": [
        "a#0",
        "tmp%2#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "a#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%4#0"
      ]
    },
    "64": {
      "op": "pushint 2 // 2",
      "defined_out": [
        "2",
        "a#0",
        "tmp%2#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "a#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%4#0",
        "2"
      ]
    },
    "66": {
      "op": "==",
      "defined_out": [
        "a#0",
        "tmp%2#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "a#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%5#0"
      ]
    },
    "67": {
      "op": "assert",
      "stack_out": [
        "a#0",
        "tmp%1#0",
        "tmp%2#0"
      ]
    },
    "68": {
      "op": "b block@7"
    },
    "71": {
      "block": "block@7",
      "stack_in": [
        "a#0",
        "tmp%1#0",
        "tmp%2#0"
      ],
      "op": "err"
    }
  }
}