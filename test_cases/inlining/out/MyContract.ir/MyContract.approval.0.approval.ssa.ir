main test_cases.inlining.contract.MyContract.approval_program:
    block@0: // L7
        let z#0: uint64 = test_cases.inlining.contract.zero()
        let a#0: uint64 = test_cases.inlining.contract.one()
        let b#0: uint64 = test_cases.inlining.contract.one()
        let tmp%0#0: uint64 = (+ z#0 a#0)
        let tmp%1#0: uint64 = (+ tmp%0#0 b#0)
        let tmp%2#0: bool = (== tmp%1#0 2u)
        (assert tmp%2#0)
        test_cases.inlining.contract.never_returns()
        return 1u

subroutine test_cases.inlining.contract.zero() -> uint64:
    block@0: // L29
        return 0u

subroutine test_cases.inlining.contract.one() -> uint64:
    block@0: // L24
        let tmp%0#0: uint64 = test_cases.inlining.contract.zero()
        let tmp%1#0: uint64 = (+ tmp%0#0 1u)
        return tmp%1#0

subroutine test_cases.inlining.contract.never_returns() -> void:
    block@0: // L19
        fail