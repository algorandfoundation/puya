contract test_cases.dup2_optimization_bug.crash.MyContract:
    program approval:
        subroutine test_cases.dup2_optimization_bug.crash.MyContract.approval_program() -> bool:
            block@0: // L5
                let a#0: bytes = (txna ApplicationArgs 0)
                let b#0: bytes = (txna ApplicationArgs 1)
                let tmp%0#0: bytes = (concat a#0 b#0)
                let tmp%1#0: uint64 = (len tmp%0#0)
                let tmp%2#0: bool = (!= tmp%1#0 0u)
                (assert tmp%2#0)
                let tmp%3#0: bytes = (concat b#0 a#0)
                let tmp%4#0: uint64 = (len tmp%3#0)
                let tmp%5#0: bool = (> tmp%4#0 0u)
                return tmp%5#0
    
    program clear-state:
        subroutine test_cases.dup2_optimization_bug.crash.MyContract.clear_state_program() -> bool:
            block@0: // L12
                return 1u