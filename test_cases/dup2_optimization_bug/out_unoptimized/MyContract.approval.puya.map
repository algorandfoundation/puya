{
  "version": 3,
  "sources": [
    "../crash.py"
  ],
  "mappings": ";;;;AAKY;;;AACA;;;AAEG;AAAA;AAAA;AAAA;;AAAA;AAAP;AACQ;;AAAA;AAAD;AAAiB;;AAAjB;AAAP",
  "op_pc_offset": 0,
  "pc_events": {
    "1": {
      "subroutine": "test_cases.dup2_optimization_bug.crash.MyContract.approval_program",
      "params": {},
      "block": "main",
      "stack_in": [],
      "op": "b main_block@0"
    },
    "4": {
      "block": "main_block@0",
      "stack_in": [],
      "op": "txna ApplicationArgs 0",
      "defined_out": [
        "a#0"
      ],
      "stack_out": [
        "a#0"
      ]
    },
    "7": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "a#0",
        "b#0"
      ],
      "stack_out": [
        "a#0",
        "b#0"
      ]
    },
    "10": {
      "op": "dup2",
      "defined_out": [
        "a#0",
        "a#0 (copy)",
        "b#0",
        "b#0 (copy)"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "a#0 (copy)",
        "b#0 (copy)"
      ]
    },
    "11": {
      "op": "concat",
      "defined_out": [
        "a#0",
        "b#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "tmp%2#0"
      ]
    },
    "12": {
      "op": "len",
      "defined_out": [
        "a#0",
        "b#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "tmp%3#0"
      ]
    },
    "13": {
      "op": "pushint 0 // 0",
      "defined_out": [
        "0",
        "a#0",
        "b#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "tmp%3#0",
        "0"
      ]
    },
    "15": {
      "op": "!=",
      "defined_out": [
        "a#0",
        "b#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "tmp%4#0"
      ]
    },
    "16": {
      "op": "assert",
      "stack_out": [
        "a#0",
        "b#0"
      ]
    },
    "17": {
      "op": "uncover 1",
      "stack_out": [
        "b#0",
        "a#0"
      ]
    },
    "19": {
      "op": "concat",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "20": {
      "op": "len",
      "defined_out": [
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0"
      ]
    },
    "21": {
      "op": "pushint 0 // 0",
      "stack_out": [
        "tmp%6#0",
        "0"
      ]
    },
    "23": {
      "op": ">",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0"
      ]
    },
    "24": {
      "op": "return",
      "stack_out": []
    }
  }
}