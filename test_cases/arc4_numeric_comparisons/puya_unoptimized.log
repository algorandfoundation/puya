debug: PuyaPyOptions(output_teal=True, output_source_map=True, output_arc32=False, output_arc56=False, output_ssa_ir=False, output_optimization_ir=False, output_destructured_ir=True, output_memory_ir=False, output_bytecode=True, output_teal_intermediates=False, output_op_statistics=True, debug_level=1, optimization_level=0, target_avm_version=10, cli_template_definitions={}, template_vars_prefix='TMPL_', locals_coalescing_strategy=<LocalsCoalescingStrategy.root_operand: 'root_operand'>, optimizations_override=immutabledict({}), expand_all_bytes=False, paths=['arc4_numeric_comparisons'], resource_encoding='value', output_awst=False, output_awst_json=False, output_source_annotations_json=False, output_client=False, log_level=<LogLevel.debug: 10>)
info: Found python prefix: <git root>/.venv
debug: Building IR for function _puya_lib.util.ensure_budget
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'required_budget_with_buffer' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let required_budget_with_buffer#1: uint64 = undefined while trying to resolve 'required_budget_with_buffer' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'fee_source' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let fee_source#1: uint64 = undefined while trying to resolve 'fee_source' in block@1
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@4
debug: Terminated block@4
debug: Sealing block@5
debug: Terminated block@5
debug: Sealing block@6
debug: Terminated block@6
debug: Sealing block@1
debug: Added required_budget_with_buffer#0 to Phi node: let required_budget_with_buffer#1: uint64 = φ(required_budget_with_buffer#0 <- block@0) in block@0
debug: Created Phi assignment: let required_budget_with_buffer#2: uint64 = undefined while trying to resolve 'required_budget_with_buffer' in block@6
debug: Added required_budget_with_buffer#1 to Phi node: let required_budget_with_buffer#2: uint64 = φ(required_budget_with_buffer#1 <- block@3) in block@3
debug: Added required_budget_with_buffer#1 to Phi node: let required_budget_with_buffer#2: uint64 = φ(required_budget_with_buffer#1 <- block@3, required_budget_with_buffer#1 <- block@4) in block@4
debug: Added required_budget_with_buffer#1 to Phi node: let required_budget_with_buffer#2: uint64 = φ(required_budget_with_buffer#1 <- block@3, required_budget_with_buffer#1 <- block@4, required_budget_with_buffer#1 <- block@5) in block@5
debug: Replacing trivial Phi node: let required_budget_with_buffer#2: uint64 = φ(required_budget_with_buffer#1 <- block@3, required_budget_with_buffer#1 <- block@4, required_budget_with_buffer#1 <- block@5) (required_budget_with_buffer#2) with required_budget_with_buffer#1
debug: Deleting Phi assignment: let required_budget_with_buffer#2: uint64 = φ(required_budget_with_buffer#1 <- block@3, required_budget_with_buffer#1 <- block@4, required_budget_with_buffer#1 <- block@5)
debug: Replaced trivial Phi node: let required_budget_with_buffer#2: uint64 = φ(required_budget_with_buffer#1 <- block@3, required_budget_with_buffer#1 <- block@4, required_budget_with_buffer#1 <- block@5) (required_budget_with_buffer#2) with required_budget_with_buffer#1 in current definition for 1 blocks
debug: Added required_budget_with_buffer#1 to Phi node: let required_budget_with_buffer#1: uint64 = φ(required_budget_with_buffer#0 <- block@0, required_budget_with_buffer#1 <- block@6) in block@6
debug: Replacing trivial Phi node: let required_budget_with_buffer#1: uint64 = φ(required_budget_with_buffer#0 <- block@0, required_budget_with_buffer#1 <- block@6) (required_budget_with_buffer#1) with required_budget_with_buffer#0
debug: Deleting Phi assignment: let required_budget_with_buffer#1: uint64 = φ(required_budget_with_buffer#0 <- block@0, required_budget_with_buffer#1 <- block@6)
debug: Replaced trivial Phi node: let required_budget_with_buffer#1: uint64 = φ(required_budget_with_buffer#0 <- block@0, required_budget_with_buffer#1 <- block@6) (required_budget_with_buffer#1) with required_budget_with_buffer#0 in current definition for 6 blocks
debug: Added fee_source#0 to Phi node: let fee_source#1: uint64 = φ(fee_source#0 <- block@0) in block@0
debug: Created Phi assignment: let fee_source#2: uint64 = undefined while trying to resolve 'fee_source' in block@6
debug: Added fee_source#1 to Phi node: let fee_source#2: uint64 = φ(fee_source#1 <- block@3) in block@3
debug: Added fee_source#1 to Phi node: let fee_source#2: uint64 = φ(fee_source#1 <- block@3, fee_source#1 <- block@4) in block@4
debug: Added fee_source#1 to Phi node: let fee_source#2: uint64 = φ(fee_source#1 <- block@3, fee_source#1 <- block@4, fee_source#1 <- block@5) in block@5
debug: Replacing trivial Phi node: let fee_source#2: uint64 = φ(fee_source#1 <- block@3, fee_source#1 <- block@4, fee_source#1 <- block@5) (fee_source#2) with fee_source#1
debug: Deleting Phi assignment: let fee_source#2: uint64 = φ(fee_source#1 <- block@3, fee_source#1 <- block@4, fee_source#1 <- block@5)
debug: Replaced trivial Phi node: let fee_source#2: uint64 = φ(fee_source#1 <- block@3, fee_source#1 <- block@4, fee_source#1 <- block@5) (fee_source#2) with fee_source#1 in current definition for 1 blocks
debug: Added fee_source#1 to Phi node: let fee_source#1: uint64 = φ(fee_source#0 <- block@0, fee_source#1 <- block@6) in block@6
debug: Replacing trivial Phi node: let fee_source#1: uint64 = φ(fee_source#0 <- block@0, fee_source#1 <- block@6) (fee_source#1) with fee_source#0
debug: Deleting Phi assignment: let fee_source#1: uint64 = φ(fee_source#0 <- block@0, fee_source#1 <- block@6)
debug: Replaced trivial Phi node: let fee_source#1: uint64 = φ(fee_source#0 <- block@0, fee_source#1 <- block@6) (fee_source#1) with fee_source#0 in current definition for 6 blocks
debug: Sealing block@7
debug: Terminated block@7
debug: Building IR for function _puya_lib.bytes_.is_substring
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'start' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let start#1: uint64 = undefined while trying to resolve 'start' in block@1
debug: Looking for 'item' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let item#1: bytes = undefined while trying to resolve 'item' in block@1
debug: Looking for 'sequence' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let sequence#1: bytes = undefined while trying to resolve 'sequence' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@4
debug: Terminated block@4
debug: Sealing block@1
debug: Added start#0 to Phi node: let start#1: uint64 = φ(start#0 <- block@0) in block@0
debug: Added start#2 to Phi node: let start#1: uint64 = φ(start#0 <- block@0, start#2 <- block@4) in block@4
debug: Added item#0 to Phi node: let item#1: bytes = φ(item#0 <- block@0) in block@0
debug: Added item#1 to Phi node: let item#1: bytes = φ(item#0 <- block@0, item#1 <- block@4) in block@4
debug: Replacing trivial Phi node: let item#1: bytes = φ(item#0 <- block@0, item#1 <- block@4) (item#1) with item#0
debug: Deleting Phi assignment: let item#1: bytes = φ(item#0 <- block@0, item#1 <- block@4)
debug: Replaced trivial Phi node: let item#1: bytes = φ(item#0 <- block@0, item#1 <- block@4) (item#1) with item#0 in current definition for 3 blocks
debug: Added sequence#0 to Phi node: let sequence#1: bytes = φ(sequence#0 <- block@0) in block@0
debug: Added sequence#1 to Phi node: let sequence#1: bytes = φ(sequence#0 <- block@0, sequence#1 <- block@4) in block@4
debug: Replacing trivial Phi node: let sequence#1: bytes = φ(sequence#0 <- block@0, sequence#1 <- block@4) (sequence#1) with sequence#0
debug: Deleting Phi assignment: let sequence#1: bytes = φ(sequence#0 <- block@0, sequence#1 <- block@4)
debug: Replaced trivial Phi node: let sequence#1: bytes = φ(sequence#0 <- block@0, sequence#1 <- block@4) (sequence#1) with sequence#0 in current definition for 3 blocks
debug: Sealing block@5
debug: Terminated block@5
debug: Building IR for function _puya_lib.arc4.dynamic_array_pop_bit
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function _puya_lib.arc4.dynamic_array_pop_fixed_size
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function _puya_lib.arc4.dynamic_array_pop_byte_length_head
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function _puya_lib.arc4.dynamic_array_pop_dynamic_element
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'head_offset' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let head_offset#1: uint64 = undefined while trying to resolve 'head_offset' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'head_and_tail' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let head_and_tail#1: bytes = undefined while trying to resolve 'head_and_tail' in block@1
debug: Looking for 'new_head' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let new_head#1: bytes = undefined while trying to resolve 'new_head' in block@1
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@1
debug: Added head_offset#0 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0) in block@0
debug: Added head_offset#2 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0, head_offset#2 <- block@3) in block@3
debug: Added head_and_tail#0 to Phi node: let head_and_tail#1: bytes = φ(head_and_tail#0 <- block@0) in block@0
debug: Added head_and_tail#1 to Phi node: let head_and_tail#1: bytes = φ(head_and_tail#0 <- block@0, head_and_tail#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let head_and_tail#1: bytes = φ(head_and_tail#0 <- block@0, head_and_tail#1 <- block@3) (head_and_tail#1) with head_and_tail#0
debug: Deleting Phi assignment: let head_and_tail#1: bytes = φ(head_and_tail#0 <- block@0, head_and_tail#1 <- block@3)
debug: Replaced trivial Phi node: let head_and_tail#1: bytes = φ(head_and_tail#0 <- block@0, head_and_tail#1 <- block@3) (head_and_tail#1) with head_and_tail#0 in current definition for 3 blocks
debug: Added new_head#0 to Phi node: let new_head#1: bytes = φ(new_head#0 <- block@0) in block@0
debug: Added new_head#2 to Phi node: let new_head#1: bytes = φ(new_head#0 <- block@0, new_head#2 <- block@3) in block@3
debug: Sealing block@4
debug: Created Phi assignment: let length_minus_1#1: uint64 = undefined while trying to resolve 'length_minus_1' in block@1
debug: Added length_minus_1#0 to Phi node: let length_minus_1#1: uint64 = φ(length_minus_1#0 <- block@0) in block@0
debug: Added length_minus_1#1 to Phi node: let length_minus_1#1: uint64 = φ(length_minus_1#0 <- block@0, length_minus_1#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let length_minus_1#1: uint64 = φ(length_minus_1#0 <- block@0, length_minus_1#1 <- block@3) (length_minus_1#1) with length_minus_1#0
debug: Deleting Phi assignment: let length_minus_1#1: uint64 = φ(length_minus_1#0 <- block@0, length_minus_1#1 <- block@3)
debug: Replaced trivial Phi node: let length_minus_1#1: uint64 = φ(length_minus_1#0 <- block@0, length_minus_1#1 <- block@3) (length_minus_1#1) with length_minus_1#0 in current definition for 3 blocks
debug: Created Phi assignment: let popped_header_offset#1: uint64 = undefined while trying to resolve 'popped_header_offset' in block@1
debug: Added popped_header_offset#0 to Phi node: let popped_header_offset#1: uint64 = φ(popped_header_offset#0 <- block@0) in block@0
debug: Added popped_header_offset#1 to Phi node: let popped_header_offset#1: uint64 = φ(popped_header_offset#0 <- block@0, popped_header_offset#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let popped_header_offset#1: uint64 = φ(popped_header_offset#0 <- block@0, popped_header_offset#1 <- block@3) (popped_header_offset#1) with popped_header_offset#0
debug: Deleting Phi assignment: let popped_header_offset#1: uint64 = φ(popped_header_offset#0 <- block@0, popped_header_offset#1 <- block@3)
debug: Replaced trivial Phi node: let popped_header_offset#1: uint64 = φ(popped_header_offset#0 <- block@0, popped_header_offset#1 <- block@3) (popped_header_offset#1) with popped_header_offset#0 in current definition for 3 blocks
debug: Created Phi assignment: let popped_offset#1: uint64 = undefined while trying to resolve 'popped_offset' in block@1
debug: Added popped_offset#0 to Phi node: let popped_offset#1: uint64 = φ(popped_offset#0 <- block@0) in block@0
debug: Added popped_offset#1 to Phi node: let popped_offset#1: uint64 = φ(popped_offset#0 <- block@0, popped_offset#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let popped_offset#1: uint64 = φ(popped_offset#0 <- block@0, popped_offset#1 <- block@3) (popped_offset#1) with popped_offset#0
debug: Deleting Phi assignment: let popped_offset#1: uint64 = φ(popped_offset#0 <- block@0, popped_offset#1 <- block@3)
debug: Replaced trivial Phi node: let popped_offset#1: uint64 = φ(popped_offset#0 <- block@0, popped_offset#1 <- block@3) (popped_offset#1) with popped_offset#0 in current definition for 3 blocks
debug: Created Phi assignment: let popped#1: bytes = undefined while trying to resolve 'popped' in block@1
debug: Added popped#0 to Phi node: let popped#1: bytes = φ(popped#0 <- block@0) in block@0
debug: Added popped#1 to Phi node: let popped#1: bytes = φ(popped#0 <- block@0, popped#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let popped#1: bytes = φ(popped#0 <- block@0, popped#1 <- block@3) (popped#1) with popped#0
debug: Deleting Phi assignment: let popped#1: bytes = φ(popped#0 <- block@0, popped#1 <- block@3)
debug: Replaced trivial Phi node: let popped#1: bytes = φ(popped#0 <- block@0, popped#1 <- block@3) (popped#1) with popped#0 in current definition for 3 blocks
debug: Terminated block@4
debug: Building IR for function _puya_lib.arc4.dynamic_array_concat_bits
debug: Sealing block@0
debug: Terminated block@0
debug: Sealing block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Created Phi assignment: let array_length#1: uint64 = undefined while trying to resolve 'array_length' in block@2
debug: Added array_length#0 to Phi node: let array_length#1: uint64 = φ(array_length#0 <- block@0) in block@0
debug: Added array_length#0 to Phi node: let array_length#1: uint64 = φ(array_length#0 <- block@0, array_length#0 <- block@1) in block@1
debug: Replacing trivial Phi node: let array_length#1: uint64 = φ(array_length#0 <- block@0, array_length#0 <- block@1) (array_length#1) with array_length#0
debug: Deleting Phi assignment: let array_length#1: uint64 = φ(array_length#0 <- block@0, array_length#0 <- block@1)
debug: Replaced trivial Phi node: let array_length#1: uint64 = φ(array_length#0 <- block@0, array_length#0 <- block@1) (array_length#1) with array_length#0 in current definition for 1 blocks
debug: Created Phi assignment: let new_items_count#1: uint64 = undefined while trying to resolve 'new_items_count' in block@2
debug: Added new_items_count#0 to Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0) in block@0
debug: Added new_items_count#0 to Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#0 <- block@1) in block@1
debug: Replacing trivial Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#0 <- block@1) (new_items_count#1) with new_items_count#0
debug: Deleting Phi assignment: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#0 <- block@1)
debug: Replaced trivial Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#0 <- block@1) (new_items_count#1) with new_items_count#0 in current definition for 1 blocks
debug: Terminated block@2
debug: Looking for 'write_offset' in an unsealed block creating an incomplete Phi: block@3
debug: Created Phi assignment: let write_offset#1: uint64 = undefined while trying to resolve 'write_offset' in block@3
debug: Looking for 'write_end' in an unsealed block creating an incomplete Phi: block@3
debug: Created Phi assignment: let write_end#1: uint64 = undefined while trying to resolve 'write_end' in block@3
debug: Terminated block@3
debug: Sealing block@4
debug: Looking for 'result' in an unsealed block creating an incomplete Phi: block@3
debug: Created Phi assignment: let result#2: bytes = undefined while trying to resolve 'result' in block@3
debug: Looking for 'new_items_bytes' in an unsealed block creating an incomplete Phi: block@3
debug: Created Phi assignment: let new_items_bytes#1: bytes = undefined while trying to resolve 'new_items_bytes' in block@3
debug: Looking for 'read_offset' in an unsealed block creating an incomplete Phi: block@3
debug: Created Phi assignment: let read_offset#1: uint64 = undefined while trying to resolve 'read_offset' in block@3
debug: Looking for 'read_step' in an unsealed block creating an incomplete Phi: block@3
debug: Created Phi assignment: let read_step#1: uint64 = undefined while trying to resolve 'read_step' in block@3
debug: Terminated block@4
debug: Sealing block@3
debug: Added write_offset#0 to Phi node: let write_offset#1: uint64 = φ(write_offset#0 <- block@2) in block@2
debug: Added write_offset#2 to Phi node: let write_offset#1: uint64 = φ(write_offset#0 <- block@2, write_offset#2 <- block@4) in block@4
debug: Added write_end#0 to Phi node: let write_end#1: uint64 = φ(write_end#0 <- block@2) in block@2
debug: Added write_end#1 to Phi node: let write_end#1: uint64 = φ(write_end#0 <- block@2, write_end#1 <- block@4) in block@4
debug: Replacing trivial Phi node: let write_end#1: uint64 = φ(write_end#0 <- block@2, write_end#1 <- block@4) (write_end#1) with write_end#0
debug: Deleting Phi assignment: let write_end#1: uint64 = φ(write_end#0 <- block@2, write_end#1 <- block@4)
debug: Replaced trivial Phi node: let write_end#1: uint64 = φ(write_end#0 <- block@2, write_end#1 <- block@4) (write_end#1) with write_end#0 in current definition for 2 blocks
debug: Created Phi assignment: let result#4: bytes = undefined while trying to resolve 'result' in block@2
debug: Added result#0 to Phi node: let result#4: bytes = φ(result#0 <- block@0) in block@0
debug: Added result#1 to Phi node: let result#4: bytes = φ(result#0 <- block@0, result#1 <- block@1) in block@1
debug: Added result#4 to Phi node: let result#2: bytes = φ(result#4 <- block@2) in block@2
debug: Added result#3 to Phi node: let result#2: bytes = φ(result#4 <- block@2, result#3 <- block@4) in block@4
debug: Created Phi assignment: let new_items_bytes#2: bytes = undefined while trying to resolve 'new_items_bytes' in block@2
debug: Added new_items_bytes#0 to Phi node: let new_items_bytes#2: bytes = φ(new_items_bytes#0 <- block@0) in block@0
debug: Added new_items_bytes#0 to Phi node: let new_items_bytes#2: bytes = φ(new_items_bytes#0 <- block@0, new_items_bytes#0 <- block@1) in block@1
debug: Replacing trivial Phi node: let new_items_bytes#2: bytes = φ(new_items_bytes#0 <- block@0, new_items_bytes#0 <- block@1) (new_items_bytes#2) with new_items_bytes#0
debug: Deleting Phi assignment: let new_items_bytes#2: bytes = φ(new_items_bytes#0 <- block@0, new_items_bytes#0 <- block@1)
debug: Replaced trivial Phi node: let new_items_bytes#2: bytes = φ(new_items_bytes#0 <- block@0, new_items_bytes#0 <- block@1) (new_items_bytes#2) with new_items_bytes#0 in current definition for 1 blocks
debug: Added new_items_bytes#0 to Phi node: let new_items_bytes#1: bytes = φ(new_items_bytes#0 <- block@2) in block@2
debug: Added new_items_bytes#1 to Phi node: let new_items_bytes#1: bytes = φ(new_items_bytes#0 <- block@2, new_items_bytes#1 <- block@4) in block@4
debug: Replacing trivial Phi node: let new_items_bytes#1: bytes = φ(new_items_bytes#0 <- block@2, new_items_bytes#1 <- block@4) (new_items_bytes#1) with new_items_bytes#0
debug: Deleting Phi assignment: let new_items_bytes#1: bytes = φ(new_items_bytes#0 <- block@2, new_items_bytes#1 <- block@4)
debug: Replaced trivial Phi node: let new_items_bytes#1: bytes = φ(new_items_bytes#0 <- block@2, new_items_bytes#1 <- block@4) (new_items_bytes#1) with new_items_bytes#0 in current definition for 2 blocks
debug: Added read_offset#0 to Phi node: let read_offset#1: uint64 = φ(read_offset#0 <- block@2) in block@2
debug: Added read_offset#2 to Phi node: let read_offset#1: uint64 = φ(read_offset#0 <- block@2, read_offset#2 <- block@4) in block@4
debug: Created Phi assignment: let read_step#2: uint64 = undefined while trying to resolve 'read_step' in block@2
debug: Added read_step#0 to Phi node: let read_step#2: uint64 = φ(read_step#0 <- block@0) in block@0
debug: Added read_step#0 to Phi node: let read_step#2: uint64 = φ(read_step#0 <- block@0, read_step#0 <- block@1) in block@1
debug: Replacing trivial Phi node: let read_step#2: uint64 = φ(read_step#0 <- block@0, read_step#0 <- block@1) (read_step#2) with read_step#0
debug: Deleting Phi assignment: let read_step#2: uint64 = φ(read_step#0 <- block@0, read_step#0 <- block@1)
debug: Replaced trivial Phi node: let read_step#2: uint64 = φ(read_step#0 <- block@0, read_step#0 <- block@1) (read_step#2) with read_step#0 in current definition for 1 blocks
debug: Added read_step#0 to Phi node: let read_step#1: uint64 = φ(read_step#0 <- block@2) in block@2
debug: Added read_step#1 to Phi node: let read_step#1: uint64 = φ(read_step#0 <- block@2, read_step#1 <- block@4) in block@4
debug: Replacing trivial Phi node: let read_step#1: uint64 = φ(read_step#0 <- block@2, read_step#1 <- block@4) (read_step#1) with read_step#0
debug: Deleting Phi assignment: let read_step#1: uint64 = φ(read_step#0 <- block@2, read_step#1 <- block@4)
debug: Replaced trivial Phi node: let read_step#1: uint64 = φ(read_step#0 <- block@2, read_step#1 <- block@4) (read_step#1) with read_step#0 in current definition for 2 blocks
debug: Sealing block@5
debug: Terminated block@5
debug: Building IR for function _puya_lib.arc4.dynamic_array_concat_byte_length_head
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function _puya_lib.arc4.dynamic_array_concat_dynamic_element
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'head_offset' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let head_offset#1: uint64 = undefined while trying to resolve 'head_offset' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'array_head_and_tail' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let array_head_and_tail#1: bytes = undefined while trying to resolve 'array_head_and_tail' in block@1
debug: Looking for 'new_head' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let new_head#1: bytes = undefined while trying to resolve 'new_head' in block@1
debug: Looking for 'item_offset_adjustment' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let item_offset_adjustment#1: uint64 = undefined while trying to resolve 'item_offset_adjustment' in block@1
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@1
debug: Added head_offset#0 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0) in block@0
debug: Added head_offset#2 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0, head_offset#2 <- block@3) in block@3
debug: Added array_head_and_tail#0 to Phi node: let array_head_and_tail#1: bytes = φ(array_head_and_tail#0 <- block@0) in block@0
debug: Added array_head_and_tail#1 to Phi node: let array_head_and_tail#1: bytes = φ(array_head_and_tail#0 <- block@0, array_head_and_tail#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let array_head_and_tail#1: bytes = φ(array_head_and_tail#0 <- block@0, array_head_and_tail#1 <- block@3) (array_head_and_tail#1) with array_head_and_tail#0
debug: Deleting Phi assignment: let array_head_and_tail#1: bytes = φ(array_head_and_tail#0 <- block@0, array_head_and_tail#1 <- block@3)
debug: Replaced trivial Phi node: let array_head_and_tail#1: bytes = φ(array_head_and_tail#0 <- block@0, array_head_and_tail#1 <- block@3) (array_head_and_tail#1) with array_head_and_tail#0 in current definition for 3 blocks
debug: Added new_head#0 to Phi node: let new_head#1: bytes = φ(new_head#0 <- block@0) in block@0
debug: Added new_head#2 to Phi node: let new_head#1: bytes = φ(new_head#0 <- block@0, new_head#2 <- block@3) in block@3
debug: Added item_offset_adjustment#0 to Phi node: let item_offset_adjustment#1: uint64 = φ(item_offset_adjustment#0 <- block@0) in block@0
debug: Added item_offset_adjustment#1 to Phi node: let item_offset_adjustment#1: uint64 = φ(item_offset_adjustment#0 <- block@0, item_offset_adjustment#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let item_offset_adjustment#1: uint64 = φ(item_offset_adjustment#0 <- block@0, item_offset_adjustment#1 <- block@3) (item_offset_adjustment#1) with item_offset_adjustment#0
debug: Deleting Phi assignment: let item_offset_adjustment#1: uint64 = φ(item_offset_adjustment#0 <- block@0, item_offset_adjustment#1 <- block@3)
debug: Replaced trivial Phi node: let item_offset_adjustment#1: uint64 = φ(item_offset_adjustment#0 <- block@0, item_offset_adjustment#1 <- block@3) (item_offset_adjustment#1) with item_offset_adjustment#0 in current definition for 3 blocks
debug: Sealing block@4
debug: Created Phi assignment: let new_items_count#1: uint64 = undefined while trying to resolve 'new_items_count' in block@1
debug: Added new_items_count#0 to Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0) in block@0
debug: Added new_items_count#1 to Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#1 <- block@3) (new_items_count#1) with new_items_count#0
debug: Deleting Phi assignment: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#1 <- block@3)
debug: Replaced trivial Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#1 <- block@3) (new_items_count#1) with new_items_count#0 in current definition for 3 blocks
debug: Terminated block@4
debug: Looking for 'head_offset' in an unsealed block creating an incomplete Phi: block@5
debug: Created Phi assignment: let head_offset#4: uint64 = undefined while trying to resolve 'head_offset' in block@5
debug: Terminated block@5
debug: Sealing block@6
debug: Looking for 'new_head_and_tail' in an unsealed block creating an incomplete Phi: block@5
debug: Created Phi assignment: let new_head_and_tail#1: bytes = undefined while trying to resolve 'new_head_and_tail' in block@5
debug: Looking for 'new_head' in an unsealed block creating an incomplete Phi: block@5
debug: Created Phi assignment: let new_head#3: bytes = undefined while trying to resolve 'new_head' in block@5
debug: Looking for 'item_offset_adjustment' in an unsealed block creating an incomplete Phi: block@5
debug: Created Phi assignment: let item_offset_adjustment#3: uint64 = undefined while trying to resolve 'item_offset_adjustment' in block@5
debug: Terminated block@6
debug: Sealing block@7
debug: Terminated block@7
debug: Sealing block@5
debug: Added head_offset#3 to Phi node: let head_offset#4: uint64 = φ(head_offset#3 <- block@4) in block@4
debug: Added head_offset#5 to Phi node: let head_offset#4: uint64 = φ(head_offset#3 <- block@4, head_offset#5 <- block@7) in block@7
debug: Created Phi assignment: let new_head_and_tail#2: bytes = undefined while trying to resolve 'new_head_and_tail' in block@1
debug: Added new_head_and_tail#0 to Phi node: let new_head_and_tail#2: bytes = φ(new_head_and_tail#0 <- block@0) in block@0
debug: Added new_head_and_tail#2 to Phi node: let new_head_and_tail#2: bytes = φ(new_head_and_tail#0 <- block@0, new_head_and_tail#2 <- block@3) in block@3
debug: Replacing trivial Phi node: let new_head_and_tail#2: bytes = φ(new_head_and_tail#0 <- block@0, new_head_and_tail#2 <- block@3) (new_head_and_tail#2) with new_head_and_tail#0
debug: Deleting Phi assignment: let new_head_and_tail#2: bytes = φ(new_head_and_tail#0 <- block@0, new_head_and_tail#2 <- block@3)
debug: Replaced trivial Phi node: let new_head_and_tail#2: bytes = φ(new_head_and_tail#0 <- block@0, new_head_and_tail#2 <- block@3) (new_head_and_tail#2) with new_head_and_tail#0 in current definition for 3 blocks
debug: Added new_head_and_tail#0 to Phi node: let new_head_and_tail#1: bytes = φ(new_head_and_tail#0 <- block@4) in block@4
debug: Added new_head_and_tail#1 to Phi node: let new_head_and_tail#1: bytes = φ(new_head_and_tail#0 <- block@4, new_head_and_tail#1 <- block@7) in block@7
debug: Replacing trivial Phi node: let new_head_and_tail#1: bytes = φ(new_head_and_tail#0 <- block@4, new_head_and_tail#1 <- block@7) (new_head_and_tail#1) with new_head_and_tail#0
debug: Deleting Phi assignment: let new_head_and_tail#1: bytes = φ(new_head_and_tail#0 <- block@4, new_head_and_tail#1 <- block@7)
debug: Replaced trivial Phi node: let new_head_and_tail#1: bytes = φ(new_head_and_tail#0 <- block@4, new_head_and_tail#1 <- block@7) (new_head_and_tail#1) with new_head_and_tail#0 in current definition for 3 blocks
debug: Added new_head#1 to Phi node: let new_head#3: bytes = φ(new_head#1 <- block@4) in block@4
debug: Added new_head#4 to Phi node: let new_head#3: bytes = φ(new_head#1 <- block@4, new_head#4 <- block@7) in block@7
debug: Added item_offset_adjustment#2 to Phi node: let item_offset_adjustment#3: uint64 = φ(item_offset_adjustment#2 <- block@4) in block@4
debug: Added item_offset_adjustment#3 to Phi node: let item_offset_adjustment#3: uint64 = φ(item_offset_adjustment#2 <- block@4, item_offset_adjustment#3 <- block@7) in block@7
debug: Replacing trivial Phi node: let item_offset_adjustment#3: uint64 = φ(item_offset_adjustment#2 <- block@4, item_offset_adjustment#3 <- block@7) (item_offset_adjustment#3) with item_offset_adjustment#2
debug: Deleting Phi assignment: let item_offset_adjustment#3: uint64 = φ(item_offset_adjustment#2 <- block@4, item_offset_adjustment#3 <- block@7)
debug: Replaced trivial Phi node: let item_offset_adjustment#3: uint64 = φ(item_offset_adjustment#2 <- block@4, item_offset_adjustment#3 <- block@7) (item_offset_adjustment#3) with item_offset_adjustment#2 in current definition for 3 blocks
debug: Sealing block@8
debug: Created Phi assignment: let array_items_count#1: uint64 = undefined while trying to resolve 'array_items_count' in block@5
debug: Created Phi assignment: let array_items_count#2: uint64 = undefined while trying to resolve 'array_items_count' in block@1
debug: Added array_items_count#0 to Phi node: let array_items_count#2: uint64 = φ(array_items_count#0 <- block@0) in block@0
debug: Added array_items_count#2 to Phi node: let array_items_count#2: uint64 = φ(array_items_count#0 <- block@0, array_items_count#2 <- block@3) in block@3
debug: Replacing trivial Phi node: let array_items_count#2: uint64 = φ(array_items_count#0 <- block@0, array_items_count#2 <- block@3) (array_items_count#2) with array_items_count#0
debug: Deleting Phi assignment: let array_items_count#2: uint64 = φ(array_items_count#0 <- block@0, array_items_count#2 <- block@3)
debug: Replaced trivial Phi node: let array_items_count#2: uint64 = φ(array_items_count#0 <- block@0, array_items_count#2 <- block@3) (array_items_count#2) with array_items_count#0 in current definition for 3 blocks
debug: Added array_items_count#0 to Phi node: let array_items_count#1: uint64 = φ(array_items_count#0 <- block@4) in block@4
debug: Added array_items_count#1 to Phi node: let array_items_count#1: uint64 = φ(array_items_count#0 <- block@4, array_items_count#1 <- block@7) in block@7
debug: Replacing trivial Phi node: let array_items_count#1: uint64 = φ(array_items_count#0 <- block@4, array_items_count#1 <- block@7) (array_items_count#1) with array_items_count#0
debug: Deleting Phi assignment: let array_items_count#1: uint64 = φ(array_items_count#0 <- block@4, array_items_count#1 <- block@7)
debug: Replaced trivial Phi node: let array_items_count#1: uint64 = φ(array_items_count#0 <- block@4, array_items_count#1 <- block@7) (array_items_count#1) with array_items_count#0 in current definition for 3 blocks
debug: Created Phi assignment: let new_items_count#2: uint64 = undefined while trying to resolve 'new_items_count' in block@5
debug: Added new_items_count#0 to Phi node: let new_items_count#2: uint64 = φ(new_items_count#0 <- block@4) in block@4
debug: Added new_items_count#2 to Phi node: let new_items_count#2: uint64 = φ(new_items_count#0 <- block@4, new_items_count#2 <- block@7) in block@7
debug: Replacing trivial Phi node: let new_items_count#2: uint64 = φ(new_items_count#0 <- block@4, new_items_count#2 <- block@7) (new_items_count#2) with new_items_count#0
debug: Deleting Phi assignment: let new_items_count#2: uint64 = φ(new_items_count#0 <- block@4, new_items_count#2 <- block@7)
debug: Replaced trivial Phi node: let new_items_count#2: uint64 = φ(new_items_count#0 <- block@4, new_items_count#2 <- block@7) (new_items_count#2) with new_items_count#0 in current definition for 3 blocks
debug: Created Phi assignment: let array_head_and_tail#2: bytes = undefined while trying to resolve 'array_head_and_tail' in block@5
debug: Added array_head_and_tail#0 to Phi node: let array_head_and_tail#2: bytes = φ(array_head_and_tail#0 <- block@4) in block@4
debug: Added array_head_and_tail#2 to Phi node: let array_head_and_tail#2: bytes = φ(array_head_and_tail#0 <- block@4, array_head_and_tail#2 <- block@7) in block@7
debug: Replacing trivial Phi node: let array_head_and_tail#2: bytes = φ(array_head_and_tail#0 <- block@4, array_head_and_tail#2 <- block@7) (array_head_and_tail#2) with array_head_and_tail#0
debug: Deleting Phi assignment: let array_head_and_tail#2: bytes = φ(array_head_and_tail#0 <- block@4, array_head_and_tail#2 <- block@7)
debug: Replaced trivial Phi node: let array_head_and_tail#2: bytes = φ(array_head_and_tail#0 <- block@4, array_head_and_tail#2 <- block@7) (array_head_and_tail#2) with array_head_and_tail#0 in current definition for 3 blocks
debug: Terminated block@8
debug: Building IR for function _puya_lib.arc4.dynamic_array_replace_byte_length_head
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function _puya_lib.arc4.dynamic_array_replace_dynamic_element
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function _puya_lib.arc4.static_array_replace_dynamic_element
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'head_offset' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let head_offset#1: uint64 = undefined while trying to resolve 'head_offset' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'new_head_and_tail' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let new_head_and_tail#1: bytes = undefined while trying to resolve 'new_head_and_tail' in block@1
debug: Looking for 'new_item_length' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let new_item_length#1: uint64 = undefined while trying to resolve 'new_item_length' in block@1
debug: Looking for 'original_item_length' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let original_item_length#1: uint64 = undefined while trying to resolve 'original_item_length' in block@1
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@1
debug: Added head_offset#0 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0) in block@0
debug: Added head_offset#2 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0, head_offset#2 <- block@3) in block@3
debug: Added new_head_and_tail#0 to Phi node: let new_head_and_tail#1: bytes = φ(new_head_and_tail#0 <- block@0) in block@0
debug: Added new_head_and_tail#2 to Phi node: let new_head_and_tail#1: bytes = φ(new_head_and_tail#0 <- block@0, new_head_and_tail#2 <- block@3) in block@3
debug: Added new_item_length#0 to Phi node: let new_item_length#1: uint64 = φ(new_item_length#0 <- block@0) in block@0
debug: Added new_item_length#1 to Phi node: let new_item_length#1: uint64 = φ(new_item_length#0 <- block@0, new_item_length#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let new_item_length#1: uint64 = φ(new_item_length#0 <- block@0, new_item_length#1 <- block@3) (new_item_length#1) with new_item_length#0
debug: Deleting Phi assignment: let new_item_length#1: uint64 = φ(new_item_length#0 <- block@0, new_item_length#1 <- block@3)
debug: Replaced trivial Phi node: let new_item_length#1: uint64 = φ(new_item_length#0 <- block@0, new_item_length#1 <- block@3) (new_item_length#1) with new_item_length#0 in current definition for 3 blocks
debug: Added original_item_length#0 to Phi node: let original_item_length#1: uint64 = φ(original_item_length#0 <- block@0) in block@0
debug: Added original_item_length#1 to Phi node: let original_item_length#1: uint64 = φ(original_item_length#0 <- block@0, original_item_length#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let original_item_length#1: uint64 = φ(original_item_length#0 <- block@0, original_item_length#1 <- block@3) (original_item_length#1) with original_item_length#0
debug: Deleting Phi assignment: let original_item_length#1: uint64 = φ(original_item_length#0 <- block@0, original_item_length#1 <- block@3)
debug: Replaced trivial Phi node: let original_item_length#1: uint64 = φ(original_item_length#0 <- block@0, original_item_length#1 <- block@3) (original_item_length#1) with original_item_length#0 in current definition for 3 blocks
debug: Sealing block@4
debug: Terminated block@4
debug: Building IR for function _puya_lib.arc4.static_array_replace_byte_length_head
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function _puya_lib.arc4.recalculate_head_for_elements_with_byte_length_head
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'head_offset' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let head_offset#1: uint64 = undefined while trying to resolve 'head_offset' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'tail_offset' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let tail_offset#1: uint64 = undefined while trying to resolve 'tail_offset' in block@1
debug: Looking for 'array_head_and_tail' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let array_head_and_tail#1: bytes = undefined while trying to resolve 'array_head_and_tail' in block@1
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@1
debug: Added head_offset#0 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0) in block@0
debug: Added head_offset#3 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0, head_offset#3 <- block@3) in block@3
debug: Added tail_offset#0 to Phi node: let tail_offset#1: uint64 = φ(tail_offset#0 <- block@0) in block@0
debug: Added tail_offset#2 to Phi node: let tail_offset#1: uint64 = φ(tail_offset#0 <- block@0, tail_offset#2 <- block@3) in block@3
debug: Added array_head_and_tail#0 to Phi node: let array_head_and_tail#1: bytes = φ(array_head_and_tail#0 <- block@0) in block@0
debug: Added array_head_and_tail#2 to Phi node: let array_head_and_tail#1: bytes = φ(array_head_and_tail#0 <- block@0, array_head_and_tail#2 <- block@3) in block@3
debug: Sealing block@4
debug: Terminated block@4
debug: Building IR for function test_cases.arc4_numeric_comparisons.uint_n.check_both_uint_n
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.arc4_numeric_comparisons.uint_n.check_mixed
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.arc4_numeric_comparisons.uint_n.check_both_big_uint_n
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.arc4_numeric_comparisons.uint_n.UIntNOrdering.__puya_arc4_router__
debug: Sealing block@0
debug: Terminated block@0
debug: Sealing block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Terminated block@2
debug: Building IR for function test_cases.arc4_numeric_comparisons.uint_n.UIntNOrdering.approval_program
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.arc4_numeric_comparisons.uint_n.UIntNOrdering.clear_state_program
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function algopy._contract.Contract.__init__
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.arc4_numeric_comparisons.uint_n.UIntNOrdering.approval_program
debug: Sealing block@0
debug: Terminated block@0
debug: removing unused subroutine _puya_lib.util.ensure_budget
debug: removing unused subroutine _puya_lib.bytes_.is_substring
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_bit
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_fixed_size
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_bits
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_replace_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_replace_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.static_array_replace_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.static_array_replace_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.recalculate_head_for_elements_with_byte_length_head
debug: removing unused subroutine test_cases.arc4_numeric_comparisons.uint_n.UIntNOrdering.__puya_arc4_router__
debug: removing unused subroutine test_cases.arc4_numeric_comparisons.uint_n.UIntNOrdering.approval_program
debug: removing unused subroutine test_cases.arc4_numeric_comparisons.uint_n.UIntNOrdering.clear_state_program
debug: removing unused subroutine algopy._contract.Contract.__init__
debug: Building IR for function test_cases.arc4_numeric_comparisons.uint_n.UIntNOrdering.clear_state_program
debug: Sealing block@0
debug: Terminated block@0
debug: removing unused subroutine _puya_lib.util.ensure_budget
debug: removing unused subroutine _puya_lib.bytes_.is_substring
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_bit
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_fixed_size
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_bits
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_replace_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_replace_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.static_array_replace_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.static_array_replace_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.recalculate_head_for_elements_with_byte_length_head
debug: removing unused subroutine test_cases.arc4_numeric_comparisons.uint_n.check_both_uint_n
debug: removing unused subroutine test_cases.arc4_numeric_comparisons.uint_n.check_mixed
debug: removing unused subroutine test_cases.arc4_numeric_comparisons.uint_n.check_both_big_uint_n
debug: removing unused subroutine test_cases.arc4_numeric_comparisons.uint_n.UIntNOrdering.__puya_arc4_router__
debug: removing unused subroutine test_cases.arc4_numeric_comparisons.uint_n.UIntNOrdering.approval_program
debug: removing unused subroutine test_cases.arc4_numeric_comparisons.uint_n.UIntNOrdering.clear_state_program
debug: removing unused subroutine algopy._contract.Contract.__init__
debug: optimizing approval program of test_cases.arc4_numeric_comparisons.uint_n.UIntNOrdering at level 0
debug: Begin optimization pass 1/100
debug: Optimizing subroutine test_cases.arc4_numeric_comparisons.uint_n.UIntNOrdering.approval_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.arc4_numeric_comparisons.uint_n.check_both_uint_n
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable one_uint64#0
debug: Removing unused variable one_biguint#0
debug: Removing unused variable two_uint64#0
debug: Removing unused variable two_biguint#0
debug: Removing unused variable reinterpret_biguint%1#0
debug: Removing unused variable reinterpret_biguint%3#0
debug: Removing unused variable reinterpret_biguint%9#0
debug: Removing unused variable reinterpret_biguint%15#0
debug: Removing unused variable reinterpret_biguint%17#0
debug: Removing unused variable reinterpret_biguint%23#0
debug: Removing unused variable reinterpret_biguint%29#0
debug: Removing unused variable reinterpret_biguint%31#0
debug: Removing unused variable reinterpret_biguint%37#0
debug: Removing unused variable reinterpret_biguint%43#0
debug: Removing unused variable reinterpret_biguint%45#0
debug: Removing unused variable reinterpret_biguint%51#0
debug: Removing unused variable reinterpret_biguint%57#0
debug: Removing unused variable reinterpret_biguint%59#0
debug: Removing unused variable reinterpret_biguint%65#0
debug: Removing unused variable reinterpret_biguint%71#0
debug: Removing unused variable reinterpret_biguint%73#0
debug: Removing unused variable reinterpret_biguint%79#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.arc4_numeric_comparisons.uint_n.check_mixed
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable one_uint64#0
debug: Removing unused variable one_biguint#0
debug: Removing unused variable two_uint64#0
debug: Removing unused variable two_biguint#0
debug: Removing unused variable reinterpret_biguint%1#0
debug: Removing unused variable reinterpret_biguint%3#0
debug: Removing unused variable reinterpret_biguint%9#0
debug: Removing unused variable reinterpret_biguint%15#0
debug: Removing unused variable reinterpret_biguint%17#0
debug: Removing unused variable reinterpret_biguint%23#0
debug: Removing unused variable reinterpret_biguint%29#0
debug: Removing unused variable reinterpret_biguint%31#0
debug: Removing unused variable reinterpret_biguint%37#0
debug: Removing unused variable reinterpret_biguint%43#0
debug: Removing unused variable reinterpret_biguint%45#0
debug: Removing unused variable reinterpret_biguint%51#0
debug: Removing unused variable reinterpret_biguint%57#0
debug: Removing unused variable reinterpret_biguint%59#0
debug: Removing unused variable reinterpret_biguint%65#0
debug: Removing unused variable reinterpret_biguint%71#0
debug: Removing unused variable reinterpret_biguint%73#0
debug: Removing unused variable reinterpret_biguint%79#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.arc4_numeric_comparisons.uint_n.check_both_big_uint_n
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable one_uint64#0
debug: Removing unused variable one_biguint#0
debug: Removing unused variable two_uint64#0
debug: Removing unused variable two_biguint#0
debug: Removing unused variable reinterpret_biguint%1#0
debug: Removing unused variable reinterpret_biguint%3#0
debug: Removing unused variable reinterpret_biguint%9#0
debug: Removing unused variable reinterpret_biguint%15#0
debug: Removing unused variable reinterpret_biguint%17#0
debug: Removing unused variable reinterpret_biguint%23#0
debug: Removing unused variable reinterpret_biguint%29#0
debug: Removing unused variable reinterpret_biguint%31#0
debug: Removing unused variable reinterpret_biguint%37#0
debug: Removing unused variable reinterpret_biguint%43#0
debug: Removing unused variable reinterpret_biguint%45#0
debug: Removing unused variable reinterpret_biguint%51#0
debug: Removing unused variable reinterpret_biguint%57#0
debug: Removing unused variable reinterpret_biguint%59#0
debug: Removing unused variable reinterpret_biguint%65#0
debug: Removing unused variable reinterpret_biguint%71#0
debug: Removing unused variable reinterpret_biguint%73#0
debug: Removing unused variable reinterpret_biguint%79#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Begin optimization pass 2/100
debug: Optimizing subroutine test_cases.arc4_numeric_comparisons.uint_n.UIntNOrdering.approval_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.arc4_numeric_comparisons.uint_n.check_both_uint_n
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.arc4_numeric_comparisons.uint_n.check_mixed
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.arc4_numeric_comparisons.uint_n.check_both_big_uint_n
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: No optimizations performed in pass 2, ending loop
debug: optimizing clear program of test_cases.arc4_numeric_comparisons.uint_n.UIntNOrdering at level 0
debug: Begin optimization pass 1/100
debug: Optimizing subroutine test_cases.arc4_numeric_comparisons.uint_n.UIntNOrdering.clear_state_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: No optimizations performed in pass 1, ending loop
debug: lowering array IR nodes in approval program of test_cases.arc4_numeric_comparisons.uint_n.UIntNOrdering
debug: lowering array IR nodes in clear program of test_cases.arc4_numeric_comparisons.uint_n.UIntNOrdering
debug: optimizing approval program of test_cases.arc4_numeric_comparisons.uint_n.UIntNOrdering at level 0
debug: Begin optimization pass 1/100
debug: Optimizing subroutine test_cases.arc4_numeric_comparisons.uint_n.UIntNOrdering.approval_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.arc4_numeric_comparisons.uint_n.check_both_uint_n
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.arc4_numeric_comparisons.uint_n.check_mixed
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizing subroutine test_cases.arc4_numeric_comparisons.uint_n.check_both_big_uint_n
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: No optimizations performed in pass 1, ending loop
debug: optimizing clear program of test_cases.arc4_numeric_comparisons.uint_n.UIntNOrdering at level 0
debug: Begin optimization pass 1/100
debug: Optimizing subroutine test_cases.arc4_numeric_comparisons.uint_n.UIntNOrdering.clear_state_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: No optimizations performed in pass 1, ending loop
debug: removing local static slots in approval program of test_cases.arc4_numeric_comparisons.uint_n.UIntNOrdering
arc4_numeric_comparisons/uint_n.py:8 debug: auto reserving slots in test_cases.arc4_numeric_comparisons.uint_n.UIntNOrdering.approval_program, []
arc4_numeric_comparisons/uint_n.py:18 debug: auto reserving slots in test_cases.arc4_numeric_comparisons.uint_n.check_both_uint_n, []
arc4_numeric_comparisons/uint_n.py:87 debug: auto reserving slots in test_cases.arc4_numeric_comparisons.uint_n.check_mixed, []
arc4_numeric_comparisons/uint_n.py:156 debug: auto reserving slots in test_cases.arc4_numeric_comparisons.uint_n.check_both_big_uint_n, []
debug: Slot allocation not required
debug: removing local static slots in clear program of test_cases.arc4_numeric_comparisons.uint_n.UIntNOrdering
arc4_numeric_comparisons/uint_n.py:14 debug: auto reserving slots in test_cases.arc4_numeric_comparisons.uint_n.UIntNOrdering.clear_state_program, []
debug: Slot allocation not required
debug: Performing SSA IR destructuring for test_cases.arc4_numeric_comparisons.uint_n.UIntNOrdering.approval_program
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in test_cases.arc4_numeric_comparisons.uint_n.UIntNOrdering.approval_program using strategy 'root_operand'
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in test_cases.arc4_numeric_comparisons.uint_n.UIntNOrdering.approval_program
debug: Performing post-SSA optimizations at level 0
debug: Performing SSA IR destructuring for test_cases.arc4_numeric_comparisons.uint_n.check_both_uint_n
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in test_cases.arc4_numeric_comparisons.uint_n.check_both_uint_n using strategy 'root_operand'
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in test_cases.arc4_numeric_comparisons.uint_n.check_both_uint_n
debug: Performing post-SSA optimizations at level 0
debug: Performing SSA IR destructuring for test_cases.arc4_numeric_comparisons.uint_n.check_mixed
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in test_cases.arc4_numeric_comparisons.uint_n.check_mixed using strategy 'root_operand'
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in test_cases.arc4_numeric_comparisons.uint_n.check_mixed
debug: Performing post-SSA optimizations at level 0
debug: Performing SSA IR destructuring for test_cases.arc4_numeric_comparisons.uint_n.check_both_big_uint_n
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in test_cases.arc4_numeric_comparisons.uint_n.check_both_big_uint_n using strategy 'root_operand'
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in test_cases.arc4_numeric_comparisons.uint_n.check_both_big_uint_n
debug: Performing post-SSA optimizations at level 0
debug: Output IR to arc4_numeric_comparisons/out_unoptimized/UIntNOrdering.ir/UIntNOrdering.approval.400.destructured.ir
debug: Performing SSA IR destructuring for test_cases.arc4_numeric_comparisons.uint_n.UIntNOrdering.clear_state_program
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in test_cases.arc4_numeric_comparisons.uint_n.UIntNOrdering.clear_state_program using strategy 'root_operand'
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in test_cases.arc4_numeric_comparisons.uint_n.UIntNOrdering.clear_state_program
debug: Performing post-SSA optimizations at level 0
debug: Output IR to arc4_numeric_comparisons/out_unoptimized/UIntNOrdering.ir/UIntNOrdering.clear.400.destructured.ir
debug: Inserted check_both_uint_n_block@0.ops[1]: 'l-store-copy reinterpret_biguint%0#0 0'
debug: Replaced check_both_uint_n_block@0.ops[3]: 'v-load reinterpret_biguint%0#0' with 'l-load reinterpret_biguint%0#0'
debug: Inserted check_both_uint_n_block@0.ops[6]: 'l-store-copy tmp%0#0 0'
debug: Replaced check_both_uint_n_block@0.ops[8]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted check_both_uint_n_block@0.ops[11]: 'l-store-copy reinterpret_biguint%2#0 0'
debug: Replaced check_both_uint_n_block@0.ops[13]: 'v-load reinterpret_biguint%2#0' with 'l-load reinterpret_biguint%2#0'
debug: Inserted check_both_uint_n_block@0.ops[16]: 'l-store-copy tmp%1#0 0'
debug: Replaced check_both_uint_n_block@0.ops[18]: 'v-load tmp%1#0' with 'l-load tmp%1#0'
debug: Inserted check_both_uint_n_block@0.ops[27]: 'l-store-copy tmp%2#0 0'
debug: Replaced check_both_uint_n_block@0.ops[29]: 'v-load tmp%2#0' with 'l-load tmp%2#0'
debug: Inserted check_both_uint_n_block@0.ops[39]: 'l-store-copy tmp%4#0 0'
debug: Replaced check_both_uint_n_block@0.ops[41]: 'v-load tmp%4#0' with 'l-load tmp%4#0'
debug: Inserted check_both_uint_n_block@0.ops[44]: 'l-store-copy reinterpret_biguint%7#0 0'
debug: Replaced check_both_uint_n_block@0.ops[46]: 'v-load reinterpret_biguint%7#0' with 'l-load reinterpret_biguint%7#0'
debug: Inserted check_both_uint_n_block@0.ops[49]: 'l-store-copy tmp%5#0 0'
debug: Replaced check_both_uint_n_block@0.ops[51]: 'v-load tmp%5#0' with 'l-load tmp%5#0'
debug: Inserted check_both_uint_n_block@0.ops[54]: 'l-store-copy reinterpret_biguint%8#0 0'
debug: Replaced check_both_uint_n_block@0.ops[56]: 'v-load reinterpret_biguint%8#0' with 'l-load reinterpret_biguint%8#0'
debug: Inserted check_both_uint_n_block@0.ops[59]: 'l-store-copy tmp%6#0 0'
debug: Replaced check_both_uint_n_block@0.ops[61]: 'v-load tmp%6#0' with 'l-load tmp%6#0'
debug: Inserted check_both_uint_n_block@0.ops[63]: 'l-store-copy tmp%7#0 0'
debug: Replaced check_both_uint_n_block@0.ops[65]: 'v-load tmp%7#0' with 'l-load tmp%7#0'
debug: Inserted check_both_uint_n_block@0.ops[74]: 'l-store-copy tmp%8#0 0'
debug: Replaced check_both_uint_n_block@0.ops[76]: 'v-load tmp%8#0' with 'l-load tmp%8#0'
debug: Inserted check_both_uint_n_block@0.ops[78]: 'l-store-copy tmp%9#0 0'
debug: Replaced check_both_uint_n_block@0.ops[80]: 'v-load tmp%9#0' with 'l-load tmp%9#0'
debug: Inserted check_both_uint_n_block@0.ops[90]: 'l-store-copy tmp%11#0 0'
debug: Replaced check_both_uint_n_block@0.ops[92]: 'v-load tmp%11#0' with 'l-load tmp%11#0'
debug: Inserted check_both_uint_n_block@0.ops[94]: 'l-store-copy tmp%12#0 0'
debug: Replaced check_both_uint_n_block@0.ops[96]: 'v-load tmp%12#0' with 'l-load tmp%12#0'
debug: Inserted check_both_uint_n_block@0.ops[99]: 'l-store-copy reinterpret_biguint%13#0 0'
debug: Replaced check_both_uint_n_block@0.ops[101]: 'v-load reinterpret_biguint%13#0' with 'l-load reinterpret_biguint%13#0'
debug: Inserted check_both_uint_n_block@0.ops[104]: 'l-store-copy tmp%13#0 0'
debug: Replaced check_both_uint_n_block@0.ops[106]: 'v-load tmp%13#0' with 'l-load tmp%13#0'
debug: Inserted check_both_uint_n_block@0.ops[108]: 'l-store-copy tmp%14#0 0'
debug: Replaced check_both_uint_n_block@0.ops[110]: 'v-load tmp%14#0' with 'l-load tmp%14#0'
debug: Inserted check_both_uint_n_block@0.ops[113]: 'l-store-copy reinterpret_biguint%14#0 0'
debug: Replaced check_both_uint_n_block@0.ops[115]: 'v-load reinterpret_biguint%14#0' with 'l-load reinterpret_biguint%14#0'
debug: Inserted check_both_uint_n_block@0.ops[118]: 'l-store-copy tmp%15#0 0'
debug: Replaced check_both_uint_n_block@0.ops[120]: 'v-load tmp%15#0' with 'l-load tmp%15#0'
debug: Inserted check_both_uint_n_block@0.ops[122]: 'l-store-copy tmp%16#0 0'
debug: Replaced check_both_uint_n_block@0.ops[124]: 'v-load tmp%16#0' with 'l-load tmp%16#0'
debug: Inserted check_both_uint_n_block@0.ops[127]: 'l-store-copy reinterpret_biguint%16#0 0'
debug: Replaced check_both_uint_n_block@0.ops[129]: 'v-load reinterpret_biguint%16#0' with 'l-load reinterpret_biguint%16#0'
debug: Inserted check_both_uint_n_block@0.ops[132]: 'l-store-copy tmp%17#0 0'
debug: Replaced check_both_uint_n_block@0.ops[134]: 'v-load tmp%17#0' with 'l-load tmp%17#0'
debug: Inserted check_both_uint_n_block@0.ops[136]: 'l-store-copy tmp%18#0 0'
debug: Replaced check_both_uint_n_block@0.ops[138]: 'v-load tmp%18#0' with 'l-load tmp%18#0'
debug: Inserted check_both_uint_n_block@0.ops[147]: 'l-store-copy tmp%19#0 0'
debug: Replaced check_both_uint_n_block@0.ops[149]: 'v-load tmp%19#0' with 'l-load tmp%19#0'
debug: Inserted check_both_uint_n_block@0.ops[151]: 'l-store-copy tmp%20#0 0'
debug: Replaced check_both_uint_n_block@0.ops[153]: 'v-load tmp%20#0' with 'l-load tmp%20#0'
debug: Inserted check_both_uint_n_block@0.ops[163]: 'l-store-copy tmp%22#0 0'
debug: Replaced check_both_uint_n_block@0.ops[165]: 'v-load tmp%22#0' with 'l-load tmp%22#0'
debug: Inserted check_both_uint_n_block@0.ops[167]: 'l-store-copy tmp%23#0 0'
debug: Replaced check_both_uint_n_block@0.ops[169]: 'v-load tmp%23#0' with 'l-load tmp%23#0'
debug: Inserted check_both_uint_n_block@0.ops[172]: 'l-store-copy reinterpret_biguint%21#0 0'
debug: Replaced check_both_uint_n_block@0.ops[174]: 'v-load reinterpret_biguint%21#0' with 'l-load reinterpret_biguint%21#0'
debug: Inserted check_both_uint_n_block@0.ops[177]: 'l-store-copy tmp%24#0 0'
debug: Replaced check_both_uint_n_block@0.ops[179]: 'v-load tmp%24#0' with 'l-load tmp%24#0'
debug: Inserted check_both_uint_n_block@0.ops[181]: 'l-store-copy tmp%25#0 0'
debug: Replaced check_both_uint_n_block@0.ops[183]: 'v-load tmp%25#0' with 'l-load tmp%25#0'
debug: Inserted check_both_uint_n_block@0.ops[186]: 'l-store-copy reinterpret_biguint%22#0 0'
debug: Replaced check_both_uint_n_block@0.ops[188]: 'v-load reinterpret_biguint%22#0' with 'l-load reinterpret_biguint%22#0'
debug: Inserted check_both_uint_n_block@0.ops[191]: 'l-store-copy tmp%26#0 0'
debug: Replaced check_both_uint_n_block@0.ops[193]: 'v-load tmp%26#0' with 'l-load tmp%26#0'
debug: Inserted check_both_uint_n_block@0.ops[202]: 'l-store-copy tmp%27#0 0'
debug: Replaced check_both_uint_n_block@0.ops[204]: 'v-load tmp%27#0' with 'l-load tmp%27#0'
debug: Inserted check_both_uint_n_block@0.ops[214]: 'l-store-copy tmp%29#0 0'
debug: Replaced check_both_uint_n_block@0.ops[216]: 'v-load tmp%29#0' with 'l-load tmp%29#0'
debug: Inserted check_both_uint_n_block@0.ops[219]: 'l-store-copy reinterpret_biguint%27#0 0'
debug: Replaced check_both_uint_n_block@0.ops[221]: 'v-load reinterpret_biguint%27#0' with 'l-load reinterpret_biguint%27#0'
debug: Inserted check_both_uint_n_block@0.ops[224]: 'l-store-copy tmp%30#0 0'
debug: Replaced check_both_uint_n_block@0.ops[226]: 'v-load tmp%30#0' with 'l-load tmp%30#0'
debug: Inserted check_both_uint_n_block@0.ops[229]: 'l-store-copy reinterpret_biguint%28#0 0'
debug: Replaced check_both_uint_n_block@0.ops[231]: 'v-load reinterpret_biguint%28#0' with 'l-load reinterpret_biguint%28#0'
debug: Inserted check_both_uint_n_block@0.ops[234]: 'l-store-copy tmp%31#0 0'
debug: Replaced check_both_uint_n_block@0.ops[236]: 'v-load tmp%31#0' with 'l-load tmp%31#0'
debug: Inserted check_both_uint_n_block@0.ops[239]: 'l-store-copy reinterpret_biguint%30#0 0'
debug: Replaced check_both_uint_n_block@0.ops[241]: 'v-load reinterpret_biguint%30#0' with 'l-load reinterpret_biguint%30#0'
debug: Inserted check_both_uint_n_block@0.ops[244]: 'l-store-copy tmp%32#0 0'
debug: Replaced check_both_uint_n_block@0.ops[246]: 'v-load tmp%32#0' with 'l-load tmp%32#0'
debug: Inserted check_both_uint_n_block@0.ops[255]: 'l-store-copy tmp%33#0 0'
debug: Replaced check_both_uint_n_block@0.ops[257]: 'v-load tmp%33#0' with 'l-load tmp%33#0'
debug: Inserted check_both_uint_n_block@0.ops[267]: 'l-store-copy tmp%35#0 0'
debug: Replaced check_both_uint_n_block@0.ops[269]: 'v-load tmp%35#0' with 'l-load tmp%35#0'
debug: Inserted check_both_uint_n_block@0.ops[272]: 'l-store-copy reinterpret_biguint%35#0 0'
debug: Replaced check_both_uint_n_block@0.ops[274]: 'v-load reinterpret_biguint%35#0' with 'l-load reinterpret_biguint%35#0'
debug: Inserted check_both_uint_n_block@0.ops[277]: 'l-store-copy tmp%36#0 0'
debug: Replaced check_both_uint_n_block@0.ops[279]: 'v-load tmp%36#0' with 'l-load tmp%36#0'
debug: Inserted check_both_uint_n_block@0.ops[282]: 'l-store-copy reinterpret_biguint%36#0 0'
debug: Replaced check_both_uint_n_block@0.ops[284]: 'v-load reinterpret_biguint%36#0' with 'l-load reinterpret_biguint%36#0'
debug: Inserted check_both_uint_n_block@0.ops[287]: 'l-store-copy tmp%37#0 0'
debug: Replaced check_both_uint_n_block@0.ops[289]: 'v-load tmp%37#0' with 'l-load tmp%37#0'
debug: Inserted check_both_uint_n_block@0.ops[298]: 'l-store-copy tmp%38#0 0'
debug: Replaced check_both_uint_n_block@0.ops[300]: 'v-load tmp%38#0' with 'l-load tmp%38#0'
debug: Inserted check_both_uint_n_block@0.ops[310]: 'l-store-copy tmp%40#0 0'
debug: Replaced check_both_uint_n_block@0.ops[312]: 'v-load tmp%40#0' with 'l-load tmp%40#0'
debug: Inserted check_both_uint_n_block@0.ops[315]: 'l-store-copy reinterpret_biguint%41#0 0'
debug: Replaced check_both_uint_n_block@0.ops[317]: 'v-load reinterpret_biguint%41#0' with 'l-load reinterpret_biguint%41#0'
debug: Inserted check_both_uint_n_block@0.ops[320]: 'l-store-copy tmp%41#0 0'
debug: Replaced check_both_uint_n_block@0.ops[322]: 'v-load tmp%41#0' with 'l-load tmp%41#0'
debug: Inserted check_both_uint_n_block@0.ops[325]: 'l-store-copy reinterpret_biguint%42#0 0'
debug: Replaced check_both_uint_n_block@0.ops[327]: 'v-load reinterpret_biguint%42#0' with 'l-load reinterpret_biguint%42#0'
debug: Inserted check_both_uint_n_block@0.ops[330]: 'l-store-copy tmp%42#0 0'
debug: Replaced check_both_uint_n_block@0.ops[332]: 'v-load tmp%42#0' with 'l-load tmp%42#0'
debug: Inserted check_both_uint_n_block@0.ops[334]: 'l-store-copy tmp%43#0 0'
debug: Replaced check_both_uint_n_block@0.ops[336]: 'v-load tmp%43#0' with 'l-load tmp%43#0'
debug: Inserted check_both_uint_n_block@0.ops[339]: 'l-store-copy reinterpret_biguint%44#0 0'
debug: Replaced check_both_uint_n_block@0.ops[341]: 'v-load reinterpret_biguint%44#0' with 'l-load reinterpret_biguint%44#0'
debug: Inserted check_both_uint_n_block@0.ops[344]: 'l-store-copy tmp%44#0 0'
debug: Replaced check_both_uint_n_block@0.ops[346]: 'v-load tmp%44#0' with 'l-load tmp%44#0'
debug: Inserted check_both_uint_n_block@0.ops[348]: 'l-store-copy tmp%45#0 0'
debug: Replaced check_both_uint_n_block@0.ops[350]: 'v-load tmp%45#0' with 'l-load tmp%45#0'
debug: Inserted check_both_uint_n_block@0.ops[359]: 'l-store-copy tmp%46#0 0'
debug: Replaced check_both_uint_n_block@0.ops[361]: 'v-load tmp%46#0' with 'l-load tmp%46#0'
debug: Inserted check_both_uint_n_block@0.ops[363]: 'l-store-copy tmp%47#0 0'
debug: Replaced check_both_uint_n_block@0.ops[365]: 'v-load tmp%47#0' with 'l-load tmp%47#0'
debug: Inserted check_both_uint_n_block@0.ops[375]: 'l-store-copy tmp%49#0 0'
debug: Replaced check_both_uint_n_block@0.ops[377]: 'v-load tmp%49#0' with 'l-load tmp%49#0'
debug: Inserted check_both_uint_n_block@0.ops[379]: 'l-store-copy tmp%50#0 0'
debug: Replaced check_both_uint_n_block@0.ops[381]: 'v-load tmp%50#0' with 'l-load tmp%50#0'
debug: Inserted check_both_uint_n_block@0.ops[384]: 'l-store-copy reinterpret_biguint%49#0 0'
debug: Replaced check_both_uint_n_block@0.ops[386]: 'v-load reinterpret_biguint%49#0' with 'l-load reinterpret_biguint%49#0'
debug: Inserted check_both_uint_n_block@0.ops[389]: 'l-store-copy tmp%51#0 0'
debug: Replaced check_both_uint_n_block@0.ops[391]: 'v-load tmp%51#0' with 'l-load tmp%51#0'
debug: Inserted check_both_uint_n_block@0.ops[393]: 'l-store-copy tmp%52#0 0'
debug: Replaced check_both_uint_n_block@0.ops[395]: 'v-load tmp%52#0' with 'l-load tmp%52#0'
debug: Inserted check_both_uint_n_block@0.ops[398]: 'l-store-copy reinterpret_biguint%50#0 0'
debug: Replaced check_both_uint_n_block@0.ops[400]: 'v-load reinterpret_biguint%50#0' with 'l-load reinterpret_biguint%50#0'
debug: Inserted check_both_uint_n_block@0.ops[403]: 'l-store-copy tmp%53#0 0'
debug: Replaced check_both_uint_n_block@0.ops[405]: 'v-load tmp%53#0' with 'l-load tmp%53#0'
debug: Inserted check_both_uint_n_block@0.ops[414]: 'l-store-copy tmp%54#0 0'
debug: Replaced check_both_uint_n_block@0.ops[416]: 'v-load tmp%54#0' with 'l-load tmp%54#0'
debug: Inserted check_both_uint_n_block@0.ops[426]: 'l-store-copy tmp%56#0 0'
debug: Replaced check_both_uint_n_block@0.ops[428]: 'v-load tmp%56#0' with 'l-load tmp%56#0'
debug: Inserted check_both_uint_n_block@0.ops[431]: 'l-store-copy reinterpret_biguint%55#0 0'
debug: Replaced check_both_uint_n_block@0.ops[433]: 'v-load reinterpret_biguint%55#0' with 'l-load reinterpret_biguint%55#0'
debug: Inserted check_both_uint_n_block@0.ops[436]: 'l-store-copy tmp%57#0 0'
debug: Replaced check_both_uint_n_block@0.ops[438]: 'v-load tmp%57#0' with 'l-load tmp%57#0'
debug: Inserted check_both_uint_n_block@0.ops[441]: 'l-store-copy reinterpret_biguint%56#0 0'
debug: Replaced check_both_uint_n_block@0.ops[443]: 'v-load reinterpret_biguint%56#0' with 'l-load reinterpret_biguint%56#0'
debug: Inserted check_both_uint_n_block@0.ops[446]: 'l-store-copy tmp%58#0 0'
debug: Replaced check_both_uint_n_block@0.ops[448]: 'v-load tmp%58#0' with 'l-load tmp%58#0'
debug: Inserted check_both_uint_n_block@0.ops[451]: 'l-store-copy reinterpret_biguint%58#0 0'
debug: Replaced check_both_uint_n_block@0.ops[453]: 'v-load reinterpret_biguint%58#0' with 'l-load reinterpret_biguint%58#0'
debug: Inserted check_both_uint_n_block@0.ops[456]: 'l-store-copy tmp%59#0 0'
debug: Replaced check_both_uint_n_block@0.ops[458]: 'v-load tmp%59#0' with 'l-load tmp%59#0'
debug: Inserted check_both_uint_n_block@0.ops[467]: 'l-store-copy tmp%60#0 0'
debug: Replaced check_both_uint_n_block@0.ops[469]: 'v-load tmp%60#0' with 'l-load tmp%60#0'
debug: Inserted check_both_uint_n_block@0.ops[479]: 'l-store-copy tmp%62#0 0'
debug: Replaced check_both_uint_n_block@0.ops[481]: 'v-load tmp%62#0' with 'l-load tmp%62#0'
debug: Inserted check_both_uint_n_block@0.ops[484]: 'l-store-copy reinterpret_biguint%63#0 0'
debug: Replaced check_both_uint_n_block@0.ops[486]: 'v-load reinterpret_biguint%63#0' with 'l-load reinterpret_biguint%63#0'
debug: Inserted check_both_uint_n_block@0.ops[489]: 'l-store-copy tmp%63#0 0'
debug: Replaced check_both_uint_n_block@0.ops[491]: 'v-load tmp%63#0' with 'l-load tmp%63#0'
debug: Inserted check_both_uint_n_block@0.ops[494]: 'l-store-copy reinterpret_biguint%64#0 0'
debug: Replaced check_both_uint_n_block@0.ops[496]: 'v-load reinterpret_biguint%64#0' with 'l-load reinterpret_biguint%64#0'
debug: Inserted check_both_uint_n_block@0.ops[499]: 'l-store-copy tmp%64#0 0'
debug: Replaced check_both_uint_n_block@0.ops[501]: 'v-load tmp%64#0' with 'l-load tmp%64#0'
debug: Inserted check_both_uint_n_block@0.ops[503]: 'l-store-copy tmp%65#0 0'
debug: Replaced check_both_uint_n_block@0.ops[505]: 'v-load tmp%65#0' with 'l-load tmp%65#0'
debug: Inserted check_both_uint_n_block@0.ops[514]: 'l-store-copy tmp%66#0 0'
debug: Replaced check_both_uint_n_block@0.ops[516]: 'v-load tmp%66#0' with 'l-load tmp%66#0'
debug: Inserted check_both_uint_n_block@0.ops[518]: 'l-store-copy tmp%67#0 0'
debug: Replaced check_both_uint_n_block@0.ops[520]: 'v-load tmp%67#0' with 'l-load tmp%67#0'
debug: Inserted check_both_uint_n_block@0.ops[530]: 'l-store-copy tmp%69#0 0'
debug: Replaced check_both_uint_n_block@0.ops[532]: 'v-load tmp%69#0' with 'l-load tmp%69#0'
debug: Inserted check_both_uint_n_block@0.ops[534]: 'l-store-copy tmp%70#0 0'
debug: Replaced check_both_uint_n_block@0.ops[536]: 'v-load tmp%70#0' with 'l-load tmp%70#0'
debug: Inserted check_both_uint_n_block@0.ops[539]: 'l-store-copy reinterpret_biguint%69#0 0'
debug: Replaced check_both_uint_n_block@0.ops[541]: 'v-load reinterpret_biguint%69#0' with 'l-load reinterpret_biguint%69#0'
debug: Inserted check_both_uint_n_block@0.ops[544]: 'l-store-copy tmp%71#0 0'
debug: Replaced check_both_uint_n_block@0.ops[546]: 'v-load tmp%71#0' with 'l-load tmp%71#0'
debug: Inserted check_both_uint_n_block@0.ops[548]: 'l-store-copy tmp%72#0 0'
debug: Replaced check_both_uint_n_block@0.ops[550]: 'v-load tmp%72#0' with 'l-load tmp%72#0'
debug: Inserted check_both_uint_n_block@0.ops[553]: 'l-store-copy reinterpret_biguint%70#0 0'
debug: Replaced check_both_uint_n_block@0.ops[555]: 'v-load reinterpret_biguint%70#0' with 'l-load reinterpret_biguint%70#0'
debug: Inserted check_both_uint_n_block@0.ops[558]: 'l-store-copy tmp%73#0 0'
debug: Replaced check_both_uint_n_block@0.ops[560]: 'v-load tmp%73#0' with 'l-load tmp%73#0'
debug: Inserted check_both_uint_n_block@0.ops[562]: 'l-store-copy tmp%74#0 0'
debug: Replaced check_both_uint_n_block@0.ops[564]: 'v-load tmp%74#0' with 'l-load tmp%74#0'
debug: Inserted check_both_uint_n_block@0.ops[567]: 'l-store-copy reinterpret_biguint%72#0 0'
debug: Replaced check_both_uint_n_block@0.ops[569]: 'v-load reinterpret_biguint%72#0' with 'l-load reinterpret_biguint%72#0'
debug: Inserted check_both_uint_n_block@0.ops[572]: 'l-store-copy tmp%75#0 0'
debug: Replaced check_both_uint_n_block@0.ops[574]: 'v-load tmp%75#0' with 'l-load tmp%75#0'
debug: Inserted check_both_uint_n_block@0.ops[576]: 'l-store-copy tmp%76#0 0'
debug: Replaced check_both_uint_n_block@0.ops[578]: 'v-load tmp%76#0' with 'l-load tmp%76#0'
debug: Inserted check_both_uint_n_block@0.ops[587]: 'l-store-copy tmp%77#0 0'
debug: Replaced check_both_uint_n_block@0.ops[589]: 'v-load tmp%77#0' with 'l-load tmp%77#0'
debug: Inserted check_both_uint_n_block@0.ops[591]: 'l-store-copy tmp%78#0 0'
debug: Replaced check_both_uint_n_block@0.ops[593]: 'v-load tmp%78#0' with 'l-load tmp%78#0'
debug: Inserted check_both_uint_n_block@0.ops[603]: 'l-store-copy tmp%80#0 0'
debug: Replaced check_both_uint_n_block@0.ops[605]: 'v-load tmp%80#0' with 'l-load tmp%80#0'
debug: Inserted check_both_uint_n_block@0.ops[607]: 'l-store-copy tmp%81#0 0'
debug: Replaced check_both_uint_n_block@0.ops[609]: 'v-load tmp%81#0' with 'l-load tmp%81#0'
debug: Inserted check_both_uint_n_block@0.ops[612]: 'l-store-copy reinterpret_biguint%77#0 0'
debug: Replaced check_both_uint_n_block@0.ops[614]: 'v-load reinterpret_biguint%77#0' with 'l-load reinterpret_biguint%77#0'
debug: Inserted check_both_uint_n_block@0.ops[617]: 'l-store-copy tmp%82#0 0'
debug: Replaced check_both_uint_n_block@0.ops[619]: 'v-load tmp%82#0' with 'l-load tmp%82#0'
debug: Inserted check_both_uint_n_block@0.ops[621]: 'l-store-copy tmp%83#0 0'
debug: Replaced check_both_uint_n_block@0.ops[623]: 'v-load tmp%83#0' with 'l-load tmp%83#0'
debug: Inserted check_both_uint_n_block@0.ops[626]: 'l-store-copy reinterpret_biguint%78#0 0'
debug: Replaced check_both_uint_n_block@0.ops[628]: 'v-load reinterpret_biguint%78#0' with 'l-load reinterpret_biguint%78#0'
debug: Inserted check_both_uint_n_block@0.ops[631]: 'l-store-copy tmp%84#0 0'
debug: Replaced check_both_uint_n_block@0.ops[633]: 'v-load tmp%84#0' with 'l-load tmp%84#0'
debug: Inserted check_both_uint_n_block@0.ops[635]: 'l-store-copy tmp%85#0 0'
debug: Replaced check_both_uint_n_block@0.ops[637]: 'v-load tmp%85#0' with 'l-load tmp%85#0'
debug: Inserted check_both_uint_n_block@0.ops[646]: 'l-store-copy tmp%86#0 0'
debug: Replaced check_both_uint_n_block@0.ops[648]: 'v-load tmp%86#0' with 'l-load tmp%86#0'
debug: Inserted check_both_uint_n_block@0.ops[650]: 'l-store-copy tmp%87#0 0'
debug: Replaced check_both_uint_n_block@0.ops[652]: 'v-load tmp%87#0' with 'l-load tmp%87#0'
debug: Inserted check_both_uint_n_block@0.ops[662]: 'l-store-copy tmp%89#0 0'
debug: Replaced check_both_uint_n_block@0.ops[664]: 'v-load tmp%89#0' with 'l-load tmp%89#0'
debug: Inserted check_both_uint_n_block@0.ops[666]: 'l-store-copy tmp%90#0 0'
debug: Replaced check_both_uint_n_block@0.ops[668]: 'v-load tmp%90#0' with 'l-load tmp%90#0'
debug: Inserted check_both_uint_n_block@0.ops[671]: 'l-store-copy reinterpret_biguint%83#0 0'
debug: Replaced check_both_uint_n_block@0.ops[673]: 'v-load reinterpret_biguint%83#0' with 'l-load reinterpret_biguint%83#0'
debug: Inserted check_both_uint_n_block@0.ops[676]: 'l-store-copy tmp%91#0 0'
debug: Replaced check_both_uint_n_block@0.ops[678]: 'v-load tmp%91#0' with 'l-load tmp%91#0'
debug: Inserted check_both_uint_n_block@0.ops[680]: 'l-store-copy tmp%92#0 0'
debug: Replaced check_both_uint_n_block@0.ops[682]: 'v-load tmp%92#0' with 'l-load tmp%92#0'
debug: Inserted check_both_uint_n_block@0.ops[23]: 'l-store-copy reinterpret_biguint%5#0 0'
debug: Replaced check_both_uint_n_block@0.ops[26]: 'v-load reinterpret_biguint%5#0' with 'l-load reinterpret_biguint%5#0'
debug: Inserted check_both_uint_n_block@0.ops[36]: 'l-store-copy tmp%3#0 0'
debug: Replaced check_both_uint_n_block@0.ops[39]: 'v-load tmp%3#0' with 'l-load tmp%3#0'
debug: Inserted check_both_uint_n_block@0.ops[72]: 'l-store-copy reinterpret_biguint%11#0 0'
debug: Replaced check_both_uint_n_block@0.ops[75]: 'v-load reinterpret_biguint%11#0' with 'l-load reinterpret_biguint%11#0'
debug: Inserted check_both_uint_n_block@0.ops[89]: 'l-store-copy tmp%10#0 0'
debug: Replaced check_both_uint_n_block@0.ops[92]: 'v-load tmp%10#0' with 'l-load tmp%10#0'
debug: Inserted check_both_uint_n_block@0.ops[147]: 'l-store-copy reinterpret_biguint%19#0 0'
debug: Replaced check_both_uint_n_block@0.ops[150]: 'v-load reinterpret_biguint%19#0' with 'l-load reinterpret_biguint%19#0'
debug: Inserted check_both_uint_n_block@0.ops[164]: 'l-store-copy tmp%21#0 0'
debug: Replaced check_both_uint_n_block@0.ops[167]: 'v-load tmp%21#0' with 'l-load tmp%21#0'
debug: Inserted check_both_uint_n_block@0.ops[204]: 'l-store-copy reinterpret_biguint%25#0 0'
debug: Replaced check_both_uint_n_block@0.ops[207]: 'v-load reinterpret_biguint%25#0' with 'l-load reinterpret_biguint%25#0'
debug: Inserted check_both_uint_n_block@0.ops[217]: 'l-store-copy tmp%28#0 0'
debug: Replaced check_both_uint_n_block@0.ops[220]: 'v-load tmp%28#0' with 'l-load tmp%28#0'
debug: Inserted check_both_uint_n_block@0.ops[259]: 'l-store-copy reinterpret_biguint%33#0 0'
debug: Replaced check_both_uint_n_block@0.ops[262]: 'v-load reinterpret_biguint%33#0' with 'l-load reinterpret_biguint%33#0'
debug: Inserted check_both_uint_n_block@0.ops[272]: 'l-store-copy tmp%34#0 0'
debug: Replaced check_both_uint_n_block@0.ops[275]: 'v-load tmp%34#0' with 'l-load tmp%34#0'
debug: Inserted check_both_uint_n_block@0.ops[304]: 'l-store-copy reinterpret_biguint%39#0 0'
debug: Replaced check_both_uint_n_block@0.ops[307]: 'v-load reinterpret_biguint%39#0' with 'l-load reinterpret_biguint%39#0'
debug: Inserted check_both_uint_n_block@0.ops[317]: 'l-store-copy tmp%39#0 0'
debug: Replaced check_both_uint_n_block@0.ops[320]: 'v-load tmp%39#0' with 'l-load tmp%39#0'
debug: Inserted check_both_uint_n_block@0.ops[367]: 'l-store-copy reinterpret_biguint%47#0 0'
debug: Replaced check_both_uint_n_block@0.ops[370]: 'v-load reinterpret_biguint%47#0' with 'l-load reinterpret_biguint%47#0'
debug: Inserted check_both_uint_n_block@0.ops[384]: 'l-store-copy tmp%48#0 0'
debug: Replaced check_both_uint_n_block@0.ops[387]: 'v-load tmp%48#0' with 'l-load tmp%48#0'
debug: Inserted check_both_uint_n_block@0.ops[424]: 'l-store-copy reinterpret_biguint%53#0 0'
debug: Replaced check_both_uint_n_block@0.ops[427]: 'v-load reinterpret_biguint%53#0' with 'l-load reinterpret_biguint%53#0'
debug: Inserted check_both_uint_n_block@0.ops[437]: 'l-store-copy tmp%55#0 0'
debug: Replaced check_both_uint_n_block@0.ops[440]: 'v-load tmp%55#0' with 'l-load tmp%55#0'
debug: Inserted check_both_uint_n_block@0.ops[479]: 'l-store-copy reinterpret_biguint%61#0 0'
debug: Replaced check_both_uint_n_block@0.ops[482]: 'v-load reinterpret_biguint%61#0' with 'l-load reinterpret_biguint%61#0'
debug: Inserted check_both_uint_n_block@0.ops[492]: 'l-store-copy tmp%61#0 0'
debug: Replaced check_both_uint_n_block@0.ops[495]: 'v-load tmp%61#0' with 'l-load tmp%61#0'
debug: Inserted check_both_uint_n_block@0.ops[528]: 'l-store-copy reinterpret_biguint%67#0 0'
debug: Replaced check_both_uint_n_block@0.ops[531]: 'v-load reinterpret_biguint%67#0' with 'l-load reinterpret_biguint%67#0'
debug: Inserted check_both_uint_n_block@0.ops[545]: 'l-store-copy tmp%68#0 0'
debug: Replaced check_both_uint_n_block@0.ops[548]: 'v-load tmp%68#0' with 'l-load tmp%68#0'
debug: Inserted check_both_uint_n_block@0.ops[603]: 'l-store-copy reinterpret_biguint%75#0 0'
debug: Replaced check_both_uint_n_block@0.ops[606]: 'v-load reinterpret_biguint%75#0' with 'l-load reinterpret_biguint%75#0'
debug: Inserted check_both_uint_n_block@0.ops[620]: 'l-store-copy tmp%79#0 0'
debug: Replaced check_both_uint_n_block@0.ops[623]: 'v-load tmp%79#0' with 'l-load tmp%79#0'
debug: Inserted check_both_uint_n_block@0.ops[664]: 'l-store-copy reinterpret_biguint%81#0 0'
debug: Replaced check_both_uint_n_block@0.ops[667]: 'v-load reinterpret_biguint%81#0' with 'l-load reinterpret_biguint%81#0'
debug: Inserted check_both_uint_n_block@0.ops[681]: 'l-store-copy tmp%88#0 0'
debug: Replaced check_both_uint_n_block@0.ops[684]: 'v-load tmp%88#0' with 'l-load tmp%88#0'
debug: Inserted check_both_uint_n_block@0.ops[21]: 'l-store-copy reinterpret_biguint%4#0 0'
debug: Replaced check_both_uint_n_block@0.ops[26]: 'v-load reinterpret_biguint%4#0' with 'l-load reinterpret_biguint%4#0'
debug: Inserted check_both_uint_n_block@0.ops[71]: 'l-store-copy reinterpret_biguint%10#0 0'
debug: Replaced check_both_uint_n_block@0.ops[76]: 'v-load reinterpret_biguint%10#0' with 'l-load reinterpret_biguint%10#0'
debug: Inserted check_both_uint_n_block@0.ops[147]: 'l-store-copy reinterpret_biguint%18#0 0'
debug: Replaced check_both_uint_n_block@0.ops[152]: 'v-load reinterpret_biguint%18#0' with 'l-load reinterpret_biguint%18#0'
debug: Inserted check_both_uint_n_block@0.ops[205]: 'l-store-copy reinterpret_biguint%24#0 0'
debug: Replaced check_both_uint_n_block@0.ops[210]: 'v-load reinterpret_biguint%24#0' with 'l-load reinterpret_biguint%24#0'
debug: Inserted check_both_uint_n_block@0.ops[261]: 'l-store-copy reinterpret_biguint%32#0 0'
debug: Replaced check_both_uint_n_block@0.ops[266]: 'v-load reinterpret_biguint%32#0' with 'l-load reinterpret_biguint%32#0'
debug: Inserted check_both_uint_n_block@0.ops[307]: 'l-store-copy reinterpret_biguint%38#0 0'
debug: Replaced check_both_uint_n_block@0.ops[312]: 'v-load reinterpret_biguint%38#0' with 'l-load reinterpret_biguint%38#0'
debug: Inserted check_both_uint_n_block@0.ops[371]: 'l-store-copy reinterpret_biguint%46#0 0'
debug: Replaced check_both_uint_n_block@0.ops[376]: 'v-load reinterpret_biguint%46#0' with 'l-load reinterpret_biguint%46#0'
debug: Inserted check_both_uint_n_block@0.ops[429]: 'l-store-copy reinterpret_biguint%52#0 0'
debug: Replaced check_both_uint_n_block@0.ops[434]: 'v-load reinterpret_biguint%52#0' with 'l-load reinterpret_biguint%52#0'
debug: Inserted check_both_uint_n_block@0.ops[485]: 'l-store-copy reinterpret_biguint%60#0 0'
debug: Replaced check_both_uint_n_block@0.ops[490]: 'v-load reinterpret_biguint%60#0' with 'l-load reinterpret_biguint%60#0'
debug: Inserted check_both_uint_n_block@0.ops[535]: 'l-store-copy reinterpret_biguint%66#0 0'
debug: Replaced check_both_uint_n_block@0.ops[540]: 'v-load reinterpret_biguint%66#0' with 'l-load reinterpret_biguint%66#0'
debug: Inserted check_both_uint_n_block@0.ops[611]: 'l-store-copy reinterpret_biguint%74#0 0'
debug: Replaced check_both_uint_n_block@0.ops[616]: 'v-load reinterpret_biguint%74#0' with 'l-load reinterpret_biguint%74#0'
debug: Inserted check_both_uint_n_block@0.ops[673]: 'l-store-copy reinterpret_biguint%80#0 0'
debug: Replaced check_both_uint_n_block@0.ops[678]: 'v-load reinterpret_biguint%80#0' with 'l-load reinterpret_biguint%80#0'
debug: Inserted check_both_uint_n_block@0.ops[34]: 'l-store-copy reinterpret_biguint%6#0 0'
debug: Replaced check_both_uint_n_block@0.ops[40]: 'v-load reinterpret_biguint%6#0' with 'l-load reinterpret_biguint%6#0'
debug: Inserted check_both_uint_n_block@0.ops[89]: 'l-store-copy reinterpret_biguint%12#0 0'
debug: Replaced check_both_uint_n_block@0.ops[95]: 'v-load reinterpret_biguint%12#0' with 'l-load reinterpret_biguint%12#0'
debug: Inserted check_both_uint_n_block@0.ops[166]: 'l-store-copy reinterpret_biguint%20#0 0'
debug: Replaced check_both_uint_n_block@0.ops[172]: 'v-load reinterpret_biguint%20#0' with 'l-load reinterpret_biguint%20#0'
debug: Inserted check_both_uint_n_block@0.ops[221]: 'l-store-copy reinterpret_biguint%26#0 0'
debug: Replaced check_both_uint_n_block@0.ops[227]: 'v-load reinterpret_biguint%26#0' with 'l-load reinterpret_biguint%26#0'
debug: Inserted check_both_uint_n_block@0.ops[278]: 'l-store-copy reinterpret_biguint%34#0 0'
debug: Replaced check_both_uint_n_block@0.ops[284]: 'v-load reinterpret_biguint%34#0' with 'l-load reinterpret_biguint%34#0'
debug: Inserted check_both_uint_n_block@0.ops[325]: 'l-store-copy reinterpret_biguint%40#0 0'
debug: Replaced check_both_uint_n_block@0.ops[331]: 'v-load reinterpret_biguint%40#0' with 'l-load reinterpret_biguint%40#0'
debug: Inserted check_both_uint_n_block@0.ops[394]: 'l-store-copy reinterpret_biguint%48#0 0'
debug: Replaced check_both_uint_n_block@0.ops[400]: 'v-load reinterpret_biguint%48#0' with 'l-load reinterpret_biguint%48#0'
debug: Inserted check_both_uint_n_block@0.ops[449]: 'l-store-copy reinterpret_biguint%54#0 0'
debug: Replaced check_both_uint_n_block@0.ops[455]: 'v-load reinterpret_biguint%54#0' with 'l-load reinterpret_biguint%54#0'
debug: Inserted check_both_uint_n_block@0.ops[506]: 'l-store-copy reinterpret_biguint%62#0 0'
debug: Replaced check_both_uint_n_block@0.ops[512]: 'v-load reinterpret_biguint%62#0' with 'l-load reinterpret_biguint%62#0'
debug: Inserted check_both_uint_n_block@0.ops[561]: 'l-store-copy reinterpret_biguint%68#0 0'
debug: Replaced check_both_uint_n_block@0.ops[567]: 'v-load reinterpret_biguint%68#0' with 'l-load reinterpret_biguint%68#0'
debug: Inserted check_both_uint_n_block@0.ops[638]: 'l-store-copy reinterpret_biguint%76#0 0'
debug: Replaced check_both_uint_n_block@0.ops[644]: 'v-load reinterpret_biguint%76#0' with 'l-load reinterpret_biguint%76#0'
debug: Inserted check_both_uint_n_block@0.ops[701]: 'l-store-copy reinterpret_biguint%82#0 0'
debug: Replaced check_both_uint_n_block@0.ops[707]: 'v-load reinterpret_biguint%82#0' with 'l-load reinterpret_biguint%82#0'
debug: Inserted check_mixed_block@0.ops[1]: 'l-store-copy reinterpret_biguint%0#0 0'
debug: Replaced check_mixed_block@0.ops[3]: 'v-load reinterpret_biguint%0#0' with 'l-load reinterpret_biguint%0#0'
debug: Inserted check_mixed_block@0.ops[6]: 'l-store-copy tmp%0#0 0'
debug: Replaced check_mixed_block@0.ops[8]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted check_mixed_block@0.ops[11]: 'l-store-copy reinterpret_biguint%2#0 0'
debug: Replaced check_mixed_block@0.ops[13]: 'v-load reinterpret_biguint%2#0' with 'l-load reinterpret_biguint%2#0'
debug: Inserted check_mixed_block@0.ops[16]: 'l-store-copy tmp%1#0 0'
debug: Replaced check_mixed_block@0.ops[18]: 'v-load tmp%1#0' with 'l-load tmp%1#0'
debug: Inserted check_mixed_block@0.ops[27]: 'l-store-copy tmp%2#0 0'
debug: Replaced check_mixed_block@0.ops[29]: 'v-load tmp%2#0' with 'l-load tmp%2#0'
debug: Inserted check_mixed_block@0.ops[39]: 'l-store-copy tmp%4#0 0'
debug: Replaced check_mixed_block@0.ops[41]: 'v-load tmp%4#0' with 'l-load tmp%4#0'
debug: Inserted check_mixed_block@0.ops[44]: 'l-store-copy reinterpret_biguint%7#0 0'
debug: Replaced check_mixed_block@0.ops[46]: 'v-load reinterpret_biguint%7#0' with 'l-load reinterpret_biguint%7#0'
debug: Inserted check_mixed_block@0.ops[49]: 'l-store-copy tmp%5#0 0'
debug: Replaced check_mixed_block@0.ops[51]: 'v-load tmp%5#0' with 'l-load tmp%5#0'
debug: Inserted check_mixed_block@0.ops[54]: 'l-store-copy reinterpret_biguint%8#0 0'
debug: Replaced check_mixed_block@0.ops[56]: 'v-load reinterpret_biguint%8#0' with 'l-load reinterpret_biguint%8#0'
debug: Inserted check_mixed_block@0.ops[59]: 'l-store-copy tmp%6#0 0'
debug: Replaced check_mixed_block@0.ops[61]: 'v-load tmp%6#0' with 'l-load tmp%6#0'
debug: Inserted check_mixed_block@0.ops[63]: 'l-store-copy tmp%7#0 0'
debug: Replaced check_mixed_block@0.ops[65]: 'v-load tmp%7#0' with 'l-load tmp%7#0'
debug: Inserted check_mixed_block@0.ops[74]: 'l-store-copy tmp%8#0 0'
debug: Replaced check_mixed_block@0.ops[76]: 'v-load tmp%8#0' with 'l-load tmp%8#0'
debug: Inserted check_mixed_block@0.ops[78]: 'l-store-copy tmp%9#0 0'
debug: Replaced check_mixed_block@0.ops[80]: 'v-load tmp%9#0' with 'l-load tmp%9#0'
debug: Inserted check_mixed_block@0.ops[90]: 'l-store-copy tmp%11#0 0'
debug: Replaced check_mixed_block@0.ops[92]: 'v-load tmp%11#0' with 'l-load tmp%11#0'
debug: Inserted check_mixed_block@0.ops[94]: 'l-store-copy tmp%12#0 0'
debug: Replaced check_mixed_block@0.ops[96]: 'v-load tmp%12#0' with 'l-load tmp%12#0'
debug: Inserted check_mixed_block@0.ops[99]: 'l-store-copy reinterpret_biguint%13#0 0'
debug: Replaced check_mixed_block@0.ops[101]: 'v-load reinterpret_biguint%13#0' with 'l-load reinterpret_biguint%13#0'
debug: Inserted check_mixed_block@0.ops[104]: 'l-store-copy tmp%13#0 0'
debug: Replaced check_mixed_block@0.ops[106]: 'v-load tmp%13#0' with 'l-load tmp%13#0'
debug: Inserted check_mixed_block@0.ops[108]: 'l-store-copy tmp%14#0 0'
debug: Replaced check_mixed_block@0.ops[110]: 'v-load tmp%14#0' with 'l-load tmp%14#0'
debug: Inserted check_mixed_block@0.ops[113]: 'l-store-copy reinterpret_biguint%14#0 0'
debug: Replaced check_mixed_block@0.ops[115]: 'v-load reinterpret_biguint%14#0' with 'l-load reinterpret_biguint%14#0'
debug: Inserted check_mixed_block@0.ops[118]: 'l-store-copy tmp%15#0 0'
debug: Replaced check_mixed_block@0.ops[120]: 'v-load tmp%15#0' with 'l-load tmp%15#0'
debug: Inserted check_mixed_block@0.ops[122]: 'l-store-copy tmp%16#0 0'
debug: Replaced check_mixed_block@0.ops[124]: 'v-load tmp%16#0' with 'l-load tmp%16#0'
debug: Inserted check_mixed_block@0.ops[127]: 'l-store-copy reinterpret_biguint%16#0 0'
debug: Replaced check_mixed_block@0.ops[129]: 'v-load reinterpret_biguint%16#0' with 'l-load reinterpret_biguint%16#0'
debug: Inserted check_mixed_block@0.ops[132]: 'l-store-copy tmp%17#0 0'
debug: Replaced check_mixed_block@0.ops[134]: 'v-load tmp%17#0' with 'l-load tmp%17#0'
debug: Inserted check_mixed_block@0.ops[136]: 'l-store-copy tmp%18#0 0'
debug: Replaced check_mixed_block@0.ops[138]: 'v-load tmp%18#0' with 'l-load tmp%18#0'
debug: Inserted check_mixed_block@0.ops[147]: 'l-store-copy tmp%19#0 0'
debug: Replaced check_mixed_block@0.ops[149]: 'v-load tmp%19#0' with 'l-load tmp%19#0'
debug: Inserted check_mixed_block@0.ops[151]: 'l-store-copy tmp%20#0 0'
debug: Replaced check_mixed_block@0.ops[153]: 'v-load tmp%20#0' with 'l-load tmp%20#0'
debug: Inserted check_mixed_block@0.ops[163]: 'l-store-copy tmp%22#0 0'
debug: Replaced check_mixed_block@0.ops[165]: 'v-load tmp%22#0' with 'l-load tmp%22#0'
debug: Inserted check_mixed_block@0.ops[167]: 'l-store-copy tmp%23#0 0'
debug: Replaced check_mixed_block@0.ops[169]: 'v-load tmp%23#0' with 'l-load tmp%23#0'
debug: Inserted check_mixed_block@0.ops[172]: 'l-store-copy reinterpret_biguint%21#0 0'
debug: Replaced check_mixed_block@0.ops[174]: 'v-load reinterpret_biguint%21#0' with 'l-load reinterpret_biguint%21#0'
debug: Inserted check_mixed_block@0.ops[177]: 'l-store-copy tmp%24#0 0'
debug: Replaced check_mixed_block@0.ops[179]: 'v-load tmp%24#0' with 'l-load tmp%24#0'
debug: Inserted check_mixed_block@0.ops[181]: 'l-store-copy tmp%25#0 0'
debug: Replaced check_mixed_block@0.ops[183]: 'v-load tmp%25#0' with 'l-load tmp%25#0'
debug: Inserted check_mixed_block@0.ops[186]: 'l-store-copy reinterpret_biguint%22#0 0'
debug: Replaced check_mixed_block@0.ops[188]: 'v-load reinterpret_biguint%22#0' with 'l-load reinterpret_biguint%22#0'
debug: Inserted check_mixed_block@0.ops[191]: 'l-store-copy tmp%26#0 0'
debug: Replaced check_mixed_block@0.ops[193]: 'v-load tmp%26#0' with 'l-load tmp%26#0'
debug: Inserted check_mixed_block@0.ops[202]: 'l-store-copy tmp%27#0 0'
debug: Replaced check_mixed_block@0.ops[204]: 'v-load tmp%27#0' with 'l-load tmp%27#0'
debug: Inserted check_mixed_block@0.ops[214]: 'l-store-copy tmp%29#0 0'
debug: Replaced check_mixed_block@0.ops[216]: 'v-load tmp%29#0' with 'l-load tmp%29#0'
debug: Inserted check_mixed_block@0.ops[219]: 'l-store-copy reinterpret_biguint%27#0 0'
debug: Replaced check_mixed_block@0.ops[221]: 'v-load reinterpret_biguint%27#0' with 'l-load reinterpret_biguint%27#0'
debug: Inserted check_mixed_block@0.ops[224]: 'l-store-copy tmp%30#0 0'
debug: Replaced check_mixed_block@0.ops[226]: 'v-load tmp%30#0' with 'l-load tmp%30#0'
debug: Inserted check_mixed_block@0.ops[229]: 'l-store-copy reinterpret_biguint%28#0 0'
debug: Replaced check_mixed_block@0.ops[231]: 'v-load reinterpret_biguint%28#0' with 'l-load reinterpret_biguint%28#0'
debug: Inserted check_mixed_block@0.ops[234]: 'l-store-copy tmp%31#0 0'
debug: Replaced check_mixed_block@0.ops[236]: 'v-load tmp%31#0' with 'l-load tmp%31#0'
debug: Inserted check_mixed_block@0.ops[239]: 'l-store-copy reinterpret_biguint%30#0 0'
debug: Replaced check_mixed_block@0.ops[241]: 'v-load reinterpret_biguint%30#0' with 'l-load reinterpret_biguint%30#0'
debug: Inserted check_mixed_block@0.ops[244]: 'l-store-copy tmp%32#0 0'
debug: Replaced check_mixed_block@0.ops[246]: 'v-load tmp%32#0' with 'l-load tmp%32#0'
debug: Inserted check_mixed_block@0.ops[255]: 'l-store-copy tmp%33#0 0'
debug: Replaced check_mixed_block@0.ops[257]: 'v-load tmp%33#0' with 'l-load tmp%33#0'
debug: Inserted check_mixed_block@0.ops[267]: 'l-store-copy tmp%35#0 0'
debug: Replaced check_mixed_block@0.ops[269]: 'v-load tmp%35#0' with 'l-load tmp%35#0'
debug: Inserted check_mixed_block@0.ops[272]: 'l-store-copy reinterpret_biguint%35#0 0'
debug: Replaced check_mixed_block@0.ops[274]: 'v-load reinterpret_biguint%35#0' with 'l-load reinterpret_biguint%35#0'
debug: Inserted check_mixed_block@0.ops[277]: 'l-store-copy tmp%36#0 0'
debug: Replaced check_mixed_block@0.ops[279]: 'v-load tmp%36#0' with 'l-load tmp%36#0'
debug: Inserted check_mixed_block@0.ops[282]: 'l-store-copy reinterpret_biguint%36#0 0'
debug: Replaced check_mixed_block@0.ops[284]: 'v-load reinterpret_biguint%36#0' with 'l-load reinterpret_biguint%36#0'
debug: Inserted check_mixed_block@0.ops[287]: 'l-store-copy tmp%37#0 0'
debug: Replaced check_mixed_block@0.ops[289]: 'v-load tmp%37#0' with 'l-load tmp%37#0'
debug: Inserted check_mixed_block@0.ops[298]: 'l-store-copy tmp%38#0 0'
debug: Replaced check_mixed_block@0.ops[300]: 'v-load tmp%38#0' with 'l-load tmp%38#0'
debug: Inserted check_mixed_block@0.ops[310]: 'l-store-copy tmp%40#0 0'
debug: Replaced check_mixed_block@0.ops[312]: 'v-load tmp%40#0' with 'l-load tmp%40#0'
debug: Inserted check_mixed_block@0.ops[315]: 'l-store-copy reinterpret_biguint%41#0 0'
debug: Replaced check_mixed_block@0.ops[317]: 'v-load reinterpret_biguint%41#0' with 'l-load reinterpret_biguint%41#0'
debug: Inserted check_mixed_block@0.ops[320]: 'l-store-copy tmp%41#0 0'
debug: Replaced check_mixed_block@0.ops[322]: 'v-load tmp%41#0' with 'l-load tmp%41#0'
debug: Inserted check_mixed_block@0.ops[325]: 'l-store-copy reinterpret_biguint%42#0 0'
debug: Replaced check_mixed_block@0.ops[327]: 'v-load reinterpret_biguint%42#0' with 'l-load reinterpret_biguint%42#0'
debug: Inserted check_mixed_block@0.ops[330]: 'l-store-copy tmp%42#0 0'
debug: Replaced check_mixed_block@0.ops[332]: 'v-load tmp%42#0' with 'l-load tmp%42#0'
debug: Inserted check_mixed_block@0.ops[334]: 'l-store-copy tmp%43#0 0'
debug: Replaced check_mixed_block@0.ops[336]: 'v-load tmp%43#0' with 'l-load tmp%43#0'
debug: Inserted check_mixed_block@0.ops[339]: 'l-store-copy reinterpret_biguint%44#0 0'
debug: Replaced check_mixed_block@0.ops[341]: 'v-load reinterpret_biguint%44#0' with 'l-load reinterpret_biguint%44#0'
debug: Inserted check_mixed_block@0.ops[344]: 'l-store-copy tmp%44#0 0'
debug: Replaced check_mixed_block@0.ops[346]: 'v-load tmp%44#0' with 'l-load tmp%44#0'
debug: Inserted check_mixed_block@0.ops[348]: 'l-store-copy tmp%45#0 0'
debug: Replaced check_mixed_block@0.ops[350]: 'v-load tmp%45#0' with 'l-load tmp%45#0'
debug: Inserted check_mixed_block@0.ops[359]: 'l-store-copy tmp%46#0 0'
debug: Replaced check_mixed_block@0.ops[361]: 'v-load tmp%46#0' with 'l-load tmp%46#0'
debug: Inserted check_mixed_block@0.ops[363]: 'l-store-copy tmp%47#0 0'
debug: Replaced check_mixed_block@0.ops[365]: 'v-load tmp%47#0' with 'l-load tmp%47#0'
debug: Inserted check_mixed_block@0.ops[375]: 'l-store-copy tmp%49#0 0'
debug: Replaced check_mixed_block@0.ops[377]: 'v-load tmp%49#0' with 'l-load tmp%49#0'
debug: Inserted check_mixed_block@0.ops[379]: 'l-store-copy tmp%50#0 0'
debug: Replaced check_mixed_block@0.ops[381]: 'v-load tmp%50#0' with 'l-load tmp%50#0'
debug: Inserted check_mixed_block@0.ops[384]: 'l-store-copy reinterpret_biguint%49#0 0'
debug: Replaced check_mixed_block@0.ops[386]: 'v-load reinterpret_biguint%49#0' with 'l-load reinterpret_biguint%49#0'
debug: Inserted check_mixed_block@0.ops[389]: 'l-store-copy tmp%51#0 0'
debug: Replaced check_mixed_block@0.ops[391]: 'v-load tmp%51#0' with 'l-load tmp%51#0'
debug: Inserted check_mixed_block@0.ops[393]: 'l-store-copy tmp%52#0 0'
debug: Replaced check_mixed_block@0.ops[395]: 'v-load tmp%52#0' with 'l-load tmp%52#0'
debug: Inserted check_mixed_block@0.ops[398]: 'l-store-copy reinterpret_biguint%50#0 0'
debug: Replaced check_mixed_block@0.ops[400]: 'v-load reinterpret_biguint%50#0' with 'l-load reinterpret_biguint%50#0'
debug: Inserted check_mixed_block@0.ops[403]: 'l-store-copy tmp%53#0 0'
debug: Replaced check_mixed_block@0.ops[405]: 'v-load tmp%53#0' with 'l-load tmp%53#0'
debug: Inserted check_mixed_block@0.ops[414]: 'l-store-copy tmp%54#0 0'
debug: Replaced check_mixed_block@0.ops[416]: 'v-load tmp%54#0' with 'l-load tmp%54#0'
debug: Inserted check_mixed_block@0.ops[426]: 'l-store-copy tmp%56#0 0'
debug: Replaced check_mixed_block@0.ops[428]: 'v-load tmp%56#0' with 'l-load tmp%56#0'
debug: Inserted check_mixed_block@0.ops[431]: 'l-store-copy reinterpret_biguint%55#0 0'
debug: Replaced check_mixed_block@0.ops[433]: 'v-load reinterpret_biguint%55#0' with 'l-load reinterpret_biguint%55#0'
debug: Inserted check_mixed_block@0.ops[436]: 'l-store-copy tmp%57#0 0'
debug: Replaced check_mixed_block@0.ops[438]: 'v-load tmp%57#0' with 'l-load tmp%57#0'
debug: Inserted check_mixed_block@0.ops[441]: 'l-store-copy reinterpret_biguint%56#0 0'
debug: Replaced check_mixed_block@0.ops[443]: 'v-load reinterpret_biguint%56#0' with 'l-load reinterpret_biguint%56#0'
debug: Inserted check_mixed_block@0.ops[446]: 'l-store-copy tmp%58#0 0'
debug: Replaced check_mixed_block@0.ops[448]: 'v-load tmp%58#0' with 'l-load tmp%58#0'
debug: Inserted check_mixed_block@0.ops[451]: 'l-store-copy reinterpret_biguint%58#0 0'
debug: Replaced check_mixed_block@0.ops[453]: 'v-load reinterpret_biguint%58#0' with 'l-load reinterpret_biguint%58#0'
debug: Inserted check_mixed_block@0.ops[456]: 'l-store-copy tmp%59#0 0'
debug: Replaced check_mixed_block@0.ops[458]: 'v-load tmp%59#0' with 'l-load tmp%59#0'
debug: Inserted check_mixed_block@0.ops[467]: 'l-store-copy tmp%60#0 0'
debug: Replaced check_mixed_block@0.ops[469]: 'v-load tmp%60#0' with 'l-load tmp%60#0'
debug: Inserted check_mixed_block@0.ops[479]: 'l-store-copy tmp%62#0 0'
debug: Replaced check_mixed_block@0.ops[481]: 'v-load tmp%62#0' with 'l-load tmp%62#0'
debug: Inserted check_mixed_block@0.ops[484]: 'l-store-copy reinterpret_biguint%63#0 0'
debug: Replaced check_mixed_block@0.ops[486]: 'v-load reinterpret_biguint%63#0' with 'l-load reinterpret_biguint%63#0'
debug: Inserted check_mixed_block@0.ops[489]: 'l-store-copy tmp%63#0 0'
debug: Replaced check_mixed_block@0.ops[491]: 'v-load tmp%63#0' with 'l-load tmp%63#0'
debug: Inserted check_mixed_block@0.ops[494]: 'l-store-copy reinterpret_biguint%64#0 0'
debug: Replaced check_mixed_block@0.ops[496]: 'v-load reinterpret_biguint%64#0' with 'l-load reinterpret_biguint%64#0'
debug: Inserted check_mixed_block@0.ops[499]: 'l-store-copy tmp%64#0 0'
debug: Replaced check_mixed_block@0.ops[501]: 'v-load tmp%64#0' with 'l-load tmp%64#0'
debug: Inserted check_mixed_block@0.ops[503]: 'l-store-copy tmp%65#0 0'
debug: Replaced check_mixed_block@0.ops[505]: 'v-load tmp%65#0' with 'l-load tmp%65#0'
debug: Inserted check_mixed_block@0.ops[514]: 'l-store-copy tmp%66#0 0'
debug: Replaced check_mixed_block@0.ops[516]: 'v-load tmp%66#0' with 'l-load tmp%66#0'
debug: Inserted check_mixed_block@0.ops[518]: 'l-store-copy tmp%67#0 0'
debug: Replaced check_mixed_block@0.ops[520]: 'v-load tmp%67#0' with 'l-load tmp%67#0'
debug: Inserted check_mixed_block@0.ops[530]: 'l-store-copy tmp%69#0 0'
debug: Replaced check_mixed_block@0.ops[532]: 'v-load tmp%69#0' with 'l-load tmp%69#0'
debug: Inserted check_mixed_block@0.ops[534]: 'l-store-copy tmp%70#0 0'
debug: Replaced check_mixed_block@0.ops[536]: 'v-load tmp%70#0' with 'l-load tmp%70#0'
debug: Inserted check_mixed_block@0.ops[539]: 'l-store-copy reinterpret_biguint%69#0 0'
debug: Replaced check_mixed_block@0.ops[541]: 'v-load reinterpret_biguint%69#0' with 'l-load reinterpret_biguint%69#0'
debug: Inserted check_mixed_block@0.ops[544]: 'l-store-copy tmp%71#0 0'
debug: Replaced check_mixed_block@0.ops[546]: 'v-load tmp%71#0' with 'l-load tmp%71#0'
debug: Inserted check_mixed_block@0.ops[548]: 'l-store-copy tmp%72#0 0'
debug: Replaced check_mixed_block@0.ops[550]: 'v-load tmp%72#0' with 'l-load tmp%72#0'
debug: Inserted check_mixed_block@0.ops[553]: 'l-store-copy reinterpret_biguint%70#0 0'
debug: Replaced check_mixed_block@0.ops[555]: 'v-load reinterpret_biguint%70#0' with 'l-load reinterpret_biguint%70#0'
debug: Inserted check_mixed_block@0.ops[558]: 'l-store-copy tmp%73#0 0'
debug: Replaced check_mixed_block@0.ops[560]: 'v-load tmp%73#0' with 'l-load tmp%73#0'
debug: Inserted check_mixed_block@0.ops[562]: 'l-store-copy tmp%74#0 0'
debug: Replaced check_mixed_block@0.ops[564]: 'v-load tmp%74#0' with 'l-load tmp%74#0'
debug: Inserted check_mixed_block@0.ops[567]: 'l-store-copy reinterpret_biguint%72#0 0'
debug: Replaced check_mixed_block@0.ops[569]: 'v-load reinterpret_biguint%72#0' with 'l-load reinterpret_biguint%72#0'
debug: Inserted check_mixed_block@0.ops[572]: 'l-store-copy tmp%75#0 0'
debug: Replaced check_mixed_block@0.ops[574]: 'v-load tmp%75#0' with 'l-load tmp%75#0'
debug: Inserted check_mixed_block@0.ops[576]: 'l-store-copy tmp%76#0 0'
debug: Replaced check_mixed_block@0.ops[578]: 'v-load tmp%76#0' with 'l-load tmp%76#0'
debug: Inserted check_mixed_block@0.ops[587]: 'l-store-copy tmp%77#0 0'
debug: Replaced check_mixed_block@0.ops[589]: 'v-load tmp%77#0' with 'l-load tmp%77#0'
debug: Inserted check_mixed_block@0.ops[591]: 'l-store-copy tmp%78#0 0'
debug: Replaced check_mixed_block@0.ops[593]: 'v-load tmp%78#0' with 'l-load tmp%78#0'
debug: Inserted check_mixed_block@0.ops[603]: 'l-store-copy tmp%80#0 0'
debug: Replaced check_mixed_block@0.ops[605]: 'v-load tmp%80#0' with 'l-load tmp%80#0'
debug: Inserted check_mixed_block@0.ops[607]: 'l-store-copy tmp%81#0 0'
debug: Replaced check_mixed_block@0.ops[609]: 'v-load tmp%81#0' with 'l-load tmp%81#0'
debug: Inserted check_mixed_block@0.ops[612]: 'l-store-copy reinterpret_biguint%77#0 0'
debug: Replaced check_mixed_block@0.ops[614]: 'v-load reinterpret_biguint%77#0' with 'l-load reinterpret_biguint%77#0'
debug: Inserted check_mixed_block@0.ops[617]: 'l-store-copy tmp%82#0 0'
debug: Replaced check_mixed_block@0.ops[619]: 'v-load tmp%82#0' with 'l-load tmp%82#0'
debug: Inserted check_mixed_block@0.ops[621]: 'l-store-copy tmp%83#0 0'
debug: Replaced check_mixed_block@0.ops[623]: 'v-load tmp%83#0' with 'l-load tmp%83#0'
debug: Inserted check_mixed_block@0.ops[626]: 'l-store-copy reinterpret_biguint%78#0 0'
debug: Replaced check_mixed_block@0.ops[628]: 'v-load reinterpret_biguint%78#0' with 'l-load reinterpret_biguint%78#0'
debug: Inserted check_mixed_block@0.ops[631]: 'l-store-copy tmp%84#0 0'
debug: Replaced check_mixed_block@0.ops[633]: 'v-load tmp%84#0' with 'l-load tmp%84#0'
debug: Inserted check_mixed_block@0.ops[635]: 'l-store-copy tmp%85#0 0'
debug: Replaced check_mixed_block@0.ops[637]: 'v-load tmp%85#0' with 'l-load tmp%85#0'
debug: Inserted check_mixed_block@0.ops[646]: 'l-store-copy tmp%86#0 0'
debug: Replaced check_mixed_block@0.ops[648]: 'v-load tmp%86#0' with 'l-load tmp%86#0'
debug: Inserted check_mixed_block@0.ops[650]: 'l-store-copy tmp%87#0 0'
debug: Replaced check_mixed_block@0.ops[652]: 'v-load tmp%87#0' with 'l-load tmp%87#0'
debug: Inserted check_mixed_block@0.ops[662]: 'l-store-copy tmp%89#0 0'
debug: Replaced check_mixed_block@0.ops[664]: 'v-load tmp%89#0' with 'l-load tmp%89#0'
debug: Inserted check_mixed_block@0.ops[666]: 'l-store-copy tmp%90#0 0'
debug: Replaced check_mixed_block@0.ops[668]: 'v-load tmp%90#0' with 'l-load tmp%90#0'
debug: Inserted check_mixed_block@0.ops[671]: 'l-store-copy reinterpret_biguint%83#0 0'
debug: Replaced check_mixed_block@0.ops[673]: 'v-load reinterpret_biguint%83#0' with 'l-load reinterpret_biguint%83#0'
debug: Inserted check_mixed_block@0.ops[676]: 'l-store-copy tmp%91#0 0'
debug: Replaced check_mixed_block@0.ops[678]: 'v-load tmp%91#0' with 'l-load tmp%91#0'
debug: Inserted check_mixed_block@0.ops[680]: 'l-store-copy tmp%92#0 0'
debug: Replaced check_mixed_block@0.ops[682]: 'v-load tmp%92#0' with 'l-load tmp%92#0'
debug: Inserted check_mixed_block@0.ops[23]: 'l-store-copy reinterpret_biguint%5#0 0'
debug: Replaced check_mixed_block@0.ops[26]: 'v-load reinterpret_biguint%5#0' with 'l-load reinterpret_biguint%5#0'
debug: Inserted check_mixed_block@0.ops[36]: 'l-store-copy tmp%3#0 0'
debug: Replaced check_mixed_block@0.ops[39]: 'v-load tmp%3#0' with 'l-load tmp%3#0'
debug: Inserted check_mixed_block@0.ops[72]: 'l-store-copy reinterpret_biguint%11#0 0'
debug: Replaced check_mixed_block@0.ops[75]: 'v-load reinterpret_biguint%11#0' with 'l-load reinterpret_biguint%11#0'
debug: Inserted check_mixed_block@0.ops[89]: 'l-store-copy tmp%10#0 0'
debug: Replaced check_mixed_block@0.ops[92]: 'v-load tmp%10#0' with 'l-load tmp%10#0'
debug: Inserted check_mixed_block@0.ops[147]: 'l-store-copy reinterpret_biguint%19#0 0'
debug: Replaced check_mixed_block@0.ops[150]: 'v-load reinterpret_biguint%19#0' with 'l-load reinterpret_biguint%19#0'
debug: Inserted check_mixed_block@0.ops[164]: 'l-store-copy tmp%21#0 0'
debug: Replaced check_mixed_block@0.ops[167]: 'v-load tmp%21#0' with 'l-load tmp%21#0'
debug: Inserted check_mixed_block@0.ops[204]: 'l-store-copy reinterpret_biguint%25#0 0'
debug: Replaced check_mixed_block@0.ops[207]: 'v-load reinterpret_biguint%25#0' with 'l-load reinterpret_biguint%25#0'
debug: Inserted check_mixed_block@0.ops[217]: 'l-store-copy tmp%28#0 0'
debug: Replaced check_mixed_block@0.ops[220]: 'v-load tmp%28#0' with 'l-load tmp%28#0'
debug: Inserted check_mixed_block@0.ops[259]: 'l-store-copy reinterpret_biguint%33#0 0'
debug: Replaced check_mixed_block@0.ops[262]: 'v-load reinterpret_biguint%33#0' with 'l-load reinterpret_biguint%33#0'
debug: Inserted check_mixed_block@0.ops[272]: 'l-store-copy tmp%34#0 0'
debug: Replaced check_mixed_block@0.ops[275]: 'v-load tmp%34#0' with 'l-load tmp%34#0'
debug: Inserted check_mixed_block@0.ops[304]: 'l-store-copy reinterpret_biguint%39#0 0'
debug: Replaced check_mixed_block@0.ops[307]: 'v-load reinterpret_biguint%39#0' with 'l-load reinterpret_biguint%39#0'
debug: Inserted check_mixed_block@0.ops[317]: 'l-store-copy tmp%39#0 0'
debug: Replaced check_mixed_block@0.ops[320]: 'v-load tmp%39#0' with 'l-load tmp%39#0'
debug: Inserted check_mixed_block@0.ops[367]: 'l-store-copy reinterpret_biguint%47#0 0'
debug: Replaced check_mixed_block@0.ops[370]: 'v-load reinterpret_biguint%47#0' with 'l-load reinterpret_biguint%47#0'
debug: Inserted check_mixed_block@0.ops[384]: 'l-store-copy tmp%48#0 0'
debug: Replaced check_mixed_block@0.ops[387]: 'v-load tmp%48#0' with 'l-load tmp%48#0'
debug: Inserted check_mixed_block@0.ops[424]: 'l-store-copy reinterpret_biguint%53#0 0'
debug: Replaced check_mixed_block@0.ops[427]: 'v-load reinterpret_biguint%53#0' with 'l-load reinterpret_biguint%53#0'
debug: Inserted check_mixed_block@0.ops[437]: 'l-store-copy tmp%55#0 0'
debug: Replaced check_mixed_block@0.ops[440]: 'v-load tmp%55#0' with 'l-load tmp%55#0'
debug: Inserted check_mixed_block@0.ops[479]: 'l-store-copy reinterpret_biguint%61#0 0'
debug: Replaced check_mixed_block@0.ops[482]: 'v-load reinterpret_biguint%61#0' with 'l-load reinterpret_biguint%61#0'
debug: Inserted check_mixed_block@0.ops[492]: 'l-store-copy tmp%61#0 0'
debug: Replaced check_mixed_block@0.ops[495]: 'v-load tmp%61#0' with 'l-load tmp%61#0'
debug: Inserted check_mixed_block@0.ops[528]: 'l-store-copy reinterpret_biguint%67#0 0'
debug: Replaced check_mixed_block@0.ops[531]: 'v-load reinterpret_biguint%67#0' with 'l-load reinterpret_biguint%67#0'
debug: Inserted check_mixed_block@0.ops[545]: 'l-store-copy tmp%68#0 0'
debug: Replaced check_mixed_block@0.ops[548]: 'v-load tmp%68#0' with 'l-load tmp%68#0'
debug: Inserted check_mixed_block@0.ops[603]: 'l-store-copy reinterpret_biguint%75#0 0'
debug: Replaced check_mixed_block@0.ops[606]: 'v-load reinterpret_biguint%75#0' with 'l-load reinterpret_biguint%75#0'
debug: Inserted check_mixed_block@0.ops[620]: 'l-store-copy tmp%79#0 0'
debug: Replaced check_mixed_block@0.ops[623]: 'v-load tmp%79#0' with 'l-load tmp%79#0'
debug: Inserted check_mixed_block@0.ops[664]: 'l-store-copy reinterpret_biguint%81#0 0'
debug: Replaced check_mixed_block@0.ops[667]: 'v-load reinterpret_biguint%81#0' with 'l-load reinterpret_biguint%81#0'
debug: Inserted check_mixed_block@0.ops[681]: 'l-store-copy tmp%88#0 0'
debug: Replaced check_mixed_block@0.ops[684]: 'v-load tmp%88#0' with 'l-load tmp%88#0'
debug: Inserted check_mixed_block@0.ops[21]: 'l-store-copy reinterpret_biguint%4#0 0'
debug: Replaced check_mixed_block@0.ops[26]: 'v-load reinterpret_biguint%4#0' with 'l-load reinterpret_biguint%4#0'
debug: Inserted check_mixed_block@0.ops[71]: 'l-store-copy reinterpret_biguint%10#0 0'
debug: Replaced check_mixed_block@0.ops[76]: 'v-load reinterpret_biguint%10#0' with 'l-load reinterpret_biguint%10#0'
debug: Inserted check_mixed_block@0.ops[147]: 'l-store-copy reinterpret_biguint%18#0 0'
debug: Replaced check_mixed_block@0.ops[152]: 'v-load reinterpret_biguint%18#0' with 'l-load reinterpret_biguint%18#0'
debug: Inserted check_mixed_block@0.ops[205]: 'l-store-copy reinterpret_biguint%24#0 0'
debug: Replaced check_mixed_block@0.ops[210]: 'v-load reinterpret_biguint%24#0' with 'l-load reinterpret_biguint%24#0'
debug: Inserted check_mixed_block@0.ops[261]: 'l-store-copy reinterpret_biguint%32#0 0'
debug: Replaced check_mixed_block@0.ops[266]: 'v-load reinterpret_biguint%32#0' with 'l-load reinterpret_biguint%32#0'
debug: Inserted check_mixed_block@0.ops[307]: 'l-store-copy reinterpret_biguint%38#0 0'
debug: Replaced check_mixed_block@0.ops[312]: 'v-load reinterpret_biguint%38#0' with 'l-load reinterpret_biguint%38#0'
debug: Inserted check_mixed_block@0.ops[371]: 'l-store-copy reinterpret_biguint%46#0 0'
debug: Replaced check_mixed_block@0.ops[376]: 'v-load reinterpret_biguint%46#0' with 'l-load reinterpret_biguint%46#0'
debug: Inserted check_mixed_block@0.ops[429]: 'l-store-copy reinterpret_biguint%52#0 0'
debug: Replaced check_mixed_block@0.ops[434]: 'v-load reinterpret_biguint%52#0' with 'l-load reinterpret_biguint%52#0'
debug: Inserted check_mixed_block@0.ops[485]: 'l-store-copy reinterpret_biguint%60#0 0'
debug: Replaced check_mixed_block@0.ops[490]: 'v-load reinterpret_biguint%60#0' with 'l-load reinterpret_biguint%60#0'
debug: Inserted check_mixed_block@0.ops[535]: 'l-store-copy reinterpret_biguint%66#0 0'
debug: Replaced check_mixed_block@0.ops[540]: 'v-load reinterpret_biguint%66#0' with 'l-load reinterpret_biguint%66#0'
debug: Inserted check_mixed_block@0.ops[611]: 'l-store-copy reinterpret_biguint%74#0 0'
debug: Replaced check_mixed_block@0.ops[616]: 'v-load reinterpret_biguint%74#0' with 'l-load reinterpret_biguint%74#0'
debug: Inserted check_mixed_block@0.ops[673]: 'l-store-copy reinterpret_biguint%80#0 0'
debug: Replaced check_mixed_block@0.ops[678]: 'v-load reinterpret_biguint%80#0' with 'l-load reinterpret_biguint%80#0'
debug: Inserted check_mixed_block@0.ops[34]: 'l-store-copy reinterpret_biguint%6#0 0'
debug: Replaced check_mixed_block@0.ops[40]: 'v-load reinterpret_biguint%6#0' with 'l-load reinterpret_biguint%6#0'
debug: Inserted check_mixed_block@0.ops[89]: 'l-store-copy reinterpret_biguint%12#0 0'
debug: Replaced check_mixed_block@0.ops[95]: 'v-load reinterpret_biguint%12#0' with 'l-load reinterpret_biguint%12#0'
debug: Inserted check_mixed_block@0.ops[166]: 'l-store-copy reinterpret_biguint%20#0 0'
debug: Replaced check_mixed_block@0.ops[172]: 'v-load reinterpret_biguint%20#0' with 'l-load reinterpret_biguint%20#0'
debug: Inserted check_mixed_block@0.ops[221]: 'l-store-copy reinterpret_biguint%26#0 0'
debug: Replaced check_mixed_block@0.ops[227]: 'v-load reinterpret_biguint%26#0' with 'l-load reinterpret_biguint%26#0'
debug: Inserted check_mixed_block@0.ops[278]: 'l-store-copy reinterpret_biguint%34#0 0'
debug: Replaced check_mixed_block@0.ops[284]: 'v-load reinterpret_biguint%34#0' with 'l-load reinterpret_biguint%34#0'
debug: Inserted check_mixed_block@0.ops[325]: 'l-store-copy reinterpret_biguint%40#0 0'
debug: Replaced check_mixed_block@0.ops[331]: 'v-load reinterpret_biguint%40#0' with 'l-load reinterpret_biguint%40#0'
debug: Inserted check_mixed_block@0.ops[394]: 'l-store-copy reinterpret_biguint%48#0 0'
debug: Replaced check_mixed_block@0.ops[400]: 'v-load reinterpret_biguint%48#0' with 'l-load reinterpret_biguint%48#0'
debug: Inserted check_mixed_block@0.ops[449]: 'l-store-copy reinterpret_biguint%54#0 0'
debug: Replaced check_mixed_block@0.ops[455]: 'v-load reinterpret_biguint%54#0' with 'l-load reinterpret_biguint%54#0'
debug: Inserted check_mixed_block@0.ops[506]: 'l-store-copy reinterpret_biguint%62#0 0'
debug: Replaced check_mixed_block@0.ops[512]: 'v-load reinterpret_biguint%62#0' with 'l-load reinterpret_biguint%62#0'
debug: Inserted check_mixed_block@0.ops[561]: 'l-store-copy reinterpret_biguint%68#0 0'
debug: Replaced check_mixed_block@0.ops[567]: 'v-load reinterpret_biguint%68#0' with 'l-load reinterpret_biguint%68#0'
debug: Inserted check_mixed_block@0.ops[638]: 'l-store-copy reinterpret_biguint%76#0 0'
debug: Replaced check_mixed_block@0.ops[644]: 'v-load reinterpret_biguint%76#0' with 'l-load reinterpret_biguint%76#0'
debug: Inserted check_mixed_block@0.ops[701]: 'l-store-copy reinterpret_biguint%82#0 0'
debug: Replaced check_mixed_block@0.ops[707]: 'v-load reinterpret_biguint%82#0' with 'l-load reinterpret_biguint%82#0'
debug: Inserted check_both_big_uint_n_block@0.ops[1]: 'l-store-copy reinterpret_biguint%0#0 0'
debug: Replaced check_both_big_uint_n_block@0.ops[3]: 'v-load reinterpret_biguint%0#0' with 'l-load reinterpret_biguint%0#0'
debug: Inserted check_both_big_uint_n_block@0.ops[6]: 'l-store-copy tmp%0#0 0'
debug: Replaced check_both_big_uint_n_block@0.ops[8]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted check_both_big_uint_n_block@0.ops[11]: 'l-store-copy reinterpret_biguint%2#0 0'
debug: Replaced check_both_big_uint_n_block@0.ops[13]: 'v-load reinterpret_biguint%2#0' with 'l-load reinterpret_biguint%2#0'
debug: Inserted check_both_big_uint_n_block@0.ops[16]: 'l-store-copy tmp%1#0 0'
debug: Replaced check_both_big_uint_n_block@0.ops[18]: 'v-load tmp%1#0' with 'l-load tmp%1#0'
debug: Inserted check_both_big_uint_n_block@0.ops[27]: 'l-store-copy tmp%2#0 0'
debug: Replaced check_both_big_uint_n_block@0.ops[29]: 'v-load tmp%2#0' with 'l-load tmp%2#0'
debug: Inserted check_both_big_uint_n_block@0.ops[39]: 'l-store-copy tmp%4#0 0'
debug: Replaced check_both_big_uint_n_block@0.ops[41]: 'v-load tmp%4#0' with 'l-load tmp%4#0'
debug: Inserted check_both_big_uint_n_block@0.ops[44]: 'l-store-copy reinterpret_biguint%7#0 0'
debug: Replaced check_both_big_uint_n_block@0.ops[46]: 'v-load reinterpret_biguint%7#0' with 'l-load reinterpret_biguint%7#0'
debug: Inserted check_both_big_uint_n_block@0.ops[49]: 'l-store-copy tmp%5#0 0'
debug: Replaced check_both_big_uint_n_block@0.ops[51]: 'v-load tmp%5#0' with 'l-load tmp%5#0'
debug: Inserted check_both_big_uint_n_block@0.ops[54]: 'l-store-copy reinterpret_biguint%8#0 0'
debug: Replaced check_both_big_uint_n_block@0.ops[56]: 'v-load reinterpret_biguint%8#0' with 'l-load reinterpret_biguint%8#0'
debug: Inserted check_both_big_uint_n_block@0.ops[59]: 'l-store-copy tmp%6#0 0'
debug: Replaced check_both_big_uint_n_block@0.ops[61]: 'v-load tmp%6#0' with 'l-load tmp%6#0'
debug: Inserted check_both_big_uint_n_block@0.ops[63]: 'l-store-copy tmp%7#0 0'
debug: Replaced check_both_big_uint_n_block@0.ops[65]: 'v-load tmp%7#0' with 'l-load tmp%7#0'
debug: Inserted check_both_big_uint_n_block@0.ops[74]: 'l-store-copy tmp%8#0 0'
debug: Replaced check_both_big_uint_n_block@0.ops[76]: 'v-load tmp%8#0' with 'l-load tmp%8#0'
debug: Inserted check_both_big_uint_n_block@0.ops[78]: 'l-store-copy tmp%9#0 0'
debug: Replaced check_both_big_uint_n_block@0.ops[80]: 'v-load tmp%9#0' with 'l-load tmp%9#0'
debug: Inserted check_both_big_uint_n_block@0.ops[90]: 'l-store-copy tmp%11#0 0'
debug: Replaced check_both_big_uint_n_block@0.ops[92]: 'v-load tmp%11#0' with 'l-load tmp%11#0'
debug: Inserted check_both_big_uint_n_block@0.ops[94]: 'l-store-copy tmp%12#0 0'
debug: Replaced check_both_big_uint_n_block@0.ops[96]: 'v-load tmp%12#0' with 'l-load tmp%12#0'
debug: Inserted check_both_big_uint_n_block@0.ops[99]: 'l-store-copy reinterpret_biguint%13#0 0'
debug: Replaced check_both_big_uint_n_block@0.ops[101]: 'v-load reinterpret_biguint%13#0' with 'l-load reinterpret_biguint%13#0'
debug: Inserted check_both_big_uint_n_block@0.ops[104]: 'l-store-copy tmp%13#0 0'
debug: Replaced check_both_big_uint_n_block@0.ops[106]: 'v-load tmp%13#0' with 'l-load tmp%13#0'
debug: Inserted check_both_big_uint_n_block@0.ops[108]: 'l-store-copy tmp%14#0 0'
debug: Replaced check_both_big_uint_n_block@0.ops[110]: 'v-load tmp%14#0' with 'l-load tmp%14#0'
debug: Inserted check_both_big_uint_n_block@0.ops[113]: 'l-store-copy reinterpret_biguint%14#0 0'
debug: Replaced check_both_big_uint_n_block@0.ops[115]: 'v-load reinterpret_biguint%14#0' with 'l-load reinterpret_biguint%14#0'
debug: Inserted check_both_big_uint_n_block@0.ops[118]: 'l-store-copy tmp%15#0 0'
debug: Replaced check_both_big_uint_n_block@0.ops[120]: 'v-load tmp%15#0' with 'l-load tmp%15#0'
debug: Inserted check_both_big_uint_n_block@0.ops[122]: 'l-store-copy tmp%16#0 0'
debug: Replaced check_both_big_uint_n_block@0.ops[124]: 'v-load tmp%16#0' with 'l-load tmp%16#0'
debug: Inserted check_both_big_uint_n_block@0.ops[127]: 'l-store-copy reinterpret_biguint%16#0 0'
debug: Replaced check_both_big_uint_n_block@0.ops[129]: 'v-load reinterpret_biguint%16#0' with 'l-load reinterpret_biguint%16#0'
debug: Inserted check_both_big_uint_n_block@0.ops[132]: 'l-store-copy tmp%17#0 0'
debug: Replaced check_both_big_uint_n_block@0.ops[134]: 'v-load tmp%17#0' with 'l-load tmp%17#0'
debug: Inserted check_both_big_uint_n_block@0.ops[136]: 'l-store-copy tmp%18#0 0'
debug: Replaced check_both_big_uint_n_block@0.ops[138]: 'v-load tmp%18#0' with 'l-load tmp%18#0'
debug: Inserted check_both_big_uint_n_block@0.ops[147]: 'l-store-copy tmp%19#0 0'
debug: Replaced check_both_big_uint_n_block@0.ops[149]: 'v-load tmp%19#0' with 'l-load tmp%19#0'
debug: Inserted check_both_big_uint_n_block@0.ops[151]: 'l-store-copy tmp%20#0 0'
debug: Replaced check_both_big_uint_n_block@0.ops[153]: 'v-load tmp%20#0' with 'l-load tmp%20#0'
debug: Inserted check_both_big_uint_n_block@0.ops[163]: 'l-store-copy tmp%22#0 0'
debug: Replaced check_both_big_uint_n_block@0.ops[165]: 'v-load tmp%22#0' with 'l-load tmp%22#0'
debug: Inserted check_both_big_uint_n_block@0.ops[167]: 'l-store-copy tmp%23#0 0'
debug: Replaced check_both_big_uint_n_block@0.ops[169]: 'v-load tmp%23#0' with 'l-load tmp%23#0'
debug: Inserted check_both_big_uint_n_block@0.ops[172]: 'l-store-copy reinterpret_biguint%21#0 0'
debug: Replaced check_both_big_uint_n_block@0.ops[174]: 'v-load reinterpret_biguint%21#0' with 'l-load reinterpret_biguint%21#0'
debug: Inserted check_both_big_uint_n_block@0.ops[177]: 'l-store-copy tmp%24#0 0'
debug: Replaced check_both_big_uint_n_block@0.ops[179]: 'v-load tmp%24#0' with 'l-load tmp%24#0'
debug: Inserted check_both_big_uint_n_block@0.ops[181]: 'l-store-copy tmp%25#0 0'
debug: Replaced check_both_big_uint_n_block@0.ops[183]: 'v-load tmp%25#0' with 'l-load tmp%25#0'
debug: Inserted check_both_big_uint_n_block@0.ops[186]: 'l-store-copy reinterpret_biguint%22#0 0'
debug: Replaced check_both_big_uint_n_block@0.ops[188]: 'v-load reinterpret_biguint%22#0' with 'l-load reinterpret_biguint%22#0'
debug: Inserted check_both_big_uint_n_block@0.ops[191]: 'l-store-copy tmp%26#0 0'
debug: Replaced check_both_big_uint_n_block@0.ops[193]: 'v-load tmp%26#0' with 'l-load tmp%26#0'
debug: Inserted check_both_big_uint_n_block@0.ops[202]: 'l-store-copy tmp%27#0 0'
debug: Replaced check_both_big_uint_n_block@0.ops[204]: 'v-load tmp%27#0' with 'l-load tmp%27#0'
debug: Inserted check_both_big_uint_n_block@0.ops[214]: 'l-store-copy tmp%29#0 0'
debug: Replaced check_both_big_uint_n_block@0.ops[216]: 'v-load tmp%29#0' with 'l-load tmp%29#0'
debug: Inserted check_both_big_uint_n_block@0.ops[219]: 'l-store-copy reinterpret_biguint%27#0 0'
debug: Replaced check_both_big_uint_n_block@0.ops[221]: 'v-load reinterpret_biguint%27#0' with 'l-load reinterpret_biguint%27#0'
debug: Inserted check_both_big_uint_n_block@0.ops[224]: 'l-store-copy tmp%30#0 0'
debug: Replaced check_both_big_uint_n_block@0.ops[226]: 'v-load tmp%30#0' with 'l-load tmp%30#0'
debug: Inserted check_both_big_uint_n_block@0.ops[229]: 'l-store-copy reinterpret_biguint%28#0 0'
debug: Replaced check_both_big_uint_n_block@0.ops[231]: 'v-load reinterpret_biguint%28#0' with 'l-load reinterpret_biguint%28#0'
debug: Inserted check_both_big_uint_n_block@0.ops[234]: 'l-store-copy tmp%31#0 0'
debug: Replaced check_both_big_uint_n_block@0.ops[236]: 'v-load tmp%31#0' with 'l-load tmp%31#0'
debug: Inserted check_both_big_uint_n_block@0.ops[239]: 'l-store-copy reinterpret_biguint%30#0 0'
debug: Replaced check_both_big_uint_n_block@0.ops[241]: 'v-load reinterpret_biguint%30#0' with 'l-load reinterpret_biguint%30#0'
debug: Inserted check_both_big_uint_n_block@0.ops[244]: 'l-store-copy tmp%32#0 0'
debug: Replaced check_both_big_uint_n_block@0.ops[246]: 'v-load tmp%32#0' with 'l-load tmp%32#0'
debug: Inserted check_both_big_uint_n_block@0.ops[255]: 'l-store-copy tmp%33#0 0'
debug: Replaced check_both_big_uint_n_block@0.ops[257]: 'v-load tmp%33#0' with 'l-load tmp%33#0'
debug: Inserted check_both_big_uint_n_block@0.ops[267]: 'l-store-copy tmp%35#0 0'
debug: Replaced check_both_big_uint_n_block@0.ops[269]: 'v-load tmp%35#0' with 'l-load tmp%35#0'
debug: Inserted check_both_big_uint_n_block@0.ops[272]: 'l-store-copy reinterpret_biguint%35#0 0'
debug: Replaced check_both_big_uint_n_block@0.ops[274]: 'v-load reinterpret_biguint%35#0' with 'l-load reinterpret_biguint%35#0'
debug: Inserted check_both_big_uint_n_block@0.ops[277]: 'l-store-copy tmp%36#0 0'
debug: Replaced check_both_big_uint_n_block@0.ops[279]: 'v-load tmp%36#0' with 'l-load tmp%36#0'
debug: Inserted check_both_big_uint_n_block@0.ops[282]: 'l-store-copy reinterpret_biguint%36#0 0'
debug: Replaced check_both_big_uint_n_block@0.ops[284]: 'v-load reinterpret_biguint%36#0' with 'l-load reinterpret_biguint%36#0'
debug: Inserted check_both_big_uint_n_block@0.ops[287]: 'l-store-copy tmp%37#0 0'
debug: Replaced check_both_big_uint_n_block@0.ops[289]: 'v-load tmp%37#0' with 'l-load tmp%37#0'
debug: Inserted check_both_big_uint_n_block@0.ops[298]: 'l-store-copy tmp%38#0 0'
debug: Replaced check_both_big_uint_n_block@0.ops[300]: 'v-load tmp%38#0' with 'l-load tmp%38#0'
debug: Inserted check_both_big_uint_n_block@0.ops[310]: 'l-store-copy tmp%40#0 0'
debug: Replaced check_both_big_uint_n_block@0.ops[312]: 'v-load tmp%40#0' with 'l-load tmp%40#0'
debug: Inserted check_both_big_uint_n_block@0.ops[315]: 'l-store-copy reinterpret_biguint%41#0 0'
debug: Replaced check_both_big_uint_n_block@0.ops[317]: 'v-load reinterpret_biguint%41#0' with 'l-load reinterpret_biguint%41#0'
debug: Inserted check_both_big_uint_n_block@0.ops[320]: 'l-store-copy tmp%41#0 0'
debug: Replaced check_both_big_uint_n_block@0.ops[322]: 'v-load tmp%41#0' with 'l-load tmp%41#0'
debug: Inserted check_both_big_uint_n_block@0.ops[325]: 'l-store-copy reinterpret_biguint%42#0 0'
debug: Replaced check_both_big_uint_n_block@0.ops[327]: 'v-load reinterpret_biguint%42#0' with 'l-load reinterpret_biguint%42#0'
debug: Inserted check_both_big_uint_n_block@0.ops[330]: 'l-store-copy tmp%42#0 0'
debug: Replaced check_both_big_uint_n_block@0.ops[332]: 'v-load tmp%42#0' with 'l-load tmp%42#0'
debug: Inserted check_both_big_uint_n_block@0.ops[334]: 'l-store-copy tmp%43#0 0'
debug: Replaced check_both_big_uint_n_block@0.ops[336]: 'v-load tmp%43#0' with 'l-load tmp%43#0'
debug: Inserted check_both_big_uint_n_block@0.ops[339]: 'l-store-copy reinterpret_biguint%44#0 0'
debug: Replaced check_both_big_uint_n_block@0.ops[341]: 'v-load reinterpret_biguint%44#0' with 'l-load reinterpret_biguint%44#0'
debug: Inserted check_both_big_uint_n_block@0.ops[344]: 'l-store-copy tmp%44#0 0'
debug: Replaced check_both_big_uint_n_block@0.ops[346]: 'v-load tmp%44#0' with 'l-load tmp%44#0'
debug: Inserted check_both_big_uint_n_block@0.ops[348]: 'l-store-copy tmp%45#0 0'
debug: Replaced check_both_big_uint_n_block@0.ops[350]: 'v-load tmp%45#0' with 'l-load tmp%45#0'
debug: Inserted check_both_big_uint_n_block@0.ops[359]: 'l-store-copy tmp%46#0 0'
debug: Replaced check_both_big_uint_n_block@0.ops[361]: 'v-load tmp%46#0' with 'l-load tmp%46#0'
debug: Inserted check_both_big_uint_n_block@0.ops[363]: 'l-store-copy tmp%47#0 0'
debug: Replaced check_both_big_uint_n_block@0.ops[365]: 'v-load tmp%47#0' with 'l-load tmp%47#0'
debug: Inserted check_both_big_uint_n_block@0.ops[375]: 'l-store-copy tmp%49#0 0'
debug: Replaced check_both_big_uint_n_block@0.ops[377]: 'v-load tmp%49#0' with 'l-load tmp%49#0'
debug: Inserted check_both_big_uint_n_block@0.ops[379]: 'l-store-copy tmp%50#0 0'
debug: Replaced check_both_big_uint_n_block@0.ops[381]: 'v-load tmp%50#0' with 'l-load tmp%50#0'
debug: Inserted check_both_big_uint_n_block@0.ops[384]: 'l-store-copy reinterpret_biguint%49#0 0'
debug: Replaced check_both_big_uint_n_block@0.ops[386]: 'v-load reinterpret_biguint%49#0' with 'l-load reinterpret_biguint%49#0'
debug: Inserted check_both_big_uint_n_block@0.ops[389]: 'l-store-copy tmp%51#0 0'
debug: Replaced check_both_big_uint_n_block@0.ops[391]: 'v-load tmp%51#0' with 'l-load tmp%51#0'
debug: Inserted check_both_big_uint_n_block@0.ops[393]: 'l-store-copy tmp%52#0 0'
debug: Replaced check_both_big_uint_n_block@0.ops[395]: 'v-load tmp%52#0' with 'l-load tmp%52#0'
debug: Inserted check_both_big_uint_n_block@0.ops[398]: 'l-store-copy reinterpret_biguint%50#0 0'
debug: Replaced check_both_big_uint_n_block@0.ops[400]: 'v-load reinterpret_biguint%50#0' with 'l-load reinterpret_biguint%50#0'
debug: Inserted check_both_big_uint_n_block@0.ops[403]: 'l-store-copy tmp%53#0 0'
debug: Replaced check_both_big_uint_n_block@0.ops[405]: 'v-load tmp%53#0' with 'l-load tmp%53#0'
debug: Inserted check_both_big_uint_n_block@0.ops[414]: 'l-store-copy tmp%54#0 0'
debug: Replaced check_both_big_uint_n_block@0.ops[416]: 'v-load tmp%54#0' with 'l-load tmp%54#0'
debug: Inserted check_both_big_uint_n_block@0.ops[426]: 'l-store-copy tmp%56#0 0'
debug: Replaced check_both_big_uint_n_block@0.ops[428]: 'v-load tmp%56#0' with 'l-load tmp%56#0'
debug: Inserted check_both_big_uint_n_block@0.ops[431]: 'l-store-copy reinterpret_biguint%55#0 0'
debug: Replaced check_both_big_uint_n_block@0.ops[433]: 'v-load reinterpret_biguint%55#0' with 'l-load reinterpret_biguint%55#0'
debug: Inserted check_both_big_uint_n_block@0.ops[436]: 'l-store-copy tmp%57#0 0'
debug: Replaced check_both_big_uint_n_block@0.ops[438]: 'v-load tmp%57#0' with 'l-load tmp%57#0'
debug: Inserted check_both_big_uint_n_block@0.ops[441]: 'l-store-copy reinterpret_biguint%56#0 0'
debug: Replaced check_both_big_uint_n_block@0.ops[443]: 'v-load reinterpret_biguint%56#0' with 'l-load reinterpret_biguint%56#0'
debug: Inserted check_both_big_uint_n_block@0.ops[446]: 'l-store-copy tmp%58#0 0'
debug: Replaced check_both_big_uint_n_block@0.ops[448]: 'v-load tmp%58#0' with 'l-load tmp%58#0'
debug: Inserted check_both_big_uint_n_block@0.ops[451]: 'l-store-copy reinterpret_biguint%58#0 0'
debug: Replaced check_both_big_uint_n_block@0.ops[453]: 'v-load reinterpret_biguint%58#0' with 'l-load reinterpret_biguint%58#0'
debug: Inserted check_both_big_uint_n_block@0.ops[456]: 'l-store-copy tmp%59#0 0'
debug: Replaced check_both_big_uint_n_block@0.ops[458]: 'v-load tmp%59#0' with 'l-load tmp%59#0'
debug: Inserted check_both_big_uint_n_block@0.ops[467]: 'l-store-copy tmp%60#0 0'
debug: Replaced check_both_big_uint_n_block@0.ops[469]: 'v-load tmp%60#0' with 'l-load tmp%60#0'
debug: Inserted check_both_big_uint_n_block@0.ops[479]: 'l-store-copy tmp%62#0 0'
debug: Replaced check_both_big_uint_n_block@0.ops[481]: 'v-load tmp%62#0' with 'l-load tmp%62#0'
debug: Inserted check_both_big_uint_n_block@0.ops[484]: 'l-store-copy reinterpret_biguint%63#0 0'
debug: Replaced check_both_big_uint_n_block@0.ops[486]: 'v-load reinterpret_biguint%63#0' with 'l-load reinterpret_biguint%63#0'
debug: Inserted check_both_big_uint_n_block@0.ops[489]: 'l-store-copy tmp%63#0 0'
debug: Replaced check_both_big_uint_n_block@0.ops[491]: 'v-load tmp%63#0' with 'l-load tmp%63#0'
debug: Inserted check_both_big_uint_n_block@0.ops[494]: 'l-store-copy reinterpret_biguint%64#0 0'
debug: Replaced check_both_big_uint_n_block@0.ops[496]: 'v-load reinterpret_biguint%64#0' with 'l-load reinterpret_biguint%64#0'
debug: Inserted check_both_big_uint_n_block@0.ops[499]: 'l-store-copy tmp%64#0 0'
debug: Replaced check_both_big_uint_n_block@0.ops[501]: 'v-load tmp%64#0' with 'l-load tmp%64#0'
debug: Inserted check_both_big_uint_n_block@0.ops[503]: 'l-store-copy tmp%65#0 0'
debug: Replaced check_both_big_uint_n_block@0.ops[505]: 'v-load tmp%65#0' with 'l-load tmp%65#0'
debug: Inserted check_both_big_uint_n_block@0.ops[514]: 'l-store-copy tmp%66#0 0'
debug: Replaced check_both_big_uint_n_block@0.ops[516]: 'v-load tmp%66#0' with 'l-load tmp%66#0'
debug: Inserted check_both_big_uint_n_block@0.ops[518]: 'l-store-copy tmp%67#0 0'
debug: Replaced check_both_big_uint_n_block@0.ops[520]: 'v-load tmp%67#0' with 'l-load tmp%67#0'
debug: Inserted check_both_big_uint_n_block@0.ops[530]: 'l-store-copy tmp%69#0 0'
debug: Replaced check_both_big_uint_n_block@0.ops[532]: 'v-load tmp%69#0' with 'l-load tmp%69#0'
debug: Inserted check_both_big_uint_n_block@0.ops[534]: 'l-store-copy tmp%70#0 0'
debug: Replaced check_both_big_uint_n_block@0.ops[536]: 'v-load tmp%70#0' with 'l-load tmp%70#0'
debug: Inserted check_both_big_uint_n_block@0.ops[539]: 'l-store-copy reinterpret_biguint%69#0 0'
debug: Replaced check_both_big_uint_n_block@0.ops[541]: 'v-load reinterpret_biguint%69#0' with 'l-load reinterpret_biguint%69#0'
debug: Inserted check_both_big_uint_n_block@0.ops[544]: 'l-store-copy tmp%71#0 0'
debug: Replaced check_both_big_uint_n_block@0.ops[546]: 'v-load tmp%71#0' with 'l-load tmp%71#0'
debug: Inserted check_both_big_uint_n_block@0.ops[548]: 'l-store-copy tmp%72#0 0'
debug: Replaced check_both_big_uint_n_block@0.ops[550]: 'v-load tmp%72#0' with 'l-load tmp%72#0'
debug: Inserted check_both_big_uint_n_block@0.ops[553]: 'l-store-copy reinterpret_biguint%70#0 0'
debug: Replaced check_both_big_uint_n_block@0.ops[555]: 'v-load reinterpret_biguint%70#0' with 'l-load reinterpret_biguint%70#0'
debug: Inserted check_both_big_uint_n_block@0.ops[558]: 'l-store-copy tmp%73#0 0'
debug: Replaced check_both_big_uint_n_block@0.ops[560]: 'v-load tmp%73#0' with 'l-load tmp%73#0'
debug: Inserted check_both_big_uint_n_block@0.ops[562]: 'l-store-copy tmp%74#0 0'
debug: Replaced check_both_big_uint_n_block@0.ops[564]: 'v-load tmp%74#0' with 'l-load tmp%74#0'
debug: Inserted check_both_big_uint_n_block@0.ops[567]: 'l-store-copy reinterpret_biguint%72#0 0'
debug: Replaced check_both_big_uint_n_block@0.ops[569]: 'v-load reinterpret_biguint%72#0' with 'l-load reinterpret_biguint%72#0'
debug: Inserted check_both_big_uint_n_block@0.ops[572]: 'l-store-copy tmp%75#0 0'
debug: Replaced check_both_big_uint_n_block@0.ops[574]: 'v-load tmp%75#0' with 'l-load tmp%75#0'
debug: Inserted check_both_big_uint_n_block@0.ops[576]: 'l-store-copy tmp%76#0 0'
debug: Replaced check_both_big_uint_n_block@0.ops[578]: 'v-load tmp%76#0' with 'l-load tmp%76#0'
debug: Inserted check_both_big_uint_n_block@0.ops[587]: 'l-store-copy tmp%77#0 0'
debug: Replaced check_both_big_uint_n_block@0.ops[589]: 'v-load tmp%77#0' with 'l-load tmp%77#0'
debug: Inserted check_both_big_uint_n_block@0.ops[591]: 'l-store-copy tmp%78#0 0'
debug: Replaced check_both_big_uint_n_block@0.ops[593]: 'v-load tmp%78#0' with 'l-load tmp%78#0'
debug: Inserted check_both_big_uint_n_block@0.ops[603]: 'l-store-copy tmp%80#0 0'
debug: Replaced check_both_big_uint_n_block@0.ops[605]: 'v-load tmp%80#0' with 'l-load tmp%80#0'
debug: Inserted check_both_big_uint_n_block@0.ops[607]: 'l-store-copy tmp%81#0 0'
debug: Replaced check_both_big_uint_n_block@0.ops[609]: 'v-load tmp%81#0' with 'l-load tmp%81#0'
debug: Inserted check_both_big_uint_n_block@0.ops[612]: 'l-store-copy reinterpret_biguint%77#0 0'
debug: Replaced check_both_big_uint_n_block@0.ops[614]: 'v-load reinterpret_biguint%77#0' with 'l-load reinterpret_biguint%77#0'
debug: Inserted check_both_big_uint_n_block@0.ops[617]: 'l-store-copy tmp%82#0 0'
debug: Replaced check_both_big_uint_n_block@0.ops[619]: 'v-load tmp%82#0' with 'l-load tmp%82#0'
debug: Inserted check_both_big_uint_n_block@0.ops[621]: 'l-store-copy tmp%83#0 0'
debug: Replaced check_both_big_uint_n_block@0.ops[623]: 'v-load tmp%83#0' with 'l-load tmp%83#0'
debug: Inserted check_both_big_uint_n_block@0.ops[626]: 'l-store-copy reinterpret_biguint%78#0 0'
debug: Replaced check_both_big_uint_n_block@0.ops[628]: 'v-load reinterpret_biguint%78#0' with 'l-load reinterpret_biguint%78#0'
debug: Inserted check_both_big_uint_n_block@0.ops[631]: 'l-store-copy tmp%84#0 0'
debug: Replaced check_both_big_uint_n_block@0.ops[633]: 'v-load tmp%84#0' with 'l-load tmp%84#0'
debug: Inserted check_both_big_uint_n_block@0.ops[635]: 'l-store-copy tmp%85#0 0'
debug: Replaced check_both_big_uint_n_block@0.ops[637]: 'v-load tmp%85#0' with 'l-load tmp%85#0'
debug: Inserted check_both_big_uint_n_block@0.ops[646]: 'l-store-copy tmp%86#0 0'
debug: Replaced check_both_big_uint_n_block@0.ops[648]: 'v-load tmp%86#0' with 'l-load tmp%86#0'
debug: Inserted check_both_big_uint_n_block@0.ops[650]: 'l-store-copy tmp%87#0 0'
debug: Replaced check_both_big_uint_n_block@0.ops[652]: 'v-load tmp%87#0' with 'l-load tmp%87#0'
debug: Inserted check_both_big_uint_n_block@0.ops[662]: 'l-store-copy tmp%89#0 0'
debug: Replaced check_both_big_uint_n_block@0.ops[664]: 'v-load tmp%89#0' with 'l-load tmp%89#0'
debug: Inserted check_both_big_uint_n_block@0.ops[666]: 'l-store-copy tmp%90#0 0'
debug: Replaced check_both_big_uint_n_block@0.ops[668]: 'v-load tmp%90#0' with 'l-load tmp%90#0'
debug: Inserted check_both_big_uint_n_block@0.ops[671]: 'l-store-copy reinterpret_biguint%83#0 0'
debug: Replaced check_both_big_uint_n_block@0.ops[673]: 'v-load reinterpret_biguint%83#0' with 'l-load reinterpret_biguint%83#0'
debug: Inserted check_both_big_uint_n_block@0.ops[676]: 'l-store-copy tmp%91#0 0'
debug: Replaced check_both_big_uint_n_block@0.ops[678]: 'v-load tmp%91#0' with 'l-load tmp%91#0'
debug: Inserted check_both_big_uint_n_block@0.ops[680]: 'l-store-copy tmp%92#0 0'
debug: Replaced check_both_big_uint_n_block@0.ops[682]: 'v-load tmp%92#0' with 'l-load tmp%92#0'
debug: Inserted check_both_big_uint_n_block@0.ops[23]: 'l-store-copy reinterpret_biguint%5#0 0'
debug: Replaced check_both_big_uint_n_block@0.ops[26]: 'v-load reinterpret_biguint%5#0' with 'l-load reinterpret_biguint%5#0'
debug: Inserted check_both_big_uint_n_block@0.ops[36]: 'l-store-copy tmp%3#0 0'
debug: Replaced check_both_big_uint_n_block@0.ops[39]: 'v-load tmp%3#0' with 'l-load tmp%3#0'
debug: Inserted check_both_big_uint_n_block@0.ops[72]: 'l-store-copy reinterpret_biguint%11#0 0'
debug: Replaced check_both_big_uint_n_block@0.ops[75]: 'v-load reinterpret_biguint%11#0' with 'l-load reinterpret_biguint%11#0'
debug: Inserted check_both_big_uint_n_block@0.ops[89]: 'l-store-copy tmp%10#0 0'
debug: Replaced check_both_big_uint_n_block@0.ops[92]: 'v-load tmp%10#0' with 'l-load tmp%10#0'
debug: Inserted check_both_big_uint_n_block@0.ops[147]: 'l-store-copy reinterpret_biguint%19#0 0'
debug: Replaced check_both_big_uint_n_block@0.ops[150]: 'v-load reinterpret_biguint%19#0' with 'l-load reinterpret_biguint%19#0'
debug: Inserted check_both_big_uint_n_block@0.ops[164]: 'l-store-copy tmp%21#0 0'
debug: Replaced check_both_big_uint_n_block@0.ops[167]: 'v-load tmp%21#0' with 'l-load tmp%21#0'
debug: Inserted check_both_big_uint_n_block@0.ops[204]: 'l-store-copy reinterpret_biguint%25#0 0'
debug: Replaced check_both_big_uint_n_block@0.ops[207]: 'v-load reinterpret_biguint%25#0' with 'l-load reinterpret_biguint%25#0'
debug: Inserted check_both_big_uint_n_block@0.ops[217]: 'l-store-copy tmp%28#0 0'
debug: Replaced check_both_big_uint_n_block@0.ops[220]: 'v-load tmp%28#0' with 'l-load tmp%28#0'
debug: Inserted check_both_big_uint_n_block@0.ops[259]: 'l-store-copy reinterpret_biguint%33#0 0'
debug: Replaced check_both_big_uint_n_block@0.ops[262]: 'v-load reinterpret_biguint%33#0' with 'l-load reinterpret_biguint%33#0'
debug: Inserted check_both_big_uint_n_block@0.ops[272]: 'l-store-copy tmp%34#0 0'
debug: Replaced check_both_big_uint_n_block@0.ops[275]: 'v-load tmp%34#0' with 'l-load tmp%34#0'
debug: Inserted check_both_big_uint_n_block@0.ops[304]: 'l-store-copy reinterpret_biguint%39#0 0'
debug: Replaced check_both_big_uint_n_block@0.ops[307]: 'v-load reinterpret_biguint%39#0' with 'l-load reinterpret_biguint%39#0'
debug: Inserted check_both_big_uint_n_block@0.ops[317]: 'l-store-copy tmp%39#0 0'
debug: Replaced check_both_big_uint_n_block@0.ops[320]: 'v-load tmp%39#0' with 'l-load tmp%39#0'
debug: Inserted check_both_big_uint_n_block@0.ops[367]: 'l-store-copy reinterpret_biguint%47#0 0'
debug: Replaced check_both_big_uint_n_block@0.ops[370]: 'v-load reinterpret_biguint%47#0' with 'l-load reinterpret_biguint%47#0'
debug: Inserted check_both_big_uint_n_block@0.ops[384]: 'l-store-copy tmp%48#0 0'
debug: Replaced check_both_big_uint_n_block@0.ops[387]: 'v-load tmp%48#0' with 'l-load tmp%48#0'
debug: Inserted check_both_big_uint_n_block@0.ops[424]: 'l-store-copy reinterpret_biguint%53#0 0'
debug: Replaced check_both_big_uint_n_block@0.ops[427]: 'v-load reinterpret_biguint%53#0' with 'l-load reinterpret_biguint%53#0'
debug: Inserted check_both_big_uint_n_block@0.ops[437]: 'l-store-copy tmp%55#0 0'
debug: Replaced check_both_big_uint_n_block@0.ops[440]: 'v-load tmp%55#0' with 'l-load tmp%55#0'
debug: Inserted check_both_big_uint_n_block@0.ops[479]: 'l-store-copy reinterpret_biguint%61#0 0'
debug: Replaced check_both_big_uint_n_block@0.ops[482]: 'v-load reinterpret_biguint%61#0' with 'l-load reinterpret_biguint%61#0'
debug: Inserted check_both_big_uint_n_block@0.ops[492]: 'l-store-copy tmp%61#0 0'
debug: Replaced check_both_big_uint_n_block@0.ops[495]: 'v-load tmp%61#0' with 'l-load tmp%61#0'
debug: Inserted check_both_big_uint_n_block@0.ops[528]: 'l-store-copy reinterpret_biguint%67#0 0'
debug: Replaced check_both_big_uint_n_block@0.ops[531]: 'v-load reinterpret_biguint%67#0' with 'l-load reinterpret_biguint%67#0'
debug: Inserted check_both_big_uint_n_block@0.ops[545]: 'l-store-copy tmp%68#0 0'
debug: Replaced check_both_big_uint_n_block@0.ops[548]: 'v-load tmp%68#0' with 'l-load tmp%68#0'
debug: Inserted check_both_big_uint_n_block@0.ops[603]: 'l-store-copy reinterpret_biguint%75#0 0'
debug: Replaced check_both_big_uint_n_block@0.ops[606]: 'v-load reinterpret_biguint%75#0' with 'l-load reinterpret_biguint%75#0'
debug: Inserted check_both_big_uint_n_block@0.ops[620]: 'l-store-copy tmp%79#0 0'
debug: Replaced check_both_big_uint_n_block@0.ops[623]: 'v-load tmp%79#0' with 'l-load tmp%79#0'
debug: Inserted check_both_big_uint_n_block@0.ops[664]: 'l-store-copy reinterpret_biguint%81#0 0'
debug: Replaced check_both_big_uint_n_block@0.ops[667]: 'v-load reinterpret_biguint%81#0' with 'l-load reinterpret_biguint%81#0'
debug: Inserted check_both_big_uint_n_block@0.ops[681]: 'l-store-copy tmp%88#0 0'
debug: Replaced check_both_big_uint_n_block@0.ops[684]: 'v-load tmp%88#0' with 'l-load tmp%88#0'
debug: Inserted check_both_big_uint_n_block@0.ops[21]: 'l-store-copy reinterpret_biguint%4#0 0'
debug: Replaced check_both_big_uint_n_block@0.ops[26]: 'v-load reinterpret_biguint%4#0' with 'l-load reinterpret_biguint%4#0'
debug: Inserted check_both_big_uint_n_block@0.ops[71]: 'l-store-copy reinterpret_biguint%10#0 0'
debug: Replaced check_both_big_uint_n_block@0.ops[76]: 'v-load reinterpret_biguint%10#0' with 'l-load reinterpret_biguint%10#0'
debug: Inserted check_both_big_uint_n_block@0.ops[147]: 'l-store-copy reinterpret_biguint%18#0 0'
debug: Replaced check_both_big_uint_n_block@0.ops[152]: 'v-load reinterpret_biguint%18#0' with 'l-load reinterpret_biguint%18#0'
debug: Inserted check_both_big_uint_n_block@0.ops[205]: 'l-store-copy reinterpret_biguint%24#0 0'
debug: Replaced check_both_big_uint_n_block@0.ops[210]: 'v-load reinterpret_biguint%24#0' with 'l-load reinterpret_biguint%24#0'
debug: Inserted check_both_big_uint_n_block@0.ops[261]: 'l-store-copy reinterpret_biguint%32#0 0'
debug: Replaced check_both_big_uint_n_block@0.ops[266]: 'v-load reinterpret_biguint%32#0' with 'l-load reinterpret_biguint%32#0'
debug: Inserted check_both_big_uint_n_block@0.ops[307]: 'l-store-copy reinterpret_biguint%38#0 0'
debug: Replaced check_both_big_uint_n_block@0.ops[312]: 'v-load reinterpret_biguint%38#0' with 'l-load reinterpret_biguint%38#0'
debug: Inserted check_both_big_uint_n_block@0.ops[371]: 'l-store-copy reinterpret_biguint%46#0 0'
debug: Replaced check_both_big_uint_n_block@0.ops[376]: 'v-load reinterpret_biguint%46#0' with 'l-load reinterpret_biguint%46#0'
debug: Inserted check_both_big_uint_n_block@0.ops[429]: 'l-store-copy reinterpret_biguint%52#0 0'
debug: Replaced check_both_big_uint_n_block@0.ops[434]: 'v-load reinterpret_biguint%52#0' with 'l-load reinterpret_biguint%52#0'
debug: Inserted check_both_big_uint_n_block@0.ops[485]: 'l-store-copy reinterpret_biguint%60#0 0'
debug: Replaced check_both_big_uint_n_block@0.ops[490]: 'v-load reinterpret_biguint%60#0' with 'l-load reinterpret_biguint%60#0'
debug: Inserted check_both_big_uint_n_block@0.ops[535]: 'l-store-copy reinterpret_biguint%66#0 0'
debug: Replaced check_both_big_uint_n_block@0.ops[540]: 'v-load reinterpret_biguint%66#0' with 'l-load reinterpret_biguint%66#0'
debug: Inserted check_both_big_uint_n_block@0.ops[611]: 'l-store-copy reinterpret_biguint%74#0 0'
debug: Replaced check_both_big_uint_n_block@0.ops[616]: 'v-load reinterpret_biguint%74#0' with 'l-load reinterpret_biguint%74#0'
debug: Inserted check_both_big_uint_n_block@0.ops[673]: 'l-store-copy reinterpret_biguint%80#0 0'
debug: Replaced check_both_big_uint_n_block@0.ops[678]: 'v-load reinterpret_biguint%80#0' with 'l-load reinterpret_biguint%80#0'
debug: Inserted check_both_big_uint_n_block@0.ops[34]: 'l-store-copy reinterpret_biguint%6#0 0'
debug: Replaced check_both_big_uint_n_block@0.ops[40]: 'v-load reinterpret_biguint%6#0' with 'l-load reinterpret_biguint%6#0'
debug: Inserted check_both_big_uint_n_block@0.ops[89]: 'l-store-copy reinterpret_biguint%12#0 0'
debug: Replaced check_both_big_uint_n_block@0.ops[95]: 'v-load reinterpret_biguint%12#0' with 'l-load reinterpret_biguint%12#0'
debug: Inserted check_both_big_uint_n_block@0.ops[166]: 'l-store-copy reinterpret_biguint%20#0 0'
debug: Replaced check_both_big_uint_n_block@0.ops[172]: 'v-load reinterpret_biguint%20#0' with 'l-load reinterpret_biguint%20#0'
debug: Inserted check_both_big_uint_n_block@0.ops[221]: 'l-store-copy reinterpret_biguint%26#0 0'
debug: Replaced check_both_big_uint_n_block@0.ops[227]: 'v-load reinterpret_biguint%26#0' with 'l-load reinterpret_biguint%26#0'
debug: Inserted check_both_big_uint_n_block@0.ops[278]: 'l-store-copy reinterpret_biguint%34#0 0'
debug: Replaced check_both_big_uint_n_block@0.ops[284]: 'v-load reinterpret_biguint%34#0' with 'l-load reinterpret_biguint%34#0'
debug: Inserted check_both_big_uint_n_block@0.ops[325]: 'l-store-copy reinterpret_biguint%40#0 0'
debug: Replaced check_both_big_uint_n_block@0.ops[331]: 'v-load reinterpret_biguint%40#0' with 'l-load reinterpret_biguint%40#0'
debug: Inserted check_both_big_uint_n_block@0.ops[394]: 'l-store-copy reinterpret_biguint%48#0 0'
debug: Replaced check_both_big_uint_n_block@0.ops[400]: 'v-load reinterpret_biguint%48#0' with 'l-load reinterpret_biguint%48#0'
debug: Inserted check_both_big_uint_n_block@0.ops[449]: 'l-store-copy reinterpret_biguint%54#0 0'
debug: Replaced check_both_big_uint_n_block@0.ops[455]: 'v-load reinterpret_biguint%54#0' with 'l-load reinterpret_biguint%54#0'
debug: Inserted check_both_big_uint_n_block@0.ops[506]: 'l-store-copy reinterpret_biguint%62#0 0'
debug: Replaced check_both_big_uint_n_block@0.ops[512]: 'v-load reinterpret_biguint%62#0' with 'l-load reinterpret_biguint%62#0'
debug: Inserted check_both_big_uint_n_block@0.ops[561]: 'l-store-copy reinterpret_biguint%68#0 0'
debug: Replaced check_both_big_uint_n_block@0.ops[567]: 'v-load reinterpret_biguint%68#0' with 'l-load reinterpret_biguint%68#0'
debug: Inserted check_both_big_uint_n_block@0.ops[638]: 'l-store-copy reinterpret_biguint%76#0 0'
debug: Replaced check_both_big_uint_n_block@0.ops[644]: 'v-load reinterpret_biguint%76#0' with 'l-load reinterpret_biguint%76#0'
debug: Inserted check_both_big_uint_n_block@0.ops[701]: 'l-store-copy reinterpret_biguint%82#0 0'
debug: Replaced check_both_big_uint_n_block@0.ops[707]: 'v-load reinterpret_biguint%82#0' with 'l-load reinterpret_biguint%82#0'
arc4_numeric_comparisons/uint_n.py:8 debug: optimizing TEAL subroutine ops test_cases.arc4_numeric_comparisons.uint_n.UIntNOrdering.approval_program() -> uint64:
arc4_numeric_comparisons/uint_n.py:18 debug: optimizing TEAL subroutine ops test_cases.arc4_numeric_comparisons.uint_n.check_both_uint_n(one: bytes, two: bytes) -> void:
arc4_numeric_comparisons/uint_n.py:87 debug: optimizing TEAL subroutine ops test_cases.arc4_numeric_comparisons.uint_n.check_mixed(one: bytes, two: bytes) -> void:
arc4_numeric_comparisons/uint_n.py:156 debug: optimizing TEAL subroutine ops test_cases.arc4_numeric_comparisons.uint_n.check_both_big_uint_n(one: bytes, two: bytes) -> void:
arc4_numeric_comparisons/uint_n.py:14 debug: optimizing TEAL subroutine ops test_cases.arc4_numeric_comparisons.uint_n.UIntNOrdering.clear_state_program() -> uint64:
info: Writing arc4_numeric_comparisons/out_unoptimized/UIntNOrdering.approval.teal
info: Writing arc4_numeric_comparisons/out_unoptimized/UIntNOrdering.clear.teal
info: Writing arc4_numeric_comparisons/out_unoptimized/UIntNOrdering.approval.bin
info: Writing arc4_numeric_comparisons/out_unoptimized/UIntNOrdering.clear.bin
info: Writing arc4_numeric_comparisons/out_unoptimized/UIntNOrdering.approval.stats.txt
info: Writing arc4_numeric_comparisons/out_unoptimized/UIntNOrdering.clear.stats.txt
info: Writing arc4_numeric_comparisons/out_unoptimized/UIntNOrdering.approval.puya.map
info: Writing arc4_numeric_comparisons/out_unoptimized/UIntNOrdering.clear.puya.map