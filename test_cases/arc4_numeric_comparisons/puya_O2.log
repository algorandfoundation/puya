debug: PuyaPyOptions(output_teal=True, output_source_map=True, output_arc32=False, output_arc56=False, output_ssa_ir=False, output_optimization_ir=False, output_destructured_ir=True, output_memory_ir=False, output_bytecode=True, debug_level=0, optimization_level=2, target_avm_version=10, cli_template_definitions={}, template_vars_prefix='TMPL_', locals_coalescing_strategy=<LocalsCoalescingStrategy.root_operand: 'root_operand'>, paths=['arc4_numeric_comparisons'], output_awst=False, output_awst_json=False, output_client=False, log_level=<LogLevel.debug: 10>)
info: Found python prefix: <git root>/.venv
debug: Building IR for function _puya_lib.util.ensure_budget
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'required_budget_with_buffer' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let required_budget_with_buffer#1: uint64 = undefined while trying to resolve 'required_budget_with_buffer' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'fee_source' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let fee_source#1: uint64 = undefined while trying to resolve 'fee_source' in block@1
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@4
debug: Terminated block@4
debug: Sealing block@5
debug: Terminated block@5
debug: Sealing block@6
debug: Terminated block@6
debug: Sealing block@1
debug: Added required_budget_with_buffer#0 to Phi node: let required_budget_with_buffer#1: uint64 = φ(required_budget_with_buffer#0 <- block@0) in block@0
debug: Created Phi assignment: let required_budget_with_buffer#2: uint64 = undefined while trying to resolve 'required_budget_with_buffer' in block@6
debug: Added required_budget_with_buffer#1 to Phi node: let required_budget_with_buffer#2: uint64 = φ(required_budget_with_buffer#1 <- block@3) in block@3
debug: Added required_budget_with_buffer#1 to Phi node: let required_budget_with_buffer#2: uint64 = φ(required_budget_with_buffer#1 <- block@3, required_budget_with_buffer#1 <- block@4) in block@4
debug: Added required_budget_with_buffer#1 to Phi node: let required_budget_with_buffer#2: uint64 = φ(required_budget_with_buffer#1 <- block@3, required_budget_with_buffer#1 <- block@4, required_budget_with_buffer#1 <- block@5) in block@5
debug: Replacing trivial Phi node: let required_budget_with_buffer#2: uint64 = φ(required_budget_with_buffer#1 <- block@3, required_budget_with_buffer#1 <- block@4, required_budget_with_buffer#1 <- block@5) (required_budget_with_buffer#2) with required_budget_with_buffer#1
debug: Deleting Phi assignment: let required_budget_with_buffer#2: uint64 = φ(required_budget_with_buffer#1 <- block@3, required_budget_with_buffer#1 <- block@4, required_budget_with_buffer#1 <- block@5)
debug: Replaced trivial Phi node: let required_budget_with_buffer#2: uint64 = φ(required_budget_with_buffer#1 <- block@3, required_budget_with_buffer#1 <- block@4, required_budget_with_buffer#1 <- block@5) (required_budget_with_buffer#2) with required_budget_with_buffer#1 in current definition for 1 blocks
debug: Added required_budget_with_buffer#1 to Phi node: let required_budget_with_buffer#1: uint64 = φ(required_budget_with_buffer#0 <- block@0, required_budget_with_buffer#1 <- block@6) in block@6
debug: Replacing trivial Phi node: let required_budget_with_buffer#1: uint64 = φ(required_budget_with_buffer#0 <- block@0, required_budget_with_buffer#1 <- block@6) (required_budget_with_buffer#1) with required_budget_with_buffer#0
debug: Deleting Phi assignment: let required_budget_with_buffer#1: uint64 = φ(required_budget_with_buffer#0 <- block@0, required_budget_with_buffer#1 <- block@6)
debug: Replaced trivial Phi node: let required_budget_with_buffer#1: uint64 = φ(required_budget_with_buffer#0 <- block@0, required_budget_with_buffer#1 <- block@6) (required_budget_with_buffer#1) with required_budget_with_buffer#0 in current definition for 6 blocks
debug: Added fee_source#0 to Phi node: let fee_source#1: uint64 = φ(fee_source#0 <- block@0) in block@0
debug: Created Phi assignment: let fee_source#2: uint64 = undefined while trying to resolve 'fee_source' in block@6
debug: Added fee_source#1 to Phi node: let fee_source#2: uint64 = φ(fee_source#1 <- block@3) in block@3
debug: Added fee_source#1 to Phi node: let fee_source#2: uint64 = φ(fee_source#1 <- block@3, fee_source#1 <- block@4) in block@4
debug: Added fee_source#1 to Phi node: let fee_source#2: uint64 = φ(fee_source#1 <- block@3, fee_source#1 <- block@4, fee_source#1 <- block@5) in block@5
debug: Replacing trivial Phi node: let fee_source#2: uint64 = φ(fee_source#1 <- block@3, fee_source#1 <- block@4, fee_source#1 <- block@5) (fee_source#2) with fee_source#1
debug: Deleting Phi assignment: let fee_source#2: uint64 = φ(fee_source#1 <- block@3, fee_source#1 <- block@4, fee_source#1 <- block@5)
debug: Replaced trivial Phi node: let fee_source#2: uint64 = φ(fee_source#1 <- block@3, fee_source#1 <- block@4, fee_source#1 <- block@5) (fee_source#2) with fee_source#1 in current definition for 1 blocks
debug: Added fee_source#1 to Phi node: let fee_source#1: uint64 = φ(fee_source#0 <- block@0, fee_source#1 <- block@6) in block@6
debug: Replacing trivial Phi node: let fee_source#1: uint64 = φ(fee_source#0 <- block@0, fee_source#1 <- block@6) (fee_source#1) with fee_source#0
debug: Deleting Phi assignment: let fee_source#1: uint64 = φ(fee_source#0 <- block@0, fee_source#1 <- block@6)
debug: Replaced trivial Phi node: let fee_source#1: uint64 = φ(fee_source#0 <- block@0, fee_source#1 <- block@6) (fee_source#1) with fee_source#0 in current definition for 6 blocks
debug: Sealing block@7
debug: Terminated block@7
debug: Building IR for function _puya_lib.bytes_.is_substring
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'start' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let start#1: uint64 = undefined while trying to resolve 'start' in block@1
debug: Looking for 'item' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let item#1: bytes = undefined while trying to resolve 'item' in block@1
debug: Looking for 'sequence' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let sequence#1: bytes = undefined while trying to resolve 'sequence' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@4
debug: Terminated block@4
debug: Sealing block@1
debug: Added start#0 to Phi node: let start#1: uint64 = φ(start#0 <- block@0) in block@0
debug: Added start#2 to Phi node: let start#1: uint64 = φ(start#0 <- block@0, start#2 <- block@4) in block@4
debug: Added item#0 to Phi node: let item#1: bytes = φ(item#0 <- block@0) in block@0
debug: Added item#1 to Phi node: let item#1: bytes = φ(item#0 <- block@0, item#1 <- block@4) in block@4
debug: Replacing trivial Phi node: let item#1: bytes = φ(item#0 <- block@0, item#1 <- block@4) (item#1) with item#0
debug: Deleting Phi assignment: let item#1: bytes = φ(item#0 <- block@0, item#1 <- block@4)
debug: Replaced trivial Phi node: let item#1: bytes = φ(item#0 <- block@0, item#1 <- block@4) (item#1) with item#0 in current definition for 3 blocks
debug: Added sequence#0 to Phi node: let sequence#1: bytes = φ(sequence#0 <- block@0) in block@0
debug: Added sequence#1 to Phi node: let sequence#1: bytes = φ(sequence#0 <- block@0, sequence#1 <- block@4) in block@4
debug: Replacing trivial Phi node: let sequence#1: bytes = φ(sequence#0 <- block@0, sequence#1 <- block@4) (sequence#1) with sequence#0
debug: Deleting Phi assignment: let sequence#1: bytes = φ(sequence#0 <- block@0, sequence#1 <- block@4)
debug: Replaced trivial Phi node: let sequence#1: bytes = φ(sequence#0 <- block@0, sequence#1 <- block@4) (sequence#1) with sequence#0 in current definition for 3 blocks
debug: Sealing block@5
debug: Terminated block@5
debug: Building IR for function _puya_lib.arc4.dynamic_array_pop_bit
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function _puya_lib.arc4.dynamic_array_pop_fixed_size
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function _puya_lib.arc4.dynamic_array_pop_byte_length_head
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function _puya_lib.arc4.dynamic_array_pop_dynamic_element
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'head_offset' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let head_offset#1: uint64 = undefined while trying to resolve 'head_offset' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'head_and_tail' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let head_and_tail#1: bytes = undefined while trying to resolve 'head_and_tail' in block@1
debug: Looking for 'new_head' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let new_head#1: bytes = undefined while trying to resolve 'new_head' in block@1
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@1
debug: Added head_offset#0 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0) in block@0
debug: Added head_offset#2 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0, head_offset#2 <- block@3) in block@3
debug: Added head_and_tail#0 to Phi node: let head_and_tail#1: bytes = φ(head_and_tail#0 <- block@0) in block@0
debug: Added head_and_tail#1 to Phi node: let head_and_tail#1: bytes = φ(head_and_tail#0 <- block@0, head_and_tail#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let head_and_tail#1: bytes = φ(head_and_tail#0 <- block@0, head_and_tail#1 <- block@3) (head_and_tail#1) with head_and_tail#0
debug: Deleting Phi assignment: let head_and_tail#1: bytes = φ(head_and_tail#0 <- block@0, head_and_tail#1 <- block@3)
debug: Replaced trivial Phi node: let head_and_tail#1: bytes = φ(head_and_tail#0 <- block@0, head_and_tail#1 <- block@3) (head_and_tail#1) with head_and_tail#0 in current definition for 3 blocks
debug: Added new_head#0 to Phi node: let new_head#1: bytes = φ(new_head#0 <- block@0) in block@0
debug: Added new_head#2 to Phi node: let new_head#1: bytes = φ(new_head#0 <- block@0, new_head#2 <- block@3) in block@3
debug: Sealing block@4
debug: Created Phi assignment: let length_minus_1#1: uint64 = undefined while trying to resolve 'length_minus_1' in block@1
debug: Added length_minus_1#0 to Phi node: let length_minus_1#1: uint64 = φ(length_minus_1#0 <- block@0) in block@0
debug: Added length_minus_1#1 to Phi node: let length_minus_1#1: uint64 = φ(length_minus_1#0 <- block@0, length_minus_1#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let length_minus_1#1: uint64 = φ(length_minus_1#0 <- block@0, length_minus_1#1 <- block@3) (length_minus_1#1) with length_minus_1#0
debug: Deleting Phi assignment: let length_minus_1#1: uint64 = φ(length_minus_1#0 <- block@0, length_minus_1#1 <- block@3)
debug: Replaced trivial Phi node: let length_minus_1#1: uint64 = φ(length_minus_1#0 <- block@0, length_minus_1#1 <- block@3) (length_minus_1#1) with length_minus_1#0 in current definition for 3 blocks
debug: Created Phi assignment: let popped_header_offset#1: uint64 = undefined while trying to resolve 'popped_header_offset' in block@1
debug: Added popped_header_offset#0 to Phi node: let popped_header_offset#1: uint64 = φ(popped_header_offset#0 <- block@0) in block@0
debug: Added popped_header_offset#1 to Phi node: let popped_header_offset#1: uint64 = φ(popped_header_offset#0 <- block@0, popped_header_offset#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let popped_header_offset#1: uint64 = φ(popped_header_offset#0 <- block@0, popped_header_offset#1 <- block@3) (popped_header_offset#1) with popped_header_offset#0
debug: Deleting Phi assignment: let popped_header_offset#1: uint64 = φ(popped_header_offset#0 <- block@0, popped_header_offset#1 <- block@3)
debug: Replaced trivial Phi node: let popped_header_offset#1: uint64 = φ(popped_header_offset#0 <- block@0, popped_header_offset#1 <- block@3) (popped_header_offset#1) with popped_header_offset#0 in current definition for 3 blocks
debug: Created Phi assignment: let popped_offset#1: uint64 = undefined while trying to resolve 'popped_offset' in block@1
debug: Added popped_offset#0 to Phi node: let popped_offset#1: uint64 = φ(popped_offset#0 <- block@0) in block@0
debug: Added popped_offset#1 to Phi node: let popped_offset#1: uint64 = φ(popped_offset#0 <- block@0, popped_offset#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let popped_offset#1: uint64 = φ(popped_offset#0 <- block@0, popped_offset#1 <- block@3) (popped_offset#1) with popped_offset#0
debug: Deleting Phi assignment: let popped_offset#1: uint64 = φ(popped_offset#0 <- block@0, popped_offset#1 <- block@3)
debug: Replaced trivial Phi node: let popped_offset#1: uint64 = φ(popped_offset#0 <- block@0, popped_offset#1 <- block@3) (popped_offset#1) with popped_offset#0 in current definition for 3 blocks
debug: Created Phi assignment: let popped#1: bytes = undefined while trying to resolve 'popped' in block@1
debug: Added popped#0 to Phi node: let popped#1: bytes = φ(popped#0 <- block@0) in block@0
debug: Added popped#1 to Phi node: let popped#1: bytes = φ(popped#0 <- block@0, popped#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let popped#1: bytes = φ(popped#0 <- block@0, popped#1 <- block@3) (popped#1) with popped#0
debug: Deleting Phi assignment: let popped#1: bytes = φ(popped#0 <- block@0, popped#1 <- block@3)
debug: Replaced trivial Phi node: let popped#1: bytes = φ(popped#0 <- block@0, popped#1 <- block@3) (popped#1) with popped#0 in current definition for 3 blocks
debug: Terminated block@4
debug: Building IR for function _puya_lib.arc4.dynamic_array_concat_bits
debug: Sealing block@0
debug: Terminated block@0
debug: Sealing block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Created Phi assignment: let array_length#1: uint64 = undefined while trying to resolve 'array_length' in block@2
debug: Added array_length#0 to Phi node: let array_length#1: uint64 = φ(array_length#0 <- block@0) in block@0
debug: Added array_length#0 to Phi node: let array_length#1: uint64 = φ(array_length#0 <- block@0, array_length#0 <- block@1) in block@1
debug: Replacing trivial Phi node: let array_length#1: uint64 = φ(array_length#0 <- block@0, array_length#0 <- block@1) (array_length#1) with array_length#0
debug: Deleting Phi assignment: let array_length#1: uint64 = φ(array_length#0 <- block@0, array_length#0 <- block@1)
debug: Replaced trivial Phi node: let array_length#1: uint64 = φ(array_length#0 <- block@0, array_length#0 <- block@1) (array_length#1) with array_length#0 in current definition for 1 blocks
debug: Created Phi assignment: let new_items_count#1: uint64 = undefined while trying to resolve 'new_items_count' in block@2
debug: Added new_items_count#0 to Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0) in block@0
debug: Added new_items_count#0 to Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#0 <- block@1) in block@1
debug: Replacing trivial Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#0 <- block@1) (new_items_count#1) with new_items_count#0
debug: Deleting Phi assignment: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#0 <- block@1)
debug: Replaced trivial Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#0 <- block@1) (new_items_count#1) with new_items_count#0 in current definition for 1 blocks
debug: Terminated block@2
debug: Looking for 'write_offset' in an unsealed block creating an incomplete Phi: block@3
debug: Created Phi assignment: let write_offset#1: uint64 = undefined while trying to resolve 'write_offset' in block@3
debug: Looking for 'write_end' in an unsealed block creating an incomplete Phi: block@3
debug: Created Phi assignment: let write_end#1: uint64 = undefined while trying to resolve 'write_end' in block@3
debug: Terminated block@3
debug: Sealing block@4
debug: Looking for 'result' in an unsealed block creating an incomplete Phi: block@3
debug: Created Phi assignment: let result#2: bytes = undefined while trying to resolve 'result' in block@3
debug: Looking for 'new_items_bytes' in an unsealed block creating an incomplete Phi: block@3
debug: Created Phi assignment: let new_items_bytes#1: bytes = undefined while trying to resolve 'new_items_bytes' in block@3
debug: Looking for 'read_offset' in an unsealed block creating an incomplete Phi: block@3
debug: Created Phi assignment: let read_offset#1: uint64 = undefined while trying to resolve 'read_offset' in block@3
debug: Looking for 'read_step' in an unsealed block creating an incomplete Phi: block@3
debug: Created Phi assignment: let read_step#1: uint64 = undefined while trying to resolve 'read_step' in block@3
debug: Terminated block@4
debug: Sealing block@3
debug: Added write_offset#0 to Phi node: let write_offset#1: uint64 = φ(write_offset#0 <- block@2) in block@2
debug: Added write_offset#2 to Phi node: let write_offset#1: uint64 = φ(write_offset#0 <- block@2, write_offset#2 <- block@4) in block@4
debug: Added write_end#0 to Phi node: let write_end#1: uint64 = φ(write_end#0 <- block@2) in block@2
debug: Added write_end#1 to Phi node: let write_end#1: uint64 = φ(write_end#0 <- block@2, write_end#1 <- block@4) in block@4
debug: Replacing trivial Phi node: let write_end#1: uint64 = φ(write_end#0 <- block@2, write_end#1 <- block@4) (write_end#1) with write_end#0
debug: Deleting Phi assignment: let write_end#1: uint64 = φ(write_end#0 <- block@2, write_end#1 <- block@4)
debug: Replaced trivial Phi node: let write_end#1: uint64 = φ(write_end#0 <- block@2, write_end#1 <- block@4) (write_end#1) with write_end#0 in current definition for 2 blocks
debug: Created Phi assignment: let result#4: bytes = undefined while trying to resolve 'result' in block@2
debug: Added result#0 to Phi node: let result#4: bytes = φ(result#0 <- block@0) in block@0
debug: Added result#1 to Phi node: let result#4: bytes = φ(result#0 <- block@0, result#1 <- block@1) in block@1
debug: Added result#4 to Phi node: let result#2: bytes = φ(result#4 <- block@2) in block@2
debug: Added result#3 to Phi node: let result#2: bytes = φ(result#4 <- block@2, result#3 <- block@4) in block@4
debug: Created Phi assignment: let new_items_bytes#2: bytes = undefined while trying to resolve 'new_items_bytes' in block@2
debug: Added new_items_bytes#0 to Phi node: let new_items_bytes#2: bytes = φ(new_items_bytes#0 <- block@0) in block@0
debug: Added new_items_bytes#0 to Phi node: let new_items_bytes#2: bytes = φ(new_items_bytes#0 <- block@0, new_items_bytes#0 <- block@1) in block@1
debug: Replacing trivial Phi node: let new_items_bytes#2: bytes = φ(new_items_bytes#0 <- block@0, new_items_bytes#0 <- block@1) (new_items_bytes#2) with new_items_bytes#0
debug: Deleting Phi assignment: let new_items_bytes#2: bytes = φ(new_items_bytes#0 <- block@0, new_items_bytes#0 <- block@1)
debug: Replaced trivial Phi node: let new_items_bytes#2: bytes = φ(new_items_bytes#0 <- block@0, new_items_bytes#0 <- block@1) (new_items_bytes#2) with new_items_bytes#0 in current definition for 1 blocks
debug: Added new_items_bytes#0 to Phi node: let new_items_bytes#1: bytes = φ(new_items_bytes#0 <- block@2) in block@2
debug: Added new_items_bytes#1 to Phi node: let new_items_bytes#1: bytes = φ(new_items_bytes#0 <- block@2, new_items_bytes#1 <- block@4) in block@4
debug: Replacing trivial Phi node: let new_items_bytes#1: bytes = φ(new_items_bytes#0 <- block@2, new_items_bytes#1 <- block@4) (new_items_bytes#1) with new_items_bytes#0
debug: Deleting Phi assignment: let new_items_bytes#1: bytes = φ(new_items_bytes#0 <- block@2, new_items_bytes#1 <- block@4)
debug: Replaced trivial Phi node: let new_items_bytes#1: bytes = φ(new_items_bytes#0 <- block@2, new_items_bytes#1 <- block@4) (new_items_bytes#1) with new_items_bytes#0 in current definition for 2 blocks
debug: Added read_offset#0 to Phi node: let read_offset#1: uint64 = φ(read_offset#0 <- block@2) in block@2
debug: Added read_offset#2 to Phi node: let read_offset#1: uint64 = φ(read_offset#0 <- block@2, read_offset#2 <- block@4) in block@4
debug: Created Phi assignment: let read_step#2: uint64 = undefined while trying to resolve 'read_step' in block@2
debug: Added read_step#0 to Phi node: let read_step#2: uint64 = φ(read_step#0 <- block@0) in block@0
debug: Added read_step#0 to Phi node: let read_step#2: uint64 = φ(read_step#0 <- block@0, read_step#0 <- block@1) in block@1
debug: Replacing trivial Phi node: let read_step#2: uint64 = φ(read_step#0 <- block@0, read_step#0 <- block@1) (read_step#2) with read_step#0
debug: Deleting Phi assignment: let read_step#2: uint64 = φ(read_step#0 <- block@0, read_step#0 <- block@1)
debug: Replaced trivial Phi node: let read_step#2: uint64 = φ(read_step#0 <- block@0, read_step#0 <- block@1) (read_step#2) with read_step#0 in current definition for 1 blocks
debug: Added read_step#0 to Phi node: let read_step#1: uint64 = φ(read_step#0 <- block@2) in block@2
debug: Added read_step#1 to Phi node: let read_step#1: uint64 = φ(read_step#0 <- block@2, read_step#1 <- block@4) in block@4
debug: Replacing trivial Phi node: let read_step#1: uint64 = φ(read_step#0 <- block@2, read_step#1 <- block@4) (read_step#1) with read_step#0
debug: Deleting Phi assignment: let read_step#1: uint64 = φ(read_step#0 <- block@2, read_step#1 <- block@4)
debug: Replaced trivial Phi node: let read_step#1: uint64 = φ(read_step#0 <- block@2, read_step#1 <- block@4) (read_step#1) with read_step#0 in current definition for 2 blocks
debug: Sealing block@5
debug: Terminated block@5
debug: Building IR for function _puya_lib.arc4.dynamic_array_concat_byte_length_head
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function _puya_lib.arc4.dynamic_array_concat_dynamic_element
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'head_offset' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let head_offset#1: uint64 = undefined while trying to resolve 'head_offset' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'array_head_and_tail' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let array_head_and_tail#1: bytes = undefined while trying to resolve 'array_head_and_tail' in block@1
debug: Looking for 'new_head' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let new_head#1: bytes = undefined while trying to resolve 'new_head' in block@1
debug: Looking for 'item_offset_adjustment' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let item_offset_adjustment#1: uint64 = undefined while trying to resolve 'item_offset_adjustment' in block@1
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@1
debug: Added head_offset#0 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0) in block@0
debug: Added head_offset#2 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0, head_offset#2 <- block@3) in block@3
debug: Added array_head_and_tail#0 to Phi node: let array_head_and_tail#1: bytes = φ(array_head_and_tail#0 <- block@0) in block@0
debug: Added array_head_and_tail#1 to Phi node: let array_head_and_tail#1: bytes = φ(array_head_and_tail#0 <- block@0, array_head_and_tail#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let array_head_and_tail#1: bytes = φ(array_head_and_tail#0 <- block@0, array_head_and_tail#1 <- block@3) (array_head_and_tail#1) with array_head_and_tail#0
debug: Deleting Phi assignment: let array_head_and_tail#1: bytes = φ(array_head_and_tail#0 <- block@0, array_head_and_tail#1 <- block@3)
debug: Replaced trivial Phi node: let array_head_and_tail#1: bytes = φ(array_head_and_tail#0 <- block@0, array_head_and_tail#1 <- block@3) (array_head_and_tail#1) with array_head_and_tail#0 in current definition for 3 blocks
debug: Added new_head#0 to Phi node: let new_head#1: bytes = φ(new_head#0 <- block@0) in block@0
debug: Added new_head#2 to Phi node: let new_head#1: bytes = φ(new_head#0 <- block@0, new_head#2 <- block@3) in block@3
debug: Added item_offset_adjustment#0 to Phi node: let item_offset_adjustment#1: uint64 = φ(item_offset_adjustment#0 <- block@0) in block@0
debug: Added item_offset_adjustment#1 to Phi node: let item_offset_adjustment#1: uint64 = φ(item_offset_adjustment#0 <- block@0, item_offset_adjustment#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let item_offset_adjustment#1: uint64 = φ(item_offset_adjustment#0 <- block@0, item_offset_adjustment#1 <- block@3) (item_offset_adjustment#1) with item_offset_adjustment#0
debug: Deleting Phi assignment: let item_offset_adjustment#1: uint64 = φ(item_offset_adjustment#0 <- block@0, item_offset_adjustment#1 <- block@3)
debug: Replaced trivial Phi node: let item_offset_adjustment#1: uint64 = φ(item_offset_adjustment#0 <- block@0, item_offset_adjustment#1 <- block@3) (item_offset_adjustment#1) with item_offset_adjustment#0 in current definition for 3 blocks
debug: Sealing block@4
debug: Created Phi assignment: let new_items_count#1: uint64 = undefined while trying to resolve 'new_items_count' in block@1
debug: Added new_items_count#0 to Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0) in block@0
debug: Added new_items_count#1 to Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#1 <- block@3) (new_items_count#1) with new_items_count#0
debug: Deleting Phi assignment: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#1 <- block@3)
debug: Replaced trivial Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#1 <- block@3) (new_items_count#1) with new_items_count#0 in current definition for 3 blocks
debug: Terminated block@4
debug: Looking for 'head_offset' in an unsealed block creating an incomplete Phi: block@5
debug: Created Phi assignment: let head_offset#4: uint64 = undefined while trying to resolve 'head_offset' in block@5
debug: Terminated block@5
debug: Sealing block@6
debug: Looking for 'new_head_and_tail' in an unsealed block creating an incomplete Phi: block@5
debug: Created Phi assignment: let new_head_and_tail#1: bytes = undefined while trying to resolve 'new_head_and_tail' in block@5
debug: Looking for 'new_head' in an unsealed block creating an incomplete Phi: block@5
debug: Created Phi assignment: let new_head#3: bytes = undefined while trying to resolve 'new_head' in block@5
debug: Looking for 'item_offset_adjustment' in an unsealed block creating an incomplete Phi: block@5
debug: Created Phi assignment: let item_offset_adjustment#3: uint64 = undefined while trying to resolve 'item_offset_adjustment' in block@5
debug: Terminated block@6
debug: Sealing block@7
debug: Terminated block@7
debug: Sealing block@5
debug: Added head_offset#3 to Phi node: let head_offset#4: uint64 = φ(head_offset#3 <- block@4) in block@4
debug: Added head_offset#5 to Phi node: let head_offset#4: uint64 = φ(head_offset#3 <- block@4, head_offset#5 <- block@7) in block@7
debug: Created Phi assignment: let new_head_and_tail#2: bytes = undefined while trying to resolve 'new_head_and_tail' in block@1
debug: Added new_head_and_tail#0 to Phi node: let new_head_and_tail#2: bytes = φ(new_head_and_tail#0 <- block@0) in block@0
debug: Added new_head_and_tail#2 to Phi node: let new_head_and_tail#2: bytes = φ(new_head_and_tail#0 <- block@0, new_head_and_tail#2 <- block@3) in block@3
debug: Replacing trivial Phi node: let new_head_and_tail#2: bytes = φ(new_head_and_tail#0 <- block@0, new_head_and_tail#2 <- block@3) (new_head_and_tail#2) with new_head_and_tail#0
debug: Deleting Phi assignment: let new_head_and_tail#2: bytes = φ(new_head_and_tail#0 <- block@0, new_head_and_tail#2 <- block@3)
debug: Replaced trivial Phi node: let new_head_and_tail#2: bytes = φ(new_head_and_tail#0 <- block@0, new_head_and_tail#2 <- block@3) (new_head_and_tail#2) with new_head_and_tail#0 in current definition for 3 blocks
debug: Added new_head_and_tail#0 to Phi node: let new_head_and_tail#1: bytes = φ(new_head_and_tail#0 <- block@4) in block@4
debug: Added new_head_and_tail#1 to Phi node: let new_head_and_tail#1: bytes = φ(new_head_and_tail#0 <- block@4, new_head_and_tail#1 <- block@7) in block@7
debug: Replacing trivial Phi node: let new_head_and_tail#1: bytes = φ(new_head_and_tail#0 <- block@4, new_head_and_tail#1 <- block@7) (new_head_and_tail#1) with new_head_and_tail#0
debug: Deleting Phi assignment: let new_head_and_tail#1: bytes = φ(new_head_and_tail#0 <- block@4, new_head_and_tail#1 <- block@7)
debug: Replaced trivial Phi node: let new_head_and_tail#1: bytes = φ(new_head_and_tail#0 <- block@4, new_head_and_tail#1 <- block@7) (new_head_and_tail#1) with new_head_and_tail#0 in current definition for 3 blocks
debug: Added new_head#1 to Phi node: let new_head#3: bytes = φ(new_head#1 <- block@4) in block@4
debug: Added new_head#4 to Phi node: let new_head#3: bytes = φ(new_head#1 <- block@4, new_head#4 <- block@7) in block@7
debug: Added item_offset_adjustment#2 to Phi node: let item_offset_adjustment#3: uint64 = φ(item_offset_adjustment#2 <- block@4) in block@4
debug: Added item_offset_adjustment#3 to Phi node: let item_offset_adjustment#3: uint64 = φ(item_offset_adjustment#2 <- block@4, item_offset_adjustment#3 <- block@7) in block@7
debug: Replacing trivial Phi node: let item_offset_adjustment#3: uint64 = φ(item_offset_adjustment#2 <- block@4, item_offset_adjustment#3 <- block@7) (item_offset_adjustment#3) with item_offset_adjustment#2
debug: Deleting Phi assignment: let item_offset_adjustment#3: uint64 = φ(item_offset_adjustment#2 <- block@4, item_offset_adjustment#3 <- block@7)
debug: Replaced trivial Phi node: let item_offset_adjustment#3: uint64 = φ(item_offset_adjustment#2 <- block@4, item_offset_adjustment#3 <- block@7) (item_offset_adjustment#3) with item_offset_adjustment#2 in current definition for 3 blocks
debug: Sealing block@8
debug: Created Phi assignment: let array_items_count#1: uint64 = undefined while trying to resolve 'array_items_count' in block@5
debug: Created Phi assignment: let array_items_count#2: uint64 = undefined while trying to resolve 'array_items_count' in block@1
debug: Added array_items_count#0 to Phi node: let array_items_count#2: uint64 = φ(array_items_count#0 <- block@0) in block@0
debug: Added array_items_count#2 to Phi node: let array_items_count#2: uint64 = φ(array_items_count#0 <- block@0, array_items_count#2 <- block@3) in block@3
debug: Replacing trivial Phi node: let array_items_count#2: uint64 = φ(array_items_count#0 <- block@0, array_items_count#2 <- block@3) (array_items_count#2) with array_items_count#0
debug: Deleting Phi assignment: let array_items_count#2: uint64 = φ(array_items_count#0 <- block@0, array_items_count#2 <- block@3)
debug: Replaced trivial Phi node: let array_items_count#2: uint64 = φ(array_items_count#0 <- block@0, array_items_count#2 <- block@3) (array_items_count#2) with array_items_count#0 in current definition for 3 blocks
debug: Added array_items_count#0 to Phi node: let array_items_count#1: uint64 = φ(array_items_count#0 <- block@4) in block@4
debug: Added array_items_count#1 to Phi node: let array_items_count#1: uint64 = φ(array_items_count#0 <- block@4, array_items_count#1 <- block@7) in block@7
debug: Replacing trivial Phi node: let array_items_count#1: uint64 = φ(array_items_count#0 <- block@4, array_items_count#1 <- block@7) (array_items_count#1) with array_items_count#0
debug: Deleting Phi assignment: let array_items_count#1: uint64 = φ(array_items_count#0 <- block@4, array_items_count#1 <- block@7)
debug: Replaced trivial Phi node: let array_items_count#1: uint64 = φ(array_items_count#0 <- block@4, array_items_count#1 <- block@7) (array_items_count#1) with array_items_count#0 in current definition for 3 blocks
debug: Created Phi assignment: let new_items_count#2: uint64 = undefined while trying to resolve 'new_items_count' in block@5
debug: Added new_items_count#0 to Phi node: let new_items_count#2: uint64 = φ(new_items_count#0 <- block@4) in block@4
debug: Added new_items_count#2 to Phi node: let new_items_count#2: uint64 = φ(new_items_count#0 <- block@4, new_items_count#2 <- block@7) in block@7
debug: Replacing trivial Phi node: let new_items_count#2: uint64 = φ(new_items_count#0 <- block@4, new_items_count#2 <- block@7) (new_items_count#2) with new_items_count#0
debug: Deleting Phi assignment: let new_items_count#2: uint64 = φ(new_items_count#0 <- block@4, new_items_count#2 <- block@7)
debug: Replaced trivial Phi node: let new_items_count#2: uint64 = φ(new_items_count#0 <- block@4, new_items_count#2 <- block@7) (new_items_count#2) with new_items_count#0 in current definition for 3 blocks
debug: Created Phi assignment: let array_head_and_tail#2: bytes = undefined while trying to resolve 'array_head_and_tail' in block@5
debug: Added array_head_and_tail#0 to Phi node: let array_head_and_tail#2: bytes = φ(array_head_and_tail#0 <- block@4) in block@4
debug: Added array_head_and_tail#2 to Phi node: let array_head_and_tail#2: bytes = φ(array_head_and_tail#0 <- block@4, array_head_and_tail#2 <- block@7) in block@7
debug: Replacing trivial Phi node: let array_head_and_tail#2: bytes = φ(array_head_and_tail#0 <- block@4, array_head_and_tail#2 <- block@7) (array_head_and_tail#2) with array_head_and_tail#0
debug: Deleting Phi assignment: let array_head_and_tail#2: bytes = φ(array_head_and_tail#0 <- block@4, array_head_and_tail#2 <- block@7)
debug: Replaced trivial Phi node: let array_head_and_tail#2: bytes = φ(array_head_and_tail#0 <- block@4, array_head_and_tail#2 <- block@7) (array_head_and_tail#2) with array_head_and_tail#0 in current definition for 3 blocks
debug: Terminated block@8
debug: Building IR for function _puya_lib.arc4.dynamic_array_replace_byte_length_head
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function _puya_lib.arc4.dynamic_array_replace_dynamic_element
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function _puya_lib.arc4.static_array_replace_dynamic_element
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'head_offset' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let head_offset#1: uint64 = undefined while trying to resolve 'head_offset' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'new_head_and_tail' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let new_head_and_tail#1: bytes = undefined while trying to resolve 'new_head_and_tail' in block@1
debug: Looking for 'new_item_length' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let new_item_length#1: uint64 = undefined while trying to resolve 'new_item_length' in block@1
debug: Looking for 'original_item_length' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let original_item_length#1: uint64 = undefined while trying to resolve 'original_item_length' in block@1
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@1
debug: Added head_offset#0 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0) in block@0
debug: Added head_offset#2 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0, head_offset#2 <- block@3) in block@3
debug: Added new_head_and_tail#0 to Phi node: let new_head_and_tail#1: bytes = φ(new_head_and_tail#0 <- block@0) in block@0
debug: Added new_head_and_tail#2 to Phi node: let new_head_and_tail#1: bytes = φ(new_head_and_tail#0 <- block@0, new_head_and_tail#2 <- block@3) in block@3
debug: Added new_item_length#0 to Phi node: let new_item_length#1: uint64 = φ(new_item_length#0 <- block@0) in block@0
debug: Added new_item_length#1 to Phi node: let new_item_length#1: uint64 = φ(new_item_length#0 <- block@0, new_item_length#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let new_item_length#1: uint64 = φ(new_item_length#0 <- block@0, new_item_length#1 <- block@3) (new_item_length#1) with new_item_length#0
debug: Deleting Phi assignment: let new_item_length#1: uint64 = φ(new_item_length#0 <- block@0, new_item_length#1 <- block@3)
debug: Replaced trivial Phi node: let new_item_length#1: uint64 = φ(new_item_length#0 <- block@0, new_item_length#1 <- block@3) (new_item_length#1) with new_item_length#0 in current definition for 3 blocks
debug: Added original_item_length#0 to Phi node: let original_item_length#1: uint64 = φ(original_item_length#0 <- block@0) in block@0
debug: Added original_item_length#1 to Phi node: let original_item_length#1: uint64 = φ(original_item_length#0 <- block@0, original_item_length#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let original_item_length#1: uint64 = φ(original_item_length#0 <- block@0, original_item_length#1 <- block@3) (original_item_length#1) with original_item_length#0
debug: Deleting Phi assignment: let original_item_length#1: uint64 = φ(original_item_length#0 <- block@0, original_item_length#1 <- block@3)
debug: Replaced trivial Phi node: let original_item_length#1: uint64 = φ(original_item_length#0 <- block@0, original_item_length#1 <- block@3) (original_item_length#1) with original_item_length#0 in current definition for 3 blocks
debug: Sealing block@4
debug: Terminated block@4
debug: Building IR for function _puya_lib.arc4.static_array_replace_byte_length_head
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function _puya_lib.arc4.recalculate_head_for_elements_with_byte_length_head
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'head_offset' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let head_offset#1: uint64 = undefined while trying to resolve 'head_offset' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'tail_offset' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let tail_offset#1: uint64 = undefined while trying to resolve 'tail_offset' in block@1
debug: Looking for 'array_head_and_tail' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let array_head_and_tail#1: bytes = undefined while trying to resolve 'array_head_and_tail' in block@1
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@1
debug: Added head_offset#0 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0) in block@0
debug: Added head_offset#3 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0, head_offset#3 <- block@3) in block@3
debug: Added tail_offset#0 to Phi node: let tail_offset#1: uint64 = φ(tail_offset#0 <- block@0) in block@0
debug: Added tail_offset#2 to Phi node: let tail_offset#1: uint64 = φ(tail_offset#0 <- block@0, tail_offset#2 <- block@3) in block@3
debug: Added array_head_and_tail#0 to Phi node: let array_head_and_tail#1: bytes = φ(array_head_and_tail#0 <- block@0) in block@0
debug: Added array_head_and_tail#2 to Phi node: let array_head_and_tail#1: bytes = φ(array_head_and_tail#0 <- block@0, array_head_and_tail#2 <- block@3) in block@3
debug: Sealing block@4
debug: Terminated block@4
debug: Building IR for function test_cases.arc4_numeric_comparisons.uint_n.check_both_uint_n
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.arc4_numeric_comparisons.uint_n.check_mixed
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.arc4_numeric_comparisons.uint_n.check_both_big_uint_n
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.arc4_numeric_comparisons.uint_n.UIntNOrdering.__puya_arc4_router__
debug: Sealing block@0
debug: Terminated block@0
debug: Sealing block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Building IR for function test_cases.arc4_numeric_comparisons.uint_n.UIntNOrdering.approval_program
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.arc4_numeric_comparisons.uint_n.UIntNOrdering.clear_state_program
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.arc4_numeric_comparisons.uint_n.UIntNOrdering.approval_program
debug: Sealing block@0
debug: Terminated block@0
debug: removing unused subroutine _puya_lib.util.ensure_budget
debug: removing unused subroutine _puya_lib.bytes_.is_substring
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_bit
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_fixed_size
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_bits
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_replace_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_replace_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.static_array_replace_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.static_array_replace_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.recalculate_head_for_elements_with_byte_length_head
debug: removing unused subroutine test_cases.arc4_numeric_comparisons.uint_n.UIntNOrdering.__puya_arc4_router__
debug: removing unused subroutine test_cases.arc4_numeric_comparisons.uint_n.UIntNOrdering.approval_program
debug: removing unused subroutine test_cases.arc4_numeric_comparisons.uint_n.UIntNOrdering.clear_state_program
debug: Building IR for function test_cases.arc4_numeric_comparisons.uint_n.UIntNOrdering.clear_state_program
debug: Sealing block@0
debug: Terminated block@0
debug: removing unused subroutine _puya_lib.util.ensure_budget
debug: removing unused subroutine _puya_lib.bytes_.is_substring
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_bit
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_fixed_size
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_bits
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_replace_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_replace_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.static_array_replace_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.static_array_replace_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.recalculate_head_for_elements_with_byte_length_head
debug: removing unused subroutine test_cases.arc4_numeric_comparisons.uint_n.check_both_uint_n
debug: removing unused subroutine test_cases.arc4_numeric_comparisons.uint_n.check_mixed
debug: removing unused subroutine test_cases.arc4_numeric_comparisons.uint_n.check_both_big_uint_n
debug: removing unused subroutine test_cases.arc4_numeric_comparisons.uint_n.UIntNOrdering.__puya_arc4_router__
debug: removing unused subroutine test_cases.arc4_numeric_comparisons.uint_n.UIntNOrdering.approval_program
debug: removing unused subroutine test_cases.arc4_numeric_comparisons.uint_n.UIntNOrdering.clear_state_program
debug: optimizing approval program of test_cases.arc4_numeric_comparisons.uint_n.UIntNOrdering at level 2
debug: Begin optimization pass 1/100
debug: marking single-use function test_cases.arc4_numeric_comparisons.uint_n.check_both_uint_n for inlining
debug: marking single-use function test_cases.arc4_numeric_comparisons.uint_n.check_mixed for inlining
debug: marking single-use function test_cases.arc4_numeric_comparisons.uint_n.check_both_big_uint_n for inlining
debug: Optimizing subroutine test_cases.arc4_numeric_comparisons.uint_n.UIntNOrdering.approval_program
debug: Optimizer: Perform Subroutine Inlining
arc4_numeric_comparisons/uint_n.py:9:9 debug: inlining call to test_cases.arc4_numeric_comparisons.uint_n.check_both_uint_n in test_cases.arc4_numeric_comparisons.uint_n.UIntNOrdering.approval_program
arc4_numeric_comparisons/uint_n.py:10:9 debug: inlining call to test_cases.arc4_numeric_comparisons.uint_n.check_mixed in test_cases.arc4_numeric_comparisons.uint_n.UIntNOrdering.approval_program
arc4_numeric_comparisons/uint_n.py:11:9 debug: inlining call to test_cases.arc4_numeric_comparisons.uint_n.check_both_big_uint_n in test_cases.arc4_numeric_comparisons.uint_n.UIntNOrdering.approval_program
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable one#0
debug: Removing unused variable two#0
debug: Removing unused variable one_uint64#0
debug: Removing unused variable one_biguint#0
debug: Removing unused variable two_uint64#0
debug: Removing unused variable two_biguint#0
debug: Removing unused variable reinterpret_biguint%0#0
debug: Removing unused variable reinterpret_biguint%1#0
debug: Removing unused variable reinterpret_biguint%2#0
debug: Removing unused variable reinterpret_biguint%3#0
debug: Removing unused variable reinterpret_biguint%4#0
debug: Removing unused variable reinterpret_biguint%5#0
debug: Removing unused variable reinterpret_biguint%6#0
debug: Removing unused variable reinterpret_biguint%7#0
debug: Removing unused variable reinterpret_biguint%8#0
debug: Removing unused variable reinterpret_biguint%9#0
debug: Removing unused variable reinterpret_biguint%10#0
debug: Removing unused variable reinterpret_biguint%11#0
debug: Removing unused variable reinterpret_biguint%12#0
debug: Removing unused variable reinterpret_biguint%13#0
debug: Removing unused variable reinterpret_biguint%14#0
debug: Removing unused variable reinterpret_biguint%15#0
debug: Removing unused variable reinterpret_biguint%16#0
debug: Removing unused variable reinterpret_biguint%17#0
debug: Removing unused variable reinterpret_biguint%18#0
debug: Removing unused variable reinterpret_biguint%19#0
debug: Removing unused variable reinterpret_biguint%20#0
debug: Removing unused variable reinterpret_biguint%21#0
debug: Removing unused variable reinterpret_biguint%22#0
debug: Removing unused variable reinterpret_biguint%23#0
debug: Removing unused variable reinterpret_biguint%24#0
debug: Removing unused variable reinterpret_biguint%25#0
debug: Removing unused variable reinterpret_biguint%26#0
debug: Removing unused variable reinterpret_biguint%27#0
debug: Removing unused variable reinterpret_biguint%28#0
debug: Removing unused variable reinterpret_biguint%29#0
debug: Removing unused variable reinterpret_biguint%30#0
debug: Removing unused variable reinterpret_biguint%31#0
debug: Removing unused variable reinterpret_biguint%32#0
debug: Removing unused variable reinterpret_biguint%33#0
debug: Removing unused variable reinterpret_biguint%34#0
debug: Removing unused variable reinterpret_biguint%35#0
debug: Removing unused variable reinterpret_biguint%36#0
debug: Removing unused variable reinterpret_biguint%37#0
debug: Removing unused variable reinterpret_biguint%38#0
debug: Removing unused variable reinterpret_biguint%39#0
debug: Removing unused variable reinterpret_biguint%40#0
debug: Removing unused variable reinterpret_biguint%41#0
debug: Removing unused variable reinterpret_biguint%42#0
debug: Removing unused variable reinterpret_biguint%43#0
debug: Removing unused variable reinterpret_biguint%44#0
debug: Removing unused variable reinterpret_biguint%45#0
debug: Removing unused variable reinterpret_biguint%46#0
debug: Removing unused variable reinterpret_biguint%47#0
debug: Removing unused variable reinterpret_biguint%48#0
debug: Removing unused variable reinterpret_biguint%49#0
debug: Removing unused variable reinterpret_biguint%50#0
debug: Removing unused variable reinterpret_biguint%51#0
debug: Removing unused variable reinterpret_biguint%52#0
debug: Removing unused variable reinterpret_biguint%53#0
debug: Removing unused variable reinterpret_biguint%54#0
debug: Removing unused variable reinterpret_biguint%55#0
debug: Removing unused variable reinterpret_biguint%56#0
debug: Removing unused variable reinterpret_biguint%57#0
debug: Removing unused variable reinterpret_biguint%58#0
debug: Removing unused variable reinterpret_biguint%59#0
debug: Removing unused variable reinterpret_biguint%60#0
debug: Removing unused variable reinterpret_biguint%61#0
debug: Removing unused variable reinterpret_biguint%62#0
debug: Removing unused variable reinterpret_biguint%63#0
debug: Removing unused variable reinterpret_biguint%64#0
debug: Removing unused variable reinterpret_biguint%65#0
debug: Removing unused variable reinterpret_biguint%66#0
debug: Removing unused variable reinterpret_biguint%67#0
debug: Removing unused variable reinterpret_biguint%68#0
debug: Removing unused variable reinterpret_biguint%69#0
debug: Removing unused variable reinterpret_biguint%70#0
debug: Removing unused variable reinterpret_biguint%71#0
debug: Removing unused variable reinterpret_biguint%72#0
debug: Removing unused variable reinterpret_biguint%73#0
debug: Removing unused variable reinterpret_biguint%74#0
debug: Removing unused variable reinterpret_biguint%75#0
debug: Removing unused variable reinterpret_biguint%76#0
debug: Removing unused variable reinterpret_biguint%77#0
debug: Removing unused variable reinterpret_biguint%78#0
debug: Removing unused variable reinterpret_biguint%79#0
debug: Removing unused variable reinterpret_biguint%80#0
debug: Removing unused variable reinterpret_biguint%81#0
debug: Removing unused variable reinterpret_biguint%82#0
debug: Removing unused variable reinterpret_biguint%83#0
debug: Removing unused variable one#1
debug: Removing unused variable two#1
debug: Removing unused variable one_uint64#1
debug: Removing unused variable one_biguint#1
debug: Removing unused variable two_uint64#1
debug: Removing unused variable two_biguint#1
debug: Removing unused variable reinterpret_biguint%0#1
debug: Removing unused variable reinterpret_biguint%1#1
debug: Removing unused variable reinterpret_biguint%2#1
debug: Removing unused variable reinterpret_biguint%3#1
debug: Removing unused variable reinterpret_biguint%4#1
debug: Removing unused variable reinterpret_biguint%5#1
debug: Removing unused variable reinterpret_biguint%6#1
debug: Removing unused variable reinterpret_biguint%7#1
debug: Removing unused variable reinterpret_biguint%8#1
debug: Removing unused variable reinterpret_biguint%9#1
debug: Removing unused variable reinterpret_biguint%10#1
debug: Removing unused variable reinterpret_biguint%11#1
debug: Removing unused variable reinterpret_biguint%12#1
debug: Removing unused variable reinterpret_biguint%13#1
debug: Removing unused variable reinterpret_biguint%14#1
debug: Removing unused variable reinterpret_biguint%15#1
debug: Removing unused variable reinterpret_biguint%16#1
debug: Removing unused variable reinterpret_biguint%17#1
debug: Removing unused variable reinterpret_biguint%18#1
debug: Removing unused variable reinterpret_biguint%19#1
debug: Removing unused variable reinterpret_biguint%20#1
debug: Removing unused variable reinterpret_biguint%21#1
debug: Removing unused variable reinterpret_biguint%22#1
debug: Removing unused variable reinterpret_biguint%23#1
debug: Removing unused variable reinterpret_biguint%24#1
debug: Removing unused variable reinterpret_biguint%25#1
debug: Removing unused variable reinterpret_biguint%26#1
debug: Removing unused variable reinterpret_biguint%27#1
debug: Removing unused variable reinterpret_biguint%28#1
debug: Removing unused variable reinterpret_biguint%29#1
debug: Removing unused variable reinterpret_biguint%30#1
debug: Removing unused variable reinterpret_biguint%31#1
debug: Removing unused variable reinterpret_biguint%32#1
debug: Removing unused variable reinterpret_biguint%33#1
debug: Removing unused variable reinterpret_biguint%34#1
debug: Removing unused variable reinterpret_biguint%35#1
debug: Removing unused variable reinterpret_biguint%36#1
debug: Removing unused variable reinterpret_biguint%37#1
debug: Removing unused variable reinterpret_biguint%38#1
debug: Removing unused variable reinterpret_biguint%39#1
debug: Removing unused variable reinterpret_biguint%40#1
debug: Removing unused variable reinterpret_biguint%41#1
debug: Removing unused variable reinterpret_biguint%42#1
debug: Removing unused variable reinterpret_biguint%43#1
debug: Removing unused variable reinterpret_biguint%44#1
debug: Removing unused variable reinterpret_biguint%45#1
debug: Removing unused variable reinterpret_biguint%46#1
debug: Removing unused variable reinterpret_biguint%47#1
debug: Removing unused variable reinterpret_biguint%48#1
debug: Removing unused variable reinterpret_biguint%49#1
debug: Removing unused variable reinterpret_biguint%50#1
debug: Removing unused variable reinterpret_biguint%51#1
debug: Removing unused variable reinterpret_biguint%52#1
debug: Removing unused variable reinterpret_biguint%53#1
debug: Removing unused variable reinterpret_biguint%54#1
debug: Removing unused variable reinterpret_biguint%55#1
debug: Removing unused variable reinterpret_biguint%56#1
debug: Removing unused variable reinterpret_biguint%57#1
debug: Removing unused variable reinterpret_biguint%58#1
debug: Removing unused variable reinterpret_biguint%59#1
debug: Removing unused variable reinterpret_biguint%60#1
debug: Removing unused variable reinterpret_biguint%61#1
debug: Removing unused variable reinterpret_biguint%62#1
debug: Removing unused variable reinterpret_biguint%63#1
debug: Removing unused variable reinterpret_biguint%64#1
debug: Removing unused variable reinterpret_biguint%65#1
debug: Removing unused variable reinterpret_biguint%66#1
debug: Removing unused variable reinterpret_biguint%67#1
debug: Removing unused variable reinterpret_biguint%68#1
debug: Removing unused variable reinterpret_biguint%69#1
debug: Removing unused variable reinterpret_biguint%70#1
debug: Removing unused variable reinterpret_biguint%71#1
debug: Removing unused variable reinterpret_biguint%72#1
debug: Removing unused variable reinterpret_biguint%73#1
debug: Removing unused variable reinterpret_biguint%74#1
debug: Removing unused variable reinterpret_biguint%75#1
debug: Removing unused variable reinterpret_biguint%76#1
debug: Removing unused variable reinterpret_biguint%77#1
debug: Removing unused variable reinterpret_biguint%78#1
debug: Removing unused variable reinterpret_biguint%79#1
debug: Removing unused variable reinterpret_biguint%80#1
debug: Removing unused variable reinterpret_biguint%81#1
debug: Removing unused variable reinterpret_biguint%82#1
debug: Removing unused variable reinterpret_biguint%83#1
debug: Removing unused variable one#2
debug: Removing unused variable two#2
debug: Removing unused variable one_uint64#2
debug: Removing unused variable one_biguint#2
debug: Removing unused variable two_uint64#2
debug: Removing unused variable two_biguint#2
debug: Removing unused variable reinterpret_biguint%0#2
debug: Removing unused variable reinterpret_biguint%1#2
debug: Removing unused variable reinterpret_biguint%2#2
debug: Removing unused variable reinterpret_biguint%3#2
debug: Removing unused variable reinterpret_biguint%4#2
debug: Removing unused variable reinterpret_biguint%5#2
debug: Removing unused variable reinterpret_biguint%6#2
debug: Removing unused variable reinterpret_biguint%7#2
debug: Removing unused variable reinterpret_biguint%8#2
debug: Removing unused variable reinterpret_biguint%9#2
debug: Removing unused variable reinterpret_biguint%10#2
debug: Removing unused variable reinterpret_biguint%11#2
debug: Removing unused variable reinterpret_biguint%12#2
debug: Removing unused variable reinterpret_biguint%13#2
debug: Removing unused variable reinterpret_biguint%14#2
debug: Removing unused variable reinterpret_biguint%15#2
debug: Removing unused variable reinterpret_biguint%16#2
debug: Removing unused variable reinterpret_biguint%17#2
debug: Removing unused variable reinterpret_biguint%18#2
debug: Removing unused variable reinterpret_biguint%19#2
debug: Removing unused variable reinterpret_biguint%20#2
debug: Removing unused variable reinterpret_biguint%21#2
debug: Removing unused variable reinterpret_biguint%22#2
debug: Removing unused variable reinterpret_biguint%23#2
debug: Removing unused variable reinterpret_biguint%24#2
debug: Removing unused variable reinterpret_biguint%25#2
debug: Removing unused variable reinterpret_biguint%26#2
debug: Removing unused variable reinterpret_biguint%27#2
debug: Removing unused variable reinterpret_biguint%28#2
debug: Removing unused variable reinterpret_biguint%29#2
debug: Removing unused variable reinterpret_biguint%30#2
debug: Removing unused variable reinterpret_biguint%31#2
debug: Removing unused variable reinterpret_biguint%32#2
debug: Removing unused variable reinterpret_biguint%33#2
debug: Removing unused variable reinterpret_biguint%34#2
debug: Removing unused variable reinterpret_biguint%35#2
debug: Removing unused variable reinterpret_biguint%36#2
debug: Removing unused variable reinterpret_biguint%37#2
debug: Removing unused variable reinterpret_biguint%38#2
debug: Removing unused variable reinterpret_biguint%39#2
debug: Removing unused variable reinterpret_biguint%40#2
debug: Removing unused variable reinterpret_biguint%41#2
debug: Removing unused variable reinterpret_biguint%42#2
debug: Removing unused variable reinterpret_biguint%43#2
debug: Removing unused variable reinterpret_biguint%44#2
debug: Removing unused variable reinterpret_biguint%45#2
debug: Removing unused variable reinterpret_biguint%46#2
debug: Removing unused variable reinterpret_biguint%47#2
debug: Removing unused variable reinterpret_biguint%48#2
debug: Removing unused variable reinterpret_biguint%49#2
debug: Removing unused variable reinterpret_biguint%50#2
debug: Removing unused variable reinterpret_biguint%51#2
debug: Removing unused variable reinterpret_biguint%52#2
debug: Removing unused variable reinterpret_biguint%53#2
debug: Removing unused variable reinterpret_biguint%54#2
debug: Removing unused variable reinterpret_biguint%55#2
debug: Removing unused variable reinterpret_biguint%56#2
debug: Removing unused variable reinterpret_biguint%57#2
debug: Removing unused variable reinterpret_biguint%58#2
debug: Removing unused variable reinterpret_biguint%59#2
debug: Removing unused variable reinterpret_biguint%60#2
debug: Removing unused variable reinterpret_biguint%61#2
debug: Removing unused variable reinterpret_biguint%62#2
debug: Removing unused variable reinterpret_biguint%63#2
debug: Removing unused variable reinterpret_biguint%64#2
debug: Removing unused variable reinterpret_biguint%65#2
debug: Removing unused variable reinterpret_biguint%66#2
debug: Removing unused variable reinterpret_biguint%67#2
debug: Removing unused variable reinterpret_biguint%68#2
debug: Removing unused variable reinterpret_biguint%69#2
debug: Removing unused variable reinterpret_biguint%70#2
debug: Removing unused variable reinterpret_biguint%71#2
debug: Removing unused variable reinterpret_biguint%72#2
debug: Removing unused variable reinterpret_biguint%73#2
debug: Removing unused variable reinterpret_biguint%74#2
debug: Removing unused variable reinterpret_biguint%75#2
debug: Removing unused variable reinterpret_biguint%76#2
debug: Removing unused variable reinterpret_biguint%77#2
debug: Removing unused variable reinterpret_biguint%78#2
debug: Removing unused variable reinterpret_biguint%79#2
debug: Removing unused variable reinterpret_biguint%80#2
debug: Removing unused variable reinterpret_biguint%81#2
debug: Removing unused variable reinterpret_biguint%82#2
debug: Removing unused variable reinterpret_biguint%83#2
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (b== 0x01 0x01) to 1u
debug: Simplified (b== 0x01 0x01) to 1u
debug: Simplified (b== 0x01 0x01) to 1u
debug: Simplified (b== 0x01 tmp%3#0) to 1u
debug: Simplified (b== 0x01 1b) to 1u
debug: Simplified (b== 0x01 0x02) to 0u
debug: Simplified (! 0u) to 1u
debug: Simplified (b== 0x01 0x0000000000000002) to 0u
debug: Simplified (! 0u) to 1u
debug: Simplified (b== 0x01 tmp%10#0) to 0u
debug: Simplified (! 0u) to 1u
debug: Simplified (b== 0x01 2b) to 0u
debug: Simplified (! 0u) to 1u
debug: Simplified (b!= 0x01 0x01) to 0u
debug: Simplified (! 0u) to 1u
debug: Simplified (b!= 0x01 0x01) to 0u
debug: Simplified (! 0u) to 1u
debug: Simplified (b!= 0x01 0x01) to 0u
debug: Simplified (! 0u) to 1u
debug: Simplified (b!= 0x01 tmp%21#0) to 0u
debug: Simplified (! 0u) to 1u
debug: Simplified (b!= 0x01 1b) to 0u
debug: Simplified (! 0u) to 1u
debug: Simplified (b!= 0x01 0x02) to 1u
debug: Simplified (b!= 0x01 0x0000000000000002) to 1u
debug: Simplified (b!= 0x01 tmp%28#0) to 1u
debug: Simplified (b!= 0x01 2b) to 1u
debug: Simplified (b<= 0x01 0x01) to 1u
debug: Simplified (b>= 0x01 0x01) to 1u
debug: Simplified (b<= 0x01 0x01) to 1u
debug: Simplified (b<= 0x01 tmp%34#0) to 1u
debug: Simplified (b<= 0x01 1b) to 1u
debug: Simplified (b<= 0x01 0x02) to 1u
debug: Simplified (b<= 0x01 0x0000000000000002) to 1u
debug: Simplified (b<= 0x01 tmp%39#0) to 1u
debug: Simplified (b<= 0x01 2b) to 1u
debug: Simplified (b< 0x01 0x01) to 0u
debug: Simplified (! 0u) to 1u
debug: Simplified (b> 0x01 0x01) to 0u
debug: Simplified (! 0u) to 1u
debug: Simplified (b< 0x01 0x01) to 0u
debug: Simplified (! 0u) to 1u
debug: Simplified (b< 0x01 tmp%48#0) to 0u
debug: Simplified (! 0u) to 1u
debug: Simplified (b< 0x01 1b) to 0u
debug: Simplified (! 0u) to 1u
debug: Simplified (b< 0x01 0x02) to 1u
debug: Simplified (b< 0x01 0x0000000000000002) to 1u
debug: Simplified (b< 0x01 tmp%55#0) to 1u
debug: Simplified (b< 0x01 2b) to 1u
debug: Simplified (b>= 0x01 0x01) to 1u
debug: Simplified (b<= 0x01 0x01) to 1u
debug: Simplified (b>= 0x01 0x01) to 1u
debug: Simplified (b>= 0x01 tmp%61#0) to 1u
debug: Simplified (b>= 0x01 1b) to 1u
debug: Simplified (b>= 0x01 0x02) to 0u
debug: Simplified (! 0u) to 1u
debug: Simplified (b>= 0x01 0x0000000000000002) to 0u
debug: Simplified (! 0u) to 1u
debug: Simplified (b>= 0x01 tmp%68#0) to 0u
debug: Simplified (! 0u) to 1u
debug: Simplified (b>= 0x01 2b) to 0u
debug: Simplified (! 0u) to 1u
debug: Simplified (b> 0x01 0x01) to 0u
debug: Simplified (! 0u) to 1u
debug: Simplified (b< 0x01 0x01) to 0u
debug: Simplified (! 0u) to 1u
debug: Simplified (b> 0x01 0x01) to 0u
debug: Simplified (! 0u) to 1u
debug: Simplified (b> 0x01 tmp%79#0) to 0u
debug: Simplified (! 0u) to 1u
debug: Simplified (b> 0x01 1b) to 0u
debug: Simplified (! 0u) to 1u
debug: Simplified (b> 0x01 0x02) to 0u
debug: Simplified (! 0u) to 1u
debug: Simplified (b> 0x01 0x0000000000000002) to 0u
debug: Simplified (! 0u) to 1u
debug: Simplified (b> 0x01 tmp%88#0) to 0u
debug: Simplified (! 0u) to 1u
debug: Simplified (b> 0x01 2b) to 0u
debug: Simplified (! 0u) to 1u
debug: Simplified (b== 0x01 0x01) to 1u
debug: Simplified (b== 0x01 0x01) to 1u
debug: Simplified (b== 0x01 0x01) to 1u
debug: Simplified (b== 0x01 tmp%3#1) to 1u
debug: Simplified (b== 0x01 1b) to 1u
debug: Simplified (b== 0x01 0x02) to 0u
debug: Simplified (! 0u) to 1u
debug: Simplified (b== 0x01 0x000000000000000000000000000000000000000000000000000000000000000002) to 0u
debug: Simplified (! 0u) to 1u
debug: Simplified (b== 0x01 tmp%10#1) to 0u
debug: Simplified (! 0u) to 1u
debug: Simplified (b== 0x01 2b) to 0u
debug: Simplified (! 0u) to 1u
debug: Simplified (b!= 0x01 0x01) to 0u
debug: Simplified (! 0u) to 1u
debug: Simplified (b!= 0x01 0x01) to 0u
debug: Simplified (! 0u) to 1u
debug: Simplified (b!= 0x01 0x01) to 0u
debug: Simplified (! 0u) to 1u
debug: Simplified (b!= 0x01 tmp%21#1) to 0u
debug: Simplified (! 0u) to 1u
debug: Simplified (b!= 0x01 1b) to 0u
debug: Simplified (! 0u) to 1u
debug: Simplified (b!= 0x01 0x02) to 1u
debug: Simplified (b!= 0x01 0x000000000000000000000000000000000000000000000000000000000000000002) to 1u
debug: Simplified (b!= 0x01 tmp%28#1) to 1u
debug: Simplified (b!= 0x01 2b) to 1u
debug: Simplified (b<= 0x01 0x01) to 1u
debug: Simplified (b>= 0x01 0x01) to 1u
debug: Simplified (b<= 0x01 0x01) to 1u
debug: Simplified (b<= 0x01 tmp%34#1) to 1u
debug: Simplified (b<= 0x01 1b) to 1u
debug: Simplified (b<= 0x01 0x02) to 1u
debug: Simplified (b<= 0x01 0x000000000000000000000000000000000000000000000000000000000000000002) to 1u
debug: Simplified (b<= 0x01 tmp%39#1) to 1u
debug: Simplified (b<= 0x01 2b) to 1u
debug: Simplified (b< 0x01 0x01) to 0u
debug: Simplified (! 0u) to 1u
debug: Simplified (b> 0x01 0x01) to 0u
debug: Simplified (! 0u) to 1u
debug: Simplified (b< 0x01 0x01) to 0u
debug: Simplified (! 0u) to 1u
debug: Simplified (b< 0x01 tmp%48#1) to 0u
debug: Simplified (! 0u) to 1u
debug: Simplified (b< 0x01 1b) to 0u
debug: Simplified (! 0u) to 1u
debug: Simplified (b< 0x01 0x02) to 1u
debug: Simplified (b< 0x01 0x000000000000000000000000000000000000000000000000000000000000000002) to 1u
debug: Simplified (b< 0x01 tmp%55#1) to 1u
debug: Simplified (b< 0x01 2b) to 1u
debug: Simplified (b>= 0x01 0x01) to 1u
debug: Simplified (b<= 0x01 0x01) to 1u
debug: Simplified (b>= 0x01 0x01) to 1u
debug: Simplified (b>= 0x01 tmp%61#1) to 1u
debug: Simplified (b>= 0x01 1b) to 1u
debug: Simplified (b>= 0x01 0x02) to 0u
debug: Simplified (! 0u) to 1u
debug: Simplified (b>= 0x01 0x000000000000000000000000000000000000000000000000000000000000000002) to 0u
debug: Simplified (! 0u) to 1u
debug: Simplified (b>= 0x01 tmp%68#1) to 0u
debug: Simplified (! 0u) to 1u
debug: Simplified (b>= 0x01 2b) to 0u
debug: Simplified (! 0u) to 1u
debug: Simplified (b> 0x01 0x01) to 0u
debug: Simplified (! 0u) to 1u
debug: Simplified (b< 0x01 0x01) to 0u
debug: Simplified (! 0u) to 1u
debug: Simplified (b> 0x01 0x01) to 0u
debug: Simplified (! 0u) to 1u
debug: Simplified (b> 0x01 tmp%79#1) to 0u
debug: Simplified (! 0u) to 1u
debug: Simplified (b> 0x01 1b) to 0u
debug: Simplified (! 0u) to 1u
debug: Simplified (b> 0x01 0x02) to 0u
debug: Simplified (! 0u) to 1u
debug: Simplified (b> 0x01 0x000000000000000000000000000000000000000000000000000000000000000002) to 0u
debug: Simplified (! 0u) to 1u
debug: Simplified (b> 0x01 tmp%88#1) to 0u
debug: Simplified (! 0u) to 1u
debug: Simplified (b> 0x01 2b) to 0u
debug: Simplified (! 0u) to 1u
debug: Simplified (b== 0x0000000000000000000000000000000000000000000000000000000000000001 0x0000000000000000000000000000000000000000000000000000000000000001) to 1u
debug: Simplified (b== 0x0000000000000000000000000000000000000000000000000000000000000001 0x0000000000000000000000000000000000000000000000000000000000000001) to 1u
debug: Simplified (b== 0x0000000000000000000000000000000000000000000000000000000000000001 0x0000000000000000000000000000000000000000000000000000000000000001) to 1u
debug: Simplified (b== 0x0000000000000000000000000000000000000000000000000000000000000001 tmp%3#2) to 1u
debug: Simplified (b== 0x0000000000000000000000000000000000000000000000000000000000000001 1b) to 1u
debug: Simplified (b== 0x0000000000000000000000000000000000000000000000000000000000000001 0x0000000000000000000000000000000000000000000000000000000000000002) to 0u
debug: Simplified (! 0u) to 1u
debug: Simplified (b== 0x0000000000000000000000000000000000000000000000000000000000000001 0x000000000000000000000000000000000000000000000000000000000000000002) to 0u
debug: Simplified (! 0u) to 1u
debug: Simplified (b== 0x0000000000000000000000000000000000000000000000000000000000000001 tmp%10#2) to 0u
debug: Simplified (! 0u) to 1u
debug: Simplified (b== 0x0000000000000000000000000000000000000000000000000000000000000001 2b) to 0u
debug: Simplified (! 0u) to 1u
debug: Simplified (b!= 0x0000000000000000000000000000000000000000000000000000000000000001 0x0000000000000000000000000000000000000000000000000000000000000001) to 0u
debug: Simplified (! 0u) to 1u
debug: Simplified (b!= 0x0000000000000000000000000000000000000000000000000000000000000001 0x0000000000000000000000000000000000000000000000000000000000000001) to 0u
debug: Simplified (! 0u) to 1u
debug: Simplified (b!= 0x0000000000000000000000000000000000000000000000000000000000000001 0x0000000000000000000000000000000000000000000000000000000000000001) to 0u
debug: Simplified (! 0u) to 1u
debug: Simplified (b!= 0x0000000000000000000000000000000000000000000000000000000000000001 tmp%21#2) to 0u
debug: Simplified (! 0u) to 1u
debug: Simplified (b!= 0x0000000000000000000000000000000000000000000000000000000000000001 1b) to 0u
debug: Simplified (! 0u) to 1u
debug: Simplified (b!= 0x0000000000000000000000000000000000000000000000000000000000000001 0x0000000000000000000000000000000000000000000000000000000000000002) to 1u
debug: Simplified (b!= 0x0000000000000000000000000000000000000000000000000000000000000001 0x000000000000000000000000000000000000000000000000000000000000000002) to 1u
debug: Simplified (b!= 0x0000000000000000000000000000000000000000000000000000000000000001 tmp%28#2) to 1u
debug: Simplified (b!= 0x0000000000000000000000000000000000000000000000000000000000000001 2b) to 1u
debug: Simplified (b<= 0x0000000000000000000000000000000000000000000000000000000000000001 0x0000000000000000000000000000000000000000000000000000000000000001) to 1u
debug: Simplified (b>= 0x0000000000000000000000000000000000000000000000000000000000000001 0x0000000000000000000000000000000000000000000000000000000000000001) to 1u
debug: Simplified (b<= 0x0000000000000000000000000000000000000000000000000000000000000001 0x0000000000000000000000000000000000000000000000000000000000000001) to 1u
debug: Simplified (b<= 0x0000000000000000000000000000000000000000000000000000000000000001 tmp%34#2) to 1u
debug: Simplified (b<= 0x0000000000000000000000000000000000000000000000000000000000000001 1b) to 1u
debug: Simplified (b<= 0x0000000000000000000000000000000000000000000000000000000000000001 0x0000000000000000000000000000000000000000000000000000000000000002) to 1u
debug: Simplified (b<= 0x0000000000000000000000000000000000000000000000000000000000000001 0x000000000000000000000000000000000000000000000000000000000000000002) to 1u
debug: Simplified (b<= 0x0000000000000000000000000000000000000000000000000000000000000001 tmp%39#2) to 1u
debug: Simplified (b<= 0x0000000000000000000000000000000000000000000000000000000000000001 2b) to 1u
debug: Simplified (b< 0x0000000000000000000000000000000000000000000000000000000000000001 0x0000000000000000000000000000000000000000000000000000000000000001) to 0u
debug: Simplified (! 0u) to 1u
debug: Simplified (b> 0x0000000000000000000000000000000000000000000000000000000000000001 0x0000000000000000000000000000000000000000000000000000000000000001) to 0u
debug: Simplified (! 0u) to 1u
debug: Simplified (b< 0x0000000000000000000000000000000000000000000000000000000000000001 0x0000000000000000000000000000000000000000000000000000000000000001) to 0u
debug: Simplified (! 0u) to 1u
debug: Simplified (b< 0x0000000000000000000000000000000000000000000000000000000000000001 tmp%48#2) to 0u
debug: Simplified (! 0u) to 1u
debug: Simplified (b< 0x0000000000000000000000000000000000000000000000000000000000000001 1b) to 0u
debug: Simplified (! 0u) to 1u
debug: Simplified (b< 0x0000000000000000000000000000000000000000000000000000000000000001 0x0000000000000000000000000000000000000000000000000000000000000002) to 1u
debug: Simplified (b< 0x0000000000000000000000000000000000000000000000000000000000000001 0x000000000000000000000000000000000000000000000000000000000000000002) to 1u
debug: Simplified (b< 0x0000000000000000000000000000000000000000000000000000000000000001 tmp%55#2) to 1u
debug: Simplified (b< 0x0000000000000000000000000000000000000000000000000000000000000001 2b) to 1u
debug: Simplified (b>= 0x0000000000000000000000000000000000000000000000000000000000000001 0x0000000000000000000000000000000000000000000000000000000000000001) to 1u
debug: Simplified (b<= 0x0000000000000000000000000000000000000000000000000000000000000001 0x0000000000000000000000000000000000000000000000000000000000000001) to 1u
debug: Simplified (b>= 0x0000000000000000000000000000000000000000000000000000000000000001 0x0000000000000000000000000000000000000000000000000000000000000001) to 1u
debug: Simplified (b>= 0x0000000000000000000000000000000000000000000000000000000000000001 tmp%61#2) to 1u
debug: Simplified (b>= 0x0000000000000000000000000000000000000000000000000000000000000001 1b) to 1u
debug: Simplified (b>= 0x0000000000000000000000000000000000000000000000000000000000000001 0x0000000000000000000000000000000000000000000000000000000000000002) to 0u
debug: Simplified (! 0u) to 1u
debug: Simplified (b>= 0x0000000000000000000000000000000000000000000000000000000000000001 0x000000000000000000000000000000000000000000000000000000000000000002) to 0u
debug: Simplified (! 0u) to 1u
debug: Simplified (b>= 0x0000000000000000000000000000000000000000000000000000000000000001 tmp%68#2) to 0u
debug: Simplified (! 0u) to 1u
debug: Simplified (b>= 0x0000000000000000000000000000000000000000000000000000000000000001 2b) to 0u
debug: Simplified (! 0u) to 1u
debug: Simplified (b> 0x0000000000000000000000000000000000000000000000000000000000000001 0x0000000000000000000000000000000000000000000000000000000000000001) to 0u
debug: Simplified (! 0u) to 1u
debug: Simplified (b< 0x0000000000000000000000000000000000000000000000000000000000000001 0x0000000000000000000000000000000000000000000000000000000000000001) to 0u
debug: Simplified (! 0u) to 1u
debug: Simplified (b> 0x0000000000000000000000000000000000000000000000000000000000000001 0x0000000000000000000000000000000000000000000000000000000000000001) to 0u
debug: Simplified (! 0u) to 1u
debug: Simplified (b> 0x0000000000000000000000000000000000000000000000000000000000000001 tmp%79#2) to 0u
debug: Simplified (! 0u) to 1u
debug: Simplified (b> 0x0000000000000000000000000000000000000000000000000000000000000001 1b) to 0u
debug: Simplified (! 0u) to 1u
debug: Simplified (b> 0x0000000000000000000000000000000000000000000000000000000000000001 0x0000000000000000000000000000000000000000000000000000000000000002) to 0u
debug: Simplified (! 0u) to 1u
debug: Simplified (b> 0x0000000000000000000000000000000000000000000000000000000000000001 0x000000000000000000000000000000000000000000000000000000000000000002) to 0u
debug: Simplified (! 0u) to 1u
debug: Simplified (b> 0x0000000000000000000000000000000000000000000000000000000000000001 tmp%88#2) to 0u
debug: Simplified (! 0u) to 1u
debug: Simplified (b> 0x0000000000000000000000000000000000000000000000000000000000000001 2b) to 0u
debug: Simplified (! 0u) to 1u
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@1 with block@0 in block@2
debug: Merged linear block@1 into block@0
debug: Replaced predecessor block@2 with block@0 in block@3
debug: Merged linear block@2 into block@0
debug: Replaced predecessor block@3 with block@0 in block@4
debug: Merged linear block@3 into block@0
debug: Replaced predecessor block@4 with block@0 in block@5
debug: Merged linear block@4 into block@0
debug: Replaced predecessor block@5 with block@0 in block@6
debug: Merged linear block@5 into block@0
debug: Merged linear block@6 into block@0
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Replacing redundant declaration let tmp%21#0: biguint = (itob 1u) with copy of existing registers (Register(source_location=arc4_numeric_comparisons/uint_n.py:29:11-28, ir_type=biguint, name='tmp%3', version=0),)
debug: Replacing redundant declaration let tmp%28#0: biguint = (itob 2u) with copy of existing registers (Register(source_location=arc4_numeric_comparisons/uint_n.py:33:16-33, ir_type=biguint, name='tmp%10', version=0),)
debug: Replacing redundant declaration let tmp%34#0: biguint = (itob 1u) with copy of existing registers (Register(source_location=arc4_numeric_comparisons/uint_n.py:29:11-28, ir_type=biguint, name='tmp%3', version=0),)
debug: Replacing redundant declaration let tmp%39#0: biguint = (itob 2u) with copy of existing registers (Register(source_location=arc4_numeric_comparisons/uint_n.py:33:16-33, ir_type=biguint, name='tmp%10', version=0),)
debug: Replacing redundant declaration let tmp%48#0: biguint = (itob 1u) with copy of existing registers (Register(source_location=arc4_numeric_comparisons/uint_n.py:29:11-28, ir_type=biguint, name='tmp%3', version=0),)
debug: Replacing redundant declaration let tmp%55#0: biguint = (itob 2u) with copy of existing registers (Register(source_location=arc4_numeric_comparisons/uint_n.py:33:16-33, ir_type=biguint, name='tmp%10', version=0),)
debug: Replacing redundant declaration let tmp%61#0: biguint = (itob 1u) with copy of existing registers (Register(source_location=arc4_numeric_comparisons/uint_n.py:29:11-28, ir_type=biguint, name='tmp%3', version=0),)
debug: Replacing redundant declaration let tmp%68#0: biguint = (itob 2u) with copy of existing registers (Register(source_location=arc4_numeric_comparisons/uint_n.py:33:16-33, ir_type=biguint, name='tmp%10', version=0),)
debug: Replacing redundant declaration let tmp%79#0: biguint = (itob 1u) with copy of existing registers (Register(source_location=arc4_numeric_comparisons/uint_n.py:29:11-28, ir_type=biguint, name='tmp%3', version=0),)
debug: Replacing redundant declaration let tmp%88#0: biguint = (itob 2u) with copy of existing registers (Register(source_location=arc4_numeric_comparisons/uint_n.py:33:16-33, ir_type=biguint, name='tmp%10', version=0),)
debug: Replacing redundant declaration let tmp%3#1: biguint = (itob 1u) with copy of existing registers (Register(source_location=arc4_numeric_comparisons/uint_n.py:29:11-28, ir_type=biguint, name='tmp%3', version=0),)
debug: Replacing redundant declaration let tmp%10#1: biguint = (itob 2u) with copy of existing registers (Register(source_location=arc4_numeric_comparisons/uint_n.py:33:16-33, ir_type=biguint, name='tmp%10', version=0),)
debug: Replacing redundant declaration let tmp%21#1: biguint = (itob 1u) with copy of existing registers (Register(source_location=arc4_numeric_comparisons/uint_n.py:29:11-28, ir_type=biguint, name='tmp%3', version=0),)
debug: Replacing redundant declaration let tmp%28#1: biguint = (itob 2u) with copy of existing registers (Register(source_location=arc4_numeric_comparisons/uint_n.py:33:16-33, ir_type=biguint, name='tmp%10', version=0),)
debug: Replacing redundant declaration let tmp%34#1: biguint = (itob 1u) with copy of existing registers (Register(source_location=arc4_numeric_comparisons/uint_n.py:29:11-28, ir_type=biguint, name='tmp%3', version=0),)
debug: Replacing redundant declaration let tmp%39#1: biguint = (itob 2u) with copy of existing registers (Register(source_location=arc4_numeric_comparisons/uint_n.py:33:16-33, ir_type=biguint, name='tmp%10', version=0),)
debug: Replacing redundant declaration let tmp%48#1: biguint = (itob 1u) with copy of existing registers (Register(source_location=arc4_numeric_comparisons/uint_n.py:29:11-28, ir_type=biguint, name='tmp%3', version=0),)
debug: Replacing redundant declaration let tmp%55#1: biguint = (itob 2u) with copy of existing registers (Register(source_location=arc4_numeric_comparisons/uint_n.py:33:16-33, ir_type=biguint, name='tmp%10', version=0),)
debug: Replacing redundant declaration let tmp%61#1: biguint = (itob 1u) with copy of existing registers (Register(source_location=arc4_numeric_comparisons/uint_n.py:29:11-28, ir_type=biguint, name='tmp%3', version=0),)
debug: Replacing redundant declaration let tmp%68#1: biguint = (itob 2u) with copy of existing registers (Register(source_location=arc4_numeric_comparisons/uint_n.py:33:16-33, ir_type=biguint, name='tmp%10', version=0),)
debug: Replacing redundant declaration let tmp%79#1: biguint = (itob 1u) with copy of existing registers (Register(source_location=arc4_numeric_comparisons/uint_n.py:29:11-28, ir_type=biguint, name='tmp%3', version=0),)
debug: Replacing redundant declaration let tmp%88#1: biguint = (itob 2u) with copy of existing registers (Register(source_location=arc4_numeric_comparisons/uint_n.py:33:16-33, ir_type=biguint, name='tmp%10', version=0),)
debug: Replacing redundant declaration let tmp%3#2: biguint = (itob 1u) with copy of existing registers (Register(source_location=arc4_numeric_comparisons/uint_n.py:29:11-28, ir_type=biguint, name='tmp%3', version=0),)
debug: Replacing redundant declaration let tmp%10#2: biguint = (itob 2u) with copy of existing registers (Register(source_location=arc4_numeric_comparisons/uint_n.py:33:16-33, ir_type=biguint, name='tmp%10', version=0),)
debug: Replacing redundant declaration let tmp%21#2: biguint = (itob 1u) with copy of existing registers (Register(source_location=arc4_numeric_comparisons/uint_n.py:29:11-28, ir_type=biguint, name='tmp%3', version=0),)
debug: Replacing redundant declaration let tmp%28#2: biguint = (itob 2u) with copy of existing registers (Register(source_location=arc4_numeric_comparisons/uint_n.py:33:16-33, ir_type=biguint, name='tmp%10', version=0),)
debug: Replacing redundant declaration let tmp%34#2: biguint = (itob 1u) with copy of existing registers (Register(source_location=arc4_numeric_comparisons/uint_n.py:29:11-28, ir_type=biguint, name='tmp%3', version=0),)
debug: Replacing redundant declaration let tmp%39#2: biguint = (itob 2u) with copy of existing registers (Register(source_location=arc4_numeric_comparisons/uint_n.py:33:16-33, ir_type=biguint, name='tmp%10', version=0),)
debug: Replacing redundant declaration let tmp%48#2: biguint = (itob 1u) with copy of existing registers (Register(source_location=arc4_numeric_comparisons/uint_n.py:29:11-28, ir_type=biguint, name='tmp%3', version=0),)
debug: Replacing redundant declaration let tmp%55#2: biguint = (itob 2u) with copy of existing registers (Register(source_location=arc4_numeric_comparisons/uint_n.py:33:16-33, ir_type=biguint, name='tmp%10', version=0),)
debug: Replacing redundant declaration let tmp%61#2: biguint = (itob 1u) with copy of existing registers (Register(source_location=arc4_numeric_comparisons/uint_n.py:29:11-28, ir_type=biguint, name='tmp%3', version=0),)
debug: Replacing redundant declaration let tmp%68#2: biguint = (itob 2u) with copy of existing registers (Register(source_location=arc4_numeric_comparisons/uint_n.py:33:16-33, ir_type=biguint, name='tmp%10', version=0),)
debug: Replacing redundant declaration let tmp%79#2: biguint = (itob 1u) with copy of existing registers (Register(source_location=arc4_numeric_comparisons/uint_n.py:29:11-28, ir_type=biguint, name='tmp%3', version=0),)
debug: Replacing redundant declaration let tmp%88#2: biguint = (itob 2u) with copy of existing registers (Register(source_location=arc4_numeric_comparisons/uint_n.py:33:16-33, ir_type=biguint, name='tmp%10', version=0),)
debug: Found equivalence set: tmp%3#0, tmp%21#0, tmp%34#0, tmp%48#0, tmp%61#0, tmp%79#0, tmp%3#1, tmp%21#1, tmp%34#1, tmp%48#1, tmp%61#1, tmp%79#1, tmp%3#2, tmp%21#2, tmp%34#2, tmp%48#2, tmp%61#2, tmp%79#2
debug: Found equivalence set: tmp%10#0, tmp%28#0, tmp%39#0, tmp%55#0, tmp%68#0, tmp%88#0, tmp%10#1, tmp%28#1, tmp%39#1, tmp%55#1, tmp%68#1, tmp%88#1, tmp%10#2, tmp%28#2, tmp%39#2, tmp%55#2, tmp%68#2, tmp%88#2
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizer: Repeated Extends Simplification
debug: Optimizing subroutine test_cases.arc4_numeric_comparisons.uint_n.check_both_uint_n
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: one#0, reinterpret_biguint%0#0, reinterpret_biguint%2#0, reinterpret_biguint%4#0, reinterpret_biguint%5#0, reinterpret_biguint%6#0, reinterpret_biguint%7#0, reinterpret_biguint%8#0, reinterpret_biguint%10#0, reinterpret_biguint%12#0, reinterpret_biguint%13#0, reinterpret_biguint%14#0, reinterpret_biguint%16#0, reinterpret_biguint%18#0, reinterpret_biguint%19#0, reinterpret_biguint%20#0, reinterpret_biguint%21#0, reinterpret_biguint%22#0, reinterpret_biguint%24#0, reinterpret_biguint%26#0, reinterpret_biguint%27#0, reinterpret_biguint%28#0, reinterpret_biguint%30#0, reinterpret_biguint%32#0, reinterpret_biguint%33#0, reinterpret_biguint%34#0, reinterpret_biguint%35#0, reinterpret_biguint%36#0, reinterpret_biguint%38#0, reinterpret_biguint%40#0, reinterpret_biguint%41#0, reinterpret_biguint%42#0, reinterpret_biguint%44#0, reinterpret_biguint%46#0, reinterpret_biguint%47#0, reinterpret_biguint%48#0, reinterpret_biguint%49#0, reinterpret_biguint%50#0, reinterpret_biguint%52#0, reinterpret_biguint%54#0, reinterpret_biguint%55#0, reinterpret_biguint%56#0, reinterpret_biguint%58#0, reinterpret_biguint%60#0, reinterpret_biguint%61#0, reinterpret_biguint%62#0, reinterpret_biguint%63#0, reinterpret_biguint%64#0, reinterpret_biguint%66#0, reinterpret_biguint%68#0, reinterpret_biguint%69#0, reinterpret_biguint%70#0, reinterpret_biguint%72#0, reinterpret_biguint%74#0, reinterpret_biguint%75#0, reinterpret_biguint%76#0, reinterpret_biguint%77#0, reinterpret_biguint%78#0, reinterpret_biguint%80#0, reinterpret_biguint%82#0, reinterpret_biguint%83#0
debug: Found equivalence set: two#0, reinterpret_biguint%11#0, reinterpret_biguint%25#0, reinterpret_biguint%39#0, reinterpret_biguint%53#0, reinterpret_biguint%67#0, reinterpret_biguint%81#0
debug: Copy propagation made 66 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable one_uint64#0
debug: Removing unused variable one_biguint#0
debug: Removing unused variable two_uint64#0
debug: Removing unused variable two_biguint#0
debug: Removing unused variable reinterpret_biguint%1#0
debug: Removing unused variable reinterpret_biguint%3#0
debug: Removing unused variable reinterpret_biguint%9#0
debug: Removing unused variable reinterpret_biguint%15#0
debug: Removing unused variable reinterpret_biguint%17#0
debug: Removing unused variable reinterpret_biguint%23#0
debug: Removing unused variable reinterpret_biguint%29#0
debug: Removing unused variable reinterpret_biguint%31#0
debug: Removing unused variable reinterpret_biguint%37#0
debug: Removing unused variable reinterpret_biguint%43#0
debug: Removing unused variable reinterpret_biguint%45#0
debug: Removing unused variable reinterpret_biguint%51#0
debug: Removing unused variable reinterpret_biguint%57#0
debug: Removing unused variable reinterpret_biguint%59#0
debug: Removing unused variable reinterpret_biguint%65#0
debug: Removing unused variable reinterpret_biguint%71#0
debug: Removing unused variable reinterpret_biguint%73#0
debug: Removing unused variable reinterpret_biguint%79#0
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (b== one#0 one#0) to 1u
debug: Simplified (b!= one#0 one#0) to 0u
debug: Simplified (! 0u) to 1u
debug: Simplified (b<= one#0 one#0) to 1u
debug: Simplified (b< one#0 one#0) to 0u
debug: Simplified (! 0u) to 1u
debug: Simplified (b>= one#0 one#0) to 1u
debug: Simplified (b> one#0 one#0) to 0u
debug: Simplified (! 0u) to 1u
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Replacing redundant declaration let tmp%1#0: bool = (b== one#0 0x01) with copy of existing registers (Register(source_location=arc4_numeric_comparisons/uint_n.py:26:11-19, ir_type=bool, name='tmp%0', version=0),)
debug: Replacing redundant declaration let tmp%17#0: bool = (b!= one#0 0x01) with copy of existing registers (Register(source_location=arc4_numeric_comparisons/uint_n.py:36:16-24, ir_type=bool, name='tmp%15', version=0),)
debug: Replacing redundant declaration let tmp%21#0: biguint = (itob 1u) with copy of existing registers (Register(source_location=arc4_numeric_comparisons/uint_n.py:29:11-28, ir_type=biguint, name='tmp%3', version=0),)
debug: Replacing redundant declaration let tmp%28#0: biguint = (itob 2u) with copy of existing registers (Register(source_location=arc4_numeric_comparisons/uint_n.py:33:16-33, ir_type=biguint, name='tmp%10', version=0),)
debug: Replacing redundant declaration let tmp%34#0: biguint = (itob 1u) with copy of existing registers (Register(source_location=arc4_numeric_comparisons/uint_n.py:29:11-28, ir_type=biguint, name='tmp%3', version=0),)
debug: Replacing redundant declaration let tmp%39#0: biguint = (itob 2u) with copy of existing registers (Register(source_location=arc4_numeric_comparisons/uint_n.py:33:16-33, ir_type=biguint, name='tmp%10', version=0),)
debug: Replacing redundant declaration let tmp%48#0: biguint = (itob 1u) with copy of existing registers (Register(source_location=arc4_numeric_comparisons/uint_n.py:29:11-28, ir_type=biguint, name='tmp%3', version=0),)
debug: Replacing redundant declaration let tmp%55#0: biguint = (itob 2u) with copy of existing registers (Register(source_location=arc4_numeric_comparisons/uint_n.py:33:16-33, ir_type=biguint, name='tmp%10', version=0),)
debug: Replacing redundant declaration let tmp%58#0: bool = (b>= one#0 0x01) with copy of existing registers (Register(source_location=arc4_numeric_comparisons/uint_n.py:47:11-19, ir_type=bool, name='tmp%32', version=0),)
debug: Replacing redundant declaration let tmp%59#0: bool = (b<= one#0 0x01) with copy of existing registers (Register(source_location=arc4_numeric_comparisons/uint_n.py:46:11-19, ir_type=bool, name='tmp%31', version=0),)
debug: Replacing redundant declaration let tmp%61#0: biguint = (itob 1u) with copy of existing registers (Register(source_location=arc4_numeric_comparisons/uint_n.py:29:11-28, ir_type=biguint, name='tmp%3', version=0),)
debug: Replacing redundant declaration let tmp%68#0: biguint = (itob 2u) with copy of existing registers (Register(source_location=arc4_numeric_comparisons/uint_n.py:33:16-33, ir_type=biguint, name='tmp%10', version=0),)
debug: Replacing redundant declaration let tmp%73#0: bool = (b> one#0 0x01) with copy of existing registers (Register(source_location=arc4_numeric_comparisons/uint_n.py:57:16-23, ir_type=bool, name='tmp%44', version=0),)
debug: Replacing redundant declaration let tmp%75#0: bool = (b< one#0 0x01) with copy of existing registers (Register(source_location=arc4_numeric_comparisons/uint_n.py:56:16-23, ir_type=bool, name='tmp%42', version=0),)
debug: Replacing redundant declaration let tmp%79#0: biguint = (itob 1u) with copy of existing registers (Register(source_location=arc4_numeric_comparisons/uint_n.py:29:11-28, ir_type=biguint, name='tmp%3', version=0),)
debug: Replacing redundant declaration let tmp%88#0: biguint = (itob 2u) with copy of existing registers (Register(source_location=arc4_numeric_comparisons/uint_n.py:33:16-33, ir_type=biguint, name='tmp%10', version=0),)
debug: Found equivalence set: tmp%0#0, tmp%1#0
debug: Found equivalence set: tmp%15#0, tmp%17#0
debug: Found equivalence set: tmp%3#0, tmp%21#0, tmp%34#0, tmp%48#0, tmp%61#0, tmp%79#0
debug: Found equivalence set: tmp%10#0, tmp%28#0, tmp%39#0, tmp%55#0, tmp%68#0, tmp%88#0
debug: Found equivalence set: tmp%32#0, tmp%58#0
debug: Found equivalence set: tmp%31#0, tmp%59#0
debug: Found equivalence set: tmp%44#0, tmp%73#0
debug: Found equivalence set: tmp%42#0, tmp%75#0
debug: Copy propagation made 16 modifications
debug: Removing redundant assert of tmp%0#0
debug: Replacing redundant declaration let tmp%18#0: bool = (! tmp%15#0) with copy of existing registers (Register(source_location=arc4_numeric_comparisons/uint_n.py:36:11-25, ir_type=bool, name='tmp%16', version=0),)
debug: Removing redundant assert of tmp%32#0
debug: Removing redundant assert of tmp%31#0
debug: Replacing redundant declaration let tmp%74#0: bool = (! tmp%44#0) with copy of existing registers (Register(source_location=arc4_numeric_comparisons/uint_n.py:57:11-24, ir_type=bool, name='tmp%45', version=0),)
debug: Replacing redundant declaration let tmp%76#0: bool = (! tmp%42#0) with copy of existing registers (Register(source_location=arc4_numeric_comparisons/uint_n.py:56:11-24, ir_type=bool, name='tmp%43', version=0),)
debug: Found equivalence set: tmp%16#0, tmp%18#0
debug: Found equivalence set: tmp%45#0, tmp%74#0
debug: Found equivalence set: tmp%43#0, tmp%76#0
debug: Copy propagation made 3 modifications
debug: Removing redundant assert of tmp%16#0
debug: Removing redundant assert of tmp%45#0
debug: Removing redundant assert of tmp%43#0
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizer: Repeated Extends Simplification
debug: Optimizing subroutine test_cases.arc4_numeric_comparisons.uint_n.check_mixed
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: one#0, reinterpret_biguint%0#0, reinterpret_biguint%2#0, reinterpret_biguint%4#0, reinterpret_biguint%5#0, reinterpret_biguint%6#0, reinterpret_biguint%7#0, reinterpret_biguint%8#0, reinterpret_biguint%10#0, reinterpret_biguint%12#0, reinterpret_biguint%13#0, reinterpret_biguint%14#0, reinterpret_biguint%16#0, reinterpret_biguint%18#0, reinterpret_biguint%19#0, reinterpret_biguint%20#0, reinterpret_biguint%21#0, reinterpret_biguint%22#0, reinterpret_biguint%24#0, reinterpret_biguint%26#0, reinterpret_biguint%27#0, reinterpret_biguint%28#0, reinterpret_biguint%30#0, reinterpret_biguint%32#0, reinterpret_biguint%33#0, reinterpret_biguint%34#0, reinterpret_biguint%35#0, reinterpret_biguint%36#0, reinterpret_biguint%38#0, reinterpret_biguint%40#0, reinterpret_biguint%41#0, reinterpret_biguint%42#0, reinterpret_biguint%44#0, reinterpret_biguint%46#0, reinterpret_biguint%47#0, reinterpret_biguint%48#0, reinterpret_biguint%49#0, reinterpret_biguint%50#0, reinterpret_biguint%52#0, reinterpret_biguint%54#0, reinterpret_biguint%55#0, reinterpret_biguint%56#0, reinterpret_biguint%58#0, reinterpret_biguint%60#0, reinterpret_biguint%61#0, reinterpret_biguint%62#0, reinterpret_biguint%63#0, reinterpret_biguint%64#0, reinterpret_biguint%66#0, reinterpret_biguint%68#0, reinterpret_biguint%69#0, reinterpret_biguint%70#0, reinterpret_biguint%72#0, reinterpret_biguint%74#0, reinterpret_biguint%75#0, reinterpret_biguint%76#0, reinterpret_biguint%77#0, reinterpret_biguint%78#0, reinterpret_biguint%80#0, reinterpret_biguint%82#0, reinterpret_biguint%83#0
debug: Found equivalence set: two#0, reinterpret_biguint%11#0, reinterpret_biguint%25#0, reinterpret_biguint%39#0, reinterpret_biguint%53#0, reinterpret_biguint%67#0, reinterpret_biguint%81#0
debug: Copy propagation made 66 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable one_uint64#0
debug: Removing unused variable one_biguint#0
debug: Removing unused variable two_uint64#0
debug: Removing unused variable two_biguint#0
debug: Removing unused variable reinterpret_biguint%1#0
debug: Removing unused variable reinterpret_biguint%3#0
debug: Removing unused variable reinterpret_biguint%9#0
debug: Removing unused variable reinterpret_biguint%15#0
debug: Removing unused variable reinterpret_biguint%17#0
debug: Removing unused variable reinterpret_biguint%23#0
debug: Removing unused variable reinterpret_biguint%29#0
debug: Removing unused variable reinterpret_biguint%31#0
debug: Removing unused variable reinterpret_biguint%37#0
debug: Removing unused variable reinterpret_biguint%43#0
debug: Removing unused variable reinterpret_biguint%45#0
debug: Removing unused variable reinterpret_biguint%51#0
debug: Removing unused variable reinterpret_biguint%57#0
debug: Removing unused variable reinterpret_biguint%59#0
debug: Removing unused variable reinterpret_biguint%65#0
debug: Removing unused variable reinterpret_biguint%71#0
debug: Removing unused variable reinterpret_biguint%73#0
debug: Removing unused variable reinterpret_biguint%79#0
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (b== one#0 one#0) to 1u
debug: Simplified (b!= one#0 one#0) to 0u
debug: Simplified (! 0u) to 1u
debug: Simplified (b<= one#0 one#0) to 1u
debug: Simplified (b< one#0 one#0) to 0u
debug: Simplified (! 0u) to 1u
debug: Simplified (b>= one#0 one#0) to 1u
debug: Simplified (b> one#0 one#0) to 0u
debug: Simplified (! 0u) to 1u
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Replacing redundant declaration let tmp%1#0: bool = (b== one#0 0x01) with copy of existing registers (Register(source_location=arc4_numeric_comparisons/uint_n.py:95:11-19, ir_type=bool, name='tmp%0', version=0),)
debug: Replacing redundant declaration let tmp%17#0: bool = (b!= one#0 0x01) with copy of existing registers (Register(source_location=arc4_numeric_comparisons/uint_n.py:105:16-24, ir_type=bool, name='tmp%15', version=0),)
debug: Replacing redundant declaration let tmp%21#0: biguint = (itob 1u) with copy of existing registers (Register(source_location=arc4_numeric_comparisons/uint_n.py:98:11-28, ir_type=biguint, name='tmp%3', version=0),)
debug: Replacing redundant declaration let tmp%28#0: biguint = (itob 2u) with copy of existing registers (Register(source_location=arc4_numeric_comparisons/uint_n.py:102:16-33, ir_type=biguint, name='tmp%10', version=0),)
debug: Replacing redundant declaration let tmp%34#0: biguint = (itob 1u) with copy of existing registers (Register(source_location=arc4_numeric_comparisons/uint_n.py:98:11-28, ir_type=biguint, name='tmp%3', version=0),)
debug: Replacing redundant declaration let tmp%39#0: biguint = (itob 2u) with copy of existing registers (Register(source_location=arc4_numeric_comparisons/uint_n.py:102:16-33, ir_type=biguint, name='tmp%10', version=0),)
debug: Replacing redundant declaration let tmp%48#0: biguint = (itob 1u) with copy of existing registers (Register(source_location=arc4_numeric_comparisons/uint_n.py:98:11-28, ir_type=biguint, name='tmp%3', version=0),)
debug: Replacing redundant declaration let tmp%55#0: biguint = (itob 2u) with copy of existing registers (Register(source_location=arc4_numeric_comparisons/uint_n.py:102:16-33, ir_type=biguint, name='tmp%10', version=0),)
debug: Replacing redundant declaration let tmp%58#0: bool = (b>= one#0 0x01) with copy of existing registers (Register(source_location=arc4_numeric_comparisons/uint_n.py:116:11-19, ir_type=bool, name='tmp%32', version=0),)
debug: Replacing redundant declaration let tmp%59#0: bool = (b<= one#0 0x01) with copy of existing registers (Register(source_location=arc4_numeric_comparisons/uint_n.py:115:11-19, ir_type=bool, name='tmp%31', version=0),)
debug: Replacing redundant declaration let tmp%61#0: biguint = (itob 1u) with copy of existing registers (Register(source_location=arc4_numeric_comparisons/uint_n.py:98:11-28, ir_type=biguint, name='tmp%3', version=0),)
debug: Replacing redundant declaration let tmp%68#0: biguint = (itob 2u) with copy of existing registers (Register(source_location=arc4_numeric_comparisons/uint_n.py:102:16-33, ir_type=biguint, name='tmp%10', version=0),)
debug: Replacing redundant declaration let tmp%73#0: bool = (b> one#0 0x01) with copy of existing registers (Register(source_location=arc4_numeric_comparisons/uint_n.py:126:16-23, ir_type=bool, name='tmp%44', version=0),)
debug: Replacing redundant declaration let tmp%75#0: bool = (b< one#0 0x01) with copy of existing registers (Register(source_location=arc4_numeric_comparisons/uint_n.py:125:16-23, ir_type=bool, name='tmp%42', version=0),)
debug: Replacing redundant declaration let tmp%79#0: biguint = (itob 1u) with copy of existing registers (Register(source_location=arc4_numeric_comparisons/uint_n.py:98:11-28, ir_type=biguint, name='tmp%3', version=0),)
debug: Replacing redundant declaration let tmp%88#0: biguint = (itob 2u) with copy of existing registers (Register(source_location=arc4_numeric_comparisons/uint_n.py:102:16-33, ir_type=biguint, name='tmp%10', version=0),)
debug: Found equivalence set: tmp%0#0, tmp%1#0
debug: Found equivalence set: tmp%15#0, tmp%17#0
debug: Found equivalence set: tmp%3#0, tmp%21#0, tmp%34#0, tmp%48#0, tmp%61#0, tmp%79#0
debug: Found equivalence set: tmp%10#0, tmp%28#0, tmp%39#0, tmp%55#0, tmp%68#0, tmp%88#0
debug: Found equivalence set: tmp%32#0, tmp%58#0
debug: Found equivalence set: tmp%31#0, tmp%59#0
debug: Found equivalence set: tmp%44#0, tmp%73#0
debug: Found equivalence set: tmp%42#0, tmp%75#0
debug: Copy propagation made 16 modifications
debug: Removing redundant assert of tmp%0#0
debug: Replacing redundant declaration let tmp%18#0: bool = (! tmp%15#0) with copy of existing registers (Register(source_location=arc4_numeric_comparisons/uint_n.py:105:11-25, ir_type=bool, name='tmp%16', version=0),)
debug: Removing redundant assert of tmp%32#0
debug: Removing redundant assert of tmp%31#0
debug: Replacing redundant declaration let tmp%74#0: bool = (! tmp%44#0) with copy of existing registers (Register(source_location=arc4_numeric_comparisons/uint_n.py:126:11-24, ir_type=bool, name='tmp%45', version=0),)
debug: Replacing redundant declaration let tmp%76#0: bool = (! tmp%42#0) with copy of existing registers (Register(source_location=arc4_numeric_comparisons/uint_n.py:125:11-24, ir_type=bool, name='tmp%43', version=0),)
debug: Found equivalence set: tmp%16#0, tmp%18#0
debug: Found equivalence set: tmp%45#0, tmp%74#0
debug: Found equivalence set: tmp%43#0, tmp%76#0
debug: Copy propagation made 3 modifications
debug: Removing redundant assert of tmp%16#0
debug: Removing redundant assert of tmp%45#0
debug: Removing redundant assert of tmp%43#0
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizer: Repeated Extends Simplification
debug: Optimizing subroutine test_cases.arc4_numeric_comparisons.uint_n.check_both_big_uint_n
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: one#0, reinterpret_biguint%0#0, reinterpret_biguint%2#0, reinterpret_biguint%4#0, reinterpret_biguint%5#0, reinterpret_biguint%6#0, reinterpret_biguint%7#0, reinterpret_biguint%8#0, reinterpret_biguint%10#0, reinterpret_biguint%12#0, reinterpret_biguint%13#0, reinterpret_biguint%14#0, reinterpret_biguint%16#0, reinterpret_biguint%18#0, reinterpret_biguint%19#0, reinterpret_biguint%20#0, reinterpret_biguint%21#0, reinterpret_biguint%22#0, reinterpret_biguint%24#0, reinterpret_biguint%26#0, reinterpret_biguint%27#0, reinterpret_biguint%28#0, reinterpret_biguint%30#0, reinterpret_biguint%32#0, reinterpret_biguint%33#0, reinterpret_biguint%34#0, reinterpret_biguint%35#0, reinterpret_biguint%36#0, reinterpret_biguint%38#0, reinterpret_biguint%40#0, reinterpret_biguint%41#0, reinterpret_biguint%42#0, reinterpret_biguint%44#0, reinterpret_biguint%46#0, reinterpret_biguint%47#0, reinterpret_biguint%48#0, reinterpret_biguint%49#0, reinterpret_biguint%50#0, reinterpret_biguint%52#0, reinterpret_biguint%54#0, reinterpret_biguint%55#0, reinterpret_biguint%56#0, reinterpret_biguint%58#0, reinterpret_biguint%60#0, reinterpret_biguint%61#0, reinterpret_biguint%62#0, reinterpret_biguint%63#0, reinterpret_biguint%64#0, reinterpret_biguint%66#0, reinterpret_biguint%68#0, reinterpret_biguint%69#0, reinterpret_biguint%70#0, reinterpret_biguint%72#0, reinterpret_biguint%74#0, reinterpret_biguint%75#0, reinterpret_biguint%76#0, reinterpret_biguint%77#0, reinterpret_biguint%78#0, reinterpret_biguint%80#0, reinterpret_biguint%82#0, reinterpret_biguint%83#0
debug: Found equivalence set: two#0, reinterpret_biguint%11#0, reinterpret_biguint%25#0, reinterpret_biguint%39#0, reinterpret_biguint%53#0, reinterpret_biguint%67#0, reinterpret_biguint%81#0
debug: Copy propagation made 66 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable one_uint64#0
debug: Removing unused variable one_biguint#0
debug: Removing unused variable two_uint64#0
debug: Removing unused variable two_biguint#0
debug: Removing unused variable reinterpret_biguint%1#0
debug: Removing unused variable reinterpret_biguint%3#0
debug: Removing unused variable reinterpret_biguint%9#0
debug: Removing unused variable reinterpret_biguint%15#0
debug: Removing unused variable reinterpret_biguint%17#0
debug: Removing unused variable reinterpret_biguint%23#0
debug: Removing unused variable reinterpret_biguint%29#0
debug: Removing unused variable reinterpret_biguint%31#0
debug: Removing unused variable reinterpret_biguint%37#0
debug: Removing unused variable reinterpret_biguint%43#0
debug: Removing unused variable reinterpret_biguint%45#0
debug: Removing unused variable reinterpret_biguint%51#0
debug: Removing unused variable reinterpret_biguint%57#0
debug: Removing unused variable reinterpret_biguint%59#0
debug: Removing unused variable reinterpret_biguint%65#0
debug: Removing unused variable reinterpret_biguint%71#0
debug: Removing unused variable reinterpret_biguint%73#0
debug: Removing unused variable reinterpret_biguint%79#0
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (b== one#0 one#0) to 1u
debug: Simplified (b!= one#0 one#0) to 0u
debug: Simplified (! 0u) to 1u
debug: Simplified (b<= one#0 one#0) to 1u
debug: Simplified (b< one#0 one#0) to 0u
debug: Simplified (! 0u) to 1u
debug: Simplified (b>= one#0 one#0) to 1u
debug: Simplified (b> one#0 one#0) to 0u
debug: Simplified (! 0u) to 1u
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Replacing redundant declaration let tmp%1#0: bool = (b== one#0 0x0000000000000000000000000000000000000000000000000000000000000001) with copy of existing registers (Register(source_location=arc4_numeric_comparisons/uint_n.py:164:11-19, ir_type=bool, name='tmp%0', version=0),)
debug: Replacing redundant declaration let tmp%17#0: bool = (b!= one#0 0x0000000000000000000000000000000000000000000000000000000000000001) with copy of existing registers (Register(source_location=arc4_numeric_comparisons/uint_n.py:174:16-24, ir_type=bool, name='tmp%15', version=0),)
debug: Replacing redundant declaration let tmp%21#0: biguint = (itob 1u) with copy of existing registers (Register(source_location=arc4_numeric_comparisons/uint_n.py:167:11-28, ir_type=biguint, name='tmp%3', version=0),)
debug: Replacing redundant declaration let tmp%28#0: biguint = (itob 2u) with copy of existing registers (Register(source_location=arc4_numeric_comparisons/uint_n.py:171:16-33, ir_type=biguint, name='tmp%10', version=0),)
debug: Replacing redundant declaration let tmp%34#0: biguint = (itob 1u) with copy of existing registers (Register(source_location=arc4_numeric_comparisons/uint_n.py:167:11-28, ir_type=biguint, name='tmp%3', version=0),)
debug: Replacing redundant declaration let tmp%39#0: biguint = (itob 2u) with copy of existing registers (Register(source_location=arc4_numeric_comparisons/uint_n.py:171:16-33, ir_type=biguint, name='tmp%10', version=0),)
debug: Replacing redundant declaration let tmp%48#0: biguint = (itob 1u) with copy of existing registers (Register(source_location=arc4_numeric_comparisons/uint_n.py:167:11-28, ir_type=biguint, name='tmp%3', version=0),)
debug: Replacing redundant declaration let tmp%55#0: biguint = (itob 2u) with copy of existing registers (Register(source_location=arc4_numeric_comparisons/uint_n.py:171:16-33, ir_type=biguint, name='tmp%10', version=0),)
debug: Replacing redundant declaration let tmp%58#0: bool = (b>= one#0 0x0000000000000000000000000000000000000000000000000000000000000001) with copy of existing registers (Register(source_location=arc4_numeric_comparisons/uint_n.py:185:11-19, ir_type=bool, name='tmp%32', version=0),)
debug: Replacing redundant declaration let tmp%59#0: bool = (b<= one#0 0x0000000000000000000000000000000000000000000000000000000000000001) with copy of existing registers (Register(source_location=arc4_numeric_comparisons/uint_n.py:184:11-19, ir_type=bool, name='tmp%31', version=0),)
debug: Replacing redundant declaration let tmp%61#0: biguint = (itob 1u) with copy of existing registers (Register(source_location=arc4_numeric_comparisons/uint_n.py:167:11-28, ir_type=biguint, name='tmp%3', version=0),)
debug: Replacing redundant declaration let tmp%68#0: biguint = (itob 2u) with copy of existing registers (Register(source_location=arc4_numeric_comparisons/uint_n.py:171:16-33, ir_type=biguint, name='tmp%10', version=0),)
debug: Replacing redundant declaration let tmp%73#0: bool = (b> one#0 0x0000000000000000000000000000000000000000000000000000000000000001) with copy of existing registers (Register(source_location=arc4_numeric_comparisons/uint_n.py:195:16-23, ir_type=bool, name='tmp%44', version=0),)
debug: Replacing redundant declaration let tmp%75#0: bool = (b< one#0 0x0000000000000000000000000000000000000000000000000000000000000001) with copy of existing registers (Register(source_location=arc4_numeric_comparisons/uint_n.py:194:16-23, ir_type=bool, name='tmp%42', version=0),)
debug: Replacing redundant declaration let tmp%79#0: biguint = (itob 1u) with copy of existing registers (Register(source_location=arc4_numeric_comparisons/uint_n.py:167:11-28, ir_type=biguint, name='tmp%3', version=0),)
debug: Replacing redundant declaration let tmp%88#0: biguint = (itob 2u) with copy of existing registers (Register(source_location=arc4_numeric_comparisons/uint_n.py:171:16-33, ir_type=biguint, name='tmp%10', version=0),)
debug: Found equivalence set: tmp%0#0, tmp%1#0
debug: Found equivalence set: tmp%15#0, tmp%17#0
debug: Found equivalence set: tmp%3#0, tmp%21#0, tmp%34#0, tmp%48#0, tmp%61#0, tmp%79#0
debug: Found equivalence set: tmp%10#0, tmp%28#0, tmp%39#0, tmp%55#0, tmp%68#0, tmp%88#0
debug: Found equivalence set: tmp%32#0, tmp%58#0
debug: Found equivalence set: tmp%31#0, tmp%59#0
debug: Found equivalence set: tmp%44#0, tmp%73#0
debug: Found equivalence set: tmp%42#0, tmp%75#0
debug: Copy propagation made 16 modifications
debug: Removing redundant assert of tmp%0#0
debug: Replacing redundant declaration let tmp%18#0: bool = (! tmp%15#0) with copy of existing registers (Register(source_location=arc4_numeric_comparisons/uint_n.py:174:11-25, ir_type=bool, name='tmp%16', version=0),)
debug: Removing redundant assert of tmp%32#0
debug: Removing redundant assert of tmp%31#0
debug: Replacing redundant declaration let tmp%74#0: bool = (! tmp%44#0) with copy of existing registers (Register(source_location=arc4_numeric_comparisons/uint_n.py:195:11-24, ir_type=bool, name='tmp%45', version=0),)
debug: Replacing redundant declaration let tmp%76#0: bool = (! tmp%42#0) with copy of existing registers (Register(source_location=arc4_numeric_comparisons/uint_n.py:194:11-24, ir_type=bool, name='tmp%43', version=0),)
debug: Found equivalence set: tmp%16#0, tmp%18#0
debug: Found equivalence set: tmp%45#0, tmp%74#0
debug: Found equivalence set: tmp%43#0, tmp%76#0
debug: Copy propagation made 3 modifications
debug: Removing redundant assert of tmp%16#0
debug: Removing redundant assert of tmp%45#0
debug: Removing redundant assert of tmp%43#0
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizer: Repeated Extends Simplification
debug: removing unused subroutine test_cases.arc4_numeric_comparisons.uint_n.check_both_uint_n
debug: removing unused subroutine test_cases.arc4_numeric_comparisons.uint_n.check_mixed
debug: removing unused subroutine test_cases.arc4_numeric_comparisons.uint_n.check_both_big_uint_n
debug: Unused subroutines removed
debug: Begin optimization pass 2/100
debug: Optimizing subroutine test_cases.arc4_numeric_comparisons.uint_n.UIntNOrdering.approval_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable tmp%0#0
debug: Removing unused variable tmp%1#0
debug: Removing unused variable tmp%2#0
debug: Removing unused variable tmp%3#0
debug: Removing unused variable tmp%4#0
debug: Removing unused variable tmp%5#0
debug: Removing unused variable tmp%6#0
debug: Removing unused variable tmp%7#0
debug: Removing unused variable tmp%8#0
debug: Removing unused variable tmp%9#0
debug: Removing unused variable tmp%10#0
debug: Removing unused variable tmp%11#0
debug: Removing unused variable tmp%12#0
debug: Removing unused variable tmp%13#0
debug: Removing unused variable tmp%14#0
debug: Removing unused variable tmp%15#0
debug: Removing unused variable tmp%16#0
debug: Removing unused variable tmp%17#0
debug: Removing unused variable tmp%18#0
debug: Removing unused variable tmp%19#0
debug: Removing unused variable tmp%20#0
debug: Removing unused variable tmp%22#0
debug: Removing unused variable tmp%23#0
debug: Removing unused variable tmp%24#0
debug: Removing unused variable tmp%25#0
debug: Removing unused variable tmp%26#0
debug: Removing unused variable tmp%27#0
debug: Removing unused variable tmp%29#0
debug: Removing unused variable tmp%30#0
debug: Removing unused variable tmp%31#0
debug: Removing unused variable tmp%32#0
debug: Removing unused variable tmp%33#0
debug: Removing unused variable tmp%35#0
debug: Removing unused variable tmp%36#0
debug: Removing unused variable tmp%37#0
debug: Removing unused variable tmp%38#0
debug: Removing unused variable tmp%40#0
debug: Removing unused variable tmp%41#0
debug: Removing unused variable tmp%42#0
debug: Removing unused variable tmp%43#0
debug: Removing unused variable tmp%44#0
debug: Removing unused variable tmp%45#0
debug: Removing unused variable tmp%46#0
debug: Removing unused variable tmp%47#0
debug: Removing unused variable tmp%49#0
debug: Removing unused variable tmp%50#0
debug: Removing unused variable tmp%51#0
debug: Removing unused variable tmp%52#0
debug: Removing unused variable tmp%53#0
debug: Removing unused variable tmp%54#0
debug: Removing unused variable tmp%56#0
debug: Removing unused variable tmp%57#0
debug: Removing unused variable tmp%58#0
debug: Removing unused variable tmp%59#0
debug: Removing unused variable tmp%60#0
debug: Removing unused variable tmp%62#0
debug: Removing unused variable tmp%63#0
debug: Removing unused variable tmp%64#0
debug: Removing unused variable tmp%65#0
debug: Removing unused variable tmp%66#0
debug: Removing unused variable tmp%67#0
debug: Removing unused variable tmp%69#0
debug: Removing unused variable tmp%70#0
debug: Removing unused variable tmp%71#0
debug: Removing unused variable tmp%72#0
debug: Removing unused variable tmp%73#0
debug: Removing unused variable tmp%74#0
debug: Removing unused variable tmp%75#0
debug: Removing unused variable tmp%76#0
debug: Removing unused variable tmp%77#0
debug: Removing unused variable tmp%78#0
debug: Removing unused variable tmp%80#0
debug: Removing unused variable tmp%81#0
debug: Removing unused variable tmp%82#0
debug: Removing unused variable tmp%83#0
debug: Removing unused variable tmp%84#0
debug: Removing unused variable tmp%85#0
debug: Removing unused variable tmp%86#0
debug: Removing unused variable tmp%87#0
debug: Removing unused variable tmp%89#0
debug: Removing unused variable tmp%90#0
debug: Removing unused variable tmp%91#0
debug: Removing unused variable tmp%92#0
debug: Removing unused variable tmp%0#1
debug: Removing unused variable tmp%1#1
debug: Removing unused variable tmp%2#1
debug: Removing unused variable tmp%4#1
debug: Removing unused variable tmp%5#1
debug: Removing unused variable tmp%6#1
debug: Removing unused variable tmp%7#1
debug: Removing unused variable tmp%8#1
debug: Removing unused variable tmp%9#1
debug: Removing unused variable tmp%11#1
debug: Removing unused variable tmp%12#1
debug: Removing unused variable tmp%13#1
debug: Removing unused variable tmp%14#1
debug: Removing unused variable tmp%15#1
debug: Removing unused variable tmp%16#1
debug: Removing unused variable tmp%17#1
debug: Removing unused variable tmp%18#1
debug: Removing unused variable tmp%19#1
debug: Removing unused variable tmp%20#1
debug: Removing unused variable tmp%22#1
debug: Removing unused variable tmp%23#1
debug: Removing unused variable tmp%24#1
debug: Removing unused variable tmp%25#1
debug: Removing unused variable tmp%26#1
debug: Removing unused variable tmp%27#1
debug: Removing unused variable tmp%29#1
debug: Removing unused variable tmp%30#1
debug: Removing unused variable tmp%31#1
debug: Removing unused variable tmp%32#1
debug: Removing unused variable tmp%33#1
debug: Removing unused variable tmp%35#1
debug: Removing unused variable tmp%36#1
debug: Removing unused variable tmp%37#1
debug: Removing unused variable tmp%38#1
debug: Removing unused variable tmp%40#1
debug: Removing unused variable tmp%41#1
debug: Removing unused variable tmp%42#1
debug: Removing unused variable tmp%43#1
debug: Removing unused variable tmp%44#1
debug: Removing unused variable tmp%45#1
debug: Removing unused variable tmp%46#1
debug: Removing unused variable tmp%47#1
debug: Removing unused variable tmp%49#1
debug: Removing unused variable tmp%50#1
debug: Removing unused variable tmp%51#1
debug: Removing unused variable tmp%52#1
debug: Removing unused variable tmp%53#1
debug: Removing unused variable tmp%54#1
debug: Removing unused variable tmp%56#1
debug: Removing unused variable tmp%57#1
debug: Removing unused variable tmp%58#1
debug: Removing unused variable tmp%59#1
debug: Removing unused variable tmp%60#1
debug: Removing unused variable tmp%62#1
debug: Removing unused variable tmp%63#1
debug: Removing unused variable tmp%64#1
debug: Removing unused variable tmp%65#1
debug: Removing unused variable tmp%66#1
debug: Removing unused variable tmp%67#1
debug: Removing unused variable tmp%69#1
debug: Removing unused variable tmp%70#1
debug: Removing unused variable tmp%71#1
debug: Removing unused variable tmp%72#1
debug: Removing unused variable tmp%73#1
debug: Removing unused variable tmp%74#1
debug: Removing unused variable tmp%75#1
debug: Removing unused variable tmp%76#1
debug: Removing unused variable tmp%77#1
debug: Removing unused variable tmp%78#1
debug: Removing unused variable tmp%80#1
debug: Removing unused variable tmp%81#1
debug: Removing unused variable tmp%82#1
debug: Removing unused variable tmp%83#1
debug: Removing unused variable tmp%84#1
debug: Removing unused variable tmp%85#1
debug: Removing unused variable tmp%86#1
debug: Removing unused variable tmp%87#1
debug: Removing unused variable tmp%89#1
debug: Removing unused variable tmp%90#1
debug: Removing unused variable tmp%91#1
debug: Removing unused variable tmp%92#1
debug: Removing unused variable tmp%0#2
debug: Removing unused variable tmp%1#2
debug: Removing unused variable tmp%2#2
debug: Removing unused variable tmp%4#2
debug: Removing unused variable tmp%5#2
debug: Removing unused variable tmp%6#2
debug: Removing unused variable tmp%7#2
debug: Removing unused variable tmp%8#2
debug: Removing unused variable tmp%9#2
debug: Removing unused variable tmp%11#2
debug: Removing unused variable tmp%12#2
debug: Removing unused variable tmp%13#2
debug: Removing unused variable tmp%14#2
debug: Removing unused variable tmp%15#2
debug: Removing unused variable tmp%16#2
debug: Removing unused variable tmp%17#2
debug: Removing unused variable tmp%18#2
debug: Removing unused variable tmp%19#2
debug: Removing unused variable tmp%20#2
debug: Removing unused variable tmp%22#2
debug: Removing unused variable tmp%23#2
debug: Removing unused variable tmp%24#2
debug: Removing unused variable tmp%25#2
debug: Removing unused variable tmp%26#2
debug: Removing unused variable tmp%27#2
debug: Removing unused variable tmp%29#2
debug: Removing unused variable tmp%30#2
debug: Removing unused variable tmp%31#2
debug: Removing unused variable tmp%32#2
debug: Removing unused variable tmp%33#2
debug: Removing unused variable tmp%35#2
debug: Removing unused variable tmp%36#2
debug: Removing unused variable tmp%37#2
debug: Removing unused variable tmp%38#2
debug: Removing unused variable tmp%40#2
debug: Removing unused variable tmp%41#2
debug: Removing unused variable tmp%42#2
debug: Removing unused variable tmp%43#2
debug: Removing unused variable tmp%44#2
debug: Removing unused variable tmp%45#2
debug: Removing unused variable tmp%46#2
debug: Removing unused variable tmp%47#2
debug: Removing unused variable tmp%49#2
debug: Removing unused variable tmp%50#2
debug: Removing unused variable tmp%51#2
debug: Removing unused variable tmp%52#2
debug: Removing unused variable tmp%53#2
debug: Removing unused variable tmp%54#2
debug: Removing unused variable tmp%56#2
debug: Removing unused variable tmp%57#2
debug: Removing unused variable tmp%58#2
debug: Removing unused variable tmp%59#2
debug: Removing unused variable tmp%60#2
debug: Removing unused variable tmp%62#2
debug: Removing unused variable tmp%63#2
debug: Removing unused variable tmp%64#2
debug: Removing unused variable tmp%65#2
debug: Removing unused variable tmp%66#2
debug: Removing unused variable tmp%67#2
debug: Removing unused variable tmp%69#2
debug: Removing unused variable tmp%70#2
debug: Removing unused variable tmp%71#2
debug: Removing unused variable tmp%72#2
debug: Removing unused variable tmp%73#2
debug: Removing unused variable tmp%74#2
debug: Removing unused variable tmp%75#2
debug: Removing unused variable tmp%76#2
debug: Removing unused variable tmp%77#2
debug: Removing unused variable tmp%78#2
debug: Removing unused variable tmp%80#2
debug: Removing unused variable tmp%81#2
debug: Removing unused variable tmp%82#2
debug: Removing unused variable tmp%83#2
debug: Removing unused variable tmp%84#2
debug: Removing unused variable tmp%85#2
debug: Removing unused variable tmp%86#2
debug: Removing unused variable tmp%87#2
debug: Removing unused variable tmp%89#2
debug: Removing unused variable tmp%90#2
debug: Removing unused variable tmp%91#2
debug: Removing unused variable tmp%92#2
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizer: Repeated Extends Simplification
debug: Begin optimization pass 3/100
debug: Optimizing subroutine test_cases.arc4_numeric_comparisons.uint_n.UIntNOrdering.approval_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizer: Repeated Extends Simplification
debug: No optimizations performed in pass 3, ending loop
debug: optimizing clear program of test_cases.arc4_numeric_comparisons.uint_n.UIntNOrdering at level 2
debug: Begin optimization pass 1/100
debug: Optimizing subroutine test_cases.arc4_numeric_comparisons.uint_n.UIntNOrdering.clear_state_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizer: Repeated Extends Simplification
debug: No optimizations performed in pass 1, ending loop
debug: lowering array IR nodes in approval program of test_cases.arc4_numeric_comparisons.uint_n.UIntNOrdering
debug: lowering array IR nodes in clear program of test_cases.arc4_numeric_comparisons.uint_n.UIntNOrdering
debug: optimizing approval program of test_cases.arc4_numeric_comparisons.uint_n.UIntNOrdering at level 2
debug: Begin optimization pass 1/100
debug: Optimizing subroutine test_cases.arc4_numeric_comparisons.uint_n.UIntNOrdering.approval_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizer: Repeated Extends Simplification
debug: No optimizations performed in pass 1, ending loop
debug: optimizing clear program of test_cases.arc4_numeric_comparisons.uint_n.UIntNOrdering at level 2
debug: Begin optimization pass 1/100
debug: Optimizing subroutine test_cases.arc4_numeric_comparisons.uint_n.UIntNOrdering.clear_state_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizer: Repeated Extends Simplification
debug: No optimizations performed in pass 1, ending loop
debug: removing local static slots in approval program of test_cases.arc4_numeric_comparisons.uint_n.UIntNOrdering
arc4_numeric_comparisons/uint_n.py:8 debug: auto reserving slots in test_cases.arc4_numeric_comparisons.uint_n.UIntNOrdering.approval_program, []
debug: Slot allocation not required
debug: removing local static slots in clear program of test_cases.arc4_numeric_comparisons.uint_n.UIntNOrdering
arc4_numeric_comparisons/uint_n.py:14 debug: auto reserving slots in test_cases.arc4_numeric_comparisons.uint_n.UIntNOrdering.clear_state_program, []
debug: Slot allocation not required
debug: Performing SSA IR destructuring for test_cases.arc4_numeric_comparisons.uint_n.UIntNOrdering.approval_program
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in test_cases.arc4_numeric_comparisons.uint_n.UIntNOrdering.approval_program using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in test_cases.arc4_numeric_comparisons.uint_n.UIntNOrdering.approval_program
debug: Performing post-SSA optimizations at level 2
debug: Output IR to arc4_numeric_comparisons/out_O2/UIntNOrdering.ir/UIntNOrdering.approval.0.destructured.ir
debug: Performing SSA IR destructuring for test_cases.arc4_numeric_comparisons.uint_n.UIntNOrdering.clear_state_program
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in test_cases.arc4_numeric_comparisons.uint_n.UIntNOrdering.clear_state_program using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in test_cases.arc4_numeric_comparisons.uint_n.UIntNOrdering.clear_state_program
debug: Performing post-SSA optimizations at level 2
debug: Output IR to arc4_numeric_comparisons/out_O2/UIntNOrdering.ir/UIntNOrdering.clear.0.destructured.ir
arc4_numeric_comparisons/uint_n.py:8 debug: optimizing TEAL subroutine test_cases.arc4_numeric_comparisons.uint_n.UIntNOrdering.approval_program() -> uint64:
arc4_numeric_comparisons/uint_n.py:14 debug: optimizing TEAL subroutine test_cases.arc4_numeric_comparisons.uint_n.UIntNOrdering.clear_state_program() -> uint64:
info: Writing arc4_numeric_comparisons/out_O2/UIntNOrdering.approval.teal
info: Writing arc4_numeric_comparisons/out_O2/UIntNOrdering.clear.teal
info: Writing arc4_numeric_comparisons/out_O2/UIntNOrdering.approval.bin
info: Writing arc4_numeric_comparisons/out_O2/UIntNOrdering.clear.bin
info: Writing arc4_numeric_comparisons/out_O2/UIntNOrdering.approval.puya.map
info: Writing arc4_numeric_comparisons/out_O2/UIntNOrdering.clear.puya.map