// Op                                                                                    Stack (out)
// test_cases.application.contract.Reference.approval_program() -> uint64:
main_block@0:
    txn ApplicationID                                                                    app_id%0#0
    bnz main_after_if_else@2
    // Implicit fall through to main_on_create@1

main_on_create@1:
    callsub __init__
    // Implicit fall through to main_after_if_else@2

main_after_if_else@2:
    // application/contract.py:27
    // if op.Txn.num_app_args == 1:
    txn NumAppArgs                                                                       tmp%0#0
    int 1                                                                                tmp%0#0,1
    ==                                                                                   tmp%1#0
    bz main_after_if_else@7
    // Implicit fall through to main_if_body@3

main_if_body@3:
    // application/contract.py:28
    // if op.Txn.application_args(0) == b"validate":
    txna ApplicationArgs 0                                                               tmp%2#0
    byte 0x76616c6964617465                                                              tmp%2#0,0x76616c6964617465
    ==                                                                                   tmp%3#0
    assert // Expected validate
    // application/contract.py:29
    // self.validate_asset(op.Global.current_application_id)
    global CurrentApplicationID                                                          tmp%4#0
    callsub validate_asset
    // Implicit fall through to main_after_if_else@7

main_after_if_else@7:
    // application/contract.py:32
    // return True
    int 1                                                                                1
    return


// test_cases.application.contract.Reference.__init__() -> void:
__init__:
    // application/contract.py:14
    // def __init__(self) -> None:
    proto 0 0

__init___block@0:
    // application/contract.py:15
    // self.int_1 = UInt64(0)
    byte "int_1"                                                                         "int_1"
    int 0                                                                                "int_1",0
    app_global_put
    // application/contract.py:16
    // self.bytes_1 = Bytes(b"")
    byte "bytes_1"                                                                       "bytes_1"
    byte 0x                                                                              "bytes_1",0x
    app_global_put
    // application/contract.py:17
    // self.bytes_2 = Bytes(b"")
    byte "bytes_2"                                                                       "bytes_2"
    byte 0x                                                                              "bytes_2",0x
    app_global_put
    retsub


// test_cases.application.contract.Reference.validate_asset(app: uint64) -> void:
validate_asset:                                                                          (洧도) app#0 |
    // application/contract.py:37-38
    // @subroutine
    // def validate_asset(self, app: Application) -> None:
    proto 1 0                                                                            (洧도) app#0 |

validate_asset_block@0:                                                                  (洧도) app#0 |
    // application/contract.py:39
    // assert not Txn.sender.is_opted_in(app), "app opted in"
    txn Sender                                                                           (洧도) app#0 | tmp%0#0
    p-load app#0                                                                         (洧도) app#0 | tmp%0#0,app#0 (copy)
    app_opted_in                                                                         (洧도) app#0 | tmp%1#0
    !                                                                                    (洧도) app#0 | tmp%2#0
    assert // app opted in                                                               (洧도) app#0 |
    // application/contract.py:40
    // assert app.creator == op.Global.creator_address, "expected creator"
    p-load app#0                                                                         (洧도) app#0 | app#0 (copy)
    app_params_get AppCreator                                                            (洧도) app#0 | value%0#0,check%0#0
    assert // application exists                                                         (洧도) app#0 | value%0#0
    global CreatorAddress                                                                (洧도) app#0 | value%0#0,tmp%3#0
    l-load value%0#0 1                                                                   (洧도) app#0 | tmp%3#0,value%0#0
    l-load tmp%3#0 1                                                                     (洧도) app#0 | value%0#0,tmp%3#0
    ==                                                                                   (洧도) app#0 | tmp%4#0
    assert // expected creator                                                           (洧도) app#0 |
    // application/contract.py:41
    // assert app.global_num_uint == 1, "expected global_num_uint"
    p-load app#0                                                                         (洧도) app#0 | app#0 (copy)
    app_params_get AppGlobalNumUint                                                      (洧도) app#0 | value%1#0,check%1#0
    assert // application exists                                                         (洧도) app#0 | value%1#0
    l-load value%1#0 0                                                                   (洧도) app#0 | value%1#0
    int 1                                                                                (洧도) app#0 | value%1#0,1
    ==                                                                                   (洧도) app#0 | tmp%5#0
    assert // expected global_num_uint                                                   (洧도) app#0 |
    // application/contract.py:42
    // assert app.global_num_bytes == 2, "expected global_num_bytes"
    p-load app#0                                                                         (洧도) app#0 | app#0 (copy)
    app_params_get AppGlobalNumByteSlice                                                 (洧도) app#0 | value%2#0,check%2#0
    assert // application exists                                                         (洧도) app#0 | value%2#0
    l-load value%2#0 0                                                                   (洧도) app#0 | value%2#0
    int 2                                                                                (洧도) app#0 | value%2#0,2
    ==                                                                                   (洧도) app#0 | tmp%6#0
    assert // expected global_num_bytes                                                  (洧도) app#0 |
    // application/contract.py:43
    // assert app.local_num_uint == 3, "expected local_num_uint"
    p-load app#0                                                                         (洧도) app#0 | app#0 (copy)
    app_params_get AppLocalNumUint                                                       (洧도) app#0 | value%3#0,check%3#0
    assert // application exists                                                         (洧도) app#0 | value%3#0
    l-load value%3#0 0                                                                   (洧도) app#0 | value%3#0
    int 3                                                                                (洧도) app#0 | value%3#0,3
    ==                                                                                   (洧도) app#0 | tmp%7#0
    assert // expected local_num_uint                                                    (洧도) app#0 |
    // application/contract.py:44
    // assert app.local_num_bytes == 4, "expected local_num_bytes"
    p-load app#0                                                                         (洧도) app#0 | app#0 (copy)
    app_params_get AppLocalNumByteSlice                                                  (洧도) app#0 | value%4#0,check%4#0
    assert // application exists                                                         (洧도) app#0 | value%4#0
    l-load value%4#0 0                                                                   (洧도) app#0 | value%4#0
    int 4                                                                                (洧도) app#0 | value%4#0,4
    ==                                                                                   (洧도) app#0 | tmp%8#0
    assert // expected local_num_bytes                                                   (洧도) app#0 |
    // application/contract.py:45
    // assert app.approval_program, "expected approval_program"
    p-load app#0                                                                         (洧도) app#0 | app#0 (copy)
    app_params_get AppApprovalProgram                                                    (洧도) app#0 | value%5#0,check%5#0
    assert // application exists                                                         (洧도) app#0 | value%5#0
    l-load value%5#0 0                                                                   (洧도) app#0 | value%5#0
    len                                                                                  (洧도) app#0 | tmp%9#0
    assert // expected approval_program                                                  (洧도) app#0 |
    // application/contract.py:46
    // assert app.clear_state_program, "expected clear_state_program"
    p-load app#0                                                                         (洧도) app#0 | app#0 (copy)
    app_params_get AppClearStateProgram                                                  (洧도) app#0 | value%6#0,check%6#0
    assert // application exists                                                         (洧도) app#0 | value%6#0
    l-load value%6#0 0                                                                   (洧도) app#0 | value%6#0
    len                                                                                  (洧도) app#0 | tmp%11#0
    assert // expected clear_state_program                                               (洧도) app#0 |
    // application/contract.py:47
    // assert app == op.Global.current_application_id, "expected current_application_id"
    global CurrentApplicationID                                                          (洧도) app#0 | tmp%13#0
    p-load app#0                                                                         (洧도) app#0 | tmp%13#0,app#0 (copy)
    l-load tmp%13#0 1                                                                    (洧도) app#0 | app#0 (copy),tmp%13#0
    ==                                                                                   (洧도) app#0 | tmp%14#0
    assert // expected current_application_id                                            (洧도) app#0 |
    // application/contract.py:49
    // app.address == op.Global.current_application_address
    p-load app#0                                                                         (洧도) app#0 | app#0 (copy)
    app_params_get AppAddress                                                            (洧도) app#0 | value%7#0,check%7#0
    assert // application exists                                                         (洧도) app#0 | value%7#0
    global CurrentApplicationAddress                                                     (洧도) app#0 | value%7#0,tmp%15#0
    l-load value%7#0 1                                                                   (洧도) app#0 | tmp%15#0,value%7#0
    l-load tmp%15#0 1                                                                    (洧도) app#0 | value%7#0,tmp%15#0
    ==                                                                                   (洧도) app#0 | tmp%16#0
    // application/contract.py:48-50
    // assert (
    //     app.address == op.Global.current_application_address
    // ), "expected current_application_address"
    assert // expected current_application_address                                       (洧도) app#0 |
    retsub


