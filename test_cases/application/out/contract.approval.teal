#pragma version 8

// test_cases.application.contract.Reference.approval_program() -> uint64:
main_block@0:
        txn ApplicationID
        bnz main_entrypoint@2

main_on_create@1:
        callsub __init__

main_entrypoint@2:
        txn NumAppArgs
        int 1
        ==
        bz main_after_if_else@7

main_if_body@3:
        txna ApplicationArgs 0
        byte "validate"
        ==
        bz main_else_body@5

main_if_body@4:
        global CurrentApplicationID
        callsub validate_asset
        b main_after_if_else@7

main_else_body@5:
        err // Expected validate

main_after_if_else@7:
        int 1
        return


// test_cases.application.contract.Reference.validate_asset(app#0: uint64) -> void:
validate_asset:
        proto 1 0

validate_asset_block@0:
        frame_dig -1
        app_params_get AppCreator
        assert // application exists
        global CreatorAddress
        ==
        assert // expected creator
        frame_dig -1
        app_params_get AppGlobalNumUint
        assert // application exists
        int 1
        ==
        assert // expected global_num_uint
        frame_dig -1
        app_params_get AppGlobalNumByteSlice
        assert // application exists
        int 2
        ==
        assert // expected global_num_byte_slice
        frame_dig -1
        app_params_get AppLocalNumUint
        assert // application exists
        int 3
        ==
        assert // expected local_num_uint
        frame_dig -1
        app_params_get AppLocalNumByteSlice
        assert // application exists
        int 4
        ==
        assert // expected local_num_byte_slice
        frame_dig -1
        app_params_get AppApprovalProgram
        assert // application exists
        len
        assert // expected approval_program
        frame_dig -1
        app_params_get AppClearStateProgram
        assert // application exists
        len
        assert // expected clear_state_program
        global CurrentApplicationID
        frame_dig -1
        ==
        assert // expected current_application_id
        frame_dig -1
        app_params_get AppAddress
        assert // application exists
        global CurrentApplicationAddress
        ==
        assert // expected current_application_address
        retsub


// test_cases.application.contract.Reference.__init__() -> void:
__init__:
        proto 0 0

__init___block@0:
        byte "int_1"
        int 0
        app_global_put
        byte "bytes_1"
        byte ""
        app_global_put
        byte "bytes_2"
        byte ""
        app_global_put
        retsub

