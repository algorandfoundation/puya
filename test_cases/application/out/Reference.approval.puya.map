{
  "version": 3,
  "sources": [
    "../contract.py"
  ],
  "mappings": ";;;;;;AAcQ;;;;;;;AAAa;;AAAb;AACA;;;;;;;;;;;AAAA;AACA;;;;;;;;;;;AAAA;AAUG;;AAAuB;;AAAvB;AAAX;;;AACe;;;AAA8B;;;;;;;;;;AAA9B;AAAf;AACoC;;AAUjB;;AAAA;;AAAA;AAAJ;AAAP;AACO;AAAA;;AAAA;AAAe;;AAAf;AAAP;AACO;AAAA;;AAAA;AAAuB;;AAAvB;AAAP;AACO;AAAA;;AAAA;AAAwB;;AAAxB;AAAP;AACO;AAAA;;AAAA;AAAsB;;AAAtB;AAAP;AACO;AAAA;;AAAA;AAAuB;;AAAvB;AAAP;AACO;AAAA;;AAAA;AAAA;AAAP;AACO;AAAA;;AAAA;AAAA;AAAP;AACO;AAAO;;AAAP;AAAP;AAEI;;AAAA;AAAe;;AAAf;AADJ;AAhBO;;",
  "op_pc_offset": 0,
  "pc_events": {
    "1": {
      "subroutine": "test_cases.application.contract.Reference.__algopy_entrypoint_with_init",
      "params": {},
      "block": "main",
      "stack_in": [],
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "3": {
      "op": "bnz main_after_if_else@2",
      "stack_out": []
    },
    "6": {
      "op": "pushbytes \"int_1\""
    },
    "13": {
      "op": "pushint 0 // 0"
    },
    "15": {
      "op": "app_global_put"
    },
    "16": {
      "op": "pushbytess \"bytes_1\" 0x // \"bytes_1\", 0x"
    },
    "27": {
      "op": "app_global_put"
    },
    "28": {
      "op": "pushbytess \"bytes_2\" 0x // \"bytes_2\", 0x"
    },
    "39": {
      "op": "app_global_put"
    },
    "40": {
      "block": "main_after_if_else@2",
      "stack_in": [],
      "op": "txn NumAppArgs",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "42": {
      "op": "pushint 1 // 1",
      "defined_out": [
        "1",
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1",
        "1"
      ]
    },
    "44": {
      "op": "==",
      "defined_out": [
        "tmp%1#1"
      ],
      "stack_out": [
        "tmp%1#1"
      ]
    },
    "45": {
      "op": "bz main_after_if_else@8",
      "stack_out": []
    },
    "48": {
      "op": "txna ApplicationArgs 0"
    },
    "51": {
      "op": "pushbytes 0x76616c6964617465"
    },
    "61": {
      "op": "=="
    },
    "62": {
      "error": "Expected validate",
      "op": "assert // Expected validate"
    },
    "63": {
      "op": "global CurrentApplicationID"
    },
    "65": {
      "op": "txn Sender"
    },
    "67": {
      "op": "dig 1"
    },
    "69": {
      "op": "app_opted_in"
    },
    "70": {
      "op": "!"
    },
    "71": {
      "error": "app opted in",
      "op": "assert // app opted in"
    },
    "72": {
      "op": "dup"
    },
    "73": {
      "op": "app_params_get AppCreator"
    },
    "75": {
      "error": "application exists",
      "op": "assert // application exists"
    },
    "76": {
      "op": "global CreatorAddress"
    },
    "78": {
      "op": "=="
    },
    "79": {
      "error": "expected creator",
      "op": "assert // expected creator"
    },
    "80": {
      "op": "dup"
    },
    "81": {
      "op": "app_params_get AppGlobalNumUint"
    },
    "83": {
      "error": "application exists",
      "op": "assert // application exists"
    },
    "84": {
      "op": "pushint 1 // 1"
    },
    "86": {
      "op": "=="
    },
    "87": {
      "error": "expected global_num_uint",
      "op": "assert // expected global_num_uint"
    },
    "88": {
      "op": "dup"
    },
    "89": {
      "op": "app_params_get AppGlobalNumByteSlice"
    },
    "91": {
      "error": "application exists",
      "op": "assert // application exists"
    },
    "92": {
      "op": "pushint 2 // 2"
    },
    "94": {
      "op": "=="
    },
    "95": {
      "error": "expected global_num_bytes",
      "op": "assert // expected global_num_bytes"
    },
    "96": {
      "op": "dup"
    },
    "97": {
      "op": "app_params_get AppLocalNumUint"
    },
    "99": {
      "error": "application exists",
      "op": "assert // application exists"
    },
    "100": {
      "op": "pushint 3 // 3"
    },
    "102": {
      "op": "=="
    },
    "103": {
      "error": "expected local_num_uint",
      "op": "assert // expected local_num_uint"
    },
    "104": {
      "op": "dup"
    },
    "105": {
      "op": "app_params_get AppLocalNumByteSlice"
    },
    "107": {
      "error": "application exists",
      "op": "assert // application exists"
    },
    "108": {
      "op": "pushint 4 // 4"
    },
    "110": {
      "op": "=="
    },
    "111": {
      "error": "expected local_num_bytes",
      "op": "assert // expected local_num_bytes"
    },
    "112": {
      "op": "dup"
    },
    "113": {
      "op": "app_params_get AppApprovalProgram"
    },
    "115": {
      "error": "application exists",
      "op": "assert // application exists"
    },
    "116": {
      "op": "len"
    },
    "117": {
      "error": "expected approval_program",
      "op": "assert // expected approval_program"
    },
    "118": {
      "op": "dup"
    },
    "119": {
      "op": "app_params_get AppClearStateProgram"
    },
    "121": {
      "error": "application exists",
      "op": "assert // application exists"
    },
    "122": {
      "op": "len"
    },
    "123": {
      "error": "expected clear_state_program",
      "op": "assert // expected clear_state_program"
    },
    "124": {
      "op": "dup"
    },
    "125": {
      "op": "global CurrentApplicationID"
    },
    "127": {
      "op": "=="
    },
    "128": {
      "error": "expected current_application_id",
      "op": "assert // expected current_application_id"
    },
    "129": {
      "op": "app_params_get AppAddress"
    },
    "131": {
      "error": "application exists",
      "op": "assert // application exists"
    },
    "132": {
      "op": "global CurrentApplicationAddress"
    },
    "134": {
      "op": "=="
    },
    "135": {
      "error": "expected current_application_address",
      "op": "assert // expected current_application_address"
    },
    "136": {
      "block": "main_after_if_else@8",
      "stack_in": [],
      "op": "pushint 1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "138": {
      "op": "return",
      "stack_out": []
    }
  }
}