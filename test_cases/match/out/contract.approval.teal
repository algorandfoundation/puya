#pragma version 8

// test_cases.match.contract.MyContract.approval_program() -> uint64:
main_block@0:
        byte "case_one"
        int 1
        app_global_put
        byte "case_two"
        int 2
        app_global_put
        callsub match_uint64
        callsub match_biguint
        callsub match_bytes
        callsub match_address
        callsub match_attributes
        callsub match_bools
        int 1
        return


// test_cases.match.contract.MyContract.match_uint64() -> void:
match_uint64:
        proto 0 0

match_uint64_block@0:
        txn NumAppArgs
        int 0
        int 10
        uncover 2
        match match_uint64_switch_case_0@1 match_uint64_switch_case_1@2
        b match_uint64_switch_case_next@4

match_uint64_switch_case_0@1:
        byte "Hello"
        log
        b match_uint64_switch_case_next@4

match_uint64_switch_case_1@2:
        byte "Hello There"
        log

match_uint64_switch_case_next@4:
        retsub


// test_cases.match.contract.MyContract.match_biguint() -> void:
match_biguint:
        proto 0 0

match_biguint_block@0:
        txn NumAppArgs
        itob
        byte 0x0a
        b*
        byte 0x
        byte 0x0a
        uncover 2
        match match_biguint_switch_case_0@1 match_biguint_switch_case_1@2
        b match_biguint_switch_case_next@4

match_biguint_switch_case_0@1:
        byte "Hello biguint"
        log
        b match_biguint_switch_case_next@4

match_biguint_switch_case_1@2:
        byte "Hello There biguint"
        log

match_biguint_switch_case_next@4:
        retsub


// test_cases.match.contract.MyContract.match_bytes() -> void:
match_bytes:
        proto 0 0

match_bytes_block@0:
        txna ApplicationArgs 0
        byte ""
        byte "10"
        uncover 2
        match match_bytes_switch_case_0@1 match_bytes_switch_case_1@2
        b match_bytes_switch_case_next@4

match_bytes_switch_case_0@1:
        byte "Hello bytes"
        log
        b match_bytes_switch_case_next@4

match_bytes_switch_case_1@2:
        byte "Hello There bytes"
        log

match_bytes_switch_case_next@4:
        retsub


// test_cases.match.contract.MyContract.match_address() -> void:
match_address:
        proto 0 0

match_address_block@0:
        txn Sender
        addr AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAY5HFKQ
        addr VCMJKWOY5P5P7SKMZFFOCEROPJCZOTIJMNIYNUCKH7LRO45JMJP6UYBIJA
        uncover 2
        match match_address_switch_case_0@1 match_address_switch_case_1@2
        b match_address_switch_case_next@4

match_address_switch_case_0@1:
        byte "Hello address"
        log
        b match_address_switch_case_next@4

match_address_switch_case_1@2:
        byte "Hello There address"
        log

match_address_switch_case_next@4:
        retsub


// test_cases.match.contract.MyContract.match_attributes() -> void:
match_attributes:
        proto 0 0

match_attributes_block@0:
        txn NumAppArgs
        int 0
        byte "case_one"
        app_global_get_ex
        assert // check value exists
        int 0
        byte "case_two"
        app_global_get_ex
        assert // check value exists
        uncover 2
        match match_attributes_switch_case_0@1 match_attributes_switch_case_1@2
        b match_attributes_switch_case_default@3

match_attributes_switch_case_0@1:
        byte "Hello one"
        log
        b match_attributes_switch_case_next@4

match_attributes_switch_case_1@2:
        byte "Hello two"
        log
        b match_attributes_switch_case_next@4

match_attributes_switch_case_default@3:
        byte "Hello default"
        log

match_attributes_switch_case_next@4:
        retsub


// test_cases.match.contract.MyContract.match_bools() -> void:
match_bools:
        proto 0 0

match_bools_block@0:
        txn NumAppArgs
        int 0
        >
        switch match_bools_switch_case_1@2 match_bools_switch_case_0@1
        b match_bools_switch_case_next@4

match_bools_switch_case_0@1:
        byte "Hello True"
        log
        b match_bools_switch_case_next@4

match_bools_switch_case_1@2:
        byte "Hello False"
        log

match_bools_switch_case_next@4:
        retsub

