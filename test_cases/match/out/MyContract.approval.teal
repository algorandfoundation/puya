#pragma version 10
#pragma typetrack false

// test_cases.match.contract.MyContract.approval_program() -> uint64:
main:
    intcblock 0 1
    bytecblock "case_one" "case_two" 0x0a 0x
    // match/contract.py:6
    // self.case_one = algopy.UInt64(1)
    bytec_0 // "case_one"
    intc_1 // 1
    app_global_put
    // match/contract.py:7
    // self.case_two = algopy.UInt64(2)
    bytec_1 // "case_two"
    pushint 2 // 2
    app_global_put
    // match/contract.py:20
    // case 0 | 123:
    intc_0 // 0
    pushints 123 10 // 123, 10
    // match/contract.py:18
    // n = algopy.op.Txn.num_app_args
    txn NumAppArgs
    // match/contract.py:19-25
    // match n:
    //     case 0 | 123:
    //         hello = algopy.Bytes(b"Hello")
    //         algopy.log(hello)
    //     case algopy.UInt64(10):
    //         hello = algopy.Bytes(b"Hello There")
    //         algopy.log(hello)
    match main_switch_case_1@3 main_switch_case_1@3 main_switch_case_2@4

main_switch_case_next@5:
    // match/contract.py:40
    // n = algopy.op.Txn.num_app_args * algopy.BigUInt(10)
    txn NumAppArgs
    itob
    bytec_2 // 0x0a
    b*
    // match/contract.py:42
    // case algopy.BigUInt(0):
    bytec_3 // 0x
    // match/contract.py:45
    // case algopy.BigUInt(10):
    bytec_2 // 0x0a
    // match/contract.py:41-47
    // match n:
    //     case algopy.BigUInt(0):
    //         hello = algopy.Bytes(b"Hello biguint")
    //         algopy.log(hello)
    //     case algopy.BigUInt(10):
    //         hello = algopy.Bytes(b"Hello There biguint")
    //         algopy.log(hello)
    uncover 2
    match main_switch_case_0@8 main_switch_case_1@9

main_switch_case_next@10:
    // match/contract.py:31
    // case algopy.Bytes(b""):
    bytec_3 // 0x
    // match/contract.py:34
    // case algopy.Bytes(b"10"):
    pushbytes 0x3130
    // match/contract.py:29
    // n = algopy.op.Txn.application_args(0)
    txna ApplicationArgs 0
    // match/contract.py:30-36
    // match n:
    //     case algopy.Bytes(b""):
    //         hello = algopy.Bytes(b"Hello bytes")
    //         algopy.log(hello)
    //     case algopy.Bytes(b"10"):
    //         hello = algopy.Bytes(b"Hello There bytes")
    //         algopy.log(hello)
    match main_switch_case_0@13 main_switch_case_1@14

main_switch_case_next@15:
    // match/contract.py:53
    // case algopy.Account("AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAY5HFKQ"):
    pushbytess base32(AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA) base32(VCMJKWOY5P5P7SKMZFFOCEROPJCZOTIJMNIYNUCKH7LRO45JMJPQ) // addr AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAY5HFKQ, addr VCMJKWOY5P5P7SKMZFFOCEROPJCZOTIJMNIYNUCKH7LRO45JMJP6UYBIJA
    // match/contract.py:51
    // n = algopy.op.Txn.sender
    txn Sender
    // match/contract.py:52-58
    // match n:
    //     case algopy.Account("AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAY5HFKQ"):
    //         hello = algopy.Bytes(b"Hello address")
    //         algopy.log(hello)
    //     case algopy.Account("VCMJKWOY5P5P7SKMZFFOCEROPJCZOTIJMNIYNUCKH7LRO45JMJP6UYBIJA"):
    //         hello = algopy.Bytes(b"Hello There address")
    //         algopy.log(hello)
    match main_switch_case_0@18 main_switch_case_1@19

main_switch_case_next@20:
    // match/contract.py:62
    // n = algopy.op.Txn.num_app_args
    txn NumAppArgs
    // match/contract.py:64
    // case self.case_one:
    intc_0 // 0
    bytec_0 // "case_one"
    app_global_get_ex
    assert // check self.case_one exists
    // match/contract.py:67
    // case self.case_two:
    intc_0 // 0
    bytec_1 // "case_two"
    app_global_get_ex
    assert // check self.case_two exists
    // match/contract.py:63-72
    // match n:
    //     case self.case_one:
    //         hello = algopy.Bytes(b"Hello one")
    //         algopy.log(hello)
    //     case self.case_two:
    //         hello = algopy.Bytes(b"Hello two")
    //         algopy.log(hello)
    //     case _:
    //         hello = algopy.Bytes(b"Hello default")
    //         algopy.log(hello)
    uncover 2
    match main_switch_case_0@23 main_switch_case_1@24
    // match/contract.py:71
    // hello = algopy.Bytes(b"Hello default")
    pushbytes 0x48656c6c6f2064656661756c74
    // match/contract.py:72
    // algopy.log(hello)
    log

main_switch_case_next@26:
    // match/contract.py:76
    // n = algopy.op.Txn.num_app_args > 0
    txn NumAppArgs
    intc_0 // 0
    >
    // match/contract.py:77-83
    // match n:
    //     case True:
    //         hello = algopy.Bytes(b"Hello True")
    //         algopy.log(hello)
    //     case False:
    //         hello = algopy.Bytes(b"Hello False")
    //         algopy.log(hello)
    switch main_switch_case_1@30 main_switch_case_0@29

main_switch_case_next@31:
    // match/contract.py:14
    // return True
    intc_1 // 1
    return

main_switch_case_0@29:
    // match/contract.py:79
    // hello = algopy.Bytes(b"Hello True")
    pushbytes 0x48656c6c6f2054727565
    // match/contract.py:80
    // algopy.log(hello)
    log
    b main_switch_case_next@31

main_switch_case_1@30:
    // match/contract.py:82
    // hello = algopy.Bytes(b"Hello False")
    pushbytes 0x48656c6c6f2046616c7365
    // match/contract.py:83
    // algopy.log(hello)
    log
    b main_switch_case_next@31

main_switch_case_1@24:
    // match/contract.py:68
    // hello = algopy.Bytes(b"Hello two")
    pushbytes 0x48656c6c6f2074776f
    // match/contract.py:69
    // algopy.log(hello)
    log
    b main_switch_case_next@26

main_switch_case_0@23:
    // match/contract.py:65
    // hello = algopy.Bytes(b"Hello one")
    pushbytes 0x48656c6c6f206f6e65
    // match/contract.py:66
    // algopy.log(hello)
    log
    b main_switch_case_next@26

main_switch_case_1@19:
    // match/contract.py:57
    // hello = algopy.Bytes(b"Hello There address")
    pushbytes 0x48656c6c6f2054686572652061646472657373
    // match/contract.py:58
    // algopy.log(hello)
    log
    b main_switch_case_next@20

main_switch_case_0@18:
    // match/contract.py:54
    // hello = algopy.Bytes(b"Hello address")
    pushbytes 0x48656c6c6f2061646472657373
    // match/contract.py:55
    // algopy.log(hello)
    log
    b main_switch_case_next@20

main_switch_case_1@14:
    // match/contract.py:35
    // hello = algopy.Bytes(b"Hello There bytes")
    pushbytes 0x48656c6c6f205468657265206279746573
    // match/contract.py:36
    // algopy.log(hello)
    log
    b main_switch_case_next@15

main_switch_case_0@13:
    // match/contract.py:32
    // hello = algopy.Bytes(b"Hello bytes")
    pushbytes 0x48656c6c6f206279746573
    // match/contract.py:33
    // algopy.log(hello)
    log
    b main_switch_case_next@15

main_switch_case_1@9:
    // match/contract.py:46
    // hello = algopy.Bytes(b"Hello There biguint")
    pushbytes 0x48656c6c6f2054686572652062696775696e74
    // match/contract.py:47
    // algopy.log(hello)
    log
    b main_switch_case_next@10

main_switch_case_0@8:
    // match/contract.py:43
    // hello = algopy.Bytes(b"Hello biguint")
    pushbytes 0x48656c6c6f2062696775696e74
    // match/contract.py:44
    // algopy.log(hello)
    log
    b main_switch_case_next@10

main_switch_case_2@4:
    // match/contract.py:24
    // hello = algopy.Bytes(b"Hello There")
    pushbytes 0x48656c6c6f205468657265
    // match/contract.py:25
    // algopy.log(hello)
    log
    b main_switch_case_next@5

main_switch_case_1@3:
    // match/contract.py:21
    // hello = algopy.Bytes(b"Hello")
    pushbytes 0x48656c6c6f
    // match/contract.py:22
    // algopy.log(hello)
    log
    b main_switch_case_next@5
