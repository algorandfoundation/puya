{
  "version": 3,
  "sources": [
    "../contract.py"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAKQ;AAAgB;AAAhB;AACA;AAAgB;;AAAhB;AAaS;AAAI;;;;AAFT;;AACJ;;;;;;;;AAqBI;;AAAA;AAA6B;AAA7B;AAEK;AAGA;AAJT;;AAAA;;;;;;AAVS;AAGA;;;;AALL;;;AACJ;;;;;;AAuBS;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAFL;;AACJ;;;;;;AAUI;;AAEK;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAJT;;AAAA;;;;;;AAQgB;;;;;;;;;;;;;;;AACR;AAIJ;;AAA6B;AAA7B;AACJ;;;;;;AA/DO;AAAP;AAiEgB;;;;;;;;;;;;AACR;;;;AAEQ;;;;;;;;;;;;;AACR;;;;AAfQ;;;;;;;;;;;AACR;;;;AAJQ;;;;;;;;;;;AACR;;;;AATQ;;;;;;;;;;;;;;;;;;;;;AACR;;;;AAJQ;;;;;;;;;;;;;;;AACR;;;;AApBQ;;;;;;;;;;;;;;;;;;;AACR;;;;AAJQ;;;;;;;;;;;;;AACR;;;;AAaQ;;;;;;;;;;;;;;;;;;;;;AACR;;;;AAJQ;;;;;;;;;;;;;;;AACR;;;;AApBQ;;;;;;;;;;;;;AACR;;;;AAJQ;;;;;;;AACR;",
  "op_pc_offset": 0,
  "pc_events": {
    "1": {
      "subroutine": "test_cases.match.contract.MyContract.approval_program",
      "params": {},
      "block": "main",
      "stack_in": [],
      "op": "intcblock 0 1"
    },
    "5": {
      "op": "bytecblock \"case_one\" \"case_two\" 0x0a 0x"
    },
    "28": {
      "op": "bytec_0 // \"case_one\"",
      "defined_out": [
        "\"case_one\""
      ],
      "stack_out": [
        "\"case_one\""
      ]
    },
    "29": {
      "op": "intc_1 // 1",
      "defined_out": [
        "\"case_one\"",
        "1"
      ],
      "stack_out": [
        "\"case_one\"",
        "1"
      ]
    },
    "30": {
      "op": "app_global_put",
      "stack_out": []
    },
    "31": {
      "op": "bytec_1 // \"case_two\"",
      "defined_out": [
        "\"case_two\""
      ],
      "stack_out": [
        "\"case_two\""
      ]
    },
    "32": {
      "op": "pushint 2 // 2",
      "defined_out": [
        "\"case_two\"",
        "2"
      ],
      "stack_out": [
        "\"case_two\"",
        "2"
      ]
    },
    "34": {
      "op": "app_global_put",
      "stack_out": []
    },
    "35": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "36": {
      "op": "pushints 123 10 // 123, 10",
      "defined_out": [
        "0",
        "10",
        "123"
      ],
      "stack_out": [
        "0",
        "123",
        "10"
      ]
    },
    "40": {
      "op": "txn NumAppArgs",
      "defined_out": [
        "0",
        "10",
        "123",
        "n#0"
      ],
      "stack_out": [
        "0",
        "123",
        "10",
        "n#0"
      ]
    },
    "42": {
      "op": "match main_switch_case_1@3 main_switch_case_1@3 main_switch_case_2@4",
      "stack_out": []
    },
    "50": {
      "block": "main_switch_case_next@6",
      "stack_in": [],
      "op": "txn NumAppArgs",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "52": {
      "op": "itob",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "53": {
      "op": "bytec_2 // 0x0a",
      "defined_out": [
        "0x0a",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "0x0a"
      ]
    },
    "54": {
      "op": "b*",
      "defined_out": [
        "n#1"
      ],
      "stack_out": [
        "n#1"
      ]
    },
    "55": {
      "op": "bytec_3 // 0x",
      "defined_out": [
        "0x",
        "n#1"
      ],
      "stack_out": [
        "n#1",
        "0x"
      ]
    },
    "56": {
      "op": "bytec_2 // 0x0a",
      "stack_out": [
        "n#1",
        "0x",
        "0x0a"
      ]
    },
    "57": {
      "op": "uncover 2",
      "stack_out": [
        "0x",
        "0x0a",
        "n#1"
      ]
    },
    "59": {
      "op": "match main_switch_case_0@9 main_switch_case_1@10",
      "stack_out": []
    },
    "65": {
      "block": "main_switch_case_next@12",
      "stack_in": [],
      "op": "bytec_3 // 0x",
      "defined_out": [
        "0x"
      ],
      "stack_out": [
        "0x"
      ]
    },
    "66": {
      "op": "pushbytes 0x3130",
      "defined_out": [
        "0x",
        "0x3130"
      ],
      "stack_out": [
        "0x",
        "0x3130"
      ]
    },
    "70": {
      "op": "txna ApplicationArgs 0",
      "defined_out": [
        "0x",
        "0x3130",
        "n#2"
      ],
      "stack_out": [
        "0x",
        "0x3130",
        "n#2"
      ]
    },
    "73": {
      "op": "match main_switch_case_0@15 main_switch_case_1@16",
      "stack_out": []
    },
    "79": {
      "block": "main_switch_case_next@18",
      "stack_in": [],
      "op": "pushbytess base32(AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA) base32(VCMJKWOY5P5P7SKMZFFOCEROPJCZOTIJMNIYNUCKH7LRO45JMJPQ) // addr AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAY5HFKQ, addr VCMJKWOY5P5P7SKMZFFOCEROPJCZOTIJMNIYNUCKH7LRO45JMJP6UYBIJA",
      "defined_out": [
        "Address(AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAY5HFKQ)",
        "Address(VCMJKWOY5P5P7SKMZFFOCEROPJCZOTIJMNIYNUCKH7LRO45JMJP6UYBIJA)"
      ],
      "stack_out": [
        "Address(AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAY5HFKQ)",
        "Address(VCMJKWOY5P5P7SKMZFFOCEROPJCZOTIJMNIYNUCKH7LRO45JMJP6UYBIJA)"
      ]
    },
    "147": {
      "op": "txn Sender",
      "defined_out": [
        "Address(AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAY5HFKQ)",
        "Address(VCMJKWOY5P5P7SKMZFFOCEROPJCZOTIJMNIYNUCKH7LRO45JMJP6UYBIJA)",
        "n#3"
      ],
      "stack_out": [
        "Address(AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAY5HFKQ)",
        "Address(VCMJKWOY5P5P7SKMZFFOCEROPJCZOTIJMNIYNUCKH7LRO45JMJP6UYBIJA)",
        "n#3"
      ]
    },
    "149": {
      "op": "match main_switch_case_0@21 main_switch_case_1@22",
      "stack_out": []
    },
    "155": {
      "block": "main_switch_case_next@24",
      "stack_in": [],
      "op": "txn NumAppArgs",
      "defined_out": [
        "n#0"
      ],
      "stack_out": [
        "n#0"
      ]
    },
    "157": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "n#0"
      ],
      "stack_out": [
        "n#0",
        "0"
      ]
    },
    "158": {
      "op": "bytec_0 // \"case_one\"",
      "defined_out": [
        "\"case_one\"",
        "0",
        "n#0"
      ],
      "stack_out": [
        "n#0",
        "0",
        "\"case_one\""
      ]
    },
    "159": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "n#0"
      ],
      "stack_out": [
        "n#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "160": {
      "error": "check self.case_one exists",
      "op": "assert // check self.case_one exists",
      "stack_out": [
        "n#0",
        "maybe_value%0#0"
      ]
    },
    "161": {
      "op": "intc_0 // 0",
      "stack_out": [
        "n#0",
        "maybe_value%0#0",
        "0"
      ]
    },
    "162": {
      "op": "bytec_1 // \"case_two\"",
      "defined_out": [
        "\"case_two\"",
        "0",
        "maybe_value%0#0",
        "n#0"
      ],
      "stack_out": [
        "n#0",
        "maybe_value%0#0",
        "0",
        "\"case_two\""
      ]
    },
    "163": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%1#0",
        "maybe_value%0#0",
        "maybe_value%1#0",
        "n#0"
      ],
      "stack_out": [
        "n#0",
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "164": {
      "error": "check self.case_two exists",
      "op": "assert // check self.case_two exists",
      "stack_out": [
        "n#0",
        "maybe_value%0#0",
        "maybe_value%1#0"
      ]
    },
    "165": {
      "op": "uncover 2",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "n#0"
      ]
    },
    "167": {
      "op": "match main_switch_case_0@27 main_switch_case_1@28",
      "stack_out": []
    },
    "173": {
      "op": "pushbytes 0x48656c6c6f2064656661756c74",
      "defined_out": [
        "0x48656c6c6f2064656661756c74"
      ],
      "stack_out": [
        "0x48656c6c6f2064656661756c74"
      ]
    },
    "188": {
      "op": "log",
      "stack_out": []
    },
    "189": {
      "block": "main_switch_case_next@30",
      "stack_in": [],
      "op": "txn NumAppArgs",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "191": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1",
        "0"
      ]
    },
    "192": {
      "op": ">",
      "defined_out": [
        "n#5"
      ],
      "stack_out": [
        "n#5"
      ]
    },
    "193": {
      "op": "switch main_switch_case_1@34 main_switch_case_0@33",
      "stack_out": []
    },
    "199": {
      "block": "main_switch_case_next@36",
      "stack_in": [],
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "200": {
      "op": "return",
      "stack_out": []
    },
    "201": {
      "block": "main_switch_case_0@33",
      "stack_in": [],
      "op": "pushbytes 0x48656c6c6f2054727565",
      "defined_out": [
        "0x48656c6c6f2054727565"
      ],
      "stack_out": [
        "0x48656c6c6f2054727565"
      ]
    },
    "213": {
      "op": "log",
      "stack_out": []
    },
    "214": {
      "op": "b main_switch_case_next@36"
    },
    "217": {
      "block": "main_switch_case_1@34",
      "stack_in": [],
      "op": "pushbytes 0x48656c6c6f2046616c7365",
      "defined_out": [
        "0x48656c6c6f2046616c7365"
      ],
      "stack_out": [
        "0x48656c6c6f2046616c7365"
      ]
    },
    "230": {
      "op": "log",
      "stack_out": []
    },
    "231": {
      "op": "b main_switch_case_next@36"
    },
    "234": {
      "block": "main_switch_case_1@28",
      "stack_in": [],
      "op": "pushbytes 0x48656c6c6f2074776f",
      "defined_out": [
        "0x48656c6c6f2074776f"
      ],
      "stack_out": [
        "0x48656c6c6f2074776f"
      ]
    },
    "245": {
      "op": "log",
      "stack_out": []
    },
    "246": {
      "op": "b main_switch_case_next@30"
    },
    "249": {
      "block": "main_switch_case_0@27",
      "stack_in": [],
      "op": "pushbytes 0x48656c6c6f206f6e65",
      "defined_out": [
        "0x48656c6c6f206f6e65"
      ],
      "stack_out": [
        "0x48656c6c6f206f6e65"
      ]
    },
    "260": {
      "op": "log",
      "stack_out": []
    },
    "261": {
      "op": "b main_switch_case_next@30"
    },
    "264": {
      "block": "main_switch_case_1@22",
      "stack_in": [],
      "op": "pushbytes 0x48656c6c6f2054686572652061646472657373",
      "defined_out": [
        "0x48656c6c6f2054686572652061646472657373"
      ],
      "stack_out": [
        "0x48656c6c6f2054686572652061646472657373"
      ]
    },
    "285": {
      "op": "log",
      "stack_out": []
    },
    "286": {
      "op": "b main_switch_case_next@24"
    },
    "289": {
      "block": "main_switch_case_0@21",
      "stack_in": [],
      "op": "pushbytes 0x48656c6c6f2061646472657373",
      "defined_out": [
        "0x48656c6c6f2061646472657373"
      ],
      "stack_out": [
        "0x48656c6c6f2061646472657373"
      ]
    },
    "304": {
      "op": "log",
      "stack_out": []
    },
    "305": {
      "op": "b main_switch_case_next@24"
    },
    "308": {
      "block": "main_switch_case_1@16",
      "stack_in": [],
      "op": "pushbytes 0x48656c6c6f205468657265206279746573",
      "defined_out": [
        "0x48656c6c6f205468657265206279746573"
      ],
      "stack_out": [
        "0x48656c6c6f205468657265206279746573"
      ]
    },
    "327": {
      "op": "log",
      "stack_out": []
    },
    "328": {
      "op": "b main_switch_case_next@18"
    },
    "331": {
      "block": "main_switch_case_0@15",
      "stack_in": [],
      "op": "pushbytes 0x48656c6c6f206279746573",
      "defined_out": [
        "0x48656c6c6f206279746573"
      ],
      "stack_out": [
        "0x48656c6c6f206279746573"
      ]
    },
    "344": {
      "op": "log",
      "stack_out": []
    },
    "345": {
      "op": "b main_switch_case_next@18"
    },
    "348": {
      "block": "main_switch_case_1@10",
      "stack_in": [],
      "op": "pushbytes 0x48656c6c6f2054686572652062696775696e74",
      "defined_out": [
        "0x48656c6c6f2054686572652062696775696e74"
      ],
      "stack_out": [
        "0x48656c6c6f2054686572652062696775696e74"
      ]
    },
    "369": {
      "op": "log",
      "stack_out": []
    },
    "370": {
      "op": "b main_switch_case_next@12"
    },
    "373": {
      "block": "main_switch_case_0@9",
      "stack_in": [],
      "op": "pushbytes 0x48656c6c6f2062696775696e74",
      "defined_out": [
        "0x48656c6c6f2062696775696e74"
      ],
      "stack_out": [
        "0x48656c6c6f2062696775696e74"
      ]
    },
    "388": {
      "op": "log",
      "stack_out": []
    },
    "389": {
      "op": "b main_switch_case_next@12"
    },
    "392": {
      "block": "main_switch_case_2@4",
      "stack_in": [],
      "op": "pushbytes 0x48656c6c6f205468657265",
      "defined_out": [
        "0x48656c6c6f205468657265"
      ],
      "stack_out": [
        "0x48656c6c6f205468657265"
      ]
    },
    "405": {
      "op": "log",
      "stack_out": []
    },
    "406": {
      "op": "b main_switch_case_next@6"
    },
    "409": {
      "block": "main_switch_case_1@3",
      "stack_in": [],
      "op": "pushbytes 0x48656c6c6f",
      "defined_out": [
        "0x48656c6c6f"
      ],
      "stack_out": [
        "0x48656c6c6f"
      ]
    },
    "416": {
      "op": "log",
      "stack_out": []
    },
    "417": {
      "op": "b main_switch_case_next@6"
    }
  }
}