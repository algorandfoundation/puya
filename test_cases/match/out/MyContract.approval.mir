// Op                                                                                         Stack (out)
// test_cases.match.contract.MyContract.approval_program() -> uint64:
main_block@0:
    // match/contract.py:6
    // self.case_one = algopy.UInt64(1)
    byte "case_one"                                                                           "case_one"
    int 1                                                                                     "case_one",1
    app_global_put
    // match/contract.py:7
    // self.case_two = algopy.UInt64(2)
    byte "case_two"                                                                           "case_two"
    int 2                                                                                     "case_two",2
    app_global_put
    // match/contract.py:8
    // self.match_uint64()
    callsub match_uint64
    // match/contract.py:9
    // self.match_biguint()
    callsub match_biguint
    // match/contract.py:10
    // self.match_bytes()
    callsub match_bytes
    // match/contract.py:11
    // self.match_address()
    callsub match_address
    // match/contract.py:12
    // self.match_attributes()
    callsub match_attributes
    // match/contract.py:13
    // self.match_bools()
    callsub match_bools
    // match/contract.py:14
    // return True
    int 1                                                                                     1
    return


// test_cases.match.contract.MyContract.match_uint64() -> void:
match_uint64:
    // match/contract.py:16-17
    // @algopy.subroutine
    // def match_uint64(self) -> None:
    proto 0 0

match_uint64_block@0:
    // match/contract.py:18
    // n = algopy.op.Txn.num_app_args
    txn NumAppArgs                                                                            n#0
    // match/contract.py:20
    // case 0:
    int 0                                                                                     n#0,0
    // match/contract.py:23
    // case algopy.UInt64(10):
    int 10                                                                                    n#0,0,10
    // match/contract.py:19-25
    // match n:
    //     case 0:
    //         hello = algopy.Bytes(b"Hello")
    //         algopy.log(hello)
    //     case algopy.UInt64(10):
    //         hello = algopy.Bytes(b"Hello There")
    //         algopy.log(hello)
    l-load n#0 2                                                                              0,10,n#0
    match match_uint64_switch_case_0@1 match_uint64_switch_case_1@2
    retsub

match_uint64_switch_case_0@1:
    // match/contract.py:21
    // hello = algopy.Bytes(b"Hello")
    byte 0x48656c6c6f                                                                         0x48656c6c6f
    // match/contract.py:22
    // algopy.log(hello)
    log
    b match_uint64_switch_case_next@4

match_uint64_switch_case_1@2:
    // match/contract.py:24
    // hello = algopy.Bytes(b"Hello There")
    byte 0x48656c6c6f205468657265                                                             0x48656c6c6f205468657265
    // match/contract.py:25
    // algopy.log(hello)
    log
    // Implicit fall through to match_uint64_switch_case_next@4

match_uint64_switch_case_next@4:
    retsub


// test_cases.match.contract.MyContract.match_biguint() -> void:
match_biguint:
    // match/contract.py:38-39
    // @algopy.subroutine
    // def match_biguint(self) -> None:
    proto 0 0

match_biguint_block@0:
    // match/contract.py:40
    // n = algopy.op.Txn.num_app_args * algopy.BigUInt(10)
    txn NumAppArgs                                                                            tmp%0#0
    itob                                                                                      tmp%1#0
    byte 0x0a                                                                                 tmp%1#0,0x0a
    b*                                                                                        n#0
    // match/contract.py:42
    // case algopy.BigUInt(0):
    byte 0x                                                                                   n#0,0x
    // match/contract.py:45
    // case algopy.BigUInt(10):
    byte 0x0a                                                                                 n#0,0x,0x0a
    // match/contract.py:41-47
    // match n:
    //     case algopy.BigUInt(0):
    //         hello = algopy.Bytes(b"Hello biguint")
    //         algopy.log(hello)
    //     case algopy.BigUInt(10):
    //         hello = algopy.Bytes(b"Hello There biguint")
    //         algopy.log(hello)
    l-load n#0 2                                                                              0x,0x0a,n#0
    match match_biguint_switch_case_0@1 match_biguint_switch_case_1@2
    retsub

match_biguint_switch_case_0@1:
    // match/contract.py:43
    // hello = algopy.Bytes(b"Hello biguint")
    byte 0x48656c6c6f2062696775696e74                                                         0x48656c6c6f2062696775696e74
    // match/contract.py:44
    // algopy.log(hello)
    log
    b match_biguint_switch_case_next@4

match_biguint_switch_case_1@2:
    // match/contract.py:46
    // hello = algopy.Bytes(b"Hello There biguint")
    byte 0x48656c6c6f2054686572652062696775696e74                                             0x48656c6c6f2054686572652062696775696e74
    // match/contract.py:47
    // algopy.log(hello)
    log
    // Implicit fall through to match_biguint_switch_case_next@4

match_biguint_switch_case_next@4:
    retsub


// test_cases.match.contract.MyContract.match_bytes() -> void:
match_bytes:
    // match/contract.py:27-28
    // @algopy.subroutine
    // def match_bytes(self) -> None:
    proto 0 0

match_bytes_block@0:
    // match/contract.py:29
    // n = algopy.op.Txn.application_args(0)
    txna ApplicationArgs 0                                                                    n#0
    // match/contract.py:31
    // case algopy.Bytes(b""):
    byte 0x                                                                                   n#0,0x
    // match/contract.py:34
    // case algopy.Bytes(b"10"):
    byte 0x3130                                                                               n#0,0x,0x3130
    // match/contract.py:30-36
    // match n:
    //     case algopy.Bytes(b""):
    //         hello = algopy.Bytes(b"Hello bytes")
    //         algopy.log(hello)
    //     case algopy.Bytes(b"10"):
    //         hello = algopy.Bytes(b"Hello There bytes")
    //         algopy.log(hello)
    l-load n#0 2                                                                              0x,0x3130,n#0
    match match_bytes_switch_case_0@1 match_bytes_switch_case_1@2
    retsub

match_bytes_switch_case_0@1:
    // match/contract.py:32
    // hello = algopy.Bytes(b"Hello bytes")
    byte 0x48656c6c6f206279746573                                                             0x48656c6c6f206279746573
    // match/contract.py:33
    // algopy.log(hello)
    log
    b match_bytes_switch_case_next@4

match_bytes_switch_case_1@2:
    // match/contract.py:35
    // hello = algopy.Bytes(b"Hello There bytes")
    byte 0x48656c6c6f205468657265206279746573                                                 0x48656c6c6f205468657265206279746573
    // match/contract.py:36
    // algopy.log(hello)
    log
    // Implicit fall through to match_bytes_switch_case_next@4

match_bytes_switch_case_next@4:
    retsub


// test_cases.match.contract.MyContract.match_address() -> void:
match_address:
    // match/contract.py:49-50
    // @algopy.subroutine
    // def match_address(self) -> None:
    proto 0 0

match_address_block@0:
    // match/contract.py:51
    // n = algopy.op.Txn.sender
    txn Sender                                                                                n#0
    // match/contract.py:53
    // case algopy.Account("AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAY5HFKQ"):
    addr "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAY5HFKQ"                         n#0,Address(AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAY5HFKQ)
    // match/contract.py:56
    // case algopy.Account("VCMJKWOY5P5P7SKMZFFOCEROPJCZOTIJMNIYNUCKH7LRO45JMJP6UYBIJA"):
    addr "VCMJKWOY5P5P7SKMZFFOCEROPJCZOTIJMNIYNUCKH7LRO45JMJP6UYBIJA"                         n#0,Address(AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAY5HFKQ),Address(VCMJKWOY5P5P7SKMZFFOCEROPJCZOTIJMNIYNUCKH7LRO45JMJP6UYBIJA)
    // match/contract.py:52-58
    // match n:
    //     case algopy.Account("AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAY5HFKQ"):
    //         hello = algopy.Bytes(b"Hello address")
    //         algopy.log(hello)
    //     case algopy.Account("VCMJKWOY5P5P7SKMZFFOCEROPJCZOTIJMNIYNUCKH7LRO45JMJP6UYBIJA"):
    //         hello = algopy.Bytes(b"Hello There address")
    //         algopy.log(hello)
    l-load n#0 2                                                                              Address(AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAY5HFKQ),Address(VCMJKWOY5P5P7SKMZFFOCEROPJCZOTIJMNIYNUCKH7LRO45JMJP6UYBIJA),n#0
    match match_address_switch_case_0@1 match_address_switch_case_1@2
    retsub

match_address_switch_case_0@1:
    // match/contract.py:54
    // hello = algopy.Bytes(b"Hello address")
    byte 0x48656c6c6f2061646472657373                                                         0x48656c6c6f2061646472657373
    // match/contract.py:55
    // algopy.log(hello)
    log
    b match_address_switch_case_next@4

match_address_switch_case_1@2:
    // match/contract.py:57
    // hello = algopy.Bytes(b"Hello There address")
    byte 0x48656c6c6f2054686572652061646472657373                                             0x48656c6c6f2054686572652061646472657373
    // match/contract.py:58
    // algopy.log(hello)
    log
    // Implicit fall through to match_address_switch_case_next@4

match_address_switch_case_next@4:
    retsub


// test_cases.match.contract.MyContract.match_attributes() -> void:
match_attributes:
    // match/contract.py:60-61
    // @algopy.subroutine
    // def match_attributes(self) -> None:
    proto 0 0

match_attributes_block@0:
    // match/contract.py:62
    // n = algopy.op.Txn.num_app_args
    txn NumAppArgs                                                                            n#0
    // match/contract.py:64
    // case self.case_one:
    int 0                                                                                     n#0,0
    byte "case_one"                                                                           n#0,0,"case_one"
    app_global_get_ex                                                                         n#0,maybe_value%0#0,maybe_exists%0#0
    assert // check self.case_one exists                                                      n#0,maybe_value%0#0
    // match/contract.py:67
    // case self.case_two:
    int 0                                                                                     n#0,maybe_value%0#0,0
    byte "case_two"                                                                           n#0,maybe_value%0#0,0,"case_two"
    app_global_get_ex                                                                         n#0,maybe_value%0#0,maybe_value%1#0,maybe_exists%1#0
    assert // check self.case_two exists                                                      n#0,maybe_value%0#0,maybe_value%1#0
    // match/contract.py:63-72
    // match n:
    //     case self.case_one:
    //         hello = algopy.Bytes(b"Hello one")
    //         algopy.log(hello)
    //     case self.case_two:
    //         hello = algopy.Bytes(b"Hello two")
    //         algopy.log(hello)
    //     case _:
    //         hello = algopy.Bytes(b"Hello default")
    //         algopy.log(hello)
    l-load maybe_value%0#0 1                                                                  n#0,maybe_value%1#0,maybe_value%0#0
    l-load maybe_value%1#0 1                                                                  n#0,maybe_value%0#0,maybe_value%1#0
    l-load n#0 2                                                                              maybe_value%0#0,maybe_value%1#0,n#0
    match match_attributes_switch_case_0@1 match_attributes_switch_case_1@2
    // match/contract.py:71-72
    // hello = algopy.Bytes(b"Hello default")
    // algopy.log(hello)
    b match_attributes_switch_case_default@3

match_attributes_switch_case_0@1:
    // match/contract.py:65
    // hello = algopy.Bytes(b"Hello one")
    byte 0x48656c6c6f206f6e65                                                                 0x48656c6c6f206f6e65
    // match/contract.py:66
    // algopy.log(hello)
    log
    b match_attributes_switch_case_next@4

match_attributes_switch_case_1@2:
    // match/contract.py:68
    // hello = algopy.Bytes(b"Hello two")
    byte 0x48656c6c6f2074776f                                                                 0x48656c6c6f2074776f
    // match/contract.py:69
    // algopy.log(hello)
    log
    b match_attributes_switch_case_next@4

match_attributes_switch_case_default@3:
    // match/contract.py:71
    // hello = algopy.Bytes(b"Hello default")
    byte 0x48656c6c6f2064656661756c74                                                         0x48656c6c6f2064656661756c74
    // match/contract.py:72
    // algopy.log(hello)
    log
    // Implicit fall through to match_attributes_switch_case_next@4

match_attributes_switch_case_next@4:
    retsub


// test_cases.match.contract.MyContract.match_bools() -> void:
match_bools:
    // match/contract.py:74-75
    // @algopy.subroutine
    // def match_bools(self) -> None:
    proto 0 0

match_bools_block@0:
    // match/contract.py:76
    // n = algopy.op.Txn.num_app_args > 0
    txn NumAppArgs                                                                            tmp%0#0
    int 0                                                                                     tmp%0#0,0
    >                                                                                         n#0
    // match/contract.py:77-83
    // match n:
    //     case True:
    //         hello = algopy.Bytes(b"Hello True")
    //         algopy.log(hello)
    //     case False:
    //         hello = algopy.Bytes(b"Hello False")
    //         algopy.log(hello)
    switch match_bools_switch_case_1@2 match_bools_switch_case_0@1
    retsub

match_bools_switch_case_0@1:
    // match/contract.py:79
    // hello = algopy.Bytes(b"Hello True")
    byte 0x48656c6c6f2054727565                                                               0x48656c6c6f2054727565
    // match/contract.py:80
    // algopy.log(hello)
    log
    b match_bools_switch_case_next@4

match_bools_switch_case_1@2:
    // match/contract.py:82
    // hello = algopy.Bytes(b"Hello False")
    byte 0x48656c6c6f2046616c7365                                                             0x48656c6c6f2046616c7365
    // match/contract.py:83
    // algopy.log(hello)
    log
    // Implicit fall through to match_bools_switch_case_next@4

match_bools_switch_case_next@4:
    retsub


