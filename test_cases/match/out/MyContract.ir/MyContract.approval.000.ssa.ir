main test_cases.match.contract.MyContract.approval_program:
    block@0: // L5
        (app_global_put "case_one" 1u)
        (app_global_put "case_two" 2u)
        test_cases.match.contract.MyContract.match_uint64()
        test_cases.match.contract.MyContract.match_biguint()
        test_cases.match.contract.MyContract.match_bytes()
        test_cases.match.contract.MyContract.match_address()
        test_cases.match.contract.MyContract.match_attributes()
        test_cases.match.contract.MyContract.match_bools()
        return 1u

subroutine test_cases.match.contract.MyContract.match_uint64() -> void:
    block@0: // L16
        let tmp%0#0: uint64 = (txn NumAppArgs)
        let n#0: uint64 = tmp%0#0
        switch n#0 {0u => block@1, 123u => block@2, 10u => block@3, * => block@4}
    block@1: // switch_case_0_L20
        goto block@2
    block@2: // switch_case_1_L21
        let hello#0: bytes = 0x48656c6c6f
        (log hello#0)
        goto block@4
    block@3: // switch_case_2_L24
        let hello#1: bytes = 0x48656c6c6f205468657265
        (log hello#1)
        goto block@4
    block@4: // switch_case_next_L19
        return 

subroutine test_cases.match.contract.MyContract.match_bytes() -> void:
    block@0: // L27
        let tmp%0#0: bytes = (txna ApplicationArgs 0)
        let n#0: bytes = tmp%0#0
        switch n#0 {0x => block@1, 0x3130 => block@2, * => block@3}
    block@1: // switch_case_0_L32
        let hello#0: bytes = 0x48656c6c6f206279746573
        (log hello#0)
        goto block@3
    block@2: // switch_case_1_L35
        let hello#1: bytes = 0x48656c6c6f205468657265206279746573
        (log hello#1)
        goto block@3
    block@3: // switch_case_next_L30
        return 

subroutine test_cases.match.contract.MyContract.match_biguint() -> void:
    block@0: // L38
        let tmp%0#0: uint64 = (txn NumAppArgs)
        let tmp%1#0: biguint = (itob tmp%0#0)
        let tmp%2#0: biguint = (b* tmp%1#0 10b)
        let n#0: biguint = tmp%2#0
        switch n#0 {0b => block@1, 10b => block@2, * => block@3}
    block@1: // switch_case_0_L43
        let hello#0: bytes = 0x48656c6c6f2062696775696e74
        (log hello#0)
        goto block@3
    block@2: // switch_case_1_L46
        let hello#1: bytes = 0x48656c6c6f2054686572652062696775696e74
        (log hello#1)
        goto block@3
    block@3: // switch_case_next_L41
        return 

subroutine test_cases.match.contract.MyContract.match_address() -> void:
    block@0: // L49
        let tmp%0#0: account = (txn Sender)
        let n#0: account = tmp%0#0
        switch n#0 {addr AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAY5HFKQ => block@1, addr VCMJKWOY5P5P7SKMZFFOCEROPJCZOTIJMNIYNUCKH7LRO45JMJP6UYBIJA => block@2, * => block@3}
    block@1: // switch_case_0_L54
        let hello#0: bytes = 0x48656c6c6f2061646472657373
        (log hello#0)
        goto block@3
    block@2: // switch_case_1_L57
        let hello#1: bytes = 0x48656c6c6f2054686572652061646472657373
        (log hello#1)
        goto block@3
    block@3: // switch_case_next_L52
        return 

subroutine test_cases.match.contract.MyContract.match_attributes() -> void:
    block@0: // L60
        let tmp%0#0: uint64 = (txn NumAppArgs)
        let n#0: uint64 = tmp%0#0
        let (maybe_value%0#0: uint64, maybe_exists%0#0: bool) = (app_global_get_ex 0u "case_one")
        (assert maybe_exists%0#0) // check self.case_one exists
        let (maybe_value%1#0: uint64, maybe_exists%1#0: bool) = (app_global_get_ex 0u "case_two")
        (assert maybe_exists%1#0) // check self.case_two exists
        switch n#0 {maybe_value%0#0 => block@1, maybe_value%1#0 => block@2, * => block@3}
    block@1: // switch_case_0_L65
        let hello#0: bytes = 0x48656c6c6f206f6e65
        (log hello#0)
        goto block@4
    block@2: // switch_case_1_L68
        let hello#1: bytes = 0x48656c6c6f2074776f
        (log hello#1)
        goto block@4
    block@3: // switch_case_default_L71
        let hello#2: bytes = 0x48656c6c6f2064656661756c74
        (log hello#2)
        goto block@4
    block@4: // switch_case_next_L63
        return 

subroutine test_cases.match.contract.MyContract.match_bools() -> void:
    block@0: // L74
        let tmp%0#0: uint64 = (txn NumAppArgs)
        let tmp%1#0: bool = (> tmp%0#0 0u)
        let n#0: bool = tmp%1#0
        switch n#0 {1u => block@1, 0u => block@2, * => block@3}
    block@1: // switch_case_0_L79
        let hello#0: bytes = 0x48656c6c6f2054727565
        (log hello#0)
        goto block@3
    block@2: // switch_case_1_L82
        let hello#1: bytes = 0x48656c6c6f2046616c7365
        (log hello#1)
        goto block@3
    block@3: // switch_case_next_L77
        return 