{
  "version": 3,
  "sources": [
    "../contract.py"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAKQ;AAAgB;AAAhB;AACA;AAAgB;;AAAhB;AACA;;;AACA;;;AACA;;;AACA;;;AACA;;;AACA;;;AACO;AAAP;;;;AAII;;AAEK;AAAI;;AAGJ;;AAJT;;AAAA;;;;;;;;AAAA;;;;AAKgB;;;;;;;;;;;;;AACR;;;;AAJQ;;;;;;;AACR;;;;AAFC;;;;;;AASL;;;AAEK;AAGA;;;;AAJT;;AAAA;;;;;;AAAA;;;;AAKgB;;;;;;;;;;;;;;;;;;;AACR;;;;AAJQ;;;;;;;;;;;;;AACR;;;;;;;AAOJ;;AAAA;AAA6B;AAA7B;AAEK;AAGA;AAJT;;AAAA;;;;;;AAAA;;;;AAKgB;;;;;;;;;;;;;;;;;;;;;AACR;;;;AAJQ;;;;;;;;;;;;;;;AACR;;;;;;;AAOJ;;AAEK;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAGA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAJT;;AAAA;;;;;;AAAA;;;;AAKgB;;;;;;;;;;;;;;;;;;;;;AACR;;;;AAJQ;;;;;;;;;;;;;;;AACR;;;;;;;AAOJ;;AAEK;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAJT;;AAAA;;;;;;AAAA;;;AAQgB;;;;;;;;;;;;;;;AACR;;;;;AAJQ;;;;;;;;;;;AACR;;;;AAJQ;;;;;;;;;;;AACR;;;;;;;AAUJ;;AAA6B;AAA7B;AAEK;AAGA;AAJT;;AAAA;;;;;;AAAA;;;;AAKgB;;;;;;;;;;;;;AACR;;;;AAJQ;;;;;;;;;;;;AACR;",
  "op_pc_offset": 0,
  "pc_events": {
    "1": {
      "subroutine": "test_cases.match.contract.MyContract.approval_program",
      "params": {},
      "block": "main",
      "stack_in": [],
      "op": "intcblock 0 1"
    },
    "5": {
      "op": "bytecblock \"case_one\" \"case_two\" 0x 0x0a"
    },
    "28": {
      "op": "b main_block@0"
    },
    "31": {
      "block": "main_block@0",
      "stack_in": [],
      "op": "bytec_0 // \"case_one\"",
      "defined_out": [
        "\"case_one\""
      ],
      "stack_out": [
        "\"case_one\""
      ]
    },
    "32": {
      "op": "intc_1 // 1",
      "defined_out": [
        "\"case_one\"",
        "1"
      ],
      "stack_out": [
        "\"case_one\"",
        "1"
      ]
    },
    "33": {
      "op": "app_global_put",
      "stack_out": []
    },
    "34": {
      "op": "bytec_1 // \"case_two\"",
      "defined_out": [
        "\"case_two\""
      ],
      "stack_out": [
        "\"case_two\""
      ]
    },
    "35": {
      "op": "pushint 2 // 2",
      "defined_out": [
        "\"case_two\"",
        "2"
      ],
      "stack_out": [
        "\"case_two\"",
        "2"
      ]
    },
    "37": {
      "op": "app_global_put",
      "stack_out": []
    },
    "38": {
      "callsub": "test_cases.match.contract.MyContract.match_uint64",
      "op": "callsub match_uint64"
    },
    "41": {
      "callsub": "test_cases.match.contract.MyContract.match_biguint",
      "op": "callsub match_biguint"
    },
    "44": {
      "callsub": "test_cases.match.contract.MyContract.match_bytes",
      "op": "callsub match_bytes"
    },
    "47": {
      "callsub": "test_cases.match.contract.MyContract.match_address",
      "op": "callsub match_address"
    },
    "50": {
      "callsub": "test_cases.match.contract.MyContract.match_attributes",
      "op": "callsub match_attributes"
    },
    "53": {
      "callsub": "test_cases.match.contract.MyContract.match_bools",
      "op": "callsub match_bools"
    },
    "56": {
      "op": "intc_1 // 1",
      "stack_out": [
        "1"
      ]
    },
    "57": {
      "op": "return",
      "stack_out": []
    },
    "58": {
      "subroutine": "test_cases.match.contract.MyContract.match_uint64",
      "params": {},
      "block": "match_uint64",
      "stack_in": [],
      "op": "b match_uint64_block@0"
    },
    "61": {
      "block": "match_uint64_block@0",
      "stack_in": [],
      "op": "txn NumAppArgs",
      "defined_out": [
        "n#0"
      ],
      "stack_out": [
        "n#0"
      ]
    },
    "63": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "n#0"
      ],
      "stack_out": [
        "n#0",
        "0"
      ]
    },
    "64": {
      "op": "pushint 123 // 123",
      "defined_out": [
        "0",
        "123",
        "n#0"
      ],
      "stack_out": [
        "n#0",
        "0",
        "123"
      ]
    },
    "66": {
      "op": "pushint 10 // 10",
      "defined_out": [
        "0",
        "10",
        "123",
        "n#0"
      ],
      "stack_out": [
        "n#0",
        "0",
        "123",
        "10"
      ]
    },
    "68": {
      "op": "uncover 3",
      "stack_out": [
        "0",
        "123",
        "10",
        "n#0"
      ]
    },
    "70": {
      "op": "match match_uint64_switch_case_0@1 match_uint64_switch_case_1@2 match_uint64_switch_case_2@3",
      "stack_out": []
    },
    "78": {
      "op": "b match_uint64_switch_case_next@4"
    },
    "81": {
      "block": "match_uint64_switch_case_next@4",
      "stack_in": [],
      "retsub": true,
      "op": "retsub"
    },
    "82": {
      "block": "match_uint64_switch_case_2@3",
      "stack_in": [],
      "op": "pushbytes 0x48656c6c6f205468657265",
      "defined_out": [
        "0x48656c6c6f205468657265"
      ],
      "stack_out": [
        "0x48656c6c6f205468657265"
      ]
    },
    "95": {
      "op": "log",
      "stack_out": []
    },
    "96": {
      "op": "b match_uint64_switch_case_next@4"
    },
    "99": {
      "block": "match_uint64_switch_case_1@2",
      "stack_in": [],
      "op": "pushbytes 0x48656c6c6f",
      "defined_out": [
        "0x48656c6c6f"
      ],
      "stack_out": [
        "0x48656c6c6f"
      ]
    },
    "106": {
      "op": "log",
      "stack_out": []
    },
    "107": {
      "op": "b match_uint64_switch_case_next@4"
    },
    "110": {
      "block": "match_uint64_switch_case_0@1",
      "stack_in": [],
      "op": "b match_uint64_switch_case_1@2"
    },
    "113": {
      "subroutine": "test_cases.match.contract.MyContract.match_bytes",
      "params": {},
      "block": "match_bytes",
      "stack_in": [],
      "op": "b match_bytes_block@0"
    },
    "116": {
      "block": "match_bytes_block@0",
      "stack_in": [],
      "op": "txna ApplicationArgs 0",
      "defined_out": [
        "n#0"
      ],
      "stack_out": [
        "n#0"
      ]
    },
    "119": {
      "op": "bytec_2 // 0x",
      "defined_out": [
        "0x",
        "n#0"
      ],
      "stack_out": [
        "n#0",
        "0x"
      ]
    },
    "120": {
      "op": "pushbytes 0x3130",
      "defined_out": [
        "0x",
        "0x3130",
        "n#0"
      ],
      "stack_out": [
        "n#0",
        "0x",
        "0x3130"
      ]
    },
    "124": {
      "op": "uncover 2",
      "stack_out": [
        "0x",
        "0x3130",
        "n#0"
      ]
    },
    "126": {
      "op": "match match_bytes_switch_case_0@1 match_bytes_switch_case_1@2",
      "stack_out": []
    },
    "132": {
      "op": "b match_bytes_switch_case_next@3"
    },
    "135": {
      "block": "match_bytes_switch_case_next@3",
      "stack_in": [],
      "retsub": true,
      "op": "retsub"
    },
    "136": {
      "block": "match_bytes_switch_case_1@2",
      "stack_in": [],
      "op": "pushbytes 0x48656c6c6f205468657265206279746573",
      "defined_out": [
        "0x48656c6c6f205468657265206279746573"
      ],
      "stack_out": [
        "0x48656c6c6f205468657265206279746573"
      ]
    },
    "155": {
      "op": "log",
      "stack_out": []
    },
    "156": {
      "op": "b match_bytes_switch_case_next@3"
    },
    "159": {
      "block": "match_bytes_switch_case_0@1",
      "stack_in": [],
      "op": "pushbytes 0x48656c6c6f206279746573",
      "defined_out": [
        "0x48656c6c6f206279746573"
      ],
      "stack_out": [
        "0x48656c6c6f206279746573"
      ]
    },
    "172": {
      "op": "log",
      "stack_out": []
    },
    "173": {
      "op": "b match_bytes_switch_case_next@3"
    },
    "176": {
      "subroutine": "test_cases.match.contract.MyContract.match_biguint",
      "params": {},
      "block": "match_biguint",
      "stack_in": [],
      "op": "b match_biguint_block@0"
    },
    "179": {
      "block": "match_biguint_block@0",
      "stack_in": [],
      "op": "txn NumAppArgs",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "181": {
      "op": "itob",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "182": {
      "op": "bytec_3 // 0x0a",
      "defined_out": [
        "0x0a",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "0x0a"
      ]
    },
    "183": {
      "op": "b*",
      "defined_out": [
        "n#0"
      ],
      "stack_out": [
        "n#0"
      ]
    },
    "184": {
      "op": "bytec_2 // 0x",
      "defined_out": [
        "0x",
        "n#0"
      ],
      "stack_out": [
        "n#0",
        "0x"
      ]
    },
    "185": {
      "op": "bytec_3 // 0x0a",
      "stack_out": [
        "n#0",
        "0x",
        "0x0a"
      ]
    },
    "186": {
      "op": "uncover 2",
      "stack_out": [
        "0x",
        "0x0a",
        "n#0"
      ]
    },
    "188": {
      "op": "match match_biguint_switch_case_0@1 match_biguint_switch_case_1@2",
      "stack_out": []
    },
    "194": {
      "op": "b match_biguint_switch_case_next@3"
    },
    "197": {
      "block": "match_biguint_switch_case_next@3",
      "stack_in": [],
      "retsub": true,
      "op": "retsub"
    },
    "198": {
      "block": "match_biguint_switch_case_1@2",
      "stack_in": [],
      "op": "pushbytes 0x48656c6c6f2054686572652062696775696e74",
      "defined_out": [
        "0x48656c6c6f2054686572652062696775696e74"
      ],
      "stack_out": [
        "0x48656c6c6f2054686572652062696775696e74"
      ]
    },
    "219": {
      "op": "log",
      "stack_out": []
    },
    "220": {
      "op": "b match_biguint_switch_case_next@3"
    },
    "223": {
      "block": "match_biguint_switch_case_0@1",
      "stack_in": [],
      "op": "pushbytes 0x48656c6c6f2062696775696e74",
      "defined_out": [
        "0x48656c6c6f2062696775696e74"
      ],
      "stack_out": [
        "0x48656c6c6f2062696775696e74"
      ]
    },
    "238": {
      "op": "log",
      "stack_out": []
    },
    "239": {
      "op": "b match_biguint_switch_case_next@3"
    },
    "242": {
      "subroutine": "test_cases.match.contract.MyContract.match_address",
      "params": {},
      "block": "match_address",
      "stack_in": [],
      "op": "b match_address_block@0"
    },
    "245": {
      "block": "match_address_block@0",
      "stack_in": [],
      "op": "txn Sender",
      "defined_out": [
        "n#0"
      ],
      "stack_out": [
        "n#0"
      ]
    },
    "247": {
      "op": "pushbytes base32(AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA) // addr AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAY5HFKQ",
      "defined_out": [
        "Address(AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAY5HFKQ)",
        "n#0"
      ],
      "stack_out": [
        "n#0",
        "Address(AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAY5HFKQ)"
      ]
    },
    "281": {
      "op": "pushbytes base32(VCMJKWOY5P5P7SKMZFFOCEROPJCZOTIJMNIYNUCKH7LRO45JMJPQ) // addr VCMJKWOY5P5P7SKMZFFOCEROPJCZOTIJMNIYNUCKH7LRO45JMJP6UYBIJA",
      "defined_out": [
        "Address(AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAY5HFKQ)",
        "Address(VCMJKWOY5P5P7SKMZFFOCEROPJCZOTIJMNIYNUCKH7LRO45JMJP6UYBIJA)",
        "n#0"
      ],
      "stack_out": [
        "n#0",
        "Address(AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAY5HFKQ)",
        "Address(VCMJKWOY5P5P7SKMZFFOCEROPJCZOTIJMNIYNUCKH7LRO45JMJP6UYBIJA)"
      ]
    },
    "315": {
      "op": "uncover 2",
      "stack_out": [
        "Address(AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAY5HFKQ)",
        "Address(VCMJKWOY5P5P7SKMZFFOCEROPJCZOTIJMNIYNUCKH7LRO45JMJP6UYBIJA)",
        "n#0"
      ]
    },
    "317": {
      "op": "match match_address_switch_case_0@1 match_address_switch_case_1@2",
      "stack_out": []
    },
    "323": {
      "op": "b match_address_switch_case_next@3"
    },
    "326": {
      "block": "match_address_switch_case_next@3",
      "stack_in": [],
      "retsub": true,
      "op": "retsub"
    },
    "327": {
      "block": "match_address_switch_case_1@2",
      "stack_in": [],
      "op": "pushbytes 0x48656c6c6f2054686572652061646472657373",
      "defined_out": [
        "0x48656c6c6f2054686572652061646472657373"
      ],
      "stack_out": [
        "0x48656c6c6f2054686572652061646472657373"
      ]
    },
    "348": {
      "op": "log",
      "stack_out": []
    },
    "349": {
      "op": "b match_address_switch_case_next@3"
    },
    "352": {
      "block": "match_address_switch_case_0@1",
      "stack_in": [],
      "op": "pushbytes 0x48656c6c6f2061646472657373",
      "defined_out": [
        "0x48656c6c6f2061646472657373"
      ],
      "stack_out": [
        "0x48656c6c6f2061646472657373"
      ]
    },
    "367": {
      "op": "log",
      "stack_out": []
    },
    "368": {
      "op": "b match_address_switch_case_next@3"
    },
    "371": {
      "subroutine": "test_cases.match.contract.MyContract.match_attributes",
      "params": {},
      "block": "match_attributes",
      "stack_in": [],
      "op": "b match_attributes_block@0"
    },
    "374": {
      "block": "match_attributes_block@0",
      "stack_in": [],
      "op": "txn NumAppArgs",
      "defined_out": [
        "n#0"
      ],
      "stack_out": [
        "n#0"
      ]
    },
    "376": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "n#0"
      ],
      "stack_out": [
        "n#0",
        "0"
      ]
    },
    "377": {
      "op": "bytec_0 // \"case_one\"",
      "defined_out": [
        "\"case_one\"",
        "0",
        "n#0"
      ],
      "stack_out": [
        "n#0",
        "0",
        "\"case_one\""
      ]
    },
    "378": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "n#0"
      ],
      "stack_out": [
        "n#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "379": {
      "error": "check self.case_one exists",
      "op": "assert // check self.case_one exists",
      "stack_out": [
        "n#0",
        "maybe_value%0#0"
      ]
    },
    "380": {
      "op": "intc_0 // 0",
      "stack_out": [
        "n#0",
        "maybe_value%0#0",
        "0"
      ]
    },
    "381": {
      "op": "bytec_1 // \"case_two\"",
      "defined_out": [
        "\"case_two\"",
        "0",
        "maybe_value%0#0",
        "n#0"
      ],
      "stack_out": [
        "n#0",
        "maybe_value%0#0",
        "0",
        "\"case_two\""
      ]
    },
    "382": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%1#0",
        "maybe_value%0#0",
        "maybe_value%1#0",
        "n#0"
      ],
      "stack_out": [
        "n#0",
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "383": {
      "error": "check self.case_two exists",
      "op": "assert // check self.case_two exists",
      "stack_out": [
        "n#0",
        "maybe_value%0#0",
        "maybe_value%1#0"
      ]
    },
    "384": {
      "op": "uncover 2",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "n#0"
      ]
    },
    "386": {
      "op": "match match_attributes_switch_case_0@1 match_attributes_switch_case_1@2",
      "stack_out": []
    },
    "392": {
      "op": "b match_attributes_switch_case_default@3"
    },
    "395": {
      "block": "match_attributes_switch_case_default@3",
      "stack_in": [],
      "op": "pushbytes 0x48656c6c6f2064656661756c74",
      "defined_out": [
        "0x48656c6c6f2064656661756c74"
      ],
      "stack_out": [
        "0x48656c6c6f2064656661756c74"
      ]
    },
    "410": {
      "op": "log",
      "stack_out": []
    },
    "411": {
      "op": "b match_attributes_switch_case_next@4"
    },
    "414": {
      "block": "match_attributes_switch_case_next@4",
      "stack_in": [],
      "retsub": true,
      "op": "retsub"
    },
    "415": {
      "block": "match_attributes_switch_case_1@2",
      "stack_in": [],
      "op": "pushbytes 0x48656c6c6f2074776f",
      "defined_out": [
        "0x48656c6c6f2074776f"
      ],
      "stack_out": [
        "0x48656c6c6f2074776f"
      ]
    },
    "426": {
      "op": "log",
      "stack_out": []
    },
    "427": {
      "op": "b match_attributes_switch_case_next@4"
    },
    "430": {
      "block": "match_attributes_switch_case_0@1",
      "stack_in": [],
      "op": "pushbytes 0x48656c6c6f206f6e65",
      "defined_out": [
        "0x48656c6c6f206f6e65"
      ],
      "stack_out": [
        "0x48656c6c6f206f6e65"
      ]
    },
    "441": {
      "op": "log",
      "stack_out": []
    },
    "442": {
      "op": "b match_attributes_switch_case_next@4"
    },
    "445": {
      "subroutine": "test_cases.match.contract.MyContract.match_bools",
      "params": {},
      "block": "match_bools",
      "stack_in": [],
      "op": "b match_bools_block@0"
    },
    "448": {
      "block": "match_bools_block@0",
      "stack_in": [],
      "op": "txn NumAppArgs",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "450": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "0"
      ]
    },
    "451": {
      "op": ">",
      "defined_out": [
        "n#0"
      ],
      "stack_out": [
        "n#0"
      ]
    },
    "452": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "n#0"
      ],
      "stack_out": [
        "n#0",
        "1"
      ]
    },
    "453": {
      "op": "intc_0 // 0",
      "stack_out": [
        "n#0",
        "1",
        "0"
      ]
    },
    "454": {
      "op": "uncover 2",
      "stack_out": [
        "1",
        "0",
        "n#0"
      ]
    },
    "456": {
      "op": "match match_bools_switch_case_0@1 match_bools_switch_case_1@2",
      "stack_out": []
    },
    "462": {
      "op": "b match_bools_switch_case_next@3"
    },
    "465": {
      "block": "match_bools_switch_case_next@3",
      "stack_in": [],
      "retsub": true,
      "op": "retsub"
    },
    "466": {
      "block": "match_bools_switch_case_1@2",
      "stack_in": [],
      "op": "pushbytes 0x48656c6c6f2046616c7365",
      "defined_out": [
        "0x48656c6c6f2046616c7365"
      ],
      "stack_out": [
        "0x48656c6c6f2046616c7365"
      ]
    },
    "479": {
      "op": "log",
      "stack_out": []
    },
    "480": {
      "op": "b match_bools_switch_case_next@3"
    },
    "483": {
      "block": "match_bools_switch_case_0@1",
      "stack_in": [],
      "op": "pushbytes 0x48656c6c6f2054727565",
      "defined_out": [
        "0x48656c6c6f2054727565"
      ],
      "stack_out": [
        "0x48656c6c6f2054727565"
      ]
    },
    "495": {
      "op": "log",
      "stack_out": []
    },
    "496": {
      "op": "b match_bools_switch_case_next@3"
    }
  }
}