{
  "version": 3,
  "sources": [
    "../contract.py"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAKQ;AAAgB;AAAhB;AACA;AAAgB;;AAAhB;AACA;;;AACA;;;AACA;;;AACA;;;AACA;;;AACA;;;AACO;AAAP;AAII;;AAEK;AAGA;;AAJT;;AAAA;;;;;;;AAKgB;;;;;;;;;;;;;AACR;;;;AAJQ;;;;;;;AACR;;;;AAOJ;;;AAEK;AAGA;;;;AAJT;;AAAA;;;;;;;AAKgB;;;;;;;;;;;;;;;;;;;AACR;;;;AAJQ;;;;;;;;;;;;;AACR;;;;AAOJ;;AAAA;AAA6B;AAA7B;AAEK;AAGA;AAJT;;AAAA;;;;;;;AAKgB;;;;;;;;;;;;;;;;;;;;;AACR;;;;AAJQ;;;;;;;;;;;;;;;AACR;;;;AAOJ;;AAEK;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAGA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAJT;;AAAA;;;;;;;AAKgB;;;;;;;;;;;;;;;;;;;;;AACR;;;;AAJQ;;;;;;;;;;;;;;;AACR;;;;AAOJ;;AAEK;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAJT;;AAAA;;;;;;AAQgB;;;;;;;;;;;;;;;AACR;;AAJQ;;;;;;;;;;;AACR;;;;AAJQ;;;;;;;;;;;AACR;;;;AAUJ;;AAA6B;AAA7B;AAEK;AAGA;AAJT;;AAAA;;;;;;;AAKgB;;;;;;;;;;;;;AACR;;;;AAJQ;;;;;;;;;;;;AACR;",
  "op_pc_offset": 0,
  "pc_events": {
    "1": {
      "subroutine": "test_cases.match.contract.MyContract.approval_program",
      "params": {},
      "block": "main",
      "stack_in": [],
      "op": "intcblock 0 1"
    },
    "5": {
      "op": "bytecblock \"case_one\" \"case_two\" 0x 0x0a"
    },
    "28": {
      "block": "main_block@0",
      "stack_in": [],
      "op": "bytec_0 // \"case_one\"",
      "defined_out": [
        "\"case_one\""
      ],
      "stack_out": [
        "\"case_one\""
      ]
    },
    "29": {
      "op": "intc_1 // 1",
      "defined_out": [
        "\"case_one\"",
        "1"
      ],
      "stack_out": [
        "\"case_one\"",
        "1"
      ]
    },
    "30": {
      "op": "app_global_put",
      "stack_out": []
    },
    "31": {
      "op": "bytec_1 // \"case_two\"",
      "defined_out": [
        "\"case_two\""
      ],
      "stack_out": [
        "\"case_two\""
      ]
    },
    "32": {
      "op": "pushint 2 // 2",
      "defined_out": [
        "\"case_two\"",
        "2"
      ],
      "stack_out": [
        "\"case_two\"",
        "2"
      ]
    },
    "34": {
      "op": "app_global_put",
      "stack_out": []
    },
    "35": {
      "callsub": "test_cases.match.contract.MyContract.match_uint64",
      "op": "callsub match_uint64"
    },
    "38": {
      "callsub": "test_cases.match.contract.MyContract.match_biguint",
      "op": "callsub match_biguint"
    },
    "41": {
      "callsub": "test_cases.match.contract.MyContract.match_bytes",
      "op": "callsub match_bytes"
    },
    "44": {
      "callsub": "test_cases.match.contract.MyContract.match_address",
      "op": "callsub match_address"
    },
    "47": {
      "callsub": "test_cases.match.contract.MyContract.match_attributes",
      "op": "callsub match_attributes"
    },
    "50": {
      "callsub": "test_cases.match.contract.MyContract.match_bools",
      "op": "callsub match_bools"
    },
    "53": {
      "op": "intc_1 // 1",
      "stack_out": [
        "1"
      ]
    },
    "54": {
      "op": "return",
      "stack_out": []
    },
    "55": {
      "subroutine": "test_cases.match.contract.MyContract.match_uint64",
      "params": {},
      "block": "match_uint64_block@0",
      "stack_in": [],
      "op": "txn NumAppArgs",
      "defined_out": [
        "n#0"
      ],
      "stack_out": [
        "n#0"
      ]
    },
    "57": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "n#0"
      ],
      "stack_out": [
        "n#0",
        "0"
      ]
    },
    "58": {
      "op": "pushint 10 // 10",
      "defined_out": [
        "0",
        "10",
        "n#0"
      ],
      "stack_out": [
        "n#0",
        "0",
        "10"
      ]
    },
    "60": {
      "op": "uncover 2",
      "stack_out": [
        "0",
        "10",
        "n#0"
      ]
    },
    "62": {
      "op": "match match_uint64_switch_case_0@1 match_uint64_switch_case_1@2",
      "stack_out": []
    },
    "68": {
      "block": "match_uint64_switch_case_next@4",
      "stack_in": [],
      "retsub": true,
      "op": "retsub"
    },
    "69": {
      "block": "match_uint64_switch_case_1@2",
      "stack_in": [],
      "op": "pushbytes 0x48656c6c6f205468657265",
      "defined_out": [
        "0x48656c6c6f205468657265"
      ],
      "stack_out": [
        "0x48656c6c6f205468657265"
      ]
    },
    "82": {
      "op": "log",
      "stack_out": []
    },
    "83": {
      "op": "b match_uint64_switch_case_next@4"
    },
    "86": {
      "block": "match_uint64_switch_case_0@1",
      "stack_in": [],
      "op": "pushbytes 0x48656c6c6f",
      "defined_out": [
        "0x48656c6c6f"
      ],
      "stack_out": [
        "0x48656c6c6f"
      ]
    },
    "93": {
      "op": "log",
      "stack_out": []
    },
    "94": {
      "op": "b match_uint64_switch_case_next@4"
    },
    "97": {
      "subroutine": "test_cases.match.contract.MyContract.match_bytes",
      "params": {},
      "block": "match_bytes_block@0",
      "stack_in": [],
      "op": "txna ApplicationArgs 0",
      "defined_out": [
        "n#0"
      ],
      "stack_out": [
        "n#0"
      ]
    },
    "100": {
      "op": "bytec_2 // 0x",
      "defined_out": [
        "0x",
        "n#0"
      ],
      "stack_out": [
        "n#0",
        "0x"
      ]
    },
    "101": {
      "op": "pushbytes 0x3130",
      "defined_out": [
        "0x",
        "0x3130",
        "n#0"
      ],
      "stack_out": [
        "n#0",
        "0x",
        "0x3130"
      ]
    },
    "105": {
      "op": "uncover 2",
      "stack_out": [
        "0x",
        "0x3130",
        "n#0"
      ]
    },
    "107": {
      "op": "match match_bytes_switch_case_0@1 match_bytes_switch_case_1@2",
      "stack_out": []
    },
    "113": {
      "block": "match_bytes_switch_case_next@4",
      "stack_in": [],
      "retsub": true,
      "op": "retsub"
    },
    "114": {
      "block": "match_bytes_switch_case_1@2",
      "stack_in": [],
      "op": "pushbytes 0x48656c6c6f205468657265206279746573",
      "defined_out": [
        "0x48656c6c6f205468657265206279746573"
      ],
      "stack_out": [
        "0x48656c6c6f205468657265206279746573"
      ]
    },
    "133": {
      "op": "log",
      "stack_out": []
    },
    "134": {
      "op": "b match_bytes_switch_case_next@4"
    },
    "137": {
      "block": "match_bytes_switch_case_0@1",
      "stack_in": [],
      "op": "pushbytes 0x48656c6c6f206279746573",
      "defined_out": [
        "0x48656c6c6f206279746573"
      ],
      "stack_out": [
        "0x48656c6c6f206279746573"
      ]
    },
    "150": {
      "op": "log",
      "stack_out": []
    },
    "151": {
      "op": "b match_bytes_switch_case_next@4"
    },
    "154": {
      "subroutine": "test_cases.match.contract.MyContract.match_biguint",
      "params": {},
      "block": "match_biguint_block@0",
      "stack_in": [],
      "op": "txn NumAppArgs",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "156": {
      "op": "itob",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "157": {
      "op": "bytec_3 // 0x0a",
      "defined_out": [
        "0x0a",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "0x0a"
      ]
    },
    "158": {
      "op": "b*",
      "defined_out": [
        "n#0"
      ],
      "stack_out": [
        "n#0"
      ]
    },
    "159": {
      "op": "bytec_2 // 0x",
      "defined_out": [
        "0x",
        "n#0"
      ],
      "stack_out": [
        "n#0",
        "0x"
      ]
    },
    "160": {
      "op": "bytec_3 // 0x0a",
      "stack_out": [
        "n#0",
        "0x",
        "0x0a"
      ]
    },
    "161": {
      "op": "uncover 2",
      "stack_out": [
        "0x",
        "0x0a",
        "n#0"
      ]
    },
    "163": {
      "op": "match match_biguint_switch_case_0@1 match_biguint_switch_case_1@2",
      "stack_out": []
    },
    "169": {
      "block": "match_biguint_switch_case_next@4",
      "stack_in": [],
      "retsub": true,
      "op": "retsub"
    },
    "170": {
      "block": "match_biguint_switch_case_1@2",
      "stack_in": [],
      "op": "pushbytes 0x48656c6c6f2054686572652062696775696e74",
      "defined_out": [
        "0x48656c6c6f2054686572652062696775696e74"
      ],
      "stack_out": [
        "0x48656c6c6f2054686572652062696775696e74"
      ]
    },
    "191": {
      "op": "log",
      "stack_out": []
    },
    "192": {
      "op": "b match_biguint_switch_case_next@4"
    },
    "195": {
      "block": "match_biguint_switch_case_0@1",
      "stack_in": [],
      "op": "pushbytes 0x48656c6c6f2062696775696e74",
      "defined_out": [
        "0x48656c6c6f2062696775696e74"
      ],
      "stack_out": [
        "0x48656c6c6f2062696775696e74"
      ]
    },
    "210": {
      "op": "log",
      "stack_out": []
    },
    "211": {
      "op": "b match_biguint_switch_case_next@4"
    },
    "214": {
      "subroutine": "test_cases.match.contract.MyContract.match_address",
      "params": {},
      "block": "match_address_block@0",
      "stack_in": [],
      "op": "txn Sender",
      "defined_out": [
        "n#0"
      ],
      "stack_out": [
        "n#0"
      ]
    },
    "216": {
      "op": "pushbytes base32(AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA) // addr AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAY5HFKQ",
      "defined_out": [
        "Address(AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAY5HFKQ)",
        "n#0"
      ],
      "stack_out": [
        "n#0",
        "Address(AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAY5HFKQ)"
      ]
    },
    "250": {
      "op": "pushbytes base32(VCMJKWOY5P5P7SKMZFFOCEROPJCZOTIJMNIYNUCKH7LRO45JMJPQ) // addr VCMJKWOY5P5P7SKMZFFOCEROPJCZOTIJMNIYNUCKH7LRO45JMJP6UYBIJA",
      "defined_out": [
        "Address(AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAY5HFKQ)",
        "Address(VCMJKWOY5P5P7SKMZFFOCEROPJCZOTIJMNIYNUCKH7LRO45JMJP6UYBIJA)",
        "n#0"
      ],
      "stack_out": [
        "n#0",
        "Address(AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAY5HFKQ)",
        "Address(VCMJKWOY5P5P7SKMZFFOCEROPJCZOTIJMNIYNUCKH7LRO45JMJP6UYBIJA)"
      ]
    },
    "284": {
      "op": "uncover 2",
      "stack_out": [
        "Address(AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAY5HFKQ)",
        "Address(VCMJKWOY5P5P7SKMZFFOCEROPJCZOTIJMNIYNUCKH7LRO45JMJP6UYBIJA)",
        "n#0"
      ]
    },
    "286": {
      "op": "match match_address_switch_case_0@1 match_address_switch_case_1@2",
      "stack_out": []
    },
    "292": {
      "block": "match_address_switch_case_next@4",
      "stack_in": [],
      "retsub": true,
      "op": "retsub"
    },
    "293": {
      "block": "match_address_switch_case_1@2",
      "stack_in": [],
      "op": "pushbytes 0x48656c6c6f2054686572652061646472657373",
      "defined_out": [
        "0x48656c6c6f2054686572652061646472657373"
      ],
      "stack_out": [
        "0x48656c6c6f2054686572652061646472657373"
      ]
    },
    "314": {
      "op": "log",
      "stack_out": []
    },
    "315": {
      "op": "b match_address_switch_case_next@4"
    },
    "318": {
      "block": "match_address_switch_case_0@1",
      "stack_in": [],
      "op": "pushbytes 0x48656c6c6f2061646472657373",
      "defined_out": [
        "0x48656c6c6f2061646472657373"
      ],
      "stack_out": [
        "0x48656c6c6f2061646472657373"
      ]
    },
    "333": {
      "op": "log",
      "stack_out": []
    },
    "334": {
      "op": "b match_address_switch_case_next@4"
    },
    "337": {
      "subroutine": "test_cases.match.contract.MyContract.match_attributes",
      "params": {},
      "block": "match_attributes_block@0",
      "stack_in": [],
      "op": "txn NumAppArgs",
      "defined_out": [
        "n#0"
      ],
      "stack_out": [
        "n#0"
      ]
    },
    "339": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "n#0"
      ],
      "stack_out": [
        "n#0",
        "0"
      ]
    },
    "340": {
      "op": "bytec_0 // \"case_one\"",
      "defined_out": [
        "\"case_one\"",
        "0",
        "n#0"
      ],
      "stack_out": [
        "n#0",
        "0",
        "\"case_one\""
      ]
    },
    "341": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "n#0"
      ],
      "stack_out": [
        "n#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "342": {
      "error": "check self.case_one exists",
      "op": "assert // check self.case_one exists",
      "stack_out": [
        "n#0",
        "maybe_value%0#0"
      ]
    },
    "343": {
      "op": "intc_0 // 0",
      "stack_out": [
        "n#0",
        "maybe_value%0#0",
        "0"
      ]
    },
    "344": {
      "op": "bytec_1 // \"case_two\"",
      "defined_out": [
        "\"case_two\"",
        "0",
        "maybe_value%0#0",
        "n#0"
      ],
      "stack_out": [
        "n#0",
        "maybe_value%0#0",
        "0",
        "\"case_two\""
      ]
    },
    "345": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%1#0",
        "maybe_value%0#0",
        "maybe_value%1#0",
        "n#0"
      ],
      "stack_out": [
        "n#0",
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "346": {
      "error": "check self.case_two exists",
      "op": "assert // check self.case_two exists",
      "stack_out": [
        "n#0",
        "maybe_value%0#0",
        "maybe_value%1#0"
      ]
    },
    "347": {
      "op": "uncover 2",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "n#0"
      ]
    },
    "349": {
      "op": "match match_attributes_switch_case_0@1 match_attributes_switch_case_1@2",
      "stack_out": []
    },
    "355": {
      "block": "match_attributes_switch_case_default@3",
      "stack_in": [],
      "op": "pushbytes 0x48656c6c6f2064656661756c74",
      "defined_out": [
        "0x48656c6c6f2064656661756c74"
      ],
      "stack_out": [
        "0x48656c6c6f2064656661756c74"
      ]
    },
    "370": {
      "op": "log",
      "stack_out": []
    },
    "371": {
      "block": "match_attributes_switch_case_next@4",
      "stack_in": [],
      "retsub": true,
      "op": "retsub"
    },
    "372": {
      "block": "match_attributes_switch_case_1@2",
      "stack_in": [],
      "op": "pushbytes 0x48656c6c6f2074776f",
      "defined_out": [
        "0x48656c6c6f2074776f"
      ],
      "stack_out": [
        "0x48656c6c6f2074776f"
      ]
    },
    "383": {
      "op": "log",
      "stack_out": []
    },
    "384": {
      "op": "b match_attributes_switch_case_next@4"
    },
    "387": {
      "block": "match_attributes_switch_case_0@1",
      "stack_in": [],
      "op": "pushbytes 0x48656c6c6f206f6e65",
      "defined_out": [
        "0x48656c6c6f206f6e65"
      ],
      "stack_out": [
        "0x48656c6c6f206f6e65"
      ]
    },
    "398": {
      "op": "log",
      "stack_out": []
    },
    "399": {
      "op": "b match_attributes_switch_case_next@4"
    },
    "402": {
      "subroutine": "test_cases.match.contract.MyContract.match_bools",
      "params": {},
      "block": "match_bools_block@0",
      "stack_in": [],
      "op": "txn NumAppArgs",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "404": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "0"
      ]
    },
    "405": {
      "op": ">",
      "defined_out": [
        "n#0"
      ],
      "stack_out": [
        "n#0"
      ]
    },
    "406": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "n#0"
      ],
      "stack_out": [
        "n#0",
        "1"
      ]
    },
    "407": {
      "op": "intc_0 // 0",
      "stack_out": [
        "n#0",
        "1",
        "0"
      ]
    },
    "408": {
      "op": "uncover 2",
      "stack_out": [
        "1",
        "0",
        "n#0"
      ]
    },
    "410": {
      "op": "match match_bools_switch_case_0@1 match_bools_switch_case_1@2",
      "stack_out": []
    },
    "416": {
      "block": "match_bools_switch_case_next@4",
      "stack_in": [],
      "retsub": true,
      "op": "retsub"
    },
    "417": {
      "block": "match_bools_switch_case_1@2",
      "stack_in": [],
      "op": "pushbytes 0x48656c6c6f2046616c7365",
      "defined_out": [
        "0x48656c6c6f2046616c7365"
      ],
      "stack_out": [
        "0x48656c6c6f2046616c7365"
      ]
    },
    "430": {
      "op": "log",
      "stack_out": []
    },
    "431": {
      "op": "b match_bools_switch_case_next@4"
    },
    "434": {
      "block": "match_bools_switch_case_0@1",
      "stack_in": [],
      "op": "pushbytes 0x48656c6c6f2054727565",
      "defined_out": [
        "0x48656c6c6f2054727565"
      ],
      "stack_out": [
        "0x48656c6c6f2054727565"
      ]
    },
    "446": {
      "op": "log",
      "stack_out": []
    },
    "447": {
      "op": "b match_bools_switch_case_next@4"
    }
  }
}