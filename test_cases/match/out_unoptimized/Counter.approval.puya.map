{
  "version": 3,
  "sources": [
    "../counter.py"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;AAKQ;AAAe;AAAf;;AAGM;;AACG;AADT;AAAA;;;;AAMe;AAAP;AAJA;;;AACO;AAAP;AAUR;AAAA;AAAA;AAAA;AAAgB;AAAhB;AAAA;AAAA;AAAA;",
  "op_pc_offset": 0,
  "pc_events": {
    "1": {
      "subroutine": "test_cases.match.counter.Counter.__algopy_entrypoint_with_init",
      "params": {},
      "block": "main",
      "stack_in": [],
      "op": "intcblock 0 1"
    },
    "5": {
      "op": "bytecblock \"counter\""
    },
    "15": {
      "block": "main_block@0",
      "stack_in": [],
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "17": {
      "op": "bnz main_after_if_else@2",
      "stack_out": []
    },
    "20": {
      "block": "main_call___init__@1",
      "stack_in": [],
      "callsub": "test_cases.match.counter.Counter.__init__",
      "op": "callsub __init__"
    },
    "23": {
      "block": "main_after_if_else@2",
      "stack_in": [],
      "callsub": "test_cases.match.counter.Counter.approval_program",
      "op": "callsub approval_program",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "26": {
      "op": "return",
      "stack_out": []
    },
    "27": {
      "subroutine": "test_cases.match.counter.Counter.__init__",
      "params": {},
      "block": "__init___block@0",
      "stack_in": [],
      "op": "bytec_0 // \"counter\"",
      "defined_out": [
        "\"counter\""
      ],
      "stack_out": [
        "\"counter\""
      ]
    },
    "28": {
      "op": "intc_0 // 0",
      "defined_out": [
        "\"counter\"",
        "0"
      ],
      "stack_out": [
        "\"counter\"",
        "0"
      ]
    },
    "29": {
      "op": "app_global_put",
      "stack_out": []
    },
    "30": {
      "retsub": true,
      "op": "retsub"
    },
    "31": {
      "subroutine": "test_cases.match.counter.Counter.approval_program",
      "params": {},
      "block": "approval_program_block@0",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "33": {
      "op": "intc_0 // NoOp",
      "defined_out": [
        "NoOp",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "NoOp"
      ]
    },
    "34": {
      "op": "swap",
      "stack_out": [
        "NoOp",
        "tmp%0#0"
      ]
    },
    "35": {
      "op": "match approval_program_switch_case_0@1",
      "stack_out": []
    },
    "39": {
      "block": "approval_program_switch_case_default@2",
      "stack_in": [],
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "40": {
      "retsub": true,
      "op": "retsub"
    },
    "41": {
      "block": "approval_program_switch_case_0@1",
      "stack_in": [],
      "callsub": "test_cases.match.counter.Counter.increment_counter",
      "op": "callsub increment_counter"
    },
    "44": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "45": {
      "retsub": true,
      "op": "retsub"
    },
    "46": {
      "subroutine": "test_cases.match.counter.Counter.increment_counter",
      "params": {},
      "block": "increment_counter_block@0",
      "stack_in": [],
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "47": {
      "op": "bytec_0 // \"counter\"",
      "defined_out": [
        "\"counter\"",
        "0"
      ],
      "stack_out": [
        "0",
        "\"counter\""
      ]
    },
    "48": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "49": {
      "error": "check self.counter exists",
      "op": "assert // check self.counter exists",
      "stack_out": [
        "maybe_value%0#0"
      ]
    },
    "50": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "1"
      ]
    },
    "51": {
      "op": "+",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "52": {
      "op": "bytec_0 // \"counter\"",
      "stack_out": [
        "tmp%0#0",
        "\"counter\""
      ]
    },
    "53": {
      "op": "swap",
      "stack_out": [
        "\"counter\"",
        "tmp%0#0"
      ]
    },
    "54": {
      "op": "app_global_put",
      "stack_out": []
    },
    "55": {
      "retsub": true,
      "op": "retsub"
    }
  }
}