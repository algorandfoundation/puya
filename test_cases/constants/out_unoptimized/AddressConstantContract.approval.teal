#pragma version 10
#pragma typetrack false

// test_cases.constants.address_constant.AddressConstantContract.approval_program() -> uint64:
main:
    bytecblock base32(VCMJKWOY5P5P7SKMZFFOCEROPJCZOTIJMNIYNUCKH7LRO45JMJPQ)
    b block@0

block@0:
    // constants/address_constant.py:6
    // some_address = Account()
    global ZeroAddress
    // constants/address_constant.py:7
    // assert not some_address
    global ZeroAddress
    ==
    assert
    // constants/address_constant.py:9
    // assert some_address
    global ZeroAddress
    // constants/address_constant.py:8
    // some_address = Account(SOME_ADDRESS)
    bytec_0 // addr VCMJKWOY5P5P7SKMZFFOCEROPJCZOTIJMNIYNUCKH7LRO45JMJP6UYBIJA
    // constants/address_constant.py:9
    // assert some_address
    !=
    assert
    // constants/address_constant.py:8
    // some_address = Account(SOME_ADDRESS)
    bytec_0 // addr VCMJKWOY5P5P7SKMZFFOCEROPJCZOTIJMNIYNUCKH7LRO45JMJP6UYBIJA
    // constants/address_constant.py:11
    // some_address = Account(some_address.bytes)
    len
    pushint 32 // 32
    ==
    assert // Address length is 32 bytes
    // constants/address_constant.py:13
    // sender = op.Txn.sender
    txn Sender
    // constants/address_constant.py:15
    // log(sender_bytes)
    log
    // constants/address_constant.py:16
    // is_some_address = op.Txn.sender == some_address
    txn Sender
    // constants/address_constant.py:8
    // some_address = Account(SOME_ADDRESS)
    bytec_0 // addr VCMJKWOY5P5P7SKMZFFOCEROPJCZOTIJMNIYNUCKH7LRO45JMJP6UYBIJA
    // constants/address_constant.py:16
    // is_some_address = op.Txn.sender == some_address
    ==
    // constants/address_constant.py:18
    // return not is_some_address
    !
    return
