{
  "version": 3,
  "sources": [
    "../address_constant.py"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAKuB;;AACR;AAAA;AAAP;AAEO;;AADQ;AACR;AAAP;AADe;AAGA;AAAA;;AAAA;AAAA;AAEN;;AAET;AACkB;;AARH;AAQG;AAEX;AAAP",
  "op_pc_offset": 0,
  "pc_events": {
    "1": {
      "subroutine": "test_cases.constants.address_constant.AddressConstantContract.approval_program",
      "params": {},
      "block": "main",
      "stack_in": [],
      "op": "bytecblock base32(VCMJKWOY5P5P7SKMZFFOCEROPJCZOTIJMNIYNUCKH7LRO45JMJPQ)"
    },
    "36": {
      "block": "main_block@0",
      "stack_in": [],
      "op": "global ZeroAddress",
      "defined_out": [
        "some_address#0"
      ],
      "stack_out": [
        "some_address#0"
      ]
    },
    "38": {
      "op": "dup",
      "defined_out": [
        "some_address#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "some_address#0",
        "tmp%0#0"
      ]
    },
    "39": {
      "op": "==",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "40": {
      "op": "assert",
      "stack_out": []
    },
    "41": {
      "op": "global ZeroAddress",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "43": {
      "op": "bytec_0 // addr VCMJKWOY5P5P7SKMZFFOCEROPJCZOTIJMNIYNUCKH7LRO45JMJP6UYBIJA",
      "defined_out": [
        "Address(VCMJKWOY5P5P7SKMZFFOCEROPJCZOTIJMNIYNUCKH7LRO45JMJP6UYBIJA)",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "Address(VCMJKWOY5P5P7SKMZFFOCEROPJCZOTIJMNIYNUCKH7LRO45JMJP6UYBIJA)"
      ]
    },
    "44": {
      "op": "!=",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "45": {
      "op": "assert",
      "stack_out": []
    },
    "46": {
      "op": "bytec_0 // addr VCMJKWOY5P5P7SKMZFFOCEROPJCZOTIJMNIYNUCKH7LRO45JMJP6UYBIJA",
      "stack_out": [
        "Address(VCMJKWOY5P5P7SKMZFFOCEROPJCZOTIJMNIYNUCKH7LRO45JMJP6UYBIJA)"
      ]
    },
    "47": {
      "op": "len",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "48": {
      "op": "pushint 32 // 32",
      "defined_out": [
        "32",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "32"
      ]
    },
    "50": {
      "op": "==",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "51": {
      "error": "Address length is 32 bytes",
      "op": "assert // Address length is 32 bytes",
      "stack_out": []
    },
    "52": {
      "op": "txn Sender",
      "defined_out": [
        "sender_bytes#0"
      ],
      "stack_out": [
        "sender_bytes#0"
      ]
    },
    "54": {
      "op": "log",
      "stack_out": []
    },
    "55": {
      "op": "txn Sender",
      "defined_out": [
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0"
      ]
    },
    "57": {
      "op": "bytec_0 // addr VCMJKWOY5P5P7SKMZFFOCEROPJCZOTIJMNIYNUCKH7LRO45JMJP6UYBIJA",
      "stack_out": [
        "tmp%6#0",
        "Address(VCMJKWOY5P5P7SKMZFFOCEROPJCZOTIJMNIYNUCKH7LRO45JMJP6UYBIJA)"
      ]
    },
    "58": {
      "op": "==",
      "defined_out": [
        "is_some_address#0"
      ],
      "stack_out": [
        "is_some_address#0"
      ]
    },
    "59": {
      "op": "!",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0"
      ]
    },
    "60": {
      "op": "return",
      "stack_out": []
    }
  }
}