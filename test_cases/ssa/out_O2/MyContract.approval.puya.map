{
  "version": 3,
  "sources": [
    "../contract.py"
  ],
  "mappings": ";;;;;;;;;;AAUY;;;;AAGE;;AAAI;AAAJ;AAAd;;;AACY;AAAA;;AAAA;AAAA;;AAAI;AAAJ;;AACQ;AAAJ;AAAJ;;;;;AAEK;;AAAL;;AAAK;;AAAO;AAAP;AAAjB;;;AACY;AAAA;;AAAA;AAAA;;AAAI;AAAJ;;AACA;;AAAA;AAAA;;AAAI;AAAJ;;AAFK;AAAA;AAAA;;;;;AAIN;AAAA;AAAX;;;AACe;AAAI;AAAJ;AAAf;;;AAEgB;;AADI;AACA;AAAJ;;AAwBR;AAAJ;;AACI;AAAJ;;AADI;AAED;;AAAA;AAAP;;;AACY;AAAJ;;AACI;;AAAJ;;AAEJ;;AAAA;AACO;;AAAA;AApBH;;AAAI;AACJ;AAAU;AACV;AAGA;AAdY;AAAJ;;AAAI;AACA;;AAAD;AAAnB;;;AACwB;AAAJ;;;;;AAEO;;AAAP;AACP;AAAA;;AAAA;AAAb;;;AACY;AAAI;AAAJ;;;;;AAEA;AAAI;AAAJ;;",
  "op_pc_offset": 0,
  "pc_events": {
    "1": {
      "subroutine": "test_cases.ssa.contract.MyContract.approval_program",
      "params": {},
      "block": "main",
      "stack_in": [],
      "op": "intcblock 2 5 1 25"
    },
    "7": {
      "op": "pushbytes \"\""
    },
    "9": {
      "op": "dup"
    },
    "10": {
      "op": "pushints 60 80 // 60, 80",
      "defined_out": [
        "a#1",
        "b#1"
      ],
      "stack_out": [
        "c#0",
        "i#0",
        "a#1",
        "b#1"
      ]
    },
    "14": {
      "block": "main_while_top@1",
      "stack_in": [
        "c#0",
        "i#0",
        "a#1",
        "b#1"
      ],
      "op": "dig 1",
      "defined_out": [
        "a#1"
      ],
      "stack_out": [
        "c#0",
        "i#0",
        "a#1",
        "b#1",
        "a#1"
      ]
    },
    "16": {
      "op": "intc_1 // 5",
      "defined_out": [
        "5",
        "a#1"
      ],
      "stack_out": [
        "c#0",
        "i#0",
        "a#1",
        "b#1",
        "a#1",
        "5"
      ]
    },
    "17": {
      "op": "<",
      "defined_out": [
        "a#1",
        "tmp%0#0"
      ],
      "stack_out": [
        "c#0",
        "i#0",
        "a#1",
        "b#1",
        "tmp%0#0"
      ]
    },
    "18": {
      "op": "bz main_after_while@3",
      "stack_out": [
        "c#0",
        "i#0",
        "a#1",
        "b#1"
      ]
    },
    "21": {
      "op": "dup"
    },
    "22": {
      "op": "dig 2"
    },
    "24": {
      "op": "dup"
    },
    "25": {
      "op": "cover 2"
    },
    "27": {
      "op": "+"
    },
    "28": {
      "op": "bury 2"
    },
    "30": {
      "op": "intc_2 // 1"
    },
    "31": {
      "op": "+"
    },
    "32": {
      "op": "bury 2"
    },
    "34": {
      "op": "b main_while_top@1"
    },
    "37": {
      "block": "main_after_while@3",
      "stack_in": [
        "c#0",
        "i#0",
        "a#1",
        "b#1"
      ],
      "op": "pushint 0 // 0",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "c#0",
        "i#0",
        "a#1",
        "b#1",
        "i#0"
      ]
    },
    "39": {
      "op": "bury 3",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "c#0",
        "i#0",
        "a#1",
        "b#1"
      ]
    },
    "41": {
      "block": "main_for_header@4",
      "stack_in": [
        "c#0",
        "i#0",
        "a#1",
        "b#1"
      ],
      "op": "dig 2",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "c#0",
        "i#0",
        "a#1",
        "b#1",
        "i#0"
      ]
    },
    "43": {
      "op": "intc_1 // 5",
      "defined_out": [
        "5",
        "i#0"
      ],
      "stack_out": [
        "c#0",
        "i#0",
        "a#1",
        "b#1",
        "i#0",
        "5"
      ]
    },
    "44": {
      "op": "<",
      "defined_out": [
        "continue_looping%0#0",
        "i#0"
      ],
      "stack_out": [
        "c#0",
        "i#0",
        "a#1",
        "b#1",
        "continue_looping%0#0"
      ]
    },
    "45": {
      "op": "bz main_after_for@7",
      "stack_out": [
        "c#0",
        "i#0",
        "a#1",
        "b#1"
      ]
    },
    "48": {
      "op": "dup"
    },
    "49": {
      "op": "dig 2"
    },
    "51": {
      "op": "dup"
    },
    "52": {
      "op": "cover 2"
    },
    "54": {
      "op": "+"
    },
    "55": {
      "op": "bury 2"
    },
    "57": {
      "op": "dig 3"
    },
    "59": {
      "op": "dup"
    },
    "60": {
      "op": "cover 2"
    },
    "62": {
      "op": "+"
    },
    "63": {
      "op": "bury 3"
    },
    "65": {
      "op": "intc_2 // 1"
    },
    "66": {
      "op": "+"
    },
    "67": {
      "op": "bury 3"
    },
    "69": {
      "op": "b main_for_header@4"
    },
    "72": {
      "block": "main_after_for@7",
      "stack_in": [
        "c#0",
        "i#0",
        "a#1",
        "b#1"
      ],
      "op": "dup2",
      "defined_out": [
        "a#1",
        "b#1"
      ],
      "stack_out": [
        "c#0",
        "i#0",
        "a#1",
        "b#1",
        "a#1",
        "b#1"
      ]
    },
    "73": {
      "op": "<",
      "defined_out": [
        "a#1",
        "b#1",
        "tmp%1#0"
      ],
      "stack_out": [
        "c#0",
        "i#0",
        "a#1",
        "b#1",
        "tmp%1#0"
      ]
    },
    "74": {
      "op": "bz main_else_body@15",
      "stack_out": [
        "c#0",
        "i#0",
        "a#1",
        "b#1"
      ]
    },
    "77": {
      "op": "dup"
    },
    "78": {
      "op": "intc_0 // 2"
    },
    "79": {
      "op": "<"
    },
    "80": {
      "op": "bz main_else_body@10"
    },
    "83": {
      "op": "dig 1"
    },
    "85": {
      "op": "intc_1 // 5"
    },
    "86": {
      "op": "+"
    },
    "87": {
      "op": "bury 4"
    },
    "89": {
      "block": "main_after_if_else@19",
      "stack_in": [
        "c#0",
        "i#0",
        "a#1",
        "b#1"
      ],
      "op": "intc_3 // 25",
      "defined_out": [
        "a#1"
      ],
      "stack_out": [
        "c#0",
        "i#0",
        "a#1",
        "b#1",
        "a#1"
      ]
    },
    "90": {
      "op": "bury 2",
      "defined_out": [
        "a#1"
      ],
      "stack_out": [
        "c#0",
        "i#0",
        "a#1",
        "b#1"
      ]
    },
    "92": {
      "op": "intc_0 // 2",
      "defined_out": [
        "a#1",
        "b#1"
      ],
      "stack_out": [
        "c#0",
        "i#0",
        "a#1",
        "b#1",
        "b#1"
      ]
    },
    "93": {
      "op": "bury 1",
      "defined_out": [
        "a#1",
        "b#1"
      ],
      "stack_out": [
        "c#0",
        "i#0",
        "a#1",
        "b#1"
      ]
    },
    "95": {
      "op": "intc_3 // 25",
      "defined_out": [
        "25",
        "a#1",
        "b#1"
      ],
      "stack_out": [
        "c#0",
        "i#0",
        "a#1",
        "b#1",
        "25"
      ]
    },
    "96": {
      "op": "dig 4",
      "defined_out": [
        "25",
        "a#1",
        "b#1",
        "c#0"
      ],
      "stack_out": [
        "c#0",
        "i#0",
        "a#1",
        "b#1",
        "25",
        "c#0"
      ]
    },
    "98": {
      "op": "<",
      "defined_out": [
        "a#1",
        "b#1",
        "c#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "c#0",
        "i#0",
        "a#1",
        "b#1",
        "tmp%0#0"
      ]
    },
    "99": {
      "op": "bz main_after_if_else@22",
      "stack_out": [
        "c#0",
        "i#0",
        "a#1",
        "b#1"
      ]
    },
    "102": {
      "op": "intc_2 // 1"
    },
    "103": {
      "op": "bury 1"
    },
    "105": {
      "op": "pushint 100 // 100"
    },
    "107": {
      "op": "bury 2"
    },
    "109": {
      "block": "main_after_if_else@22",
      "stack_in": [
        "c#0",
        "i#0",
        "a#1",
        "b#1"
      ],
      "op": "dupn 2",
      "defined_out": [
        "b#1",
        "b#1 (copy)"
      ],
      "stack_out": [
        "c#0",
        "i#0",
        "a#1",
        "b#1",
        "b#1 (copy)",
        "b#1"
      ]
    },
    "111": {
      "op": "*",
      "stack_out": [
        "c#0",
        "i#0",
        "a#1",
        "b#1",
        "b#1"
      ]
    },
    "112": {
      "op": "dig 2",
      "defined_out": [
        "a#1",
        "b#1"
      ],
      "stack_out": [
        "c#0",
        "i#0",
        "a#1",
        "b#1",
        "b#1",
        "a#1"
      ]
    },
    "114": {
      "op": "*",
      "defined_out": [
        "a#1",
        "b#1",
        "tmp%1#1"
      ],
      "stack_out": [
        "c#0",
        "i#0",
        "a#1",
        "b#1",
        "tmp%1#1"
      ]
    },
    "115": {
      "op": "dig 4",
      "defined_out": [
        "a#1",
        "b#1",
        "c#0",
        "tmp%1#1"
      ],
      "stack_out": [
        "c#0",
        "i#0",
        "a#1",
        "b#1",
        "tmp%1#1",
        "c#0"
      ]
    },
    "117": {
      "op": "+",
      "stack_out": [
        "c#0",
        "i#0",
        "a#1",
        "b#1",
        "c#0"
      ]
    },
    "118": {
      "op": "dup",
      "defined_out": [
        "a#1",
        "b#1",
        "c#0",
        "c#0 (copy)"
      ],
      "stack_out": [
        "c#0",
        "i#0",
        "a#1",
        "b#1",
        "c#0",
        "c#0 (copy)"
      ]
    },
    "119": {
      "op": "itob",
      "defined_out": [
        "a#1",
        "b#1",
        "c#0",
        "c_bytes#0"
      ],
      "stack_out": [
        "c#0",
        "i#0",
        "a#1",
        "b#1",
        "c#0",
        "c_bytes#0"
      ]
    },
    "120": {
      "op": "log",
      "stack_out": [
        "c#0",
        "i#0",
        "a#1",
        "b#1",
        "c#0"
      ]
    },
    "121": {
      "op": "return",
      "stack_out": [
        "c#0",
        "i#0",
        "a#1",
        "b#1"
      ]
    },
    "122": {
      "block": "main_else_body@10",
      "stack_in": [
        "c#0",
        "i#0",
        "a#1",
        "b#1"
      ],
      "op": "intc_0 // 2",
      "defined_out": [
        "2"
      ],
      "stack_out": [
        "c#0",
        "i#0",
        "a#1",
        "b#1",
        "2"
      ]
    },
    "123": {
      "op": "dig 2",
      "defined_out": [
        "2",
        "a#1"
      ],
      "stack_out": [
        "c#0",
        "i#0",
        "a#1",
        "b#1",
        "2",
        "a#1"
      ]
    },
    "125": {
      "op": "*",
      "defined_out": [
        "a#1",
        "b#1"
      ],
      "stack_out": [
        "c#0",
        "i#0",
        "a#1",
        "b#1",
        "b#1"
      ]
    },
    "126": {
      "op": "pushint 14 // 14",
      "defined_out": [
        "14",
        "a#1",
        "b#1"
      ],
      "stack_out": [
        "c#0",
        "i#0",
        "a#1",
        "b#1",
        "b#1",
        "14"
      ]
    },
    "128": {
      "op": "*",
      "defined_out": [
        "a#1",
        "b#1",
        "tmp%3#0"
      ],
      "stack_out": [
        "c#0",
        "i#0",
        "a#1",
        "b#1",
        "tmp%3#0"
      ]
    },
    "129": {
      "op": "bz main_else_body@12",
      "stack_out": [
        "c#0",
        "i#0",
        "a#1",
        "b#1"
      ]
    },
    "132": {
      "op": "intc_0 // 2"
    },
    "133": {
      "op": "bury 4"
    },
    "135": {
      "op": "b main_after_if_else@19"
    },
    "138": {
      "block": "main_else_body@12",
      "stack_in": [
        "c#0",
        "i#0",
        "a#1",
        "b#1"
      ],
      "op": "pushint 3 // 3",
      "defined_out": [
        "3"
      ],
      "stack_out": [
        "c#0",
        "i#0",
        "a#1",
        "b#1",
        "3"
      ]
    },
    "140": {
      "op": "return",
      "stack_out": [
        "c#0",
        "i#0",
        "a#1",
        "b#1"
      ]
    },
    "141": {
      "block": "main_else_body@15",
      "stack_in": [
        "c#0",
        "i#0",
        "a#1",
        "b#1"
      ],
      "op": "dup",
      "defined_out": [
        "b#1"
      ],
      "stack_out": [
        "c#0",
        "i#0",
        "a#1",
        "b#1",
        "b#1"
      ]
    },
    "142": {
      "op": "dig 2",
      "defined_out": [
        "a#1",
        "b#1"
      ],
      "stack_out": [
        "c#0",
        "i#0",
        "a#1",
        "b#1",
        "b#1",
        "a#1"
      ]
    },
    "144": {
      "op": "==",
      "defined_out": [
        "a#1",
        "b#1",
        "tmp%5#0"
      ],
      "stack_out": [
        "c#0",
        "i#0",
        "a#1",
        "b#1",
        "tmp%5#0"
      ]
    },
    "145": {
      "op": "bz main_else_body@17",
      "stack_out": [
        "c#0",
        "i#0",
        "a#1",
        "b#1"
      ]
    },
    "148": {
      "op": "dup2"
    },
    "149": {
      "op": "*"
    },
    "150": {
      "op": "bury 4"
    },
    "152": {
      "op": "b main_after_if_else@19"
    },
    "155": {
      "block": "main_else_body@17",
      "stack_in": [
        "c#0",
        "i#0",
        "a#1",
        "b#1"
      ],
      "op": "dup2",
      "defined_out": [
        "a#1",
        "b#1"
      ],
      "stack_out": [
        "c#0",
        "i#0",
        "a#1",
        "b#1",
        "a#1",
        "b#1"
      ]
    },
    "156": {
      "op": "-",
      "defined_out": [
        "a#1",
        "b#1",
        "c#0"
      ],
      "stack_out": [
        "c#0",
        "i#0",
        "a#1",
        "b#1",
        "c#0"
      ]
    },
    "157": {
      "op": "bury 4",
      "defined_out": [
        "a#1",
        "b#1",
        "c#0"
      ],
      "stack_out": [
        "c#0",
        "i#0",
        "a#1",
        "b#1"
      ]
    },
    "159": {
      "op": "b main_after_if_else@19"
    }
  }
}