{
  "version": 3,
  "sources": [
    "../contract.py"
  ],
  "mappings": ";;;;;;;;;;;;;;AAOY;AAAY;AAAZ;AACA;AAAY;;AAAZ;AAEA;;AAAA;;AAAA;AAAJ;AAAA;;AACI;;;;AAEE;;AAAI;;AAAJ;AAAd;;;AAAA;;;AACgB;AAAA;;AAAA;AAAA;;AAAA;AAAJ;;AACQ;AAAJ;AAAJ;;;;;AAEK;AAAjB;AAAiB;;AAAL;;;;;AAAK;;AAAO;;AAAP;AAAjB;;;AAAA;;;AACgB;AAAA;;AAAA;AAAA;;AAAA;AAAJ;;AACI;;AAAA;AAAJ;;;;;AAFK;;AAAA;AAAA;AAAA;;;;;AAIN;AAAA;AAAX;;;AAAA;;;AACe;AAAI;AAAJ;AAAf;;;AAAA;;;AACoB;AAAI;AAAJ;AACA;;AAAA;AAAJ;;;;;;;;AAWA;;AAAA;AAAA;;;AAAJ;AACM;AAAA;AACV;AAC0B;AAAW;AAA9B;;;AAAuC;AAAvC;AAAP;AAC0B;AAAW;;AAA9B;;;AAAwC;AAAxC;AACP;AAdY;AAAA;;AAAA;AACA;;AAAD;AAAA;;AAAA;AAAnB;;;AAAA;;;AACwB;AAAJ;;;;;;;;AAEO;AAAP;AACP;AAAA;;AAAA;AAAb;;;AAAA;;;AACgB;AAAA;AAAJ;;;;;;;;AAEI;AAAA;AAAJ;;;;;AAYZ;;;;;;AAEQ;;AACA;AADA;;AAED;;AAAA;AAAP;;;AAAA;;;AACY;AAAJ;;AACI;;AAAJ;;;;;AAEJ;;AAAA;AAAA;AACO;;AAAA;AAAP;;AAAA;AAGJ;;;;;;;;AAEA;;AAAA;;;AAAA;;;AACQ;;AACA;;;;;AAIJ;;AAAK;AAAL;AACA;;AAAA;AAHI;;AACA;;",
  "op_pc_offset": 0,
  "pc_events": {
    "1": {
      "subroutine": "test_cases.ssa.contract.MyContract.approval_program",
      "params": {},
      "block": "main",
      "stack_in": [],
      "op": "intcblock 1 2 3 4"
    },
    "7": {
      "op": "pushbytes \"\"",
      "stack_out": [
        "c#0"
      ]
    },
    "9": {
      "op": "pushbytes \"\"",
      "stack_out": [
        "c#0",
        "i#0"
      ]
    },
    "11": {
      "op": "b main_block@0"
    },
    "14": {
      "block": "main_block@0",
      "stack_in": [
        "c#0",
        "i#0"
      ],
      "op": "intc_0 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "c#0",
        "i#0",
        "1"
      ]
    },
    "15": {
      "op": "intc_1 // 2",
      "defined_out": [
        "1",
        "2"
      ],
      "stack_out": [
        "c#0",
        "i#0",
        "1",
        "2"
      ]
    },
    "16": {
      "op": "+",
      "defined_out": [
        "a#0"
      ],
      "stack_out": [
        "c#0",
        "i#0",
        "a#0"
      ]
    },
    "17": {
      "op": "intc_3 // 4",
      "defined_out": [
        "4",
        "a#0"
      ],
      "stack_out": [
        "c#0",
        "i#0",
        "a#0",
        "4"
      ]
    },
    "18": {
      "op": "pushint 5 // 5",
      "defined_out": [
        "4",
        "5",
        "a#0"
      ],
      "stack_out": [
        "c#0",
        "i#0",
        "a#0",
        "4",
        "5"
      ]
    },
    "20": {
      "op": "*",
      "defined_out": [
        "a#0",
        "b#0"
      ],
      "stack_out": [
        "c#0",
        "i#0",
        "a#0",
        "b#0"
      ]
    },
    "21": {
      "op": "uncover 1",
      "stack_out": [
        "c#0",
        "i#0",
        "b#0",
        "a#0"
      ]
    },
    "23": {
      "op": "dig 1",
      "defined_out": [
        "a#0",
        "b#0",
        "b#0 (copy)"
      ],
      "stack_out": [
        "c#0",
        "i#0",
        "b#0",
        "a#0",
        "b#0 (copy)"
      ]
    },
    "25": {
      "op": "*",
      "defined_out": [
        "b#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "c#0",
        "i#0",
        "b#0",
        "tmp%2#0"
      ]
    },
    "26": {
      "op": "dup",
      "defined_out": [
        "a#0",
        "a#0 (copy)",
        "b#0"
      ],
      "stack_out": [
        "c#0",
        "i#0",
        "b#0",
        "a#0",
        "a#0 (copy)"
      ]
    },
    "27": {
      "op": "cover 2",
      "defined_out": [
        "a#0",
        "b#0"
      ],
      "stack_out": [
        "c#0",
        "i#0",
        "a#0",
        "b#0",
        "a#0"
      ]
    },
    "29": {
      "op": "+",
      "defined_out": [
        "a#0",
        "b#0"
      ],
      "stack_out": [
        "c#0",
        "i#0",
        "a#0",
        "b#0"
      ]
    },
    "30": {
      "op": "b main_while_top@1"
    },
    "33": {
      "block": "main_while_top@1",
      "stack_in": [
        "c#0",
        "i#0",
        "a#0",
        "b#0"
      ],
      "op": "dig 1",
      "defined_out": [
        "a#0"
      ],
      "stack_out": [
        "c#0",
        "i#0",
        "a#0",
        "b#0",
        "a#0"
      ]
    },
    "35": {
      "op": "pushint 5 // 5",
      "defined_out": [
        "5",
        "a#0"
      ],
      "stack_out": [
        "c#0",
        "i#0",
        "a#0",
        "b#0",
        "a#0",
        "5"
      ]
    },
    "37": {
      "op": "<",
      "defined_out": [
        "a#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "c#0",
        "i#0",
        "a#0",
        "b#0",
        "tmp%4#0"
      ]
    },
    "38": {
      "op": "bz main_after_while@3",
      "stack_out": [
        "c#0",
        "i#0",
        "a#0",
        "b#0"
      ]
    },
    "41": {
      "op": "b main_while_body@2"
    },
    "44": {
      "block": "main_while_body@2",
      "stack_in": [
        "c#0",
        "i#0",
        "a#0",
        "b#0"
      ],
      "op": "dup",
      "defined_out": [
        "b#0"
      ],
      "stack_out": [
        "c#0",
        "i#0",
        "a#0",
        "b#0",
        "b#0"
      ]
    },
    "45": {
      "op": "dig 2",
      "defined_out": [
        "a#0",
        "b#0"
      ],
      "stack_out": [
        "c#0",
        "i#0",
        "a#0",
        "b#0",
        "b#0",
        "a#0"
      ]
    },
    "47": {
      "op": "dup",
      "defined_out": [
        "a#0",
        "a#0 (copy)",
        "b#0"
      ],
      "stack_out": [
        "c#0",
        "i#0",
        "a#0",
        "b#0",
        "b#0",
        "a#0 (copy)",
        "a#0 (copy)"
      ]
    },
    "48": {
      "op": "cover 2",
      "stack_out": [
        "c#0",
        "i#0",
        "a#0",
        "b#0",
        "a#0",
        "b#0",
        "a#0 (copy)"
      ]
    },
    "50": {
      "op": "+",
      "defined_out": [
        "a#0",
        "b#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "c#0",
        "i#0",
        "a#0",
        "b#0",
        "a#0",
        "tmp%5#0"
      ]
    },
    "51": {
      "op": "bury 2",
      "defined_out": [
        "a#0",
        "b#0"
      ],
      "stack_out": [
        "c#0",
        "i#0",
        "a#0",
        "b#0",
        "a#0"
      ]
    },
    "53": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "a#0",
        "b#0"
      ],
      "stack_out": [
        "c#0",
        "i#0",
        "a#0",
        "b#0",
        "a#0",
        "1"
      ]
    },
    "54": {
      "op": "+",
      "defined_out": [
        "a#0",
        "b#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "c#0",
        "i#0",
        "a#0",
        "b#0",
        "tmp%6#0"
      ]
    },
    "55": {
      "op": "bury 2",
      "defined_out": [
        "a#0",
        "b#0"
      ],
      "stack_out": [
        "c#0",
        "i#0",
        "a#0",
        "b#0"
      ]
    },
    "57": {
      "op": "b main_while_top@1"
    },
    "60": {
      "block": "main_after_while@3",
      "stack_in": [
        "c#0",
        "i#0",
        "a#0",
        "b#0"
      ],
      "op": "intc_0 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "c#0",
        "i#0",
        "a#0",
        "b#0",
        "1"
      ]
    },
    "61": {
      "error": "Step cannot be zero",
      "op": "assert // Step cannot be zero",
      "stack_out": [
        "c#0",
        "i#0",
        "a#0",
        "b#0"
      ]
    },
    "62": {
      "op": "pushint 0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "c#0",
        "i#0",
        "a#0",
        "b#0",
        "0"
      ]
    },
    "64": {
      "op": "bury 3",
      "defined_out": [],
      "stack_out": [
        "c#0",
        "i#0",
        "a#0",
        "b#0"
      ]
    },
    "66": {
      "op": "b main_for_header@4"
    },
    "69": {
      "block": "main_for_header@4",
      "stack_in": [
        "c#0",
        "i#0",
        "a#0",
        "b#0"
      ],
      "op": "dig 2",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "c#0",
        "i#0",
        "a#0",
        "b#0",
        "i#0"
      ]
    },
    "71": {
      "op": "pushint 5 // 5",
      "defined_out": [
        "5",
        "i#0"
      ],
      "stack_out": [
        "c#0",
        "i#0",
        "a#0",
        "b#0",
        "i#0",
        "5"
      ]
    },
    "73": {
      "op": "<",
      "defined_out": [
        "continue_looping%0#0",
        "i#0"
      ],
      "stack_out": [
        "c#0",
        "i#0",
        "a#0",
        "b#0",
        "continue_looping%0#0"
      ]
    },
    "74": {
      "op": "bz main_after_for@7",
      "stack_out": [
        "c#0",
        "i#0",
        "a#0",
        "b#0"
      ]
    },
    "77": {
      "op": "b main_for_body@5"
    },
    "80": {
      "block": "main_for_body@5",
      "stack_in": [
        "c#0",
        "i#0",
        "a#0",
        "b#0"
      ],
      "op": "dup",
      "defined_out": [
        "b#0"
      ],
      "stack_out": [
        "c#0",
        "i#0",
        "a#0",
        "b#0",
        "b#0"
      ]
    },
    "81": {
      "op": "dig 2",
      "defined_out": [
        "a#0",
        "b#0"
      ],
      "stack_out": [
        "c#0",
        "i#0",
        "a#0",
        "b#0",
        "b#0",
        "a#0"
      ]
    },
    "83": {
      "op": "dup",
      "defined_out": [
        "a#0",
        "a#0 (copy)",
        "b#0"
      ],
      "stack_out": [
        "c#0",
        "i#0",
        "a#0",
        "b#0",
        "b#0",
        "a#0 (copy)",
        "a#0 (copy)"
      ]
    },
    "84": {
      "op": "cover 2",
      "stack_out": [
        "c#0",
        "i#0",
        "a#0",
        "b#0",
        "a#0",
        "b#0",
        "a#0 (copy)"
      ]
    },
    "86": {
      "op": "+",
      "defined_out": [
        "a#0",
        "b#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "c#0",
        "i#0",
        "a#0",
        "b#0",
        "a#0",
        "tmp%7#0"
      ]
    },
    "87": {
      "op": "bury 2",
      "defined_out": [
        "a#0",
        "b#0"
      ],
      "stack_out": [
        "c#0",
        "i#0",
        "a#0",
        "b#0",
        "a#0"
      ]
    },
    "89": {
      "op": "dig 3",
      "defined_out": [
        "a#0",
        "b#0",
        "i#0"
      ],
      "stack_out": [
        "c#0",
        "i#0",
        "a#0",
        "b#0",
        "a#0",
        "i#0"
      ]
    },
    "91": {
      "op": "+",
      "defined_out": [
        "a#0",
        "b#0",
        "i#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "c#0",
        "i#0",
        "a#0",
        "b#0",
        "tmp%8#0"
      ]
    },
    "92": {
      "op": "bury 2",
      "defined_out": [
        "a#0",
        "b#0",
        "i#0"
      ],
      "stack_out": [
        "c#0",
        "i#0",
        "a#0",
        "b#0"
      ]
    },
    "94": {
      "op": "b main_for_footer@6"
    },
    "97": {
      "block": "main_for_footer@6",
      "stack_in": [
        "c#0",
        "i#0",
        "a#0",
        "b#0"
      ],
      "op": "dig 2",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "c#0",
        "i#0",
        "a#0",
        "b#0",
        "i#0"
      ]
    },
    "99": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "i#0"
      ],
      "stack_out": [
        "c#0",
        "i#0",
        "a#0",
        "b#0",
        "i#0",
        "1"
      ]
    },
    "100": {
      "op": "+",
      "stack_out": [
        "c#0",
        "i#0",
        "a#0",
        "b#0",
        "i#0"
      ]
    },
    "101": {
      "op": "bury 3",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "c#0",
        "i#0",
        "a#0",
        "b#0"
      ]
    },
    "103": {
      "op": "b main_for_header@4"
    },
    "106": {
      "block": "main_after_for@7",
      "stack_in": [
        "c#0",
        "i#0",
        "a#0",
        "b#0"
      ],
      "op": "dup2",
      "defined_out": [
        "a#0",
        "b#0"
      ],
      "stack_out": [
        "c#0",
        "i#0",
        "a#0",
        "b#0",
        "a#0",
        "b#0"
      ]
    },
    "107": {
      "op": "<",
      "defined_out": [
        "a#0",
        "b#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "c#0",
        "i#0",
        "a#0",
        "b#0",
        "tmp%9#0"
      ]
    },
    "108": {
      "op": "bz main_else_body@15",
      "stack_out": [
        "c#0",
        "i#0",
        "a#0",
        "b#0"
      ]
    },
    "111": {
      "op": "b main_if_body@8"
    },
    "114": {
      "block": "main_if_body@8",
      "stack_in": [
        "c#0",
        "i#0",
        "a#0",
        "b#0"
      ],
      "op": "dup",
      "defined_out": [
        "b#0"
      ],
      "stack_out": [
        "c#0",
        "i#0",
        "a#0",
        "b#0",
        "b#0"
      ]
    },
    "115": {
      "op": "intc_1 // 2",
      "defined_out": [
        "2",
        "b#0"
      ],
      "stack_out": [
        "c#0",
        "i#0",
        "a#0",
        "b#0",
        "b#0",
        "2"
      ]
    },
    "116": {
      "op": "<",
      "defined_out": [
        "b#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "c#0",
        "i#0",
        "a#0",
        "b#0",
        "tmp%10#0"
      ]
    },
    "117": {
      "op": "bz main_else_body@10",
      "stack_out": [
        "c#0",
        "i#0",
        "a#0",
        "b#0"
      ]
    },
    "120": {
      "op": "b main_if_body@9"
    },
    "123": {
      "block": "main_if_body@9",
      "stack_in": [
        "c#0",
        "i#0",
        "a#0",
        "b#0"
      ],
      "op": "intc_2 // 3",
      "defined_out": [
        "3"
      ],
      "stack_out": [
        "c#0",
        "i#0",
        "a#0",
        "b#0",
        "3"
      ]
    },
    "124": {
      "op": "intc_1 // 2",
      "defined_out": [
        "2",
        "3"
      ],
      "stack_out": [
        "c#0",
        "i#0",
        "a#0",
        "b#0",
        "3",
        "2"
      ]
    },
    "125": {
      "op": "+",
      "defined_out": [
        "b#0"
      ],
      "stack_out": [
        "c#0",
        "i#0",
        "a#0",
        "b#0",
        "b#0"
      ]
    },
    "126": {
      "op": "dig 2",
      "defined_out": [
        "a#0",
        "b#0"
      ],
      "stack_out": [
        "c#0",
        "i#0",
        "a#0",
        "b#0",
        "b#0",
        "a#0"
      ]
    },
    "128": {
      "op": "+",
      "defined_out": [
        "a#0",
        "b#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "c#0",
        "i#0",
        "a#0",
        "b#0",
        "tmp%12#0"
      ]
    },
    "129": {
      "op": "bury 4",
      "defined_out": [
        "a#0",
        "b#0"
      ],
      "stack_out": [
        "c#0",
        "i#0",
        "a#0",
        "b#0"
      ]
    },
    "131": {
      "op": "b main_after_if_else@14"
    },
    "134": {
      "block": "main_after_if_else@14",
      "stack_in": [
        "c#0",
        "i#0",
        "a#0",
        "b#0"
      ],
      "op": "b main_after_if_else@19"
    },
    "137": {
      "block": "main_after_if_else@19",
      "stack_in": [
        "c#0",
        "i#0",
        "a#0",
        "b#0"
      ],
      "op": "dig 3",
      "defined_out": [
        "c#0"
      ],
      "stack_out": [
        "c#0",
        "i#0",
        "a#0",
        "b#0",
        "c#0"
      ]
    },
    "139": {
      "op": "dup",
      "defined_out": [
        "c#0",
        "c#0 (copy)"
      ],
      "stack_out": [
        "c#0",
        "i#0",
        "a#0",
        "b#0",
        "c#0",
        "c#0 (copy)"
      ]
    },
    "140": {
      "callsub": "test_cases.ssa.contract.one_hundred",
      "op": "callsub one_hundred",
      "defined_out": [
        "c#0",
        "tmp%19#0"
      ],
      "stack_out": [
        "c#0",
        "i#0",
        "a#0",
        "b#0",
        "c#0",
        "tmp%19#0"
      ]
    },
    "143": {
      "op": "+",
      "defined_out": [
        "c#0"
      ],
      "stack_out": [
        "c#0",
        "i#0",
        "a#0",
        "b#0",
        "c#0"
      ]
    },
    "144": {
      "op": "dup",
      "stack_out": [
        "c#0",
        "i#0",
        "a#0",
        "b#0",
        "c#0",
        "c#0 (copy)"
      ]
    },
    "145": {
      "op": "itob",
      "defined_out": [
        "c#0",
        "c_bytes#0"
      ],
      "stack_out": [
        "c#0",
        "i#0",
        "a#0",
        "b#0",
        "c#0",
        "c_bytes#0"
      ]
    },
    "146": {
      "op": "log",
      "stack_out": [
        "c#0",
        "i#0",
        "a#0",
        "b#0",
        "c#0"
      ]
    },
    "147": {
      "op": "intc_2 // 3",
      "defined_out": [
        "3",
        "c#0"
      ],
      "stack_out": [
        "c#0",
        "i#0",
        "a#0",
        "b#0",
        "c#0",
        "3"
      ]
    },
    "148": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "3",
        "c#0"
      ],
      "stack_out": [
        "c#0",
        "i#0",
        "a#0",
        "b#0",
        "c#0",
        "3",
        "1"
      ]
    },
    "149": {
      "callsub": "test_cases.ssa.contract.phi_in_equiv_class",
      "op": "callsub phi_in_equiv_class",
      "defined_out": [
        "c#0",
        "tmp%22#0"
      ],
      "stack_out": [
        "c#0",
        "i#0",
        "a#0",
        "b#0",
        "c#0",
        "tmp%22#0"
      ]
    },
    "152": {
      "op": "intc_3 // 4",
      "defined_out": [
        "4",
        "c#0",
        "tmp%22#0"
      ],
      "stack_out": [
        "c#0",
        "i#0",
        "a#0",
        "b#0",
        "c#0",
        "tmp%22#0",
        "4"
      ]
    },
    "153": {
      "op": "==",
      "defined_out": [
        "c#0",
        "tmp%23#0"
      ],
      "stack_out": [
        "c#0",
        "i#0",
        "a#0",
        "b#0",
        "c#0",
        "tmp%23#0"
      ]
    },
    "154": {
      "op": "assert",
      "stack_out": [
        "c#0",
        "i#0",
        "a#0",
        "b#0",
        "c#0"
      ]
    },
    "155": {
      "op": "intc_2 // 3",
      "stack_out": [
        "c#0",
        "i#0",
        "a#0",
        "b#0",
        "c#0",
        "3"
      ]
    },
    "156": {
      "op": "pushint 0 // 0",
      "defined_out": [
        "0",
        "3",
        "c#0"
      ],
      "stack_out": [
        "c#0",
        "i#0",
        "a#0",
        "b#0",
        "c#0",
        "3",
        "0"
      ]
    },
    "158": {
      "callsub": "test_cases.ssa.contract.phi_in_equiv_class",
      "op": "callsub phi_in_equiv_class",
      "defined_out": [
        "c#0",
        "tmp%24#0"
      ],
      "stack_out": [
        "c#0",
        "i#0",
        "a#0",
        "b#0",
        "c#0",
        "tmp%24#0"
      ]
    },
    "161": {
      "op": "intc_3 // 4",
      "stack_out": [
        "c#0",
        "i#0",
        "a#0",
        "b#0",
        "c#0",
        "tmp%24#0",
        "4"
      ]
    },
    "162": {
      "op": "==",
      "defined_out": [
        "c#0",
        "tmp%25#0"
      ],
      "stack_out": [
        "c#0",
        "i#0",
        "a#0",
        "b#0",
        "c#0",
        "tmp%25#0"
      ]
    },
    "163": {
      "op": "return",
      "stack_out": [
        "c#0",
        "i#0",
        "a#0",
        "b#0"
      ]
    },
    "164": {
      "block": "main_else_body@10",
      "stack_in": [
        "c#0",
        "i#0",
        "a#0",
        "b#0"
      ],
      "op": "intc_1 // 2",
      "defined_out": [
        "2"
      ],
      "stack_out": [
        "c#0",
        "i#0",
        "a#0",
        "b#0",
        "2"
      ]
    },
    "165": {
      "op": "dig 2",
      "defined_out": [
        "2",
        "a#0"
      ],
      "stack_out": [
        "c#0",
        "i#0",
        "a#0",
        "b#0",
        "2",
        "a#0"
      ]
    },
    "167": {
      "op": "*",
      "defined_out": [
        "a#0",
        "b#0"
      ],
      "stack_out": [
        "c#0",
        "i#0",
        "a#0",
        "b#0",
        "b#0"
      ]
    },
    "168": {
      "op": "pushint 14 // 14",
      "defined_out": [
        "14",
        "a#0",
        "b#0"
      ],
      "stack_out": [
        "c#0",
        "i#0",
        "a#0",
        "b#0",
        "b#0",
        "14"
      ]
    },
    "170": {
      "op": "*",
      "defined_out": [
        "a#0",
        "b#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "c#0",
        "i#0",
        "a#0",
        "b#0",
        "tmp%14#0"
      ]
    },
    "171": {
      "op": "pushint 0 // 0",
      "defined_out": [
        "0",
        "a#0",
        "b#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "c#0",
        "i#0",
        "a#0",
        "b#0",
        "tmp%14#0",
        "0"
      ]
    },
    "173": {
      "op": "!=",
      "defined_out": [
        "a#0",
        "b#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "c#0",
        "i#0",
        "a#0",
        "b#0",
        "tmp%15#0"
      ]
    },
    "174": {
      "op": "bz main_else_body@12",
      "stack_out": [
        "c#0",
        "i#0",
        "a#0",
        "b#0"
      ]
    },
    "177": {
      "op": "b main_if_body@11"
    },
    "180": {
      "block": "main_if_body@11",
      "stack_in": [
        "c#0",
        "i#0",
        "a#0",
        "b#0"
      ],
      "op": "intc_1 // 2",
      "defined_out": [
        "2"
      ],
      "stack_out": [
        "c#0",
        "i#0",
        "a#0",
        "b#0",
        "2"
      ]
    },
    "181": {
      "op": "bury 4",
      "defined_out": [],
      "stack_out": [
        "c#0",
        "i#0",
        "a#0",
        "b#0"
      ]
    },
    "183": {
      "op": "b main_after_if_else@13"
    },
    "186": {
      "block": "main_after_if_else@13",
      "stack_in": [
        "c#0",
        "i#0",
        "a#0",
        "b#0"
      ],
      "op": "b main_after_if_else@14"
    },
    "189": {
      "block": "main_else_body@12",
      "stack_in": [
        "c#0",
        "i#0",
        "a#0",
        "b#0"
      ],
      "op": "intc_2 // 3",
      "defined_out": [
        "3"
      ],
      "stack_out": [
        "c#0",
        "i#0",
        "a#0",
        "b#0",
        "3"
      ]
    },
    "190": {
      "op": "return",
      "stack_out": [
        "c#0",
        "i#0",
        "a#0",
        "b#0"
      ]
    },
    "191": {
      "block": "main_else_body@15",
      "stack_in": [
        "c#0",
        "i#0",
        "a#0",
        "b#0"
      ],
      "op": "dup",
      "defined_out": [
        "b#0"
      ],
      "stack_out": [
        "c#0",
        "i#0",
        "a#0",
        "b#0",
        "b#0"
      ]
    },
    "192": {
      "op": "dig 2",
      "defined_out": [
        "a#0",
        "b#0"
      ],
      "stack_out": [
        "c#0",
        "i#0",
        "a#0",
        "b#0",
        "b#0",
        "a#0"
      ]
    },
    "194": {
      "op": "==",
      "defined_out": [
        "a#0",
        "b#0",
        "tmp%16#0"
      ],
      "stack_out": [
        "c#0",
        "i#0",
        "a#0",
        "b#0",
        "tmp%16#0"
      ]
    },
    "195": {
      "op": "bz main_else_body@17",
      "stack_out": [
        "c#0",
        "i#0",
        "a#0",
        "b#0"
      ]
    },
    "198": {
      "op": "b main_if_body@16"
    },
    "201": {
      "block": "main_if_body@16",
      "stack_in": [
        "c#0",
        "i#0",
        "a#0",
        "b#0"
      ],
      "op": "dup2",
      "defined_out": [
        "a#0",
        "b#0"
      ],
      "stack_out": [
        "c#0",
        "i#0",
        "a#0",
        "b#0",
        "a#0",
        "b#0"
      ]
    },
    "202": {
      "op": "*",
      "defined_out": [
        "a#0",
        "b#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "c#0",
        "i#0",
        "a#0",
        "b#0",
        "tmp%17#0"
      ]
    },
    "203": {
      "op": "bury 4",
      "defined_out": [
        "a#0",
        "b#0"
      ],
      "stack_out": [
        "c#0",
        "i#0",
        "a#0",
        "b#0"
      ]
    },
    "205": {
      "op": "b main_after_if_else@18"
    },
    "208": {
      "block": "main_after_if_else@18",
      "stack_in": [
        "c#0",
        "i#0",
        "a#0",
        "b#0"
      ],
      "op": "b main_after_if_else@19"
    },
    "211": {
      "block": "main_else_body@17",
      "stack_in": [
        "c#0",
        "i#0",
        "a#0",
        "b#0"
      ],
      "op": "dup2",
      "defined_out": [
        "a#0",
        "b#0"
      ],
      "stack_out": [
        "c#0",
        "i#0",
        "a#0",
        "b#0",
        "a#0",
        "b#0"
      ]
    },
    "212": {
      "op": "-",
      "defined_out": [
        "a#0",
        "b#0",
        "tmp%18#0"
      ],
      "stack_out": [
        "c#0",
        "i#0",
        "a#0",
        "b#0",
        "tmp%18#0"
      ]
    },
    "213": {
      "op": "bury 4",
      "defined_out": [
        "a#0",
        "b#0"
      ],
      "stack_out": [
        "c#0",
        "i#0",
        "a#0",
        "b#0"
      ]
    },
    "215": {
      "op": "b main_after_if_else@18"
    },
    "218": {
      "subroutine": "test_cases.ssa.contract.one_hundred",
      "params": {
        "c#0": "uint64"
      },
      "block": "one_hundred",
      "stack_in": [],
      "op": "proto 1 1"
    },
    "221": {
      "op": "b one_hundred_block@0"
    },
    "224": {
      "block": "one_hundred_block@0",
      "stack_in": [],
      "op": "pushint 25 // 25",
      "defined_out": [],
      "stack_out": [
        "a#0"
      ]
    },
    "226": {
      "op": "intc_1 // 2",
      "defined_out": [],
      "stack_out": [
        "a#0",
        "b#0"
      ]
    },
    "227": {
      "op": "pushint 25 // 25",
      "stack_out": [
        "a#0",
        "b#0",
        "25"
      ]
    },
    "229": {
      "op": "frame_dig -1",
      "defined_out": [
        "25",
        "c#0 (copy)"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "25",
        "c#0 (copy)"
      ]
    },
    "231": {
      "op": "<",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "tmp%0#0"
      ]
    },
    "232": {
      "op": "bz one_hundred_after_if_else@2",
      "stack_out": [
        "a#0",
        "b#0"
      ]
    },
    "235": {
      "op": "b one_hundred_if_body@1"
    },
    "238": {
      "block": "one_hundred_if_body@1",
      "stack_in": [
        "a#0",
        "b#0"
      ],
      "op": "intc_0 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "1"
      ]
    },
    "239": {
      "op": "frame_bury 1",
      "defined_out": [],
      "stack_out": [
        "a#0",
        "b#0"
      ]
    },
    "241": {
      "op": "pushint 100 // 100",
      "defined_out": [
        "100"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "100"
      ]
    },
    "243": {
      "op": "frame_bury 0",
      "defined_out": [],
      "stack_out": [
        "a#0",
        "b#0"
      ]
    },
    "245": {
      "op": "b one_hundred_after_if_else@2"
    },
    "248": {
      "block": "one_hundred_after_if_else@2",
      "stack_in": [
        "a#0",
        "b#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "b#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "b#0"
      ]
    },
    "250": {
      "op": "dup",
      "defined_out": [
        "b#0",
        "b#0 (copy)"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "b#0 (copy)",
        "b#0"
      ]
    },
    "251": {
      "op": "*",
      "defined_out": [
        "b#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "b#0"
      ]
    },
    "252": {
      "op": "frame_dig 0",
      "defined_out": [
        "a#0",
        "b#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "b#0",
        "a#0"
      ]
    },
    "254": {
      "op": "*",
      "defined_out": [
        "a#0",
        "b#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "tmp%2#0"
      ]
    },
    "255": {
      "op": "frame_bury 0"
    },
    "257": {
      "retsub": true,
      "op": "retsub"
    },
    "258": {
      "subroutine": "test_cases.ssa.contract.phi_in_equiv_class",
      "params": {
        "y#0": "uint64",
        "b#0": "uint64"
      },
      "block": "phi_in_equiv_class",
      "stack_in": [],
      "op": "proto 2 1"
    },
    "261": {
      "op": "pushbytes \"\"",
      "stack_out": [
        "x#0"
      ]
    },
    "263": {
      "op": "b phi_in_equiv_class_block@0"
    },
    "266": {
      "block": "phi_in_equiv_class_block@0",
      "stack_in": [
        "x#0"
      ],
      "op": "frame_dig -1",
      "defined_out": [
        "b#0 (copy)"
      ],
      "stack_out": [
        "x#0",
        "b#0 (copy)"
      ]
    },
    "268": {
      "op": "bz phi_in_equiv_class_else_body@2",
      "stack_out": [
        "x#0"
      ]
    },
    "271": {
      "op": "b phi_in_equiv_class_if_body@1"
    },
    "274": {
      "block": "phi_in_equiv_class_if_body@1",
      "stack_in": [
        "x#0"
      ],
      "op": "frame_dig -2",
      "defined_out": [
        "tmp1#0"
      ],
      "stack_out": [
        "x#0",
        "tmp1#0"
      ]
    },
    "276": {
      "op": "frame_bury 0",
      "defined_out": [],
      "stack_out": [
        "x#0"
      ]
    },
    "278": {
      "op": "b phi_in_equiv_class_after_if_else@3"
    },
    "281": {
      "block": "phi_in_equiv_class_after_if_else@3",
      "stack_in": [
        "x#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "x#0"
      ],
      "stack_out": [
        "x#0",
        "x#0"
      ]
    },
    "283": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "x#0"
      ],
      "stack_out": [
        "x#0",
        "x#0",
        "1"
      ]
    },
    "284": {
      "op": "+",
      "defined_out": [
        "x#0"
      ],
      "stack_out": [
        "x#0",
        "x#0"
      ]
    },
    "285": {
      "op": "uncover 1"
    },
    "287": {
      "retsub": true,
      "op": "retsub"
    },
    "288": {
      "block": "phi_in_equiv_class_else_body@2",
      "stack_in": [
        "x#0"
      ],
      "op": "frame_dig -2",
      "defined_out": [
        "tmp2#0"
      ],
      "stack_out": [
        "x#0",
        "tmp2#0"
      ]
    },
    "290": {
      "op": "frame_bury 0",
      "defined_out": [],
      "stack_out": [
        "x#0"
      ]
    },
    "292": {
      "op": "b phi_in_equiv_class_after_if_else@3"
    }
  }
}