PC  Teal                                 Stack
1   <intcblock>
9   byte ""                              0x
11  dup                                  0x, 0x
12  int 1                                0x, 0x, 1
13  int 2                                0x, 0x, 1, 2
14  +                                    0x, 0x, 3
15  int 4                                0x, 0x, 3, 4
16  int 5                                0x, 0x, 3, 4, 5
18  *                                    0x, 0x, 3, 20
19  dup                                  0x, 0x, 3, 20, 20
20  cover 2                              0x, 0x, 20, 3, 20
22  *                                    0x, 0x, 20, 60
23  dup                                  0x, 0x, 20, 60, 60
24  cover 2                              0x, 0x, 60, 20, 60
26  +                                    0x, 0x, 60, 80
27  dig 1                                0x, 0x, 60, 80, 60
29  int 5                                0x, 0x, 60, 80, 60, 5
31  <                                    0x, 0x, 60, 80, 0
32  bz main_after_while@3                0x, 0x, 60, 80
51  int 1                                0x, 0x, 60, 80, 1
52  assert                               0x, 0x, 60, 80
53  int 0                                0x, 0x, 60, 80, 0
55  bury 3                               0x, 0, 60, 80
57  dig 2                                0x, 0, 60, 80, 0
59  int 5                                0x, 0, 60, 80, 0, 5
61  <                                    0x, 0, 60, 80, 1
62  bz main_after_for@8                  0x, 0, 60, 80
65  dig 2                                0x, 0, 60, 80, 0
67  dig 1                                0x, 0, 60, 80, 0, 80
69  dig 3                                0x, 0, 60, 80, 0, 80, 60
71  dup                                  0x, 0, 60, 80, 0, 80, 60, 60
72  cover 2                              0x, 0, 60, 80, 0, 60, 80, 60
74  +                                    0x, 0, 60, 80, 0, 60, 140
75  bury 3                               0x, 0, 60, 140, 0, 60
77  +                                    0x, 0, 60, 140, 60
78  bury 2                               0x, 0, 60, 140
80  dig 2                                0x, 0, 60, 140, 0
82  int 1                                0x, 0, 60, 140, 0, 1
83  +                                    0x, 0, 60, 140, 1
84  bury 3                               0x, 1, 60, 140
86  b main_for_header@4                  0x, 1, 60, 140
57  dig 2                                0x, 1, 60, 140, 1
59  int 5                                0x, 1, 60, 140, 1, 5
61  <                                    0x, 1, 60, 140, 1
62  bz main_after_for@8                  0x, 1, 60, 140
65  dig 2                                0x, 1, 60, 140, 1
67  dig 1                                0x, 1, 60, 140, 1, 140
69  dig 3                                0x, 1, 60, 140, 1, 140, 60
71  dup                                  0x, 1, 60, 140, 1, 140, 60, 60
72  cover 2                              0x, 1, 60, 140, 1, 60, 140, 60
74  +                                    0x, 1, 60, 140, 1, 60, 200
75  bury 3                               0x, 1, 60, 200, 1, 60
77  +                                    0x, 1, 60, 200, 61
78  bury 2                               0x, 1, 61, 200
80  dig 2                                0x, 1, 61, 200, 1
82  int 1                                0x, 1, 61, 200, 1, 1
83  +                                    0x, 1, 61, 200, 2
84  bury 3                               0x, 2, 61, 200
86  b main_for_header@4                  0x, 2, 61, 200
57  dig 2                                0x, 2, 61, 200, 2
59  int 5                                0x, 2, 61, 200, 2, 5
61  <                                    0x, 2, 61, 200, 1
62  bz main_after_for@8                  0x, 2, 61, 200
65  dig 2                                0x, 2, 61, 200, 2
67  dig 1                                0x, 2, 61, 200, 2, 200
69  dig 3                                0x, 2, 61, 200, 2, 200, 61
71  dup                                  0x, 2, 61, 200, 2, 200, 61, 61
72  cover 2                              0x, 2, 61, 200, 2, 61, 200, 61
74  +                                    0x, 2, 61, 200, 2, 61, 261
75  bury 3                               0x, 2, 61, 261, 2, 61
77  +                                    0x, 2, 61, 261, 63
78  bury 2                               0x, 2, 63, 261
80  dig 2                                0x, 2, 63, 261, 2
82  int 1                                0x, 2, 63, 261, 2, 1
83  +                                    0x, 2, 63, 261, 3
84  bury 3                               0x, 3, 63, 261
86  b main_for_header@4                  0x, 3, 63, 261
57  dig 2                                0x, 3, 63, 261, 3
59  int 5                                0x, 3, 63, 261, 3, 5
61  <                                    0x, 3, 63, 261, 1
62  bz main_after_for@8                  0x, 3, 63, 261
65  dig 2                                0x, 3, 63, 261, 3
67  dig 1                                0x, 3, 63, 261, 3, 261
69  dig 3                                0x, 3, 63, 261, 3, 261, 63
71  dup                                  0x, 3, 63, 261, 3, 261, 63, 63
72  cover 2                              0x, 3, 63, 261, 3, 63, 261, 63
74  +                                    0x, 3, 63, 261, 3, 63, 324
75  bury 3                               0x, 3, 63, 324, 3, 63
77  +                                    0x, 3, 63, 324, 66
78  bury 2                               0x, 3, 66, 324
80  dig 2                                0x, 3, 66, 324, 3
82  int 1                                0x, 3, 66, 324, 3, 1
83  +                                    0x, 3, 66, 324, 4
84  bury 3                               0x, 4, 66, 324
86  b main_for_header@4                  0x, 4, 66, 324
57  dig 2                                0x, 4, 66, 324, 4
59  int 5                                0x, 4, 66, 324, 4, 5
61  <                                    0x, 4, 66, 324, 1
62  bz main_after_for@8                  0x, 4, 66, 324
65  dig 2                                0x, 4, 66, 324, 4
67  dig 1                                0x, 4, 66, 324, 4, 324
69  dig 3                                0x, 4, 66, 324, 4, 324, 66
71  dup                                  0x, 4, 66, 324, 4, 324, 66, 66
72  cover 2                              0x, 4, 66, 324, 4, 66, 324, 66
74  +                                    0x, 4, 66, 324, 4, 66, 390
75  bury 3                               0x, 4, 66, 390, 4, 66
77  +                                    0x, 4, 66, 390, 70
78  bury 2                               0x, 4, 70, 390
80  dig 2                                0x, 4, 70, 390, 4
82  int 1                                0x, 4, 70, 390, 4, 1
83  +                                    0x, 4, 70, 390, 5
84  bury 3                               0x, 5, 70, 390
86  b main_for_header@4                  0x, 5, 70, 390
57  dig 2                                0x, 5, 70, 390, 5
59  int 5                                0x, 5, 70, 390, 5, 5
61  <                                    0x, 5, 70, 390, 0
62  bz main_after_for@8                  0x, 5, 70, 390
89  dig 1                                0x, 5, 70, 390, 70
91  dig 1                                0x, 5, 70, 390, 70, 390
93  <                                    0x, 5, 70, 390, 1
94  bz main_else_body@16                 0x, 5, 70, 390
97  dup                                  0x, 5, 70, 390, 390
98  int 2                                0x, 5, 70, 390, 390, 2
99  <                                    0x, 5, 70, 390, 0
100 bz main_else_body@11                 0x, 5, 70, 390
114 int 2                                0x, 5, 70, 390, 2
115 dig 2                                0x, 5, 70, 390, 2, 70
117 *                                    0x, 5, 70, 390, 140
118 int 14                               0x, 5, 70, 390, 140, 14
120 *                                    0x, 5, 70, 390, 1960
121 bz main_else_body@13                 0x, 5, 70, 390
124 int 2                                0x, 5, 70, 390, 2
125 bury 4                               2, 5, 70, 390
127 b main_after_if_else@14              2, 5, 70, 390
132 b main_after_if_else@20              2, 5, 70, 390
159 dig 3                                2, 5, 70, 390, 2
161 dup                                  2, 5, 70, 390, 2, 2
162 callsub one_hundred                  2, 5, 70, 390, 2, 2
187 proto 1 1                            2, 5, 70, 390, 2, 2
190 int 25                               2, 5, 70, 390, 2, 2, 25
192 dup                                  2, 5, 70, 390, 2, 2, 25, 25
193 swap                                 2, 5, 70, 390, 2, 2, 25, 25
194 int 2                                2, 5, 70, 390, 2, 2, 25, 25, 2
195 swap                                 2, 5, 70, 390, 2, 2, 25, 2, 25
196 frame_dig -1                         2, 5, 70, 390, 2, 2, 25, 2, 25, 2
198 <                                    2, 5, 70, 390, 2, 2, 25, 2, 0
199 bz one_hundred_after_if_else@2       2, 5, 70, 390, 2, 2, 25, 2
209 frame_dig 1                          2, 5, 70, 390, 2, 2, 25, 2, 2
211 dup                                  2, 5, 70, 390, 2, 2, 25, 2, 2, 2
212 *                                    2, 5, 70, 390, 2, 2, 25, 2, 4
213 frame_dig 0                          2, 5, 70, 390, 2, 2, 25, 2, 4, 25
215 *                                    2, 5, 70, 390, 2, 2, 25, 2, 100
216 frame_bury 0                         2, 5, 70, 390, 2, 2, 100, 2
218 retsub                               2, 5, 70, 390, 2, 100
165 +                                    2, 5, 70, 390, 102
166 dup                                  2, 5, 70, 390, 102, 102
167 itob                                 2, 5, 70, 390, 102, 0x0000000000000066
168 log                                  2, 5, 70, 390, 102
169 int 3                                2, 5, 70, 390, 102, 3
170 int 1                                2, 5, 70, 390, 102, 3, 1
171 callsub phi_in_equiv_class           2, 5, 70, 390, 102, 3, 1
219 proto 2 1                            2, 5, 70, 390, 102, 3, 1
222 frame_dig -1                         2, 5, 70, 390, 102, 3, 1, 1
224 bz phi_in_equiv_class_else_body@2    2, 5, 70, 390, 102, 3, 1
227 frame_dig -2                         2, 5, 70, 390, 102, 3, 1, 3
229 b phi_in_equiv_class_after_if_else@3 2, 5, 70, 390, 102, 3, 1, 3
234 int 1                                2, 5, 70, 390, 102, 3, 1, 3, 1
235 +                                    2, 5, 70, 390, 102, 3, 1, 4
236 retsub                               2, 5, 70, 390, 102, 4
174 int 4                                2, 5, 70, 390, 102, 4, 4
175 ==                                   2, 5, 70, 390, 102, 1
176 assert                               2, 5, 70, 390, 102
177 int 3                                2, 5, 70, 390, 102, 3
178 int 0                                2, 5, 70, 390, 102, 3, 0
180 callsub phi_in_equiv_class           2, 5, 70, 390, 102, 3, 0
219 proto 2 1                            2, 5, 70, 390, 102, 3, 0
222 frame_dig -1                         2, 5, 70, 390, 102, 3, 0, 0
224 bz phi_in_equiv_class_else_body@2    2, 5, 70, 390, 102, 3, 0
232 frame_dig -2                         2, 5, 70, 390, 102, 3, 0, 3
234 int 1                                2, 5, 70, 390, 102, 3, 0, 3, 1
235 +                                    2, 5, 70, 390, 102, 3, 0, 4
236 retsub                               2, 5, 70, 390, 102, 4
183 int 4                                2, 5, 70, 390, 102, 4, 4
184 ==                                   2, 5, 70, 390, 102, 1
185 assert                               2, 5, 70, 390, 102
186 return                               102