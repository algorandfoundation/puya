PC  Teal                                 Stack
1   <intcblock>
9   byte ""                              0x
11  dupn 3                               0x, 0x, 0x, 0x
13  int 1                                0x, 0x, 0x, 0x, 1
14  int 2                                0x, 0x, 0x, 0x, 1, 2
15  +                                    0x, 0x, 0x, 0x, 3
16  int 4                                0x, 0x, 0x, 0x, 3, 4
18  int 5                                0x, 0x, 0x, 0x, 3, 4, 5
19  *                                    0x, 0x, 0x, 0x, 3, 20
20  dup                                  0x, 0x, 0x, 0x, 3, 20, 20
21  cover 2                              0x, 0x, 0x, 0x, 20, 3, 20
23  *                                    0x, 0x, 0x, 0x, 20, 60
24  dup                                  0x, 0x, 0x, 0x, 20, 60, 60
25  cover 2                              0x, 0x, 0x, 0x, 60, 20, 60
27  +                                    0x, 0x, 0x, 0x, 60, 80
28  dig 1                                0x, 0x, 0x, 0x, 60, 80, 60
30  int 5                                0x, 0x, 0x, 0x, 60, 80, 60, 5
31  <                                    0x, 0x, 0x, 0x, 60, 80, 0
32  bz main_after_while@3                0x, 0x, 0x, 0x, 60, 80
51  int 1                                0x, 0x, 0x, 0x, 60, 80, 1
52  assert                               0x, 0x, 0x, 0x, 60, 80
53  int 0                                0x, 0x, 0x, 0x, 60, 80, 0
55  int 5                                0x, 0x, 0x, 0x, 60, 80, 0, 5
56  <                                    0x, 0x, 0x, 0x, 60, 80, 1
57  dig 2                                0x, 0x, 0x, 0x, 60, 80, 1, 60
59  bury 7                               60, 0x, 0x, 0x, 60, 80, 1
61  dig 1                                60, 0x, 0x, 0x, 60, 80, 1, 80
63  bury 6                               60, 80, 0x, 0x, 60, 80, 1
65  bz main_after_for@9                  60, 80, 0x, 0x, 60, 80
68  int 0                                60, 80, 0x, 0x, 60, 80, 0
70  bury 3                               60, 80, 0x, 0, 60, 80
72  dig 2                                60, 80, 0x, 0, 60, 80, 0
74  int 5                                60, 80, 0x, 0, 60, 80, 0, 5
75  <                                    60, 80, 0x, 0, 60, 80, 1
76  dig 2                                60, 80, 0x, 0, 60, 80, 1, 60
78  bury 7                               60, 80, 0x, 0, 60, 80, 1
80  dig 1                                60, 80, 0x, 0, 60, 80, 1, 80
82  bury 6                               60, 80, 0x, 0, 60, 80, 1
84  bz main_after_for@9                  60, 80, 0x, 0, 60, 80
87  dig 2                                60, 80, 0x, 0, 60, 80, 0
89  dig 1                                60, 80, 0x, 0, 60, 80, 0, 80
91  dig 3                                60, 80, 0x, 0, 60, 80, 0, 80, 60
93  dup                                  60, 80, 0x, 0, 60, 80, 0, 80, 60, 60
94  cover 2                              60, 80, 0x, 0, 60, 80, 0, 60, 80, 60
96  +                                    60, 80, 0x, 0, 60, 80, 0, 60, 140
97  bury 3                               60, 80, 0x, 0, 60, 140, 0, 60
99  +                                    60, 80, 0x, 0, 60, 140, 60
100 bury 2                               60, 80, 0x, 0, 60, 140
102 dig 2                                60, 80, 0x, 0, 60, 140, 0
104 int 1                                60, 80, 0x, 0, 60, 140, 0, 1
105 +                                    60, 80, 0x, 0, 60, 140, 1
106 bury 3                               60, 80, 0x, 1, 60, 140
108 b main_for_header@5                  60, 80, 0x, 1, 60, 140
72  dig 2                                60, 80, 0x, 1, 60, 140, 1
74  int 5                                60, 80, 0x, 1, 60, 140, 1, 5
75  <                                    60, 80, 0x, 1, 60, 140, 1
76  dig 2                                60, 80, 0x, 1, 60, 140, 1, 60
78  bury 7                               60, 80, 0x, 1, 60, 140, 1
80  dig 1                                60, 80, 0x, 1, 60, 140, 1, 140
82  bury 6                               60, 140, 0x, 1, 60, 140, 1
84  bz main_after_for@9                  60, 140, 0x, 1, 60, 140
87  dig 2                                60, 140, 0x, 1, 60, 140, 1
89  dig 1                                60, 140, 0x, 1, 60, 140, 1, 140
91  dig 3                                60, 140, 0x, 1, 60, 140, 1, 140, 60
93  dup                                  60, 140, 0x, 1, 60, 140, 1, 140, 60, 60
94  cover 2                              60, 140, 0x, 1, 60, 140, 1, 60, 140, 60
96  +                                    60, 140, 0x, 1, 60, 140, 1, 60, 200
97  bury 3                               60, 140, 0x, 1, 60, 200, 1, 60
99  +                                    60, 140, 0x, 1, 60, 200, 61
100 bury 2                               60, 140, 0x, 1, 61, 200
102 dig 2                                60, 140, 0x, 1, 61, 200, 1
104 int 1                                60, 140, 0x, 1, 61, 200, 1, 1
105 +                                    60, 140, 0x, 1, 61, 200, 2
106 bury 3                               60, 140, 0x, 2, 61, 200
108 b main_for_header@5                  60, 140, 0x, 2, 61, 200
72  dig 2                                60, 140, 0x, 2, 61, 200, 2
74  int 5                                60, 140, 0x, 2, 61, 200, 2, 5
75  <                                    60, 140, 0x, 2, 61, 200, 1
76  dig 2                                60, 140, 0x, 2, 61, 200, 1, 61
78  bury 7                               61, 140, 0x, 2, 61, 200, 1
80  dig 1                                61, 140, 0x, 2, 61, 200, 1, 200
82  bury 6                               61, 200, 0x, 2, 61, 200, 1
84  bz main_after_for@9                  61, 200, 0x, 2, 61, 200
87  dig 2                                61, 200, 0x, 2, 61, 200, 2
89  dig 1                                61, 200, 0x, 2, 61, 200, 2, 200
91  dig 3                                61, 200, 0x, 2, 61, 200, 2, 200, 61
93  dup                                  61, 200, 0x, 2, 61, 200, 2, 200, 61, 61
94  cover 2                              61, 200, 0x, 2, 61, 200, 2, 61, 200, 61
96  +                                    61, 200, 0x, 2, 61, 200, 2, 61, 261
97  bury 3                               61, 200, 0x, 2, 61, 261, 2, 61
99  +                                    61, 200, 0x, 2, 61, 261, 63
100 bury 2                               61, 200, 0x, 2, 63, 261
102 dig 2                                61, 200, 0x, 2, 63, 261, 2
104 int 1                                61, 200, 0x, 2, 63, 261, 2, 1
105 +                                    61, 200, 0x, 2, 63, 261, 3
106 bury 3                               61, 200, 0x, 3, 63, 261
108 b main_for_header@5                  61, 200, 0x, 3, 63, 261
72  dig 2                                61, 200, 0x, 3, 63, 261, 3
74  int 5                                61, 200, 0x, 3, 63, 261, 3, 5
75  <                                    61, 200, 0x, 3, 63, 261, 1
76  dig 2                                61, 200, 0x, 3, 63, 261, 1, 63
78  bury 7                               63, 200, 0x, 3, 63, 261, 1
80  dig 1                                63, 200, 0x, 3, 63, 261, 1, 261
82  bury 6                               63, 261, 0x, 3, 63, 261, 1
84  bz main_after_for@9                  63, 261, 0x, 3, 63, 261
87  dig 2                                63, 261, 0x, 3, 63, 261, 3
89  dig 1                                63, 261, 0x, 3, 63, 261, 3, 261
91  dig 3                                63, 261, 0x, 3, 63, 261, 3, 261, 63
93  dup                                  63, 261, 0x, 3, 63, 261, 3, 261, 63, 63
94  cover 2                              63, 261, 0x, 3, 63, 261, 3, 63, 261, 63
96  +                                    63, 261, 0x, 3, 63, 261, 3, 63, 324
97  bury 3                               63, 261, 0x, 3, 63, 324, 3, 63
99  +                                    63, 261, 0x, 3, 63, 324, 66
100 bury 2                               63, 261, 0x, 3, 66, 324
102 dig 2                                63, 261, 0x, 3, 66, 324, 3
104 int 1                                63, 261, 0x, 3, 66, 324, 3, 1
105 +                                    63, 261, 0x, 3, 66, 324, 4
106 bury 3                               63, 261, 0x, 4, 66, 324
108 b main_for_header@5                  63, 261, 0x, 4, 66, 324
72  dig 2                                63, 261, 0x, 4, 66, 324, 4
74  int 5                                63, 261, 0x, 4, 66, 324, 4, 5
75  <                                    63, 261, 0x, 4, 66, 324, 1
76  dig 2                                63, 261, 0x, 4, 66, 324, 1, 66
78  bury 7                               66, 261, 0x, 4, 66, 324, 1
80  dig 1                                66, 261, 0x, 4, 66, 324, 1, 324
82  bury 6                               66, 324, 0x, 4, 66, 324, 1
84  bz main_after_for@9                  66, 324, 0x, 4, 66, 324
87  dig 2                                66, 324, 0x, 4, 66, 324, 4
89  dig 1                                66, 324, 0x, 4, 66, 324, 4, 324
91  dig 3                                66, 324, 0x, 4, 66, 324, 4, 324, 66
93  dup                                  66, 324, 0x, 4, 66, 324, 4, 324, 66, 66
94  cover 2                              66, 324, 0x, 4, 66, 324, 4, 66, 324, 66
96  +                                    66, 324, 0x, 4, 66, 324, 4, 66, 390
97  bury 3                               66, 324, 0x, 4, 66, 390, 4, 66
99  +                                    66, 324, 0x, 4, 66, 390, 70
100 bury 2                               66, 324, 0x, 4, 70, 390
102 dig 2                                66, 324, 0x, 4, 70, 390, 4
104 int 1                                66, 324, 0x, 4, 70, 390, 4, 1
105 +                                    66, 324, 0x, 4, 70, 390, 5
106 bury 3                               66, 324, 0x, 5, 70, 390
108 b main_for_header@5                  66, 324, 0x, 5, 70, 390
72  dig 2                                66, 324, 0x, 5, 70, 390, 5
74  int 5                                66, 324, 0x, 5, 70, 390, 5, 5
75  <                                    66, 324, 0x, 5, 70, 390, 0
76  dig 2                                66, 324, 0x, 5, 70, 390, 0, 70
78  bury 7                               70, 324, 0x, 5, 70, 390, 0
80  dig 1                                70, 324, 0x, 5, 70, 390, 0, 390
82  bury 6                               70, 390, 0x, 5, 70, 390, 0
84  bz main_after_for@9                  70, 390, 0x, 5, 70, 390
111 dig 5                                70, 390, 0x, 5, 70, 390, 70
113 dup                                  70, 390, 0x, 5, 70, 390, 70, 70
114 bury 3                               70, 390, 0x, 5, 70, 390, 70
116 dig 5                                70, 390, 0x, 5, 70, 390, 70, 390
118 dup                                  70, 390, 0x, 5, 70, 390, 70, 390, 390
119 bury 3                               70, 390, 0x, 5, 70, 390, 70, 390
121 <                                    70, 390, 0x, 5, 70, 390, 1
122 bz main_else_body@17                 70, 390, 0x, 5, 70, 390
125 dup                                  70, 390, 0x, 5, 70, 390, 390
126 int 2                                70, 390, 0x, 5, 70, 390, 390, 2
127 <                                    70, 390, 0x, 5, 70, 390, 0
128 bz main_else_body@12                 70, 390, 0x, 5, 70, 390
142 int 2                                70, 390, 0x, 5, 70, 390, 2
143 dig 2                                70, 390, 0x, 5, 70, 390, 2, 70
145 *                                    70, 390, 0x, 5, 70, 390, 140
146 int 14                               70, 390, 0x, 5, 70, 390, 140, 14
148 *                                    70, 390, 0x, 5, 70, 390, 1960
149 bz main_else_body@14                 70, 390, 0x, 5, 70, 390
152 int 2                                70, 390, 0x, 5, 70, 390, 2
153 bury 4                               70, 390, 2, 5, 70, 390
155 b main_after_if_else@15              70, 390, 2, 5, 70, 390
160 b main_after_if_else@21              70, 390, 2, 5, 70, 390
187 dig 3                                70, 390, 2, 5, 70, 390, 2
189 dup                                  70, 390, 2, 5, 70, 390, 2, 2
190 callsub one_hundred                  70, 390, 2, 5, 70, 390, 2, 2
217 proto 1 1                            70, 390, 2, 5, 70, 390, 2, 2
220 int 25                               70, 390, 2, 5, 70, 390, 2, 2, 25
222 dup                                  70, 390, 2, 5, 70, 390, 2, 2, 25, 25
223 swap                                 70, 390, 2, 5, 70, 390, 2, 2, 25, 25
224 int 2                                70, 390, 2, 5, 70, 390, 2, 2, 25, 25, 2
225 swap                                 70, 390, 2, 5, 70, 390, 2, 2, 25, 2, 25
226 frame_dig -1                         70, 390, 2, 5, 70, 390, 2, 2, 25, 2, 25, 2
228 <                                    70, 390, 2, 5, 70, 390, 2, 2, 25, 2, 0
229 bz one_hundred_after_if_else@2       70, 390, 2, 5, 70, 390, 2, 2, 25, 2
239 frame_dig 1                          70, 390, 2, 5, 70, 390, 2, 2, 25, 2, 2
241 dup                                  70, 390, 2, 5, 70, 390, 2, 2, 25, 2, 2, 2
242 *                                    70, 390, 2, 5, 70, 390, 2, 2, 25, 2, 4
243 frame_dig 0                          70, 390, 2, 5, 70, 390, 2, 2, 25, 2, 4, 25
245 *                                    70, 390, 2, 5, 70, 390, 2, 2, 25, 2, 100
246 frame_bury 0                         70, 390, 2, 5, 70, 390, 2, 2, 100, 2
248 retsub                               70, 390, 2, 5, 70, 390, 2, 100
193 +                                    70, 390, 2, 5, 70, 390, 102
194 dup                                  70, 390, 2, 5, 70, 390, 102, 102
195 itob                                 70, 390, 2, 5, 70, 390, 102, 0x0000000000000066
196 log                                  70, 390, 2, 5, 70, 390, 102
197 int 3                                70, 390, 2, 5, 70, 390, 102, 3
198 int 1                                70, 390, 2, 5, 70, 390, 102, 3, 1
199 callsub phi_in_equiv_class           70, 390, 2, 5, 70, 390, 102, 3, 1
249 proto 2 1                            70, 390, 2, 5, 70, 390, 102, 3, 1
252 frame_dig -1                         70, 390, 2, 5, 70, 390, 102, 3, 1, 1
254 bz phi_in_equiv_class_else_body@2    70, 390, 2, 5, 70, 390, 102, 3, 1
257 frame_dig -2                         70, 390, 2, 5, 70, 390, 102, 3, 1, 3
259 b phi_in_equiv_class_after_if_else@3 70, 390, 2, 5, 70, 390, 102, 3, 1, 3
264 int 1                                70, 390, 2, 5, 70, 390, 102, 3, 1, 3, 1
265 +                                    70, 390, 2, 5, 70, 390, 102, 3, 1, 4
266 retsub                               70, 390, 2, 5, 70, 390, 102, 4
202 int 4                                70, 390, 2, 5, 70, 390, 102, 4, 4
204 ==                                   70, 390, 2, 5, 70, 390, 102, 1
205 assert                               70, 390, 2, 5, 70, 390, 102
206 int 3                                70, 390, 2, 5, 70, 390, 102, 3
207 int 0                                70, 390, 2, 5, 70, 390, 102, 3, 0
209 callsub phi_in_equiv_class           70, 390, 2, 5, 70, 390, 102, 3, 0
249 proto 2 1                            70, 390, 2, 5, 70, 390, 102, 3, 0
252 frame_dig -1                         70, 390, 2, 5, 70, 390, 102, 3, 0, 0
254 bz phi_in_equiv_class_else_body@2    70, 390, 2, 5, 70, 390, 102, 3, 0
262 frame_dig -2                         70, 390, 2, 5, 70, 390, 102, 3, 0, 3
264 int 1                                70, 390, 2, 5, 70, 390, 102, 3, 0, 3, 1
265 +                                    70, 390, 2, 5, 70, 390, 102, 3, 0, 4
266 retsub                               70, 390, 2, 5, 70, 390, 102, 4
212 int 4                                70, 390, 2, 5, 70, 390, 102, 4, 4
214 ==                                   70, 390, 2, 5, 70, 390, 102, 1
215 assert                               70, 390, 2, 5, 70, 390, 102
216 return                               102