// Op                                                           // Op Description               Stack (out)                                       Source code                                           Source line

#pragma version 10

// test_cases.ssa.contract.MyContract.approval_program() -> uint64:
main:
        byte ""
        dup                                                     // allocate 2 to stack          (𝕗) c#0,i#0 |

main_block@0:
        int 60                                                  //                              (𝕗) c#0,i#0 | 60                                  a * b                                                 File "ssa/contract.py", line 11
        int 80                                                  //                              (𝕗) c#0,i#0,a#1 | 80                              a + b                                                 File "ssa/contract.py", line 12
        // Implicit fall through to main_while_top@1            //                              (𝕗) c#0,i#0,a#1,b#1 |

main_while_top@1:
        dig 1                                                   // load a#1 from f-stack        (𝕗) c#0,i#0,a#1,b#1 | a#1                         a                                                     File "ssa/contract.py", line 11
        int 5                                                   //                              (𝕗) c#0,i#0,a#1,b#1 | a#1,5                       5                                                     File "ssa/contract.py", line 14
        <                                                       //                              (𝕗) c#0,i#0,a#1,b#1 | {<}                         a < UInt64(5):                                        File "ssa/contract.py", line 14
        bz main_after_while@3                                   //                              (𝕗) c#0,i#0,a#1,b#1 |                             while a < UInt64(5):                                  File "ssa/contract.py", line 14
        // Implicit fall through to main_while_body@2           //                              (𝕗) c#0,i#0,a#1,b#1 |                             while a < UInt64(5):                                  File "ssa/contract.py", line 14

main_while_body@2:
        dup                                                     // load b#1 from f-stack        (𝕗) c#0,i#0,a#1,b#1 | b#1                         b                                                     File "ssa/contract.py", line 12
        dig 2                                                   // load a#1 from f-stack        (𝕗) c#0,i#0,a#1,b#1 | b#1,a#1                     a                                                     File "ssa/contract.py", line 11
        dup
        cover 2                                                 // store a#1 to l-stack (copy)  (𝕗) c#0,i#0,a#1,b#1 | a#1,b#1,a#1                 a                                                     File "ssa/contract.py", line 11
        +                                                       //                              (𝕗) c#0,i#0,a#1,b#1 | a#1,{+}                     b + a                                                 File "ssa/contract.py", line 15
        bury 2                                                  // store b#1 to f-stack         (𝕗) c#0,i#0,a#1,b#1 | a#1                         b                                                     File "ssa/contract.py", line 12
        int 1                                                   //                              (𝕗) c#0,i#0,a#1,b#1 | a#1,1                       1                                                     File "ssa/contract.py", line 16
        +                                                       //                              (𝕗) c#0,i#0,a#1,b#1 | {+}                         a + 1                                                 File "ssa/contract.py", line 16
        bury 2                                                  // store a#1 to f-stack         (𝕗) c#0,i#0,a#1,b#1 |                             a                                                     File "ssa/contract.py", line 11
        b main_while_top@1                                      //                              (𝕗) c#0,i#0,a#1,b#1 |

main_after_while@3:
        int 0                                                   //                              (𝕗) c#0,i#0,a#1,b#1 | 0                           urange(5)                                             File "ssa/contract.py", line 18
        bury 3                                                  // store i#0 to f-stack         (𝕗) c#0,i#0,a#1,b#1 |                             i                                                     File "ssa/contract.py", line 18
        // Implicit fall through to main_for_header@4           //                              (𝕗) c#0,i#0,a#1,b#1 |

main_for_header@4:
        dig 2                                                   // load i#0 from f-stack        (𝕗) c#0,i#0,a#1,b#1 | i#0                         i                                                     File "ssa/contract.py", line 18
        int 5                                                   //                              (𝕗) c#0,i#0,a#1,b#1 | i#0,5                       5                                                     File "ssa/contract.py", line 18
        <                                                       //                              (𝕗) c#0,i#0,a#1,b#1 | {<}                         urange(5)                                             File "ssa/contract.py", line 18
        bz main_after_for@8                                     //                              (𝕗) c#0,i#0,a#1,b#1 |                             for i in urange(5):                                   File "ssa/contract.py", line 18
        // Implicit fall through to main_for_body@5             //                              (𝕗) c#0,i#0,a#1,b#1 |                             for i in urange(5):                                   File "ssa/contract.py", line 18

main_for_body@5:
        dup                                                     // load b#1 from f-stack        (𝕗) c#0,i#0,a#1,b#1 | b#1                         b                                                     File "ssa/contract.py", line 12
        dig 2                                                   // load a#1 from f-stack        (𝕗) c#0,i#0,a#1,b#1 | b#1,a#1                     a                                                     File "ssa/contract.py", line 11
        dup
        cover 2                                                 // store a#1 to l-stack (copy)  (𝕗) c#0,i#0,a#1,b#1 | a#1,b#1,a#1                 a                                                     File "ssa/contract.py", line 11
        +                                                       //                              (𝕗) c#0,i#0,a#1,b#1 | a#1,{+}                     b + a                                                 File "ssa/contract.py", line 19
        bury 2                                                  // store b#1 to f-stack         (𝕗) c#0,i#0,a#1,b#1 | a#1                         b                                                     File "ssa/contract.py", line 12
        dig 3                                                   // load i#0 from f-stack        (𝕗) c#0,i#0,a#1,b#1 | a#1,i#0                     i                                                     File "ssa/contract.py", line 18
        dup
        cover 2                                                 // store i#0 to l-stack (copy)  (𝕗) c#0,i#0,a#1,b#1 | i#0,a#1,i#0                 i                                                     File "ssa/contract.py", line 18
        +                                                       //                              (𝕗) c#0,i#0,a#1,b#1 | i#0,{+}                     a + i                                                 File "ssa/contract.py", line 20
        bury 3                                                  // store a#1 to f-stack         (𝕗) c#0,i#0,a#1,b#1 | i#0                         a                                                     File "ssa/contract.py", line 11
        int 1                                                   //                              (𝕗) c#0,i#0,a#1,b#1 | i#0,1                       urange(5)                                             File "ssa/contract.py", line 18
        +                                                       //                              (𝕗) c#0,i#0,a#1,b#1 | {+}                         urange(5)                                             File "ssa/contract.py", line 18
        bury 3                                                  // store i#0 to f-stack         (𝕗) c#0,i#0,a#1,b#1 |                             i                                                     File "ssa/contract.py", line 18
        b main_for_header@4                                     //                              (𝕗) c#0,i#0,a#1,b#1 |

main_after_for@8:
        dig 1                                                   // load a#1 from f-stack        (𝕗) c#0,i#0,a#1,b#1 | a#1                         a                                                     File "ssa/contract.py", line 11
        dig 1                                                   // load b#1 from f-stack        (𝕗) c#0,i#0,a#1,b#1 | a#1,b#1                     b                                                     File "ssa/contract.py", line 12
        <                                                       //                              (𝕗) c#0,i#0,a#1,b#1 | {<}                         a < b:                                                File "ssa/contract.py", line 22
        bz main_else_body@16                                    //                              (𝕗) c#0,i#0,a#1,b#1 |                             if a < b:                                             File "ssa/contract.py", line 22
        // Implicit fall through to main_if_body@9              //                              (𝕗) c#0,i#0,a#1,b#1 |                             if a < b:                                             File "ssa/contract.py", line 22

main_if_body@9:
        dup                                                     // load b#1 from f-stack        (𝕗) c#0,i#0,a#1,b#1 | b#1                         b                                                     File "ssa/contract.py", line 12
        int 2                                                   //                              (𝕗) c#0,i#0,a#1,b#1 | b#1,2                       2                                                     File "ssa/contract.py", line 23
        <                                                       //                              (𝕗) c#0,i#0,a#1,b#1 | {<}                         b < 2:                                                File "ssa/contract.py", line 23
        bz main_else_body@11                                    //                              (𝕗) c#0,i#0,a#1,b#1 |                             if b < 2:                                             File "ssa/contract.py", line 23
        // Implicit fall through to main_if_body@10             //                              (𝕗) c#0,i#0,a#1,b#1 |                             if b < 2:                                             File "ssa/contract.py", line 23

main_if_body@10:
        dig 1                                                   // load a#1 from f-stack        (𝕗) c#0,i#0,a#1,b#1 | a#1                         a                                                     File "ssa/contract.py", line 11
        int 5                                                   //                              (𝕗) c#0,i#0,a#1,b#1 | a#1,5                       3 + UInt64(2)                                         File "ssa/contract.py", line 24
        +                                                       //                              (𝕗) c#0,i#0,a#1,b#1 | {+}                         a + b                                                 File "ssa/contract.py", line 25
        bury 4                                                  // store c#0 to f-stack         (𝕗) c#0,i#0,a#1,b#1 |                             c                                                     File "ssa/contract.py", line 25
        b main_after_if_else@15                                 //                              (𝕗) c#0,i#0,a#1,b#1 |

main_else_body@11:
        int 2                                                   //                              (𝕗) c#0,i#0,a#1,b#1 | 2                           2                                                     File "ssa/contract.py", line 27
        dig 2                                                   // load a#1 from f-stack        (𝕗) c#0,i#0,a#1,b#1 | 2,a#1                       a                                                     File "ssa/contract.py", line 11
        *                                                       //                              (𝕗) c#0,i#0,a#1,b#1 | {*}                         2 * a                                                 File "ssa/contract.py", line 27
        int 14                                                  //                              (𝕗) c#0,i#0,a#1,b#1 | b#1,14                      (3 * 4) + 2                                           File "ssa/contract.py", line 28
        *                                                       //                              (𝕗) c#0,i#0,a#1,b#1 | {*}                         ((3 * 4) + 2) * b                                     File "ssa/contract.py", line 28
        bz main_else_body@13                                    //                              (𝕗) c#0,i#0,a#1,b#1 |                             if ((3 * 4) + 2) * b:                                 File "ssa/contract.py", line 28
        // Implicit fall through to main_if_body@12             //                              (𝕗) c#0,i#0,a#1,b#1 |                             if ((3 * 4) + 2) * b:                                 File "ssa/contract.py", line 28

main_if_body@12:
        int 2                                                   //                              (𝕗) c#0,i#0,a#1,b#1 | 2                           2                                                     File "ssa/contract.py", line 29
        bury 4                                                  // store c#0 to f-stack         (𝕗) c#0,i#0,a#1,b#1 |                             c                                                     File "ssa/contract.py", line 25
        b main_after_if_else@15                                 //                              (𝕗) c#0,i#0,a#1,b#1 |

main_else_body@13:
        int 3                                                   //                              (𝕗) c#0,i#0,a#1,b#1 | 3                           3                                                     File "ssa/contract.py", line 31
        return                                                  //                              (𝕗) c#0,i#0,a#1,b#1 |                             return UInt64(3)                                      File "ssa/contract.py", line 31

main_after_if_else@15:
        b main_after_if_else@20                                 //                              (𝕗) c#0,i#0,a#1,b#1 |

main_else_body@16:
        dup                                                     // load b#1 from f-stack        (𝕗) c#0,i#0,a#1,b#1 | b#1                         b                                                     File "ssa/contract.py", line 12
        dig 2                                                   // load a#1 from f-stack        (𝕗) c#0,i#0,a#1,b#1 | b#1,a#1                     a                                                     File "ssa/contract.py", line 11
        ==                                                      //                              (𝕗) c#0,i#0,a#1,b#1 | {==}                        b == a:                                               File "ssa/contract.py", line 32
        bz main_else_body@18                                    //                              (𝕗) c#0,i#0,a#1,b#1 |                             elif b == a:                                          File "ssa/contract.py", line 32
        // Implicit fall through to main_if_body@17             //                              (𝕗) c#0,i#0,a#1,b#1 |                             elif b == a:                                          File "ssa/contract.py", line 32

main_if_body@17:
        dig 1                                                   // load a#1 from f-stack        (𝕗) c#0,i#0,a#1,b#1 | a#1                         a                                                     File "ssa/contract.py", line 11
        dig 1                                                   // load b#1 from f-stack        (𝕗) c#0,i#0,a#1,b#1 | a#1,b#1                     b                                                     File "ssa/contract.py", line 12
        *                                                       //                              (𝕗) c#0,i#0,a#1,b#1 | {*}                         a * b                                                 File "ssa/contract.py", line 33
        bury 4                                                  // store c#0 to f-stack         (𝕗) c#0,i#0,a#1,b#1 |                             c                                                     File "ssa/contract.py", line 25
        b main_after_if_else@19                                 //                              (𝕗) c#0,i#0,a#1,b#1 |

main_else_body@18:
        dig 1                                                   // load a#1 from f-stack        (𝕗) c#0,i#0,a#1,b#1 | a#1                         a                                                     File "ssa/contract.py", line 11
        dig 1                                                   // load b#1 from f-stack        (𝕗) c#0,i#0,a#1,b#1 | a#1,b#1                     b                                                     File "ssa/contract.py", line 12
        -                                                       //                              (𝕗) c#0,i#0,a#1,b#1 | {-}                         a - b                                                 File "ssa/contract.py", line 35
        bury 4                                                  // store c#0 to f-stack         (𝕗) c#0,i#0,a#1,b#1 |                             c                                                     File "ssa/contract.py", line 25
        // Implicit fall through to main_after_if_else@19       //                              (𝕗) c#0,i#0,a#1,b#1 |

main_after_if_else@19:
        // Implicit fall through to main_after_if_else@20       //                              (𝕗) c#0,i#0,a#1,b#1 |

main_after_if_else@20:
        dig 3                                                   // load c#0 from f-stack        (𝕗) c#0,i#0,a#1,b#1 | c#0                         c                                                     File "ssa/contract.py", line 25
        dup                                                     // store c#0 to l-stack (copy)  (𝕗) c#0,i#0,a#1,b#1 | c#0,c#0                     c                                                     File "ssa/contract.py", line 25
        callsub one_hundred                                     //                              (𝕗) c#0,i#0,a#1,b#1 | c#0,{one_hundred}           one_hundred(c)                                        File "ssa/contract.py", line 36
        +                                                       //                              (𝕗) c#0,i#0,a#1,b#1 | {+}                         c + one_hundred(c)                                    File "ssa/contract.py", line 36
        dup                                                     // load c#0 from l-stack (copy) (𝕗) c#0,i#0,a#1,b#1 | c#0,c#0                     c                                                     File "ssa/contract.py", line 25
        itob                                                    //                              (𝕗) c#0,i#0,a#1,b#1 | c#0,{itob}                  itob(c)                                               File "ssa/contract.py", line 37
        log                                                     //                              (𝕗) c#0,i#0,a#1,b#1 | c#0                         log(c_bytes)                                          File "ssa/contract.py", line 38
        int 3                                                   //                              (𝕗) c#0,i#0,a#1,b#1 | c#0,3                       3                                                     File "ssa/contract.py", line 39
        int 1                                                   //                              (𝕗) c#0,i#0,a#1,b#1 | c#0,3,1                     True                                                  File "ssa/contract.py", line 39
        callsub phi_in_equiv_class                              //                              (𝕗) c#0,i#0,a#1,b#1 | c#0,{phi_in_equiv_class}    phi_in_equiv_class(UInt64(3), True)                   File "ssa/contract.py", line 39
        int 4                                                   //                              (𝕗) c#0,i#0,a#1,b#1 | c#0,tmp%8#0,4               4                                                     File "ssa/contract.py", line 39
        ==                                                      //                              (𝕗) c#0,i#0,a#1,b#1 | c#0,{==}                    phi_in_equiv_class(UInt64(3), True) == 4              File "ssa/contract.py", line 39
        assert                                                  //                              (𝕗) c#0,i#0,a#1,b#1 | c#0                         assert phi_in_equiv_class(UInt64(3), True) == 4       File "ssa/contract.py", line 39
        int 3                                                   //                              (𝕗) c#0,i#0,a#1,b#1 | c#0,3                       3                                                     File "ssa/contract.py", line 40
        int 0                                                   //                              (𝕗) c#0,i#0,a#1,b#1 | c#0,3,0                     False                                                 File "ssa/contract.py", line 40
        callsub phi_in_equiv_class                              //                              (𝕗) c#0,i#0,a#1,b#1 | c#0,{phi_in_equiv_class}    phi_in_equiv_class(UInt64(3), False)                  File "ssa/contract.py", line 40
        int 4                                                   //                              (𝕗) c#0,i#0,a#1,b#1 | c#0,tmp%10#0,4              4                                                     File "ssa/contract.py", line 40
        ==                                                      //                              (𝕗) c#0,i#0,a#1,b#1 | c#0,{==}                    phi_in_equiv_class(UInt64(3), False) == 4             File "ssa/contract.py", line 40
        assert                                                  //                              (𝕗) c#0,i#0,a#1,b#1 | c#0                         assert phi_in_equiv_class(UInt64(3), False) == 4      File "ssa/contract.py", line 40
        return                                                  //                              (𝕗) c#0,i#0,a#1,b#1 |                             return c                                              File "ssa/contract.py", line 41


// test_cases.ssa.contract.one_hundred(c#0: uint64) -> uint64:
one_hundred:
        proto 1 1                                               //                              (𝕡) c#0 |                                         def one_hundred(c: UInt64) -> UInt64:                 File "ssa/contract.py", line 48

one_hundred_block@0:
        int 25                                                  //                              (𝕡) c#0 | 25                                      25                                                    File "ssa/contract.py", line 49
        int 2                                                   //                              (𝕡) c#0 | (𝕗) a#0 | 2                             2                                                     File "ssa/contract.py", line 50
        int 25                                                  //                              (𝕡) c#0 | (𝕗) a#0,b#0 | 25                        25                                                    File "ssa/contract.py", line 49
        frame_dig -1                                            // load c#0 from parameters     (𝕡) c#0 | (𝕗) a#0,b#0 | 25,c#0                    c: UInt64                                             File "ssa/contract.py", line 48
        <                                                       //                              (𝕡) c#0 | (𝕗) a#0,b#0 | {<}                       a < c:                                                File "ssa/contract.py", line 51
        bz one_hundred_after_if_else@2                          //                              (𝕡) c#0 | (𝕗) a#0,b#0 |                           if a < c:                                             File "ssa/contract.py", line 51
        // Implicit fall through to one_hundred_if_body@1       //                              (𝕡) c#0 | (𝕗) a#0,b#0 |                           if a < c:                                             File "ssa/contract.py", line 51

one_hundred_if_body@1:
        int 1                                                   //                              (𝕡) c#0 | (𝕗) a#0,b#0 | 1                         1                                                     File "ssa/contract.py", line 52
        frame_bury 1                                            // store b#0 to f-stack         (𝕡) c#0 | (𝕗) a#0,b#0 |                           b                                                     File "ssa/contract.py", line 50
        int 100                                                 //                              (𝕡) c#0 | (𝕗) a#0,b#0 | 100                       100                                                   File "ssa/contract.py", line 53
        frame_bury 0                                            // store a#0 to f-stack         (𝕡) c#0 | (𝕗) a#0,b#0 |                           a                                                     File "ssa/contract.py", line 49
        // Implicit fall through to one_hundred_after_if_else@2 //                              (𝕡) c#0 | (𝕗) a#0,b#0 |

one_hundred_after_if_else@2:
        frame_dig 1                                             // load b#0 from f-stack        (𝕡) c#0 | (𝕗) a#0,b#0 | b#0                       b                                                     File "ssa/contract.py", line 50
        dup                                                     // store b#0 to l-stack (copy)  (𝕡) c#0 | (𝕗) a#0,b#0 | b#0,b#0                   b                                                     File "ssa/contract.py", line 50
        *                                                       //                              (𝕡) c#0 | (𝕗) a#0,b#0 | {*}                       b *= b                                                File "ssa/contract.py", line 55
        frame_dig 0                                             // load a#0 from f-stack        (𝕡) c#0 | (𝕗) a#0,b#0 | b#0,a#0                   a                                                     File "ssa/contract.py", line 49
        *                                                       //                              (𝕡) c#0 | (𝕗) a#0,b#0 | {*}                       a * b                                                 File "ssa/contract.py", line 56
        frame_bury 0
        retsub                                                  //                              tmp%1#0                                           return a * b                                          File "ssa/contract.py", line 56


// test_cases.ssa.contract.phi_in_equiv_class(y#0: uint64, b#0: uint64) -> uint64:
phi_in_equiv_class:
        proto 2 1                                               //                              (𝕡) y#0,b#0 |                                     def phi_in_equiv_class(y: UInt64, b: bool) -> UInt64: File "ssa/contract.py", line 60

phi_in_equiv_class_block@0:
        frame_dig -2                                            // load y#0 from parameters     (𝕡) y#0,b#0 | y#0                                 y: UInt64                                             File "ssa/contract.py", line 60
        int 1                                                   //                              (𝕡) y#0,b#0 | y#0,1                               1                                                     File "ssa/contract.py", line 67
        +                                                       //                              (𝕡) y#0,b#0 | {+}                                 x += 1                                                File "ssa/contract.py", line 67
        retsub                                                  //                              x#3                                               return x                                              File "ssa/contract.py", line 68

