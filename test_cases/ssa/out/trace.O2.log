PC  Teal                           Stack
1   <intcblock>
10  byte ""                        0x
12  int 60                         0x, 60
14  int 80                         0x, 60, 80
16  dig 1                          0x, 60, 80, 60
18  int 5                          0x, 60, 80, 60, 5
19  <                              0x, 60, 80, 0
20  bz main_after_while@3          0x, 60, 80
39  int 0                          0x, 60, 80, 0
41  bury 3                         0, 60, 80
43  dig 2                          0, 60, 80, 0
45  int 5                          0, 60, 80, 0, 5
46  <                              0, 60, 80, 1
47  bz main_after_for@9            0, 60, 80
50  dup                            0, 60, 80, 80
51  dig 2                          0, 60, 80, 80, 60
53  dup                            0, 60, 80, 80, 60, 60
54  cover 2                        0, 60, 80, 60, 80, 60
56  +                              0, 60, 80, 60, 140
57  bury 2                         0, 60, 140, 60
59  dig 3                          0, 60, 140, 60, 0
61  dup                            0, 60, 140, 60, 0, 0
62  cover 2                        0, 60, 140, 0, 60, 0
64  +                              0, 60, 140, 0, 60
65  bury 3                         0, 60, 140, 0
67  int 1                          0, 60, 140, 0, 1
68  +                              0, 60, 140, 1
69  bury 3                         1, 60, 140
71  b main_for_header@5            1, 60, 140
43  dig 2                          1, 60, 140, 1
45  int 5                          1, 60, 140, 1, 5
46  <                              1, 60, 140, 1
47  bz main_after_for@9            1, 60, 140
50  dup                            1, 60, 140, 140
51  dig 2                          1, 60, 140, 140, 60
53  dup                            1, 60, 140, 140, 60, 60
54  cover 2                        1, 60, 140, 60, 140, 60
56  +                              1, 60, 140, 60, 200
57  bury 2                         1, 60, 200, 60
59  dig 3                          1, 60, 200, 60, 1
61  dup                            1, 60, 200, 60, 1, 1
62  cover 2                        1, 60, 200, 1, 60, 1
64  +                              1, 60, 200, 1, 61
65  bury 3                         1, 61, 200, 1
67  int 1                          1, 61, 200, 1, 1
68  +                              1, 61, 200, 2
69  bury 3                         2, 61, 200
71  b main_for_header@5            2, 61, 200
43  dig 2                          2, 61, 200, 2
45  int 5                          2, 61, 200, 2, 5
46  <                              2, 61, 200, 1
47  bz main_after_for@9            2, 61, 200
50  dup                            2, 61, 200, 200
51  dig 2                          2, 61, 200, 200, 61
53  dup                            2, 61, 200, 200, 61, 61
54  cover 2                        2, 61, 200, 61, 200, 61
56  +                              2, 61, 200, 61, 261
57  bury 2                         2, 61, 261, 61
59  dig 3                          2, 61, 261, 61, 2
61  dup                            2, 61, 261, 61, 2, 2
62  cover 2                        2, 61, 261, 2, 61, 2
64  +                              2, 61, 261, 2, 63
65  bury 3                         2, 63, 261, 2
67  int 1                          2, 63, 261, 2, 1
68  +                              2, 63, 261, 3
69  bury 3                         3, 63, 261
71  b main_for_header@5            3, 63, 261
43  dig 2                          3, 63, 261, 3
45  int 5                          3, 63, 261, 3, 5
46  <                              3, 63, 261, 1
47  bz main_after_for@9            3, 63, 261
50  dup                            3, 63, 261, 261
51  dig 2                          3, 63, 261, 261, 63
53  dup                            3, 63, 261, 261, 63, 63
54  cover 2                        3, 63, 261, 63, 261, 63
56  +                              3, 63, 261, 63, 324
57  bury 2                         3, 63, 324, 63
59  dig 3                          3, 63, 324, 63, 3
61  dup                            3, 63, 324, 63, 3, 3
62  cover 2                        3, 63, 324, 3, 63, 3
64  +                              3, 63, 324, 3, 66
65  bury 3                         3, 66, 324, 3
67  int 1                          3, 66, 324, 3, 1
68  +                              3, 66, 324, 4
69  bury 3                         4, 66, 324
71  b main_for_header@5            4, 66, 324
43  dig 2                          4, 66, 324, 4
45  int 5                          4, 66, 324, 4, 5
46  <                              4, 66, 324, 1
47  bz main_after_for@9            4, 66, 324
50  dup                            4, 66, 324, 324
51  dig 2                          4, 66, 324, 324, 66
53  dup                            4, 66, 324, 324, 66, 66
54  cover 2                        4, 66, 324, 66, 324, 66
56  +                              4, 66, 324, 66, 390
57  bury 2                         4, 66, 390, 66
59  dig 3                          4, 66, 390, 66, 4
61  dup                            4, 66, 390, 66, 4, 4
62  cover 2                        4, 66, 390, 4, 66, 4
64  +                              4, 66, 390, 4, 70
65  bury 3                         4, 70, 390, 4
67  int 1                          4, 70, 390, 4, 1
68  +                              4, 70, 390, 5
69  bury 3                         5, 70, 390
71  b main_for_header@5            5, 70, 390
43  dig 2                          5, 70, 390, 5
45  int 5                          5, 70, 390, 5, 5
46  <                              5, 70, 390, 0
47  bz main_after_for@9            5, 70, 390
74  dig 1                          5, 70, 390, 70
76  dig 1                          5, 70, 390, 70, 390
78  <                              5, 70, 390, 1
79  bz main_else_body@17           5, 70, 390
82  dup                            5, 70, 390, 390
83  int 2                          5, 70, 390, 390, 2
84  <                              5, 70, 390, 0
85  bz main_else_body@12           5, 70, 390
97  int 2                          5, 70, 390, 2
98  dig 2                          5, 70, 390, 2, 70
100 *                              5, 70, 390, 140
101 int 14                         5, 70, 390, 140, 14
103 *                              5, 70, 390, 1960
104 bz main_else_body@14           5, 70, 390
107 int 2                          5, 70, 390, 2
108 bury 2                         5, 2, 390
110 b main_after_if_else@16        5, 2, 390
115 b main_after_if_else@21        5, 2, 390
142 dig 1                          5, 2, 390, 2
144 dup                            5, 2, 390, 2, 2
145 callsub one_hundred            5, 2, 390, 2, 2
172 proto 1 1                      5, 2, 390, 2, 2
175 int 25                         5, 2, 390, 2, 2, 25
177 int 2                          5, 2, 390, 2, 2, 25, 2
178 int 25                         5, 2, 390, 2, 2, 25, 2, 25
180 frame_dig -1                   5, 2, 390, 2, 2, 25, 2, 25, 2
182 <                              5, 2, 390, 2, 2, 25, 2, 0
183 bz one_hundred_after_if_else@2 5, 2, 390, 2, 2, 25, 2
193 frame_dig 1                    5, 2, 390, 2, 2, 25, 2, 2
195 dup                            5, 2, 390, 2, 2, 25, 2, 2, 2
196 *                              5, 2, 390, 2, 2, 25, 2, 4
197 frame_dig 0                    5, 2, 390, 2, 2, 25, 2, 4, 25
199 *                              5, 2, 390, 2, 2, 25, 2, 100
200 frame_bury 0                   5, 2, 390, 2, 2, 100, 2
202 retsub                         5, 2, 390, 2, 100
148 +                              5, 2, 390, 102
149 dup                            5, 2, 390, 102, 102
150 itob                           5, 2, 390, 102, 0x0000000000000066
151 log                            5, 2, 390, 102
152 int 3                          5, 2, 390, 102, 3
153 int 1                          5, 2, 390, 102, 3, 1
154 callsub phi_in_equiv_class     5, 2, 390, 102, 3, 1
203 proto 2 1                      5, 2, 390, 102, 3, 1
206 frame_dig -2                   5, 2, 390, 102, 3, 1, 3
208 int 1                          5, 2, 390, 102, 3, 1, 3, 1
209 +                              5, 2, 390, 102, 3, 1, 4
210 retsub                         5, 2, 390, 102, 4
157 int 4                          5, 2, 390, 102, 4, 4
159 ==                             5, 2, 390, 102, 1
160 assert                         5, 2, 390, 102
161 int 3                          5, 2, 390, 102, 3
162 int 0                          5, 2, 390, 102, 3, 0
164 callsub phi_in_equiv_class     5, 2, 390, 102, 3, 0
203 proto 2 1                      5, 2, 390, 102, 3, 0
206 frame_dig -2                   5, 2, 390, 102, 3, 0, 3
208 int 1                          5, 2, 390, 102, 3, 0, 3, 1
209 +                              5, 2, 390, 102, 3, 0, 4
210 retsub                         5, 2, 390, 102, 4
167 int 4                          5, 2, 390, 102, 4, 4
169 ==                             5, 2, 390, 102, 1
170 assert                         5, 2, 390, 102
171 return                         102