main test_cases.ssa.contract.MyContract.approval_program:
    block@0: // L7
        let a#1: uint64 = 60u
        let b#1: uint64 = 80u
        goto block@1
    block@1: // while_top_L14
        let tmp%4#0: bool = (< a#1 5u)
        goto tmp%4#0 ? block@2 : block@3
    block@2: // while_body_L15
        let b#1: uint64 = (+ b#1 a#1)
        let a#1: uint64 = (+ a#1 1u)
        goto block@1
    block@3: // after_while_L14
        let i#0: uint64 = 0u
        goto block@4
    block@4: // for_header_L18
        let continue_looping%0#0: bool = (< i#0 5u)
        goto continue_looping%0#0 ? block@5 : block@7
    block@5: // for_body_L19
        let b#1: uint64 = (+ b#1 a#1)
        let a#1: uint64 = (+ a#1 i#0)
        let i#0: uint64 = (+ i#0 1u)
        goto block@4
    block@7: // after_for_L18
        let tmp%9#0: bool = (< a#1 b#1)
        goto tmp%9#0 ? block@8 : block@15
    block@8: // if_body_L23
        let tmp%10#0: bool = (< b#1 2u)
        goto tmp%10#0 ? block@9 : block@10
    block@9: // if_body_L24
        let c#0: uint64 = (+ a#1 5u)
        goto block@19
    block@10: // else_body_L27
        let b#1: uint64 = (* 2u a#1)
        let tmp%14#0: uint64 = (* 14u b#1)
        goto tmp%14#0 ? block@11 : block@12
    block@11: // if_body_L29
        let c#0: uint64 = 2u
        goto block@19
    block@12: // else_body_L31
        return 3u
    block@15: // else_body_L32
        let tmp%16#0: bool = (== b#1 a#1)
        goto tmp%16#0 ? block@16 : block@17
    block@16: // if_body_L33
        let c#0: uint64 = (* a#1 b#1)
        goto block@19
    block@17: // else_body_L35
        let c#0: uint64 = (- a#1 b#1)
        goto block@19
    block@19: // after_if_else_L22
        let a#1: uint64 = 25u
        let b#1: uint64 = 2u
        let tmp%0#1: bool = (< 25u c#0)
        goto tmp%0#1 ? block@21 : block@22
    block@21: // if_body_L52
        let b#1: uint64 = 1u
        let a#1: uint64 = 100u
        goto block@22
    block@22: // after_if_else_L51
        let b#1: uint64 = (* b#1 b#1)
        let tmp%2#1: uint64 = (* a#1 b#1)
        let c#0: uint64 = (+ c#0 tmp%2#1)
        let c_bytes#0: bytes = (itob c#0)
        (log c_bytes#0)
        return c#0