PC  Teal                           Stack
1   <intcblock>
10  byte ""                        0x
12  dup                            0x, 0x
13  int 60                         0x, 0x, 60
15  int 80                         0x, 0x, 60, 80
17  dig 1                          0x, 0x, 60, 80, 60
19  int 5                          0x, 0x, 60, 80, 60, 5
20  <                              0x, 0x, 60, 80, 0
21  bz main_after_while@3          0x, 0x, 60, 80
40  int 0                          0x, 0x, 60, 80, 0
42  bury 3                         0x, 0, 60, 80
44  dig 2                          0x, 0, 60, 80, 0
46  int 5                          0x, 0, 60, 80, 0, 5
47  <                              0x, 0, 60, 80, 1
48  bz main_after_for@9            0x, 0, 60, 80
51  dup                            0x, 0, 60, 80, 80
52  dig 2                          0x, 0, 60, 80, 80, 60
54  dup                            0x, 0, 60, 80, 80, 60, 60
55  cover 2                        0x, 0, 60, 80, 60, 80, 60
57  +                              0x, 0, 60, 80, 60, 140
58  bury 2                         0x, 0, 60, 140, 60
60  dig 3                          0x, 0, 60, 140, 60, 0
62  dup                            0x, 0, 60, 140, 60, 0, 0
63  cover 2                        0x, 0, 60, 140, 0, 60, 0
65  +                              0x, 0, 60, 140, 0, 60
66  bury 3                         0x, 0, 60, 140, 0
68  int 1                          0x, 0, 60, 140, 0, 1
69  +                              0x, 0, 60, 140, 1
70  bury 3                         0x, 1, 60, 140
72  b main_for_header@5            0x, 1, 60, 140
44  dig 2                          0x, 1, 60, 140, 1
46  int 5                          0x, 1, 60, 140, 1, 5
47  <                              0x, 1, 60, 140, 1
48  bz main_after_for@9            0x, 1, 60, 140
51  dup                            0x, 1, 60, 140, 140
52  dig 2                          0x, 1, 60, 140, 140, 60
54  dup                            0x, 1, 60, 140, 140, 60, 60
55  cover 2                        0x, 1, 60, 140, 60, 140, 60
57  +                              0x, 1, 60, 140, 60, 200
58  bury 2                         0x, 1, 60, 200, 60
60  dig 3                          0x, 1, 60, 200, 60, 1
62  dup                            0x, 1, 60, 200, 60, 1, 1
63  cover 2                        0x, 1, 60, 200, 1, 60, 1
65  +                              0x, 1, 60, 200, 1, 61
66  bury 3                         0x, 1, 61, 200, 1
68  int 1                          0x, 1, 61, 200, 1, 1
69  +                              0x, 1, 61, 200, 2
70  bury 3                         0x, 2, 61, 200
72  b main_for_header@5            0x, 2, 61, 200
44  dig 2                          0x, 2, 61, 200, 2
46  int 5                          0x, 2, 61, 200, 2, 5
47  <                              0x, 2, 61, 200, 1
48  bz main_after_for@9            0x, 2, 61, 200
51  dup                            0x, 2, 61, 200, 200
52  dig 2                          0x, 2, 61, 200, 200, 61
54  dup                            0x, 2, 61, 200, 200, 61, 61
55  cover 2                        0x, 2, 61, 200, 61, 200, 61
57  +                              0x, 2, 61, 200, 61, 261
58  bury 2                         0x, 2, 61, 261, 61
60  dig 3                          0x, 2, 61, 261, 61, 2
62  dup                            0x, 2, 61, 261, 61, 2, 2
63  cover 2                        0x, 2, 61, 261, 2, 61, 2
65  +                              0x, 2, 61, 261, 2, 63
66  bury 3                         0x, 2, 63, 261, 2
68  int 1                          0x, 2, 63, 261, 2, 1
69  +                              0x, 2, 63, 261, 3
70  bury 3                         0x, 3, 63, 261
72  b main_for_header@5            0x, 3, 63, 261
44  dig 2                          0x, 3, 63, 261, 3
46  int 5                          0x, 3, 63, 261, 3, 5
47  <                              0x, 3, 63, 261, 1
48  bz main_after_for@9            0x, 3, 63, 261
51  dup                            0x, 3, 63, 261, 261
52  dig 2                          0x, 3, 63, 261, 261, 63
54  dup                            0x, 3, 63, 261, 261, 63, 63
55  cover 2                        0x, 3, 63, 261, 63, 261, 63
57  +                              0x, 3, 63, 261, 63, 324
58  bury 2                         0x, 3, 63, 324, 63
60  dig 3                          0x, 3, 63, 324, 63, 3
62  dup                            0x, 3, 63, 324, 63, 3, 3
63  cover 2                        0x, 3, 63, 324, 3, 63, 3
65  +                              0x, 3, 63, 324, 3, 66
66  bury 3                         0x, 3, 66, 324, 3
68  int 1                          0x, 3, 66, 324, 3, 1
69  +                              0x, 3, 66, 324, 4
70  bury 3                         0x, 4, 66, 324
72  b main_for_header@5            0x, 4, 66, 324
44  dig 2                          0x, 4, 66, 324, 4
46  int 5                          0x, 4, 66, 324, 4, 5
47  <                              0x, 4, 66, 324, 1
48  bz main_after_for@9            0x, 4, 66, 324
51  dup                            0x, 4, 66, 324, 324
52  dig 2                          0x, 4, 66, 324, 324, 66
54  dup                            0x, 4, 66, 324, 324, 66, 66
55  cover 2                        0x, 4, 66, 324, 66, 324, 66
57  +                              0x, 4, 66, 324, 66, 390
58  bury 2                         0x, 4, 66, 390, 66
60  dig 3                          0x, 4, 66, 390, 66, 4
62  dup                            0x, 4, 66, 390, 66, 4, 4
63  cover 2                        0x, 4, 66, 390, 4, 66, 4
65  +                              0x, 4, 66, 390, 4, 70
66  bury 3                         0x, 4, 70, 390, 4
68  int 1                          0x, 4, 70, 390, 4, 1
69  +                              0x, 4, 70, 390, 5
70  bury 3                         0x, 5, 70, 390
72  b main_for_header@5            0x, 5, 70, 390
44  dig 2                          0x, 5, 70, 390, 5
46  int 5                          0x, 5, 70, 390, 5, 5
47  <                              0x, 5, 70, 390, 0
48  bz main_after_for@9            0x, 5, 70, 390
75  dig 1                          0x, 5, 70, 390, 70
77  dig 1                          0x, 5, 70, 390, 70, 390
79  <                              0x, 5, 70, 390, 1
80  bz main_else_body@17           0x, 5, 70, 390
83  dup                            0x, 5, 70, 390, 390
84  int 2                          0x, 5, 70, 390, 390, 2
85  <                              0x, 5, 70, 390, 0
86  bz main_else_body@12           0x, 5, 70, 390
98  int 2                          0x, 5, 70, 390, 2
99  dig 2                          0x, 5, 70, 390, 2, 70
101 *                              0x, 5, 70, 390, 140
102 int 14                         0x, 5, 70, 390, 140, 14
104 *                              0x, 5, 70, 390, 1960
105 bz main_else_body@14           0x, 5, 70, 390
108 int 2                          0x, 5, 70, 390, 2
109 bury 4                         2, 5, 70, 390
111 b main_after_if_else@16        2, 5, 70, 390
116 b main_after_if_else@21        2, 5, 70, 390
143 dig 3                          2, 5, 70, 390, 2
145 dup                            2, 5, 70, 390, 2, 2
146 callsub one_hundred            2, 5, 70, 390, 2, 2
173 proto 1 1                      2, 5, 70, 390, 2, 2
176 int 25                         2, 5, 70, 390, 2, 2, 25
178 int 2                          2, 5, 70, 390, 2, 2, 25, 2
179 int 25                         2, 5, 70, 390, 2, 2, 25, 2, 25
181 frame_dig -1                   2, 5, 70, 390, 2, 2, 25, 2, 25, 2
183 <                              2, 5, 70, 390, 2, 2, 25, 2, 0
184 bz one_hundred_after_if_else@2 2, 5, 70, 390, 2, 2, 25, 2
194 frame_dig 1                    2, 5, 70, 390, 2, 2, 25, 2, 2
196 dup                            2, 5, 70, 390, 2, 2, 25, 2, 2, 2
197 *                              2, 5, 70, 390, 2, 2, 25, 2, 4
198 frame_dig 0                    2, 5, 70, 390, 2, 2, 25, 2, 4, 25
200 *                              2, 5, 70, 390, 2, 2, 25, 2, 100
201 frame_bury 0                   2, 5, 70, 390, 2, 2, 100, 2
203 retsub                         2, 5, 70, 390, 2, 100
149 +                              2, 5, 70, 390, 102
150 dup                            2, 5, 70, 390, 102, 102
151 itob                           2, 5, 70, 390, 102, 0x0000000000000066
152 log                            2, 5, 70, 390, 102
153 int 3                          2, 5, 70, 390, 102, 3
154 int 1                          2, 5, 70, 390, 102, 3, 1
155 callsub phi_in_equiv_class     2, 5, 70, 390, 102, 3, 1
204 proto 2 1                      2, 5, 70, 390, 102, 3, 1
207 frame_dig -2                   2, 5, 70, 390, 102, 3, 1, 3
209 int 1                          2, 5, 70, 390, 102, 3, 1, 3, 1
210 +                              2, 5, 70, 390, 102, 3, 1, 4
211 retsub                         2, 5, 70, 390, 102, 4
158 int 4                          2, 5, 70, 390, 102, 4, 4
160 ==                             2, 5, 70, 390, 102, 1
161 assert                         2, 5, 70, 390, 102
162 int 3                          2, 5, 70, 390, 102, 3
163 int 0                          2, 5, 70, 390, 102, 3, 0
165 callsub phi_in_equiv_class     2, 5, 70, 390, 102, 3, 0
204 proto 2 1                      2, 5, 70, 390, 102, 3, 0
207 frame_dig -2                   2, 5, 70, 390, 102, 3, 0, 3
209 int 1                          2, 5, 70, 390, 102, 3, 0, 3, 1
210 +                              2, 5, 70, 390, 102, 3, 0, 4
211 retsub                         2, 5, 70, 390, 102, 4
168 int 4                          2, 5, 70, 390, 102, 4, 4
170 ==                             2, 5, 70, 390, 102, 1
171 assert                         2, 5, 70, 390, 102
172 return                         102