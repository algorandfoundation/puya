PC  Teal                Stack                                
1   intcblock 5 1 2 25                                       
7   pushbytes ""        0x                                   
9   dup                 0x, 0x                               
10  pushints 60 80      0x, 0x, 60, 80                       
14  dig 1               0x, 0x, 60, 80, 60                   
16  intc_0              0x, 0x, 60, 80, 60, 5                
17  <                   0x, 0x, 60, 80, 0                    
18  bz after_while@3    0x, 0x, 60, 80                       
37  pushint 0           0x, 0x, 60, 80, 0                    
39  bury 3              0x, 0, 60, 80                        
41  dig 2               0x, 0, 60, 80, 0                     
43  intc_0              0x, 0, 60, 80, 0, 5                  
44  <                   0x, 0, 60, 80, 1                     
45  bz after_for@7      0x, 0, 60, 80                        
48  dup                 0x, 0, 60, 80, 80                    
49  dig 2               0x, 0, 60, 80, 80, 60                
51  dup                 0x, 0, 60, 80, 80, 60, 60            
52  cover 2             0x, 0, 60, 80, 60, 80, 60            
54  +                   0x, 0, 60, 80, 60, 140               
55  bury 2              0x, 0, 60, 140, 60                   
57  dig 3               0x, 0, 60, 140, 60, 0                
59  dup                 0x, 0, 60, 140, 60, 0, 0             
60  cover 2             0x, 0, 60, 140, 0, 60, 0             
62  +                   0x, 0, 60, 140, 0, 60                
63  bury 3              0x, 0, 60, 140, 0                    
65  intc_1              0x, 0, 60, 140, 0, 1                 
66  +                   0x, 0, 60, 140, 1                    
67  bury 3              0x, 1, 60, 140                       
69  b for_header@4      0x, 1, 60, 140                       
41  dig 2               0x, 1, 60, 140, 1                    
43  intc_0              0x, 1, 60, 140, 1, 5                 
44  <                   0x, 1, 60, 140, 1                    
45  bz after_for@7      0x, 1, 60, 140                       
48  dup                 0x, 1, 60, 140, 140                  
49  dig 2               0x, 1, 60, 140, 140, 60              
51  dup                 0x, 1, 60, 140, 140, 60, 60          
52  cover 2             0x, 1, 60, 140, 60, 140, 60          
54  +                   0x, 1, 60, 140, 60, 200              
55  bury 2              0x, 1, 60, 200, 60                   
57  dig 3               0x, 1, 60, 200, 60, 1                
59  dup                 0x, 1, 60, 200, 60, 1, 1             
60  cover 2             0x, 1, 60, 200, 1, 60, 1             
62  +                   0x, 1, 60, 200, 1, 61                
63  bury 3              0x, 1, 61, 200, 1                    
65  intc_1              0x, 1, 61, 200, 1, 1                 
66  +                   0x, 1, 61, 200, 2                    
67  bury 3              0x, 2, 61, 200                       
69  b for_header@4      0x, 2, 61, 200                       
41  dig 2               0x, 2, 61, 200, 2                    
43  intc_0              0x, 2, 61, 200, 2, 5                 
44  <                   0x, 2, 61, 200, 1                    
45  bz after_for@7      0x, 2, 61, 200                       
48  dup                 0x, 2, 61, 200, 200                  
49  dig 2               0x, 2, 61, 200, 200, 61              
51  dup                 0x, 2, 61, 200, 200, 61, 61          
52  cover 2             0x, 2, 61, 200, 61, 200, 61          
54  +                   0x, 2, 61, 200, 61, 261              
55  bury 2              0x, 2, 61, 261, 61                   
57  dig 3               0x, 2, 61, 261, 61, 2                
59  dup                 0x, 2, 61, 261, 61, 2, 2             
60  cover 2             0x, 2, 61, 261, 2, 61, 2             
62  +                   0x, 2, 61, 261, 2, 63                
63  bury 3              0x, 2, 63, 261, 2                    
65  intc_1              0x, 2, 63, 261, 2, 1                 
66  +                   0x, 2, 63, 261, 3                    
67  bury 3              0x, 3, 63, 261                       
69  b for_header@4      0x, 3, 63, 261                       
41  dig 2               0x, 3, 63, 261, 3                    
43  intc_0              0x, 3, 63, 261, 3, 5                 
44  <                   0x, 3, 63, 261, 1                    
45  bz after_for@7      0x, 3, 63, 261                       
48  dup                 0x, 3, 63, 261, 261                  
49  dig 2               0x, 3, 63, 261, 261, 63              
51  dup                 0x, 3, 63, 261, 261, 63, 63          
52  cover 2             0x, 3, 63, 261, 63, 261, 63          
54  +                   0x, 3, 63, 261, 63, 324              
55  bury 2              0x, 3, 63, 324, 63                   
57  dig 3               0x, 3, 63, 324, 63, 3                
59  dup                 0x, 3, 63, 324, 63, 3, 3             
60  cover 2             0x, 3, 63, 324, 3, 63, 3             
62  +                   0x, 3, 63, 324, 3, 66                
63  bury 3              0x, 3, 66, 324, 3                    
65  intc_1              0x, 3, 66, 324, 3, 1                 
66  +                   0x, 3, 66, 324, 4                    
67  bury 3              0x, 4, 66, 324                       
69  b for_header@4      0x, 4, 66, 324                       
41  dig 2               0x, 4, 66, 324, 4                    
43  intc_0              0x, 4, 66, 324, 4, 5                 
44  <                   0x, 4, 66, 324, 1                    
45  bz after_for@7      0x, 4, 66, 324                       
48  dup                 0x, 4, 66, 324, 324                  
49  dig 2               0x, 4, 66, 324, 324, 66              
51  dup                 0x, 4, 66, 324, 324, 66, 66          
52  cover 2             0x, 4, 66, 324, 66, 324, 66          
54  +                   0x, 4, 66, 324, 66, 390              
55  bury 2              0x, 4, 66, 390, 66                   
57  dig 3               0x, 4, 66, 390, 66, 4                
59  dup                 0x, 4, 66, 390, 66, 4, 4             
60  cover 2             0x, 4, 66, 390, 4, 66, 4             
62  +                   0x, 4, 66, 390, 4, 70                
63  bury 3              0x, 4, 70, 390, 4                    
65  intc_1              0x, 4, 70, 390, 4, 1                 
66  +                   0x, 4, 70, 390, 5                    
67  bury 3              0x, 5, 70, 390                       
69  b for_header@4      0x, 5, 70, 390                       
41  dig 2               0x, 5, 70, 390, 5                    
43  intc_0              0x, 5, 70, 390, 5, 5                 
44  <                   0x, 5, 70, 390, 0                    
45  bz after_for@7      0x, 5, 70, 390                       
72  dup2                0x, 5, 70, 390, 70, 390              
73  <                   0x, 5, 70, 390, 1                    
74  bz else_body@15     0x, 5, 70, 390                       
77  dup                 0x, 5, 70, 390, 390                  
78  intc_2              0x, 5, 70, 390, 390, 2               
79  <                   0x, 5, 70, 390, 0                    
80  bz else_body@10     0x, 5, 70, 390                       
122 dig 1               0x, 5, 70, 390, 70                   
124 pushint 28          0x, 5, 70, 390, 70, 28               
126 *                   0x, 5, 70, 390, 1960                 
127 bz else_body@12     0x, 5, 70, 390                       
130 intc_2              0x, 5, 70, 390, 2                    
131 bury 4              2, 5, 70, 390                        
133 b after_if_else@19  2, 5, 70, 390                        
89  intc_3              2, 5, 70, 390, 25                    
90  bury 2              2, 5, 25, 390                        
92  intc_2              2, 5, 25, 390, 2                     
93  bury 1              2, 5, 25, 2                          
95  intc_3              2, 5, 25, 2, 25                      
96  dig 4               2, 5, 25, 2, 25, 2                   
98  <                   2, 5, 25, 2, 0                       
99  bz after_if_else@22 2, 5, 25, 2                          
109 dupn 2              2, 5, 25, 2, 2, 2                    
111 *                   2, 5, 25, 2, 4                       
112 dig 2               2, 5, 25, 2, 4, 25                   
114 *                   2, 5, 25, 2, 100                     
115 dig 4               2, 5, 25, 2, 100, 2                  
117 +                   2, 5, 25, 2, 102                     
118 dup                 2, 5, 25, 2, 102, 102                
119 itob                2, 5, 25, 2, 102, 0x0000000000000066 
120 log                 2, 5, 25, 2, 102                     
121 return              102                                  