{
  "version": 3,
  "sources": [
    "../contract.py"
  ],
  "mappings": ";;;;;;AA2ByB;;AACR;;AAAjB;AAAwB;;;;;AAAP;AAAU;;AAAV;;;;;AAAjB;;;AAAA;;;AAC0B;;AAAA;AACX;AAAA;AAAA;;;;;AAAf;;;AAAA;;;AACgB;AAAA;;;;;;AACD;;AAAiB;;;AAAjB;AAAf;;;AAAA;;;AACgB;;;AACR;;AAAA;;;;AANS;AAAA;;AAAA;AAAA;;;;;;",
  "op_pc_offset": 0,
  "pc_events": {
    "1": {
      "subroutine": "test_cases.less_simple.contract.MyContract.clear_state_program",
      "params": {},
      "block": "main",
      "stack_in": [],
      "op": "pushbytes \"\"",
      "stack_out": [
        "sum_of_squares#3"
      ]
    },
    "3": {
      "op": "b main_block@0"
    },
    "6": {
      "block": "main_block@0",
      "stack_in": [
        "sum_of_squares#3"
      ],
      "op": "pushint 0 // 0",
      "defined_out": [],
      "stack_out": [
        "sum_of_squares#3",
        "sum_of_squares#0"
      ]
    },
    "8": {
      "op": "pushint 1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "sum_of_squares#3",
        "sum_of_squares#0",
        "1"
      ]
    },
    "10": {
      "error": "Step cannot be zero",
      "op": "assert // Step cannot be zero",
      "stack_out": [
        "sum_of_squares#3",
        "sum_of_squares#0"
      ]
    },
    "11": {
      "op": "pushint 1 // 1",
      "defined_out": [],
      "stack_out": [
        "sum_of_squares#3",
        "sum_of_squares#0",
        "i#0"
      ]
    },
    "13": {
      "op": "b main_for_header@1"
    },
    "16": {
      "block": "main_for_header@1",
      "stack_in": [
        "sum_of_squares#3",
        "sum_of_squares#0",
        "i#0"
      ],
      "op": "dup",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "sum_of_squares#3",
        "sum_of_squares#0",
        "i#0",
        "i#0"
      ]
    },
    "17": {
      "op": "pushint 100 // 100",
      "defined_out": [
        "100",
        "i#0"
      ],
      "stack_out": [
        "sum_of_squares#3",
        "sum_of_squares#0",
        "i#0",
        "i#0",
        "100"
      ]
    },
    "19": {
      "op": "<",
      "defined_out": [
        "continue_looping%0#0",
        "i#0"
      ],
      "stack_out": [
        "sum_of_squares#3",
        "sum_of_squares#0",
        "i#0",
        "continue_looping%0#0"
      ]
    },
    "20": {
      "op": "dig 2",
      "defined_out": [
        "continue_looping%0#0",
        "i#0",
        "sum_of_squares#0"
      ],
      "stack_out": [
        "sum_of_squares#3",
        "sum_of_squares#0",
        "i#0",
        "continue_looping%0#0",
        "sum_of_squares#0"
      ]
    },
    "22": {
      "op": "bury 4",
      "defined_out": [
        "continue_looping%0#0",
        "i#0",
        "sum_of_squares#0"
      ],
      "stack_out": [
        "sum_of_squares#3",
        "sum_of_squares#0",
        "i#0",
        "continue_looping%0#0"
      ]
    },
    "24": {
      "op": "bz main_after_for@8",
      "stack_out": [
        "sum_of_squares#3",
        "sum_of_squares#0",
        "i#0"
      ]
    },
    "27": {
      "op": "b main_for_body@2"
    },
    "30": {
      "block": "main_for_body@2",
      "stack_in": [
        "sum_of_squares#3",
        "sum_of_squares#0",
        "i#0"
      ],
      "op": "dupn 2",
      "defined_out": [
        "i#0",
        "i#0 (copy)"
      ],
      "stack_out": [
        "sum_of_squares#3",
        "sum_of_squares#0",
        "i#0",
        "i#0",
        "i#0 (copy)"
      ]
    },
    "32": {
      "op": "sqrt",
      "defined_out": [
        "i#0",
        "square_root#0"
      ],
      "stack_out": [
        "sum_of_squares#3",
        "sum_of_squares#0",
        "i#0",
        "i#0",
        "square_root#0"
      ]
    },
    "33": {
      "op": "dup",
      "defined_out": [
        "i#0",
        "square_root#0",
        "square_root#0 (copy)"
      ],
      "stack_out": [
        "sum_of_squares#3",
        "sum_of_squares#0",
        "i#0",
        "i#0",
        "square_root#0 (copy)",
        "square_root#0"
      ]
    },
    "34": {
      "op": "*",
      "defined_out": [
        "i#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "sum_of_squares#3",
        "sum_of_squares#0",
        "i#0",
        "i#0",
        "tmp%1#0"
      ]
    },
    "35": {
      "op": "==",
      "defined_out": [
        "i#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "sum_of_squares#3",
        "sum_of_squares#0",
        "i#0",
        "tmp%2#0"
      ]
    },
    "36": {
      "op": "dig 2",
      "defined_out": [
        "i#0",
        "sum_of_squares#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "sum_of_squares#3",
        "sum_of_squares#0",
        "i#0",
        "tmp%2#0",
        "sum_of_squares#0"
      ]
    },
    "38": {
      "op": "bury 4",
      "defined_out": [
        "i#0",
        "sum_of_squares#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "sum_of_squares#3",
        "sum_of_squares#0",
        "i#0",
        "tmp%2#0"
      ]
    },
    "40": {
      "op": "bz main_after_if_else@4",
      "stack_out": [
        "sum_of_squares#3",
        "sum_of_squares#0",
        "i#0"
      ]
    },
    "43": {
      "op": "b main_if_body@3"
    },
    "46": {
      "block": "main_if_body@3",
      "stack_in": [
        "sum_of_squares#3",
        "sum_of_squares#0",
        "i#0"
      ],
      "op": "dup2",
      "defined_out": [
        "i#0",
        "sum_of_squares#0"
      ],
      "stack_out": [
        "sum_of_squares#3",
        "sum_of_squares#0",
        "i#0",
        "sum_of_squares#0",
        "i#0"
      ]
    },
    "47": {
      "op": "+",
      "defined_out": [
        "i#0",
        "sum_of_squares#0"
      ],
      "stack_out": [
        "sum_of_squares#3",
        "sum_of_squares#0",
        "i#0",
        "sum_of_squares#0"
      ]
    },
    "48": {
      "op": "bury 3",
      "defined_out": [
        "i#0",
        "sum_of_squares#0"
      ],
      "stack_out": [
        "sum_of_squares#3",
        "sum_of_squares#0",
        "i#0"
      ]
    },
    "50": {
      "op": "b main_after_if_else@4"
    },
    "53": {
      "block": "main_after_if_else@4",
      "stack_in": [
        "sum_of_squares#3",
        "sum_of_squares#0",
        "i#0"
      ],
      "op": "dig 2",
      "defined_out": [
        "sum_of_squares#3"
      ],
      "stack_out": [
        "sum_of_squares#3",
        "sum_of_squares#0",
        "i#0",
        "sum_of_squares#3"
      ]
    },
    "55": {
      "op": "pushint 200 // 200",
      "defined_out": [
        "200",
        "sum_of_squares#3"
      ],
      "stack_out": [
        "sum_of_squares#3",
        "sum_of_squares#0",
        "i#0",
        "sum_of_squares#3",
        "200"
      ]
    },
    "58": {
      "op": ">",
      "defined_out": [
        "sum_of_squares#3",
        "tmp%4#0"
      ],
      "stack_out": [
        "sum_of_squares#3",
        "sum_of_squares#0",
        "i#0",
        "tmp%4#0"
      ]
    },
    "59": {
      "op": "bz main_after_if_else@6",
      "stack_out": [
        "sum_of_squares#3",
        "sum_of_squares#0",
        "i#0"
      ]
    },
    "62": {
      "op": "b main_if_body@5"
    },
    "65": {
      "block": "main_if_body@5",
      "stack_in": [
        "sum_of_squares#3",
        "sum_of_squares#0",
        "i#0"
      ],
      "op": "b main_after_for@8"
    },
    "68": {
      "block": "main_after_for@8",
      "stack_in": [
        "sum_of_squares#3",
        "sum_of_squares#0",
        "i#0"
      ],
      "op": "dig 2",
      "defined_out": [
        "sum_of_squares#3"
      ],
      "stack_out": [
        "sum_of_squares#3",
        "sum_of_squares#0",
        "i#0",
        "sum_of_squares#3"
      ]
    },
    "70": {
      "op": "return",
      "stack_out": [
        "sum_of_squares#3",
        "sum_of_squares#0",
        "i#0"
      ]
    },
    "71": {
      "block": "main_after_if_else@6",
      "stack_in": [
        "sum_of_squares#3",
        "sum_of_squares#0",
        "i#0"
      ],
      "op": "b main_for_footer@7"
    },
    "74": {
      "block": "main_for_footer@7",
      "stack_in": [
        "sum_of_squares#3",
        "sum_of_squares#0",
        "i#0"
      ],
      "op": "dup",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "sum_of_squares#3",
        "sum_of_squares#0",
        "i#0",
        "i#0"
      ]
    },
    "75": {
      "op": "pushint 1 // 1",
      "defined_out": [
        "1",
        "i#0"
      ],
      "stack_out": [
        "sum_of_squares#3",
        "sum_of_squares#0",
        "i#0",
        "i#0",
        "1"
      ]
    },
    "77": {
      "op": "+",
      "stack_out": [
        "sum_of_squares#3",
        "sum_of_squares#0",
        "i#0",
        "i#0"
      ]
    },
    "78": {
      "op": "bury 1",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "sum_of_squares#3",
        "sum_of_squares#0",
        "i#0"
      ]
    },
    "80": {
      "op": "dig 2",
      "defined_out": [
        "i#0",
        "sum_of_squares#3"
      ],
      "stack_out": [
        "sum_of_squares#3",
        "sum_of_squares#0",
        "i#0",
        "sum_of_squares#3"
      ]
    },
    "82": {
      "op": "bury 2",
      "defined_out": [
        "i#0",
        "sum_of_squares#3"
      ],
      "stack_out": [
        "sum_of_squares#3",
        "sum_of_squares#0",
        "i#0"
      ]
    },
    "84": {
      "op": "b main_for_header@1"
    }
  }
}