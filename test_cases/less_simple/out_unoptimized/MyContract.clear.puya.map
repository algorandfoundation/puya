{
  "version": 3,
  "sources": [
    "../contract.py"
  ],
  "mappings": ";;;;;;;;AA2ByB;;AACR;;AAAjB;AAAwB;;;;;AAAxB;AAA2B;;AAA3B;;;;;AAAA;;;AAAA;;;AAAiB;;AAAA;;AACS;AAAA;AACX;AAAA;AAAA;;;;;AAAf;;;AAAA;;;AACgB;;AAAA;;AAAA;;;;;;AACD;;AAAiB;;;AAAjB;AAAf;;;AAAA;;;AACgB;;;AACR;;AAAA;;;;AANS;AAAA;;AAAA;AAAA;;;;;;",
  "op_pc_offset": 0,
  "pc_events": {
    "1": {
      "subroutine": "test_cases.less_simple.contract.MyContract.clear_state_program",
      "params": {},
      "block": "main",
      "stack_in": [],
      "op": "pushbytes \"\"",
      "stack_out": [
        "i#1"
      ]
    },
    "3": {
      "op": "pushbytes \"\"",
      "stack_out": [
        "i#1",
        "sum_of_squares#3"
      ]
    },
    "5": {
      "op": "b main_block@0"
    },
    "8": {
      "block": "main_block@0",
      "stack_in": [
        "i#1",
        "sum_of_squares#3"
      ],
      "op": "pushint 0 // 0",
      "defined_out": [],
      "stack_out": [
        "i#1",
        "sum_of_squares#3",
        "sum_of_squares#0"
      ]
    },
    "10": {
      "op": "pushint 1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "i#1",
        "sum_of_squares#3",
        "sum_of_squares#0",
        "1"
      ]
    },
    "12": {
      "error": "Step cannot be zero",
      "op": "assert // Step cannot be zero",
      "stack_out": [
        "i#1",
        "sum_of_squares#3",
        "sum_of_squares#0"
      ]
    },
    "13": {
      "op": "pushint 1 // 1",
      "defined_out": [],
      "stack_out": [
        "i#1",
        "sum_of_squares#3",
        "sum_of_squares#0",
        "value_internal%0#0"
      ]
    },
    "15": {
      "op": "b main_for_header@1"
    },
    "18": {
      "block": "main_for_header@1",
      "stack_in": [
        "i#1",
        "sum_of_squares#3",
        "sum_of_squares#0",
        "value_internal%0#0"
      ],
      "op": "dup",
      "defined_out": [
        "value_internal%0#0"
      ],
      "stack_out": [
        "i#1",
        "sum_of_squares#3",
        "sum_of_squares#0",
        "value_internal%0#0",
        "value_internal%0#0"
      ]
    },
    "19": {
      "op": "pushint 100 // 100",
      "defined_out": [
        "100",
        "value_internal%0#0"
      ],
      "stack_out": [
        "i#1",
        "sum_of_squares#3",
        "sum_of_squares#0",
        "value_internal%0#0",
        "value_internal%0#0",
        "100"
      ]
    },
    "21": {
      "op": "<",
      "defined_out": [
        "continue_looping%0#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "i#1",
        "sum_of_squares#3",
        "sum_of_squares#0",
        "value_internal%0#0",
        "continue_looping%0#0"
      ]
    },
    "22": {
      "op": "dig 2",
      "defined_out": [
        "continue_looping%0#0",
        "sum_of_squares#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "i#1",
        "sum_of_squares#3",
        "sum_of_squares#0",
        "value_internal%0#0",
        "continue_looping%0#0",
        "sum_of_squares#0"
      ]
    },
    "24": {
      "op": "bury 4",
      "defined_out": [
        "continue_looping%0#0",
        "sum_of_squares#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "i#1",
        "sum_of_squares#3",
        "sum_of_squares#0",
        "value_internal%0#0",
        "continue_looping%0#0"
      ]
    },
    "26": {
      "op": "bz main_after_for@8",
      "stack_out": [
        "i#1",
        "sum_of_squares#3",
        "sum_of_squares#0",
        "value_internal%0#0"
      ]
    },
    "29": {
      "op": "b main_for_body@2"
    },
    "32": {
      "block": "main_for_body@2",
      "stack_in": [
        "i#1",
        "sum_of_squares#3",
        "sum_of_squares#0",
        "value_internal%0#0"
      ],
      "op": "dupn 2",
      "defined_out": [
        "i#1",
        "i#1 (copy)",
        "value_internal%0#0"
      ],
      "stack_out": [
        "i#1",
        "sum_of_squares#3",
        "sum_of_squares#0",
        "value_internal%0#0",
        "i#1",
        "i#1 (copy)"
      ]
    },
    "34": {
      "op": "bury 5",
      "defined_out": [
        "i#1",
        "value_internal%0#0"
      ],
      "stack_out": [
        "i#1",
        "sum_of_squares#3",
        "sum_of_squares#0",
        "value_internal%0#0",
        "i#1"
      ]
    },
    "36": {
      "op": "dup",
      "stack_out": [
        "i#1",
        "sum_of_squares#3",
        "sum_of_squares#0",
        "value_internal%0#0",
        "i#1",
        "i#1 (copy)"
      ]
    },
    "37": {
      "op": "sqrt",
      "defined_out": [
        "i#1",
        "square_root#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "i#1",
        "sum_of_squares#3",
        "sum_of_squares#0",
        "value_internal%0#0",
        "i#1",
        "square_root#0"
      ]
    },
    "38": {
      "op": "dup",
      "defined_out": [
        "i#1",
        "square_root#0",
        "square_root#0 (copy)",
        "value_internal%0#0"
      ],
      "stack_out": [
        "i#1",
        "sum_of_squares#3",
        "sum_of_squares#0",
        "value_internal%0#0",
        "i#1",
        "square_root#0 (copy)",
        "square_root#0"
      ]
    },
    "39": {
      "op": "*",
      "defined_out": [
        "i#1",
        "tmp%1#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "i#1",
        "sum_of_squares#3",
        "sum_of_squares#0",
        "value_internal%0#0",
        "i#1",
        "tmp%1#0"
      ]
    },
    "40": {
      "op": "==",
      "defined_out": [
        "i#1",
        "tmp%2#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "i#1",
        "sum_of_squares#3",
        "sum_of_squares#0",
        "value_internal%0#0",
        "tmp%2#0"
      ]
    },
    "41": {
      "op": "dig 2",
      "defined_out": [
        "i#1",
        "sum_of_squares#0",
        "tmp%2#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "i#1",
        "sum_of_squares#3",
        "sum_of_squares#0",
        "value_internal%0#0",
        "tmp%2#0",
        "sum_of_squares#0"
      ]
    },
    "43": {
      "op": "bury 4",
      "defined_out": [
        "i#1",
        "sum_of_squares#0",
        "tmp%2#0",
        "value_internal%0#0"
      ],
      "stack_out": [
        "i#1",
        "sum_of_squares#3",
        "sum_of_squares#0",
        "value_internal%0#0",
        "tmp%2#0"
      ]
    },
    "45": {
      "op": "bz main_after_if_else@4",
      "stack_out": [
        "i#1",
        "sum_of_squares#3",
        "sum_of_squares#0",
        "value_internal%0#0"
      ]
    },
    "48": {
      "op": "b main_if_body@3"
    },
    "51": {
      "block": "main_if_body@3",
      "stack_in": [
        "i#1",
        "sum_of_squares#3",
        "sum_of_squares#0",
        "value_internal%0#0"
      ],
      "op": "dig 1",
      "defined_out": [
        "sum_of_squares#0"
      ],
      "stack_out": [
        "i#1",
        "sum_of_squares#3",
        "sum_of_squares#0",
        "value_internal%0#0",
        "sum_of_squares#0"
      ]
    },
    "53": {
      "op": "dig 4",
      "defined_out": [
        "i#1",
        "sum_of_squares#0"
      ],
      "stack_out": [
        "i#1",
        "sum_of_squares#3",
        "sum_of_squares#0",
        "value_internal%0#0",
        "sum_of_squares#0",
        "i#1"
      ]
    },
    "55": {
      "op": "+",
      "defined_out": [
        "i#1",
        "sum_of_squares#0"
      ],
      "stack_out": [
        "i#1",
        "sum_of_squares#3",
        "sum_of_squares#0",
        "value_internal%0#0",
        "sum_of_squares#0"
      ]
    },
    "56": {
      "op": "bury 3",
      "defined_out": [
        "i#1",
        "sum_of_squares#0"
      ],
      "stack_out": [
        "i#1",
        "sum_of_squares#3",
        "sum_of_squares#0",
        "value_internal%0#0"
      ]
    },
    "58": {
      "op": "b main_after_if_else@4"
    },
    "61": {
      "block": "main_after_if_else@4",
      "stack_in": [
        "i#1",
        "sum_of_squares#3",
        "sum_of_squares#0",
        "value_internal%0#0"
      ],
      "op": "dig 2",
      "defined_out": [
        "sum_of_squares#3"
      ],
      "stack_out": [
        "i#1",
        "sum_of_squares#3",
        "sum_of_squares#0",
        "value_internal%0#0",
        "sum_of_squares#3"
      ]
    },
    "63": {
      "op": "pushint 200 // 200",
      "defined_out": [
        "200",
        "sum_of_squares#3"
      ],
      "stack_out": [
        "i#1",
        "sum_of_squares#3",
        "sum_of_squares#0",
        "value_internal%0#0",
        "sum_of_squares#3",
        "200"
      ]
    },
    "66": {
      "op": ">",
      "defined_out": [
        "sum_of_squares#3",
        "tmp%4#0"
      ],
      "stack_out": [
        "i#1",
        "sum_of_squares#3",
        "sum_of_squares#0",
        "value_internal%0#0",
        "tmp%4#0"
      ]
    },
    "67": {
      "op": "bz main_after_if_else@6",
      "stack_out": [
        "i#1",
        "sum_of_squares#3",
        "sum_of_squares#0",
        "value_internal%0#0"
      ]
    },
    "70": {
      "op": "b main_if_body@5"
    },
    "73": {
      "block": "main_if_body@5",
      "stack_in": [
        "i#1",
        "sum_of_squares#3",
        "sum_of_squares#0",
        "value_internal%0#0"
      ],
      "op": "b main_after_for@8"
    },
    "76": {
      "block": "main_after_for@8",
      "stack_in": [
        "i#1",
        "sum_of_squares#3",
        "sum_of_squares#0",
        "value_internal%0#0"
      ],
      "op": "dig 2",
      "defined_out": [
        "sum_of_squares#3"
      ],
      "stack_out": [
        "i#1",
        "sum_of_squares#3",
        "sum_of_squares#0",
        "value_internal%0#0",
        "sum_of_squares#3"
      ]
    },
    "78": {
      "op": "return",
      "stack_out": [
        "i#1",
        "sum_of_squares#3",
        "sum_of_squares#0",
        "value_internal%0#0"
      ]
    },
    "79": {
      "block": "main_after_if_else@6",
      "stack_in": [
        "i#1",
        "sum_of_squares#3",
        "sum_of_squares#0",
        "value_internal%0#0"
      ],
      "op": "b main_for_footer@7"
    },
    "82": {
      "block": "main_for_footer@7",
      "stack_in": [
        "i#1",
        "sum_of_squares#3",
        "sum_of_squares#0",
        "value_internal%0#0"
      ],
      "op": "dup",
      "defined_out": [
        "value_internal%0#0"
      ],
      "stack_out": [
        "i#1",
        "sum_of_squares#3",
        "sum_of_squares#0",
        "value_internal%0#0",
        "value_internal%0#0"
      ]
    },
    "83": {
      "op": "pushint 1 // 1",
      "defined_out": [
        "1",
        "value_internal%0#0"
      ],
      "stack_out": [
        "i#1",
        "sum_of_squares#3",
        "sum_of_squares#0",
        "value_internal%0#0",
        "value_internal%0#0",
        "1"
      ]
    },
    "85": {
      "op": "+",
      "stack_out": [
        "i#1",
        "sum_of_squares#3",
        "sum_of_squares#0",
        "value_internal%0#0",
        "value_internal%0#0"
      ]
    },
    "86": {
      "op": "bury 1",
      "defined_out": [
        "value_internal%0#0"
      ],
      "stack_out": [
        "i#1",
        "sum_of_squares#3",
        "sum_of_squares#0",
        "value_internal%0#0"
      ]
    },
    "88": {
      "op": "dig 2",
      "defined_out": [
        "sum_of_squares#3",
        "value_internal%0#0"
      ],
      "stack_out": [
        "i#1",
        "sum_of_squares#3",
        "sum_of_squares#0",
        "value_internal%0#0",
        "sum_of_squares#3"
      ]
    },
    "90": {
      "op": "bury 2",
      "defined_out": [
        "sum_of_squares#3",
        "value_internal%0#0"
      ],
      "stack_out": [
        "i#1",
        "sum_of_squares#3",
        "sum_of_squares#0",
        "value_internal%0#0"
      ]
    },
    "92": {
      "op": "b main_for_header@1"
    }
  }
}