// Op                                                Stack (out)
// test_cases.less_simple.contract.MyContract.clear_state_program() -> uint64:
subroutine main:
    main_block@0:
        // less_simple/contract.py:28
        // sum_of_squares = UInt64(0)
        int 0                                        0
        v-store sum_of_squares#0
        // less_simple/contract.py:29
        // for i in urange(1, 100):
        int 1                                        1
        l-store value_internal%0#0 0                 value_internal%0#0
        l-load value_internal%0#0 0                  value_internal%0#0
        v-store i#1
        b main_for_header@1

    main_for_header@1:
        // less_simple/contract.py:29
        // for i in urange(1, 100):
        v-load i#1                                   i#1
        int 100                                      i#1,100
        <                                            continue_looping%0#0
        l-load continue_looping%0#0 0                continue_looping%0#0
        bz main_after_for@8 ; b main_for_body@2

    main_for_body@2:
        // less_simple/contract.py:30
        // square_root = op.sqrt(i)
        v-load i#1                                   i#1
        l-store-copy i#1 0                           i#1,i#1 (copy)
        sqrt                                         i#1,square_root#0
        // less_simple/contract.py:31
        // if square_root * square_root == i:
        l-load-copy square_root#0 0                  i#1,square_root#0,square_root#0 (copy)
        l-load square_root#0 1                       i#1,square_root#0 (copy),square_root#0
        *                                            i#1,tmp%1#0
        l-load tmp%1#0 0                             i#1,tmp%1#0
        l-load i#1 1                                 tmp%1#0,i#1
        ==                                           tmp%2#0
        l-load tmp%2#0 0                             tmp%2#0
        bz main_after_if_else@4 ; b main_if_body@3

    main_if_body@3:
        // less_simple/contract.py:32
        // sum_of_squares += i
        v-load sum_of_squares#0                      sum_of_squares#0
        v-load i#1                                   sum_of_squares#0,i#1
        +                                            sum_of_squares#0
        v-store sum_of_squares#0
        b main_after_if_else@4

    main_after_if_else@4:
        // less_simple/contract.py:33
        // if sum_of_squares > 200:
        v-load sum_of_squares#0                      sum_of_squares#0
        int 200                                      sum_of_squares#0,200
        >                                            tmp%4#0
        l-load tmp%4#0 0                             tmp%4#0
        bz main_after_if_else@6 ; b main_after_for@8

    main_after_if_else@6:
        // less_simple/contract.py:29
        // for i in urange(1, 100):
        v-load i#1                                   i#1
        int 1                                        i#1,1
        +                                            value_internal%0#0
        l-load value_internal%0#0 0                  value_internal%0#0
        v-store i#1
        b main_for_header@1

    main_after_for@8:
        // less_simple/contract.py:35
        // return sum_of_squares
        v-load sum_of_squares#0                      sum_of_squares#0
        return


