// Op                                                Stack (out)
// test_cases.less_simple.contract.MyContract.clear_state_program() -> uint64:
subroutine main:
    main_block@0:
        // less_simple/contract.py:28
        // sum_of_squares = UInt64(0)
        int 0                                        0
        f-store sum_of_squares#0                     (𝕗) sum_of_squares#0 |
        // less_simple/contract.py:29
        // for i in urange(1, 100):
        int 1                                        (𝕗) sum_of_squares#0 | 1
        f-store i#0                                  (𝕗) sum_of_squares#0,i#0 |
        b main_for_header@1                          (𝕗) sum_of_squares#0,i#0 |

    main_for_header@1:                               (𝕗) sum_of_squares#0,i#0 |
        // less_simple/contract.py:29
        // for i in urange(1, 100):
        f-load i#0                                   (𝕗) sum_of_squares#0,i#0 | i#0
        int 100                                      (𝕗) sum_of_squares#0,i#0 | i#0,100
        <                                            (𝕗) sum_of_squares#0,i#0 | continue_looping%0#0
        bz main_after_for@8 ; b main_for_body@2      (𝕗) sum_of_squares#0,i#0 |

    main_for_body@2:                                 (𝕗) sum_of_squares#0,i#0 |
        // less_simple/contract.py:30
        // square_root = op.sqrt(i)
        f-load i#0                                   (𝕗) sum_of_squares#0,i#0 | i#0
        l-store-copy i#0 0                           (𝕗) sum_of_squares#0,i#0 | i#0,i#0 (copy)
        sqrt                                         (𝕗) sum_of_squares#0,i#0 | i#0,square_root#0
        // less_simple/contract.py:31
        // if square_root * square_root == i:
        l-load-copy square_root#0 0                  (𝕗) sum_of_squares#0,i#0 | i#0,square_root#0,square_root#0 (copy)
        l-load square_root#0 1                       (𝕗) sum_of_squares#0,i#0 | i#0,square_root#0 (copy),square_root#0
        *                                            (𝕗) sum_of_squares#0,i#0 | i#0,tmp%1#0
        l-load i#0 1                                 (𝕗) sum_of_squares#0,i#0 | tmp%1#0,i#0
        ==                                           (𝕗) sum_of_squares#0,i#0 | tmp%2#0
        bz main_after_if_else@4 ; b main_if_body@3   (𝕗) sum_of_squares#0,i#0 |

    main_if_body@3:                                  (𝕗) sum_of_squares#0,i#0 |
        // less_simple/contract.py:32
        // sum_of_squares += i
        f-load sum_of_squares#0                      (𝕗) sum_of_squares#0,i#0 | sum_of_squares#0
        f-load i#0                                   (𝕗) sum_of_squares#0,i#0 | sum_of_squares#0,i#0
        +                                            (𝕗) sum_of_squares#0,i#0 | sum_of_squares#0
        f-store sum_of_squares#0                     (𝕗) sum_of_squares#0,i#0 |
        b main_after_if_else@4                       (𝕗) sum_of_squares#0,i#0 |

    main_after_if_else@4:                            (𝕗) sum_of_squares#0,i#0 |
        // less_simple/contract.py:33
        // if sum_of_squares > 200:
        f-load sum_of_squares#0                      (𝕗) sum_of_squares#0,i#0 | sum_of_squares#0
        int 200                                      (𝕗) sum_of_squares#0,i#0 | sum_of_squares#0,200
        >                                            (𝕗) sum_of_squares#0,i#0 | tmp%4#0
        bz main_after_if_else@6 ; b main_after_for@8 (𝕗) sum_of_squares#0,i#0 |

    main_after_if_else@6:                            (𝕗) sum_of_squares#0,i#0 |
        // less_simple/contract.py:29
        // for i in urange(1, 100):
        f-load i#0                                   (𝕗) sum_of_squares#0,i#0 | i#0
        int 1                                        (𝕗) sum_of_squares#0,i#0 | i#0,1
        +                                            (𝕗) sum_of_squares#0,i#0 | i#0
        f-store i#0                                  (𝕗) sum_of_squares#0,i#0 |
        b main_for_header@1                          (𝕗) sum_of_squares#0,i#0 |

    main_after_for@8:                                (𝕗) sum_of_squares#0,i#0 |
        // less_simple/contract.py:35
        // return sum_of_squares
        f-load sum_of_squares#0                      (𝕗) sum_of_squares#0,i#0 | sum_of_squares#0
        return                                       (𝕗) sum_of_squares#0,i#0 |


