// Op                                         Stack (out)
// test_cases.less_simple.contract.MyContract.clear_state_program() -> uint64:
subroutine main:
    block@0:
        // less_simple/contract.py:28
        // sum_of_squares = UInt64(0)
        int 0                                 0
        v-store sum_of_squares#0
        // less_simple/contract.py:29
        // for i in urange(1, 100):
        int 1                                 1
        v-store i#0
        b for_header@1

    for_header@1:
        // less_simple/contract.py:29
        // for i in urange(1, 100):
        v-load i#0                            i#0
        int 100                               i#0,100
        <                                     continue_looping%0#0
        v-load sum_of_squares#0               continue_looping%0#0,sum_of_squares#0
        v-store sum_of_squares#10             continue_looping%0#0
        l-load continue_looping%0#0 0         continue_looping%0#0
        bz after_for@8 ; b for_body@2

    for_body@2:
        // less_simple/contract.py:30
        // square_root = op.sqrt(i)
        v-load i#0                            i#0
        l-store-copy i#0 0                    i#0,i#0 (copy)
        sqrt                                  i#0,square_root#0
        // less_simple/contract.py:31
        // if square_root * square_root == i:
        l-load-copy square_root#0 0           i#0,square_root#0,square_root#0 (copy)
        l-load square_root#0 1                i#0,square_root#0 (copy),square_root#0
        *                                     i#0,tmp%1#0
        l-load i#0 1                          tmp%1#0,i#0
        ==                                    tmp%2#0
        v-load sum_of_squares#0               tmp%2#0,sum_of_squares#0
        v-store sum_of_squares#10             tmp%2#0
        l-load tmp%2#0 0                      tmp%2#0
        bz after_if_else@4 ; b if_body@3

    if_body@3:
        // less_simple/contract.py:32
        // sum_of_squares += i
        v-load sum_of_squares#0               sum_of_squares#0
        v-load i#0                            sum_of_squares#0,i#0
        +                                     sum_of_squares#0
        v-store sum_of_squares#10
        b after_if_else@4

    after_if_else@4:
        v-load sum_of_squares#10              sum_of_squares#0
        l-store-copy sum_of_squares#0 0       sum_of_squares#0,sum_of_squares#0 (copy)
        v-store sum_of_squares#0              sum_of_squares#0
        // less_simple/contract.py:33
        // if sum_of_squares > 200:
        l-load sum_of_squares#0 0             sum_of_squares#0
        int 200                               sum_of_squares#0,200
        >                                     tmp%4#0
        bz after_if_else@6 ; b if_body@5

    if_body@5:
        v-load sum_of_squares#0               sum_of_squares#0
        v-store sum_of_squares#10
        // less_simple/contract.py:34
        // break
        b after_for@8

    after_if_else@6:
        // less_simple/contract.py:29
        // for i in urange(1, 100):
        v-load i#0                            i#0
        int 1                                 i#0,1
        +                                     i#0
        v-store i#0
        b for_header@1

    after_for@8:
        v-load sum_of_squares#10              sum_of_squares#0
        // less_simple/contract.py:35
        // return sum_of_squares
        return


