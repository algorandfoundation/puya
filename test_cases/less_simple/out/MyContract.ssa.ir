contract test_cases.less_simple.contract.MyContract:
    program approval:
        subroutine test_cases.less_simple.contract.MyContract.approval_program() -> uint64:
            block@0: // L8
                let a#0: uint64 = 1u
                let sum_of_evens#0: uint64 = 0u
                let product_of_odds#0: uint64 = 0u
                goto block@1
            block@1: // while_top_L12
                let a#1: uint64 = φ(a#0 <- block@0, a#1 <- block@3, a#4 <- block@12)
                let sum_of_evens#1: uint64 = φ(sum_of_evens#0 <- block@0, sum_of_evens#1 <- block@3, sum_of_evens#3 <- block@12)
                let product_of_odds#1: uint64 = φ(product_of_odds#0 <- block@0, product_of_odds#1 <- block@3, product_of_odds#4 <- block@12)
                let tmp%0#0: bool = (< a#1 100u)
                goto tmp%0#0 ? block@2 : block@13
            block@2: // while_body_L12
                let tmp%1#0: uint64 = (% a#1 5u)
                let tmp%2#0: bool = (== tmp%1#0 0u)
                goto tmp%2#0 ? block@3 : block@4
            block@3: // if_body_L13
                goto block@1
            block@4: // after_if_else_L13
                let tmp%3#0: uint64 = (% a#1 21u)
                goto tmp%3#0 ? block@6 : block@5
            block@5: // if_body_L15
                goto block@13
            block@6: // after_if_else_L15
                let tmp%4#0: uint64 = (% a#1 2u)
                let tmp%5#0: bool = (== tmp%4#0 0u)
                goto tmp%5#0 ? block@7 : block@8
            block@7: // if_body_L17
                let sum_of_evens#2: uint64 = (+ sum_of_evens#1 a#1)
                goto block@12
            block@8: // else_body_L17
                let tmp%6#0: bool = (== product_of_odds#1 0u)
                goto tmp%6#0 ? block@9 : block@10
            block@9: // if_body_L20
                let product_of_odds#2: uint64 = a#1
                goto block@11
            block@10: // else_body_L20
                let product_of_odds#3: uint64 = (* product_of_odds#1 a#1)
                goto block@11
            block@11: // after_if_else_L20
                let product_of_odds#5: uint64 = φ(product_of_odds#2 <- block@9, product_of_odds#3 <- block@10)
                goto block@12
            block@12: // after_if_else_L17
                let sum_of_evens#3: uint64 = φ(sum_of_evens#2 <- block@7, sum_of_evens#1 <- block@11)
                let product_of_odds#4: uint64 = φ(product_of_odds#1 <- block@7, product_of_odds#5 <- block@11)
                let a#4: uint64 = (+ a#1 1u)
                goto block@1
            block@13: // after_while_L12
                let tmp%7#0: uint64 = (- product_of_odds#1 sum_of_evens#1)
                return tmp%7#0
    
    program clear-state:
        subroutine test_cases.less_simple.contract.MyContract.clear_state_program() -> uint64:
            block@0: // L27
                let sum_of_squares#0: uint64 = 0u
                (assert 1u) // Step cannot be zero
                let range_item%0#0: uint64 = 1u
                goto block@1
            block@1: // for_header_L29
                let range_item%0#1: uint64 = φ(range_item%0#0 <- block@0, range_item%0#4 <- block@8)
                let sum_of_squares#4: uint64 = φ(sum_of_squares#0 <- block@0, sum_of_squares#3 <- block@8)
                let continue_looping%0#0: bool = (< range_item%0#1 100u)
                goto continue_looping%0#0 ? block@2 : block@9
            block@2: // for_body_L29
                let i#0: uint64 = range_item%0#1
                let square_root#0: uint64 = (sqrt i#0)
                let tmp%0#0: uint64 = (* square_root#0 square_root#0)
                let tmp%1#0: bool = (== tmp%0#0 i#0)
                goto tmp%1#0 ? block@3 : block@4
            block@3: // if_body_L31
                let sum_of_squares#2: uint64 = (+ sum_of_squares#4 i#0)
                goto block@4
            block@4: // after_if_else_L31
                let sum_of_squares#3: uint64 = φ(sum_of_squares#4 <- block@2, sum_of_squares#2 <- block@3)
                let tmp%2#0: bool = (> sum_of_squares#3 200u)
                goto tmp%2#0 ? block@5 : block@6
            block@5: // if_body_L33
                goto block@9
            block@6: // after_if_else_L33
                goto block@7
            block@7: // for_footer_L29
                goto block@8
            block@8: // for_increment_L29
                let range_item%0#4: uint64 = (+ range_item%0#1 1u)
                goto block@1
            block@9: // after_for_L29
                let sum_of_squares#5: uint64 = φ(sum_of_squares#4 <- block@1, sum_of_squares#3 <- block@5)
                return sum_of_squares#5