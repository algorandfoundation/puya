{
  "version": 3,
  "sources": [
    "../contract.py"
  ],
  "mappings": ";AA2ByB;;;;AACR;AAAU;;AAAV;AAAjB;;;AAC0B;;AAAA;AACX;AAAA;AAAA;AAAf;;;AACgB;AAAA;AAAA;;AACD;;AAAiB;;;AAAjB;AAAf;;;AAJiB;AAAA;;AAAA;AAAA;;;;;AAMT;;AAAA",
  "op_pc_offset": 0,
  "pc_events": {
    "1": {
      "subroutine": "test_cases.less_simple.contract.MyContract.clear_state_program",
      "params": {},
      "block": "main",
      "stack_in": [],
      "op": "pushints 0 1 // 0, 1",
      "defined_out": [
        "i#0",
        "sum_of_squares#0"
      ],
      "stack_out": [
        "sum_of_squares#0",
        "i#0"
      ]
    },
    "5": {
      "block": "main_for_header@1",
      "stack_in": [
        "sum_of_squares#0",
        "i#0"
      ],
      "op": "dup",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "sum_of_squares#0",
        "i#0",
        "i#0"
      ]
    },
    "6": {
      "op": "pushint 100 // 100",
      "defined_out": [
        "100",
        "i#0"
      ],
      "stack_out": [
        "sum_of_squares#0",
        "i#0",
        "i#0",
        "100"
      ]
    },
    "8": {
      "op": "<",
      "defined_out": [
        "continue_looping%0#0",
        "i#0"
      ],
      "stack_out": [
        "sum_of_squares#0",
        "i#0",
        "continue_looping%0#0"
      ]
    },
    "9": {
      "op": "bz main_after_for@8",
      "stack_out": [
        "sum_of_squares#0",
        "i#0"
      ]
    },
    "12": {
      "op": "dupn 2",
      "defined_out": [
        "i#0",
        "i#0 (copy)"
      ],
      "stack_out": [
        "sum_of_squares#0",
        "i#0",
        "i#0",
        "i#0 (copy)"
      ]
    },
    "14": {
      "op": "sqrt",
      "defined_out": [
        "i#0",
        "square_root#0"
      ],
      "stack_out": [
        "sum_of_squares#0",
        "i#0",
        "i#0",
        "square_root#0"
      ]
    },
    "15": {
      "op": "dup",
      "defined_out": [
        "i#0",
        "square_root#0",
        "square_root#0 (copy)"
      ],
      "stack_out": [
        "sum_of_squares#0",
        "i#0",
        "i#0",
        "square_root#0 (copy)",
        "square_root#0"
      ]
    },
    "16": {
      "op": "*",
      "defined_out": [
        "i#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "sum_of_squares#0",
        "i#0",
        "i#0",
        "tmp%1#0"
      ]
    },
    "17": {
      "op": "==",
      "defined_out": [
        "i#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "sum_of_squares#0",
        "i#0",
        "tmp%2#0"
      ]
    },
    "18": {
      "op": "bz main_after_if_else@4",
      "stack_out": [
        "sum_of_squares#0",
        "i#0"
      ]
    },
    "21": {
      "op": "dup2",
      "defined_out": [
        "i#0",
        "sum_of_squares#0"
      ],
      "stack_out": [
        "sum_of_squares#0",
        "i#0",
        "sum_of_squares#0",
        "i#0"
      ]
    },
    "22": {
      "op": "+",
      "stack_out": [
        "sum_of_squares#0",
        "i#0",
        "sum_of_squares#0"
      ]
    },
    "23": {
      "op": "bury 2",
      "defined_out": [
        "i#0",
        "sum_of_squares#0"
      ],
      "stack_out": [
        "sum_of_squares#0",
        "i#0"
      ]
    },
    "25": {
      "block": "main_after_if_else@4",
      "stack_in": [
        "sum_of_squares#0",
        "i#0"
      ],
      "op": "dig 1",
      "defined_out": [
        "sum_of_squares#0"
      ],
      "stack_out": [
        "sum_of_squares#0",
        "i#0",
        "sum_of_squares#0"
      ]
    },
    "27": {
      "op": "pushint 200 // 200",
      "defined_out": [
        "200",
        "sum_of_squares#0"
      ],
      "stack_out": [
        "sum_of_squares#0",
        "i#0",
        "sum_of_squares#0",
        "200"
      ]
    },
    "30": {
      "op": ">",
      "defined_out": [
        "sum_of_squares#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "sum_of_squares#0",
        "i#0",
        "tmp%4#0"
      ]
    },
    "31": {
      "op": "bnz main_after_for@8",
      "stack_out": [
        "sum_of_squares#0",
        "i#0"
      ]
    },
    "34": {
      "op": "dup",
      "defined_out": [
        "i#0",
        "sum_of_squares#0"
      ],
      "stack_out": [
        "sum_of_squares#0",
        "i#0",
        "i#0"
      ]
    },
    "35": {
      "op": "pushint 1 // 1",
      "defined_out": [
        "1",
        "i#0",
        "sum_of_squares#0"
      ],
      "stack_out": [
        "sum_of_squares#0",
        "i#0",
        "i#0",
        "1"
      ]
    },
    "37": {
      "op": "+",
      "stack_out": [
        "sum_of_squares#0",
        "i#0",
        "i#0"
      ]
    },
    "38": {
      "op": "bury 1",
      "defined_out": [
        "i#0",
        "sum_of_squares#0"
      ],
      "stack_out": [
        "sum_of_squares#0",
        "i#0"
      ]
    },
    "40": {
      "op": "b main_for_header@1"
    },
    "43": {
      "block": "main_after_for@8",
      "stack_in": [
        "sum_of_squares#0",
        "i#0"
      ],
      "op": "dig 1",
      "defined_out": [
        "sum_of_squares#0"
      ],
      "stack_out": [
        "sum_of_squares#0",
        "i#0",
        "sum_of_squares#0"
      ]
    },
    "45": {
      "op": "return",
      "stack_out": [
        "sum_of_squares#0",
        "i#0"
      ]
    }
  }
}