main test_cases.state_proxies.contract.StateProxyContract.__algopy_entrypoint_with_init:
    block@0: // L1
        let tmp%0#0: bool = (txn ApplicationID)
        goto tmp%0#0 ? block@2 : block@1
    block@1: // call __init___L1
        test_cases.state_proxies.contract.StateProxyContract.__init__()
        goto block@2
    block@2: // after_if_else_L1
        let tmp%1#0: bool = algopy.arc4.ARC4Contract.approval_program()
        return tmp%1#0

subroutine test_cases.state_proxies.contract.get_key() -> bytes:
    block@0: // L60
        (log "key")
        return 0x626f78

subroutine test_cases.state_proxies.contract.get_account() -> bytes[32]:
    block@0: // L66
        (log "account")
        let tmp%0#0: bytes[32] = (txn Sender)
        return tmp%0#0

subroutine test_cases.state_proxies.contract.default_value() -> uint64:
    block@0: // L72
        (log "default")
        return 42u

subroutine test_cases.state_proxies.contract.StateProxyContract.__init__() -> void:
    block@0: // L18
        (app_global_put 0x6732 0u)
        let tmp%0#0: uint64 = (txn NumAppArgs)
        let tmp%1#0: bool = (!= tmp%0#0 0u)
        let select%0#0: bytes = (select "town" "funky" tmp%1#0)
        let funky_town#0: bytes = select%0#0
        (app_global_put funky_town#0 123u)
        return 

subroutine test_cases.state_proxies.contract.StateProxyContract.create() -> void:
    block@0: // L31
        (app_global_put "g1" 1u)
        let tmp%0#0: bytes[32] = (txn Sender)
        (app_local_put tmp%0#0 "l1" 2u)
        let tmp%1#0: bytes[32] = (txn Sender)
        (app_local_put tmp%1#0 0x6c32 3u)
        return 

subroutine test_cases.state_proxies.contract.StateProxyContract.clear() -> void:
    block@0: // L37
        (app_global_del "g1")
        let tmp%0#0: bytes[32] = (txn Sender)
        (app_local_del tmp%0#0 "l1")
        let tmp%1#0: bytes[32] = (txn Sender)
        (app_local_del tmp%1#0 0x6c32)
        let materialized_values%0#0: bytes = test_cases.state_proxies.contract.get_key()
        let box_prefixed_key%0#0: bytes = (concat "box_map" materialized_values%0#0)
        (box_del box_prefixed_key%0#0)
        return 

subroutine test_cases.state_proxies.contract.StateProxyContract.order_of_eval_global() -> void:
    block@0: // L44
        let tmp%0#0: uint64 = test_cases.state_proxies.contract.default_value()
        let (maybe_value%0#0: uint64, maybe_exists%0#0: bool) = (app_global_get_ex 0u "g1")
        let state_get%0#0: uint64 = (select tmp%0#0 maybe_value%0#0 maybe_exists%0#0)
        let val#0: uint64 = state_get%0#0
        let tmp%1#0: bool = (== val#0 42u)
        (assert tmp%1#0)
        return 

subroutine test_cases.state_proxies.contract.StateProxyContract.order_of_eval_local() -> void:
    block@0: // L49
        let tmp%0#0: bytes[32] = test_cases.state_proxies.contract.get_account()
        let tmp%1#0: uint64 = test_cases.state_proxies.contract.default_value()
        let (maybe_value%0#0: uint64, maybe_exists%0#0: bool) = (app_local_get_ex tmp%0#0 0u "l1")
        let state_get%0#0: uint64 = (select tmp%1#0 maybe_value%0#0 maybe_exists%0#0)
        let val#0: uint64 = state_get%0#0
        let tmp%2#0: bool = (== val#0 42u)
        (assert tmp%2#0)
        return 

subroutine test_cases.state_proxies.contract.StateProxyContract.order_of_eval_box() -> void:
    block@0: // L54
        let materialized_values%0#0: bytes = test_cases.state_proxies.contract.get_key()
        let box_prefixed_key%0#0: bytes = (concat "box_map" materialized_values%0#0)
        let tmp%0#0: uint64 = test_cases.state_proxies.contract.default_value()
        let (maybe_value%0#0: bytes, maybe_exists%0#0: bool) = (box_get box_prefixed_key%0#0)
        let maybe_value_converted%0#0: uint64 = (btoi maybe_value%0#0)
        let state_get%0#0: uint64 = (select tmp%0#0 maybe_value_converted%0#0 maybe_exists%0#0)
        let val#0: uint64 = state_get%0#0
        let tmp%1#0: bool = (== val#0 42u)
        (assert tmp%1#0)
        return 

subroutine algopy.arc4.ARC4Contract.approval_program() -> bool:
    block@0: // L1
        goto block@1
    block@1: // L17
        let tmp%0#1: uint64 = (txn NumAppArgs)
        let tmp%1#0: bool = (!= tmp%0#1 0u)
        goto tmp%1#0 ? block@2 : block@10
    block@2: // abi_routing_L17
        let tmp%2#0: bytes = (txna ApplicationArgs 0)
        switch tmp%2#0 {method "create()void" => block@3, method "clear()void" => block@4, method "order_of_eval_global()void" => block@5, method "order_of_eval_local()void" => block@6, method "order_of_eval_box()void" => block@7, * => block@8}
    block@3: // create_route_L31
        let tmp%3#0: uint64 = (txn OnCompletion)
        let tmp%4#0: bool = (== tmp%3#0 OptIn)
        (assert tmp%4#0) // OnCompletion is not OptIn
        let tmp%5#0: uint64 = (txn ApplicationID)
        let tmp%6#0: bool = (== tmp%5#0 0u)
        (assert tmp%6#0) // can only call when creating
        test_cases.state_proxies.contract.StateProxyContract.create()
        let test_cases.state_proxies.contract.StateProxyContract.__puya_arc4_router__%0#0: bool = 1u
        let tmp%0#0: bool = test_cases.state_proxies.contract.StateProxyContract.__puya_arc4_router__%0#0
        goto block@12
    block@4: // clear_route_L37
        let tmp%7#0: uint64 = (txn OnCompletion)
        let tmp%8#0: bool = (== tmp%7#0 NoOp)
        (assert tmp%8#0) // OnCompletion is not NoOp
        let tmp%9#0: uint64 = (txn ApplicationID)
        let tmp%10#0: bool = (!= tmp%9#0 0u)
        (assert tmp%10#0) // can only call when not creating
        test_cases.state_proxies.contract.StateProxyContract.clear()
        let test_cases.state_proxies.contract.StateProxyContract.__puya_arc4_router__%0#0: bool = 1u
        let tmp%0#0: bool = test_cases.state_proxies.contract.StateProxyContract.__puya_arc4_router__%0#0
        goto block@12
    block@5: // order_of_eval_global_route_L44
        let tmp%11#0: uint64 = (txn OnCompletion)
        let tmp%12#0: bool = (== tmp%11#0 NoOp)
        (assert tmp%12#0) // OnCompletion is not NoOp
        let tmp%13#0: uint64 = (txn ApplicationID)
        let tmp%14#0: bool = (!= tmp%13#0 0u)
        (assert tmp%14#0) // can only call when not creating
        test_cases.state_proxies.contract.StateProxyContract.order_of_eval_global()
        let test_cases.state_proxies.contract.StateProxyContract.__puya_arc4_router__%0#0: bool = 1u
        let tmp%0#0: bool = test_cases.state_proxies.contract.StateProxyContract.__puya_arc4_router__%0#0
        goto block@12
    block@6: // order_of_eval_local_route_L49
        let tmp%15#0: uint64 = (txn OnCompletion)
        let tmp%16#0: bool = (== tmp%15#0 NoOp)
        (assert tmp%16#0) // OnCompletion is not NoOp
        let tmp%17#0: uint64 = (txn ApplicationID)
        let tmp%18#0: bool = (!= tmp%17#0 0u)
        (assert tmp%18#0) // can only call when not creating
        test_cases.state_proxies.contract.StateProxyContract.order_of_eval_local()
        let test_cases.state_proxies.contract.StateProxyContract.__puya_arc4_router__%0#0: bool = 1u
        let tmp%0#0: bool = test_cases.state_proxies.contract.StateProxyContract.__puya_arc4_router__%0#0
        goto block@12
    block@7: // order_of_eval_box_route_L54
        let tmp%19#0: uint64 = (txn OnCompletion)
        let tmp%20#0: bool = (== tmp%19#0 NoOp)
        (assert tmp%20#0) // OnCompletion is not NoOp
        let tmp%21#0: uint64 = (txn ApplicationID)
        let tmp%22#0: bool = (!= tmp%21#0 0u)
        (assert tmp%22#0) // can only call when not creating
        test_cases.state_proxies.contract.StateProxyContract.order_of_eval_box()
        let test_cases.state_proxies.contract.StateProxyContract.__puya_arc4_router__%0#0: bool = 1u
        let tmp%0#0: bool = test_cases.state_proxies.contract.StateProxyContract.__puya_arc4_router__%0#0
        goto block@12
    block@8: // switch_case_default_L17
        goto block@9
    block@9: // switch_case_next_L17
        goto block@11
    block@10: // bare_routing_L17
        goto block@11
    block@11: // after_if_else_L17
        let test_cases.state_proxies.contract.StateProxyContract.__puya_arc4_router__%0#0: bool = 0u
        let tmp%0#0: bool = test_cases.state_proxies.contract.StateProxyContract.__puya_arc4_router__%0#0
        goto block@12
    block@12: // after_inlined_test_cases.state_proxies.contract.StateProxyContract.__puya_arc4_router___L1
        return tmp%0#0