{
  "version": 3,
  "sources": [
    "../contract.py"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6DQ;;;;;AAAJ;AACO;;;;;AAAP;;;;AAKI;;;;;;;;;AAAJ;AACO;;AAAP;;;;AAKI;;;;;;;;;AAAJ;AACO;AAAP;;;;AA5CC;;;AAAA;AAAA;;;;AAMA;;;AAAA;AAAA;;;;AAOA;;;AAAA;AAAA;;;;AAKA;;;AAAA;AAAA;;;;AAKA;;;AAAA;AAAA;;;;AAhCqD;;;;AAAf;AAAnC;AAGO;;AAAA;AAAA;AAC0B;;;;;;AAFL;;;;;;;AAAxB;;AAAA;AAIe;;AAAnB;;;;;AAKA;AAAqB;AAArB;AACY;;AAAZ;AAA0B;AAA1B;AACY;;AAAZ;AAA0B;;AAA1B;;;;;AAII;AAAJ;AACgB;;AAAZ;AAAJ;AACgB;;AAAZ;AAAJ;AACiB;;;AAAb;AAAA;;AAAA;AAAJ;;;;;;AAI+B;;;AAAzB;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;AACQ;AAAP;AAAP;;;;;AAIsB;;;AAAuB;;;AAAA;;AAAvC;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;AACQ;AAAP;AAAP;;;;;AAIuB;;;AAAjB;AAAA;;AAAA;AAAoC;;;AAAA;;AAApC;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AACQ;AAAP;AAAP;;;;;;;;AAxCR;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;AAAA;AAAA;;;AAAA;;;AAAA;;;AAAA;;;AAAA;;;AAAA;;;AAAA;;;AAAA;;;AAAA;;;AAAA;;;;;;AAAA;;AAAA;;;;AAAA;;;;;;AAAA;AAAA;;;;;;AAAA;;;AAAA;;;AAAA;;;AAAA;;;;;;AAAA;;;;;;AAAA;;;;;;AAAA;;;;;;AAAA;;AAAA;;;;;;;;;;AAAA;;;;;;AAAA;AAAA;;;;;;AAAA;;;;;;AAAA;;;;;;AAAA;;;",
  "op_pc_offset": 0,
  "pc_events": {
    "1": {
      "subroutine": "test_cases.state_proxies.contract.StateProxyContract.__algopy_entrypoint_with_init",
      "params": {},
      "block": "main",
      "stack_in": [],
      "op": "intcblock 1 0 42 2"
    },
    "7": {
      "op": "bytecblock \"g1\" \"l1\" 0x6c32 \"box_map\""
    },
    "26": {
      "op": "b block@0"
    },
    "29": {
      "block": "block@0",
      "stack_in": [],
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "31": {
      "op": "bnz after_if_else@2",
      "stack_out": []
    },
    "34": {
      "op": "b call___init__@1"
    },
    "37": {
      "block": "call___init__@1",
      "stack_in": [],
      "callsub": "test_cases.state_proxies.contract.StateProxyContract.__init__",
      "op": "callsub __init__"
    },
    "40": {
      "op": "b after_if_else@2"
    },
    "43": {
      "block": "after_if_else@2",
      "stack_in": [],
      "callsub": "algopy.arc4.ARC4Contract.approval_program",
      "op": "callsub approval_program",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "46": {
      "op": "return",
      "stack_out": []
    },
    "47": {
      "subroutine": "test_cases.state_proxies.contract.get_key",
      "params": {},
      "block": "get_key",
      "stack_in": [],
      "op": "b get_key_block@0"
    },
    "50": {
      "block": "get_key_block@0",
      "stack_in": [],
      "op": "pushbytes \"key\"",
      "defined_out": [
        "\"key\""
      ],
      "stack_out": [
        "\"key\""
      ]
    },
    "55": {
      "op": "log",
      "stack_out": []
    },
    "56": {
      "op": "pushbytes 0x626f78",
      "defined_out": [
        "0x626f78"
      ],
      "stack_out": [
        "0x626f78"
      ]
    },
    "61": {
      "retsub": true,
      "op": "retsub"
    },
    "62": {
      "subroutine": "test_cases.state_proxies.contract.get_account",
      "params": {},
      "block": "get_account",
      "stack_in": [],
      "op": "b get_account_block@0"
    },
    "65": {
      "block": "get_account_block@0",
      "stack_in": [],
      "op": "pushbytes \"account\"",
      "defined_out": [
        "\"account\""
      ],
      "stack_out": [
        "\"account\""
      ]
    },
    "74": {
      "op": "log",
      "stack_out": []
    },
    "75": {
      "op": "txn Sender",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "77": {
      "retsub": true,
      "op": "retsub"
    },
    "78": {
      "subroutine": "test_cases.state_proxies.contract.default_value",
      "params": {},
      "block": "default_value",
      "stack_in": [],
      "op": "b default_value_block@0"
    },
    "81": {
      "block": "default_value_block@0",
      "stack_in": [],
      "op": "pushbytes \"default\"",
      "defined_out": [
        "\"default\""
      ],
      "stack_out": [
        "\"default\""
      ]
    },
    "90": {
      "op": "log",
      "stack_out": []
    },
    "91": {
      "op": "intc_2 // 42",
      "defined_out": [
        "42"
      ],
      "stack_out": [
        "42"
      ]
    },
    "92": {
      "retsub": true,
      "op": "retsub"
    },
    "93": {
      "subroutine": "test_cases.state_proxies.contract.StateProxyContract.create[routing]",
      "params": {},
      "block": "create",
      "stack_in": [],
      "op": "b create_block@0"
    },
    "96": {
      "block": "create_block@0",
      "stack_in": [],
      "callsub": "test_cases.state_proxies.contract.StateProxyContract.create",
      "op": "callsub test_cases.state_proxies.contract.StateProxyContract.create"
    },
    "99": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "100": {
      "op": "return",
      "stack_out": []
    },
    "101": {
      "subroutine": "test_cases.state_proxies.contract.StateProxyContract.clear[routing]",
      "params": {},
      "block": "clear",
      "stack_in": [],
      "op": "b clear_block@0"
    },
    "104": {
      "block": "clear_block@0",
      "stack_in": [],
      "callsub": "test_cases.state_proxies.contract.StateProxyContract.clear",
      "op": "callsub test_cases.state_proxies.contract.StateProxyContract.clear"
    },
    "107": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "108": {
      "op": "return",
      "stack_out": []
    },
    "109": {
      "subroutine": "test_cases.state_proxies.contract.StateProxyContract.order_of_eval_global[routing]",
      "params": {},
      "block": "order_of_eval_global",
      "stack_in": [],
      "op": "b order_of_eval_global_block@0"
    },
    "112": {
      "block": "order_of_eval_global_block@0",
      "stack_in": [],
      "callsub": "test_cases.state_proxies.contract.StateProxyContract.order_of_eval_global",
      "op": "callsub test_cases.state_proxies.contract.StateProxyContract.order_of_eval_global"
    },
    "115": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "116": {
      "op": "return",
      "stack_out": []
    },
    "117": {
      "subroutine": "test_cases.state_proxies.contract.StateProxyContract.order_of_eval_local[routing]",
      "params": {},
      "block": "order_of_eval_local",
      "stack_in": [],
      "op": "b order_of_eval_local_block@0"
    },
    "120": {
      "block": "order_of_eval_local_block@0",
      "stack_in": [],
      "callsub": "test_cases.state_proxies.contract.StateProxyContract.order_of_eval_local",
      "op": "callsub test_cases.state_proxies.contract.StateProxyContract.order_of_eval_local"
    },
    "123": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "124": {
      "op": "return",
      "stack_out": []
    },
    "125": {
      "subroutine": "test_cases.state_proxies.contract.StateProxyContract.order_of_eval_box[routing]",
      "params": {},
      "block": "order_of_eval_box",
      "stack_in": [],
      "op": "b order_of_eval_box_block@0"
    },
    "128": {
      "block": "order_of_eval_box_block@0",
      "stack_in": [],
      "callsub": "test_cases.state_proxies.contract.StateProxyContract.order_of_eval_box",
      "op": "callsub test_cases.state_proxies.contract.StateProxyContract.order_of_eval_box"
    },
    "131": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "132": {
      "op": "return",
      "stack_out": []
    },
    "133": {
      "subroutine": "test_cases.state_proxies.contract.StateProxyContract.__init__",
      "params": {},
      "block": "__init__",
      "stack_in": [],
      "op": "b __init___block@0"
    },
    "136": {
      "block": "__init___block@0",
      "stack_in": [],
      "op": "pushbytes 0x6732",
      "defined_out": [
        "0x6732"
      ],
      "stack_out": [
        "0x6732"
      ]
    },
    "140": {
      "op": "intc_1 // 0",
      "defined_out": [
        "0",
        "0x6732"
      ],
      "stack_out": [
        "0x6732",
        "0"
      ]
    },
    "141": {
      "op": "app_global_put",
      "stack_out": []
    },
    "142": {
      "op": "txn NumAppArgs",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "144": {
      "op": "intc_1 // 0",
      "stack_out": [
        "tmp%0#0",
        "0"
      ]
    },
    "145": {
      "op": "!=",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "146": {
      "op": "pushbytes \"town\"",
      "defined_out": [
        "\"town\"",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "\"town\""
      ]
    },
    "152": {
      "op": "pushbytes \"funky\"",
      "defined_out": [
        "\"funky\"",
        "\"town\"",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "\"town\"",
        "\"funky\""
      ]
    },
    "159": {
      "op": "uncover 2",
      "stack_out": [
        "\"town\"",
        "\"funky\"",
        "tmp%1#0"
      ]
    },
    "161": {
      "op": "select",
      "defined_out": [
        "funky_town#0"
      ],
      "stack_out": [
        "funky_town#0"
      ]
    },
    "162": {
      "op": "pushint 123 // 123",
      "defined_out": [
        "123",
        "funky_town#0"
      ],
      "stack_out": [
        "funky_town#0",
        "123"
      ]
    },
    "164": {
      "op": "app_global_put",
      "stack_out": []
    },
    "165": {
      "retsub": true,
      "op": "retsub"
    },
    "166": {
      "subroutine": "test_cases.state_proxies.contract.StateProxyContract.create",
      "params": {},
      "block": "test_cases.state_proxies.contract.StateProxyContract.create",
      "stack_in": [],
      "op": "b test_cases.state_proxies.contract.StateProxyContract.create_block@0"
    },
    "169": {
      "block": "test_cases.state_proxies.contract.StateProxyContract.create_block@0",
      "stack_in": [],
      "op": "bytec_0 // \"g1\"",
      "defined_out": [
        "\"g1\""
      ],
      "stack_out": [
        "\"g1\""
      ]
    },
    "170": {
      "op": "intc_0 // 1",
      "defined_out": [
        "\"g1\"",
        "1"
      ],
      "stack_out": [
        "\"g1\"",
        "1"
      ]
    },
    "171": {
      "op": "app_global_put",
      "stack_out": []
    },
    "172": {
      "op": "txn Sender",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "174": {
      "op": "bytec_1 // \"l1\"",
      "defined_out": [
        "\"l1\"",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "\"l1\""
      ]
    },
    "175": {
      "op": "intc_3 // 2",
      "defined_out": [
        "\"l1\"",
        "2",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "\"l1\"",
        "2"
      ]
    },
    "176": {
      "op": "app_local_put",
      "stack_out": []
    },
    "177": {
      "op": "txn Sender",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "179": {
      "op": "bytec_2 // 0x6c32",
      "defined_out": [
        "0x6c32",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "0x6c32"
      ]
    },
    "180": {
      "op": "pushint 3 // 3",
      "defined_out": [
        "0x6c32",
        "3",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "0x6c32",
        "3"
      ]
    },
    "182": {
      "op": "app_local_put",
      "stack_out": []
    },
    "183": {
      "retsub": true,
      "op": "retsub"
    },
    "184": {
      "subroutine": "test_cases.state_proxies.contract.StateProxyContract.clear",
      "params": {},
      "block": "test_cases.state_proxies.contract.StateProxyContract.clear",
      "stack_in": [],
      "op": "b test_cases.state_proxies.contract.StateProxyContract.clear_block@0"
    },
    "187": {
      "block": "test_cases.state_proxies.contract.StateProxyContract.clear_block@0",
      "stack_in": [],
      "op": "bytec_0 // \"g1\"",
      "defined_out": [
        "\"g1\""
      ],
      "stack_out": [
        "\"g1\""
      ]
    },
    "188": {
      "op": "app_global_del",
      "stack_out": []
    },
    "189": {
      "op": "txn Sender",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "191": {
      "op": "bytec_1 // \"l1\"",
      "defined_out": [
        "\"l1\"",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "\"l1\""
      ]
    },
    "192": {
      "op": "app_local_del",
      "stack_out": []
    },
    "193": {
      "op": "txn Sender",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "195": {
      "op": "bytec_2 // 0x6c32",
      "defined_out": [
        "0x6c32",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "0x6c32"
      ]
    },
    "196": {
      "op": "app_local_del",
      "stack_out": []
    },
    "197": {
      "callsub": "test_cases.state_proxies.contract.get_key",
      "op": "callsub get_key",
      "defined_out": [
        "materialized_values%0#0"
      ],
      "stack_out": [
        "materialized_values%0#0"
      ]
    },
    "200": {
      "op": "bytec_3 // \"box_map\"",
      "defined_out": [
        "\"box_map\"",
        "materialized_values%0#0"
      ],
      "stack_out": [
        "materialized_values%0#0",
        "\"box_map\""
      ]
    },
    "201": {
      "op": "uncover 1",
      "stack_out": [
        "\"box_map\"",
        "materialized_values%0#0"
      ]
    },
    "203": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0"
      ]
    },
    "204": {
      "op": "box_del",
      "defined_out": [
        "{box_del}"
      ],
      "stack_out": [
        "{box_del}"
      ]
    },
    "205": {
      "op": "pop",
      "stack_out": []
    },
    "206": {
      "retsub": true,
      "op": "retsub"
    },
    "207": {
      "subroutine": "test_cases.state_proxies.contract.StateProxyContract.order_of_eval_global",
      "params": {},
      "block": "test_cases.state_proxies.contract.StateProxyContract.order_of_eval_global",
      "stack_in": [],
      "op": "b test_cases.state_proxies.contract.StateProxyContract.order_of_eval_global_block@0"
    },
    "210": {
      "block": "test_cases.state_proxies.contract.StateProxyContract.order_of_eval_global_block@0",
      "stack_in": [],
      "callsub": "test_cases.state_proxies.contract.default_value",
      "op": "callsub default_value",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "213": {
      "op": "intc_1 // 0",
      "defined_out": [
        "0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "0"
      ]
    },
    "214": {
      "op": "bytec_0 // \"g1\"",
      "defined_out": [
        "\"g1\"",
        "0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "0",
        "\"g1\""
      ]
    },
    "215": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "216": {
      "op": "cover 1",
      "stack_out": [
        "tmp%0#0",
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ]
    },
    "218": {
      "op": "uncover 2",
      "stack_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "tmp%0#0"
      ]
    },
    "220": {
      "op": "uncover 1",
      "stack_out": [
        "maybe_exists%0#0",
        "tmp%0#0",
        "maybe_value%0#0"
      ]
    },
    "222": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%0#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "224": {
      "op": "select",
      "defined_out": [
        "val#0"
      ],
      "stack_out": [
        "val#0"
      ]
    },
    "225": {
      "op": "intc_2 // 42",
      "defined_out": [
        "42",
        "val#0"
      ],
      "stack_out": [
        "val#0",
        "42"
      ]
    },
    "226": {
      "op": "==",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "227": {
      "op": "assert",
      "stack_out": []
    },
    "228": {
      "retsub": true,
      "op": "retsub"
    },
    "229": {
      "subroutine": "test_cases.state_proxies.contract.StateProxyContract.order_of_eval_local",
      "params": {},
      "block": "test_cases.state_proxies.contract.StateProxyContract.order_of_eval_local",
      "stack_in": [],
      "op": "b test_cases.state_proxies.contract.StateProxyContract.order_of_eval_local_block@0"
    },
    "232": {
      "block": "test_cases.state_proxies.contract.StateProxyContract.order_of_eval_local_block@0",
      "stack_in": [],
      "callsub": "test_cases.state_proxies.contract.get_account",
      "op": "callsub get_account",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "235": {
      "callsub": "test_cases.state_proxies.contract.default_value",
      "op": "callsub default_value",
      "defined_out": [
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0"
      ]
    },
    "238": {
      "op": "cover 1",
      "stack_out": [
        "tmp%1#0",
        "tmp%0#0"
      ]
    },
    "240": {
      "op": "intc_1 // 0",
      "defined_out": [
        "0",
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%0#0",
        "0"
      ]
    },
    "241": {
      "op": "bytec_1 // \"l1\"",
      "defined_out": [
        "\"l1\"",
        "0",
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%0#0",
        "0",
        "\"l1\""
      ]
    },
    "242": {
      "op": "app_local_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "243": {
      "op": "cover 1",
      "stack_out": [
        "tmp%1#0",
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ]
    },
    "245": {
      "op": "uncover 2",
      "stack_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "tmp%1#0"
      ]
    },
    "247": {
      "op": "uncover 1",
      "stack_out": [
        "maybe_exists%0#0",
        "tmp%1#0",
        "maybe_value%0#0"
      ]
    },
    "249": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%1#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "251": {
      "op": "select",
      "defined_out": [
        "val#0"
      ],
      "stack_out": [
        "val#0"
      ]
    },
    "252": {
      "op": "intc_2 // 42",
      "defined_out": [
        "42",
        "val#0"
      ],
      "stack_out": [
        "val#0",
        "42"
      ]
    },
    "253": {
      "op": "==",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "254": {
      "op": "assert",
      "stack_out": []
    },
    "255": {
      "retsub": true,
      "op": "retsub"
    },
    "256": {
      "subroutine": "test_cases.state_proxies.contract.StateProxyContract.order_of_eval_box",
      "params": {},
      "block": "test_cases.state_proxies.contract.StateProxyContract.order_of_eval_box",
      "stack_in": [],
      "op": "b test_cases.state_proxies.contract.StateProxyContract.order_of_eval_box_block@0"
    },
    "259": {
      "block": "test_cases.state_proxies.contract.StateProxyContract.order_of_eval_box_block@0",
      "stack_in": [],
      "callsub": "test_cases.state_proxies.contract.get_key",
      "op": "callsub get_key",
      "defined_out": [
        "materialized_values%0#0"
      ],
      "stack_out": [
        "materialized_values%0#0"
      ]
    },
    "262": {
      "op": "bytec_3 // \"box_map\"",
      "defined_out": [
        "\"box_map\"",
        "materialized_values%0#0"
      ],
      "stack_out": [
        "materialized_values%0#0",
        "\"box_map\""
      ]
    },
    "263": {
      "op": "uncover 1",
      "stack_out": [
        "\"box_map\"",
        "materialized_values%0#0"
      ]
    },
    "265": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0"
      ]
    },
    "266": {
      "callsub": "test_cases.state_proxies.contract.default_value",
      "op": "callsub default_value",
      "defined_out": [
        "box_prefixed_key%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "tmp%0#0"
      ]
    },
    "269": {
      "op": "cover 1",
      "stack_out": [
        "tmp%0#0",
        "box_prefixed_key%0#0"
      ]
    },
    "271": {
      "op": "box_get",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "272": {
      "op": "cover 1",
      "stack_out": [
        "tmp%0#0",
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ]
    },
    "274": {
      "op": "btoi",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value_converted%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "maybe_exists%0#0",
        "maybe_value_converted%0#0"
      ]
    },
    "275": {
      "op": "uncover 2",
      "stack_out": [
        "maybe_exists%0#0",
        "maybe_value_converted%0#0",
        "tmp%0#0"
      ]
    },
    "277": {
      "op": "uncover 1",
      "stack_out": [
        "maybe_exists%0#0",
        "tmp%0#0",
        "maybe_value_converted%0#0"
      ]
    },
    "279": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%0#0",
        "maybe_value_converted%0#0",
        "maybe_exists%0#0"
      ]
    },
    "281": {
      "op": "select",
      "defined_out": [
        "val#0"
      ],
      "stack_out": [
        "val#0"
      ]
    },
    "282": {
      "op": "intc_2 // 42",
      "defined_out": [
        "42",
        "val#0"
      ],
      "stack_out": [
        "val#0",
        "42"
      ]
    },
    "283": {
      "op": "==",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "284": {
      "op": "assert",
      "stack_out": []
    },
    "285": {
      "retsub": true,
      "op": "retsub"
    },
    "286": {
      "subroutine": "algopy.arc4.ARC4Contract.approval_program",
      "params": {},
      "block": "approval_program",
      "stack_in": [],
      "op": "b approval_program_block@0"
    },
    "289": {
      "block": "approval_program_block@0",
      "stack_in": [],
      "op": "b approval_program_block@1"
    },
    "292": {
      "block": "approval_program_block@1",
      "stack_in": [],
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "294": {
      "op": "!",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "295": {
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%2#0"
      ]
    },
    "297": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "tmp%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%2#0",
        "1"
      ]
    },
    "298": {
      "op": "shl",
      "defined_out": [
        "tmp%1#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%3#0"
      ]
    },
    "299": {
      "op": "+",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "300": {
      "op": "intc_1 // 0",
      "defined_out": [
        "0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "0"
      ]
    },
    "301": {
      "op": "intc_0 // 1",
      "stack_out": [
        "tmp%4#0",
        "0",
        "1"
      ]
    },
    "302": {
      "op": "intc_3 // 2",
      "defined_out": [
        "0",
        "1",
        "2",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "0",
        "1",
        "2"
      ]
    },
    "303": {
      "op": "pushint 3 // 3",
      "defined_out": [
        "0",
        "1",
        "2",
        "3",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "0",
        "1",
        "2",
        "3"
      ]
    },
    "305": {
      "op": "pushint 4 // 4",
      "defined_out": [
        "0",
        "1",
        "2",
        "3",
        "4",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "0",
        "1",
        "2",
        "3",
        "4"
      ]
    },
    "307": {
      "op": "pushint 5 // 5",
      "defined_out": [
        "0",
        "1",
        "2",
        "3",
        "4",
        "5",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "0",
        "1",
        "2",
        "3",
        "4",
        "5"
      ]
    },
    "309": {
      "op": "pushint 6 // 6",
      "defined_out": [
        "0",
        "1",
        "2",
        "3",
        "4",
        "5",
        "6",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "0",
        "1",
        "2",
        "3",
        "4",
        "5",
        "6"
      ]
    },
    "311": {
      "op": "pushint 7 // 7",
      "defined_out": [
        "0",
        "1",
        "2",
        "3",
        "4",
        "5",
        "6",
        "7",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "0",
        "1",
        "2",
        "3",
        "4",
        "5",
        "6",
        "7"
      ]
    },
    "313": {
      "op": "pushint 8 // 8",
      "defined_out": [
        "0",
        "1",
        "2",
        "3",
        "4",
        "5",
        "6",
        "7",
        "8",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "0",
        "1",
        "2",
        "3",
        "4",
        "5",
        "6",
        "7",
        "8"
      ]
    },
    "315": {
      "op": "pushint 9 // 9",
      "defined_out": [
        "0",
        "1",
        "2",
        "3",
        "4",
        "5",
        "6",
        "7",
        "8",
        "9",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "0",
        "1",
        "2",
        "3",
        "4",
        "5",
        "6",
        "7",
        "8",
        "9"
      ]
    },
    "317": {
      "op": "pushint 10 // 10",
      "defined_out": [
        "0",
        "1",
        "10",
        "2",
        "3",
        "4",
        "5",
        "6",
        "7",
        "8",
        "9",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "0",
        "1",
        "2",
        "3",
        "4",
        "5",
        "6",
        "7",
        "8",
        "9",
        "10"
      ]
    },
    "319": {
      "op": "pushint 11 // 11",
      "defined_out": [
        "0",
        "1",
        "10",
        "11",
        "2",
        "3",
        "4",
        "5",
        "6",
        "7",
        "8",
        "9",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "0",
        "1",
        "2",
        "3",
        "4",
        "5",
        "6",
        "7",
        "8",
        "9",
        "10",
        "11"
      ]
    },
    "321": {
      "op": "uncover 12",
      "stack_out": [
        "0",
        "1",
        "2",
        "3",
        "4",
        "5",
        "6",
        "7",
        "8",
        "9",
        "10",
        "11",
        "tmp%4#0"
      ]
    },
    "323": {
      "op": "match approval_program_call_NoOp approval_program_create_NoOp approval_program_call_OptIn approval_program_create_OptIn approval_program_call_CloseOut approval_program_create_CloseOut approval_program_call_ClearState approval_program_create_ClearState approval_program_call_UpdateApplication approval_program_create_UpdateApplication approval_program_call_DeleteApplication approval_program_create_DeleteApplication",
      "stack_out": []
    },
    "349": {
      "op": "b approval_program_*NOT_IMPLEMENTED"
    },
    "352": {
      "error": "The requested action is not implemented in this contract. Are you using the correct OnComplete? Did you set your app ID?",
      "block": "approval_program_*NOT_IMPLEMENTED",
      "stack_in": [],
      "op": "err // The requested action is not implemented in this contract. Are you using the correct OnComplete? Did you set your app ID?"
    },
    "353": {
      "block": "approval_program_create_DeleteApplication",
      "stack_in": [],
      "op": "b approval_program_*NOT_IMPLEMENTED"
    },
    "356": {
      "block": "approval_program_call_DeleteApplication",
      "stack_in": [],
      "op": "b approval_program_*NOT_IMPLEMENTED"
    },
    "359": {
      "block": "approval_program_create_UpdateApplication",
      "stack_in": [],
      "op": "b approval_program_*NOT_IMPLEMENTED"
    },
    "362": {
      "block": "approval_program_call_UpdateApplication",
      "stack_in": [],
      "op": "b approval_program_*NOT_IMPLEMENTED"
    },
    "365": {
      "block": "approval_program_create_ClearState",
      "stack_in": [],
      "op": "b approval_program_*NOT_IMPLEMENTED"
    },
    "368": {
      "block": "approval_program_call_ClearState",
      "stack_in": [],
      "op": "b approval_program_*NOT_IMPLEMENTED"
    },
    "371": {
      "block": "approval_program_create_CloseOut",
      "stack_in": [],
      "op": "b approval_program_*NOT_IMPLEMENTED"
    },
    "374": {
      "block": "approval_program_call_CloseOut",
      "stack_in": [],
      "op": "b approval_program_*NOT_IMPLEMENTED"
    },
    "377": {
      "block": "approval_program_create_OptIn",
      "stack_in": [],
      "op": "txna ApplicationArgs 0",
      "defined_out": [
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0"
      ]
    },
    "380": {
      "op": "pushbytes 0x4c5c61ba // method \"create()void\"",
      "defined_out": [
        "Method(create()void)",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0",
        "Method(create()void)"
      ]
    },
    "386": {
      "op": "uncover 1",
      "stack_out": [
        "Method(create()void)",
        "tmp%6#0"
      ]
    },
    "388": {
      "op": "match approval_program_create_route@12",
      "stack_out": []
    },
    "392": {
      "op": "b approval_program_switch_case_default@13"
    },
    "395": {
      "block": "approval_program_switch_case_default@13",
      "stack_in": [],
      "op": "b approval_program_switch_case_next@14"
    },
    "398": {
      "error": "this contract does not implement the given ABI method for create OptIn",
      "block": "approval_program_switch_case_next@14",
      "stack_in": [],
      "op": "err // this contract does not implement the given ABI method for create OptIn"
    },
    "399": {
      "block": "approval_program_create_route@12",
      "stack_in": [],
      "callsub": "test_cases.state_proxies.contract.StateProxyContract.create[routing]",
      "op": "callsub create"
    },
    "402": {
      "op": "b approval_program_switch_case_next@14"
    },
    "405": {
      "block": "approval_program_call_OptIn",
      "stack_in": [],
      "op": "b approval_program_*NOT_IMPLEMENTED"
    },
    "408": {
      "block": "approval_program_create_NoOp",
      "stack_in": [],
      "op": "b approval_program_*NOT_IMPLEMENTED"
    },
    "411": {
      "block": "approval_program_call_NoOp",
      "stack_in": [],
      "op": "txna ApplicationArgs 0",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "414": {
      "op": "pushbytes 0x44977246 // method \"clear()void\"",
      "defined_out": [
        "Method(clear()void)",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "Method(clear()void)"
      ]
    },
    "420": {
      "op": "pushbytes 0xbd8868b9 // method \"order_of_eval_global()void\"",
      "defined_out": [
        "Method(clear()void)",
        "Method(order_of_eval_global()void)",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "Method(clear()void)",
        "Method(order_of_eval_global()void)"
      ]
    },
    "426": {
      "op": "pushbytes 0xd0e289b0 // method \"order_of_eval_local()void\"",
      "defined_out": [
        "Method(clear()void)",
        "Method(order_of_eval_global()void)",
        "Method(order_of_eval_local()void)",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "Method(clear()void)",
        "Method(order_of_eval_global()void)",
        "Method(order_of_eval_local()void)"
      ]
    },
    "432": {
      "op": "pushbytes 0x74445702 // method \"order_of_eval_box()void\"",
      "defined_out": [
        "Method(clear()void)",
        "Method(order_of_eval_box()void)",
        "Method(order_of_eval_global()void)",
        "Method(order_of_eval_local()void)",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "Method(clear()void)",
        "Method(order_of_eval_global()void)",
        "Method(order_of_eval_local()void)",
        "Method(order_of_eval_box()void)"
      ]
    },
    "438": {
      "op": "uncover 4",
      "stack_out": [
        "Method(clear()void)",
        "Method(order_of_eval_global()void)",
        "Method(order_of_eval_local()void)",
        "Method(order_of_eval_box()void)",
        "tmp%5#0"
      ]
    },
    "440": {
      "op": "match approval_program_clear_route@3 approval_program_order_of_eval_global_route@4 approval_program_order_of_eval_local_route@5 approval_program_order_of_eval_box_route@6",
      "stack_out": []
    },
    "450": {
      "op": "b approval_program_switch_case_default@7"
    },
    "453": {
      "block": "approval_program_switch_case_default@7",
      "stack_in": [],
      "op": "b approval_program_switch_case_next@8"
    },
    "456": {
      "error": "this contract does not implement the given ABI method for call NoOp",
      "block": "approval_program_switch_case_next@8",
      "stack_in": [],
      "op": "err // this contract does not implement the given ABI method for call NoOp"
    },
    "457": {
      "block": "approval_program_order_of_eval_box_route@6",
      "stack_in": [],
      "callsub": "test_cases.state_proxies.contract.StateProxyContract.order_of_eval_box[routing]",
      "op": "callsub order_of_eval_box"
    },
    "460": {
      "op": "b approval_program_switch_case_next@8"
    },
    "463": {
      "block": "approval_program_order_of_eval_local_route@5",
      "stack_in": [],
      "callsub": "test_cases.state_proxies.contract.StateProxyContract.order_of_eval_local[routing]",
      "op": "callsub order_of_eval_local"
    },
    "466": {
      "op": "b approval_program_switch_case_next@8"
    },
    "469": {
      "block": "approval_program_order_of_eval_global_route@4",
      "stack_in": [],
      "callsub": "test_cases.state_proxies.contract.StateProxyContract.order_of_eval_global[routing]",
      "op": "callsub order_of_eval_global"
    },
    "472": {
      "op": "b approval_program_switch_case_next@8"
    },
    "475": {
      "block": "approval_program_clear_route@3",
      "stack_in": [],
      "callsub": "test_cases.state_proxies.contract.StateProxyContract.clear[routing]",
      "op": "callsub clear"
    },
    "478": {
      "op": "b approval_program_switch_case_next@8"
    }
  }
}