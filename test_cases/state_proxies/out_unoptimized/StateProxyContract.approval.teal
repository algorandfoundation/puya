#pragma version 10

test_cases.state_proxies.contract.StateProxyContract.approval_program:
    txn ApplicationID
    bnz main_entrypoint@2
    callsub __init__

main_entrypoint@2:
    // state_proxies/contract.py:4
    // class StateProxyContract(ARC4Contract):
    txna ApplicationArgs 0
    method "create()void"
    uncover 1
    match main_create_route@3
    b main_switch_case_default@4

main_create_route@3:
    // state_proxies/contract.py:11
    // @arc4.abimethod(allow_actions=["OptIn"], create="require")
    txn OnCompletion
    int OptIn
    ==
    assert // OnCompletion is OptIn
    txn ApplicationID
    !
    assert // is creating
    callsub create
    int 1
    return

main_switch_case_default@4:
    // state_proxies/contract.py:4
    // class StateProxyContract(ARC4Contract):
    err // reject transaction


// test_cases.state_proxies.contract.StateProxyContract.create() -> void:
create:
    // state_proxies/contract.py:11-12
    // @arc4.abimethod(allow_actions=["OptIn"], create="require")
    // def create(self) -> None:
    proto 0 0
    // state_proxies/contract.py:13
    // self.global1.value = UInt64(1)
    byte "g1"
    int 1
    app_global_put
    // state_proxies/contract.py:14
    // self.local1[Txn.sender] = UInt64(2)
    txn Sender
    byte "l1"
    int 2
    app_local_put
    // state_proxies/contract.py:15
    // self.local2[Txn.sender] = UInt64(3)
    txn Sender
    byte 0x6c32
    int 3
    app_local_put
    retsub


// test_cases.state_proxies.contract.StateProxyContract.__init__() -> void:
__init__:
    // state_proxies/contract.py:5
    // def __init__(self) -> None:
    proto 0 0
    // state_proxies/contract.py:9
    // self.global2 = GlobalState(UInt64(0), key=b"g2", description="g2 description")
    byte 0x6732
    int 0
    app_global_put
    retsub
