// Op                                                                                             Stack (out)
// test_cases.state_proxies.contract.StateProxyContract.__algopy_entrypoint_with_init() -> uint64:
subroutine main:
    block@0:
        txn ApplicationID                                                                         tmp%0#0
        v-store tmp%0#0
        v-load tmp%0#0                                                                            tmp%0#0
        bz call___init__@1 ; b after_if_else@2

    call___init__@1:
        // state_proxies/contract.py:22
        // self.global2 = GlobalState[UInt64](UInt64(0), key=b"g2", description="g2 description")
        byte 0x6732                                                                               0x6732
        int 0                                                                                     0x6732,0
        app_global_put
        // state_proxies/contract.py:25
        // if Txn.num_app_args
        txn NumAppArgs                                                                            tmp%0#2
        v-store tmp%0#2
        // state_proxies/contract.py:26
        // else GlobalState(UInt64, key="town")
        byte "town"                                                                               "town"
        // state_proxies/contract.py:24
        // GlobalState(UInt64, key="funky")
        byte "funky"                                                                              "town","funky"
        // state_proxies/contract.py:24-26
        // GlobalState(UInt64, key="funky")
        // if Txn.num_app_args
        // else GlobalState(UInt64, key="town")
        v-load tmp%0#2                                                                            "town","funky",tmp%0#2
        select                                                                                    funky_town#0
        v-store funky_town#0
        // state_proxies/contract.py:28
        // funky_town.value = UInt64(123)
        v-load funky_town#0                                                                       funky_town#0
        int 123                                                                                   funky_town#0,123
        app_global_put
        b after_if_else@2

    after_if_else@2:
        // state_proxies/contract.py:17
        // class StateProxyContract(ARC4Contract, state_totals=StateTotals(global_uints=3)):
        txn ApplicationID                                                                         tmp%0#0
        v-store tmp%0#0
        v-load tmp%0#0                                                                            tmp%0#0
        !                                                                                         tmp%1#2
        v-store tmp%1#2
        txn OnCompletion                                                                          tmp%2#0
        v-store tmp%2#0
        v-load tmp%2#0                                                                            tmp%2#0
        int 1                                                                                     tmp%2#0,1
        shl                                                                                       tmp%3#0
        v-store tmp%3#0
        v-load tmp%1#2                                                                            tmp%1#2
        v-load tmp%3#0                                                                            tmp%1#2,tmp%3#0
        +                                                                                         tmp%4#0
        v-store tmp%4#0
        v-load tmp%4#0                                                                            tmp%4#0
        switch call_NoOp *NOT_IMPLEMENTED *NOT_IMPLEMENTED create_OptIn *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED ; b *NOT_IMPLEMENTED 

    call_NoOp:
        // state_proxies/contract.py:17
        // class StateProxyContract(ARC4Contract, state_totals=StateTotals(global_uints=3)):
        txna ApplicationArgs 0                                                                    tmp%5#0
        v-store tmp%5#0
        method clear()void                                                                        Method(clear()void)
        method order_of_eval_global()void                                                         Method(clear()void),Method(order_of_eval_global()void)
        method order_of_eval_local()void                                                          Method(clear()void),Method(order_of_eval_global()void),Method(order_of_eval_local()void)
        method order_of_eval_box()void                                                            Method(clear()void),Method(order_of_eval_global()void),Method(order_of_eval_local()void),Method(order_of_eval_box()void)
        v-load tmp%5#0                                                                            Method(clear()void),Method(order_of_eval_global()void),Method(order_of_eval_local()void),Method(order_of_eval_box()void),tmp%5#0
        match clear_route@5 order_of_eval_global_route@6 order_of_eval_local_route@7 order_of_eval_box_route@8 ; b switch_case_next@9 

    clear_route@5:
        // state_proxies/contract.py:17
        // class StateProxyContract(ARC4Contract, state_totals=StateTotals(global_uints=3)):
        callsub clear
        b switch_case_next@9

    order_of_eval_global_route@6:
        // state_proxies/contract.py:17
        // class StateProxyContract(ARC4Contract, state_totals=StateTotals(global_uints=3)):
        callsub order_of_eval_global
        b switch_case_next@9

    order_of_eval_local_route@7:
        // state_proxies/contract.py:17
        // class StateProxyContract(ARC4Contract, state_totals=StateTotals(global_uints=3)):
        callsub order_of_eval_local
        b switch_case_next@9

    order_of_eval_box_route@8:
        // state_proxies/contract.py:17
        // class StateProxyContract(ARC4Contract, state_totals=StateTotals(global_uints=3)):
        callsub order_of_eval_box
        b switch_case_next@9

    switch_case_next@9:
        // state_proxies/contract.py:17
        // class StateProxyContract(ARC4Contract, state_totals=StateTotals(global_uints=3)):
        err // this contract does not implement the given ABI method for call NoOp

    create_OptIn:
        // state_proxies/contract.py:17
        // class StateProxyContract(ARC4Contract, state_totals=StateTotals(global_uints=3)):
        txna ApplicationArgs 0                                                                    tmp%6#0
        v-store tmp%6#0
        method create()void                                                                       Method(create()void)
        v-load tmp%6#0                                                                            Method(create()void),tmp%6#0
        match create_route@11 ; b switch_case_next@12

    create_route@11:
        // state_proxies/contract.py:17
        // class StateProxyContract(ARC4Contract, state_totals=StateTotals(global_uints=3)):
        callsub create
        b switch_case_next@12

    switch_case_next@12:
        // state_proxies/contract.py:17
        // class StateProxyContract(ARC4Contract, state_totals=StateTotals(global_uints=3)):
        err // this contract does not implement the given ABI method for create OptIn

    *NOT_IMPLEMENTED:
        // state_proxies/contract.py:17
        // class StateProxyContract(ARC4Contract, state_totals=StateTotals(global_uints=3)):
        err // The requested action is not implemented in this contract. Are you using the correct OnComplete? Did you set your app ID? 


// test_cases.state_proxies.contract.get_key() -> bytes:
subroutine get_key:
    get_key_block@0:
        // state_proxies/contract.py:62
        // log("key")
        byte "key"                                                                                "key"
        log
        // state_proxies/contract.py:63
        // return Bytes(b"box")
        byte 0x626f78                                                                             0x626f78
        retsub                                                                                    0x626f78


// test_cases.state_proxies.contract.get_account() -> bytes:
subroutine get_account:
    get_account_block@0:
        // state_proxies/contract.py:68
        // log("account")
        byte "account"                                                                            "account"
        log
        // state_proxies/contract.py:69
        // return Txn.sender
        txn Sender                                                                                tmp%0#0
        v-store tmp%0#0
        v-load tmp%0#0                                                                            tmp%0#0
        retsub                                                                                    tmp%0#0


// test_cases.state_proxies.contract.default_value() -> uint64:
subroutine default_value:
    default_value_block@0:
        // state_proxies/contract.py:74
        // log("default")
        byte "default"                                                                            "default"
        log
        // state_proxies/contract.py:75
        // return UInt64(42)
        int 42                                                                                    42
        retsub                                                                                    42


// test_cases.state_proxies.contract.StateProxyContract.create[routing]() -> void:
subroutine create:
    create_block@0:
        // state_proxies/contract.py:33
        // self.global1.value = UInt64(1)
        byte "g1"                                                                                 "g1"
        int 1                                                                                     "g1",1
        app_global_put
        // state_proxies/contract.py:34
        // self.local1[Txn.sender] = UInt64(2)
        txn Sender                                                                                tmp%0#0
        v-store tmp%0#0
        v-load tmp%0#0                                                                            tmp%0#0
        byte "l1"                                                                                 tmp%0#0,"l1"
        int 2                                                                                     tmp%0#0,"l1",2
        app_local_put
        // state_proxies/contract.py:35
        // self.local2[Txn.sender] = UInt64(3)
        txn Sender                                                                                tmp%1#0
        v-store tmp%1#0
        v-load tmp%1#0                                                                            tmp%1#0
        byte 0x6c32                                                                               tmp%1#0,0x6c32
        int 3                                                                                     tmp%1#0,0x6c32,3
        app_local_put
        // state_proxies/contract.py:31
        // @arc4.abimethod(allow_actions=["OptIn"], create="require")
        int 1                                                                                     1
        return


// test_cases.state_proxies.contract.StateProxyContract.clear[routing]() -> void:
subroutine clear:
    clear_block@0:
        // state_proxies/contract.py:39
        // del self.global1.value
        byte "g1"                                                                                 "g1"
        app_global_del
        // state_proxies/contract.py:40
        // del self.local1[Txn.sender]
        txn Sender                                                                                tmp%0#0
        v-store tmp%0#0
        v-load tmp%0#0                                                                            tmp%0#0
        byte "l1"                                                                                 tmp%0#0,"l1"
        app_local_del
        // state_proxies/contract.py:41
        // del self.local2[Txn.sender]
        txn Sender                                                                                tmp%1#0
        v-store tmp%1#0
        v-load tmp%1#0                                                                            tmp%1#0
        byte 0x6c32                                                                               tmp%1#0,0x6c32
        app_local_del
        // state_proxies/contract.py:42
        // del self.box_map[get_key()]
        callsub get_key                                                                           materialized_values%0#0
        v-store materialized_values%0#0
        byte "box_map"                                                                            "box_map"
        v-load materialized_values%0#0                                                            "box_map",materialized_values%0#0
        concat                                                                                    box_prefixed_key%0#0
        v-store box_prefixed_key%0#0
        v-load box_prefixed_key%0#0                                                               box_prefixed_key%0#0
        box_del                                                                                   {box_del}
        pop 1
        // state_proxies/contract.py:37
        // @arc4.abimethod()
        int 1                                                                                     1
        return


// test_cases.state_proxies.contract.StateProxyContract.order_of_eval_global[routing]() -> void:
subroutine order_of_eval_global:
    order_of_eval_global_block@0:
        // state_proxies/contract.py:46
        // val = self.global1.get(default=default_value())
        callsub default_value                                                                     tmp%0#0
        v-store tmp%0#0
        int 0                                                                                     0
        byte "g1"                                                                                 0,"g1"
        app_global_get_ex                                                                         maybe_value%0#0,maybe_exists%0#0
        v-store maybe_exists%0#0                                                                  maybe_value%0#0
        v-store maybe_value%0#0
        v-load tmp%0#0                                                                            tmp%0#0
        v-load maybe_value%0#0                                                                    tmp%0#0,maybe_value%0#0
        v-load maybe_exists%0#0                                                                   tmp%0#0,maybe_value%0#0,maybe_exists%0#0
        select                                                                                    val#0
        v-store val#0
        // state_proxies/contract.py:47
        // assert val == 42
        v-load val#0                                                                              val#0
        int 42                                                                                    val#0,42
        ==                                                                                        tmp%1#0
        v-store tmp%1#0
        v-load tmp%1#0                                                                            tmp%1#0
        assert
        // state_proxies/contract.py:44
        // @arc4.abimethod()
        int 1                                                                                     1
        return


// test_cases.state_proxies.contract.StateProxyContract.order_of_eval_local[routing]() -> void:
subroutine order_of_eval_local:
    order_of_eval_local_block@0:
        // state_proxies/contract.py:51
        // val = self.local1.get(get_account(), default=default_value())
        callsub get_account                                                                       tmp%0#0
        v-store tmp%0#0
        callsub default_value                                                                     tmp%1#0
        v-store tmp%1#0
        v-load tmp%0#0                                                                            tmp%0#0
        int 0                                                                                     tmp%0#0,0
        byte "l1"                                                                                 tmp%0#0,0,"l1"
        app_local_get_ex                                                                          maybe_value%0#0,maybe_exists%0#0
        v-store maybe_exists%0#0                                                                  maybe_value%0#0
        v-store maybe_value%0#0
        v-load tmp%1#0                                                                            tmp%1#0
        v-load maybe_value%0#0                                                                    tmp%1#0,maybe_value%0#0
        v-load maybe_exists%0#0                                                                   tmp%1#0,maybe_value%0#0,maybe_exists%0#0
        select                                                                                    val#0
        v-store val#0
        // state_proxies/contract.py:52
        // assert val == 42
        v-load val#0                                                                              val#0
        int 42                                                                                    val#0,42
        ==                                                                                        tmp%2#0
        v-store tmp%2#0
        v-load tmp%2#0                                                                            tmp%2#0
        assert
        // state_proxies/contract.py:49
        // @arc4.abimethod()
        int 1                                                                                     1
        return


// test_cases.state_proxies.contract.StateProxyContract.order_of_eval_box[routing]() -> void:
subroutine order_of_eval_box:
    order_of_eval_box_block@0:
        // state_proxies/contract.py:56
        // val = self.box_map.get(get_key(), default=default_value())
        callsub get_key                                                                           materialized_values%0#0
        v-store materialized_values%0#0
        byte "box_map"                                                                            "box_map"
        v-load materialized_values%0#0                                                            "box_map",materialized_values%0#0
        concat                                                                                    box_prefixed_key%0#0
        v-store box_prefixed_key%0#0
        callsub default_value                                                                     tmp%0#0
        v-store tmp%0#0
        v-load box_prefixed_key%0#0                                                               box_prefixed_key%0#0
        box_get                                                                                   maybe_value%0#0,maybe_exists%0#0
        v-store maybe_exists%0#0                                                                  maybe_value%0#0
        v-store maybe_value%0#0
        v-load maybe_value%0#0                                                                    maybe_value%0#0
        btoi                                                                                      maybe_value_converted%0#0
        v-store maybe_value_converted%0#0
        v-load tmp%0#0                                                                            tmp%0#0
        v-load maybe_value_converted%0#0                                                          tmp%0#0,maybe_value_converted%0#0
        v-load maybe_exists%0#0                                                                   tmp%0#0,maybe_value_converted%0#0,maybe_exists%0#0
        select                                                                                    val#0
        v-store val#0
        // state_proxies/contract.py:57
        // assert val == 42
        v-load val#0                                                                              val#0
        int 42                                                                                    val#0,42
        ==                                                                                        tmp%1#0
        v-store tmp%1#0
        v-load tmp%1#0                                                                            tmp%1#0
        assert
        // state_proxies/contract.py:54
        // @arc4.abimethod()
        int 1                                                                                     1
        return


