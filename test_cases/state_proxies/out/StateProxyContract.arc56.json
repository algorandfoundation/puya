{
    "name": "StateProxyContract",
    "structs": {},
    "methods": [
        {
            "name": "create",
            "args": [],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [
                    "OptIn"
                ],
                "call": []
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "clear",
            "args": [],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "order_of_eval_global",
            "args": [],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "order_of_eval_local",
            "args": [],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "order_of_eval_box",
            "args": [],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        }
    ],
    "arcs": [
        22,
        28
    ],
    "networks": {},
    "state": {
        "schema": {
            "global": {
                "ints": 3,
                "bytes": 0
            },
            "local": {
                "ints": 2,
                "bytes": 0
            }
        },
        "keys": {
            "global": {
                "global1": {
                    "keyType": "AVMString",
                    "valueType": "AVMUint64",
                    "key": "ZzE=",
                    "desc": "g1 description"
                },
                "global2": {
                    "keyType": "AVMBytes",
                    "valueType": "AVMUint64",
                    "key": "ZzI=",
                    "desc": "g2 description"
                }
            },
            "local": {
                "local1": {
                    "keyType": "AVMString",
                    "valueType": "AVMUint64",
                    "key": "bDE=",
                    "desc": "l1 description"
                },
                "local2": {
                    "keyType": "AVMBytes",
                    "valueType": "AVMUint64",
                    "key": "bDI=",
                    "desc": "l2 description"
                }
            },
            "box": {}
        },
        "maps": {
            "global": {},
            "local": {},
            "box": {
                "box_map": {
                    "keyType": "AVMBytes",
                    "valueType": "uint64",
                    "prefix": "Ym94X21hcA=="
                }
            }
        }
    },
    "bareActions": {
        "create": [],
        "call": []
    },
    "sourceInfo": {
        "approval": {
            "sourceInfo": [
                {
                    "pc": [
                        89
                    ],
                    "errorMessage": "The requested action is not implemented in this contract. Are you using the correct OnComplete? Did you set your app ID?"
                },
                {
                    "pc": [
                        139
                    ],
                    "errorMessage": "this contract does not implement the given ABI method for call NoOp"
                },
                {
                    "pc": [
                        103
                    ],
                    "errorMessage": "this contract does not implement the given ABI method for create OptIn"
                }
            ],
            "pcOffsetMethod": "none"
        },
        "clear": {
            "sourceInfo": [],
            "pcOffsetMethod": "none"
        }
    },
    "source": {
        "approval": "",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDEwCiNwcmFnbWEgdHlwZXRyYWNrIGZhbHNlCgovLyBhbGdvcHkuYXJjNC5BUkM0Q29udHJhY3QuY2xlYXJfc3RhdGVfcHJvZ3JhbSgpIC0+IHVpbnQ2NDoKbWFpbjoKICAgIHB1c2hpbnQgMSAvLyAxCiAgICByZXR1cm4K"
    },
    "byteCode": {
        "approval": "CiADASoAJgQCZzECbDECbDIHYm94X21hcDEYQAAZgAJnMiRnggIEdG93bgVmdW5reTEbTYF7ZzEYFDEZIpAIjQwADwAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAgARMXGG6NhoAjgEASgCCBAREl3JGBL2IaLkE0OKJsAR0RFcCNhoAjgQANwBLAFUAYwCAA2tlebCAA2JveImAB2FjY291bnSwMQCJgAdkZWZhdWx0sCOJKCJnMQApgQJmMQAqgQNmIkMoaTEAKWgxACpoiP+9K0xQvEgiQ4j/zCQoZU0jEkOI/7WI/79MJCljTSMSQ4j/mytMUIj/rky+TBdMTSMSQw==",
        "clear": "CoEBQw=="
    },
    "compilerInfo": {
        "compiler": "puya",
        "compilerVersion": {
            "major": 99,
            "minor": 99,
            "patch": 99
        }
    },
    "events": [],
    "templateVariables": {}
}