{
  "version": 3,
  "sources": [
    "../contract.py"
  ],
  "mappings": ";;;;;;;;;;AAgB0D;;;;AAAf;AAAnC;AAIiC;;;;;;;;;;;;;AAD1B;;AADH;AAIe;;AAAnB;AAXR;;AAAA;;;AAAA;;;;;;AAAA;;;AAAA;;;;AAAA;;AAaK;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAEG;;;;AAAqB;AAArB;AACY;;AAAZ;;;;AAA0B;;AAA1B;AACY;;AAAZ;;;;AAA0B;;AAA1B;AAJH;",
  "op_pc_offset": 0,
  "pc_events": {
    "1": {
      "subroutine": "test_cases.state_proxies.contract.StateProxyContract.__algopy_entrypoint_with_init",
      "params": {},
      "block": "main",
      "stack_in": [],
      "op": "intcblock 1 0"
    },
    "5": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "7": {
      "op": "bnz main_after_if_else@2",
      "stack_out": []
    },
    "10": {
      "op": "pushbytes 0x6732",
      "defined_out": [
        "0x6732"
      ],
      "stack_out": [
        "0x6732"
      ]
    },
    "14": {
      "op": "intc_1 // 0",
      "defined_out": [
        "0",
        "0x6732"
      ],
      "stack_out": [
        "0x6732",
        "0"
      ]
    },
    "15": {
      "op": "app_global_put",
      "stack_out": []
    },
    "16": {
      "op": "pushbytess \"town\" \"funky\" // \"town\", \"funky\"",
      "defined_out": [
        "\"funky\"",
        "\"town\""
      ],
      "stack_out": [
        "\"town\"",
        "\"funky\""
      ]
    },
    "29": {
      "op": "txn NumAppArgs",
      "defined_out": [
        "\"funky\"",
        "\"town\"",
        "tmp%0#2"
      ],
      "stack_out": [
        "\"town\"",
        "\"funky\"",
        "tmp%0#2"
      ]
    },
    "31": {
      "op": "select",
      "defined_out": [
        "funky_town#0"
      ],
      "stack_out": [
        "funky_town#0"
      ]
    },
    "32": {
      "op": "pushint 123 // 123",
      "defined_out": [
        "123",
        "funky_town#0"
      ],
      "stack_out": [
        "funky_town#0",
        "123"
      ]
    },
    "34": {
      "op": "app_global_put",
      "stack_out": []
    },
    "35": {
      "block": "main_after_if_else@2",
      "stack_in": [],
      "op": "txn NumAppArgs",
      "defined_out": [
        "tmp%0#2"
      ],
      "stack_out": [
        "tmp%0#2"
      ]
    },
    "37": {
      "op": "bz main_after_if_else@6",
      "stack_out": []
    },
    "40": {
      "op": "pushbytes 0x4c5c61ba // method \"create()void\"",
      "defined_out": [
        "Method(create()void)"
      ],
      "stack_out": [
        "Method(create()void)"
      ]
    },
    "46": {
      "op": "txna ApplicationArgs 0",
      "defined_out": [
        "Method(create()void)",
        "tmp%2#0"
      ],
      "stack_out": [
        "Method(create()void)",
        "tmp%2#0"
      ]
    },
    "49": {
      "op": "match main_create_route@5",
      "stack_out": []
    },
    "53": {
      "block": "main_after_if_else@6",
      "stack_in": [],
      "op": "intc_1 // 0",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "54": {
      "op": "return",
      "stack_out": []
    },
    "55": {
      "block": "main_create_route@5",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "57": {
      "op": "intc_0 // OptIn",
      "defined_out": [
        "OptIn",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "OptIn"
      ]
    },
    "58": {
      "op": "==",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "59": {
      "error": "OnCompletion is not OptIn",
      "op": "assert // OnCompletion is not OptIn",
      "stack_out": []
    },
    "60": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "62": {
      "op": "!",
      "defined_out": [
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0"
      ]
    },
    "63": {
      "error": "can only call when creating",
      "op": "assert // can only call when creating",
      "stack_out": []
    },
    "64": {
      "op": "pushbytes \"g1\"",
      "defined_out": [
        "\"g1\""
      ],
      "stack_out": [
        "\"g1\""
      ]
    },
    "68": {
      "op": "intc_0 // 1",
      "defined_out": [
        "\"g1\"",
        "1"
      ],
      "stack_out": [
        "\"g1\"",
        "1"
      ]
    },
    "69": {
      "op": "app_global_put",
      "stack_out": []
    },
    "70": {
      "op": "txn Sender",
      "defined_out": [
        "tmp%0#4"
      ],
      "stack_out": [
        "tmp%0#4"
      ]
    },
    "72": {
      "op": "pushbytes \"l1\"",
      "defined_out": [
        "\"l1\"",
        "tmp%0#4"
      ],
      "stack_out": [
        "tmp%0#4",
        "\"l1\""
      ]
    },
    "76": {
      "op": "pushint 2 // 2",
      "defined_out": [
        "\"l1\"",
        "2",
        "tmp%0#4"
      ],
      "stack_out": [
        "tmp%0#4",
        "\"l1\"",
        "2"
      ]
    },
    "78": {
      "op": "app_local_put",
      "stack_out": []
    },
    "79": {
      "op": "txn Sender",
      "defined_out": [
        "tmp%1#3"
      ],
      "stack_out": [
        "tmp%1#3"
      ]
    },
    "81": {
      "op": "pushbytes 0x6c32",
      "defined_out": [
        "0x6c32",
        "tmp%1#3"
      ],
      "stack_out": [
        "tmp%1#3",
        "0x6c32"
      ]
    },
    "85": {
      "op": "pushint 3 // 3",
      "defined_out": [
        "0x6c32",
        "3",
        "tmp%1#3"
      ],
      "stack_out": [
        "tmp%1#3",
        "0x6c32",
        "3"
      ]
    },
    "87": {
      "op": "app_local_put",
      "stack_out": []
    },
    "88": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "89": {
      "op": "return",
      "stack_out": []
    }
  }
}