#pragma version 10

test_cases.simplish.contract.Simplish.approval_program:
    intcblock 0 1 10 5 100000
    bytecblock "counter" 0x30313233343536373839
    intc_0 // 0
    dup
    pushbytes ""
    dupn 2
    txn ApplicationID
    bnz main_after_if_else@2
    callsub __init__

main_after_if_else@2:
    txn ApplicationID
    bnz main_after_if_else@4

main_if_body@3:
    intc_1 // 1
    return

main_after_if_else@4:
    txn OnCompletion
    dup
    bury 2
    txn Sender
    bury 5
    pushint 4 // UpdateApplication
    ==
    bnz main_if_body@6
    dup
    intc_3 // DeleteApplication
    ==
    bz main_after_if_else@9

main_if_body@6:
    dup
    intc_3 // DeleteApplication
    ==
    bz main_after_if_else@8
    intc_0 // 0
    bytec_0 // "counter"
    app_global_get_ex
    assert // check self.counter exists
    callsub itoa
    pushbytes 0x4920776173207573656420
    swap
    concat
    pushbytes 0x2074696d65287329206265666f726520492064696564
    concat
    log

main_after_if_else@8:
    global CreatorAddress
    dig 4
    ==
    return

main_after_if_else@9:
    dup
    intc_1 // OptIn
    ==
    bz main_after_if_else@13
    txn NumAppArgs
    bz main_if_body@3
    txna ApplicationArgs 0
    callsub set_sender_nickname
    b main_if_body@3

main_after_if_else@13:
    dup
    bz main_after_if_else@15
    intc_0 // 0
    return

main_after_if_else@15:
    txn NumAppArgs
    dup
    bury 3
    bz main_else_body@17
    txna ApplicationArgs 0
    dig 2
    callsub call
    swap
    bury 6
    b main_after_if_else@24

main_else_body@17:
    txn NumAssets
    intc_1 // 1
    ==
    bz main_else_body@22
    dig 3
    intc_0 // 0
    asset_holding_get AssetBalance
    swap
    bury 4
    bnz main_else_body@20
    pushbytes 0x596f7520646f206e6f74206861766520616e79206f6620746865206173736574
    bury 5
    b main_after_if_else@21

main_else_body@20:
    dig 2
    callsub itoa
    pushbytes 0x596f7520686176652061737365742062616c616e63653a20
    swap
    concat
    bury 5

main_after_if_else@21:
    intc_1 // 1
    b main_after_if_else@24

main_else_body@22:
    pushbytes 0x6e6f7420656e6f756768206170702061726773206f7220666f726569676e20617373657473
    bury 5
    intc_0 // 0

main_after_if_else@24:
    dig 5
    log
    callsub increment_counter
    return


// test_cases.simplish.contract.itoa(i: uint64) -> bytes:
itoa:
    proto 1 1
    frame_dig -1
    intc_2 // 10
    <
    bz itoa_after_if_else@2
    frame_dig -1
    intc_1 // 1
    +
    bytec_1 // 0x30313233343536373839
    frame_dig -1
    uncover 2
    substring3
    retsub

itoa_after_if_else@2:
    frame_dig -1
    intc_2 // 10
    /
    callsub itoa
    frame_dig -1
    intc_2 // 10
    %
    dup
    intc_1 // 1
    +
    bytec_1 // 0x30313233343536373839
    cover 2
    substring3
    concat
    retsub


// test_cases.simplish.base_class.CallCounter.set_sender_nickname(nickname: bytes) -> void:
set_sender_nickname:
    proto 1 0
    intc_0 // 0
    pushbytes "name"
    frame_dig -1
    app_local_put
    retsub


// test_cases.simplish.contract.Simplish.call(method_name: bytes, num_app_args: uint64) -> bytes, uint64:
call:
    proto 2 2
    intc_0 // 0
    frame_dig -1
    pushint 2 // 2
    ==
    assert // insufficient arguments
    txna ApplicationArgs 1
    btoi
    intc_1 // 1
    frame_dig -2
    pushbytes 0x636972636c655f61726561
    ==
    bz call_else_body@2
    frame_dig 1
    callsub circle_area
    callsub itoa
    frame_bury 0
    b call_after_if_else@9

call_else_body@2:
    frame_dig -2
    pushbytes 0x636972636c655f63697263756d666572656e6365
    ==
    bz call_else_body@4
    frame_dig 1
    callsub circle_circumference
    callsub itoa
    frame_bury 0
    b call_after_if_else@8

call_else_body@4:
    frame_dig -2
    pushbytes 0x636972636c655f7265706f7274
    ==
    bz call_else_body@6
    frame_dig 1
    dup
    callsub circle_area
    dig 1
    callsub circle_circumference
    uncover 2
    callsub itoa
    pushbytes 0x417070726f78696d617465206172656120616e642063697263756d666572656e6365206f6620636972636c6520776974682072616469757320
    swap
    concat
    pushbytes 0x203d20
    concat
    uncover 2
    callsub itoa
    concat
    pushbytes 0x2c20
    concat
    swap
    callsub itoa
    concat
    frame_bury 0
    b call_after_if_else@8

call_else_body@6:
    intc_0 // 0
    frame_bury 2
    pushbytes 0x756e6b6e6f776e206d6574686f64206e616d65
    frame_bury 0

call_after_if_else@8:

call_after_if_else@9:
    frame_dig 0
    frame_dig 2
    frame_bury 1
    frame_bury 0
    retsub


// test_cases.simplish.contract.circle_area(radius: uint64) -> uint64:
circle_area:
    proto 1 1
    frame_dig -1
    pushint 2 // 2
    exp
    pushint 314159 // 314159
    *
    intc 4 // 100000
    /
    retsub


// test_cases.simplish.contract.circle_circumference(radius: uint64) -> uint64:
circle_circumference:
    proto 1 1
    frame_dig -1
    pushint 628318 // 628318
    *
    intc 4 // 100000
    /
    retsub


// test_cases.simplish.contract.Simplish.increment_counter() -> void:
increment_counter:
    proto 0 0
    pushbytes "Incrementing counter!"
    log
    callsub test_cases.simplish.base_class.CallCounter.increment_counter
    retsub


// test_cases.simplish.base_class.CallCounter.increment_counter() -> void:
test_cases.simplish.base_class.CallCounter.increment_counter:
    proto 0 0
    intc_0 // 0
    bytec_0 // "counter"
    app_global_get_ex
    assert // check self.counter exists
    intc_1 // 1
    +
    bytec_0 // "counter"
    swap
    app_global_put
    retsub


// test_cases.simplish.base_class.CallCounter.__init__() -> void:
__init__:
    proto 0 0
    bytec_0 // "counter"
    intc_0 // 0
    app_global_put
    retsub
