#pragma version 10
#pragma typetrack false

// test_cases.simplish.contract.Simplish.__algopy_entrypoint_with_init() -> uint64:
main:
    intcblock 0 1 100000 2 314159 628318
    bytecblock "counter" 0x30313233343536373839
    intc_0 // 0
    dupn 2
    pushbytes ""
    dupn 4
    txn ApplicationID
    bnz after_if_else@2
    bytec_0 // "counter"
    intc_0 // 0
    app_global_put

after_if_else@2:
    txn ApplicationID
    bnz after_if_else@5

if_body@4:
    intc_1 // 1
    return

after_if_else@5:
    txn OnCompletion
    dup
    bury 4
    txn Sender
    bury 7
    pushint 4 // UpdateApplication
    ==
    bnz if_body@7
    dig 2
    pushint 5 // DeleteApplication
    ==
    bz after_if_else@10

if_body@7:
    dig 2
    pushint 5 // DeleteApplication
    ==
    bz after_if_else@9
    intc_0 // 0
    bytec_0 // "counter"
    app_global_get_ex
    assert // check self.counter exists
    callsub itoa
    pushbytes 0x4920776173207573656420
    swap
    concat
    pushbytes 0x2074696d65287329206265666f726520492064696564
    concat
    log

after_if_else@9:
    global CreatorAddress
    dig 6
    ==
    return

after_if_else@10:
    dig 2
    intc_1 // OptIn
    ==
    bz after_if_else@14
    txn NumAppArgs
    bz if_body@4
    intc_0 // 0
    pushbytes "name"
    txna ApplicationArgs 0
    app_local_put
    b if_body@4

after_if_else@14:
    dig 2
    bz after_if_else@16
    err

after_if_else@16:
    txn NumAppArgs
    dup
    bury 5
    bz else_body@18
    txna ApplicationArgs 0
    dup
    bury 9
    dig 4
    intc_3 // 2
    ==
    assert // insufficient arguments
    txna ApplicationArgs 1
    btoi
    bury 3
    intc_1 // 1
    bury 2
    pushbytes 0x636972636c655f61726561
    ==
    bz else_body@31
    dig 1
    intc_3 // 2
    exp
    intc 4 // 314159
    *
    intc_2 // 100000
    /
    callsub itoa

after_if_else@38:
    dig 1
    swap
    bury 8

after_if_else@25:
    dig 7
    log
    pushbytes "Incrementing counter!"
    log
    intc_0 // 0
    bytec_0 // "counter"
    app_global_get_ex
    assert // check self.counter exists
    intc_1 // 1
    +
    bytec_0 // "counter"
    swap
    app_global_put
    return

else_body@31:
    dig 7
    pushbytes 0x636972636c655f63697263756d666572656e6365
    ==
    bz else_body@33
    dig 1
    intc 5 // 628318
    *
    intc_2 // 100000
    /
    callsub itoa
    b after_if_else@38

else_body@33:
    dig 7
    pushbytes 0x636972636c655f7265706f7274
    ==
    bz else_body@35
    dig 1
    dup
    intc_3 // 2
    exp
    intc 4 // 314159
    *
    intc_2 // 100000
    /
    dig 1
    intc 5 // 628318
    *
    intc_2 // 100000
    /
    uncover 2
    callsub itoa
    pushbytes 0x417070726f78696d617465206172656120616e642063697263756d666572656e6365206f6620636972636c6520776974682072616469757320
    swap
    concat
    pushbytes 0x203d20
    concat
    uncover 2
    callsub itoa
    concat
    pushbytes 0x2c20
    concat
    swap
    callsub itoa
    concat
    b after_if_else@38

else_body@35:
    intc_0 // 0
    bury 1
    pushbytes 0x756e6b6e6f776e206d6574686f64206e616d65
    b after_if_else@38

else_body@18:
    txn NumAssets
    intc_1 // 1
    ==
    bz else_body@23
    dig 5
    intc_0 // 0
    asset_holding_get AssetBalance
    swap
    bury 6
    bnz else_body@21
    pushbytes 0x596f7520646f206e6f74206861766520616e79206f6620746865206173736574
    bury 7

after_if_else@22:
    intc_1 // 1
    b after_if_else@25

else_body@21:
    dig 4
    callsub itoa
    pushbytes 0x596f7520686176652061737365742062616c616e63653a20
    swap
    concat
    bury 7
    b after_if_else@22

else_body@23:
    pushbytes 0x6e6f7420656e6f756768206170702061726773206f7220666f726569676e20617373657473
    bury 7
    intc_0 // 0
    b after_if_else@25


// test_cases.simplish.contract.itoa(i: uint64) -> bytes:
itoa:
    proto 1 1
    frame_dig -1
    pushint 10 // 10
    <
    bz itoa_after_if_else@2
    bytec_1 // 0x30313233343536373839
    frame_dig -1
    intc_1 // 1
    extract3
    retsub

itoa_after_if_else@2:
    frame_dig -1
    pushint 10 // 10
    /
    callsub itoa
    frame_dig -1
    pushint 10 // 10
    %
    bytec_1 // 0x30313233343536373839
    swap
    intc_1 // 1
    extract3
    concat
    retsub
