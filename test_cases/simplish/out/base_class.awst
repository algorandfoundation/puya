abstract contract CallCounter
{
  globals {
    ['counter']: uint64
  }
  locals {
    ['name']: bytes
  }
  
  constructor()
  {
    GlobalState['counter']: uint64 = 0u
  }
  
  subroutine increment_counter(): void
  {
    GlobalState['counter'] += 1u
  }
  
  subroutine set_sender_nickname(nickname: bytes): void
  {
    LocalState[<bound method BytesConstant.accept of BytesConstant(source_location=simplish/base_class.py:9:8-17, wtype=WType(name='state_key', scalar_type=<AVMType.bytes: 1>, bounds=SizeBounds(min_size=0, max_size=64), ephemeral=False, immutable=True), value=b'name', encoding=<BytesEncoding.utf8: 'utf8'>)>, 0u]: bytes = nickname
  }
}