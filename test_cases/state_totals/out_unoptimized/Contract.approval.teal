#pragma version 11
#pragma typetrack false

// algopy.arc4.ARC4Contract.approval_program() -> uint64:
main:
    b main_block@0

main_block@0:
    txn ApplicationID
    bnz main_after_if_else@2
    b main_call___init__@1

main_call___init__@1:
    callsub __init__
    b main_after_if_else@2

main_after_if_else@2:
    b main_block@3

main_block@3:
    // state_totals/contract.py:6-9
    // class Contract(
    //     arc4.ARC4Contract,
    //     state_totals=StateTotals(local_bytes=1, global_uints=GLOBAL_UINTS),
    // ):
    txn NumAppArgs
    pushint 0 // 0
    !=
    bz main_create@5
    b main_abi_routing@4

main_abi_routing@4:
    b main_after_if_else@6

main_after_if_else@6:
    // state_totals/contract.py:6-9
    // class Contract(
    //     arc4.ARC4Contract,
    //     state_totals=StateTotals(local_bytes=1, global_uints=GLOBAL_UINTS),
    // ):
    err

main_create@5:
    // state_totals/contract.py:14
    // @arc4.baremethod(create="require")
    txn OnCompletion
    pushint 0 // NoOp
    ==
    txn ApplicationID
    pushint 0 // 0
    ==
    &&
    assert // OnCompletion must be NoOp && can only call when creating
    callsub create
    pushint 1 // 1
    return


// test_cases.state_totals.contract.Contract.__init__() -> void:
__init__:
    b __init___block@0

__init___block@0:
    retsub


// test_cases.state_totals.contract.Contract.create() -> void:
create:
    b create_block@0

create_block@0:
    retsub
