// Op                                              //                                               Op Description Stack (out)    X stack                                                                                           Source code                                                                                       Source line

#pragma version 10

// test_cases.state_totals.contract.Contract.approval_program() -> uint64:
main_block@0:
    txn NumAppArgs                                 //                                                              {txn}                                                                                                            class Contract(\narc4.ARC4Contract,\nstate_totals=StateTotals(local_bytes=1, global_uints=3),\n): state_totals/contract.py:4-7
    //                                             virtual: store tmp%0#0 to l-stack (no copy)      tmp%0#0                       class Contract(\narc4.ARC4Contract,\nstate_totals=StateTotals(local_bytes=1, global_uints=3),\n): state_totals/contract.py:4-7
    //                                             virtual: load tmp%0#0 from l-stack (no copy)     tmp%0#0                       class Contract(\narc4.ARC4Contract,\nstate_totals=StateTotals(local_bytes=1, global_uints=3),\n): state_totals/contract.py:4-7
    bz main_bare_routing@4                         //                                                                                                                                                                               class Contract(\narc4.ARC4Contract,\nstate_totals=StateTotals(local_bytes=1, global_uints=3),\n): state_totals/contract.py:4-7
    // Implicit fall through to main_abi_routing@1 //                                                                                                                                                                               class Contract(\narc4.ARC4Contract,\nstate_totals=StateTotals(local_bytes=1, global_uints=3),\n): state_totals/contract.py:4-7

main_abi_routing@1:
    txna ApplicationArgs 0                         //                                                              {txna}                                                                                                           class Contract(\narc4.ARC4Contract,\nstate_totals=StateTotals(local_bytes=1, global_uints=3),\n): state_totals/contract.py:4-7
    //                                             virtual: store tmp%1#0 to l-stack (no copy)      tmp%1#0                       class Contract(\narc4.ARC4Contract,\nstate_totals=StateTotals(local_bytes=1, global_uints=3),\n): state_totals/contract.py:4-7
    //                                             virtual: load tmp%1#0 from l-stack (no copy)     tmp%1#0                       class Contract(\narc4.ARC4Contract,\nstate_totals=StateTotals(local_bytes=1, global_uints=3),\n): state_totals/contract.py:4-7
    match                                          //                                                                                                                                                                               class Contract(\narc4.ARC4Contract,\nstate_totals=StateTotals(local_bytes=1, global_uints=3),\n): state_totals/contract.py:4-7
    err // reject transaction                      //                                                                                                                                                                               class Contract(\narc4.ARC4Contract,\nstate_totals=StateTotals(local_bytes=1, global_uints=3),\n): state_totals/contract.py:4-7

main_bare_routing@4:
    txn OnCompletion                               //                                                              {txn}                                                                                                            class Contract(\narc4.ARC4Contract,\nstate_totals=StateTotals(local_bytes=1, global_uints=3),\n): state_totals/contract.py:4-7
    //                                             virtual: store tmp%2#0 to l-stack (no copy)      tmp%2#0                       class Contract(\narc4.ARC4Contract,\nstate_totals=StateTotals(local_bytes=1, global_uints=3),\n): state_totals/contract.py:4-7
    //                                             virtual: load tmp%2#0 from l-stack (no copy)     tmp%2#0                       class Contract(\narc4.ARC4Contract,\nstate_totals=StateTotals(local_bytes=1, global_uints=3),\n): state_totals/contract.py:4-7
    !                                              //                                                              {!}                                                                                                              class Contract(\narc4.ARC4Contract,\nstate_totals=StateTotals(local_bytes=1, global_uints=3),\n): state_totals/contract.py:4-7
    //                                             virtual: store not%tmp%2#0 to l-stack (no copy)  not%tmp%2#0                   class Contract(\narc4.ARC4Contract,\nstate_totals=StateTotals(local_bytes=1, global_uints=3),\n): state_totals/contract.py:4-7
    //                                             virtual: load not%tmp%2#0 from l-stack (no copy) not%tmp%2#0                   class Contract(\narc4.ARC4Contract,\nstate_totals=StateTotals(local_bytes=1, global_uints=3),\n): state_totals/contract.py:4-7
    assert // reject transaction                   //                                                                                                                                                                               class Contract(\narc4.ARC4Contract,\nstate_totals=StateTotals(local_bytes=1, global_uints=3),\n): state_totals/contract.py:4-7
    txn ApplicationID                              //                                                              {txn}                                                                                                            arc4.baremethod(create=True)                                                                      state_totals/contract.py:12
    //                                             virtual: store tmp%3#0 to l-stack (no copy)      tmp%3#0                       arc4.baremethod(create=True)                                                                      state_totals/contract.py:12
    //                                             virtual: load tmp%3#0 from l-stack (no copy)     tmp%3#0                       arc4.baremethod(create=True)                                                                      state_totals/contract.py:12
    !                                              //                                                              {!}                                                                                                              arc4.baremethod(create=True)                                                                      state_totals/contract.py:12
    //                                             virtual: store tmp%4#0 to l-stack (no copy)      tmp%4#0                       arc4.baremethod(create=True)                                                                      state_totals/contract.py:12
    //                                             virtual: load tmp%4#0 from l-stack (no copy)     tmp%4#0                       arc4.baremethod(create=True)                                                                      state_totals/contract.py:12
    assert // is creating                          //                                                                                                                                                                               arc4.baremethod(create=True)                                                                      state_totals/contract.py:12
    callsub create                                 //                                                                                                                                                                               @arc4.baremethod(create=True)\ndef create(self) -> None:                                          state_totals/contract.py:12-13
    int 1                                          //                                                              1                                                                                                                @arc4.baremethod(create=True)\ndef create(self) -> None:                                          state_totals/contract.py:12-13
    return                                         //                                                                                                                                                                               @arc4.baremethod(create=True)\ndef create(self) -> None:                                          state_totals/contract.py:12-13


// test_cases.state_totals.contract.Contract.create() -> void:
create:
    proto 0 0                                      //                                                                                                                                                                               @arc4.baremethod(create=True)\ndef create(self) -> None:                                          state_totals/contract.py:12-13

create_block@0:
    retsub                                         //

