{
    "name": "Logger",
    "structs": {
        "LogMessage": [
            {
                "name": "level",
                "type": "uint64"
            },
            {
                "name": "message",
                "type": "string"
            }
        ],
        "LogStruct": [
            {
                "name": "level",
                "type": "uint64"
            },
            {
                "name": "message",
                "type": "string"
            }
        ]
    },
    "methods": [
        {
            "name": "is_a_b",
            "args": [
                {
                    "type": "byte[]",
                    "name": "a"
                },
                {
                    "type": "byte[]",
                    "name": "b"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "echo",
            "args": [
                {
                    "type": "string",
                    "name": "value"
                }
            ],
            "returns": {
                "type": "string"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "no_args",
            "args": [],
            "returns": {
                "type": "uint64"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "log",
            "args": [
                {
                    "type": "uint64",
                    "name": "value"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "log",
            "args": [
                {
                    "type": "uint512",
                    "name": "value"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "log",
            "args": [
                {
                    "type": "string",
                    "name": "value"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "log",
            "args": [
                {
                    "type": "bool",
                    "name": "value"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "log",
            "args": [
                {
                    "type": "byte[]",
                    "name": "value"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "log",
            "args": [
                {
                    "type": "uint64",
                    "name": "asset"
                },
                {
                    "type": "address",
                    "name": "account"
                },
                {
                    "type": "uint64",
                    "name": "app"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "log",
            "args": [
                {
                    "type": "address",
                    "name": "address"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "echo_native_string",
            "args": [
                {
                    "type": "string",
                    "name": "value"
                }
            ],
            "returns": {
                "type": "string"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "echo_native_bytes",
            "args": [
                {
                    "type": "byte[]",
                    "name": "value"
                }
            ],
            "returns": {
                "type": "byte[]"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "echo_native_uint64",
            "args": [
                {
                    "type": "uint64",
                    "name": "value"
                }
            ],
            "returns": {
                "type": "uint64"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "echo_native_biguint",
            "args": [
                {
                    "type": "uint512",
                    "name": "value"
                }
            ],
            "returns": {
                "type": "uint512"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "echo_resource_by_index",
            "args": [
                {
                    "type": "asset",
                    "name": "asset"
                },
                {
                    "type": "application",
                    "name": "app"
                },
                {
                    "type": "account",
                    "name": "acc"
                }
            ],
            "returns": {
                "type": "(uint64,uint64,address)"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "echo_resource_by_value",
            "args": [
                {
                    "type": "uint64",
                    "name": "asset"
                },
                {
                    "type": "uint64",
                    "name": "app"
                },
                {
                    "type": "address",
                    "name": "acc"
                }
            ],
            "returns": {
                "type": "(uint64,uint64,address)"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "echo_native_tuple",
            "args": [
                {
                    "type": "string",
                    "name": "s"
                },
                {
                    "type": "byte[]",
                    "name": "b"
                },
                {
                    "type": "uint64",
                    "name": "u"
                },
                {
                    "type": "uint512",
                    "name": "bu"
                }
            ],
            "returns": {
                "type": "(string,byte[],uint64,uint512)"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "echo_nested_tuple",
            "args": [
                {
                    "type": "((string,string),(uint64,uint64,byte[]))",
                    "name": "tuple_of_tuples"
                }
            ],
            "returns": {
                "type": "((string,string),(uint64,uint64,byte[]))"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "return_args_after_14th",
            "args": [
                {
                    "type": "uint64",
                    "name": "_a1"
                },
                {
                    "type": "uint64",
                    "name": "_a2"
                },
                {
                    "type": "uint64",
                    "name": "_a3"
                },
                {
                    "type": "uint64",
                    "name": "_a4"
                },
                {
                    "type": "uint64",
                    "name": "_a5"
                },
                {
                    "type": "uint64",
                    "name": "_a6"
                },
                {
                    "type": "uint64",
                    "name": "_a7"
                },
                {
                    "type": "uint64",
                    "name": "_a8"
                },
                {
                    "type": "uint64",
                    "name": "_a9"
                },
                {
                    "type": "uint64",
                    "name": "_a10"
                },
                {
                    "type": "uint64",
                    "name": "_a11"
                },
                {
                    "type": "uint64",
                    "name": "_a12"
                },
                {
                    "type": "uint64",
                    "name": "_a13"
                },
                {
                    "type": "uint64",
                    "name": "_a14"
                },
                {
                    "type": "uint8",
                    "name": "a15"
                },
                {
                    "type": "uint8",
                    "name": "a16"
                },
                {
                    "type": "uint8",
                    "name": "a17"
                },
                {
                    "type": "uint8",
                    "name": "a18"
                },
                {
                    "type": "(uint8,uint8,uint8,uint8)",
                    "name": "a19"
                },
                {
                    "type": "uint8",
                    "name": "a20"
                }
            ],
            "returns": {
                "type": "byte[]"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "logs_are_equal",
            "args": [
                {
                    "type": "(uint64,string)",
                    "struct": "LogMessage",
                    "name": "log_1"
                },
                {
                    "type": "(uint64,string)",
                    "struct": "LogMessage",
                    "name": "log_2"
                }
            ],
            "returns": {
                "type": "bool"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "echo_log_struct",
            "args": [
                {
                    "type": "(uint64,string)",
                    "struct": "LogStruct",
                    "name": "log"
                }
            ],
            "returns": {
                "type": "(uint64,string)",
                "struct": "LogStruct"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        }
    ],
    "arcs": [
        22,
        28
    ],
    "networks": {},
    "state": {
        "schema": {
            "global": {
                "ints": 0,
                "bytes": 0
            },
            "local": {
                "ints": 0,
                "bytes": 0
            }
        },
        "keys": {
            "global": {},
            "local": {},
            "box": {}
        },
        "maps": {
            "global": {},
            "local": {},
            "box": {}
        }
    },
    "bareActions": {
        "create": [
            "NoOp"
        ],
        "call": []
    },
    "sourceInfo": {
        "approval": {
            "sourceInfo": [
                {
                    "pc": [
                        43
                    ],
                    "errorMessage": "OnCompletion must be NoOp"
                },
                {
                    "pc": [
                        226
                    ],
                    "errorMessage": "OnCompletion must be NoOp && can only call when creating"
                },
                {
                    "pc": [
                        266
                    ],
                    "errorMessage": "a is not a"
                },
                {
                    "pc": [
                        438
                    ],
                    "errorMessage": "application exists"
                },
                {
                    "pc": [
                        431
                    ],
                    "errorMessage": "asset exists"
                },
                {
                    "pc": [
                        271
                    ],
                    "errorMessage": "b is not b"
                },
                {
                    "pc": [
                        628
                    ],
                    "errorMessage": "expected account to be passed by index"
                },
                {
                    "pc": [
                        692
                    ],
                    "errorMessage": "expected account to be passed by value"
                },
                {
                    "pc": [
                        618
                    ],
                    "errorMessage": "expected application to be passed by index"
                },
                {
                    "pc": [
                        686
                    ],
                    "errorMessage": "expected application to be passed by value"
                },
                {
                    "pc": [
                        608
                    ],
                    "errorMessage": "expected asset to be passed by index"
                },
                {
                    "pc": [
                        678
                    ],
                    "errorMessage": "expected asset to be passed by value"
                },
                {
                    "pc": [
                        234,
                        250,
                        279,
                        338,
                        386,
                        460,
                        493,
                        713,
                        729,
                        882,
                        904,
                        948,
                        1318,
                        1356,
                        1415
                    ],
                    "errorMessage": "invalid array length header"
                },
                {
                    "pc": [
                        359
                    ],
                    "errorMessage": "invalid number of bytes for arc4.bool"
                },
                {
                    "pc": [
                        241,
                        257,
                        286,
                        345,
                        393,
                        467,
                        500,
                        720,
                        736
                    ],
                    "errorMessage": "invalid number of bytes for arc4.dynamic_array<arc4.uint8>"
                },
                {
                    "pc": [
                        417,
                        451,
                        670
                    ],
                    "errorMessage": "invalid number of bytes for arc4.static_array<arc4.uint8, 32>"
                },
                {
                    "pc": [
                        958
                    ],
                    "errorMessage": "invalid number of bytes for arc4.tuple<arc4.tuple<arc4.dynamic_array<arc4.uint8>,arc4.dynamic_array<arc4.uint8>>,arc4.tuple<arc4.uint64,arc4.uint64,arc4.dynamic_array<arc4.uint8>>>"
                },
                {
                    "pc": [
                        1194,
                        1206,
                        1218,
                        1230,
                        1242,
                        1254
                    ],
                    "errorMessage": "invalid number of bytes for arc4.tuple<arc4.uint8,arc4.uint8,arc4.uint8,arc4.uint8,arc4.tuple<arc4.uint8,arc4.uint8,arc4.uint8,arc4.uint8>,arc4.uint8>"
                },
                {
                    "pc": [
                        329,
                        547,
                        757
                    ],
                    "errorMessage": "invalid number of bytes for arc4.uint512"
                },
                {
                    "pc": [
                        317,
                        407,
                        425,
                        528,
                        651,
                        660,
                        747,
                        1094,
                        1101,
                        1108,
                        1115,
                        1122,
                        1129,
                        1136,
                        1143,
                        1150,
                        1157,
                        1164,
                        1171,
                        1178,
                        1185
                    ],
                    "errorMessage": "invalid number of bytes for arc4.uint64"
                },
                {
                    "pc": [
                        573,
                        584,
                        595
                    ],
                    "errorMessage": "invalid number of bytes for arc4.uint8"
                },
                {
                    "pc": [
                        1325,
                        1363
                    ],
                    "errorMessage": "invalid number of bytes for test_cases.typed_abi_call.logger.LogMessage"
                },
                {
                    "pc": [
                        1420
                    ],
                    "errorMessage": "invalid number of bytes for test_cases.typed_abi_call.logger.LogStruct"
                },
                {
                    "pc": [
                        849
                    ],
                    "errorMessage": "invalid tail pointer at index 0 of (((len+utf8[]),(len+utf8[])),(uint64,uint64,(len+uint8[])))"
                },
                {
                    "pc": [
                        868
                    ],
                    "errorMessage": "invalid tail pointer at index 0 of ((len+utf8[]),(len+utf8[]))"
                },
                {
                    "pc": [
                        918
                    ],
                    "errorMessage": "invalid tail pointer at index 1 of (((len+utf8[]),(len+utf8[])),(uint64,uint64,(len+uint8[])))"
                },
                {
                    "pc": [
                        891
                    ],
                    "errorMessage": "invalid tail pointer at index 1 of ((len+utf8[]),(len+utf8[]))"
                },
                {
                    "pc": [
                        1305,
                        1343,
                        1403
                    ],
                    "errorMessage": "invalid tail pointer at index 1 of (uint64,(len+utf8[]))"
                },
                {
                    "pc": [
                        937
                    ],
                    "errorMessage": "invalid tail pointer at index 2 of (uint64,uint64,(len+uint8[]))"
                },
                {
                    "pc": [
                        844,
                        863,
                        932,
                        1300,
                        1338,
                        1398
                    ],
                    "errorMessage": "invalid tuple encoding"
                },
                {
                    "pc": [
                        292,
                        984
                    ],
                    "errorMessage": "max array length exceeded"
                },
                {
                    "pc": [
                        555,
                        820
                    ],
                    "errorMessage": "overflow"
                }
            ],
            "pcOffsetMethod": "none"
        },
        "clear": {
            "sourceInfo": [],
            "pcOffsetMethod": "none"
        }
    },
    "source": {
        "approval": "",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDExCiNwcmFnbWEgdHlwZXRyYWNrIGZhbHNlCgovLyBhbGdvcHkuYXJjNC5BUkM0Q29udHJhY3QuY2xlYXJfc3RhdGVfcHJvZ3JhbSgpIC0+IHVpbnQ2NDoKbWFpbjoKICAgIHB1c2hpbnQgMSAvLyAxCiAgICByZXR1cm4K"
    },
    "byteCode": {
        "approval": "CyAEAQgAAiYFBBUffHUGZWNobzogCAAGZWNobzogAQECAAQxG0EAszEZFEQxGESCFQTHchK8BJv4GRMEuGLuGQQ8EFjZBGr0WTAEtLQzTgRu7X7DBLUA4REERrUPrwQEN7F+BEpETHcEJlnoGASp+2zxBNjMNjsE1sKsfwRIFC1eBBbgORkEqycc5AS6C0OBBN3QcYUE3E8ZkjYaAI4VABwASQABAG0AeACEAJcAtADHAPIA/gEfAUABUgFtAbsB+wJ+A3cERgSoAIAMFR98dQAAAAAAAAAqsCJDMRkUMRgUEEQiQzYaAUkkWSUISwEVEkRXAgA2GgJJJFklCEsBFRJEVwIATIABYRJEgAFiEkQiQzYaAUkkWSUISwEVEkRXAgAqTFBJVwIAFRZXBgJcAChMULAiQzYaAUkVIxJEsCJDNhoBSRWBQBJEsCJDNhoBSSRZJQhLARUSRFcCALAiQzYaAUkVIhJEJFOCAgVGYWxzZQRUcnVlTwJNsCJDNhoBSSRZJQhLARUSRFcCALAiQzYaAUkVIxJEFzYaAkkVgSASRDYaA0kVIxJEF08CcQRETwJQTHIIRFCwIkM2GgFJFYEgEkSwIkM2GgFJJFklCEsBFRJEVwIAKUxQSRUWVwYCTFAoTFCwIkM2GgFJJFklCEsBFRJEVwIAKUxQSRUWVwYCTFAoTFCwIkM2GgFJFSMSRBciCBYoTFCwIkM2GgFJFYFAEkQroEkVgUAORIFAr6soTFCwIkM2GgFJFSISRBfAMDYaAkkVIhJEF8AyNhoDSRUiEkQXwBw2GgEXwDBLAxJENhoCF8AySwISRDYaAxfAHEsBEkRPAhZPAhZQTFAoTFCwIkM2GgFJFSMSRBc2GgJJFSMSRBc2GgNJFYEgEkQ2GgEXSwMSRDYaAhdLAhJESTYaAxJETwIWTwIWUExQKExQsCJDNhoBSSRZJQhLARUSRFcCADYaAkkkWSUISwEVEkRXAgA2GgNJFSMSRBc2GgRJFYFAEkQpTwRQKU8EUE8DIghPAyugSwMVFlcGAk8EUEkVgUwISwQVFlcGAk8FUEwWVwYCgAIATExQTwQWUEsDFYFADkSBQK9PBKtQTwJQTFAoTFCwIkM2GgFJJFlJgQQSREsBJVlLAk8CSwJSSSRZSYEEEkRLASVZSwJPAksCUkkkWYEGCEsCSwESREsDFU8ETwRPAlJJJFklCE8CCIEECEsDSwESREsEFU8FTwVLAlJJgRBZSYESEkRLARVLAk4CUkkkWYEUCE8ECE8DEkRPA1cCAEsCJFtPAlcCAClPA1BPBFcCACpMUElXAgAVFlcGAlwATwMiCE8EI1siCBYpTwVQSwQVFlcGAk8FUEkVgQQIFlcGAicETFBMUE8EUEkVgQQITwQWTwRQSwMVFlcGAk8EUEyAAgASUExQTBZXBgInBExQTwJQTFAoTFCwIkM2GgEVIxJENhoCFSMSRDYaAxUjEkQ2GgQVIxJENhoFFSMSRDYaBhUjEkQ2GgcVIxJENhoIFSMSRDYaCRUjEkQ2GgoVIxJENhoLFSMSRDYaDBUjEkQ2Gg0VIxJENhoOFSMSRDYaD0kVgQkSRFcAATYaD0kVgQkSRFcBATYaD0kVgQkSRFcCATYaD0kVgQkSRFcDATYaD0kVgQkSRFcEBDYaD0kVgQkSRFcIAU8FTwVQTwRQTwNQTwJQTFA2Gg9LARJESRUWVwYCTFAoTFCwIkM2GgFJI1lJgQoSREsBFUsCTwJLAlJJJFmBDAhPAhJETCRbTFcCADYaAkkjWUmBChJESwEVSwJPAksCUkkkWYEMCE8CEkRMJFtMVwIATwNPAhJOAhIQgAEAJE8CVChMULAiQzYaAUkjWUmBChJESwEVSwJPAksCUiRZgQwIEkQoTFCwIkM=",
        "clear": "C4EBQw=="
    },
    "compilerInfo": {
        "compiler": "puya",
        "compilerVersion": {
            "major": 99,
            "minor": 99,
            "patch": 99
        }
    },
    "events": [],
    "templateVariables": {}
}