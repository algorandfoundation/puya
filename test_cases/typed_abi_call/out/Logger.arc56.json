{
    "name": "Logger",
    "structs": {
        "LogMessage": [
            {
                "name": "level",
                "type": "uint64"
            },
            {
                "name": "message",
                "type": "string"
            }
        ],
        "LogStruct": [
            {
                "name": "level",
                "type": "uint64"
            },
            {
                "name": "message",
                "type": "string"
            }
        ]
    },
    "methods": [
        {
            "name": "is_a_b",
            "args": [
                {
                    "type": "byte[]",
                    "name": "a"
                },
                {
                    "type": "byte[]",
                    "name": "b"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "echo",
            "args": [
                {
                    "type": "string",
                    "name": "value"
                }
            ],
            "returns": {
                "type": "string"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "no_args",
            "args": [],
            "returns": {
                "type": "uint64"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "log",
            "args": [
                {
                    "type": "uint64",
                    "name": "value"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "log",
            "args": [
                {
                    "type": "uint512",
                    "name": "value"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "log",
            "args": [
                {
                    "type": "string",
                    "name": "value"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "log",
            "args": [
                {
                    "type": "bool",
                    "name": "value"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "log",
            "args": [
                {
                    "type": "byte[]",
                    "name": "value"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "log",
            "args": [
                {
                    "type": "uint64",
                    "name": "asset"
                },
                {
                    "type": "address",
                    "name": "account"
                },
                {
                    "type": "uint64",
                    "name": "app"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "log",
            "args": [
                {
                    "type": "address",
                    "name": "address"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "echo_native_string",
            "args": [
                {
                    "type": "string",
                    "name": "value"
                }
            ],
            "returns": {
                "type": "string"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "echo_native_bytes",
            "args": [
                {
                    "type": "byte[]",
                    "name": "value"
                }
            ],
            "returns": {
                "type": "byte[]"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "echo_native_uint64",
            "args": [
                {
                    "type": "uint64",
                    "name": "value"
                }
            ],
            "returns": {
                "type": "uint64"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "echo_native_biguint",
            "args": [
                {
                    "type": "uint512",
                    "name": "value"
                }
            ],
            "returns": {
                "type": "uint512"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "echo_resource_by_index",
            "args": [
                {
                    "type": "asset",
                    "name": "asset"
                },
                {
                    "type": "application",
                    "name": "app"
                },
                {
                    "type": "account",
                    "name": "acc"
                }
            ],
            "returns": {
                "type": "(uint64,uint64,address)"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "echo_resource_by_value",
            "args": [
                {
                    "type": "uint64",
                    "name": "asset"
                },
                {
                    "type": "uint64",
                    "name": "app"
                },
                {
                    "type": "address",
                    "name": "acc"
                }
            ],
            "returns": {
                "type": "(uint64,uint64,address)"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "echo_native_tuple",
            "args": [
                {
                    "type": "string",
                    "name": "s"
                },
                {
                    "type": "byte[]",
                    "name": "b"
                },
                {
                    "type": "uint64",
                    "name": "u"
                },
                {
                    "type": "uint512",
                    "name": "bu"
                }
            ],
            "returns": {
                "type": "(string,byte[],uint64,uint512)"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "echo_nested_tuple",
            "args": [
                {
                    "type": "((string,string),(uint64,uint64,byte[]))",
                    "name": "tuple_of_tuples"
                }
            ],
            "returns": {
                "type": "((string,string),(uint64,uint64,byte[]))"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "return_args_after_14th",
            "args": [
                {
                    "type": "uint64",
                    "name": "_a1"
                },
                {
                    "type": "uint64",
                    "name": "_a2"
                },
                {
                    "type": "uint64",
                    "name": "_a3"
                },
                {
                    "type": "uint64",
                    "name": "_a4"
                },
                {
                    "type": "uint64",
                    "name": "_a5"
                },
                {
                    "type": "uint64",
                    "name": "_a6"
                },
                {
                    "type": "uint64",
                    "name": "_a7"
                },
                {
                    "type": "uint64",
                    "name": "_a8"
                },
                {
                    "type": "uint64",
                    "name": "_a9"
                },
                {
                    "type": "uint64",
                    "name": "_a10"
                },
                {
                    "type": "uint64",
                    "name": "_a11"
                },
                {
                    "type": "uint64",
                    "name": "_a12"
                },
                {
                    "type": "uint64",
                    "name": "_a13"
                },
                {
                    "type": "uint64",
                    "name": "_a14"
                },
                {
                    "type": "uint8",
                    "name": "a15"
                },
                {
                    "type": "uint8",
                    "name": "a16"
                },
                {
                    "type": "uint8",
                    "name": "a17"
                },
                {
                    "type": "uint8",
                    "name": "a18"
                },
                {
                    "type": "(uint8,uint8,uint8,uint8)",
                    "name": "a19"
                },
                {
                    "type": "uint8",
                    "name": "a20"
                }
            ],
            "returns": {
                "type": "byte[]"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "logs_are_equal",
            "args": [
                {
                    "type": "(uint64,string)",
                    "struct": "LogMessage",
                    "name": "log_1"
                },
                {
                    "type": "(uint64,string)",
                    "struct": "LogMessage",
                    "name": "log_2"
                }
            ],
            "returns": {
                "type": "bool"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "echo_log_struct",
            "args": [
                {
                    "type": "(uint64,string)",
                    "struct": "LogStruct",
                    "name": "log"
                }
            ],
            "returns": {
                "type": "(uint64,string)",
                "struct": "LogStruct"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        }
    ],
    "arcs": [
        22,
        28
    ],
    "networks": {},
    "state": {
        "schema": {
            "global": {
                "ints": 0,
                "bytes": 0
            },
            "local": {
                "ints": 0,
                "bytes": 0
            }
        },
        "keys": {
            "global": {},
            "local": {},
            "box": {}
        },
        "maps": {
            "global": {},
            "local": {},
            "box": {}
        }
    },
    "bareActions": {
        "create": [
            "NoOp"
        ],
        "call": []
    },
    "sourceInfo": {
        "approval": {
            "sourceInfo": [
                {
                    "pc": [
                        196,
                        211,
                        276,
                        370,
                        535,
                        627,
                        663,
                        706,
                        733,
                        754,
                        784,
                        814,
                        829,
                        852,
                        867,
                        882,
                        897,
                        912,
                        927,
                        951,
                        970
                    ],
                    "errorMessage": "OnCompletion is not NoOp"
                },
                {
                    "pc": [
                        1011
                    ],
                    "errorMessage": "a is not a"
                },
                {
                    "pc": [
                        1117
                    ],
                    "errorMessage": "application exists"
                },
                {
                    "pc": [
                        1109
                    ],
                    "errorMessage": "asset exists"
                },
                {
                    "pc": [
                        1018
                    ],
                    "errorMessage": "b is not b"
                },
                {
                    "pc": [
                        999
                    ],
                    "errorMessage": "can only call when creating"
                },
                {
                    "pc": [
                        199,
                        214,
                        279,
                        373,
                        538,
                        630,
                        666,
                        709,
                        736,
                        757,
                        787,
                        817,
                        832,
                        855,
                        870,
                        885,
                        900,
                        915,
                        930,
                        954,
                        973
                    ],
                    "errorMessage": "can only call when not creating"
                },
                {
                    "pc": [
                        1194
                    ],
                    "errorMessage": "expected account to be passed by index"
                },
                {
                    "pc": [
                        1227
                    ],
                    "errorMessage": "expected account to be passed by value"
                },
                {
                    "pc": [
                        1184
                    ],
                    "errorMessage": "expected application to be passed by index"
                },
                {
                    "pc": [
                        1220
                    ],
                    "errorMessage": "expected application to be passed by value"
                },
                {
                    "pc": [
                        1174
                    ],
                    "errorMessage": "expected asset to be passed by index"
                },
                {
                    "pc": [
                        1212
                    ],
                    "errorMessage": "expected asset to be passed by value"
                },
                {
                    "pc": [
                        1030,
                        1271
                    ],
                    "errorMessage": "max array length exceeded"
                },
                {
                    "pc": [
                        606,
                        720
                    ],
                    "errorMessage": "overflow"
                }
            ],
            "pcOffsetMethod": "none"
        },
        "clear": {
            "sourceInfo": [],
            "pcOffsetMethod": "none"
        }
    },
    "source": {
        "approval": "",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDEwCiNwcmFnbWEgdHlwZXRyYWNrIGZhbHNlCgovLyBhbGdvcHkuYXJjNC5BUkM0Q29udHJhY3QuY2xlYXJfc3RhdGVfcHJvZ3JhbSgpIC0+IHVpbnQ2NDoKbWFpbjoKICAgIHB1c2hpbnQgMSAvLyAxCiAgICByZXR1cm4K"
    },
    "byteCode": {
        "approval": "CiAEAQBACCYEBBUffHUGZWNobzogAgAECAAGZWNobzogMRtBA7mCFQTHchK8BJv4GRMEuGLuGQQ8EFjZBGr0WTAEtLQzTgRu7X7DBLUA4REERrUPrwQEN7F+BEpETHcEJlnoGASp+2zxBNjMNjsE1sKsfwRIFC1eBBbgORkEqycc5AS6C0OBBN3QcYUE3E8ZkjYaAI4VAwcC9ALcAs0CvgKvAqACkQJ6AmsCTQIvAhoB/wHUAbABVACvAFEAEAABADEZFEQxGEQoNhoBULAiQzEZFEQxGEQ2GgFJI1tLASVZSwIVTwNOAlJXAgA2GgJJI1tLASVZSwIVTwNOAlJXAgCIBDKAAQAjTwJUKExQsCJDMRkURDEYRDYaATYaAjYaAzYaBDYaBTYaBjYaBzYaCDYaCTYaCjYaCzYaDDYaDTYaDjYaD1cAATYaD1cBATYaD1cCATYaD1cDATYaD1cEBDYaD1cIAYgDqShMULAiQzEZFEQxGEQ2GgFJI1lLAYECWUsCTwJLAlJJI1lLAYECWUsCTwJLAlJXAgBLAhVPA08DTwJSSwMVTwRPBE8CUkkjW0sBVwgISwKBEFlLAxVPBE4CUlcCAIgDIEsEFRZXBgJPBVBJFYEECBZXBgIqTFBMUE8EUEkVgQQITwQWTwRQSwMVFlcGAk8EUEyAAgASUExQTBZXBgIqTFBPAlBMUChMULAiQzEZFEQxGEQ2GgFXAgA2GgJXAgA2GgMXNhoEiAKiSwMVFlcGAk8EUEkVgUwISwQVFlcGAk8FUEwWVwYCgAIATExQTwQWUEsDFSQORCSvTwSrUE8CUExQKExQsCJDMRkURDEYRDYaARc2GgIXNhoDiAItTwIWTwIWUExQKExQsCJDMRkURDEYRDYaARfAMDYaAhfAMjYaAxfAHIgB2k8CFk8CFlBMUChMULAiQzEZFEQxGEQ2GgGIAbRJFSQORCSvqyhMULAiQzEZFEQxGEQ2GgEXiAGQFihMULAiQzEZFEQxGEQ2GgFXAgCIAXFJFRZXBgJMUChMULAiQzEZFEQxGEQ2GgFXAgCIAUtJFRZXBgJMUChMULAiQzEZFEQxGEQ2GgGIASkiQzEZFEQxGEQ2GgEXNhoCNhoDF4gA/yJDMRkURDEYRDYaAYgA5iJDMRkURDEYRDYaAYgAviJDMRkURDEYRDYaAYgApSJDMRkURDEYRDYaAYgAjyJDMRkURDEYRDYaAYgAeSJDMRkURDEYRIAMFR98dQAAAAAAAAAqsCJDMRkURDEYRDYaAYgAOyhMULAiQzEZFEQxGEQ2GgFXAgA2GgJXAgCIAA0iQzEZQPzcMRgURCJDigIAi/6AAWESRIv/gAFiEkSJigEBi/9XAgArTFBJVwIAFRZXBgJcAImKAQCL/7CJigEAi/+wiYoBAIv/VwIAsImKAQCL/yNTggIFRmFsc2UEVHJ1ZU8CTbCJigEAi/9XAgCwiYoDAIv9cQREi/5Qi/9yCERQsImKAQCL/7CJigEBKYv/UImKAQEpi/9QiYoBAYv/IgiJigEBi/+AAQGgiYoDAzYaARfAMIv9EkQ2GgIXwDKL/hJENhoDF8Aci/8SRIv9i/6L/4mKAwM2GgEXi/0SRDYaAheL/hJEi/82GgMSRIv9i/6L/4mKBAQpi/xQKYv9UIv+IgiL/4ABAaCJigUFKYv7UIv8VwIAK0xQSVcCABUWVwYCXACL/SIIi/4XIggWKYv/UImKFAGL+ov7UIv8UIv9UIv+UIv/UDYaD0sBEkRJFRZXBgJMUImKBAGL/Iv+Eov9i/8SEIk=",
        "clear": "CoEBQw=="
    },
    "compilerInfo": {
        "compiler": "puya",
        "compilerVersion": {
            "major": 99,
            "minor": 99,
            "patch": 99
        }
    },
    "events": [],
    "templateVariables": {}
}