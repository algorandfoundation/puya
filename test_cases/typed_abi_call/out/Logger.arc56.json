{
    "name": "Logger",
    "structs": {
        "LogMessage": [
            {
                "name": "level",
                "type": "uint64"
            },
            {
                "name": "message",
                "type": "string"
            }
        ],
        "LogStruct": [
            {
                "name": "level",
                "type": "uint64"
            },
            {
                "name": "message",
                "type": "string"
            }
        ]
    },
    "methods": [
        {
            "name": "is_a_b",
            "args": [
                {
                    "type": "byte[]",
                    "name": "a"
                },
                {
                    "type": "byte[]",
                    "name": "b"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "echo",
            "args": [
                {
                    "type": "string",
                    "name": "value"
                }
            ],
            "returns": {
                "type": "string"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "no_args",
            "args": [],
            "returns": {
                "type": "uint64"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "log",
            "args": [
                {
                    "type": "uint64",
                    "name": "value"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "log",
            "args": [
                {
                    "type": "uint512",
                    "name": "value"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "log",
            "args": [
                {
                    "type": "string",
                    "name": "value"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "log",
            "args": [
                {
                    "type": "bool",
                    "name": "value"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "log",
            "args": [
                {
                    "type": "byte[]",
                    "name": "value"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "log",
            "args": [
                {
                    "type": "uint64",
                    "name": "asset"
                },
                {
                    "type": "address",
                    "name": "account"
                },
                {
                    "type": "uint64",
                    "name": "app"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "log",
            "args": [
                {
                    "type": "address",
                    "name": "address"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "echo_native_string",
            "args": [
                {
                    "type": "string",
                    "name": "value"
                }
            ],
            "returns": {
                "type": "string"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "echo_native_bytes",
            "args": [
                {
                    "type": "byte[]",
                    "name": "value"
                }
            ],
            "returns": {
                "type": "byte[]"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "echo_native_uint64",
            "args": [
                {
                    "type": "uint64",
                    "name": "value"
                }
            ],
            "returns": {
                "type": "uint64"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "echo_native_biguint",
            "args": [
                {
                    "type": "uint512",
                    "name": "value"
                }
            ],
            "returns": {
                "type": "uint512"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "echo_resource_by_index",
            "args": [
                {
                    "type": "asset",
                    "name": "asset"
                },
                {
                    "type": "application",
                    "name": "app"
                },
                {
                    "type": "account",
                    "name": "acc"
                }
            ],
            "returns": {
                "type": "(uint64,uint64,address)"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "echo_resource_by_value",
            "args": [
                {
                    "type": "uint64",
                    "name": "asset"
                },
                {
                    "type": "uint64",
                    "name": "app"
                },
                {
                    "type": "address",
                    "name": "acc"
                }
            ],
            "returns": {
                "type": "(uint64,uint64,address)"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "echo_native_tuple",
            "args": [
                {
                    "type": "string",
                    "name": "s"
                },
                {
                    "type": "byte[]",
                    "name": "b"
                },
                {
                    "type": "uint64",
                    "name": "u"
                },
                {
                    "type": "uint512",
                    "name": "bu"
                }
            ],
            "returns": {
                "type": "(string,byte[],uint64,uint512)"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "echo_nested_tuple",
            "args": [
                {
                    "type": "((string,string),(uint64,uint64,byte[]))",
                    "name": "tuple_of_tuples"
                }
            ],
            "returns": {
                "type": "((string,string),(uint64,uint64,byte[]))"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "return_args_after_14th",
            "args": [
                {
                    "type": "uint64",
                    "name": "_a1"
                },
                {
                    "type": "uint64",
                    "name": "_a2"
                },
                {
                    "type": "uint64",
                    "name": "_a3"
                },
                {
                    "type": "uint64",
                    "name": "_a4"
                },
                {
                    "type": "uint64",
                    "name": "_a5"
                },
                {
                    "type": "uint64",
                    "name": "_a6"
                },
                {
                    "type": "uint64",
                    "name": "_a7"
                },
                {
                    "type": "uint64",
                    "name": "_a8"
                },
                {
                    "type": "uint64",
                    "name": "_a9"
                },
                {
                    "type": "uint64",
                    "name": "_a10"
                },
                {
                    "type": "uint64",
                    "name": "_a11"
                },
                {
                    "type": "uint64",
                    "name": "_a12"
                },
                {
                    "type": "uint64",
                    "name": "_a13"
                },
                {
                    "type": "uint64",
                    "name": "_a14"
                },
                {
                    "type": "uint8",
                    "name": "a15"
                },
                {
                    "type": "uint8",
                    "name": "a16"
                },
                {
                    "type": "uint8",
                    "name": "a17"
                },
                {
                    "type": "uint8",
                    "name": "a18"
                },
                {
                    "type": "(uint8,uint8,uint8,uint8)",
                    "name": "a19"
                },
                {
                    "type": "uint8",
                    "name": "a20"
                }
            ],
            "returns": {
                "type": "byte[]"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "logs_are_equal",
            "args": [
                {
                    "type": "(uint64,string)",
                    "struct": "LogMessage",
                    "name": "log_1"
                },
                {
                    "type": "(uint64,string)",
                    "struct": "LogMessage",
                    "name": "log_2"
                }
            ],
            "returns": {
                "type": "bool"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "echo_log_struct",
            "args": [
                {
                    "type": "(uint64,string)",
                    "struct": "LogStruct",
                    "name": "log"
                }
            ],
            "returns": {
                "type": "(uint64,string)",
                "struct": "LogStruct"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        }
    ],
    "arcs": [
        22,
        28
    ],
    "networks": {},
    "state": {
        "schema": {
            "global": {
                "ints": 0,
                "bytes": 0
            },
            "local": {
                "ints": 0,
                "bytes": 0
            }
        },
        "keys": {
            "global": {},
            "local": {},
            "box": {}
        },
        "maps": {
            "global": {},
            "local": {},
            "box": {}
        }
    },
    "bareActions": {
        "create": [
            "NoOp"
        ],
        "call": []
    },
    "sourceInfo": {
        "approval": {
            "sourceInfo": [
                {
                    "pc": [
                        43
                    ],
                    "errorMessage": "OnCompletion must be NoOp"
                },
                {
                    "pc": [
                        226
                    ],
                    "errorMessage": "OnCompletion must be NoOp && can only call when creating"
                },
                {
                    "pc": [
                        266
                    ],
                    "errorMessage": "a is not a"
                },
                {
                    "pc": [
                        438
                    ],
                    "errorMessage": "application exists"
                },
                {
                    "pc": [
                        431
                    ],
                    "errorMessage": "asset exists"
                },
                {
                    "pc": [
                        271
                    ],
                    "errorMessage": "b is not b"
                },
                {
                    "pc": [
                        628
                    ],
                    "errorMessage": "expected account to be passed by index"
                },
                {
                    "pc": [
                        692
                    ],
                    "errorMessage": "expected account to be passed by value"
                },
                {
                    "pc": [
                        618
                    ],
                    "errorMessage": "expected application to be passed by index"
                },
                {
                    "pc": [
                        686
                    ],
                    "errorMessage": "expected application to be passed by value"
                },
                {
                    "pc": [
                        608
                    ],
                    "errorMessage": "expected asset to be passed by index"
                },
                {
                    "pc": [
                        678
                    ],
                    "errorMessage": "expected asset to be passed by value"
                },
                {
                    "pc": [
                        241,
                        257,
                        393,
                        500,
                        736
                    ],
                    "errorMessage": "invalid number of bytes for (len+uint8[])"
                },
                {
                    "pc": [
                        286,
                        345,
                        467,
                        720
                    ],
                    "errorMessage": "invalid number of bytes for (len+utf8[])"
                },
                {
                    "pc": [
                        1133,
                        1145,
                        1157,
                        1169,
                        1181,
                        1193
                    ],
                    "errorMessage": "invalid number of bytes for (uint8,uint8,uint8,uint8,(uint8,uint8,uint8,uint8),uint8)"
                },
                {
                    "pc": [
                        359
                    ],
                    "errorMessage": "invalid number of bytes for bool8"
                },
                {
                    "pc": [
                        329,
                        547,
                        757
                    ],
                    "errorMessage": "invalid number of bytes for uint512"
                },
                {
                    "pc": [
                        317,
                        407,
                        425,
                        528,
                        651,
                        660,
                        747,
                        1033,
                        1040,
                        1047,
                        1054,
                        1061,
                        1068,
                        1075,
                        1082,
                        1089,
                        1096,
                        1103,
                        1110,
                        1117,
                        1124
                    ],
                    "errorMessage": "invalid number of bytes for uint64"
                },
                {
                    "pc": [
                        573,
                        584,
                        595
                    ],
                    "errorMessage": "invalid number of bytes for uint8"
                },
                {
                    "pc": [
                        417,
                        451,
                        670
                    ],
                    "errorMessage": "invalid number of bytes for uint8[32]"
                },
                {
                    "pc": [
                        292,
                        923
                    ],
                    "errorMessage": "max array length exceeded"
                },
                {
                    "pc": [
                        555,
                        820
                    ],
                    "errorMessage": "overflow"
                }
            ],
            "pcOffsetMethod": "none"
        },
        "clear": {
            "sourceInfo": [],
            "pcOffsetMethod": "none"
        }
    },
    "source": {
        "approval": "",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDExCiNwcmFnbWEgdHlwZXRyYWNrIGZhbHNlCgovLyBhbGdvcHkuYXJjNC5BUkM0Q29udHJhY3QuY2xlYXJfc3RhdGVfcHJvZ3JhbSgpIC0+IHVpbnQ2NDoKbWFpbjoKICAgIHB1c2hpbnQgMSAvLyAxCiAgICByZXR1cm4K"
    },
    "byteCode": {
        "approval": "CyAEAQgAAiYFBBUffHUGZWNobzogCAAGZWNobzogAQECAAQxG0EAszEZFEQxGESCFQTHchK8BJv4GRMEuGLuGQQ8EFjZBGr0WTAEtLQzTgRu7X7DBLUA4REERrUPrwQEN7F+BEpETHcEJlnoGASp+2zxBNjMNjsE1sKsfwRIFC1eBBbgORkEqycc5AS6C0OBBN3QcYUE3E8ZkjYaAI4VABwASQABAG0AeACEAJcAtADHAPIA/gEfAUABUgFtAbsB+wJ+AzoECQRJAIAMFR98dQAAAAAAAAAqsCJDMRkUMRgUEEQiQzYaAUkkWSUISwEVEkRXAgA2GgJJJFklCEsBFRJEVwIATIABYRJEgAFiEkQiQzYaAUkkWSUISwEVEkRXAgAqTFBJVwIAFRZXBgJcAChMULAiQzYaAUkVIxJEsCJDNhoBSRWBQBJEsCJDNhoBSSRZJQhLARUSRFcCALAiQzYaAUkVIhJEJFOCAgVGYWxzZQRUcnVlTwJNsCJDNhoBSSRZJQhLARUSRFcCALAiQzYaAUkVIxJEFzYaAkkVgSASRDYaA0kVIxJEF08CcQRETwJQTHIIRFCwIkM2GgFJFYEgEkSwIkM2GgFJJFklCEsBFRJEVwIAKUxQSRUWVwYCTFAoTFCwIkM2GgFJJFklCEsBFRJEVwIAKUxQSRUWVwYCTFAoTFCwIkM2GgFJFSMSRBciCBYoTFCwIkM2GgFJFYFAEkQroEkVgUAORIFAr6soTFCwIkM2GgFJFSISRBfAMDYaAkkVIhJEF8AyNhoDSRUiEkQXwBw2GgEXwDBLAxJENhoCF8AySwISRDYaAxfAHEsBEkRPAhZPAhZQTFAoTFCwIkM2GgFJFSMSRBc2GgJJFSMSRBc2GgNJFYEgEkQ2GgEXSwMSRDYaAhdLAhJESTYaAxJETwIWTwIWUExQKExQsCJDNhoBSSRZJQhLARUSRFcCADYaAkkkWSUISwEVEkRXAgA2GgNJFSMSRBc2GgRJFYFAEkQpTwRQKU8EUE8DIghPAyugSwMVFlcGAk8EUEkVgUwISwQVFlcGAk8FUEwWVwYCgAIATExQTwQWUEsDFYFADkSBQK9PBKtQTwJQTFAoTFCwIkM2GgFJJFlLASVZSwJPAksCUkkkWUsBJVlLAk8CSwJSVwIASwIVTwNPA08CUksDFU8ETwRPAlJJJFtLAYEQWUsCFUsDTgJSVwIAKU8FUE8EVwIAKkxQSVcCABUWVwYCXABPAyIITwQjWyIIFilPBVBLBBUWVwYCTwVQSRWBBAgWVwYCJwRMUExQTwRQSRWBBAhPBBZPBFBLAxUWVwYCTwRQTIACABJQTFBMFlcGAicETFBPAlBMUChMULAiQzYaARUjEkQ2GgIVIxJENhoDFSMSRDYaBBUjEkQ2GgUVIxJENhoGFSMSRDYaBxUjEkQ2GggVIxJENhoJFSMSRDYaChUjEkQ2GgsVIxJENhoMFSMSRDYaDRUjEkQ2Gg4VIxJENhoPSRWBCRJEVwABNhoPSRWBCRJEVwEBNhoPSRWBCRJEVwIBNhoPSRWBCRJEVwMBNhoPSRWBCRJEVwQENhoPSRWBCRJEVwgBTwVPBVBPBFBPA1BPAlBMUDYaD0sBEkRJFRZXBgJMUChMULAiQzYaAUkkW0sBI1lLAhVPA04CUlcCADYaAkkkW0sBI1lLAhVPA04CUlcCAE8DTwISTgISEIABACRPAlQoTFCwIkMoNhoBULAiQw==",
        "clear": "C4EBQw=="
    },
    "compilerInfo": {
        "compiler": "puya",
        "compilerVersion": {
            "major": 99,
            "minor": 99,
            "patch": 99
        }
    },
    "events": [],
    "templateVariables": {}
}