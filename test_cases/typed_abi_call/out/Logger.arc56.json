{
    "name": "Logger",
    "structs": {
        "LogMessage": [
            {
                "name": "level",
                "type": "uint64"
            },
            {
                "name": "message",
                "type": "string"
            }
        ],
        "LogStruct": [
            {
                "name": "level",
                "type": "uint64"
            },
            {
                "name": "message",
                "type": "string"
            }
        ]
    },
    "methods": [
        {
            "name": "is_a_b",
            "args": [
                {
                    "type": "byte[]",
                    "name": "a"
                },
                {
                    "type": "byte[]",
                    "name": "b"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "echo",
            "args": [
                {
                    "type": "string",
                    "name": "value"
                }
            ],
            "returns": {
                "type": "string"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "no_args",
            "args": [],
            "returns": {
                "type": "uint64"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "log",
            "args": [
                {
                    "type": "uint64",
                    "name": "value"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "log",
            "args": [
                {
                    "type": "uint512",
                    "name": "value"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "log",
            "args": [
                {
                    "type": "string",
                    "name": "value"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "log",
            "args": [
                {
                    "type": "bool",
                    "name": "value"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "log",
            "args": [
                {
                    "type": "byte[]",
                    "name": "value"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "log",
            "args": [
                {
                    "type": "uint64",
                    "name": "asset"
                },
                {
                    "type": "address",
                    "name": "account"
                },
                {
                    "type": "uint64",
                    "name": "app"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "log",
            "args": [
                {
                    "type": "address",
                    "name": "address"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "echo_native_string",
            "args": [
                {
                    "type": "string",
                    "name": "value"
                }
            ],
            "returns": {
                "type": "string"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "echo_native_bytes",
            "args": [
                {
                    "type": "byte[]",
                    "name": "value"
                }
            ],
            "returns": {
                "type": "byte[]"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "echo_native_uint64",
            "args": [
                {
                    "type": "uint64",
                    "name": "value"
                }
            ],
            "returns": {
                "type": "uint64"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "echo_native_biguint",
            "args": [
                {
                    "type": "uint512",
                    "name": "value"
                }
            ],
            "returns": {
                "type": "uint512"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "echo_resource_by_index",
            "args": [
                {
                    "type": "asset",
                    "name": "asset"
                },
                {
                    "type": "application",
                    "name": "app"
                },
                {
                    "type": "account",
                    "name": "acc"
                }
            ],
            "returns": {
                "type": "(uint64,uint64,address)"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "echo_resource_by_value",
            "args": [
                {
                    "type": "uint64",
                    "name": "asset"
                },
                {
                    "type": "uint64",
                    "name": "app"
                },
                {
                    "type": "address",
                    "name": "acc"
                }
            ],
            "returns": {
                "type": "(uint64,uint64,address)"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "echo_native_tuple",
            "args": [
                {
                    "type": "string",
                    "name": "s"
                },
                {
                    "type": "byte[]",
                    "name": "b"
                },
                {
                    "type": "uint64",
                    "name": "u"
                },
                {
                    "type": "uint512",
                    "name": "bu"
                }
            ],
            "returns": {
                "type": "(string,byte[],uint64,uint512)"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "echo_nested_tuple",
            "args": [
                {
                    "type": "((string,string),(uint64,uint64,byte[]))",
                    "name": "tuple_of_tuples"
                }
            ],
            "returns": {
                "type": "((string,string),(uint64,uint64,byte[]))"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "return_args_after_14th",
            "args": [
                {
                    "type": "uint64",
                    "name": "_a1"
                },
                {
                    "type": "uint64",
                    "name": "_a2"
                },
                {
                    "type": "uint64",
                    "name": "_a3"
                },
                {
                    "type": "uint64",
                    "name": "_a4"
                },
                {
                    "type": "uint64",
                    "name": "_a5"
                },
                {
                    "type": "uint64",
                    "name": "_a6"
                },
                {
                    "type": "uint64",
                    "name": "_a7"
                },
                {
                    "type": "uint64",
                    "name": "_a8"
                },
                {
                    "type": "uint64",
                    "name": "_a9"
                },
                {
                    "type": "uint64",
                    "name": "_a10"
                },
                {
                    "type": "uint64",
                    "name": "_a11"
                },
                {
                    "type": "uint64",
                    "name": "_a12"
                },
                {
                    "type": "uint64",
                    "name": "_a13"
                },
                {
                    "type": "uint64",
                    "name": "_a14"
                },
                {
                    "type": "uint8",
                    "name": "a15"
                },
                {
                    "type": "uint8",
                    "name": "a16"
                },
                {
                    "type": "uint8",
                    "name": "a17"
                },
                {
                    "type": "uint8",
                    "name": "a18"
                },
                {
                    "type": "(uint8,uint8,uint8,uint8)",
                    "name": "a19"
                },
                {
                    "type": "uint8",
                    "name": "a20"
                }
            ],
            "returns": {
                "type": "byte[]"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "logs_are_equal",
            "args": [
                {
                    "type": "(uint64,string)",
                    "struct": "LogMessage",
                    "name": "log_1"
                },
                {
                    "type": "(uint64,string)",
                    "struct": "LogMessage",
                    "name": "log_2"
                }
            ],
            "returns": {
                "type": "bool"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "echo_log_struct",
            "args": [
                {
                    "type": "(uint64,string)",
                    "struct": "LogStruct",
                    "name": "log"
                }
            ],
            "returns": {
                "type": "(uint64,string)",
                "struct": "LogStruct"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        }
    ],
    "arcs": [
        22,
        28
    ],
    "networks": {},
    "state": {
        "schema": {
            "global": {
                "ints": 0,
                "bytes": 0
            },
            "local": {
                "ints": 0,
                "bytes": 0
            }
        },
        "keys": {
            "global": {},
            "local": {},
            "box": {}
        },
        "maps": {
            "global": {},
            "local": {},
            "box": {}
        }
    },
    "bareActions": {
        "create": [
            "NoOp"
        ],
        "call": []
    },
    "sourceInfo": {
        "approval": {
            "sourceInfo": [
                {
                    "pc": [
                        43
                    ],
                    "errorMessage": "OnCompletion must be NoOp"
                },
                {
                    "pc": [
                        226
                    ],
                    "errorMessage": "OnCompletion must be NoOp && can only call when creating"
                },
                {
                    "pc": [
                        264
                    ],
                    "errorMessage": "a is not a"
                },
                {
                    "pc": [
                        434
                    ],
                    "errorMessage": "application exists"
                },
                {
                    "pc": [
                        427
                    ],
                    "errorMessage": "asset exists"
                },
                {
                    "pc": [
                        269
                    ],
                    "errorMessage": "b is not b"
                },
                {
                    "pc": [
                        624
                    ],
                    "errorMessage": "expected account to be passed by index"
                },
                {
                    "pc": [
                        688
                    ],
                    "errorMessage": "expected account to be passed by value"
                },
                {
                    "pc": [
                        614
                    ],
                    "errorMessage": "expected application to be passed by index"
                },
                {
                    "pc": [
                        682
                    ],
                    "errorMessage": "expected application to be passed by value"
                },
                {
                    "pc": [
                        604
                    ],
                    "errorMessage": "expected asset to be passed by index"
                },
                {
                    "pc": [
                        674
                    ],
                    "errorMessage": "expected asset to be passed by value"
                },
                {
                    "pc": [
                        239,
                        255,
                        389,
                        496,
                        732
                    ],
                    "errorMessage": "invalid number of bytes for (len+uint8[])"
                },
                {
                    "pc": [
                        282,
                        341,
                        463,
                        716
                    ],
                    "errorMessage": "invalid number of bytes for (len+utf8[])"
                },
                {
                    "pc": [
                        1129,
                        1141,
                        1153,
                        1165,
                        1177,
                        1189
                    ],
                    "errorMessage": "invalid number of bytes for (uint8,uint8,uint8,uint8,(uint8,uint8,uint8,uint8),uint8)"
                },
                {
                    "pc": [
                        355
                    ],
                    "errorMessage": "invalid number of bytes for bool8"
                },
                {
                    "pc": [
                        325,
                        543,
                        753
                    ],
                    "errorMessage": "invalid number of bytes for uint512"
                },
                {
                    "pc": [
                        313,
                        403,
                        421,
                        524,
                        647,
                        656,
                        743,
                        1029,
                        1036,
                        1043,
                        1050,
                        1057,
                        1064,
                        1071,
                        1078,
                        1085,
                        1092,
                        1099,
                        1106,
                        1113,
                        1120
                    ],
                    "errorMessage": "invalid number of bytes for uint64"
                },
                {
                    "pc": [
                        569,
                        580,
                        591
                    ],
                    "errorMessage": "invalid number of bytes for uint8"
                },
                {
                    "pc": [
                        413,
                        447,
                        666
                    ],
                    "errorMessage": "invalid number of bytes for uint8[32]"
                },
                {
                    "pc": [
                        288,
                        919
                    ],
                    "errorMessage": "max array length exceeded"
                },
                {
                    "pc": [
                        551,
                        816
                    ],
                    "errorMessage": "overflow"
                }
            ],
            "pcOffsetMethod": "none"
        },
        "clear": {
            "sourceInfo": [],
            "pcOffsetMethod": "none"
        }
    },
    "source": {
        "approval": "",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDExCiNwcmFnbWEgdHlwZXRyYWNrIGZhbHNlCgovLyBhbGdvcHkuYXJjNC5BUkM0Q29udHJhY3QuY2xlYXJfc3RhdGVfcHJvZ3JhbSgpIC0+IHVpbnQ2NDoKbWFpbjoKICAgIHB1c2hpbnQgMSAvLyAxCiAgICByZXR1cm4K"
    },
    "byteCode": {
        "approval": "CyAEAQgAAiYFBBUffHUGZWNobzogCAAGZWNobzogAQECAAQxG0EAszEZFEQxGESCFQTHchK8BJv4GRMEuGLuGQQ8EFjZBGr0WTAEtLQzTgRu7X7DBLUA4REERrUPrwQEN7F+BEpETHcEJlnoGASp+2zxBNjMNjsE1sKsfwRIFC1eBBbgORkEqycc5AS6C0OBBN3QcYUE3E8ZkjYaAI4VABoARQABAGkAdACAAJMAsADDAO4A+gEbATwBTgFpAbcB9wJ6AzYEBQRFAIAMFR98dQAAAAAAAAAqsCJDMRkUMRgUEEM2GgFJJFklCEsBFRJEVwIANhoCSSRZJQhLARUSRFcCAEyAAWESRIABYhJDNhoBSSRZJQhLARUSRFcCACpMUElXAgAVFlcGAlwAKExQsCJDNhoBSRUjEkSwIkM2GgFJFYFAEkSwIkM2GgFJJFklCEsBFRJEVwIAsCJDNhoBSRUiEkQkU4ICBUZhbHNlBFRydWVPAk2wIkM2GgFJJFklCEsBFRJEVwIAsCJDNhoBSRUjEkQXNhoCSRWBIBJENhoDSRUjEkQXTwJxBERPAlBMcghEULAiQzYaAUkVgSASRLAiQzYaAUkkWSUISwEVEkRXAgApTFBJFRZXBgJMUChMULAiQzYaAUkkWSUISwEVEkRXAgApTFBJFRZXBgJMUChMULAiQzYaAUkVIxJEFyIIFihMULAiQzYaAUkVgUASRCugSRWBQA5EgUCvqyhMULAiQzYaAUkVIhJEF8AwNhoCSRUiEkQXwDI2GgNJFSISRBfAHDYaARfAMEsDEkQ2GgIXwDJLAhJENhoDF8AcSwESRE8CFk8CFlBMUChMULAiQzYaAUkVIxJEFzYaAkkVIxJEFzYaA0kVgSASRDYaARdLAxJENhoCF0sCEkRJNhoDEkRPAhZPAhZQTFAoTFCwIkM2GgFJJFklCEsBFRJEVwIANhoCSSRZJQhLARUSRFcCADYaA0kVIxJEFzYaBEkVgUASRClPBFApTwRQTwMiCE8DK6BLAxUWVwYCTwRQSRWBTAhLBBUWVwYCTwVQTBZXBgKAAgBMTFBPBBZQSwMVgUAORIFAr08Eq1BPAlBMUChMULAiQzYaAUkkWUsBJVlLAk8CSwJSSSRZSwElWUsCTwJLAlJXAgBLAhVPA08DTwJSSwMVTwRPBE8CUkkkW0sBgRBZSwIVSwNOAlJXAgApTwVQTwRXAgAqTFBJVwIAFRZXBgJcAE8DIghPBCNbIggWKU8FUEsEFRZXBgJPBVBJFYEECBZXBgInBExQTFBPBFBJFYEECE8EFk8EUEsDFRZXBgJPBFBMgAIAElBMUEwWVwYCJwRMUE8CUExQKExQsCJDNhoBFSMSRDYaAhUjEkQ2GgMVIxJENhoEFSMSRDYaBRUjEkQ2GgYVIxJENhoHFSMSRDYaCBUjEkQ2GgkVIxJENhoKFSMSRDYaCxUjEkQ2GgwVIxJENhoNFSMSRDYaDhUjEkQ2Gg9JFYEJEkRXAAE2Gg9JFYEJEkRXAQE2Gg9JFYEJEkRXAgE2Gg9JFYEJEkRXAwE2Gg9JFYEJEkRXBAQ2Gg9JFYEJEkRXCAFPBU8FUE8EUE8DUE8CUExQNhoPSwESREkVFlcGAkxQKExQsCJDNhoBSSRbSwEjWUsCFU8DTgJSVwIANhoCSSRbSwEjWUsCFU8DTgJSVwIATwNPAhJOAhIQgAEAJE8CVChMULAiQyg2GgFQsCJD",
        "clear": "C4EBQw=="
    },
    "compilerInfo": {
        "compiler": "puya",
        "compilerVersion": {
            "major": 99,
            "minor": 99,
            "patch": 99
        }
    },
    "events": [],
    "templateVariables": {}
}