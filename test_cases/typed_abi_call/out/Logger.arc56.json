{
    "name": "Logger",
    "structs": {
        "LogMessage": [
            {
                "name": "level",
                "type": "uint64"
            },
            {
                "name": "message",
                "type": "string"
            }
        ],
        "LogStruct": [
            {
                "name": "level",
                "type": "uint64"
            },
            {
                "name": "message",
                "type": "string"
            }
        ]
    },
    "methods": [
        {
            "name": "is_a_b",
            "args": [
                {
                    "type": "byte[]",
                    "name": "a"
                },
                {
                    "type": "byte[]",
                    "name": "b"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "echo",
            "args": [
                {
                    "type": "string",
                    "name": "value"
                }
            ],
            "returns": {
                "type": "string"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "no_args",
            "args": [],
            "returns": {
                "type": "uint64"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "log",
            "args": [
                {
                    "type": "uint64",
                    "name": "value"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "log",
            "args": [
                {
                    "type": "uint512",
                    "name": "value"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "log",
            "args": [
                {
                    "type": "string",
                    "name": "value"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "log",
            "args": [
                {
                    "type": "bool",
                    "name": "value"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "log",
            "args": [
                {
                    "type": "byte[]",
                    "name": "value"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "log",
            "args": [
                {
                    "type": "uint64",
                    "name": "asset"
                },
                {
                    "type": "address",
                    "name": "account"
                },
                {
                    "type": "uint64",
                    "name": "app"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "log",
            "args": [
                {
                    "type": "address",
                    "name": "address"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "echo_native_string",
            "args": [
                {
                    "type": "string",
                    "name": "value"
                }
            ],
            "returns": {
                "type": "string"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "echo_native_bytes",
            "args": [
                {
                    "type": "byte[]",
                    "name": "value"
                }
            ],
            "returns": {
                "type": "byte[]"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "echo_native_uint64",
            "args": [
                {
                    "type": "uint64",
                    "name": "value"
                }
            ],
            "returns": {
                "type": "uint64"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "echo_native_biguint",
            "args": [
                {
                    "type": "uint512",
                    "name": "value"
                }
            ],
            "returns": {
                "type": "uint512"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "echo_resource_by_index",
            "args": [
                {
                    "type": "asset",
                    "name": "asset"
                },
                {
                    "type": "application",
                    "name": "app"
                },
                {
                    "type": "account",
                    "name": "acc"
                }
            ],
            "returns": {
                "type": "(uint64,uint64,address)"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "echo_resource_by_value",
            "args": [
                {
                    "type": "uint64",
                    "name": "asset"
                },
                {
                    "type": "uint64",
                    "name": "app"
                },
                {
                    "type": "address",
                    "name": "acc"
                }
            ],
            "returns": {
                "type": "(uint64,uint64,address)"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "echo_native_tuple",
            "args": [
                {
                    "type": "string",
                    "name": "s"
                },
                {
                    "type": "byte[]",
                    "name": "b"
                },
                {
                    "type": "uint64",
                    "name": "u"
                },
                {
                    "type": "uint512",
                    "name": "bu"
                }
            ],
            "returns": {
                "type": "(string,byte[],uint64,uint512)"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "echo_nested_tuple",
            "args": [
                {
                    "type": "((string,string),(uint64,uint64,byte[]))",
                    "name": "tuple_of_tuples"
                }
            ],
            "returns": {
                "type": "((string,string),(uint64,uint64,byte[]))"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "return_args_after_14th",
            "args": [
                {
                    "type": "uint64",
                    "name": "_a1"
                },
                {
                    "type": "uint64",
                    "name": "_a2"
                },
                {
                    "type": "uint64",
                    "name": "_a3"
                },
                {
                    "type": "uint64",
                    "name": "_a4"
                },
                {
                    "type": "uint64",
                    "name": "_a5"
                },
                {
                    "type": "uint64",
                    "name": "_a6"
                },
                {
                    "type": "uint64",
                    "name": "_a7"
                },
                {
                    "type": "uint64",
                    "name": "_a8"
                },
                {
                    "type": "uint64",
                    "name": "_a9"
                },
                {
                    "type": "uint64",
                    "name": "_a10"
                },
                {
                    "type": "uint64",
                    "name": "_a11"
                },
                {
                    "type": "uint64",
                    "name": "_a12"
                },
                {
                    "type": "uint64",
                    "name": "_a13"
                },
                {
                    "type": "uint64",
                    "name": "_a14"
                },
                {
                    "type": "uint8",
                    "name": "a15"
                },
                {
                    "type": "uint8",
                    "name": "a16"
                },
                {
                    "type": "uint8",
                    "name": "a17"
                },
                {
                    "type": "uint8",
                    "name": "a18"
                },
                {
                    "type": "(uint8,uint8,uint8,uint8)",
                    "name": "a19"
                },
                {
                    "type": "uint8",
                    "name": "a20"
                }
            ],
            "returns": {
                "type": "byte[]"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "logs_are_equal",
            "args": [
                {
                    "type": "(uint64,string)",
                    "struct": "LogMessage",
                    "name": "log_1"
                },
                {
                    "type": "(uint64,string)",
                    "struct": "LogMessage",
                    "name": "log_2"
                }
            ],
            "returns": {
                "type": "bool"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "echo_log_struct",
            "args": [
                {
                    "type": "(uint64,string)",
                    "struct": "LogStruct",
                    "name": "log"
                }
            ],
            "returns": {
                "type": "(uint64,string)",
                "struct": "LogStruct"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        }
    ],
    "arcs": [
        22,
        28
    ],
    "networks": {},
    "state": {
        "schema": {
            "global": {
                "ints": 0,
                "bytes": 0
            },
            "local": {
                "ints": 0,
                "bytes": 0
            }
        },
        "keys": {
            "global": {},
            "local": {},
            "box": {}
        },
        "maps": {
            "global": {},
            "local": {},
            "box": {}
        }
    },
    "bareActions": {
        "create": [
            "NoOp"
        ],
        "call": []
    },
    "sourceInfo": {
        "approval": {
            "sourceInfo": [
                {
                    "pc": [
                        44
                    ],
                    "errorMessage": "OnCompletion is not NoOp"
                },
                {
                    "pc": [
                        226
                    ],
                    "errorMessage": "OnCompletion must be NoOp && can only call when creating"
                },
                {
                    "pc": [
                        244
                    ],
                    "errorMessage": "a is not a"
                },
                {
                    "pc": [
                        352
                    ],
                    "errorMessage": "application exists"
                },
                {
                    "pc": [
                        345
                    ],
                    "errorMessage": "asset exists"
                },
                {
                    "pc": [
                        249
                    ],
                    "errorMessage": "b is not b"
                },
                {
                    "pc": [
                        488
                    ],
                    "errorMessage": "expected account to be passed by index"
                },
                {
                    "pc": [
                        536
                    ],
                    "errorMessage": "expected account to be passed by value"
                },
                {
                    "pc": [
                        478
                    ],
                    "errorMessage": "expected application to be passed by index"
                },
                {
                    "pc": [
                        530
                    ],
                    "errorMessage": "expected application to be passed by value"
                },
                {
                    "pc": [
                        468
                    ],
                    "errorMessage": "expected asset to be passed by index"
                },
                {
                    "pc": [
                        522
                    ],
                    "errorMessage": "expected asset to be passed by value"
                },
                {
                    "pc": [
                        258,
                        736
                    ],
                    "errorMessage": "max array length exceeded"
                },
                {
                    "pc": [
                        431,
                        632
                    ],
                    "errorMessage": "overflow"
                }
            ],
            "pcOffsetMethod": "none"
        },
        "clear": {
            "sourceInfo": [],
            "pcOffsetMethod": "none"
        }
    },
    "source": {
        "approval": "",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDEwCiNwcmFnbWEgdHlwZXRyYWNrIGZhbHNlCgovLyBhbGdvcHkuYXJjNC5BUkM0Q29udHJhY3QuY2xlYXJfc3RhdGVfcHJvZ3JhbSgpIC0+IHVpbnQ2NDoKbWFpbjoKICAgIHB1c2hpbnQgMSAvLyAxCiAgICByZXR1cm4K"
    },
    "byteCode": {
        "approval": "CiAEAQBACCYFBBUffHUGZWNobzogCAAGZWNobzogAQECAAQiMRtBALIxGRREMRhEghUEx3ISvASb+BkTBLhi7hkEPBBY2QRq9FkwBLS0M04Ebu1+wwS1AOERBEa1D68EBDexfgRKREx3BCZZ6BgEqfts8QTYzDY7BNbCrH8ESBQtXgQW4DkZBKsnHOQEugtDgQTd0HGFBNxPGZI2GgCOFQAZADAAAQBKAFAAVgBfAHcAgACbAKEAuADPANwA7wEuAV4BwAJ+AscDBwCADBUffHUAAAAAAAAAKrBDMRkUMRgUEEM2GgFXAgA2GgJXAgBMgAFhEkSAAWISQzYaAVcCACpMUElXAgAVFlcGAlwAKExQsCJDNhoBsCJDNhoBsCJDNhoBVwIAsCJDNhoBI1OCAgVGYWxzZQRUcnVlTwJNsCJDNhoBVwIAsCJDNhoBFzYaAjYaAxdPAnEERE8CUExyCERQsCJDNhoBsCJDNhoBVwIAKUxQSRUWVwYCTFAoTFCwIkM2GgFXAgApTFBJFRZXBgJMUChMULAiQzYaARciCBYoTFCwIkM2GgEroEkVJA5EJK+rKExQsCJDNhoBF8AwNhoCF8AyNhoDF8AcNhoBF8AwSwMSRDYaAhfAMksCEkQ2GgMXwBxLARJETwIWTwIWUExQKExQsCJDNhoBFzYaAhc2GgM2GgEXSwMSRDYaAhdLAhJESTYaAxJETwIWTwIWUExQKExQsCJDNhoBVwIANhoCVwIANhoDFzYaBClPBFApTwRQTwMiCE8DK6BLAxUWVwYCTwRQSRWBTAhLBBUWVwYCTwVQTBZXBgKAAgBMTFBPBBZQSwMVJA5EJK9PBKtQTwJQTFAoTFCwIkM2GgFJI1lLAYECWUsCTwJLAlJJI1lLAYECWUsCTwJLAlJXAgBLAhVPA08DTwJSSwMVTwRPBE8CUkkjW0sBgRBZSwIVSwNOAlJXAgApTwVQTwRXAgAqTFBJVwIAFRZXBgJcAE8DIghPBCVbIggWKU8FUEsEFRZXBgJPBVBJFYEECBZXBgInBExQTFBPBFBJFYEECE8EFk8EUEsDFRZXBgJPBFBMgAIAElBMUEwWVwYCJwRMUE8CUExQKExQsCJDNhoPVwABNhoPVwEBNhoPVwIBNhoPVwMBNhoPVwQENhoPVwgBTwVPBVBPBFBPA1BPAlBMUDYaD0sBEkRJFRZXBgJMUChMULAiQzYaAUkjW0sBJVlLAhVPA04CUlcCADYaAkkjW0sBJVlLAhVPA04CUlcCAE8DTwISTgISEIABACNPAlQoTFCwIkMoNhoBULAiQw==",
        "clear": "CoEBQw=="
    },
    "compilerInfo": {
        "compiler": "puya",
        "compilerVersion": {
            "major": 99,
            "minor": 99,
            "patch": 99
        }
    },
    "events": [],
    "templateVariables": {}
}