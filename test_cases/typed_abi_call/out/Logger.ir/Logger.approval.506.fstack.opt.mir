// Op                                                                                            Stack (out)
// algopy.arc4.ARC4Contract.approval_program() -> uint64:
subroutine main:
    block@0:
        // typed_abi_call/logger.py:31
        // class Logger(ARC4Contract):
        txn ApplicationID                                                                        tmp%0#1
        !                                                                                        tmp%1#0
        txn OnCompletion                                                                         tmp%1#0,tmp%2#0
        int 1                                                                                    tmp%1#0,tmp%2#0,1
        shl                                                                                      tmp%1#0,tmp%3#0
        l-load tmp%1#0 1                                                                         tmp%3#0,tmp%1#0
        l-load tmp%3#0 1                                                                         tmp%1#0,tmp%3#0
        +                                                                                        tmp%4#0
        switch call_NoOp create_NoOp *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED ; b *NOT_IMPLEMENTED 

    call_NoOp:
        // typed_abi_call/logger.py:31
        // class Logger(ARC4Contract):
        txna ApplicationArgs 0                                                                   tmp%5#0
        method is_a_b(byte[],byte[])void                                                         tmp%5#0,Method(is_a_b(byte[],byte[])void)
        method echo(string)string                                                                tmp%5#0,Method(is_a_b(byte[],byte[])void),Method(echo(string)string)
        method no_args()uint64                                                                   tmp%5#0,Method(is_a_b(byte[],byte[])void),Method(echo(string)string),Method(no_args()uint64)
        method log(uint64)void                                                                   tmp%5#0,Method(is_a_b(byte[],byte[])void),Method(echo(string)string),Method(no_args()uint64),Method(log(uint64)void)
        method log(uint512)void                                                                  tmp%5#0,Method(is_a_b(byte[],byte[])void),Method(echo(string)string),Method(no_args()uint64),Method(log(uint64)void),Method(log(uint512)void)
        method log(string)void                                                                   tmp%5#0,Method(is_a_b(byte[],byte[])void),Method(echo(string)string),Method(no_args()uint64),Method(log(uint64)void),Method(log(uint512)void),Method(log(string)void)
        method log(bool)void                                                                     tmp%5#0,Method(is_a_b(byte[],byte[])void),Method(echo(string)string),Method(no_args()uint64),Method(log(uint64)void),Method(log(uint512)void),Method(log(string)void),Method(log(bool)void)
        method log(byte[])void                                                                   tmp%5#0,Method(is_a_b(byte[],byte[])void),Method(echo(string)string),Method(no_args()uint64),Method(log(uint64)void),Method(log(uint512)void),Method(log(string)void),Method(log(bool)void),Method(log(byte[])void)
        method log(uint64,address,uint64)void                                                    tmp%5#0,Method(is_a_b(byte[],byte[])void),Method(echo(string)string),Method(no_args()uint64),Method(log(uint64)void),Method(log(uint512)void),Method(log(string)void),Method(log(bool)void),Method(log(byte[])void),Method(log(uint64,address,uint64)void)
        method log(address)void                                                                  tmp%5#0,Method(is_a_b(byte[],byte[])void),Method(echo(string)string),Method(no_args()uint64),Method(log(uint64)void),Method(log(uint512)void),Method(log(string)void),Method(log(bool)void),Method(log(byte[])void),Method(log(uint64,address,uint64)void),Method(log(address)void)
        method echo_native_string(string)string                                                  tmp%5#0,Method(is_a_b(byte[],byte[])void),Method(echo(string)string),Method(no_args()uint64),Method(log(uint64)void),Method(log(uint512)void),Method(log(string)void),Method(log(bool)void),Method(log(byte[])void),Method(log(uint64,address,uint64)void),Method(log(address)void),Method(echo_native_string(string)string)
        method echo_native_bytes(byte[])byte[]                                                   tmp%5#0,Method(is_a_b(byte[],byte[])void),Method(echo(string)string),Method(no_args()uint64),Method(log(uint64)void),Method(log(uint512)void),Method(log(string)void),Method(log(bool)void),Method(log(byte[])void),Method(log(uint64,address,uint64)void),Method(log(address)void),Method(echo_native_string(string)string),Method(echo_native_bytes(byte[])byte[])
        method echo_native_uint64(uint64)uint64                                                  tmp%5#0,Method(is_a_b(byte[],byte[])void),Method(echo(string)string),Method(no_args()uint64),Method(log(uint64)void),Method(log(uint512)void),Method(log(string)void),Method(log(bool)void),Method(log(byte[])void),Method(log(uint64,address,uint64)void),Method(log(address)void),Method(echo_native_string(string)string),Method(echo_native_bytes(byte[])byte[]),Method(echo_native_uint64(uint64)uint64)
        method echo_native_biguint(uint512)uint512                                               tmp%5#0,Method(is_a_b(byte[],byte[])void),Method(echo(string)string),Method(no_args()uint64),Method(log(uint64)void),Method(log(uint512)void),Method(log(string)void),Method(log(bool)void),Method(log(byte[])void),Method(log(uint64,address,uint64)void),Method(log(address)void),Method(echo_native_string(string)string),Method(echo_native_bytes(byte[])byte[]),Method(echo_native_uint64(uint64)uint64),Method(echo_native_biguint(uint512)uint512)
        method echo_resource_by_index(asset,application,account)(uint64,uint64,address)          tmp%5#0,Method(is_a_b(byte[],byte[])void),Method(echo(string)string),Method(no_args()uint64),Method(log(uint64)void),Method(log(uint512)void),Method(log(string)void),Method(log(bool)void),Method(log(byte[])void),Method(log(uint64,address,uint64)void),Method(log(address)void),Method(echo_native_string(string)string),Method(echo_native_bytes(byte[])byte[]),Method(echo_native_uint64(uint64)uint64),Method(echo_native_biguint(uint512)uint512),Method(echo_resource_by_index(asset,application,account)(uint64,uint64,address))
        method echo_resource_by_value(uint64,uint64,address)(uint64,uint64,address)              tmp%5#0,Method(is_a_b(byte[],byte[])void),Method(echo(string)string),Method(no_args()uint64),Method(log(uint64)void),Method(log(uint512)void),Method(log(string)void),Method(log(bool)void),Method(log(byte[])void),Method(log(uint64,address,uint64)void),Method(log(address)void),Method(echo_native_string(string)string),Method(echo_native_bytes(byte[])byte[]),Method(echo_native_uint64(uint64)uint64),Method(echo_native_biguint(uint512)uint512),Method(echo_resource_by_index(asset,application,account)(uint64,uint64,address)),Method(echo_resource_by_value(uint64,uint64,address)(uint64,uint64,address))
        method echo_native_tuple(string,byte[],uint64,uint512)(string,byte[],uint64,uint512) tmp%5#0,Method(is_a_b(byte[],byte[])void),Method(echo(string)string),Method(no_args()uint64),Method(log(uint64)void),Method(log(uint512)void),Method(log(string)void),Method(log(bool)void),Method(log(byte[])void),Method(log(uint64,address,uint64)void),Method(log(address)void),Method(echo_native_string(string)string),Method(echo_native_bytes(byte[])byte[]),Method(echo_native_uint64(uint64)uint64),Method(echo_native_biguint(uint512)uint512),Method(echo_resource_by_index(asset,application,account)(uint64,uint64,address)),Method(echo_resource_by_value(uint64,uint64,address)(uint64,uint64,address)),Method(echo_native_tuple(string,byte[],uint64,uint512)(string,byte[],uint64,uint512))
        method echo_nested_tuple(((string,string),(uint64,uint64,byte[])))((string,string),(uint64,uint64,byte[])) tmp%5#0,Method(is_a_b(byte[],byte[])void),Method(echo(string)string),Method(no_args()uint64),Method(log(uint64)void),Method(log(uint512)void),Method(log(string)void),Method(log(bool)void),Method(log(byte[])void),Method(log(uint64,address,uint64)void),Method(log(address)void),Method(echo_native_string(string)string),Method(echo_native_bytes(byte[])byte[]),Method(echo_native_uint64(uint64)uint64),Method(echo_native_biguint(uint512)uint512),Method(echo_resource_by_index(asset,application,account)(uint64,uint64,address)),Method(echo_resource_by_value(uint64,uint64,address)(uint64,uint64,address)),Method(echo_native_tuple(string,byte[],uint64,uint512)(string,byte[],uint64,uint512)),Method(echo_nested_tuple(((string,string),(uint64,uint64,byte[])))((string,string),(uint64,uint64,byte[])))
        method return_args_after_14th(uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint8,uint8,uint8,uint8,(uint8,uint8,uint8,uint8),uint8)byte[] tmp%5#0,Method(is_a_b(byte[],byte[])void),Method(echo(string)string),Method(no_args()uint64),Method(log(uint64)void),Method(log(uint512)void),Method(log(string)void),Method(log(bool)void),Method(log(byte[])void),Method(log(uint64,address,uint64)void),Method(log(address)void),Method(echo_native_string(string)string),Method(echo_native_bytes(byte[])byte[]),Method(echo_native_uint64(uint64)uint64),Method(echo_native_biguint(uint512)uint512),Method(echo_resource_by_index(asset,application,account)(uint64,uint64,address)),Method(echo_resource_by_value(uint64,uint64,address)(uint64,uint64,address)),Method(echo_native_tuple(string,byte[],uint64,uint512)(string,byte[],uint64,uint512)),Method(echo_nested_tuple(((string,string),(uint64,uint64,byte[])))((string,string),(uint64,uint64,byte[]))),Method(return_args_after_14th(uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint8,uint8,uint8,uint8,(uint8,uint8,uint8,uint8),uint8)byte[])
        method logs_are_equal((uint64,string),(uint64,string))bool                               tmp%5#0,Method(is_a_b(byte[],byte[])void),Method(echo(string)string),Method(no_args()uint64),Method(log(uint64)void),Method(log(uint512)void),Method(log(string)void),Method(log(bool)void),Method(log(byte[])void),Method(log(uint64,address,uint64)void),Method(log(address)void),Method(echo_native_string(string)string),Method(echo_native_bytes(byte[])byte[]),Method(echo_native_uint64(uint64)uint64),Method(echo_native_biguint(uint512)uint512),Method(echo_resource_by_index(asset,application,account)(uint64,uint64,address)),Method(echo_resource_by_value(uint64,uint64,address)(uint64,uint64,address)),Method(echo_native_tuple(string,byte[],uint64,uint512)(string,byte[],uint64,uint512)),Method(echo_nested_tuple(((string,string),(uint64,uint64,byte[])))((string,string),(uint64,uint64,byte[]))),Method(return_args_after_14th(uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint8,uint8,uint8,uint8,(uint8,uint8,uint8,uint8),uint8)byte[]),Method(logs_are_equal((uint64,string),(uint64,string))bool)
        method echo_log_struct((uint64,string))(uint64,string)                                   tmp%5#0,Method(is_a_b(byte[],byte[])void),Method(echo(string)string),Method(no_args()uint64),Method(log(uint64)void),Method(log(uint512)void),Method(log(string)void),Method(log(bool)void),Method(log(byte[])void),Method(log(uint64,address,uint64)void),Method(log(address)void),Method(echo_native_string(string)string),Method(echo_native_bytes(byte[])byte[]),Method(echo_native_uint64(uint64)uint64),Method(echo_native_biguint(uint512)uint512),Method(echo_resource_by_index(asset,application,account)(uint64,uint64,address)),Method(echo_resource_by_value(uint64,uint64,address)(uint64,uint64,address)),Method(echo_native_tuple(string,byte[],uint64,uint512)(string,byte[],uint64,uint512)),Method(echo_nested_tuple(((string,string),(uint64,uint64,byte[])))((string,string),(uint64,uint64,byte[]))),Method(return_args_after_14th(uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint8,uint8,uint8,uint8,(uint8,uint8,uint8,uint8),uint8)byte[]),Method(logs_are_equal((uint64,string),(uint64,string))bool),Method(echo_log_struct((uint64,string))(uint64,string))
        l-load tmp%5#0 21                                                                        Method(is_a_b(byte[],byte[])void),Method(echo(string)string),Method(no_args()uint64),Method(log(uint64)void),Method(log(uint512)void),Method(log(string)void),Method(log(bool)void),Method(log(byte[])void),Method(log(uint64,address,uint64)void),Method(log(address)void),Method(echo_native_string(string)string),Method(echo_native_bytes(byte[])byte[]),Method(echo_native_uint64(uint64)uint64),Method(echo_native_biguint(uint512)uint512),Method(echo_resource_by_index(asset,application,account)(uint64,uint64,address)),Method(echo_resource_by_value(uint64,uint64,address)(uint64,uint64,address)),Method(echo_native_tuple(string,byte[],uint64,uint512)(string,byte[],uint64,uint512)),Method(echo_nested_tuple(((string,string),(uint64,uint64,byte[])))((string,string),(uint64,uint64,byte[]))),Method(return_args_after_14th(uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint8,uint8,uint8,uint8,(uint8,uint8,uint8,uint8),uint8)byte[]),Method(logs_are_equal((uint64,string),(uint64,string))bool),Method(echo_log_struct((uint64,string))(uint64,string)),tmp%5#0
        match is_a_b_route@3 echo_route@4 no_args_route@5 log_route@6 log_route@7 log_route@8 log_route@9 log_route@10 log_route@11 log_route@12 echo_native_string_route@13 echo_native_bytes_route@14 echo_native_uint64_route@15 echo_native_biguint_route@16 echo_resource_by_index_route@17 echo_resource_by_value_route@18 echo_native_tuple_route@19 echo_nested_tuple_route@20 return_args_after_14th_route@21 logs_are_equal_route@22 echo_log_struct_route@23 ; b switch_case_next@25 

    is_a_b_route@3:
        // typed_abi_call/logger.py:31
        // class Logger(ARC4Contract):
        callsub is_a_b
        b switch_case_next@25

    echo_route@4:
        // typed_abi_call/logger.py:31
        // class Logger(ARC4Contract):
        callsub echo
        b switch_case_next@25

    no_args_route@5:
        // typed_abi_call/logger.py:41
        // @arc4.abimethod
        byte 0x151f7c75000000000000002a                                                          0x151f7c75000000000000002a
        log
        int 1                                                                                    1
        return

    log_route@6:
        // typed_abi_call/logger.py:31
        // class Logger(ARC4Contract):
        callsub log_uint64
        b switch_case_next@25

    log_route@7:
        // typed_abi_call/logger.py:31
        // class Logger(ARC4Contract):
        callsub log_uint512
        b switch_case_next@25

    log_route@8:
        // typed_abi_call/logger.py:31
        // class Logger(ARC4Contract):
        callsub log_string
        b switch_case_next@25

    log_route@9:
        // typed_abi_call/logger.py:31
        // class Logger(ARC4Contract):
        callsub log_bool
        b switch_case_next@25

    log_route@10:
        // typed_abi_call/logger.py:31
        // class Logger(ARC4Contract):
        callsub log_bytes
        b switch_case_next@25

    log_route@11:
        // typed_abi_call/logger.py:31
        // class Logger(ARC4Contract):
        callsub log_asset_account_app
        b switch_case_next@25

    log_route@12:
        // typed_abi_call/logger.py:31
        // class Logger(ARC4Contract):
        callsub log_address
        b switch_case_next@25

    echo_native_string_route@13:
        // typed_abi_call/logger.py:31
        // class Logger(ARC4Contract):
        callsub echo_native_string
        b switch_case_next@25

    echo_native_bytes_route@14:
        // typed_abi_call/logger.py:31
        // class Logger(ARC4Contract):
        callsub echo_native_bytes
        b switch_case_next@25

    echo_native_uint64_route@15:
        // typed_abi_call/logger.py:31
        // class Logger(ARC4Contract):
        callsub echo_native_uint64
        b switch_case_next@25

    echo_native_biguint_route@16:
        // typed_abi_call/logger.py:31
        // class Logger(ARC4Contract):
        callsub echo_native_biguint
        b switch_case_next@25

    echo_resource_by_index_route@17:
        // typed_abi_call/logger.py:31
        // class Logger(ARC4Contract):
        callsub echo_resource_by_index
        b switch_case_next@25

    echo_resource_by_value_route@18:
        // typed_abi_call/logger.py:31
        // class Logger(ARC4Contract):
        callsub echo_resource_by_value
        b switch_case_next@25

    echo_native_tuple_route@19:
        // typed_abi_call/logger.py:31
        // class Logger(ARC4Contract):
        callsub echo_native_tuple
        b switch_case_next@25

    echo_nested_tuple_route@20:
        // typed_abi_call/logger.py:31
        // class Logger(ARC4Contract):
        callsub echo_nested_tuple
        b switch_case_next@25

    return_args_after_14th_route@21:
        // typed_abi_call/logger.py:31
        // class Logger(ARC4Contract):
        callsub return_args_after_14th
        b switch_case_next@25

    logs_are_equal_route@22:
        // typed_abi_call/logger.py:31
        // class Logger(ARC4Contract):
        callsub logs_are_equal
        b switch_case_next@25

    echo_log_struct_route@23:
        // typed_abi_call/logger.py:31
        // class Logger(ARC4Contract):
        callsub echo_log_struct
        b switch_case_next@25

    switch_case_next@25:
        // typed_abi_call/logger.py:31
        // class Logger(ARC4Contract):
        err // this contract does not implement the given ABI method for call NoOp

    create_NoOp:
        // typed_abi_call/logger.py:31
        // class Logger(ARC4Contract):
        txn NumAppArgs                                                                           tmp%6#0
        !                                                                                        tmp%7#0
        assert // this contract does not implement the given ABI method for create NoOp
        int 1                                                                                    1
        return

    *NOT_IMPLEMENTED:
        // typed_abi_call/logger.py:31
        // class Logger(ARC4Contract):
        err // The requested action is not implemented in this contract. Are you using the correct OnComplete? Did you set your app ID? 


// test_cases.typed_abi_call.logger.Logger.is_a_b[routing]() -> void:
subroutine is_a_b:
    is_a_b_block@0:
        // typed_abi_call/logger.py:32
        // @arc4.abimethod
        txna ApplicationArgs 1                                                                   reinterpret_Encoded(len+uint8[])%0#0
        extract 2 0                                                                              a#0
        txna ApplicationArgs 2                                                                   a#0,reinterpret_Encoded(len+uint8[])%1#0
        extract 2 0                                                                              a#0,b#0
        // typed_abi_call/logger.py:34
        // assert a == b"a", "a is not a"
        l-load a#0 1                                                                             b#0,a#0
        byte 0x61                                                                                b#0,a#0,0x61
        ==                                                                                       b#0,tmp%0#1
        assert // a is not a                                                                     b#0
        // typed_abi_call/logger.py:35
        // assert b == b"b", "b is not b"
        l-load b#0 0                                                                             b#0
        byte 0x62                                                                                b#0,0x62
        ==                                                                                       tmp%1#1
        assert // b is not b
        // typed_abi_call/logger.py:32
        // @arc4.abimethod
        int 1                                                                                    1
        return


// test_cases.typed_abi_call.logger.Logger.echo[routing]() -> void:
subroutine echo:
    echo_block@0:
        // typed_abi_call/logger.py:37
        // @arc4.abimethod
        txna ApplicationArgs 1                                                                   value#0
        // typed_abi_call/logger.py:39
        // return "echo: " + value
        extract 2 0                                                                              extract_to_end%0#0
        byte 0x00066563686f3a20                                                                  extract_to_end%0#0,0x00066563686f3a20
        l-load extract_to_end%0#0 1                                                              0x00066563686f3a20,extract_to_end%0#0
        concat // on error: max array length exceeded                                            concat%0#0
        l-load-copy concat%0#0 0                                                                 concat%0#0,concat%0#0 (copy)
        extract 2 0                                                                              concat%0#0,extract_to_end%1#0
        len                                                                                      concat%0#0,len%0#0
        itob                                                                                     concat%0#0,as_bytes%0#0
        extract 6 2                                                                              concat%0#0,as_u16_bytes%0#0
        l-load concat%0#0 1                                                                      as_u16_bytes%0#0,concat%0#0
        l-load as_u16_bytes%0#0 1                                                                concat%0#0,as_u16_bytes%0#0
        replace2 0                                                                               replace%0#0
        // typed_abi_call/logger.py:37
        // @arc4.abimethod
        byte 0x151f7c75                                                                          replace%0#0,0x151f7c75
        l-load replace%0#0 1                                                                     0x151f7c75,replace%0#0
        concat                                                                                   tmp%1#0
        log
        int 1                                                                                    1
        return


// test_cases.typed_abi_call.logger.Logger.log_uint64[routing]() -> void:
subroutine log_uint64:
    log_uint64_block@0:
        // typed_abi_call/logger.py:45
        // @arc4.abimethod(name=LOG_METHOD_NAME)
        txna ApplicationArgs 1                                                                   value#0
        // typed_abi_call/logger.py:47
        // log(value)
        log
        // typed_abi_call/logger.py:45
        // @arc4.abimethod(name=LOG_METHOD_NAME)
        int 1                                                                                    1
        return


// test_cases.typed_abi_call.logger.Logger.log_uint512[routing]() -> void:
subroutine log_uint512:
    log_uint512_block@0:
        // typed_abi_call/logger.py:49
        // @arc4.abimethod(name=LOG_METHOD_NAME)
        txna ApplicationArgs 1                                                                   value#0
        // typed_abi_call/logger.py:51
        // log(value)
        log
        // typed_abi_call/logger.py:49
        // @arc4.abimethod(name=LOG_METHOD_NAME)
        int 1                                                                                    1
        return


// test_cases.typed_abi_call.logger.Logger.log_string[routing]() -> void:
subroutine log_string:
    log_string_block@0:
        // typed_abi_call/logger.py:53
        // @arc4.abimethod(name=LOG_METHOD_NAME)
        txna ApplicationArgs 1                                                                   value#0
        // typed_abi_call/logger.py:55
        // log(value.native)  # decode to remove header
        extract 2 0                                                                              tmp%0#0
        log
        // typed_abi_call/logger.py:53
        // @arc4.abimethod(name=LOG_METHOD_NAME)
        int 1                                                                                    1
        return


// test_cases.typed_abi_call.logger.Logger.log_bool[routing]() -> void:
subroutine log_bool:
    log_bool_block@0:
        // typed_abi_call/logger.py:57
        // @arc4.abimethod(name=LOG_METHOD_NAME)
        txna ApplicationArgs 1                                                                   value#0
        // typed_abi_call/logger.py:59
        // log(Bytes(b"True") if value.native else Bytes(b"False"))
        int 0                                                                                    value#0,0
        getbit                                                                                   aggregate%get_bit%0#0
        byte 0x46616c7365                                                                        aggregate%get_bit%0#0,0x46616c7365
        byte 0x54727565                                                                          aggregate%get_bit%0#0,0x46616c7365,0x54727565
        l-load aggregate%get_bit%0#0 2                                                           0x46616c7365,0x54727565,aggregate%get_bit%0#0
        select                                                                                   select%0#0
        log
        // typed_abi_call/logger.py:57
        // @arc4.abimethod(name=LOG_METHOD_NAME)
        int 1                                                                                    1
        return


// test_cases.typed_abi_call.logger.Logger.log_bytes[routing]() -> void:
subroutine log_bytes:
    log_bytes_block@0:
        // typed_abi_call/logger.py:61
        // @arc4.abimethod(name=LOG_METHOD_NAME)
        txna ApplicationArgs 1                                                                   value#0
        // typed_abi_call/logger.py:63
        // log(value.native)
        extract 2 0                                                                              tmp%0#0
        log
        // typed_abi_call/logger.py:61
        // @arc4.abimethod(name=LOG_METHOD_NAME)
        int 1                                                                                    1
        return


// test_cases.typed_abi_call.logger.Logger.log_asset_account_app[routing]() -> void:
subroutine log_asset_account_app:
    log_asset_account_app_block@0:
        // typed_abi_call/logger.py:65
        // @arc4.abimethod(name=LOG_METHOD_NAME)
        txna ApplicationArgs 1                                                                   reinterpret_Encoded(uint64)%0#0
        btoi                                                                                     asset#0
        txna ApplicationArgs 2                                                                   asset#0,account#0
        txna ApplicationArgs 3                                                                   asset#0,account#0,reinterpret_Encoded(uint64)%1#0
        btoi                                                                                     asset#0,account#0,app#0
        // typed_abi_call/logger.py:67
        // log(asset.name, account.bytes, app.address)
        l-load asset#0 2                                                                         account#0,app#0,asset#0
        asset_params_get AssetName                                                               account#0,app#0,value%0#0,check%0#0
        assert // asset exists                                                                   account#0,app#0,value%0#0
        l-load value%0#0 0                                                                       account#0,app#0,value%0#0
        l-load account#0 2                                                                       app#0,value%0#0,account#0
        concat                                                                                   app#0,tmp%1#1
        l-load app#0 1                                                                           tmp%1#1,app#0
        app_params_get AppAddress                                                                tmp%1#1,value%1#0,check%1#0
        assert // application exists                                                             tmp%1#1,value%1#0
        l-load tmp%1#1 1                                                                         value%1#0,tmp%1#1
        l-load value%1#0 1                                                                       tmp%1#1,value%1#0
        concat                                                                                   tmp%3#0
        log
        // typed_abi_call/logger.py:65
        // @arc4.abimethod(name=LOG_METHOD_NAME)
        int 1                                                                                    1
        return


// test_cases.typed_abi_call.logger.Logger.log_address[routing]() -> void:
subroutine log_address:
    log_address_block@0:
        // typed_abi_call/logger.py:69
        // @arc4.abimethod(name=LOG_METHOD_NAME)
        txna ApplicationArgs 1                                                                   address#0
        // typed_abi_call/logger.py:71
        // log(address)
        log
        // typed_abi_call/logger.py:69
        // @arc4.abimethod(name=LOG_METHOD_NAME)
        int 1                                                                                    1
        return


// test_cases.typed_abi_call.logger.Logger.echo_native_string[routing]() -> void:
subroutine echo_native_string:
    echo_native_string_block@0:
        // typed_abi_call/logger.py:73
        // @arc4.abimethod
        txna ApplicationArgs 1                                                                   reinterpret_Encoded(len+utf8[])%0#0
        extract 2 0                                                                              value#0
        // typed_abi_call/logger.py:75
        // return "echo: " + value
        byte "echo: "                                                                            value#0,"echo: "
        l-load value#0 1                                                                         "echo: ",value#0
        concat                                                                                   tmp%0#1
        // typed_abi_call/logger.py:73
        // @arc4.abimethod
        l-load-copy tmp%0#1 0                                                                    tmp%0#1,tmp%0#1 (copy)
        len                                                                                      tmp%0#1,aggregate%length%0#0
        itob                                                                                     tmp%0#1,aggregate%as_bytes%0#0
        extract 6 2                                                                              tmp%0#1,aggregate%length_uint16%0#0
        l-load tmp%0#1 1                                                                         aggregate%length_uint16%0#0,tmp%0#1
        concat                                                                                   aggregate%encoded_value%0#0
        byte 0x151f7c75                                                                          aggregate%encoded_value%0#0,0x151f7c75
        l-load aggregate%encoded_value%0#0 1                                                     0x151f7c75,aggregate%encoded_value%0#0
        concat                                                                                   tmp%3#0
        log
        int 1                                                                                    1
        return


// test_cases.typed_abi_call.logger.Logger.echo_native_bytes[routing]() -> void:
subroutine echo_native_bytes:
    echo_native_bytes_block@0:
        // typed_abi_call/logger.py:77
        // @arc4.abimethod
        txna ApplicationArgs 1                                                                   reinterpret_Encoded(len+uint8[])%0#0
        extract 2 0                                                                              value#0
        // typed_abi_call/logger.py:79
        // return b"echo: " + value
        byte 0x6563686f3a20                                                                      value#0,0x6563686f3a20
        l-load value#0 1                                                                         0x6563686f3a20,value#0
        concat                                                                                   tmp%0#1
        // typed_abi_call/logger.py:77
        // @arc4.abimethod
        l-load-copy tmp%0#1 0                                                                    tmp%0#1,tmp%0#1 (copy)
        len                                                                                      tmp%0#1,aggregate%length%0#0
        itob                                                                                     tmp%0#1,aggregate%as_bytes%0#0
        extract 6 2                                                                              tmp%0#1,aggregate%length_uint16%0#0
        l-load tmp%0#1 1                                                                         aggregate%length_uint16%0#0,tmp%0#1
        concat                                                                                   aggregate%encoded_value%0#0
        byte 0x151f7c75                                                                          aggregate%encoded_value%0#0,0x151f7c75
        l-load aggregate%encoded_value%0#0 1                                                     0x151f7c75,aggregate%encoded_value%0#0
        concat                                                                                   tmp%3#0
        log
        int 1                                                                                    1
        return


// test_cases.typed_abi_call.logger.Logger.echo_native_uint64[routing]() -> void:
subroutine echo_native_uint64:
    echo_native_uint64_block@0:
        // typed_abi_call/logger.py:81
        // @arc4.abimethod
        txna ApplicationArgs 1                                                                   reinterpret_Encoded(uint64)%0#0
        btoi                                                                                     value#0
        // typed_abi_call/logger.py:83
        // return value + 1
        int 1                                                                                    value#0,1
        +                                                                                        tmp%0#1
        // typed_abi_call/logger.py:81
        // @arc4.abimethod
        itob                                                                                     aggregate%val_as_bytes%0#0
        byte 0x151f7c75                                                                          aggregate%val_as_bytes%0#0,0x151f7c75
        l-load aggregate%val_as_bytes%0#0 1                                                      0x151f7c75,aggregate%val_as_bytes%0#0
        concat                                                                                   tmp%3#0
        log
        int 1                                                                                    1
        return


// test_cases.typed_abi_call.logger.Logger.echo_native_biguint[routing]() -> void:
subroutine echo_native_biguint:
    echo_native_biguint_block@0:
        // typed_abi_call/logger.py:85
        // @arc4.abimethod
        txna ApplicationArgs 1                                                                   value#0
        // typed_abi_call/logger.py:87
        // return value + 1
        byte 0x01                                                                                value#0,0x01
        b+                                                                                       tmp%0#1
        // typed_abi_call/logger.py:85
        // @arc4.abimethod
        l-load-copy tmp%0#1 0                                                                    tmp%0#1,tmp%0#1 (copy)
        len                                                                                      tmp%0#1,aggregate%value_len%0#0
        int 64                                                                                   tmp%0#1,aggregate%value_len%0#0,64
        <=                                                                                       tmp%0#1,aggregate%len_ok%0#0
        assert // overflow                                                                       tmp%0#1
        int 64                                                                                   tmp%0#1,64
        bzero                                                                                    tmp%0#1,aggregate%bzero%0#0
        l-load tmp%0#1 1                                                                         aggregate%bzero%0#0,tmp%0#1
        l-load aggregate%bzero%0#0 1                                                             tmp%0#1,aggregate%bzero%0#0
        b|                                                                                       aggregate%arc4_encoded%0#0
        byte 0x151f7c75                                                                          aggregate%arc4_encoded%0#0,0x151f7c75
        l-load aggregate%arc4_encoded%0#0 1                                                      0x151f7c75,aggregate%arc4_encoded%0#0
        concat                                                                                   tmp%3#0
        log
        int 1                                                                                    1
        return


// test_cases.typed_abi_call.logger.Logger.echo_resource_by_index[routing]() -> void:
subroutine echo_resource_by_index:
    echo_resource_by_index_block@0:
        // typed_abi_call/logger.py:89-91
        // @arc4.abimethod(
        //     resource_encoding="index",
        // )
        txna ApplicationArgs 1                                                                   reinterpret_Encoded(uint8)%0#0
        btoi                                                                                     tmp%0#0
        txnas Assets                                                                             asset#0
        txna ApplicationArgs 2                                                                   asset#0,reinterpret_Encoded(uint8)%1#0
        btoi                                                                                     asset#0,tmp%2#0
        txnas Applications                                                                       asset#0,app#0
        txna ApplicationArgs 3                                                                   asset#0,app#0,reinterpret_Encoded(uint8)%2#0
        btoi                                                                                     asset#0,app#0,tmp%4#0
        txnas Accounts                                                                           asset#0,app#0,acc#0
        // typed_abi_call/logger.py:95
        // asset_idx = op.btoi(Txn.application_args(1))
        txna ApplicationArgs 1                                                                   asset#0,app#0,acc#0,tmp%0#1
        btoi                                                                                     asset#0,app#0,acc#0,asset_idx#0
        // typed_abi_call/logger.py:96
        // assert asset == Txn.assets(asset_idx), "expected asset to be passed by index"
        txnas Assets                                                                             asset#0,app#0,acc#0,tmp%2#0
        l-load-copy asset#0 3                                                                    asset#0,app#0,acc#0,tmp%2#0,asset#0 (copy)
        l-load tmp%2#0 1                                                                         asset#0,app#0,acc#0,asset#0 (copy),tmp%2#0
        ==                                                                                       asset#0,app#0,acc#0,tmp%3#1
        assert // expected asset to be passed by index                                           asset#0,app#0,acc#0
        // typed_abi_call/logger.py:97
        // app_idx = op.btoi(Txn.application_args(2))
        txna ApplicationArgs 2                                                                   asset#0,app#0,acc#0,tmp%4#1
        btoi                                                                                     asset#0,app#0,acc#0,app_idx#0
        // typed_abi_call/logger.py:98
        // assert app == Txn.applications(app_idx), "expected application to be passed by index"
        txnas Applications                                                                       asset#0,app#0,acc#0,tmp%6#1
        l-load-copy app#0 2                                                                      asset#0,app#0,acc#0,tmp%6#1,app#0 (copy)
        l-load tmp%6#1 1                                                                         asset#0,app#0,acc#0,app#0 (copy),tmp%6#1
        ==                                                                                       asset#0,app#0,acc#0,tmp%7#1
        assert // expected application to be passed by index                                     asset#0,app#0,acc#0
        // typed_abi_call/logger.py:99
        // acc_idx = op.btoi(Txn.application_args(3))
        txna ApplicationArgs 3                                                                   asset#0,app#0,acc#0,tmp%8#1
        btoi                                                                                     asset#0,app#0,acc#0,acc_idx#0
        // typed_abi_call/logger.py:100
        // assert acc == Txn.accounts(acc_idx), "expected account to be passed by index"
        txnas Accounts                                                                           asset#0,app#0,acc#0,tmp%10#1
        l-load-copy acc#0 1                                                                      asset#0,app#0,acc#0,tmp%10#1,acc#0 (copy)
        l-load tmp%10#1 1                                                                        asset#0,app#0,acc#0,acc#0 (copy),tmp%10#1
        ==                                                                                       asset#0,app#0,acc#0,tmp%11#0
        assert // expected account to be passed by index                                         asset#0,app#0,acc#0
        // typed_abi_call/logger.py:89-91
        // @arc4.abimethod(
        //     resource_encoding="index",
        // )
        l-load asset#0 2                                                                         app#0,acc#0,asset#0
        itob                                                                                     app#0,acc#0,aggregate%val_as_bytes%0#0
        l-load app#0 2                                                                           acc#0,aggregate%val_as_bytes%0#0,app#0
        itob                                                                                     acc#0,aggregate%val_as_bytes%0#0,aggregate%val_as_bytes%1#0
        l-load aggregate%val_as_bytes%0#0 1                                                      acc#0,aggregate%val_as_bytes%1#0,aggregate%val_as_bytes%0#0
        l-load aggregate%val_as_bytes%1#0 1                                                      acc#0,aggregate%val_as_bytes%0#0,aggregate%val_as_bytes%1#0
        concat                                                                                   acc#0,aggregate%head%1#0
        l-load acc#0 1                                                                           aggregate%head%1#0,acc#0
        concat                                                                                   aggregate%head%2#0
        byte 0x151f7c75                                                                          aggregate%head%2#0,0x151f7c75
        l-load aggregate%head%2#0 1                                                              0x151f7c75,aggregate%head%2#0
        concat                                                                                   tmp%10#0
        log
        int 1                                                                                    1
        return


// test_cases.typed_abi_call.logger.Logger.echo_resource_by_value[routing]() -> void:
subroutine echo_resource_by_value:
    echo_resource_by_value_block@0:
        // typed_abi_call/logger.py:103-105
        // @arc4.abimethod(
        //     resource_encoding="value",
        // )
        txna ApplicationArgs 1                                                                   reinterpret_Encoded(uint64)%0#0
        btoi                                                                                     asset#0
        txna ApplicationArgs 2                                                                   asset#0,reinterpret_Encoded(uint64)%1#0
        btoi                                                                                     asset#0,app#0
        txna ApplicationArgs 3                                                                   asset#0,app#0,acc#0
        // typed_abi_call/logger.py:109
        // asset_id = op.btoi(Txn.application_args(1))
        txna ApplicationArgs 1                                                                   asset#0,app#0,acc#0,tmp%0#1
        btoi                                                                                     asset#0,app#0,acc#0,asset_id#0
        // typed_abi_call/logger.py:110
        // assert asset.id == asset_id, "expected asset to be passed by value"
        l-load-copy asset#0 3                                                                    asset#0,app#0,acc#0,asset_id#0,asset#0 (copy)
        l-load asset_id#0 1                                                                      asset#0,app#0,acc#0,asset#0 (copy),asset_id#0
        ==                                                                                       asset#0,app#0,acc#0,tmp%2#1
        assert // expected asset to be passed by value                                           asset#0,app#0,acc#0
        // typed_abi_call/logger.py:111
        // app_id = op.btoi(Txn.application_args(2))
        txna ApplicationArgs 2                                                                   asset#0,app#0,acc#0,tmp%3#1
        btoi                                                                                     asset#0,app#0,acc#0,app_id#0
        // typed_abi_call/logger.py:112
        // assert app.id == app_id, "expected application to be passed by value"
        l-load-copy app#0 2                                                                      asset#0,app#0,acc#0,app_id#0,app#0 (copy)
        l-load app_id#0 1                                                                        asset#0,app#0,acc#0,app#0 (copy),app_id#0
        ==                                                                                       asset#0,app#0,acc#0,tmp%5#1
        assert // expected application to be passed by value                                     asset#0,app#0,acc#0
        // typed_abi_call/logger.py:113
        // address = Txn.application_args(3)
        txna ApplicationArgs 3                                                                   asset#0,app#0,acc#0,address#0
        // typed_abi_call/logger.py:114
        // assert acc.bytes == address, "expected account to be passed by value"
        l-load-copy acc#0 1                                                                      asset#0,app#0,acc#0,address#0,acc#0 (copy)
        l-load address#0 1                                                                       asset#0,app#0,acc#0,acc#0 (copy),address#0
        ==                                                                                       asset#0,app#0,acc#0,tmp%7#1
        assert // expected account to be passed by value                                         asset#0,app#0,acc#0
        // typed_abi_call/logger.py:103-105
        // @arc4.abimethod(
        //     resource_encoding="value",
        // )
        l-load asset#0 2                                                                         app#0,acc#0,asset#0
        itob                                                                                     app#0,acc#0,aggregate%val_as_bytes%0#0
        l-load app#0 2                                                                           acc#0,aggregate%val_as_bytes%0#0,app#0
        itob                                                                                     acc#0,aggregate%val_as_bytes%0#0,aggregate%val_as_bytes%1#0
        l-load aggregate%val_as_bytes%0#0 1                                                      acc#0,aggregate%val_as_bytes%1#0,aggregate%val_as_bytes%0#0
        l-load aggregate%val_as_bytes%1#0 1                                                      acc#0,aggregate%val_as_bytes%0#0,aggregate%val_as_bytes%1#0
        concat                                                                                   acc#0,aggregate%head%1#0
        l-load acc#0 1                                                                           aggregate%head%1#0,acc#0
        concat                                                                                   aggregate%head%2#0
        byte 0x151f7c75                                                                          aggregate%head%2#0,0x151f7c75
        l-load aggregate%head%2#0 1                                                              0x151f7c75,aggregate%head%2#0
        concat                                                                                   tmp%7#0
        log
        int 1                                                                                    1
        return


// test_cases.typed_abi_call.logger.Logger.echo_native_tuple[routing]() -> void:
subroutine echo_native_tuple:
    echo_native_tuple_block@0:
        // typed_abi_call/logger.py:117
        // @arc4.abimethod
        txna ApplicationArgs 1                                                                   reinterpret_Encoded(len+utf8[])%0#0
        extract 2 0                                                                              s#0
        txna ApplicationArgs 2                                                                   s#0,reinterpret_Encoded(len+uint8[])%0#0
        extract 2 0                                                                              s#0,b#0
        txna ApplicationArgs 3                                                                   s#0,b#0,reinterpret_Encoded(uint64)%0#0
        btoi                                                                                     s#0,b#0,u#0
        txna ApplicationArgs 4                                                                   s#0,b#0,u#0,bu#0
        // typed_abi_call/logger.py:121
        // return "echo: " + s, b"echo: " + b, u + 1, bu + 1
        byte "echo: "                                                                            s#0,b#0,u#0,bu#0,"echo: "
        l-load s#0 4                                                                             b#0,u#0,bu#0,"echo: ",s#0
        concat                                                                                   b#0,u#0,bu#0,tmp%0#1
        byte 0x6563686f3a20                                                                      b#0,u#0,bu#0,tmp%0#1,0x6563686f3a20
        l-load b#0 4                                                                             u#0,bu#0,tmp%0#1,0x6563686f3a20,b#0
        concat                                                                                   u#0,bu#0,tmp%0#1,tmp%1#1
        l-load u#0 3                                                                             bu#0,tmp%0#1,tmp%1#1,u#0
        int 1                                                                                    bu#0,tmp%0#1,tmp%1#1,u#0,1
        +                                                                                        bu#0,tmp%0#1,tmp%1#1,tmp%2#1
        l-load bu#0 3                                                                            tmp%0#1,tmp%1#1,tmp%2#1,bu#0
        byte 0x01                                                                                tmp%0#1,tmp%1#1,tmp%2#1,bu#0,0x01
        b+                                                                                       tmp%0#1,tmp%1#1,tmp%2#1,tmp%3#1
        // typed_abi_call/logger.py:117
        // @arc4.abimethod
        l-load-copy tmp%0#1 3                                                                    tmp%0#1,tmp%1#1,tmp%2#1,tmp%3#1,tmp%0#1 (copy)
        len                                                                                      tmp%0#1,tmp%1#1,tmp%2#1,tmp%3#1,aggregate%length%0#0
        itob                                                                                     tmp%0#1,tmp%1#1,tmp%2#1,tmp%3#1,aggregate%as_bytes%0#0
        extract 6 2                                                                              tmp%0#1,tmp%1#1,tmp%2#1,tmp%3#1,aggregate%length_uint16%0#0
        l-load tmp%0#1 4                                                                         tmp%1#1,tmp%2#1,tmp%3#1,aggregate%length_uint16%0#0,tmp%0#1
        concat                                                                                   tmp%1#1,tmp%2#1,tmp%3#1,aggregate%encoded_value%0#0
        l-load-copy aggregate%encoded_value%0#0 0                                                tmp%1#1,tmp%2#1,tmp%3#1,aggregate%encoded_value%0#0,aggregate%encoded_value%0#0 (copy)
        len                                                                                      tmp%1#1,tmp%2#1,tmp%3#1,aggregate%encoded_value%0#0,aggregate%data_length%0#0
        int 76                                                                                   tmp%1#1,tmp%2#1,tmp%3#1,aggregate%encoded_value%0#0,aggregate%data_length%0#0,76
        l-load aggregate%data_length%0#0 1                                                       tmp%1#1,tmp%2#1,tmp%3#1,aggregate%encoded_value%0#0,76,aggregate%data_length%0#0
        +                                                                                        tmp%1#1,tmp%2#1,tmp%3#1,aggregate%encoded_value%0#0,aggregate%current_tail_offset%0#0
        l-load-copy tmp%1#1 4                                                                    tmp%1#1,tmp%2#1,tmp%3#1,aggregate%encoded_value%0#0,aggregate%current_tail_offset%0#0,tmp%1#1 (copy)
        len                                                                                      tmp%1#1,tmp%2#1,tmp%3#1,aggregate%encoded_value%0#0,aggregate%current_tail_offset%0#0,aggregate%length%1#0
        itob                                                                                     tmp%1#1,tmp%2#1,tmp%3#1,aggregate%encoded_value%0#0,aggregate%current_tail_offset%0#0,aggregate%as_bytes%2#0
        extract 6 2                                                                              tmp%1#1,tmp%2#1,tmp%3#1,aggregate%encoded_value%0#0,aggregate%current_tail_offset%0#0,aggregate%length_uint16%1#0
        l-load tmp%1#1 5                                                                         tmp%2#1,tmp%3#1,aggregate%encoded_value%0#0,aggregate%current_tail_offset%0#0,aggregate%length_uint16%1#0,tmp%1#1
        concat                                                                                   tmp%2#1,tmp%3#1,aggregate%encoded_value%0#0,aggregate%current_tail_offset%0#0,aggregate%encoded_value%1#0
        l-load aggregate%current_tail_offset%0#0 1                                               tmp%2#1,tmp%3#1,aggregate%encoded_value%0#0,aggregate%encoded_value%1#0,aggregate%current_tail_offset%0#0
        itob                                                                                     tmp%2#1,tmp%3#1,aggregate%encoded_value%0#0,aggregate%encoded_value%1#0,aggregate%as_bytes%3#0
        extract 6 2                                                                              tmp%2#1,tmp%3#1,aggregate%encoded_value%0#0,aggregate%encoded_value%1#0,aggregate%offset_as_uint16%1#0
        byte 0x004c                                                                              tmp%2#1,tmp%3#1,aggregate%encoded_value%0#0,aggregate%encoded_value%1#0,aggregate%offset_as_uint16%1#0,0x004c
        l-load aggregate%offset_as_uint16%1#0 1                                                  tmp%2#1,tmp%3#1,aggregate%encoded_value%0#0,aggregate%encoded_value%1#0,0x004c,aggregate%offset_as_uint16%1#0
        concat                                                                                   tmp%2#1,tmp%3#1,aggregate%encoded_value%0#0,aggregate%encoded_value%1#0,aggregate%head%1#0
        l-load tmp%2#1 4                                                                         tmp%3#1,aggregate%encoded_value%0#0,aggregate%encoded_value%1#0,aggregate%head%1#0,tmp%2#1
        itob                                                                                     tmp%3#1,aggregate%encoded_value%0#0,aggregate%encoded_value%1#0,aggregate%head%1#0,aggregate%val_as_bytes%0#0
        l-load aggregate%head%1#0 1                                                              tmp%3#1,aggregate%encoded_value%0#0,aggregate%encoded_value%1#0,aggregate%val_as_bytes%0#0,aggregate%head%1#0
        l-load aggregate%val_as_bytes%0#0 1                                                      tmp%3#1,aggregate%encoded_value%0#0,aggregate%encoded_value%1#0,aggregate%head%1#0,aggregate%val_as_bytes%0#0
        concat                                                                                   tmp%3#1,aggregate%encoded_value%0#0,aggregate%encoded_value%1#0,aggregate%head%2#0
        l-load-copy tmp%3#1 3                                                                    tmp%3#1,aggregate%encoded_value%0#0,aggregate%encoded_value%1#0,aggregate%head%2#0,tmp%3#1 (copy)
        len                                                                                      tmp%3#1,aggregate%encoded_value%0#0,aggregate%encoded_value%1#0,aggregate%head%2#0,aggregate%value_len%0#0
        int 64                                                                                   tmp%3#1,aggregate%encoded_value%0#0,aggregate%encoded_value%1#0,aggregate%head%2#0,aggregate%value_len%0#0,64
        <=                                                                                       tmp%3#1,aggregate%encoded_value%0#0,aggregate%encoded_value%1#0,aggregate%head%2#0,aggregate%len_ok%0#0
        assert // overflow                                                                       tmp%3#1,aggregate%encoded_value%0#0,aggregate%encoded_value%1#0,aggregate%head%2#0
        int 64                                                                                   tmp%3#1,aggregate%encoded_value%0#0,aggregate%encoded_value%1#0,aggregate%head%2#0,64
        bzero                                                                                    tmp%3#1,aggregate%encoded_value%0#0,aggregate%encoded_value%1#0,aggregate%head%2#0,aggregate%bzero%0#0
        l-load tmp%3#1 4                                                                         aggregate%encoded_value%0#0,aggregate%encoded_value%1#0,aggregate%head%2#0,aggregate%bzero%0#0,tmp%3#1
        l-load aggregate%bzero%0#0 1                                                             aggregate%encoded_value%0#0,aggregate%encoded_value%1#0,aggregate%head%2#0,tmp%3#1,aggregate%bzero%0#0
        b|                                                                                       aggregate%encoded_value%0#0,aggregate%encoded_value%1#0,aggregate%head%2#0,aggregate%arc4_encoded%0#0
        l-load aggregate%head%2#0 1                                                              aggregate%encoded_value%0#0,aggregate%encoded_value%1#0,aggregate%arc4_encoded%0#0,aggregate%head%2#0
        l-load aggregate%arc4_encoded%0#0 1                                                      aggregate%encoded_value%0#0,aggregate%encoded_value%1#0,aggregate%head%2#0,aggregate%arc4_encoded%0#0
        concat                                                                                   aggregate%encoded_value%0#0,aggregate%encoded_value%1#0,aggregate%head%3#0
        l-load aggregate%encoded_value%0#0 2                                                     aggregate%encoded_value%1#0,aggregate%head%3#0,aggregate%encoded_value%0#0
        concat                                                                                   aggregate%encoded_value%1#0,aggregate%concat%0#0
        l-load aggregate%encoded_value%1#0 1                                                     aggregate%concat%0#0,aggregate%encoded_value%1#0
        concat                                                                                   aggregate%concat%1#0
        byte 0x151f7c75                                                                          aggregate%concat%1#0,0x151f7c75
        l-load aggregate%concat%1#0 1                                                            0x151f7c75,aggregate%concat%1#0
        concat                                                                                   tmp%9#0
        log
        int 1                                                                                    1
        return


// test_cases.typed_abi_call.logger.Logger.echo_nested_tuple[routing]() -> void:
subroutine echo_nested_tuple:
    echo_nested_tuple_block@0:
        // typed_abi_call/logger.py:123
        // @arc4.abimethod
        txna ApplicationArgs 1                                                                   reinterpret_Encoded(((len+utf8[]),(len+utf8[])),(uint64,uint64,(len+uint8[])))%0#0
        l-load-copy reinterpret_Encoded(((len+utf8[]),(len+utf8[])),(uint64,uint64,(len+uint8[])))%0#0 0 reinterpret_Encoded(((len+utf8[]),(len+utf8[])),(uint64,uint64,(len+uint8[])))%0#0,reinterpret_Encoded(((len+utf8[]),(len+utf8[])),(uint64,uint64,(len+uint8[])))%0#0 (copy)
        int 0                                                                                    reinterpret_Encoded(((len+utf8[]),(len+utf8[])),(uint64,uint64,(len+uint8[])))%0#0,reinterpret_Encoded(((len+utf8[]),(len+utf8[])),(uint64,uint64,(len+uint8[])))%0#0 (copy),0
        extract_uint16                                                                           reinterpret_Encoded(((len+utf8[]),(len+utf8[])),(uint64,uint64,(len+uint8[])))%0#0,aggregate%extract_uint16%0#0
        l-load-copy reinterpret_Encoded(((len+utf8[]),(len+utf8[])),(uint64,uint64,(len+uint8[])))%0#0 1 reinterpret_Encoded(((len+utf8[]),(len+utf8[])),(uint64,uint64,(len+uint8[])))%0#0,aggregate%extract_uint16%0#0,reinterpret_Encoded(((len+utf8[]),(len+utf8[])),(uint64,uint64,(len+uint8[])))%0#0 (copy)
        int 2                                                                                    reinterpret_Encoded(((len+utf8[]),(len+utf8[])),(uint64,uint64,(len+uint8[])))%0#0,aggregate%extract_uint16%0#0,reinterpret_Encoded(((len+utf8[]),(len+utf8[])),(uint64,uint64,(len+uint8[])))%0#0 (copy),2
        extract_uint16                                                                           reinterpret_Encoded(((len+utf8[]),(len+utf8[])),(uint64,uint64,(len+uint8[])))%0#0,aggregate%extract_uint16%0#0,aggregate%extract_uint16%1#0
        l-load-copy reinterpret_Encoded(((len+utf8[]),(len+utf8[])),(uint64,uint64,(len+uint8[])))%0#0 2 reinterpret_Encoded(((len+utf8[]),(len+utf8[])),(uint64,uint64,(len+uint8[])))%0#0,aggregate%extract_uint16%0#0,aggregate%extract_uint16%1#0,reinterpret_Encoded(((len+utf8[]),(len+utf8[])),(uint64,uint64,(len+uint8[])))%0#0 (copy)
        l-load aggregate%extract_uint16%0#0 2                                                    reinterpret_Encoded(((len+utf8[]),(len+utf8[])),(uint64,uint64,(len+uint8[])))%0#0,aggregate%extract_uint16%1#0,reinterpret_Encoded(((len+utf8[]),(len+utf8[])),(uint64,uint64,(len+uint8[])))%0#0 (copy),aggregate%extract_uint16%0#0
        l-load-copy aggregate%extract_uint16%1#0 2                                               reinterpret_Encoded(((len+utf8[]),(len+utf8[])),(uint64,uint64,(len+uint8[])))%0#0,aggregate%extract_uint16%1#0,reinterpret_Encoded(((len+utf8[]),(len+utf8[])),(uint64,uint64,(len+uint8[])))%0#0 (copy),aggregate%extract_uint16%0#0,aggregate%extract_uint16%1#0 (copy)
        substring3                                                                               reinterpret_Encoded(((len+utf8[]),(len+utf8[])),(uint64,uint64,(len+uint8[])))%0#0,aggregate%extract_uint16%1#0,aggregate%substring3%0#0
        l-load-copy aggregate%substring3%0#0 0                                                   reinterpret_Encoded(((len+utf8[]),(len+utf8[])),(uint64,uint64,(len+uint8[])))%0#0,aggregate%extract_uint16%1#0,aggregate%substring3%0#0,aggregate%substring3%0#0 (copy)
        int 0                                                                                    reinterpret_Encoded(((len+utf8[]),(len+utf8[])),(uint64,uint64,(len+uint8[])))%0#0,aggregate%extract_uint16%1#0,aggregate%substring3%0#0,aggregate%substring3%0#0 (copy),0
        extract_uint16                                                                           reinterpret_Encoded(((len+utf8[]),(len+utf8[])),(uint64,uint64,(len+uint8[])))%0#0,aggregate%extract_uint16%1#0,aggregate%substring3%0#0,aggregate%extract_uint16%2#0
        l-load-copy aggregate%substring3%0#0 1                                                   reinterpret_Encoded(((len+utf8[]),(len+utf8[])),(uint64,uint64,(len+uint8[])))%0#0,aggregate%extract_uint16%1#0,aggregate%substring3%0#0,aggregate%extract_uint16%2#0,aggregate%substring3%0#0 (copy)
        int 2                                                                                    reinterpret_Encoded(((len+utf8[]),(len+utf8[])),(uint64,uint64,(len+uint8[])))%0#0,aggregate%extract_uint16%1#0,aggregate%substring3%0#0,aggregate%extract_uint16%2#0,aggregate%substring3%0#0 (copy),2
        extract_uint16                                                                           reinterpret_Encoded(((len+utf8[]),(len+utf8[])),(uint64,uint64,(len+uint8[])))%0#0,aggregate%extract_uint16%1#0,aggregate%substring3%0#0,aggregate%extract_uint16%2#0,aggregate%extract_uint16%3#0
        l-load-copy aggregate%substring3%0#0 2                                                   reinterpret_Encoded(((len+utf8[]),(len+utf8[])),(uint64,uint64,(len+uint8[])))%0#0,aggregate%extract_uint16%1#0,aggregate%substring3%0#0,aggregate%extract_uint16%2#0,aggregate%extract_uint16%3#0,aggregate%substring3%0#0 (copy)
        l-load aggregate%extract_uint16%2#0 2                                                    reinterpret_Encoded(((len+utf8[]),(len+utf8[])),(uint64,uint64,(len+uint8[])))%0#0,aggregate%extract_uint16%1#0,aggregate%substring3%0#0,aggregate%extract_uint16%3#0,aggregate%substring3%0#0 (copy),aggregate%extract_uint16%2#0
        l-load-copy aggregate%extract_uint16%3#0 2                                               reinterpret_Encoded(((len+utf8[]),(len+utf8[])),(uint64,uint64,(len+uint8[])))%0#0,aggregate%extract_uint16%1#0,aggregate%substring3%0#0,aggregate%extract_uint16%3#0,aggregate%substring3%0#0 (copy),aggregate%extract_uint16%2#0,aggregate%extract_uint16%3#0 (copy)
        substring3                                                                               reinterpret_Encoded(((len+utf8[]),(len+utf8[])),(uint64,uint64,(len+uint8[])))%0#0,aggregate%extract_uint16%1#0,aggregate%substring3%0#0,aggregate%extract_uint16%3#0,aggregate%substring3%1#0
        extract 2 0                                                                              reinterpret_Encoded(((len+utf8[]),(len+utf8[])),(uint64,uint64,(len+uint8[])))%0#0,aggregate%extract_uint16%1#0,aggregate%substring3%0#0,aggregate%extract_uint16%3#0,tuple_of_tuples.0.0#0
        l-load-copy aggregate%substring3%0#0 2                                                   reinterpret_Encoded(((len+utf8[]),(len+utf8[])),(uint64,uint64,(len+uint8[])))%0#0,aggregate%extract_uint16%1#0,aggregate%substring3%0#0,aggregate%extract_uint16%3#0,tuple_of_tuples.0.0#0,aggregate%substring3%0#0 (copy)
        len                                                                                      reinterpret_Encoded(((len+utf8[]),(len+utf8[])),(uint64,uint64,(len+uint8[])))%0#0,aggregate%extract_uint16%1#0,aggregate%substring3%0#0,aggregate%extract_uint16%3#0,tuple_of_tuples.0.0#0,aggregate%len%0#0
        l-load aggregate%substring3%0#0 3                                                        reinterpret_Encoded(((len+utf8[]),(len+utf8[])),(uint64,uint64,(len+uint8[])))%0#0,aggregate%extract_uint16%1#0,aggregate%extract_uint16%3#0,tuple_of_tuples.0.0#0,aggregate%len%0#0,aggregate%substring3%0#0
        l-load aggregate%extract_uint16%3#0 3                                                    reinterpret_Encoded(((len+utf8[]),(len+utf8[])),(uint64,uint64,(len+uint8[])))%0#0,aggregate%extract_uint16%1#0,tuple_of_tuples.0.0#0,aggregate%len%0#0,aggregate%substring3%0#0,aggregate%extract_uint16%3#0
        l-load aggregate%len%0#0 2                                                               reinterpret_Encoded(((len+utf8[]),(len+utf8[])),(uint64,uint64,(len+uint8[])))%0#0,aggregate%extract_uint16%1#0,tuple_of_tuples.0.0#0,aggregate%substring3%0#0,aggregate%extract_uint16%3#0,aggregate%len%0#0
        substring3                                                                               reinterpret_Encoded(((len+utf8[]),(len+utf8[])),(uint64,uint64,(len+uint8[])))%0#0,aggregate%extract_uint16%1#0,tuple_of_tuples.0.0#0,tuple_of_tuples.0.1#0
        l-load-copy reinterpret_Encoded(((len+utf8[]),(len+utf8[])),(uint64,uint64,(len+uint8[])))%0#0 3 reinterpret_Encoded(((len+utf8[]),(len+utf8[])),(uint64,uint64,(len+uint8[])))%0#0,aggregate%extract_uint16%1#0,tuple_of_tuples.0.0#0,tuple_of_tuples.0.1#0,reinterpret_Encoded(((len+utf8[]),(len+utf8[])),(uint64,uint64,(len+uint8[])))%0#0 (copy)
        len                                                                                      reinterpret_Encoded(((len+utf8[]),(len+utf8[])),(uint64,uint64,(len+uint8[])))%0#0,aggregate%extract_uint16%1#0,tuple_of_tuples.0.0#0,tuple_of_tuples.0.1#0,aggregate%len%1#0
        l-load reinterpret_Encoded(((len+utf8[]),(len+utf8[])),(uint64,uint64,(len+uint8[])))%0#0 4 aggregate%extract_uint16%1#0,tuple_of_tuples.0.0#0,tuple_of_tuples.0.1#0,aggregate%len%1#0,reinterpret_Encoded(((len+utf8[]),(len+utf8[])),(uint64,uint64,(len+uint8[])))%0#0
        l-load aggregate%extract_uint16%1#0 4                                                    tuple_of_tuples.0.0#0,tuple_of_tuples.0.1#0,aggregate%len%1#0,reinterpret_Encoded(((len+utf8[]),(len+utf8[])),(uint64,uint64,(len+uint8[])))%0#0,aggregate%extract_uint16%1#0
        l-load aggregate%len%1#0 2                                                               tuple_of_tuples.0.0#0,tuple_of_tuples.0.1#0,reinterpret_Encoded(((len+utf8[]),(len+utf8[])),(uint64,uint64,(len+uint8[])))%0#0,aggregate%extract_uint16%1#0,aggregate%len%1#0
        substring3                                                                               tuple_of_tuples.0.0#0,tuple_of_tuples.0.1#0,aggregate%substring3%3#0
        l-load-copy aggregate%substring3%3#0 0                                                   tuple_of_tuples.0.0#0,tuple_of_tuples.0.1#0,aggregate%substring3%3#0,aggregate%substring3%3#0 (copy)
        int 0                                                                                    tuple_of_tuples.0.0#0,tuple_of_tuples.0.1#0,aggregate%substring3%3#0,aggregate%substring3%3#0 (copy),0
        extract_uint64                                                                           tuple_of_tuples.0.0#0,tuple_of_tuples.0.1#0,aggregate%substring3%3#0,tuple_of_tuples.1.0#0
        l-load-copy aggregate%substring3%3#0 1                                                   tuple_of_tuples.0.0#0,tuple_of_tuples.0.1#0,aggregate%substring3%3#0,tuple_of_tuples.1.0#0,aggregate%substring3%3#0 (copy)
        int 16                                                                                   tuple_of_tuples.0.0#0,tuple_of_tuples.0.1#0,aggregate%substring3%3#0,tuple_of_tuples.1.0#0,aggregate%substring3%3#0 (copy),16
        extract_uint16                                                                           tuple_of_tuples.0.0#0,tuple_of_tuples.0.1#0,aggregate%substring3%3#0,tuple_of_tuples.1.0#0,aggregate%extract_uint16%6#0
        l-load-copy aggregate%substring3%3#0 2                                                   tuple_of_tuples.0.0#0,tuple_of_tuples.0.1#0,aggregate%substring3%3#0,tuple_of_tuples.1.0#0,aggregate%extract_uint16%6#0,aggregate%substring3%3#0 (copy)
        len                                                                                      tuple_of_tuples.0.0#0,tuple_of_tuples.0.1#0,aggregate%substring3%3#0,tuple_of_tuples.1.0#0,aggregate%extract_uint16%6#0,aggregate%len%2#0
        l-load-copy aggregate%substring3%3#0 3                                                   tuple_of_tuples.0.0#0,tuple_of_tuples.0.1#0,aggregate%substring3%3#0,tuple_of_tuples.1.0#0,aggregate%extract_uint16%6#0,aggregate%len%2#0,aggregate%substring3%3#0 (copy)
        l-load aggregate%extract_uint16%6#0 2                                                    tuple_of_tuples.0.0#0,tuple_of_tuples.0.1#0,aggregate%substring3%3#0,tuple_of_tuples.1.0#0,aggregate%len%2#0,aggregate%substring3%3#0 (copy),aggregate%extract_uint16%6#0
        l-load aggregate%len%2#0 2                                                               tuple_of_tuples.0.0#0,tuple_of_tuples.0.1#0,aggregate%substring3%3#0,tuple_of_tuples.1.0#0,aggregate%substring3%3#0 (copy),aggregate%extract_uint16%6#0,aggregate%len%2#0
        substring3                                                                               tuple_of_tuples.0.0#0,tuple_of_tuples.0.1#0,aggregate%substring3%3#0,tuple_of_tuples.1.0#0,aggregate%substring3%4#0
        extract 2 0                                                                              tuple_of_tuples.0.0#0,tuple_of_tuples.0.1#0,aggregate%substring3%3#0,tuple_of_tuples.1.0#0,tuple_of_tuples.1.2#0
        // typed_abi_call/logger.py:128
        // return ("echo: " + string, "echo: " + arc4_string), (
        byte "echo: "                                                                            tuple_of_tuples.0.0#0,tuple_of_tuples.0.1#0,aggregate%substring3%3#0,tuple_of_tuples.1.0#0,tuple_of_tuples.1.2#0,"echo: "
        l-load tuple_of_tuples.0.0#0 5                                                           tuple_of_tuples.0.1#0,aggregate%substring3%3#0,tuple_of_tuples.1.0#0,tuple_of_tuples.1.2#0,"echo: ",tuple_of_tuples.0.0#0
        concat                                                                                   tuple_of_tuples.0.1#0,aggregate%substring3%3#0,tuple_of_tuples.1.0#0,tuple_of_tuples.1.2#0,tmp%0#1
        l-load tuple_of_tuples.0.1#0 4                                                           aggregate%substring3%3#0,tuple_of_tuples.1.0#0,tuple_of_tuples.1.2#0,tmp%0#1,tuple_of_tuples.0.1#0
        extract 2 0                                                                              aggregate%substring3%3#0,tuple_of_tuples.1.0#0,tuple_of_tuples.1.2#0,tmp%0#1,extract_to_end%0#0
        byte 0x00066563686f3a20                                                                  aggregate%substring3%3#0,tuple_of_tuples.1.0#0,tuple_of_tuples.1.2#0,tmp%0#1,extract_to_end%0#0,0x00066563686f3a20
        l-load extract_to_end%0#0 1                                                              aggregate%substring3%3#0,tuple_of_tuples.1.0#0,tuple_of_tuples.1.2#0,tmp%0#1,0x00066563686f3a20,extract_to_end%0#0
        concat // on error: max array length exceeded                                            aggregate%substring3%3#0,tuple_of_tuples.1.0#0,tuple_of_tuples.1.2#0,tmp%0#1,concat%0#0
        l-load-copy concat%0#0 0                                                                 aggregate%substring3%3#0,tuple_of_tuples.1.0#0,tuple_of_tuples.1.2#0,tmp%0#1,concat%0#0,concat%0#0 (copy)
        extract 2 0                                                                              aggregate%substring3%3#0,tuple_of_tuples.1.0#0,tuple_of_tuples.1.2#0,tmp%0#1,concat%0#0,extract_to_end%1#0
        len                                                                                      aggregate%substring3%3#0,tuple_of_tuples.1.0#0,tuple_of_tuples.1.2#0,tmp%0#1,concat%0#0,len%0#0
        itob                                                                                     aggregate%substring3%3#0,tuple_of_tuples.1.0#0,tuple_of_tuples.1.2#0,tmp%0#1,concat%0#0,as_bytes%0#0
        extract 6 2                                                                              aggregate%substring3%3#0,tuple_of_tuples.1.0#0,tuple_of_tuples.1.2#0,tmp%0#1,concat%0#0,as_u16_bytes%0#0
        l-load concat%0#0 1                                                                      aggregate%substring3%3#0,tuple_of_tuples.1.0#0,tuple_of_tuples.1.2#0,tmp%0#1,as_u16_bytes%0#0,concat%0#0
        l-load as_u16_bytes%0#0 1                                                                aggregate%substring3%3#0,tuple_of_tuples.1.0#0,tuple_of_tuples.1.2#0,tmp%0#1,concat%0#0,as_u16_bytes%0#0
        replace2 0                                                                               aggregate%substring3%3#0,tuple_of_tuples.1.0#0,tuple_of_tuples.1.2#0,tmp%0#1,replace%0#0
        // typed_abi_call/logger.py:129
        // u64 + 1,
        l-load tuple_of_tuples.1.0#0 3                                                           aggregate%substring3%3#0,tuple_of_tuples.1.2#0,tmp%0#1,replace%0#0,tuple_of_tuples.1.0#0
        int 1                                                                                    aggregate%substring3%3#0,tuple_of_tuples.1.2#0,tmp%0#1,replace%0#0,tuple_of_tuples.1.0#0,1
        +                                                                                        aggregate%substring3%3#0,tuple_of_tuples.1.2#0,tmp%0#1,replace%0#0,tmp%2#1
        // typed_abi_call/logger.py:130
        // arc4.UInt64(arc4_u64.native + 1),
        l-load aggregate%substring3%3#0 4                                                        tuple_of_tuples.1.2#0,tmp%0#1,replace%0#0,tmp%2#1,aggregate%substring3%3#0
        // typed_abi_call/logger.py:123
        // @arc4.abimethod
        int 8                                                                                    tuple_of_tuples.1.2#0,tmp%0#1,replace%0#0,tmp%2#1,aggregate%substring3%3#0,8
        // typed_abi_call/logger.py:130
        // arc4.UInt64(arc4_u64.native + 1),
        extract_uint64                                                                           tuple_of_tuples.1.2#0,tmp%0#1,replace%0#0,tmp%2#1,tmp%3#1
        int 1                                                                                    tuple_of_tuples.1.2#0,tmp%0#1,replace%0#0,tmp%2#1,tmp%3#1,1
        +                                                                                        tuple_of_tuples.1.2#0,tmp%0#1,replace%0#0,tmp%2#1,tmp%4#1
        itob                                                                                     tuple_of_tuples.1.2#0,tmp%0#1,replace%0#0,tmp%2#1,aggregate%val_as_bytes%0#0
        // typed_abi_call/logger.py:131
        // b"echo: " + bytez,
        byte 0x6563686f3a20                                                                      tuple_of_tuples.1.2#0,tmp%0#1,replace%0#0,tmp%2#1,aggregate%val_as_bytes%0#0,0x6563686f3a20
        l-load tuple_of_tuples.1.2#0 5                                                           tmp%0#1,replace%0#0,tmp%2#1,aggregate%val_as_bytes%0#0,0x6563686f3a20,tuple_of_tuples.1.2#0
        concat                                                                                   tmp%0#1,replace%0#0,tmp%2#1,aggregate%val_as_bytes%0#0,tmp%6#1
        // typed_abi_call/logger.py:123
        // @arc4.abimethod
        l-load-copy tmp%0#1 4                                                                    tmp%0#1,replace%0#0,tmp%2#1,aggregate%val_as_bytes%0#0,tmp%6#1,tmp%0#1 (copy)
        len                                                                                      tmp%0#1,replace%0#0,tmp%2#1,aggregate%val_as_bytes%0#0,tmp%6#1,aggregate%length%1#0
        itob                                                                                     tmp%0#1,replace%0#0,tmp%2#1,aggregate%val_as_bytes%0#0,tmp%6#1,aggregate%as_bytes%1#0
        extract 6 2                                                                              tmp%0#1,replace%0#0,tmp%2#1,aggregate%val_as_bytes%0#0,tmp%6#1,aggregate%length_uint16%1#0
        l-load tmp%0#1 5                                                                         replace%0#0,tmp%2#1,aggregate%val_as_bytes%0#0,tmp%6#1,aggregate%length_uint16%1#0,tmp%0#1
        concat                                                                                   replace%0#0,tmp%2#1,aggregate%val_as_bytes%0#0,tmp%6#1,aggregate%encoded_value%1#0
        l-load-copy aggregate%encoded_value%1#0 0                                                replace%0#0,tmp%2#1,aggregate%val_as_bytes%0#0,tmp%6#1,aggregate%encoded_value%1#0,aggregate%encoded_value%1#0 (copy)
        len                                                                                      replace%0#0,tmp%2#1,aggregate%val_as_bytes%0#0,tmp%6#1,aggregate%encoded_value%1#0,aggregate%data_length%0#0
        int 4                                                                                    replace%0#0,tmp%2#1,aggregate%val_as_bytes%0#0,tmp%6#1,aggregate%encoded_value%1#0,aggregate%data_length%0#0,4
        l-load aggregate%data_length%0#0 1                                                       replace%0#0,tmp%2#1,aggregate%val_as_bytes%0#0,tmp%6#1,aggregate%encoded_value%1#0,4,aggregate%data_length%0#0
        +                                                                                        replace%0#0,tmp%2#1,aggregate%val_as_bytes%0#0,tmp%6#1,aggregate%encoded_value%1#0,aggregate%current_tail_offset%0#0
        itob                                                                                     replace%0#0,tmp%2#1,aggregate%val_as_bytes%0#0,tmp%6#1,aggregate%encoded_value%1#0,aggregate%as_bytes%3#0
        extract 6 2                                                                              replace%0#0,tmp%2#1,aggregate%val_as_bytes%0#0,tmp%6#1,aggregate%encoded_value%1#0,aggregate%offset_as_uint16%1#0
        byte 0x0004                                                                              replace%0#0,tmp%2#1,aggregate%val_as_bytes%0#0,tmp%6#1,aggregate%encoded_value%1#0,aggregate%offset_as_uint16%1#0,0x0004
        l-load aggregate%offset_as_uint16%1#0 1                                                  replace%0#0,tmp%2#1,aggregate%val_as_bytes%0#0,tmp%6#1,aggregate%encoded_value%1#0,0x0004,aggregate%offset_as_uint16%1#0
        concat                                                                                   replace%0#0,tmp%2#1,aggregate%val_as_bytes%0#0,tmp%6#1,aggregate%encoded_value%1#0,aggregate%head%1#0
        l-load aggregate%encoded_value%1#0 1                                                     replace%0#0,tmp%2#1,aggregate%val_as_bytes%0#0,tmp%6#1,aggregate%head%1#0,aggregate%encoded_value%1#0
        concat                                                                                   replace%0#0,tmp%2#1,aggregate%val_as_bytes%0#0,tmp%6#1,aggregate%concat%0#0
        l-load replace%0#0 4                                                                     tmp%2#1,aggregate%val_as_bytes%0#0,tmp%6#1,aggregate%concat%0#0,replace%0#0
        concat                                                                                   tmp%2#1,aggregate%val_as_bytes%0#0,tmp%6#1,aggregate%concat%1#0
        l-load-copy aggregate%concat%1#0 0                                                       tmp%2#1,aggregate%val_as_bytes%0#0,tmp%6#1,aggregate%concat%1#0,aggregate%concat%1#0 (copy)
        len                                                                                      tmp%2#1,aggregate%val_as_bytes%0#0,tmp%6#1,aggregate%concat%1#0,aggregate%data_length%2#0
        int 4                                                                                    tmp%2#1,aggregate%val_as_bytes%0#0,tmp%6#1,aggregate%concat%1#0,aggregate%data_length%2#0,4
        l-load aggregate%data_length%2#0 1                                                       tmp%2#1,aggregate%val_as_bytes%0#0,tmp%6#1,aggregate%concat%1#0,4,aggregate%data_length%2#0
        +                                                                                        tmp%2#1,aggregate%val_as_bytes%0#0,tmp%6#1,aggregate%concat%1#0,aggregate%current_tail_offset%2#0
        l-load tmp%2#1 4                                                                         aggregate%val_as_bytes%0#0,tmp%6#1,aggregate%concat%1#0,aggregate%current_tail_offset%2#0,tmp%2#1
        itob                                                                                     aggregate%val_as_bytes%0#0,tmp%6#1,aggregate%concat%1#0,aggregate%current_tail_offset%2#0,aggregate%val_as_bytes%1#0
        l-load aggregate%val_as_bytes%0#0 4                                                      tmp%6#1,aggregate%concat%1#0,aggregate%current_tail_offset%2#0,aggregate%val_as_bytes%1#0,aggregate%val_as_bytes%0#0
        concat                                                                                   tmp%6#1,aggregate%concat%1#0,aggregate%current_tail_offset%2#0,aggregate%head%4#0
        l-load-copy tmp%6#1 3                                                                    tmp%6#1,aggregate%concat%1#0,aggregate%current_tail_offset%2#0,aggregate%head%4#0,tmp%6#1 (copy)
        len                                                                                      tmp%6#1,aggregate%concat%1#0,aggregate%current_tail_offset%2#0,aggregate%head%4#0,aggregate%length%2#0
        itob                                                                                     tmp%6#1,aggregate%concat%1#0,aggregate%current_tail_offset%2#0,aggregate%head%4#0,aggregate%as_bytes%5#0
        extract 6 2                                                                              tmp%6#1,aggregate%concat%1#0,aggregate%current_tail_offset%2#0,aggregate%head%4#0,aggregate%length_uint16%2#0
        l-load tmp%6#1 4                                                                         aggregate%concat%1#0,aggregate%current_tail_offset%2#0,aggregate%head%4#0,aggregate%length_uint16%2#0,tmp%6#1
        concat                                                                                   aggregate%concat%1#0,aggregate%current_tail_offset%2#0,aggregate%head%4#0,aggregate%encoded_value%2#0
        l-load aggregate%head%4#0 1                                                              aggregate%concat%1#0,aggregate%current_tail_offset%2#0,aggregate%encoded_value%2#0,aggregate%head%4#0
        byte 0x0012                                                                              aggregate%concat%1#0,aggregate%current_tail_offset%2#0,aggregate%encoded_value%2#0,aggregate%head%4#0,0x0012
        concat                                                                                   aggregate%concat%1#0,aggregate%current_tail_offset%2#0,aggregate%encoded_value%2#0,aggregate%head%5#0
        l-load aggregate%encoded_value%2#0 1                                                     aggregate%concat%1#0,aggregate%current_tail_offset%2#0,aggregate%head%5#0,aggregate%encoded_value%2#0
        concat                                                                                   aggregate%concat%1#0,aggregate%current_tail_offset%2#0,aggregate%concat%2#0
        l-load aggregate%current_tail_offset%2#0 1                                               aggregate%concat%1#0,aggregate%concat%2#0,aggregate%current_tail_offset%2#0
        itob                                                                                     aggregate%concat%1#0,aggregate%concat%2#0,aggregate%as_bytes%7#0
        extract 6 2                                                                              aggregate%concat%1#0,aggregate%concat%2#0,aggregate%offset_as_uint16%4#0
        byte 0x0004                                                                              aggregate%concat%1#0,aggregate%concat%2#0,aggregate%offset_as_uint16%4#0,0x0004
        l-load aggregate%offset_as_uint16%4#0 1                                                  aggregate%concat%1#0,aggregate%concat%2#0,0x0004,aggregate%offset_as_uint16%4#0
        concat                                                                                   aggregate%concat%1#0,aggregate%concat%2#0,aggregate%head%6#0
        l-load aggregate%concat%1#0 2                                                            aggregate%concat%2#0,aggregate%head%6#0,aggregate%concat%1#0
        concat                                                                                   aggregate%concat%2#0,aggregate%concat%3#0
        l-load aggregate%concat%2#0 1                                                            aggregate%concat%3#0,aggregate%concat%2#0
        concat                                                                                   aggregate%concat%4#0
        byte 0x151f7c75                                                                          aggregate%concat%4#0,0x151f7c75
        l-load aggregate%concat%4#0 1                                                            0x151f7c75,aggregate%concat%4#0
        concat                                                                                   tmp%11#0
        log
        int 1                                                                                    1
        return


// test_cases.typed_abi_call.logger.Logger.return_args_after_14th[routing]() -> void:
subroutine return_args_after_14th:
    return_args_after_14th_block@0:
        // typed_abi_call/logger.py:134
        // @arc4.abimethod
        txna ApplicationArgs 15                                                                  reinterpret_Encoded(uint8,uint8,uint8,uint8,(uint8,uint8,uint8,uint8),uint8)%0#0
        extract 0 1                                                                              a15#0
        txna ApplicationArgs 15                                                                  a15#0,reinterpret_Encoded(uint8,uint8,uint8,uint8,(uint8,uint8,uint8,uint8),uint8)%1#0
        extract 1 1                                                                              a15#0,a16#0
        txna ApplicationArgs 15                                                                  a15#0,a16#0,reinterpret_Encoded(uint8,uint8,uint8,uint8,(uint8,uint8,uint8,uint8),uint8)%2#0
        extract 2 1                                                                              a15#0,a16#0,a17#0
        txna ApplicationArgs 15                                                                  a15#0,a16#0,a17#0,reinterpret_Encoded(uint8,uint8,uint8,uint8,(uint8,uint8,uint8,uint8),uint8)%3#0
        extract 3 1                                                                              a15#0,a16#0,a17#0,a18#0
        txna ApplicationArgs 15                                                                  a15#0,a16#0,a17#0,a18#0,reinterpret_Encoded(uint8,uint8,uint8,uint8,(uint8,uint8,uint8,uint8),uint8)%4#0
        extract 4 4                                                                              a15#0,a16#0,a17#0,a18#0,a19#0
        txna ApplicationArgs 15                                                                  a15#0,a16#0,a17#0,a18#0,a19#0,reinterpret_Encoded(uint8,uint8,uint8,uint8,(uint8,uint8,uint8,uint8),uint8)%5#0
        extract 8 1                                                                              a15#0,a16#0,a17#0,a18#0,a19#0,a20#0
        // typed_abi_call/logger.py:158
        // last_arg = arc4.Tuple((a15, a16, a17, a18, a19, a20))
        l-load a15#0 5                                                                           a16#0,a17#0,a18#0,a19#0,a20#0,a15#0
        l-load a16#0 5                                                                           a17#0,a18#0,a19#0,a20#0,a15#0,a16#0
        concat                                                                                   a17#0,a18#0,a19#0,a20#0,aggregate%head%1#0
        l-load a17#0 4                                                                           a18#0,a19#0,a20#0,aggregate%head%1#0,a17#0
        concat                                                                                   a18#0,a19#0,a20#0,aggregate%head%2#0
        l-load a18#0 3                                                                           a19#0,a20#0,aggregate%head%2#0,a18#0
        concat                                                                                   a19#0,a20#0,aggregate%head%3#0
        l-load a19#0 2                                                                           a20#0,aggregate%head%3#0,a19#0
        concat                                                                                   a20#0,aggregate%head%4#0
        l-load a20#0 1                                                                           aggregate%head%4#0,a20#0
        concat                                                                                   last_arg#0
        // typed_abi_call/logger.py:159
        // assert Txn.application_args(15) == last_arg.bytes
        txna ApplicationArgs 15                                                                  last_arg#0,tmp%1#0
        l-load-copy last_arg#0 1                                                                 last_arg#0,tmp%1#0,last_arg#0 (copy)
        ==                                                                                       last_arg#0,tmp%2#0
        assert                                                                                   last_arg#0
        // typed_abi_call/logger.py:160
        // return arc4.DynamicBytes(last_arg.bytes)
        l-load-copy last_arg#0 0                                                                 last_arg#0,last_arg#0 (copy)
        len                                                                                      last_arg#0,aggregate%length%0#0
        itob                                                                                     last_arg#0,aggregate%as_bytes%0#0
        extract 6 2                                                                              last_arg#0,aggregate%length_uint16%0#0
        l-load last_arg#0 1                                                                      aggregate%length_uint16%0#0,last_arg#0
        concat                                                                                   aggregate%encoded_value%0#0
        // typed_abi_call/logger.py:134
        // @arc4.abimethod
        byte 0x151f7c75                                                                          aggregate%encoded_value%0#0,0x151f7c75
        l-load aggregate%encoded_value%0#0 1                                                     0x151f7c75,aggregate%encoded_value%0#0
        concat                                                                                   tmp%1#0
        log
        int 1                                                                                    1
        return


// test_cases.typed_abi_call.logger.Logger.logs_are_equal[routing]() -> void:
subroutine logs_are_equal:
    logs_are_equal_block@0:
        // typed_abi_call/logger.py:162
        // @arc4.abimethod
        txna ApplicationArgs 1                                                                   reinterpret_Encoded(uint64,(len+utf8[]))%0#0
        l-load-copy reinterpret_Encoded(uint64,(len+utf8[]))%0#0 0                               reinterpret_Encoded(uint64,(len+utf8[]))%0#0,reinterpret_Encoded(uint64,(len+utf8[]))%0#0 (copy)
        int 0                                                                                    reinterpret_Encoded(uint64,(len+utf8[]))%0#0,reinterpret_Encoded(uint64,(len+utf8[]))%0#0 (copy),0
        extract_uint64                                                                           reinterpret_Encoded(uint64,(len+utf8[]))%0#0,log_1.level#0
        l-load-copy reinterpret_Encoded(uint64,(len+utf8[]))%0#0 1                               reinterpret_Encoded(uint64,(len+utf8[]))%0#0,log_1.level#0,reinterpret_Encoded(uint64,(len+utf8[]))%0#0 (copy)
        int 8                                                                                    reinterpret_Encoded(uint64,(len+utf8[]))%0#0,log_1.level#0,reinterpret_Encoded(uint64,(len+utf8[]))%0#0 (copy),8
        extract_uint16                                                                           reinterpret_Encoded(uint64,(len+utf8[]))%0#0,log_1.level#0,aggregate%extract_uint16%0#0
        l-load-copy reinterpret_Encoded(uint64,(len+utf8[]))%0#0 2                               reinterpret_Encoded(uint64,(len+utf8[]))%0#0,log_1.level#0,aggregate%extract_uint16%0#0,reinterpret_Encoded(uint64,(len+utf8[]))%0#0 (copy)
        len                                                                                      reinterpret_Encoded(uint64,(len+utf8[]))%0#0,log_1.level#0,aggregate%extract_uint16%0#0,aggregate%len%0#0
        l-load reinterpret_Encoded(uint64,(len+utf8[]))%0#0 3                                    log_1.level#0,aggregate%extract_uint16%0#0,aggregate%len%0#0,reinterpret_Encoded(uint64,(len+utf8[]))%0#0
        l-load aggregate%extract_uint16%0#0 2                                                    log_1.level#0,aggregate%len%0#0,reinterpret_Encoded(uint64,(len+utf8[]))%0#0,aggregate%extract_uint16%0#0
        l-load aggregate%len%0#0 2                                                               log_1.level#0,reinterpret_Encoded(uint64,(len+utf8[]))%0#0,aggregate%extract_uint16%0#0,aggregate%len%0#0
        substring3                                                                               log_1.level#0,aggregate%substring3%0#0
        extract 2 0                                                                              log_1.level#0,log_1.message#0
        txna ApplicationArgs 2                                                                   log_1.level#0,log_1.message#0,reinterpret_Encoded(uint64,(len+utf8[]))%1#0
        l-load-copy reinterpret_Encoded(uint64,(len+utf8[]))%1#0 0                               log_1.level#0,log_1.message#0,reinterpret_Encoded(uint64,(len+utf8[]))%1#0,reinterpret_Encoded(uint64,(len+utf8[]))%1#0 (copy)
        int 0                                                                                    log_1.level#0,log_1.message#0,reinterpret_Encoded(uint64,(len+utf8[]))%1#0,reinterpret_Encoded(uint64,(len+utf8[]))%1#0 (copy),0
        extract_uint64                                                                           log_1.level#0,log_1.message#0,reinterpret_Encoded(uint64,(len+utf8[]))%1#0,log_2.level#0
        l-load-copy reinterpret_Encoded(uint64,(len+utf8[]))%1#0 1                               log_1.level#0,log_1.message#0,reinterpret_Encoded(uint64,(len+utf8[]))%1#0,log_2.level#0,reinterpret_Encoded(uint64,(len+utf8[]))%1#0 (copy)
        int 8                                                                                    log_1.level#0,log_1.message#0,reinterpret_Encoded(uint64,(len+utf8[]))%1#0,log_2.level#0,reinterpret_Encoded(uint64,(len+utf8[]))%1#0 (copy),8
        extract_uint16                                                                           log_1.level#0,log_1.message#0,reinterpret_Encoded(uint64,(len+utf8[]))%1#0,log_2.level#0,aggregate%extract_uint16%1#0
        l-load-copy reinterpret_Encoded(uint64,(len+utf8[]))%1#0 2                               log_1.level#0,log_1.message#0,reinterpret_Encoded(uint64,(len+utf8[]))%1#0,log_2.level#0,aggregate%extract_uint16%1#0,reinterpret_Encoded(uint64,(len+utf8[]))%1#0 (copy)
        len                                                                                      log_1.level#0,log_1.message#0,reinterpret_Encoded(uint64,(len+utf8[]))%1#0,log_2.level#0,aggregate%extract_uint16%1#0,aggregate%len%1#0
        l-load reinterpret_Encoded(uint64,(len+utf8[]))%1#0 3                                    log_1.level#0,log_1.message#0,log_2.level#0,aggregate%extract_uint16%1#0,aggregate%len%1#0,reinterpret_Encoded(uint64,(len+utf8[]))%1#0
        l-load aggregate%extract_uint16%1#0 2                                                    log_1.level#0,log_1.message#0,log_2.level#0,aggregate%len%1#0,reinterpret_Encoded(uint64,(len+utf8[]))%1#0,aggregate%extract_uint16%1#0
        l-load aggregate%len%1#0 2                                                               log_1.level#0,log_1.message#0,log_2.level#0,reinterpret_Encoded(uint64,(len+utf8[]))%1#0,aggregate%extract_uint16%1#0,aggregate%len%1#0
        substring3                                                                               log_1.level#0,log_1.message#0,log_2.level#0,aggregate%substring3%1#0
        extract 2 0                                                                              log_1.level#0,log_1.message#0,log_2.level#0,log_2.message#0
        // typed_abi_call/logger.py:164
        // return log_1 == log_2
        l-load log_1.level#0 3                                                                   log_1.message#0,log_2.level#0,log_2.message#0,log_1.level#0
        l-load log_2.level#0 2                                                                   log_1.message#0,log_2.message#0,log_1.level#0,log_2.level#0
        ==                                                                                       log_1.message#0,log_2.message#0,tmp%0#1
        l-load log_1.message#0 2                                                                 log_2.message#0,tmp%0#1,log_1.message#0
        l-load log_2.message#0 2                                                                 tmp%0#1,log_1.message#0,log_2.message#0
        ==                                                                                       tmp%0#1,tmp%1#1
        l-load tmp%0#1 1                                                                         tmp%1#1,tmp%0#1
        l-load tmp%1#1 1                                                                         tmp%0#1,tmp%1#1
        &&                                                                                       tmp%2#1
        // typed_abi_call/logger.py:162
        // @arc4.abimethod
        byte 0x00                                                                                tmp%2#1,0x00
        int 0                                                                                    tmp%2#1,0x00,0
        l-load tmp%2#1 2                                                                         0x00,0,tmp%2#1
        setbit                                                                                   aggregate%encoded_bool%0#0
        byte 0x151f7c75                                                                          aggregate%encoded_bool%0#0,0x151f7c75
        l-load aggregate%encoded_bool%0#0 1                                                      0x151f7c75,aggregate%encoded_bool%0#0
        concat                                                                                   tmp%6#0
        log
        int 1                                                                                    1
        return


// test_cases.typed_abi_call.logger.Logger.echo_log_struct[routing]() -> void:
subroutine echo_log_struct:
    echo_log_struct_block@0:
        // typed_abi_call/logger.py:166
        // @arc4.abimethod
        txna ApplicationArgs 1                                                                   log#0
        byte 0x151f7c75                                                                          log#0,0x151f7c75
        l-load log#0 1                                                                           0x151f7c75,log#0
        concat                                                                                   tmp%1#0
        log
        int 1                                                                                    1
        return


