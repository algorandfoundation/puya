contract test_cases.typed_abi_call.typed_c2c.Greeter:
    program approval:
        subroutine test_cases.typed_abi_call.typed_c2c.Greeter.approval_program() -> bool:
            block@0: // L17
                let tmp%0#0: bool = (txn NumAppArgs)
                goto tmp%0#0 ? block@1 : block@15
            block@1: // abi_routing_L17
                let tmp%1#0: bytes = (txna ApplicationArgs 0)
                switch tmp%1#0 {method "test_method_selector_kinds(application)void" => block@2, method "test_method_overload(application)void" => block@3, method "test_arg_conversion(application)void" => block@4, method "test_15plus_args(application)void" => block@5, method "test_void(application)void" => block@6, method "test_ref_types(application,asset)void" => block@7, method "test_native_string(application)void" => block@8, method "test_native_bytes(application)void" => block@9, method "test_native_uint64(application)void" => block@10, method "test_native_biguint(application)void" => block@11, method "test_native_tuple(application)void" => block@12, * => block@13}
            block@2: // test_method_selector_kinds_route_L18
                let tmp%2#0: uint64 = (txn OnCompletion)
                let tmp%3#0: bool = (== tmp%2#0 NoOp)
                (assert tmp%3#0) // OnCompletion is NoOp
                let tmp%4#0: bool = (txn ApplicationID)
                (assert tmp%4#0) // is not creating
                let tmp%5#0: bytes = (txna ApplicationArgs 1)
                let tmp%6#0: uint64 = (btoi tmp%5#0)
                let tmp%7#0: uint64 = ((txnas Applications) tmp%6#0)
                test_cases.typed_abi_call.typed_c2c.Greeter.test_method_selector_kinds(tmp%7#0)
                return 1u
            block@3: // test_method_overload_route_L31
                let tmp%8#0: uint64 = (txn OnCompletion)
                let tmp%9#0: bool = (== tmp%8#0 NoOp)
                (assert tmp%9#0) // OnCompletion is NoOp
                let tmp%10#0: bool = (txn ApplicationID)
                (assert tmp%10#0) // is not creating
                let tmp%11#0: bytes = (txna ApplicationArgs 1)
                let tmp%12#0: uint64 = (btoi tmp%11#0)
                let tmp%13#0: uint64 = ((txnas Applications) tmp%12#0)
                test_cases.typed_abi_call.typed_c2c.Greeter.test_method_overload(tmp%13#0)
                return 1u
            block@4: // test_arg_conversion_route_L46
                let tmp%14#0: uint64 = (txn OnCompletion)
                let tmp%15#0: bool = (== tmp%14#0 NoOp)
                (assert tmp%15#0) // OnCompletion is NoOp
                let tmp%16#0: bool = (txn ApplicationID)
                (assert tmp%16#0) // is not creating
                let tmp%17#0: bytes = (txna ApplicationArgs 1)
                let tmp%18#0: uint64 = (btoi tmp%17#0)
                let tmp%19#0: uint64 = ((txnas Applications) tmp%18#0)
                test_cases.typed_abi_call.typed_c2c.Greeter.test_arg_conversion(tmp%19#0)
                return 1u
            block@5: // test_15plus_args_route_L63
                let tmp%20#0: uint64 = (txn OnCompletion)
                let tmp%21#0: bool = (== tmp%20#0 NoOp)
                (assert tmp%21#0) // OnCompletion is NoOp
                let tmp%22#0: bool = (txn ApplicationID)
                (assert tmp%22#0) // is not creating
                let tmp%23#0: bytes = (txna ApplicationArgs 1)
                let tmp%24#0: uint64 = (btoi tmp%23#0)
                let tmp%25#0: uint64 = ((txnas Applications) tmp%24#0)
                test_cases.typed_abi_call.typed_c2c.Greeter.test_15plus_args(tmp%25#0)
                return 1u
            block@6: // test_void_route_L91
                let tmp%26#0: uint64 = (txn OnCompletion)
                let tmp%27#0: bool = (== tmp%26#0 NoOp)
                (assert tmp%27#0) // OnCompletion is NoOp
                let tmp%28#0: bool = (txn ApplicationID)
                (assert tmp%28#0) // is not creating
                let tmp%29#0: bytes = (txna ApplicationArgs 1)
                let tmp%30#0: uint64 = (btoi tmp%29#0)
                let tmp%31#0: uint64 = ((txnas Applications) tmp%30#0)
                test_cases.typed_abi_call.typed_c2c.Greeter.test_void(tmp%31#0)
                return 1u
            block@7: // test_ref_types_route_L105
                let tmp%32#0: uint64 = (txn OnCompletion)
                let tmp%33#0: bool = (== tmp%32#0 NoOp)
                (assert tmp%33#0) // OnCompletion is NoOp
                let tmp%34#0: bool = (txn ApplicationID)
                (assert tmp%34#0) // is not creating
                let tmp%35#0: bytes = (txna ApplicationArgs 1)
                let tmp%36#0: uint64 = (btoi tmp%35#0)
                let tmp%37#0: uint64 = ((txnas Applications) tmp%36#0)
                let tmp%38#0: bytes = (txna ApplicationArgs 2)
                let tmp%39#0: uint64 = (btoi tmp%38#0)
                let tmp%40#0: uint64 = ((txnas Assets) tmp%39#0)
                test_cases.typed_abi_call.typed_c2c.Greeter.test_ref_types(tmp%37#0, tmp%40#0)
                return 1u
            block@8: // test_native_string_route_L119
                let tmp%41#0: uint64 = (txn OnCompletion)
                let tmp%42#0: bool = (== tmp%41#0 NoOp)
                (assert tmp%42#0) // OnCompletion is NoOp
                let tmp%43#0: bool = (txn ApplicationID)
                (assert tmp%43#0) // is not creating
                let tmp%44#0: bytes = (txna ApplicationArgs 1)
                let tmp%45#0: uint64 = (btoi tmp%44#0)
                let tmp%46#0: uint64 = ((txnas Applications) tmp%45#0)
                test_cases.typed_abi_call.typed_c2c.Greeter.test_native_string(tmp%46#0)
                return 1u
            block@9: // test_native_bytes_route_L130
                let tmp%47#0: uint64 = (txn OnCompletion)
                let tmp%48#0: bool = (== tmp%47#0 NoOp)
                (assert tmp%48#0) // OnCompletion is NoOp
                let tmp%49#0: bool = (txn ApplicationID)
                (assert tmp%49#0) // is not creating
                let tmp%50#0: bytes = (txna ApplicationArgs 1)
                let tmp%51#0: uint64 = (btoi tmp%50#0)
                let tmp%52#0: uint64 = ((txnas Applications) tmp%51#0)
                test_cases.typed_abi_call.typed_c2c.Greeter.test_native_bytes(tmp%52#0)
                return 1u
            block@10: // test_native_uint64_route_L143
                let tmp%53#0: uint64 = (txn OnCompletion)
                let tmp%54#0: bool = (== tmp%53#0 NoOp)
                (assert tmp%54#0) // OnCompletion is NoOp
                let tmp%55#0: bool = (txn ApplicationID)
                (assert tmp%55#0) // is not creating
                let tmp%56#0: bytes = (txna ApplicationArgs 1)
                let tmp%57#0: uint64 = (btoi tmp%56#0)
                let tmp%58#0: uint64 = ((txnas Applications) tmp%57#0)
                test_cases.typed_abi_call.typed_c2c.Greeter.test_native_uint64(tmp%58#0)
                return 1u
            block@11: // test_native_biguint_route_L154
                let tmp%59#0: uint64 = (txn OnCompletion)
                let tmp%60#0: bool = (== tmp%59#0 NoOp)
                (assert tmp%60#0) // OnCompletion is NoOp
                let tmp%61#0: bool = (txn ApplicationID)
                (assert tmp%61#0) // is not creating
                let tmp%62#0: bytes = (txna ApplicationArgs 1)
                let tmp%63#0: uint64 = (btoi tmp%62#0)
                let tmp%64#0: uint64 = ((txnas Applications) tmp%63#0)
                test_cases.typed_abi_call.typed_c2c.Greeter.test_native_biguint(tmp%64#0)
                return 1u
            block@12: // test_native_tuple_route_L165
                let tmp%65#0: uint64 = (txn OnCompletion)
                let tmp%66#0: bool = (== tmp%65#0 NoOp)
                (assert tmp%66#0) // OnCompletion is NoOp
                let tmp%67#0: bool = (txn ApplicationID)
                (assert tmp%67#0) // is not creating
                let tmp%68#0: bytes = (txna ApplicationArgs 1)
                let tmp%69#0: uint64 = (btoi tmp%68#0)
                let tmp%70#0: uint64 = ((txnas Applications) tmp%69#0)
                test_cases.typed_abi_call.typed_c2c.Greeter.test_native_tuple(tmp%70#0)
                return 1u
            block@13: // switch_case_default_L17
                goto block@14
            block@14: // switch_case_next_L17
                fail // reject transaction
            block@15: // bare_routing_L17
                let tmp%71#0: uint64 = (txn OnCompletion)
                switch tmp%71#0 {0u => block@16, * => block@17}
            block@16: // create_L17
                let tmp%72#0: bool = (txn ApplicationID)
                let tmp%73#0: bool = (! tmp%72#0)
                (assert tmp%73#0) // is creating
                return 1u
            block@17: // reject_bare_on_completion_L17
                fail // reject transaction
        
        subroutine test_cases.typed_abi_call.typed_c2c.Greeter.test_method_selector_kinds(app: uint64) -> void:
            block@0: // L18
                itxn_begin
                let inner_txn_params%0#0: itxn_field_set = itxn_field_set(0)
                let inner_txn_params%0%%param_Fee_idx_0#0: uint64 = 0u
                let inner_txn_params%0%%Fee_length#0: uint64 = 1u
                let inner_txn_params%0%%param_TypeEnum_idx_0#0: uint64 = appl
                let inner_txn_params%0%%TypeEnum_length#0: uint64 = 1u
                let inner_txn_params%0%%param_ApplicationArgs_idx_0#0: bytes = method "echo(string)string"
                let inner_txn_params%0%%param_ApplicationArgs_idx_1#0: bytes = "\x00\x05test1"
                let inner_txn_params%0%%ApplicationArgs_length#0: uint64 = 2u
                let inner_txn_params%0%%param_ApplicationID_idx_0#0: uint64 = app#0
                let inner_txn_params%0%%ApplicationID_length#0: uint64 = 1u
                let inner_txn_params%0%%Sender_length#0: uint64 = 0u
                let inner_txn_params%0%%Note_length#0: uint64 = 0u
                let inner_txn_params%0%%Receiver_length#0: uint64 = 0u
                let inner_txn_params%0%%Amount_length#0: uint64 = 0u
                let inner_txn_params%0%%CloseRemainderTo_length#0: uint64 = 0u
                let inner_txn_params%0%%VotePK_length#0: uint64 = 0u
                let inner_txn_params%0%%SelectionPK_length#0: uint64 = 0u
                let inner_txn_params%0%%VoteFirst_length#0: uint64 = 0u
                let inner_txn_params%0%%VoteLast_length#0: uint64 = 0u
                let inner_txn_params%0%%VoteKeyDilution_length#0: uint64 = 0u
                let inner_txn_params%0%%Type_length#0: uint64 = 0u
                let inner_txn_params%0%%XferAsset_length#0: uint64 = 0u
                let inner_txn_params%0%%AssetAmount_length#0: uint64 = 0u
                let inner_txn_params%0%%AssetSender_length#0: uint64 = 0u
                let inner_txn_params%0%%AssetReceiver_length#0: uint64 = 0u
                let inner_txn_params%0%%AssetCloseTo_length#0: uint64 = 0u
                let inner_txn_params%0%%OnCompletion_length#0: uint64 = 0u
                let inner_txn_params%0%%ApprovalProgram_length#0: uint64 = 0u
                let inner_txn_params%0%%ClearStateProgram_length#0: uint64 = 0u
                let inner_txn_params%0%%RekeyTo_length#0: uint64 = 0u
                let inner_txn_params%0%%ConfigAsset_length#0: uint64 = 0u
                let inner_txn_params%0%%ConfigAssetTotal_length#0: uint64 = 0u
                let inner_txn_params%0%%ConfigAssetDecimals_length#0: uint64 = 0u
                let inner_txn_params%0%%ConfigAssetDefaultFrozen_length#0: uint64 = 0u
                let inner_txn_params%0%%ConfigAssetUnitName_length#0: uint64 = 0u
                let inner_txn_params%0%%ConfigAssetName_length#0: uint64 = 0u
                let inner_txn_params%0%%ConfigAssetURL_length#0: uint64 = 0u
                let inner_txn_params%0%%ConfigAssetMetadataHash_length#0: uint64 = 0u
                let inner_txn_params%0%%ConfigAssetManager_length#0: uint64 = 0u
                let inner_txn_params%0%%ConfigAssetReserve_length#0: uint64 = 0u
                let inner_txn_params%0%%ConfigAssetFreeze_length#0: uint64 = 0u
                let inner_txn_params%0%%ConfigAssetClawback_length#0: uint64 = 0u
                let inner_txn_params%0%%FreezeAsset_length#0: uint64 = 0u
                let inner_txn_params%0%%FreezeAssetAccount_length#0: uint64 = 0u
                let inner_txn_params%0%%FreezeAssetFrozen_length#0: uint64 = 0u
                let inner_txn_params%0%%GlobalNumUint_length#0: uint64 = 0u
                let inner_txn_params%0%%GlobalNumByteSlice_length#0: uint64 = 0u
                let inner_txn_params%0%%LocalNumUint_length#0: uint64 = 0u
                let inner_txn_params%0%%LocalNumByteSlice_length#0: uint64 = 0u
                let inner_txn_params%0%%ExtraProgramPages_length#0: uint64 = 0u
                let inner_txn_params%0%%Nonparticipation_length#0: uint64 = 0u
                let inner_txn_params%0%%StateProofPK_length#0: uint64 = 0u
                let inner_txn_params%0%%Accounts_length#0: uint64 = 0u
                let inner_txn_params%0%%Assets_length#0: uint64 = 0u
                let inner_txn_params%0%%Applications_length#0: uint64 = 0u
                let inner_txn_params%0%%ApprovalProgramPages_length#0: uint64 = 0u
                let inner_txn_params%0%%ClearStateProgramPages_length#0: uint64 = 0u
                ((itxn_field ApplicationID) inner_txn_params%0%%param_ApplicationID_idx_0#0)
                ((itxn_field ApplicationArgs) inner_txn_params%0%%param_ApplicationArgs_idx_0#0)
                ((itxn_field ApplicationArgs) inner_txn_params%0%%param_ApplicationArgs_idx_1#0)
                ((itxn_field TypeEnum) inner_txn_params%0%%param_TypeEnum_idx_0#0)
                ((itxn_field Fee) inner_txn_params%0%%param_Fee_idx_0#0)
                goto block@1
            block@1: // next_txn_L20
                itxn_submit
                let awst_tmp%0#0: itxn_group_idx = itxn_group_idx(0)
                let awst_tmp%1#0: bytes = itxn[awst_tmp%0#0].LastLog
                let tmp%0#0: bytes = ((extract 4 0) awst_tmp%1#0)
                let tmp%1#0: bytes = ((extract 0 4) awst_tmp%1#0)
                let tmp%2#0: bool = (== tmp%1#0 0x151f7c75)
                let (value%0#0: bytes, check%0#0: bool) = (tmp%0#0, tmp%2#0)
                (assert check%0#0) // ARC4 prefix is valid
                let result#0: bytes = value%0#0
                let _txn#0: itxn_group_idx = awst_tmp%0#0
                let _txn._is_last#0: bool = 1u
                let _txn.Sender#0: bytes = itxn[_txn#0].Sender
                let _txn.Fee#0: uint64 = itxn[_txn#0].Fee
                let _txn.FirstValid#0: uint64 = itxn[_txn#0].FirstValid
                let _txn.FirstValidTime#0: uint64 = itxn[_txn#0].FirstValidTime
                let _txn.LastValid#0: uint64 = itxn[_txn#0].LastValid
                let _txn.Note#0: bytes = itxn[_txn#0].Note
                let _txn.Lease#0: bytes = itxn[_txn#0].Lease
                let _txn.Receiver#0: bytes = itxn[_txn#0].Receiver
                let _txn.Amount#0: uint64 = itxn[_txn#0].Amount
                let _txn.CloseRemainderTo#0: bytes = itxn[_txn#0].CloseRemainderTo
                let _txn.VotePK#0: bytes = itxn[_txn#0].VotePK
                let _txn.SelectionPK#0: bytes = itxn[_txn#0].SelectionPK
                let _txn.VoteFirst#0: uint64 = itxn[_txn#0].VoteFirst
                let _txn.VoteLast#0: uint64 = itxn[_txn#0].VoteLast
                let _txn.VoteKeyDilution#0: uint64 = itxn[_txn#0].VoteKeyDilution
                let _txn.Type#0: bytes = itxn[_txn#0].Type
                let _txn.TypeEnum#0: uint64 = itxn[_txn#0].TypeEnum
                let _txn.XferAsset#0: uint64 = itxn[_txn#0].XferAsset
                let _txn.AssetAmount#0: uint64 = itxn[_txn#0].AssetAmount
                let _txn.AssetSender#0: bytes = itxn[_txn#0].AssetSender
                let _txn.AssetReceiver#0: bytes = itxn[_txn#0].AssetReceiver
                let _txn.AssetCloseTo#0: bytes = itxn[_txn#0].AssetCloseTo
                let _txn.GroupIndex#0: uint64 = itxn[_txn#0].GroupIndex
                let _txn.TxID#0: bytes = itxn[_txn#0].TxID
                let _txn.ApplicationID#0: uint64 = itxn[_txn#0].ApplicationID
                let _txn.OnCompletion#0: uint64 = itxn[_txn#0].OnCompletion
                let _txn.NumAppArgs#0: uint64 = itxn[_txn#0].NumAppArgs
                let _txn.NumAccounts#0: uint64 = itxn[_txn#0].NumAccounts
                let _txn.ApprovalProgram#0: bytes = itxn[_txn#0].ApprovalProgram
                let _txn.ClearStateProgram#0: bytes = itxn[_txn#0].ClearStateProgram
                let _txn.RekeyTo#0: bytes = itxn[_txn#0].RekeyTo
                let _txn.ConfigAsset#0: uint64 = itxn[_txn#0].ConfigAsset
                let _txn.ConfigAssetTotal#0: uint64 = itxn[_txn#0].ConfigAssetTotal
                let _txn.ConfigAssetDecimals#0: uint64 = itxn[_txn#0].ConfigAssetDecimals
                let _txn.ConfigAssetDefaultFrozen#0: bool = itxn[_txn#0].ConfigAssetDefaultFrozen
                let _txn.ConfigAssetUnitName#0: bytes = itxn[_txn#0].ConfigAssetUnitName
                let _txn.ConfigAssetName#0: bytes = itxn[_txn#0].ConfigAssetName
                let _txn.ConfigAssetURL#0: bytes = itxn[_txn#0].ConfigAssetURL
                let _txn.ConfigAssetMetadataHash#0: bytes = itxn[_txn#0].ConfigAssetMetadataHash
                let _txn.ConfigAssetManager#0: bytes = itxn[_txn#0].ConfigAssetManager
                let _txn.ConfigAssetReserve#0: bytes = itxn[_txn#0].ConfigAssetReserve
                let _txn.ConfigAssetFreeze#0: bytes = itxn[_txn#0].ConfigAssetFreeze
                let _txn.ConfigAssetClawback#0: bytes = itxn[_txn#0].ConfigAssetClawback
                let _txn.FreezeAsset#0: uint64 = itxn[_txn#0].FreezeAsset
                let _txn.FreezeAssetAccount#0: bytes = itxn[_txn#0].FreezeAssetAccount
                let _txn.FreezeAssetFrozen#0: bool = itxn[_txn#0].FreezeAssetFrozen
                let _txn.NumAssets#0: uint64 = itxn[_txn#0].NumAssets
                let _txn.NumApplications#0: uint64 = itxn[_txn#0].NumApplications
                let _txn.GlobalNumUint#0: uint64 = itxn[_txn#0].GlobalNumUint
                let _txn.GlobalNumByteSlice#0: uint64 = itxn[_txn#0].GlobalNumByteSlice
                let _txn.LocalNumUint#0: uint64 = itxn[_txn#0].LocalNumUint
                let _txn.LocalNumByteSlice#0: uint64 = itxn[_txn#0].LocalNumByteSlice
                let _txn.ExtraProgramPages#0: uint64 = itxn[_txn#0].ExtraProgramPages
                let _txn.Nonparticipation#0: bool = itxn[_txn#0].Nonparticipation
                let _txn.NumLogs#0: uint64 = itxn[_txn#0].NumLogs
                let _txn.CreatedAssetID#0: uint64 = itxn[_txn#0].CreatedAssetID
                let _txn.CreatedApplicationID#0: uint64 = itxn[_txn#0].CreatedApplicationID
                let _txn.LastLog#0: bytes = itxn[_txn#0].LastLog
                let _txn.StateProofPK#0: bytes = itxn[_txn#0].StateProofPK
                let _txn.NumApprovalProgramPages#0: uint64 = itxn[_txn#0].NumApprovalProgramPages
                let _txn.NumClearStateProgramPages#0: uint64 = itxn[_txn#0].NumClearStateProgramPages
                let tmp%3#0: bool = (== result#0 "\x00\x0becho: test1")
                (assert tmp%3#0)
                itxn_begin
                let inner_txn_params%1#0: itxn_field_set = itxn_field_set(1)
                let inner_txn_params%1%%param_Fee_idx_0#0: uint64 = 0u
                let inner_txn_params%1%%Fee_length#0: uint64 = 1u
                let inner_txn_params%1%%param_TypeEnum_idx_0#0: uint64 = appl
                let inner_txn_params%1%%TypeEnum_length#0: uint64 = 1u
                let inner_txn_params%1%%param_ApplicationArgs_idx_0#0: bytes = method "echo(string)string"
                let inner_txn_params%1%%param_ApplicationArgs_idx_1#0: bytes = "\x00\x05test2"
                let inner_txn_params%1%%ApplicationArgs_length#0: uint64 = 2u
                let inner_txn_params%1%%param_ApplicationID_idx_0#0: uint64 = app#0
                let inner_txn_params%1%%ApplicationID_length#0: uint64 = 1u
                let inner_txn_params%1%%Sender_length#0: uint64 = 0u
                let inner_txn_params%1%%Note_length#0: uint64 = 0u
                let inner_txn_params%1%%Receiver_length#0: uint64 = 0u
                let inner_txn_params%1%%Amount_length#0: uint64 = 0u
                let inner_txn_params%1%%CloseRemainderTo_length#0: uint64 = 0u
                let inner_txn_params%1%%VotePK_length#0: uint64 = 0u
                let inner_txn_params%1%%SelectionPK_length#0: uint64 = 0u
                let inner_txn_params%1%%VoteFirst_length#0: uint64 = 0u
                let inner_txn_params%1%%VoteLast_length#0: uint64 = 0u
                let inner_txn_params%1%%VoteKeyDilution_length#0: uint64 = 0u
                let inner_txn_params%1%%Type_length#0: uint64 = 0u
                let inner_txn_params%1%%XferAsset_length#0: uint64 = 0u
                let inner_txn_params%1%%AssetAmount_length#0: uint64 = 0u
                let inner_txn_params%1%%AssetSender_length#0: uint64 = 0u
                let inner_txn_params%1%%AssetReceiver_length#0: uint64 = 0u
                let inner_txn_params%1%%AssetCloseTo_length#0: uint64 = 0u
                let inner_txn_params%1%%OnCompletion_length#0: uint64 = 0u
                let inner_txn_params%1%%ApprovalProgram_length#0: uint64 = 0u
                let inner_txn_params%1%%ClearStateProgram_length#0: uint64 = 0u
                let inner_txn_params%1%%RekeyTo_length#0: uint64 = 0u
                let inner_txn_params%1%%ConfigAsset_length#0: uint64 = 0u
                let inner_txn_params%1%%ConfigAssetTotal_length#0: uint64 = 0u
                let inner_txn_params%1%%ConfigAssetDecimals_length#0: uint64 = 0u
                let inner_txn_params%1%%ConfigAssetDefaultFrozen_length#0: uint64 = 0u
                let inner_txn_params%1%%ConfigAssetUnitName_length#0: uint64 = 0u
                let inner_txn_params%1%%ConfigAssetName_length#0: uint64 = 0u
                let inner_txn_params%1%%ConfigAssetURL_length#0: uint64 = 0u
                let inner_txn_params%1%%ConfigAssetMetadataHash_length#0: uint64 = 0u
                let inner_txn_params%1%%ConfigAssetManager_length#0: uint64 = 0u
                let inner_txn_params%1%%ConfigAssetReserve_length#0: uint64 = 0u
                let inner_txn_params%1%%ConfigAssetFreeze_length#0: uint64 = 0u
                let inner_txn_params%1%%ConfigAssetClawback_length#0: uint64 = 0u
                let inner_txn_params%1%%FreezeAsset_length#0: uint64 = 0u
                let inner_txn_params%1%%FreezeAssetAccount_length#0: uint64 = 0u
                let inner_txn_params%1%%FreezeAssetFrozen_length#0: uint64 = 0u
                let inner_txn_params%1%%GlobalNumUint_length#0: uint64 = 0u
                let inner_txn_params%1%%GlobalNumByteSlice_length#0: uint64 = 0u
                let inner_txn_params%1%%LocalNumUint_length#0: uint64 = 0u
                let inner_txn_params%1%%LocalNumByteSlice_length#0: uint64 = 0u
                let inner_txn_params%1%%ExtraProgramPages_length#0: uint64 = 0u
                let inner_txn_params%1%%Nonparticipation_length#0: uint64 = 0u
                let inner_txn_params%1%%StateProofPK_length#0: uint64 = 0u
                let inner_txn_params%1%%Accounts_length#0: uint64 = 0u
                let inner_txn_params%1%%Assets_length#0: uint64 = 0u
                let inner_txn_params%1%%Applications_length#0: uint64 = 0u
                let inner_txn_params%1%%ApprovalProgramPages_length#0: uint64 = 0u
                let inner_txn_params%1%%ClearStateProgramPages_length#0: uint64 = 0u
                ((itxn_field ApplicationID) inner_txn_params%1%%param_ApplicationID_idx_0#0)
                ((itxn_field ApplicationArgs) inner_txn_params%1%%param_ApplicationArgs_idx_0#0)
                ((itxn_field ApplicationArgs) inner_txn_params%1%%param_ApplicationArgs_idx_1#0)
                ((itxn_field TypeEnum) inner_txn_params%1%%param_TypeEnum_idx_0#0)
                ((itxn_field Fee) inner_txn_params%1%%param_Fee_idx_0#0)
                goto block@2
            block@2: // next_txn_L22
                itxn_submit
                let awst_tmp%2#0: itxn_group_idx = itxn_group_idx(0)
                let awst_tmp%3#0: bytes = itxn[awst_tmp%2#0].LastLog
                let tmp%4#0: bytes = ((extract 4 0) awst_tmp%3#0)
                let tmp%5#0: bytes = ((extract 0 4) awst_tmp%3#0)
                let tmp%6#0: bool = (== tmp%5#0 0x151f7c75)
                let (value%1#0: bytes, check%1#0: bool) = (tmp%4#0, tmp%6#0)
                (assert check%1#0) // ARC4 prefix is valid
                let result#1: bytes = value%1#0
                let _txn#1: itxn_group_idx = awst_tmp%2#0
                let _txn._is_last#1: bool = 1u
                let _txn.Sender#1: bytes = itxn[_txn#1].Sender
                let _txn.Fee#1: uint64 = itxn[_txn#1].Fee
                let _txn.FirstValid#1: uint64 = itxn[_txn#1].FirstValid
                let _txn.FirstValidTime#1: uint64 = itxn[_txn#1].FirstValidTime
                let _txn.LastValid#1: uint64 = itxn[_txn#1].LastValid
                let _txn.Note#1: bytes = itxn[_txn#1].Note
                let _txn.Lease#1: bytes = itxn[_txn#1].Lease
                let _txn.Receiver#1: bytes = itxn[_txn#1].Receiver
                let _txn.Amount#1: uint64 = itxn[_txn#1].Amount
                let _txn.CloseRemainderTo#1: bytes = itxn[_txn#1].CloseRemainderTo
                let _txn.VotePK#1: bytes = itxn[_txn#1].VotePK
                let _txn.SelectionPK#1: bytes = itxn[_txn#1].SelectionPK
                let _txn.VoteFirst#1: uint64 = itxn[_txn#1].VoteFirst
                let _txn.VoteLast#1: uint64 = itxn[_txn#1].VoteLast
                let _txn.VoteKeyDilution#1: uint64 = itxn[_txn#1].VoteKeyDilution
                let _txn.Type#1: bytes = itxn[_txn#1].Type
                let _txn.TypeEnum#1: uint64 = itxn[_txn#1].TypeEnum
                let _txn.XferAsset#1: uint64 = itxn[_txn#1].XferAsset
                let _txn.AssetAmount#1: uint64 = itxn[_txn#1].AssetAmount
                let _txn.AssetSender#1: bytes = itxn[_txn#1].AssetSender
                let _txn.AssetReceiver#1: bytes = itxn[_txn#1].AssetReceiver
                let _txn.AssetCloseTo#1: bytes = itxn[_txn#1].AssetCloseTo
                let _txn.GroupIndex#1: uint64 = itxn[_txn#1].GroupIndex
                let _txn.TxID#1: bytes = itxn[_txn#1].TxID
                let _txn.ApplicationID#1: uint64 = itxn[_txn#1].ApplicationID
                let _txn.OnCompletion#1: uint64 = itxn[_txn#1].OnCompletion
                let _txn.NumAppArgs#1: uint64 = itxn[_txn#1].NumAppArgs
                let _txn.NumAccounts#1: uint64 = itxn[_txn#1].NumAccounts
                let _txn.ApprovalProgram#1: bytes = itxn[_txn#1].ApprovalProgram
                let _txn.ClearStateProgram#1: bytes = itxn[_txn#1].ClearStateProgram
                let _txn.RekeyTo#1: bytes = itxn[_txn#1].RekeyTo
                let _txn.ConfigAsset#1: uint64 = itxn[_txn#1].ConfigAsset
                let _txn.ConfigAssetTotal#1: uint64 = itxn[_txn#1].ConfigAssetTotal
                let _txn.ConfigAssetDecimals#1: uint64 = itxn[_txn#1].ConfigAssetDecimals
                let _txn.ConfigAssetDefaultFrozen#1: bool = itxn[_txn#1].ConfigAssetDefaultFrozen
                let _txn.ConfigAssetUnitName#1: bytes = itxn[_txn#1].ConfigAssetUnitName
                let _txn.ConfigAssetName#1: bytes = itxn[_txn#1].ConfigAssetName
                let _txn.ConfigAssetURL#1: bytes = itxn[_txn#1].ConfigAssetURL
                let _txn.ConfigAssetMetadataHash#1: bytes = itxn[_txn#1].ConfigAssetMetadataHash
                let _txn.ConfigAssetManager#1: bytes = itxn[_txn#1].ConfigAssetManager
                let _txn.ConfigAssetReserve#1: bytes = itxn[_txn#1].ConfigAssetReserve
                let _txn.ConfigAssetFreeze#1: bytes = itxn[_txn#1].ConfigAssetFreeze
                let _txn.ConfigAssetClawback#1: bytes = itxn[_txn#1].ConfigAssetClawback
                let _txn.FreezeAsset#1: uint64 = itxn[_txn#1].FreezeAsset
                let _txn.FreezeAssetAccount#1: bytes = itxn[_txn#1].FreezeAssetAccount
                let _txn.FreezeAssetFrozen#1: bool = itxn[_txn#1].FreezeAssetFrozen
                let _txn.NumAssets#1: uint64 = itxn[_txn#1].NumAssets
                let _txn.NumApplications#1: uint64 = itxn[_txn#1].NumApplications
                let _txn.GlobalNumUint#1: uint64 = itxn[_txn#1].GlobalNumUint
                let _txn.GlobalNumByteSlice#1: uint64 = itxn[_txn#1].GlobalNumByteSlice
                let _txn.LocalNumUint#1: uint64 = itxn[_txn#1].LocalNumUint
                let _txn.LocalNumByteSlice#1: uint64 = itxn[_txn#1].LocalNumByteSlice
                let _txn.ExtraProgramPages#1: uint64 = itxn[_txn#1].ExtraProgramPages
                let _txn.Nonparticipation#1: bool = itxn[_txn#1].Nonparticipation
                let _txn.NumLogs#1: uint64 = itxn[_txn#1].NumLogs
                let _txn.CreatedAssetID#1: uint64 = itxn[_txn#1].CreatedAssetID
                let _txn.CreatedApplicationID#1: uint64 = itxn[_txn#1].CreatedApplicationID
                let _txn.LastLog#1: bytes = itxn[_txn#1].LastLog
                let _txn.StateProofPK#1: bytes = itxn[_txn#1].StateProofPK
                let _txn.NumApprovalProgramPages#1: uint64 = itxn[_txn#1].NumApprovalProgramPages
                let _txn.NumClearStateProgramPages#1: uint64 = itxn[_txn#1].NumClearStateProgramPages
                let tmp%7#0: bool = (== result#1 "\x00\x0becho: test2")
                (assert tmp%7#0)
                itxn_begin
                let inner_txn_params%2#0: itxn_field_set = itxn_field_set(2)
                let inner_txn_params%2%%param_Fee_idx_0#0: uint64 = 0u
                let inner_txn_params%2%%Fee_length#0: uint64 = 1u
                let inner_txn_params%2%%param_TypeEnum_idx_0#0: uint64 = appl
                let inner_txn_params%2%%TypeEnum_length#0: uint64 = 1u
                let inner_txn_params%2%%param_ApplicationArgs_idx_0#0: bytes = method "echo(string)string"
                let inner_txn_params%2%%param_ApplicationArgs_idx_1#0: bytes = "\x00\x05test3"
                let inner_txn_params%2%%ApplicationArgs_length#0: uint64 = 2u
                let inner_txn_params%2%%param_ApplicationID_idx_0#0: uint64 = app#0
                let inner_txn_params%2%%ApplicationID_length#0: uint64 = 1u
                let inner_txn_params%2%%Sender_length#0: uint64 = 0u
                let inner_txn_params%2%%Note_length#0: uint64 = 0u
                let inner_txn_params%2%%Receiver_length#0: uint64 = 0u
                let inner_txn_params%2%%Amount_length#0: uint64 = 0u
                let inner_txn_params%2%%CloseRemainderTo_length#0: uint64 = 0u
                let inner_txn_params%2%%VotePK_length#0: uint64 = 0u
                let inner_txn_params%2%%SelectionPK_length#0: uint64 = 0u
                let inner_txn_params%2%%VoteFirst_length#0: uint64 = 0u
                let inner_txn_params%2%%VoteLast_length#0: uint64 = 0u
                let inner_txn_params%2%%VoteKeyDilution_length#0: uint64 = 0u
                let inner_txn_params%2%%Type_length#0: uint64 = 0u
                let inner_txn_params%2%%XferAsset_length#0: uint64 = 0u
                let inner_txn_params%2%%AssetAmount_length#0: uint64 = 0u
                let inner_txn_params%2%%AssetSender_length#0: uint64 = 0u
                let inner_txn_params%2%%AssetReceiver_length#0: uint64 = 0u
                let inner_txn_params%2%%AssetCloseTo_length#0: uint64 = 0u
                let inner_txn_params%2%%OnCompletion_length#0: uint64 = 0u
                let inner_txn_params%2%%ApprovalProgram_length#0: uint64 = 0u
                let inner_txn_params%2%%ClearStateProgram_length#0: uint64 = 0u
                let inner_txn_params%2%%RekeyTo_length#0: uint64 = 0u
                let inner_txn_params%2%%ConfigAsset_length#0: uint64 = 0u
                let inner_txn_params%2%%ConfigAssetTotal_length#0: uint64 = 0u
                let inner_txn_params%2%%ConfigAssetDecimals_length#0: uint64 = 0u
                let inner_txn_params%2%%ConfigAssetDefaultFrozen_length#0: uint64 = 0u
                let inner_txn_params%2%%ConfigAssetUnitName_length#0: uint64 = 0u
                let inner_txn_params%2%%ConfigAssetName_length#0: uint64 = 0u
                let inner_txn_params%2%%ConfigAssetURL_length#0: uint64 = 0u
                let inner_txn_params%2%%ConfigAssetMetadataHash_length#0: uint64 = 0u
                let inner_txn_params%2%%ConfigAssetManager_length#0: uint64 = 0u
                let inner_txn_params%2%%ConfigAssetReserve_length#0: uint64 = 0u
                let inner_txn_params%2%%ConfigAssetFreeze_length#0: uint64 = 0u
                let inner_txn_params%2%%ConfigAssetClawback_length#0: uint64 = 0u
                let inner_txn_params%2%%FreezeAsset_length#0: uint64 = 0u
                let inner_txn_params%2%%FreezeAssetAccount_length#0: uint64 = 0u
                let inner_txn_params%2%%FreezeAssetFrozen_length#0: uint64 = 0u
                let inner_txn_params%2%%GlobalNumUint_length#0: uint64 = 0u
                let inner_txn_params%2%%GlobalNumByteSlice_length#0: uint64 = 0u
                let inner_txn_params%2%%LocalNumUint_length#0: uint64 = 0u
                let inner_txn_params%2%%LocalNumByteSlice_length#0: uint64 = 0u
                let inner_txn_params%2%%ExtraProgramPages_length#0: uint64 = 0u
                let inner_txn_params%2%%Nonparticipation_length#0: uint64 = 0u
                let inner_txn_params%2%%StateProofPK_length#0: uint64 = 0u
                let inner_txn_params%2%%Accounts_length#0: uint64 = 0u
                let inner_txn_params%2%%Assets_length#0: uint64 = 0u
                let inner_txn_params%2%%Applications_length#0: uint64 = 0u
                let inner_txn_params%2%%ApprovalProgramPages_length#0: uint64 = 0u
                let inner_txn_params%2%%ClearStateProgramPages_length#0: uint64 = 0u
                ((itxn_field ApplicationID) inner_txn_params%2%%param_ApplicationID_idx_0#0)
                ((itxn_field ApplicationArgs) inner_txn_params%2%%param_ApplicationArgs_idx_0#0)
                ((itxn_field ApplicationArgs) inner_txn_params%2%%param_ApplicationArgs_idx_1#0)
                ((itxn_field TypeEnum) inner_txn_params%2%%param_TypeEnum_idx_0#0)
                ((itxn_field Fee) inner_txn_params%2%%param_Fee_idx_0#0)
                goto block@3
            block@3: // next_txn_L24
                itxn_submit
                let awst_tmp%4#0: itxn_group_idx = itxn_group_idx(0)
                let awst_tmp%5#0: bytes = itxn[awst_tmp%4#0].LastLog
                let tmp%8#0: bytes = ((extract 4 0) awst_tmp%5#0)
                let tmp%9#0: bytes = ((extract 0 4) awst_tmp%5#0)
                let tmp%10#0: bool = (== tmp%9#0 0x151f7c75)
                let (value%2#0: bytes, check%2#0: bool) = (tmp%8#0, tmp%10#0)
                (assert check%2#0) // ARC4 prefix is valid
                let result#2: bytes = value%2#0
                let _txn#2: itxn_group_idx = awst_tmp%4#0
                let _txn._is_last#2: bool = 1u
                let _txn.Sender#2: bytes = itxn[_txn#2].Sender
                let _txn.Fee#2: uint64 = itxn[_txn#2].Fee
                let _txn.FirstValid#2: uint64 = itxn[_txn#2].FirstValid
                let _txn.FirstValidTime#2: uint64 = itxn[_txn#2].FirstValidTime
                let _txn.LastValid#2: uint64 = itxn[_txn#2].LastValid
                let _txn.Note#2: bytes = itxn[_txn#2].Note
                let _txn.Lease#2: bytes = itxn[_txn#2].Lease
                let _txn.Receiver#2: bytes = itxn[_txn#2].Receiver
                let _txn.Amount#2: uint64 = itxn[_txn#2].Amount
                let _txn.CloseRemainderTo#2: bytes = itxn[_txn#2].CloseRemainderTo
                let _txn.VotePK#2: bytes = itxn[_txn#2].VotePK
                let _txn.SelectionPK#2: bytes = itxn[_txn#2].SelectionPK
                let _txn.VoteFirst#2: uint64 = itxn[_txn#2].VoteFirst
                let _txn.VoteLast#2: uint64 = itxn[_txn#2].VoteLast
                let _txn.VoteKeyDilution#2: uint64 = itxn[_txn#2].VoteKeyDilution
                let _txn.Type#2: bytes = itxn[_txn#2].Type
                let _txn.TypeEnum#2: uint64 = itxn[_txn#2].TypeEnum
                let _txn.XferAsset#2: uint64 = itxn[_txn#2].XferAsset
                let _txn.AssetAmount#2: uint64 = itxn[_txn#2].AssetAmount
                let _txn.AssetSender#2: bytes = itxn[_txn#2].AssetSender
                let _txn.AssetReceiver#2: bytes = itxn[_txn#2].AssetReceiver
                let _txn.AssetCloseTo#2: bytes = itxn[_txn#2].AssetCloseTo
                let _txn.GroupIndex#2: uint64 = itxn[_txn#2].GroupIndex
                let _txn.TxID#2: bytes = itxn[_txn#2].TxID
                let _txn.ApplicationID#2: uint64 = itxn[_txn#2].ApplicationID
                let _txn.OnCompletion#2: uint64 = itxn[_txn#2].OnCompletion
                let _txn.NumAppArgs#2: uint64 = itxn[_txn#2].NumAppArgs
                let _txn.NumAccounts#2: uint64 = itxn[_txn#2].NumAccounts
                let _txn.ApprovalProgram#2: bytes = itxn[_txn#2].ApprovalProgram
                let _txn.ClearStateProgram#2: bytes = itxn[_txn#2].ClearStateProgram
                let _txn.RekeyTo#2: bytes = itxn[_txn#2].RekeyTo
                let _txn.ConfigAsset#2: uint64 = itxn[_txn#2].ConfigAsset
                let _txn.ConfigAssetTotal#2: uint64 = itxn[_txn#2].ConfigAssetTotal
                let _txn.ConfigAssetDecimals#2: uint64 = itxn[_txn#2].ConfigAssetDecimals
                let _txn.ConfigAssetDefaultFrozen#2: bool = itxn[_txn#2].ConfigAssetDefaultFrozen
                let _txn.ConfigAssetUnitName#2: bytes = itxn[_txn#2].ConfigAssetUnitName
                let _txn.ConfigAssetName#2: bytes = itxn[_txn#2].ConfigAssetName
                let _txn.ConfigAssetURL#2: bytes = itxn[_txn#2].ConfigAssetURL
                let _txn.ConfigAssetMetadataHash#2: bytes = itxn[_txn#2].ConfigAssetMetadataHash
                let _txn.ConfigAssetManager#2: bytes = itxn[_txn#2].ConfigAssetManager
                let _txn.ConfigAssetReserve#2: bytes = itxn[_txn#2].ConfigAssetReserve
                let _txn.ConfigAssetFreeze#2: bytes = itxn[_txn#2].ConfigAssetFreeze
                let _txn.ConfigAssetClawback#2: bytes = itxn[_txn#2].ConfigAssetClawback
                let _txn.FreezeAsset#2: uint64 = itxn[_txn#2].FreezeAsset
                let _txn.FreezeAssetAccount#2: bytes = itxn[_txn#2].FreezeAssetAccount
                let _txn.FreezeAssetFrozen#2: bool = itxn[_txn#2].FreezeAssetFrozen
                let _txn.NumAssets#2: uint64 = itxn[_txn#2].NumAssets
                let _txn.NumApplications#2: uint64 = itxn[_txn#2].NumApplications
                let _txn.GlobalNumUint#2: uint64 = itxn[_txn#2].GlobalNumUint
                let _txn.GlobalNumByteSlice#2: uint64 = itxn[_txn#2].GlobalNumByteSlice
                let _txn.LocalNumUint#2: uint64 = itxn[_txn#2].LocalNumUint
                let _txn.LocalNumByteSlice#2: uint64 = itxn[_txn#2].LocalNumByteSlice
                let _txn.ExtraProgramPages#2: uint64 = itxn[_txn#2].ExtraProgramPages
                let _txn.Nonparticipation#2: bool = itxn[_txn#2].Nonparticipation
                let _txn.NumLogs#2: uint64 = itxn[_txn#2].NumLogs
                let _txn.CreatedAssetID#2: uint64 = itxn[_txn#2].CreatedAssetID
                let _txn.CreatedApplicationID#2: uint64 = itxn[_txn#2].CreatedApplicationID
                let _txn.LastLog#2: bytes = itxn[_txn#2].LastLog
                let _txn.StateProofPK#2: bytes = itxn[_txn#2].StateProofPK
                let _txn.NumApprovalProgramPages#2: uint64 = itxn[_txn#2].NumApprovalProgramPages
                let _txn.NumClearStateProgramPages#2: uint64 = itxn[_txn#2].NumClearStateProgramPages
                let tmp%11#0: bool = (== result#2 "\x00\x0becho: test3")
                (assert tmp%11#0)
                itxn_begin
                let inner_txn_params%3#0: itxn_field_set = itxn_field_set(3)
                let inner_txn_params%3%%param_Fee_idx_0#0: uint64 = 0u
                let inner_txn_params%3%%Fee_length#0: uint64 = 1u
                let inner_txn_params%3%%param_TypeEnum_idx_0#0: uint64 = appl
                let inner_txn_params%3%%TypeEnum_length#0: uint64 = 1u
                let inner_txn_params%3%%param_ApplicationArgs_idx_0#0: bytes = method "echo(string)string"
                let inner_txn_params%3%%param_ApplicationArgs_idx_1#0: bytes = "\x00\x05test4"
                let inner_txn_params%3%%ApplicationArgs_length#0: uint64 = 2u
                let inner_txn_params%3%%param_ApplicationID_idx_0#0: uint64 = app#0
                let inner_txn_params%3%%ApplicationID_length#0: uint64 = 1u
                let inner_txn_params%3%%Sender_length#0: uint64 = 0u
                let inner_txn_params%3%%Note_length#0: uint64 = 0u
                let inner_txn_params%3%%Receiver_length#0: uint64 = 0u
                let inner_txn_params%3%%Amount_length#0: uint64 = 0u
                let inner_txn_params%3%%CloseRemainderTo_length#0: uint64 = 0u
                let inner_txn_params%3%%VotePK_length#0: uint64 = 0u
                let inner_txn_params%3%%SelectionPK_length#0: uint64 = 0u
                let inner_txn_params%3%%VoteFirst_length#0: uint64 = 0u
                let inner_txn_params%3%%VoteLast_length#0: uint64 = 0u
                let inner_txn_params%3%%VoteKeyDilution_length#0: uint64 = 0u
                let inner_txn_params%3%%Type_length#0: uint64 = 0u
                let inner_txn_params%3%%XferAsset_length#0: uint64 = 0u
                let inner_txn_params%3%%AssetAmount_length#0: uint64 = 0u
                let inner_txn_params%3%%AssetSender_length#0: uint64 = 0u
                let inner_txn_params%3%%AssetReceiver_length#0: uint64 = 0u
                let inner_txn_params%3%%AssetCloseTo_length#0: uint64 = 0u
                let inner_txn_params%3%%OnCompletion_length#0: uint64 = 0u
                let inner_txn_params%3%%ApprovalProgram_length#0: uint64 = 0u
                let inner_txn_params%3%%ClearStateProgram_length#0: uint64 = 0u
                let inner_txn_params%3%%RekeyTo_length#0: uint64 = 0u
                let inner_txn_params%3%%ConfigAsset_length#0: uint64 = 0u
                let inner_txn_params%3%%ConfigAssetTotal_length#0: uint64 = 0u
                let inner_txn_params%3%%ConfigAssetDecimals_length#0: uint64 = 0u
                let inner_txn_params%3%%ConfigAssetDefaultFrozen_length#0: uint64 = 0u
                let inner_txn_params%3%%ConfigAssetUnitName_length#0: uint64 = 0u
                let inner_txn_params%3%%ConfigAssetName_length#0: uint64 = 0u
                let inner_txn_params%3%%ConfigAssetURL_length#0: uint64 = 0u
                let inner_txn_params%3%%ConfigAssetMetadataHash_length#0: uint64 = 0u
                let inner_txn_params%3%%ConfigAssetManager_length#0: uint64 = 0u
                let inner_txn_params%3%%ConfigAssetReserve_length#0: uint64 = 0u
                let inner_txn_params%3%%ConfigAssetFreeze_length#0: uint64 = 0u
                let inner_txn_params%3%%ConfigAssetClawback_length#0: uint64 = 0u
                let inner_txn_params%3%%FreezeAsset_length#0: uint64 = 0u
                let inner_txn_params%3%%FreezeAssetAccount_length#0: uint64 = 0u
                let inner_txn_params%3%%FreezeAssetFrozen_length#0: uint64 = 0u
                let inner_txn_params%3%%GlobalNumUint_length#0: uint64 = 0u
                let inner_txn_params%3%%GlobalNumByteSlice_length#0: uint64 = 0u
                let inner_txn_params%3%%LocalNumUint_length#0: uint64 = 0u
                let inner_txn_params%3%%LocalNumByteSlice_length#0: uint64 = 0u
                let inner_txn_params%3%%ExtraProgramPages_length#0: uint64 = 0u
                let inner_txn_params%3%%Nonparticipation_length#0: uint64 = 0u
                let inner_txn_params%3%%StateProofPK_length#0: uint64 = 0u
                let inner_txn_params%3%%Accounts_length#0: uint64 = 0u
                let inner_txn_params%3%%Assets_length#0: uint64 = 0u
                let inner_txn_params%3%%Applications_length#0: uint64 = 0u
                let inner_txn_params%3%%ApprovalProgramPages_length#0: uint64 = 0u
                let inner_txn_params%3%%ClearStateProgramPages_length#0: uint64 = 0u
                ((itxn_field ApplicationID) inner_txn_params%3%%param_ApplicationID_idx_0#0)
                ((itxn_field ApplicationArgs) inner_txn_params%3%%param_ApplicationArgs_idx_0#0)
                ((itxn_field ApplicationArgs) inner_txn_params%3%%param_ApplicationArgs_idx_1#0)
                ((itxn_field TypeEnum) inner_txn_params%3%%param_TypeEnum_idx_0#0)
                ((itxn_field Fee) inner_txn_params%3%%param_Fee_idx_0#0)
                goto block@4
            block@4: // next_txn_L26
                itxn_submit
                let awst_tmp%6#0: itxn_group_idx = itxn_group_idx(0)
                let awst_tmp%7#0: bytes = itxn[awst_tmp%6#0].LastLog
                let tmp%12#0: bytes = ((extract 4 0) awst_tmp%7#0)
                let tmp%13#0: bytes = ((extract 0 4) awst_tmp%7#0)
                let tmp%14#0: bool = (== tmp%13#0 0x151f7c75)
                let (value%3#0: bytes, check%3#0: bool) = (tmp%12#0, tmp%14#0)
                (assert check%3#0) // ARC4 prefix is valid
                let result#3: bytes = value%3#0
                let _txn#3: itxn_group_idx = awst_tmp%6#0
                let _txn._is_last#3: bool = 1u
                let _txn.Sender#3: bytes = itxn[_txn#3].Sender
                let _txn.Fee#3: uint64 = itxn[_txn#3].Fee
                let _txn.FirstValid#3: uint64 = itxn[_txn#3].FirstValid
                let _txn.FirstValidTime#3: uint64 = itxn[_txn#3].FirstValidTime
                let _txn.LastValid#3: uint64 = itxn[_txn#3].LastValid
                let _txn.Note#3: bytes = itxn[_txn#3].Note
                let _txn.Lease#3: bytes = itxn[_txn#3].Lease
                let _txn.Receiver#3: bytes = itxn[_txn#3].Receiver
                let _txn.Amount#3: uint64 = itxn[_txn#3].Amount
                let _txn.CloseRemainderTo#3: bytes = itxn[_txn#3].CloseRemainderTo
                let _txn.VotePK#3: bytes = itxn[_txn#3].VotePK
                let _txn.SelectionPK#3: bytes = itxn[_txn#3].SelectionPK
                let _txn.VoteFirst#3: uint64 = itxn[_txn#3].VoteFirst
                let _txn.VoteLast#3: uint64 = itxn[_txn#3].VoteLast
                let _txn.VoteKeyDilution#3: uint64 = itxn[_txn#3].VoteKeyDilution
                let _txn.Type#3: bytes = itxn[_txn#3].Type
                let _txn.TypeEnum#3: uint64 = itxn[_txn#3].TypeEnum
                let _txn.XferAsset#3: uint64 = itxn[_txn#3].XferAsset
                let _txn.AssetAmount#3: uint64 = itxn[_txn#3].AssetAmount
                let _txn.AssetSender#3: bytes = itxn[_txn#3].AssetSender
                let _txn.AssetReceiver#3: bytes = itxn[_txn#3].AssetReceiver
                let _txn.AssetCloseTo#3: bytes = itxn[_txn#3].AssetCloseTo
                let _txn.GroupIndex#3: uint64 = itxn[_txn#3].GroupIndex
                let _txn.TxID#3: bytes = itxn[_txn#3].TxID
                let _txn.ApplicationID#3: uint64 = itxn[_txn#3].ApplicationID
                let _txn.OnCompletion#3: uint64 = itxn[_txn#3].OnCompletion
                let _txn.NumAppArgs#3: uint64 = itxn[_txn#3].NumAppArgs
                let _txn.NumAccounts#3: uint64 = itxn[_txn#3].NumAccounts
                let _txn.ApprovalProgram#3: bytes = itxn[_txn#3].ApprovalProgram
                let _txn.ClearStateProgram#3: bytes = itxn[_txn#3].ClearStateProgram
                let _txn.RekeyTo#3: bytes = itxn[_txn#3].RekeyTo
                let _txn.ConfigAsset#3: uint64 = itxn[_txn#3].ConfigAsset
                let _txn.ConfigAssetTotal#3: uint64 = itxn[_txn#3].ConfigAssetTotal
                let _txn.ConfigAssetDecimals#3: uint64 = itxn[_txn#3].ConfigAssetDecimals
                let _txn.ConfigAssetDefaultFrozen#3: bool = itxn[_txn#3].ConfigAssetDefaultFrozen
                let _txn.ConfigAssetUnitName#3: bytes = itxn[_txn#3].ConfigAssetUnitName
                let _txn.ConfigAssetName#3: bytes = itxn[_txn#3].ConfigAssetName
                let _txn.ConfigAssetURL#3: bytes = itxn[_txn#3].ConfigAssetURL
                let _txn.ConfigAssetMetadataHash#3: bytes = itxn[_txn#3].ConfigAssetMetadataHash
                let _txn.ConfigAssetManager#3: bytes = itxn[_txn#3].ConfigAssetManager
                let _txn.ConfigAssetReserve#3: bytes = itxn[_txn#3].ConfigAssetReserve
                let _txn.ConfigAssetFreeze#3: bytes = itxn[_txn#3].ConfigAssetFreeze
                let _txn.ConfigAssetClawback#3: bytes = itxn[_txn#3].ConfigAssetClawback
                let _txn.FreezeAsset#3: uint64 = itxn[_txn#3].FreezeAsset
                let _txn.FreezeAssetAccount#3: bytes = itxn[_txn#3].FreezeAssetAccount
                let _txn.FreezeAssetFrozen#3: bool = itxn[_txn#3].FreezeAssetFrozen
                let _txn.NumAssets#3: uint64 = itxn[_txn#3].NumAssets
                let _txn.NumApplications#3: uint64 = itxn[_txn#3].NumApplications
                let _txn.GlobalNumUint#3: uint64 = itxn[_txn#3].GlobalNumUint
                let _txn.GlobalNumByteSlice#3: uint64 = itxn[_txn#3].GlobalNumByteSlice
                let _txn.LocalNumUint#3: uint64 = itxn[_txn#3].LocalNumUint
                let _txn.LocalNumByteSlice#3: uint64 = itxn[_txn#3].LocalNumByteSlice
                let _txn.ExtraProgramPages#3: uint64 = itxn[_txn#3].ExtraProgramPages
                let _txn.Nonparticipation#3: bool = itxn[_txn#3].Nonparticipation
                let _txn.NumLogs#3: uint64 = itxn[_txn#3].NumLogs
                let _txn.CreatedAssetID#3: uint64 = itxn[_txn#3].CreatedAssetID
                let _txn.CreatedApplicationID#3: uint64 = itxn[_txn#3].CreatedApplicationID
                let _txn.LastLog#3: bytes = itxn[_txn#3].LastLog
                let _txn.StateProofPK#3: bytes = itxn[_txn#3].StateProofPK
                let _txn.NumApprovalProgramPages#3: uint64 = itxn[_txn#3].NumApprovalProgramPages
                let _txn.NumClearStateProgramPages#3: uint64 = itxn[_txn#3].NumClearStateProgramPages
                let tmp%15#0: bool = (== result#3 "\x00\x0becho: test4")
                (assert tmp%15#0)
                itxn_begin
                let inner_txn_params%4#0: itxn_field_set = itxn_field_set(4)
                let inner_txn_params%4%%param_Fee_idx_0#0: uint64 = 0u
                let inner_txn_params%4%%Fee_length#0: uint64 = 1u
                let inner_txn_params%4%%param_TypeEnum_idx_0#0: uint64 = appl
                let inner_txn_params%4%%TypeEnum_length#0: uint64 = 1u
                let inner_txn_params%4%%param_ApplicationArgs_idx_0#0: bytes = method "echo(string)string"
                let inner_txn_params%4%%param_ApplicationArgs_idx_1#0: bytes = "\x00\x05test5"
                let inner_txn_params%4%%ApplicationArgs_length#0: uint64 = 2u
                let inner_txn_params%4%%param_ApplicationID_idx_0#0: uint64 = app#0
                let inner_txn_params%4%%ApplicationID_length#0: uint64 = 1u
                let inner_txn_params%4%%Sender_length#0: uint64 = 0u
                let inner_txn_params%4%%Note_length#0: uint64 = 0u
                let inner_txn_params%4%%Receiver_length#0: uint64 = 0u
                let inner_txn_params%4%%Amount_length#0: uint64 = 0u
                let inner_txn_params%4%%CloseRemainderTo_length#0: uint64 = 0u
                let inner_txn_params%4%%VotePK_length#0: uint64 = 0u
                let inner_txn_params%4%%SelectionPK_length#0: uint64 = 0u
                let inner_txn_params%4%%VoteFirst_length#0: uint64 = 0u
                let inner_txn_params%4%%VoteLast_length#0: uint64 = 0u
                let inner_txn_params%4%%VoteKeyDilution_length#0: uint64 = 0u
                let inner_txn_params%4%%Type_length#0: uint64 = 0u
                let inner_txn_params%4%%XferAsset_length#0: uint64 = 0u
                let inner_txn_params%4%%AssetAmount_length#0: uint64 = 0u
                let inner_txn_params%4%%AssetSender_length#0: uint64 = 0u
                let inner_txn_params%4%%AssetReceiver_length#0: uint64 = 0u
                let inner_txn_params%4%%AssetCloseTo_length#0: uint64 = 0u
                let inner_txn_params%4%%OnCompletion_length#0: uint64 = 0u
                let inner_txn_params%4%%ApprovalProgram_length#0: uint64 = 0u
                let inner_txn_params%4%%ClearStateProgram_length#0: uint64 = 0u
                let inner_txn_params%4%%RekeyTo_length#0: uint64 = 0u
                let inner_txn_params%4%%ConfigAsset_length#0: uint64 = 0u
                let inner_txn_params%4%%ConfigAssetTotal_length#0: uint64 = 0u
                let inner_txn_params%4%%ConfigAssetDecimals_length#0: uint64 = 0u
                let inner_txn_params%4%%ConfigAssetDefaultFrozen_length#0: uint64 = 0u
                let inner_txn_params%4%%ConfigAssetUnitName_length#0: uint64 = 0u
                let inner_txn_params%4%%ConfigAssetName_length#0: uint64 = 0u
                let inner_txn_params%4%%ConfigAssetURL_length#0: uint64 = 0u
                let inner_txn_params%4%%ConfigAssetMetadataHash_length#0: uint64 = 0u
                let inner_txn_params%4%%ConfigAssetManager_length#0: uint64 = 0u
                let inner_txn_params%4%%ConfigAssetReserve_length#0: uint64 = 0u
                let inner_txn_params%4%%ConfigAssetFreeze_length#0: uint64 = 0u
                let inner_txn_params%4%%ConfigAssetClawback_length#0: uint64 = 0u
                let inner_txn_params%4%%FreezeAsset_length#0: uint64 = 0u
                let inner_txn_params%4%%FreezeAssetAccount_length#0: uint64 = 0u
                let inner_txn_params%4%%FreezeAssetFrozen_length#0: uint64 = 0u
                let inner_txn_params%4%%GlobalNumUint_length#0: uint64 = 0u
                let inner_txn_params%4%%GlobalNumByteSlice_length#0: uint64 = 0u
                let inner_txn_params%4%%LocalNumUint_length#0: uint64 = 0u
                let inner_txn_params%4%%LocalNumByteSlice_length#0: uint64 = 0u
                let inner_txn_params%4%%ExtraProgramPages_length#0: uint64 = 0u
                let inner_txn_params%4%%Nonparticipation_length#0: uint64 = 0u
                let inner_txn_params%4%%StateProofPK_length#0: uint64 = 0u
                let inner_txn_params%4%%Accounts_length#0: uint64 = 0u
                let inner_txn_params%4%%Assets_length#0: uint64 = 0u
                let inner_txn_params%4%%Applications_length#0: uint64 = 0u
                let inner_txn_params%4%%ApprovalProgramPages_length#0: uint64 = 0u
                let inner_txn_params%4%%ClearStateProgramPages_length#0: uint64 = 0u
                ((itxn_field ApplicationID) inner_txn_params%4%%param_ApplicationID_idx_0#0)
                ((itxn_field ApplicationArgs) inner_txn_params%4%%param_ApplicationArgs_idx_0#0)
                ((itxn_field ApplicationArgs) inner_txn_params%4%%param_ApplicationArgs_idx_1#0)
                ((itxn_field TypeEnum) inner_txn_params%4%%param_TypeEnum_idx_0#0)
                ((itxn_field Fee) inner_txn_params%4%%param_Fee_idx_0#0)
                goto block@5
            block@5: // next_txn_L28
                itxn_submit
                let awst_tmp%8#0: itxn_group_idx = itxn_group_idx(0)
                let awst_tmp%9#0: bytes = itxn[awst_tmp%8#0].LastLog
                let tmp%16#0: bytes = ((extract 4 0) awst_tmp%9#0)
                let tmp%17#0: bytes = ((extract 0 4) awst_tmp%9#0)
                let tmp%18#0: bool = (== tmp%17#0 0x151f7c75)
                let (value%4#0: bytes, check%4#0: bool) = (tmp%16#0, tmp%18#0)
                (assert check%4#0) // ARC4 prefix is valid
                let result#4: bytes = value%4#0
                let _txn#4: itxn_group_idx = awst_tmp%8#0
                let _txn._is_last#4: bool = 1u
                let _txn.Sender#4: bytes = itxn[_txn#4].Sender
                let _txn.Fee#4: uint64 = itxn[_txn#4].Fee
                let _txn.FirstValid#4: uint64 = itxn[_txn#4].FirstValid
                let _txn.FirstValidTime#4: uint64 = itxn[_txn#4].FirstValidTime
                let _txn.LastValid#4: uint64 = itxn[_txn#4].LastValid
                let _txn.Note#4: bytes = itxn[_txn#4].Note
                let _txn.Lease#4: bytes = itxn[_txn#4].Lease
                let _txn.Receiver#4: bytes = itxn[_txn#4].Receiver
                let _txn.Amount#4: uint64 = itxn[_txn#4].Amount
                let _txn.CloseRemainderTo#4: bytes = itxn[_txn#4].CloseRemainderTo
                let _txn.VotePK#4: bytes = itxn[_txn#4].VotePK
                let _txn.SelectionPK#4: bytes = itxn[_txn#4].SelectionPK
                let _txn.VoteFirst#4: uint64 = itxn[_txn#4].VoteFirst
                let _txn.VoteLast#4: uint64 = itxn[_txn#4].VoteLast
                let _txn.VoteKeyDilution#4: uint64 = itxn[_txn#4].VoteKeyDilution
                let _txn.Type#4: bytes = itxn[_txn#4].Type
                let _txn.TypeEnum#4: uint64 = itxn[_txn#4].TypeEnum
                let _txn.XferAsset#4: uint64 = itxn[_txn#4].XferAsset
                let _txn.AssetAmount#4: uint64 = itxn[_txn#4].AssetAmount
                let _txn.AssetSender#4: bytes = itxn[_txn#4].AssetSender
                let _txn.AssetReceiver#4: bytes = itxn[_txn#4].AssetReceiver
                let _txn.AssetCloseTo#4: bytes = itxn[_txn#4].AssetCloseTo
                let _txn.GroupIndex#4: uint64 = itxn[_txn#4].GroupIndex
                let _txn.TxID#4: bytes = itxn[_txn#4].TxID
                let _txn.ApplicationID#4: uint64 = itxn[_txn#4].ApplicationID
                let _txn.OnCompletion#4: uint64 = itxn[_txn#4].OnCompletion
                let _txn.NumAppArgs#4: uint64 = itxn[_txn#4].NumAppArgs
                let _txn.NumAccounts#4: uint64 = itxn[_txn#4].NumAccounts
                let _txn.ApprovalProgram#4: bytes = itxn[_txn#4].ApprovalProgram
                let _txn.ClearStateProgram#4: bytes = itxn[_txn#4].ClearStateProgram
                let _txn.RekeyTo#4: bytes = itxn[_txn#4].RekeyTo
                let _txn.ConfigAsset#4: uint64 = itxn[_txn#4].ConfigAsset
                let _txn.ConfigAssetTotal#4: uint64 = itxn[_txn#4].ConfigAssetTotal
                let _txn.ConfigAssetDecimals#4: uint64 = itxn[_txn#4].ConfigAssetDecimals
                let _txn.ConfigAssetDefaultFrozen#4: bool = itxn[_txn#4].ConfigAssetDefaultFrozen
                let _txn.ConfigAssetUnitName#4: bytes = itxn[_txn#4].ConfigAssetUnitName
                let _txn.ConfigAssetName#4: bytes = itxn[_txn#4].ConfigAssetName
                let _txn.ConfigAssetURL#4: bytes = itxn[_txn#4].ConfigAssetURL
                let _txn.ConfigAssetMetadataHash#4: bytes = itxn[_txn#4].ConfigAssetMetadataHash
                let _txn.ConfigAssetManager#4: bytes = itxn[_txn#4].ConfigAssetManager
                let _txn.ConfigAssetReserve#4: bytes = itxn[_txn#4].ConfigAssetReserve
                let _txn.ConfigAssetFreeze#4: bytes = itxn[_txn#4].ConfigAssetFreeze
                let _txn.ConfigAssetClawback#4: bytes = itxn[_txn#4].ConfigAssetClawback
                let _txn.FreezeAsset#4: uint64 = itxn[_txn#4].FreezeAsset
                let _txn.FreezeAssetAccount#4: bytes = itxn[_txn#4].FreezeAssetAccount
                let _txn.FreezeAssetFrozen#4: bool = itxn[_txn#4].FreezeAssetFrozen
                let _txn.NumAssets#4: uint64 = itxn[_txn#4].NumAssets
                let _txn.NumApplications#4: uint64 = itxn[_txn#4].NumApplications
                let _txn.GlobalNumUint#4: uint64 = itxn[_txn#4].GlobalNumUint
                let _txn.GlobalNumByteSlice#4: uint64 = itxn[_txn#4].GlobalNumByteSlice
                let _txn.LocalNumUint#4: uint64 = itxn[_txn#4].LocalNumUint
                let _txn.LocalNumByteSlice#4: uint64 = itxn[_txn#4].LocalNumByteSlice
                let _txn.ExtraProgramPages#4: uint64 = itxn[_txn#4].ExtraProgramPages
                let _txn.Nonparticipation#4: bool = itxn[_txn#4].Nonparticipation
                let _txn.NumLogs#4: uint64 = itxn[_txn#4].NumLogs
                let _txn.CreatedAssetID#4: uint64 = itxn[_txn#4].CreatedAssetID
                let _txn.CreatedApplicationID#4: uint64 = itxn[_txn#4].CreatedApplicationID
                let _txn.LastLog#4: bytes = itxn[_txn#4].LastLog
                let _txn.StateProofPK#4: bytes = itxn[_txn#4].StateProofPK
                let _txn.NumApprovalProgramPages#4: uint64 = itxn[_txn#4].NumApprovalProgramPages
                let _txn.NumClearStateProgramPages#4: uint64 = itxn[_txn#4].NumClearStateProgramPages
                let tmp%19#0: bool = (== result#4 "\x00\x0becho: test5")
                (assert tmp%19#0)
                return 
        
        subroutine test_cases.typed_abi_call.typed_c2c.Greeter.test_method_overload(app: uint64) -> void:
            block@0: // L31
                itxn_begin
                let inner_txn_params%0#0: itxn_field_set = itxn_field_set(0)
                let inner_txn_params%0%%param_Fee_idx_0#0: uint64 = 0u
                let inner_txn_params%0%%Fee_length#0: uint64 = 1u
                let inner_txn_params%0%%param_TypeEnum_idx_0#0: uint64 = appl
                let inner_txn_params%0%%TypeEnum_length#0: uint64 = 1u
                let inner_txn_params%0%%param_ApplicationArgs_idx_0#0: bytes = method "echo(string)string"
                let inner_txn_params%0%%param_ApplicationArgs_idx_1#0: bytes = "\x00\x0etyped + ignore"
                let inner_txn_params%0%%ApplicationArgs_length#0: uint64 = 2u
                let inner_txn_params%0%%param_ApplicationID_idx_0#0: uint64 = app#0
                let inner_txn_params%0%%ApplicationID_length#0: uint64 = 1u
                let inner_txn_params%0%%Sender_length#0: uint64 = 0u
                let inner_txn_params%0%%Note_length#0: uint64 = 0u
                let inner_txn_params%0%%Receiver_length#0: uint64 = 0u
                let inner_txn_params%0%%Amount_length#0: uint64 = 0u
                let inner_txn_params%0%%CloseRemainderTo_length#0: uint64 = 0u
                let inner_txn_params%0%%VotePK_length#0: uint64 = 0u
                let inner_txn_params%0%%SelectionPK_length#0: uint64 = 0u
                let inner_txn_params%0%%VoteFirst_length#0: uint64 = 0u
                let inner_txn_params%0%%VoteLast_length#0: uint64 = 0u
                let inner_txn_params%0%%VoteKeyDilution_length#0: uint64 = 0u
                let inner_txn_params%0%%Type_length#0: uint64 = 0u
                let inner_txn_params%0%%XferAsset_length#0: uint64 = 0u
                let inner_txn_params%0%%AssetAmount_length#0: uint64 = 0u
                let inner_txn_params%0%%AssetSender_length#0: uint64 = 0u
                let inner_txn_params%0%%AssetReceiver_length#0: uint64 = 0u
                let inner_txn_params%0%%AssetCloseTo_length#0: uint64 = 0u
                let inner_txn_params%0%%OnCompletion_length#0: uint64 = 0u
                let inner_txn_params%0%%ApprovalProgram_length#0: uint64 = 0u
                let inner_txn_params%0%%ClearStateProgram_length#0: uint64 = 0u
                let inner_txn_params%0%%RekeyTo_length#0: uint64 = 0u
                let inner_txn_params%0%%ConfigAsset_length#0: uint64 = 0u
                let inner_txn_params%0%%ConfigAssetTotal_length#0: uint64 = 0u
                let inner_txn_params%0%%ConfigAssetDecimals_length#0: uint64 = 0u
                let inner_txn_params%0%%ConfigAssetDefaultFrozen_length#0: uint64 = 0u
                let inner_txn_params%0%%ConfigAssetUnitName_length#0: uint64 = 0u
                let inner_txn_params%0%%ConfigAssetName_length#0: uint64 = 0u
                let inner_txn_params%0%%ConfigAssetURL_length#0: uint64 = 0u
                let inner_txn_params%0%%ConfigAssetMetadataHash_length#0: uint64 = 0u
                let inner_txn_params%0%%ConfigAssetManager_length#0: uint64 = 0u
                let inner_txn_params%0%%ConfigAssetReserve_length#0: uint64 = 0u
                let inner_txn_params%0%%ConfigAssetFreeze_length#0: uint64 = 0u
                let inner_txn_params%0%%ConfigAssetClawback_length#0: uint64 = 0u
                let inner_txn_params%0%%FreezeAsset_length#0: uint64 = 0u
                let inner_txn_params%0%%FreezeAssetAccount_length#0: uint64 = 0u
                let inner_txn_params%0%%FreezeAssetFrozen_length#0: uint64 = 0u
                let inner_txn_params%0%%GlobalNumUint_length#0: uint64 = 0u
                let inner_txn_params%0%%GlobalNumByteSlice_length#0: uint64 = 0u
                let inner_txn_params%0%%LocalNumUint_length#0: uint64 = 0u
                let inner_txn_params%0%%LocalNumByteSlice_length#0: uint64 = 0u
                let inner_txn_params%0%%ExtraProgramPages_length#0: uint64 = 0u
                let inner_txn_params%0%%Nonparticipation_length#0: uint64 = 0u
                let inner_txn_params%0%%StateProofPK_length#0: uint64 = 0u
                let inner_txn_params%0%%Accounts_length#0: uint64 = 0u
                let inner_txn_params%0%%Assets_length#0: uint64 = 0u
                let inner_txn_params%0%%Applications_length#0: uint64 = 0u
                let inner_txn_params%0%%ApprovalProgramPages_length#0: uint64 = 0u
                let inner_txn_params%0%%ClearStateProgramPages_length#0: uint64 = 0u
                ((itxn_field ApplicationID) inner_txn_params%0%%param_ApplicationID_idx_0#0)
                ((itxn_field ApplicationArgs) inner_txn_params%0%%param_ApplicationArgs_idx_0#0)
                ((itxn_field ApplicationArgs) inner_txn_params%0%%param_ApplicationArgs_idx_1#0)
                ((itxn_field TypeEnum) inner_txn_params%0%%param_TypeEnum_idx_0#0)
                ((itxn_field Fee) inner_txn_params%0%%param_Fee_idx_0#0)
                goto block@1
            block@1: // next_txn_L33
                itxn_submit
                let awst_tmp%0#0: itxn_group_idx = itxn_group_idx(0)
                let awst_tmp%1#0: bytes = itxn[awst_tmp%0#0].LastLog
                let tmp%0#0: bytes = ((extract 4 0) awst_tmp%1#0)
                let tmp%1#0: bytes = ((extract 0 4) awst_tmp%1#0)
                let tmp%2#0: bool = (== tmp%1#0 0x151f7c75)
                let (value%0#0: bytes, check%0#0: bool) = (tmp%0#0, tmp%2#0)
                (assert check%0#0) // ARC4 prefix is valid
                let awst_tmp%2#0: bytes = (itxn LastLog)
                let tmp%3#0: bytes = ((extract 4 0) awst_tmp%2#0)
                let tmp%4#0: bytes = ((extract 0 4) awst_tmp%2#0)
                let tmp%5#0: bool = (== tmp%4#0 0x151f7c75)
                let (value%1#0: bytes, check%1#0: bool) = (tmp%3#0, tmp%5#0)
                (assert check%1#0) // ARC4 prefix is valid
                let tmp%6#0: bool = (== value%1#0 "\x00\x14echo: typed + ignore")
                (assert tmp%6#0)
                itxn_begin
                let inner_txn_params%1#0: itxn_field_set = itxn_field_set(1)
                let inner_txn_params%1%%param_Fee_idx_0#0: uint64 = 0u
                let inner_txn_params%1%%Fee_length#0: uint64 = 1u
                let inner_txn_params%1%%param_TypeEnum_idx_0#0: uint64 = appl
                let inner_txn_params%1%%TypeEnum_length#0: uint64 = 1u
                let inner_txn_params%1%%param_ApplicationArgs_idx_0#0: bytes = method "echo(string)string"
                let inner_txn_params%1%%param_ApplicationArgs_idx_1#0: bytes = "\x00\x10untyped + ignore"
                let inner_txn_params%1%%ApplicationArgs_length#0: uint64 = 2u
                let inner_txn_params%1%%param_ApplicationID_idx_0#0: uint64 = app#0
                let inner_txn_params%1%%ApplicationID_length#0: uint64 = 1u
                let inner_txn_params%1%%Sender_length#0: uint64 = 0u
                let inner_txn_params%1%%Note_length#0: uint64 = 0u
                let inner_txn_params%1%%Receiver_length#0: uint64 = 0u
                let inner_txn_params%1%%Amount_length#0: uint64 = 0u
                let inner_txn_params%1%%CloseRemainderTo_length#0: uint64 = 0u
                let inner_txn_params%1%%VotePK_length#0: uint64 = 0u
                let inner_txn_params%1%%SelectionPK_length#0: uint64 = 0u
                let inner_txn_params%1%%VoteFirst_length#0: uint64 = 0u
                let inner_txn_params%1%%VoteLast_length#0: uint64 = 0u
                let inner_txn_params%1%%VoteKeyDilution_length#0: uint64 = 0u
                let inner_txn_params%1%%Type_length#0: uint64 = 0u
                let inner_txn_params%1%%XferAsset_length#0: uint64 = 0u
                let inner_txn_params%1%%AssetAmount_length#0: uint64 = 0u
                let inner_txn_params%1%%AssetSender_length#0: uint64 = 0u
                let inner_txn_params%1%%AssetReceiver_length#0: uint64 = 0u
                let inner_txn_params%1%%AssetCloseTo_length#0: uint64 = 0u
                let inner_txn_params%1%%OnCompletion_length#0: uint64 = 0u
                let inner_txn_params%1%%ApprovalProgram_length#0: uint64 = 0u
                let inner_txn_params%1%%ClearStateProgram_length#0: uint64 = 0u
                let inner_txn_params%1%%RekeyTo_length#0: uint64 = 0u
                let inner_txn_params%1%%ConfigAsset_length#0: uint64 = 0u
                let inner_txn_params%1%%ConfigAssetTotal_length#0: uint64 = 0u
                let inner_txn_params%1%%ConfigAssetDecimals_length#0: uint64 = 0u
                let inner_txn_params%1%%ConfigAssetDefaultFrozen_length#0: uint64 = 0u
                let inner_txn_params%1%%ConfigAssetUnitName_length#0: uint64 = 0u
                let inner_txn_params%1%%ConfigAssetName_length#0: uint64 = 0u
                let inner_txn_params%1%%ConfigAssetURL_length#0: uint64 = 0u
                let inner_txn_params%1%%ConfigAssetMetadataHash_length#0: uint64 = 0u
                let inner_txn_params%1%%ConfigAssetManager_length#0: uint64 = 0u
                let inner_txn_params%1%%ConfigAssetReserve_length#0: uint64 = 0u
                let inner_txn_params%1%%ConfigAssetFreeze_length#0: uint64 = 0u
                let inner_txn_params%1%%ConfigAssetClawback_length#0: uint64 = 0u
                let inner_txn_params%1%%FreezeAsset_length#0: uint64 = 0u
                let inner_txn_params%1%%FreezeAssetAccount_length#0: uint64 = 0u
                let inner_txn_params%1%%FreezeAssetFrozen_length#0: uint64 = 0u
                let inner_txn_params%1%%GlobalNumUint_length#0: uint64 = 0u
                let inner_txn_params%1%%GlobalNumByteSlice_length#0: uint64 = 0u
                let inner_txn_params%1%%LocalNumUint_length#0: uint64 = 0u
                let inner_txn_params%1%%LocalNumByteSlice_length#0: uint64 = 0u
                let inner_txn_params%1%%ExtraProgramPages_length#0: uint64 = 0u
                let inner_txn_params%1%%Nonparticipation_length#0: uint64 = 0u
                let inner_txn_params%1%%StateProofPK_length#0: uint64 = 0u
                let inner_txn_params%1%%Accounts_length#0: uint64 = 0u
                let inner_txn_params%1%%Assets_length#0: uint64 = 0u
                let inner_txn_params%1%%Applications_length#0: uint64 = 0u
                let inner_txn_params%1%%ApprovalProgramPages_length#0: uint64 = 0u
                let inner_txn_params%1%%ClearStateProgramPages_length#0: uint64 = 0u
                ((itxn_field ApplicationID) inner_txn_params%1%%param_ApplicationID_idx_0#0)
                ((itxn_field ApplicationArgs) inner_txn_params%1%%param_ApplicationArgs_idx_0#0)
                ((itxn_field ApplicationArgs) inner_txn_params%1%%param_ApplicationArgs_idx_1#0)
                ((itxn_field TypeEnum) inner_txn_params%1%%param_TypeEnum_idx_0#0)
                ((itxn_field Fee) inner_txn_params%1%%param_Fee_idx_0#0)
                goto block@2
            block@2: // next_txn_L36
                itxn_submit
                let awst_tmp%3#0: bytes = (itxn LastLog)
                let tmp%7#0: bytes = ((extract 4 0) awst_tmp%3#0)
                let tmp%8#0: bytes = ((extract 0 4) awst_tmp%3#0)
                let tmp%9#0: bool = (== tmp%8#0 0x151f7c75)
                let (value%2#0: bytes, check%2#0: bool) = (tmp%7#0, tmp%9#0)
                (assert check%2#0) // ARC4 prefix is valid
                let tmp%10#0: bool = (== value%2#0 "\x00\x16echo: untyped + ignore")
                (assert tmp%10#0)
                itxn_begin
                let inner_txn_params%2#0: itxn_field_set = itxn_field_set(2)
                let inner_txn_params%2%%param_Fee_idx_0#0: uint64 = 0u
                let inner_txn_params%2%%Fee_length#0: uint64 = 1u
                let inner_txn_params%2%%param_TypeEnum_idx_0#0: uint64 = appl
                let inner_txn_params%2%%TypeEnum_length#0: uint64 = 1u
                let inner_txn_params%2%%param_ApplicationArgs_idx_0#0: bytes = method "echo(string)string"
                let inner_txn_params%2%%param_ApplicationArgs_idx_1#0: bytes = "\x00\x05tuple"
                let inner_txn_params%2%%ApplicationArgs_length#0: uint64 = 2u
                let inner_txn_params%2%%param_ApplicationID_idx_0#0: uint64 = app#0
                let inner_txn_params%2%%ApplicationID_length#0: uint64 = 1u
                let inner_txn_params%2%%Sender_length#0: uint64 = 0u
                let inner_txn_params%2%%Note_length#0: uint64 = 0u
                let inner_txn_params%2%%Receiver_length#0: uint64 = 0u
                let inner_txn_params%2%%Amount_length#0: uint64 = 0u
                let inner_txn_params%2%%CloseRemainderTo_length#0: uint64 = 0u
                let inner_txn_params%2%%VotePK_length#0: uint64 = 0u
                let inner_txn_params%2%%SelectionPK_length#0: uint64 = 0u
                let inner_txn_params%2%%VoteFirst_length#0: uint64 = 0u
                let inner_txn_params%2%%VoteLast_length#0: uint64 = 0u
                let inner_txn_params%2%%VoteKeyDilution_length#0: uint64 = 0u
                let inner_txn_params%2%%Type_length#0: uint64 = 0u
                let inner_txn_params%2%%XferAsset_length#0: uint64 = 0u
                let inner_txn_params%2%%AssetAmount_length#0: uint64 = 0u
                let inner_txn_params%2%%AssetSender_length#0: uint64 = 0u
                let inner_txn_params%2%%AssetReceiver_length#0: uint64 = 0u
                let inner_txn_params%2%%AssetCloseTo_length#0: uint64 = 0u
                let inner_txn_params%2%%OnCompletion_length#0: uint64 = 0u
                let inner_txn_params%2%%ApprovalProgram_length#0: uint64 = 0u
                let inner_txn_params%2%%ClearStateProgram_length#0: uint64 = 0u
                let inner_txn_params%2%%RekeyTo_length#0: uint64 = 0u
                let inner_txn_params%2%%ConfigAsset_length#0: uint64 = 0u
                let inner_txn_params%2%%ConfigAssetTotal_length#0: uint64 = 0u
                let inner_txn_params%2%%ConfigAssetDecimals_length#0: uint64 = 0u
                let inner_txn_params%2%%ConfigAssetDefaultFrozen_length#0: uint64 = 0u
                let inner_txn_params%2%%ConfigAssetUnitName_length#0: uint64 = 0u
                let inner_txn_params%2%%ConfigAssetName_length#0: uint64 = 0u
                let inner_txn_params%2%%ConfigAssetURL_length#0: uint64 = 0u
                let inner_txn_params%2%%ConfigAssetMetadataHash_length#0: uint64 = 0u
                let inner_txn_params%2%%ConfigAssetManager_length#0: uint64 = 0u
                let inner_txn_params%2%%ConfigAssetReserve_length#0: uint64 = 0u
                let inner_txn_params%2%%ConfigAssetFreeze_length#0: uint64 = 0u
                let inner_txn_params%2%%ConfigAssetClawback_length#0: uint64 = 0u
                let inner_txn_params%2%%FreezeAsset_length#0: uint64 = 0u
                let inner_txn_params%2%%FreezeAssetAccount_length#0: uint64 = 0u
                let inner_txn_params%2%%FreezeAssetFrozen_length#0: uint64 = 0u
                let inner_txn_params%2%%GlobalNumUint_length#0: uint64 = 0u
                let inner_txn_params%2%%GlobalNumByteSlice_length#0: uint64 = 0u
                let inner_txn_params%2%%LocalNumUint_length#0: uint64 = 0u
                let inner_txn_params%2%%LocalNumByteSlice_length#0: uint64 = 0u
                let inner_txn_params%2%%ExtraProgramPages_length#0: uint64 = 0u
                let inner_txn_params%2%%Nonparticipation_length#0: uint64 = 0u
                let inner_txn_params%2%%StateProofPK_length#0: uint64 = 0u
                let inner_txn_params%2%%Accounts_length#0: uint64 = 0u
                let inner_txn_params%2%%Assets_length#0: uint64 = 0u
                let inner_txn_params%2%%Applications_length#0: uint64 = 0u
                let inner_txn_params%2%%ApprovalProgramPages_length#0: uint64 = 0u
                let inner_txn_params%2%%ClearStateProgramPages_length#0: uint64 = 0u
                ((itxn_field ApplicationID) inner_txn_params%2%%param_ApplicationID_idx_0#0)
                ((itxn_field ApplicationArgs) inner_txn_params%2%%param_ApplicationArgs_idx_0#0)
                ((itxn_field ApplicationArgs) inner_txn_params%2%%param_ApplicationArgs_idx_1#0)
                ((itxn_field TypeEnum) inner_txn_params%2%%param_TypeEnum_idx_0#0)
                ((itxn_field Fee) inner_txn_params%2%%param_Fee_idx_0#0)
                goto block@3
            block@3: // next_txn_L39
                itxn_submit
                let awst_tmp%4#0: itxn_group_idx = itxn_group_idx(0)
                let awst_tmp%5#0: bytes = itxn[awst_tmp%4#0].LastLog
                let tmp%11#0: bytes = ((extract 4 0) awst_tmp%5#0)
                let tmp%12#0: bytes = ((extract 0 4) awst_tmp%5#0)
                let tmp%13#0: bool = (== tmp%12#0 0x151f7c75)
                let (value%3#0: bytes, check%3#0: bool) = (tmp%11#0, tmp%13#0)
                (assert check%3#0) // ARC4 prefix is valid
                let result.0#0: bytes = value%3#0
                let result.1#0: itxn_group_idx = awst_tmp%4#0
                let result.1._is_last#0: bool = 1u
                let result.1.Sender#0: bytes = itxn[result.1#0].Sender
                let result.1.Fee#0: uint64 = itxn[result.1#0].Fee
                let result.1.FirstValid#0: uint64 = itxn[result.1#0].FirstValid
                let result.1.FirstValidTime#0: uint64 = itxn[result.1#0].FirstValidTime
                let result.1.LastValid#0: uint64 = itxn[result.1#0].LastValid
                let result.1.Note#0: bytes = itxn[result.1#0].Note
                let result.1.Lease#0: bytes = itxn[result.1#0].Lease
                let result.1.Receiver#0: bytes = itxn[result.1#0].Receiver
                let result.1.Amount#0: uint64 = itxn[result.1#0].Amount
                let result.1.CloseRemainderTo#0: bytes = itxn[result.1#0].CloseRemainderTo
                let result.1.VotePK#0: bytes = itxn[result.1#0].VotePK
                let result.1.SelectionPK#0: bytes = itxn[result.1#0].SelectionPK
                let result.1.VoteFirst#0: uint64 = itxn[result.1#0].VoteFirst
                let result.1.VoteLast#0: uint64 = itxn[result.1#0].VoteLast
                let result.1.VoteKeyDilution#0: uint64 = itxn[result.1#0].VoteKeyDilution
                let result.1.Type#0: bytes = itxn[result.1#0].Type
                let result.1.TypeEnum#0: uint64 = itxn[result.1#0].TypeEnum
                let result.1.XferAsset#0: uint64 = itxn[result.1#0].XferAsset
                let result.1.AssetAmount#0: uint64 = itxn[result.1#0].AssetAmount
                let result.1.AssetSender#0: bytes = itxn[result.1#0].AssetSender
                let result.1.AssetReceiver#0: bytes = itxn[result.1#0].AssetReceiver
                let result.1.AssetCloseTo#0: bytes = itxn[result.1#0].AssetCloseTo
                let result.1.GroupIndex#0: uint64 = itxn[result.1#0].GroupIndex
                let result.1.TxID#0: bytes = itxn[result.1#0].TxID
                let result.1.ApplicationID#0: uint64 = itxn[result.1#0].ApplicationID
                let result.1.OnCompletion#0: uint64 = itxn[result.1#0].OnCompletion
                let result.1.NumAppArgs#0: uint64 = itxn[result.1#0].NumAppArgs
                let result.1.NumAccounts#0: uint64 = itxn[result.1#0].NumAccounts
                let result.1.ApprovalProgram#0: bytes = itxn[result.1#0].ApprovalProgram
                let result.1.ClearStateProgram#0: bytes = itxn[result.1#0].ClearStateProgram
                let result.1.RekeyTo#0: bytes = itxn[result.1#0].RekeyTo
                let result.1.ConfigAsset#0: uint64 = itxn[result.1#0].ConfigAsset
                let result.1.ConfigAssetTotal#0: uint64 = itxn[result.1#0].ConfigAssetTotal
                let result.1.ConfigAssetDecimals#0: uint64 = itxn[result.1#0].ConfigAssetDecimals
                let result.1.ConfigAssetDefaultFrozen#0: bool = itxn[result.1#0].ConfigAssetDefaultFrozen
                let result.1.ConfigAssetUnitName#0: bytes = itxn[result.1#0].ConfigAssetUnitName
                let result.1.ConfigAssetName#0: bytes = itxn[result.1#0].ConfigAssetName
                let result.1.ConfigAssetURL#0: bytes = itxn[result.1#0].ConfigAssetURL
                let result.1.ConfigAssetMetadataHash#0: bytes = itxn[result.1#0].ConfigAssetMetadataHash
                let result.1.ConfigAssetManager#0: bytes = itxn[result.1#0].ConfigAssetManager
                let result.1.ConfigAssetReserve#0: bytes = itxn[result.1#0].ConfigAssetReserve
                let result.1.ConfigAssetFreeze#0: bytes = itxn[result.1#0].ConfigAssetFreeze
                let result.1.ConfigAssetClawback#0: bytes = itxn[result.1#0].ConfigAssetClawback
                let result.1.FreezeAsset#0: uint64 = itxn[result.1#0].FreezeAsset
                let result.1.FreezeAssetAccount#0: bytes = itxn[result.1#0].FreezeAssetAccount
                let result.1.FreezeAssetFrozen#0: bool = itxn[result.1#0].FreezeAssetFrozen
                let result.1.NumAssets#0: uint64 = itxn[result.1#0].NumAssets
                let result.1.NumApplications#0: uint64 = itxn[result.1#0].NumApplications
                let result.1.GlobalNumUint#0: uint64 = itxn[result.1#0].GlobalNumUint
                let result.1.GlobalNumByteSlice#0: uint64 = itxn[result.1#0].GlobalNumByteSlice
                let result.1.LocalNumUint#0: uint64 = itxn[result.1#0].LocalNumUint
                let result.1.LocalNumByteSlice#0: uint64 = itxn[result.1#0].LocalNumByteSlice
                let result.1.ExtraProgramPages#0: uint64 = itxn[result.1#0].ExtraProgramPages
                let result.1.Nonparticipation#0: bool = itxn[result.1#0].Nonparticipation
                let result.1.NumLogs#0: uint64 = itxn[result.1#0].NumLogs
                let result.1.CreatedAssetID#0: uint64 = itxn[result.1#0].CreatedAssetID
                let result.1.CreatedApplicationID#0: uint64 = itxn[result.1#0].CreatedApplicationID
                let result.1.LastLog#0: bytes = itxn[result.1#0].LastLog
                let result.1.StateProofPK#0: bytes = itxn[result.1#0].StateProofPK
                let result.1.NumApprovalProgramPages#0: uint64 = itxn[result.1#0].NumApprovalProgramPages
                let result.1.NumClearStateProgramPages#0: uint64 = itxn[result.1#0].NumClearStateProgramPages
                let tmp%14#0: bool = (== result.0#0 "\x00\x0becho: tuple")
                (assert tmp%14#0)
                let awst_tmp%6#0: bytes = result.1.LastLog#0
                let tmp%15#0: bytes = ((extract 4 0) awst_tmp%6#0)
                let tmp%16#0: bytes = ((extract 0 4) awst_tmp%6#0)
                let tmp%17#0: bool = (== tmp%16#0 0x151f7c75)
                let (value%4#0: bytes, check%4#0: bool) = (tmp%15#0, tmp%17#0)
                (assert check%4#0) // ARC4 prefix is valid
                let tmp%18#0: bool = (== value%4#0 "\x00\x0becho: tuple")
                (assert tmp%18#0)
                itxn_begin
                let inner_txn_params%3#0: itxn_field_set = itxn_field_set(3)
                let inner_txn_params%3%%param_Fee_idx_0#0: uint64 = 0u
                let inner_txn_params%3%%Fee_length#0: uint64 = 1u
                let inner_txn_params%3%%param_TypeEnum_idx_0#0: uint64 = appl
                let inner_txn_params%3%%TypeEnum_length#0: uint64 = 1u
                let inner_txn_params%3%%param_ApplicationArgs_idx_0#0: bytes = method "echo(string)string"
                let inner_txn_params%3%%param_ApplicationArgs_idx_1#0: bytes = "\x00\x07untyped"
                let inner_txn_params%3%%ApplicationArgs_length#0: uint64 = 2u
                let inner_txn_params%3%%param_ApplicationID_idx_0#0: uint64 = app#0
                let inner_txn_params%3%%ApplicationID_length#0: uint64 = 1u
                let inner_txn_params%3%%Sender_length#0: uint64 = 0u
                let inner_txn_params%3%%Note_length#0: uint64 = 0u
                let inner_txn_params%3%%Receiver_length#0: uint64 = 0u
                let inner_txn_params%3%%Amount_length#0: uint64 = 0u
                let inner_txn_params%3%%CloseRemainderTo_length#0: uint64 = 0u
                let inner_txn_params%3%%VotePK_length#0: uint64 = 0u
                let inner_txn_params%3%%SelectionPK_length#0: uint64 = 0u
                let inner_txn_params%3%%VoteFirst_length#0: uint64 = 0u
                let inner_txn_params%3%%VoteLast_length#0: uint64 = 0u
                let inner_txn_params%3%%VoteKeyDilution_length#0: uint64 = 0u
                let inner_txn_params%3%%Type_length#0: uint64 = 0u
                let inner_txn_params%3%%XferAsset_length#0: uint64 = 0u
                let inner_txn_params%3%%AssetAmount_length#0: uint64 = 0u
                let inner_txn_params%3%%AssetSender_length#0: uint64 = 0u
                let inner_txn_params%3%%AssetReceiver_length#0: uint64 = 0u
                let inner_txn_params%3%%AssetCloseTo_length#0: uint64 = 0u
                let inner_txn_params%3%%OnCompletion_length#0: uint64 = 0u
                let inner_txn_params%3%%ApprovalProgram_length#0: uint64 = 0u
                let inner_txn_params%3%%ClearStateProgram_length#0: uint64 = 0u
                let inner_txn_params%3%%RekeyTo_length#0: uint64 = 0u
                let inner_txn_params%3%%ConfigAsset_length#0: uint64 = 0u
                let inner_txn_params%3%%ConfigAssetTotal_length#0: uint64 = 0u
                let inner_txn_params%3%%ConfigAssetDecimals_length#0: uint64 = 0u
                let inner_txn_params%3%%ConfigAssetDefaultFrozen_length#0: uint64 = 0u
                let inner_txn_params%3%%ConfigAssetUnitName_length#0: uint64 = 0u
                let inner_txn_params%3%%ConfigAssetName_length#0: uint64 = 0u
                let inner_txn_params%3%%ConfigAssetURL_length#0: uint64 = 0u
                let inner_txn_params%3%%ConfigAssetMetadataHash_length#0: uint64 = 0u
                let inner_txn_params%3%%ConfigAssetManager_length#0: uint64 = 0u
                let inner_txn_params%3%%ConfigAssetReserve_length#0: uint64 = 0u
                let inner_txn_params%3%%ConfigAssetFreeze_length#0: uint64 = 0u
                let inner_txn_params%3%%ConfigAssetClawback_length#0: uint64 = 0u
                let inner_txn_params%3%%FreezeAsset_length#0: uint64 = 0u
                let inner_txn_params%3%%FreezeAssetAccount_length#0: uint64 = 0u
                let inner_txn_params%3%%FreezeAssetFrozen_length#0: uint64 = 0u
                let inner_txn_params%3%%GlobalNumUint_length#0: uint64 = 0u
                let inner_txn_params%3%%GlobalNumByteSlice_length#0: uint64 = 0u
                let inner_txn_params%3%%LocalNumUint_length#0: uint64 = 0u
                let inner_txn_params%3%%LocalNumByteSlice_length#0: uint64 = 0u
                let inner_txn_params%3%%ExtraProgramPages_length#0: uint64 = 0u
                let inner_txn_params%3%%Nonparticipation_length#0: uint64 = 0u
                let inner_txn_params%3%%StateProofPK_length#0: uint64 = 0u
                let inner_txn_params%3%%Accounts_length#0: uint64 = 0u
                let inner_txn_params%3%%Assets_length#0: uint64 = 0u
                let inner_txn_params%3%%Applications_length#0: uint64 = 0u
                let inner_txn_params%3%%ApprovalProgramPages_length#0: uint64 = 0u
                let inner_txn_params%3%%ClearStateProgramPages_length#0: uint64 = 0u
                ((itxn_field ApplicationID) inner_txn_params%3%%param_ApplicationID_idx_0#0)
                ((itxn_field ApplicationArgs) inner_txn_params%3%%param_ApplicationArgs_idx_0#0)
                ((itxn_field ApplicationArgs) inner_txn_params%3%%param_ApplicationArgs_idx_1#0)
                ((itxn_field TypeEnum) inner_txn_params%3%%param_TypeEnum_idx_0#0)
                ((itxn_field Fee) inner_txn_params%3%%param_Fee_idx_0#0)
                goto block@4
            block@4: // next_txn_L43
                itxn_submit
                let txn_result#0: itxn_group_idx = itxn_group_idx(0)
                let txn_result._is_last#0: bool = 1u
                let txn_result.Sender#0: bytes = itxn[txn_result#0].Sender
                let txn_result.Fee#0: uint64 = itxn[txn_result#0].Fee
                let txn_result.FirstValid#0: uint64 = itxn[txn_result#0].FirstValid
                let txn_result.FirstValidTime#0: uint64 = itxn[txn_result#0].FirstValidTime
                let txn_result.LastValid#0: uint64 = itxn[txn_result#0].LastValid
                let txn_result.Note#0: bytes = itxn[txn_result#0].Note
                let txn_result.Lease#0: bytes = itxn[txn_result#0].Lease
                let txn_result.Receiver#0: bytes = itxn[txn_result#0].Receiver
                let txn_result.Amount#0: uint64 = itxn[txn_result#0].Amount
                let txn_result.CloseRemainderTo#0: bytes = itxn[txn_result#0].CloseRemainderTo
                let txn_result.VotePK#0: bytes = itxn[txn_result#0].VotePK
                let txn_result.SelectionPK#0: bytes = itxn[txn_result#0].SelectionPK
                let txn_result.VoteFirst#0: uint64 = itxn[txn_result#0].VoteFirst
                let txn_result.VoteLast#0: uint64 = itxn[txn_result#0].VoteLast
                let txn_result.VoteKeyDilution#0: uint64 = itxn[txn_result#0].VoteKeyDilution
                let txn_result.Type#0: bytes = itxn[txn_result#0].Type
                let txn_result.TypeEnum#0: uint64 = itxn[txn_result#0].TypeEnum
                let txn_result.XferAsset#0: uint64 = itxn[txn_result#0].XferAsset
                let txn_result.AssetAmount#0: uint64 = itxn[txn_result#0].AssetAmount
                let txn_result.AssetSender#0: bytes = itxn[txn_result#0].AssetSender
                let txn_result.AssetReceiver#0: bytes = itxn[txn_result#0].AssetReceiver
                let txn_result.AssetCloseTo#0: bytes = itxn[txn_result#0].AssetCloseTo
                let txn_result.GroupIndex#0: uint64 = itxn[txn_result#0].GroupIndex
                let txn_result.TxID#0: bytes = itxn[txn_result#0].TxID
                let txn_result.ApplicationID#0: uint64 = itxn[txn_result#0].ApplicationID
                let txn_result.OnCompletion#0: uint64 = itxn[txn_result#0].OnCompletion
                let txn_result.NumAppArgs#0: uint64 = itxn[txn_result#0].NumAppArgs
                let txn_result.NumAccounts#0: uint64 = itxn[txn_result#0].NumAccounts
                let txn_result.ApprovalProgram#0: bytes = itxn[txn_result#0].ApprovalProgram
                let txn_result.ClearStateProgram#0: bytes = itxn[txn_result#0].ClearStateProgram
                let txn_result.RekeyTo#0: bytes = itxn[txn_result#0].RekeyTo
                let txn_result.ConfigAsset#0: uint64 = itxn[txn_result#0].ConfigAsset
                let txn_result.ConfigAssetTotal#0: uint64 = itxn[txn_result#0].ConfigAssetTotal
                let txn_result.ConfigAssetDecimals#0: uint64 = itxn[txn_result#0].ConfigAssetDecimals
                let txn_result.ConfigAssetDefaultFrozen#0: bool = itxn[txn_result#0].ConfigAssetDefaultFrozen
                let txn_result.ConfigAssetUnitName#0: bytes = itxn[txn_result#0].ConfigAssetUnitName
                let txn_result.ConfigAssetName#0: bytes = itxn[txn_result#0].ConfigAssetName
                let txn_result.ConfigAssetURL#0: bytes = itxn[txn_result#0].ConfigAssetURL
                let txn_result.ConfigAssetMetadataHash#0: bytes = itxn[txn_result#0].ConfigAssetMetadataHash
                let txn_result.ConfigAssetManager#0: bytes = itxn[txn_result#0].ConfigAssetManager
                let txn_result.ConfigAssetReserve#0: bytes = itxn[txn_result#0].ConfigAssetReserve
                let txn_result.ConfigAssetFreeze#0: bytes = itxn[txn_result#0].ConfigAssetFreeze
                let txn_result.ConfigAssetClawback#0: bytes = itxn[txn_result#0].ConfigAssetClawback
                let txn_result.FreezeAsset#0: uint64 = itxn[txn_result#0].FreezeAsset
                let txn_result.FreezeAssetAccount#0: bytes = itxn[txn_result#0].FreezeAssetAccount
                let txn_result.FreezeAssetFrozen#0: bool = itxn[txn_result#0].FreezeAssetFrozen
                let txn_result.NumAssets#0: uint64 = itxn[txn_result#0].NumAssets
                let txn_result.NumApplications#0: uint64 = itxn[txn_result#0].NumApplications
                let txn_result.GlobalNumUint#0: uint64 = itxn[txn_result#0].GlobalNumUint
                let txn_result.GlobalNumByteSlice#0: uint64 = itxn[txn_result#0].GlobalNumByteSlice
                let txn_result.LocalNumUint#0: uint64 = itxn[txn_result#0].LocalNumUint
                let txn_result.LocalNumByteSlice#0: uint64 = itxn[txn_result#0].LocalNumByteSlice
                let txn_result.ExtraProgramPages#0: uint64 = itxn[txn_result#0].ExtraProgramPages
                let txn_result.Nonparticipation#0: bool = itxn[txn_result#0].Nonparticipation
                let txn_result.NumLogs#0: uint64 = itxn[txn_result#0].NumLogs
                let txn_result.CreatedAssetID#0: uint64 = itxn[txn_result#0].CreatedAssetID
                let txn_result.CreatedApplicationID#0: uint64 = itxn[txn_result#0].CreatedApplicationID
                let txn_result.LastLog#0: bytes = itxn[txn_result#0].LastLog
                let txn_result.StateProofPK#0: bytes = itxn[txn_result#0].StateProofPK
                let txn_result.NumApprovalProgramPages#0: uint64 = itxn[txn_result#0].NumApprovalProgramPages
                let txn_result.NumClearStateProgramPages#0: uint64 = itxn[txn_result#0].NumClearStateProgramPages
                let awst_tmp%7#0: bytes = txn_result.LastLog#0
                let tmp%19#0: bytes = ((extract 4 0) awst_tmp%7#0)
                let tmp%20#0: bytes = ((extract 0 4) awst_tmp%7#0)
                let tmp%21#0: bool = (== tmp%20#0 0x151f7c75)
                let (value%5#0: bytes, check%5#0: bool) = (tmp%19#0, tmp%21#0)
                (assert check%5#0) // ARC4 prefix is valid
                let tmp%22#0: bool = (== value%5#0 "\x00\recho: untyped")
                (assert tmp%22#0)
                return 
        
        subroutine test_cases.typed_abi_call.typed_c2c.Greeter.test_arg_conversion(app: uint64) -> void:
            block@0: // L46
                itxn_begin
                let inner_txn_params%0#0: itxn_field_set = itxn_field_set(0)
                let inner_txn_params%0%%param_Fee_idx_0#0: uint64 = 0u
                let inner_txn_params%0%%Fee_length#0: uint64 = 1u
                let inner_txn_params%0%%param_TypeEnum_idx_0#0: uint64 = appl
                let inner_txn_params%0%%TypeEnum_length#0: uint64 = 1u
                let inner_txn_params%0%%param_ApplicationArgs_idx_0#0: bytes = method "log_string(string)void"
                let inner_txn_params%0%%param_ApplicationArgs_idx_1#0: bytes = "\x00\nconverted1"
                let inner_txn_params%0%%ApplicationArgs_length#0: uint64 = 2u
                let inner_txn_params%0%%param_ApplicationID_idx_0#0: uint64 = app#0
                let inner_txn_params%0%%ApplicationID_length#0: uint64 = 1u
                let inner_txn_params%0%%Sender_length#0: uint64 = 0u
                let inner_txn_params%0%%Note_length#0: uint64 = 0u
                let inner_txn_params%0%%Receiver_length#0: uint64 = 0u
                let inner_txn_params%0%%Amount_length#0: uint64 = 0u
                let inner_txn_params%0%%CloseRemainderTo_length#0: uint64 = 0u
                let inner_txn_params%0%%VotePK_length#0: uint64 = 0u
                let inner_txn_params%0%%SelectionPK_length#0: uint64 = 0u
                let inner_txn_params%0%%VoteFirst_length#0: uint64 = 0u
                let inner_txn_params%0%%VoteLast_length#0: uint64 = 0u
                let inner_txn_params%0%%VoteKeyDilution_length#0: uint64 = 0u
                let inner_txn_params%0%%Type_length#0: uint64 = 0u
                let inner_txn_params%0%%XferAsset_length#0: uint64 = 0u
                let inner_txn_params%0%%AssetAmount_length#0: uint64 = 0u
                let inner_txn_params%0%%AssetSender_length#0: uint64 = 0u
                let inner_txn_params%0%%AssetReceiver_length#0: uint64 = 0u
                let inner_txn_params%0%%AssetCloseTo_length#0: uint64 = 0u
                let inner_txn_params%0%%OnCompletion_length#0: uint64 = 0u
                let inner_txn_params%0%%ApprovalProgram_length#0: uint64 = 0u
                let inner_txn_params%0%%ClearStateProgram_length#0: uint64 = 0u
                let inner_txn_params%0%%RekeyTo_length#0: uint64 = 0u
                let inner_txn_params%0%%ConfigAsset_length#0: uint64 = 0u
                let inner_txn_params%0%%ConfigAssetTotal_length#0: uint64 = 0u
                let inner_txn_params%0%%ConfigAssetDecimals_length#0: uint64 = 0u
                let inner_txn_params%0%%ConfigAssetDefaultFrozen_length#0: uint64 = 0u
                let inner_txn_params%0%%ConfigAssetUnitName_length#0: uint64 = 0u
                let inner_txn_params%0%%ConfigAssetName_length#0: uint64 = 0u
                let inner_txn_params%0%%ConfigAssetURL_length#0: uint64 = 0u
                let inner_txn_params%0%%ConfigAssetMetadataHash_length#0: uint64 = 0u
                let inner_txn_params%0%%ConfigAssetManager_length#0: uint64 = 0u
                let inner_txn_params%0%%ConfigAssetReserve_length#0: uint64 = 0u
                let inner_txn_params%0%%ConfigAssetFreeze_length#0: uint64 = 0u
                let inner_txn_params%0%%ConfigAssetClawback_length#0: uint64 = 0u
                let inner_txn_params%0%%FreezeAsset_length#0: uint64 = 0u
                let inner_txn_params%0%%FreezeAssetAccount_length#0: uint64 = 0u
                let inner_txn_params%0%%FreezeAssetFrozen_length#0: uint64 = 0u
                let inner_txn_params%0%%GlobalNumUint_length#0: uint64 = 0u
                let inner_txn_params%0%%GlobalNumByteSlice_length#0: uint64 = 0u
                let inner_txn_params%0%%LocalNumUint_length#0: uint64 = 0u
                let inner_txn_params%0%%LocalNumByteSlice_length#0: uint64 = 0u
                let inner_txn_params%0%%ExtraProgramPages_length#0: uint64 = 0u
                let inner_txn_params%0%%Nonparticipation_length#0: uint64 = 0u
                let inner_txn_params%0%%StateProofPK_length#0: uint64 = 0u
                let inner_txn_params%0%%Accounts_length#0: uint64 = 0u
                let inner_txn_params%0%%Assets_length#0: uint64 = 0u
                let inner_txn_params%0%%Applications_length#0: uint64 = 0u
                let inner_txn_params%0%%ApprovalProgramPages_length#0: uint64 = 0u
                let inner_txn_params%0%%ClearStateProgramPages_length#0: uint64 = 0u
                ((itxn_field ApplicationID) inner_txn_params%0%%param_ApplicationID_idx_0#0)
                ((itxn_field ApplicationArgs) inner_txn_params%0%%param_ApplicationArgs_idx_0#0)
                ((itxn_field ApplicationArgs) inner_txn_params%0%%param_ApplicationArgs_idx_1#0)
                ((itxn_field TypeEnum) inner_txn_params%0%%param_TypeEnum_idx_0#0)
                ((itxn_field Fee) inner_txn_params%0%%param_Fee_idx_0#0)
                goto block@1
            block@1: // next_txn_L48
                itxn_submit
                let txn#0: itxn_group_idx = itxn_group_idx(0)
                let txn._is_last#0: bool = 1u
                let txn.Sender#0: bytes = itxn[txn#0].Sender
                let txn.Fee#0: uint64 = itxn[txn#0].Fee
                let txn.FirstValid#0: uint64 = itxn[txn#0].FirstValid
                let txn.FirstValidTime#0: uint64 = itxn[txn#0].FirstValidTime
                let txn.LastValid#0: uint64 = itxn[txn#0].LastValid
                let txn.Note#0: bytes = itxn[txn#0].Note
                let txn.Lease#0: bytes = itxn[txn#0].Lease
                let txn.Receiver#0: bytes = itxn[txn#0].Receiver
                let txn.Amount#0: uint64 = itxn[txn#0].Amount
                let txn.CloseRemainderTo#0: bytes = itxn[txn#0].CloseRemainderTo
                let txn.VotePK#0: bytes = itxn[txn#0].VotePK
                let txn.SelectionPK#0: bytes = itxn[txn#0].SelectionPK
                let txn.VoteFirst#0: uint64 = itxn[txn#0].VoteFirst
                let txn.VoteLast#0: uint64 = itxn[txn#0].VoteLast
                let txn.VoteKeyDilution#0: uint64 = itxn[txn#0].VoteKeyDilution
                let txn.Type#0: bytes = itxn[txn#0].Type
                let txn.TypeEnum#0: uint64 = itxn[txn#0].TypeEnum
                let txn.XferAsset#0: uint64 = itxn[txn#0].XferAsset
                let txn.AssetAmount#0: uint64 = itxn[txn#0].AssetAmount
                let txn.AssetSender#0: bytes = itxn[txn#0].AssetSender
                let txn.AssetReceiver#0: bytes = itxn[txn#0].AssetReceiver
                let txn.AssetCloseTo#0: bytes = itxn[txn#0].AssetCloseTo
                let txn.GroupIndex#0: uint64 = itxn[txn#0].GroupIndex
                let txn.TxID#0: bytes = itxn[txn#0].TxID
                let txn.ApplicationID#0: uint64 = itxn[txn#0].ApplicationID
                let txn.OnCompletion#0: uint64 = itxn[txn#0].OnCompletion
                let txn.NumAppArgs#0: uint64 = itxn[txn#0].NumAppArgs
                let txn.NumAccounts#0: uint64 = itxn[txn#0].NumAccounts
                let txn.ApprovalProgram#0: bytes = itxn[txn#0].ApprovalProgram
                let txn.ClearStateProgram#0: bytes = itxn[txn#0].ClearStateProgram
                let txn.RekeyTo#0: bytes = itxn[txn#0].RekeyTo
                let txn.ConfigAsset#0: uint64 = itxn[txn#0].ConfigAsset
                let txn.ConfigAssetTotal#0: uint64 = itxn[txn#0].ConfigAssetTotal
                let txn.ConfigAssetDecimals#0: uint64 = itxn[txn#0].ConfigAssetDecimals
                let txn.ConfigAssetDefaultFrozen#0: bool = itxn[txn#0].ConfigAssetDefaultFrozen
                let txn.ConfigAssetUnitName#0: bytes = itxn[txn#0].ConfigAssetUnitName
                let txn.ConfigAssetName#0: bytes = itxn[txn#0].ConfigAssetName
                let txn.ConfigAssetURL#0: bytes = itxn[txn#0].ConfigAssetURL
                let txn.ConfigAssetMetadataHash#0: bytes = itxn[txn#0].ConfigAssetMetadataHash
                let txn.ConfigAssetManager#0: bytes = itxn[txn#0].ConfigAssetManager
                let txn.ConfigAssetReserve#0: bytes = itxn[txn#0].ConfigAssetReserve
                let txn.ConfigAssetFreeze#0: bytes = itxn[txn#0].ConfigAssetFreeze
                let txn.ConfigAssetClawback#0: bytes = itxn[txn#0].ConfigAssetClawback
                let txn.FreezeAsset#0: uint64 = itxn[txn#0].FreezeAsset
                let txn.FreezeAssetAccount#0: bytes = itxn[txn#0].FreezeAssetAccount
                let txn.FreezeAssetFrozen#0: bool = itxn[txn#0].FreezeAssetFrozen
                let txn.NumAssets#0: uint64 = itxn[txn#0].NumAssets
                let txn.NumApplications#0: uint64 = itxn[txn#0].NumApplications
                let txn.GlobalNumUint#0: uint64 = itxn[txn#0].GlobalNumUint
                let txn.GlobalNumByteSlice#0: uint64 = itxn[txn#0].GlobalNumByteSlice
                let txn.LocalNumUint#0: uint64 = itxn[txn#0].LocalNumUint
                let txn.LocalNumByteSlice#0: uint64 = itxn[txn#0].LocalNumByteSlice
                let txn.ExtraProgramPages#0: uint64 = itxn[txn#0].ExtraProgramPages
                let txn.Nonparticipation#0: bool = itxn[txn#0].Nonparticipation
                let txn.NumLogs#0: uint64 = itxn[txn#0].NumLogs
                let txn.CreatedAssetID#0: uint64 = itxn[txn#0].CreatedAssetID
                let txn.CreatedApplicationID#0: uint64 = itxn[txn#0].CreatedApplicationID
                let txn.LastLog#0: bytes = itxn[txn#0].LastLog
                let txn.StateProofPK#0: bytes = itxn[txn#0].StateProofPK
                let txn.NumApprovalProgramPages#0: uint64 = itxn[txn#0].NumApprovalProgramPages
                let txn.NumClearStateProgramPages#0: uint64 = itxn[txn#0].NumClearStateProgramPages
                let tmp%0#0: bool = (== txn.LastLog#0 "converted1")
                (assert tmp%0#0)
                itxn_begin
                let inner_txn_params%1#0: itxn_field_set = itxn_field_set(1)
                let inner_txn_params%1%%param_Fee_idx_0#0: uint64 = 0u
                let inner_txn_params%1%%Fee_length#0: uint64 = 1u
                let inner_txn_params%1%%param_TypeEnum_idx_0#0: uint64 = appl
                let inner_txn_params%1%%TypeEnum_length#0: uint64 = 1u
                let inner_txn_params%1%%param_ApplicationArgs_idx_0#0: bytes = method "log_uint64(uint64)void"
                let inner_txn_params%1%%param_ApplicationArgs_idx_1#0: bytes = 0x0000000000000002
                let inner_txn_params%1%%ApplicationArgs_length#0: uint64 = 2u
                let inner_txn_params%1%%param_ApplicationID_idx_0#0: uint64 = app#0
                let inner_txn_params%1%%ApplicationID_length#0: uint64 = 1u
                let inner_txn_params%1%%Sender_length#0: uint64 = 0u
                let inner_txn_params%1%%Note_length#0: uint64 = 0u
                let inner_txn_params%1%%Receiver_length#0: uint64 = 0u
                let inner_txn_params%1%%Amount_length#0: uint64 = 0u
                let inner_txn_params%1%%CloseRemainderTo_length#0: uint64 = 0u
                let inner_txn_params%1%%VotePK_length#0: uint64 = 0u
                let inner_txn_params%1%%SelectionPK_length#0: uint64 = 0u
                let inner_txn_params%1%%VoteFirst_length#0: uint64 = 0u
                let inner_txn_params%1%%VoteLast_length#0: uint64 = 0u
                let inner_txn_params%1%%VoteKeyDilution_length#0: uint64 = 0u
                let inner_txn_params%1%%Type_length#0: uint64 = 0u
                let inner_txn_params%1%%XferAsset_length#0: uint64 = 0u
                let inner_txn_params%1%%AssetAmount_length#0: uint64 = 0u
                let inner_txn_params%1%%AssetSender_length#0: uint64 = 0u
                let inner_txn_params%1%%AssetReceiver_length#0: uint64 = 0u
                let inner_txn_params%1%%AssetCloseTo_length#0: uint64 = 0u
                let inner_txn_params%1%%OnCompletion_length#0: uint64 = 0u
                let inner_txn_params%1%%ApprovalProgram_length#0: uint64 = 0u
                let inner_txn_params%1%%ClearStateProgram_length#0: uint64 = 0u
                let inner_txn_params%1%%RekeyTo_length#0: uint64 = 0u
                let inner_txn_params%1%%ConfigAsset_length#0: uint64 = 0u
                let inner_txn_params%1%%ConfigAssetTotal_length#0: uint64 = 0u
                let inner_txn_params%1%%ConfigAssetDecimals_length#0: uint64 = 0u
                let inner_txn_params%1%%ConfigAssetDefaultFrozen_length#0: uint64 = 0u
                let inner_txn_params%1%%ConfigAssetUnitName_length#0: uint64 = 0u
                let inner_txn_params%1%%ConfigAssetName_length#0: uint64 = 0u
                let inner_txn_params%1%%ConfigAssetURL_length#0: uint64 = 0u
                let inner_txn_params%1%%ConfigAssetMetadataHash_length#0: uint64 = 0u
                let inner_txn_params%1%%ConfigAssetManager_length#0: uint64 = 0u
                let inner_txn_params%1%%ConfigAssetReserve_length#0: uint64 = 0u
                let inner_txn_params%1%%ConfigAssetFreeze_length#0: uint64 = 0u
                let inner_txn_params%1%%ConfigAssetClawback_length#0: uint64 = 0u
                let inner_txn_params%1%%FreezeAsset_length#0: uint64 = 0u
                let inner_txn_params%1%%FreezeAssetAccount_length#0: uint64 = 0u
                let inner_txn_params%1%%FreezeAssetFrozen_length#0: uint64 = 0u
                let inner_txn_params%1%%GlobalNumUint_length#0: uint64 = 0u
                let inner_txn_params%1%%GlobalNumByteSlice_length#0: uint64 = 0u
                let inner_txn_params%1%%LocalNumUint_length#0: uint64 = 0u
                let inner_txn_params%1%%LocalNumByteSlice_length#0: uint64 = 0u
                let inner_txn_params%1%%ExtraProgramPages_length#0: uint64 = 0u
                let inner_txn_params%1%%Nonparticipation_length#0: uint64 = 0u
                let inner_txn_params%1%%StateProofPK_length#0: uint64 = 0u
                let inner_txn_params%1%%Accounts_length#0: uint64 = 0u
                let inner_txn_params%1%%Assets_length#0: uint64 = 0u
                let inner_txn_params%1%%Applications_length#0: uint64 = 0u
                let inner_txn_params%1%%ApprovalProgramPages_length#0: uint64 = 0u
                let inner_txn_params%1%%ClearStateProgramPages_length#0: uint64 = 0u
                ((itxn_field ApplicationID) inner_txn_params%1%%param_ApplicationID_idx_0#0)
                ((itxn_field ApplicationArgs) inner_txn_params%1%%param_ApplicationArgs_idx_0#0)
                ((itxn_field ApplicationArgs) inner_txn_params%1%%param_ApplicationArgs_idx_1#0)
                ((itxn_field TypeEnum) inner_txn_params%1%%param_TypeEnum_idx_0#0)
                ((itxn_field Fee) inner_txn_params%1%%param_Fee_idx_0#0)
                goto block@2
            block@2: // next_txn_L51
                itxn_submit
                let txn#1: itxn_group_idx = itxn_group_idx(0)
                let txn._is_last#1: bool = 1u
                let txn.Sender#1: bytes = itxn[txn#1].Sender
                let txn.Fee#1: uint64 = itxn[txn#1].Fee
                let txn.FirstValid#1: uint64 = itxn[txn#1].FirstValid
                let txn.FirstValidTime#1: uint64 = itxn[txn#1].FirstValidTime
                let txn.LastValid#1: uint64 = itxn[txn#1].LastValid
                let txn.Note#1: bytes = itxn[txn#1].Note
                let txn.Lease#1: bytes = itxn[txn#1].Lease
                let txn.Receiver#1: bytes = itxn[txn#1].Receiver
                let txn.Amount#1: uint64 = itxn[txn#1].Amount
                let txn.CloseRemainderTo#1: bytes = itxn[txn#1].CloseRemainderTo
                let txn.VotePK#1: bytes = itxn[txn#1].VotePK
                let txn.SelectionPK#1: bytes = itxn[txn#1].SelectionPK
                let txn.VoteFirst#1: uint64 = itxn[txn#1].VoteFirst
                let txn.VoteLast#1: uint64 = itxn[txn#1].VoteLast
                let txn.VoteKeyDilution#1: uint64 = itxn[txn#1].VoteKeyDilution
                let txn.Type#1: bytes = itxn[txn#1].Type
                let txn.TypeEnum#1: uint64 = itxn[txn#1].TypeEnum
                let txn.XferAsset#1: uint64 = itxn[txn#1].XferAsset
                let txn.AssetAmount#1: uint64 = itxn[txn#1].AssetAmount
                let txn.AssetSender#1: bytes = itxn[txn#1].AssetSender
                let txn.AssetReceiver#1: bytes = itxn[txn#1].AssetReceiver
                let txn.AssetCloseTo#1: bytes = itxn[txn#1].AssetCloseTo
                let txn.GroupIndex#1: uint64 = itxn[txn#1].GroupIndex
                let txn.TxID#1: bytes = itxn[txn#1].TxID
                let txn.ApplicationID#1: uint64 = itxn[txn#1].ApplicationID
                let txn.OnCompletion#1: uint64 = itxn[txn#1].OnCompletion
                let txn.NumAppArgs#1: uint64 = itxn[txn#1].NumAppArgs
                let txn.NumAccounts#1: uint64 = itxn[txn#1].NumAccounts
                let txn.ApprovalProgram#1: bytes = itxn[txn#1].ApprovalProgram
                let txn.ClearStateProgram#1: bytes = itxn[txn#1].ClearStateProgram
                let txn.RekeyTo#1: bytes = itxn[txn#1].RekeyTo
                let txn.ConfigAsset#1: uint64 = itxn[txn#1].ConfigAsset
                let txn.ConfigAssetTotal#1: uint64 = itxn[txn#1].ConfigAssetTotal
                let txn.ConfigAssetDecimals#1: uint64 = itxn[txn#1].ConfigAssetDecimals
                let txn.ConfigAssetDefaultFrozen#1: bool = itxn[txn#1].ConfigAssetDefaultFrozen
                let txn.ConfigAssetUnitName#1: bytes = itxn[txn#1].ConfigAssetUnitName
                let txn.ConfigAssetName#1: bytes = itxn[txn#1].ConfigAssetName
                let txn.ConfigAssetURL#1: bytes = itxn[txn#1].ConfigAssetURL
                let txn.ConfigAssetMetadataHash#1: bytes = itxn[txn#1].ConfigAssetMetadataHash
                let txn.ConfigAssetManager#1: bytes = itxn[txn#1].ConfigAssetManager
                let txn.ConfigAssetReserve#1: bytes = itxn[txn#1].ConfigAssetReserve
                let txn.ConfigAssetFreeze#1: bytes = itxn[txn#1].ConfigAssetFreeze
                let txn.ConfigAssetClawback#1: bytes = itxn[txn#1].ConfigAssetClawback
                let txn.FreezeAsset#1: uint64 = itxn[txn#1].FreezeAsset
                let txn.FreezeAssetAccount#1: bytes = itxn[txn#1].FreezeAssetAccount
                let txn.FreezeAssetFrozen#1: bool = itxn[txn#1].FreezeAssetFrozen
                let txn.NumAssets#1: uint64 = itxn[txn#1].NumAssets
                let txn.NumApplications#1: uint64 = itxn[txn#1].NumApplications
                let txn.GlobalNumUint#1: uint64 = itxn[txn#1].GlobalNumUint
                let txn.GlobalNumByteSlice#1: uint64 = itxn[txn#1].GlobalNumByteSlice
                let txn.LocalNumUint#1: uint64 = itxn[txn#1].LocalNumUint
                let txn.LocalNumByteSlice#1: uint64 = itxn[txn#1].LocalNumByteSlice
                let txn.ExtraProgramPages#1: uint64 = itxn[txn#1].ExtraProgramPages
                let txn.Nonparticipation#1: bool = itxn[txn#1].Nonparticipation
                let txn.NumLogs#1: uint64 = itxn[txn#1].NumLogs
                let txn.CreatedAssetID#1: uint64 = itxn[txn#1].CreatedAssetID
                let txn.CreatedApplicationID#1: uint64 = itxn[txn#1].CreatedApplicationID
                let txn.LastLog#1: bytes = itxn[txn#1].LastLog
                let txn.StateProofPK#1: bytes = itxn[txn#1].StateProofPK
                let txn.NumApprovalProgramPages#1: uint64 = itxn[txn#1].NumApprovalProgramPages
                let txn.NumClearStateProgramPages#1: uint64 = itxn[txn#1].NumClearStateProgramPages
                let tmp%1#0: bytes = (itob 2u)
                let tmp%2#0: bool = (== txn.LastLog#1 tmp%1#0)
                (assert tmp%2#0)
                itxn_begin
                let inner_txn_params%2#0: itxn_field_set = itxn_field_set(2)
                let inner_txn_params%2%%param_Fee_idx_0#0: uint64 = 0u
                let inner_txn_params%2%%Fee_length#0: uint64 = 1u
                let inner_txn_params%2%%param_TypeEnum_idx_0#0: uint64 = appl
                let inner_txn_params%2%%TypeEnum_length#0: uint64 = 1u
                let inner_txn_params%2%%param_ApplicationArgs_idx_0#0: bytes = method "log_uint512(uint512)void"
                let inner_txn_params%2%%param_ApplicationArgs_idx_1#0: bytes = 0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000003
                let inner_txn_params%2%%ApplicationArgs_length#0: uint64 = 2u
                let inner_txn_params%2%%param_ApplicationID_idx_0#0: uint64 = app#0
                let inner_txn_params%2%%ApplicationID_length#0: uint64 = 1u
                let inner_txn_params%2%%Sender_length#0: uint64 = 0u
                let inner_txn_params%2%%Note_length#0: uint64 = 0u
                let inner_txn_params%2%%Receiver_length#0: uint64 = 0u
                let inner_txn_params%2%%Amount_length#0: uint64 = 0u
                let inner_txn_params%2%%CloseRemainderTo_length#0: uint64 = 0u
                let inner_txn_params%2%%VotePK_length#0: uint64 = 0u
                let inner_txn_params%2%%SelectionPK_length#0: uint64 = 0u
                let inner_txn_params%2%%VoteFirst_length#0: uint64 = 0u
                let inner_txn_params%2%%VoteLast_length#0: uint64 = 0u
                let inner_txn_params%2%%VoteKeyDilution_length#0: uint64 = 0u
                let inner_txn_params%2%%Type_length#0: uint64 = 0u
                let inner_txn_params%2%%XferAsset_length#0: uint64 = 0u
                let inner_txn_params%2%%AssetAmount_length#0: uint64 = 0u
                let inner_txn_params%2%%AssetSender_length#0: uint64 = 0u
                let inner_txn_params%2%%AssetReceiver_length#0: uint64 = 0u
                let inner_txn_params%2%%AssetCloseTo_length#0: uint64 = 0u
                let inner_txn_params%2%%OnCompletion_length#0: uint64 = 0u
                let inner_txn_params%2%%ApprovalProgram_length#0: uint64 = 0u
                let inner_txn_params%2%%ClearStateProgram_length#0: uint64 = 0u
                let inner_txn_params%2%%RekeyTo_length#0: uint64 = 0u
                let inner_txn_params%2%%ConfigAsset_length#0: uint64 = 0u
                let inner_txn_params%2%%ConfigAssetTotal_length#0: uint64 = 0u
                let inner_txn_params%2%%ConfigAssetDecimals_length#0: uint64 = 0u
                let inner_txn_params%2%%ConfigAssetDefaultFrozen_length#0: uint64 = 0u
                let inner_txn_params%2%%ConfigAssetUnitName_length#0: uint64 = 0u
                let inner_txn_params%2%%ConfigAssetName_length#0: uint64 = 0u
                let inner_txn_params%2%%ConfigAssetURL_length#0: uint64 = 0u
                let inner_txn_params%2%%ConfigAssetMetadataHash_length#0: uint64 = 0u
                let inner_txn_params%2%%ConfigAssetManager_length#0: uint64 = 0u
                let inner_txn_params%2%%ConfigAssetReserve_length#0: uint64 = 0u
                let inner_txn_params%2%%ConfigAssetFreeze_length#0: uint64 = 0u
                let inner_txn_params%2%%ConfigAssetClawback_length#0: uint64 = 0u
                let inner_txn_params%2%%FreezeAsset_length#0: uint64 = 0u
                let inner_txn_params%2%%FreezeAssetAccount_length#0: uint64 = 0u
                let inner_txn_params%2%%FreezeAssetFrozen_length#0: uint64 = 0u
                let inner_txn_params%2%%GlobalNumUint_length#0: uint64 = 0u
                let inner_txn_params%2%%GlobalNumByteSlice_length#0: uint64 = 0u
                let inner_txn_params%2%%LocalNumUint_length#0: uint64 = 0u
                let inner_txn_params%2%%LocalNumByteSlice_length#0: uint64 = 0u
                let inner_txn_params%2%%ExtraProgramPages_length#0: uint64 = 0u
                let inner_txn_params%2%%Nonparticipation_length#0: uint64 = 0u
                let inner_txn_params%2%%StateProofPK_length#0: uint64 = 0u
                let inner_txn_params%2%%Accounts_length#0: uint64 = 0u
                let inner_txn_params%2%%Assets_length#0: uint64 = 0u
                let inner_txn_params%2%%Applications_length#0: uint64 = 0u
                let inner_txn_params%2%%ApprovalProgramPages_length#0: uint64 = 0u
                let inner_txn_params%2%%ClearStateProgramPages_length#0: uint64 = 0u
                ((itxn_field ApplicationID) inner_txn_params%2%%param_ApplicationID_idx_0#0)
                ((itxn_field ApplicationArgs) inner_txn_params%2%%param_ApplicationArgs_idx_0#0)
                ((itxn_field ApplicationArgs) inner_txn_params%2%%param_ApplicationArgs_idx_1#0)
                ((itxn_field TypeEnum) inner_txn_params%2%%param_TypeEnum_idx_0#0)
                ((itxn_field Fee) inner_txn_params%2%%param_Fee_idx_0#0)
                goto block@3
            block@3: // next_txn_L54
                itxn_submit
                let txn#2: itxn_group_idx = itxn_group_idx(0)
                let txn._is_last#2: bool = 1u
                let txn.Sender#2: bytes = itxn[txn#2].Sender
                let txn.Fee#2: uint64 = itxn[txn#2].Fee
                let txn.FirstValid#2: uint64 = itxn[txn#2].FirstValid
                let txn.FirstValidTime#2: uint64 = itxn[txn#2].FirstValidTime
                let txn.LastValid#2: uint64 = itxn[txn#2].LastValid
                let txn.Note#2: bytes = itxn[txn#2].Note
                let txn.Lease#2: bytes = itxn[txn#2].Lease
                let txn.Receiver#2: bytes = itxn[txn#2].Receiver
                let txn.Amount#2: uint64 = itxn[txn#2].Amount
                let txn.CloseRemainderTo#2: bytes = itxn[txn#2].CloseRemainderTo
                let txn.VotePK#2: bytes = itxn[txn#2].VotePK
                let txn.SelectionPK#2: bytes = itxn[txn#2].SelectionPK
                let txn.VoteFirst#2: uint64 = itxn[txn#2].VoteFirst
                let txn.VoteLast#2: uint64 = itxn[txn#2].VoteLast
                let txn.VoteKeyDilution#2: uint64 = itxn[txn#2].VoteKeyDilution
                let txn.Type#2: bytes = itxn[txn#2].Type
                let txn.TypeEnum#2: uint64 = itxn[txn#2].TypeEnum
                let txn.XferAsset#2: uint64 = itxn[txn#2].XferAsset
                let txn.AssetAmount#2: uint64 = itxn[txn#2].AssetAmount
                let txn.AssetSender#2: bytes = itxn[txn#2].AssetSender
                let txn.AssetReceiver#2: bytes = itxn[txn#2].AssetReceiver
                let txn.AssetCloseTo#2: bytes = itxn[txn#2].AssetCloseTo
                let txn.GroupIndex#2: uint64 = itxn[txn#2].GroupIndex
                let txn.TxID#2: bytes = itxn[txn#2].TxID
                let txn.ApplicationID#2: uint64 = itxn[txn#2].ApplicationID
                let txn.OnCompletion#2: uint64 = itxn[txn#2].OnCompletion
                let txn.NumAppArgs#2: uint64 = itxn[txn#2].NumAppArgs
                let txn.NumAccounts#2: uint64 = itxn[txn#2].NumAccounts
                let txn.ApprovalProgram#2: bytes = itxn[txn#2].ApprovalProgram
                let txn.ClearStateProgram#2: bytes = itxn[txn#2].ClearStateProgram
                let txn.RekeyTo#2: bytes = itxn[txn#2].RekeyTo
                let txn.ConfigAsset#2: uint64 = itxn[txn#2].ConfigAsset
                let txn.ConfigAssetTotal#2: uint64 = itxn[txn#2].ConfigAssetTotal
                let txn.ConfigAssetDecimals#2: uint64 = itxn[txn#2].ConfigAssetDecimals
                let txn.ConfigAssetDefaultFrozen#2: bool = itxn[txn#2].ConfigAssetDefaultFrozen
                let txn.ConfigAssetUnitName#2: bytes = itxn[txn#2].ConfigAssetUnitName
                let txn.ConfigAssetName#2: bytes = itxn[txn#2].ConfigAssetName
                let txn.ConfigAssetURL#2: bytes = itxn[txn#2].ConfigAssetURL
                let txn.ConfigAssetMetadataHash#2: bytes = itxn[txn#2].ConfigAssetMetadataHash
                let txn.ConfigAssetManager#2: bytes = itxn[txn#2].ConfigAssetManager
                let txn.ConfigAssetReserve#2: bytes = itxn[txn#2].ConfigAssetReserve
                let txn.ConfigAssetFreeze#2: bytes = itxn[txn#2].ConfigAssetFreeze
                let txn.ConfigAssetClawback#2: bytes = itxn[txn#2].ConfigAssetClawback
                let txn.FreezeAsset#2: uint64 = itxn[txn#2].FreezeAsset
                let txn.FreezeAssetAccount#2: bytes = itxn[txn#2].FreezeAssetAccount
                let txn.FreezeAssetFrozen#2: bool = itxn[txn#2].FreezeAssetFrozen
                let txn.NumAssets#2: uint64 = itxn[txn#2].NumAssets
                let txn.NumApplications#2: uint64 = itxn[txn#2].NumApplications
                let txn.GlobalNumUint#2: uint64 = itxn[txn#2].GlobalNumUint
                let txn.GlobalNumByteSlice#2: uint64 = itxn[txn#2].GlobalNumByteSlice
                let txn.LocalNumUint#2: uint64 = itxn[txn#2].LocalNumUint
                let txn.LocalNumByteSlice#2: uint64 = itxn[txn#2].LocalNumByteSlice
                let txn.ExtraProgramPages#2: uint64 = itxn[txn#2].ExtraProgramPages
                let txn.Nonparticipation#2: bool = itxn[txn#2].Nonparticipation
                let txn.NumLogs#2: uint64 = itxn[txn#2].NumLogs
                let txn.CreatedAssetID#2: uint64 = itxn[txn#2].CreatedAssetID
                let txn.CreatedApplicationID#2: uint64 = itxn[txn#2].CreatedApplicationID
                let txn.LastLog#2: bytes = itxn[txn#2].LastLog
                let txn.StateProofPK#2: bytes = itxn[txn#2].StateProofPK
                let txn.NumApprovalProgramPages#2: uint64 = itxn[txn#2].NumApprovalProgramPages
                let txn.NumClearStateProgramPages#2: uint64 = itxn[txn#2].NumClearStateProgramPages
                let tmp%3#0: bytes = (bzero 56u)
                let tmp%4#0: bytes = (itob 3u)
                let tmp%5#0: bytes = (concat tmp%3#0 tmp%4#0)
                let tmp%6#0: bool = (== txn.LastLog#2 tmp%5#0)
                (assert tmp%6#0)
                itxn_begin
                let inner_txn_params%3#0: itxn_field_set = itxn_field_set(3)
                let inner_txn_params%3%%param_Fee_idx_0#0: uint64 = 0u
                let inner_txn_params%3%%Fee_length#0: uint64 = 1u
                let inner_txn_params%3%%param_TypeEnum_idx_0#0: uint64 = appl
                let inner_txn_params%3%%TypeEnum_length#0: uint64 = 1u
                let inner_txn_params%3%%param_ApplicationArgs_idx_0#0: bytes = method "log_bytes(byte[])void"
                let inner_txn_params%3%%param_ApplicationArgs_idx_1#0: bytes = 0x000134
                let inner_txn_params%3%%ApplicationArgs_length#0: uint64 = 2u
                let inner_txn_params%3%%param_ApplicationID_idx_0#0: uint64 = app#0
                let inner_txn_params%3%%ApplicationID_length#0: uint64 = 1u
                let inner_txn_params%3%%Sender_length#0: uint64 = 0u
                let inner_txn_params%3%%Note_length#0: uint64 = 0u
                let inner_txn_params%3%%Receiver_length#0: uint64 = 0u
                let inner_txn_params%3%%Amount_length#0: uint64 = 0u
                let inner_txn_params%3%%CloseRemainderTo_length#0: uint64 = 0u
                let inner_txn_params%3%%VotePK_length#0: uint64 = 0u
                let inner_txn_params%3%%SelectionPK_length#0: uint64 = 0u
                let inner_txn_params%3%%VoteFirst_length#0: uint64 = 0u
                let inner_txn_params%3%%VoteLast_length#0: uint64 = 0u
                let inner_txn_params%3%%VoteKeyDilution_length#0: uint64 = 0u
                let inner_txn_params%3%%Type_length#0: uint64 = 0u
                let inner_txn_params%3%%XferAsset_length#0: uint64 = 0u
                let inner_txn_params%3%%AssetAmount_length#0: uint64 = 0u
                let inner_txn_params%3%%AssetSender_length#0: uint64 = 0u
                let inner_txn_params%3%%AssetReceiver_length#0: uint64 = 0u
                let inner_txn_params%3%%AssetCloseTo_length#0: uint64 = 0u
                let inner_txn_params%3%%OnCompletion_length#0: uint64 = 0u
                let inner_txn_params%3%%ApprovalProgram_length#0: uint64 = 0u
                let inner_txn_params%3%%ClearStateProgram_length#0: uint64 = 0u
                let inner_txn_params%3%%RekeyTo_length#0: uint64 = 0u
                let inner_txn_params%3%%ConfigAsset_length#0: uint64 = 0u
                let inner_txn_params%3%%ConfigAssetTotal_length#0: uint64 = 0u
                let inner_txn_params%3%%ConfigAssetDecimals_length#0: uint64 = 0u
                let inner_txn_params%3%%ConfigAssetDefaultFrozen_length#0: uint64 = 0u
                let inner_txn_params%3%%ConfigAssetUnitName_length#0: uint64 = 0u
                let inner_txn_params%3%%ConfigAssetName_length#0: uint64 = 0u
                let inner_txn_params%3%%ConfigAssetURL_length#0: uint64 = 0u
                let inner_txn_params%3%%ConfigAssetMetadataHash_length#0: uint64 = 0u
                let inner_txn_params%3%%ConfigAssetManager_length#0: uint64 = 0u
                let inner_txn_params%3%%ConfigAssetReserve_length#0: uint64 = 0u
                let inner_txn_params%3%%ConfigAssetFreeze_length#0: uint64 = 0u
                let inner_txn_params%3%%ConfigAssetClawback_length#0: uint64 = 0u
                let inner_txn_params%3%%FreezeAsset_length#0: uint64 = 0u
                let inner_txn_params%3%%FreezeAssetAccount_length#0: uint64 = 0u
                let inner_txn_params%3%%FreezeAssetFrozen_length#0: uint64 = 0u
                let inner_txn_params%3%%GlobalNumUint_length#0: uint64 = 0u
                let inner_txn_params%3%%GlobalNumByteSlice_length#0: uint64 = 0u
                let inner_txn_params%3%%LocalNumUint_length#0: uint64 = 0u
                let inner_txn_params%3%%LocalNumByteSlice_length#0: uint64 = 0u
                let inner_txn_params%3%%ExtraProgramPages_length#0: uint64 = 0u
                let inner_txn_params%3%%Nonparticipation_length#0: uint64 = 0u
                let inner_txn_params%3%%StateProofPK_length#0: uint64 = 0u
                let inner_txn_params%3%%Accounts_length#0: uint64 = 0u
                let inner_txn_params%3%%Assets_length#0: uint64 = 0u
                let inner_txn_params%3%%Applications_length#0: uint64 = 0u
                let inner_txn_params%3%%ApprovalProgramPages_length#0: uint64 = 0u
                let inner_txn_params%3%%ClearStateProgramPages_length#0: uint64 = 0u
                ((itxn_field ApplicationID) inner_txn_params%3%%param_ApplicationID_idx_0#0)
                ((itxn_field ApplicationArgs) inner_txn_params%3%%param_ApplicationArgs_idx_0#0)
                ((itxn_field ApplicationArgs) inner_txn_params%3%%param_ApplicationArgs_idx_1#0)
                ((itxn_field TypeEnum) inner_txn_params%3%%param_TypeEnum_idx_0#0)
                ((itxn_field Fee) inner_txn_params%3%%param_Fee_idx_0#0)
                goto block@4
            block@4: // next_txn_L57
                itxn_submit
                let txn#3: itxn_group_idx = itxn_group_idx(0)
                let txn._is_last#3: bool = 1u
                let txn.Sender#3: bytes = itxn[txn#3].Sender
                let txn.Fee#3: uint64 = itxn[txn#3].Fee
                let txn.FirstValid#3: uint64 = itxn[txn#3].FirstValid
                let txn.FirstValidTime#3: uint64 = itxn[txn#3].FirstValidTime
                let txn.LastValid#3: uint64 = itxn[txn#3].LastValid
                let txn.Note#3: bytes = itxn[txn#3].Note
                let txn.Lease#3: bytes = itxn[txn#3].Lease
                let txn.Receiver#3: bytes = itxn[txn#3].Receiver
                let txn.Amount#3: uint64 = itxn[txn#3].Amount
                let txn.CloseRemainderTo#3: bytes = itxn[txn#3].CloseRemainderTo
                let txn.VotePK#3: bytes = itxn[txn#3].VotePK
                let txn.SelectionPK#3: bytes = itxn[txn#3].SelectionPK
                let txn.VoteFirst#3: uint64 = itxn[txn#3].VoteFirst
                let txn.VoteLast#3: uint64 = itxn[txn#3].VoteLast
                let txn.VoteKeyDilution#3: uint64 = itxn[txn#3].VoteKeyDilution
                let txn.Type#3: bytes = itxn[txn#3].Type
                let txn.TypeEnum#3: uint64 = itxn[txn#3].TypeEnum
                let txn.XferAsset#3: uint64 = itxn[txn#3].XferAsset
                let txn.AssetAmount#3: uint64 = itxn[txn#3].AssetAmount
                let txn.AssetSender#3: bytes = itxn[txn#3].AssetSender
                let txn.AssetReceiver#3: bytes = itxn[txn#3].AssetReceiver
                let txn.AssetCloseTo#3: bytes = itxn[txn#3].AssetCloseTo
                let txn.GroupIndex#3: uint64 = itxn[txn#3].GroupIndex
                let txn.TxID#3: bytes = itxn[txn#3].TxID
                let txn.ApplicationID#3: uint64 = itxn[txn#3].ApplicationID
                let txn.OnCompletion#3: uint64 = itxn[txn#3].OnCompletion
                let txn.NumAppArgs#3: uint64 = itxn[txn#3].NumAppArgs
                let txn.NumAccounts#3: uint64 = itxn[txn#3].NumAccounts
                let txn.ApprovalProgram#3: bytes = itxn[txn#3].ApprovalProgram
                let txn.ClearStateProgram#3: bytes = itxn[txn#3].ClearStateProgram
                let txn.RekeyTo#3: bytes = itxn[txn#3].RekeyTo
                let txn.ConfigAsset#3: uint64 = itxn[txn#3].ConfigAsset
                let txn.ConfigAssetTotal#3: uint64 = itxn[txn#3].ConfigAssetTotal
                let txn.ConfigAssetDecimals#3: uint64 = itxn[txn#3].ConfigAssetDecimals
                let txn.ConfigAssetDefaultFrozen#3: bool = itxn[txn#3].ConfigAssetDefaultFrozen
                let txn.ConfigAssetUnitName#3: bytes = itxn[txn#3].ConfigAssetUnitName
                let txn.ConfigAssetName#3: bytes = itxn[txn#3].ConfigAssetName
                let txn.ConfigAssetURL#3: bytes = itxn[txn#3].ConfigAssetURL
                let txn.ConfigAssetMetadataHash#3: bytes = itxn[txn#3].ConfigAssetMetadataHash
                let txn.ConfigAssetManager#3: bytes = itxn[txn#3].ConfigAssetManager
                let txn.ConfigAssetReserve#3: bytes = itxn[txn#3].ConfigAssetReserve
                let txn.ConfigAssetFreeze#3: bytes = itxn[txn#3].ConfigAssetFreeze
                let txn.ConfigAssetClawback#3: bytes = itxn[txn#3].ConfigAssetClawback
                let txn.FreezeAsset#3: uint64 = itxn[txn#3].FreezeAsset
                let txn.FreezeAssetAccount#3: bytes = itxn[txn#3].FreezeAssetAccount
                let txn.FreezeAssetFrozen#3: bool = itxn[txn#3].FreezeAssetFrozen
                let txn.NumAssets#3: uint64 = itxn[txn#3].NumAssets
                let txn.NumApplications#3: uint64 = itxn[txn#3].NumApplications
                let txn.GlobalNumUint#3: uint64 = itxn[txn#3].GlobalNumUint
                let txn.GlobalNumByteSlice#3: uint64 = itxn[txn#3].GlobalNumByteSlice
                let txn.LocalNumUint#3: uint64 = itxn[txn#3].LocalNumUint
                let txn.LocalNumByteSlice#3: uint64 = itxn[txn#3].LocalNumByteSlice
                let txn.ExtraProgramPages#3: uint64 = itxn[txn#3].ExtraProgramPages
                let txn.Nonparticipation#3: bool = itxn[txn#3].Nonparticipation
                let txn.NumLogs#3: uint64 = itxn[txn#3].NumLogs
                let txn.CreatedAssetID#3: uint64 = itxn[txn#3].CreatedAssetID
                let txn.CreatedApplicationID#3: uint64 = itxn[txn#3].CreatedApplicationID
                let txn.LastLog#3: bytes = itxn[txn#3].LastLog
                let txn.StateProofPK#3: bytes = itxn[txn#3].StateProofPK
                let txn.NumApprovalProgramPages#3: uint64 = itxn[txn#3].NumApprovalProgramPages
                let txn.NumClearStateProgramPages#3: uint64 = itxn[txn#3].NumClearStateProgramPages
                let tmp%7#0: bool = (== txn.LastLog#3 "4")
                (assert tmp%7#0)
                itxn_begin
                let inner_txn_params%4#0: itxn_field_set = itxn_field_set(4)
                let inner_txn_params%4%%param_Fee_idx_0#0: uint64 = 0u
                let inner_txn_params%4%%Fee_length#0: uint64 = 1u
                let inner_txn_params%4%%param_TypeEnum_idx_0#0: uint64 = appl
                let inner_txn_params%4%%TypeEnum_length#0: uint64 = 1u
                let tmp%8#0: bytes = (setbit 0x00 0u 1u)
                let inner_txn_params%4%%param_ApplicationArgs_idx_0#0: bytes = method "log_bool(bool)void"
                let inner_txn_params%4%%param_ApplicationArgs_idx_1#0: bytes = tmp%8#0
                let inner_txn_params%4%%ApplicationArgs_length#0: uint64 = 2u
                let inner_txn_params%4%%param_ApplicationID_idx_0#0: uint64 = app#0
                let inner_txn_params%4%%ApplicationID_length#0: uint64 = 1u
                let inner_txn_params%4%%Sender_length#0: uint64 = 0u
                let inner_txn_params%4%%Note_length#0: uint64 = 0u
                let inner_txn_params%4%%Receiver_length#0: uint64 = 0u
                let inner_txn_params%4%%Amount_length#0: uint64 = 0u
                let inner_txn_params%4%%CloseRemainderTo_length#0: uint64 = 0u
                let inner_txn_params%4%%VotePK_length#0: uint64 = 0u
                let inner_txn_params%4%%SelectionPK_length#0: uint64 = 0u
                let inner_txn_params%4%%VoteFirst_length#0: uint64 = 0u
                let inner_txn_params%4%%VoteLast_length#0: uint64 = 0u
                let inner_txn_params%4%%VoteKeyDilution_length#0: uint64 = 0u
                let inner_txn_params%4%%Type_length#0: uint64 = 0u
                let inner_txn_params%4%%XferAsset_length#0: uint64 = 0u
                let inner_txn_params%4%%AssetAmount_length#0: uint64 = 0u
                let inner_txn_params%4%%AssetSender_length#0: uint64 = 0u
                let inner_txn_params%4%%AssetReceiver_length#0: uint64 = 0u
                let inner_txn_params%4%%AssetCloseTo_length#0: uint64 = 0u
                let inner_txn_params%4%%OnCompletion_length#0: uint64 = 0u
                let inner_txn_params%4%%ApprovalProgram_length#0: uint64 = 0u
                let inner_txn_params%4%%ClearStateProgram_length#0: uint64 = 0u
                let inner_txn_params%4%%RekeyTo_length#0: uint64 = 0u
                let inner_txn_params%4%%ConfigAsset_length#0: uint64 = 0u
                let inner_txn_params%4%%ConfigAssetTotal_length#0: uint64 = 0u
                let inner_txn_params%4%%ConfigAssetDecimals_length#0: uint64 = 0u
                let inner_txn_params%4%%ConfigAssetDefaultFrozen_length#0: uint64 = 0u
                let inner_txn_params%4%%ConfigAssetUnitName_length#0: uint64 = 0u
                let inner_txn_params%4%%ConfigAssetName_length#0: uint64 = 0u
                let inner_txn_params%4%%ConfigAssetURL_length#0: uint64 = 0u
                let inner_txn_params%4%%ConfigAssetMetadataHash_length#0: uint64 = 0u
                let inner_txn_params%4%%ConfigAssetManager_length#0: uint64 = 0u
                let inner_txn_params%4%%ConfigAssetReserve_length#0: uint64 = 0u
                let inner_txn_params%4%%ConfigAssetFreeze_length#0: uint64 = 0u
                let inner_txn_params%4%%ConfigAssetClawback_length#0: uint64 = 0u
                let inner_txn_params%4%%FreezeAsset_length#0: uint64 = 0u
                let inner_txn_params%4%%FreezeAssetAccount_length#0: uint64 = 0u
                let inner_txn_params%4%%FreezeAssetFrozen_length#0: uint64 = 0u
                let inner_txn_params%4%%GlobalNumUint_length#0: uint64 = 0u
                let inner_txn_params%4%%GlobalNumByteSlice_length#0: uint64 = 0u
                let inner_txn_params%4%%LocalNumUint_length#0: uint64 = 0u
                let inner_txn_params%4%%LocalNumByteSlice_length#0: uint64 = 0u
                let inner_txn_params%4%%ExtraProgramPages_length#0: uint64 = 0u
                let inner_txn_params%4%%Nonparticipation_length#0: uint64 = 0u
                let inner_txn_params%4%%StateProofPK_length#0: uint64 = 0u
                let inner_txn_params%4%%Accounts_length#0: uint64 = 0u
                let inner_txn_params%4%%Assets_length#0: uint64 = 0u
                let inner_txn_params%4%%Applications_length#0: uint64 = 0u
                let inner_txn_params%4%%ApprovalProgramPages_length#0: uint64 = 0u
                let inner_txn_params%4%%ClearStateProgramPages_length#0: uint64 = 0u
                ((itxn_field ApplicationID) inner_txn_params%4%%param_ApplicationID_idx_0#0)
                ((itxn_field ApplicationArgs) inner_txn_params%4%%param_ApplicationArgs_idx_0#0)
                ((itxn_field ApplicationArgs) inner_txn_params%4%%param_ApplicationArgs_idx_1#0)
                ((itxn_field TypeEnum) inner_txn_params%4%%param_TypeEnum_idx_0#0)
                ((itxn_field Fee) inner_txn_params%4%%param_Fee_idx_0#0)
                goto block@5
            block@5: // next_txn_L60
                itxn_submit
                let txn#4: itxn_group_idx = itxn_group_idx(0)
                let txn._is_last#4: bool = 1u
                let txn.Sender#4: bytes = itxn[txn#4].Sender
                let txn.Fee#4: uint64 = itxn[txn#4].Fee
                let txn.FirstValid#4: uint64 = itxn[txn#4].FirstValid
                let txn.FirstValidTime#4: uint64 = itxn[txn#4].FirstValidTime
                let txn.LastValid#4: uint64 = itxn[txn#4].LastValid
                let txn.Note#4: bytes = itxn[txn#4].Note
                let txn.Lease#4: bytes = itxn[txn#4].Lease
                let txn.Receiver#4: bytes = itxn[txn#4].Receiver
                let txn.Amount#4: uint64 = itxn[txn#4].Amount
                let txn.CloseRemainderTo#4: bytes = itxn[txn#4].CloseRemainderTo
                let txn.VotePK#4: bytes = itxn[txn#4].VotePK
                let txn.SelectionPK#4: bytes = itxn[txn#4].SelectionPK
                let txn.VoteFirst#4: uint64 = itxn[txn#4].VoteFirst
                let txn.VoteLast#4: uint64 = itxn[txn#4].VoteLast
                let txn.VoteKeyDilution#4: uint64 = itxn[txn#4].VoteKeyDilution
                let txn.Type#4: bytes = itxn[txn#4].Type
                let txn.TypeEnum#4: uint64 = itxn[txn#4].TypeEnum
                let txn.XferAsset#4: uint64 = itxn[txn#4].XferAsset
                let txn.AssetAmount#4: uint64 = itxn[txn#4].AssetAmount
                let txn.AssetSender#4: bytes = itxn[txn#4].AssetSender
                let txn.AssetReceiver#4: bytes = itxn[txn#4].AssetReceiver
                let txn.AssetCloseTo#4: bytes = itxn[txn#4].AssetCloseTo
                let txn.GroupIndex#4: uint64 = itxn[txn#4].GroupIndex
                let txn.TxID#4: bytes = itxn[txn#4].TxID
                let txn.ApplicationID#4: uint64 = itxn[txn#4].ApplicationID
                let txn.OnCompletion#4: uint64 = itxn[txn#4].OnCompletion
                let txn.NumAppArgs#4: uint64 = itxn[txn#4].NumAppArgs
                let txn.NumAccounts#4: uint64 = itxn[txn#4].NumAccounts
                let txn.ApprovalProgram#4: bytes = itxn[txn#4].ApprovalProgram
                let txn.ClearStateProgram#4: bytes = itxn[txn#4].ClearStateProgram
                let txn.RekeyTo#4: bytes = itxn[txn#4].RekeyTo
                let txn.ConfigAsset#4: uint64 = itxn[txn#4].ConfigAsset
                let txn.ConfigAssetTotal#4: uint64 = itxn[txn#4].ConfigAssetTotal
                let txn.ConfigAssetDecimals#4: uint64 = itxn[txn#4].ConfigAssetDecimals
                let txn.ConfigAssetDefaultFrozen#4: bool = itxn[txn#4].ConfigAssetDefaultFrozen
                let txn.ConfigAssetUnitName#4: bytes = itxn[txn#4].ConfigAssetUnitName
                let txn.ConfigAssetName#4: bytes = itxn[txn#4].ConfigAssetName
                let txn.ConfigAssetURL#4: bytes = itxn[txn#4].ConfigAssetURL
                let txn.ConfigAssetMetadataHash#4: bytes = itxn[txn#4].ConfigAssetMetadataHash
                let txn.ConfigAssetManager#4: bytes = itxn[txn#4].ConfigAssetManager
                let txn.ConfigAssetReserve#4: bytes = itxn[txn#4].ConfigAssetReserve
                let txn.ConfigAssetFreeze#4: bytes = itxn[txn#4].ConfigAssetFreeze
                let txn.ConfigAssetClawback#4: bytes = itxn[txn#4].ConfigAssetClawback
                let txn.FreezeAsset#4: uint64 = itxn[txn#4].FreezeAsset
                let txn.FreezeAssetAccount#4: bytes = itxn[txn#4].FreezeAssetAccount
                let txn.FreezeAssetFrozen#4: bool = itxn[txn#4].FreezeAssetFrozen
                let txn.NumAssets#4: uint64 = itxn[txn#4].NumAssets
                let txn.NumApplications#4: uint64 = itxn[txn#4].NumApplications
                let txn.GlobalNumUint#4: uint64 = itxn[txn#4].GlobalNumUint
                let txn.GlobalNumByteSlice#4: uint64 = itxn[txn#4].GlobalNumByteSlice
                let txn.LocalNumUint#4: uint64 = itxn[txn#4].LocalNumUint
                let txn.LocalNumByteSlice#4: uint64 = itxn[txn#4].LocalNumByteSlice
                let txn.ExtraProgramPages#4: uint64 = itxn[txn#4].ExtraProgramPages
                let txn.Nonparticipation#4: bool = itxn[txn#4].Nonparticipation
                let txn.NumLogs#4: uint64 = itxn[txn#4].NumLogs
                let txn.CreatedAssetID#4: uint64 = itxn[txn#4].CreatedAssetID
                let txn.CreatedApplicationID#4: uint64 = itxn[txn#4].CreatedApplicationID
                let txn.LastLog#4: bytes = itxn[txn#4].LastLog
                let txn.StateProofPK#4: bytes = itxn[txn#4].StateProofPK
                let txn.NumApprovalProgramPages#4: uint64 = itxn[txn#4].NumApprovalProgramPages
                let txn.NumClearStateProgramPages#4: uint64 = itxn[txn#4].NumClearStateProgramPages
                let tmp%9#0: bool = (== txn.LastLog#4 "True")
                (assert tmp%9#0)
                return 
        
        subroutine test_cases.typed_abi_call.typed_c2c.Greeter.test_15plus_args(app: uint64) -> void:
            block@0: // L63
                itxn_begin
                let inner_txn_params%0#0: itxn_field_set = itxn_field_set(0)
                let inner_txn_params%0%%param_Fee_idx_0#0: uint64 = 0u
                let inner_txn_params%0%%Fee_length#0: uint64 = 1u
                let inner_txn_params%0%%param_TypeEnum_idx_0#0: uint64 = appl
                let inner_txn_params%0%%TypeEnum_length#0: uint64 = 1u
                let current_tail_offset%0#0: uint64 = 4u
                let encoded_tuple_buffer%0#0: bytes = 0x
                let encoded_tuple_buffer%0#1: bytes = (concat encoded_tuple_buffer%0#0 0xde)
                let encoded_tuple_buffer%0#2: bytes = (concat encoded_tuple_buffer%0#1 0xad)
                let encoded_tuple_buffer%0#3: bytes = (concat encoded_tuple_buffer%0#2 0xbe)
                let encoded_tuple_buffer%0#4: bytes = (concat encoded_tuple_buffer%0#3 0xef)
                let current_tail_offset%1#0: uint64 = 9u
                let encoded_tuple_buffer%1#0: bytes = 0x
                let encoded_tuple_buffer%1#1: bytes = (concat encoded_tuple_buffer%1#0 0x0f)
                let encoded_tuple_buffer%1#2: bytes = (concat encoded_tuple_buffer%1#1 0x10)
                let encoded_tuple_buffer%1#3: bytes = (concat encoded_tuple_buffer%1#2 0x11)
                let encoded_tuple_buffer%1#4: bytes = (concat encoded_tuple_buffer%1#3 0x12)
                let encoded_tuple_buffer%1#5: bytes = (concat encoded_tuple_buffer%1#4 encoded_tuple_buffer%0#4)
                let encoded_tuple_buffer%1#6: bytes = (concat encoded_tuple_buffer%1#5 0x14)
                let inner_txn_params%0%%param_ApplicationArgs_idx_0#0: bytes = method "return_args_after_14th(uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint8,uint8,uint8,uint8,(uint8,uint8,uint8,uint8),uint8)byte[]"
                let inner_txn_params%0%%param_ApplicationArgs_idx_1#0: bytes = 0x0000000000000001
                let inner_txn_params%0%%param_ApplicationArgs_idx_2#0: bytes = 0x0000000000000002
                let inner_txn_params%0%%param_ApplicationArgs_idx_3#0: bytes = 0x0000000000000003
                let inner_txn_params%0%%param_ApplicationArgs_idx_4#0: bytes = 0x0000000000000004
                let inner_txn_params%0%%param_ApplicationArgs_idx_5#0: bytes = 0x0000000000000005
                let inner_txn_params%0%%param_ApplicationArgs_idx_6#0: bytes = 0x0000000000000006
                let inner_txn_params%0%%param_ApplicationArgs_idx_7#0: bytes = 0x0000000000000007
                let inner_txn_params%0%%param_ApplicationArgs_idx_8#0: bytes = 0x0000000000000008
                let inner_txn_params%0%%param_ApplicationArgs_idx_9#0: bytes = 0x0000000000000009
                let inner_txn_params%0%%param_ApplicationArgs_idx_10#0: bytes = 0x000000000000000a
                let inner_txn_params%0%%param_ApplicationArgs_idx_11#0: bytes = 0x000000000000000b
                let inner_txn_params%0%%param_ApplicationArgs_idx_12#0: bytes = 0x000000000000000c
                let inner_txn_params%0%%param_ApplicationArgs_idx_13#0: bytes = 0x000000000000000d
                let inner_txn_params%0%%param_ApplicationArgs_idx_14#0: bytes = 0x000000000000000e
                let inner_txn_params%0%%param_ApplicationArgs_idx_15#0: bytes = encoded_tuple_buffer%1#6
                let inner_txn_params%0%%ApplicationArgs_length#0: uint64 = 16u
                let inner_txn_params%0%%param_ApplicationID_idx_0#0: uint64 = app#0
                let inner_txn_params%0%%ApplicationID_length#0: uint64 = 1u
                let inner_txn_params%0%%Sender_length#0: uint64 = 0u
                let inner_txn_params%0%%Note_length#0: uint64 = 0u
                let inner_txn_params%0%%Receiver_length#0: uint64 = 0u
                let inner_txn_params%0%%Amount_length#0: uint64 = 0u
                let inner_txn_params%0%%CloseRemainderTo_length#0: uint64 = 0u
                let inner_txn_params%0%%VotePK_length#0: uint64 = 0u
                let inner_txn_params%0%%SelectionPK_length#0: uint64 = 0u
                let inner_txn_params%0%%VoteFirst_length#0: uint64 = 0u
                let inner_txn_params%0%%VoteLast_length#0: uint64 = 0u
                let inner_txn_params%0%%VoteKeyDilution_length#0: uint64 = 0u
                let inner_txn_params%0%%Type_length#0: uint64 = 0u
                let inner_txn_params%0%%XferAsset_length#0: uint64 = 0u
                let inner_txn_params%0%%AssetAmount_length#0: uint64 = 0u
                let inner_txn_params%0%%AssetSender_length#0: uint64 = 0u
                let inner_txn_params%0%%AssetReceiver_length#0: uint64 = 0u
                let inner_txn_params%0%%AssetCloseTo_length#0: uint64 = 0u
                let inner_txn_params%0%%OnCompletion_length#0: uint64 = 0u
                let inner_txn_params%0%%ApprovalProgram_length#0: uint64 = 0u
                let inner_txn_params%0%%ClearStateProgram_length#0: uint64 = 0u
                let inner_txn_params%0%%RekeyTo_length#0: uint64 = 0u
                let inner_txn_params%0%%ConfigAsset_length#0: uint64 = 0u
                let inner_txn_params%0%%ConfigAssetTotal_length#0: uint64 = 0u
                let inner_txn_params%0%%ConfigAssetDecimals_length#0: uint64 = 0u
                let inner_txn_params%0%%ConfigAssetDefaultFrozen_length#0: uint64 = 0u
                let inner_txn_params%0%%ConfigAssetUnitName_length#0: uint64 = 0u
                let inner_txn_params%0%%ConfigAssetName_length#0: uint64 = 0u
                let inner_txn_params%0%%ConfigAssetURL_length#0: uint64 = 0u
                let inner_txn_params%0%%ConfigAssetMetadataHash_length#0: uint64 = 0u
                let inner_txn_params%0%%ConfigAssetManager_length#0: uint64 = 0u
                let inner_txn_params%0%%ConfigAssetReserve_length#0: uint64 = 0u
                let inner_txn_params%0%%ConfigAssetFreeze_length#0: uint64 = 0u
                let inner_txn_params%0%%ConfigAssetClawback_length#0: uint64 = 0u
                let inner_txn_params%0%%FreezeAsset_length#0: uint64 = 0u
                let inner_txn_params%0%%FreezeAssetAccount_length#0: uint64 = 0u
                let inner_txn_params%0%%FreezeAssetFrozen_length#0: uint64 = 0u
                let inner_txn_params%0%%GlobalNumUint_length#0: uint64 = 0u
                let inner_txn_params%0%%GlobalNumByteSlice_length#0: uint64 = 0u
                let inner_txn_params%0%%LocalNumUint_length#0: uint64 = 0u
                let inner_txn_params%0%%LocalNumByteSlice_length#0: uint64 = 0u
                let inner_txn_params%0%%ExtraProgramPages_length#0: uint64 = 0u
                let inner_txn_params%0%%Nonparticipation_length#0: uint64 = 0u
                let inner_txn_params%0%%StateProofPK_length#0: uint64 = 0u
                let inner_txn_params%0%%Accounts_length#0: uint64 = 0u
                let inner_txn_params%0%%Assets_length#0: uint64 = 0u
                let inner_txn_params%0%%Applications_length#0: uint64 = 0u
                let inner_txn_params%0%%ApprovalProgramPages_length#0: uint64 = 0u
                let inner_txn_params%0%%ClearStateProgramPages_length#0: uint64 = 0u
                ((itxn_field ApplicationID) inner_txn_params%0%%param_ApplicationID_idx_0#0)
                ((itxn_field ApplicationArgs) inner_txn_params%0%%param_ApplicationArgs_idx_0#0)
                ((itxn_field ApplicationArgs) inner_txn_params%0%%param_ApplicationArgs_idx_1#0)
                ((itxn_field ApplicationArgs) inner_txn_params%0%%param_ApplicationArgs_idx_2#0)
                ((itxn_field ApplicationArgs) inner_txn_params%0%%param_ApplicationArgs_idx_3#0)
                ((itxn_field ApplicationArgs) inner_txn_params%0%%param_ApplicationArgs_idx_4#0)
                ((itxn_field ApplicationArgs) inner_txn_params%0%%param_ApplicationArgs_idx_5#0)
                ((itxn_field ApplicationArgs) inner_txn_params%0%%param_ApplicationArgs_idx_6#0)
                ((itxn_field ApplicationArgs) inner_txn_params%0%%param_ApplicationArgs_idx_7#0)
                ((itxn_field ApplicationArgs) inner_txn_params%0%%param_ApplicationArgs_idx_8#0)
                ((itxn_field ApplicationArgs) inner_txn_params%0%%param_ApplicationArgs_idx_9#0)
                ((itxn_field ApplicationArgs) inner_txn_params%0%%param_ApplicationArgs_idx_10#0)
                ((itxn_field ApplicationArgs) inner_txn_params%0%%param_ApplicationArgs_idx_11#0)
                ((itxn_field ApplicationArgs) inner_txn_params%0%%param_ApplicationArgs_idx_12#0)
                ((itxn_field ApplicationArgs) inner_txn_params%0%%param_ApplicationArgs_idx_13#0)
                ((itxn_field ApplicationArgs) inner_txn_params%0%%param_ApplicationArgs_idx_14#0)
                ((itxn_field ApplicationArgs) inner_txn_params%0%%param_ApplicationArgs_idx_15#0)
                ((itxn_field TypeEnum) inner_txn_params%0%%param_TypeEnum_idx_0#0)
                ((itxn_field Fee) inner_txn_params%0%%param_Fee_idx_0#0)
                goto block@1
            block@1: // next_txn_L65
                itxn_submit
                let awst_tmp%0#0: itxn_group_idx = itxn_group_idx(0)
                let awst_tmp%1#0: bytes = itxn[awst_tmp%0#0].LastLog
                let tmp%0#0: bytes = ((extract 4 0) awst_tmp%1#0)
                let tmp%1#0: bytes = ((extract 0 4) awst_tmp%1#0)
                let tmp%2#0: bool = (== tmp%1#0 0x151f7c75)
                let (value%0#0: bytes, check%0#0: bool) = (tmp%0#0, tmp%2#0)
                (assert check%0#0) // ARC4 prefix is valid
                let result#0: bytes = value%0#0
                let txn#0: itxn_group_idx = awst_tmp%0#0
                let txn._is_last#0: bool = 1u
                let txn.Sender#0: bytes = itxn[txn#0].Sender
                let txn.Fee#0: uint64 = itxn[txn#0].Fee
                let txn.FirstValid#0: uint64 = itxn[txn#0].FirstValid
                let txn.FirstValidTime#0: uint64 = itxn[txn#0].FirstValidTime
                let txn.LastValid#0: uint64 = itxn[txn#0].LastValid
                let txn.Note#0: bytes = itxn[txn#0].Note
                let txn.Lease#0: bytes = itxn[txn#0].Lease
                let txn.Receiver#0: bytes = itxn[txn#0].Receiver
                let txn.Amount#0: uint64 = itxn[txn#0].Amount
                let txn.CloseRemainderTo#0: bytes = itxn[txn#0].CloseRemainderTo
                let txn.VotePK#0: bytes = itxn[txn#0].VotePK
                let txn.SelectionPK#0: bytes = itxn[txn#0].SelectionPK
                let txn.VoteFirst#0: uint64 = itxn[txn#0].VoteFirst
                let txn.VoteLast#0: uint64 = itxn[txn#0].VoteLast
                let txn.VoteKeyDilution#0: uint64 = itxn[txn#0].VoteKeyDilution
                let txn.Type#0: bytes = itxn[txn#0].Type
                let txn.TypeEnum#0: uint64 = itxn[txn#0].TypeEnum
                let txn.XferAsset#0: uint64 = itxn[txn#0].XferAsset
                let txn.AssetAmount#0: uint64 = itxn[txn#0].AssetAmount
                let txn.AssetSender#0: bytes = itxn[txn#0].AssetSender
                let txn.AssetReceiver#0: bytes = itxn[txn#0].AssetReceiver
                let txn.AssetCloseTo#0: bytes = itxn[txn#0].AssetCloseTo
                let txn.GroupIndex#0: uint64 = itxn[txn#0].GroupIndex
                let txn.TxID#0: bytes = itxn[txn#0].TxID
                let txn.ApplicationID#0: uint64 = itxn[txn#0].ApplicationID
                let txn.OnCompletion#0: uint64 = itxn[txn#0].OnCompletion
                let txn.NumAppArgs#0: uint64 = itxn[txn#0].NumAppArgs
                let txn.NumAccounts#0: uint64 = itxn[txn#0].NumAccounts
                let txn.ApprovalProgram#0: bytes = itxn[txn#0].ApprovalProgram
                let txn.ClearStateProgram#0: bytes = itxn[txn#0].ClearStateProgram
                let txn.RekeyTo#0: bytes = itxn[txn#0].RekeyTo
                let txn.ConfigAsset#0: uint64 = itxn[txn#0].ConfigAsset
                let txn.ConfigAssetTotal#0: uint64 = itxn[txn#0].ConfigAssetTotal
                let txn.ConfigAssetDecimals#0: uint64 = itxn[txn#0].ConfigAssetDecimals
                let txn.ConfigAssetDefaultFrozen#0: bool = itxn[txn#0].ConfigAssetDefaultFrozen
                let txn.ConfigAssetUnitName#0: bytes = itxn[txn#0].ConfigAssetUnitName
                let txn.ConfigAssetName#0: bytes = itxn[txn#0].ConfigAssetName
                let txn.ConfigAssetURL#0: bytes = itxn[txn#0].ConfigAssetURL
                let txn.ConfigAssetMetadataHash#0: bytes = itxn[txn#0].ConfigAssetMetadataHash
                let txn.ConfigAssetManager#0: bytes = itxn[txn#0].ConfigAssetManager
                let txn.ConfigAssetReserve#0: bytes = itxn[txn#0].ConfigAssetReserve
                let txn.ConfigAssetFreeze#0: bytes = itxn[txn#0].ConfigAssetFreeze
                let txn.ConfigAssetClawback#0: bytes = itxn[txn#0].ConfigAssetClawback
                let txn.FreezeAsset#0: uint64 = itxn[txn#0].FreezeAsset
                let txn.FreezeAssetAccount#0: bytes = itxn[txn#0].FreezeAssetAccount
                let txn.FreezeAssetFrozen#0: bool = itxn[txn#0].FreezeAssetFrozen
                let txn.NumAssets#0: uint64 = itxn[txn#0].NumAssets
                let txn.NumApplications#0: uint64 = itxn[txn#0].NumApplications
                let txn.GlobalNumUint#0: uint64 = itxn[txn#0].GlobalNumUint
                let txn.GlobalNumByteSlice#0: uint64 = itxn[txn#0].GlobalNumByteSlice
                let txn.LocalNumUint#0: uint64 = itxn[txn#0].LocalNumUint
                let txn.LocalNumByteSlice#0: uint64 = itxn[txn#0].LocalNumByteSlice
                let txn.ExtraProgramPages#0: uint64 = itxn[txn#0].ExtraProgramPages
                let txn.Nonparticipation#0: bool = itxn[txn#0].Nonparticipation
                let txn.NumLogs#0: uint64 = itxn[txn#0].NumLogs
                let txn.CreatedAssetID#0: uint64 = itxn[txn#0].CreatedAssetID
                let txn.CreatedApplicationID#0: uint64 = itxn[txn#0].CreatedApplicationID
                let txn.LastLog#0: bytes = itxn[txn#0].LastLog
                let txn.StateProofPK#0: bytes = itxn[txn#0].StateProofPK
                let txn.NumApprovalProgramPages#0: uint64 = itxn[txn#0].NumApprovalProgramPages
                let txn.NumClearStateProgramPages#0: uint64 = itxn[txn#0].NumClearStateProgramPages
                let tmp%3#0: bytes = ((extract 2 0) result#0)
                let tmp%4#0: bool = (== tmp%3#0 0x0f101112deadbeef14)
                (assert tmp%4#0)
                return 
        
        subroutine test_cases.typed_abi_call.typed_c2c.Greeter.test_void(app: uint64) -> void:
            block@0: // L91
                itxn_begin
                let inner_txn_params%0#0: itxn_field_set = itxn_field_set(0)
                let inner_txn_params%0%%param_Fee_idx_0#0: uint64 = 0u
                let inner_txn_params%0%%Fee_length#0: uint64 = 1u
                let inner_txn_params%0%%param_TypeEnum_idx_0#0: uint64 = appl
                let inner_txn_params%0%%TypeEnum_length#0: uint64 = 1u
                let inner_txn_params%0%%param_ApplicationArgs_idx_0#0: bytes = method "log_string(string)void"
                let inner_txn_params%0%%param_ApplicationArgs_idx_1#0: bytes = "\x00\x06World1"
                let inner_txn_params%0%%ApplicationArgs_length#0: uint64 = 2u
                let inner_txn_params%0%%param_ApplicationID_idx_0#0: uint64 = app#0
                let inner_txn_params%0%%ApplicationID_length#0: uint64 = 1u
                let inner_txn_params%0%%Sender_length#0: uint64 = 0u
                let inner_txn_params%0%%Note_length#0: uint64 = 0u
                let inner_txn_params%0%%Receiver_length#0: uint64 = 0u
                let inner_txn_params%0%%Amount_length#0: uint64 = 0u
                let inner_txn_params%0%%CloseRemainderTo_length#0: uint64 = 0u
                let inner_txn_params%0%%VotePK_length#0: uint64 = 0u
                let inner_txn_params%0%%SelectionPK_length#0: uint64 = 0u
                let inner_txn_params%0%%VoteFirst_length#0: uint64 = 0u
                let inner_txn_params%0%%VoteLast_length#0: uint64 = 0u
                let inner_txn_params%0%%VoteKeyDilution_length#0: uint64 = 0u
                let inner_txn_params%0%%Type_length#0: uint64 = 0u
                let inner_txn_params%0%%XferAsset_length#0: uint64 = 0u
                let inner_txn_params%0%%AssetAmount_length#0: uint64 = 0u
                let inner_txn_params%0%%AssetSender_length#0: uint64 = 0u
                let inner_txn_params%0%%AssetReceiver_length#0: uint64 = 0u
                let inner_txn_params%0%%AssetCloseTo_length#0: uint64 = 0u
                let inner_txn_params%0%%OnCompletion_length#0: uint64 = 0u
                let inner_txn_params%0%%ApprovalProgram_length#0: uint64 = 0u
                let inner_txn_params%0%%ClearStateProgram_length#0: uint64 = 0u
                let inner_txn_params%0%%RekeyTo_length#0: uint64 = 0u
                let inner_txn_params%0%%ConfigAsset_length#0: uint64 = 0u
                let inner_txn_params%0%%ConfigAssetTotal_length#0: uint64 = 0u
                let inner_txn_params%0%%ConfigAssetDecimals_length#0: uint64 = 0u
                let inner_txn_params%0%%ConfigAssetDefaultFrozen_length#0: uint64 = 0u
                let inner_txn_params%0%%ConfigAssetUnitName_length#0: uint64 = 0u
                let inner_txn_params%0%%ConfigAssetName_length#0: uint64 = 0u
                let inner_txn_params%0%%ConfigAssetURL_length#0: uint64 = 0u
                let inner_txn_params%0%%ConfigAssetMetadataHash_length#0: uint64 = 0u
                let inner_txn_params%0%%ConfigAssetManager_length#0: uint64 = 0u
                let inner_txn_params%0%%ConfigAssetReserve_length#0: uint64 = 0u
                let inner_txn_params%0%%ConfigAssetFreeze_length#0: uint64 = 0u
                let inner_txn_params%0%%ConfigAssetClawback_length#0: uint64 = 0u
                let inner_txn_params%0%%FreezeAsset_length#0: uint64 = 0u
                let inner_txn_params%0%%FreezeAssetAccount_length#0: uint64 = 0u
                let inner_txn_params%0%%FreezeAssetFrozen_length#0: uint64 = 0u
                let inner_txn_params%0%%GlobalNumUint_length#0: uint64 = 0u
                let inner_txn_params%0%%GlobalNumByteSlice_length#0: uint64 = 0u
                let inner_txn_params%0%%LocalNumUint_length#0: uint64 = 0u
                let inner_txn_params%0%%LocalNumByteSlice_length#0: uint64 = 0u
                let inner_txn_params%0%%ExtraProgramPages_length#0: uint64 = 0u
                let inner_txn_params%0%%Nonparticipation_length#0: uint64 = 0u
                let inner_txn_params%0%%StateProofPK_length#0: uint64 = 0u
                let inner_txn_params%0%%Accounts_length#0: uint64 = 0u
                let inner_txn_params%0%%Assets_length#0: uint64 = 0u
                let inner_txn_params%0%%Applications_length#0: uint64 = 0u
                let inner_txn_params%0%%ApprovalProgramPages_length#0: uint64 = 0u
                let inner_txn_params%0%%ClearStateProgramPages_length#0: uint64 = 0u
                ((itxn_field ApplicationID) inner_txn_params%0%%param_ApplicationID_idx_0#0)
                ((itxn_field ApplicationArgs) inner_txn_params%0%%param_ApplicationArgs_idx_0#0)
                ((itxn_field ApplicationArgs) inner_txn_params%0%%param_ApplicationArgs_idx_1#0)
                ((itxn_field TypeEnum) inner_txn_params%0%%param_TypeEnum_idx_0#0)
                ((itxn_field Fee) inner_txn_params%0%%param_Fee_idx_0#0)
                goto block@1
            block@1: // next_txn_L93
                itxn_submit
                let txn#0: itxn_group_idx = itxn_group_idx(0)
                let txn._is_last#0: bool = 1u
                let txn.Sender#0: bytes = itxn[txn#0].Sender
                let txn.Fee#0: uint64 = itxn[txn#0].Fee
                let txn.FirstValid#0: uint64 = itxn[txn#0].FirstValid
                let txn.FirstValidTime#0: uint64 = itxn[txn#0].FirstValidTime
                let txn.LastValid#0: uint64 = itxn[txn#0].LastValid
                let txn.Note#0: bytes = itxn[txn#0].Note
                let txn.Lease#0: bytes = itxn[txn#0].Lease
                let txn.Receiver#0: bytes = itxn[txn#0].Receiver
                let txn.Amount#0: uint64 = itxn[txn#0].Amount
                let txn.CloseRemainderTo#0: bytes = itxn[txn#0].CloseRemainderTo
                let txn.VotePK#0: bytes = itxn[txn#0].VotePK
                let txn.SelectionPK#0: bytes = itxn[txn#0].SelectionPK
                let txn.VoteFirst#0: uint64 = itxn[txn#0].VoteFirst
                let txn.VoteLast#0: uint64 = itxn[txn#0].VoteLast
                let txn.VoteKeyDilution#0: uint64 = itxn[txn#0].VoteKeyDilution
                let txn.Type#0: bytes = itxn[txn#0].Type
                let txn.TypeEnum#0: uint64 = itxn[txn#0].TypeEnum
                let txn.XferAsset#0: uint64 = itxn[txn#0].XferAsset
                let txn.AssetAmount#0: uint64 = itxn[txn#0].AssetAmount
                let txn.AssetSender#0: bytes = itxn[txn#0].AssetSender
                let txn.AssetReceiver#0: bytes = itxn[txn#0].AssetReceiver
                let txn.AssetCloseTo#0: bytes = itxn[txn#0].AssetCloseTo
                let txn.GroupIndex#0: uint64 = itxn[txn#0].GroupIndex
                let txn.TxID#0: bytes = itxn[txn#0].TxID
                let txn.ApplicationID#0: uint64 = itxn[txn#0].ApplicationID
                let txn.OnCompletion#0: uint64 = itxn[txn#0].OnCompletion
                let txn.NumAppArgs#0: uint64 = itxn[txn#0].NumAppArgs
                let txn.NumAccounts#0: uint64 = itxn[txn#0].NumAccounts
                let txn.ApprovalProgram#0: bytes = itxn[txn#0].ApprovalProgram
                let txn.ClearStateProgram#0: bytes = itxn[txn#0].ClearStateProgram
                let txn.RekeyTo#0: bytes = itxn[txn#0].RekeyTo
                let txn.ConfigAsset#0: uint64 = itxn[txn#0].ConfigAsset
                let txn.ConfigAssetTotal#0: uint64 = itxn[txn#0].ConfigAssetTotal
                let txn.ConfigAssetDecimals#0: uint64 = itxn[txn#0].ConfigAssetDecimals
                let txn.ConfigAssetDefaultFrozen#0: bool = itxn[txn#0].ConfigAssetDefaultFrozen
                let txn.ConfigAssetUnitName#0: bytes = itxn[txn#0].ConfigAssetUnitName
                let txn.ConfigAssetName#0: bytes = itxn[txn#0].ConfigAssetName
                let txn.ConfigAssetURL#0: bytes = itxn[txn#0].ConfigAssetURL
                let txn.ConfigAssetMetadataHash#0: bytes = itxn[txn#0].ConfigAssetMetadataHash
                let txn.ConfigAssetManager#0: bytes = itxn[txn#0].ConfigAssetManager
                let txn.ConfigAssetReserve#0: bytes = itxn[txn#0].ConfigAssetReserve
                let txn.ConfigAssetFreeze#0: bytes = itxn[txn#0].ConfigAssetFreeze
                let txn.ConfigAssetClawback#0: bytes = itxn[txn#0].ConfigAssetClawback
                let txn.FreezeAsset#0: uint64 = itxn[txn#0].FreezeAsset
                let txn.FreezeAssetAccount#0: bytes = itxn[txn#0].FreezeAssetAccount
                let txn.FreezeAssetFrozen#0: bool = itxn[txn#0].FreezeAssetFrozen
                let txn.NumAssets#0: uint64 = itxn[txn#0].NumAssets
                let txn.NumApplications#0: uint64 = itxn[txn#0].NumApplications
                let txn.GlobalNumUint#0: uint64 = itxn[txn#0].GlobalNumUint
                let txn.GlobalNumByteSlice#0: uint64 = itxn[txn#0].GlobalNumByteSlice
                let txn.LocalNumUint#0: uint64 = itxn[txn#0].LocalNumUint
                let txn.LocalNumByteSlice#0: uint64 = itxn[txn#0].LocalNumByteSlice
                let txn.ExtraProgramPages#0: uint64 = itxn[txn#0].ExtraProgramPages
                let txn.Nonparticipation#0: bool = itxn[txn#0].Nonparticipation
                let txn.NumLogs#0: uint64 = itxn[txn#0].NumLogs
                let txn.CreatedAssetID#0: uint64 = itxn[txn#0].CreatedAssetID
                let txn.CreatedApplicationID#0: uint64 = itxn[txn#0].CreatedApplicationID
                let txn.LastLog#0: bytes = itxn[txn#0].LastLog
                let txn.StateProofPK#0: bytes = itxn[txn#0].StateProofPK
                let txn.NumApprovalProgramPages#0: uint64 = itxn[txn#0].NumApprovalProgramPages
                let txn.NumClearStateProgramPages#0: uint64 = itxn[txn#0].NumClearStateProgramPages
                let tmp%0#0: bool = (== txn.LastLog#0 "World1")
                (assert tmp%0#0)
                itxn_begin
                let inner_txn_params%1#0: itxn_field_set = itxn_field_set(1)
                let inner_txn_params%1%%param_Fee_idx_0#0: uint64 = 0u
                let inner_txn_params%1%%Fee_length#0: uint64 = 1u
                let inner_txn_params%1%%param_TypeEnum_idx_0#0: uint64 = appl
                let inner_txn_params%1%%TypeEnum_length#0: uint64 = 1u
                let inner_txn_params%1%%param_ApplicationArgs_idx_0#0: bytes = method "log_string(string)void"
                let inner_txn_params%1%%param_ApplicationArgs_idx_1#0: bytes = "\x00\x06World2"
                let inner_txn_params%1%%ApplicationArgs_length#0: uint64 = 2u
                let inner_txn_params%1%%param_ApplicationID_idx_0#0: uint64 = app#0
                let inner_txn_params%1%%ApplicationID_length#0: uint64 = 1u
                let inner_txn_params%1%%Sender_length#0: uint64 = 0u
                let inner_txn_params%1%%Note_length#0: uint64 = 0u
                let inner_txn_params%1%%Receiver_length#0: uint64 = 0u
                let inner_txn_params%1%%Amount_length#0: uint64 = 0u
                let inner_txn_params%1%%CloseRemainderTo_length#0: uint64 = 0u
                let inner_txn_params%1%%VotePK_length#0: uint64 = 0u
                let inner_txn_params%1%%SelectionPK_length#0: uint64 = 0u
                let inner_txn_params%1%%VoteFirst_length#0: uint64 = 0u
                let inner_txn_params%1%%VoteLast_length#0: uint64 = 0u
                let inner_txn_params%1%%VoteKeyDilution_length#0: uint64 = 0u
                let inner_txn_params%1%%Type_length#0: uint64 = 0u
                let inner_txn_params%1%%XferAsset_length#0: uint64 = 0u
                let inner_txn_params%1%%AssetAmount_length#0: uint64 = 0u
                let inner_txn_params%1%%AssetSender_length#0: uint64 = 0u
                let inner_txn_params%1%%AssetReceiver_length#0: uint64 = 0u
                let inner_txn_params%1%%AssetCloseTo_length#0: uint64 = 0u
                let inner_txn_params%1%%OnCompletion_length#0: uint64 = 0u
                let inner_txn_params%1%%ApprovalProgram_length#0: uint64 = 0u
                let inner_txn_params%1%%ClearStateProgram_length#0: uint64 = 0u
                let inner_txn_params%1%%RekeyTo_length#0: uint64 = 0u
                let inner_txn_params%1%%ConfigAsset_length#0: uint64 = 0u
                let inner_txn_params%1%%ConfigAssetTotal_length#0: uint64 = 0u
                let inner_txn_params%1%%ConfigAssetDecimals_length#0: uint64 = 0u
                let inner_txn_params%1%%ConfigAssetDefaultFrozen_length#0: uint64 = 0u
                let inner_txn_params%1%%ConfigAssetUnitName_length#0: uint64 = 0u
                let inner_txn_params%1%%ConfigAssetName_length#0: uint64 = 0u
                let inner_txn_params%1%%ConfigAssetURL_length#0: uint64 = 0u
                let inner_txn_params%1%%ConfigAssetMetadataHash_length#0: uint64 = 0u
                let inner_txn_params%1%%ConfigAssetManager_length#0: uint64 = 0u
                let inner_txn_params%1%%ConfigAssetReserve_length#0: uint64 = 0u
                let inner_txn_params%1%%ConfigAssetFreeze_length#0: uint64 = 0u
                let inner_txn_params%1%%ConfigAssetClawback_length#0: uint64 = 0u
                let inner_txn_params%1%%FreezeAsset_length#0: uint64 = 0u
                let inner_txn_params%1%%FreezeAssetAccount_length#0: uint64 = 0u
                let inner_txn_params%1%%FreezeAssetFrozen_length#0: uint64 = 0u
                let inner_txn_params%1%%GlobalNumUint_length#0: uint64 = 0u
                let inner_txn_params%1%%GlobalNumByteSlice_length#0: uint64 = 0u
                let inner_txn_params%1%%LocalNumUint_length#0: uint64 = 0u
                let inner_txn_params%1%%LocalNumByteSlice_length#0: uint64 = 0u
                let inner_txn_params%1%%ExtraProgramPages_length#0: uint64 = 0u
                let inner_txn_params%1%%Nonparticipation_length#0: uint64 = 0u
                let inner_txn_params%1%%StateProofPK_length#0: uint64 = 0u
                let inner_txn_params%1%%Accounts_length#0: uint64 = 0u
                let inner_txn_params%1%%Assets_length#0: uint64 = 0u
                let inner_txn_params%1%%Applications_length#0: uint64 = 0u
                let inner_txn_params%1%%ApprovalProgramPages_length#0: uint64 = 0u
                let inner_txn_params%1%%ClearStateProgramPages_length#0: uint64 = 0u
                ((itxn_field ApplicationID) inner_txn_params%1%%param_ApplicationID_idx_0#0)
                ((itxn_field ApplicationArgs) inner_txn_params%1%%param_ApplicationArgs_idx_0#0)
                ((itxn_field ApplicationArgs) inner_txn_params%1%%param_ApplicationArgs_idx_1#0)
                ((itxn_field TypeEnum) inner_txn_params%1%%param_TypeEnum_idx_0#0)
                ((itxn_field Fee) inner_txn_params%1%%param_Fee_idx_0#0)
                goto block@2
            block@2: // next_txn_L96
                itxn_submit
                let txn#1: itxn_group_idx = itxn_group_idx(0)
                let txn._is_last#1: bool = 1u
                let txn.Sender#1: bytes = itxn[txn#1].Sender
                let txn.Fee#1: uint64 = itxn[txn#1].Fee
                let txn.FirstValid#1: uint64 = itxn[txn#1].FirstValid
                let txn.FirstValidTime#1: uint64 = itxn[txn#1].FirstValidTime
                let txn.LastValid#1: uint64 = itxn[txn#1].LastValid
                let txn.Note#1: bytes = itxn[txn#1].Note
                let txn.Lease#1: bytes = itxn[txn#1].Lease
                let txn.Receiver#1: bytes = itxn[txn#1].Receiver
                let txn.Amount#1: uint64 = itxn[txn#1].Amount
                let txn.CloseRemainderTo#1: bytes = itxn[txn#1].CloseRemainderTo
                let txn.VotePK#1: bytes = itxn[txn#1].VotePK
                let txn.SelectionPK#1: bytes = itxn[txn#1].SelectionPK
                let txn.VoteFirst#1: uint64 = itxn[txn#1].VoteFirst
                let txn.VoteLast#1: uint64 = itxn[txn#1].VoteLast
                let txn.VoteKeyDilution#1: uint64 = itxn[txn#1].VoteKeyDilution
                let txn.Type#1: bytes = itxn[txn#1].Type
                let txn.TypeEnum#1: uint64 = itxn[txn#1].TypeEnum
                let txn.XferAsset#1: uint64 = itxn[txn#1].XferAsset
                let txn.AssetAmount#1: uint64 = itxn[txn#1].AssetAmount
                let txn.AssetSender#1: bytes = itxn[txn#1].AssetSender
                let txn.AssetReceiver#1: bytes = itxn[txn#1].AssetReceiver
                let txn.AssetCloseTo#1: bytes = itxn[txn#1].AssetCloseTo
                let txn.GroupIndex#1: uint64 = itxn[txn#1].GroupIndex
                let txn.TxID#1: bytes = itxn[txn#1].TxID
                let txn.ApplicationID#1: uint64 = itxn[txn#1].ApplicationID
                let txn.OnCompletion#1: uint64 = itxn[txn#1].OnCompletion
                let txn.NumAppArgs#1: uint64 = itxn[txn#1].NumAppArgs
                let txn.NumAccounts#1: uint64 = itxn[txn#1].NumAccounts
                let txn.ApprovalProgram#1: bytes = itxn[txn#1].ApprovalProgram
                let txn.ClearStateProgram#1: bytes = itxn[txn#1].ClearStateProgram
                let txn.RekeyTo#1: bytes = itxn[txn#1].RekeyTo
                let txn.ConfigAsset#1: uint64 = itxn[txn#1].ConfigAsset
                let txn.ConfigAssetTotal#1: uint64 = itxn[txn#1].ConfigAssetTotal
                let txn.ConfigAssetDecimals#1: uint64 = itxn[txn#1].ConfigAssetDecimals
                let txn.ConfigAssetDefaultFrozen#1: bool = itxn[txn#1].ConfigAssetDefaultFrozen
                let txn.ConfigAssetUnitName#1: bytes = itxn[txn#1].ConfigAssetUnitName
                let txn.ConfigAssetName#1: bytes = itxn[txn#1].ConfigAssetName
                let txn.ConfigAssetURL#1: bytes = itxn[txn#1].ConfigAssetURL
                let txn.ConfigAssetMetadataHash#1: bytes = itxn[txn#1].ConfigAssetMetadataHash
                let txn.ConfigAssetManager#1: bytes = itxn[txn#1].ConfigAssetManager
                let txn.ConfigAssetReserve#1: bytes = itxn[txn#1].ConfigAssetReserve
                let txn.ConfigAssetFreeze#1: bytes = itxn[txn#1].ConfigAssetFreeze
                let txn.ConfigAssetClawback#1: bytes = itxn[txn#1].ConfigAssetClawback
                let txn.FreezeAsset#1: uint64 = itxn[txn#1].FreezeAsset
                let txn.FreezeAssetAccount#1: bytes = itxn[txn#1].FreezeAssetAccount
                let txn.FreezeAssetFrozen#1: bool = itxn[txn#1].FreezeAssetFrozen
                let txn.NumAssets#1: uint64 = itxn[txn#1].NumAssets
                let txn.NumApplications#1: uint64 = itxn[txn#1].NumApplications
                let txn.GlobalNumUint#1: uint64 = itxn[txn#1].GlobalNumUint
                let txn.GlobalNumByteSlice#1: uint64 = itxn[txn#1].GlobalNumByteSlice
                let txn.LocalNumUint#1: uint64 = itxn[txn#1].LocalNumUint
                let txn.LocalNumByteSlice#1: uint64 = itxn[txn#1].LocalNumByteSlice
                let txn.ExtraProgramPages#1: uint64 = itxn[txn#1].ExtraProgramPages
                let txn.Nonparticipation#1: bool = itxn[txn#1].Nonparticipation
                let txn.NumLogs#1: uint64 = itxn[txn#1].NumLogs
                let txn.CreatedAssetID#1: uint64 = itxn[txn#1].CreatedAssetID
                let txn.CreatedApplicationID#1: uint64 = itxn[txn#1].CreatedApplicationID
                let txn.LastLog#1: bytes = itxn[txn#1].LastLog
                let txn.StateProofPK#1: bytes = itxn[txn#1].StateProofPK
                let txn.NumApprovalProgramPages#1: uint64 = itxn[txn#1].NumApprovalProgramPages
                let txn.NumClearStateProgramPages#1: uint64 = itxn[txn#1].NumClearStateProgramPages
                let tmp%1#0: bool = (== txn.LastLog#1 "World2")
                (assert tmp%1#0)
                itxn_begin
                let inner_txn_params%2#0: itxn_field_set = itxn_field_set(2)
                let inner_txn_params%2%%param_Fee_idx_0#0: uint64 = 0u
                let inner_txn_params%2%%Fee_length#0: uint64 = 1u
                let inner_txn_params%2%%param_TypeEnum_idx_0#0: uint64 = appl
                let inner_txn_params%2%%TypeEnum_length#0: uint64 = 1u
                let inner_txn_params%2%%param_ApplicationArgs_idx_0#0: bytes = method "log_string(string)void"
                let inner_txn_params%2%%param_ApplicationArgs_idx_1#0: bytes = "\x00\x06World3"
                let inner_txn_params%2%%ApplicationArgs_length#0: uint64 = 2u
                let inner_txn_params%2%%param_ApplicationID_idx_0#0: uint64 = app#0
                let inner_txn_params%2%%ApplicationID_length#0: uint64 = 1u
                let inner_txn_params%2%%Sender_length#0: uint64 = 0u
                let inner_txn_params%2%%Note_length#0: uint64 = 0u
                let inner_txn_params%2%%Receiver_length#0: uint64 = 0u
                let inner_txn_params%2%%Amount_length#0: uint64 = 0u
                let inner_txn_params%2%%CloseRemainderTo_length#0: uint64 = 0u
                let inner_txn_params%2%%VotePK_length#0: uint64 = 0u
                let inner_txn_params%2%%SelectionPK_length#0: uint64 = 0u
                let inner_txn_params%2%%VoteFirst_length#0: uint64 = 0u
                let inner_txn_params%2%%VoteLast_length#0: uint64 = 0u
                let inner_txn_params%2%%VoteKeyDilution_length#0: uint64 = 0u
                let inner_txn_params%2%%Type_length#0: uint64 = 0u
                let inner_txn_params%2%%XferAsset_length#0: uint64 = 0u
                let inner_txn_params%2%%AssetAmount_length#0: uint64 = 0u
                let inner_txn_params%2%%AssetSender_length#0: uint64 = 0u
                let inner_txn_params%2%%AssetReceiver_length#0: uint64 = 0u
                let inner_txn_params%2%%AssetCloseTo_length#0: uint64 = 0u
                let inner_txn_params%2%%OnCompletion_length#0: uint64 = 0u
                let inner_txn_params%2%%ApprovalProgram_length#0: uint64 = 0u
                let inner_txn_params%2%%ClearStateProgram_length#0: uint64 = 0u
                let inner_txn_params%2%%RekeyTo_length#0: uint64 = 0u
                let inner_txn_params%2%%ConfigAsset_length#0: uint64 = 0u
                let inner_txn_params%2%%ConfigAssetTotal_length#0: uint64 = 0u
                let inner_txn_params%2%%ConfigAssetDecimals_length#0: uint64 = 0u
                let inner_txn_params%2%%ConfigAssetDefaultFrozen_length#0: uint64 = 0u
                let inner_txn_params%2%%ConfigAssetUnitName_length#0: uint64 = 0u
                let inner_txn_params%2%%ConfigAssetName_length#0: uint64 = 0u
                let inner_txn_params%2%%ConfigAssetURL_length#0: uint64 = 0u
                let inner_txn_params%2%%ConfigAssetMetadataHash_length#0: uint64 = 0u
                let inner_txn_params%2%%ConfigAssetManager_length#0: uint64 = 0u
                let inner_txn_params%2%%ConfigAssetReserve_length#0: uint64 = 0u
                let inner_txn_params%2%%ConfigAssetFreeze_length#0: uint64 = 0u
                let inner_txn_params%2%%ConfigAssetClawback_length#0: uint64 = 0u
                let inner_txn_params%2%%FreezeAsset_length#0: uint64 = 0u
                let inner_txn_params%2%%FreezeAssetAccount_length#0: uint64 = 0u
                let inner_txn_params%2%%FreezeAssetFrozen_length#0: uint64 = 0u
                let inner_txn_params%2%%GlobalNumUint_length#0: uint64 = 0u
                let inner_txn_params%2%%GlobalNumByteSlice_length#0: uint64 = 0u
                let inner_txn_params%2%%LocalNumUint_length#0: uint64 = 0u
                let inner_txn_params%2%%LocalNumByteSlice_length#0: uint64 = 0u
                let inner_txn_params%2%%ExtraProgramPages_length#0: uint64 = 0u
                let inner_txn_params%2%%Nonparticipation_length#0: uint64 = 0u
                let inner_txn_params%2%%StateProofPK_length#0: uint64 = 0u
                let inner_txn_params%2%%Accounts_length#0: uint64 = 0u
                let inner_txn_params%2%%Assets_length#0: uint64 = 0u
                let inner_txn_params%2%%Applications_length#0: uint64 = 0u
                let inner_txn_params%2%%ApprovalProgramPages_length#0: uint64 = 0u
                let inner_txn_params%2%%ClearStateProgramPages_length#0: uint64 = 0u
                ((itxn_field ApplicationID) inner_txn_params%2%%param_ApplicationID_idx_0#0)
                ((itxn_field ApplicationArgs) inner_txn_params%2%%param_ApplicationArgs_idx_0#0)
                ((itxn_field ApplicationArgs) inner_txn_params%2%%param_ApplicationArgs_idx_1#0)
                ((itxn_field TypeEnum) inner_txn_params%2%%param_TypeEnum_idx_0#0)
                ((itxn_field Fee) inner_txn_params%2%%param_Fee_idx_0#0)
                goto block@3
            block@3: // next_txn_L99
                itxn_submit
                let txn#2: itxn_group_idx = itxn_group_idx(0)
                let txn._is_last#2: bool = 1u
                let txn.Sender#2: bytes = itxn[txn#2].Sender
                let txn.Fee#2: uint64 = itxn[txn#2].Fee
                let txn.FirstValid#2: uint64 = itxn[txn#2].FirstValid
                let txn.FirstValidTime#2: uint64 = itxn[txn#2].FirstValidTime
                let txn.LastValid#2: uint64 = itxn[txn#2].LastValid
                let txn.Note#2: bytes = itxn[txn#2].Note
                let txn.Lease#2: bytes = itxn[txn#2].Lease
                let txn.Receiver#2: bytes = itxn[txn#2].Receiver
                let txn.Amount#2: uint64 = itxn[txn#2].Amount
                let txn.CloseRemainderTo#2: bytes = itxn[txn#2].CloseRemainderTo
                let txn.VotePK#2: bytes = itxn[txn#2].VotePK
                let txn.SelectionPK#2: bytes = itxn[txn#2].SelectionPK
                let txn.VoteFirst#2: uint64 = itxn[txn#2].VoteFirst
                let txn.VoteLast#2: uint64 = itxn[txn#2].VoteLast
                let txn.VoteKeyDilution#2: uint64 = itxn[txn#2].VoteKeyDilution
                let txn.Type#2: bytes = itxn[txn#2].Type
                let txn.TypeEnum#2: uint64 = itxn[txn#2].TypeEnum
                let txn.XferAsset#2: uint64 = itxn[txn#2].XferAsset
                let txn.AssetAmount#2: uint64 = itxn[txn#2].AssetAmount
                let txn.AssetSender#2: bytes = itxn[txn#2].AssetSender
                let txn.AssetReceiver#2: bytes = itxn[txn#2].AssetReceiver
                let txn.AssetCloseTo#2: bytes = itxn[txn#2].AssetCloseTo
                let txn.GroupIndex#2: uint64 = itxn[txn#2].GroupIndex
                let txn.TxID#2: bytes = itxn[txn#2].TxID
                let txn.ApplicationID#2: uint64 = itxn[txn#2].ApplicationID
                let txn.OnCompletion#2: uint64 = itxn[txn#2].OnCompletion
                let txn.NumAppArgs#2: uint64 = itxn[txn#2].NumAppArgs
                let txn.NumAccounts#2: uint64 = itxn[txn#2].NumAccounts
                let txn.ApprovalProgram#2: bytes = itxn[txn#2].ApprovalProgram
                let txn.ClearStateProgram#2: bytes = itxn[txn#2].ClearStateProgram
                let txn.RekeyTo#2: bytes = itxn[txn#2].RekeyTo
                let txn.ConfigAsset#2: uint64 = itxn[txn#2].ConfigAsset
                let txn.ConfigAssetTotal#2: uint64 = itxn[txn#2].ConfigAssetTotal
                let txn.ConfigAssetDecimals#2: uint64 = itxn[txn#2].ConfigAssetDecimals
                let txn.ConfigAssetDefaultFrozen#2: bool = itxn[txn#2].ConfigAssetDefaultFrozen
                let txn.ConfigAssetUnitName#2: bytes = itxn[txn#2].ConfigAssetUnitName
                let txn.ConfigAssetName#2: bytes = itxn[txn#2].ConfigAssetName
                let txn.ConfigAssetURL#2: bytes = itxn[txn#2].ConfigAssetURL
                let txn.ConfigAssetMetadataHash#2: bytes = itxn[txn#2].ConfigAssetMetadataHash
                let txn.ConfigAssetManager#2: bytes = itxn[txn#2].ConfigAssetManager
                let txn.ConfigAssetReserve#2: bytes = itxn[txn#2].ConfigAssetReserve
                let txn.ConfigAssetFreeze#2: bytes = itxn[txn#2].ConfigAssetFreeze
                let txn.ConfigAssetClawback#2: bytes = itxn[txn#2].ConfigAssetClawback
                let txn.FreezeAsset#2: uint64 = itxn[txn#2].FreezeAsset
                let txn.FreezeAssetAccount#2: bytes = itxn[txn#2].FreezeAssetAccount
                let txn.FreezeAssetFrozen#2: bool = itxn[txn#2].FreezeAssetFrozen
                let txn.NumAssets#2: uint64 = itxn[txn#2].NumAssets
                let txn.NumApplications#2: uint64 = itxn[txn#2].NumApplications
                let txn.GlobalNumUint#2: uint64 = itxn[txn#2].GlobalNumUint
                let txn.GlobalNumByteSlice#2: uint64 = itxn[txn#2].GlobalNumByteSlice
                let txn.LocalNumUint#2: uint64 = itxn[txn#2].LocalNumUint
                let txn.LocalNumByteSlice#2: uint64 = itxn[txn#2].LocalNumByteSlice
                let txn.ExtraProgramPages#2: uint64 = itxn[txn#2].ExtraProgramPages
                let txn.Nonparticipation#2: bool = itxn[txn#2].Nonparticipation
                let txn.NumLogs#2: uint64 = itxn[txn#2].NumLogs
                let txn.CreatedAssetID#2: uint64 = itxn[txn#2].CreatedAssetID
                let txn.CreatedApplicationID#2: uint64 = itxn[txn#2].CreatedApplicationID
                let txn.LastLog#2: bytes = itxn[txn#2].LastLog
                let txn.StateProofPK#2: bytes = itxn[txn#2].StateProofPK
                let txn.NumApprovalProgramPages#2: uint64 = itxn[txn#2].NumApprovalProgramPages
                let txn.NumClearStateProgramPages#2: uint64 = itxn[txn#2].NumClearStateProgramPages
                let tmp%2#0: bool = (== txn.LastLog#2 "World3")
                (assert tmp%2#0)
                itxn_begin
                let inner_txn_params%3#0: itxn_field_set = itxn_field_set(3)
                let inner_txn_params%3%%param_Fee_idx_0#0: uint64 = 0u
                let inner_txn_params%3%%Fee_length#0: uint64 = 1u
                let inner_txn_params%3%%param_TypeEnum_idx_0#0: uint64 = appl
                let inner_txn_params%3%%TypeEnum_length#0: uint64 = 1u
                let inner_txn_params%3%%param_ApplicationArgs_idx_0#0: bytes = method "log_string(string)void"
                let inner_txn_params%3%%param_ApplicationArgs_idx_1#0: bytes = "\x00\x06World4"
                let inner_txn_params%3%%ApplicationArgs_length#0: uint64 = 2u
                let inner_txn_params%3%%param_ApplicationID_idx_0#0: uint64 = app#0
                let inner_txn_params%3%%ApplicationID_length#0: uint64 = 1u
                let inner_txn_params%3%%Sender_length#0: uint64 = 0u
                let inner_txn_params%3%%Note_length#0: uint64 = 0u
                let inner_txn_params%3%%Receiver_length#0: uint64 = 0u
                let inner_txn_params%3%%Amount_length#0: uint64 = 0u
                let inner_txn_params%3%%CloseRemainderTo_length#0: uint64 = 0u
                let inner_txn_params%3%%VotePK_length#0: uint64 = 0u
                let inner_txn_params%3%%SelectionPK_length#0: uint64 = 0u
                let inner_txn_params%3%%VoteFirst_length#0: uint64 = 0u
                let inner_txn_params%3%%VoteLast_length#0: uint64 = 0u
                let inner_txn_params%3%%VoteKeyDilution_length#0: uint64 = 0u
                let inner_txn_params%3%%Type_length#0: uint64 = 0u
                let inner_txn_params%3%%XferAsset_length#0: uint64 = 0u
                let inner_txn_params%3%%AssetAmount_length#0: uint64 = 0u
                let inner_txn_params%3%%AssetSender_length#0: uint64 = 0u
                let inner_txn_params%3%%AssetReceiver_length#0: uint64 = 0u
                let inner_txn_params%3%%AssetCloseTo_length#0: uint64 = 0u
                let inner_txn_params%3%%OnCompletion_length#0: uint64 = 0u
                let inner_txn_params%3%%ApprovalProgram_length#0: uint64 = 0u
                let inner_txn_params%3%%ClearStateProgram_length#0: uint64 = 0u
                let inner_txn_params%3%%RekeyTo_length#0: uint64 = 0u
                let inner_txn_params%3%%ConfigAsset_length#0: uint64 = 0u
                let inner_txn_params%3%%ConfigAssetTotal_length#0: uint64 = 0u
                let inner_txn_params%3%%ConfigAssetDecimals_length#0: uint64 = 0u
                let inner_txn_params%3%%ConfigAssetDefaultFrozen_length#0: uint64 = 0u
                let inner_txn_params%3%%ConfigAssetUnitName_length#0: uint64 = 0u
                let inner_txn_params%3%%ConfigAssetName_length#0: uint64 = 0u
                let inner_txn_params%3%%ConfigAssetURL_length#0: uint64 = 0u
                let inner_txn_params%3%%ConfigAssetMetadataHash_length#0: uint64 = 0u
                let inner_txn_params%3%%ConfigAssetManager_length#0: uint64 = 0u
                let inner_txn_params%3%%ConfigAssetReserve_length#0: uint64 = 0u
                let inner_txn_params%3%%ConfigAssetFreeze_length#0: uint64 = 0u
                let inner_txn_params%3%%ConfigAssetClawback_length#0: uint64 = 0u
                let inner_txn_params%3%%FreezeAsset_length#0: uint64 = 0u
                let inner_txn_params%3%%FreezeAssetAccount_length#0: uint64 = 0u
                let inner_txn_params%3%%FreezeAssetFrozen_length#0: uint64 = 0u
                let inner_txn_params%3%%GlobalNumUint_length#0: uint64 = 0u
                let inner_txn_params%3%%GlobalNumByteSlice_length#0: uint64 = 0u
                let inner_txn_params%3%%LocalNumUint_length#0: uint64 = 0u
                let inner_txn_params%3%%LocalNumByteSlice_length#0: uint64 = 0u
                let inner_txn_params%3%%ExtraProgramPages_length#0: uint64 = 0u
                let inner_txn_params%3%%Nonparticipation_length#0: uint64 = 0u
                let inner_txn_params%3%%StateProofPK_length#0: uint64 = 0u
                let inner_txn_params%3%%Accounts_length#0: uint64 = 0u
                let inner_txn_params%3%%Assets_length#0: uint64 = 0u
                let inner_txn_params%3%%Applications_length#0: uint64 = 0u
                let inner_txn_params%3%%ApprovalProgramPages_length#0: uint64 = 0u
                let inner_txn_params%3%%ClearStateProgramPages_length#0: uint64 = 0u
                ((itxn_field ApplicationID) inner_txn_params%3%%param_ApplicationID_idx_0#0)
                ((itxn_field ApplicationArgs) inner_txn_params%3%%param_ApplicationArgs_idx_0#0)
                ((itxn_field ApplicationArgs) inner_txn_params%3%%param_ApplicationArgs_idx_1#0)
                ((itxn_field TypeEnum) inner_txn_params%3%%param_TypeEnum_idx_0#0)
                ((itxn_field Fee) inner_txn_params%3%%param_Fee_idx_0#0)
                goto block@4
            block@4: // next_txn_L102
                itxn_submit
                let txn#3: itxn_group_idx = itxn_group_idx(0)
                let txn._is_last#3: bool = 1u
                let txn.Sender#3: bytes = itxn[txn#3].Sender
                let txn.Fee#3: uint64 = itxn[txn#3].Fee
                let txn.FirstValid#3: uint64 = itxn[txn#3].FirstValid
                let txn.FirstValidTime#3: uint64 = itxn[txn#3].FirstValidTime
                let txn.LastValid#3: uint64 = itxn[txn#3].LastValid
                let txn.Note#3: bytes = itxn[txn#3].Note
                let txn.Lease#3: bytes = itxn[txn#3].Lease
                let txn.Receiver#3: bytes = itxn[txn#3].Receiver
                let txn.Amount#3: uint64 = itxn[txn#3].Amount
                let txn.CloseRemainderTo#3: bytes = itxn[txn#3].CloseRemainderTo
                let txn.VotePK#3: bytes = itxn[txn#3].VotePK
                let txn.SelectionPK#3: bytes = itxn[txn#3].SelectionPK
                let txn.VoteFirst#3: uint64 = itxn[txn#3].VoteFirst
                let txn.VoteLast#3: uint64 = itxn[txn#3].VoteLast
                let txn.VoteKeyDilution#3: uint64 = itxn[txn#3].VoteKeyDilution
                let txn.Type#3: bytes = itxn[txn#3].Type
                let txn.TypeEnum#3: uint64 = itxn[txn#3].TypeEnum
                let txn.XferAsset#3: uint64 = itxn[txn#3].XferAsset
                let txn.AssetAmount#3: uint64 = itxn[txn#3].AssetAmount
                let txn.AssetSender#3: bytes = itxn[txn#3].AssetSender
                let txn.AssetReceiver#3: bytes = itxn[txn#3].AssetReceiver
                let txn.AssetCloseTo#3: bytes = itxn[txn#3].AssetCloseTo
                let txn.GroupIndex#3: uint64 = itxn[txn#3].GroupIndex
                let txn.TxID#3: bytes = itxn[txn#3].TxID
                let txn.ApplicationID#3: uint64 = itxn[txn#3].ApplicationID
                let txn.OnCompletion#3: uint64 = itxn[txn#3].OnCompletion
                let txn.NumAppArgs#3: uint64 = itxn[txn#3].NumAppArgs
                let txn.NumAccounts#3: uint64 = itxn[txn#3].NumAccounts
                let txn.ApprovalProgram#3: bytes = itxn[txn#3].ApprovalProgram
                let txn.ClearStateProgram#3: bytes = itxn[txn#3].ClearStateProgram
                let txn.RekeyTo#3: bytes = itxn[txn#3].RekeyTo
                let txn.ConfigAsset#3: uint64 = itxn[txn#3].ConfigAsset
                let txn.ConfigAssetTotal#3: uint64 = itxn[txn#3].ConfigAssetTotal
                let txn.ConfigAssetDecimals#3: uint64 = itxn[txn#3].ConfigAssetDecimals
                let txn.ConfigAssetDefaultFrozen#3: bool = itxn[txn#3].ConfigAssetDefaultFrozen
                let txn.ConfigAssetUnitName#3: bytes = itxn[txn#3].ConfigAssetUnitName
                let txn.ConfigAssetName#3: bytes = itxn[txn#3].ConfigAssetName
                let txn.ConfigAssetURL#3: bytes = itxn[txn#3].ConfigAssetURL
                let txn.ConfigAssetMetadataHash#3: bytes = itxn[txn#3].ConfigAssetMetadataHash
                let txn.ConfigAssetManager#3: bytes = itxn[txn#3].ConfigAssetManager
                let txn.ConfigAssetReserve#3: bytes = itxn[txn#3].ConfigAssetReserve
                let txn.ConfigAssetFreeze#3: bytes = itxn[txn#3].ConfigAssetFreeze
                let txn.ConfigAssetClawback#3: bytes = itxn[txn#3].ConfigAssetClawback
                let txn.FreezeAsset#3: uint64 = itxn[txn#3].FreezeAsset
                let txn.FreezeAssetAccount#3: bytes = itxn[txn#3].FreezeAssetAccount
                let txn.FreezeAssetFrozen#3: bool = itxn[txn#3].FreezeAssetFrozen
                let txn.NumAssets#3: uint64 = itxn[txn#3].NumAssets
                let txn.NumApplications#3: uint64 = itxn[txn#3].NumApplications
                let txn.GlobalNumUint#3: uint64 = itxn[txn#3].GlobalNumUint
                let txn.GlobalNumByteSlice#3: uint64 = itxn[txn#3].GlobalNumByteSlice
                let txn.LocalNumUint#3: uint64 = itxn[txn#3].LocalNumUint
                let txn.LocalNumByteSlice#3: uint64 = itxn[txn#3].LocalNumByteSlice
                let txn.ExtraProgramPages#3: uint64 = itxn[txn#3].ExtraProgramPages
                let txn.Nonparticipation#3: bool = itxn[txn#3].Nonparticipation
                let txn.NumLogs#3: uint64 = itxn[txn#3].NumLogs
                let txn.CreatedAssetID#3: uint64 = itxn[txn#3].CreatedAssetID
                let txn.CreatedApplicationID#3: uint64 = itxn[txn#3].CreatedApplicationID
                let txn.LastLog#3: bytes = itxn[txn#3].LastLog
                let txn.StateProofPK#3: bytes = itxn[txn#3].StateProofPK
                let txn.NumApprovalProgramPages#3: uint64 = itxn[txn#3].NumApprovalProgramPages
                let txn.NumClearStateProgramPages#3: uint64 = itxn[txn#3].NumClearStateProgramPages
                let tmp%3#0: bool = (== txn.LastLog#3 "World4")
                (assert tmp%3#0)
                return 
        
        subroutine test_cases.typed_abi_call.typed_c2c.Greeter.test_ref_types(app: uint64, asset: uint64) -> void:
            block@0: // L105
                itxn_begin
                let inner_txn_params%0#0: itxn_field_set = itxn_field_set(0)
                let inner_txn_params%0%%param_Fee_idx_0#0: uint64 = 0u
                let inner_txn_params%0%%Fee_length#0: uint64 = 1u
                let inner_txn_params%0%%param_TypeEnum_idx_0#0: uint64 = appl
                let inner_txn_params%0%%TypeEnum_length#0: uint64 = 1u
                let inner_txn_params%0%%param_ApplicationArgs_idx_0#0: bytes = method "log_asset_account_app(asset,account,application)void"
                let inner_txn_params%0%%param_ApplicationArgs_idx_1#0: bytes = 0x00
                let inner_txn_params%0%%param_ApplicationArgs_idx_2#0: bytes = 0x01
                let inner_txn_params%0%%param_ApplicationArgs_idx_3#0: bytes = 0x01
                let inner_txn_params%0%%ApplicationArgs_length#0: uint64 = 4u
                let tmp%0#0: bytes = (global CurrentApplicationAddress)
                let inner_txn_params%0%%param_Accounts_idx_0#0: bytes = tmp%0#0
                let inner_txn_params%0%%Accounts_length#0: uint64 = 1u
                let inner_txn_params%0%%param_Applications_idx_0#0: uint64 = app#0
                let inner_txn_params%0%%Applications_length#0: uint64 = 1u
                let inner_txn_params%0%%param_Assets_idx_0#0: uint64 = asset#0
                let inner_txn_params%0%%Assets_length#0: uint64 = 1u
                let inner_txn_params%0%%param_ApplicationID_idx_0#0: uint64 = app#0
                let inner_txn_params%0%%ApplicationID_length#0: uint64 = 1u
                let inner_txn_params%0%%Sender_length#0: uint64 = 0u
                let inner_txn_params%0%%Note_length#0: uint64 = 0u
                let inner_txn_params%0%%Receiver_length#0: uint64 = 0u
                let inner_txn_params%0%%Amount_length#0: uint64 = 0u
                let inner_txn_params%0%%CloseRemainderTo_length#0: uint64 = 0u
                let inner_txn_params%0%%VotePK_length#0: uint64 = 0u
                let inner_txn_params%0%%SelectionPK_length#0: uint64 = 0u
                let inner_txn_params%0%%VoteFirst_length#0: uint64 = 0u
                let inner_txn_params%0%%VoteLast_length#0: uint64 = 0u
                let inner_txn_params%0%%VoteKeyDilution_length#0: uint64 = 0u
                let inner_txn_params%0%%Type_length#0: uint64 = 0u
                let inner_txn_params%0%%XferAsset_length#0: uint64 = 0u
                let inner_txn_params%0%%AssetAmount_length#0: uint64 = 0u
                let inner_txn_params%0%%AssetSender_length#0: uint64 = 0u
                let inner_txn_params%0%%AssetReceiver_length#0: uint64 = 0u
                let inner_txn_params%0%%AssetCloseTo_length#0: uint64 = 0u
                let inner_txn_params%0%%OnCompletion_length#0: uint64 = 0u
                let inner_txn_params%0%%ApprovalProgram_length#0: uint64 = 0u
                let inner_txn_params%0%%ClearStateProgram_length#0: uint64 = 0u
                let inner_txn_params%0%%RekeyTo_length#0: uint64 = 0u
                let inner_txn_params%0%%ConfigAsset_length#0: uint64 = 0u
                let inner_txn_params%0%%ConfigAssetTotal_length#0: uint64 = 0u
                let inner_txn_params%0%%ConfigAssetDecimals_length#0: uint64 = 0u
                let inner_txn_params%0%%ConfigAssetDefaultFrozen_length#0: uint64 = 0u
                let inner_txn_params%0%%ConfigAssetUnitName_length#0: uint64 = 0u
                let inner_txn_params%0%%ConfigAssetName_length#0: uint64 = 0u
                let inner_txn_params%0%%ConfigAssetURL_length#0: uint64 = 0u
                let inner_txn_params%0%%ConfigAssetMetadataHash_length#0: uint64 = 0u
                let inner_txn_params%0%%ConfigAssetManager_length#0: uint64 = 0u
                let inner_txn_params%0%%ConfigAssetReserve_length#0: uint64 = 0u
                let inner_txn_params%0%%ConfigAssetFreeze_length#0: uint64 = 0u
                let inner_txn_params%0%%ConfigAssetClawback_length#0: uint64 = 0u
                let inner_txn_params%0%%FreezeAsset_length#0: uint64 = 0u
                let inner_txn_params%0%%FreezeAssetAccount_length#0: uint64 = 0u
                let inner_txn_params%0%%FreezeAssetFrozen_length#0: uint64 = 0u
                let inner_txn_params%0%%GlobalNumUint_length#0: uint64 = 0u
                let inner_txn_params%0%%GlobalNumByteSlice_length#0: uint64 = 0u
                let inner_txn_params%0%%LocalNumUint_length#0: uint64 = 0u
                let inner_txn_params%0%%LocalNumByteSlice_length#0: uint64 = 0u
                let inner_txn_params%0%%ExtraProgramPages_length#0: uint64 = 0u
                let inner_txn_params%0%%Nonparticipation_length#0: uint64 = 0u
                let inner_txn_params%0%%StateProofPK_length#0: uint64 = 0u
                let inner_txn_params%0%%ApprovalProgramPages_length#0: uint64 = 0u
                let inner_txn_params%0%%ClearStateProgramPages_length#0: uint64 = 0u
                ((itxn_field ApplicationID) inner_txn_params%0%%param_ApplicationID_idx_0#0)
                ((itxn_field Assets) inner_txn_params%0%%param_Assets_idx_0#0)
                ((itxn_field Applications) inner_txn_params%0%%param_Applications_idx_0#0)
                ((itxn_field Accounts) inner_txn_params%0%%param_Accounts_idx_0#0)
                ((itxn_field ApplicationArgs) inner_txn_params%0%%param_ApplicationArgs_idx_0#0)
                ((itxn_field ApplicationArgs) inner_txn_params%0%%param_ApplicationArgs_idx_1#0)
                ((itxn_field ApplicationArgs) inner_txn_params%0%%param_ApplicationArgs_idx_2#0)
                ((itxn_field ApplicationArgs) inner_txn_params%0%%param_ApplicationArgs_idx_3#0)
                ((itxn_field TypeEnum) inner_txn_params%0%%param_TypeEnum_idx_0#0)
                ((itxn_field Fee) inner_txn_params%0%%param_Fee_idx_0#0)
                goto block@1
            block@1: // next_txn_L107
                itxn_submit
                let txn#0: itxn_group_idx = itxn_group_idx(0)
                let txn._is_last#0: bool = 1u
                let txn.Sender#0: bytes = itxn[txn#0].Sender
                let txn.Fee#0: uint64 = itxn[txn#0].Fee
                let txn.FirstValid#0: uint64 = itxn[txn#0].FirstValid
                let txn.FirstValidTime#0: uint64 = itxn[txn#0].FirstValidTime
                let txn.LastValid#0: uint64 = itxn[txn#0].LastValid
                let txn.Note#0: bytes = itxn[txn#0].Note
                let txn.Lease#0: bytes = itxn[txn#0].Lease
                let txn.Receiver#0: bytes = itxn[txn#0].Receiver
                let txn.Amount#0: uint64 = itxn[txn#0].Amount
                let txn.CloseRemainderTo#0: bytes = itxn[txn#0].CloseRemainderTo
                let txn.VotePK#0: bytes = itxn[txn#0].VotePK
                let txn.SelectionPK#0: bytes = itxn[txn#0].SelectionPK
                let txn.VoteFirst#0: uint64 = itxn[txn#0].VoteFirst
                let txn.VoteLast#0: uint64 = itxn[txn#0].VoteLast
                let txn.VoteKeyDilution#0: uint64 = itxn[txn#0].VoteKeyDilution
                let txn.Type#0: bytes = itxn[txn#0].Type
                let txn.TypeEnum#0: uint64 = itxn[txn#0].TypeEnum
                let txn.XferAsset#0: uint64 = itxn[txn#0].XferAsset
                let txn.AssetAmount#0: uint64 = itxn[txn#0].AssetAmount
                let txn.AssetSender#0: bytes = itxn[txn#0].AssetSender
                let txn.AssetReceiver#0: bytes = itxn[txn#0].AssetReceiver
                let txn.AssetCloseTo#0: bytes = itxn[txn#0].AssetCloseTo
                let txn.GroupIndex#0: uint64 = itxn[txn#0].GroupIndex
                let txn.TxID#0: bytes = itxn[txn#0].TxID
                let txn.ApplicationID#0: uint64 = itxn[txn#0].ApplicationID
                let txn.OnCompletion#0: uint64 = itxn[txn#0].OnCompletion
                let txn.NumAppArgs#0: uint64 = itxn[txn#0].NumAppArgs
                let txn.NumAccounts#0: uint64 = itxn[txn#0].NumAccounts
                let txn.ApprovalProgram#0: bytes = itxn[txn#0].ApprovalProgram
                let txn.ClearStateProgram#0: bytes = itxn[txn#0].ClearStateProgram
                let txn.RekeyTo#0: bytes = itxn[txn#0].RekeyTo
                let txn.ConfigAsset#0: uint64 = itxn[txn#0].ConfigAsset
                let txn.ConfigAssetTotal#0: uint64 = itxn[txn#0].ConfigAssetTotal
                let txn.ConfigAssetDecimals#0: uint64 = itxn[txn#0].ConfigAssetDecimals
                let txn.ConfigAssetDefaultFrozen#0: bool = itxn[txn#0].ConfigAssetDefaultFrozen
                let txn.ConfigAssetUnitName#0: bytes = itxn[txn#0].ConfigAssetUnitName
                let txn.ConfigAssetName#0: bytes = itxn[txn#0].ConfigAssetName
                let txn.ConfigAssetURL#0: bytes = itxn[txn#0].ConfigAssetURL
                let txn.ConfigAssetMetadataHash#0: bytes = itxn[txn#0].ConfigAssetMetadataHash
                let txn.ConfigAssetManager#0: bytes = itxn[txn#0].ConfigAssetManager
                let txn.ConfigAssetReserve#0: bytes = itxn[txn#0].ConfigAssetReserve
                let txn.ConfigAssetFreeze#0: bytes = itxn[txn#0].ConfigAssetFreeze
                let txn.ConfigAssetClawback#0: bytes = itxn[txn#0].ConfigAssetClawback
                let txn.FreezeAsset#0: uint64 = itxn[txn#0].FreezeAsset
                let txn.FreezeAssetAccount#0: bytes = itxn[txn#0].FreezeAssetAccount
                let txn.FreezeAssetFrozen#0: bool = itxn[txn#0].FreezeAssetFrozen
                let txn.NumAssets#0: uint64 = itxn[txn#0].NumAssets
                let txn.NumApplications#0: uint64 = itxn[txn#0].NumApplications
                let txn.GlobalNumUint#0: uint64 = itxn[txn#0].GlobalNumUint
                let txn.GlobalNumByteSlice#0: uint64 = itxn[txn#0].GlobalNumByteSlice
                let txn.LocalNumUint#0: uint64 = itxn[txn#0].LocalNumUint
                let txn.LocalNumByteSlice#0: uint64 = itxn[txn#0].LocalNumByteSlice
                let txn.ExtraProgramPages#0: uint64 = itxn[txn#0].ExtraProgramPages
                let txn.Nonparticipation#0: bool = itxn[txn#0].Nonparticipation
                let txn.NumLogs#0: uint64 = itxn[txn#0].NumLogs
                let txn.CreatedAssetID#0: uint64 = itxn[txn#0].CreatedAssetID
                let txn.CreatedApplicationID#0: uint64 = itxn[txn#0].CreatedApplicationID
                let txn.LastLog#0: bytes = itxn[txn#0].LastLog
                let txn.StateProofPK#0: bytes = itxn[txn#0].StateProofPK
                let txn.NumApprovalProgramPages#0: uint64 = itxn[txn#0].NumApprovalProgramPages
                let txn.NumClearStateProgramPages#0: uint64 = itxn[txn#0].NumClearStateProgramPages
                let (value%0#0: bytes, check%0#0: bool) = ((asset_params_get AssetName) asset#0)
                (assert check%0#0) // asset exists
                let tmp%1#0: bytes = (global CurrentApplicationAddress)
                let tmp%2#0: bytes = (concat value%0#0 tmp%1#0)
                let (value%1#0: bytes, check%1#0: bool) = ((app_params_get AppAddress) app#0)
                (assert check%1#0) // application exists
                let tmp%3#0: bytes = (concat tmp%2#0 value%1#0)
                let tmp%4#0: bool = (== txn.LastLog#0 tmp%3#0)
                (assert tmp%4#0)
                return 
        
        subroutine test_cases.typed_abi_call.typed_c2c.Greeter.test_native_string(app: uint64) -> void:
            block@0: // L119
                itxn_begin
                let inner_txn_params%0#0: itxn_field_set = itxn_field_set(0)
                let inner_txn_params%0%%param_Fee_idx_0#0: uint64 = 0u
                let inner_txn_params%0%%Fee_length#0: uint64 = 1u
                let inner_txn_params%0%%param_TypeEnum_idx_0#0: uint64 = appl
                let inner_txn_params%0%%TypeEnum_length#0: uint64 = 1u
                let inner_txn_params%0%%param_ApplicationArgs_idx_0#0: bytes = method "echo_native_string(string)string"
                let inner_txn_params%0%%param_ApplicationArgs_idx_1#0: bytes = "\x00\x01s"
                let inner_txn_params%0%%ApplicationArgs_length#0: uint64 = 2u
                let inner_txn_params%0%%param_ApplicationID_idx_0#0: uint64 = app#0
                let inner_txn_params%0%%ApplicationID_length#0: uint64 = 1u
                let inner_txn_params%0%%Sender_length#0: uint64 = 0u
                let inner_txn_params%0%%Note_length#0: uint64 = 0u
                let inner_txn_params%0%%Receiver_length#0: uint64 = 0u
                let inner_txn_params%0%%Amount_length#0: uint64 = 0u
                let inner_txn_params%0%%CloseRemainderTo_length#0: uint64 = 0u
                let inner_txn_params%0%%VotePK_length#0: uint64 = 0u
                let inner_txn_params%0%%SelectionPK_length#0: uint64 = 0u
                let inner_txn_params%0%%VoteFirst_length#0: uint64 = 0u
                let inner_txn_params%0%%VoteLast_length#0: uint64 = 0u
                let inner_txn_params%0%%VoteKeyDilution_length#0: uint64 = 0u
                let inner_txn_params%0%%Type_length#0: uint64 = 0u
                let inner_txn_params%0%%XferAsset_length#0: uint64 = 0u
                let inner_txn_params%0%%AssetAmount_length#0: uint64 = 0u
                let inner_txn_params%0%%AssetSender_length#0: uint64 = 0u
                let inner_txn_params%0%%AssetReceiver_length#0: uint64 = 0u
                let inner_txn_params%0%%AssetCloseTo_length#0: uint64 = 0u
                let inner_txn_params%0%%OnCompletion_length#0: uint64 = 0u
                let inner_txn_params%0%%ApprovalProgram_length#0: uint64 = 0u
                let inner_txn_params%0%%ClearStateProgram_length#0: uint64 = 0u
                let inner_txn_params%0%%RekeyTo_length#0: uint64 = 0u
                let inner_txn_params%0%%ConfigAsset_length#0: uint64 = 0u
                let inner_txn_params%0%%ConfigAssetTotal_length#0: uint64 = 0u
                let inner_txn_params%0%%ConfigAssetDecimals_length#0: uint64 = 0u
                let inner_txn_params%0%%ConfigAssetDefaultFrozen_length#0: uint64 = 0u
                let inner_txn_params%0%%ConfigAssetUnitName_length#0: uint64 = 0u
                let inner_txn_params%0%%ConfigAssetName_length#0: uint64 = 0u
                let inner_txn_params%0%%ConfigAssetURL_length#0: uint64 = 0u
                let inner_txn_params%0%%ConfigAssetMetadataHash_length#0: uint64 = 0u
                let inner_txn_params%0%%ConfigAssetManager_length#0: uint64 = 0u
                let inner_txn_params%0%%ConfigAssetReserve_length#0: uint64 = 0u
                let inner_txn_params%0%%ConfigAssetFreeze_length#0: uint64 = 0u
                let inner_txn_params%0%%ConfigAssetClawback_length#0: uint64 = 0u
                let inner_txn_params%0%%FreezeAsset_length#0: uint64 = 0u
                let inner_txn_params%0%%FreezeAssetAccount_length#0: uint64 = 0u
                let inner_txn_params%0%%FreezeAssetFrozen_length#0: uint64 = 0u
                let inner_txn_params%0%%GlobalNumUint_length#0: uint64 = 0u
                let inner_txn_params%0%%GlobalNumByteSlice_length#0: uint64 = 0u
                let inner_txn_params%0%%LocalNumUint_length#0: uint64 = 0u
                let inner_txn_params%0%%LocalNumByteSlice_length#0: uint64 = 0u
                let inner_txn_params%0%%ExtraProgramPages_length#0: uint64 = 0u
                let inner_txn_params%0%%Nonparticipation_length#0: uint64 = 0u
                let inner_txn_params%0%%StateProofPK_length#0: uint64 = 0u
                let inner_txn_params%0%%Accounts_length#0: uint64 = 0u
                let inner_txn_params%0%%Assets_length#0: uint64 = 0u
                let inner_txn_params%0%%Applications_length#0: uint64 = 0u
                let inner_txn_params%0%%ApprovalProgramPages_length#0: uint64 = 0u
                let inner_txn_params%0%%ClearStateProgramPages_length#0: uint64 = 0u
                ((itxn_field ApplicationID) inner_txn_params%0%%param_ApplicationID_idx_0#0)
                ((itxn_field ApplicationArgs) inner_txn_params%0%%param_ApplicationArgs_idx_0#0)
                ((itxn_field ApplicationArgs) inner_txn_params%0%%param_ApplicationArgs_idx_1#0)
                ((itxn_field TypeEnum) inner_txn_params%0%%param_TypeEnum_idx_0#0)
                ((itxn_field Fee) inner_txn_params%0%%param_Fee_idx_0#0)
                goto block@1
            block@1: // next_txn_L121
                itxn_submit
                let awst_tmp%0#0: itxn_group_idx = itxn_group_idx(0)
                let awst_tmp%1#0: bytes = itxn[awst_tmp%0#0].LastLog
                let tmp%0#0: bytes = ((extract 4 0) awst_tmp%1#0)
                let tmp%1#0: bytes = ((extract 0 4) awst_tmp%1#0)
                let tmp%2#0: bool = (== tmp%1#0 0x151f7c75)
                let (value%0#0: bytes, check%0#0: bool) = (tmp%0#0, tmp%2#0)
                (assert check%0#0) // ARC4 prefix is valid
                let result1#0: bytes = ((extract 2 0) value%0#0)
                let _txn#0: itxn_group_idx = awst_tmp%0#0
                let _txn._is_last#0: bool = 1u
                let _txn.Sender#0: bytes = itxn[_txn#0].Sender
                let _txn.Fee#0: uint64 = itxn[_txn#0].Fee
                let _txn.FirstValid#0: uint64 = itxn[_txn#0].FirstValid
                let _txn.FirstValidTime#0: uint64 = itxn[_txn#0].FirstValidTime
                let _txn.LastValid#0: uint64 = itxn[_txn#0].LastValid
                let _txn.Note#0: bytes = itxn[_txn#0].Note
                let _txn.Lease#0: bytes = itxn[_txn#0].Lease
                let _txn.Receiver#0: bytes = itxn[_txn#0].Receiver
                let _txn.Amount#0: uint64 = itxn[_txn#0].Amount
                let _txn.CloseRemainderTo#0: bytes = itxn[_txn#0].CloseRemainderTo
                let _txn.VotePK#0: bytes = itxn[_txn#0].VotePK
                let _txn.SelectionPK#0: bytes = itxn[_txn#0].SelectionPK
                let _txn.VoteFirst#0: uint64 = itxn[_txn#0].VoteFirst
                let _txn.VoteLast#0: uint64 = itxn[_txn#0].VoteLast
                let _txn.VoteKeyDilution#0: uint64 = itxn[_txn#0].VoteKeyDilution
                let _txn.Type#0: bytes = itxn[_txn#0].Type
                let _txn.TypeEnum#0: uint64 = itxn[_txn#0].TypeEnum
                let _txn.XferAsset#0: uint64 = itxn[_txn#0].XferAsset
                let _txn.AssetAmount#0: uint64 = itxn[_txn#0].AssetAmount
                let _txn.AssetSender#0: bytes = itxn[_txn#0].AssetSender
                let _txn.AssetReceiver#0: bytes = itxn[_txn#0].AssetReceiver
                let _txn.AssetCloseTo#0: bytes = itxn[_txn#0].AssetCloseTo
                let _txn.GroupIndex#0: uint64 = itxn[_txn#0].GroupIndex
                let _txn.TxID#0: bytes = itxn[_txn#0].TxID
                let _txn.ApplicationID#0: uint64 = itxn[_txn#0].ApplicationID
                let _txn.OnCompletion#0: uint64 = itxn[_txn#0].OnCompletion
                let _txn.NumAppArgs#0: uint64 = itxn[_txn#0].NumAppArgs
                let _txn.NumAccounts#0: uint64 = itxn[_txn#0].NumAccounts
                let _txn.ApprovalProgram#0: bytes = itxn[_txn#0].ApprovalProgram
                let _txn.ClearStateProgram#0: bytes = itxn[_txn#0].ClearStateProgram
                let _txn.RekeyTo#0: bytes = itxn[_txn#0].RekeyTo
                let _txn.ConfigAsset#0: uint64 = itxn[_txn#0].ConfigAsset
                let _txn.ConfigAssetTotal#0: uint64 = itxn[_txn#0].ConfigAssetTotal
                let _txn.ConfigAssetDecimals#0: uint64 = itxn[_txn#0].ConfigAssetDecimals
                let _txn.ConfigAssetDefaultFrozen#0: bool = itxn[_txn#0].ConfigAssetDefaultFrozen
                let _txn.ConfigAssetUnitName#0: bytes = itxn[_txn#0].ConfigAssetUnitName
                let _txn.ConfigAssetName#0: bytes = itxn[_txn#0].ConfigAssetName
                let _txn.ConfigAssetURL#0: bytes = itxn[_txn#0].ConfigAssetURL
                let _txn.ConfigAssetMetadataHash#0: bytes = itxn[_txn#0].ConfigAssetMetadataHash
                let _txn.ConfigAssetManager#0: bytes = itxn[_txn#0].ConfigAssetManager
                let _txn.ConfigAssetReserve#0: bytes = itxn[_txn#0].ConfigAssetReserve
                let _txn.ConfigAssetFreeze#0: bytes = itxn[_txn#0].ConfigAssetFreeze
                let _txn.ConfigAssetClawback#0: bytes = itxn[_txn#0].ConfigAssetClawback
                let _txn.FreezeAsset#0: uint64 = itxn[_txn#0].FreezeAsset
                let _txn.FreezeAssetAccount#0: bytes = itxn[_txn#0].FreezeAssetAccount
                let _txn.FreezeAssetFrozen#0: bool = itxn[_txn#0].FreezeAssetFrozen
                let _txn.NumAssets#0: uint64 = itxn[_txn#0].NumAssets
                let _txn.NumApplications#0: uint64 = itxn[_txn#0].NumApplications
                let _txn.GlobalNumUint#0: uint64 = itxn[_txn#0].GlobalNumUint
                let _txn.GlobalNumByteSlice#0: uint64 = itxn[_txn#0].GlobalNumByteSlice
                let _txn.LocalNumUint#0: uint64 = itxn[_txn#0].LocalNumUint
                let _txn.LocalNumByteSlice#0: uint64 = itxn[_txn#0].LocalNumByteSlice
                let _txn.ExtraProgramPages#0: uint64 = itxn[_txn#0].ExtraProgramPages
                let _txn.Nonparticipation#0: bool = itxn[_txn#0].Nonparticipation
                let _txn.NumLogs#0: uint64 = itxn[_txn#0].NumLogs
                let _txn.CreatedAssetID#0: uint64 = itxn[_txn#0].CreatedAssetID
                let _txn.CreatedApplicationID#0: uint64 = itxn[_txn#0].CreatedApplicationID
                let _txn.LastLog#0: bytes = itxn[_txn#0].LastLog
                let _txn.StateProofPK#0: bytes = itxn[_txn#0].StateProofPK
                let _txn.NumApprovalProgramPages#0: uint64 = itxn[_txn#0].NumApprovalProgramPages
                let _txn.NumClearStateProgramPages#0: uint64 = itxn[_txn#0].NumClearStateProgramPages
                let tmp%3#0: bool = (== result1#0 "echo: s")
                (assert tmp%3#0)
                itxn_begin
                let inner_txn_params%1#0: itxn_field_set = itxn_field_set(1)
                let inner_txn_params%1%%param_Fee_idx_0#0: uint64 = 0u
                let inner_txn_params%1%%Fee_length#0: uint64 = 1u
                let inner_txn_params%1%%param_TypeEnum_idx_0#0: uint64 = appl
                let inner_txn_params%1%%TypeEnum_length#0: uint64 = 1u
                let length%0#0: uint64 = (len "s")
                let value_as_bytes%0#0: bytes = (itob length%0#0)
                let value_as_uint16%0#0: bytes = ((extract 6 2) value_as_bytes%0#0)
                let tmp%4#0: bytes = (concat value_as_uint16%0#0 "s")
                let inner_txn_params%1%%param_ApplicationArgs_idx_0#0: bytes = method "echo_native_string(string)string"
                let inner_txn_params%1%%param_ApplicationArgs_idx_1#0: bytes = tmp%4#0
                let inner_txn_params%1%%ApplicationArgs_length#0: uint64 = 2u
                let inner_txn_params%1%%param_ApplicationID_idx_0#0: uint64 = app#0
                let inner_txn_params%1%%ApplicationID_length#0: uint64 = 1u
                let inner_txn_params%1%%Sender_length#0: uint64 = 0u
                let inner_txn_params%1%%Note_length#0: uint64 = 0u
                let inner_txn_params%1%%Receiver_length#0: uint64 = 0u
                let inner_txn_params%1%%Amount_length#0: uint64 = 0u
                let inner_txn_params%1%%CloseRemainderTo_length#0: uint64 = 0u
                let inner_txn_params%1%%VotePK_length#0: uint64 = 0u
                let inner_txn_params%1%%SelectionPK_length#0: uint64 = 0u
                let inner_txn_params%1%%VoteFirst_length#0: uint64 = 0u
                let inner_txn_params%1%%VoteLast_length#0: uint64 = 0u
                let inner_txn_params%1%%VoteKeyDilution_length#0: uint64 = 0u
                let inner_txn_params%1%%Type_length#0: uint64 = 0u
                let inner_txn_params%1%%XferAsset_length#0: uint64 = 0u
                let inner_txn_params%1%%AssetAmount_length#0: uint64 = 0u
                let inner_txn_params%1%%AssetSender_length#0: uint64 = 0u
                let inner_txn_params%1%%AssetReceiver_length#0: uint64 = 0u
                let inner_txn_params%1%%AssetCloseTo_length#0: uint64 = 0u
                let inner_txn_params%1%%OnCompletion_length#0: uint64 = 0u
                let inner_txn_params%1%%ApprovalProgram_length#0: uint64 = 0u
                let inner_txn_params%1%%ClearStateProgram_length#0: uint64 = 0u
                let inner_txn_params%1%%RekeyTo_length#0: uint64 = 0u
                let inner_txn_params%1%%ConfigAsset_length#0: uint64 = 0u
                let inner_txn_params%1%%ConfigAssetTotal_length#0: uint64 = 0u
                let inner_txn_params%1%%ConfigAssetDecimals_length#0: uint64 = 0u
                let inner_txn_params%1%%ConfigAssetDefaultFrozen_length#0: uint64 = 0u
                let inner_txn_params%1%%ConfigAssetUnitName_length#0: uint64 = 0u
                let inner_txn_params%1%%ConfigAssetName_length#0: uint64 = 0u
                let inner_txn_params%1%%ConfigAssetURL_length#0: uint64 = 0u
                let inner_txn_params%1%%ConfigAssetMetadataHash_length#0: uint64 = 0u
                let inner_txn_params%1%%ConfigAssetManager_length#0: uint64 = 0u
                let inner_txn_params%1%%ConfigAssetReserve_length#0: uint64 = 0u
                let inner_txn_params%1%%ConfigAssetFreeze_length#0: uint64 = 0u
                let inner_txn_params%1%%ConfigAssetClawback_length#0: uint64 = 0u
                let inner_txn_params%1%%FreezeAsset_length#0: uint64 = 0u
                let inner_txn_params%1%%FreezeAssetAccount_length#0: uint64 = 0u
                let inner_txn_params%1%%FreezeAssetFrozen_length#0: uint64 = 0u
                let inner_txn_params%1%%GlobalNumUint_length#0: uint64 = 0u
                let inner_txn_params%1%%GlobalNumByteSlice_length#0: uint64 = 0u
                let inner_txn_params%1%%LocalNumUint_length#0: uint64 = 0u
                let inner_txn_params%1%%LocalNumByteSlice_length#0: uint64 = 0u
                let inner_txn_params%1%%ExtraProgramPages_length#0: uint64 = 0u
                let inner_txn_params%1%%Nonparticipation_length#0: uint64 = 0u
                let inner_txn_params%1%%StateProofPK_length#0: uint64 = 0u
                let inner_txn_params%1%%Accounts_length#0: uint64 = 0u
                let inner_txn_params%1%%Assets_length#0: uint64 = 0u
                let inner_txn_params%1%%Applications_length#0: uint64 = 0u
                let inner_txn_params%1%%ApprovalProgramPages_length#0: uint64 = 0u
                let inner_txn_params%1%%ClearStateProgramPages_length#0: uint64 = 0u
                ((itxn_field ApplicationID) inner_txn_params%1%%param_ApplicationID_idx_0#0)
                ((itxn_field ApplicationArgs) inner_txn_params%1%%param_ApplicationArgs_idx_0#0)
                ((itxn_field ApplicationArgs) inner_txn_params%1%%param_ApplicationArgs_idx_1#0)
                ((itxn_field TypeEnum) inner_txn_params%1%%param_TypeEnum_idx_0#0)
                ((itxn_field Fee) inner_txn_params%1%%param_Fee_idx_0#0)
                goto block@2
            block@2: // next_txn_L124
                itxn_submit
                let awst_tmp%2#0: itxn_group_idx = itxn_group_idx(0)
                let awst_tmp%3#0: bytes = itxn[awst_tmp%2#0].LastLog
                let tmp%5#0: bytes = ((extract 4 0) awst_tmp%3#0)
                let tmp%6#0: bytes = ((extract 0 4) awst_tmp%3#0)
                let tmp%7#0: bool = (== tmp%6#0 0x151f7c75)
                let (value%1#0: bytes, check%1#0: bool) = (tmp%5#0, tmp%7#0)
                (assert check%1#0) // ARC4 prefix is valid
                let result2#0: bytes = ((extract 2 0) value%1#0)
                let _txn#1: itxn_group_idx = awst_tmp%2#0
                let _txn._is_last#1: bool = 1u
                let _txn.Sender#1: bytes = itxn[_txn#1].Sender
                let _txn.Fee#1: uint64 = itxn[_txn#1].Fee
                let _txn.FirstValid#1: uint64 = itxn[_txn#1].FirstValid
                let _txn.FirstValidTime#1: uint64 = itxn[_txn#1].FirstValidTime
                let _txn.LastValid#1: uint64 = itxn[_txn#1].LastValid
                let _txn.Note#1: bytes = itxn[_txn#1].Note
                let _txn.Lease#1: bytes = itxn[_txn#1].Lease
                let _txn.Receiver#1: bytes = itxn[_txn#1].Receiver
                let _txn.Amount#1: uint64 = itxn[_txn#1].Amount
                let _txn.CloseRemainderTo#1: bytes = itxn[_txn#1].CloseRemainderTo
                let _txn.VotePK#1: bytes = itxn[_txn#1].VotePK
                let _txn.SelectionPK#1: bytes = itxn[_txn#1].SelectionPK
                let _txn.VoteFirst#1: uint64 = itxn[_txn#1].VoteFirst
                let _txn.VoteLast#1: uint64 = itxn[_txn#1].VoteLast
                let _txn.VoteKeyDilution#1: uint64 = itxn[_txn#1].VoteKeyDilution
                let _txn.Type#1: bytes = itxn[_txn#1].Type
                let _txn.TypeEnum#1: uint64 = itxn[_txn#1].TypeEnum
                let _txn.XferAsset#1: uint64 = itxn[_txn#1].XferAsset
                let _txn.AssetAmount#1: uint64 = itxn[_txn#1].AssetAmount
                let _txn.AssetSender#1: bytes = itxn[_txn#1].AssetSender
                let _txn.AssetReceiver#1: bytes = itxn[_txn#1].AssetReceiver
                let _txn.AssetCloseTo#1: bytes = itxn[_txn#1].AssetCloseTo
                let _txn.GroupIndex#1: uint64 = itxn[_txn#1].GroupIndex
                let _txn.TxID#1: bytes = itxn[_txn#1].TxID
                let _txn.ApplicationID#1: uint64 = itxn[_txn#1].ApplicationID
                let _txn.OnCompletion#1: uint64 = itxn[_txn#1].OnCompletion
                let _txn.NumAppArgs#1: uint64 = itxn[_txn#1].NumAppArgs
                let _txn.NumAccounts#1: uint64 = itxn[_txn#1].NumAccounts
                let _txn.ApprovalProgram#1: bytes = itxn[_txn#1].ApprovalProgram
                let _txn.ClearStateProgram#1: bytes = itxn[_txn#1].ClearStateProgram
                let _txn.RekeyTo#1: bytes = itxn[_txn#1].RekeyTo
                let _txn.ConfigAsset#1: uint64 = itxn[_txn#1].ConfigAsset
                let _txn.ConfigAssetTotal#1: uint64 = itxn[_txn#1].ConfigAssetTotal
                let _txn.ConfigAssetDecimals#1: uint64 = itxn[_txn#1].ConfigAssetDecimals
                let _txn.ConfigAssetDefaultFrozen#1: bool = itxn[_txn#1].ConfigAssetDefaultFrozen
                let _txn.ConfigAssetUnitName#1: bytes = itxn[_txn#1].ConfigAssetUnitName
                let _txn.ConfigAssetName#1: bytes = itxn[_txn#1].ConfigAssetName
                let _txn.ConfigAssetURL#1: bytes = itxn[_txn#1].ConfigAssetURL
                let _txn.ConfigAssetMetadataHash#1: bytes = itxn[_txn#1].ConfigAssetMetadataHash
                let _txn.ConfigAssetManager#1: bytes = itxn[_txn#1].ConfigAssetManager
                let _txn.ConfigAssetReserve#1: bytes = itxn[_txn#1].ConfigAssetReserve
                let _txn.ConfigAssetFreeze#1: bytes = itxn[_txn#1].ConfigAssetFreeze
                let _txn.ConfigAssetClawback#1: bytes = itxn[_txn#1].ConfigAssetClawback
                let _txn.FreezeAsset#1: uint64 = itxn[_txn#1].FreezeAsset
                let _txn.FreezeAssetAccount#1: bytes = itxn[_txn#1].FreezeAssetAccount
                let _txn.FreezeAssetFrozen#1: bool = itxn[_txn#1].FreezeAssetFrozen
                let _txn.NumAssets#1: uint64 = itxn[_txn#1].NumAssets
                let _txn.NumApplications#1: uint64 = itxn[_txn#1].NumApplications
                let _txn.GlobalNumUint#1: uint64 = itxn[_txn#1].GlobalNumUint
                let _txn.GlobalNumByteSlice#1: uint64 = itxn[_txn#1].GlobalNumByteSlice
                let _txn.LocalNumUint#1: uint64 = itxn[_txn#1].LocalNumUint
                let _txn.LocalNumByteSlice#1: uint64 = itxn[_txn#1].LocalNumByteSlice
                let _txn.ExtraProgramPages#1: uint64 = itxn[_txn#1].ExtraProgramPages
                let _txn.Nonparticipation#1: bool = itxn[_txn#1].Nonparticipation
                let _txn.NumLogs#1: uint64 = itxn[_txn#1].NumLogs
                let _txn.CreatedAssetID#1: uint64 = itxn[_txn#1].CreatedAssetID
                let _txn.CreatedApplicationID#1: uint64 = itxn[_txn#1].CreatedApplicationID
                let _txn.LastLog#1: bytes = itxn[_txn#1].LastLog
                let _txn.StateProofPK#1: bytes = itxn[_txn#1].StateProofPK
                let _txn.NumApprovalProgramPages#1: uint64 = itxn[_txn#1].NumApprovalProgramPages
                let _txn.NumClearStateProgramPages#1: uint64 = itxn[_txn#1].NumClearStateProgramPages
                let tmp%8#0: bool = (== result2#0 result1#0)
                (assert tmp%8#0)
                itxn_begin
                let inner_txn_params%2#0: itxn_field_set = itxn_field_set(2)
                let inner_txn_params%2%%param_Fee_idx_0#0: uint64 = 0u
                let inner_txn_params%2%%Fee_length#0: uint64 = 1u
                let inner_txn_params%2%%param_TypeEnum_idx_0#0: uint64 = appl
                let inner_txn_params%2%%TypeEnum_length#0: uint64 = 1u
                let inner_txn_params%2%%param_ApplicationArgs_idx_0#0: bytes = method "echo_native_string(string)string"
                let inner_txn_params%2%%param_ApplicationArgs_idx_1#0: bytes = "\x00\x01s"
                let inner_txn_params%2%%ApplicationArgs_length#0: uint64 = 2u
                let inner_txn_params%2%%param_ApplicationID_idx_0#0: uint64 = app#0
                let inner_txn_params%2%%ApplicationID_length#0: uint64 = 1u
                let inner_txn_params%2%%Sender_length#0: uint64 = 0u
                let inner_txn_params%2%%Note_length#0: uint64 = 0u
                let inner_txn_params%2%%Receiver_length#0: uint64 = 0u
                let inner_txn_params%2%%Amount_length#0: uint64 = 0u
                let inner_txn_params%2%%CloseRemainderTo_length#0: uint64 = 0u
                let inner_txn_params%2%%VotePK_length#0: uint64 = 0u
                let inner_txn_params%2%%SelectionPK_length#0: uint64 = 0u
                let inner_txn_params%2%%VoteFirst_length#0: uint64 = 0u
                let inner_txn_params%2%%VoteLast_length#0: uint64 = 0u
                let inner_txn_params%2%%VoteKeyDilution_length#0: uint64 = 0u
                let inner_txn_params%2%%Type_length#0: uint64 = 0u
                let inner_txn_params%2%%XferAsset_length#0: uint64 = 0u
                let inner_txn_params%2%%AssetAmount_length#0: uint64 = 0u
                let inner_txn_params%2%%AssetSender_length#0: uint64 = 0u
                let inner_txn_params%2%%AssetReceiver_length#0: uint64 = 0u
                let inner_txn_params%2%%AssetCloseTo_length#0: uint64 = 0u
                let inner_txn_params%2%%OnCompletion_length#0: uint64 = 0u
                let inner_txn_params%2%%ApprovalProgram_length#0: uint64 = 0u
                let inner_txn_params%2%%ClearStateProgram_length#0: uint64 = 0u
                let inner_txn_params%2%%RekeyTo_length#0: uint64 = 0u
                let inner_txn_params%2%%ConfigAsset_length#0: uint64 = 0u
                let inner_txn_params%2%%ConfigAssetTotal_length#0: uint64 = 0u
                let inner_txn_params%2%%ConfigAssetDecimals_length#0: uint64 = 0u
                let inner_txn_params%2%%ConfigAssetDefaultFrozen_length#0: uint64 = 0u
                let inner_txn_params%2%%ConfigAssetUnitName_length#0: uint64 = 0u
                let inner_txn_params%2%%ConfigAssetName_length#0: uint64 = 0u
                let inner_txn_params%2%%ConfigAssetURL_length#0: uint64 = 0u
                let inner_txn_params%2%%ConfigAssetMetadataHash_length#0: uint64 = 0u
                let inner_txn_params%2%%ConfigAssetManager_length#0: uint64 = 0u
                let inner_txn_params%2%%ConfigAssetReserve_length#0: uint64 = 0u
                let inner_txn_params%2%%ConfigAssetFreeze_length#0: uint64 = 0u
                let inner_txn_params%2%%ConfigAssetClawback_length#0: uint64 = 0u
                let inner_txn_params%2%%FreezeAsset_length#0: uint64 = 0u
                let inner_txn_params%2%%FreezeAssetAccount_length#0: uint64 = 0u
                let inner_txn_params%2%%FreezeAssetFrozen_length#0: uint64 = 0u
                let inner_txn_params%2%%GlobalNumUint_length#0: uint64 = 0u
                let inner_txn_params%2%%GlobalNumByteSlice_length#0: uint64 = 0u
                let inner_txn_params%2%%LocalNumUint_length#0: uint64 = 0u
                let inner_txn_params%2%%LocalNumByteSlice_length#0: uint64 = 0u
                let inner_txn_params%2%%ExtraProgramPages_length#0: uint64 = 0u
                let inner_txn_params%2%%Nonparticipation_length#0: uint64 = 0u
                let inner_txn_params%2%%StateProofPK_length#0: uint64 = 0u
                let inner_txn_params%2%%Accounts_length#0: uint64 = 0u
                let inner_txn_params%2%%Assets_length#0: uint64 = 0u
                let inner_txn_params%2%%Applications_length#0: uint64 = 0u
                let inner_txn_params%2%%ApprovalProgramPages_length#0: uint64 = 0u
                let inner_txn_params%2%%ClearStateProgramPages_length#0: uint64 = 0u
                ((itxn_field ApplicationID) inner_txn_params%2%%param_ApplicationID_idx_0#0)
                ((itxn_field ApplicationArgs) inner_txn_params%2%%param_ApplicationArgs_idx_0#0)
                ((itxn_field ApplicationArgs) inner_txn_params%2%%param_ApplicationArgs_idx_1#0)
                ((itxn_field TypeEnum) inner_txn_params%2%%param_TypeEnum_idx_0#0)
                ((itxn_field Fee) inner_txn_params%2%%param_Fee_idx_0#0)
                goto block@3
            block@3: // next_txn_L127
                itxn_submit
                let awst_tmp%4#0: itxn_group_idx = itxn_group_idx(0)
                let awst_tmp%5#0: bytes = itxn[awst_tmp%4#0].LastLog
                let tmp%9#0: bytes = ((extract 4 0) awst_tmp%5#0)
                let tmp%10#0: bytes = ((extract 0 4) awst_tmp%5#0)
                let tmp%11#0: bool = (== tmp%10#0 0x151f7c75)
                let (value%2#0: bytes, check%2#0: bool) = (tmp%9#0, tmp%11#0)
                (assert check%2#0) // ARC4 prefix is valid
                let result3#0: bytes = ((extract 2 0) value%2#0)
                let _txn#2: itxn_group_idx = awst_tmp%4#0
                let _txn._is_last#2: bool = 1u
                let _txn.Sender#2: bytes = itxn[_txn#2].Sender
                let _txn.Fee#2: uint64 = itxn[_txn#2].Fee
                let _txn.FirstValid#2: uint64 = itxn[_txn#2].FirstValid
                let _txn.FirstValidTime#2: uint64 = itxn[_txn#2].FirstValidTime
                let _txn.LastValid#2: uint64 = itxn[_txn#2].LastValid
                let _txn.Note#2: bytes = itxn[_txn#2].Note
                let _txn.Lease#2: bytes = itxn[_txn#2].Lease
                let _txn.Receiver#2: bytes = itxn[_txn#2].Receiver
                let _txn.Amount#2: uint64 = itxn[_txn#2].Amount
                let _txn.CloseRemainderTo#2: bytes = itxn[_txn#2].CloseRemainderTo
                let _txn.VotePK#2: bytes = itxn[_txn#2].VotePK
                let _txn.SelectionPK#2: bytes = itxn[_txn#2].SelectionPK
                let _txn.VoteFirst#2: uint64 = itxn[_txn#2].VoteFirst
                let _txn.VoteLast#2: uint64 = itxn[_txn#2].VoteLast
                let _txn.VoteKeyDilution#2: uint64 = itxn[_txn#2].VoteKeyDilution
                let _txn.Type#2: bytes = itxn[_txn#2].Type
                let _txn.TypeEnum#2: uint64 = itxn[_txn#2].TypeEnum
                let _txn.XferAsset#2: uint64 = itxn[_txn#2].XferAsset
                let _txn.AssetAmount#2: uint64 = itxn[_txn#2].AssetAmount
                let _txn.AssetSender#2: bytes = itxn[_txn#2].AssetSender
                let _txn.AssetReceiver#2: bytes = itxn[_txn#2].AssetReceiver
                let _txn.AssetCloseTo#2: bytes = itxn[_txn#2].AssetCloseTo
                let _txn.GroupIndex#2: uint64 = itxn[_txn#2].GroupIndex
                let _txn.TxID#2: bytes = itxn[_txn#2].TxID
                let _txn.ApplicationID#2: uint64 = itxn[_txn#2].ApplicationID
                let _txn.OnCompletion#2: uint64 = itxn[_txn#2].OnCompletion
                let _txn.NumAppArgs#2: uint64 = itxn[_txn#2].NumAppArgs
                let _txn.NumAccounts#2: uint64 = itxn[_txn#2].NumAccounts
                let _txn.ApprovalProgram#2: bytes = itxn[_txn#2].ApprovalProgram
                let _txn.ClearStateProgram#2: bytes = itxn[_txn#2].ClearStateProgram
                let _txn.RekeyTo#2: bytes = itxn[_txn#2].RekeyTo
                let _txn.ConfigAsset#2: uint64 = itxn[_txn#2].ConfigAsset
                let _txn.ConfigAssetTotal#2: uint64 = itxn[_txn#2].ConfigAssetTotal
                let _txn.ConfigAssetDecimals#2: uint64 = itxn[_txn#2].ConfigAssetDecimals
                let _txn.ConfigAssetDefaultFrozen#2: bool = itxn[_txn#2].ConfigAssetDefaultFrozen
                let _txn.ConfigAssetUnitName#2: bytes = itxn[_txn#2].ConfigAssetUnitName
                let _txn.ConfigAssetName#2: bytes = itxn[_txn#2].ConfigAssetName
                let _txn.ConfigAssetURL#2: bytes = itxn[_txn#2].ConfigAssetURL
                let _txn.ConfigAssetMetadataHash#2: bytes = itxn[_txn#2].ConfigAssetMetadataHash
                let _txn.ConfigAssetManager#2: bytes = itxn[_txn#2].ConfigAssetManager
                let _txn.ConfigAssetReserve#2: bytes = itxn[_txn#2].ConfigAssetReserve
                let _txn.ConfigAssetFreeze#2: bytes = itxn[_txn#2].ConfigAssetFreeze
                let _txn.ConfigAssetClawback#2: bytes = itxn[_txn#2].ConfigAssetClawback
                let _txn.FreezeAsset#2: uint64 = itxn[_txn#2].FreezeAsset
                let _txn.FreezeAssetAccount#2: bytes = itxn[_txn#2].FreezeAssetAccount
                let _txn.FreezeAssetFrozen#2: bool = itxn[_txn#2].FreezeAssetFrozen
                let _txn.NumAssets#2: uint64 = itxn[_txn#2].NumAssets
                let _txn.NumApplications#2: uint64 = itxn[_txn#2].NumApplications
                let _txn.GlobalNumUint#2: uint64 = itxn[_txn#2].GlobalNumUint
                let _txn.GlobalNumByteSlice#2: uint64 = itxn[_txn#2].GlobalNumByteSlice
                let _txn.LocalNumUint#2: uint64 = itxn[_txn#2].LocalNumUint
                let _txn.LocalNumByteSlice#2: uint64 = itxn[_txn#2].LocalNumByteSlice
                let _txn.ExtraProgramPages#2: uint64 = itxn[_txn#2].ExtraProgramPages
                let _txn.Nonparticipation#2: bool = itxn[_txn#2].Nonparticipation
                let _txn.NumLogs#2: uint64 = itxn[_txn#2].NumLogs
                let _txn.CreatedAssetID#2: uint64 = itxn[_txn#2].CreatedAssetID
                let _txn.CreatedApplicationID#2: uint64 = itxn[_txn#2].CreatedApplicationID
                let _txn.LastLog#2: bytes = itxn[_txn#2].LastLog
                let _txn.StateProofPK#2: bytes = itxn[_txn#2].StateProofPK
                let _txn.NumApprovalProgramPages#2: uint64 = itxn[_txn#2].NumApprovalProgramPages
                let _txn.NumClearStateProgramPages#2: uint64 = itxn[_txn#2].NumClearStateProgramPages
                let tmp%12#0: bool = (== result3#0 result1#0)
                (assert tmp%12#0)
                return 
        
        subroutine test_cases.typed_abi_call.typed_c2c.Greeter.test_native_bytes(app: uint64) -> void:
            block@0: // L130
                itxn_begin
                let inner_txn_params%0#0: itxn_field_set = itxn_field_set(0)
                let inner_txn_params%0%%param_Fee_idx_0#0: uint64 = 0u
                let inner_txn_params%0%%Fee_length#0: uint64 = 1u
                let inner_txn_params%0%%param_TypeEnum_idx_0#0: uint64 = appl
                let inner_txn_params%0%%TypeEnum_length#0: uint64 = 1u
                let inner_txn_params%0%%param_ApplicationArgs_idx_0#0: bytes = method "echo_native_bytes(byte[])byte[]"
                let inner_txn_params%0%%param_ApplicationArgs_idx_1#0: bytes = 0x000162
                let inner_txn_params%0%%ApplicationArgs_length#0: uint64 = 2u
                let inner_txn_params%0%%param_ApplicationID_idx_0#0: uint64 = app#0
                let inner_txn_params%0%%ApplicationID_length#0: uint64 = 1u
                let inner_txn_params%0%%Sender_length#0: uint64 = 0u
                let inner_txn_params%0%%Note_length#0: uint64 = 0u
                let inner_txn_params%0%%Receiver_length#0: uint64 = 0u
                let inner_txn_params%0%%Amount_length#0: uint64 = 0u
                let inner_txn_params%0%%CloseRemainderTo_length#0: uint64 = 0u
                let inner_txn_params%0%%VotePK_length#0: uint64 = 0u
                let inner_txn_params%0%%SelectionPK_length#0: uint64 = 0u
                let inner_txn_params%0%%VoteFirst_length#0: uint64 = 0u
                let inner_txn_params%0%%VoteLast_length#0: uint64 = 0u
                let inner_txn_params%0%%VoteKeyDilution_length#0: uint64 = 0u
                let inner_txn_params%0%%Type_length#0: uint64 = 0u
                let inner_txn_params%0%%XferAsset_length#0: uint64 = 0u
                let inner_txn_params%0%%AssetAmount_length#0: uint64 = 0u
                let inner_txn_params%0%%AssetSender_length#0: uint64 = 0u
                let inner_txn_params%0%%AssetReceiver_length#0: uint64 = 0u
                let inner_txn_params%0%%AssetCloseTo_length#0: uint64 = 0u
                let inner_txn_params%0%%OnCompletion_length#0: uint64 = 0u
                let inner_txn_params%0%%ApprovalProgram_length#0: uint64 = 0u
                let inner_txn_params%0%%ClearStateProgram_length#0: uint64 = 0u
                let inner_txn_params%0%%RekeyTo_length#0: uint64 = 0u
                let inner_txn_params%0%%ConfigAsset_length#0: uint64 = 0u
                let inner_txn_params%0%%ConfigAssetTotal_length#0: uint64 = 0u
                let inner_txn_params%0%%ConfigAssetDecimals_length#0: uint64 = 0u
                let inner_txn_params%0%%ConfigAssetDefaultFrozen_length#0: uint64 = 0u
                let inner_txn_params%0%%ConfigAssetUnitName_length#0: uint64 = 0u
                let inner_txn_params%0%%ConfigAssetName_length#0: uint64 = 0u
                let inner_txn_params%0%%ConfigAssetURL_length#0: uint64 = 0u
                let inner_txn_params%0%%ConfigAssetMetadataHash_length#0: uint64 = 0u
                let inner_txn_params%0%%ConfigAssetManager_length#0: uint64 = 0u
                let inner_txn_params%0%%ConfigAssetReserve_length#0: uint64 = 0u
                let inner_txn_params%0%%ConfigAssetFreeze_length#0: uint64 = 0u
                let inner_txn_params%0%%ConfigAssetClawback_length#0: uint64 = 0u
                let inner_txn_params%0%%FreezeAsset_length#0: uint64 = 0u
                let inner_txn_params%0%%FreezeAssetAccount_length#0: uint64 = 0u
                let inner_txn_params%0%%FreezeAssetFrozen_length#0: uint64 = 0u
                let inner_txn_params%0%%GlobalNumUint_length#0: uint64 = 0u
                let inner_txn_params%0%%GlobalNumByteSlice_length#0: uint64 = 0u
                let inner_txn_params%0%%LocalNumUint_length#0: uint64 = 0u
                let inner_txn_params%0%%LocalNumByteSlice_length#0: uint64 = 0u
                let inner_txn_params%0%%ExtraProgramPages_length#0: uint64 = 0u
                let inner_txn_params%0%%Nonparticipation_length#0: uint64 = 0u
                let inner_txn_params%0%%StateProofPK_length#0: uint64 = 0u
                let inner_txn_params%0%%Accounts_length#0: uint64 = 0u
                let inner_txn_params%0%%Assets_length#0: uint64 = 0u
                let inner_txn_params%0%%Applications_length#0: uint64 = 0u
                let inner_txn_params%0%%ApprovalProgramPages_length#0: uint64 = 0u
                let inner_txn_params%0%%ClearStateProgramPages_length#0: uint64 = 0u
                ((itxn_field ApplicationID) inner_txn_params%0%%param_ApplicationID_idx_0#0)
                ((itxn_field ApplicationArgs) inner_txn_params%0%%param_ApplicationArgs_idx_0#0)
                ((itxn_field ApplicationArgs) inner_txn_params%0%%param_ApplicationArgs_idx_1#0)
                ((itxn_field TypeEnum) inner_txn_params%0%%param_TypeEnum_idx_0#0)
                ((itxn_field Fee) inner_txn_params%0%%param_Fee_idx_0#0)
                goto block@1
            block@1: // next_txn_L132
                itxn_submit
                let awst_tmp%0#0: itxn_group_idx = itxn_group_idx(0)
                let awst_tmp%1#0: bytes = itxn[awst_tmp%0#0].LastLog
                let tmp%0#0: bytes = ((extract 4 0) awst_tmp%1#0)
                let tmp%1#0: bytes = ((extract 0 4) awst_tmp%1#0)
                let tmp%2#0: bool = (== tmp%1#0 0x151f7c75)
                let (value%0#0: bytes, check%0#0: bool) = (tmp%0#0, tmp%2#0)
                (assert check%0#0) // ARC4 prefix is valid
                let result1#0: bytes = ((extract 2 0) value%0#0)
                let _txn#0: itxn_group_idx = awst_tmp%0#0
                let _txn._is_last#0: bool = 1u
                let _txn.Sender#0: bytes = itxn[_txn#0].Sender
                let _txn.Fee#0: uint64 = itxn[_txn#0].Fee
                let _txn.FirstValid#0: uint64 = itxn[_txn#0].FirstValid
                let _txn.FirstValidTime#0: uint64 = itxn[_txn#0].FirstValidTime
                let _txn.LastValid#0: uint64 = itxn[_txn#0].LastValid
                let _txn.Note#0: bytes = itxn[_txn#0].Note
                let _txn.Lease#0: bytes = itxn[_txn#0].Lease
                let _txn.Receiver#0: bytes = itxn[_txn#0].Receiver
                let _txn.Amount#0: uint64 = itxn[_txn#0].Amount
                let _txn.CloseRemainderTo#0: bytes = itxn[_txn#0].CloseRemainderTo
                let _txn.VotePK#0: bytes = itxn[_txn#0].VotePK
                let _txn.SelectionPK#0: bytes = itxn[_txn#0].SelectionPK
                let _txn.VoteFirst#0: uint64 = itxn[_txn#0].VoteFirst
                let _txn.VoteLast#0: uint64 = itxn[_txn#0].VoteLast
                let _txn.VoteKeyDilution#0: uint64 = itxn[_txn#0].VoteKeyDilution
                let _txn.Type#0: bytes = itxn[_txn#0].Type
                let _txn.TypeEnum#0: uint64 = itxn[_txn#0].TypeEnum
                let _txn.XferAsset#0: uint64 = itxn[_txn#0].XferAsset
                let _txn.AssetAmount#0: uint64 = itxn[_txn#0].AssetAmount
                let _txn.AssetSender#0: bytes = itxn[_txn#0].AssetSender
                let _txn.AssetReceiver#0: bytes = itxn[_txn#0].AssetReceiver
                let _txn.AssetCloseTo#0: bytes = itxn[_txn#0].AssetCloseTo
                let _txn.GroupIndex#0: uint64 = itxn[_txn#0].GroupIndex
                let _txn.TxID#0: bytes = itxn[_txn#0].TxID
                let _txn.ApplicationID#0: uint64 = itxn[_txn#0].ApplicationID
                let _txn.OnCompletion#0: uint64 = itxn[_txn#0].OnCompletion
                let _txn.NumAppArgs#0: uint64 = itxn[_txn#0].NumAppArgs
                let _txn.NumAccounts#0: uint64 = itxn[_txn#0].NumAccounts
                let _txn.ApprovalProgram#0: bytes = itxn[_txn#0].ApprovalProgram
                let _txn.ClearStateProgram#0: bytes = itxn[_txn#0].ClearStateProgram
                let _txn.RekeyTo#0: bytes = itxn[_txn#0].RekeyTo
                let _txn.ConfigAsset#0: uint64 = itxn[_txn#0].ConfigAsset
                let _txn.ConfigAssetTotal#0: uint64 = itxn[_txn#0].ConfigAssetTotal
                let _txn.ConfigAssetDecimals#0: uint64 = itxn[_txn#0].ConfigAssetDecimals
                let _txn.ConfigAssetDefaultFrozen#0: bool = itxn[_txn#0].ConfigAssetDefaultFrozen
                let _txn.ConfigAssetUnitName#0: bytes = itxn[_txn#0].ConfigAssetUnitName
                let _txn.ConfigAssetName#0: bytes = itxn[_txn#0].ConfigAssetName
                let _txn.ConfigAssetURL#0: bytes = itxn[_txn#0].ConfigAssetURL
                let _txn.ConfigAssetMetadataHash#0: bytes = itxn[_txn#0].ConfigAssetMetadataHash
                let _txn.ConfigAssetManager#0: bytes = itxn[_txn#0].ConfigAssetManager
                let _txn.ConfigAssetReserve#0: bytes = itxn[_txn#0].ConfigAssetReserve
                let _txn.ConfigAssetFreeze#0: bytes = itxn[_txn#0].ConfigAssetFreeze
                let _txn.ConfigAssetClawback#0: bytes = itxn[_txn#0].ConfigAssetClawback
                let _txn.FreezeAsset#0: uint64 = itxn[_txn#0].FreezeAsset
                let _txn.FreezeAssetAccount#0: bytes = itxn[_txn#0].FreezeAssetAccount
                let _txn.FreezeAssetFrozen#0: bool = itxn[_txn#0].FreezeAssetFrozen
                let _txn.NumAssets#0: uint64 = itxn[_txn#0].NumAssets
                let _txn.NumApplications#0: uint64 = itxn[_txn#0].NumApplications
                let _txn.GlobalNumUint#0: uint64 = itxn[_txn#0].GlobalNumUint
                let _txn.GlobalNumByteSlice#0: uint64 = itxn[_txn#0].GlobalNumByteSlice
                let _txn.LocalNumUint#0: uint64 = itxn[_txn#0].LocalNumUint
                let _txn.LocalNumByteSlice#0: uint64 = itxn[_txn#0].LocalNumByteSlice
                let _txn.ExtraProgramPages#0: uint64 = itxn[_txn#0].ExtraProgramPages
                let _txn.Nonparticipation#0: bool = itxn[_txn#0].Nonparticipation
                let _txn.NumLogs#0: uint64 = itxn[_txn#0].NumLogs
                let _txn.CreatedAssetID#0: uint64 = itxn[_txn#0].CreatedAssetID
                let _txn.CreatedApplicationID#0: uint64 = itxn[_txn#0].CreatedApplicationID
                let _txn.LastLog#0: bytes = itxn[_txn#0].LastLog
                let _txn.StateProofPK#0: bytes = itxn[_txn#0].StateProofPK
                let _txn.NumApprovalProgramPages#0: uint64 = itxn[_txn#0].NumApprovalProgramPages
                let _txn.NumClearStateProgramPages#0: uint64 = itxn[_txn#0].NumClearStateProgramPages
                let tmp%3#0: bool = (== result1#0 "echo: b")
                (assert tmp%3#0)
                itxn_begin
                let inner_txn_params%1#0: itxn_field_set = itxn_field_set(1)
                let inner_txn_params%1%%param_Fee_idx_0#0: uint64 = 0u
                let inner_txn_params%1%%Fee_length#0: uint64 = 1u
                let inner_txn_params%1%%param_TypeEnum_idx_0#0: uint64 = appl
                let inner_txn_params%1%%TypeEnum_length#0: uint64 = 1u
                let awst_tmp%2#0: bytes = "b"
                let tmp%4#0: uint64 = (len awst_tmp%2#0)
                let tmp%5#0: bytes = (itob tmp%4#0)
                let tmp%6#0: bytes = ((substring 6 8) tmp%5#0)
                let tmp%7#0: bytes = (concat tmp%6#0 awst_tmp%2#0)
                let inner_txn_params%1%%param_ApplicationArgs_idx_0#0: bytes = method "echo_native_bytes(byte[])byte[]"
                let inner_txn_params%1%%param_ApplicationArgs_idx_1#0: bytes = tmp%7#0
                let inner_txn_params%1%%ApplicationArgs_length#0: uint64 = 2u
                let inner_txn_params%1%%param_ApplicationID_idx_0#0: uint64 = app#0
                let inner_txn_params%1%%ApplicationID_length#0: uint64 = 1u
                let inner_txn_params%1%%Sender_length#0: uint64 = 0u
                let inner_txn_params%1%%Note_length#0: uint64 = 0u
                let inner_txn_params%1%%Receiver_length#0: uint64 = 0u
                let inner_txn_params%1%%Amount_length#0: uint64 = 0u
                let inner_txn_params%1%%CloseRemainderTo_length#0: uint64 = 0u
                let inner_txn_params%1%%VotePK_length#0: uint64 = 0u
                let inner_txn_params%1%%SelectionPK_length#0: uint64 = 0u
                let inner_txn_params%1%%VoteFirst_length#0: uint64 = 0u
                let inner_txn_params%1%%VoteLast_length#0: uint64 = 0u
                let inner_txn_params%1%%VoteKeyDilution_length#0: uint64 = 0u
                let inner_txn_params%1%%Type_length#0: uint64 = 0u
                let inner_txn_params%1%%XferAsset_length#0: uint64 = 0u
                let inner_txn_params%1%%AssetAmount_length#0: uint64 = 0u
                let inner_txn_params%1%%AssetSender_length#0: uint64 = 0u
                let inner_txn_params%1%%AssetReceiver_length#0: uint64 = 0u
                let inner_txn_params%1%%AssetCloseTo_length#0: uint64 = 0u
                let inner_txn_params%1%%OnCompletion_length#0: uint64 = 0u
                let inner_txn_params%1%%ApprovalProgram_length#0: uint64 = 0u
                let inner_txn_params%1%%ClearStateProgram_length#0: uint64 = 0u
                let inner_txn_params%1%%RekeyTo_length#0: uint64 = 0u
                let inner_txn_params%1%%ConfigAsset_length#0: uint64 = 0u
                let inner_txn_params%1%%ConfigAssetTotal_length#0: uint64 = 0u
                let inner_txn_params%1%%ConfigAssetDecimals_length#0: uint64 = 0u
                let inner_txn_params%1%%ConfigAssetDefaultFrozen_length#0: uint64 = 0u
                let inner_txn_params%1%%ConfigAssetUnitName_length#0: uint64 = 0u
                let inner_txn_params%1%%ConfigAssetName_length#0: uint64 = 0u
                let inner_txn_params%1%%ConfigAssetURL_length#0: uint64 = 0u
                let inner_txn_params%1%%ConfigAssetMetadataHash_length#0: uint64 = 0u
                let inner_txn_params%1%%ConfigAssetManager_length#0: uint64 = 0u
                let inner_txn_params%1%%ConfigAssetReserve_length#0: uint64 = 0u
                let inner_txn_params%1%%ConfigAssetFreeze_length#0: uint64 = 0u
                let inner_txn_params%1%%ConfigAssetClawback_length#0: uint64 = 0u
                let inner_txn_params%1%%FreezeAsset_length#0: uint64 = 0u
                let inner_txn_params%1%%FreezeAssetAccount_length#0: uint64 = 0u
                let inner_txn_params%1%%FreezeAssetFrozen_length#0: uint64 = 0u
                let inner_txn_params%1%%GlobalNumUint_length#0: uint64 = 0u
                let inner_txn_params%1%%GlobalNumByteSlice_length#0: uint64 = 0u
                let inner_txn_params%1%%LocalNumUint_length#0: uint64 = 0u
                let inner_txn_params%1%%LocalNumByteSlice_length#0: uint64 = 0u
                let inner_txn_params%1%%ExtraProgramPages_length#0: uint64 = 0u
                let inner_txn_params%1%%Nonparticipation_length#0: uint64 = 0u
                let inner_txn_params%1%%StateProofPK_length#0: uint64 = 0u
                let inner_txn_params%1%%Accounts_length#0: uint64 = 0u
                let inner_txn_params%1%%Assets_length#0: uint64 = 0u
                let inner_txn_params%1%%Applications_length#0: uint64 = 0u
                let inner_txn_params%1%%ApprovalProgramPages_length#0: uint64 = 0u
                let inner_txn_params%1%%ClearStateProgramPages_length#0: uint64 = 0u
                ((itxn_field ApplicationID) inner_txn_params%1%%param_ApplicationID_idx_0#0)
                ((itxn_field ApplicationArgs) inner_txn_params%1%%param_ApplicationArgs_idx_0#0)
                ((itxn_field ApplicationArgs) inner_txn_params%1%%param_ApplicationArgs_idx_1#0)
                ((itxn_field TypeEnum) inner_txn_params%1%%param_TypeEnum_idx_0#0)
                ((itxn_field Fee) inner_txn_params%1%%param_Fee_idx_0#0)
                goto block@2
            block@2: // next_txn_L135
                itxn_submit
                let awst_tmp%3#0: itxn_group_idx = itxn_group_idx(0)
                let awst_tmp%4#0: bytes = itxn[awst_tmp%3#0].LastLog
                let tmp%8#0: bytes = ((extract 4 0) awst_tmp%4#0)
                let tmp%9#0: bytes = ((extract 0 4) awst_tmp%4#0)
                let tmp%10#0: bool = (== tmp%9#0 0x151f7c75)
                let (value%1#0: bytes, check%1#0: bool) = (tmp%8#0, tmp%10#0)
                (assert check%1#0) // ARC4 prefix is valid
                let result2#0: bytes = ((extract 2 0) value%1#0)
                let _txn#1: itxn_group_idx = awst_tmp%3#0
                let _txn._is_last#1: bool = 1u
                let _txn.Sender#1: bytes = itxn[_txn#1].Sender
                let _txn.Fee#1: uint64 = itxn[_txn#1].Fee
                let _txn.FirstValid#1: uint64 = itxn[_txn#1].FirstValid
                let _txn.FirstValidTime#1: uint64 = itxn[_txn#1].FirstValidTime
                let _txn.LastValid#1: uint64 = itxn[_txn#1].LastValid
                let _txn.Note#1: bytes = itxn[_txn#1].Note
                let _txn.Lease#1: bytes = itxn[_txn#1].Lease
                let _txn.Receiver#1: bytes = itxn[_txn#1].Receiver
                let _txn.Amount#1: uint64 = itxn[_txn#1].Amount
                let _txn.CloseRemainderTo#1: bytes = itxn[_txn#1].CloseRemainderTo
                let _txn.VotePK#1: bytes = itxn[_txn#1].VotePK
                let _txn.SelectionPK#1: bytes = itxn[_txn#1].SelectionPK
                let _txn.VoteFirst#1: uint64 = itxn[_txn#1].VoteFirst
                let _txn.VoteLast#1: uint64 = itxn[_txn#1].VoteLast
                let _txn.VoteKeyDilution#1: uint64 = itxn[_txn#1].VoteKeyDilution
                let _txn.Type#1: bytes = itxn[_txn#1].Type
                let _txn.TypeEnum#1: uint64 = itxn[_txn#1].TypeEnum
                let _txn.XferAsset#1: uint64 = itxn[_txn#1].XferAsset
                let _txn.AssetAmount#1: uint64 = itxn[_txn#1].AssetAmount
                let _txn.AssetSender#1: bytes = itxn[_txn#1].AssetSender
                let _txn.AssetReceiver#1: bytes = itxn[_txn#1].AssetReceiver
                let _txn.AssetCloseTo#1: bytes = itxn[_txn#1].AssetCloseTo
                let _txn.GroupIndex#1: uint64 = itxn[_txn#1].GroupIndex
                let _txn.TxID#1: bytes = itxn[_txn#1].TxID
                let _txn.ApplicationID#1: uint64 = itxn[_txn#1].ApplicationID
                let _txn.OnCompletion#1: uint64 = itxn[_txn#1].OnCompletion
                let _txn.NumAppArgs#1: uint64 = itxn[_txn#1].NumAppArgs
                let _txn.NumAccounts#1: uint64 = itxn[_txn#1].NumAccounts
                let _txn.ApprovalProgram#1: bytes = itxn[_txn#1].ApprovalProgram
                let _txn.ClearStateProgram#1: bytes = itxn[_txn#1].ClearStateProgram
                let _txn.RekeyTo#1: bytes = itxn[_txn#1].RekeyTo
                let _txn.ConfigAsset#1: uint64 = itxn[_txn#1].ConfigAsset
                let _txn.ConfigAssetTotal#1: uint64 = itxn[_txn#1].ConfigAssetTotal
                let _txn.ConfigAssetDecimals#1: uint64 = itxn[_txn#1].ConfigAssetDecimals
                let _txn.ConfigAssetDefaultFrozen#1: bool = itxn[_txn#1].ConfigAssetDefaultFrozen
                let _txn.ConfigAssetUnitName#1: bytes = itxn[_txn#1].ConfigAssetUnitName
                let _txn.ConfigAssetName#1: bytes = itxn[_txn#1].ConfigAssetName
                let _txn.ConfigAssetURL#1: bytes = itxn[_txn#1].ConfigAssetURL
                let _txn.ConfigAssetMetadataHash#1: bytes = itxn[_txn#1].ConfigAssetMetadataHash
                let _txn.ConfigAssetManager#1: bytes = itxn[_txn#1].ConfigAssetManager
                let _txn.ConfigAssetReserve#1: bytes = itxn[_txn#1].ConfigAssetReserve
                let _txn.ConfigAssetFreeze#1: bytes = itxn[_txn#1].ConfigAssetFreeze
                let _txn.ConfigAssetClawback#1: bytes = itxn[_txn#1].ConfigAssetClawback
                let _txn.FreezeAsset#1: uint64 = itxn[_txn#1].FreezeAsset
                let _txn.FreezeAssetAccount#1: bytes = itxn[_txn#1].FreezeAssetAccount
                let _txn.FreezeAssetFrozen#1: bool = itxn[_txn#1].FreezeAssetFrozen
                let _txn.NumAssets#1: uint64 = itxn[_txn#1].NumAssets
                let _txn.NumApplications#1: uint64 = itxn[_txn#1].NumApplications
                let _txn.GlobalNumUint#1: uint64 = itxn[_txn#1].GlobalNumUint
                let _txn.GlobalNumByteSlice#1: uint64 = itxn[_txn#1].GlobalNumByteSlice
                let _txn.LocalNumUint#1: uint64 = itxn[_txn#1].LocalNumUint
                let _txn.LocalNumByteSlice#1: uint64 = itxn[_txn#1].LocalNumByteSlice
                let _txn.ExtraProgramPages#1: uint64 = itxn[_txn#1].ExtraProgramPages
                let _txn.Nonparticipation#1: bool = itxn[_txn#1].Nonparticipation
                let _txn.NumLogs#1: uint64 = itxn[_txn#1].NumLogs
                let _txn.CreatedAssetID#1: uint64 = itxn[_txn#1].CreatedAssetID
                let _txn.CreatedApplicationID#1: uint64 = itxn[_txn#1].CreatedApplicationID
                let _txn.LastLog#1: bytes = itxn[_txn#1].LastLog
                let _txn.StateProofPK#1: bytes = itxn[_txn#1].StateProofPK
                let _txn.NumApprovalProgramPages#1: uint64 = itxn[_txn#1].NumApprovalProgramPages
                let _txn.NumClearStateProgramPages#1: uint64 = itxn[_txn#1].NumClearStateProgramPages
                let tmp%11#0: bool = (== result2#0 result1#0)
                (assert tmp%11#0)
                itxn_begin
                let inner_txn_params%2#0: itxn_field_set = itxn_field_set(2)
                let inner_txn_params%2%%param_Fee_idx_0#0: uint64 = 0u
                let inner_txn_params%2%%Fee_length#0: uint64 = 1u
                let inner_txn_params%2%%param_TypeEnum_idx_0#0: uint64 = appl
                let inner_txn_params%2%%TypeEnum_length#0: uint64 = 1u
                let inner_txn_params%2%%param_ApplicationArgs_idx_0#0: bytes = method "echo_native_bytes(byte[])byte[]"
                let inner_txn_params%2%%param_ApplicationArgs_idx_1#0: bytes = 0x000162
                let inner_txn_params%2%%ApplicationArgs_length#0: uint64 = 2u
                let inner_txn_params%2%%param_ApplicationID_idx_0#0: uint64 = app#0
                let inner_txn_params%2%%ApplicationID_length#0: uint64 = 1u
                let inner_txn_params%2%%Sender_length#0: uint64 = 0u
                let inner_txn_params%2%%Note_length#0: uint64 = 0u
                let inner_txn_params%2%%Receiver_length#0: uint64 = 0u
                let inner_txn_params%2%%Amount_length#0: uint64 = 0u
                let inner_txn_params%2%%CloseRemainderTo_length#0: uint64 = 0u
                let inner_txn_params%2%%VotePK_length#0: uint64 = 0u
                let inner_txn_params%2%%SelectionPK_length#0: uint64 = 0u
                let inner_txn_params%2%%VoteFirst_length#0: uint64 = 0u
                let inner_txn_params%2%%VoteLast_length#0: uint64 = 0u
                let inner_txn_params%2%%VoteKeyDilution_length#0: uint64 = 0u
                let inner_txn_params%2%%Type_length#0: uint64 = 0u
                let inner_txn_params%2%%XferAsset_length#0: uint64 = 0u
                let inner_txn_params%2%%AssetAmount_length#0: uint64 = 0u
                let inner_txn_params%2%%AssetSender_length#0: uint64 = 0u
                let inner_txn_params%2%%AssetReceiver_length#0: uint64 = 0u
                let inner_txn_params%2%%AssetCloseTo_length#0: uint64 = 0u
                let inner_txn_params%2%%OnCompletion_length#0: uint64 = 0u
                let inner_txn_params%2%%ApprovalProgram_length#0: uint64 = 0u
                let inner_txn_params%2%%ClearStateProgram_length#0: uint64 = 0u
                let inner_txn_params%2%%RekeyTo_length#0: uint64 = 0u
                let inner_txn_params%2%%ConfigAsset_length#0: uint64 = 0u
                let inner_txn_params%2%%ConfigAssetTotal_length#0: uint64 = 0u
                let inner_txn_params%2%%ConfigAssetDecimals_length#0: uint64 = 0u
                let inner_txn_params%2%%ConfigAssetDefaultFrozen_length#0: uint64 = 0u
                let inner_txn_params%2%%ConfigAssetUnitName_length#0: uint64 = 0u
                let inner_txn_params%2%%ConfigAssetName_length#0: uint64 = 0u
                let inner_txn_params%2%%ConfigAssetURL_length#0: uint64 = 0u
                let inner_txn_params%2%%ConfigAssetMetadataHash_length#0: uint64 = 0u
                let inner_txn_params%2%%ConfigAssetManager_length#0: uint64 = 0u
                let inner_txn_params%2%%ConfigAssetReserve_length#0: uint64 = 0u
                let inner_txn_params%2%%ConfigAssetFreeze_length#0: uint64 = 0u
                let inner_txn_params%2%%ConfigAssetClawback_length#0: uint64 = 0u
                let inner_txn_params%2%%FreezeAsset_length#0: uint64 = 0u
                let inner_txn_params%2%%FreezeAssetAccount_length#0: uint64 = 0u
                let inner_txn_params%2%%FreezeAssetFrozen_length#0: uint64 = 0u
                let inner_txn_params%2%%GlobalNumUint_length#0: uint64 = 0u
                let inner_txn_params%2%%GlobalNumByteSlice_length#0: uint64 = 0u
                let inner_txn_params%2%%LocalNumUint_length#0: uint64 = 0u
                let inner_txn_params%2%%LocalNumByteSlice_length#0: uint64 = 0u
                let inner_txn_params%2%%ExtraProgramPages_length#0: uint64 = 0u
                let inner_txn_params%2%%Nonparticipation_length#0: uint64 = 0u
                let inner_txn_params%2%%StateProofPK_length#0: uint64 = 0u
                let inner_txn_params%2%%Accounts_length#0: uint64 = 0u
                let inner_txn_params%2%%Assets_length#0: uint64 = 0u
                let inner_txn_params%2%%Applications_length#0: uint64 = 0u
                let inner_txn_params%2%%ApprovalProgramPages_length#0: uint64 = 0u
                let inner_txn_params%2%%ClearStateProgramPages_length#0: uint64 = 0u
                ((itxn_field ApplicationID) inner_txn_params%2%%param_ApplicationID_idx_0#0)
                ((itxn_field ApplicationArgs) inner_txn_params%2%%param_ApplicationArgs_idx_0#0)
                ((itxn_field ApplicationArgs) inner_txn_params%2%%param_ApplicationArgs_idx_1#0)
                ((itxn_field TypeEnum) inner_txn_params%2%%param_TypeEnum_idx_0#0)
                ((itxn_field Fee) inner_txn_params%2%%param_Fee_idx_0#0)
                goto block@3
            block@3: // next_txn_L138
                itxn_submit
                let awst_tmp%5#0: itxn_group_idx = itxn_group_idx(0)
                let awst_tmp%6#0: bytes = itxn[awst_tmp%5#0].LastLog
                let tmp%12#0: bytes = ((extract 4 0) awst_tmp%6#0)
                let tmp%13#0: bytes = ((extract 0 4) awst_tmp%6#0)
                let tmp%14#0: bool = (== tmp%13#0 0x151f7c75)
                let (value%2#0: bytes, check%2#0: bool) = (tmp%12#0, tmp%14#0)
                (assert check%2#0) // ARC4 prefix is valid
                let result3#0: bytes = ((extract 2 0) value%2#0)
                let _txn#2: itxn_group_idx = awst_tmp%5#0
                let _txn._is_last#2: bool = 1u
                let _txn.Sender#2: bytes = itxn[_txn#2].Sender
                let _txn.Fee#2: uint64 = itxn[_txn#2].Fee
                let _txn.FirstValid#2: uint64 = itxn[_txn#2].FirstValid
                let _txn.FirstValidTime#2: uint64 = itxn[_txn#2].FirstValidTime
                let _txn.LastValid#2: uint64 = itxn[_txn#2].LastValid
                let _txn.Note#2: bytes = itxn[_txn#2].Note
                let _txn.Lease#2: bytes = itxn[_txn#2].Lease
                let _txn.Receiver#2: bytes = itxn[_txn#2].Receiver
                let _txn.Amount#2: uint64 = itxn[_txn#2].Amount
                let _txn.CloseRemainderTo#2: bytes = itxn[_txn#2].CloseRemainderTo
                let _txn.VotePK#2: bytes = itxn[_txn#2].VotePK
                let _txn.SelectionPK#2: bytes = itxn[_txn#2].SelectionPK
                let _txn.VoteFirst#2: uint64 = itxn[_txn#2].VoteFirst
                let _txn.VoteLast#2: uint64 = itxn[_txn#2].VoteLast
                let _txn.VoteKeyDilution#2: uint64 = itxn[_txn#2].VoteKeyDilution
                let _txn.Type#2: bytes = itxn[_txn#2].Type
                let _txn.TypeEnum#2: uint64 = itxn[_txn#2].TypeEnum
                let _txn.XferAsset#2: uint64 = itxn[_txn#2].XferAsset
                let _txn.AssetAmount#2: uint64 = itxn[_txn#2].AssetAmount
                let _txn.AssetSender#2: bytes = itxn[_txn#2].AssetSender
                let _txn.AssetReceiver#2: bytes = itxn[_txn#2].AssetReceiver
                let _txn.AssetCloseTo#2: bytes = itxn[_txn#2].AssetCloseTo
                let _txn.GroupIndex#2: uint64 = itxn[_txn#2].GroupIndex
                let _txn.TxID#2: bytes = itxn[_txn#2].TxID
                let _txn.ApplicationID#2: uint64 = itxn[_txn#2].ApplicationID
                let _txn.OnCompletion#2: uint64 = itxn[_txn#2].OnCompletion
                let _txn.NumAppArgs#2: uint64 = itxn[_txn#2].NumAppArgs
                let _txn.NumAccounts#2: uint64 = itxn[_txn#2].NumAccounts
                let _txn.ApprovalProgram#2: bytes = itxn[_txn#2].ApprovalProgram
                let _txn.ClearStateProgram#2: bytes = itxn[_txn#2].ClearStateProgram
                let _txn.RekeyTo#2: bytes = itxn[_txn#2].RekeyTo
                let _txn.ConfigAsset#2: uint64 = itxn[_txn#2].ConfigAsset
                let _txn.ConfigAssetTotal#2: uint64 = itxn[_txn#2].ConfigAssetTotal
                let _txn.ConfigAssetDecimals#2: uint64 = itxn[_txn#2].ConfigAssetDecimals
                let _txn.ConfigAssetDefaultFrozen#2: bool = itxn[_txn#2].ConfigAssetDefaultFrozen
                let _txn.ConfigAssetUnitName#2: bytes = itxn[_txn#2].ConfigAssetUnitName
                let _txn.ConfigAssetName#2: bytes = itxn[_txn#2].ConfigAssetName
                let _txn.ConfigAssetURL#2: bytes = itxn[_txn#2].ConfigAssetURL
                let _txn.ConfigAssetMetadataHash#2: bytes = itxn[_txn#2].ConfigAssetMetadataHash
                let _txn.ConfigAssetManager#2: bytes = itxn[_txn#2].ConfigAssetManager
                let _txn.ConfigAssetReserve#2: bytes = itxn[_txn#2].ConfigAssetReserve
                let _txn.ConfigAssetFreeze#2: bytes = itxn[_txn#2].ConfigAssetFreeze
                let _txn.ConfigAssetClawback#2: bytes = itxn[_txn#2].ConfigAssetClawback
                let _txn.FreezeAsset#2: uint64 = itxn[_txn#2].FreezeAsset
                let _txn.FreezeAssetAccount#2: bytes = itxn[_txn#2].FreezeAssetAccount
                let _txn.FreezeAssetFrozen#2: bool = itxn[_txn#2].FreezeAssetFrozen
                let _txn.NumAssets#2: uint64 = itxn[_txn#2].NumAssets
                let _txn.NumApplications#2: uint64 = itxn[_txn#2].NumApplications
                let _txn.GlobalNumUint#2: uint64 = itxn[_txn#2].GlobalNumUint
                let _txn.GlobalNumByteSlice#2: uint64 = itxn[_txn#2].GlobalNumByteSlice
                let _txn.LocalNumUint#2: uint64 = itxn[_txn#2].LocalNumUint
                let _txn.LocalNumByteSlice#2: uint64 = itxn[_txn#2].LocalNumByteSlice
                let _txn.ExtraProgramPages#2: uint64 = itxn[_txn#2].ExtraProgramPages
                let _txn.Nonparticipation#2: bool = itxn[_txn#2].Nonparticipation
                let _txn.NumLogs#2: uint64 = itxn[_txn#2].NumLogs
                let _txn.CreatedAssetID#2: uint64 = itxn[_txn#2].CreatedAssetID
                let _txn.CreatedApplicationID#2: uint64 = itxn[_txn#2].CreatedApplicationID
                let _txn.LastLog#2: bytes = itxn[_txn#2].LastLog
                let _txn.StateProofPK#2: bytes = itxn[_txn#2].StateProofPK
                let _txn.NumApprovalProgramPages#2: uint64 = itxn[_txn#2].NumApprovalProgramPages
                let _txn.NumClearStateProgramPages#2: uint64 = itxn[_txn#2].NumClearStateProgramPages
                let tmp%15#0: bool = (== result3#0 result1#0)
                (assert tmp%15#0)
                return 
        
        subroutine test_cases.typed_abi_call.typed_c2c.Greeter.test_native_uint64(app: uint64) -> void:
            block@0: // L143
                itxn_begin
                let inner_txn_params%0#0: itxn_field_set = itxn_field_set(0)
                let inner_txn_params%0%%param_Fee_idx_0#0: uint64 = 0u
                let inner_txn_params%0%%Fee_length#0: uint64 = 1u
                let inner_txn_params%0%%param_TypeEnum_idx_0#0: uint64 = appl
                let inner_txn_params%0%%TypeEnum_length#0: uint64 = 1u
                let inner_txn_params%0%%param_ApplicationArgs_idx_0#0: bytes = method "echo_native_uint64(uint64)uint64"
                let inner_txn_params%0%%param_ApplicationArgs_idx_1#0: bytes = 0x0000000000000001
                let inner_txn_params%0%%ApplicationArgs_length#0: uint64 = 2u
                let inner_txn_params%0%%param_ApplicationID_idx_0#0: uint64 = app#0
                let inner_txn_params%0%%ApplicationID_length#0: uint64 = 1u
                let inner_txn_params%0%%Sender_length#0: uint64 = 0u
                let inner_txn_params%0%%Note_length#0: uint64 = 0u
                let inner_txn_params%0%%Receiver_length#0: uint64 = 0u
                let inner_txn_params%0%%Amount_length#0: uint64 = 0u
                let inner_txn_params%0%%CloseRemainderTo_length#0: uint64 = 0u
                let inner_txn_params%0%%VotePK_length#0: uint64 = 0u
                let inner_txn_params%0%%SelectionPK_length#0: uint64 = 0u
                let inner_txn_params%0%%VoteFirst_length#0: uint64 = 0u
                let inner_txn_params%0%%VoteLast_length#0: uint64 = 0u
                let inner_txn_params%0%%VoteKeyDilution_length#0: uint64 = 0u
                let inner_txn_params%0%%Type_length#0: uint64 = 0u
                let inner_txn_params%0%%XferAsset_length#0: uint64 = 0u
                let inner_txn_params%0%%AssetAmount_length#0: uint64 = 0u
                let inner_txn_params%0%%AssetSender_length#0: uint64 = 0u
                let inner_txn_params%0%%AssetReceiver_length#0: uint64 = 0u
                let inner_txn_params%0%%AssetCloseTo_length#0: uint64 = 0u
                let inner_txn_params%0%%OnCompletion_length#0: uint64 = 0u
                let inner_txn_params%0%%ApprovalProgram_length#0: uint64 = 0u
                let inner_txn_params%0%%ClearStateProgram_length#0: uint64 = 0u
                let inner_txn_params%0%%RekeyTo_length#0: uint64 = 0u
                let inner_txn_params%0%%ConfigAsset_length#0: uint64 = 0u
                let inner_txn_params%0%%ConfigAssetTotal_length#0: uint64 = 0u
                let inner_txn_params%0%%ConfigAssetDecimals_length#0: uint64 = 0u
                let inner_txn_params%0%%ConfigAssetDefaultFrozen_length#0: uint64 = 0u
                let inner_txn_params%0%%ConfigAssetUnitName_length#0: uint64 = 0u
                let inner_txn_params%0%%ConfigAssetName_length#0: uint64 = 0u
                let inner_txn_params%0%%ConfigAssetURL_length#0: uint64 = 0u
                let inner_txn_params%0%%ConfigAssetMetadataHash_length#0: uint64 = 0u
                let inner_txn_params%0%%ConfigAssetManager_length#0: uint64 = 0u
                let inner_txn_params%0%%ConfigAssetReserve_length#0: uint64 = 0u
                let inner_txn_params%0%%ConfigAssetFreeze_length#0: uint64 = 0u
                let inner_txn_params%0%%ConfigAssetClawback_length#0: uint64 = 0u
                let inner_txn_params%0%%FreezeAsset_length#0: uint64 = 0u
                let inner_txn_params%0%%FreezeAssetAccount_length#0: uint64 = 0u
                let inner_txn_params%0%%FreezeAssetFrozen_length#0: uint64 = 0u
                let inner_txn_params%0%%GlobalNumUint_length#0: uint64 = 0u
                let inner_txn_params%0%%GlobalNumByteSlice_length#0: uint64 = 0u
                let inner_txn_params%0%%LocalNumUint_length#0: uint64 = 0u
                let inner_txn_params%0%%LocalNumByteSlice_length#0: uint64 = 0u
                let inner_txn_params%0%%ExtraProgramPages_length#0: uint64 = 0u
                let inner_txn_params%0%%Nonparticipation_length#0: uint64 = 0u
                let inner_txn_params%0%%StateProofPK_length#0: uint64 = 0u
                let inner_txn_params%0%%Accounts_length#0: uint64 = 0u
                let inner_txn_params%0%%Assets_length#0: uint64 = 0u
                let inner_txn_params%0%%Applications_length#0: uint64 = 0u
                let inner_txn_params%0%%ApprovalProgramPages_length#0: uint64 = 0u
                let inner_txn_params%0%%ClearStateProgramPages_length#0: uint64 = 0u
                ((itxn_field ApplicationID) inner_txn_params%0%%param_ApplicationID_idx_0#0)
                ((itxn_field ApplicationArgs) inner_txn_params%0%%param_ApplicationArgs_idx_0#0)
                ((itxn_field ApplicationArgs) inner_txn_params%0%%param_ApplicationArgs_idx_1#0)
                ((itxn_field TypeEnum) inner_txn_params%0%%param_TypeEnum_idx_0#0)
                ((itxn_field Fee) inner_txn_params%0%%param_Fee_idx_0#0)
                goto block@1
            block@1: // next_txn_L145
                itxn_submit
                let awst_tmp%0#0: itxn_group_idx = itxn_group_idx(0)
                let awst_tmp%1#0: bytes = itxn[awst_tmp%0#0].LastLog
                let tmp%0#0: bytes = ((extract 4 0) awst_tmp%1#0)
                let tmp%1#0: bytes = ((extract 0 4) awst_tmp%1#0)
                let tmp%2#0: bool = (== tmp%1#0 0x151f7c75)
                let (value%0#0: bytes, check%0#0: bool) = (tmp%0#0, tmp%2#0)
                (assert check%0#0) // ARC4 prefix is valid
                let result1#0: uint64 = (btoi value%0#0)
                let _txn#0: itxn_group_idx = awst_tmp%0#0
                let _txn._is_last#0: bool = 1u
                let _txn.Sender#0: bytes = itxn[_txn#0].Sender
                let _txn.Fee#0: uint64 = itxn[_txn#0].Fee
                let _txn.FirstValid#0: uint64 = itxn[_txn#0].FirstValid
                let _txn.FirstValidTime#0: uint64 = itxn[_txn#0].FirstValidTime
                let _txn.LastValid#0: uint64 = itxn[_txn#0].LastValid
                let _txn.Note#0: bytes = itxn[_txn#0].Note
                let _txn.Lease#0: bytes = itxn[_txn#0].Lease
                let _txn.Receiver#0: bytes = itxn[_txn#0].Receiver
                let _txn.Amount#0: uint64 = itxn[_txn#0].Amount
                let _txn.CloseRemainderTo#0: bytes = itxn[_txn#0].CloseRemainderTo
                let _txn.VotePK#0: bytes = itxn[_txn#0].VotePK
                let _txn.SelectionPK#0: bytes = itxn[_txn#0].SelectionPK
                let _txn.VoteFirst#0: uint64 = itxn[_txn#0].VoteFirst
                let _txn.VoteLast#0: uint64 = itxn[_txn#0].VoteLast
                let _txn.VoteKeyDilution#0: uint64 = itxn[_txn#0].VoteKeyDilution
                let _txn.Type#0: bytes = itxn[_txn#0].Type
                let _txn.TypeEnum#0: uint64 = itxn[_txn#0].TypeEnum
                let _txn.XferAsset#0: uint64 = itxn[_txn#0].XferAsset
                let _txn.AssetAmount#0: uint64 = itxn[_txn#0].AssetAmount
                let _txn.AssetSender#0: bytes = itxn[_txn#0].AssetSender
                let _txn.AssetReceiver#0: bytes = itxn[_txn#0].AssetReceiver
                let _txn.AssetCloseTo#0: bytes = itxn[_txn#0].AssetCloseTo
                let _txn.GroupIndex#0: uint64 = itxn[_txn#0].GroupIndex
                let _txn.TxID#0: bytes = itxn[_txn#0].TxID
                let _txn.ApplicationID#0: uint64 = itxn[_txn#0].ApplicationID
                let _txn.OnCompletion#0: uint64 = itxn[_txn#0].OnCompletion
                let _txn.NumAppArgs#0: uint64 = itxn[_txn#0].NumAppArgs
                let _txn.NumAccounts#0: uint64 = itxn[_txn#0].NumAccounts
                let _txn.ApprovalProgram#0: bytes = itxn[_txn#0].ApprovalProgram
                let _txn.ClearStateProgram#0: bytes = itxn[_txn#0].ClearStateProgram
                let _txn.RekeyTo#0: bytes = itxn[_txn#0].RekeyTo
                let _txn.ConfigAsset#0: uint64 = itxn[_txn#0].ConfigAsset
                let _txn.ConfigAssetTotal#0: uint64 = itxn[_txn#0].ConfigAssetTotal
                let _txn.ConfigAssetDecimals#0: uint64 = itxn[_txn#0].ConfigAssetDecimals
                let _txn.ConfigAssetDefaultFrozen#0: bool = itxn[_txn#0].ConfigAssetDefaultFrozen
                let _txn.ConfigAssetUnitName#0: bytes = itxn[_txn#0].ConfigAssetUnitName
                let _txn.ConfigAssetName#0: bytes = itxn[_txn#0].ConfigAssetName
                let _txn.ConfigAssetURL#0: bytes = itxn[_txn#0].ConfigAssetURL
                let _txn.ConfigAssetMetadataHash#0: bytes = itxn[_txn#0].ConfigAssetMetadataHash
                let _txn.ConfigAssetManager#0: bytes = itxn[_txn#0].ConfigAssetManager
                let _txn.ConfigAssetReserve#0: bytes = itxn[_txn#0].ConfigAssetReserve
                let _txn.ConfigAssetFreeze#0: bytes = itxn[_txn#0].ConfigAssetFreeze
                let _txn.ConfigAssetClawback#0: bytes = itxn[_txn#0].ConfigAssetClawback
                let _txn.FreezeAsset#0: uint64 = itxn[_txn#0].FreezeAsset
                let _txn.FreezeAssetAccount#0: bytes = itxn[_txn#0].FreezeAssetAccount
                let _txn.FreezeAssetFrozen#0: bool = itxn[_txn#0].FreezeAssetFrozen
                let _txn.NumAssets#0: uint64 = itxn[_txn#0].NumAssets
                let _txn.NumApplications#0: uint64 = itxn[_txn#0].NumApplications
                let _txn.GlobalNumUint#0: uint64 = itxn[_txn#0].GlobalNumUint
                let _txn.GlobalNumByteSlice#0: uint64 = itxn[_txn#0].GlobalNumByteSlice
                let _txn.LocalNumUint#0: uint64 = itxn[_txn#0].LocalNumUint
                let _txn.LocalNumByteSlice#0: uint64 = itxn[_txn#0].LocalNumByteSlice
                let _txn.ExtraProgramPages#0: uint64 = itxn[_txn#0].ExtraProgramPages
                let _txn.Nonparticipation#0: bool = itxn[_txn#0].Nonparticipation
                let _txn.NumLogs#0: uint64 = itxn[_txn#0].NumLogs
                let _txn.CreatedAssetID#0: uint64 = itxn[_txn#0].CreatedAssetID
                let _txn.CreatedApplicationID#0: uint64 = itxn[_txn#0].CreatedApplicationID
                let _txn.LastLog#0: bytes = itxn[_txn#0].LastLog
                let _txn.StateProofPK#0: bytes = itxn[_txn#0].StateProofPK
                let _txn.NumApprovalProgramPages#0: uint64 = itxn[_txn#0].NumApprovalProgramPages
                let _txn.NumClearStateProgramPages#0: uint64 = itxn[_txn#0].NumClearStateProgramPages
                let tmp%3#0: bool = (== result1#0 2u)
                (assert tmp%3#0)
                itxn_begin
                let inner_txn_params%1#0: itxn_field_set = itxn_field_set(1)
                let inner_txn_params%1%%param_Fee_idx_0#0: uint64 = 0u
                let inner_txn_params%1%%Fee_length#0: uint64 = 1u
                let inner_txn_params%1%%param_TypeEnum_idx_0#0: uint64 = appl
                let inner_txn_params%1%%TypeEnum_length#0: uint64 = 1u
                let val_as_bytes%0#0: bytes = (itob 1u)
                let inner_txn_params%1%%param_ApplicationArgs_idx_0#0: bytes = method "echo_native_uint64(uint64)uint64"
                let inner_txn_params%1%%param_ApplicationArgs_idx_1#0: bytes = val_as_bytes%0#0
                let inner_txn_params%1%%ApplicationArgs_length#0: uint64 = 2u
                let inner_txn_params%1%%param_ApplicationID_idx_0#0: uint64 = app#0
                let inner_txn_params%1%%ApplicationID_length#0: uint64 = 1u
                let inner_txn_params%1%%Sender_length#0: uint64 = 0u
                let inner_txn_params%1%%Note_length#0: uint64 = 0u
                let inner_txn_params%1%%Receiver_length#0: uint64 = 0u
                let inner_txn_params%1%%Amount_length#0: uint64 = 0u
                let inner_txn_params%1%%CloseRemainderTo_length#0: uint64 = 0u
                let inner_txn_params%1%%VotePK_length#0: uint64 = 0u
                let inner_txn_params%1%%SelectionPK_length#0: uint64 = 0u
                let inner_txn_params%1%%VoteFirst_length#0: uint64 = 0u
                let inner_txn_params%1%%VoteLast_length#0: uint64 = 0u
                let inner_txn_params%1%%VoteKeyDilution_length#0: uint64 = 0u
                let inner_txn_params%1%%Type_length#0: uint64 = 0u
                let inner_txn_params%1%%XferAsset_length#0: uint64 = 0u
                let inner_txn_params%1%%AssetAmount_length#0: uint64 = 0u
                let inner_txn_params%1%%AssetSender_length#0: uint64 = 0u
                let inner_txn_params%1%%AssetReceiver_length#0: uint64 = 0u
                let inner_txn_params%1%%AssetCloseTo_length#0: uint64 = 0u
                let inner_txn_params%1%%OnCompletion_length#0: uint64 = 0u
                let inner_txn_params%1%%ApprovalProgram_length#0: uint64 = 0u
                let inner_txn_params%1%%ClearStateProgram_length#0: uint64 = 0u
                let inner_txn_params%1%%RekeyTo_length#0: uint64 = 0u
                let inner_txn_params%1%%ConfigAsset_length#0: uint64 = 0u
                let inner_txn_params%1%%ConfigAssetTotal_length#0: uint64 = 0u
                let inner_txn_params%1%%ConfigAssetDecimals_length#0: uint64 = 0u
                let inner_txn_params%1%%ConfigAssetDefaultFrozen_length#0: uint64 = 0u
                let inner_txn_params%1%%ConfigAssetUnitName_length#0: uint64 = 0u
                let inner_txn_params%1%%ConfigAssetName_length#0: uint64 = 0u
                let inner_txn_params%1%%ConfigAssetURL_length#0: uint64 = 0u
                let inner_txn_params%1%%ConfigAssetMetadataHash_length#0: uint64 = 0u
                let inner_txn_params%1%%ConfigAssetManager_length#0: uint64 = 0u
                let inner_txn_params%1%%ConfigAssetReserve_length#0: uint64 = 0u
                let inner_txn_params%1%%ConfigAssetFreeze_length#0: uint64 = 0u
                let inner_txn_params%1%%ConfigAssetClawback_length#0: uint64 = 0u
                let inner_txn_params%1%%FreezeAsset_length#0: uint64 = 0u
                let inner_txn_params%1%%FreezeAssetAccount_length#0: uint64 = 0u
                let inner_txn_params%1%%FreezeAssetFrozen_length#0: uint64 = 0u
                let inner_txn_params%1%%GlobalNumUint_length#0: uint64 = 0u
                let inner_txn_params%1%%GlobalNumByteSlice_length#0: uint64 = 0u
                let inner_txn_params%1%%LocalNumUint_length#0: uint64 = 0u
                let inner_txn_params%1%%LocalNumByteSlice_length#0: uint64 = 0u
                let inner_txn_params%1%%ExtraProgramPages_length#0: uint64 = 0u
                let inner_txn_params%1%%Nonparticipation_length#0: uint64 = 0u
                let inner_txn_params%1%%StateProofPK_length#0: uint64 = 0u
                let inner_txn_params%1%%Accounts_length#0: uint64 = 0u
                let inner_txn_params%1%%Assets_length#0: uint64 = 0u
                let inner_txn_params%1%%Applications_length#0: uint64 = 0u
                let inner_txn_params%1%%ApprovalProgramPages_length#0: uint64 = 0u
                let inner_txn_params%1%%ClearStateProgramPages_length#0: uint64 = 0u
                ((itxn_field ApplicationID) inner_txn_params%1%%param_ApplicationID_idx_0#0)
                ((itxn_field ApplicationArgs) inner_txn_params%1%%param_ApplicationArgs_idx_0#0)
                ((itxn_field ApplicationArgs) inner_txn_params%1%%param_ApplicationArgs_idx_1#0)
                ((itxn_field TypeEnum) inner_txn_params%1%%param_TypeEnum_idx_0#0)
                ((itxn_field Fee) inner_txn_params%1%%param_Fee_idx_0#0)
                goto block@2
            block@2: // next_txn_L148
                itxn_submit
                let awst_tmp%2#0: itxn_group_idx = itxn_group_idx(0)
                let awst_tmp%3#0: bytes = itxn[awst_tmp%2#0].LastLog
                let tmp%4#0: bytes = ((extract 4 0) awst_tmp%3#0)
                let tmp%5#0: bytes = ((extract 0 4) awst_tmp%3#0)
                let tmp%6#0: bool = (== tmp%5#0 0x151f7c75)
                let (value%1#0: bytes, check%1#0: bool) = (tmp%4#0, tmp%6#0)
                (assert check%1#0) // ARC4 prefix is valid
                let result2#0: uint64 = (btoi value%1#0)
                let _txn#1: itxn_group_idx = awst_tmp%2#0
                let _txn._is_last#1: bool = 1u
                let _txn.Sender#1: bytes = itxn[_txn#1].Sender
                let _txn.Fee#1: uint64 = itxn[_txn#1].Fee
                let _txn.FirstValid#1: uint64 = itxn[_txn#1].FirstValid
                let _txn.FirstValidTime#1: uint64 = itxn[_txn#1].FirstValidTime
                let _txn.LastValid#1: uint64 = itxn[_txn#1].LastValid
                let _txn.Note#1: bytes = itxn[_txn#1].Note
                let _txn.Lease#1: bytes = itxn[_txn#1].Lease
                let _txn.Receiver#1: bytes = itxn[_txn#1].Receiver
                let _txn.Amount#1: uint64 = itxn[_txn#1].Amount
                let _txn.CloseRemainderTo#1: bytes = itxn[_txn#1].CloseRemainderTo
                let _txn.VotePK#1: bytes = itxn[_txn#1].VotePK
                let _txn.SelectionPK#1: bytes = itxn[_txn#1].SelectionPK
                let _txn.VoteFirst#1: uint64 = itxn[_txn#1].VoteFirst
                let _txn.VoteLast#1: uint64 = itxn[_txn#1].VoteLast
                let _txn.VoteKeyDilution#1: uint64 = itxn[_txn#1].VoteKeyDilution
                let _txn.Type#1: bytes = itxn[_txn#1].Type
                let _txn.TypeEnum#1: uint64 = itxn[_txn#1].TypeEnum
                let _txn.XferAsset#1: uint64 = itxn[_txn#1].XferAsset
                let _txn.AssetAmount#1: uint64 = itxn[_txn#1].AssetAmount
                let _txn.AssetSender#1: bytes = itxn[_txn#1].AssetSender
                let _txn.AssetReceiver#1: bytes = itxn[_txn#1].AssetReceiver
                let _txn.AssetCloseTo#1: bytes = itxn[_txn#1].AssetCloseTo
                let _txn.GroupIndex#1: uint64 = itxn[_txn#1].GroupIndex
                let _txn.TxID#1: bytes = itxn[_txn#1].TxID
                let _txn.ApplicationID#1: uint64 = itxn[_txn#1].ApplicationID
                let _txn.OnCompletion#1: uint64 = itxn[_txn#1].OnCompletion
                let _txn.NumAppArgs#1: uint64 = itxn[_txn#1].NumAppArgs
                let _txn.NumAccounts#1: uint64 = itxn[_txn#1].NumAccounts
                let _txn.ApprovalProgram#1: bytes = itxn[_txn#1].ApprovalProgram
                let _txn.ClearStateProgram#1: bytes = itxn[_txn#1].ClearStateProgram
                let _txn.RekeyTo#1: bytes = itxn[_txn#1].RekeyTo
                let _txn.ConfigAsset#1: uint64 = itxn[_txn#1].ConfigAsset
                let _txn.ConfigAssetTotal#1: uint64 = itxn[_txn#1].ConfigAssetTotal
                let _txn.ConfigAssetDecimals#1: uint64 = itxn[_txn#1].ConfigAssetDecimals
                let _txn.ConfigAssetDefaultFrozen#1: bool = itxn[_txn#1].ConfigAssetDefaultFrozen
                let _txn.ConfigAssetUnitName#1: bytes = itxn[_txn#1].ConfigAssetUnitName
                let _txn.ConfigAssetName#1: bytes = itxn[_txn#1].ConfigAssetName
                let _txn.ConfigAssetURL#1: bytes = itxn[_txn#1].ConfigAssetURL
                let _txn.ConfigAssetMetadataHash#1: bytes = itxn[_txn#1].ConfigAssetMetadataHash
                let _txn.ConfigAssetManager#1: bytes = itxn[_txn#1].ConfigAssetManager
                let _txn.ConfigAssetReserve#1: bytes = itxn[_txn#1].ConfigAssetReserve
                let _txn.ConfigAssetFreeze#1: bytes = itxn[_txn#1].ConfigAssetFreeze
                let _txn.ConfigAssetClawback#1: bytes = itxn[_txn#1].ConfigAssetClawback
                let _txn.FreezeAsset#1: uint64 = itxn[_txn#1].FreezeAsset
                let _txn.FreezeAssetAccount#1: bytes = itxn[_txn#1].FreezeAssetAccount
                let _txn.FreezeAssetFrozen#1: bool = itxn[_txn#1].FreezeAssetFrozen
                let _txn.NumAssets#1: uint64 = itxn[_txn#1].NumAssets
                let _txn.NumApplications#1: uint64 = itxn[_txn#1].NumApplications
                let _txn.GlobalNumUint#1: uint64 = itxn[_txn#1].GlobalNumUint
                let _txn.GlobalNumByteSlice#1: uint64 = itxn[_txn#1].GlobalNumByteSlice
                let _txn.LocalNumUint#1: uint64 = itxn[_txn#1].LocalNumUint
                let _txn.LocalNumByteSlice#1: uint64 = itxn[_txn#1].LocalNumByteSlice
                let _txn.ExtraProgramPages#1: uint64 = itxn[_txn#1].ExtraProgramPages
                let _txn.Nonparticipation#1: bool = itxn[_txn#1].Nonparticipation
                let _txn.NumLogs#1: uint64 = itxn[_txn#1].NumLogs
                let _txn.CreatedAssetID#1: uint64 = itxn[_txn#1].CreatedAssetID
                let _txn.CreatedApplicationID#1: uint64 = itxn[_txn#1].CreatedApplicationID
                let _txn.LastLog#1: bytes = itxn[_txn#1].LastLog
                let _txn.StateProofPK#1: bytes = itxn[_txn#1].StateProofPK
                let _txn.NumApprovalProgramPages#1: uint64 = itxn[_txn#1].NumApprovalProgramPages
                let _txn.NumClearStateProgramPages#1: uint64 = itxn[_txn#1].NumClearStateProgramPages
                let tmp%7#0: bool = (== result2#0 result1#0)
                (assert tmp%7#0)
                itxn_begin
                let inner_txn_params%2#0: itxn_field_set = itxn_field_set(2)
                let inner_txn_params%2%%param_Fee_idx_0#0: uint64 = 0u
                let inner_txn_params%2%%Fee_length#0: uint64 = 1u
                let inner_txn_params%2%%param_TypeEnum_idx_0#0: uint64 = appl
                let inner_txn_params%2%%TypeEnum_length#0: uint64 = 1u
                let inner_txn_params%2%%param_ApplicationArgs_idx_0#0: bytes = method "echo_native_uint64(uint64)uint64"
                let inner_txn_params%2%%param_ApplicationArgs_idx_1#0: bytes = 0x0000000000000001
                let inner_txn_params%2%%ApplicationArgs_length#0: uint64 = 2u
                let inner_txn_params%2%%param_ApplicationID_idx_0#0: uint64 = app#0
                let inner_txn_params%2%%ApplicationID_length#0: uint64 = 1u
                let inner_txn_params%2%%Sender_length#0: uint64 = 0u
                let inner_txn_params%2%%Note_length#0: uint64 = 0u
                let inner_txn_params%2%%Receiver_length#0: uint64 = 0u
                let inner_txn_params%2%%Amount_length#0: uint64 = 0u
                let inner_txn_params%2%%CloseRemainderTo_length#0: uint64 = 0u
                let inner_txn_params%2%%VotePK_length#0: uint64 = 0u
                let inner_txn_params%2%%SelectionPK_length#0: uint64 = 0u
                let inner_txn_params%2%%VoteFirst_length#0: uint64 = 0u
                let inner_txn_params%2%%VoteLast_length#0: uint64 = 0u
                let inner_txn_params%2%%VoteKeyDilution_length#0: uint64 = 0u
                let inner_txn_params%2%%Type_length#0: uint64 = 0u
                let inner_txn_params%2%%XferAsset_length#0: uint64 = 0u
                let inner_txn_params%2%%AssetAmount_length#0: uint64 = 0u
                let inner_txn_params%2%%AssetSender_length#0: uint64 = 0u
                let inner_txn_params%2%%AssetReceiver_length#0: uint64 = 0u
                let inner_txn_params%2%%AssetCloseTo_length#0: uint64 = 0u
                let inner_txn_params%2%%OnCompletion_length#0: uint64 = 0u
                let inner_txn_params%2%%ApprovalProgram_length#0: uint64 = 0u
                let inner_txn_params%2%%ClearStateProgram_length#0: uint64 = 0u
                let inner_txn_params%2%%RekeyTo_length#0: uint64 = 0u
                let inner_txn_params%2%%ConfigAsset_length#0: uint64 = 0u
                let inner_txn_params%2%%ConfigAssetTotal_length#0: uint64 = 0u
                let inner_txn_params%2%%ConfigAssetDecimals_length#0: uint64 = 0u
                let inner_txn_params%2%%ConfigAssetDefaultFrozen_length#0: uint64 = 0u
                let inner_txn_params%2%%ConfigAssetUnitName_length#0: uint64 = 0u
                let inner_txn_params%2%%ConfigAssetName_length#0: uint64 = 0u
                let inner_txn_params%2%%ConfigAssetURL_length#0: uint64 = 0u
                let inner_txn_params%2%%ConfigAssetMetadataHash_length#0: uint64 = 0u
                let inner_txn_params%2%%ConfigAssetManager_length#0: uint64 = 0u
                let inner_txn_params%2%%ConfigAssetReserve_length#0: uint64 = 0u
                let inner_txn_params%2%%ConfigAssetFreeze_length#0: uint64 = 0u
                let inner_txn_params%2%%ConfigAssetClawback_length#0: uint64 = 0u
                let inner_txn_params%2%%FreezeAsset_length#0: uint64 = 0u
                let inner_txn_params%2%%FreezeAssetAccount_length#0: uint64 = 0u
                let inner_txn_params%2%%FreezeAssetFrozen_length#0: uint64 = 0u
                let inner_txn_params%2%%GlobalNumUint_length#0: uint64 = 0u
                let inner_txn_params%2%%GlobalNumByteSlice_length#0: uint64 = 0u
                let inner_txn_params%2%%LocalNumUint_length#0: uint64 = 0u
                let inner_txn_params%2%%LocalNumByteSlice_length#0: uint64 = 0u
                let inner_txn_params%2%%ExtraProgramPages_length#0: uint64 = 0u
                let inner_txn_params%2%%Nonparticipation_length#0: uint64 = 0u
                let inner_txn_params%2%%StateProofPK_length#0: uint64 = 0u
                let inner_txn_params%2%%Accounts_length#0: uint64 = 0u
                let inner_txn_params%2%%Assets_length#0: uint64 = 0u
                let inner_txn_params%2%%Applications_length#0: uint64 = 0u
                let inner_txn_params%2%%ApprovalProgramPages_length#0: uint64 = 0u
                let inner_txn_params%2%%ClearStateProgramPages_length#0: uint64 = 0u
                ((itxn_field ApplicationID) inner_txn_params%2%%param_ApplicationID_idx_0#0)
                ((itxn_field ApplicationArgs) inner_txn_params%2%%param_ApplicationArgs_idx_0#0)
                ((itxn_field ApplicationArgs) inner_txn_params%2%%param_ApplicationArgs_idx_1#0)
                ((itxn_field TypeEnum) inner_txn_params%2%%param_TypeEnum_idx_0#0)
                ((itxn_field Fee) inner_txn_params%2%%param_Fee_idx_0#0)
                goto block@3
            block@3: // next_txn_L151
                itxn_submit
                let awst_tmp%4#0: itxn_group_idx = itxn_group_idx(0)
                let awst_tmp%5#0: bytes = itxn[awst_tmp%4#0].LastLog
                let tmp%8#0: bytes = ((extract 4 0) awst_tmp%5#0)
                let tmp%9#0: bytes = ((extract 0 4) awst_tmp%5#0)
                let tmp%10#0: bool = (== tmp%9#0 0x151f7c75)
                let (value%2#0: bytes, check%2#0: bool) = (tmp%8#0, tmp%10#0)
                (assert check%2#0) // ARC4 prefix is valid
                let result3#0: uint64 = (btoi value%2#0)
                let _txn#2: itxn_group_idx = awst_tmp%4#0
                let _txn._is_last#2: bool = 1u
                let _txn.Sender#2: bytes = itxn[_txn#2].Sender
                let _txn.Fee#2: uint64 = itxn[_txn#2].Fee
                let _txn.FirstValid#2: uint64 = itxn[_txn#2].FirstValid
                let _txn.FirstValidTime#2: uint64 = itxn[_txn#2].FirstValidTime
                let _txn.LastValid#2: uint64 = itxn[_txn#2].LastValid
                let _txn.Note#2: bytes = itxn[_txn#2].Note
                let _txn.Lease#2: bytes = itxn[_txn#2].Lease
                let _txn.Receiver#2: bytes = itxn[_txn#2].Receiver
                let _txn.Amount#2: uint64 = itxn[_txn#2].Amount
                let _txn.CloseRemainderTo#2: bytes = itxn[_txn#2].CloseRemainderTo
                let _txn.VotePK#2: bytes = itxn[_txn#2].VotePK
                let _txn.SelectionPK#2: bytes = itxn[_txn#2].SelectionPK
                let _txn.VoteFirst#2: uint64 = itxn[_txn#2].VoteFirst
                let _txn.VoteLast#2: uint64 = itxn[_txn#2].VoteLast
                let _txn.VoteKeyDilution#2: uint64 = itxn[_txn#2].VoteKeyDilution
                let _txn.Type#2: bytes = itxn[_txn#2].Type
                let _txn.TypeEnum#2: uint64 = itxn[_txn#2].TypeEnum
                let _txn.XferAsset#2: uint64 = itxn[_txn#2].XferAsset
                let _txn.AssetAmount#2: uint64 = itxn[_txn#2].AssetAmount
                let _txn.AssetSender#2: bytes = itxn[_txn#2].AssetSender
                let _txn.AssetReceiver#2: bytes = itxn[_txn#2].AssetReceiver
                let _txn.AssetCloseTo#2: bytes = itxn[_txn#2].AssetCloseTo
                let _txn.GroupIndex#2: uint64 = itxn[_txn#2].GroupIndex
                let _txn.TxID#2: bytes = itxn[_txn#2].TxID
                let _txn.ApplicationID#2: uint64 = itxn[_txn#2].ApplicationID
                let _txn.OnCompletion#2: uint64 = itxn[_txn#2].OnCompletion
                let _txn.NumAppArgs#2: uint64 = itxn[_txn#2].NumAppArgs
                let _txn.NumAccounts#2: uint64 = itxn[_txn#2].NumAccounts
                let _txn.ApprovalProgram#2: bytes = itxn[_txn#2].ApprovalProgram
                let _txn.ClearStateProgram#2: bytes = itxn[_txn#2].ClearStateProgram
                let _txn.RekeyTo#2: bytes = itxn[_txn#2].RekeyTo
                let _txn.ConfigAsset#2: uint64 = itxn[_txn#2].ConfigAsset
                let _txn.ConfigAssetTotal#2: uint64 = itxn[_txn#2].ConfigAssetTotal
                let _txn.ConfigAssetDecimals#2: uint64 = itxn[_txn#2].ConfigAssetDecimals
                let _txn.ConfigAssetDefaultFrozen#2: bool = itxn[_txn#2].ConfigAssetDefaultFrozen
                let _txn.ConfigAssetUnitName#2: bytes = itxn[_txn#2].ConfigAssetUnitName
                let _txn.ConfigAssetName#2: bytes = itxn[_txn#2].ConfigAssetName
                let _txn.ConfigAssetURL#2: bytes = itxn[_txn#2].ConfigAssetURL
                let _txn.ConfigAssetMetadataHash#2: bytes = itxn[_txn#2].ConfigAssetMetadataHash
                let _txn.ConfigAssetManager#2: bytes = itxn[_txn#2].ConfigAssetManager
                let _txn.ConfigAssetReserve#2: bytes = itxn[_txn#2].ConfigAssetReserve
                let _txn.ConfigAssetFreeze#2: bytes = itxn[_txn#2].ConfigAssetFreeze
                let _txn.ConfigAssetClawback#2: bytes = itxn[_txn#2].ConfigAssetClawback
                let _txn.FreezeAsset#2: uint64 = itxn[_txn#2].FreezeAsset
                let _txn.FreezeAssetAccount#2: bytes = itxn[_txn#2].FreezeAssetAccount
                let _txn.FreezeAssetFrozen#2: bool = itxn[_txn#2].FreezeAssetFrozen
                let _txn.NumAssets#2: uint64 = itxn[_txn#2].NumAssets
                let _txn.NumApplications#2: uint64 = itxn[_txn#2].NumApplications
                let _txn.GlobalNumUint#2: uint64 = itxn[_txn#2].GlobalNumUint
                let _txn.GlobalNumByteSlice#2: uint64 = itxn[_txn#2].GlobalNumByteSlice
                let _txn.LocalNumUint#2: uint64 = itxn[_txn#2].LocalNumUint
                let _txn.LocalNumByteSlice#2: uint64 = itxn[_txn#2].LocalNumByteSlice
                let _txn.ExtraProgramPages#2: uint64 = itxn[_txn#2].ExtraProgramPages
                let _txn.Nonparticipation#2: bool = itxn[_txn#2].Nonparticipation
                let _txn.NumLogs#2: uint64 = itxn[_txn#2].NumLogs
                let _txn.CreatedAssetID#2: uint64 = itxn[_txn#2].CreatedAssetID
                let _txn.CreatedApplicationID#2: uint64 = itxn[_txn#2].CreatedApplicationID
                let _txn.LastLog#2: bytes = itxn[_txn#2].LastLog
                let _txn.StateProofPK#2: bytes = itxn[_txn#2].StateProofPK
                let _txn.NumApprovalProgramPages#2: uint64 = itxn[_txn#2].NumApprovalProgramPages
                let _txn.NumClearStateProgramPages#2: uint64 = itxn[_txn#2].NumClearStateProgramPages
                let tmp%11#0: bool = (== result3#0 result1#0)
                (assert tmp%11#0)
                return 
        
        subroutine test_cases.typed_abi_call.typed_c2c.Greeter.test_native_biguint(app: uint64) -> void:
            block@0: // L154
                itxn_begin
                let inner_txn_params%0#0: itxn_field_set = itxn_field_set(0)
                let inner_txn_params%0%%param_Fee_idx_0#0: uint64 = 0u
                let inner_txn_params%0%%Fee_length#0: uint64 = 1u
                let inner_txn_params%0%%param_TypeEnum_idx_0#0: uint64 = appl
                let inner_txn_params%0%%TypeEnum_length#0: uint64 = 1u
                let inner_txn_params%0%%param_ApplicationArgs_idx_0#0: bytes = method "echo_native_biguint(uint512)uint512"
                let inner_txn_params%0%%param_ApplicationArgs_idx_1#0: bytes = 0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002
                let inner_txn_params%0%%ApplicationArgs_length#0: uint64 = 2u
                let inner_txn_params%0%%param_ApplicationID_idx_0#0: uint64 = app#0
                let inner_txn_params%0%%ApplicationID_length#0: uint64 = 1u
                let inner_txn_params%0%%Sender_length#0: uint64 = 0u
                let inner_txn_params%0%%Note_length#0: uint64 = 0u
                let inner_txn_params%0%%Receiver_length#0: uint64 = 0u
                let inner_txn_params%0%%Amount_length#0: uint64 = 0u
                let inner_txn_params%0%%CloseRemainderTo_length#0: uint64 = 0u
                let inner_txn_params%0%%VotePK_length#0: uint64 = 0u
                let inner_txn_params%0%%SelectionPK_length#0: uint64 = 0u
                let inner_txn_params%0%%VoteFirst_length#0: uint64 = 0u
                let inner_txn_params%0%%VoteLast_length#0: uint64 = 0u
                let inner_txn_params%0%%VoteKeyDilution_length#0: uint64 = 0u
                let inner_txn_params%0%%Type_length#0: uint64 = 0u
                let inner_txn_params%0%%XferAsset_length#0: uint64 = 0u
                let inner_txn_params%0%%AssetAmount_length#0: uint64 = 0u
                let inner_txn_params%0%%AssetSender_length#0: uint64 = 0u
                let inner_txn_params%0%%AssetReceiver_length#0: uint64 = 0u
                let inner_txn_params%0%%AssetCloseTo_length#0: uint64 = 0u
                let inner_txn_params%0%%OnCompletion_length#0: uint64 = 0u
                let inner_txn_params%0%%ApprovalProgram_length#0: uint64 = 0u
                let inner_txn_params%0%%ClearStateProgram_length#0: uint64 = 0u
                let inner_txn_params%0%%RekeyTo_length#0: uint64 = 0u
                let inner_txn_params%0%%ConfigAsset_length#0: uint64 = 0u
                let inner_txn_params%0%%ConfigAssetTotal_length#0: uint64 = 0u
                let inner_txn_params%0%%ConfigAssetDecimals_length#0: uint64 = 0u
                let inner_txn_params%0%%ConfigAssetDefaultFrozen_length#0: uint64 = 0u
                let inner_txn_params%0%%ConfigAssetUnitName_length#0: uint64 = 0u
                let inner_txn_params%0%%ConfigAssetName_length#0: uint64 = 0u
                let inner_txn_params%0%%ConfigAssetURL_length#0: uint64 = 0u
                let inner_txn_params%0%%ConfigAssetMetadataHash_length#0: uint64 = 0u
                let inner_txn_params%0%%ConfigAssetManager_length#0: uint64 = 0u
                let inner_txn_params%0%%ConfigAssetReserve_length#0: uint64 = 0u
                let inner_txn_params%0%%ConfigAssetFreeze_length#0: uint64 = 0u
                let inner_txn_params%0%%ConfigAssetClawback_length#0: uint64 = 0u
                let inner_txn_params%0%%FreezeAsset_length#0: uint64 = 0u
                let inner_txn_params%0%%FreezeAssetAccount_length#0: uint64 = 0u
                let inner_txn_params%0%%FreezeAssetFrozen_length#0: uint64 = 0u
                let inner_txn_params%0%%GlobalNumUint_length#0: uint64 = 0u
                let inner_txn_params%0%%GlobalNumByteSlice_length#0: uint64 = 0u
                let inner_txn_params%0%%LocalNumUint_length#0: uint64 = 0u
                let inner_txn_params%0%%LocalNumByteSlice_length#0: uint64 = 0u
                let inner_txn_params%0%%ExtraProgramPages_length#0: uint64 = 0u
                let inner_txn_params%0%%Nonparticipation_length#0: uint64 = 0u
                let inner_txn_params%0%%StateProofPK_length#0: uint64 = 0u
                let inner_txn_params%0%%Accounts_length#0: uint64 = 0u
                let inner_txn_params%0%%Assets_length#0: uint64 = 0u
                let inner_txn_params%0%%Applications_length#0: uint64 = 0u
                let inner_txn_params%0%%ApprovalProgramPages_length#0: uint64 = 0u
                let inner_txn_params%0%%ClearStateProgramPages_length#0: uint64 = 0u
                ((itxn_field ApplicationID) inner_txn_params%0%%param_ApplicationID_idx_0#0)
                ((itxn_field ApplicationArgs) inner_txn_params%0%%param_ApplicationArgs_idx_0#0)
                ((itxn_field ApplicationArgs) inner_txn_params%0%%param_ApplicationArgs_idx_1#0)
                ((itxn_field TypeEnum) inner_txn_params%0%%param_TypeEnum_idx_0#0)
                ((itxn_field Fee) inner_txn_params%0%%param_Fee_idx_0#0)
                goto block@1
            block@1: // next_txn_L156
                itxn_submit
                let awst_tmp%0#0: itxn_group_idx = itxn_group_idx(0)
                let awst_tmp%1#0: bytes = itxn[awst_tmp%0#0].LastLog
                let tmp%0#0: bytes = ((extract 4 0) awst_tmp%1#0)
                let tmp%1#0: bytes = ((extract 0 4) awst_tmp%1#0)
                let tmp%2#0: bool = (== tmp%1#0 0x151f7c75)
                let (value%0#0: bytes, check%0#0: bool) = (tmp%0#0, tmp%2#0)
                (assert check%0#0) // ARC4 prefix is valid
                let result1#0: bytes = value%0#0
                let _txn#0: itxn_group_idx = awst_tmp%0#0
                let _txn._is_last#0: bool = 1u
                let _txn.Sender#0: bytes = itxn[_txn#0].Sender
                let _txn.Fee#0: uint64 = itxn[_txn#0].Fee
                let _txn.FirstValid#0: uint64 = itxn[_txn#0].FirstValid
                let _txn.FirstValidTime#0: uint64 = itxn[_txn#0].FirstValidTime
                let _txn.LastValid#0: uint64 = itxn[_txn#0].LastValid
                let _txn.Note#0: bytes = itxn[_txn#0].Note
                let _txn.Lease#0: bytes = itxn[_txn#0].Lease
                let _txn.Receiver#0: bytes = itxn[_txn#0].Receiver
                let _txn.Amount#0: uint64 = itxn[_txn#0].Amount
                let _txn.CloseRemainderTo#0: bytes = itxn[_txn#0].CloseRemainderTo
                let _txn.VotePK#0: bytes = itxn[_txn#0].VotePK
                let _txn.SelectionPK#0: bytes = itxn[_txn#0].SelectionPK
                let _txn.VoteFirst#0: uint64 = itxn[_txn#0].VoteFirst
                let _txn.VoteLast#0: uint64 = itxn[_txn#0].VoteLast
                let _txn.VoteKeyDilution#0: uint64 = itxn[_txn#0].VoteKeyDilution
                let _txn.Type#0: bytes = itxn[_txn#0].Type
                let _txn.TypeEnum#0: uint64 = itxn[_txn#0].TypeEnum
                let _txn.XferAsset#0: uint64 = itxn[_txn#0].XferAsset
                let _txn.AssetAmount#0: uint64 = itxn[_txn#0].AssetAmount
                let _txn.AssetSender#0: bytes = itxn[_txn#0].AssetSender
                let _txn.AssetReceiver#0: bytes = itxn[_txn#0].AssetReceiver
                let _txn.AssetCloseTo#0: bytes = itxn[_txn#0].AssetCloseTo
                let _txn.GroupIndex#0: uint64 = itxn[_txn#0].GroupIndex
                let _txn.TxID#0: bytes = itxn[_txn#0].TxID
                let _txn.ApplicationID#0: uint64 = itxn[_txn#0].ApplicationID
                let _txn.OnCompletion#0: uint64 = itxn[_txn#0].OnCompletion
                let _txn.NumAppArgs#0: uint64 = itxn[_txn#0].NumAppArgs
                let _txn.NumAccounts#0: uint64 = itxn[_txn#0].NumAccounts
                let _txn.ApprovalProgram#0: bytes = itxn[_txn#0].ApprovalProgram
                let _txn.ClearStateProgram#0: bytes = itxn[_txn#0].ClearStateProgram
                let _txn.RekeyTo#0: bytes = itxn[_txn#0].RekeyTo
                let _txn.ConfigAsset#0: uint64 = itxn[_txn#0].ConfigAsset
                let _txn.ConfigAssetTotal#0: uint64 = itxn[_txn#0].ConfigAssetTotal
                let _txn.ConfigAssetDecimals#0: uint64 = itxn[_txn#0].ConfigAssetDecimals
                let _txn.ConfigAssetDefaultFrozen#0: bool = itxn[_txn#0].ConfigAssetDefaultFrozen
                let _txn.ConfigAssetUnitName#0: bytes = itxn[_txn#0].ConfigAssetUnitName
                let _txn.ConfigAssetName#0: bytes = itxn[_txn#0].ConfigAssetName
                let _txn.ConfigAssetURL#0: bytes = itxn[_txn#0].ConfigAssetURL
                let _txn.ConfigAssetMetadataHash#0: bytes = itxn[_txn#0].ConfigAssetMetadataHash
                let _txn.ConfigAssetManager#0: bytes = itxn[_txn#0].ConfigAssetManager
                let _txn.ConfigAssetReserve#0: bytes = itxn[_txn#0].ConfigAssetReserve
                let _txn.ConfigAssetFreeze#0: bytes = itxn[_txn#0].ConfigAssetFreeze
                let _txn.ConfigAssetClawback#0: bytes = itxn[_txn#0].ConfigAssetClawback
                let _txn.FreezeAsset#0: uint64 = itxn[_txn#0].FreezeAsset
                let _txn.FreezeAssetAccount#0: bytes = itxn[_txn#0].FreezeAssetAccount
                let _txn.FreezeAssetFrozen#0: bool = itxn[_txn#0].FreezeAssetFrozen
                let _txn.NumAssets#0: uint64 = itxn[_txn#0].NumAssets
                let _txn.NumApplications#0: uint64 = itxn[_txn#0].NumApplications
                let _txn.GlobalNumUint#0: uint64 = itxn[_txn#0].GlobalNumUint
                let _txn.GlobalNumByteSlice#0: uint64 = itxn[_txn#0].GlobalNumByteSlice
                let _txn.LocalNumUint#0: uint64 = itxn[_txn#0].LocalNumUint
                let _txn.LocalNumByteSlice#0: uint64 = itxn[_txn#0].LocalNumByteSlice
                let _txn.ExtraProgramPages#0: uint64 = itxn[_txn#0].ExtraProgramPages
                let _txn.Nonparticipation#0: bool = itxn[_txn#0].Nonparticipation
                let _txn.NumLogs#0: uint64 = itxn[_txn#0].NumLogs
                let _txn.CreatedAssetID#0: uint64 = itxn[_txn#0].CreatedAssetID
                let _txn.CreatedApplicationID#0: uint64 = itxn[_txn#0].CreatedApplicationID
                let _txn.LastLog#0: bytes = itxn[_txn#0].LastLog
                let _txn.StateProofPK#0: bytes = itxn[_txn#0].StateProofPK
                let _txn.NumApprovalProgramPages#0: uint64 = itxn[_txn#0].NumApprovalProgramPages
                let _txn.NumClearStateProgramPages#0: uint64 = itxn[_txn#0].NumClearStateProgramPages
                let tmp%3#0: bool = (b== result1#0 3b)
                (assert tmp%3#0)
                itxn_begin
                let inner_txn_params%1#0: itxn_field_set = itxn_field_set(1)
                let inner_txn_params%1%%param_Fee_idx_0#0: uint64 = 0u
                let inner_txn_params%1%%Fee_length#0: uint64 = 1u
                let inner_txn_params%1%%param_TypeEnum_idx_0#0: uint64 = appl
                let inner_txn_params%1%%TypeEnum_length#0: uint64 = 1u
                let len_%0#0: uint64 = (len 2b)
                let no_overflow%0#0: bool = (<= len_%0#0 64u)
                (assert no_overflow%0#0) // overflow
                let b_zeros%0#0: bytes = (bzero 64u)
                let tmp%4#0: bytes = (b| 2b b_zeros%0#0)
                let inner_txn_params%1%%param_ApplicationArgs_idx_0#0: bytes = method "echo_native_biguint(uint512)uint512"
                let inner_txn_params%1%%param_ApplicationArgs_idx_1#0: bytes = tmp%4#0
                let inner_txn_params%1%%ApplicationArgs_length#0: uint64 = 2u
                let inner_txn_params%1%%param_ApplicationID_idx_0#0: uint64 = app#0
                let inner_txn_params%1%%ApplicationID_length#0: uint64 = 1u
                let inner_txn_params%1%%Sender_length#0: uint64 = 0u
                let inner_txn_params%1%%Note_length#0: uint64 = 0u
                let inner_txn_params%1%%Receiver_length#0: uint64 = 0u
                let inner_txn_params%1%%Amount_length#0: uint64 = 0u
                let inner_txn_params%1%%CloseRemainderTo_length#0: uint64 = 0u
                let inner_txn_params%1%%VotePK_length#0: uint64 = 0u
                let inner_txn_params%1%%SelectionPK_length#0: uint64 = 0u
                let inner_txn_params%1%%VoteFirst_length#0: uint64 = 0u
                let inner_txn_params%1%%VoteLast_length#0: uint64 = 0u
                let inner_txn_params%1%%VoteKeyDilution_length#0: uint64 = 0u
                let inner_txn_params%1%%Type_length#0: uint64 = 0u
                let inner_txn_params%1%%XferAsset_length#0: uint64 = 0u
                let inner_txn_params%1%%AssetAmount_length#0: uint64 = 0u
                let inner_txn_params%1%%AssetSender_length#0: uint64 = 0u
                let inner_txn_params%1%%AssetReceiver_length#0: uint64 = 0u
                let inner_txn_params%1%%AssetCloseTo_length#0: uint64 = 0u
                let inner_txn_params%1%%OnCompletion_length#0: uint64 = 0u
                let inner_txn_params%1%%ApprovalProgram_length#0: uint64 = 0u
                let inner_txn_params%1%%ClearStateProgram_length#0: uint64 = 0u
                let inner_txn_params%1%%RekeyTo_length#0: uint64 = 0u
                let inner_txn_params%1%%ConfigAsset_length#0: uint64 = 0u
                let inner_txn_params%1%%ConfigAssetTotal_length#0: uint64 = 0u
                let inner_txn_params%1%%ConfigAssetDecimals_length#0: uint64 = 0u
                let inner_txn_params%1%%ConfigAssetDefaultFrozen_length#0: uint64 = 0u
                let inner_txn_params%1%%ConfigAssetUnitName_length#0: uint64 = 0u
                let inner_txn_params%1%%ConfigAssetName_length#0: uint64 = 0u
                let inner_txn_params%1%%ConfigAssetURL_length#0: uint64 = 0u
                let inner_txn_params%1%%ConfigAssetMetadataHash_length#0: uint64 = 0u
                let inner_txn_params%1%%ConfigAssetManager_length#0: uint64 = 0u
                let inner_txn_params%1%%ConfigAssetReserve_length#0: uint64 = 0u
                let inner_txn_params%1%%ConfigAssetFreeze_length#0: uint64 = 0u
                let inner_txn_params%1%%ConfigAssetClawback_length#0: uint64 = 0u
                let inner_txn_params%1%%FreezeAsset_length#0: uint64 = 0u
                let inner_txn_params%1%%FreezeAssetAccount_length#0: uint64 = 0u
                let inner_txn_params%1%%FreezeAssetFrozen_length#0: uint64 = 0u
                let inner_txn_params%1%%GlobalNumUint_length#0: uint64 = 0u
                let inner_txn_params%1%%GlobalNumByteSlice_length#0: uint64 = 0u
                let inner_txn_params%1%%LocalNumUint_length#0: uint64 = 0u
                let inner_txn_params%1%%LocalNumByteSlice_length#0: uint64 = 0u
                let inner_txn_params%1%%ExtraProgramPages_length#0: uint64 = 0u
                let inner_txn_params%1%%Nonparticipation_length#0: uint64 = 0u
                let inner_txn_params%1%%StateProofPK_length#0: uint64 = 0u
                let inner_txn_params%1%%Accounts_length#0: uint64 = 0u
                let inner_txn_params%1%%Assets_length#0: uint64 = 0u
                let inner_txn_params%1%%Applications_length#0: uint64 = 0u
                let inner_txn_params%1%%ApprovalProgramPages_length#0: uint64 = 0u
                let inner_txn_params%1%%ClearStateProgramPages_length#0: uint64 = 0u
                ((itxn_field ApplicationID) inner_txn_params%1%%param_ApplicationID_idx_0#0)
                ((itxn_field ApplicationArgs) inner_txn_params%1%%param_ApplicationArgs_idx_0#0)
                ((itxn_field ApplicationArgs) inner_txn_params%1%%param_ApplicationArgs_idx_1#0)
                ((itxn_field TypeEnum) inner_txn_params%1%%param_TypeEnum_idx_0#0)
                ((itxn_field Fee) inner_txn_params%1%%param_Fee_idx_0#0)
                goto block@2
            block@2: // next_txn_L159
                itxn_submit
                let awst_tmp%2#0: itxn_group_idx = itxn_group_idx(0)
                let awst_tmp%3#0: bytes = itxn[awst_tmp%2#0].LastLog
                let tmp%5#0: bytes = ((extract 4 0) awst_tmp%3#0)
                let tmp%6#0: bytes = ((extract 0 4) awst_tmp%3#0)
                let tmp%7#0: bool = (== tmp%6#0 0x151f7c75)
                let (value%1#0: bytes, check%1#0: bool) = (tmp%5#0, tmp%7#0)
                (assert check%1#0) // ARC4 prefix is valid
                let result2#0: bytes = value%1#0
                let _txn#1: itxn_group_idx = awst_tmp%2#0
                let _txn._is_last#1: bool = 1u
                let _txn.Sender#1: bytes = itxn[_txn#1].Sender
                let _txn.Fee#1: uint64 = itxn[_txn#1].Fee
                let _txn.FirstValid#1: uint64 = itxn[_txn#1].FirstValid
                let _txn.FirstValidTime#1: uint64 = itxn[_txn#1].FirstValidTime
                let _txn.LastValid#1: uint64 = itxn[_txn#1].LastValid
                let _txn.Note#1: bytes = itxn[_txn#1].Note
                let _txn.Lease#1: bytes = itxn[_txn#1].Lease
                let _txn.Receiver#1: bytes = itxn[_txn#1].Receiver
                let _txn.Amount#1: uint64 = itxn[_txn#1].Amount
                let _txn.CloseRemainderTo#1: bytes = itxn[_txn#1].CloseRemainderTo
                let _txn.VotePK#1: bytes = itxn[_txn#1].VotePK
                let _txn.SelectionPK#1: bytes = itxn[_txn#1].SelectionPK
                let _txn.VoteFirst#1: uint64 = itxn[_txn#1].VoteFirst
                let _txn.VoteLast#1: uint64 = itxn[_txn#1].VoteLast
                let _txn.VoteKeyDilution#1: uint64 = itxn[_txn#1].VoteKeyDilution
                let _txn.Type#1: bytes = itxn[_txn#1].Type
                let _txn.TypeEnum#1: uint64 = itxn[_txn#1].TypeEnum
                let _txn.XferAsset#1: uint64 = itxn[_txn#1].XferAsset
                let _txn.AssetAmount#1: uint64 = itxn[_txn#1].AssetAmount
                let _txn.AssetSender#1: bytes = itxn[_txn#1].AssetSender
                let _txn.AssetReceiver#1: bytes = itxn[_txn#1].AssetReceiver
                let _txn.AssetCloseTo#1: bytes = itxn[_txn#1].AssetCloseTo
                let _txn.GroupIndex#1: uint64 = itxn[_txn#1].GroupIndex
                let _txn.TxID#1: bytes = itxn[_txn#1].TxID
                let _txn.ApplicationID#1: uint64 = itxn[_txn#1].ApplicationID
                let _txn.OnCompletion#1: uint64 = itxn[_txn#1].OnCompletion
                let _txn.NumAppArgs#1: uint64 = itxn[_txn#1].NumAppArgs
                let _txn.NumAccounts#1: uint64 = itxn[_txn#1].NumAccounts
                let _txn.ApprovalProgram#1: bytes = itxn[_txn#1].ApprovalProgram
                let _txn.ClearStateProgram#1: bytes = itxn[_txn#1].ClearStateProgram
                let _txn.RekeyTo#1: bytes = itxn[_txn#1].RekeyTo
                let _txn.ConfigAsset#1: uint64 = itxn[_txn#1].ConfigAsset
                let _txn.ConfigAssetTotal#1: uint64 = itxn[_txn#1].ConfigAssetTotal
                let _txn.ConfigAssetDecimals#1: uint64 = itxn[_txn#1].ConfigAssetDecimals
                let _txn.ConfigAssetDefaultFrozen#1: bool = itxn[_txn#1].ConfigAssetDefaultFrozen
                let _txn.ConfigAssetUnitName#1: bytes = itxn[_txn#1].ConfigAssetUnitName
                let _txn.ConfigAssetName#1: bytes = itxn[_txn#1].ConfigAssetName
                let _txn.ConfigAssetURL#1: bytes = itxn[_txn#1].ConfigAssetURL
                let _txn.ConfigAssetMetadataHash#1: bytes = itxn[_txn#1].ConfigAssetMetadataHash
                let _txn.ConfigAssetManager#1: bytes = itxn[_txn#1].ConfigAssetManager
                let _txn.ConfigAssetReserve#1: bytes = itxn[_txn#1].ConfigAssetReserve
                let _txn.ConfigAssetFreeze#1: bytes = itxn[_txn#1].ConfigAssetFreeze
                let _txn.ConfigAssetClawback#1: bytes = itxn[_txn#1].ConfigAssetClawback
                let _txn.FreezeAsset#1: uint64 = itxn[_txn#1].FreezeAsset
                let _txn.FreezeAssetAccount#1: bytes = itxn[_txn#1].FreezeAssetAccount
                let _txn.FreezeAssetFrozen#1: bool = itxn[_txn#1].FreezeAssetFrozen
                let _txn.NumAssets#1: uint64 = itxn[_txn#1].NumAssets
                let _txn.NumApplications#1: uint64 = itxn[_txn#1].NumApplications
                let _txn.GlobalNumUint#1: uint64 = itxn[_txn#1].GlobalNumUint
                let _txn.GlobalNumByteSlice#1: uint64 = itxn[_txn#1].GlobalNumByteSlice
                let _txn.LocalNumUint#1: uint64 = itxn[_txn#1].LocalNumUint
                let _txn.LocalNumByteSlice#1: uint64 = itxn[_txn#1].LocalNumByteSlice
                let _txn.ExtraProgramPages#1: uint64 = itxn[_txn#1].ExtraProgramPages
                let _txn.Nonparticipation#1: bool = itxn[_txn#1].Nonparticipation
                let _txn.NumLogs#1: uint64 = itxn[_txn#1].NumLogs
                let _txn.CreatedAssetID#1: uint64 = itxn[_txn#1].CreatedAssetID
                let _txn.CreatedApplicationID#1: uint64 = itxn[_txn#1].CreatedApplicationID
                let _txn.LastLog#1: bytes = itxn[_txn#1].LastLog
                let _txn.StateProofPK#1: bytes = itxn[_txn#1].StateProofPK
                let _txn.NumApprovalProgramPages#1: uint64 = itxn[_txn#1].NumApprovalProgramPages
                let _txn.NumClearStateProgramPages#1: uint64 = itxn[_txn#1].NumClearStateProgramPages
                let tmp%8#0: bool = (b== result2#0 result1#0)
                (assert tmp%8#0)
                itxn_begin
                let inner_txn_params%2#0: itxn_field_set = itxn_field_set(2)
                let inner_txn_params%2%%param_Fee_idx_0#0: uint64 = 0u
                let inner_txn_params%2%%Fee_length#0: uint64 = 1u
                let inner_txn_params%2%%param_TypeEnum_idx_0#0: uint64 = appl
                let inner_txn_params%2%%TypeEnum_length#0: uint64 = 1u
                let inner_txn_params%2%%param_ApplicationArgs_idx_0#0: bytes = method "echo_native_biguint(uint512)uint512"
                let inner_txn_params%2%%param_ApplicationArgs_idx_1#0: bytes = 0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002
                let inner_txn_params%2%%ApplicationArgs_length#0: uint64 = 2u
                let inner_txn_params%2%%param_ApplicationID_idx_0#0: uint64 = app#0
                let inner_txn_params%2%%ApplicationID_length#0: uint64 = 1u
                let inner_txn_params%2%%Sender_length#0: uint64 = 0u
                let inner_txn_params%2%%Note_length#0: uint64 = 0u
                let inner_txn_params%2%%Receiver_length#0: uint64 = 0u
                let inner_txn_params%2%%Amount_length#0: uint64 = 0u
                let inner_txn_params%2%%CloseRemainderTo_length#0: uint64 = 0u
                let inner_txn_params%2%%VotePK_length#0: uint64 = 0u
                let inner_txn_params%2%%SelectionPK_length#0: uint64 = 0u
                let inner_txn_params%2%%VoteFirst_length#0: uint64 = 0u
                let inner_txn_params%2%%VoteLast_length#0: uint64 = 0u
                let inner_txn_params%2%%VoteKeyDilution_length#0: uint64 = 0u
                let inner_txn_params%2%%Type_length#0: uint64 = 0u
                let inner_txn_params%2%%XferAsset_length#0: uint64 = 0u
                let inner_txn_params%2%%AssetAmount_length#0: uint64 = 0u
                let inner_txn_params%2%%AssetSender_length#0: uint64 = 0u
                let inner_txn_params%2%%AssetReceiver_length#0: uint64 = 0u
                let inner_txn_params%2%%AssetCloseTo_length#0: uint64 = 0u
                let inner_txn_params%2%%OnCompletion_length#0: uint64 = 0u
                let inner_txn_params%2%%ApprovalProgram_length#0: uint64 = 0u
                let inner_txn_params%2%%ClearStateProgram_length#0: uint64 = 0u
                let inner_txn_params%2%%RekeyTo_length#0: uint64 = 0u
                let inner_txn_params%2%%ConfigAsset_length#0: uint64 = 0u
                let inner_txn_params%2%%ConfigAssetTotal_length#0: uint64 = 0u
                let inner_txn_params%2%%ConfigAssetDecimals_length#0: uint64 = 0u
                let inner_txn_params%2%%ConfigAssetDefaultFrozen_length#0: uint64 = 0u
                let inner_txn_params%2%%ConfigAssetUnitName_length#0: uint64 = 0u
                let inner_txn_params%2%%ConfigAssetName_length#0: uint64 = 0u
                let inner_txn_params%2%%ConfigAssetURL_length#0: uint64 = 0u
                let inner_txn_params%2%%ConfigAssetMetadataHash_length#0: uint64 = 0u
                let inner_txn_params%2%%ConfigAssetManager_length#0: uint64 = 0u
                let inner_txn_params%2%%ConfigAssetReserve_length#0: uint64 = 0u
                let inner_txn_params%2%%ConfigAssetFreeze_length#0: uint64 = 0u
                let inner_txn_params%2%%ConfigAssetClawback_length#0: uint64 = 0u
                let inner_txn_params%2%%FreezeAsset_length#0: uint64 = 0u
                let inner_txn_params%2%%FreezeAssetAccount_length#0: uint64 = 0u
                let inner_txn_params%2%%FreezeAssetFrozen_length#0: uint64 = 0u
                let inner_txn_params%2%%GlobalNumUint_length#0: uint64 = 0u
                let inner_txn_params%2%%GlobalNumByteSlice_length#0: uint64 = 0u
                let inner_txn_params%2%%LocalNumUint_length#0: uint64 = 0u
                let inner_txn_params%2%%LocalNumByteSlice_length#0: uint64 = 0u
                let inner_txn_params%2%%ExtraProgramPages_length#0: uint64 = 0u
                let inner_txn_params%2%%Nonparticipation_length#0: uint64 = 0u
                let inner_txn_params%2%%StateProofPK_length#0: uint64 = 0u
                let inner_txn_params%2%%Accounts_length#0: uint64 = 0u
                let inner_txn_params%2%%Assets_length#0: uint64 = 0u
                let inner_txn_params%2%%Applications_length#0: uint64 = 0u
                let inner_txn_params%2%%ApprovalProgramPages_length#0: uint64 = 0u
                let inner_txn_params%2%%ClearStateProgramPages_length#0: uint64 = 0u
                ((itxn_field ApplicationID) inner_txn_params%2%%param_ApplicationID_idx_0#0)
                ((itxn_field ApplicationArgs) inner_txn_params%2%%param_ApplicationArgs_idx_0#0)
                ((itxn_field ApplicationArgs) inner_txn_params%2%%param_ApplicationArgs_idx_1#0)
                ((itxn_field TypeEnum) inner_txn_params%2%%param_TypeEnum_idx_0#0)
                ((itxn_field Fee) inner_txn_params%2%%param_Fee_idx_0#0)
                goto block@3
            block@3: // next_txn_L162
                itxn_submit
                let awst_tmp%4#0: itxn_group_idx = itxn_group_idx(0)
                let awst_tmp%5#0: bytes = itxn[awst_tmp%4#0].LastLog
                let tmp%9#0: bytes = ((extract 4 0) awst_tmp%5#0)
                let tmp%10#0: bytes = ((extract 0 4) awst_tmp%5#0)
                let tmp%11#0: bool = (== tmp%10#0 0x151f7c75)
                let (value%2#0: bytes, check%2#0: bool) = (tmp%9#0, tmp%11#0)
                (assert check%2#0) // ARC4 prefix is valid
                let result3#0: bytes = value%2#0
                let _txn#2: itxn_group_idx = awst_tmp%4#0
                let _txn._is_last#2: bool = 1u
                let _txn.Sender#2: bytes = itxn[_txn#2].Sender
                let _txn.Fee#2: uint64 = itxn[_txn#2].Fee
                let _txn.FirstValid#2: uint64 = itxn[_txn#2].FirstValid
                let _txn.FirstValidTime#2: uint64 = itxn[_txn#2].FirstValidTime
                let _txn.LastValid#2: uint64 = itxn[_txn#2].LastValid
                let _txn.Note#2: bytes = itxn[_txn#2].Note
                let _txn.Lease#2: bytes = itxn[_txn#2].Lease
                let _txn.Receiver#2: bytes = itxn[_txn#2].Receiver
                let _txn.Amount#2: uint64 = itxn[_txn#2].Amount
                let _txn.CloseRemainderTo#2: bytes = itxn[_txn#2].CloseRemainderTo
                let _txn.VotePK#2: bytes = itxn[_txn#2].VotePK
                let _txn.SelectionPK#2: bytes = itxn[_txn#2].SelectionPK
                let _txn.VoteFirst#2: uint64 = itxn[_txn#2].VoteFirst
                let _txn.VoteLast#2: uint64 = itxn[_txn#2].VoteLast
                let _txn.VoteKeyDilution#2: uint64 = itxn[_txn#2].VoteKeyDilution
                let _txn.Type#2: bytes = itxn[_txn#2].Type
                let _txn.TypeEnum#2: uint64 = itxn[_txn#2].TypeEnum
                let _txn.XferAsset#2: uint64 = itxn[_txn#2].XferAsset
                let _txn.AssetAmount#2: uint64 = itxn[_txn#2].AssetAmount
                let _txn.AssetSender#2: bytes = itxn[_txn#2].AssetSender
                let _txn.AssetReceiver#2: bytes = itxn[_txn#2].AssetReceiver
                let _txn.AssetCloseTo#2: bytes = itxn[_txn#2].AssetCloseTo
                let _txn.GroupIndex#2: uint64 = itxn[_txn#2].GroupIndex
                let _txn.TxID#2: bytes = itxn[_txn#2].TxID
                let _txn.ApplicationID#2: uint64 = itxn[_txn#2].ApplicationID
                let _txn.OnCompletion#2: uint64 = itxn[_txn#2].OnCompletion
                let _txn.NumAppArgs#2: uint64 = itxn[_txn#2].NumAppArgs
                let _txn.NumAccounts#2: uint64 = itxn[_txn#2].NumAccounts
                let _txn.ApprovalProgram#2: bytes = itxn[_txn#2].ApprovalProgram
                let _txn.ClearStateProgram#2: bytes = itxn[_txn#2].ClearStateProgram
                let _txn.RekeyTo#2: bytes = itxn[_txn#2].RekeyTo
                let _txn.ConfigAsset#2: uint64 = itxn[_txn#2].ConfigAsset
                let _txn.ConfigAssetTotal#2: uint64 = itxn[_txn#2].ConfigAssetTotal
                let _txn.ConfigAssetDecimals#2: uint64 = itxn[_txn#2].ConfigAssetDecimals
                let _txn.ConfigAssetDefaultFrozen#2: bool = itxn[_txn#2].ConfigAssetDefaultFrozen
                let _txn.ConfigAssetUnitName#2: bytes = itxn[_txn#2].ConfigAssetUnitName
                let _txn.ConfigAssetName#2: bytes = itxn[_txn#2].ConfigAssetName
                let _txn.ConfigAssetURL#2: bytes = itxn[_txn#2].ConfigAssetURL
                let _txn.ConfigAssetMetadataHash#2: bytes = itxn[_txn#2].ConfigAssetMetadataHash
                let _txn.ConfigAssetManager#2: bytes = itxn[_txn#2].ConfigAssetManager
                let _txn.ConfigAssetReserve#2: bytes = itxn[_txn#2].ConfigAssetReserve
                let _txn.ConfigAssetFreeze#2: bytes = itxn[_txn#2].ConfigAssetFreeze
                let _txn.ConfigAssetClawback#2: bytes = itxn[_txn#2].ConfigAssetClawback
                let _txn.FreezeAsset#2: uint64 = itxn[_txn#2].FreezeAsset
                let _txn.FreezeAssetAccount#2: bytes = itxn[_txn#2].FreezeAssetAccount
                let _txn.FreezeAssetFrozen#2: bool = itxn[_txn#2].FreezeAssetFrozen
                let _txn.NumAssets#2: uint64 = itxn[_txn#2].NumAssets
                let _txn.NumApplications#2: uint64 = itxn[_txn#2].NumApplications
                let _txn.GlobalNumUint#2: uint64 = itxn[_txn#2].GlobalNumUint
                let _txn.GlobalNumByteSlice#2: uint64 = itxn[_txn#2].GlobalNumByteSlice
                let _txn.LocalNumUint#2: uint64 = itxn[_txn#2].LocalNumUint
                let _txn.LocalNumByteSlice#2: uint64 = itxn[_txn#2].LocalNumByteSlice
                let _txn.ExtraProgramPages#2: uint64 = itxn[_txn#2].ExtraProgramPages
                let _txn.Nonparticipation#2: bool = itxn[_txn#2].Nonparticipation
                let _txn.NumLogs#2: uint64 = itxn[_txn#2].NumLogs
                let _txn.CreatedAssetID#2: uint64 = itxn[_txn#2].CreatedAssetID
                let _txn.CreatedApplicationID#2: uint64 = itxn[_txn#2].CreatedApplicationID
                let _txn.LastLog#2: bytes = itxn[_txn#2].LastLog
                let _txn.StateProofPK#2: bytes = itxn[_txn#2].StateProofPK
                let _txn.NumApprovalProgramPages#2: uint64 = itxn[_txn#2].NumApprovalProgramPages
                let _txn.NumClearStateProgramPages#2: uint64 = itxn[_txn#2].NumClearStateProgramPages
                let tmp%12#0: bool = (b== result3#0 result1#0)
                (assert tmp%12#0)
                return 
        
        subroutine test_cases.typed_abi_call.typed_c2c.Greeter.test_native_tuple(app: uint64) -> void:
            block@0: // L165
                itxn_begin
                let inner_txn_params%0#0: itxn_field_set = itxn_field_set(0)
                let inner_txn_params%0%%param_Fee_idx_0#0: uint64 = 0u
                let inner_txn_params%0%%Fee_length#0: uint64 = 1u
                let inner_txn_params%0%%param_TypeEnum_idx_0#0: uint64 = appl
                let inner_txn_params%0%%TypeEnum_length#0: uint64 = 1u
                let inner_txn_params%0%%param_ApplicationArgs_idx_0#0: bytes = method "echo_native_tuple(string,byte[],uint64,uint512)(string,byte[],uint64,uint512)"
                let inner_txn_params%0%%param_ApplicationArgs_idx_1#0: bytes = "\x00\x02s1"
                let inner_txn_params%0%%param_ApplicationArgs_idx_2#0: bytes = 0x00026231
                let inner_txn_params%0%%param_ApplicationArgs_idx_3#0: bytes = 0x0000000000000001
                let inner_txn_params%0%%param_ApplicationArgs_idx_4#0: bytes = 0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002
                let inner_txn_params%0%%ApplicationArgs_length#0: uint64 = 5u
                let inner_txn_params%0%%param_ApplicationID_idx_0#0: uint64 = app#0
                let inner_txn_params%0%%ApplicationID_length#0: uint64 = 1u
                let inner_txn_params%0%%Sender_length#0: uint64 = 0u
                let inner_txn_params%0%%Note_length#0: uint64 = 0u
                let inner_txn_params%0%%Receiver_length#0: uint64 = 0u
                let inner_txn_params%0%%Amount_length#0: uint64 = 0u
                let inner_txn_params%0%%CloseRemainderTo_length#0: uint64 = 0u
                let inner_txn_params%0%%VotePK_length#0: uint64 = 0u
                let inner_txn_params%0%%SelectionPK_length#0: uint64 = 0u
                let inner_txn_params%0%%VoteFirst_length#0: uint64 = 0u
                let inner_txn_params%0%%VoteLast_length#0: uint64 = 0u
                let inner_txn_params%0%%VoteKeyDilution_length#0: uint64 = 0u
                let inner_txn_params%0%%Type_length#0: uint64 = 0u
                let inner_txn_params%0%%XferAsset_length#0: uint64 = 0u
                let inner_txn_params%0%%AssetAmount_length#0: uint64 = 0u
                let inner_txn_params%0%%AssetSender_length#0: uint64 = 0u
                let inner_txn_params%0%%AssetReceiver_length#0: uint64 = 0u
                let inner_txn_params%0%%AssetCloseTo_length#0: uint64 = 0u
                let inner_txn_params%0%%OnCompletion_length#0: uint64 = 0u
                let inner_txn_params%0%%ApprovalProgram_length#0: uint64 = 0u
                let inner_txn_params%0%%ClearStateProgram_length#0: uint64 = 0u
                let inner_txn_params%0%%RekeyTo_length#0: uint64 = 0u
                let inner_txn_params%0%%ConfigAsset_length#0: uint64 = 0u
                let inner_txn_params%0%%ConfigAssetTotal_length#0: uint64 = 0u
                let inner_txn_params%0%%ConfigAssetDecimals_length#0: uint64 = 0u
                let inner_txn_params%0%%ConfigAssetDefaultFrozen_length#0: uint64 = 0u
                let inner_txn_params%0%%ConfigAssetUnitName_length#0: uint64 = 0u
                let inner_txn_params%0%%ConfigAssetName_length#0: uint64 = 0u
                let inner_txn_params%0%%ConfigAssetURL_length#0: uint64 = 0u
                let inner_txn_params%0%%ConfigAssetMetadataHash_length#0: uint64 = 0u
                let inner_txn_params%0%%ConfigAssetManager_length#0: uint64 = 0u
                let inner_txn_params%0%%ConfigAssetReserve_length#0: uint64 = 0u
                let inner_txn_params%0%%ConfigAssetFreeze_length#0: uint64 = 0u
                let inner_txn_params%0%%ConfigAssetClawback_length#0: uint64 = 0u
                let inner_txn_params%0%%FreezeAsset_length#0: uint64 = 0u
                let inner_txn_params%0%%FreezeAssetAccount_length#0: uint64 = 0u
                let inner_txn_params%0%%FreezeAssetFrozen_length#0: uint64 = 0u
                let inner_txn_params%0%%GlobalNumUint_length#0: uint64 = 0u
                let inner_txn_params%0%%GlobalNumByteSlice_length#0: uint64 = 0u
                let inner_txn_params%0%%LocalNumUint_length#0: uint64 = 0u
                let inner_txn_params%0%%LocalNumByteSlice_length#0: uint64 = 0u
                let inner_txn_params%0%%ExtraProgramPages_length#0: uint64 = 0u
                let inner_txn_params%0%%Nonparticipation_length#0: uint64 = 0u
                let inner_txn_params%0%%StateProofPK_length#0: uint64 = 0u
                let inner_txn_params%0%%Accounts_length#0: uint64 = 0u
                let inner_txn_params%0%%Assets_length#0: uint64 = 0u
                let inner_txn_params%0%%Applications_length#0: uint64 = 0u
                let inner_txn_params%0%%ApprovalProgramPages_length#0: uint64 = 0u
                let inner_txn_params%0%%ClearStateProgramPages_length#0: uint64 = 0u
                ((itxn_field ApplicationID) inner_txn_params%0%%param_ApplicationID_idx_0#0)
                ((itxn_field ApplicationArgs) inner_txn_params%0%%param_ApplicationArgs_idx_0#0)
                ((itxn_field ApplicationArgs) inner_txn_params%0%%param_ApplicationArgs_idx_1#0)
                ((itxn_field ApplicationArgs) inner_txn_params%0%%param_ApplicationArgs_idx_2#0)
                ((itxn_field ApplicationArgs) inner_txn_params%0%%param_ApplicationArgs_idx_3#0)
                ((itxn_field ApplicationArgs) inner_txn_params%0%%param_ApplicationArgs_idx_4#0)
                ((itxn_field TypeEnum) inner_txn_params%0%%param_TypeEnum_idx_0#0)
                ((itxn_field Fee) inner_txn_params%0%%param_Fee_idx_0#0)
                goto block@1
            block@1: // next_txn_L169
                itxn_submit
                let txn#0: itxn_group_idx = itxn_group_idx(0)
                let txn._is_last#0: bool = 1u
                let txn.Sender#0: bytes = itxn[txn#0].Sender
                let txn.Fee#0: uint64 = itxn[txn#0].Fee
                let txn.FirstValid#0: uint64 = itxn[txn#0].FirstValid
                let txn.FirstValidTime#0: uint64 = itxn[txn#0].FirstValidTime
                let txn.LastValid#0: uint64 = itxn[txn#0].LastValid
                let txn.Note#0: bytes = itxn[txn#0].Note
                let txn.Lease#0: bytes = itxn[txn#0].Lease
                let txn.Receiver#0: bytes = itxn[txn#0].Receiver
                let txn.Amount#0: uint64 = itxn[txn#0].Amount
                let txn.CloseRemainderTo#0: bytes = itxn[txn#0].CloseRemainderTo
                let txn.VotePK#0: bytes = itxn[txn#0].VotePK
                let txn.SelectionPK#0: bytes = itxn[txn#0].SelectionPK
                let txn.VoteFirst#0: uint64 = itxn[txn#0].VoteFirst
                let txn.VoteLast#0: uint64 = itxn[txn#0].VoteLast
                let txn.VoteKeyDilution#0: uint64 = itxn[txn#0].VoteKeyDilution
                let txn.Type#0: bytes = itxn[txn#0].Type
                let txn.TypeEnum#0: uint64 = itxn[txn#0].TypeEnum
                let txn.XferAsset#0: uint64 = itxn[txn#0].XferAsset
                let txn.AssetAmount#0: uint64 = itxn[txn#0].AssetAmount
                let txn.AssetSender#0: bytes = itxn[txn#0].AssetSender
                let txn.AssetReceiver#0: bytes = itxn[txn#0].AssetReceiver
                let txn.AssetCloseTo#0: bytes = itxn[txn#0].AssetCloseTo
                let txn.GroupIndex#0: uint64 = itxn[txn#0].GroupIndex
                let txn.TxID#0: bytes = itxn[txn#0].TxID
                let txn.ApplicationID#0: uint64 = itxn[txn#0].ApplicationID
                let txn.OnCompletion#0: uint64 = itxn[txn#0].OnCompletion
                let txn.NumAppArgs#0: uint64 = itxn[txn#0].NumAppArgs
                let txn.NumAccounts#0: uint64 = itxn[txn#0].NumAccounts
                let txn.ApprovalProgram#0: bytes = itxn[txn#0].ApprovalProgram
                let txn.ClearStateProgram#0: bytes = itxn[txn#0].ClearStateProgram
                let txn.RekeyTo#0: bytes = itxn[txn#0].RekeyTo
                let txn.ConfigAsset#0: uint64 = itxn[txn#0].ConfigAsset
                let txn.ConfigAssetTotal#0: uint64 = itxn[txn#0].ConfigAssetTotal
                let txn.ConfigAssetDecimals#0: uint64 = itxn[txn#0].ConfigAssetDecimals
                let txn.ConfigAssetDefaultFrozen#0: bool = itxn[txn#0].ConfigAssetDefaultFrozen
                let txn.ConfigAssetUnitName#0: bytes = itxn[txn#0].ConfigAssetUnitName
                let txn.ConfigAssetName#0: bytes = itxn[txn#0].ConfigAssetName
                let txn.ConfigAssetURL#0: bytes = itxn[txn#0].ConfigAssetURL
                let txn.ConfigAssetMetadataHash#0: bytes = itxn[txn#0].ConfigAssetMetadataHash
                let txn.ConfigAssetManager#0: bytes = itxn[txn#0].ConfigAssetManager
                let txn.ConfigAssetReserve#0: bytes = itxn[txn#0].ConfigAssetReserve
                let txn.ConfigAssetFreeze#0: bytes = itxn[txn#0].ConfigAssetFreeze
                let txn.ConfigAssetClawback#0: bytes = itxn[txn#0].ConfigAssetClawback
                let txn.FreezeAsset#0: uint64 = itxn[txn#0].FreezeAsset
                let txn.FreezeAssetAccount#0: bytes = itxn[txn#0].FreezeAssetAccount
                let txn.FreezeAssetFrozen#0: bool = itxn[txn#0].FreezeAssetFrozen
                let txn.NumAssets#0: uint64 = itxn[txn#0].NumAssets
                let txn.NumApplications#0: uint64 = itxn[txn#0].NumApplications
                let txn.GlobalNumUint#0: uint64 = itxn[txn#0].GlobalNumUint
                let txn.GlobalNumByteSlice#0: uint64 = itxn[txn#0].GlobalNumByteSlice
                let txn.LocalNumUint#0: uint64 = itxn[txn#0].LocalNumUint
                let txn.LocalNumByteSlice#0: uint64 = itxn[txn#0].LocalNumByteSlice
                let txn.ExtraProgramPages#0: uint64 = itxn[txn#0].ExtraProgramPages
                let txn.Nonparticipation#0: bool = itxn[txn#0].Nonparticipation
                let txn.NumLogs#0: uint64 = itxn[txn#0].NumLogs
                let txn.CreatedAssetID#0: uint64 = itxn[txn#0].CreatedAssetID
                let txn.CreatedApplicationID#0: uint64 = itxn[txn#0].CreatedApplicationID
                let txn.LastLog#0: bytes = itxn[txn#0].LastLog
                let txn.StateProofPK#0: bytes = itxn[txn#0].StateProofPK
                let txn.NumApprovalProgramPages#0: uint64 = itxn[txn#0].NumApprovalProgramPages
                let txn.NumClearStateProgramPages#0: uint64 = itxn[txn#0].NumClearStateProgramPages
                let awst_tmp%0#0: bytes = txn.LastLog#0
                let tmp%0#0: bytes = ((extract 4 0) awst_tmp%0#0)
                let tmp%1#0: bytes = ((extract 0 4) awst_tmp%0#0)
                let tmp%2#0: bool = (== tmp%1#0 0x151f7c75)
                let (value%0#0: bytes, check%0#0: bool) = (tmp%0#0, tmp%2#0)
                (assert check%0#0) // ARC4 prefix is valid
                let result1#0: bytes = value%0#0
                let item_start_offset%0#0: uint64 = (extract_uint16 result1#0 0u)
                let item_end_offset%0#0: uint64 = (extract_uint16 result1#0 2u)
                let item0%0#0: bytes = (substring3 result1#0 item_start_offset%0#0 item_end_offset%0#0)
                let item_start_offset%1#0: uint64 = (extract_uint16 result1#0 2u)
                let item_end_offset%1#0: uint64 = (len result1#0)
                let item1%0#0: bytes = (substring3 result1#0 item_start_offset%1#0 item_end_offset%1#0)
                let item2%0#0: bytes = (extract3 result1#0 4u 8u) // on error: Index access is out of bounds
                let item3%0#0: bytes = (extract3 result1#0 12u 64u) // on error: Index access is out of bounds
                let s#0: bytes = item0%0#0
                let b#0: bytes = item1%0#0
                let u#0: bytes = item2%0#0
                let bu#0: bytes = item3%0#0
                let tmp%3#0: bytes = ((extract 2 0) s#0)
                let tmp%4#0: bool = (== tmp%3#0 "echo: s1")
                (assert tmp%4#0)
                let tmp%5#0: bytes = ((extract 2 0) b#0)
                let tmp%6#0: bool = (== tmp%5#0 "echo: b1")
                (assert tmp%6#0)
                let tmp%7#0: uint64 = (btoi u#0)
                let tmp%8#0: bool = (== tmp%7#0 2u)
                (assert tmp%8#0)
                let tmp%9#0: bool = (b== bu#0 3b)
                (assert tmp%9#0)
                itxn_begin
                let inner_txn_params%1#0: itxn_field_set = itxn_field_set(1)
                let inner_txn_params%1%%param_Fee_idx_0#0: uint64 = 0u
                let inner_txn_params%1%%Fee_length#0: uint64 = 1u
                let inner_txn_params%1%%param_TypeEnum_idx_0#0: uint64 = appl
                let inner_txn_params%1%%TypeEnum_length#0: uint64 = 1u
                let length%0#0: uint64 = (len "s1")
                let value_as_bytes%0#0: bytes = (itob length%0#0)
                let value_as_uint16%0#0: bytes = ((extract 6 2) value_as_bytes%0#0)
                let tmp%10#0: bytes = (concat value_as_uint16%0#0 "s1")
                let awst_tmp%1#0: bytes = "b1"
                let tmp%11#0: uint64 = (len awst_tmp%1#0)
                let tmp%12#0: bytes = (itob tmp%11#0)
                let tmp%13#0: bytes = ((substring 6 8) tmp%12#0)
                let tmp%14#0: bytes = (concat tmp%13#0 awst_tmp%1#0)
                let val_as_bytes%0#0: bytes = (itob 1u)
                let len_%0#0: uint64 = (len 2b)
                let no_overflow%0#0: bool = (<= len_%0#0 64u)
                (assert no_overflow%0#0) // overflow
                let b_zeros%0#0: bytes = (bzero 64u)
                let tmp%15#0: bytes = (b| 2b b_zeros%0#0)
                let inner_txn_params%1%%param_ApplicationArgs_idx_0#0: bytes = method "echo_native_tuple(string,byte[],uint64,uint512)(string,byte[],uint64,uint512)"
                let inner_txn_params%1%%param_ApplicationArgs_idx_1#0: bytes = tmp%10#0
                let inner_txn_params%1%%param_ApplicationArgs_idx_2#0: bytes = tmp%14#0
                let inner_txn_params%1%%param_ApplicationArgs_idx_3#0: bytes = val_as_bytes%0#0
                let inner_txn_params%1%%param_ApplicationArgs_idx_4#0: bytes = tmp%15#0
                let inner_txn_params%1%%ApplicationArgs_length#0: uint64 = 5u
                let inner_txn_params%1%%param_ApplicationID_idx_0#0: uint64 = app#0
                let inner_txn_params%1%%ApplicationID_length#0: uint64 = 1u
                let inner_txn_params%1%%Sender_length#0: uint64 = 0u
                let inner_txn_params%1%%Note_length#0: uint64 = 0u
                let inner_txn_params%1%%Receiver_length#0: uint64 = 0u
                let inner_txn_params%1%%Amount_length#0: uint64 = 0u
                let inner_txn_params%1%%CloseRemainderTo_length#0: uint64 = 0u
                let inner_txn_params%1%%VotePK_length#0: uint64 = 0u
                let inner_txn_params%1%%SelectionPK_length#0: uint64 = 0u
                let inner_txn_params%1%%VoteFirst_length#0: uint64 = 0u
                let inner_txn_params%1%%VoteLast_length#0: uint64 = 0u
                let inner_txn_params%1%%VoteKeyDilution_length#0: uint64 = 0u
                let inner_txn_params%1%%Type_length#0: uint64 = 0u
                let inner_txn_params%1%%XferAsset_length#0: uint64 = 0u
                let inner_txn_params%1%%AssetAmount_length#0: uint64 = 0u
                let inner_txn_params%1%%AssetSender_length#0: uint64 = 0u
                let inner_txn_params%1%%AssetReceiver_length#0: uint64 = 0u
                let inner_txn_params%1%%AssetCloseTo_length#0: uint64 = 0u
                let inner_txn_params%1%%OnCompletion_length#0: uint64 = 0u
                let inner_txn_params%1%%ApprovalProgram_length#0: uint64 = 0u
                let inner_txn_params%1%%ClearStateProgram_length#0: uint64 = 0u
                let inner_txn_params%1%%RekeyTo_length#0: uint64 = 0u
                let inner_txn_params%1%%ConfigAsset_length#0: uint64 = 0u
                let inner_txn_params%1%%ConfigAssetTotal_length#0: uint64 = 0u
                let inner_txn_params%1%%ConfigAssetDecimals_length#0: uint64 = 0u
                let inner_txn_params%1%%ConfigAssetDefaultFrozen_length#0: uint64 = 0u
                let inner_txn_params%1%%ConfigAssetUnitName_length#0: uint64 = 0u
                let inner_txn_params%1%%ConfigAssetName_length#0: uint64 = 0u
                let inner_txn_params%1%%ConfigAssetURL_length#0: uint64 = 0u
                let inner_txn_params%1%%ConfigAssetMetadataHash_length#0: uint64 = 0u
                let inner_txn_params%1%%ConfigAssetManager_length#0: uint64 = 0u
                let inner_txn_params%1%%ConfigAssetReserve_length#0: uint64 = 0u
                let inner_txn_params%1%%ConfigAssetFreeze_length#0: uint64 = 0u
                let inner_txn_params%1%%ConfigAssetClawback_length#0: uint64 = 0u
                let inner_txn_params%1%%FreezeAsset_length#0: uint64 = 0u
                let inner_txn_params%1%%FreezeAssetAccount_length#0: uint64 = 0u
                let inner_txn_params%1%%FreezeAssetFrozen_length#0: uint64 = 0u
                let inner_txn_params%1%%GlobalNumUint_length#0: uint64 = 0u
                let inner_txn_params%1%%GlobalNumByteSlice_length#0: uint64 = 0u
                let inner_txn_params%1%%LocalNumUint_length#0: uint64 = 0u
                let inner_txn_params%1%%LocalNumByteSlice_length#0: uint64 = 0u
                let inner_txn_params%1%%ExtraProgramPages_length#0: uint64 = 0u
                let inner_txn_params%1%%Nonparticipation_length#0: uint64 = 0u
                let inner_txn_params%1%%StateProofPK_length#0: uint64 = 0u
                let inner_txn_params%1%%Accounts_length#0: uint64 = 0u
                let inner_txn_params%1%%Assets_length#0: uint64 = 0u
                let inner_txn_params%1%%Applications_length#0: uint64 = 0u
                let inner_txn_params%1%%ApprovalProgramPages_length#0: uint64 = 0u
                let inner_txn_params%1%%ClearStateProgramPages_length#0: uint64 = 0u
                ((itxn_field ApplicationID) inner_txn_params%1%%param_ApplicationID_idx_0#0)
                ((itxn_field ApplicationArgs) inner_txn_params%1%%param_ApplicationArgs_idx_0#0)
                ((itxn_field ApplicationArgs) inner_txn_params%1%%param_ApplicationArgs_idx_1#0)
                ((itxn_field ApplicationArgs) inner_txn_params%1%%param_ApplicationArgs_idx_2#0)
                ((itxn_field ApplicationArgs) inner_txn_params%1%%param_ApplicationArgs_idx_3#0)
                ((itxn_field ApplicationArgs) inner_txn_params%1%%param_ApplicationArgs_idx_4#0)
                ((itxn_field TypeEnum) inner_txn_params%1%%param_TypeEnum_idx_0#0)
                ((itxn_field Fee) inner_txn_params%1%%param_Fee_idx_0#0)
                goto block@2
            block@2: // next_txn_L187
                itxn_submit
                let txn#1: itxn_group_idx = itxn_group_idx(0)
                let txn._is_last#1: bool = 1u
                let txn.Sender#1: bytes = itxn[txn#1].Sender
                let txn.Fee#1: uint64 = itxn[txn#1].Fee
                let txn.FirstValid#1: uint64 = itxn[txn#1].FirstValid
                let txn.FirstValidTime#1: uint64 = itxn[txn#1].FirstValidTime
                let txn.LastValid#1: uint64 = itxn[txn#1].LastValid
                let txn.Note#1: bytes = itxn[txn#1].Note
                let txn.Lease#1: bytes = itxn[txn#1].Lease
                let txn.Receiver#1: bytes = itxn[txn#1].Receiver
                let txn.Amount#1: uint64 = itxn[txn#1].Amount
                let txn.CloseRemainderTo#1: bytes = itxn[txn#1].CloseRemainderTo
                let txn.VotePK#1: bytes = itxn[txn#1].VotePK
                let txn.SelectionPK#1: bytes = itxn[txn#1].SelectionPK
                let txn.VoteFirst#1: uint64 = itxn[txn#1].VoteFirst
                let txn.VoteLast#1: uint64 = itxn[txn#1].VoteLast
                let txn.VoteKeyDilution#1: uint64 = itxn[txn#1].VoteKeyDilution
                let txn.Type#1: bytes = itxn[txn#1].Type
                let txn.TypeEnum#1: uint64 = itxn[txn#1].TypeEnum
                let txn.XferAsset#1: uint64 = itxn[txn#1].XferAsset
                let txn.AssetAmount#1: uint64 = itxn[txn#1].AssetAmount
                let txn.AssetSender#1: bytes = itxn[txn#1].AssetSender
                let txn.AssetReceiver#1: bytes = itxn[txn#1].AssetReceiver
                let txn.AssetCloseTo#1: bytes = itxn[txn#1].AssetCloseTo
                let txn.GroupIndex#1: uint64 = itxn[txn#1].GroupIndex
                let txn.TxID#1: bytes = itxn[txn#1].TxID
                let txn.ApplicationID#1: uint64 = itxn[txn#1].ApplicationID
                let txn.OnCompletion#1: uint64 = itxn[txn#1].OnCompletion
                let txn.NumAppArgs#1: uint64 = itxn[txn#1].NumAppArgs
                let txn.NumAccounts#1: uint64 = itxn[txn#1].NumAccounts
                let txn.ApprovalProgram#1: bytes = itxn[txn#1].ApprovalProgram
                let txn.ClearStateProgram#1: bytes = itxn[txn#1].ClearStateProgram
                let txn.RekeyTo#1: bytes = itxn[txn#1].RekeyTo
                let txn.ConfigAsset#1: uint64 = itxn[txn#1].ConfigAsset
                let txn.ConfigAssetTotal#1: uint64 = itxn[txn#1].ConfigAssetTotal
                let txn.ConfigAssetDecimals#1: uint64 = itxn[txn#1].ConfigAssetDecimals
                let txn.ConfigAssetDefaultFrozen#1: bool = itxn[txn#1].ConfigAssetDefaultFrozen
                let txn.ConfigAssetUnitName#1: bytes = itxn[txn#1].ConfigAssetUnitName
                let txn.ConfigAssetName#1: bytes = itxn[txn#1].ConfigAssetName
                let txn.ConfigAssetURL#1: bytes = itxn[txn#1].ConfigAssetURL
                let txn.ConfigAssetMetadataHash#1: bytes = itxn[txn#1].ConfigAssetMetadataHash
                let txn.ConfigAssetManager#1: bytes = itxn[txn#1].ConfigAssetManager
                let txn.ConfigAssetReserve#1: bytes = itxn[txn#1].ConfigAssetReserve
                let txn.ConfigAssetFreeze#1: bytes = itxn[txn#1].ConfigAssetFreeze
                let txn.ConfigAssetClawback#1: bytes = itxn[txn#1].ConfigAssetClawback
                let txn.FreezeAsset#1: uint64 = itxn[txn#1].FreezeAsset
                let txn.FreezeAssetAccount#1: bytes = itxn[txn#1].FreezeAssetAccount
                let txn.FreezeAssetFrozen#1: bool = itxn[txn#1].FreezeAssetFrozen
                let txn.NumAssets#1: uint64 = itxn[txn#1].NumAssets
                let txn.NumApplications#1: uint64 = itxn[txn#1].NumApplications
                let txn.GlobalNumUint#1: uint64 = itxn[txn#1].GlobalNumUint
                let txn.GlobalNumByteSlice#1: uint64 = itxn[txn#1].GlobalNumByteSlice
                let txn.LocalNumUint#1: uint64 = itxn[txn#1].LocalNumUint
                let txn.LocalNumByteSlice#1: uint64 = itxn[txn#1].LocalNumByteSlice
                let txn.ExtraProgramPages#1: uint64 = itxn[txn#1].ExtraProgramPages
                let txn.Nonparticipation#1: bool = itxn[txn#1].Nonparticipation
                let txn.NumLogs#1: uint64 = itxn[txn#1].NumLogs
                let txn.CreatedAssetID#1: uint64 = itxn[txn#1].CreatedAssetID
                let txn.CreatedApplicationID#1: uint64 = itxn[txn#1].CreatedApplicationID
                let txn.LastLog#1: bytes = itxn[txn#1].LastLog
                let txn.StateProofPK#1: bytes = itxn[txn#1].StateProofPK
                let txn.NumApprovalProgramPages#1: uint64 = itxn[txn#1].NumApprovalProgramPages
                let txn.NumClearStateProgramPages#1: uint64 = itxn[txn#1].NumClearStateProgramPages
                let awst_tmp%2#0: bytes = txn.LastLog#1
                let tmp%16#0: bytes = ((extract 4 0) awst_tmp%2#0)
                let tmp%17#0: bytes = ((extract 0 4) awst_tmp%2#0)
                let tmp%18#0: bool = (== tmp%17#0 0x151f7c75)
                let (value%1#0: bytes, check%1#0: bool) = (tmp%16#0, tmp%18#0)
                (assert check%1#0) // ARC4 prefix is valid
                let result2#0: bytes = value%1#0
                let tmp%19#0: bool = (== result1#0 result2#0)
                (assert tmp%19#0)
                itxn_begin
                let inner_txn_params%2#0: itxn_field_set = itxn_field_set(2)
                let inner_txn_params%2%%param_Fee_idx_0#0: uint64 = 0u
                let inner_txn_params%2%%Fee_length#0: uint64 = 1u
                let inner_txn_params%2%%param_TypeEnum_idx_0#0: uint64 = appl
                let inner_txn_params%2%%TypeEnum_length#0: uint64 = 1u
                let inner_txn_params%2%%param_ApplicationArgs_idx_0#0: bytes = method "echo_native_tuple(string,byte[],uint64,uint512)(string,byte[],uint64,uint512)"
                let inner_txn_params%2%%param_ApplicationArgs_idx_1#0: bytes = "\x00\x02s1"
                let inner_txn_params%2%%param_ApplicationArgs_idx_2#0: bytes = 0x00026231
                let inner_txn_params%2%%param_ApplicationArgs_idx_3#0: bytes = 0x0000000000000001
                let inner_txn_params%2%%param_ApplicationArgs_idx_4#0: bytes = 0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002
                let inner_txn_params%2%%ApplicationArgs_length#0: uint64 = 5u
                let inner_txn_params%2%%param_ApplicationID_idx_0#0: uint64 = app#0
                let inner_txn_params%2%%ApplicationID_length#0: uint64 = 1u
                let inner_txn_params%2%%Sender_length#0: uint64 = 0u
                let inner_txn_params%2%%Note_length#0: uint64 = 0u
                let inner_txn_params%2%%Receiver_length#0: uint64 = 0u
                let inner_txn_params%2%%Amount_length#0: uint64 = 0u
                let inner_txn_params%2%%CloseRemainderTo_length#0: uint64 = 0u
                let inner_txn_params%2%%VotePK_length#0: uint64 = 0u
                let inner_txn_params%2%%SelectionPK_length#0: uint64 = 0u
                let inner_txn_params%2%%VoteFirst_length#0: uint64 = 0u
                let inner_txn_params%2%%VoteLast_length#0: uint64 = 0u
                let inner_txn_params%2%%VoteKeyDilution_length#0: uint64 = 0u
                let inner_txn_params%2%%Type_length#0: uint64 = 0u
                let inner_txn_params%2%%XferAsset_length#0: uint64 = 0u
                let inner_txn_params%2%%AssetAmount_length#0: uint64 = 0u
                let inner_txn_params%2%%AssetSender_length#0: uint64 = 0u
                let inner_txn_params%2%%AssetReceiver_length#0: uint64 = 0u
                let inner_txn_params%2%%AssetCloseTo_length#0: uint64 = 0u
                let inner_txn_params%2%%OnCompletion_length#0: uint64 = 0u
                let inner_txn_params%2%%ApprovalProgram_length#0: uint64 = 0u
                let inner_txn_params%2%%ClearStateProgram_length#0: uint64 = 0u
                let inner_txn_params%2%%RekeyTo_length#0: uint64 = 0u
                let inner_txn_params%2%%ConfigAsset_length#0: uint64 = 0u
                let inner_txn_params%2%%ConfigAssetTotal_length#0: uint64 = 0u
                let inner_txn_params%2%%ConfigAssetDecimals_length#0: uint64 = 0u
                let inner_txn_params%2%%ConfigAssetDefaultFrozen_length#0: uint64 = 0u
                let inner_txn_params%2%%ConfigAssetUnitName_length#0: uint64 = 0u
                let inner_txn_params%2%%ConfigAssetName_length#0: uint64 = 0u
                let inner_txn_params%2%%ConfigAssetURL_length#0: uint64 = 0u
                let inner_txn_params%2%%ConfigAssetMetadataHash_length#0: uint64 = 0u
                let inner_txn_params%2%%ConfigAssetManager_length#0: uint64 = 0u
                let inner_txn_params%2%%ConfigAssetReserve_length#0: uint64 = 0u
                let inner_txn_params%2%%ConfigAssetFreeze_length#0: uint64 = 0u
                let inner_txn_params%2%%ConfigAssetClawback_length#0: uint64 = 0u
                let inner_txn_params%2%%FreezeAsset_length#0: uint64 = 0u
                let inner_txn_params%2%%FreezeAssetAccount_length#0: uint64 = 0u
                let inner_txn_params%2%%FreezeAssetFrozen_length#0: uint64 = 0u
                let inner_txn_params%2%%GlobalNumUint_length#0: uint64 = 0u
                let inner_txn_params%2%%GlobalNumByteSlice_length#0: uint64 = 0u
                let inner_txn_params%2%%LocalNumUint_length#0: uint64 = 0u
                let inner_txn_params%2%%LocalNumByteSlice_length#0: uint64 = 0u
                let inner_txn_params%2%%ExtraProgramPages_length#0: uint64 = 0u
                let inner_txn_params%2%%Nonparticipation_length#0: uint64 = 0u
                let inner_txn_params%2%%StateProofPK_length#0: uint64 = 0u
                let inner_txn_params%2%%Accounts_length#0: uint64 = 0u
                let inner_txn_params%2%%Assets_length#0: uint64 = 0u
                let inner_txn_params%2%%Applications_length#0: uint64 = 0u
                let inner_txn_params%2%%ApprovalProgramPages_length#0: uint64 = 0u
                let inner_txn_params%2%%ClearStateProgramPages_length#0: uint64 = 0u
                ((itxn_field ApplicationID) inner_txn_params%2%%param_ApplicationID_idx_0#0)
                ((itxn_field ApplicationArgs) inner_txn_params%2%%param_ApplicationArgs_idx_0#0)
                ((itxn_field ApplicationArgs) inner_txn_params%2%%param_ApplicationArgs_idx_1#0)
                ((itxn_field ApplicationArgs) inner_txn_params%2%%param_ApplicationArgs_idx_2#0)
                ((itxn_field ApplicationArgs) inner_txn_params%2%%param_ApplicationArgs_idx_3#0)
                ((itxn_field ApplicationArgs) inner_txn_params%2%%param_ApplicationArgs_idx_4#0)
                ((itxn_field TypeEnum) inner_txn_params%2%%param_TypeEnum_idx_0#0)
                ((itxn_field Fee) inner_txn_params%2%%param_Fee_idx_0#0)
                goto block@3
            block@3: // next_txn_L201
                itxn_submit
                let txn#2: itxn_group_idx = itxn_group_idx(0)
                let txn._is_last#2: bool = 1u
                let txn.Sender#2: bytes = itxn[txn#2].Sender
                let txn.Fee#2: uint64 = itxn[txn#2].Fee
                let txn.FirstValid#2: uint64 = itxn[txn#2].FirstValid
                let txn.FirstValidTime#2: uint64 = itxn[txn#2].FirstValidTime
                let txn.LastValid#2: uint64 = itxn[txn#2].LastValid
                let txn.Note#2: bytes = itxn[txn#2].Note
                let txn.Lease#2: bytes = itxn[txn#2].Lease
                let txn.Receiver#2: bytes = itxn[txn#2].Receiver
                let txn.Amount#2: uint64 = itxn[txn#2].Amount
                let txn.CloseRemainderTo#2: bytes = itxn[txn#2].CloseRemainderTo
                let txn.VotePK#2: bytes = itxn[txn#2].VotePK
                let txn.SelectionPK#2: bytes = itxn[txn#2].SelectionPK
                let txn.VoteFirst#2: uint64 = itxn[txn#2].VoteFirst
                let txn.VoteLast#2: uint64 = itxn[txn#2].VoteLast
                let txn.VoteKeyDilution#2: uint64 = itxn[txn#2].VoteKeyDilution
                let txn.Type#2: bytes = itxn[txn#2].Type
                let txn.TypeEnum#2: uint64 = itxn[txn#2].TypeEnum
                let txn.XferAsset#2: uint64 = itxn[txn#2].XferAsset
                let txn.AssetAmount#2: uint64 = itxn[txn#2].AssetAmount
                let txn.AssetSender#2: bytes = itxn[txn#2].AssetSender
                let txn.AssetReceiver#2: bytes = itxn[txn#2].AssetReceiver
                let txn.AssetCloseTo#2: bytes = itxn[txn#2].AssetCloseTo
                let txn.GroupIndex#2: uint64 = itxn[txn#2].GroupIndex
                let txn.TxID#2: bytes = itxn[txn#2].TxID
                let txn.ApplicationID#2: uint64 = itxn[txn#2].ApplicationID
                let txn.OnCompletion#2: uint64 = itxn[txn#2].OnCompletion
                let txn.NumAppArgs#2: uint64 = itxn[txn#2].NumAppArgs
                let txn.NumAccounts#2: uint64 = itxn[txn#2].NumAccounts
                let txn.ApprovalProgram#2: bytes = itxn[txn#2].ApprovalProgram
                let txn.ClearStateProgram#2: bytes = itxn[txn#2].ClearStateProgram
                let txn.RekeyTo#2: bytes = itxn[txn#2].RekeyTo
                let txn.ConfigAsset#2: uint64 = itxn[txn#2].ConfigAsset
                let txn.ConfigAssetTotal#2: uint64 = itxn[txn#2].ConfigAssetTotal
                let txn.ConfigAssetDecimals#2: uint64 = itxn[txn#2].ConfigAssetDecimals
                let txn.ConfigAssetDefaultFrozen#2: bool = itxn[txn#2].ConfigAssetDefaultFrozen
                let txn.ConfigAssetUnitName#2: bytes = itxn[txn#2].ConfigAssetUnitName
                let txn.ConfigAssetName#2: bytes = itxn[txn#2].ConfigAssetName
                let txn.ConfigAssetURL#2: bytes = itxn[txn#2].ConfigAssetURL
                let txn.ConfigAssetMetadataHash#2: bytes = itxn[txn#2].ConfigAssetMetadataHash
                let txn.ConfigAssetManager#2: bytes = itxn[txn#2].ConfigAssetManager
                let txn.ConfigAssetReserve#2: bytes = itxn[txn#2].ConfigAssetReserve
                let txn.ConfigAssetFreeze#2: bytes = itxn[txn#2].ConfigAssetFreeze
                let txn.ConfigAssetClawback#2: bytes = itxn[txn#2].ConfigAssetClawback
                let txn.FreezeAsset#2: uint64 = itxn[txn#2].FreezeAsset
                let txn.FreezeAssetAccount#2: bytes = itxn[txn#2].FreezeAssetAccount
                let txn.FreezeAssetFrozen#2: bool = itxn[txn#2].FreezeAssetFrozen
                let txn.NumAssets#2: uint64 = itxn[txn#2].NumAssets
                let txn.NumApplications#2: uint64 = itxn[txn#2].NumApplications
                let txn.GlobalNumUint#2: uint64 = itxn[txn#2].GlobalNumUint
                let txn.GlobalNumByteSlice#2: uint64 = itxn[txn#2].GlobalNumByteSlice
                let txn.LocalNumUint#2: uint64 = itxn[txn#2].LocalNumUint
                let txn.LocalNumByteSlice#2: uint64 = itxn[txn#2].LocalNumByteSlice
                let txn.ExtraProgramPages#2: uint64 = itxn[txn#2].ExtraProgramPages
                let txn.Nonparticipation#2: bool = itxn[txn#2].Nonparticipation
                let txn.NumLogs#2: uint64 = itxn[txn#2].NumLogs
                let txn.CreatedAssetID#2: uint64 = itxn[txn#2].CreatedAssetID
                let txn.CreatedApplicationID#2: uint64 = itxn[txn#2].CreatedApplicationID
                let txn.LastLog#2: bytes = itxn[txn#2].LastLog
                let txn.StateProofPK#2: bytes = itxn[txn#2].StateProofPK
                let txn.NumApprovalProgramPages#2: uint64 = itxn[txn#2].NumApprovalProgramPages
                let txn.NumClearStateProgramPages#2: uint64 = itxn[txn#2].NumClearStateProgramPages
                let awst_tmp%3#0: bytes = txn.LastLog#2
                let tmp%20#0: bytes = ((extract 4 0) awst_tmp%3#0)
                let tmp%21#0: bytes = ((extract 0 4) awst_tmp%3#0)
                let tmp%22#0: bool = (== tmp%21#0 0x151f7c75)
                let (value%2#0: bytes, check%2#0: bool) = (tmp%20#0, tmp%22#0)
                (assert check%2#0) // ARC4 prefix is valid
                let result3#0: bytes = value%2#0
                let tmp%23#0: bool = (== result1#0 result3#0)
                (assert tmp%23#0)
                return 
    
    program clear-state:
        subroutine test_cases.typed_abi_call.typed_c2c.Greeter.clear_state_program() -> bool:
            block@0: // L17
                return 1u