{
    "hints": {
        "test_method_selector_kinds(application)void": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "test_arg_conversion(application)void": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "test_15plus_args(application)void": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "test_void(application)void": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "test_ref_types(application,asset)void": {
            "call_config": {
                "no_op": "CALL"
            }
        }
    },
    "source": {
        "approval": "",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDEwCgp0ZXN0X2Nhc2VzLnR5cGVkX2FiaV9jYWxsLnR5cGVkX2MyYy5HcmVldGVyLmNsZWFyX3N0YXRlX3Byb2dyYW06CiAgICAvLyB0eXBlZF9hYmlfY2FsbC90eXBlZF9jMmMucHk6NgogICAgLy8gY2xhc3MgR3JlZXRlcihBUkM0Q29udHJhY3QpOgogICAgaW50IDEKICAgIHJldHVybgo="
    },
    "state": {
        "global": {
            "num_byte_slices": 0,
            "num_uints": 0
        },
        "local": {
            "num_byte_slices": 0,
            "num_uints": 0
        }
    },
    "schema": {
        "global": {
            "declared": {},
            "reserved": {}
        },
        "local": {
            "declared": {},
            "reserved": {}
        }
    },
    "contract": {
        "name": "Greeter",
        "methods": [
            {
                "name": "test_method_selector_kinds",
                "args": [
                    {
                        "type": "application",
                        "name": "app"
                    }
                ],
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "test_arg_conversion",
                "args": [
                    {
                        "type": "application",
                        "name": "app"
                    }
                ],
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "test_15plus_args",
                "args": [
                    {
                        "type": "application",
                        "name": "app"
                    }
                ],
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "test_void",
                "args": [
                    {
                        "type": "application",
                        "name": "app"
                    }
                ],
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "test_ref_types",
                "args": [
                    {
                        "type": "application",
                        "name": "app"
                    },
                    {
                        "type": "asset",
                        "name": "asset"
                    }
                ],
                "returns": {
                    "type": "void"
                }
            }
        ],
        "networks": {}
    },
    "bare_call_config": {
        "no_op": "CREATE"
    }
}