contract Greeter
{
  abimethod test_method_selector_kinds(app: puyapy.Application): None
  {
    (result, _itxn): tuple[puyapy.arc4.String, puyapy.itxn.ApplicationCallInnerTransaction] = (reinterpret_cast<puyapy.arc4.String>(checked_maybe((extract<4, 0>(SINGLE_EVAL(id=0, source=SINGLE_EVAL(id=1, source=submit_txn(create_inner_transaction(TypeEnum=appl, ApplicationArgs=(Method("echo(string)string"), arc4_encode('test1', puyapy.arc4.String)), ApplicationID=app, Fee=0u))).LastLog)), extract<0, 4>(SINGLE_EVAL(id=0, source=SINGLE_EVAL(id=1, source=submit_txn(create_inner_transaction(TypeEnum=appl, ApplicationArgs=(Method("echo(string)string"), arc4_encode('test1', puyapy.arc4.String)), ApplicationID=app, Fee=0u))).LastLog)) == hex<"151F7C75">))), SINGLE_EVAL(id=1, source=submit_txn(create_inner_transaction(TypeEnum=appl, ApplicationArgs=(Method("echo(string)string"), arc4_encode('test1', puyapy.arc4.String)), ApplicationID=app, Fee=0u))))
    assert(reinterpret_cast<puyapy.Bytes>(result) == reinterpret_cast<puyapy.Bytes>(arc4_encode('echo: test1', puyapy.arc4.String)))
    (result, _itxn): tuple[puyapy.arc4.String, puyapy.itxn.ApplicationCallInnerTransaction] = (reinterpret_cast<puyapy.arc4.String>(checked_maybe((extract<4, 0>(SINGLE_EVAL(id=2, source=SINGLE_EVAL(id=3, source=submit_txn(create_inner_transaction(TypeEnum=appl, ApplicationArgs=(Method("echo(string)string"), arc4_encode('test2', puyapy.arc4.String)), ApplicationID=app, Fee=0u))).LastLog)), extract<0, 4>(SINGLE_EVAL(id=2, source=SINGLE_EVAL(id=3, source=submit_txn(create_inner_transaction(TypeEnum=appl, ApplicationArgs=(Method("echo(string)string"), arc4_encode('test2', puyapy.arc4.String)), ApplicationID=app, Fee=0u))).LastLog)) == hex<"151F7C75">))), SINGLE_EVAL(id=3, source=submit_txn(create_inner_transaction(TypeEnum=appl, ApplicationArgs=(Method("echo(string)string"), arc4_encode('test2', puyapy.arc4.String)), ApplicationID=app, Fee=0u))))
    assert(reinterpret_cast<puyapy.Bytes>(result) == reinterpret_cast<puyapy.Bytes>(arc4_encode('echo: test2', puyapy.arc4.String)))
    (result, _itxn): tuple[puyapy.arc4.String, puyapy.itxn.ApplicationCallInnerTransaction] = (reinterpret_cast<puyapy.arc4.String>(checked_maybe((extract<4, 0>(SINGLE_EVAL(id=4, source=SINGLE_EVAL(id=5, source=submit_txn(create_inner_transaction(TypeEnum=appl, ApplicationArgs=(Method("echo(string)string"), arc4_encode('test3', puyapy.arc4.String)), ApplicationID=app, Fee=0u))).LastLog)), extract<0, 4>(SINGLE_EVAL(id=4, source=SINGLE_EVAL(id=5, source=submit_txn(create_inner_transaction(TypeEnum=appl, ApplicationArgs=(Method("echo(string)string"), arc4_encode('test3', puyapy.arc4.String)), ApplicationID=app, Fee=0u))).LastLog)) == hex<"151F7C75">))), SINGLE_EVAL(id=5, source=submit_txn(create_inner_transaction(TypeEnum=appl, ApplicationArgs=(Method("echo(string)string"), arc4_encode('test3', puyapy.arc4.String)), ApplicationID=app, Fee=0u))))
    assert(reinterpret_cast<puyapy.Bytes>(result) == reinterpret_cast<puyapy.Bytes>(arc4_encode('echo: test3', puyapy.arc4.String)))
    (result, _itxn): tuple[puyapy.arc4.String, puyapy.itxn.ApplicationCallInnerTransaction] = (reinterpret_cast<puyapy.arc4.String>(checked_maybe((extract<4, 0>(SINGLE_EVAL(id=6, source=SINGLE_EVAL(id=7, source=submit_txn(create_inner_transaction(TypeEnum=appl, ApplicationArgs=(Method("echo(string)string"), arc4_encode('test4', puyapy.arc4.String)), ApplicationID=app, Fee=0u))).LastLog)), extract<0, 4>(SINGLE_EVAL(id=6, source=SINGLE_EVAL(id=7, source=submit_txn(create_inner_transaction(TypeEnum=appl, ApplicationArgs=(Method("echo(string)string"), arc4_encode('test4', puyapy.arc4.String)), ApplicationID=app, Fee=0u))).LastLog)) == hex<"151F7C75">))), SINGLE_EVAL(id=7, source=submit_txn(create_inner_transaction(TypeEnum=appl, ApplicationArgs=(Method("echo(string)string"), arc4_encode('test4', puyapy.arc4.String)), ApplicationID=app, Fee=0u))))
    assert(reinterpret_cast<puyapy.Bytes>(result) == reinterpret_cast<puyapy.Bytes>(arc4_encode('echo: test4', puyapy.arc4.String)))
    (result, _itxn): tuple[puyapy.arc4.String, puyapy.itxn.ApplicationCallInnerTransaction] = (reinterpret_cast<puyapy.arc4.String>(checked_maybe((extract<4, 0>(SINGLE_EVAL(id=8, source=SINGLE_EVAL(id=9, source=submit_txn(create_inner_transaction(TypeEnum=appl, ApplicationArgs=(Method("echo(string)string"), arc4_encode('test5', puyapy.arc4.String)), ApplicationID=app, Fee=0u))).LastLog)), extract<0, 4>(SINGLE_EVAL(id=8, source=SINGLE_EVAL(id=9, source=submit_txn(create_inner_transaction(TypeEnum=appl, ApplicationArgs=(Method("echo(string)string"), arc4_encode('test5', puyapy.arc4.String)), ApplicationID=app, Fee=0u))).LastLog)) == hex<"151F7C75">))), SINGLE_EVAL(id=9, source=submit_txn(create_inner_transaction(TypeEnum=appl, ApplicationArgs=(Method("echo(string)string"), arc4_encode('test5', puyapy.arc4.String)), ApplicationID=app, Fee=0u))))
    assert(reinterpret_cast<puyapy.Bytes>(result) == reinterpret_cast<puyapy.Bytes>(arc4_encode('echo: test5', puyapy.arc4.String)))
  }
  
  abimethod test_arg_conversion(app: puyapy.Application): None
  {
    itxn: puyapy.itxn.ApplicationCallInnerTransaction = submit_txn(create_inner_transaction(TypeEnum=appl, ApplicationArgs=(Method("log_string(string)void"), arc4_encode('converted1', puyapy.arc4.String)), ApplicationID=app, Fee=0u))
    assert(itxn.LastLog == 'converted1')
    itxn: puyapy.itxn.ApplicationCallInnerTransaction = submit_txn(create_inner_transaction(TypeEnum=appl, ApplicationArgs=(Method("log_uint64(uint64)void"), 2arc4u64), ApplicationID=app, Fee=0u))
    assert(itxn.LastLog == itob(2u))
    itxn: puyapy.itxn.ApplicationCallInnerTransaction = submit_txn(create_inner_transaction(TypeEnum=appl, ApplicationArgs=(Method("log_uint512(uint512)void"), 3arc4n512), ApplicationID=app, Fee=0u))
    assert(itxn.LastLog == bzero(56u) + itob(3u))
    itxn: puyapy.itxn.ApplicationCallInnerTransaction = submit_txn(create_inner_transaction(TypeEnum=appl, ApplicationArgs=(Method("log_bool(bool)void"), arc4_encode(true, puyapy.arc4.Bool)), ApplicationID=app, Fee=0u))
    assert(itxn.LastLog == 'True')
  }
  
  abimethod test_void(app: puyapy.Application): None
  {
    itxn: puyapy.itxn.ApplicationCallInnerTransaction = submit_txn(create_inner_transaction(TypeEnum=appl, ApplicationArgs=(Method("log_string(string)void"), arc4_encode('World1', puyapy.arc4.String)), ApplicationID=app, Fee=0u))
    assert(itxn.LastLog == 'World1')
    itxn: puyapy.itxn.ApplicationCallInnerTransaction = submit_txn(create_inner_transaction(TypeEnum=appl, ApplicationArgs=(Method("log_string(string)void"), arc4_encode('World2', puyapy.arc4.String)), ApplicationID=app, Fee=0u))
    assert(itxn.LastLog == 'World2')
    itxn: puyapy.itxn.ApplicationCallInnerTransaction = submit_txn(create_inner_transaction(TypeEnum=appl, ApplicationArgs=(Method("log_string(string)void"), arc4_encode('World3', puyapy.arc4.String)), ApplicationID=app, Fee=0u))
    assert(itxn.LastLog == 'World3')
    itxn: puyapy.itxn.ApplicationCallInnerTransaction = submit_txn(create_inner_transaction(TypeEnum=appl, ApplicationArgs=(Method("log_string(string)void"), arc4_encode('World4', puyapy.arc4.String)), ApplicationID=app, Fee=0u))
    assert(itxn.LastLog == 'World4')
  }
}