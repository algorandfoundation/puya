contract Greeter
{
  abimethod test_method_selector_kinds(app: algopy.Application): None
  {
    (result, _txn): tuple[algopy.arc4.String, algopy.itxn.ApplicationCallInnerTransaction] = (reinterpret_cast<algopy.arc4.String>(checked_maybe((extract<4, 0>(SINGLE_EVAL(id=0, source=SINGLE_EVAL(id=1, source=submit_txn(create_inner_transaction(Fee=0u, TypeEnum=appl, ApplicationArgs=(Method("echo(string)string"), arc4_encode('test1', algopy.arc4.String)), ApplicationID=app))).LastLog)), extract<0, 4>(SINGLE_EVAL(id=0, source=SINGLE_EVAL(id=1, source=submit_txn(create_inner_transaction(Fee=0u, TypeEnum=appl, ApplicationArgs=(Method("echo(string)string"), arc4_encode('test1', algopy.arc4.String)), ApplicationID=app))).LastLog)) == hex<"151F7C75">))), SINGLE_EVAL(id=1, source=submit_txn(create_inner_transaction(Fee=0u, TypeEnum=appl, ApplicationArgs=(Method("echo(string)string"), arc4_encode('test1', algopy.arc4.String)), ApplicationID=app))))
    assert(reinterpret_cast<algopy.Bytes>(result) == reinterpret_cast<algopy.Bytes>(arc4_encode('echo: test1', algopy.arc4.String)))
    (result, _txn): tuple[algopy.arc4.String, algopy.itxn.ApplicationCallInnerTransaction] = (reinterpret_cast<algopy.arc4.String>(checked_maybe((extract<4, 0>(SINGLE_EVAL(id=2, source=SINGLE_EVAL(id=3, source=submit_txn(create_inner_transaction(Fee=0u, TypeEnum=appl, ApplicationArgs=(Method("echo(string)string"), arc4_encode('test2', algopy.arc4.String)), ApplicationID=app))).LastLog)), extract<0, 4>(SINGLE_EVAL(id=2, source=SINGLE_EVAL(id=3, source=submit_txn(create_inner_transaction(Fee=0u, TypeEnum=appl, ApplicationArgs=(Method("echo(string)string"), arc4_encode('test2', algopy.arc4.String)), ApplicationID=app))).LastLog)) == hex<"151F7C75">))), SINGLE_EVAL(id=3, source=submit_txn(create_inner_transaction(Fee=0u, TypeEnum=appl, ApplicationArgs=(Method("echo(string)string"), arc4_encode('test2', algopy.arc4.String)), ApplicationID=app))))
    assert(reinterpret_cast<algopy.Bytes>(result) == reinterpret_cast<algopy.Bytes>(arc4_encode('echo: test2', algopy.arc4.String)))
    (result, _txn): tuple[algopy.arc4.String, algopy.itxn.ApplicationCallInnerTransaction] = (reinterpret_cast<algopy.arc4.String>(checked_maybe((extract<4, 0>(SINGLE_EVAL(id=4, source=SINGLE_EVAL(id=5, source=submit_txn(create_inner_transaction(Fee=0u, TypeEnum=appl, ApplicationArgs=(Method("echo(string)string"), arc4_encode('test3', algopy.arc4.String)), ApplicationID=app))).LastLog)), extract<0, 4>(SINGLE_EVAL(id=4, source=SINGLE_EVAL(id=5, source=submit_txn(create_inner_transaction(Fee=0u, TypeEnum=appl, ApplicationArgs=(Method("echo(string)string"), arc4_encode('test3', algopy.arc4.String)), ApplicationID=app))).LastLog)) == hex<"151F7C75">))), SINGLE_EVAL(id=5, source=submit_txn(create_inner_transaction(Fee=0u, TypeEnum=appl, ApplicationArgs=(Method("echo(string)string"), arc4_encode('test3', algopy.arc4.String)), ApplicationID=app))))
    assert(reinterpret_cast<algopy.Bytes>(result) == reinterpret_cast<algopy.Bytes>(arc4_encode('echo: test3', algopy.arc4.String)))
    (result, _txn): tuple[algopy.arc4.String, algopy.itxn.ApplicationCallInnerTransaction] = (reinterpret_cast<algopy.arc4.String>(checked_maybe((extract<4, 0>(SINGLE_EVAL(id=6, source=SINGLE_EVAL(id=7, source=submit_txn(create_inner_transaction(Fee=0u, TypeEnum=appl, ApplicationArgs=(Method("echo(string)string"), arc4_encode('test4', algopy.arc4.String)), ApplicationID=app))).LastLog)), extract<0, 4>(SINGLE_EVAL(id=6, source=SINGLE_EVAL(id=7, source=submit_txn(create_inner_transaction(Fee=0u, TypeEnum=appl, ApplicationArgs=(Method("echo(string)string"), arc4_encode('test4', algopy.arc4.String)), ApplicationID=app))).LastLog)) == hex<"151F7C75">))), SINGLE_EVAL(id=7, source=submit_txn(create_inner_transaction(Fee=0u, TypeEnum=appl, ApplicationArgs=(Method("echo(string)string"), arc4_encode('test4', algopy.arc4.String)), ApplicationID=app))))
    assert(reinterpret_cast<algopy.Bytes>(result) == reinterpret_cast<algopy.Bytes>(arc4_encode('echo: test4', algopy.arc4.String)))
    (result, _txn): tuple[algopy.arc4.String, algopy.itxn.ApplicationCallInnerTransaction] = (reinterpret_cast<algopy.arc4.String>(checked_maybe((extract<4, 0>(SINGLE_EVAL(id=8, source=SINGLE_EVAL(id=9, source=submit_txn(create_inner_transaction(Fee=0u, TypeEnum=appl, ApplicationArgs=(Method("echo(string)string"), arc4_encode('test5', algopy.arc4.String)), ApplicationID=app))).LastLog)), extract<0, 4>(SINGLE_EVAL(id=8, source=SINGLE_EVAL(id=9, source=submit_txn(create_inner_transaction(Fee=0u, TypeEnum=appl, ApplicationArgs=(Method("echo(string)string"), arc4_encode('test5', algopy.arc4.String)), ApplicationID=app))).LastLog)) == hex<"151F7C75">))), SINGLE_EVAL(id=9, source=submit_txn(create_inner_transaction(Fee=0u, TypeEnum=appl, ApplicationArgs=(Method("echo(string)string"), arc4_encode('test5', algopy.arc4.String)), ApplicationID=app))))
    assert(reinterpret_cast<algopy.Bytes>(result) == reinterpret_cast<algopy.Bytes>(arc4_encode('echo: test5', algopy.arc4.String)))
  }
  
  abimethod test_method_overload(app: algopy.Application): None
  {
    (reinterpret_cast<algopy.arc4.String>(checked_maybe((extract<4, 0>(SINGLE_EVAL(id=10, source=SINGLE_EVAL(id=11, source=submit_txn(create_inner_transaction(Fee=0u, TypeEnum=appl, ApplicationArgs=(Method("echo(string)string"), arc4_encode('typed + ignore', algopy.arc4.String)), ApplicationID=app))).LastLog)), extract<0, 4>(SINGLE_EVAL(id=10, source=SINGLE_EVAL(id=11, source=submit_txn(create_inner_transaction(Fee=0u, TypeEnum=appl, ApplicationArgs=(Method("echo(string)string"), arc4_encode('typed + ignore', algopy.arc4.String)), ApplicationID=app))).LastLog)) == hex<"151F7C75">))), SINGLE_EVAL(id=11, source=submit_txn(create_inner_transaction(Fee=0u, TypeEnum=appl, ApplicationArgs=(Method("echo(string)string"), arc4_encode('typed + ignore', algopy.arc4.String)), ApplicationID=app))))
    assert(reinterpret_cast<algopy.Bytes>(reinterpret_cast<algopy.arc4.String>(checked_maybe((extract<4, 0>(SINGLE_EVAL(id=12, source=itxn<LastLog>())), extract<0, 4>(SINGLE_EVAL(id=12, source=itxn<LastLog>())) == hex<"151F7C75">)))) == reinterpret_cast<algopy.Bytes>(arc4_encode('echo: typed + ignore', algopy.arc4.String)))
    submit_txn(create_inner_transaction(Fee=0u, TypeEnum=appl, ApplicationArgs=(Method("echo(string)string"), arc4_encode('untyped + ignore', algopy.arc4.String)), ApplicationID=app))
    assert(reinterpret_cast<algopy.Bytes>(reinterpret_cast<algopy.arc4.String>(checked_maybe((extract<4, 0>(SINGLE_EVAL(id=13, source=itxn<LastLog>())), extract<0, 4>(SINGLE_EVAL(id=13, source=itxn<LastLog>())) == hex<"151F7C75">)))) == reinterpret_cast<algopy.Bytes>(arc4_encode('echo: untyped + ignore', algopy.arc4.String)))
    result: tuple[algopy.arc4.String, algopy.itxn.ApplicationCallInnerTransaction] = (reinterpret_cast<algopy.arc4.String>(checked_maybe((extract<4, 0>(SINGLE_EVAL(id=14, source=SINGLE_EVAL(id=15, source=submit_txn(create_inner_transaction(Fee=0u, TypeEnum=appl, ApplicationArgs=(Method("echo(string)string"), arc4_encode('tuple', algopy.arc4.String)), ApplicationID=app))).LastLog)), extract<0, 4>(SINGLE_EVAL(id=14, source=SINGLE_EVAL(id=15, source=submit_txn(create_inner_transaction(Fee=0u, TypeEnum=appl, ApplicationArgs=(Method("echo(string)string"), arc4_encode('tuple', algopy.arc4.String)), ApplicationID=app))).LastLog)) == hex<"151F7C75">))), SINGLE_EVAL(id=15, source=submit_txn(create_inner_transaction(Fee=0u, TypeEnum=appl, ApplicationArgs=(Method("echo(string)string"), arc4_encode('tuple', algopy.arc4.String)), ApplicationID=app))))
    assert(reinterpret_cast<algopy.Bytes>(result[0]) == reinterpret_cast<algopy.Bytes>(arc4_encode('echo: tuple', algopy.arc4.String)))
    assert(reinterpret_cast<algopy.Bytes>(reinterpret_cast<algopy.arc4.String>(checked_maybe((extract<4, 0>(SINGLE_EVAL(id=16, source=result[1].LastLog)), extract<0, 4>(SINGLE_EVAL(id=16, source=result[1].LastLog)) == hex<"151F7C75">)))) == reinterpret_cast<algopy.Bytes>(arc4_encode('echo: tuple', algopy.arc4.String)))
    txn_result: algopy.itxn.ApplicationCallInnerTransaction = submit_txn(create_inner_transaction(Fee=0u, TypeEnum=appl, ApplicationArgs=(Method("echo(string)string"), arc4_encode('untyped', algopy.arc4.String)), ApplicationID=app))
    assert(reinterpret_cast<algopy.Bytes>(reinterpret_cast<algopy.arc4.String>(checked_maybe((extract<4, 0>(SINGLE_EVAL(id=17, source=txn_result.LastLog)), extract<0, 4>(SINGLE_EVAL(id=17, source=txn_result.LastLog)) == hex<"151F7C75">)))) == reinterpret_cast<algopy.Bytes>(arc4_encode('echo: untyped', algopy.arc4.String)))
  }
  
  abimethod test_arg_conversion(app: algopy.Application): None
  {
    txn: algopy.itxn.ApplicationCallInnerTransaction = submit_txn(create_inner_transaction(Fee=0u, TypeEnum=appl, ApplicationArgs=(Method("log(string)void"), arc4_encode('converted1', algopy.arc4.String)), ApplicationID=app))
    assert(txn.LastLog == 'converted1')
    txn: algopy.itxn.ApplicationCallInnerTransaction = submit_txn(create_inner_transaction(Fee=0u, TypeEnum=appl, ApplicationArgs=(Method("log(uint64)void"), 2arc4u64), ApplicationID=app))
    assert(txn.LastLog == itob(2u))
    txn: algopy.itxn.ApplicationCallInnerTransaction = submit_txn(create_inner_transaction(Fee=0u, TypeEnum=appl, ApplicationArgs=(Method("log(uint512)void"), 3arc4n512), ApplicationID=app))
    assert(txn.LastLog == bzero(56u) + itob(3u))
    txn: algopy.itxn.ApplicationCallInnerTransaction = submit_txn(create_inner_transaction(Fee=0u, TypeEnum=appl, ApplicationArgs=(Method("log(byte[])void"), arc4_encode(hex<"34">, algopy.arc4.DynamicBytes)), ApplicationID=app))
    assert(txn.LastLog == '4')
    txn: algopy.itxn.ApplicationCallInnerTransaction = submit_txn(create_inner_transaction(Fee=0u, TypeEnum=appl, ApplicationArgs=(Method("log(bool)void"), arc4_encode(true, algopy.arc4.Bool)), ApplicationID=app))
    assert(txn.LastLog == 'True')
  }
  
  abimethod test_15plus_args(app: algopy.Application): None
  {
    (result, txn): tuple[algopy.arc4.DynamicBytes, algopy.itxn.ApplicationCallInnerTransaction] = (reinterpret_cast<algopy.arc4.DynamicBytes>(checked_maybe((extract<4, 0>(SINGLE_EVAL(id=18, source=SINGLE_EVAL(id=19, source=submit_txn(create_inner_transaction(Fee=0u, TypeEnum=appl, ApplicationArgs=(Method("return_args_after_14th(uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint8,uint8,uint8,uint8,(uint8,uint8,uint8,uint8),uint8)byte[]"), 1arc4u64, 2arc4u64, 3arc4u64, 4arc4u64, 5arc4u64, 6arc4u64, 7arc4u64, 8arc4u64, 9arc4u64, 10arc4u64, 11arc4u64, 12arc4u64, 13arc4u64, 14arc4u64, arc4_encode((15arc4u8, 16arc4u8, 17arc4u8, 18arc4u8, arc4_encode((222arc4u8, 173arc4u8, 190arc4u8, 239arc4u8), algopy.arc4.Tuple[algopy.arc4.UInt8, algopy.arc4.UInt8, algopy.arc4.UInt8, algopy.arc4.UInt8]), 20arc4u8), algopy.arc4.Tuple[algopy.arc4.UInt8, algopy.arc4.UInt8, algopy.arc4.UInt8, algopy.arc4.UInt8, algopy.arc4.Tuple[algopy.arc4.UInt8, algopy.arc4.UInt8, algopy.arc4.UInt8, algopy.arc4.UInt8], algopy.arc4.UInt8])), ApplicationID=app))).LastLog)), extract<0, 4>(SINGLE_EVAL(id=18, source=SINGLE_EVAL(id=19, source=submit_txn(create_inner_transaction(Fee=0u, TypeEnum=appl, ApplicationArgs=(Method("return_args_after_14th(uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint8,uint8,uint8,uint8,(uint8,uint8,uint8,uint8),uint8)byte[]"), 1arc4u64, 2arc4u64, 3arc4u64, 4arc4u64, 5arc4u64, 6arc4u64, 7arc4u64, 8arc4u64, 9arc4u64, 10arc4u64, 11arc4u64, 12arc4u64, 13arc4u64, 14arc4u64, arc4_encode((15arc4u8, 16arc4u8, 17arc4u8, 18arc4u8, arc4_encode((222arc4u8, 173arc4u8, 190arc4u8, 239arc4u8), algopy.arc4.Tuple[algopy.arc4.UInt8, algopy.arc4.UInt8, algopy.arc4.UInt8, algopy.arc4.UInt8]), 20arc4u8), algopy.arc4.Tuple[algopy.arc4.UInt8, algopy.arc4.UInt8, algopy.arc4.UInt8, algopy.arc4.UInt8, algopy.arc4.Tuple[algopy.arc4.UInt8, algopy.arc4.UInt8, algopy.arc4.UInt8, algopy.arc4.UInt8], algopy.arc4.UInt8])), ApplicationID=app))).LastLog)) == hex<"151F7C75">))), SINGLE_EVAL(id=19, source=submit_txn(create_inner_transaction(Fee=0u, TypeEnum=appl, ApplicationArgs=(Method("return_args_after_14th(uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint8,uint8,uint8,uint8,(uint8,uint8,uint8,uint8),uint8)byte[]"), 1arc4u64, 2arc4u64, 3arc4u64, 4arc4u64, 5arc4u64, 6arc4u64, 7arc4u64, 8arc4u64, 9arc4u64, 10arc4u64, 11arc4u64, 12arc4u64, 13arc4u64, 14arc4u64, arc4_encode((15arc4u8, 16arc4u8, 17arc4u8, 18arc4u8, arc4_encode((222arc4u8, 173arc4u8, 190arc4u8, 239arc4u8), algopy.arc4.Tuple[algopy.arc4.UInt8, algopy.arc4.UInt8, algopy.arc4.UInt8, algopy.arc4.UInt8]), 20arc4u8), algopy.arc4.Tuple[algopy.arc4.UInt8, algopy.arc4.UInt8, algopy.arc4.UInt8, algopy.arc4.UInt8, algopy.arc4.Tuple[algopy.arc4.UInt8, algopy.arc4.UInt8, algopy.arc4.UInt8, algopy.arc4.UInt8], algopy.arc4.UInt8])), ApplicationID=app))))
    assert(extract<2, 0>(reinterpret_cast<algopy.Bytes>(result)) == hex<"0F101112DEADBEEF14">)
  }
  
  abimethod test_void(app: algopy.Application): None
  {
    txn: algopy.itxn.ApplicationCallInnerTransaction = submit_txn(create_inner_transaction(Fee=0u, TypeEnum=appl, ApplicationArgs=(Method("log(string)void"), arc4_encode('World1', algopy.arc4.String)), ApplicationID=app))
    assert(txn.LastLog == 'World1')
    txn: algopy.itxn.ApplicationCallInnerTransaction = submit_txn(create_inner_transaction(Fee=0u, TypeEnum=appl, ApplicationArgs=(Method("log(string)void"), arc4_encode('World2', algopy.arc4.String)), ApplicationID=app))
    assert(txn.LastLog == 'World2')
    txn: algopy.itxn.ApplicationCallInnerTransaction = submit_txn(create_inner_transaction(Fee=0u, TypeEnum=appl, ApplicationArgs=(Method("log(string)void"), arc4_encode('World3', algopy.arc4.String)), ApplicationID=app))
    assert(txn.LastLog == 'World3')
    txn: algopy.itxn.ApplicationCallInnerTransaction = submit_txn(create_inner_transaction(Fee=0u, TypeEnum=appl, ApplicationArgs=(Method("log(string)void"), arc4_encode('World4', algopy.arc4.String)), ApplicationID=app))
    assert(txn.LastLog == 'World4')
  }
  
  abimethod test_ref_types(app: algopy.Application, asset: algopy.Asset): None
  {
    txn: algopy.itxn.ApplicationCallInnerTransaction = submit_txn(create_inner_transaction(Fee=0u, TypeEnum=appl, ApplicationArgs=(Method("log(asset,account,application)void"), hex<"00">, hex<"01">, hex<"01">), Accounts=(global<CurrentApplicationAddress>()), Applications=(app), Assets=(asset), ApplicationID=app))
    assert(txn.LastLog == checked_maybe(asset_params_get<AssetName>(asset)) + reinterpret_cast<algopy.Bytes>(global<CurrentApplicationAddress>()) + reinterpret_cast<algopy.Bytes>(checked_maybe(app_params_get<AppAddress>(app))))
  }
  
  abimethod test_native_string(app: algopy.Application): None
  {
    (result1, _txn): tuple[algopy.String, algopy.itxn.ApplicationCallInnerTransaction] = (arc4_decode(reinterpret_cast<algopy.arc4.String>(checked_maybe((extract<4, 0>(SINGLE_EVAL(id=20, source=SINGLE_EVAL(id=21, source=submit_txn(create_inner_transaction(Fee=0u, TypeEnum=appl, ApplicationArgs=(Method("echo_native_string(string)string"), arc4_encode('s', algopy.arc4.String)), ApplicationID=app))).LastLog)), extract<0, 4>(SINGLE_EVAL(id=20, source=SINGLE_EVAL(id=21, source=submit_txn(create_inner_transaction(Fee=0u, TypeEnum=appl, ApplicationArgs=(Method("echo_native_string(string)string"), arc4_encode('s', algopy.arc4.String)), ApplicationID=app))).LastLog)) == hex<"151F7C75">))), algopy.String), SINGLE_EVAL(id=21, source=submit_txn(create_inner_transaction(Fee=0u, TypeEnum=appl, ApplicationArgs=(Method("echo_native_string(string)string"), arc4_encode('s', algopy.arc4.String)), ApplicationID=app))))
    assert(result1 == 'echo: s')
    (result2, _txn): tuple[algopy.String, algopy.itxn.ApplicationCallInnerTransaction] = (arc4_decode(reinterpret_cast<algopy.arc4.String>(checked_maybe((extract<4, 0>(SINGLE_EVAL(id=22, source=SINGLE_EVAL(id=23, source=submit_txn(create_inner_transaction(Fee=0u, TypeEnum=appl, ApplicationArgs=(Method("echo_native_string(string)string"), arc4_encode('s', algopy.arc4.String)), ApplicationID=app))).LastLog)), extract<0, 4>(SINGLE_EVAL(id=22, source=SINGLE_EVAL(id=23, source=submit_txn(create_inner_transaction(Fee=0u, TypeEnum=appl, ApplicationArgs=(Method("echo_native_string(string)string"), arc4_encode('s', algopy.arc4.String)), ApplicationID=app))).LastLog)) == hex<"151F7C75">))), algopy.String), SINGLE_EVAL(id=23, source=submit_txn(create_inner_transaction(Fee=0u, TypeEnum=appl, ApplicationArgs=(Method("echo_native_string(string)string"), arc4_encode('s', algopy.arc4.String)), ApplicationID=app))))
    assert(result2 == result1)
    (result3, _txn): tuple[algopy.String, algopy.itxn.ApplicationCallInnerTransaction] = (arc4_decode(reinterpret_cast<algopy.arc4.String>(checked_maybe((extract<4, 0>(SINGLE_EVAL(id=24, source=SINGLE_EVAL(id=25, source=submit_txn(create_inner_transaction(Fee=0u, TypeEnum=appl, ApplicationArgs=(Method("echo_native_string(string)string"), arc4_encode('s', algopy.arc4.String)), ApplicationID=app))).LastLog)), extract<0, 4>(SINGLE_EVAL(id=24, source=SINGLE_EVAL(id=25, source=submit_txn(create_inner_transaction(Fee=0u, TypeEnum=appl, ApplicationArgs=(Method("echo_native_string(string)string"), arc4_encode('s', algopy.arc4.String)), ApplicationID=app))).LastLog)) == hex<"151F7C75">))), algopy.String), SINGLE_EVAL(id=25, source=submit_txn(create_inner_transaction(Fee=0u, TypeEnum=appl, ApplicationArgs=(Method("echo_native_string(string)string"), arc4_encode('s', algopy.arc4.String)), ApplicationID=app))))
    assert(result3 == result1)
  }
  
  abimethod test_native_bytes(app: algopy.Application): None
  {
    (result1, _txn): tuple[algopy.Bytes, algopy.itxn.ApplicationCallInnerTransaction] = (arc4_decode(reinterpret_cast<algopy.arc4.DynamicBytes>(checked_maybe((extract<4, 0>(SINGLE_EVAL(id=26, source=SINGLE_EVAL(id=27, source=submit_txn(create_inner_transaction(Fee=0u, TypeEnum=appl, ApplicationArgs=(Method("echo_native_bytes(byte[])byte[]"), arc4_encode(hex<"62">, algopy.arc4.DynamicBytes)), ApplicationID=app))).LastLog)), extract<0, 4>(SINGLE_EVAL(id=26, source=SINGLE_EVAL(id=27, source=submit_txn(create_inner_transaction(Fee=0u, TypeEnum=appl, ApplicationArgs=(Method("echo_native_bytes(byte[])byte[]"), arc4_encode(hex<"62">, algopy.arc4.DynamicBytes)), ApplicationID=app))).LastLog)) == hex<"151F7C75">))), algopy.Bytes), SINGLE_EVAL(id=27, source=submit_txn(create_inner_transaction(Fee=0u, TypeEnum=appl, ApplicationArgs=(Method("echo_native_bytes(byte[])byte[]"), arc4_encode(hex<"62">, algopy.arc4.DynamicBytes)), ApplicationID=app))))
    assert(result1 == 'echo: b')
    (result2, _txn): tuple[algopy.Bytes, algopy.itxn.ApplicationCallInnerTransaction] = (arc4_decode(reinterpret_cast<algopy.arc4.DynamicBytes>(checked_maybe((extract<4, 0>(SINGLE_EVAL(id=28, source=SINGLE_EVAL(id=29, source=submit_txn(create_inner_transaction(Fee=0u, TypeEnum=appl, ApplicationArgs=(Method("echo_native_bytes(byte[])byte[]"), reinterpret_cast<algopy.arc4.DynamicBytes>(concat(substring<6, 8>(itob(len(SINGLE_EVAL(id=30, source='b')))), SINGLE_EVAL(id=30, source='b')))), ApplicationID=app))).LastLog)), extract<0, 4>(SINGLE_EVAL(id=28, source=SINGLE_EVAL(id=29, source=submit_txn(create_inner_transaction(Fee=0u, TypeEnum=appl, ApplicationArgs=(Method("echo_native_bytes(byte[])byte[]"), reinterpret_cast<algopy.arc4.DynamicBytes>(concat(substring<6, 8>(itob(len(SINGLE_EVAL(id=30, source='b')))), SINGLE_EVAL(id=30, source='b')))), ApplicationID=app))).LastLog)) == hex<"151F7C75">))), algopy.Bytes), SINGLE_EVAL(id=29, source=submit_txn(create_inner_transaction(Fee=0u, TypeEnum=appl, ApplicationArgs=(Method("echo_native_bytes(byte[])byte[]"), reinterpret_cast<algopy.arc4.DynamicBytes>(concat(substring<6, 8>(itob(len(SINGLE_EVAL(id=30, source='b')))), SINGLE_EVAL(id=30, source='b')))), ApplicationID=app))))
    assert(result2 == result1)
    (result3, _txn): tuple[algopy.Bytes, algopy.itxn.ApplicationCallInnerTransaction] = (arc4_decode(reinterpret_cast<algopy.arc4.DynamicBytes>(checked_maybe((extract<4, 0>(SINGLE_EVAL(id=31, source=SINGLE_EVAL(id=32, source=submit_txn(create_inner_transaction(Fee=0u, TypeEnum=appl, ApplicationArgs=(Method("echo_native_bytes(byte[])byte[]"), arc4_encode(hex<"62">, algopy.arc4.DynamicBytes)), ApplicationID=app))).LastLog)), extract<0, 4>(SINGLE_EVAL(id=31, source=SINGLE_EVAL(id=32, source=submit_txn(create_inner_transaction(Fee=0u, TypeEnum=appl, ApplicationArgs=(Method("echo_native_bytes(byte[])byte[]"), arc4_encode(hex<"62">, algopy.arc4.DynamicBytes)), ApplicationID=app))).LastLog)) == hex<"151F7C75">))), algopy.Bytes), SINGLE_EVAL(id=32, source=submit_txn(create_inner_transaction(Fee=0u, TypeEnum=appl, ApplicationArgs=(Method("echo_native_bytes(byte[])byte[]"), arc4_encode(hex<"62">, algopy.arc4.DynamicBytes)), ApplicationID=app))))
    assert(result3 == result1)
  }
  
  abimethod test_native_uint64(app: algopy.Application): None
  {
    (result1, _txn): tuple[algopy.UInt64, algopy.itxn.ApplicationCallInnerTransaction] = (arc4_decode(reinterpret_cast<algopy.arc4.UInt64>(checked_maybe((extract<4, 0>(SINGLE_EVAL(id=33, source=SINGLE_EVAL(id=34, source=submit_txn(create_inner_transaction(Fee=0u, TypeEnum=appl, ApplicationArgs=(Method("echo_native_uint64(uint64)uint64"), 1arc4u64), ApplicationID=app))).LastLog)), extract<0, 4>(SINGLE_EVAL(id=33, source=SINGLE_EVAL(id=34, source=submit_txn(create_inner_transaction(Fee=0u, TypeEnum=appl, ApplicationArgs=(Method("echo_native_uint64(uint64)uint64"), 1arc4u64), ApplicationID=app))).LastLog)) == hex<"151F7C75">))), algopy.UInt64), SINGLE_EVAL(id=34, source=submit_txn(create_inner_transaction(Fee=0u, TypeEnum=appl, ApplicationArgs=(Method("echo_native_uint64(uint64)uint64"), 1arc4u64), ApplicationID=app))))
    assert(result1 == 2u)
    (result2, _txn): tuple[algopy.UInt64, algopy.itxn.ApplicationCallInnerTransaction] = (arc4_decode(reinterpret_cast<algopy.arc4.UInt64>(checked_maybe((extract<4, 0>(SINGLE_EVAL(id=35, source=SINGLE_EVAL(id=36, source=submit_txn(create_inner_transaction(Fee=0u, TypeEnum=appl, ApplicationArgs=(Method("echo_native_uint64(uint64)uint64"), arc4_encode(1u, algopy.arc4.UInt64)), ApplicationID=app))).LastLog)), extract<0, 4>(SINGLE_EVAL(id=35, source=SINGLE_EVAL(id=36, source=submit_txn(create_inner_transaction(Fee=0u, TypeEnum=appl, ApplicationArgs=(Method("echo_native_uint64(uint64)uint64"), arc4_encode(1u, algopy.arc4.UInt64)), ApplicationID=app))).LastLog)) == hex<"151F7C75">))), algopy.UInt64), SINGLE_EVAL(id=36, source=submit_txn(create_inner_transaction(Fee=0u, TypeEnum=appl, ApplicationArgs=(Method("echo_native_uint64(uint64)uint64"), arc4_encode(1u, algopy.arc4.UInt64)), ApplicationID=app))))
    assert(result2 == result1)
    (result3, _txn): tuple[algopy.UInt64, algopy.itxn.ApplicationCallInnerTransaction] = (arc4_decode(reinterpret_cast<algopy.arc4.UInt64>(checked_maybe((extract<4, 0>(SINGLE_EVAL(id=37, source=SINGLE_EVAL(id=38, source=submit_txn(create_inner_transaction(Fee=0u, TypeEnum=appl, ApplicationArgs=(Method("echo_native_uint64(uint64)uint64"), 1arc4u64), ApplicationID=app))).LastLog)), extract<0, 4>(SINGLE_EVAL(id=37, source=SINGLE_EVAL(id=38, source=submit_txn(create_inner_transaction(Fee=0u, TypeEnum=appl, ApplicationArgs=(Method("echo_native_uint64(uint64)uint64"), 1arc4u64), ApplicationID=app))).LastLog)) == hex<"151F7C75">))), algopy.UInt64), SINGLE_EVAL(id=38, source=submit_txn(create_inner_transaction(Fee=0u, TypeEnum=appl, ApplicationArgs=(Method("echo_native_uint64(uint64)uint64"), 1arc4u64), ApplicationID=app))))
    assert(result3 == result1)
  }
  
  abimethod test_native_biguint(app: algopy.Application): None
  {
    (result1, _txn): tuple[algopy.BigUInt, algopy.itxn.ApplicationCallInnerTransaction] = (arc4_decode(reinterpret_cast<algopy.arc4.UInt512>(checked_maybe((extract<4, 0>(SINGLE_EVAL(id=39, source=SINGLE_EVAL(id=40, source=submit_txn(create_inner_transaction(Fee=0u, TypeEnum=appl, ApplicationArgs=(Method("echo_native_biguint(uint512)uint512"), 2arc4n512), ApplicationID=app))).LastLog)), extract<0, 4>(SINGLE_EVAL(id=39, source=SINGLE_EVAL(id=40, source=submit_txn(create_inner_transaction(Fee=0u, TypeEnum=appl, ApplicationArgs=(Method("echo_native_biguint(uint512)uint512"), 2arc4n512), ApplicationID=app))).LastLog)) == hex<"151F7C75">))), algopy.BigUInt), SINGLE_EVAL(id=40, source=submit_txn(create_inner_transaction(Fee=0u, TypeEnum=appl, ApplicationArgs=(Method("echo_native_biguint(uint512)uint512"), 2arc4n512), ApplicationID=app))))
    assert(result1 == 3n)
    (result2, _txn): tuple[algopy.BigUInt, algopy.itxn.ApplicationCallInnerTransaction] = (arc4_decode(reinterpret_cast<algopy.arc4.UInt512>(checked_maybe((extract<4, 0>(SINGLE_EVAL(id=41, source=SINGLE_EVAL(id=42, source=submit_txn(create_inner_transaction(Fee=0u, TypeEnum=appl, ApplicationArgs=(Method("echo_native_biguint(uint512)uint512"), arc4_encode(2n, algopy.arc4.UInt512)), ApplicationID=app))).LastLog)), extract<0, 4>(SINGLE_EVAL(id=41, source=SINGLE_EVAL(id=42, source=submit_txn(create_inner_transaction(Fee=0u, TypeEnum=appl, ApplicationArgs=(Method("echo_native_biguint(uint512)uint512"), arc4_encode(2n, algopy.arc4.UInt512)), ApplicationID=app))).LastLog)) == hex<"151F7C75">))), algopy.BigUInt), SINGLE_EVAL(id=42, source=submit_txn(create_inner_transaction(Fee=0u, TypeEnum=appl, ApplicationArgs=(Method("echo_native_biguint(uint512)uint512"), arc4_encode(2n, algopy.arc4.UInt512)), ApplicationID=app))))
    assert(result2 == result1)
    (result3, _txn): tuple[algopy.BigUInt, algopy.itxn.ApplicationCallInnerTransaction] = (arc4_decode(reinterpret_cast<algopy.arc4.UInt512>(checked_maybe((extract<4, 0>(SINGLE_EVAL(id=43, source=SINGLE_EVAL(id=44, source=submit_txn(create_inner_transaction(Fee=0u, TypeEnum=appl, ApplicationArgs=(Method("echo_native_biguint(uint512)uint512"), 2arc4n512), ApplicationID=app))).LastLog)), extract<0, 4>(SINGLE_EVAL(id=43, source=SINGLE_EVAL(id=44, source=submit_txn(create_inner_transaction(Fee=0u, TypeEnum=appl, ApplicationArgs=(Method("echo_native_biguint(uint512)uint512"), 2arc4n512), ApplicationID=app))).LastLog)) == hex<"151F7C75">))), algopy.BigUInt), SINGLE_EVAL(id=44, source=submit_txn(create_inner_transaction(Fee=0u, TypeEnum=appl, ApplicationArgs=(Method("echo_native_biguint(uint512)uint512"), 2arc4n512), ApplicationID=app))))
    assert(result3 == result1)
  }
  
  abimethod test_native_tuple(app: algopy.Application): None
  {
    txn: algopy.itxn.ApplicationCallInnerTransaction = submit_txn(create_inner_transaction(Fee=0u, TypeEnum=appl, ApplicationArgs=(Method("echo_native_tuple(string,byte[],uint64,uint512)(string,byte[],uint64,uint512)"), arc4_encode('s1', algopy.arc4.String), arc4_encode(hex<"6231">, algopy.arc4.DynamicBytes), 1arc4u64, 2arc4n512), ApplicationID=app))
    result1: algopy.arc4.Tuple[algopy.arc4.String, algopy.arc4.DynamicBytes, algopy.arc4.UInt64, algopy.arc4.UInt512] = reinterpret_cast<algopy.arc4.Tuple[algopy.arc4.String, algopy.arc4.DynamicBytes, algopy.arc4.UInt64, algopy.arc4.UInt512]>(checked_maybe((extract<4, 0>(SINGLE_EVAL(id=45, source=txn.LastLog)), extract<0, 4>(SINGLE_EVAL(id=45, source=txn.LastLog)) == hex<"151F7C75">)))
    (s, b, u, bu): tuple[algopy.arc4.String, algopy.arc4.DynamicBytes, algopy.arc4.UInt64, algopy.arc4.UInt512] = arc4_decode(result1, tuple[algopy.arc4.String, algopy.arc4.DynamicBytes, algopy.arc4.UInt64, algopy.arc4.UInt512])
    assert(arc4_decode(s, algopy.String) == 'echo: s1')
    assert(extract<2, 0>(reinterpret_cast<algopy.Bytes>(b)) == 'echo: b1')
    assert(arc4_decode(u, algopy.UInt64) == 2u)
    assert(arc4_decode(bu, algopy.BigUInt) == 3n)
    txn: algopy.itxn.ApplicationCallInnerTransaction = submit_txn(create_inner_transaction(Fee=0u, TypeEnum=appl, ApplicationArgs=(Method("echo_native_tuple(string,byte[],uint64,uint512)(string,byte[],uint64,uint512)"), arc4_encode('s1', algopy.arc4.String), reinterpret_cast<algopy.arc4.DynamicBytes>(concat(substring<6, 8>(itob(len(SINGLE_EVAL(id=46, source='b1')))), SINGLE_EVAL(id=46, source='b1'))), arc4_encode(1u, algopy.arc4.UInt64), arc4_encode(2n, algopy.arc4.UInt512)), ApplicationID=app))
    result2: algopy.arc4.Tuple[algopy.arc4.String, algopy.arc4.DynamicBytes, algopy.arc4.UInt64, algopy.arc4.UInt512] = reinterpret_cast<algopy.arc4.Tuple[algopy.arc4.String, algopy.arc4.DynamicBytes, algopy.arc4.UInt64, algopy.arc4.UInt512]>(checked_maybe((extract<4, 0>(SINGLE_EVAL(id=47, source=txn.LastLog)), extract<0, 4>(SINGLE_EVAL(id=47, source=txn.LastLog)) == hex<"151F7C75">)))
    assert(reinterpret_cast<algopy.Bytes>(result1) == reinterpret_cast<algopy.Bytes>(result2))
    txn: algopy.itxn.ApplicationCallInnerTransaction = submit_txn(create_inner_transaction(Fee=0u, TypeEnum=appl, ApplicationArgs=(Method("echo_native_tuple(string,byte[],uint64,uint512)(string,byte[],uint64,uint512)"), arc4_encode('s1', algopy.arc4.String), arc4_encode(hex<"6231">, algopy.arc4.DynamicBytes), 1arc4u64, 2arc4n512), ApplicationID=app))
    result3: algopy.arc4.Tuple[algopy.arc4.String, algopy.arc4.DynamicBytes, algopy.arc4.UInt64, algopy.arc4.UInt512] = reinterpret_cast<algopy.arc4.Tuple[algopy.arc4.String, algopy.arc4.DynamicBytes, algopy.arc4.UInt64, algopy.arc4.UInt512]>(checked_maybe((extract<4, 0>(SINGLE_EVAL(id=48, source=txn.LastLog)), extract<0, 4>(SINGLE_EVAL(id=48, source=txn.LastLog)) == hex<"151F7C75">)))
    assert(reinterpret_cast<algopy.Bytes>(result1) == reinterpret_cast<algopy.Bytes>(result3))
  }
}