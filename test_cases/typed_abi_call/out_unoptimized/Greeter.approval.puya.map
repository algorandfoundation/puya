{
  "version": 3,
  "sources": [
    "../typed_c2c.py"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAucA;;;AAAA;AAAA;;;AAAA;;AAAA;;;;AAeA;;;AAAA;AAAA;;;AAAA;;AAAA;;;;AAiBA;;;AAAA;AAAA;;;AAAA;;AAAA;;;;AA4BA;;;AAAA;AAAA;;;AAAA;;AAAA;;;;AAcA;;;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;;AAAA;;;;AAcA;;;AAAA;AAAA;;;AAAA;;AAAA;;;;AASA;;;AAAA;AAAA;;;AAAA;;AAAA;;;;AAWA;;;AAAA;AAAA;;;AAAA;;AAAA;;;;AAaA;;;AAAA;AAAA;;;AAAA;;AAAA;;;;AAWA;;;AAAA;AAAA;;;AAAA;;AAAA;;;;AAWA;;;AAAA;AAAA;;;AAAA;;AAAA;;;;AA2DA;;;AAAA;AAAA;;;AAAA;;AAAA;;;;AAkDA;;;AAAA;AAAA;;;AAAA;;AAAA;;;;AA8CA;;;AAAA;AAAA;;;AAAA;;AAAA;;;;AAUA;;;AAAA;AAAA;;;AAAA;;AAAA;;;;AAiBA;;;AAAA;AAAA;;;AAAA;;AAAA;;;;AAWA;;;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;;AAAA;AAvWL;;;;;;AAEQ;AAEI;;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AACA;;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAA;;AACO;;;;AAJX;;;;;;;;;;;;AAAA;;;AAAA;;;;;;AAAA;;AAOR;;;;;;AAEe;;AAAoC;;AAApC;AAAP;AACe;AAA2B;;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAA6B;;;;AAAxD;;;;;;AAAA;;;AAAA;;;;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;;;AAAA;AAAA;AAAA;AACE;;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAV;AAAP;AACe;AAAiC;;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAgB;;;;AAAjD;;;;;;AAAA;;;AAAA;;;;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;;;AAAA;AAAA;AAAA;AACE;;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAV;AAAP;AACe;AAAmC;;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAgB;;;;AAAnD;;;;;;AAAA;;;AAAA;;;;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;;;AAAA;AAAA;AAAA;AACE;;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAV;AAAP;AACe;AAA2C;;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAgB;;;;AAA3D;;;;;;AAAA;;;AAAA;;;;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;;;AAAA;AAAA;AAAA;AACE;;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAV;AAAP;AACe;AAAiD;;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAgB;;;;AAAjE;;;;;;AAAA;;;AAAA;;;;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;;;AAAA;AAAA;AAAA;AACE;;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAV;AAAP;;AAER;;;;;;AAEQ;AAAiD;;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAyB;;;;AAA1E;;;;;;AAAA;;;AAAA;;;;;;AAAA;AAAA;;AAAA;;;AAAA;AAAA;AAAA;AAC4B;;AAArB;AAAA;;;AAAA;;AAAA;;;AAAA;AAAA;AAAA;AAA4C;;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAA5C;AAAP;AAEA;AAAoC;;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAA2B;;;;AAA/D;;;;;;AAAA;;;AAAA;;;;;;AAAA;AAC4B;;AAArB;AAAA;;;AAAA;;AAAA;;;AAAA;AAAA;AAAA;AAA4C;;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAA5C;AAAP;AAES;AAAiD;;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAgB;;;;AAAjE;;;;;;AAAA;;;AAAA;;;;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;;;AAAA;AAAA;AAAA;;;;;AACW;;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAb;AAAP;AACO;AAAA;;;AAAA;;AAAA;;;AAAA;AAAA;AAAA;AAA4C;;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAA5C;AAAP;AAEa;AAAoC;;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAkB;;;;AAAtD;;;;;;AAAA;;;AAAA;;;;;;AAAA;;;AACN;AAAA;;;AAAA;;AAAA;;;AAAA;AAAA;AAAA;AAA6C;;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAA7C;AAAP;;AAER;;;;;;AAEc;AAAiC;;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAqB;;;;AAAtD;;;;;;AAAA;;;AAAA;;;;;;AAAA;;;AACiB;;AAAhB;AAAP;AAEM;AAA2C;;;;AAA3C;;;;;;;;AAAiC;;;;AAAjC;;;AAAA;;;;;;AAAA;;;AACyB;AAAR;AAAhB;AAAP;AAEM;AAA4C;;;;AAA5C;;;;;;;;AAAkC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAlC;;;AAAA;;;;;;AAAA;;;AAC2B;;AAAT;AAAuB;;AAAR;AAAf;AAAjB;AAAP;AAEM;AAAgC;;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAa;;;;AAA7C;;;;;;;;;;AAAA;;;AAAA;;;;;;AAAA;;;AACiB;;AAAhB;AAAP;AAEM;AAA+B;;AAAA;AAAA;;AAAA;AAAa;;;;AAA5C;;;;;;;;;;AAAA;;;AAAA;;;;;;AAAA;;;AACiB;;;;;;AAAhB;AAAP;;AAER;;;;;;AAEsB;AAoBV;AAAY;;;AAAZ;AAA8B;;;AAA9B;AAAgD;;;AAAhD;AAAkE;;;AAAlE;AAJA;AAAA;;;AAAA;AACA;;;AADA;AAEA;;;AAFA;AAGA;;;AAHA;AAAA;;AAAA;AAKA;;;AALA;AAMO;;;;AAtBG;;;;;;;;AAEV;;;;AACA;;;;AACA;;;;AACA;;;;;;;;;;;;AACA;;;;;;;;;;;;AACA;;;;;;;;;;;;AACA;;;;;;;;;;;;AACA;;;;;;;;;;;;AACA;;;;;;;;;;;;AACA;;;;;;;;;;;;AACA;;;;AACA;;;;;;;;;;;;AACA;;;;;;;;;;;;AACA;;;;;;;;;;;;;;AAfU;;;AAAA;;;;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;;;AAAA;AAAA;AAAA;AAwBP;;;AAAiB;;;;;;;;;;;AAAjB;AAAP;;AAER;;;;;;AAEc;AAAgD;;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAiB;;;;AAAjE;;;;;;AAAA;;;AAAA;;;;;;AAAA;;;AACiB;;AAAhB;AAAP;AAEM;AAA4C;;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAiB;;;;AAA7D;;;;;;AAAA;;;AAAA;;;;;;AAAA;;;AACiB;;AAAhB;AAAP;AAEM;AAA+B;;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAA8B;;;;AAA7D;;;;;;AAAA;;;AAAA;;;;;;AAAA;;;AACiB;;AAAhB;AAAP;AAEM;AAAiC;;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAiB;;;;AAAlD;;;;;;AAAA;;;AAAA;;;;;;AAAA;;;AACiB;;AAAhB;AAAP;;AAER;;;;;;AAEc;AAEF;;AAAA;AACA;;AACA;;AAAA;AADA;;AAAA;;AACA;;AACO;;;;AALL;;;;;;;;;;;;;;AAAA;;;AAAA;;;;;;AAAA;;;AASC;;AAAA;;AAAA;AAAa;;AAAb;AAAwD;;AAAA;;AAAA;AAAxD;AADH;AADJ;;AAKR;;;;;;AAEc;AAEF;;AACO;;;;AAHL;;;;;;;;;;AAAA;;;AAAA;;;;;;AAAA;;;AAKiB;;AAAhB;AAAP;;AAER;;;;;;;AAEwB;AAAyC;;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAY;;;;AAArD;;;;;;AAAA;;;AAAA;;;;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAhB;AAAA;;AACkB;;;;;;;;;AAAX;AAAP;AAEgB;AAAyC;;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAoB;;;;AAA7D;;;;;;AAAA;;;AAAA;;;;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AACT;;AAAA;AAAP;AAEgB;AAAyC;;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAyB;;;;AAAlE;;;;;;AAAA;;;AAAA;;;;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AACT;;AAAA;AAAP;;AAER;;;;;;;AAEwB;AAAwC;;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAa;;;;AAArD;;;;;;AAAA;;;AAAA;;;;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAhB;AAAA;;AACkB;;;;;;;;;AAAX;AAAP;AAEgB;AAAwC;;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAoB;;;;AAA5D;;;;;;AAAA;;;AAAA;;;;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AACT;;AAAA;AAAP;AAEgB;AACc;;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAgC;;;;AAD9C;;;;;;AAAA;;;AAAA;;;;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAGT;;AAAA;AAAP;;AAER;;;;;;;AAEwB;AAAmD;;;;AAAnD;;;;AAAyC;;;;AAAzC;;;AAAA;;;;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAhB;AAAA;;AACkB;AAAX;AAAP;AAEgB;AAAyC;;AAAA;AAAkB;;;;AAA3D;;;;;;AAAA;;;AAAA;;;;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;;;AAAA;AAAA;AAAA;AAAA;AACT;;AAAA;AAAP;AAEgB;AAAgE;;;;AAAhE;;;;AAAyC;;;;AAAzC;;;AAAA;;;;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;;;AAAA;AAAA;AAAA;AAAA;AACT;;AAAA;AAAP;;AAER;;;;;;;AAEwB;AAAoD;;;;AAApD;;;;AAA0C;;;;AAA1C;;;AAAA;;;;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;;;AAAA;AAAA;AAAA;AAAhB;AAAA;;AACkB;;AAAX;AAAP;AAEgB;AAA0C;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAmB;;;;AAA7D;;;;;;AAAA;;;AAAA;;;;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;;;AAAA;AAAA;AAAA;AACT;;AAAA;AAAP;AAEgB;AAAkE;;;;AAAlE;;;;AAA0C;;;;AAA1C;;;AAAA;;;;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;;;AAAA;AAAA;AAAA;AACT;;AAAA;AAAP;;AAER;;;;;;;AAGuB;AAIX;AAAA;AAAA;AAAA;;;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAGO;;;;AARI;;;;;;;;AAMX;;;;AACA;;;;AAPW;;;AAAA;;;;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;;;AAAA;AAAA;AAAA;AAAf;AAAA;;AAUc;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAd;;AAAA;;AAAA;;AAAA;;AACO;;;AAAY;;AAAZ;AAAP;AACO;;;AAAY;;AAAZ;AAAP;AACO;AAAY;AAAZ;AAAP;AACoB;;AAAb;AAAP;AAGe;AAIX;AAAA;AAAA;AAAA;;;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AACA;;AAAA;AACA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAHA;;AAAA;;AACA;;AAAA;;AAEA;;AACO;;;;AARI;;;;;;;;;;;;AAAA;;;AAAA;;;;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;;;AAAA;AAAA;AAAA;AAUR;;AAAA;AAAP;AAGe;AAIX;AAAA;AAAA;AAAA;;;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAGO;;;;AARI;;;;;;;;AAMX;;;;AACA;;;;AAPW;;;AAAA;;;;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;;;AAAA;AAAA;AAAA;AAUR;;AAAA;AAAP;AAGqB;AAEjB;AAAA;AAAA;AAAA;;;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAGO;;;;AANU;;;;;;;;AAIjB;;;;AACA;;;;AALiB;;;AAAA;;;;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAArB;;AAAA;;AAAA;;AAAA;;AAQO;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;AAAP;AACO;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;AAAP;AACO;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAP;AACO;;AAAA;;AAAA;AAAA;AAAP;;AAER;;;;;;;;;;AAGsB;AAEV;AAAA;AAAA;AAAA;;;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAGO;;;;AANG;;;;;;;;AAIV;;;;AACA;;;;AALU;;;AAAA;;;;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAd;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAQA;;AAAA;;AAAA;;AAAA;;AACY;;AAAL;AAAP;AACY;;AAAL;AAAP;AACY;AAAL;AAAP;AACa;;AAAN;AAAP;AAGgB;AAEZ;AAAA;AAAA;AAAA;;;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AACA;;AAAA;AACA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAHA;;AAAA;;AACA;;AAAA;;AAEA;;AACO;;;;AANK;;;;;;;;;;;;AAAA;;;AAAA;;;;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAhB;;AAAA;;AAAA;;AAAA;;AAQO;;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAP;AAGgB;AAEZ;AAAA;AAAA;AAAA;;;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAGO;;;;AANK;;;;;;;;AAIZ;;;;AACA;;;;AALY;;;AAAA;;;;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAhB;;AAAA;;AAAA;;AAAA;;AAQO;;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAP;AAGqB;AAEjB;AAAA;AAAA;AAAA;;;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAGO;;;;AANU;;;;;;;;AAIjB;;;;AACA;;;;AALiB;;;AAAA;;;;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAArB;;AAAA;;AAAA;;AAAA;;AAQO;;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAP;;AAER;;;;;;AAGsB;AAER;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAM;;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAA;;AAAc;;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAA;;AAAtB;;AAAA;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAgB;;AAAhB;AAAmB;;AAAnB;AAAA;;AAAA;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AACO;;;;AAHG;;;;;;AAAA;;;AAAA;;;;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAd;;AAAA;;AAAA;;AAAA;;AAAA;;AAKA;;AAAA;;AAAA;;AAAA;;AAAA;;AACa;;AAAN;AAAP;AACa;;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAN;AAAP;AACgB;AAAT;AAAP;AACgB;;AAAT;AAAP;AACgB;;AAAT;AAAP;AAGc;AAEM;;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAd;AAAF;AAAA;AAAA;;;AAAE;AAAF;AAAA;;AAAA;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAqC;;AAArC;AAAA;AAAA;;AAAA;AAAgD;;AAAhD;AAAgE;;AAAhE;AAAA;AAAA;;;AAAgE;;AAAhE;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AACO;;;;AAHG;;;;;;AAAA;;;AAAA;;;;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAd;;AAAA;;AAAA;;AAAA;;AAAA;;AAKA;;AAAA;;AAAA;;AAAA;;AAAA;;AACa;;AAAN;AAAP;AACa;;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAN;AAAP;AACgB;AAAT;AAAP;AACgB;;AAAT;AAAP;AACgB;;AAAT;AAAP;AAGc;AAIU;;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAoB;;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAA;;AAAhC;;AAAA;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAC8C;;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAA9C;AAAY;;AAAZ;AAA6B;;;;;;;;;;AAA7B;AAAA;;AAAA;AAAA;;;AAAA;AAAA;;AAAA;AAHR;;AAAA;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAMO;;;;AARG;;;;;;AAAA;;;AAAA;;;;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAd;;AAAA;;AAAA;;AAAA;;AAAA;;AAUA;;AAAA;;AAAA;;AAAA;;AAAA;;AACa;;;;;;;;;;;AAAN;AAAP;AACa;;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAN;AAAP;AACgB;;AAAT;AAAP;AACgB;;;;;;;;;;AAAT;AAAP;AACgB;;;;;;;;;;AAAT;AAAP;;AAER;;;;;;AAEuB;AAAqC;;;;AAArC;;;;AAAA;;;AAAA;;;;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;;;AAAA;AAAA;AAAA;AAAA;AACE;;AAAV;AAAP;AACoB;AAAqD;;;;AAArD;;;;AAAA;;;AAAA;;;;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;;;AAAA;AAAA;AAAA;AACE;;AAAf;AAAP;AAEA;AAAqC;;;;AAArC;;;;AAAA;;;AAAA;;;;;;AAAA;AAAA;;AAAA;;;AAAA;AAAA;AAAA;AAC4B;;AAArB;AAAA;;;AAAA;;AAAA;;;AAAA;AAAA;AAAA;AAA4C;;AAA5C;AAAP;;AAER;;;;;;AAEuB;AAEV;;AAAD;AAAA;AAAA;;AAAA;AAAY;;AAAZ;AAAA;AAAA;;;AAAY;;AAAZ;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AACiB;;AAAjB;AAAA;AAAA;;AAAA;AAAoC;;AAApC;AAAA;AAAA;;;AAAoC;;AAApC;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AACO;;;;AAJI;;;;;;;;AAAA;;;AAAA;;;;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAMf;AACe;AAEV;AAAD;AAAA;AAAA;;AAAA;AAAY;;AAAZ;AAAA;AAAA;;;AAAY;;AAAZ;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AACiB;;AAAjB;AAAA;AAAA;;AAAA;AAAoC;;AAApC;AAAA;AAAA;;;AAAoC;;AAApC;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AACO;;;;AAJI;;;;;;;;AAAA;;;AAAA;;;;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAMR;AAAP;;AAER;;;;;;AAEsD;;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAxC;AAAgB;;AAAhB;AAAA;;AAAA;AAAA;;;AAAA;AAAA;;AAAA;AAAN;AACc;AAGH;;;;AAHG;;;;;;;;;;AAAA;;;AAAA;;;;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;;;AAAA;AAAA;AAAA;;;;;AAKP;;AAAA;AAAA;;AAAA;AAAP;AACO;AAAA;;;AAAA;;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAP;;AAER;;;;;;AAEc;;AAAN;AACM;;AAAN;AAAA;;AAEc;AACiC;;AAAZ;;AAAwB;;;;;;;;;;AAD7C;;;;AACqB;;;;AAAO;;;;AAAK;;;;AADjC;;;AAAA;;;;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAd;;AAAA;;AAAA;;AAGO;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAP;AAEc;AACqB;;AAAA;AAAO;;AAAA;AAAK;;AAAL;;AAAA;;AAAK;;AAAY;;;;AAD7C;;;;;;;;;;AAAA;;;AAAA;;;;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAd;;AAAA;;AAAA;;AAGO;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAP;AAEc;AACkC;;AAAP;;AAAwB;;;;;;;;;;AADnD;;;;AAC2B;;;;AAAO;;;;AAAK;;;;AADvC;;;AAAA;;;;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAd;;AAAA;;AAAA;;AAGO;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAP;AAEc;AAC2B;;AAAA;AAAO;;AAAA;AAAK;;AAAL;;AAAA;;AAAK;;AAAY;;;;AADnD;;;;;;;;;;AAAA;;;AAAA;;;;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAd;;AAAA;;AAAA;;AAGO;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAP;AAEc;AAGV;;AADA;;AAGO;;;;;;;;;;AALG;;;;AAEV;;;;AACA;;;;AACA;;;;AAJU;;;AAAA;;;;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAd;;AAAA;;AAAA;;AAOO;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAP;AAEc;AAEV;;AAAA;AACA;;AAAA;AACA;;AADA;;AAAA;;AACA;;AACO;;;;AALG;;;;;;;;;;AAAA;;;AAAA;;;;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAd;;AAAA;;AAAA;;AAOO;;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAP;",
  "op_pc_offset": 0,
  "pc_events": {
    "1": {
      "subroutine": "algopy.arc4.ARC4Contract.approval_program",
      "params": {},
      "block": "main",
      "stack_in": [],
      "op": "intcblock 0 6 8 2"
    },
    "7": {
      "op": "bytecblock 0x151f7c75 \"s1\" 0x 0x6231 0x9bf81913 0x0000000000000001 0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002 0x16e03919 \"log 1\" \"s\" 0x62 0x02 0x01 0xb4b4334e \"echo: tuple\" 0x0000000000000002 0x00 \"echo: s1\" \"s2\" 0x33 \"echo: s2\" 0x636f6e76657274656431 0x34 0x0000000000000003 0x576f726c6431 0x576f726c6432 0x576f726c6433 0x576f726c6434 0x4a444c77 0x2659e818 0xa9fb6cf1 0xd8cc363b 0x03 0xab271ce4 0xb862ee19 0xd6c2ac7f 0x48142d5e \"test1\" \"echo: test1\" \"test2\" \"echo: test2\" \"test3\" \"echo: test3\" \"test4\" \"echo: test4\" \"test5\" \"echo: test5\" \"typed + ignore\" \"echo: typed + ignore\" \"untyped + ignore\" \"echo: untyped + ignore\" \"tuple\" \"untyped\" \"echo: untyped\" 0x000000000000000b 0x6563686f3a206231 0x6563686f3a2033 \"s1b\" \"s2b\" 0x3362 \"echo: s2b\" 0x000000000000002a 0xddd07185 \"log 2\""
    },
    "523": {
      "op": "b block@0"
    },
    "526": {
      "block": "block@0",
      "stack_in": [],
      "op": "b block@1"
    },
    "529": {
      "block": "block@1",
      "stack_in": [],
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "531": {
      "op": "!",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "532": {
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%2#0"
      ]
    },
    "534": {
      "op": "pushint 1 // 1",
      "defined_out": [
        "1",
        "tmp%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%2#0",
        "1"
      ]
    },
    "536": {
      "op": "shl",
      "defined_out": [
        "tmp%1#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%3#0"
      ]
    },
    "537": {
      "op": "+",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "538": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "0"
      ]
    },
    "539": {
      "op": "pushint 1 // 1",
      "stack_out": [
        "tmp%4#0",
        "0",
        "1"
      ]
    },
    "541": {
      "op": "intc_3 // 2",
      "defined_out": [
        "0",
        "1",
        "2",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "0",
        "1",
        "2"
      ]
    },
    "542": {
      "op": "pushint 3 // 3",
      "defined_out": [
        "0",
        "1",
        "2",
        "3",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "0",
        "1",
        "2",
        "3"
      ]
    },
    "544": {
      "op": "pushint 4 // 4",
      "defined_out": [
        "0",
        "1",
        "2",
        "3",
        "4",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "0",
        "1",
        "2",
        "3",
        "4"
      ]
    },
    "546": {
      "op": "pushint 5 // 5",
      "defined_out": [
        "0",
        "1",
        "2",
        "3",
        "4",
        "5",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "0",
        "1",
        "2",
        "3",
        "4",
        "5"
      ]
    },
    "548": {
      "op": "intc_1 // 6",
      "defined_out": [
        "0",
        "1",
        "2",
        "3",
        "4",
        "5",
        "6",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "0",
        "1",
        "2",
        "3",
        "4",
        "5",
        "6"
      ]
    },
    "549": {
      "op": "pushint 7 // 7",
      "defined_out": [
        "0",
        "1",
        "2",
        "3",
        "4",
        "5",
        "6",
        "7",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "0",
        "1",
        "2",
        "3",
        "4",
        "5",
        "6",
        "7"
      ]
    },
    "551": {
      "op": "intc_2 // 8",
      "defined_out": [
        "0",
        "1",
        "2",
        "3",
        "4",
        "5",
        "6",
        "7",
        "8",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "0",
        "1",
        "2",
        "3",
        "4",
        "5",
        "6",
        "7",
        "8"
      ]
    },
    "552": {
      "op": "pushint 9 // 9",
      "defined_out": [
        "0",
        "1",
        "2",
        "3",
        "4",
        "5",
        "6",
        "7",
        "8",
        "9",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "0",
        "1",
        "2",
        "3",
        "4",
        "5",
        "6",
        "7",
        "8",
        "9"
      ]
    },
    "554": {
      "op": "pushint 10 // 10",
      "defined_out": [
        "0",
        "1",
        "10",
        "2",
        "3",
        "4",
        "5",
        "6",
        "7",
        "8",
        "9",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "0",
        "1",
        "2",
        "3",
        "4",
        "5",
        "6",
        "7",
        "8",
        "9",
        "10"
      ]
    },
    "556": {
      "op": "pushint 11 // 11",
      "defined_out": [
        "0",
        "1",
        "10",
        "11",
        "2",
        "3",
        "4",
        "5",
        "6",
        "7",
        "8",
        "9",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "0",
        "1",
        "2",
        "3",
        "4",
        "5",
        "6",
        "7",
        "8",
        "9",
        "10",
        "11"
      ]
    },
    "558": {
      "op": "uncover 12",
      "stack_out": [
        "0",
        "1",
        "2",
        "3",
        "4",
        "5",
        "6",
        "7",
        "8",
        "9",
        "10",
        "11",
        "tmp%4#0"
      ]
    },
    "560": {
      "op": "match call_NoOp create_NoOp call_OptIn create_OptIn call_CloseOut create_CloseOut call_ClearState create_ClearState call_UpdateApplication create_UpdateApplication call_DeleteApplication create_DeleteApplication",
      "stack_out": []
    },
    "586": {
      "op": "b *NOT_IMPLEMENTED"
    },
    "589": {
      "error": "The requested action is not implemented in this contract. Are you using the correct OnComplete? Did you set your app ID?",
      "block": "*NOT_IMPLEMENTED",
      "stack_in": [],
      "op": "err // The requested action is not implemented in this contract. Are you using the correct OnComplete? Did you set your app ID?"
    },
    "590": {
      "block": "create_DeleteApplication",
      "stack_in": [],
      "op": "b *NOT_IMPLEMENTED"
    },
    "593": {
      "block": "call_DeleteApplication",
      "stack_in": [],
      "op": "b *NOT_IMPLEMENTED"
    },
    "596": {
      "block": "create_UpdateApplication",
      "stack_in": [],
      "op": "b *NOT_IMPLEMENTED"
    },
    "599": {
      "block": "call_UpdateApplication",
      "stack_in": [],
      "op": "b *NOT_IMPLEMENTED"
    },
    "602": {
      "block": "create_ClearState",
      "stack_in": [],
      "op": "b *NOT_IMPLEMENTED"
    },
    "605": {
      "block": "call_ClearState",
      "stack_in": [],
      "op": "b *NOT_IMPLEMENTED"
    },
    "608": {
      "block": "create_CloseOut",
      "stack_in": [],
      "op": "b *NOT_IMPLEMENTED"
    },
    "611": {
      "block": "call_CloseOut",
      "stack_in": [],
      "op": "b *NOT_IMPLEMENTED"
    },
    "614": {
      "block": "create_OptIn",
      "stack_in": [],
      "op": "b *NOT_IMPLEMENTED"
    },
    "617": {
      "block": "call_OptIn",
      "stack_in": [],
      "op": "b *NOT_IMPLEMENTED"
    },
    "620": {
      "block": "create_NoOp",
      "stack_in": [],
      "op": "txn NumAppArgs",
      "defined_out": [
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0"
      ]
    },
    "622": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0",
        "0"
      ]
    },
    "623": {
      "op": "==",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0"
      ]
    },
    "624": {
      "op": "bz else_body@26",
      "stack_out": []
    },
    "627": {
      "op": "b __algopy_default_create@25"
    },
    "630": {
      "block": "__algopy_default_create@25",
      "stack_in": [],
      "op": "b block@39"
    },
    "633": {
      "block": "block@39",
      "stack_in": [],
      "op": "b after_inlined_test_cases.typed_abi_call.typed_c2c.Greeter.__algopy_default_create@40"
    },
    "636": {
      "block": "after_inlined_test_cases.typed_abi_call.typed_c2c.Greeter.__algopy_default_create@40",
      "stack_in": [],
      "op": "pushint 1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "638": {
      "op": "return",
      "stack_out": []
    },
    "639": {
      "error": "this contract does not implement the given ABI method for create NoOp",
      "block": "else_body@26",
      "stack_in": [],
      "op": "err // this contract does not implement the given ABI method for create NoOp"
    },
    "640": {
      "block": "call_NoOp",
      "stack_in": [],
      "op": "txna ApplicationArgs 0",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "643": {
      "op": "pushbytes 0x094418cd // method \"test_is_a_b(byte[],byte[],uint64)void\"",
      "defined_out": [
        "Method(test_is_a_b(byte[],byte[],uint64)void)",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "Method(test_is_a_b(byte[],byte[],uint64)void)"
      ]
    },
    "649": {
      "op": "pushbytes 0x31e8e212 // method \"test_method_selector_kinds(uint64)void\"",
      "defined_out": [
        "Method(test_is_a_b(byte[],byte[],uint64)void)",
        "Method(test_method_selector_kinds(uint64)void)",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "Method(test_is_a_b(byte[],byte[],uint64)void)",
        "Method(test_method_selector_kinds(uint64)void)"
      ]
    },
    "655": {
      "op": "pushbytes 0xb5dcf0ba // method \"test_method_overload(uint64)void\"",
      "defined_out": [
        "Method(test_is_a_b(byte[],byte[],uint64)void)",
        "Method(test_method_overload(uint64)void)",
        "Method(test_method_selector_kinds(uint64)void)",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "Method(test_is_a_b(byte[],byte[],uint64)void)",
        "Method(test_method_selector_kinds(uint64)void)",
        "Method(test_method_overload(uint64)void)"
      ]
    },
    "661": {
      "op": "pushbytes 0xbf3b242b // method \"test_arg_conversion(uint64)void\"",
      "defined_out": [
        "Method(test_arg_conversion(uint64)void)",
        "Method(test_is_a_b(byte[],byte[],uint64)void)",
        "Method(test_method_overload(uint64)void)",
        "Method(test_method_selector_kinds(uint64)void)",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "Method(test_is_a_b(byte[],byte[],uint64)void)",
        "Method(test_method_selector_kinds(uint64)void)",
        "Method(test_method_overload(uint64)void)",
        "Method(test_arg_conversion(uint64)void)"
      ]
    },
    "667": {
      "op": "pushbytes 0x063beac7 // method \"test_15plus_args(uint64)void\"",
      "defined_out": [
        "Method(test_15plus_args(uint64)void)",
        "Method(test_arg_conversion(uint64)void)",
        "Method(test_is_a_b(byte[],byte[],uint64)void)",
        "Method(test_method_overload(uint64)void)",
        "Method(test_method_selector_kinds(uint64)void)",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "Method(test_is_a_b(byte[],byte[],uint64)void)",
        "Method(test_method_selector_kinds(uint64)void)",
        "Method(test_method_overload(uint64)void)",
        "Method(test_arg_conversion(uint64)void)",
        "Method(test_15plus_args(uint64)void)"
      ]
    },
    "673": {
      "op": "pushbytes 0xe9f3087d // method \"test_void(uint64)void\"",
      "defined_out": [
        "Method(test_15plus_args(uint64)void)",
        "Method(test_arg_conversion(uint64)void)",
        "Method(test_is_a_b(byte[],byte[],uint64)void)",
        "Method(test_method_overload(uint64)void)",
        "Method(test_method_selector_kinds(uint64)void)",
        "Method(test_void(uint64)void)",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "Method(test_is_a_b(byte[],byte[],uint64)void)",
        "Method(test_method_selector_kinds(uint64)void)",
        "Method(test_method_overload(uint64)void)",
        "Method(test_arg_conversion(uint64)void)",
        "Method(test_15plus_args(uint64)void)",
        "Method(test_void(uint64)void)"
      ]
    },
    "679": {
      "op": "pushbytes 0xc88920f9 // method \"test_ref_types(uint64,uint64)void\"",
      "defined_out": [
        "Method(test_15plus_args(uint64)void)",
        "Method(test_arg_conversion(uint64)void)",
        "Method(test_is_a_b(byte[],byte[],uint64)void)",
        "Method(test_method_overload(uint64)void)",
        "Method(test_method_selector_kinds(uint64)void)",
        "Method(test_ref_types(uint64,uint64)void)",
        "Method(test_void(uint64)void)",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "Method(test_is_a_b(byte[],byte[],uint64)void)",
        "Method(test_method_selector_kinds(uint64)void)",
        "Method(test_method_overload(uint64)void)",
        "Method(test_arg_conversion(uint64)void)",
        "Method(test_15plus_args(uint64)void)",
        "Method(test_void(uint64)void)",
        "Method(test_ref_types(uint64,uint64)void)"
      ]
    },
    "685": {
      "op": "pushbytes 0xc2f21b73 // method \"test_account_to_address(uint64)void\"",
      "defined_out": [
        "Method(test_15plus_args(uint64)void)",
        "Method(test_account_to_address(uint64)void)",
        "Method(test_arg_conversion(uint64)void)",
        "Method(test_is_a_b(byte[],byte[],uint64)void)",
        "Method(test_method_overload(uint64)void)",
        "Method(test_method_selector_kinds(uint64)void)",
        "Method(test_ref_types(uint64,uint64)void)",
        "Method(test_void(uint64)void)",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "Method(test_is_a_b(byte[],byte[],uint64)void)",
        "Method(test_method_selector_kinds(uint64)void)",
        "Method(test_method_overload(uint64)void)",
        "Method(test_arg_conversion(uint64)void)",
        "Method(test_15plus_args(uint64)void)",
        "Method(test_void(uint64)void)",
        "Method(test_ref_types(uint64,uint64)void)",
        "Method(test_account_to_address(uint64)void)"
      ]
    },
    "691": {
      "op": "pushbytes 0x86052a5c // method \"test_native_string(uint64)void\"",
      "defined_out": [
        "Method(test_15plus_args(uint64)void)",
        "Method(test_account_to_address(uint64)void)",
        "Method(test_arg_conversion(uint64)void)",
        "Method(test_is_a_b(byte[],byte[],uint64)void)",
        "Method(test_method_overload(uint64)void)",
        "Method(test_method_selector_kinds(uint64)void)",
        "Method(test_native_string(uint64)void)",
        "Method(test_ref_types(uint64,uint64)void)",
        "Method(test_void(uint64)void)",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "Method(test_is_a_b(byte[],byte[],uint64)void)",
        "Method(test_method_selector_kinds(uint64)void)",
        "Method(test_method_overload(uint64)void)",
        "Method(test_arg_conversion(uint64)void)",
        "Method(test_15plus_args(uint64)void)",
        "Method(test_void(uint64)void)",
        "Method(test_ref_types(uint64,uint64)void)",
        "Method(test_account_to_address(uint64)void)",
        "Method(test_native_string(uint64)void)"
      ]
    },
    "697": {
      "op": "pushbytes 0xe85f2441 // method \"test_native_bytes(uint64)void\"",
      "defined_out": [
        "Method(test_15plus_args(uint64)void)",
        "Method(test_account_to_address(uint64)void)",
        "Method(test_arg_conversion(uint64)void)",
        "Method(test_is_a_b(byte[],byte[],uint64)void)",
        "Method(test_method_overload(uint64)void)",
        "Method(test_method_selector_kinds(uint64)void)",
        "Method(test_native_bytes(uint64)void)",
        "Method(test_native_string(uint64)void)",
        "Method(test_ref_types(uint64,uint64)void)",
        "Method(test_void(uint64)void)",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "Method(test_is_a_b(byte[],byte[],uint64)void)",
        "Method(test_method_selector_kinds(uint64)void)",
        "Method(test_method_overload(uint64)void)",
        "Method(test_arg_conversion(uint64)void)",
        "Method(test_15plus_args(uint64)void)",
        "Method(test_void(uint64)void)",
        "Method(test_ref_types(uint64,uint64)void)",
        "Method(test_account_to_address(uint64)void)",
        "Method(test_native_string(uint64)void)",
        "Method(test_native_bytes(uint64)void)"
      ]
    },
    "703": {
      "op": "pushbytes 0x92082d08 // method \"test_native_uint64(uint64)void\"",
      "defined_out": [
        "Method(test_15plus_args(uint64)void)",
        "Method(test_account_to_address(uint64)void)",
        "Method(test_arg_conversion(uint64)void)",
        "Method(test_is_a_b(byte[],byte[],uint64)void)",
        "Method(test_method_overload(uint64)void)",
        "Method(test_method_selector_kinds(uint64)void)",
        "Method(test_native_bytes(uint64)void)",
        "Method(test_native_string(uint64)void)",
        "Method(test_native_uint64(uint64)void)",
        "Method(test_ref_types(uint64,uint64)void)",
        "Method(test_void(uint64)void)",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "Method(test_is_a_b(byte[],byte[],uint64)void)",
        "Method(test_method_selector_kinds(uint64)void)",
        "Method(test_method_overload(uint64)void)",
        "Method(test_arg_conversion(uint64)void)",
        "Method(test_15plus_args(uint64)void)",
        "Method(test_void(uint64)void)",
        "Method(test_ref_types(uint64,uint64)void)",
        "Method(test_account_to_address(uint64)void)",
        "Method(test_native_string(uint64)void)",
        "Method(test_native_bytes(uint64)void)",
        "Method(test_native_uint64(uint64)void)"
      ]
    },
    "709": {
      "op": "pushbytes 0x6211cd59 // method \"test_native_biguint(uint64)void\"",
      "defined_out": [
        "Method(test_15plus_args(uint64)void)",
        "Method(test_account_to_address(uint64)void)",
        "Method(test_arg_conversion(uint64)void)",
        "Method(test_is_a_b(byte[],byte[],uint64)void)",
        "Method(test_method_overload(uint64)void)",
        "Method(test_method_selector_kinds(uint64)void)",
        "Method(test_native_biguint(uint64)void)",
        "Method(test_native_bytes(uint64)void)",
        "Method(test_native_string(uint64)void)",
        "Method(test_native_uint64(uint64)void)",
        "Method(test_ref_types(uint64,uint64)void)",
        "Method(test_void(uint64)void)",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "Method(test_is_a_b(byte[],byte[],uint64)void)",
        "Method(test_method_selector_kinds(uint64)void)",
        "Method(test_method_overload(uint64)void)",
        "Method(test_arg_conversion(uint64)void)",
        "Method(test_15plus_args(uint64)void)",
        "Method(test_void(uint64)void)",
        "Method(test_ref_types(uint64,uint64)void)",
        "Method(test_account_to_address(uint64)void)",
        "Method(test_native_string(uint64)void)",
        "Method(test_native_bytes(uint64)void)",
        "Method(test_native_uint64(uint64)void)",
        "Method(test_native_biguint(uint64)void)"
      ]
    },
    "715": {
      "op": "pushbytes 0x19eed724 // method \"test_native_tuple(uint64)void\"",
      "defined_out": [
        "Method(test_15plus_args(uint64)void)",
        "Method(test_account_to_address(uint64)void)",
        "Method(test_arg_conversion(uint64)void)",
        "Method(test_is_a_b(byte[],byte[],uint64)void)",
        "Method(test_method_overload(uint64)void)",
        "Method(test_method_selector_kinds(uint64)void)",
        "Method(test_native_biguint(uint64)void)",
        "Method(test_native_bytes(uint64)void)",
        "Method(test_native_string(uint64)void)",
        "Method(test_native_tuple(uint64)void)",
        "Method(test_native_uint64(uint64)void)",
        "Method(test_ref_types(uint64,uint64)void)",
        "Method(test_void(uint64)void)",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "Method(test_is_a_b(byte[],byte[],uint64)void)",
        "Method(test_method_selector_kinds(uint64)void)",
        "Method(test_method_overload(uint64)void)",
        "Method(test_arg_conversion(uint64)void)",
        "Method(test_15plus_args(uint64)void)",
        "Method(test_void(uint64)void)",
        "Method(test_ref_types(uint64,uint64)void)",
        "Method(test_account_to_address(uint64)void)",
        "Method(test_native_string(uint64)void)",
        "Method(test_native_bytes(uint64)void)",
        "Method(test_native_uint64(uint64)void)",
        "Method(test_native_biguint(uint64)void)",
        "Method(test_native_tuple(uint64)void)"
      ]
    },
    "721": {
      "op": "pushbytes 0x92f75ee2 // method \"test_native_tuple_method_ref(uint64)void\"",
      "defined_out": [
        "Method(test_15plus_args(uint64)void)",
        "Method(test_account_to_address(uint64)void)",
        "Method(test_arg_conversion(uint64)void)",
        "Method(test_is_a_b(byte[],byte[],uint64)void)",
        "Method(test_method_overload(uint64)void)",
        "Method(test_method_selector_kinds(uint64)void)",
        "Method(test_native_biguint(uint64)void)",
        "Method(test_native_bytes(uint64)void)",
        "Method(test_native_string(uint64)void)",
        "Method(test_native_tuple(uint64)void)",
        "Method(test_native_tuple_method_ref(uint64)void)",
        "Method(test_native_uint64(uint64)void)",
        "Method(test_ref_types(uint64,uint64)void)",
        "Method(test_void(uint64)void)",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "Method(test_is_a_b(byte[],byte[],uint64)void)",
        "Method(test_method_selector_kinds(uint64)void)",
        "Method(test_method_overload(uint64)void)",
        "Method(test_arg_conversion(uint64)void)",
        "Method(test_15plus_args(uint64)void)",
        "Method(test_void(uint64)void)",
        "Method(test_ref_types(uint64,uint64)void)",
        "Method(test_account_to_address(uint64)void)",
        "Method(test_native_string(uint64)void)",
        "Method(test_native_bytes(uint64)void)",
        "Method(test_native_uint64(uint64)void)",
        "Method(test_native_biguint(uint64)void)",
        "Method(test_native_tuple(uint64)void)",
        "Method(test_native_tuple_method_ref(uint64)void)"
      ]
    },
    "727": {
      "op": "pushbytes 0xe748ef8e // method \"test_nested_tuples(uint64)void\"",
      "defined_out": [
        "Method(test_15plus_args(uint64)void)",
        "Method(test_account_to_address(uint64)void)",
        "Method(test_arg_conversion(uint64)void)",
        "Method(test_is_a_b(byte[],byte[],uint64)void)",
        "Method(test_method_overload(uint64)void)",
        "Method(test_method_selector_kinds(uint64)void)",
        "Method(test_native_biguint(uint64)void)",
        "Method(test_native_bytes(uint64)void)",
        "Method(test_native_string(uint64)void)",
        "Method(test_native_tuple(uint64)void)",
        "Method(test_native_tuple_method_ref(uint64)void)",
        "Method(test_native_uint64(uint64)void)",
        "Method(test_nested_tuples(uint64)void)",
        "Method(test_ref_types(uint64,uint64)void)",
        "Method(test_void(uint64)void)",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "Method(test_is_a_b(byte[],byte[],uint64)void)",
        "Method(test_method_selector_kinds(uint64)void)",
        "Method(test_method_overload(uint64)void)",
        "Method(test_arg_conversion(uint64)void)",
        "Method(test_15plus_args(uint64)void)",
        "Method(test_void(uint64)void)",
        "Method(test_ref_types(uint64,uint64)void)",
        "Method(test_account_to_address(uint64)void)",
        "Method(test_native_string(uint64)void)",
        "Method(test_native_bytes(uint64)void)",
        "Method(test_native_uint64(uint64)void)",
        "Method(test_native_biguint(uint64)void)",
        "Method(test_native_tuple(uint64)void)",
        "Method(test_native_tuple_method_ref(uint64)void)",
        "Method(test_nested_tuples(uint64)void)"
      ]
    },
    "733": {
      "op": "pushbytes 0xc7b94959 // method \"test_no_args(uint64)void\"",
      "defined_out": [
        "Method(test_15plus_args(uint64)void)",
        "Method(test_account_to_address(uint64)void)",
        "Method(test_arg_conversion(uint64)void)",
        "Method(test_is_a_b(byte[],byte[],uint64)void)",
        "Method(test_method_overload(uint64)void)",
        "Method(test_method_selector_kinds(uint64)void)",
        "Method(test_native_biguint(uint64)void)",
        "Method(test_native_bytes(uint64)void)",
        "Method(test_native_string(uint64)void)",
        "Method(test_native_tuple(uint64)void)",
        "Method(test_native_tuple_method_ref(uint64)void)",
        "Method(test_native_uint64(uint64)void)",
        "Method(test_nested_tuples(uint64)void)",
        "Method(test_no_args(uint64)void)",
        "Method(test_ref_types(uint64,uint64)void)",
        "Method(test_void(uint64)void)",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "Method(test_is_a_b(byte[],byte[],uint64)void)",
        "Method(test_method_selector_kinds(uint64)void)",
        "Method(test_method_overload(uint64)void)",
        "Method(test_arg_conversion(uint64)void)",
        "Method(test_15plus_args(uint64)void)",
        "Method(test_void(uint64)void)",
        "Method(test_ref_types(uint64,uint64)void)",
        "Method(test_account_to_address(uint64)void)",
        "Method(test_native_string(uint64)void)",
        "Method(test_native_bytes(uint64)void)",
        "Method(test_native_uint64(uint64)void)",
        "Method(test_native_biguint(uint64)void)",
        "Method(test_native_tuple(uint64)void)",
        "Method(test_native_tuple_method_ref(uint64)void)",
        "Method(test_nested_tuples(uint64)void)",
        "Method(test_no_args(uint64)void)"
      ]
    },
    "739": {
      "op": "pushbytes 0x868e49e7 // method \"test_named_tuples(uint64)void\"",
      "defined_out": [
        "Method(test_15plus_args(uint64)void)",
        "Method(test_account_to_address(uint64)void)",
        "Method(test_arg_conversion(uint64)void)",
        "Method(test_is_a_b(byte[],byte[],uint64)void)",
        "Method(test_method_overload(uint64)void)",
        "Method(test_method_selector_kinds(uint64)void)",
        "Method(test_named_tuples(uint64)void)",
        "Method(test_native_biguint(uint64)void)",
        "Method(test_native_bytes(uint64)void)",
        "Method(test_native_string(uint64)void)",
        "Method(test_native_tuple(uint64)void)",
        "Method(test_native_tuple_method_ref(uint64)void)",
        "Method(test_native_uint64(uint64)void)",
        "Method(test_nested_tuples(uint64)void)",
        "Method(test_no_args(uint64)void)",
        "Method(test_ref_types(uint64,uint64)void)",
        "Method(test_void(uint64)void)",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "Method(test_is_a_b(byte[],byte[],uint64)void)",
        "Method(test_method_selector_kinds(uint64)void)",
        "Method(test_method_overload(uint64)void)",
        "Method(test_arg_conversion(uint64)void)",
        "Method(test_15plus_args(uint64)void)",
        "Method(test_void(uint64)void)",
        "Method(test_ref_types(uint64,uint64)void)",
        "Method(test_account_to_address(uint64)void)",
        "Method(test_native_string(uint64)void)",
        "Method(test_native_bytes(uint64)void)",
        "Method(test_native_uint64(uint64)void)",
        "Method(test_native_biguint(uint64)void)",
        "Method(test_native_tuple(uint64)void)",
        "Method(test_native_tuple_method_ref(uint64)void)",
        "Method(test_nested_tuples(uint64)void)",
        "Method(test_no_args(uint64)void)",
        "Method(test_named_tuples(uint64)void)"
      ]
    },
    "745": {
      "op": "pushbytes 0xaccd5072 // method \"test_arc4_struct(uint64)void\"",
      "defined_out": [
        "Method(test_15plus_args(uint64)void)",
        "Method(test_account_to_address(uint64)void)",
        "Method(test_arc4_struct(uint64)void)",
        "Method(test_arg_conversion(uint64)void)",
        "Method(test_is_a_b(byte[],byte[],uint64)void)",
        "Method(test_method_overload(uint64)void)",
        "Method(test_method_selector_kinds(uint64)void)",
        "Method(test_named_tuples(uint64)void)",
        "Method(test_native_biguint(uint64)void)",
        "Method(test_native_bytes(uint64)void)",
        "Method(test_native_string(uint64)void)",
        "Method(test_native_tuple(uint64)void)",
        "Method(test_native_tuple_method_ref(uint64)void)",
        "Method(test_native_uint64(uint64)void)",
        "Method(test_nested_tuples(uint64)void)",
        "Method(test_no_args(uint64)void)",
        "Method(test_ref_types(uint64,uint64)void)",
        "Method(test_void(uint64)void)",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "Method(test_is_a_b(byte[],byte[],uint64)void)",
        "Method(test_method_selector_kinds(uint64)void)",
        "Method(test_method_overload(uint64)void)",
        "Method(test_arg_conversion(uint64)void)",
        "Method(test_15plus_args(uint64)void)",
        "Method(test_void(uint64)void)",
        "Method(test_ref_types(uint64,uint64)void)",
        "Method(test_account_to_address(uint64)void)",
        "Method(test_native_string(uint64)void)",
        "Method(test_native_bytes(uint64)void)",
        "Method(test_native_uint64(uint64)void)",
        "Method(test_native_biguint(uint64)void)",
        "Method(test_native_tuple(uint64)void)",
        "Method(test_native_tuple_method_ref(uint64)void)",
        "Method(test_nested_tuples(uint64)void)",
        "Method(test_no_args(uint64)void)",
        "Method(test_named_tuples(uint64)void)",
        "Method(test_arc4_struct(uint64)void)"
      ]
    },
    "751": {
      "op": "pushbytes 0xf7f3d8ac // method \"test_resource_encoding(uint64,uint64)void\"",
      "defined_out": [
        "Method(test_15plus_args(uint64)void)",
        "Method(test_account_to_address(uint64)void)",
        "Method(test_arc4_struct(uint64)void)",
        "Method(test_arg_conversion(uint64)void)",
        "Method(test_is_a_b(byte[],byte[],uint64)void)",
        "Method(test_method_overload(uint64)void)",
        "Method(test_method_selector_kinds(uint64)void)",
        "Method(test_named_tuples(uint64)void)",
        "Method(test_native_biguint(uint64)void)",
        "Method(test_native_bytes(uint64)void)",
        "Method(test_native_string(uint64)void)",
        "Method(test_native_tuple(uint64)void)",
        "Method(test_native_tuple_method_ref(uint64)void)",
        "Method(test_native_uint64(uint64)void)",
        "Method(test_nested_tuples(uint64)void)",
        "Method(test_no_args(uint64)void)",
        "Method(test_ref_types(uint64,uint64)void)",
        "Method(test_resource_encoding(uint64,uint64)void)",
        "Method(test_void(uint64)void)",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "Method(test_is_a_b(byte[],byte[],uint64)void)",
        "Method(test_method_selector_kinds(uint64)void)",
        "Method(test_method_overload(uint64)void)",
        "Method(test_arg_conversion(uint64)void)",
        "Method(test_15plus_args(uint64)void)",
        "Method(test_void(uint64)void)",
        "Method(test_ref_types(uint64,uint64)void)",
        "Method(test_account_to_address(uint64)void)",
        "Method(test_native_string(uint64)void)",
        "Method(test_native_bytes(uint64)void)",
        "Method(test_native_uint64(uint64)void)",
        "Method(test_native_biguint(uint64)void)",
        "Method(test_native_tuple(uint64)void)",
        "Method(test_native_tuple_method_ref(uint64)void)",
        "Method(test_nested_tuples(uint64)void)",
        "Method(test_no_args(uint64)void)",
        "Method(test_named_tuples(uint64)void)",
        "Method(test_arc4_struct(uint64)void)",
        "Method(test_resource_encoding(uint64,uint64)void)"
      ]
    },
    "757": {
      "op": "uncover 19",
      "stack_out": [
        "Method(test_is_a_b(byte[],byte[],uint64)void)",
        "Method(test_method_selector_kinds(uint64)void)",
        "Method(test_method_overload(uint64)void)",
        "Method(test_arg_conversion(uint64)void)",
        "Method(test_15plus_args(uint64)void)",
        "Method(test_void(uint64)void)",
        "Method(test_ref_types(uint64,uint64)void)",
        "Method(test_account_to_address(uint64)void)",
        "Method(test_native_string(uint64)void)",
        "Method(test_native_bytes(uint64)void)",
        "Method(test_native_uint64(uint64)void)",
        "Method(test_native_biguint(uint64)void)",
        "Method(test_native_tuple(uint64)void)",
        "Method(test_native_tuple_method_ref(uint64)void)",
        "Method(test_nested_tuples(uint64)void)",
        "Method(test_no_args(uint64)void)",
        "Method(test_named_tuples(uint64)void)",
        "Method(test_arc4_struct(uint64)void)",
        "Method(test_resource_encoding(uint64,uint64)void)",
        "tmp%5#0"
      ]
    },
    "759": {
      "op": "match test_is_a_b_route@3 test_method_selector_kinds_route@4 test_method_overload_route@5 test_arg_conversion_route@6 test_15plus_args_route@7 test_void_route@8 test_ref_types_route@9 test_account_to_address_route@10 test_native_string_route@11 test_native_bytes_route@12 test_native_uint64_route@13 test_native_biguint_route@14 test_native_tuple_route@15 test_native_tuple_method_ref_route@16 test_nested_tuples_route@17 test_no_args_route@18 test_named_tuples_route@19 test_arc4_struct_route@20 test_resource_encoding_route@21",
      "stack_out": []
    },
    "799": {
      "op": "b switch_case_default@22"
    },
    "802": {
      "block": "switch_case_default@22",
      "stack_in": [],
      "op": "b switch_case_next@23"
    },
    "805": {
      "error": "this contract does not implement the given ABI method for call NoOp",
      "block": "switch_case_next@23",
      "stack_in": [],
      "op": "err // this contract does not implement the given ABI method for call NoOp"
    },
    "806": {
      "block": "test_resource_encoding_route@21",
      "stack_in": [],
      "callsub": "test_cases.typed_abi_call.typed_c2c.Greeter.test_resource_encoding[routing]",
      "op": "callsub test_resource_encoding"
    },
    "809": {
      "op": "b switch_case_next@23"
    },
    "812": {
      "block": "test_arc4_struct_route@20",
      "stack_in": [],
      "callsub": "test_cases.typed_abi_call.typed_c2c.Greeter.test_arc4_struct[routing]",
      "op": "callsub test_arc4_struct"
    },
    "815": {
      "op": "b switch_case_next@23"
    },
    "818": {
      "block": "test_named_tuples_route@19",
      "stack_in": [],
      "callsub": "test_cases.typed_abi_call.typed_c2c.Greeter.test_named_tuples[routing]",
      "op": "callsub test_named_tuples"
    },
    "821": {
      "op": "b switch_case_next@23"
    },
    "824": {
      "block": "test_no_args_route@18",
      "stack_in": [],
      "callsub": "test_cases.typed_abi_call.typed_c2c.Greeter.test_no_args[routing]",
      "op": "callsub test_no_args"
    },
    "827": {
      "op": "b switch_case_next@23"
    },
    "830": {
      "block": "test_nested_tuples_route@17",
      "stack_in": [],
      "callsub": "test_cases.typed_abi_call.typed_c2c.Greeter.test_nested_tuples[routing]",
      "op": "callsub test_nested_tuples"
    },
    "833": {
      "op": "b switch_case_next@23"
    },
    "836": {
      "block": "test_native_tuple_method_ref_route@16",
      "stack_in": [],
      "callsub": "test_cases.typed_abi_call.typed_c2c.Greeter.test_native_tuple_method_ref[routing]",
      "op": "callsub test_native_tuple_method_ref"
    },
    "839": {
      "op": "b switch_case_next@23"
    },
    "842": {
      "block": "test_native_tuple_route@15",
      "stack_in": [],
      "callsub": "test_cases.typed_abi_call.typed_c2c.Greeter.test_native_tuple[routing]",
      "op": "callsub test_native_tuple"
    },
    "845": {
      "op": "b switch_case_next@23"
    },
    "848": {
      "block": "test_native_biguint_route@14",
      "stack_in": [],
      "callsub": "test_cases.typed_abi_call.typed_c2c.Greeter.test_native_biguint[routing]",
      "op": "callsub test_native_biguint"
    },
    "851": {
      "op": "b switch_case_next@23"
    },
    "854": {
      "block": "test_native_uint64_route@13",
      "stack_in": [],
      "callsub": "test_cases.typed_abi_call.typed_c2c.Greeter.test_native_uint64[routing]",
      "op": "callsub test_native_uint64"
    },
    "857": {
      "op": "b switch_case_next@23"
    },
    "860": {
      "block": "test_native_bytes_route@12",
      "stack_in": [],
      "callsub": "test_cases.typed_abi_call.typed_c2c.Greeter.test_native_bytes[routing]",
      "op": "callsub test_native_bytes"
    },
    "863": {
      "op": "b switch_case_next@23"
    },
    "866": {
      "block": "test_native_string_route@11",
      "stack_in": [],
      "callsub": "test_cases.typed_abi_call.typed_c2c.Greeter.test_native_string[routing]",
      "op": "callsub test_native_string"
    },
    "869": {
      "op": "b switch_case_next@23"
    },
    "872": {
      "block": "test_account_to_address_route@10",
      "stack_in": [],
      "callsub": "test_cases.typed_abi_call.typed_c2c.Greeter.test_account_to_address[routing]",
      "op": "callsub test_account_to_address"
    },
    "875": {
      "op": "b switch_case_next@23"
    },
    "878": {
      "block": "test_ref_types_route@9",
      "stack_in": [],
      "callsub": "test_cases.typed_abi_call.typed_c2c.Greeter.test_ref_types[routing]",
      "op": "callsub test_ref_types"
    },
    "881": {
      "op": "b switch_case_next@23"
    },
    "884": {
      "block": "test_void_route@8",
      "stack_in": [],
      "callsub": "test_cases.typed_abi_call.typed_c2c.Greeter.test_void[routing]",
      "op": "callsub test_void"
    },
    "887": {
      "op": "b switch_case_next@23"
    },
    "890": {
      "block": "test_15plus_args_route@7",
      "stack_in": [],
      "callsub": "test_cases.typed_abi_call.typed_c2c.Greeter.test_15plus_args[routing]",
      "op": "callsub test_15plus_args"
    },
    "893": {
      "op": "b switch_case_next@23"
    },
    "896": {
      "block": "test_arg_conversion_route@6",
      "stack_in": [],
      "callsub": "test_cases.typed_abi_call.typed_c2c.Greeter.test_arg_conversion[routing]",
      "op": "callsub test_arg_conversion"
    },
    "899": {
      "op": "b switch_case_next@23"
    },
    "902": {
      "block": "test_method_overload_route@5",
      "stack_in": [],
      "callsub": "test_cases.typed_abi_call.typed_c2c.Greeter.test_method_overload[routing]",
      "op": "callsub test_method_overload"
    },
    "905": {
      "op": "b switch_case_next@23"
    },
    "908": {
      "block": "test_method_selector_kinds_route@4",
      "stack_in": [],
      "callsub": "test_cases.typed_abi_call.typed_c2c.Greeter.test_method_selector_kinds[routing]",
      "op": "callsub test_method_selector_kinds"
    },
    "911": {
      "op": "b switch_case_next@23"
    },
    "914": {
      "block": "test_is_a_b_route@3",
      "stack_in": [],
      "callsub": "test_cases.typed_abi_call.typed_c2c.Greeter.test_is_a_b[routing]",
      "op": "callsub test_is_a_b"
    },
    "917": {
      "op": "b switch_case_next@23"
    },
    "920": {
      "subroutine": "test_cases.typed_abi_call.typed_c2c.Greeter.test_is_a_b[routing]",
      "params": {},
      "block": "test_is_a_b",
      "stack_in": [],
      "op": "b test_is_a_b_block@0"
    },
    "923": {
      "block": "test_is_a_b_block@0",
      "stack_in": [],
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded(len+uint8[])%0#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(len+uint8[])%0#0"
      ]
    },
    "926": {
      "op": "extract 2 0",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "929": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "reinterpret_Encoded(len+uint8[])%1#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "reinterpret_Encoded(len+uint8[])%1#0"
      ]
    },
    "932": {
      "op": "extract 2 0",
      "defined_out": [
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0"
      ]
    },
    "935": {
      "op": "txna ApplicationArgs 3",
      "defined_out": [
        "reinterpret_Encoded(uint64)%0#0",
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "reinterpret_Encoded(uint64)%0#0"
      ]
    },
    "938": {
      "op": "btoi",
      "defined_out": [
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0"
      ]
    },
    "939": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%1#0",
        "tmp%2#0",
        "tmp%0#0"
      ]
    },
    "941": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%2#0",
        "tmp%0#0",
        "tmp%1#0"
      ]
    },
    "943": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0"
      ]
    },
    "945": {
      "callsub": "test_cases.typed_abi_call.typed_c2c.Greeter.test_is_a_b",
      "op": "callsub test_cases.typed_abi_call.typed_c2c.Greeter.test_is_a_b",
      "stack_out": []
    },
    "948": {
      "op": "pushint 1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "950": {
      "op": "return",
      "stack_out": []
    },
    "951": {
      "subroutine": "test_cases.typed_abi_call.typed_c2c.Greeter.test_method_selector_kinds[routing]",
      "params": {},
      "block": "test_method_selector_kinds",
      "stack_in": [],
      "op": "b test_method_selector_kinds_block@0"
    },
    "954": {
      "block": "test_method_selector_kinds_block@0",
      "stack_in": [],
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded(uint64)%0#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint64)%0#0"
      ]
    },
    "957": {
      "op": "btoi",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "958": {
      "callsub": "test_cases.typed_abi_call.typed_c2c.Greeter.test_method_selector_kinds",
      "op": "callsub test_cases.typed_abi_call.typed_c2c.Greeter.test_method_selector_kinds",
      "stack_out": []
    },
    "961": {
      "op": "pushint 1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "963": {
      "op": "return",
      "stack_out": []
    },
    "964": {
      "subroutine": "test_cases.typed_abi_call.typed_c2c.Greeter.test_method_overload[routing]",
      "params": {},
      "block": "test_method_overload",
      "stack_in": [],
      "op": "b test_method_overload_block@0"
    },
    "967": {
      "block": "test_method_overload_block@0",
      "stack_in": [],
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded(uint64)%0#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint64)%0#0"
      ]
    },
    "970": {
      "op": "btoi",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "971": {
      "callsub": "test_cases.typed_abi_call.typed_c2c.Greeter.test_method_overload",
      "op": "callsub test_cases.typed_abi_call.typed_c2c.Greeter.test_method_overload",
      "stack_out": []
    },
    "974": {
      "op": "pushint 1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "976": {
      "op": "return",
      "stack_out": []
    },
    "977": {
      "subroutine": "test_cases.typed_abi_call.typed_c2c.Greeter.test_arg_conversion[routing]",
      "params": {},
      "block": "test_arg_conversion",
      "stack_in": [],
      "op": "b test_arg_conversion_block@0"
    },
    "980": {
      "block": "test_arg_conversion_block@0",
      "stack_in": [],
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded(uint64)%0#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint64)%0#0"
      ]
    },
    "983": {
      "op": "btoi",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "984": {
      "callsub": "test_cases.typed_abi_call.typed_c2c.Greeter.test_arg_conversion",
      "op": "callsub test_cases.typed_abi_call.typed_c2c.Greeter.test_arg_conversion",
      "stack_out": []
    },
    "987": {
      "op": "pushint 1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "989": {
      "op": "return",
      "stack_out": []
    },
    "990": {
      "subroutine": "test_cases.typed_abi_call.typed_c2c.Greeter.test_15plus_args[routing]",
      "params": {},
      "block": "test_15plus_args",
      "stack_in": [],
      "op": "b test_15plus_args_block@0"
    },
    "993": {
      "block": "test_15plus_args_block@0",
      "stack_in": [],
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded(uint64)%0#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint64)%0#0"
      ]
    },
    "996": {
      "op": "btoi",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "997": {
      "callsub": "test_cases.typed_abi_call.typed_c2c.Greeter.test_15plus_args",
      "op": "callsub test_cases.typed_abi_call.typed_c2c.Greeter.test_15plus_args",
      "stack_out": []
    },
    "1000": {
      "op": "pushint 1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "1002": {
      "op": "return",
      "stack_out": []
    },
    "1003": {
      "subroutine": "test_cases.typed_abi_call.typed_c2c.Greeter.test_void[routing]",
      "params": {},
      "block": "test_void",
      "stack_in": [],
      "op": "b test_void_block@0"
    },
    "1006": {
      "block": "test_void_block@0",
      "stack_in": [],
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded(uint64)%0#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint64)%0#0"
      ]
    },
    "1009": {
      "op": "btoi",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1010": {
      "callsub": "test_cases.typed_abi_call.typed_c2c.Greeter.test_void",
      "op": "callsub test_cases.typed_abi_call.typed_c2c.Greeter.test_void",
      "stack_out": []
    },
    "1013": {
      "op": "pushint 1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "1015": {
      "op": "return",
      "stack_out": []
    },
    "1016": {
      "subroutine": "test_cases.typed_abi_call.typed_c2c.Greeter.test_ref_types[routing]",
      "params": {},
      "block": "test_ref_types",
      "stack_in": [],
      "op": "b test_ref_types_block@0"
    },
    "1019": {
      "block": "test_ref_types_block@0",
      "stack_in": [],
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded(uint64)%0#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint64)%0#0"
      ]
    },
    "1022": {
      "op": "btoi",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1023": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "reinterpret_Encoded(uint64)%1#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "reinterpret_Encoded(uint64)%1#0"
      ]
    },
    "1026": {
      "op": "btoi",
      "defined_out": [
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0"
      ]
    },
    "1027": {
      "callsub": "test_cases.typed_abi_call.typed_c2c.Greeter.test_ref_types",
      "op": "callsub test_cases.typed_abi_call.typed_c2c.Greeter.test_ref_types",
      "stack_out": []
    },
    "1030": {
      "op": "pushint 1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "1032": {
      "op": "return",
      "stack_out": []
    },
    "1033": {
      "subroutine": "test_cases.typed_abi_call.typed_c2c.Greeter.test_account_to_address[routing]",
      "params": {},
      "block": "test_account_to_address",
      "stack_in": [],
      "op": "b test_account_to_address_block@0"
    },
    "1036": {
      "block": "test_account_to_address_block@0",
      "stack_in": [],
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded(uint64)%0#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint64)%0#0"
      ]
    },
    "1039": {
      "op": "btoi",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1040": {
      "callsub": "test_cases.typed_abi_call.typed_c2c.Greeter.test_account_to_address",
      "op": "callsub test_cases.typed_abi_call.typed_c2c.Greeter.test_account_to_address",
      "stack_out": []
    },
    "1043": {
      "op": "pushint 1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "1045": {
      "op": "return",
      "stack_out": []
    },
    "1046": {
      "subroutine": "test_cases.typed_abi_call.typed_c2c.Greeter.test_native_string[routing]",
      "params": {},
      "block": "test_native_string",
      "stack_in": [],
      "op": "b test_native_string_block@0"
    },
    "1049": {
      "block": "test_native_string_block@0",
      "stack_in": [],
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded(uint64)%0#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint64)%0#0"
      ]
    },
    "1052": {
      "op": "btoi",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1053": {
      "callsub": "test_cases.typed_abi_call.typed_c2c.Greeter.test_native_string",
      "op": "callsub test_cases.typed_abi_call.typed_c2c.Greeter.test_native_string",
      "stack_out": []
    },
    "1056": {
      "op": "pushint 1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "1058": {
      "op": "return",
      "stack_out": []
    },
    "1059": {
      "subroutine": "test_cases.typed_abi_call.typed_c2c.Greeter.test_native_bytes[routing]",
      "params": {},
      "block": "test_native_bytes",
      "stack_in": [],
      "op": "b test_native_bytes_block@0"
    },
    "1062": {
      "block": "test_native_bytes_block@0",
      "stack_in": [],
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded(uint64)%0#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint64)%0#0"
      ]
    },
    "1065": {
      "op": "btoi",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1066": {
      "callsub": "test_cases.typed_abi_call.typed_c2c.Greeter.test_native_bytes",
      "op": "callsub test_cases.typed_abi_call.typed_c2c.Greeter.test_native_bytes",
      "stack_out": []
    },
    "1069": {
      "op": "pushint 1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "1071": {
      "op": "return",
      "stack_out": []
    },
    "1072": {
      "subroutine": "test_cases.typed_abi_call.typed_c2c.Greeter.test_native_uint64[routing]",
      "params": {},
      "block": "test_native_uint64",
      "stack_in": [],
      "op": "b test_native_uint64_block@0"
    },
    "1075": {
      "block": "test_native_uint64_block@0",
      "stack_in": [],
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded(uint64)%0#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint64)%0#0"
      ]
    },
    "1078": {
      "op": "btoi",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1079": {
      "callsub": "test_cases.typed_abi_call.typed_c2c.Greeter.test_native_uint64",
      "op": "callsub test_cases.typed_abi_call.typed_c2c.Greeter.test_native_uint64",
      "stack_out": []
    },
    "1082": {
      "op": "pushint 1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "1084": {
      "op": "return",
      "stack_out": []
    },
    "1085": {
      "subroutine": "test_cases.typed_abi_call.typed_c2c.Greeter.test_native_biguint[routing]",
      "params": {},
      "block": "test_native_biguint",
      "stack_in": [],
      "op": "b test_native_biguint_block@0"
    },
    "1088": {
      "block": "test_native_biguint_block@0",
      "stack_in": [],
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded(uint64)%0#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint64)%0#0"
      ]
    },
    "1091": {
      "op": "btoi",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1092": {
      "callsub": "test_cases.typed_abi_call.typed_c2c.Greeter.test_native_biguint",
      "op": "callsub test_cases.typed_abi_call.typed_c2c.Greeter.test_native_biguint",
      "stack_out": []
    },
    "1095": {
      "op": "pushint 1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "1097": {
      "op": "return",
      "stack_out": []
    },
    "1098": {
      "subroutine": "test_cases.typed_abi_call.typed_c2c.Greeter.test_native_tuple[routing]",
      "params": {},
      "block": "test_native_tuple",
      "stack_in": [],
      "op": "b test_native_tuple_block@0"
    },
    "1101": {
      "block": "test_native_tuple_block@0",
      "stack_in": [],
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded(uint64)%0#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint64)%0#0"
      ]
    },
    "1104": {
      "op": "btoi",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1105": {
      "callsub": "test_cases.typed_abi_call.typed_c2c.Greeter.test_native_tuple",
      "op": "callsub test_cases.typed_abi_call.typed_c2c.Greeter.test_native_tuple",
      "stack_out": []
    },
    "1108": {
      "op": "pushint 1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "1110": {
      "op": "return",
      "stack_out": []
    },
    "1111": {
      "subroutine": "test_cases.typed_abi_call.typed_c2c.Greeter.test_native_tuple_method_ref[routing]",
      "params": {},
      "block": "test_native_tuple_method_ref",
      "stack_in": [],
      "op": "b test_native_tuple_method_ref_block@0"
    },
    "1114": {
      "block": "test_native_tuple_method_ref_block@0",
      "stack_in": [],
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded(uint64)%0#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint64)%0#0"
      ]
    },
    "1117": {
      "op": "btoi",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1118": {
      "callsub": "test_cases.typed_abi_call.typed_c2c.Greeter.test_native_tuple_method_ref",
      "op": "callsub test_cases.typed_abi_call.typed_c2c.Greeter.test_native_tuple_method_ref",
      "stack_out": []
    },
    "1121": {
      "op": "pushint 1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "1123": {
      "op": "return",
      "stack_out": []
    },
    "1124": {
      "subroutine": "test_cases.typed_abi_call.typed_c2c.Greeter.test_nested_tuples[routing]",
      "params": {},
      "block": "test_nested_tuples",
      "stack_in": [],
      "op": "b test_nested_tuples_block@0"
    },
    "1127": {
      "block": "test_nested_tuples_block@0",
      "stack_in": [],
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded(uint64)%0#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint64)%0#0"
      ]
    },
    "1130": {
      "op": "btoi",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1131": {
      "callsub": "test_cases.typed_abi_call.typed_c2c.Greeter.test_nested_tuples",
      "op": "callsub test_cases.typed_abi_call.typed_c2c.Greeter.test_nested_tuples",
      "stack_out": []
    },
    "1134": {
      "op": "pushint 1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "1136": {
      "op": "return",
      "stack_out": []
    },
    "1137": {
      "subroutine": "test_cases.typed_abi_call.typed_c2c.Greeter.test_no_args[routing]",
      "params": {},
      "block": "test_no_args",
      "stack_in": [],
      "op": "b test_no_args_block@0"
    },
    "1140": {
      "block": "test_no_args_block@0",
      "stack_in": [],
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded(uint64)%0#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint64)%0#0"
      ]
    },
    "1143": {
      "op": "btoi",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1144": {
      "callsub": "test_cases.typed_abi_call.typed_c2c.Greeter.test_no_args",
      "op": "callsub test_cases.typed_abi_call.typed_c2c.Greeter.test_no_args",
      "stack_out": []
    },
    "1147": {
      "op": "pushint 1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "1149": {
      "op": "return",
      "stack_out": []
    },
    "1150": {
      "subroutine": "test_cases.typed_abi_call.typed_c2c.Greeter.test_named_tuples[routing]",
      "params": {},
      "block": "test_named_tuples",
      "stack_in": [],
      "op": "b test_named_tuples_block@0"
    },
    "1153": {
      "block": "test_named_tuples_block@0",
      "stack_in": [],
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded(uint64)%0#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint64)%0#0"
      ]
    },
    "1156": {
      "op": "btoi",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1157": {
      "callsub": "test_cases.typed_abi_call.typed_c2c.Greeter.test_named_tuples",
      "op": "callsub test_cases.typed_abi_call.typed_c2c.Greeter.test_named_tuples",
      "stack_out": []
    },
    "1160": {
      "op": "pushint 1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "1162": {
      "op": "return",
      "stack_out": []
    },
    "1163": {
      "subroutine": "test_cases.typed_abi_call.typed_c2c.Greeter.test_arc4_struct[routing]",
      "params": {},
      "block": "test_arc4_struct",
      "stack_in": [],
      "op": "b test_arc4_struct_block@0"
    },
    "1166": {
      "block": "test_arc4_struct_block@0",
      "stack_in": [],
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded(uint64)%0#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint64)%0#0"
      ]
    },
    "1169": {
      "op": "btoi",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1170": {
      "callsub": "test_cases.typed_abi_call.typed_c2c.Greeter.test_arc4_struct",
      "op": "callsub test_cases.typed_abi_call.typed_c2c.Greeter.test_arc4_struct",
      "stack_out": []
    },
    "1173": {
      "op": "pushint 1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "1175": {
      "op": "return",
      "stack_out": []
    },
    "1176": {
      "subroutine": "test_cases.typed_abi_call.typed_c2c.Greeter.test_resource_encoding[routing]",
      "params": {},
      "block": "test_resource_encoding",
      "stack_in": [],
      "op": "b test_resource_encoding_block@0"
    },
    "1179": {
      "block": "test_resource_encoding_block@0",
      "stack_in": [],
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded(uint64)%0#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint64)%0#0"
      ]
    },
    "1182": {
      "op": "btoi",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1183": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "reinterpret_Encoded(uint64)%1#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "reinterpret_Encoded(uint64)%1#0"
      ]
    },
    "1186": {
      "op": "btoi",
      "defined_out": [
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0"
      ]
    },
    "1187": {
      "callsub": "test_cases.typed_abi_call.typed_c2c.Greeter.test_resource_encoding",
      "op": "callsub test_cases.typed_abi_call.typed_c2c.Greeter.test_resource_encoding",
      "stack_out": []
    },
    "1190": {
      "op": "pushint 1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "1192": {
      "op": "return",
      "stack_out": []
    },
    "1193": {
      "subroutine": "test_cases.typed_abi_call.typed_c2c.Greeter.test_is_a_b",
      "params": {
        "a#0": "bytes",
        "b#0": "bytes",
        "app#0": "uint64"
      },
      "block": "test_cases.typed_abi_call.typed_c2c.Greeter.test_is_a_b",
      "stack_in": [],
      "op": "proto 3 0"
    },
    "1196": {
      "op": "b test_cases.typed_abi_call.typed_c2c.Greeter.test_is_a_b_block@0"
    },
    "1199": {
      "block": "test_cases.typed_abi_call.typed_c2c.Greeter.test_is_a_b_block@0",
      "stack_in": [],
      "op": "itxn_begin"
    },
    "1200": {
      "op": "frame_dig -3",
      "defined_out": [
        "a#0 (copy)"
      ],
      "stack_out": [
        "a#0 (copy)"
      ]
    },
    "1202": {
      "op": "len",
      "defined_out": [
        "aggregate%length%0#0"
      ],
      "stack_out": [
        "aggregate%length%0#0"
      ]
    },
    "1203": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%0#0"
      ],
      "stack_out": [
        "aggregate%as_bytes%0#0"
      ]
    },
    "1204": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%length_uint16%0#0"
      ],
      "stack_out": [
        "aggregate%length_uint16%0#0"
      ]
    },
    "1207": {
      "op": "frame_dig -3",
      "stack_out": [
        "aggregate%length_uint16%0#0",
        "a#0 (copy)"
      ]
    },
    "1209": {
      "op": "concat",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1210": {
      "op": "frame_dig -2",
      "defined_out": [
        "b#0 (copy)",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "b#0 (copy)"
      ]
    },
    "1212": {
      "op": "len",
      "defined_out": [
        "aggregate%length%1#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "aggregate%length%1#0"
      ]
    },
    "1213": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%1#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "aggregate%as_bytes%1#0"
      ]
    },
    "1214": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%length_uint16%1#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "aggregate%length_uint16%1#0"
      ]
    },
    "1217": {
      "op": "frame_dig -2",
      "stack_out": [
        "tmp%0#0",
        "aggregate%length_uint16%1#0",
        "b#0 (copy)"
      ]
    },
    "1219": {
      "op": "concat",
      "defined_out": [
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0",
        "tmp%1#0"
      ]
    },
    "1220": {
      "op": "cover 1",
      "defined_out": [
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%0%%param_ApplicationArgs_idx_2#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_ApplicationArgs_idx_2#0",
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "1222": {
      "op": "frame_dig -1",
      "defined_out": [
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%0%%param_ApplicationArgs_idx_2#0",
        "inner_txn_params%0%%param_ApplicationID_idx_0#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_ApplicationArgs_idx_2#0",
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%0%%param_ApplicationID_idx_0#0"
      ]
    },
    "1224": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "inner_txn_params%0%%param_ApplicationArgs_idx_2#0",
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "1226": {
      "op": "pushbytes 0xc77212bc // method \"is_a_b(byte[],byte[])void\"",
      "defined_out": [
        "Method(is_a_b(byte[],byte[])void)",
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%0%%param_ApplicationArgs_idx_2#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_ApplicationArgs_idx_2#0",
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0",
        "Method(is_a_b(byte[],byte[])void)"
      ]
    },
    "1232": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "inner_txn_params%0%%param_ApplicationArgs_idx_2#0",
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "1234": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "inner_txn_params%0%%param_ApplicationArgs_idx_2#0"
      ]
    },
    "1236": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "1238": {
      "op": "intc_1 // appl",
      "defined_out": [
        "appl"
      ],
      "stack_out": [
        "appl"
      ]
    },
    "1239": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "1241": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "1242": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "1244": {
      "op": "b test_cases.typed_abi_call.typed_c2c.Greeter.test_is_a_b_next_txn@1"
    },
    "1247": {
      "block": "test_cases.typed_abi_call.typed_c2c.Greeter.test_is_a_b_next_txn@1",
      "stack_in": [],
      "op": "itxn_submit"
    },
    "1248": {
      "retsub": true,
      "op": "retsub"
    },
    "1249": {
      "subroutine": "test_cases.typed_abi_call.typed_c2c.Greeter.test_method_selector_kinds",
      "params": {
        "app#0": "uint64"
      },
      "block": "test_cases.typed_abi_call.typed_c2c.Greeter.test_method_selector_kinds",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "1252": {
      "op": "b test_cases.typed_abi_call.typed_c2c.Greeter.test_method_selector_kinds_block@0"
    },
    "1255": {
      "block": "test_cases.typed_abi_call.typed_c2c.Greeter.test_method_selector_kinds_block@0",
      "stack_in": [],
      "op": "bytec 4 // method \"echo(string)string\"",
      "defined_out": [
        "Method(echo(string)string)"
      ],
      "stack_out": [
        "Method(echo(string)string)"
      ]
    },
    "1257": {
      "op": "bytec 4 // method \"echo(string)string\"",
      "stack_out": [
        "Method(echo(string)string)",
        "Method(echo(string)string)"
      ]
    },
    "1259": {
      "op": "==",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1260": {
      "op": "assert",
      "stack_out": []
    },
    "1261": {
      "op": "itxn_begin"
    },
    "1262": {
      "op": "bytec 37 // \"test1\"",
      "defined_out": [
        "\"test1\""
      ],
      "stack_out": [
        "\"test1\""
      ]
    },
    "1264": {
      "op": "len",
      "defined_out": [
        "aggregate%length%0#0"
      ],
      "stack_out": [
        "aggregate%length%0#0"
      ]
    },
    "1265": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%0#0"
      ],
      "stack_out": [
        "aggregate%as_bytes%0#0"
      ]
    },
    "1266": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%length_uint16%0#0"
      ],
      "stack_out": [
        "aggregate%length_uint16%0#0"
      ]
    },
    "1269": {
      "op": "bytec 37 // \"test1\"",
      "stack_out": [
        "aggregate%length_uint16%0#0",
        "\"test1\""
      ]
    },
    "1271": {
      "op": "concat",
      "defined_out": [
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "1272": {
      "op": "frame_dig -1",
      "defined_out": [
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%0%%param_ApplicationID_idx_0#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%0%%param_ApplicationID_idx_0#0"
      ]
    },
    "1274": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "1276": {
      "op": "bytec 4 // method \"echo(string)string\"",
      "stack_out": [
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0",
        "Method(echo(string)string)"
      ]
    },
    "1278": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "1280": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "1282": {
      "op": "intc_1 // appl",
      "defined_out": [
        "appl"
      ],
      "stack_out": [
        "appl"
      ]
    },
    "1283": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "1285": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "1286": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "1288": {
      "op": "b test_cases.typed_abi_call.typed_c2c.Greeter.test_method_selector_kinds_next_txn@1"
    },
    "1291": {
      "block": "test_cases.typed_abi_call.typed_c2c.Greeter.test_method_selector_kinds_next_txn@1",
      "stack_in": [],
      "op": "itxn_submit"
    },
    "1292": {
      "op": "itxn LastLog",
      "defined_out": [
        "awst_tmp%0#0"
      ],
      "stack_out": [
        "awst_tmp%0#0"
      ]
    },
    "1294": {
      "op": "dup",
      "defined_out": [
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ]
    },
    "1295": {
      "op": "extract 4 0",
      "defined_out": [
        "awst_tmp%0#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "tmp%2#0"
      ]
    },
    "1298": {
      "op": "cover 1",
      "stack_out": [
        "tmp%2#0",
        "awst_tmp%0#0"
      ]
    },
    "1300": {
      "op": "extract 0 4",
      "defined_out": [
        "tmp%2#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "tmp%3#0"
      ]
    },
    "1303": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%2#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "tmp%3#0",
        "0x151f7c75"
      ]
    },
    "1304": {
      "op": "==",
      "defined_out": [
        "tmp%2#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "tmp%4#0"
      ]
    },
    "1305": {
      "error": "application log value is not the result of an ABI return",
      "op": "assert // application log value is not the result of an ABI return",
      "defined_out": [
        "result#0"
      ],
      "stack_out": [
        "result#0"
      ]
    },
    "1306": {
      "op": "bytec 38 // \"echo: test1\"",
      "defined_out": [
        "\"echo: test1\"",
        "result#0"
      ],
      "stack_out": [
        "result#0",
        "\"echo: test1\""
      ]
    },
    "1308": {
      "op": "len",
      "defined_out": [
        "aggregate%length%1#0",
        "result#0"
      ],
      "stack_out": [
        "result#0",
        "aggregate%length%1#0"
      ]
    },
    "1309": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%1#0",
        "result#0"
      ],
      "stack_out": [
        "result#0",
        "aggregate%as_bytes%1#0"
      ]
    },
    "1310": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%length_uint16%1#0",
        "result#0"
      ],
      "stack_out": [
        "result#0",
        "aggregate%length_uint16%1#0"
      ]
    },
    "1313": {
      "op": "bytec 38 // \"echo: test1\"",
      "stack_out": [
        "result#0",
        "aggregate%length_uint16%1#0",
        "\"echo: test1\""
      ]
    },
    "1315": {
      "op": "concat",
      "defined_out": [
        "result#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "result#0",
        "tmp%5#0"
      ]
    },
    "1316": {
      "op": "==",
      "defined_out": [
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0"
      ]
    },
    "1317": {
      "op": "assert",
      "stack_out": []
    },
    "1318": {
      "op": "itxn_begin"
    },
    "1319": {
      "op": "bytec 39 // \"test2\"",
      "defined_out": [
        "\"test2\""
      ],
      "stack_out": [
        "\"test2\""
      ]
    },
    "1321": {
      "op": "len",
      "defined_out": [
        "aggregate%length%2#0"
      ],
      "stack_out": [
        "aggregate%length%2#0"
      ]
    },
    "1322": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%2#0"
      ],
      "stack_out": [
        "aggregate%as_bytes%2#0"
      ]
    },
    "1323": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%length_uint16%2#0"
      ],
      "stack_out": [
        "aggregate%length_uint16%2#0"
      ]
    },
    "1326": {
      "op": "bytec 39 // \"test2\"",
      "stack_out": [
        "aggregate%length_uint16%2#0",
        "\"test2\""
      ]
    },
    "1328": {
      "op": "concat",
      "defined_out": [
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0"
      ],
      "stack_out": [
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "1329": {
      "op": "frame_dig -1",
      "defined_out": [
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%1%%param_ApplicationID_idx_0#0"
      ],
      "stack_out": [
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%1%%param_ApplicationID_idx_0#0"
      ]
    },
    "1331": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "1333": {
      "op": "bytec 4 // method \"echo(string)string\"",
      "defined_out": [
        "Method(echo(string)string)",
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0"
      ],
      "stack_out": [
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0",
        "Method(echo(string)string)"
      ]
    },
    "1335": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "1337": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "1339": {
      "op": "intc_1 // appl",
      "defined_out": [
        "appl"
      ],
      "stack_out": [
        "appl"
      ]
    },
    "1340": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "1342": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "1343": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "1345": {
      "op": "b test_cases.typed_abi_call.typed_c2c.Greeter.test_method_selector_kinds_next_txn@2"
    },
    "1348": {
      "block": "test_cases.typed_abi_call.typed_c2c.Greeter.test_method_selector_kinds_next_txn@2",
      "stack_in": [],
      "op": "itxn_submit"
    },
    "1349": {
      "op": "itxn LastLog",
      "defined_out": [
        "awst_tmp%1#0"
      ],
      "stack_out": [
        "awst_tmp%1#0"
      ]
    },
    "1351": {
      "op": "dup",
      "defined_out": [
        "awst_tmp%1#0",
        "awst_tmp%1#0 (copy)"
      ],
      "stack_out": [
        "awst_tmp%1#0",
        "awst_tmp%1#0 (copy)"
      ]
    },
    "1352": {
      "op": "extract 4 0",
      "defined_out": [
        "awst_tmp%1#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "awst_tmp%1#0",
        "tmp%8#0"
      ]
    },
    "1355": {
      "op": "cover 1",
      "stack_out": [
        "tmp%8#0",
        "awst_tmp%1#0"
      ]
    },
    "1357": {
      "op": "extract 0 4",
      "defined_out": [
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "tmp%9#0"
      ]
    },
    "1360": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "tmp%9#0",
        "0x151f7c75"
      ]
    },
    "1361": {
      "op": "==",
      "defined_out": [
        "tmp%10#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "tmp%10#0"
      ]
    },
    "1362": {
      "error": "application log value is not the result of an ABI return",
      "op": "assert // application log value is not the result of an ABI return",
      "defined_out": [
        "result#0"
      ],
      "stack_out": [
        "result#0"
      ]
    },
    "1363": {
      "op": "bytec 40 // \"echo: test2\"",
      "defined_out": [
        "\"echo: test2\"",
        "result#0"
      ],
      "stack_out": [
        "result#0",
        "\"echo: test2\""
      ]
    },
    "1365": {
      "op": "len",
      "defined_out": [
        "aggregate%length%3#0",
        "result#0"
      ],
      "stack_out": [
        "result#0",
        "aggregate%length%3#0"
      ]
    },
    "1366": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%3#0",
        "result#0"
      ],
      "stack_out": [
        "result#0",
        "aggregate%as_bytes%3#0"
      ]
    },
    "1367": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%length_uint16%3#0",
        "result#0"
      ],
      "stack_out": [
        "result#0",
        "aggregate%length_uint16%3#0"
      ]
    },
    "1370": {
      "op": "bytec 40 // \"echo: test2\"",
      "stack_out": [
        "result#0",
        "aggregate%length_uint16%3#0",
        "\"echo: test2\""
      ]
    },
    "1372": {
      "op": "concat",
      "defined_out": [
        "result#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "result#0",
        "tmp%11#0"
      ]
    },
    "1373": {
      "op": "==",
      "defined_out": [
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%12#0"
      ]
    },
    "1374": {
      "op": "assert",
      "stack_out": []
    },
    "1375": {
      "op": "itxn_begin"
    },
    "1376": {
      "op": "bytec 41 // \"test3\"",
      "defined_out": [
        "\"test3\""
      ],
      "stack_out": [
        "\"test3\""
      ]
    },
    "1378": {
      "op": "len",
      "defined_out": [
        "aggregate%length%4#0"
      ],
      "stack_out": [
        "aggregate%length%4#0"
      ]
    },
    "1379": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%4#0"
      ],
      "stack_out": [
        "aggregate%as_bytes%4#0"
      ]
    },
    "1380": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%length_uint16%4#0"
      ],
      "stack_out": [
        "aggregate%length_uint16%4#0"
      ]
    },
    "1383": {
      "op": "bytec 41 // \"test3\"",
      "stack_out": [
        "aggregate%length_uint16%4#0",
        "\"test3\""
      ]
    },
    "1385": {
      "op": "concat",
      "defined_out": [
        "inner_txn_params%2%%param_ApplicationArgs_idx_1#0"
      ],
      "stack_out": [
        "inner_txn_params%2%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "1386": {
      "op": "frame_dig -1",
      "defined_out": [
        "inner_txn_params%2%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%2%%param_ApplicationID_idx_0#0"
      ],
      "stack_out": [
        "inner_txn_params%2%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%2%%param_ApplicationID_idx_0#0"
      ]
    },
    "1388": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "inner_txn_params%2%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "1390": {
      "op": "bytec 4 // method \"echo(string)string\"",
      "defined_out": [
        "Method(echo(string)string)",
        "inner_txn_params%2%%param_ApplicationArgs_idx_1#0"
      ],
      "stack_out": [
        "inner_txn_params%2%%param_ApplicationArgs_idx_1#0",
        "Method(echo(string)string)"
      ]
    },
    "1392": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "inner_txn_params%2%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "1394": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "1396": {
      "op": "intc_1 // appl",
      "defined_out": [
        "appl"
      ],
      "stack_out": [
        "appl"
      ]
    },
    "1397": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "1399": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "1400": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "1402": {
      "op": "b test_cases.typed_abi_call.typed_c2c.Greeter.test_method_selector_kinds_next_txn@3"
    },
    "1405": {
      "block": "test_cases.typed_abi_call.typed_c2c.Greeter.test_method_selector_kinds_next_txn@3",
      "stack_in": [],
      "op": "itxn_submit"
    },
    "1406": {
      "op": "itxn LastLog",
      "defined_out": [
        "awst_tmp%2#0"
      ],
      "stack_out": [
        "awst_tmp%2#0"
      ]
    },
    "1408": {
      "op": "dup",
      "defined_out": [
        "awst_tmp%2#0",
        "awst_tmp%2#0 (copy)"
      ],
      "stack_out": [
        "awst_tmp%2#0",
        "awst_tmp%2#0 (copy)"
      ]
    },
    "1409": {
      "op": "extract 4 0",
      "defined_out": [
        "awst_tmp%2#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "awst_tmp%2#0",
        "tmp%14#0"
      ]
    },
    "1412": {
      "op": "cover 1",
      "stack_out": [
        "tmp%14#0",
        "awst_tmp%2#0"
      ]
    },
    "1414": {
      "op": "extract 0 4",
      "defined_out": [
        "tmp%14#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "tmp%14#0",
        "tmp%15#0"
      ]
    },
    "1417": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%14#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "tmp%14#0",
        "tmp%15#0",
        "0x151f7c75"
      ]
    },
    "1418": {
      "op": "==",
      "defined_out": [
        "tmp%14#0",
        "tmp%16#0"
      ],
      "stack_out": [
        "tmp%14#0",
        "tmp%16#0"
      ]
    },
    "1419": {
      "error": "application log value is not the result of an ABI return",
      "op": "assert // application log value is not the result of an ABI return",
      "defined_out": [
        "result#0"
      ],
      "stack_out": [
        "result#0"
      ]
    },
    "1420": {
      "op": "bytec 42 // \"echo: test3\"",
      "defined_out": [
        "\"echo: test3\"",
        "result#0"
      ],
      "stack_out": [
        "result#0",
        "\"echo: test3\""
      ]
    },
    "1422": {
      "op": "len",
      "defined_out": [
        "aggregate%length%5#0",
        "result#0"
      ],
      "stack_out": [
        "result#0",
        "aggregate%length%5#0"
      ]
    },
    "1423": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%5#0",
        "result#0"
      ],
      "stack_out": [
        "result#0",
        "aggregate%as_bytes%5#0"
      ]
    },
    "1424": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%length_uint16%5#0",
        "result#0"
      ],
      "stack_out": [
        "result#0",
        "aggregate%length_uint16%5#0"
      ]
    },
    "1427": {
      "op": "bytec 42 // \"echo: test3\"",
      "stack_out": [
        "result#0",
        "aggregate%length_uint16%5#0",
        "\"echo: test3\""
      ]
    },
    "1429": {
      "op": "concat",
      "defined_out": [
        "result#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "result#0",
        "tmp%17#0"
      ]
    },
    "1430": {
      "op": "==",
      "defined_out": [
        "tmp%18#0"
      ],
      "stack_out": [
        "tmp%18#0"
      ]
    },
    "1431": {
      "op": "assert",
      "stack_out": []
    },
    "1432": {
      "op": "itxn_begin"
    },
    "1433": {
      "op": "bytec 43 // \"test4\"",
      "defined_out": [
        "\"test4\""
      ],
      "stack_out": [
        "\"test4\""
      ]
    },
    "1435": {
      "op": "len",
      "defined_out": [
        "aggregate%length%6#0"
      ],
      "stack_out": [
        "aggregate%length%6#0"
      ]
    },
    "1436": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%6#0"
      ],
      "stack_out": [
        "aggregate%as_bytes%6#0"
      ]
    },
    "1437": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%length_uint16%6#0"
      ],
      "stack_out": [
        "aggregate%length_uint16%6#0"
      ]
    },
    "1440": {
      "op": "bytec 43 // \"test4\"",
      "stack_out": [
        "aggregate%length_uint16%6#0",
        "\"test4\""
      ]
    },
    "1442": {
      "op": "concat",
      "defined_out": [
        "inner_txn_params%3%%param_ApplicationArgs_idx_1#0"
      ],
      "stack_out": [
        "inner_txn_params%3%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "1443": {
      "op": "frame_dig -1",
      "defined_out": [
        "inner_txn_params%3%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%3%%param_ApplicationID_idx_0#0"
      ],
      "stack_out": [
        "inner_txn_params%3%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%3%%param_ApplicationID_idx_0#0"
      ]
    },
    "1445": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "inner_txn_params%3%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "1447": {
      "op": "bytec 4 // method \"echo(string)string\"",
      "defined_out": [
        "Method(echo(string)string)",
        "inner_txn_params%3%%param_ApplicationArgs_idx_1#0"
      ],
      "stack_out": [
        "inner_txn_params%3%%param_ApplicationArgs_idx_1#0",
        "Method(echo(string)string)"
      ]
    },
    "1449": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "inner_txn_params%3%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "1451": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "1453": {
      "op": "intc_1 // appl",
      "defined_out": [
        "appl"
      ],
      "stack_out": [
        "appl"
      ]
    },
    "1454": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "1456": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "1457": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "1459": {
      "op": "b test_cases.typed_abi_call.typed_c2c.Greeter.test_method_selector_kinds_next_txn@4"
    },
    "1462": {
      "block": "test_cases.typed_abi_call.typed_c2c.Greeter.test_method_selector_kinds_next_txn@4",
      "stack_in": [],
      "op": "itxn_submit"
    },
    "1463": {
      "op": "itxn LastLog",
      "defined_out": [
        "awst_tmp%3#0"
      ],
      "stack_out": [
        "awst_tmp%3#0"
      ]
    },
    "1465": {
      "op": "dup",
      "defined_out": [
        "awst_tmp%3#0",
        "awst_tmp%3#0 (copy)"
      ],
      "stack_out": [
        "awst_tmp%3#0",
        "awst_tmp%3#0 (copy)"
      ]
    },
    "1466": {
      "op": "extract 4 0",
      "defined_out": [
        "awst_tmp%3#0",
        "tmp%20#0"
      ],
      "stack_out": [
        "awst_tmp%3#0",
        "tmp%20#0"
      ]
    },
    "1469": {
      "op": "cover 1",
      "stack_out": [
        "tmp%20#0",
        "awst_tmp%3#0"
      ]
    },
    "1471": {
      "op": "extract 0 4",
      "defined_out": [
        "tmp%20#0",
        "tmp%21#0"
      ],
      "stack_out": [
        "tmp%20#0",
        "tmp%21#0"
      ]
    },
    "1474": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%20#0",
        "tmp%21#0"
      ],
      "stack_out": [
        "tmp%20#0",
        "tmp%21#0",
        "0x151f7c75"
      ]
    },
    "1475": {
      "op": "==",
      "defined_out": [
        "tmp%20#0",
        "tmp%22#0"
      ],
      "stack_out": [
        "tmp%20#0",
        "tmp%22#0"
      ]
    },
    "1476": {
      "error": "application log value is not the result of an ABI return",
      "op": "assert // application log value is not the result of an ABI return",
      "defined_out": [
        "result#0"
      ],
      "stack_out": [
        "result#0"
      ]
    },
    "1477": {
      "op": "bytec 44 // \"echo: test4\"",
      "defined_out": [
        "\"echo: test4\"",
        "result#0"
      ],
      "stack_out": [
        "result#0",
        "\"echo: test4\""
      ]
    },
    "1479": {
      "op": "len",
      "defined_out": [
        "aggregate%length%7#0",
        "result#0"
      ],
      "stack_out": [
        "result#0",
        "aggregate%length%7#0"
      ]
    },
    "1480": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%7#0",
        "result#0"
      ],
      "stack_out": [
        "result#0",
        "aggregate%as_bytes%7#0"
      ]
    },
    "1481": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%length_uint16%7#0",
        "result#0"
      ],
      "stack_out": [
        "result#0",
        "aggregate%length_uint16%7#0"
      ]
    },
    "1484": {
      "op": "bytec 44 // \"echo: test4\"",
      "stack_out": [
        "result#0",
        "aggregate%length_uint16%7#0",
        "\"echo: test4\""
      ]
    },
    "1486": {
      "op": "concat",
      "defined_out": [
        "result#0",
        "tmp%23#0"
      ],
      "stack_out": [
        "result#0",
        "tmp%23#0"
      ]
    },
    "1487": {
      "op": "==",
      "defined_out": [
        "tmp%24#0"
      ],
      "stack_out": [
        "tmp%24#0"
      ]
    },
    "1488": {
      "op": "assert",
      "stack_out": []
    },
    "1489": {
      "op": "itxn_begin"
    },
    "1490": {
      "op": "bytec 45 // \"test5\"",
      "defined_out": [
        "\"test5\""
      ],
      "stack_out": [
        "\"test5\""
      ]
    },
    "1492": {
      "op": "len",
      "defined_out": [
        "aggregate%length%8#0"
      ],
      "stack_out": [
        "aggregate%length%8#0"
      ]
    },
    "1493": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%8#0"
      ],
      "stack_out": [
        "aggregate%as_bytes%8#0"
      ]
    },
    "1494": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%length_uint16%8#0"
      ],
      "stack_out": [
        "aggregate%length_uint16%8#0"
      ]
    },
    "1497": {
      "op": "bytec 45 // \"test5\"",
      "stack_out": [
        "aggregate%length_uint16%8#0",
        "\"test5\""
      ]
    },
    "1499": {
      "op": "concat",
      "defined_out": [
        "inner_txn_params%4%%param_ApplicationArgs_idx_1#0"
      ],
      "stack_out": [
        "inner_txn_params%4%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "1500": {
      "op": "frame_dig -1",
      "defined_out": [
        "inner_txn_params%4%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%4%%param_ApplicationID_idx_0#0"
      ],
      "stack_out": [
        "inner_txn_params%4%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%4%%param_ApplicationID_idx_0#0"
      ]
    },
    "1502": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "inner_txn_params%4%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "1504": {
      "op": "bytec 4 // method \"echo(string)string\"",
      "defined_out": [
        "Method(echo(string)string)",
        "inner_txn_params%4%%param_ApplicationArgs_idx_1#0"
      ],
      "stack_out": [
        "inner_txn_params%4%%param_ApplicationArgs_idx_1#0",
        "Method(echo(string)string)"
      ]
    },
    "1506": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "inner_txn_params%4%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "1508": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "1510": {
      "op": "intc_1 // appl",
      "defined_out": [
        "appl"
      ],
      "stack_out": [
        "appl"
      ]
    },
    "1511": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "1513": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "1514": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "1516": {
      "op": "b test_cases.typed_abi_call.typed_c2c.Greeter.test_method_selector_kinds_next_txn@5"
    },
    "1519": {
      "block": "test_cases.typed_abi_call.typed_c2c.Greeter.test_method_selector_kinds_next_txn@5",
      "stack_in": [],
      "op": "itxn_submit"
    },
    "1520": {
      "op": "itxn LastLog",
      "defined_out": [
        "awst_tmp%4#0"
      ],
      "stack_out": [
        "awst_tmp%4#0"
      ]
    },
    "1522": {
      "op": "dup",
      "defined_out": [
        "awst_tmp%4#0",
        "awst_tmp%4#0 (copy)"
      ],
      "stack_out": [
        "awst_tmp%4#0",
        "awst_tmp%4#0 (copy)"
      ]
    },
    "1523": {
      "op": "extract 4 0",
      "defined_out": [
        "awst_tmp%4#0",
        "tmp%26#0"
      ],
      "stack_out": [
        "awst_tmp%4#0",
        "tmp%26#0"
      ]
    },
    "1526": {
      "op": "cover 1",
      "stack_out": [
        "tmp%26#0",
        "awst_tmp%4#0"
      ]
    },
    "1528": {
      "op": "extract 0 4",
      "defined_out": [
        "tmp%26#0",
        "tmp%27#0"
      ],
      "stack_out": [
        "tmp%26#0",
        "tmp%27#0"
      ]
    },
    "1531": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%26#0",
        "tmp%27#0"
      ],
      "stack_out": [
        "tmp%26#0",
        "tmp%27#0",
        "0x151f7c75"
      ]
    },
    "1532": {
      "op": "==",
      "defined_out": [
        "tmp%26#0",
        "tmp%28#0"
      ],
      "stack_out": [
        "tmp%26#0",
        "tmp%28#0"
      ]
    },
    "1533": {
      "error": "application log value is not the result of an ABI return",
      "op": "assert // application log value is not the result of an ABI return",
      "defined_out": [
        "result#0"
      ],
      "stack_out": [
        "result#0"
      ]
    },
    "1534": {
      "op": "bytec 46 // \"echo: test5\"",
      "defined_out": [
        "\"echo: test5\"",
        "result#0"
      ],
      "stack_out": [
        "result#0",
        "\"echo: test5\""
      ]
    },
    "1536": {
      "op": "len",
      "defined_out": [
        "aggregate%length%9#0",
        "result#0"
      ],
      "stack_out": [
        "result#0",
        "aggregate%length%9#0"
      ]
    },
    "1537": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%9#0",
        "result#0"
      ],
      "stack_out": [
        "result#0",
        "aggregate%as_bytes%9#0"
      ]
    },
    "1538": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%length_uint16%9#0",
        "result#0"
      ],
      "stack_out": [
        "result#0",
        "aggregate%length_uint16%9#0"
      ]
    },
    "1541": {
      "op": "bytec 46 // \"echo: test5\"",
      "stack_out": [
        "result#0",
        "aggregate%length_uint16%9#0",
        "\"echo: test5\""
      ]
    },
    "1543": {
      "op": "concat",
      "defined_out": [
        "result#0",
        "tmp%29#0"
      ],
      "stack_out": [
        "result#0",
        "tmp%29#0"
      ]
    },
    "1544": {
      "op": "==",
      "defined_out": [
        "tmp%30#0"
      ],
      "stack_out": [
        "tmp%30#0"
      ]
    },
    "1545": {
      "op": "assert",
      "stack_out": []
    },
    "1546": {
      "retsub": true,
      "op": "retsub"
    },
    "1547": {
      "subroutine": "test_cases.typed_abi_call.typed_c2c.Greeter.test_method_overload",
      "params": {
        "app#0": "uint64"
      },
      "block": "test_cases.typed_abi_call.typed_c2c.Greeter.test_method_overload",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "1550": {
      "op": "b test_cases.typed_abi_call.typed_c2c.Greeter.test_method_overload_block@0"
    },
    "1553": {
      "block": "test_cases.typed_abi_call.typed_c2c.Greeter.test_method_overload_block@0",
      "stack_in": [],
      "op": "itxn_begin"
    },
    "1554": {
      "op": "bytec 47 // \"typed + ignore\"",
      "defined_out": [
        "\"typed + ignore\""
      ],
      "stack_out": [
        "\"typed + ignore\""
      ]
    },
    "1556": {
      "op": "len",
      "defined_out": [
        "aggregate%length%0#0"
      ],
      "stack_out": [
        "aggregate%length%0#0"
      ]
    },
    "1557": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%0#0"
      ],
      "stack_out": [
        "aggregate%as_bytes%0#0"
      ]
    },
    "1558": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%length_uint16%0#0"
      ],
      "stack_out": [
        "aggregate%length_uint16%0#0"
      ]
    },
    "1561": {
      "op": "bytec 47 // \"typed + ignore\"",
      "stack_out": [
        "aggregate%length_uint16%0#0",
        "\"typed + ignore\""
      ]
    },
    "1563": {
      "op": "concat",
      "defined_out": [
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "1564": {
      "op": "frame_dig -1",
      "defined_out": [
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%0%%param_ApplicationID_idx_0#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%0%%param_ApplicationID_idx_0#0"
      ]
    },
    "1566": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "1568": {
      "op": "bytec 4 // method \"echo(string)string\"",
      "defined_out": [
        "Method(echo(string)string)",
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0",
        "Method(echo(string)string)"
      ]
    },
    "1570": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "1572": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "1574": {
      "op": "intc_1 // appl",
      "defined_out": [
        "appl"
      ],
      "stack_out": [
        "appl"
      ]
    },
    "1575": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "1577": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "1578": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "1580": {
      "op": "b test_cases.typed_abi_call.typed_c2c.Greeter.test_method_overload_next_txn@1"
    },
    "1583": {
      "block": "test_cases.typed_abi_call.typed_c2c.Greeter.test_method_overload_next_txn@1",
      "stack_in": [],
      "op": "itxn_submit"
    },
    "1584": {
      "op": "itxn LastLog",
      "defined_out": [
        "awst_tmp%0#0"
      ],
      "stack_out": [
        "awst_tmp%0#0"
      ]
    },
    "1586": {
      "op": "extract 0 4",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "1589": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "0x151f7c75"
      ]
    },
    "1590": {
      "op": "==",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "1591": {
      "error": "application log value is not the result of an ABI return",
      "op": "assert // application log value is not the result of an ABI return",
      "stack_out": []
    },
    "1592": {
      "op": "itxn LastLog",
      "defined_out": [
        "awst_tmp%1#0"
      ],
      "stack_out": [
        "awst_tmp%1#0"
      ]
    },
    "1594": {
      "op": "dup",
      "defined_out": [
        "awst_tmp%1#0",
        "awst_tmp%1#0 (copy)"
      ],
      "stack_out": [
        "awst_tmp%1#0",
        "awst_tmp%1#0 (copy)"
      ]
    },
    "1595": {
      "op": "extract 4 0",
      "defined_out": [
        "awst_tmp%1#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "awst_tmp%1#0",
        "tmp%4#0"
      ]
    },
    "1598": {
      "op": "cover 1",
      "stack_out": [
        "tmp%4#0",
        "awst_tmp%1#0"
      ]
    },
    "1600": {
      "op": "extract 0 4",
      "defined_out": [
        "tmp%4#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "tmp%5#0"
      ]
    },
    "1603": {
      "op": "bytec_0 // 0x151f7c75",
      "stack_out": [
        "tmp%4#0",
        "tmp%5#0",
        "0x151f7c75"
      ]
    },
    "1604": {
      "op": "==",
      "defined_out": [
        "tmp%4#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "tmp%6#0"
      ]
    },
    "1605": {
      "error": "application log value is not the result of an ABI return",
      "op": "assert // application log value is not the result of an ABI return",
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "1606": {
      "op": "bytec 48 // \"echo: typed + ignore\"",
      "defined_out": [
        "\"echo: typed + ignore\"",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "\"echo: typed + ignore\""
      ]
    },
    "1608": {
      "op": "len",
      "defined_out": [
        "aggregate%length%1#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "aggregate%length%1#0"
      ]
    },
    "1609": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%1#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "aggregate%as_bytes%1#0"
      ]
    },
    "1610": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%length_uint16%1#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "aggregate%length_uint16%1#0"
      ]
    },
    "1613": {
      "op": "bytec 48 // \"echo: typed + ignore\"",
      "stack_out": [
        "tmp%4#0",
        "aggregate%length_uint16%1#0",
        "\"echo: typed + ignore\""
      ]
    },
    "1615": {
      "op": "concat",
      "defined_out": [
        "tmp%4#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "tmp%7#0"
      ]
    },
    "1616": {
      "op": "==",
      "defined_out": [
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0"
      ]
    },
    "1617": {
      "op": "assert",
      "stack_out": []
    },
    "1618": {
      "op": "itxn_begin"
    },
    "1619": {
      "op": "bytec 49 // \"untyped + ignore\"",
      "defined_out": [
        "\"untyped + ignore\""
      ],
      "stack_out": [
        "\"untyped + ignore\""
      ]
    },
    "1621": {
      "op": "len",
      "defined_out": [
        "aggregate%length%2#0"
      ],
      "stack_out": [
        "aggregate%length%2#0"
      ]
    },
    "1622": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%2#0"
      ],
      "stack_out": [
        "aggregate%as_bytes%2#0"
      ]
    },
    "1623": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%length_uint16%2#0"
      ],
      "stack_out": [
        "aggregate%length_uint16%2#0"
      ]
    },
    "1626": {
      "op": "bytec 49 // \"untyped + ignore\"",
      "stack_out": [
        "aggregate%length_uint16%2#0",
        "\"untyped + ignore\""
      ]
    },
    "1628": {
      "op": "concat",
      "defined_out": [
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0"
      ],
      "stack_out": [
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "1629": {
      "op": "frame_dig -1",
      "defined_out": [
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%1%%param_ApplicationID_idx_0#0"
      ],
      "stack_out": [
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%1%%param_ApplicationID_idx_0#0"
      ]
    },
    "1631": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "1633": {
      "op": "bytec 4 // method \"echo(string)string\"",
      "defined_out": [
        "Method(echo(string)string)",
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0"
      ],
      "stack_out": [
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0",
        "Method(echo(string)string)"
      ]
    },
    "1635": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "1637": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "1639": {
      "op": "intc_1 // appl",
      "defined_out": [
        "appl"
      ],
      "stack_out": [
        "appl"
      ]
    },
    "1640": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "1642": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "1643": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "1645": {
      "op": "b test_cases.typed_abi_call.typed_c2c.Greeter.test_method_overload_next_txn@2"
    },
    "1648": {
      "block": "test_cases.typed_abi_call.typed_c2c.Greeter.test_method_overload_next_txn@2",
      "stack_in": [],
      "op": "itxn_submit"
    },
    "1649": {
      "op": "itxn LastLog",
      "defined_out": [
        "awst_tmp%2#0"
      ],
      "stack_out": [
        "awst_tmp%2#0"
      ]
    },
    "1651": {
      "op": "dup",
      "defined_out": [
        "awst_tmp%2#0",
        "awst_tmp%2#0 (copy)"
      ],
      "stack_out": [
        "awst_tmp%2#0",
        "awst_tmp%2#0 (copy)"
      ]
    },
    "1652": {
      "op": "extract 4 0",
      "defined_out": [
        "awst_tmp%2#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "awst_tmp%2#0",
        "tmp%10#0"
      ]
    },
    "1655": {
      "op": "cover 1",
      "stack_out": [
        "tmp%10#0",
        "awst_tmp%2#0"
      ]
    },
    "1657": {
      "op": "extract 0 4",
      "defined_out": [
        "tmp%10#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%10#0",
        "tmp%11#0"
      ]
    },
    "1660": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%10#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%10#0",
        "tmp%11#0",
        "0x151f7c75"
      ]
    },
    "1661": {
      "op": "==",
      "defined_out": [
        "tmp%10#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%10#0",
        "tmp%12#0"
      ]
    },
    "1662": {
      "error": "application log value is not the result of an ABI return",
      "op": "assert // application log value is not the result of an ABI return",
      "stack_out": [
        "tmp%10#0"
      ]
    },
    "1663": {
      "op": "bytec 50 // \"echo: untyped + ignore\"",
      "defined_out": [
        "\"echo: untyped + ignore\"",
        "tmp%10#0"
      ],
      "stack_out": [
        "tmp%10#0",
        "\"echo: untyped + ignore\""
      ]
    },
    "1665": {
      "op": "len",
      "defined_out": [
        "aggregate%length%3#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "tmp%10#0",
        "aggregate%length%3#0"
      ]
    },
    "1666": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%3#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "tmp%10#0",
        "aggregate%as_bytes%3#0"
      ]
    },
    "1667": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%length_uint16%3#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "tmp%10#0",
        "aggregate%length_uint16%3#0"
      ]
    },
    "1670": {
      "op": "bytec 50 // \"echo: untyped + ignore\"",
      "stack_out": [
        "tmp%10#0",
        "aggregate%length_uint16%3#0",
        "\"echo: untyped + ignore\""
      ]
    },
    "1672": {
      "op": "concat",
      "defined_out": [
        "tmp%10#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "tmp%10#0",
        "tmp%13#0"
      ]
    },
    "1673": {
      "op": "==",
      "defined_out": [
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%14#0"
      ]
    },
    "1674": {
      "op": "assert",
      "stack_out": []
    },
    "1675": {
      "op": "itxn_begin"
    },
    "1676": {
      "op": "bytec 51 // \"tuple\"",
      "defined_out": [
        "\"tuple\""
      ],
      "stack_out": [
        "\"tuple\""
      ]
    },
    "1678": {
      "op": "len",
      "defined_out": [
        "aggregate%length%4#0"
      ],
      "stack_out": [
        "aggregate%length%4#0"
      ]
    },
    "1679": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%4#0"
      ],
      "stack_out": [
        "aggregate%as_bytes%4#0"
      ]
    },
    "1680": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%length_uint16%4#0"
      ],
      "stack_out": [
        "aggregate%length_uint16%4#0"
      ]
    },
    "1683": {
      "op": "bytec 51 // \"tuple\"",
      "stack_out": [
        "aggregate%length_uint16%4#0",
        "\"tuple\""
      ]
    },
    "1685": {
      "op": "concat",
      "defined_out": [
        "inner_txn_params%2%%param_ApplicationArgs_idx_1#0"
      ],
      "stack_out": [
        "inner_txn_params%2%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "1686": {
      "op": "frame_dig -1",
      "defined_out": [
        "inner_txn_params%2%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%2%%param_ApplicationID_idx_0#0"
      ],
      "stack_out": [
        "inner_txn_params%2%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%2%%param_ApplicationID_idx_0#0"
      ]
    },
    "1688": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "inner_txn_params%2%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "1690": {
      "op": "bytec 4 // method \"echo(string)string\"",
      "defined_out": [
        "Method(echo(string)string)",
        "inner_txn_params%2%%param_ApplicationArgs_idx_1#0"
      ],
      "stack_out": [
        "inner_txn_params%2%%param_ApplicationArgs_idx_1#0",
        "Method(echo(string)string)"
      ]
    },
    "1692": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "inner_txn_params%2%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "1694": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "1696": {
      "op": "intc_1 // appl",
      "defined_out": [
        "appl"
      ],
      "stack_out": [
        "appl"
      ]
    },
    "1697": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "1699": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "1700": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "1702": {
      "op": "b test_cases.typed_abi_call.typed_c2c.Greeter.test_method_overload_next_txn@3"
    },
    "1705": {
      "block": "test_cases.typed_abi_call.typed_c2c.Greeter.test_method_overload_next_txn@3",
      "stack_in": [],
      "op": "itxn_submit"
    },
    "1706": {
      "op": "itxn LastLog",
      "defined_out": [
        "awst_tmp%3#0"
      ],
      "stack_out": [
        "awst_tmp%3#0"
      ]
    },
    "1708": {
      "op": "dup",
      "defined_out": [
        "awst_tmp%3#0",
        "awst_tmp%3#0 (copy)"
      ],
      "stack_out": [
        "awst_tmp%3#0",
        "awst_tmp%3#0 (copy)"
      ]
    },
    "1709": {
      "op": "extract 4 0",
      "defined_out": [
        "awst_tmp%3#0",
        "tmp%16#0"
      ],
      "stack_out": [
        "awst_tmp%3#0",
        "tmp%16#0"
      ]
    },
    "1712": {
      "op": "cover 1",
      "stack_out": [
        "tmp%16#0",
        "awst_tmp%3#0"
      ]
    },
    "1714": {
      "op": "extract 0 4",
      "defined_out": [
        "tmp%16#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "tmp%16#0",
        "tmp%17#0"
      ]
    },
    "1717": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%16#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "tmp%16#0",
        "tmp%17#0",
        "0x151f7c75"
      ]
    },
    "1718": {
      "op": "==",
      "defined_out": [
        "tmp%16#0",
        "tmp%18#0"
      ],
      "stack_out": [
        "tmp%16#0",
        "tmp%18#0"
      ]
    },
    "1719": {
      "error": "application log value is not the result of an ABI return",
      "op": "assert // application log value is not the result of an ABI return",
      "defined_out": [
        "result.0#0"
      ],
      "stack_out": [
        "result.0#0"
      ]
    },
    "1720": {
      "op": "itxn LastLog",
      "defined_out": [
        "result.0#0",
        "result.1.LastLog#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1.LastLog#0"
      ]
    },
    "1722": {
      "op": "cover 1",
      "stack_out": [
        "result.1.LastLog#0",
        "result.0#0"
      ]
    },
    "1724": {
      "op": "bytec 14 // \"echo: tuple\"",
      "defined_out": [
        "\"echo: tuple\"",
        "result.0#0",
        "result.1.LastLog#0"
      ],
      "stack_out": [
        "result.1.LastLog#0",
        "result.0#0",
        "\"echo: tuple\""
      ]
    },
    "1726": {
      "op": "len",
      "defined_out": [
        "aggregate%length%5#0",
        "result.0#0",
        "result.1.LastLog#0"
      ],
      "stack_out": [
        "result.1.LastLog#0",
        "result.0#0",
        "aggregate%length%5#0"
      ]
    },
    "1727": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%5#0",
        "result.0#0",
        "result.1.LastLog#0"
      ],
      "stack_out": [
        "result.1.LastLog#0",
        "result.0#0",
        "aggregate%as_bytes%5#0"
      ]
    },
    "1728": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%length_uint16%5#0",
        "result.0#0",
        "result.1.LastLog#0"
      ],
      "stack_out": [
        "result.1.LastLog#0",
        "result.0#0",
        "aggregate%length_uint16%5#0"
      ]
    },
    "1731": {
      "op": "bytec 14 // \"echo: tuple\"",
      "stack_out": [
        "result.1.LastLog#0",
        "result.0#0",
        "aggregate%length_uint16%5#0",
        "\"echo: tuple\""
      ]
    },
    "1733": {
      "op": "concat",
      "defined_out": [
        "result.0#0",
        "result.1.LastLog#0",
        "tmp%19#0"
      ],
      "stack_out": [
        "result.1.LastLog#0",
        "result.0#0",
        "tmp%19#0"
      ]
    },
    "1734": {
      "op": "==",
      "defined_out": [
        "result.1.LastLog#0",
        "tmp%20#0"
      ],
      "stack_out": [
        "result.1.LastLog#0",
        "tmp%20#0"
      ]
    },
    "1735": {
      "op": "assert",
      "stack_out": [
        "result.1.LastLog#0"
      ]
    },
    "1736": {
      "op": "dup",
      "defined_out": [
        "result.1.LastLog#0",
        "result.1.LastLog#0 (copy)"
      ],
      "stack_out": [
        "result.1.LastLog#0",
        "result.1.LastLog#0 (copy)"
      ]
    },
    "1737": {
      "op": "extract 4 0",
      "defined_out": [
        "result.1.LastLog#0",
        "tmp%21#0"
      ],
      "stack_out": [
        "result.1.LastLog#0",
        "tmp%21#0"
      ]
    },
    "1740": {
      "op": "cover 1",
      "stack_out": [
        "tmp%21#0",
        "result.1.LastLog#0"
      ]
    },
    "1742": {
      "op": "extract 0 4",
      "defined_out": [
        "tmp%21#0",
        "tmp%22#0"
      ],
      "stack_out": [
        "tmp%21#0",
        "tmp%22#0"
      ]
    },
    "1745": {
      "op": "bytec_0 // 0x151f7c75",
      "stack_out": [
        "tmp%21#0",
        "tmp%22#0",
        "0x151f7c75"
      ]
    },
    "1746": {
      "op": "==",
      "defined_out": [
        "tmp%21#0",
        "tmp%23#0"
      ],
      "stack_out": [
        "tmp%21#0",
        "tmp%23#0"
      ]
    },
    "1747": {
      "error": "application log value is not the result of an ABI return",
      "op": "assert // application log value is not the result of an ABI return",
      "stack_out": [
        "tmp%21#0"
      ]
    },
    "1748": {
      "op": "bytec 14 // \"echo: tuple\"",
      "stack_out": [
        "tmp%21#0",
        "\"echo: tuple\""
      ]
    },
    "1750": {
      "op": "len",
      "defined_out": [
        "aggregate%length%6#0",
        "tmp%21#0"
      ],
      "stack_out": [
        "tmp%21#0",
        "aggregate%length%6#0"
      ]
    },
    "1751": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%6#0",
        "tmp%21#0"
      ],
      "stack_out": [
        "tmp%21#0",
        "aggregate%as_bytes%6#0"
      ]
    },
    "1752": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%length_uint16%6#0",
        "tmp%21#0"
      ],
      "stack_out": [
        "tmp%21#0",
        "aggregate%length_uint16%6#0"
      ]
    },
    "1755": {
      "op": "bytec 14 // \"echo: tuple\"",
      "stack_out": [
        "tmp%21#0",
        "aggregate%length_uint16%6#0",
        "\"echo: tuple\""
      ]
    },
    "1757": {
      "op": "concat",
      "defined_out": [
        "tmp%21#0",
        "tmp%24#0"
      ],
      "stack_out": [
        "tmp%21#0",
        "tmp%24#0"
      ]
    },
    "1758": {
      "op": "==",
      "defined_out": [
        "tmp%25#0"
      ],
      "stack_out": [
        "tmp%25#0"
      ]
    },
    "1759": {
      "op": "assert",
      "stack_out": []
    },
    "1760": {
      "op": "itxn_begin"
    },
    "1761": {
      "op": "bytec 52 // \"untyped\"",
      "defined_out": [
        "\"untyped\""
      ],
      "stack_out": [
        "\"untyped\""
      ]
    },
    "1763": {
      "op": "len",
      "defined_out": [
        "aggregate%length%7#0"
      ],
      "stack_out": [
        "aggregate%length%7#0"
      ]
    },
    "1764": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%7#0"
      ],
      "stack_out": [
        "aggregate%as_bytes%7#0"
      ]
    },
    "1765": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%length_uint16%7#0"
      ],
      "stack_out": [
        "aggregate%length_uint16%7#0"
      ]
    },
    "1768": {
      "op": "bytec 52 // \"untyped\"",
      "stack_out": [
        "aggregate%length_uint16%7#0",
        "\"untyped\""
      ]
    },
    "1770": {
      "op": "concat",
      "defined_out": [
        "inner_txn_params%3%%param_ApplicationArgs_idx_1#0"
      ],
      "stack_out": [
        "inner_txn_params%3%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "1771": {
      "op": "frame_dig -1",
      "defined_out": [
        "inner_txn_params%3%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%3%%param_ApplicationID_idx_0#0"
      ],
      "stack_out": [
        "inner_txn_params%3%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%3%%param_ApplicationID_idx_0#0"
      ]
    },
    "1773": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "inner_txn_params%3%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "1775": {
      "op": "bytec 4 // method \"echo(string)string\"",
      "defined_out": [
        "Method(echo(string)string)",
        "inner_txn_params%3%%param_ApplicationArgs_idx_1#0"
      ],
      "stack_out": [
        "inner_txn_params%3%%param_ApplicationArgs_idx_1#0",
        "Method(echo(string)string)"
      ]
    },
    "1777": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "inner_txn_params%3%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "1779": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "1781": {
      "op": "intc_1 // appl",
      "defined_out": [
        "appl"
      ],
      "stack_out": [
        "appl"
      ]
    },
    "1782": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "1784": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "1785": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "1787": {
      "op": "b test_cases.typed_abi_call.typed_c2c.Greeter.test_method_overload_next_txn@4"
    },
    "1790": {
      "block": "test_cases.typed_abi_call.typed_c2c.Greeter.test_method_overload_next_txn@4",
      "stack_in": [],
      "op": "itxn_submit"
    },
    "1791": {
      "op": "itxn LastLog",
      "defined_out": [
        "txn_result.LastLog#0"
      ],
      "stack_out": [
        "txn_result.LastLog#0"
      ]
    },
    "1793": {
      "op": "dup",
      "defined_out": [
        "txn_result.LastLog#0",
        "txn_result.LastLog#0 (copy)"
      ],
      "stack_out": [
        "txn_result.LastLog#0",
        "txn_result.LastLog#0 (copy)"
      ]
    },
    "1794": {
      "op": "extract 4 0",
      "defined_out": [
        "tmp%27#0",
        "txn_result.LastLog#0"
      ],
      "stack_out": [
        "txn_result.LastLog#0",
        "tmp%27#0"
      ]
    },
    "1797": {
      "op": "cover 1",
      "stack_out": [
        "tmp%27#0",
        "txn_result.LastLog#0"
      ]
    },
    "1799": {
      "op": "extract 0 4",
      "defined_out": [
        "tmp%27#0",
        "tmp%28#0"
      ],
      "stack_out": [
        "tmp%27#0",
        "tmp%28#0"
      ]
    },
    "1802": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%27#0",
        "tmp%28#0"
      ],
      "stack_out": [
        "tmp%27#0",
        "tmp%28#0",
        "0x151f7c75"
      ]
    },
    "1803": {
      "op": "==",
      "defined_out": [
        "tmp%27#0",
        "tmp%29#0"
      ],
      "stack_out": [
        "tmp%27#0",
        "tmp%29#0"
      ]
    },
    "1804": {
      "error": "application log value is not the result of an ABI return",
      "op": "assert // application log value is not the result of an ABI return",
      "stack_out": [
        "tmp%27#0"
      ]
    },
    "1805": {
      "op": "bytec 53 // \"echo: untyped\"",
      "defined_out": [
        "\"echo: untyped\"",
        "tmp%27#0"
      ],
      "stack_out": [
        "tmp%27#0",
        "\"echo: untyped\""
      ]
    },
    "1807": {
      "op": "len",
      "defined_out": [
        "aggregate%length%8#0",
        "tmp%27#0"
      ],
      "stack_out": [
        "tmp%27#0",
        "aggregate%length%8#0"
      ]
    },
    "1808": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%8#0",
        "tmp%27#0"
      ],
      "stack_out": [
        "tmp%27#0",
        "aggregate%as_bytes%8#0"
      ]
    },
    "1809": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%length_uint16%8#0",
        "tmp%27#0"
      ],
      "stack_out": [
        "tmp%27#0",
        "aggregate%length_uint16%8#0"
      ]
    },
    "1812": {
      "op": "bytec 53 // \"echo: untyped\"",
      "stack_out": [
        "tmp%27#0",
        "aggregate%length_uint16%8#0",
        "\"echo: untyped\""
      ]
    },
    "1814": {
      "op": "concat",
      "defined_out": [
        "tmp%27#0",
        "tmp%30#0"
      ],
      "stack_out": [
        "tmp%27#0",
        "tmp%30#0"
      ]
    },
    "1815": {
      "op": "==",
      "defined_out": [
        "tmp%31#0"
      ],
      "stack_out": [
        "tmp%31#0"
      ]
    },
    "1816": {
      "op": "assert",
      "stack_out": []
    },
    "1817": {
      "retsub": true,
      "op": "retsub"
    },
    "1818": {
      "subroutine": "test_cases.typed_abi_call.typed_c2c.Greeter.test_arg_conversion",
      "params": {
        "app#0": "uint64"
      },
      "block": "test_cases.typed_abi_call.typed_c2c.Greeter.test_arg_conversion",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "1821": {
      "op": "b test_cases.typed_abi_call.typed_c2c.Greeter.test_arg_conversion_block@0"
    },
    "1824": {
      "block": "test_cases.typed_abi_call.typed_c2c.Greeter.test_arg_conversion_block@0",
      "stack_in": [],
      "op": "itxn_begin"
    },
    "1825": {
      "op": "bytec 21 // \"converted1\"",
      "defined_out": [
        "\"converted1\""
      ],
      "stack_out": [
        "\"converted1\""
      ]
    },
    "1827": {
      "op": "len",
      "defined_out": [
        "aggregate%length%0#0"
      ],
      "stack_out": [
        "aggregate%length%0#0"
      ]
    },
    "1828": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%0#0"
      ],
      "stack_out": [
        "aggregate%as_bytes%0#0"
      ]
    },
    "1829": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%length_uint16%0#0"
      ],
      "stack_out": [
        "aggregate%length_uint16%0#0"
      ]
    },
    "1832": {
      "op": "bytec 21 // \"converted1\"",
      "stack_out": [
        "aggregate%length_uint16%0#0",
        "\"converted1\""
      ]
    },
    "1834": {
      "op": "concat",
      "defined_out": [
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "1835": {
      "op": "frame_dig -1",
      "defined_out": [
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%0%%param_ApplicationID_idx_0#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%0%%param_ApplicationID_idx_0#0"
      ]
    },
    "1837": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "1839": {
      "op": "bytec 13 // method \"log(string)void\"",
      "defined_out": [
        "Method(log(string)void)",
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0",
        "Method(log(string)void)"
      ]
    },
    "1841": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "1843": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "1845": {
      "op": "intc_1 // appl",
      "defined_out": [
        "appl"
      ],
      "stack_out": [
        "appl"
      ]
    },
    "1846": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "1848": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "1849": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "1851": {
      "op": "b test_cases.typed_abi_call.typed_c2c.Greeter.test_arg_conversion_next_txn@1"
    },
    "1854": {
      "block": "test_cases.typed_abi_call.typed_c2c.Greeter.test_arg_conversion_next_txn@1",
      "stack_in": [],
      "op": "itxn_submit"
    },
    "1855": {
      "op": "itxn LastLog",
      "defined_out": [
        "txn.LastLog#0"
      ],
      "stack_out": [
        "txn.LastLog#0"
      ]
    },
    "1857": {
      "op": "bytec 21 // 0x636f6e76657274656431",
      "defined_out": [
        "0x636f6e76657274656431",
        "txn.LastLog#0"
      ],
      "stack_out": [
        "txn.LastLog#0",
        "0x636f6e76657274656431"
      ]
    },
    "1859": {
      "op": "==",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "1860": {
      "op": "assert",
      "stack_out": []
    },
    "1861": {
      "op": "itxn_begin"
    },
    "1862": {
      "op": "frame_dig -1",
      "defined_out": [
        "inner_txn_params%1%%param_ApplicationID_idx_0#0"
      ],
      "stack_out": [
        "inner_txn_params%1%%param_ApplicationID_idx_0#0"
      ]
    },
    "1864": {
      "op": "itxn_field ApplicationID",
      "stack_out": []
    },
    "1866": {
      "op": "pushbytes 0x3c1058d9 // method \"log(uint64)void\"",
      "defined_out": [
        "Method(log(uint64)void)"
      ],
      "stack_out": [
        "Method(log(uint64)void)"
      ]
    },
    "1872": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "1874": {
      "op": "bytec 15 // 0x0000000000000002",
      "defined_out": [
        "0x0000000000000002"
      ],
      "stack_out": [
        "0x0000000000000002"
      ]
    },
    "1876": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "1878": {
      "op": "intc_1 // appl",
      "defined_out": [
        "appl"
      ],
      "stack_out": [
        "appl"
      ]
    },
    "1879": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "1881": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "1882": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "1884": {
      "op": "b test_cases.typed_abi_call.typed_c2c.Greeter.test_arg_conversion_next_txn@2"
    },
    "1887": {
      "block": "test_cases.typed_abi_call.typed_c2c.Greeter.test_arg_conversion_next_txn@2",
      "stack_in": [],
      "op": "itxn_submit"
    },
    "1888": {
      "op": "itxn LastLog",
      "defined_out": [
        "txn.LastLog#0"
      ],
      "stack_out": [
        "txn.LastLog#0"
      ]
    },
    "1890": {
      "op": "intc_3 // 2",
      "defined_out": [
        "2",
        "txn.LastLog#0"
      ],
      "stack_out": [
        "txn.LastLog#0",
        "2"
      ]
    },
    "1891": {
      "op": "itob",
      "defined_out": [
        "tmp%2#0",
        "txn.LastLog#0"
      ],
      "stack_out": [
        "txn.LastLog#0",
        "tmp%2#0"
      ]
    },
    "1892": {
      "op": "==",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "1893": {
      "op": "assert",
      "stack_out": []
    },
    "1894": {
      "op": "itxn_begin"
    },
    "1895": {
      "op": "frame_dig -1",
      "defined_out": [
        "inner_txn_params%2%%param_ApplicationID_idx_0#0"
      ],
      "stack_out": [
        "inner_txn_params%2%%param_ApplicationID_idx_0#0"
      ]
    },
    "1897": {
      "op": "itxn_field ApplicationID",
      "stack_out": []
    },
    "1899": {
      "op": "pushbytes 0x6af45930 // method \"log(uint512)void\"",
      "defined_out": [
        "Method(log(uint512)void)"
      ],
      "stack_out": [
        "Method(log(uint512)void)"
      ]
    },
    "1905": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "1907": {
      "op": "pushbytes 0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000003",
      "defined_out": [
        "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000003"
      ],
      "stack_out": [
        "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000003"
      ]
    },
    "1973": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "1975": {
      "op": "intc_1 // appl",
      "defined_out": [
        "appl"
      ],
      "stack_out": [
        "appl"
      ]
    },
    "1976": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "1978": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "1979": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "1981": {
      "op": "b test_cases.typed_abi_call.typed_c2c.Greeter.test_arg_conversion_next_txn@3"
    },
    "1984": {
      "block": "test_cases.typed_abi_call.typed_c2c.Greeter.test_arg_conversion_next_txn@3",
      "stack_in": [],
      "op": "itxn_submit"
    },
    "1985": {
      "op": "itxn LastLog",
      "defined_out": [
        "txn.LastLog#0"
      ],
      "stack_out": [
        "txn.LastLog#0"
      ]
    },
    "1987": {
      "op": "pushint 56 // 56",
      "defined_out": [
        "56",
        "txn.LastLog#0"
      ],
      "stack_out": [
        "txn.LastLog#0",
        "56"
      ]
    },
    "1989": {
      "op": "bzero",
      "defined_out": [
        "tmp%4#0",
        "txn.LastLog#0"
      ],
      "stack_out": [
        "txn.LastLog#0",
        "tmp%4#0"
      ]
    },
    "1990": {
      "op": "pushint 3 // 3",
      "defined_out": [
        "3",
        "tmp%4#0",
        "txn.LastLog#0"
      ],
      "stack_out": [
        "txn.LastLog#0",
        "tmp%4#0",
        "3"
      ]
    },
    "1992": {
      "op": "itob",
      "defined_out": [
        "tmp%4#0",
        "tmp%5#0",
        "txn.LastLog#0"
      ],
      "stack_out": [
        "txn.LastLog#0",
        "tmp%4#0",
        "tmp%5#0"
      ]
    },
    "1993": {
      "op": "concat",
      "defined_out": [
        "tmp%6#0",
        "txn.LastLog#0"
      ],
      "stack_out": [
        "txn.LastLog#0",
        "tmp%6#0"
      ]
    },
    "1994": {
      "op": "==",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0"
      ]
    },
    "1995": {
      "op": "assert",
      "stack_out": []
    },
    "1996": {
      "op": "itxn_begin"
    },
    "1997": {
      "op": "bytec 22 // 0x34",
      "defined_out": [
        "0x34"
      ],
      "stack_out": [
        "0x34"
      ]
    },
    "1999": {
      "op": "len",
      "defined_out": [
        "aggregate%length%1#0"
      ],
      "stack_out": [
        "aggregate%length%1#0"
      ]
    },
    "2000": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%1#0"
      ],
      "stack_out": [
        "aggregate%as_bytes%1#0"
      ]
    },
    "2001": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%length_uint16%1#0"
      ],
      "stack_out": [
        "aggregate%length_uint16%1#0"
      ]
    },
    "2004": {
      "op": "bytec 22 // 0x34",
      "stack_out": [
        "aggregate%length_uint16%1#0",
        "0x34"
      ]
    },
    "2006": {
      "op": "concat",
      "defined_out": [
        "inner_txn_params%3%%param_ApplicationArgs_idx_1#0"
      ],
      "stack_out": [
        "inner_txn_params%3%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "2007": {
      "op": "frame_dig -1",
      "defined_out": [
        "inner_txn_params%3%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%3%%param_ApplicationID_idx_0#0"
      ],
      "stack_out": [
        "inner_txn_params%3%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%3%%param_ApplicationID_idx_0#0"
      ]
    },
    "2009": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "inner_txn_params%3%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "2011": {
      "op": "pushbytes 0xb500e111 // method \"log(byte[])void\"",
      "defined_out": [
        "Method(log(byte[])void)",
        "inner_txn_params%3%%param_ApplicationArgs_idx_1#0"
      ],
      "stack_out": [
        "inner_txn_params%3%%param_ApplicationArgs_idx_1#0",
        "Method(log(byte[])void)"
      ]
    },
    "2017": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "inner_txn_params%3%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "2019": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "2021": {
      "op": "intc_1 // appl",
      "defined_out": [
        "appl"
      ],
      "stack_out": [
        "appl"
      ]
    },
    "2022": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "2024": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "2025": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "2027": {
      "op": "b test_cases.typed_abi_call.typed_c2c.Greeter.test_arg_conversion_next_txn@4"
    },
    "2030": {
      "block": "test_cases.typed_abi_call.typed_c2c.Greeter.test_arg_conversion_next_txn@4",
      "stack_in": [],
      "op": "itxn_submit"
    },
    "2031": {
      "op": "itxn LastLog",
      "defined_out": [
        "txn.LastLog#0"
      ],
      "stack_out": [
        "txn.LastLog#0"
      ]
    },
    "2033": {
      "op": "bytec 22 // 0x34",
      "defined_out": [
        "0x34",
        "txn.LastLog#0"
      ],
      "stack_out": [
        "txn.LastLog#0",
        "0x34"
      ]
    },
    "2035": {
      "op": "==",
      "defined_out": [
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0"
      ]
    },
    "2036": {
      "op": "assert",
      "stack_out": []
    },
    "2037": {
      "op": "itxn_begin"
    },
    "2038": {
      "op": "bytec 16 // 0x00",
      "defined_out": [
        "0x00"
      ],
      "stack_out": [
        "0x00"
      ]
    },
    "2040": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "0x00"
      ],
      "stack_out": [
        "0x00",
        "0"
      ]
    },
    "2041": {
      "op": "pushint 1 // 1",
      "defined_out": [
        "0",
        "0x00",
        "1"
      ],
      "stack_out": [
        "0x00",
        "0",
        "1"
      ]
    },
    "2043": {
      "op": "setbit",
      "defined_out": [
        "inner_txn_params%4%%param_ApplicationArgs_idx_1#0"
      ],
      "stack_out": [
        "inner_txn_params%4%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "2044": {
      "op": "frame_dig -1",
      "defined_out": [
        "inner_txn_params%4%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%4%%param_ApplicationID_idx_0#0"
      ],
      "stack_out": [
        "inner_txn_params%4%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%4%%param_ApplicationID_idx_0#0"
      ]
    },
    "2046": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "inner_txn_params%4%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "2048": {
      "op": "pushbytes 0x6eed7ec3 // method \"log(bool)void\"",
      "defined_out": [
        "Method(log(bool)void)",
        "inner_txn_params%4%%param_ApplicationArgs_idx_1#0"
      ],
      "stack_out": [
        "inner_txn_params%4%%param_ApplicationArgs_idx_1#0",
        "Method(log(bool)void)"
      ]
    },
    "2054": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "inner_txn_params%4%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "2056": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "2058": {
      "op": "intc_1 // appl",
      "defined_out": [
        "appl"
      ],
      "stack_out": [
        "appl"
      ]
    },
    "2059": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "2061": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0"
      ]
    },
    "2062": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "2064": {
      "op": "b test_cases.typed_abi_call.typed_c2c.Greeter.test_arg_conversion_next_txn@5"
    },
    "2067": {
      "block": "test_cases.typed_abi_call.typed_c2c.Greeter.test_arg_conversion_next_txn@5",
      "stack_in": [],
      "op": "itxn_submit"
    },
    "2068": {
      "op": "itxn LastLog",
      "defined_out": [
        "txn.LastLog#0"
      ],
      "stack_out": [
        "txn.LastLog#0"
      ]
    },
    "2070": {
      "op": "pushbytes 0x54727565",
      "defined_out": [
        "0x54727565",
        "txn.LastLog#0"
      ],
      "stack_out": [
        "txn.LastLog#0",
        "0x54727565"
      ]
    },
    "2076": {
      "op": "==",
      "defined_out": [
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0"
      ]
    },
    "2077": {
      "op": "assert",
      "stack_out": []
    },
    "2078": {
      "retsub": true,
      "op": "retsub"
    },
    "2079": {
      "subroutine": "test_cases.typed_abi_call.typed_c2c.Greeter.test_15plus_args",
      "params": {
        "app#0": "uint64"
      },
      "block": "test_cases.typed_abi_call.typed_c2c.Greeter.test_15plus_args",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "2082": {
      "op": "b test_cases.typed_abi_call.typed_c2c.Greeter.test_15plus_args_block@0"
    },
    "2085": {
      "block": "test_cases.typed_abi_call.typed_c2c.Greeter.test_15plus_args_block@0",
      "stack_in": [],
      "op": "itxn_begin"
    },
    "2086": {
      "op": "bytec_2 // 0x",
      "defined_out": [
        "0x"
      ],
      "stack_out": [
        "0x"
      ]
    },
    "2087": {
      "op": "pushbytes 0xde",
      "defined_out": [
        "0x",
        "0xde"
      ],
      "stack_out": [
        "0x",
        "0xde"
      ]
    },
    "2090": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%0#0"
      ],
      "stack_out": [
        "aggregate%head%0#0"
      ]
    },
    "2091": {
      "op": "pushbytes 0xad",
      "defined_out": [
        "0xad",
        "aggregate%head%0#0"
      ],
      "stack_out": [
        "aggregate%head%0#0",
        "0xad"
      ]
    },
    "2094": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%1#0"
      ],
      "stack_out": [
        "aggregate%head%1#0"
      ]
    },
    "2095": {
      "op": "pushbytes 0xbe",
      "defined_out": [
        "0xbe",
        "aggregate%head%1#0"
      ],
      "stack_out": [
        "aggregate%head%1#0",
        "0xbe"
      ]
    },
    "2098": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%2#0"
      ],
      "stack_out": [
        "aggregate%head%2#0"
      ]
    },
    "2099": {
      "op": "pushbytes 0xef",
      "defined_out": [
        "0xef",
        "aggregate%head%2#0"
      ],
      "stack_out": [
        "aggregate%head%2#0",
        "0xef"
      ]
    },
    "2102": {
      "op": "concat",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "2103": {
      "op": "bytec_2 // 0x",
      "stack_out": [
        "tmp%0#0",
        "0x"
      ]
    },
    "2104": {
      "op": "pushbytes 0x0f",
      "defined_out": [
        "0x",
        "0x0f",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "0x",
        "0x0f"
      ]
    },
    "2107": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%4#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "aggregate%head%4#0"
      ]
    },
    "2108": {
      "op": "pushbytes 0x10",
      "defined_out": [
        "0x10",
        "aggregate%head%4#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "aggregate%head%4#0",
        "0x10"
      ]
    },
    "2111": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%5#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "aggregate%head%5#0"
      ]
    },
    "2112": {
      "op": "pushbytes 0x11",
      "defined_out": [
        "0x11",
        "aggregate%head%5#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "aggregate%head%5#0",
        "0x11"
      ]
    },
    "2115": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%6#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "aggregate%head%6#0"
      ]
    },
    "2116": {
      "op": "pushbytes 0x12",
      "defined_out": [
        "0x12",
        "aggregate%head%6#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "aggregate%head%6#0",
        "0x12"
      ]
    },
    "2119": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%7#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "aggregate%head%7#0"
      ]
    },
    "2120": {
      "op": "uncover 1",
      "stack_out": [
        "aggregate%head%7#0",
        "tmp%0#0"
      ]
    },
    "2122": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%8#0"
      ],
      "stack_out": [
        "aggregate%head%8#0"
      ]
    },
    "2123": {
      "op": "pushbytes 0x14",
      "defined_out": [
        "0x14",
        "aggregate%head%8#0"
      ],
      "stack_out": [
        "aggregate%head%8#0",
        "0x14"
      ]
    },
    "2126": {
      "op": "concat",
      "defined_out": [
        "inner_txn_params%0%%param_ApplicationArgs_idx_15#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_ApplicationArgs_idx_15#0"
      ]
    },
    "2127": {
      "op": "frame_dig -1",
      "defined_out": [
        "inner_txn_params%0%%param_ApplicationArgs_idx_15#0",
        "inner_txn_params%0%%param_ApplicationID_idx_0#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_ApplicationArgs_idx_15#0",
        "inner_txn_params%0%%param_ApplicationID_idx_0#0"
      ]
    },
    "2129": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "inner_txn_params%0%%param_ApplicationArgs_idx_15#0"
      ]
    },
    "2131": {
      "op": "pushbytes 0xba0b4381 // method \"return_args_after_14th(uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint8,uint8,uint8,uint8,(uint8,uint8,uint8,uint8),uint8)byte[]\"",
      "defined_out": [
        "Method(return_args_after_14th(uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint8,uint8,uint8,uint8,(uint8,uint8,uint8,uint8),uint8)byte[])",
        "inner_txn_params%0%%param_ApplicationArgs_idx_15#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_ApplicationArgs_idx_15#0",
        "Method(return_args_after_14th(uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint8,uint8,uint8,uint8,(uint8,uint8,uint8,uint8),uint8)byte[])"
      ]
    },
    "2137": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "inner_txn_params%0%%param_ApplicationArgs_idx_15#0"
      ]
    },
    "2139": {
      "op": "bytec 5 // 0x0000000000000001",
      "defined_out": [
        "0x0000000000000001",
        "inner_txn_params%0%%param_ApplicationArgs_idx_15#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_ApplicationArgs_idx_15#0",
        "0x0000000000000001"
      ]
    },
    "2141": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "inner_txn_params%0%%param_ApplicationArgs_idx_15#0"
      ]
    },
    "2143": {
      "op": "bytec 15 // 0x0000000000000002",
      "defined_out": [
        "0x0000000000000002",
        "inner_txn_params%0%%param_ApplicationArgs_idx_15#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_ApplicationArgs_idx_15#0",
        "0x0000000000000002"
      ]
    },
    "2145": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "inner_txn_params%0%%param_ApplicationArgs_idx_15#0"
      ]
    },
    "2147": {
      "op": "bytec 23 // 0x0000000000000003",
      "defined_out": [
        "0x0000000000000003",
        "inner_txn_params%0%%param_ApplicationArgs_idx_15#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_ApplicationArgs_idx_15#0",
        "0x0000000000000003"
      ]
    },
    "2149": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "inner_txn_params%0%%param_ApplicationArgs_idx_15#0"
      ]
    },
    "2151": {
      "op": "pushbytes 0x0000000000000004",
      "defined_out": [
        "0x0000000000000004",
        "inner_txn_params%0%%param_ApplicationArgs_idx_15#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_ApplicationArgs_idx_15#0",
        "0x0000000000000004"
      ]
    },
    "2161": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "inner_txn_params%0%%param_ApplicationArgs_idx_15#0"
      ]
    },
    "2163": {
      "op": "pushbytes 0x0000000000000005",
      "defined_out": [
        "0x0000000000000005",
        "inner_txn_params%0%%param_ApplicationArgs_idx_15#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_ApplicationArgs_idx_15#0",
        "0x0000000000000005"
      ]
    },
    "2173": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "inner_txn_params%0%%param_ApplicationArgs_idx_15#0"
      ]
    },
    "2175": {
      "op": "pushbytes 0x0000000000000006",
      "defined_out": [
        "0x0000000000000006",
        "inner_txn_params%0%%param_ApplicationArgs_idx_15#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_ApplicationArgs_idx_15#0",
        "0x0000000000000006"
      ]
    },
    "2185": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "inner_txn_params%0%%param_ApplicationArgs_idx_15#0"
      ]
    },
    "2187": {
      "op": "pushbytes 0x0000000000000007",
      "defined_out": [
        "0x0000000000000007",
        "inner_txn_params%0%%param_ApplicationArgs_idx_15#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_ApplicationArgs_idx_15#0",
        "0x0000000000000007"
      ]
    },
    "2197": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "inner_txn_params%0%%param_ApplicationArgs_idx_15#0"
      ]
    },
    "2199": {
      "op": "pushbytes 0x0000000000000008",
      "defined_out": [
        "0x0000000000000008",
        "inner_txn_params%0%%param_ApplicationArgs_idx_15#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_ApplicationArgs_idx_15#0",
        "0x0000000000000008"
      ]
    },
    "2209": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "inner_txn_params%0%%param_ApplicationArgs_idx_15#0"
      ]
    },
    "2211": {
      "op": "pushbytes 0x0000000000000009",
      "defined_out": [
        "0x0000000000000009",
        "inner_txn_params%0%%param_ApplicationArgs_idx_15#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_ApplicationArgs_idx_15#0",
        "0x0000000000000009"
      ]
    },
    "2221": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "inner_txn_params%0%%param_ApplicationArgs_idx_15#0"
      ]
    },
    "2223": {
      "op": "pushbytes 0x000000000000000a",
      "defined_out": [
        "0x000000000000000a",
        "inner_txn_params%0%%param_ApplicationArgs_idx_15#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_ApplicationArgs_idx_15#0",
        "0x000000000000000a"
      ]
    },
    "2233": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "inner_txn_params%0%%param_ApplicationArgs_idx_15#0"
      ]
    },
    "2235": {
      "op": "bytec 54 // 0x000000000000000b",
      "defined_out": [
        "0x000000000000000b",
        "inner_txn_params%0%%param_ApplicationArgs_idx_15#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_ApplicationArgs_idx_15#0",
        "0x000000000000000b"
      ]
    },
    "2237": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "inner_txn_params%0%%param_ApplicationArgs_idx_15#0"
      ]
    },
    "2239": {
      "op": "pushbytes 0x000000000000000c",
      "defined_out": [
        "0x000000000000000c",
        "inner_txn_params%0%%param_ApplicationArgs_idx_15#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_ApplicationArgs_idx_15#0",
        "0x000000000000000c"
      ]
    },
    "2249": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "inner_txn_params%0%%param_ApplicationArgs_idx_15#0"
      ]
    },
    "2251": {
      "op": "pushbytes 0x000000000000000d",
      "defined_out": [
        "0x000000000000000d",
        "inner_txn_params%0%%param_ApplicationArgs_idx_15#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_ApplicationArgs_idx_15#0",
        "0x000000000000000d"
      ]
    },
    "2261": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "inner_txn_params%0%%param_ApplicationArgs_idx_15#0"
      ]
    },
    "2263": {
      "op": "pushbytes 0x000000000000000e",
      "defined_out": [
        "0x000000000000000e",
        "inner_txn_params%0%%param_ApplicationArgs_idx_15#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_ApplicationArgs_idx_15#0",
        "0x000000000000000e"
      ]
    },
    "2273": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "inner_txn_params%0%%param_ApplicationArgs_idx_15#0"
      ]
    },
    "2275": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "2277": {
      "op": "intc_1 // appl",
      "defined_out": [
        "appl"
      ],
      "stack_out": [
        "appl"
      ]
    },
    "2278": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "2280": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "2281": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "2283": {
      "op": "b test_cases.typed_abi_call.typed_c2c.Greeter.test_15plus_args_next_txn@1"
    },
    "2286": {
      "block": "test_cases.typed_abi_call.typed_c2c.Greeter.test_15plus_args_next_txn@1",
      "stack_in": [],
      "op": "itxn_submit"
    },
    "2287": {
      "op": "itxn LastLog",
      "defined_out": [
        "awst_tmp%0#0"
      ],
      "stack_out": [
        "awst_tmp%0#0"
      ]
    },
    "2289": {
      "op": "dup",
      "defined_out": [
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ]
    },
    "2290": {
      "op": "extract 4 0",
      "defined_out": [
        "awst_tmp%0#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "tmp%2#0"
      ]
    },
    "2293": {
      "op": "cover 1",
      "stack_out": [
        "tmp%2#0",
        "awst_tmp%0#0"
      ]
    },
    "2295": {
      "op": "extract 0 4",
      "defined_out": [
        "tmp%2#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "tmp%3#0"
      ]
    },
    "2298": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%2#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "tmp%3#0",
        "0x151f7c75"
      ]
    },
    "2299": {
      "op": "==",
      "defined_out": [
        "tmp%2#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "tmp%4#0"
      ]
    },
    "2300": {
      "error": "application log value is not the result of an ABI return",
      "op": "assert // application log value is not the result of an ABI return",
      "defined_out": [
        "result#0"
      ],
      "stack_out": [
        "result#0"
      ]
    },
    "2301": {
      "op": "extract 2 0",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "2304": {
      "op": "pushbytes 0x0f101112deadbeef14",
      "defined_out": [
        "0x0f101112deadbeef14",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "0x0f101112deadbeef14"
      ]
    },
    "2315": {
      "op": "==",
      "defined_out": [
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0"
      ]
    },
    "2316": {
      "op": "assert",
      "stack_out": []
    },
    "2317": {
      "retsub": true,
      "op": "retsub"
    },
    "2318": {
      "subroutine": "test_cases.typed_abi_call.typed_c2c.Greeter.test_void",
      "params": {
        "app#0": "uint64"
      },
      "block": "test_cases.typed_abi_call.typed_c2c.Greeter.test_void",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "2321": {
      "op": "b test_cases.typed_abi_call.typed_c2c.Greeter.test_void_block@0"
    },
    "2324": {
      "block": "test_cases.typed_abi_call.typed_c2c.Greeter.test_void_block@0",
      "stack_in": [],
      "op": "itxn_begin"
    },
    "2325": {
      "op": "bytec 24 // \"World1\"",
      "defined_out": [
        "\"World1\""
      ],
      "stack_out": [
        "\"World1\""
      ]
    },
    "2327": {
      "op": "len",
      "defined_out": [
        "aggregate%length%0#0"
      ],
      "stack_out": [
        "aggregate%length%0#0"
      ]
    },
    "2328": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%0#0"
      ],
      "stack_out": [
        "aggregate%as_bytes%0#0"
      ]
    },
    "2329": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%length_uint16%0#0"
      ],
      "stack_out": [
        "aggregate%length_uint16%0#0"
      ]
    },
    "2332": {
      "op": "bytec 24 // \"World1\"",
      "stack_out": [
        "aggregate%length_uint16%0#0",
        "\"World1\""
      ]
    },
    "2334": {
      "op": "concat",
      "defined_out": [
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "2335": {
      "op": "frame_dig -1",
      "defined_out": [
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%0%%param_ApplicationID_idx_0#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%0%%param_ApplicationID_idx_0#0"
      ]
    },
    "2337": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "2339": {
      "op": "bytec 13 // method \"log(string)void\"",
      "defined_out": [
        "Method(log(string)void)",
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0",
        "Method(log(string)void)"
      ]
    },
    "2341": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "2343": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "2345": {
      "op": "intc_1 // appl",
      "defined_out": [
        "appl"
      ],
      "stack_out": [
        "appl"
      ]
    },
    "2346": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "2348": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "2349": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "2351": {
      "op": "b test_cases.typed_abi_call.typed_c2c.Greeter.test_void_next_txn@1"
    },
    "2354": {
      "block": "test_cases.typed_abi_call.typed_c2c.Greeter.test_void_next_txn@1",
      "stack_in": [],
      "op": "itxn_submit"
    },
    "2355": {
      "op": "itxn LastLog",
      "defined_out": [
        "txn.LastLog#0"
      ],
      "stack_out": [
        "txn.LastLog#0"
      ]
    },
    "2357": {
      "op": "bytec 24 // 0x576f726c6431",
      "defined_out": [
        "0x576f726c6431",
        "txn.LastLog#0"
      ],
      "stack_out": [
        "txn.LastLog#0",
        "0x576f726c6431"
      ]
    },
    "2359": {
      "op": "==",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "2360": {
      "op": "assert",
      "stack_out": []
    },
    "2361": {
      "op": "itxn_begin"
    },
    "2362": {
      "op": "bytec 25 // \"World2\"",
      "defined_out": [
        "\"World2\""
      ],
      "stack_out": [
        "\"World2\""
      ]
    },
    "2364": {
      "op": "len",
      "defined_out": [
        "aggregate%length%1#0"
      ],
      "stack_out": [
        "aggregate%length%1#0"
      ]
    },
    "2365": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%1#0"
      ],
      "stack_out": [
        "aggregate%as_bytes%1#0"
      ]
    },
    "2366": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%length_uint16%1#0"
      ],
      "stack_out": [
        "aggregate%length_uint16%1#0"
      ]
    },
    "2369": {
      "op": "bytec 25 // \"World2\"",
      "stack_out": [
        "aggregate%length_uint16%1#0",
        "\"World2\""
      ]
    },
    "2371": {
      "op": "concat",
      "defined_out": [
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0"
      ],
      "stack_out": [
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "2372": {
      "op": "frame_dig -1",
      "defined_out": [
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%1%%param_ApplicationID_idx_0#0"
      ],
      "stack_out": [
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%1%%param_ApplicationID_idx_0#0"
      ]
    },
    "2374": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "2376": {
      "op": "bytec 13 // method \"log(string)void\"",
      "defined_out": [
        "Method(log(string)void)",
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0"
      ],
      "stack_out": [
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0",
        "Method(log(string)void)"
      ]
    },
    "2378": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "2380": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "2382": {
      "op": "intc_1 // appl",
      "defined_out": [
        "appl"
      ],
      "stack_out": [
        "appl"
      ]
    },
    "2383": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "2385": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "2386": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "2388": {
      "op": "b test_cases.typed_abi_call.typed_c2c.Greeter.test_void_next_txn@2"
    },
    "2391": {
      "block": "test_cases.typed_abi_call.typed_c2c.Greeter.test_void_next_txn@2",
      "stack_in": [],
      "op": "itxn_submit"
    },
    "2392": {
      "op": "itxn LastLog",
      "defined_out": [
        "txn.LastLog#0"
      ],
      "stack_out": [
        "txn.LastLog#0"
      ]
    },
    "2394": {
      "op": "bytec 25 // 0x576f726c6432",
      "defined_out": [
        "0x576f726c6432",
        "txn.LastLog#0"
      ],
      "stack_out": [
        "txn.LastLog#0",
        "0x576f726c6432"
      ]
    },
    "2396": {
      "op": "==",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "2397": {
      "op": "assert",
      "stack_out": []
    },
    "2398": {
      "op": "itxn_begin"
    },
    "2399": {
      "op": "bytec 26 // \"World3\"",
      "defined_out": [
        "\"World3\""
      ],
      "stack_out": [
        "\"World3\""
      ]
    },
    "2401": {
      "op": "len",
      "defined_out": [
        "aggregate%length%2#0"
      ],
      "stack_out": [
        "aggregate%length%2#0"
      ]
    },
    "2402": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%2#0"
      ],
      "stack_out": [
        "aggregate%as_bytes%2#0"
      ]
    },
    "2403": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%length_uint16%2#0"
      ],
      "stack_out": [
        "aggregate%length_uint16%2#0"
      ]
    },
    "2406": {
      "op": "bytec 26 // \"World3\"",
      "stack_out": [
        "aggregate%length_uint16%2#0",
        "\"World3\""
      ]
    },
    "2408": {
      "op": "concat",
      "defined_out": [
        "inner_txn_params%2%%param_ApplicationArgs_idx_1#0"
      ],
      "stack_out": [
        "inner_txn_params%2%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "2409": {
      "op": "frame_dig -1",
      "defined_out": [
        "inner_txn_params%2%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%2%%param_ApplicationID_idx_0#0"
      ],
      "stack_out": [
        "inner_txn_params%2%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%2%%param_ApplicationID_idx_0#0"
      ]
    },
    "2411": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "inner_txn_params%2%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "2413": {
      "op": "bytec 13 // method \"log(string)void\"",
      "defined_out": [
        "Method(log(string)void)",
        "inner_txn_params%2%%param_ApplicationArgs_idx_1#0"
      ],
      "stack_out": [
        "inner_txn_params%2%%param_ApplicationArgs_idx_1#0",
        "Method(log(string)void)"
      ]
    },
    "2415": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "inner_txn_params%2%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "2417": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "2419": {
      "op": "intc_1 // appl",
      "defined_out": [
        "appl"
      ],
      "stack_out": [
        "appl"
      ]
    },
    "2420": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "2422": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "2423": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "2425": {
      "op": "b test_cases.typed_abi_call.typed_c2c.Greeter.test_void_next_txn@3"
    },
    "2428": {
      "block": "test_cases.typed_abi_call.typed_c2c.Greeter.test_void_next_txn@3",
      "stack_in": [],
      "op": "itxn_submit"
    },
    "2429": {
      "op": "itxn LastLog",
      "defined_out": [
        "txn.LastLog#0"
      ],
      "stack_out": [
        "txn.LastLog#0"
      ]
    },
    "2431": {
      "op": "bytec 26 // 0x576f726c6433",
      "defined_out": [
        "0x576f726c6433",
        "txn.LastLog#0"
      ],
      "stack_out": [
        "txn.LastLog#0",
        "0x576f726c6433"
      ]
    },
    "2433": {
      "op": "==",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "2434": {
      "op": "assert",
      "stack_out": []
    },
    "2435": {
      "op": "itxn_begin"
    },
    "2436": {
      "op": "bytec 27 // \"World4\"",
      "defined_out": [
        "\"World4\""
      ],
      "stack_out": [
        "\"World4\""
      ]
    },
    "2438": {
      "op": "len",
      "defined_out": [
        "aggregate%length%3#0"
      ],
      "stack_out": [
        "aggregate%length%3#0"
      ]
    },
    "2439": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%3#0"
      ],
      "stack_out": [
        "aggregate%as_bytes%3#0"
      ]
    },
    "2440": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%length_uint16%3#0"
      ],
      "stack_out": [
        "aggregate%length_uint16%3#0"
      ]
    },
    "2443": {
      "op": "bytec 27 // \"World4\"",
      "stack_out": [
        "aggregate%length_uint16%3#0",
        "\"World4\""
      ]
    },
    "2445": {
      "op": "concat",
      "defined_out": [
        "inner_txn_params%3%%param_ApplicationArgs_idx_1#0"
      ],
      "stack_out": [
        "inner_txn_params%3%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "2446": {
      "op": "frame_dig -1",
      "defined_out": [
        "inner_txn_params%3%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%3%%param_ApplicationID_idx_0#0"
      ],
      "stack_out": [
        "inner_txn_params%3%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%3%%param_ApplicationID_idx_0#0"
      ]
    },
    "2448": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "inner_txn_params%3%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "2450": {
      "op": "bytec 13 // method \"log(string)void\"",
      "defined_out": [
        "Method(log(string)void)",
        "inner_txn_params%3%%param_ApplicationArgs_idx_1#0"
      ],
      "stack_out": [
        "inner_txn_params%3%%param_ApplicationArgs_idx_1#0",
        "Method(log(string)void)"
      ]
    },
    "2452": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "inner_txn_params%3%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "2454": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "2456": {
      "op": "intc_1 // appl",
      "defined_out": [
        "appl"
      ],
      "stack_out": [
        "appl"
      ]
    },
    "2457": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "2459": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "2460": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "2462": {
      "op": "b test_cases.typed_abi_call.typed_c2c.Greeter.test_void_next_txn@4"
    },
    "2465": {
      "block": "test_cases.typed_abi_call.typed_c2c.Greeter.test_void_next_txn@4",
      "stack_in": [],
      "op": "itxn_submit"
    },
    "2466": {
      "op": "itxn LastLog",
      "defined_out": [
        "txn.LastLog#0"
      ],
      "stack_out": [
        "txn.LastLog#0"
      ]
    },
    "2468": {
      "op": "bytec 27 // 0x576f726c6434",
      "defined_out": [
        "0x576f726c6434",
        "txn.LastLog#0"
      ],
      "stack_out": [
        "txn.LastLog#0",
        "0x576f726c6434"
      ]
    },
    "2470": {
      "op": "==",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0"
      ]
    },
    "2471": {
      "op": "assert",
      "stack_out": []
    },
    "2472": {
      "retsub": true,
      "op": "retsub"
    },
    "2473": {
      "subroutine": "test_cases.typed_abi_call.typed_c2c.Greeter.test_ref_types",
      "params": {
        "app#0": "uint64",
        "asset#0": "uint64"
      },
      "block": "test_cases.typed_abi_call.typed_c2c.Greeter.test_ref_types",
      "stack_in": [],
      "op": "proto 2 0"
    },
    "2476": {
      "op": "b test_cases.typed_abi_call.typed_c2c.Greeter.test_ref_types_block@0"
    },
    "2479": {
      "block": "test_cases.typed_abi_call.typed_c2c.Greeter.test_ref_types_block@0",
      "stack_in": [],
      "op": "itxn_begin"
    },
    "2480": {
      "op": "frame_dig -1",
      "defined_out": [
        "asset#0 (copy)"
      ],
      "stack_out": [
        "asset#0 (copy)"
      ]
    },
    "2482": {
      "op": "itob",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "2483": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "tmp%0#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%2#0"
      ]
    },
    "2485": {
      "op": "frame_dig -2",
      "defined_out": [
        "app#0 (copy)",
        "tmp%0#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%2#0",
        "app#0 (copy)"
      ]
    },
    "2487": {
      "op": "itob",
      "defined_out": [
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0",
        "tmp%2#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0",
        "tmp%2#0",
        "tmp%3#0"
      ]
    },
    "2488": {
      "op": "uncover 1",
      "stack_out": [
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0",
        "tmp%3#0",
        "tmp%2#0"
      ]
    },
    "2490": {
      "op": "cover 2",
      "defined_out": [
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%0%%param_ApplicationArgs_idx_2#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_ApplicationArgs_idx_2#0",
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0",
        "tmp%3#0"
      ]
    },
    "2492": {
      "op": "cover 2",
      "defined_out": [
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%0%%param_ApplicationArgs_idx_2#0",
        "inner_txn_params%0%%param_ApplicationArgs_idx_3#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_ApplicationArgs_idx_3#0",
        "inner_txn_params%0%%param_ApplicationArgs_idx_2#0",
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "2494": {
      "op": "frame_dig -2",
      "defined_out": [
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%0%%param_ApplicationArgs_idx_2#0",
        "inner_txn_params%0%%param_ApplicationArgs_idx_3#0",
        "inner_txn_params%0%%param_ApplicationID_idx_0#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_ApplicationArgs_idx_3#0",
        "inner_txn_params%0%%param_ApplicationArgs_idx_2#0",
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%0%%param_ApplicationID_idx_0#0"
      ]
    },
    "2496": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "inner_txn_params%0%%param_ApplicationArgs_idx_3#0",
        "inner_txn_params%0%%param_ApplicationArgs_idx_2#0",
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "2498": {
      "op": "pushbytes 0x46b50faf // method \"log(uint64,address,uint64)void\"",
      "defined_out": [
        "Method(log(uint64,address,uint64)void)",
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%0%%param_ApplicationArgs_idx_2#0",
        "inner_txn_params%0%%param_ApplicationArgs_idx_3#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_ApplicationArgs_idx_3#0",
        "inner_txn_params%0%%param_ApplicationArgs_idx_2#0",
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0",
        "Method(log(uint64,address,uint64)void)"
      ]
    },
    "2504": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "inner_txn_params%0%%param_ApplicationArgs_idx_3#0",
        "inner_txn_params%0%%param_ApplicationArgs_idx_2#0",
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "2506": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "inner_txn_params%0%%param_ApplicationArgs_idx_3#0",
        "inner_txn_params%0%%param_ApplicationArgs_idx_2#0"
      ]
    },
    "2508": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "inner_txn_params%0%%param_ApplicationArgs_idx_3#0"
      ]
    },
    "2510": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "2512": {
      "op": "intc_1 // appl",
      "defined_out": [
        "appl"
      ],
      "stack_out": [
        "appl"
      ]
    },
    "2513": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "2515": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "2516": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "2518": {
      "op": "b test_cases.typed_abi_call.typed_c2c.Greeter.test_ref_types_next_txn@1"
    },
    "2521": {
      "block": "test_cases.typed_abi_call.typed_c2c.Greeter.test_ref_types_next_txn@1",
      "stack_in": [],
      "op": "itxn_submit"
    },
    "2522": {
      "op": "itxn LastLog",
      "defined_out": [
        "txn.LastLog#0"
      ],
      "stack_out": [
        "txn.LastLog#0"
      ]
    },
    "2524": {
      "op": "frame_dig -1",
      "defined_out": [
        "asset#0 (copy)",
        "txn.LastLog#0"
      ],
      "stack_out": [
        "txn.LastLog#0",
        "asset#0 (copy)"
      ]
    },
    "2526": {
      "op": "asset_params_get AssetName",
      "defined_out": [
        "check%0#0",
        "txn.LastLog#0",
        "value%0#0"
      ],
      "stack_out": [
        "txn.LastLog#0",
        "value%0#0",
        "check%0#0"
      ]
    },
    "2528": {
      "error": "asset exists",
      "op": "assert // asset exists",
      "stack_out": [
        "txn.LastLog#0",
        "value%0#0"
      ]
    },
    "2529": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "tmp%4#0",
        "txn.LastLog#0",
        "value%0#0"
      ],
      "stack_out": [
        "txn.LastLog#0",
        "value%0#0",
        "tmp%4#0"
      ]
    },
    "2531": {
      "op": "concat",
      "defined_out": [
        "tmp%5#0",
        "txn.LastLog#0"
      ],
      "stack_out": [
        "txn.LastLog#0",
        "tmp%5#0"
      ]
    },
    "2532": {
      "op": "frame_dig -2",
      "defined_out": [
        "app#0 (copy)",
        "tmp%5#0",
        "txn.LastLog#0"
      ],
      "stack_out": [
        "txn.LastLog#0",
        "tmp%5#0",
        "app#0 (copy)"
      ]
    },
    "2534": {
      "op": "app_params_get AppAddress",
      "defined_out": [
        "check%1#0",
        "tmp%5#0",
        "txn.LastLog#0",
        "value%1#0"
      ],
      "stack_out": [
        "txn.LastLog#0",
        "tmp%5#0",
        "value%1#0",
        "check%1#0"
      ]
    },
    "2536": {
      "error": "application exists",
      "op": "assert // application exists",
      "stack_out": [
        "txn.LastLog#0",
        "tmp%5#0",
        "value%1#0"
      ]
    },
    "2537": {
      "op": "concat",
      "defined_out": [
        "tmp%6#0",
        "txn.LastLog#0"
      ],
      "stack_out": [
        "txn.LastLog#0",
        "tmp%6#0"
      ]
    },
    "2538": {
      "op": "==",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0"
      ]
    },
    "2539": {
      "op": "assert",
      "stack_out": []
    },
    "2540": {
      "retsub": true,
      "op": "retsub"
    },
    "2541": {
      "subroutine": "test_cases.typed_abi_call.typed_c2c.Greeter.test_account_to_address",
      "params": {
        "app#0": "uint64"
      },
      "block": "test_cases.typed_abi_call.typed_c2c.Greeter.test_account_to_address",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "2544": {
      "op": "b test_cases.typed_abi_call.typed_c2c.Greeter.test_account_to_address_block@0"
    },
    "2547": {
      "block": "test_cases.typed_abi_call.typed_c2c.Greeter.test_account_to_address_block@0",
      "stack_in": [],
      "op": "itxn_begin"
    },
    "2548": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "2550": {
      "op": "frame_dig -1",
      "defined_out": [
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%0%%param_ApplicationID_idx_0#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%0%%param_ApplicationID_idx_0#0"
      ]
    },
    "2552": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "2554": {
      "op": "pushbytes 0x0437b17e // method \"log(address)void\"",
      "defined_out": [
        "Method(log(address)void)",
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0",
        "Method(log(address)void)"
      ]
    },
    "2560": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "2562": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "2564": {
      "op": "intc_1 // appl",
      "defined_out": [
        "appl"
      ],
      "stack_out": [
        "appl"
      ]
    },
    "2565": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "2567": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "2568": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "2570": {
      "op": "b test_cases.typed_abi_call.typed_c2c.Greeter.test_account_to_address_next_txn@1"
    },
    "2573": {
      "block": "test_cases.typed_abi_call.typed_c2c.Greeter.test_account_to_address_next_txn@1",
      "stack_in": [],
      "op": "itxn_submit"
    },
    "2574": {
      "op": "itxn LastLog",
      "defined_out": [
        "txn.LastLog#0"
      ],
      "stack_out": [
        "txn.LastLog#0"
      ]
    },
    "2576": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "tmp%2#0",
        "txn.LastLog#0"
      ],
      "stack_out": [
        "txn.LastLog#0",
        "tmp%2#0"
      ]
    },
    "2578": {
      "op": "==",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "2579": {
      "op": "assert",
      "stack_out": []
    },
    "2580": {
      "retsub": true,
      "op": "retsub"
    },
    "2581": {
      "subroutine": "test_cases.typed_abi_call.typed_c2c.Greeter.test_native_string",
      "params": {
        "app#0": "uint64"
      },
      "block": "test_cases.typed_abi_call.typed_c2c.Greeter.test_native_string",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "2584": {
      "op": "intc_0 // 0",
      "stack_out": [
        "result1#0"
      ]
    },
    "2585": {
      "op": "b test_cases.typed_abi_call.typed_c2c.Greeter.test_native_string_block@0"
    },
    "2588": {
      "block": "test_cases.typed_abi_call.typed_c2c.Greeter.test_native_string_block@0",
      "stack_in": [
        "result1#0"
      ],
      "op": "itxn_begin"
    },
    "2589": {
      "op": "bytec 9 // \"s\"",
      "defined_out": [
        "\"s\""
      ],
      "stack_out": [
        "result1#0",
        "\"s\""
      ]
    },
    "2591": {
      "op": "len",
      "defined_out": [
        "aggregate%length%0#0"
      ],
      "stack_out": [
        "result1#0",
        "aggregate%length%0#0"
      ]
    },
    "2592": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%0#0"
      ],
      "stack_out": [
        "result1#0",
        "aggregate%as_bytes%0#0"
      ]
    },
    "2593": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%length_uint16%0#0"
      ],
      "stack_out": [
        "result1#0",
        "aggregate%length_uint16%0#0"
      ]
    },
    "2596": {
      "op": "bytec 9 // \"s\"",
      "stack_out": [
        "result1#0",
        "aggregate%length_uint16%0#0",
        "\"s\""
      ]
    },
    "2598": {
      "op": "concat",
      "defined_out": [
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0"
      ],
      "stack_out": [
        "result1#0",
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "2599": {
      "op": "frame_dig -1",
      "defined_out": [
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%0%%param_ApplicationID_idx_0#0"
      ],
      "stack_out": [
        "result1#0",
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%0%%param_ApplicationID_idx_0#0"
      ]
    },
    "2601": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "result1#0",
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "2603": {
      "op": "bytec 28 // method \"echo_native_string(string)string\"",
      "defined_out": [
        "Method(echo_native_string(string)string)",
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0"
      ],
      "stack_out": [
        "result1#0",
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0",
        "Method(echo_native_string(string)string)"
      ]
    },
    "2605": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "result1#0",
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "2607": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "result1#0"
      ]
    },
    "2609": {
      "op": "intc_1 // appl",
      "defined_out": [
        "appl"
      ],
      "stack_out": [
        "result1#0",
        "appl"
      ]
    },
    "2610": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "result1#0"
      ]
    },
    "2612": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "result1#0",
        "0"
      ]
    },
    "2613": {
      "op": "itxn_field Fee",
      "stack_out": [
        "result1#0"
      ]
    },
    "2615": {
      "op": "b test_cases.typed_abi_call.typed_c2c.Greeter.test_native_string_next_txn@1"
    },
    "2618": {
      "block": "test_cases.typed_abi_call.typed_c2c.Greeter.test_native_string_next_txn@1",
      "stack_in": [
        "result1#0"
      ],
      "op": "itxn_submit"
    },
    "2619": {
      "op": "itxn LastLog",
      "defined_out": [
        "awst_tmp%0#0"
      ],
      "stack_out": [
        "result1#0",
        "awst_tmp%0#0"
      ]
    },
    "2621": {
      "op": "dup",
      "defined_out": [
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ],
      "stack_out": [
        "result1#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ]
    },
    "2622": {
      "op": "extract 4 0",
      "defined_out": [
        "awst_tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "result1#0",
        "awst_tmp%0#0",
        "tmp%1#0"
      ]
    },
    "2625": {
      "op": "cover 1",
      "stack_out": [
        "result1#0",
        "tmp%1#0",
        "awst_tmp%0#0"
      ]
    },
    "2627": {
      "op": "extract 0 4",
      "defined_out": [
        "tmp%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "result1#0",
        "tmp%1#0",
        "tmp%2#0"
      ]
    },
    "2630": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "result1#0",
        "tmp%1#0",
        "tmp%2#0",
        "0x151f7c75"
      ]
    },
    "2631": {
      "op": "==",
      "defined_out": [
        "tmp%1#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "result1#0",
        "tmp%1#0",
        "tmp%3#0"
      ]
    },
    "2632": {
      "error": "application log value is not the result of an ABI return",
      "op": "assert // application log value is not the result of an ABI return",
      "stack_out": [
        "result1#0",
        "tmp%1#0"
      ]
    },
    "2633": {
      "op": "extract 2 0",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "result1#0",
        "tmp%4#0"
      ]
    },
    "2636": {
      "op": "dup",
      "defined_out": [
        "result1#0",
        "result1#0 (copy)"
      ],
      "stack_out": [
        "result1#0",
        "result1#0",
        "result1#0 (copy)"
      ]
    },
    "2637": {
      "op": "frame_bury 0",
      "defined_out": [
        "result1#0"
      ],
      "stack_out": [
        "result1#0",
        "result1#0"
      ]
    },
    "2639": {
      "op": "pushbytes \"echo: s\"",
      "defined_out": [
        "\"echo: s\"",
        "result1#0"
      ],
      "stack_out": [
        "result1#0",
        "result1#0",
        "\"echo: s\""
      ]
    },
    "2648": {
      "op": "==",
      "defined_out": [
        "result1#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "result1#0",
        "tmp%5#0"
      ]
    },
    "2649": {
      "op": "assert",
      "stack_out": [
        "result1#0"
      ]
    },
    "2650": {
      "op": "itxn_begin"
    },
    "2651": {
      "op": "bytec 9 // \"s\"",
      "defined_out": [
        "\"s\"",
        "result1#0"
      ],
      "stack_out": [
        "result1#0",
        "\"s\""
      ]
    },
    "2653": {
      "op": "len",
      "defined_out": [
        "aggregate%length%1#0",
        "result1#0"
      ],
      "stack_out": [
        "result1#0",
        "aggregate%length%1#0"
      ]
    },
    "2654": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%1#0",
        "result1#0"
      ],
      "stack_out": [
        "result1#0",
        "aggregate%as_bytes%1#0"
      ]
    },
    "2655": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%length_uint16%1#0",
        "result1#0"
      ],
      "stack_out": [
        "result1#0",
        "aggregate%length_uint16%1#0"
      ]
    },
    "2658": {
      "op": "bytec 9 // \"s\"",
      "stack_out": [
        "result1#0",
        "aggregate%length_uint16%1#0",
        "\"s\""
      ]
    },
    "2660": {
      "op": "concat",
      "defined_out": [
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0",
        "result1#0"
      ],
      "stack_out": [
        "result1#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "2661": {
      "op": "frame_dig -1",
      "defined_out": [
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%1%%param_ApplicationID_idx_0#0",
        "result1#0"
      ],
      "stack_out": [
        "result1#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%1%%param_ApplicationID_idx_0#0"
      ]
    },
    "2663": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "result1#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "2665": {
      "op": "bytec 28 // method \"echo_native_string(string)string\"",
      "defined_out": [
        "Method(echo_native_string(string)string)",
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0",
        "result1#0"
      ],
      "stack_out": [
        "result1#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0",
        "Method(echo_native_string(string)string)"
      ]
    },
    "2667": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "result1#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "2669": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "result1#0"
      ]
    },
    "2671": {
      "op": "intc_1 // appl",
      "defined_out": [
        "appl",
        "result1#0"
      ],
      "stack_out": [
        "result1#0",
        "appl"
      ]
    },
    "2672": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "result1#0"
      ]
    },
    "2674": {
      "op": "intc_0 // 0",
      "stack_out": [
        "result1#0",
        "0"
      ]
    },
    "2675": {
      "op": "itxn_field Fee",
      "stack_out": [
        "result1#0"
      ]
    },
    "2677": {
      "op": "b test_cases.typed_abi_call.typed_c2c.Greeter.test_native_string_next_txn@2"
    },
    "2680": {
      "block": "test_cases.typed_abi_call.typed_c2c.Greeter.test_native_string_next_txn@2",
      "stack_in": [
        "result1#0"
      ],
      "op": "itxn_submit"
    },
    "2681": {
      "op": "itxn LastLog",
      "defined_out": [
        "awst_tmp%1#0"
      ],
      "stack_out": [
        "result1#0",
        "awst_tmp%1#0"
      ]
    },
    "2683": {
      "op": "dup",
      "defined_out": [
        "awst_tmp%1#0",
        "awst_tmp%1#0 (copy)"
      ],
      "stack_out": [
        "result1#0",
        "awst_tmp%1#0",
        "awst_tmp%1#0 (copy)"
      ]
    },
    "2684": {
      "op": "extract 4 0",
      "defined_out": [
        "awst_tmp%1#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "result1#0",
        "awst_tmp%1#0",
        "tmp%7#0"
      ]
    },
    "2687": {
      "op": "cover 1",
      "stack_out": [
        "result1#0",
        "tmp%7#0",
        "awst_tmp%1#0"
      ]
    },
    "2689": {
      "op": "extract 0 4",
      "defined_out": [
        "tmp%7#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "result1#0",
        "tmp%7#0",
        "tmp%8#0"
      ]
    },
    "2692": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%7#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "result1#0",
        "tmp%7#0",
        "tmp%8#0",
        "0x151f7c75"
      ]
    },
    "2693": {
      "op": "==",
      "defined_out": [
        "tmp%7#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "result1#0",
        "tmp%7#0",
        "tmp%9#0"
      ]
    },
    "2694": {
      "error": "application log value is not the result of an ABI return",
      "op": "assert // application log value is not the result of an ABI return",
      "stack_out": [
        "result1#0",
        "tmp%7#0"
      ]
    },
    "2695": {
      "op": "extract 2 0",
      "defined_out": [
        "result2#0"
      ],
      "stack_out": [
        "result1#0",
        "result2#0"
      ]
    },
    "2698": {
      "op": "frame_dig 0",
      "defined_out": [
        "result1#0",
        "result2#0"
      ],
      "stack_out": [
        "result1#0",
        "result2#0",
        "result1#0"
      ]
    },
    "2700": {
      "op": "==",
      "defined_out": [
        "result1#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "result1#0",
        "tmp%11#0"
      ]
    },
    "2701": {
      "op": "assert",
      "stack_out": [
        "result1#0"
      ]
    },
    "2702": {
      "op": "itxn_begin"
    },
    "2703": {
      "op": "bytec 9 // \"s\"",
      "defined_out": [
        "\"s\"",
        "result1#0"
      ],
      "stack_out": [
        "result1#0",
        "\"s\""
      ]
    },
    "2705": {
      "op": "len",
      "defined_out": [
        "aggregate%length%2#0",
        "result1#0"
      ],
      "stack_out": [
        "result1#0",
        "aggregate%length%2#0"
      ]
    },
    "2706": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%2#0",
        "result1#0"
      ],
      "stack_out": [
        "result1#0",
        "aggregate%as_bytes%2#0"
      ]
    },
    "2707": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%length_uint16%2#0",
        "result1#0"
      ],
      "stack_out": [
        "result1#0",
        "aggregate%length_uint16%2#0"
      ]
    },
    "2710": {
      "op": "bytec 9 // \"s\"",
      "stack_out": [
        "result1#0",
        "aggregate%length_uint16%2#0",
        "\"s\""
      ]
    },
    "2712": {
      "op": "concat",
      "defined_out": [
        "inner_txn_params%2%%param_ApplicationArgs_idx_1#0",
        "result1#0"
      ],
      "stack_out": [
        "result1#0",
        "inner_txn_params%2%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "2713": {
      "op": "frame_dig -1",
      "defined_out": [
        "inner_txn_params%2%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%2%%param_ApplicationID_idx_0#0",
        "result1#0"
      ],
      "stack_out": [
        "result1#0",
        "inner_txn_params%2%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%2%%param_ApplicationID_idx_0#0"
      ]
    },
    "2715": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "result1#0",
        "inner_txn_params%2%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "2717": {
      "op": "bytec 28 // method \"echo_native_string(string)string\"",
      "defined_out": [
        "Method(echo_native_string(string)string)",
        "inner_txn_params%2%%param_ApplicationArgs_idx_1#0",
        "result1#0"
      ],
      "stack_out": [
        "result1#0",
        "inner_txn_params%2%%param_ApplicationArgs_idx_1#0",
        "Method(echo_native_string(string)string)"
      ]
    },
    "2719": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "result1#0",
        "inner_txn_params%2%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "2721": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "result1#0"
      ]
    },
    "2723": {
      "op": "intc_1 // appl",
      "defined_out": [
        "appl",
        "result1#0"
      ],
      "stack_out": [
        "result1#0",
        "appl"
      ]
    },
    "2724": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "result1#0"
      ]
    },
    "2726": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "result1#0"
      ],
      "stack_out": [
        "result1#0",
        "0"
      ]
    },
    "2727": {
      "op": "itxn_field Fee",
      "stack_out": [
        "result1#0"
      ]
    },
    "2729": {
      "op": "b test_cases.typed_abi_call.typed_c2c.Greeter.test_native_string_next_txn@3"
    },
    "2732": {
      "block": "test_cases.typed_abi_call.typed_c2c.Greeter.test_native_string_next_txn@3",
      "stack_in": [
        "result1#0"
      ],
      "op": "itxn_submit"
    },
    "2733": {
      "op": "itxn LastLog",
      "defined_out": [
        "awst_tmp%2#0"
      ],
      "stack_out": [
        "result1#0",
        "awst_tmp%2#0"
      ]
    },
    "2735": {
      "op": "dup",
      "defined_out": [
        "awst_tmp%2#0",
        "awst_tmp%2#0 (copy)"
      ],
      "stack_out": [
        "result1#0",
        "awst_tmp%2#0",
        "awst_tmp%2#0 (copy)"
      ]
    },
    "2736": {
      "op": "extract 4 0",
      "defined_out": [
        "awst_tmp%2#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "result1#0",
        "awst_tmp%2#0",
        "tmp%13#0"
      ]
    },
    "2739": {
      "op": "cover 1",
      "stack_out": [
        "result1#0",
        "tmp%13#0",
        "awst_tmp%2#0"
      ]
    },
    "2741": {
      "op": "extract 0 4",
      "defined_out": [
        "tmp%13#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "result1#0",
        "tmp%13#0",
        "tmp%14#0"
      ]
    },
    "2744": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%13#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "result1#0",
        "tmp%13#0",
        "tmp%14#0",
        "0x151f7c75"
      ]
    },
    "2745": {
      "op": "==",
      "defined_out": [
        "tmp%13#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "result1#0",
        "tmp%13#0",
        "tmp%15#0"
      ]
    },
    "2746": {
      "error": "application log value is not the result of an ABI return",
      "op": "assert // application log value is not the result of an ABI return",
      "stack_out": [
        "result1#0",
        "tmp%13#0"
      ]
    },
    "2747": {
      "op": "extract 2 0",
      "defined_out": [
        "result3#0"
      ],
      "stack_out": [
        "result1#0",
        "result3#0"
      ]
    },
    "2750": {
      "op": "frame_dig 0",
      "defined_out": [
        "result1#0",
        "result3#0"
      ],
      "stack_out": [
        "result1#0",
        "result3#0",
        "result1#0"
      ]
    },
    "2752": {
      "op": "==",
      "defined_out": [
        "result1#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "result1#0",
        "tmp%17#0"
      ]
    },
    "2753": {
      "op": "assert",
      "stack_out": [
        "result1#0"
      ]
    },
    "2754": {
      "retsub": true,
      "op": "retsub"
    },
    "2755": {
      "subroutine": "test_cases.typed_abi_call.typed_c2c.Greeter.test_native_bytes",
      "params": {
        "app#0": "uint64"
      },
      "block": "test_cases.typed_abi_call.typed_c2c.Greeter.test_native_bytes",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "2758": {
      "op": "intc_0 // 0",
      "stack_out": [
        "result1#0"
      ]
    },
    "2759": {
      "op": "b test_cases.typed_abi_call.typed_c2c.Greeter.test_native_bytes_block@0"
    },
    "2762": {
      "block": "test_cases.typed_abi_call.typed_c2c.Greeter.test_native_bytes_block@0",
      "stack_in": [
        "result1#0"
      ],
      "op": "itxn_begin"
    },
    "2763": {
      "op": "bytec 10 // 0x62",
      "defined_out": [
        "0x62"
      ],
      "stack_out": [
        "result1#0",
        "0x62"
      ]
    },
    "2765": {
      "op": "len",
      "defined_out": [
        "aggregate%length%0#0"
      ],
      "stack_out": [
        "result1#0",
        "aggregate%length%0#0"
      ]
    },
    "2766": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%0#0"
      ],
      "stack_out": [
        "result1#0",
        "aggregate%as_bytes%0#0"
      ]
    },
    "2767": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%length_uint16%0#0"
      ],
      "stack_out": [
        "result1#0",
        "aggregate%length_uint16%0#0"
      ]
    },
    "2770": {
      "op": "bytec 10 // 0x62",
      "stack_out": [
        "result1#0",
        "aggregate%length_uint16%0#0",
        "0x62"
      ]
    },
    "2772": {
      "op": "concat",
      "defined_out": [
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0"
      ],
      "stack_out": [
        "result1#0",
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "2773": {
      "op": "frame_dig -1",
      "defined_out": [
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%0%%param_ApplicationID_idx_0#0"
      ],
      "stack_out": [
        "result1#0",
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%0%%param_ApplicationID_idx_0#0"
      ]
    },
    "2775": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "result1#0",
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "2777": {
      "op": "bytec 29 // method \"echo_native_bytes(byte[])byte[]\"",
      "defined_out": [
        "Method(echo_native_bytes(byte[])byte[])",
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0"
      ],
      "stack_out": [
        "result1#0",
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0",
        "Method(echo_native_bytes(byte[])byte[])"
      ]
    },
    "2779": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "result1#0",
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "2781": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "result1#0"
      ]
    },
    "2783": {
      "op": "intc_1 // appl",
      "defined_out": [
        "appl"
      ],
      "stack_out": [
        "result1#0",
        "appl"
      ]
    },
    "2784": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "result1#0"
      ]
    },
    "2786": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "result1#0",
        "0"
      ]
    },
    "2787": {
      "op": "itxn_field Fee",
      "stack_out": [
        "result1#0"
      ]
    },
    "2789": {
      "op": "b test_cases.typed_abi_call.typed_c2c.Greeter.test_native_bytes_next_txn@1"
    },
    "2792": {
      "block": "test_cases.typed_abi_call.typed_c2c.Greeter.test_native_bytes_next_txn@1",
      "stack_in": [
        "result1#0"
      ],
      "op": "itxn_submit"
    },
    "2793": {
      "op": "itxn LastLog",
      "defined_out": [
        "awst_tmp%0#0"
      ],
      "stack_out": [
        "result1#0",
        "awst_tmp%0#0"
      ]
    },
    "2795": {
      "op": "dup",
      "defined_out": [
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ],
      "stack_out": [
        "result1#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ]
    },
    "2796": {
      "op": "extract 4 0",
      "defined_out": [
        "awst_tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "result1#0",
        "awst_tmp%0#0",
        "tmp%1#0"
      ]
    },
    "2799": {
      "op": "cover 1",
      "stack_out": [
        "result1#0",
        "tmp%1#0",
        "awst_tmp%0#0"
      ]
    },
    "2801": {
      "op": "extract 0 4",
      "defined_out": [
        "tmp%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "result1#0",
        "tmp%1#0",
        "tmp%2#0"
      ]
    },
    "2804": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "result1#0",
        "tmp%1#0",
        "tmp%2#0",
        "0x151f7c75"
      ]
    },
    "2805": {
      "op": "==",
      "defined_out": [
        "tmp%1#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "result1#0",
        "tmp%1#0",
        "tmp%3#0"
      ]
    },
    "2806": {
      "error": "application log value is not the result of an ABI return",
      "op": "assert // application log value is not the result of an ABI return",
      "stack_out": [
        "result1#0",
        "tmp%1#0"
      ]
    },
    "2807": {
      "op": "extract 2 0",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "result1#0",
        "tmp%4#0"
      ]
    },
    "2810": {
      "op": "dup",
      "defined_out": [
        "result1#0",
        "result1#0 (copy)"
      ],
      "stack_out": [
        "result1#0",
        "result1#0",
        "result1#0 (copy)"
      ]
    },
    "2811": {
      "op": "frame_bury 0",
      "defined_out": [
        "result1#0"
      ],
      "stack_out": [
        "result1#0",
        "result1#0"
      ]
    },
    "2813": {
      "op": "pushbytes 0x6563686f3a2062",
      "defined_out": [
        "0x6563686f3a2062",
        "result1#0"
      ],
      "stack_out": [
        "result1#0",
        "result1#0",
        "0x6563686f3a2062"
      ]
    },
    "2822": {
      "op": "==",
      "defined_out": [
        "result1#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "result1#0",
        "tmp%5#0"
      ]
    },
    "2823": {
      "op": "assert",
      "stack_out": [
        "result1#0"
      ]
    },
    "2824": {
      "op": "itxn_begin"
    },
    "2825": {
      "op": "bytec 10 // 0x62",
      "defined_out": [
        "0x62",
        "result1#0"
      ],
      "stack_out": [
        "result1#0",
        "0x62"
      ]
    },
    "2827": {
      "op": "len",
      "defined_out": [
        "aggregate%length%1#0",
        "result1#0"
      ],
      "stack_out": [
        "result1#0",
        "aggregate%length%1#0"
      ]
    },
    "2828": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%1#0",
        "result1#0"
      ],
      "stack_out": [
        "result1#0",
        "aggregate%as_bytes%1#0"
      ]
    },
    "2829": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%length_uint16%1#0",
        "result1#0"
      ],
      "stack_out": [
        "result1#0",
        "aggregate%length_uint16%1#0"
      ]
    },
    "2832": {
      "op": "bytec 10 // 0x62",
      "stack_out": [
        "result1#0",
        "aggregate%length_uint16%1#0",
        "0x62"
      ]
    },
    "2834": {
      "op": "concat",
      "defined_out": [
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0",
        "result1#0"
      ],
      "stack_out": [
        "result1#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "2835": {
      "op": "frame_dig -1",
      "defined_out": [
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%1%%param_ApplicationID_idx_0#0",
        "result1#0"
      ],
      "stack_out": [
        "result1#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%1%%param_ApplicationID_idx_0#0"
      ]
    },
    "2837": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "result1#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "2839": {
      "op": "bytec 29 // method \"echo_native_bytes(byte[])byte[]\"",
      "defined_out": [
        "Method(echo_native_bytes(byte[])byte[])",
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0",
        "result1#0"
      ],
      "stack_out": [
        "result1#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0",
        "Method(echo_native_bytes(byte[])byte[])"
      ]
    },
    "2841": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "result1#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "2843": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "result1#0"
      ]
    },
    "2845": {
      "op": "intc_1 // appl",
      "defined_out": [
        "appl",
        "result1#0"
      ],
      "stack_out": [
        "result1#0",
        "appl"
      ]
    },
    "2846": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "result1#0"
      ]
    },
    "2848": {
      "op": "intc_0 // 0",
      "stack_out": [
        "result1#0",
        "0"
      ]
    },
    "2849": {
      "op": "itxn_field Fee",
      "stack_out": [
        "result1#0"
      ]
    },
    "2851": {
      "op": "b test_cases.typed_abi_call.typed_c2c.Greeter.test_native_bytes_next_txn@2"
    },
    "2854": {
      "block": "test_cases.typed_abi_call.typed_c2c.Greeter.test_native_bytes_next_txn@2",
      "stack_in": [
        "result1#0"
      ],
      "op": "itxn_submit"
    },
    "2855": {
      "op": "itxn LastLog",
      "defined_out": [
        "awst_tmp%1#0"
      ],
      "stack_out": [
        "result1#0",
        "awst_tmp%1#0"
      ]
    },
    "2857": {
      "op": "dup",
      "defined_out": [
        "awst_tmp%1#0",
        "awst_tmp%1#0 (copy)"
      ],
      "stack_out": [
        "result1#0",
        "awst_tmp%1#0",
        "awst_tmp%1#0 (copy)"
      ]
    },
    "2858": {
      "op": "extract 4 0",
      "defined_out": [
        "awst_tmp%1#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "result1#0",
        "awst_tmp%1#0",
        "tmp%7#0"
      ]
    },
    "2861": {
      "op": "cover 1",
      "stack_out": [
        "result1#0",
        "tmp%7#0",
        "awst_tmp%1#0"
      ]
    },
    "2863": {
      "op": "extract 0 4",
      "defined_out": [
        "tmp%7#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "result1#0",
        "tmp%7#0",
        "tmp%8#0"
      ]
    },
    "2866": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%7#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "result1#0",
        "tmp%7#0",
        "tmp%8#0",
        "0x151f7c75"
      ]
    },
    "2867": {
      "op": "==",
      "defined_out": [
        "tmp%7#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "result1#0",
        "tmp%7#0",
        "tmp%9#0"
      ]
    },
    "2868": {
      "error": "application log value is not the result of an ABI return",
      "op": "assert // application log value is not the result of an ABI return",
      "stack_out": [
        "result1#0",
        "tmp%7#0"
      ]
    },
    "2869": {
      "op": "extract 2 0",
      "defined_out": [
        "result2#0"
      ],
      "stack_out": [
        "result1#0",
        "result2#0"
      ]
    },
    "2872": {
      "op": "frame_dig 0",
      "defined_out": [
        "result1#0",
        "result2#0"
      ],
      "stack_out": [
        "result1#0",
        "result2#0",
        "result1#0"
      ]
    },
    "2874": {
      "op": "==",
      "defined_out": [
        "result1#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "result1#0",
        "tmp%11#0"
      ]
    },
    "2875": {
      "op": "assert",
      "stack_out": [
        "result1#0"
      ]
    },
    "2876": {
      "op": "itxn_begin"
    },
    "2877": {
      "op": "bytec 10 // 0x62",
      "defined_out": [
        "0x62",
        "result1#0"
      ],
      "stack_out": [
        "result1#0",
        "0x62"
      ]
    },
    "2879": {
      "op": "len",
      "defined_out": [
        "aggregate%length%2#0",
        "result1#0"
      ],
      "stack_out": [
        "result1#0",
        "aggregate%length%2#0"
      ]
    },
    "2880": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%2#0",
        "result1#0"
      ],
      "stack_out": [
        "result1#0",
        "aggregate%as_bytes%2#0"
      ]
    },
    "2881": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%length_uint16%2#0",
        "result1#0"
      ],
      "stack_out": [
        "result1#0",
        "aggregate%length_uint16%2#0"
      ]
    },
    "2884": {
      "op": "bytec 10 // 0x62",
      "stack_out": [
        "result1#0",
        "aggregate%length_uint16%2#0",
        "0x62"
      ]
    },
    "2886": {
      "op": "concat",
      "defined_out": [
        "inner_txn_params%2%%param_ApplicationArgs_idx_1#0",
        "result1#0"
      ],
      "stack_out": [
        "result1#0",
        "inner_txn_params%2%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "2887": {
      "op": "frame_dig -1",
      "defined_out": [
        "inner_txn_params%2%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%2%%param_ApplicationID_idx_0#0",
        "result1#0"
      ],
      "stack_out": [
        "result1#0",
        "inner_txn_params%2%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%2%%param_ApplicationID_idx_0#0"
      ]
    },
    "2889": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "result1#0",
        "inner_txn_params%2%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "2891": {
      "op": "bytec 29 // method \"echo_native_bytes(byte[])byte[]\"",
      "defined_out": [
        "Method(echo_native_bytes(byte[])byte[])",
        "inner_txn_params%2%%param_ApplicationArgs_idx_1#0",
        "result1#0"
      ],
      "stack_out": [
        "result1#0",
        "inner_txn_params%2%%param_ApplicationArgs_idx_1#0",
        "Method(echo_native_bytes(byte[])byte[])"
      ]
    },
    "2893": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "result1#0",
        "inner_txn_params%2%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "2895": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "result1#0"
      ]
    },
    "2897": {
      "op": "intc_1 // appl",
      "defined_out": [
        "appl",
        "result1#0"
      ],
      "stack_out": [
        "result1#0",
        "appl"
      ]
    },
    "2898": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "result1#0"
      ]
    },
    "2900": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "result1#0"
      ],
      "stack_out": [
        "result1#0",
        "0"
      ]
    },
    "2901": {
      "op": "itxn_field Fee",
      "stack_out": [
        "result1#0"
      ]
    },
    "2903": {
      "op": "b test_cases.typed_abi_call.typed_c2c.Greeter.test_native_bytes_next_txn@3"
    },
    "2906": {
      "block": "test_cases.typed_abi_call.typed_c2c.Greeter.test_native_bytes_next_txn@3",
      "stack_in": [
        "result1#0"
      ],
      "op": "itxn_submit"
    },
    "2907": {
      "op": "itxn LastLog",
      "defined_out": [
        "awst_tmp%2#0"
      ],
      "stack_out": [
        "result1#0",
        "awst_tmp%2#0"
      ]
    },
    "2909": {
      "op": "dup",
      "defined_out": [
        "awst_tmp%2#0",
        "awst_tmp%2#0 (copy)"
      ],
      "stack_out": [
        "result1#0",
        "awst_tmp%2#0",
        "awst_tmp%2#0 (copy)"
      ]
    },
    "2910": {
      "op": "extract 4 0",
      "defined_out": [
        "awst_tmp%2#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "result1#0",
        "awst_tmp%2#0",
        "tmp%13#0"
      ]
    },
    "2913": {
      "op": "cover 1",
      "stack_out": [
        "result1#0",
        "tmp%13#0",
        "awst_tmp%2#0"
      ]
    },
    "2915": {
      "op": "extract 0 4",
      "defined_out": [
        "tmp%13#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "result1#0",
        "tmp%13#0",
        "tmp%14#0"
      ]
    },
    "2918": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%13#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "result1#0",
        "tmp%13#0",
        "tmp%14#0",
        "0x151f7c75"
      ]
    },
    "2919": {
      "op": "==",
      "defined_out": [
        "tmp%13#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "result1#0",
        "tmp%13#0",
        "tmp%15#0"
      ]
    },
    "2920": {
      "error": "application log value is not the result of an ABI return",
      "op": "assert // application log value is not the result of an ABI return",
      "stack_out": [
        "result1#0",
        "tmp%13#0"
      ]
    },
    "2921": {
      "op": "extract 2 0",
      "defined_out": [
        "result3#0"
      ],
      "stack_out": [
        "result1#0",
        "result3#0"
      ]
    },
    "2924": {
      "op": "frame_dig 0",
      "defined_out": [
        "result1#0",
        "result3#0"
      ],
      "stack_out": [
        "result1#0",
        "result3#0",
        "result1#0"
      ]
    },
    "2926": {
      "op": "==",
      "defined_out": [
        "result1#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "result1#0",
        "tmp%17#0"
      ]
    },
    "2927": {
      "op": "assert",
      "stack_out": [
        "result1#0"
      ]
    },
    "2928": {
      "retsub": true,
      "op": "retsub"
    },
    "2929": {
      "subroutine": "test_cases.typed_abi_call.typed_c2c.Greeter.test_native_uint64",
      "params": {
        "app#0": "uint64"
      },
      "block": "test_cases.typed_abi_call.typed_c2c.Greeter.test_native_uint64",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "2932": {
      "op": "bytec_2 // \"\"",
      "stack_out": [
        "result1#0"
      ]
    },
    "2933": {
      "op": "b test_cases.typed_abi_call.typed_c2c.Greeter.test_native_uint64_block@0"
    },
    "2936": {
      "block": "test_cases.typed_abi_call.typed_c2c.Greeter.test_native_uint64_block@0",
      "stack_in": [
        "result1#0"
      ],
      "op": "itxn_begin"
    },
    "2937": {
      "op": "frame_dig -1",
      "defined_out": [
        "inner_txn_params%0%%param_ApplicationID_idx_0#0"
      ],
      "stack_out": [
        "result1#0",
        "inner_txn_params%0%%param_ApplicationID_idx_0#0"
      ]
    },
    "2939": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "result1#0"
      ]
    },
    "2941": {
      "op": "bytec 30 // method \"echo_native_uint64(uint64)uint64\"",
      "defined_out": [
        "Method(echo_native_uint64(uint64)uint64)"
      ],
      "stack_out": [
        "result1#0",
        "Method(echo_native_uint64(uint64)uint64)"
      ]
    },
    "2943": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "result1#0"
      ]
    },
    "2945": {
      "op": "bytec 5 // 0x0000000000000001",
      "defined_out": [
        "0x0000000000000001"
      ],
      "stack_out": [
        "result1#0",
        "0x0000000000000001"
      ]
    },
    "2947": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "result1#0"
      ]
    },
    "2949": {
      "op": "intc_1 // appl",
      "defined_out": [
        "appl"
      ],
      "stack_out": [
        "result1#0",
        "appl"
      ]
    },
    "2950": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "result1#0"
      ]
    },
    "2952": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "result1#0",
        "0"
      ]
    },
    "2953": {
      "op": "itxn_field Fee",
      "stack_out": [
        "result1#0"
      ]
    },
    "2955": {
      "op": "b test_cases.typed_abi_call.typed_c2c.Greeter.test_native_uint64_next_txn@1"
    },
    "2958": {
      "block": "test_cases.typed_abi_call.typed_c2c.Greeter.test_native_uint64_next_txn@1",
      "stack_in": [
        "result1#0"
      ],
      "op": "itxn_submit"
    },
    "2959": {
      "op": "itxn LastLog",
      "defined_out": [
        "awst_tmp%0#0"
      ],
      "stack_out": [
        "result1#0",
        "awst_tmp%0#0"
      ]
    },
    "2961": {
      "op": "dup",
      "defined_out": [
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ],
      "stack_out": [
        "result1#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ]
    },
    "2962": {
      "op": "extract 4 0",
      "defined_out": [
        "awst_tmp%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "result1#0",
        "awst_tmp%0#0",
        "tmp%0#0"
      ]
    },
    "2965": {
      "op": "cover 1",
      "stack_out": [
        "result1#0",
        "tmp%0#0",
        "awst_tmp%0#0"
      ]
    },
    "2967": {
      "op": "extract 0 4",
      "defined_out": [
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "result1#0",
        "tmp%0#0",
        "tmp%1#0"
      ]
    },
    "2970": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "result1#0",
        "tmp%0#0",
        "tmp%1#0",
        "0x151f7c75"
      ]
    },
    "2971": {
      "op": "==",
      "defined_out": [
        "tmp%0#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "result1#0",
        "tmp%0#0",
        "tmp%2#0"
      ]
    },
    "2972": {
      "error": "application log value is not the result of an ABI return",
      "op": "assert // application log value is not the result of an ABI return",
      "stack_out": [
        "result1#0",
        "tmp%0#0"
      ]
    },
    "2973": {
      "op": "btoi",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "result1#0",
        "tmp%3#0"
      ]
    },
    "2974": {
      "op": "dup",
      "defined_out": [
        "result1#0",
        "result1#0 (copy)"
      ],
      "stack_out": [
        "result1#0",
        "result1#0",
        "result1#0 (copy)"
      ]
    },
    "2975": {
      "op": "frame_bury 0",
      "defined_out": [
        "result1#0"
      ],
      "stack_out": [
        "result1#0",
        "result1#0"
      ]
    },
    "2977": {
      "op": "intc_3 // 2",
      "defined_out": [
        "2",
        "result1#0"
      ],
      "stack_out": [
        "result1#0",
        "result1#0",
        "2"
      ]
    },
    "2978": {
      "op": "==",
      "defined_out": [
        "result1#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "result1#0",
        "tmp%4#0"
      ]
    },
    "2979": {
      "op": "assert",
      "stack_out": [
        "result1#0"
      ]
    },
    "2980": {
      "op": "itxn_begin"
    },
    "2981": {
      "op": "pushint 1 // 1",
      "stack_out": [
        "result1#0",
        "1"
      ]
    },
    "2983": {
      "op": "itob",
      "defined_out": [
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0",
        "result1#0"
      ],
      "stack_out": [
        "result1#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "2984": {
      "op": "frame_dig -1",
      "defined_out": [
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%1%%param_ApplicationID_idx_0#0",
        "result1#0"
      ],
      "stack_out": [
        "result1#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%1%%param_ApplicationID_idx_0#0"
      ]
    },
    "2986": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "result1#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "2988": {
      "op": "bytec 30 // method \"echo_native_uint64(uint64)uint64\"",
      "defined_out": [
        "Method(echo_native_uint64(uint64)uint64)",
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0",
        "result1#0"
      ],
      "stack_out": [
        "result1#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0",
        "Method(echo_native_uint64(uint64)uint64)"
      ]
    },
    "2990": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "result1#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "2992": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "result1#0"
      ]
    },
    "2994": {
      "op": "intc_1 // appl",
      "defined_out": [
        "appl",
        "result1#0"
      ],
      "stack_out": [
        "result1#0",
        "appl"
      ]
    },
    "2995": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "result1#0"
      ]
    },
    "2997": {
      "op": "intc_0 // 0",
      "stack_out": [
        "result1#0",
        "0"
      ]
    },
    "2998": {
      "op": "itxn_field Fee",
      "stack_out": [
        "result1#0"
      ]
    },
    "3000": {
      "op": "b test_cases.typed_abi_call.typed_c2c.Greeter.test_native_uint64_next_txn@2"
    },
    "3003": {
      "block": "test_cases.typed_abi_call.typed_c2c.Greeter.test_native_uint64_next_txn@2",
      "stack_in": [
        "result1#0"
      ],
      "op": "itxn_submit"
    },
    "3004": {
      "op": "itxn LastLog",
      "defined_out": [
        "awst_tmp%1#0"
      ],
      "stack_out": [
        "result1#0",
        "awst_tmp%1#0"
      ]
    },
    "3006": {
      "op": "dup",
      "defined_out": [
        "awst_tmp%1#0",
        "awst_tmp%1#0 (copy)"
      ],
      "stack_out": [
        "result1#0",
        "awst_tmp%1#0",
        "awst_tmp%1#0 (copy)"
      ]
    },
    "3007": {
      "op": "extract 4 0",
      "defined_out": [
        "awst_tmp%1#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "result1#0",
        "awst_tmp%1#0",
        "tmp%6#0"
      ]
    },
    "3010": {
      "op": "cover 1",
      "stack_out": [
        "result1#0",
        "tmp%6#0",
        "awst_tmp%1#0"
      ]
    },
    "3012": {
      "op": "extract 0 4",
      "defined_out": [
        "tmp%6#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "result1#0",
        "tmp%6#0",
        "tmp%7#0"
      ]
    },
    "3015": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%6#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "result1#0",
        "tmp%6#0",
        "tmp%7#0",
        "0x151f7c75"
      ]
    },
    "3016": {
      "op": "==",
      "defined_out": [
        "tmp%6#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "result1#0",
        "tmp%6#0",
        "tmp%8#0"
      ]
    },
    "3017": {
      "error": "application log value is not the result of an ABI return",
      "op": "assert // application log value is not the result of an ABI return",
      "stack_out": [
        "result1#0",
        "tmp%6#0"
      ]
    },
    "3018": {
      "op": "btoi",
      "defined_out": [
        "result2#0"
      ],
      "stack_out": [
        "result1#0",
        "result2#0"
      ]
    },
    "3019": {
      "op": "frame_dig 0",
      "defined_out": [
        "result1#0",
        "result2#0"
      ],
      "stack_out": [
        "result1#0",
        "result2#0",
        "result1#0"
      ]
    },
    "3021": {
      "op": "==",
      "defined_out": [
        "result1#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "result1#0",
        "tmp%10#0"
      ]
    },
    "3022": {
      "op": "assert",
      "stack_out": [
        "result1#0"
      ]
    },
    "3023": {
      "op": "itxn_begin"
    },
    "3024": {
      "op": "frame_dig -1",
      "defined_out": [
        "inner_txn_params%2%%param_ApplicationID_idx_0#0",
        "result1#0"
      ],
      "stack_out": [
        "result1#0",
        "inner_txn_params%2%%param_ApplicationID_idx_0#0"
      ]
    },
    "3026": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "result1#0"
      ]
    },
    "3028": {
      "op": "bytec 30 // method \"echo_native_uint64(uint64)uint64\"",
      "defined_out": [
        "Method(echo_native_uint64(uint64)uint64)",
        "result1#0"
      ],
      "stack_out": [
        "result1#0",
        "Method(echo_native_uint64(uint64)uint64)"
      ]
    },
    "3030": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "result1#0"
      ]
    },
    "3032": {
      "op": "bytec 5 // 0x0000000000000001",
      "defined_out": [
        "0x0000000000000001",
        "result1#0"
      ],
      "stack_out": [
        "result1#0",
        "0x0000000000000001"
      ]
    },
    "3034": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "result1#0"
      ]
    },
    "3036": {
      "op": "intc_1 // appl",
      "defined_out": [
        "appl",
        "result1#0"
      ],
      "stack_out": [
        "result1#0",
        "appl"
      ]
    },
    "3037": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "result1#0"
      ]
    },
    "3039": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "result1#0"
      ],
      "stack_out": [
        "result1#0",
        "0"
      ]
    },
    "3040": {
      "op": "itxn_field Fee",
      "stack_out": [
        "result1#0"
      ]
    },
    "3042": {
      "op": "b test_cases.typed_abi_call.typed_c2c.Greeter.test_native_uint64_next_txn@3"
    },
    "3045": {
      "block": "test_cases.typed_abi_call.typed_c2c.Greeter.test_native_uint64_next_txn@3",
      "stack_in": [
        "result1#0"
      ],
      "op": "itxn_submit"
    },
    "3046": {
      "op": "itxn LastLog",
      "defined_out": [
        "awst_tmp%2#0"
      ],
      "stack_out": [
        "result1#0",
        "awst_tmp%2#0"
      ]
    },
    "3048": {
      "op": "dup",
      "defined_out": [
        "awst_tmp%2#0",
        "awst_tmp%2#0 (copy)"
      ],
      "stack_out": [
        "result1#0",
        "awst_tmp%2#0",
        "awst_tmp%2#0 (copy)"
      ]
    },
    "3049": {
      "op": "extract 4 0",
      "defined_out": [
        "awst_tmp%2#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "result1#0",
        "awst_tmp%2#0",
        "tmp%11#0"
      ]
    },
    "3052": {
      "op": "cover 1",
      "stack_out": [
        "result1#0",
        "tmp%11#0",
        "awst_tmp%2#0"
      ]
    },
    "3054": {
      "op": "extract 0 4",
      "defined_out": [
        "tmp%11#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "result1#0",
        "tmp%11#0",
        "tmp%12#0"
      ]
    },
    "3057": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%11#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "result1#0",
        "tmp%11#0",
        "tmp%12#0",
        "0x151f7c75"
      ]
    },
    "3058": {
      "op": "==",
      "defined_out": [
        "tmp%11#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "result1#0",
        "tmp%11#0",
        "tmp%13#0"
      ]
    },
    "3059": {
      "error": "application log value is not the result of an ABI return",
      "op": "assert // application log value is not the result of an ABI return",
      "stack_out": [
        "result1#0",
        "tmp%11#0"
      ]
    },
    "3060": {
      "op": "btoi",
      "defined_out": [
        "result3#0"
      ],
      "stack_out": [
        "result1#0",
        "result3#0"
      ]
    },
    "3061": {
      "op": "frame_dig 0",
      "defined_out": [
        "result1#0",
        "result3#0"
      ],
      "stack_out": [
        "result1#0",
        "result3#0",
        "result1#0"
      ]
    },
    "3063": {
      "op": "==",
      "defined_out": [
        "result1#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "result1#0",
        "tmp%15#0"
      ]
    },
    "3064": {
      "op": "assert",
      "stack_out": [
        "result1#0"
      ]
    },
    "3065": {
      "retsub": true,
      "op": "retsub"
    },
    "3066": {
      "subroutine": "test_cases.typed_abi_call.typed_c2c.Greeter.test_native_biguint",
      "params": {
        "app#0": "uint64"
      },
      "block": "test_cases.typed_abi_call.typed_c2c.Greeter.test_native_biguint",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "3069": {
      "op": "intc_0 // 0",
      "stack_out": [
        "result1#0"
      ]
    },
    "3070": {
      "op": "b test_cases.typed_abi_call.typed_c2c.Greeter.test_native_biguint_block@0"
    },
    "3073": {
      "block": "test_cases.typed_abi_call.typed_c2c.Greeter.test_native_biguint_block@0",
      "stack_in": [
        "result1#0"
      ],
      "op": "itxn_begin"
    },
    "3074": {
      "op": "frame_dig -1",
      "defined_out": [
        "inner_txn_params%0%%param_ApplicationID_idx_0#0"
      ],
      "stack_out": [
        "result1#0",
        "inner_txn_params%0%%param_ApplicationID_idx_0#0"
      ]
    },
    "3076": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "result1#0"
      ]
    },
    "3078": {
      "op": "bytec 31 // method \"echo_native_biguint(uint512)uint512\"",
      "defined_out": [
        "Method(echo_native_biguint(uint512)uint512)"
      ],
      "stack_out": [
        "result1#0",
        "Method(echo_native_biguint(uint512)uint512)"
      ]
    },
    "3080": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "result1#0"
      ]
    },
    "3082": {
      "op": "bytec 6 // 0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002",
      "defined_out": [
        "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002"
      ],
      "stack_out": [
        "result1#0",
        "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002"
      ]
    },
    "3084": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "result1#0"
      ]
    },
    "3086": {
      "op": "intc_1 // appl",
      "defined_out": [
        "appl"
      ],
      "stack_out": [
        "result1#0",
        "appl"
      ]
    },
    "3087": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "result1#0"
      ]
    },
    "3089": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "result1#0",
        "0"
      ]
    },
    "3090": {
      "op": "itxn_field Fee",
      "stack_out": [
        "result1#0"
      ]
    },
    "3092": {
      "op": "b test_cases.typed_abi_call.typed_c2c.Greeter.test_native_biguint_next_txn@1"
    },
    "3095": {
      "block": "test_cases.typed_abi_call.typed_c2c.Greeter.test_native_biguint_next_txn@1",
      "stack_in": [
        "result1#0"
      ],
      "op": "itxn_submit"
    },
    "3096": {
      "op": "itxn LastLog",
      "defined_out": [
        "awst_tmp%0#0"
      ],
      "stack_out": [
        "result1#0",
        "awst_tmp%0#0"
      ]
    },
    "3098": {
      "op": "dup",
      "defined_out": [
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ],
      "stack_out": [
        "result1#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ]
    },
    "3099": {
      "op": "extract 4 0",
      "defined_out": [
        "awst_tmp%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "result1#0",
        "awst_tmp%0#0",
        "tmp%0#0"
      ]
    },
    "3102": {
      "op": "cover 1",
      "stack_out": [
        "result1#0",
        "tmp%0#0",
        "awst_tmp%0#0"
      ]
    },
    "3104": {
      "op": "extract 0 4",
      "defined_out": [
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "result1#0",
        "tmp%0#0",
        "tmp%1#0"
      ]
    },
    "3107": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "result1#0",
        "tmp%0#0",
        "tmp%1#0",
        "0x151f7c75"
      ]
    },
    "3108": {
      "op": "==",
      "defined_out": [
        "tmp%0#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "result1#0",
        "tmp%0#0",
        "tmp%2#0"
      ]
    },
    "3109": {
      "error": "application log value is not the result of an ABI return",
      "op": "assert // application log value is not the result of an ABI return",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "result1#0",
        "tmp%3#0"
      ]
    },
    "3110": {
      "op": "dup",
      "defined_out": [
        "result1#0",
        "result1#0 (copy)"
      ],
      "stack_out": [
        "result1#0",
        "result1#0",
        "result1#0 (copy)"
      ]
    },
    "3111": {
      "op": "frame_bury 0",
      "defined_out": [
        "result1#0"
      ],
      "stack_out": [
        "result1#0",
        "result1#0"
      ]
    },
    "3113": {
      "op": "bytec 32 // 0x03",
      "defined_out": [
        "0x03",
        "result1#0"
      ],
      "stack_out": [
        "result1#0",
        "result1#0",
        "0x03"
      ]
    },
    "3115": {
      "op": "b==",
      "defined_out": [
        "result1#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "result1#0",
        "tmp%4#0"
      ]
    },
    "3116": {
      "op": "assert",
      "stack_out": [
        "result1#0"
      ]
    },
    "3117": {
      "op": "itxn_begin"
    },
    "3118": {
      "op": "bytec 11 // 0x02",
      "defined_out": [
        "0x02",
        "result1#0"
      ],
      "stack_out": [
        "result1#0",
        "0x02"
      ]
    },
    "3120": {
      "op": "len",
      "defined_out": [
        "aggregate%value_len%0#0",
        "result1#0"
      ],
      "stack_out": [
        "result1#0",
        "aggregate%value_len%0#0"
      ]
    },
    "3121": {
      "op": "pushint 64 // 64",
      "defined_out": [
        "64",
        "aggregate%value_len%0#0",
        "result1#0"
      ],
      "stack_out": [
        "result1#0",
        "aggregate%value_len%0#0",
        "64"
      ]
    },
    "3123": {
      "op": "<=",
      "defined_out": [
        "aggregate%len_ok%0#0",
        "result1#0"
      ],
      "stack_out": [
        "result1#0",
        "aggregate%len_ok%0#0"
      ]
    },
    "3124": {
      "error": "overflow",
      "op": "assert // overflow",
      "stack_out": [
        "result1#0"
      ]
    },
    "3125": {
      "op": "pushint 64 // 64",
      "stack_out": [
        "result1#0",
        "64"
      ]
    },
    "3127": {
      "op": "bzero",
      "defined_out": [
        "aggregate%bzero%0#0",
        "result1#0"
      ],
      "stack_out": [
        "result1#0",
        "aggregate%bzero%0#0"
      ]
    },
    "3128": {
      "op": "bytec 11 // 0x02",
      "stack_out": [
        "result1#0",
        "aggregate%bzero%0#0",
        "0x02"
      ]
    },
    "3130": {
      "op": "b|",
      "defined_out": [
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0",
        "result1#0"
      ],
      "stack_out": [
        "result1#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "3131": {
      "op": "frame_dig -1",
      "defined_out": [
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%1%%param_ApplicationID_idx_0#0",
        "result1#0"
      ],
      "stack_out": [
        "result1#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%1%%param_ApplicationID_idx_0#0"
      ]
    },
    "3133": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "result1#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "3135": {
      "op": "bytec 31 // method \"echo_native_biguint(uint512)uint512\"",
      "defined_out": [
        "Method(echo_native_biguint(uint512)uint512)",
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0",
        "result1#0"
      ],
      "stack_out": [
        "result1#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0",
        "Method(echo_native_biguint(uint512)uint512)"
      ]
    },
    "3137": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "result1#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "3139": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "result1#0"
      ]
    },
    "3141": {
      "op": "intc_1 // appl",
      "defined_out": [
        "appl",
        "result1#0"
      ],
      "stack_out": [
        "result1#0",
        "appl"
      ]
    },
    "3142": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "result1#0"
      ]
    },
    "3144": {
      "op": "intc_0 // 0",
      "stack_out": [
        "result1#0",
        "0"
      ]
    },
    "3145": {
      "op": "itxn_field Fee",
      "stack_out": [
        "result1#0"
      ]
    },
    "3147": {
      "op": "b test_cases.typed_abi_call.typed_c2c.Greeter.test_native_biguint_next_txn@2"
    },
    "3150": {
      "block": "test_cases.typed_abi_call.typed_c2c.Greeter.test_native_biguint_next_txn@2",
      "stack_in": [
        "result1#0"
      ],
      "op": "itxn_submit"
    },
    "3151": {
      "op": "itxn LastLog",
      "defined_out": [
        "awst_tmp%1#0"
      ],
      "stack_out": [
        "result1#0",
        "awst_tmp%1#0"
      ]
    },
    "3153": {
      "op": "dup",
      "defined_out": [
        "awst_tmp%1#0",
        "awst_tmp%1#0 (copy)"
      ],
      "stack_out": [
        "result1#0",
        "awst_tmp%1#0",
        "awst_tmp%1#0 (copy)"
      ]
    },
    "3154": {
      "op": "extract 4 0",
      "defined_out": [
        "awst_tmp%1#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "result1#0",
        "awst_tmp%1#0",
        "tmp%6#0"
      ]
    },
    "3157": {
      "op": "cover 1",
      "stack_out": [
        "result1#0",
        "tmp%6#0",
        "awst_tmp%1#0"
      ]
    },
    "3159": {
      "op": "extract 0 4",
      "defined_out": [
        "tmp%6#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "result1#0",
        "tmp%6#0",
        "tmp%7#0"
      ]
    },
    "3162": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%6#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "result1#0",
        "tmp%6#0",
        "tmp%7#0",
        "0x151f7c75"
      ]
    },
    "3163": {
      "op": "==",
      "defined_out": [
        "tmp%6#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "result1#0",
        "tmp%6#0",
        "tmp%8#0"
      ]
    },
    "3164": {
      "error": "application log value is not the result of an ABI return",
      "op": "assert // application log value is not the result of an ABI return",
      "defined_out": [
        "result2#0"
      ],
      "stack_out": [
        "result1#0",
        "result2#0"
      ]
    },
    "3165": {
      "op": "frame_dig 0",
      "defined_out": [
        "result1#0",
        "result2#0"
      ],
      "stack_out": [
        "result1#0",
        "result2#0",
        "result1#0"
      ]
    },
    "3167": {
      "op": "b==",
      "defined_out": [
        "result1#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "result1#0",
        "tmp%10#0"
      ]
    },
    "3168": {
      "op": "assert",
      "stack_out": [
        "result1#0"
      ]
    },
    "3169": {
      "op": "itxn_begin"
    },
    "3170": {
      "op": "frame_dig -1",
      "defined_out": [
        "inner_txn_params%2%%param_ApplicationID_idx_0#0",
        "result1#0"
      ],
      "stack_out": [
        "result1#0",
        "inner_txn_params%2%%param_ApplicationID_idx_0#0"
      ]
    },
    "3172": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "result1#0"
      ]
    },
    "3174": {
      "op": "bytec 31 // method \"echo_native_biguint(uint512)uint512\"",
      "defined_out": [
        "Method(echo_native_biguint(uint512)uint512)",
        "result1#0"
      ],
      "stack_out": [
        "result1#0",
        "Method(echo_native_biguint(uint512)uint512)"
      ]
    },
    "3176": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "result1#0"
      ]
    },
    "3178": {
      "op": "bytec 6 // 0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002",
      "defined_out": [
        "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002",
        "result1#0"
      ],
      "stack_out": [
        "result1#0",
        "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002"
      ]
    },
    "3180": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "result1#0"
      ]
    },
    "3182": {
      "op": "intc_1 // appl",
      "defined_out": [
        "appl",
        "result1#0"
      ],
      "stack_out": [
        "result1#0",
        "appl"
      ]
    },
    "3183": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "result1#0"
      ]
    },
    "3185": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "result1#0"
      ],
      "stack_out": [
        "result1#0",
        "0"
      ]
    },
    "3186": {
      "op": "itxn_field Fee",
      "stack_out": [
        "result1#0"
      ]
    },
    "3188": {
      "op": "b test_cases.typed_abi_call.typed_c2c.Greeter.test_native_biguint_next_txn@3"
    },
    "3191": {
      "block": "test_cases.typed_abi_call.typed_c2c.Greeter.test_native_biguint_next_txn@3",
      "stack_in": [
        "result1#0"
      ],
      "op": "itxn_submit"
    },
    "3192": {
      "op": "itxn LastLog",
      "defined_out": [
        "awst_tmp%2#0"
      ],
      "stack_out": [
        "result1#0",
        "awst_tmp%2#0"
      ]
    },
    "3194": {
      "op": "dup",
      "defined_out": [
        "awst_tmp%2#0",
        "awst_tmp%2#0 (copy)"
      ],
      "stack_out": [
        "result1#0",
        "awst_tmp%2#0",
        "awst_tmp%2#0 (copy)"
      ]
    },
    "3195": {
      "op": "extract 4 0",
      "defined_out": [
        "awst_tmp%2#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "result1#0",
        "awst_tmp%2#0",
        "tmp%11#0"
      ]
    },
    "3198": {
      "op": "cover 1",
      "stack_out": [
        "result1#0",
        "tmp%11#0",
        "awst_tmp%2#0"
      ]
    },
    "3200": {
      "op": "extract 0 4",
      "defined_out": [
        "tmp%11#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "result1#0",
        "tmp%11#0",
        "tmp%12#0"
      ]
    },
    "3203": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%11#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "result1#0",
        "tmp%11#0",
        "tmp%12#0",
        "0x151f7c75"
      ]
    },
    "3204": {
      "op": "==",
      "defined_out": [
        "tmp%11#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "result1#0",
        "tmp%11#0",
        "tmp%13#0"
      ]
    },
    "3205": {
      "error": "application log value is not the result of an ABI return",
      "op": "assert // application log value is not the result of an ABI return",
      "defined_out": [
        "result3#0"
      ],
      "stack_out": [
        "result1#0",
        "result3#0"
      ]
    },
    "3206": {
      "op": "frame_dig 0",
      "defined_out": [
        "result1#0",
        "result3#0"
      ],
      "stack_out": [
        "result1#0",
        "result3#0",
        "result1#0"
      ]
    },
    "3208": {
      "op": "b==",
      "defined_out": [
        "result1#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "result1#0",
        "tmp%15#0"
      ]
    },
    "3209": {
      "op": "assert",
      "stack_out": [
        "result1#0"
      ]
    },
    "3210": {
      "retsub": true,
      "op": "retsub"
    },
    "3211": {
      "subroutine": "test_cases.typed_abi_call.typed_c2c.Greeter.test_native_tuple",
      "params": {
        "app#0": "uint64"
      },
      "block": "test_cases.typed_abi_call.typed_c2c.Greeter.test_native_tuple",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "3214": {
      "op": "intc_0 // 0",
      "stack_out": [
        "result1#0"
      ]
    },
    "3215": {
      "op": "b test_cases.typed_abi_call.typed_c2c.Greeter.test_native_tuple_block@0"
    },
    "3218": {
      "block": "test_cases.typed_abi_call.typed_c2c.Greeter.test_native_tuple_block@0",
      "stack_in": [
        "result1#0"
      ],
      "op": "itxn_begin"
    },
    "3219": {
      "op": "bytec_1 // \"s1\"",
      "defined_out": [
        "\"s1\""
      ],
      "stack_out": [
        "result1#0",
        "\"s1\""
      ]
    },
    "3220": {
      "op": "len",
      "defined_out": [
        "aggregate%length%0#0"
      ],
      "stack_out": [
        "result1#0",
        "aggregate%length%0#0"
      ]
    },
    "3221": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%0#0"
      ],
      "stack_out": [
        "result1#0",
        "aggregate%as_bytes%0#0"
      ]
    },
    "3222": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%length_uint16%0#0"
      ],
      "stack_out": [
        "result1#0",
        "aggregate%length_uint16%0#0"
      ]
    },
    "3225": {
      "op": "bytec_1 // \"s1\"",
      "stack_out": [
        "result1#0",
        "aggregate%length_uint16%0#0",
        "\"s1\""
      ]
    },
    "3226": {
      "op": "concat",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "result1#0",
        "tmp%0#0"
      ]
    },
    "3227": {
      "op": "bytec_3 // 0x6231",
      "defined_out": [
        "0x6231",
        "tmp%0#0"
      ],
      "stack_out": [
        "result1#0",
        "tmp%0#0",
        "0x6231"
      ]
    },
    "3228": {
      "op": "len",
      "defined_out": [
        "aggregate%length%1#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "result1#0",
        "tmp%0#0",
        "aggregate%length%1#0"
      ]
    },
    "3229": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%1#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "result1#0",
        "tmp%0#0",
        "aggregate%as_bytes%1#0"
      ]
    },
    "3230": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%length_uint16%1#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "result1#0",
        "tmp%0#0",
        "aggregate%length_uint16%1#0"
      ]
    },
    "3233": {
      "op": "bytec_3 // 0x6231",
      "stack_out": [
        "result1#0",
        "tmp%0#0",
        "aggregate%length_uint16%1#0",
        "0x6231"
      ]
    },
    "3234": {
      "op": "concat",
      "defined_out": [
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "result1#0",
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0",
        "tmp%1#0"
      ]
    },
    "3235": {
      "op": "cover 1",
      "defined_out": [
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%0%%param_ApplicationArgs_idx_2#0"
      ],
      "stack_out": [
        "result1#0",
        "inner_txn_params%0%%param_ApplicationArgs_idx_2#0",
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "3237": {
      "op": "frame_dig -1",
      "defined_out": [
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%0%%param_ApplicationArgs_idx_2#0",
        "inner_txn_params%0%%param_ApplicationID_idx_0#0"
      ],
      "stack_out": [
        "result1#0",
        "inner_txn_params%0%%param_ApplicationArgs_idx_2#0",
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%0%%param_ApplicationID_idx_0#0"
      ]
    },
    "3239": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "result1#0",
        "inner_txn_params%0%%param_ApplicationArgs_idx_2#0",
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "3241": {
      "op": "bytec 7 // method \"echo_native_tuple(string,byte[],uint64,uint512)(string,byte[],uint64,uint512)\"",
      "defined_out": [
        "Method(echo_native_tuple(string,byte[],uint64,uint512)(string,byte[],uint64,uint512))",
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%0%%param_ApplicationArgs_idx_2#0"
      ],
      "stack_out": [
        "result1#0",
        "inner_txn_params%0%%param_ApplicationArgs_idx_2#0",
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0",
        "Method(echo_native_tuple(string,byte[],uint64,uint512)(string,byte[],uint64,uint512))"
      ]
    },
    "3243": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "result1#0",
        "inner_txn_params%0%%param_ApplicationArgs_idx_2#0",
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "3245": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "result1#0",
        "inner_txn_params%0%%param_ApplicationArgs_idx_2#0"
      ]
    },
    "3247": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "result1#0"
      ]
    },
    "3249": {
      "op": "bytec 5 // 0x0000000000000001",
      "defined_out": [
        "0x0000000000000001"
      ],
      "stack_out": [
        "result1#0",
        "0x0000000000000001"
      ]
    },
    "3251": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "result1#0"
      ]
    },
    "3253": {
      "op": "bytec 6 // 0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002",
      "defined_out": [
        "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002"
      ],
      "stack_out": [
        "result1#0",
        "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002"
      ]
    },
    "3255": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "result1#0"
      ]
    },
    "3257": {
      "op": "intc_1 // appl",
      "defined_out": [
        "appl"
      ],
      "stack_out": [
        "result1#0",
        "appl"
      ]
    },
    "3258": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "result1#0"
      ]
    },
    "3260": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "result1#0",
        "0"
      ]
    },
    "3261": {
      "op": "itxn_field Fee",
      "stack_out": [
        "result1#0"
      ]
    },
    "3263": {
      "op": "b test_cases.typed_abi_call.typed_c2c.Greeter.test_native_tuple_next_txn@1"
    },
    "3266": {
      "block": "test_cases.typed_abi_call.typed_c2c.Greeter.test_native_tuple_next_txn@1",
      "stack_in": [
        "result1#0"
      ],
      "op": "itxn_submit"
    },
    "3267": {
      "op": "itxn LastLog",
      "defined_out": [
        "awst_tmp%0#0"
      ],
      "stack_out": [
        "result1#0",
        "awst_tmp%0#0"
      ]
    },
    "3269": {
      "op": "dup",
      "defined_out": [
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ],
      "stack_out": [
        "result1#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ]
    },
    "3270": {
      "op": "extract 4 0",
      "defined_out": [
        "awst_tmp%0#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "result1#0",
        "awst_tmp%0#0",
        "tmp%2#0"
      ]
    },
    "3273": {
      "op": "cover 1",
      "stack_out": [
        "result1#0",
        "tmp%2#0",
        "awst_tmp%0#0"
      ]
    },
    "3275": {
      "op": "extract 0 4",
      "defined_out": [
        "tmp%2#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "result1#0",
        "tmp%2#0",
        "tmp%3#0"
      ]
    },
    "3278": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%2#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "result1#0",
        "tmp%2#0",
        "tmp%3#0",
        "0x151f7c75"
      ]
    },
    "3279": {
      "op": "==",
      "defined_out": [
        "tmp%2#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "result1#0",
        "tmp%2#0",
        "tmp%4#0"
      ]
    },
    "3280": {
      "error": "application log value is not the result of an ABI return",
      "op": "assert // application log value is not the result of an ABI return",
      "stack_out": [
        "result1#0",
        "tmp%2#0"
      ]
    },
    "3281": {
      "op": "dup",
      "defined_out": [
        "result1#0",
        "result1#0 (copy)"
      ],
      "stack_out": [
        "result1#0",
        "result1#0",
        "result1#0 (copy)"
      ]
    },
    "3282": {
      "op": "frame_bury 0",
      "defined_out": [
        "result1#0"
      ],
      "stack_out": [
        "result1#0",
        "result1#0"
      ]
    },
    "3284": {
      "op": "dup",
      "stack_out": [
        "result1#0",
        "result1#0",
        "result1#0 (copy)"
      ]
    },
    "3285": {
      "op": "intc_0 // 0",
      "stack_out": [
        "result1#0",
        "result1#0",
        "result1#0 (copy)",
        "0"
      ]
    },
    "3286": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%extract_uint16%0#0",
        "result1#0"
      ],
      "stack_out": [
        "result1#0",
        "result1#0",
        "aggregate%extract_uint16%0#0"
      ]
    },
    "3287": {
      "op": "cover 1",
      "stack_out": [
        "result1#0",
        "aggregate%extract_uint16%0#0",
        "result1#0"
      ]
    },
    "3289": {
      "op": "dup",
      "stack_out": [
        "result1#0",
        "aggregate%extract_uint16%0#0",
        "result1#0",
        "result1#0 (copy)"
      ]
    },
    "3290": {
      "op": "intc_3 // 2",
      "defined_out": [
        "2",
        "aggregate%extract_uint16%0#0",
        "result1#0",
        "result1#0 (copy)"
      ],
      "stack_out": [
        "result1#0",
        "aggregate%extract_uint16%0#0",
        "result1#0",
        "result1#0 (copy)",
        "2"
      ]
    },
    "3291": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%extract_uint16%0#0",
        "aggregate%extract_uint16%1#0",
        "result1#0"
      ],
      "stack_out": [
        "result1#0",
        "aggregate%extract_uint16%0#0",
        "result1#0",
        "aggregate%extract_uint16%1#0"
      ]
    },
    "3292": {
      "op": "dig 1",
      "stack_out": [
        "result1#0",
        "aggregate%extract_uint16%0#0",
        "result1#0",
        "aggregate%extract_uint16%1#0",
        "result1#0 (copy)"
      ]
    },
    "3294": {
      "op": "uncover 3",
      "stack_out": [
        "result1#0",
        "result1#0",
        "aggregate%extract_uint16%1#0",
        "result1#0 (copy)",
        "aggregate%extract_uint16%0#0"
      ]
    },
    "3296": {
      "op": "uncover 2",
      "stack_out": [
        "result1#0",
        "result1#0",
        "result1#0 (copy)",
        "aggregate%extract_uint16%0#0",
        "aggregate%extract_uint16%1#0"
      ]
    },
    "3298": {
      "op": "substring3",
      "defined_out": [
        "aggregate%substring3%0#0",
        "result1#0"
      ],
      "stack_out": [
        "result1#0",
        "result1#0",
        "aggregate%substring3%0#0"
      ]
    },
    "3299": {
      "op": "cover 1",
      "stack_out": [
        "result1#0",
        "aggregate%substring3%0#0",
        "result1#0"
      ]
    },
    "3301": {
      "op": "dup",
      "stack_out": [
        "result1#0",
        "aggregate%substring3%0#0",
        "result1#0",
        "result1#0 (copy)"
      ]
    },
    "3302": {
      "op": "intc_3 // 2",
      "stack_out": [
        "result1#0",
        "aggregate%substring3%0#0",
        "result1#0",
        "result1#0 (copy)",
        "2"
      ]
    },
    "3303": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%extract_uint16%2#0",
        "aggregate%substring3%0#0",
        "result1#0"
      ],
      "stack_out": [
        "result1#0",
        "aggregate%substring3%0#0",
        "result1#0",
        "aggregate%extract_uint16%2#0"
      ]
    },
    "3304": {
      "op": "cover 1",
      "stack_out": [
        "result1#0",
        "aggregate%substring3%0#0",
        "aggregate%extract_uint16%2#0",
        "result1#0"
      ]
    },
    "3306": {
      "op": "dup",
      "stack_out": [
        "result1#0",
        "aggregate%substring3%0#0",
        "aggregate%extract_uint16%2#0",
        "result1#0",
        "result1#0 (copy)"
      ]
    },
    "3307": {
      "op": "len",
      "defined_out": [
        "aggregate%extract_uint16%2#0",
        "aggregate%len%0#0",
        "aggregate%substring3%0#0",
        "result1#0"
      ],
      "stack_out": [
        "result1#0",
        "aggregate%substring3%0#0",
        "aggregate%extract_uint16%2#0",
        "result1#0",
        "aggregate%len%0#0"
      ]
    },
    "3308": {
      "op": "cover 1",
      "stack_out": [
        "result1#0",
        "aggregate%substring3%0#0",
        "aggregate%extract_uint16%2#0",
        "aggregate%len%0#0",
        "result1#0"
      ]
    },
    "3310": {
      "op": "dup",
      "stack_out": [
        "result1#0",
        "aggregate%substring3%0#0",
        "aggregate%extract_uint16%2#0",
        "aggregate%len%0#0",
        "result1#0",
        "result1#0 (copy)"
      ]
    },
    "3311": {
      "op": "uncover 3",
      "stack_out": [
        "result1#0",
        "aggregate%substring3%0#0",
        "aggregate%len%0#0",
        "result1#0",
        "result1#0 (copy)",
        "aggregate%extract_uint16%2#0"
      ]
    },
    "3313": {
      "op": "uncover 3",
      "stack_out": [
        "result1#0",
        "aggregate%substring3%0#0",
        "result1#0",
        "result1#0 (copy)",
        "aggregate%extract_uint16%2#0",
        "aggregate%len%0#0"
      ]
    },
    "3315": {
      "op": "substring3",
      "defined_out": [
        "aggregate%substring3%0#0",
        "aggregate%substring3%1#0",
        "result1#0"
      ],
      "stack_out": [
        "result1#0",
        "aggregate%substring3%0#0",
        "result1#0",
        "aggregate%substring3%1#0"
      ]
    },
    "3316": {
      "op": "cover 1",
      "stack_out": [
        "result1#0",
        "aggregate%substring3%0#0",
        "aggregate%substring3%1#0",
        "result1#0"
      ]
    },
    "3318": {
      "op": "dup",
      "stack_out": [
        "result1#0",
        "aggregate%substring3%0#0",
        "aggregate%substring3%1#0",
        "result1#0",
        "result1#0 (copy)"
      ]
    },
    "3319": {
      "op": "pushint 4 // 4",
      "defined_out": [
        "4",
        "aggregate%substring3%0#0",
        "aggregate%substring3%1#0",
        "result1#0",
        "result1#0 (copy)"
      ],
      "stack_out": [
        "result1#0",
        "aggregate%substring3%0#0",
        "aggregate%substring3%1#0",
        "result1#0",
        "result1#0 (copy)",
        "4"
      ]
    },
    "3321": {
      "op": "intc_2 // 8",
      "defined_out": [
        "4",
        "8",
        "aggregate%substring3%0#0",
        "aggregate%substring3%1#0",
        "result1#0",
        "result1#0 (copy)"
      ],
      "stack_out": [
        "result1#0",
        "aggregate%substring3%0#0",
        "aggregate%substring3%1#0",
        "result1#0",
        "result1#0 (copy)",
        "4",
        "8"
      ]
    },
    "3322": {
      "op": "extract3",
      "defined_out": [
        "aggregate%extract%0#0",
        "aggregate%substring3%0#0",
        "aggregate%substring3%1#0",
        "result1#0"
      ],
      "stack_out": [
        "result1#0",
        "aggregate%substring3%0#0",
        "aggregate%substring3%1#0",
        "result1#0",
        "aggregate%extract%0#0"
      ]
    },
    "3323": {
      "op": "cover 1",
      "stack_out": [
        "result1#0",
        "aggregate%substring3%0#0",
        "aggregate%substring3%1#0",
        "aggregate%extract%0#0",
        "result1#0"
      ]
    },
    "3325": {
      "op": "pushint 12 // 12",
      "defined_out": [
        "12",
        "aggregate%extract%0#0",
        "aggregate%substring3%0#0",
        "aggregate%substring3%1#0",
        "result1#0"
      ],
      "stack_out": [
        "result1#0",
        "aggregate%substring3%0#0",
        "aggregate%substring3%1#0",
        "aggregate%extract%0#0",
        "result1#0",
        "12"
      ]
    },
    "3327": {
      "op": "pushint 64 // 64",
      "defined_out": [
        "12",
        "64",
        "aggregate%extract%0#0",
        "aggregate%substring3%0#0",
        "aggregate%substring3%1#0",
        "result1#0"
      ],
      "stack_out": [
        "result1#0",
        "aggregate%substring3%0#0",
        "aggregate%substring3%1#0",
        "aggregate%extract%0#0",
        "result1#0",
        "12",
        "64"
      ]
    },
    "3329": {
      "op": "extract3",
      "defined_out": [
        "aggregate%extract%0#0",
        "aggregate%extract%1#0",
        "aggregate%substring3%0#0",
        "aggregate%substring3%1#0",
        "result1#0"
      ],
      "stack_out": [
        "result1#0",
        "aggregate%substring3%0#0",
        "aggregate%substring3%1#0",
        "aggregate%extract%0#0",
        "aggregate%extract%1#0"
      ]
    },
    "3330": {
      "op": "uncover 3",
      "stack_out": [
        "result1#0",
        "aggregate%substring3%1#0",
        "aggregate%extract%0#0",
        "aggregate%extract%1#0",
        "aggregate%substring3%0#0"
      ]
    },
    "3332": {
      "op": "cover 1",
      "defined_out": [
        "aggregate%extract%0#0",
        "aggregate%extract%1#0",
        "aggregate%substring3%1#0",
        "result1#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "result1#0",
        "aggregate%substring3%1#0",
        "aggregate%extract%0#0",
        "tmp%5#0",
        "aggregate%extract%1#0"
      ]
    },
    "3334": {
      "op": "uncover 3",
      "stack_out": [
        "result1#0",
        "aggregate%extract%0#0",
        "tmp%5#0",
        "aggregate%extract%1#0",
        "aggregate%substring3%1#0"
      ]
    },
    "3336": {
      "op": "cover 2",
      "defined_out": [
        "aggregate%extract%1#0",
        "result1#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "result1#0",
        "tmp%7#0",
        "tmp%6#0",
        "tmp%5#0",
        "aggregate%extract%1#0"
      ]
    },
    "3338": {
      "op": "cover 3",
      "defined_out": [
        "result1#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "result1#0",
        "tmp%8#0",
        "tmp%7#0",
        "tmp%6#0",
        "tmp%5#0"
      ]
    },
    "3340": {
      "op": "cover 3",
      "defined_out": [
        "result1#0",
        "s#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "result1#0",
        "s#0",
        "tmp%8#0",
        "tmp%7#0",
        "tmp%6#0"
      ]
    },
    "3342": {
      "op": "cover 3",
      "defined_out": [
        "b#0",
        "result1#0",
        "s#0",
        "tmp%7#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "result1#0",
        "b#0",
        "s#0",
        "tmp%8#0",
        "tmp%7#0"
      ]
    },
    "3344": {
      "op": "cover 3",
      "defined_out": [
        "b#0",
        "result1#0",
        "s#0",
        "tmp%8#0",
        "u#0"
      ],
      "stack_out": [
        "result1#0",
        "u#0",
        "b#0",
        "s#0",
        "tmp%8#0"
      ]
    },
    "3346": {
      "op": "cover 3",
      "defined_out": [
        "b#0",
        "bu#0",
        "result1#0",
        "s#0",
        "u#0"
      ],
      "stack_out": [
        "result1#0",
        "bu#0",
        "u#0",
        "b#0",
        "s#0"
      ]
    },
    "3348": {
      "op": "extract 2 0",
      "defined_out": [
        "b#0",
        "bu#0",
        "result1#0",
        "tmp%9#0",
        "u#0"
      ],
      "stack_out": [
        "result1#0",
        "bu#0",
        "u#0",
        "b#0",
        "tmp%9#0"
      ]
    },
    "3351": {
      "op": "bytec 17 // \"echo: s1\"",
      "defined_out": [
        "\"echo: s1\"",
        "b#0",
        "bu#0",
        "result1#0",
        "tmp%9#0",
        "u#0"
      ],
      "stack_out": [
        "result1#0",
        "bu#0",
        "u#0",
        "b#0",
        "tmp%9#0",
        "\"echo: s1\""
      ]
    },
    "3353": {
      "op": "==",
      "defined_out": [
        "b#0",
        "bu#0",
        "result1#0",
        "tmp%10#0",
        "u#0"
      ],
      "stack_out": [
        "result1#0",
        "bu#0",
        "u#0",
        "b#0",
        "tmp%10#0"
      ]
    },
    "3354": {
      "op": "assert",
      "stack_out": [
        "result1#0",
        "bu#0",
        "u#0",
        "b#0"
      ]
    },
    "3355": {
      "op": "extract 2 0",
      "defined_out": [
        "bu#0",
        "result1#0",
        "tmp%11#0",
        "u#0"
      ],
      "stack_out": [
        "result1#0",
        "bu#0",
        "u#0",
        "tmp%11#0"
      ]
    },
    "3358": {
      "op": "bytec 55 // 0x6563686f3a206231",
      "defined_out": [
        "0x6563686f3a206231",
        "bu#0",
        "result1#0",
        "tmp%11#0",
        "u#0"
      ],
      "stack_out": [
        "result1#0",
        "bu#0",
        "u#0",
        "tmp%11#0",
        "0x6563686f3a206231"
      ]
    },
    "3360": {
      "op": "==",
      "defined_out": [
        "bu#0",
        "result1#0",
        "tmp%12#0",
        "u#0"
      ],
      "stack_out": [
        "result1#0",
        "bu#0",
        "u#0",
        "tmp%12#0"
      ]
    },
    "3361": {
      "op": "assert",
      "stack_out": [
        "result1#0",
        "bu#0",
        "u#0"
      ]
    },
    "3362": {
      "op": "btoi",
      "defined_out": [
        "bu#0",
        "result1#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "result1#0",
        "bu#0",
        "tmp%13#0"
      ]
    },
    "3363": {
      "op": "intc_3 // 2",
      "stack_out": [
        "result1#0",
        "bu#0",
        "tmp%13#0",
        "2"
      ]
    },
    "3364": {
      "op": "==",
      "defined_out": [
        "bu#0",
        "result1#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "result1#0",
        "bu#0",
        "tmp%14#0"
      ]
    },
    "3365": {
      "op": "assert",
      "defined_out": [
        "result1#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "result1#0",
        "tmp%15#0"
      ]
    },
    "3366": {
      "op": "bytec 32 // 0x03",
      "defined_out": [
        "0x03",
        "result1#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "result1#0",
        "tmp%15#0",
        "0x03"
      ]
    },
    "3368": {
      "op": "b==",
      "defined_out": [
        "result1#0",
        "tmp%16#0"
      ],
      "stack_out": [
        "result1#0",
        "tmp%16#0"
      ]
    },
    "3369": {
      "op": "assert",
      "stack_out": [
        "result1#0"
      ]
    },
    "3370": {
      "op": "itxn_begin"
    },
    "3371": {
      "op": "bytec_1 // \"s1\"",
      "defined_out": [
        "\"s1\"",
        "result1#0"
      ],
      "stack_out": [
        "result1#0",
        "\"s1\""
      ]
    },
    "3372": {
      "op": "len",
      "defined_out": [
        "aggregate%length%2#0",
        "result1#0"
      ],
      "stack_out": [
        "result1#0",
        "aggregate%length%2#0"
      ]
    },
    "3373": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%2#0",
        "result1#0"
      ],
      "stack_out": [
        "result1#0",
        "aggregate%as_bytes%2#0"
      ]
    },
    "3374": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%length_uint16%2#0",
        "result1#0"
      ],
      "stack_out": [
        "result1#0",
        "aggregate%length_uint16%2#0"
      ]
    },
    "3377": {
      "op": "bytec_1 // \"s1\"",
      "stack_out": [
        "result1#0",
        "aggregate%length_uint16%2#0",
        "\"s1\""
      ]
    },
    "3378": {
      "op": "concat",
      "defined_out": [
        "result1#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "result1#0",
        "tmp%17#0"
      ]
    },
    "3379": {
      "op": "bytec_3 // 0x6231",
      "defined_out": [
        "0x6231",
        "result1#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "result1#0",
        "tmp%17#0",
        "0x6231"
      ]
    },
    "3380": {
      "op": "len",
      "defined_out": [
        "aggregate%length%3#0",
        "result1#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "result1#0",
        "tmp%17#0",
        "aggregate%length%3#0"
      ]
    },
    "3381": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%3#0",
        "result1#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "result1#0",
        "tmp%17#0",
        "aggregate%as_bytes%3#0"
      ]
    },
    "3382": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%length_uint16%3#0",
        "result1#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "result1#0",
        "tmp%17#0",
        "aggregate%length_uint16%3#0"
      ]
    },
    "3385": {
      "op": "bytec_3 // 0x6231",
      "stack_out": [
        "result1#0",
        "tmp%17#0",
        "aggregate%length_uint16%3#0",
        "0x6231"
      ]
    },
    "3386": {
      "op": "concat",
      "defined_out": [
        "result1#0",
        "tmp%17#0",
        "tmp%18#0"
      ],
      "stack_out": [
        "result1#0",
        "tmp%17#0",
        "tmp%18#0"
      ]
    },
    "3387": {
      "op": "pushint 1 // 1",
      "stack_out": [
        "result1#0",
        "tmp%17#0",
        "tmp%18#0",
        "1"
      ]
    },
    "3389": {
      "op": "itob",
      "defined_out": [
        "result1#0",
        "tmp%17#0",
        "tmp%18#0",
        "tmp%19#0"
      ],
      "stack_out": [
        "result1#0",
        "tmp%17#0",
        "tmp%18#0",
        "tmp%19#0"
      ]
    },
    "3390": {
      "op": "bytec 11 // 0x02",
      "defined_out": [
        "0x02",
        "result1#0",
        "tmp%17#0",
        "tmp%18#0",
        "tmp%19#0"
      ],
      "stack_out": [
        "result1#0",
        "tmp%17#0",
        "tmp%18#0",
        "tmp%19#0",
        "0x02"
      ]
    },
    "3392": {
      "op": "len",
      "defined_out": [
        "aggregate%value_len%0#0",
        "result1#0",
        "tmp%17#0",
        "tmp%18#0",
        "tmp%19#0"
      ],
      "stack_out": [
        "result1#0",
        "tmp%17#0",
        "tmp%18#0",
        "tmp%19#0",
        "aggregate%value_len%0#0"
      ]
    },
    "3393": {
      "op": "pushint 64 // 64",
      "stack_out": [
        "result1#0",
        "tmp%17#0",
        "tmp%18#0",
        "tmp%19#0",
        "aggregate%value_len%0#0",
        "64"
      ]
    },
    "3395": {
      "op": "<=",
      "defined_out": [
        "aggregate%len_ok%0#0",
        "result1#0",
        "tmp%17#0",
        "tmp%18#0",
        "tmp%19#0"
      ],
      "stack_out": [
        "result1#0",
        "tmp%17#0",
        "tmp%18#0",
        "tmp%19#0",
        "aggregate%len_ok%0#0"
      ]
    },
    "3396": {
      "error": "overflow",
      "op": "assert // overflow",
      "stack_out": [
        "result1#0",
        "tmp%17#0",
        "tmp%18#0",
        "tmp%19#0"
      ]
    },
    "3397": {
      "op": "pushint 64 // 64",
      "stack_out": [
        "result1#0",
        "tmp%17#0",
        "tmp%18#0",
        "tmp%19#0",
        "64"
      ]
    },
    "3399": {
      "op": "bzero",
      "defined_out": [
        "aggregate%bzero%0#0",
        "result1#0",
        "tmp%17#0",
        "tmp%18#0",
        "tmp%19#0"
      ],
      "stack_out": [
        "result1#0",
        "tmp%17#0",
        "tmp%18#0",
        "tmp%19#0",
        "aggregate%bzero%0#0"
      ]
    },
    "3400": {
      "op": "bytec 11 // 0x02",
      "stack_out": [
        "result1#0",
        "tmp%17#0",
        "tmp%18#0",
        "tmp%19#0",
        "aggregate%bzero%0#0",
        "0x02"
      ]
    },
    "3402": {
      "op": "b|",
      "defined_out": [
        "result1#0",
        "tmp%17#0",
        "tmp%18#0",
        "tmp%19#0",
        "tmp%20#0"
      ],
      "stack_out": [
        "result1#0",
        "tmp%17#0",
        "tmp%18#0",
        "tmp%19#0",
        "tmp%20#0"
      ]
    },
    "3403": {
      "op": "uncover 3",
      "stack_out": [
        "result1#0",
        "tmp%18#0",
        "tmp%19#0",
        "tmp%20#0",
        "tmp%17#0"
      ]
    },
    "3405": {
      "op": "cover 1",
      "defined_out": [
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0",
        "result1#0",
        "tmp%18#0",
        "tmp%19#0",
        "tmp%20#0"
      ],
      "stack_out": [
        "result1#0",
        "tmp%18#0",
        "tmp%19#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0",
        "tmp%20#0"
      ]
    },
    "3407": {
      "op": "uncover 3",
      "stack_out": [
        "result1#0",
        "tmp%19#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0",
        "tmp%20#0",
        "tmp%18#0"
      ]
    },
    "3409": {
      "op": "cover 2",
      "defined_out": [
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_2#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_3#0",
        "result1#0",
        "tmp%20#0"
      ],
      "stack_out": [
        "result1#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_3#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_2#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0",
        "tmp%20#0"
      ]
    },
    "3411": {
      "op": "cover 3",
      "defined_out": [
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_2#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_3#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_4#0",
        "result1#0"
      ],
      "stack_out": [
        "result1#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_4#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_3#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_2#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "3413": {
      "op": "frame_dig -1",
      "defined_out": [
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_2#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_3#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_4#0",
        "inner_txn_params%1%%param_ApplicationID_idx_0#0",
        "result1#0"
      ],
      "stack_out": [
        "result1#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_4#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_3#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_2#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%1%%param_ApplicationID_idx_0#0"
      ]
    },
    "3415": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "result1#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_4#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_3#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_2#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "3417": {
      "op": "bytec 7 // method \"echo_native_tuple(string,byte[],uint64,uint512)(string,byte[],uint64,uint512)\"",
      "defined_out": [
        "Method(echo_native_tuple(string,byte[],uint64,uint512)(string,byte[],uint64,uint512))",
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_2#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_3#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_4#0",
        "result1#0"
      ],
      "stack_out": [
        "result1#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_4#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_3#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_2#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0",
        "Method(echo_native_tuple(string,byte[],uint64,uint512)(string,byte[],uint64,uint512))"
      ]
    },
    "3419": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "result1#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_4#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_3#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_2#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "3421": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "result1#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_4#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_3#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_2#0"
      ]
    },
    "3423": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "result1#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_4#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_3#0"
      ]
    },
    "3425": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "result1#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_4#0"
      ]
    },
    "3427": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "result1#0"
      ]
    },
    "3429": {
      "op": "intc_1 // appl",
      "defined_out": [
        "appl",
        "result1#0"
      ],
      "stack_out": [
        "result1#0",
        "appl"
      ]
    },
    "3430": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "result1#0"
      ]
    },
    "3432": {
      "op": "intc_0 // 0",
      "stack_out": [
        "result1#0",
        "0"
      ]
    },
    "3433": {
      "op": "itxn_field Fee",
      "stack_out": [
        "result1#0"
      ]
    },
    "3435": {
      "op": "b test_cases.typed_abi_call.typed_c2c.Greeter.test_native_tuple_next_txn@2"
    },
    "3438": {
      "block": "test_cases.typed_abi_call.typed_c2c.Greeter.test_native_tuple_next_txn@2",
      "stack_in": [
        "result1#0"
      ],
      "op": "itxn_submit"
    },
    "3439": {
      "op": "itxn LastLog",
      "defined_out": [
        "awst_tmp%1#0"
      ],
      "stack_out": [
        "result1#0",
        "awst_tmp%1#0"
      ]
    },
    "3441": {
      "op": "dup",
      "defined_out": [
        "awst_tmp%1#0",
        "awst_tmp%1#0 (copy)"
      ],
      "stack_out": [
        "result1#0",
        "awst_tmp%1#0",
        "awst_tmp%1#0 (copy)"
      ]
    },
    "3442": {
      "op": "extract 4 0",
      "defined_out": [
        "awst_tmp%1#0",
        "tmp%21#0"
      ],
      "stack_out": [
        "result1#0",
        "awst_tmp%1#0",
        "tmp%21#0"
      ]
    },
    "3445": {
      "op": "cover 1",
      "stack_out": [
        "result1#0",
        "tmp%21#0",
        "awst_tmp%1#0"
      ]
    },
    "3447": {
      "op": "extract 0 4",
      "defined_out": [
        "tmp%21#0",
        "tmp%22#0"
      ],
      "stack_out": [
        "result1#0",
        "tmp%21#0",
        "tmp%22#0"
      ]
    },
    "3450": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%21#0",
        "tmp%22#0"
      ],
      "stack_out": [
        "result1#0",
        "tmp%21#0",
        "tmp%22#0",
        "0x151f7c75"
      ]
    },
    "3451": {
      "op": "==",
      "defined_out": [
        "tmp%21#0",
        "tmp%23#0"
      ],
      "stack_out": [
        "result1#0",
        "tmp%21#0",
        "tmp%23#0"
      ]
    },
    "3452": {
      "error": "application log value is not the result of an ABI return",
      "op": "assert // application log value is not the result of an ABI return",
      "defined_out": [
        "result2#0"
      ],
      "stack_out": [
        "result1#0",
        "result2#0"
      ]
    },
    "3453": {
      "op": "frame_dig 0",
      "defined_out": [
        "result1#0",
        "result2#0"
      ],
      "stack_out": [
        "result1#0",
        "result2#0",
        "result1#0"
      ]
    },
    "3455": {
      "op": "==",
      "defined_out": [
        "result1#0",
        "tmp%24#0"
      ],
      "stack_out": [
        "result1#0",
        "tmp%24#0"
      ]
    },
    "3456": {
      "op": "assert",
      "stack_out": [
        "result1#0"
      ]
    },
    "3457": {
      "op": "itxn_begin"
    },
    "3458": {
      "op": "bytec_1 // \"s1\"",
      "defined_out": [
        "\"s1\"",
        "result1#0"
      ],
      "stack_out": [
        "result1#0",
        "\"s1\""
      ]
    },
    "3459": {
      "op": "len",
      "defined_out": [
        "aggregate%length%4#0",
        "result1#0"
      ],
      "stack_out": [
        "result1#0",
        "aggregate%length%4#0"
      ]
    },
    "3460": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%4#0",
        "result1#0"
      ],
      "stack_out": [
        "result1#0",
        "aggregate%as_bytes%4#0"
      ]
    },
    "3461": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%length_uint16%4#0",
        "result1#0"
      ],
      "stack_out": [
        "result1#0",
        "aggregate%length_uint16%4#0"
      ]
    },
    "3464": {
      "op": "bytec_1 // \"s1\"",
      "stack_out": [
        "result1#0",
        "aggregate%length_uint16%4#0",
        "\"s1\""
      ]
    },
    "3465": {
      "op": "concat",
      "defined_out": [
        "result1#0",
        "tmp%25#0"
      ],
      "stack_out": [
        "result1#0",
        "tmp%25#0"
      ]
    },
    "3466": {
      "op": "bytec_3 // 0x6231",
      "defined_out": [
        "0x6231",
        "result1#0",
        "tmp%25#0"
      ],
      "stack_out": [
        "result1#0",
        "tmp%25#0",
        "0x6231"
      ]
    },
    "3467": {
      "op": "len",
      "defined_out": [
        "aggregate%length%5#0",
        "result1#0",
        "tmp%25#0"
      ],
      "stack_out": [
        "result1#0",
        "tmp%25#0",
        "aggregate%length%5#0"
      ]
    },
    "3468": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%5#0",
        "result1#0",
        "tmp%25#0"
      ],
      "stack_out": [
        "result1#0",
        "tmp%25#0",
        "aggregate%as_bytes%5#0"
      ]
    },
    "3469": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%length_uint16%5#0",
        "result1#0",
        "tmp%25#0"
      ],
      "stack_out": [
        "result1#0",
        "tmp%25#0",
        "aggregate%length_uint16%5#0"
      ]
    },
    "3472": {
      "op": "bytec_3 // 0x6231",
      "stack_out": [
        "result1#0",
        "tmp%25#0",
        "aggregate%length_uint16%5#0",
        "0x6231"
      ]
    },
    "3473": {
      "op": "concat",
      "defined_out": [
        "inner_txn_params%2%%param_ApplicationArgs_idx_1#0",
        "result1#0",
        "tmp%26#0"
      ],
      "stack_out": [
        "result1#0",
        "inner_txn_params%2%%param_ApplicationArgs_idx_1#0",
        "tmp%26#0"
      ]
    },
    "3474": {
      "op": "cover 1",
      "defined_out": [
        "inner_txn_params%2%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%2%%param_ApplicationArgs_idx_2#0",
        "result1#0"
      ],
      "stack_out": [
        "result1#0",
        "inner_txn_params%2%%param_ApplicationArgs_idx_2#0",
        "inner_txn_params%2%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "3476": {
      "op": "frame_dig -1",
      "defined_out": [
        "inner_txn_params%2%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%2%%param_ApplicationArgs_idx_2#0",
        "inner_txn_params%2%%param_ApplicationID_idx_0#0",
        "result1#0"
      ],
      "stack_out": [
        "result1#0",
        "inner_txn_params%2%%param_ApplicationArgs_idx_2#0",
        "inner_txn_params%2%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%2%%param_ApplicationID_idx_0#0"
      ]
    },
    "3478": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "result1#0",
        "inner_txn_params%2%%param_ApplicationArgs_idx_2#0",
        "inner_txn_params%2%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "3480": {
      "op": "bytec 7 // method \"echo_native_tuple(string,byte[],uint64,uint512)(string,byte[],uint64,uint512)\"",
      "defined_out": [
        "Method(echo_native_tuple(string,byte[],uint64,uint512)(string,byte[],uint64,uint512))",
        "inner_txn_params%2%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%2%%param_ApplicationArgs_idx_2#0",
        "result1#0"
      ],
      "stack_out": [
        "result1#0",
        "inner_txn_params%2%%param_ApplicationArgs_idx_2#0",
        "inner_txn_params%2%%param_ApplicationArgs_idx_1#0",
        "Method(echo_native_tuple(string,byte[],uint64,uint512)(string,byte[],uint64,uint512))"
      ]
    },
    "3482": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "result1#0",
        "inner_txn_params%2%%param_ApplicationArgs_idx_2#0",
        "inner_txn_params%2%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "3484": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "result1#0",
        "inner_txn_params%2%%param_ApplicationArgs_idx_2#0"
      ]
    },
    "3486": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "result1#0"
      ]
    },
    "3488": {
      "op": "bytec 5 // 0x0000000000000001",
      "defined_out": [
        "0x0000000000000001",
        "result1#0"
      ],
      "stack_out": [
        "result1#0",
        "0x0000000000000001"
      ]
    },
    "3490": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "result1#0"
      ]
    },
    "3492": {
      "op": "bytec 6 // 0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002",
      "defined_out": [
        "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002",
        "result1#0"
      ],
      "stack_out": [
        "result1#0",
        "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002"
      ]
    },
    "3494": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "result1#0"
      ]
    },
    "3496": {
      "op": "intc_1 // appl",
      "defined_out": [
        "appl",
        "result1#0"
      ],
      "stack_out": [
        "result1#0",
        "appl"
      ]
    },
    "3497": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "result1#0"
      ]
    },
    "3499": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "result1#0"
      ],
      "stack_out": [
        "result1#0",
        "0"
      ]
    },
    "3500": {
      "op": "itxn_field Fee",
      "stack_out": [
        "result1#0"
      ]
    },
    "3502": {
      "op": "b test_cases.typed_abi_call.typed_c2c.Greeter.test_native_tuple_next_txn@3"
    },
    "3505": {
      "block": "test_cases.typed_abi_call.typed_c2c.Greeter.test_native_tuple_next_txn@3",
      "stack_in": [
        "result1#0"
      ],
      "op": "itxn_submit"
    },
    "3506": {
      "op": "itxn LastLog",
      "defined_out": [
        "awst_tmp%2#0"
      ],
      "stack_out": [
        "result1#0",
        "awst_tmp%2#0"
      ]
    },
    "3508": {
      "op": "dup",
      "defined_out": [
        "awst_tmp%2#0",
        "awst_tmp%2#0 (copy)"
      ],
      "stack_out": [
        "result1#0",
        "awst_tmp%2#0",
        "awst_tmp%2#0 (copy)"
      ]
    },
    "3509": {
      "op": "extract 4 0",
      "defined_out": [
        "awst_tmp%2#0",
        "tmp%27#0"
      ],
      "stack_out": [
        "result1#0",
        "awst_tmp%2#0",
        "tmp%27#0"
      ]
    },
    "3512": {
      "op": "cover 1",
      "stack_out": [
        "result1#0",
        "tmp%27#0",
        "awst_tmp%2#0"
      ]
    },
    "3514": {
      "op": "extract 0 4",
      "defined_out": [
        "tmp%27#0",
        "tmp%28#0"
      ],
      "stack_out": [
        "result1#0",
        "tmp%27#0",
        "tmp%28#0"
      ]
    },
    "3517": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%27#0",
        "tmp%28#0"
      ],
      "stack_out": [
        "result1#0",
        "tmp%27#0",
        "tmp%28#0",
        "0x151f7c75"
      ]
    },
    "3518": {
      "op": "==",
      "defined_out": [
        "tmp%27#0",
        "tmp%29#0"
      ],
      "stack_out": [
        "result1#0",
        "tmp%27#0",
        "tmp%29#0"
      ]
    },
    "3519": {
      "error": "application log value is not the result of an ABI return",
      "op": "assert // application log value is not the result of an ABI return",
      "defined_out": [
        "result3#0"
      ],
      "stack_out": [
        "result1#0",
        "result3#0"
      ]
    },
    "3520": {
      "op": "frame_dig 0",
      "defined_out": [
        "result1#0",
        "result3#0"
      ],
      "stack_out": [
        "result1#0",
        "result3#0",
        "result1#0"
      ]
    },
    "3522": {
      "op": "==",
      "defined_out": [
        "result1#0",
        "tmp%30#0"
      ],
      "stack_out": [
        "result1#0",
        "tmp%30#0"
      ]
    },
    "3523": {
      "op": "assert",
      "stack_out": [
        "result1#0"
      ]
    },
    "3524": {
      "op": "itxn_begin"
    },
    "3525": {
      "op": "bytec_1 // \"s1\"",
      "defined_out": [
        "\"s1\"",
        "result1#0"
      ],
      "stack_out": [
        "result1#0",
        "\"s1\""
      ]
    },
    "3526": {
      "op": "len",
      "defined_out": [
        "aggregate%length%6#0",
        "result1#0"
      ],
      "stack_out": [
        "result1#0",
        "aggregate%length%6#0"
      ]
    },
    "3527": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%6#0",
        "result1#0"
      ],
      "stack_out": [
        "result1#0",
        "aggregate%as_bytes%6#0"
      ]
    },
    "3528": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%length_uint16%6#0",
        "result1#0"
      ],
      "stack_out": [
        "result1#0",
        "aggregate%length_uint16%6#0"
      ]
    },
    "3531": {
      "op": "bytec_1 // \"s1\"",
      "stack_out": [
        "result1#0",
        "aggregate%length_uint16%6#0",
        "\"s1\""
      ]
    },
    "3532": {
      "op": "concat",
      "defined_out": [
        "result1#0",
        "tmp%31#0"
      ],
      "stack_out": [
        "result1#0",
        "tmp%31#0"
      ]
    },
    "3533": {
      "op": "bytec_3 // 0x6231",
      "defined_out": [
        "0x6231",
        "result1#0",
        "tmp%31#0"
      ],
      "stack_out": [
        "result1#0",
        "tmp%31#0",
        "0x6231"
      ]
    },
    "3534": {
      "op": "len",
      "defined_out": [
        "aggregate%length%7#0",
        "result1#0",
        "tmp%31#0"
      ],
      "stack_out": [
        "result1#0",
        "tmp%31#0",
        "aggregate%length%7#0"
      ]
    },
    "3535": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%7#0",
        "result1#0",
        "tmp%31#0"
      ],
      "stack_out": [
        "result1#0",
        "tmp%31#0",
        "aggregate%as_bytes%7#0"
      ]
    },
    "3536": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%length_uint16%7#0",
        "result1#0",
        "tmp%31#0"
      ],
      "stack_out": [
        "result1#0",
        "tmp%31#0",
        "aggregate%length_uint16%7#0"
      ]
    },
    "3539": {
      "op": "bytec_3 // 0x6231",
      "stack_out": [
        "result1#0",
        "tmp%31#0",
        "aggregate%length_uint16%7#0",
        "0x6231"
      ]
    },
    "3540": {
      "op": "concat",
      "defined_out": [
        "inner_txn_params%3%%param_ApplicationArgs_idx_1#0",
        "result1#0",
        "tmp%32#0"
      ],
      "stack_out": [
        "result1#0",
        "inner_txn_params%3%%param_ApplicationArgs_idx_1#0",
        "tmp%32#0"
      ]
    },
    "3541": {
      "op": "cover 1",
      "defined_out": [
        "inner_txn_params%3%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%3%%param_ApplicationArgs_idx_2#0",
        "result1#0"
      ],
      "stack_out": [
        "result1#0",
        "inner_txn_params%3%%param_ApplicationArgs_idx_2#0",
        "inner_txn_params%3%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "3543": {
      "op": "frame_dig -1",
      "defined_out": [
        "inner_txn_params%3%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%3%%param_ApplicationArgs_idx_2#0",
        "inner_txn_params%3%%param_ApplicationID_idx_0#0",
        "result1#0"
      ],
      "stack_out": [
        "result1#0",
        "inner_txn_params%3%%param_ApplicationArgs_idx_2#0",
        "inner_txn_params%3%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%3%%param_ApplicationID_idx_0#0"
      ]
    },
    "3545": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "result1#0",
        "inner_txn_params%3%%param_ApplicationArgs_idx_2#0",
        "inner_txn_params%3%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "3547": {
      "op": "bytec 7 // method \"echo_native_tuple(string,byte[],uint64,uint512)(string,byte[],uint64,uint512)\"",
      "defined_out": [
        "Method(echo_native_tuple(string,byte[],uint64,uint512)(string,byte[],uint64,uint512))",
        "inner_txn_params%3%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%3%%param_ApplicationArgs_idx_2#0",
        "result1#0"
      ],
      "stack_out": [
        "result1#0",
        "inner_txn_params%3%%param_ApplicationArgs_idx_2#0",
        "inner_txn_params%3%%param_ApplicationArgs_idx_1#0",
        "Method(echo_native_tuple(string,byte[],uint64,uint512)(string,byte[],uint64,uint512))"
      ]
    },
    "3549": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "result1#0",
        "inner_txn_params%3%%param_ApplicationArgs_idx_2#0",
        "inner_txn_params%3%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "3551": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "result1#0",
        "inner_txn_params%3%%param_ApplicationArgs_idx_2#0"
      ]
    },
    "3553": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "result1#0"
      ]
    },
    "3555": {
      "op": "bytec 5 // 0x0000000000000001",
      "defined_out": [
        "0x0000000000000001",
        "result1#0"
      ],
      "stack_out": [
        "result1#0",
        "0x0000000000000001"
      ]
    },
    "3557": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "result1#0"
      ]
    },
    "3559": {
      "op": "bytec 6 // 0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002",
      "defined_out": [
        "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002",
        "result1#0"
      ],
      "stack_out": [
        "result1#0",
        "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002"
      ]
    },
    "3561": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "result1#0"
      ]
    },
    "3563": {
      "op": "intc_1 // appl",
      "defined_out": [
        "appl",
        "result1#0"
      ],
      "stack_out": [
        "result1#0",
        "appl"
      ]
    },
    "3564": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "result1#0"
      ]
    },
    "3566": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "result1#0"
      ],
      "stack_out": [
        "result1#0",
        "0"
      ]
    },
    "3567": {
      "op": "itxn_field Fee",
      "stack_out": [
        "result1#0"
      ]
    },
    "3569": {
      "op": "b test_cases.typed_abi_call.typed_c2c.Greeter.test_native_tuple_next_txn@4"
    },
    "3572": {
      "block": "test_cases.typed_abi_call.typed_c2c.Greeter.test_native_tuple_next_txn@4",
      "stack_in": [
        "result1#0"
      ],
      "op": "itxn_submit"
    },
    "3573": {
      "op": "itxn LastLog",
      "defined_out": [
        "awst_tmp%3#0"
      ],
      "stack_out": [
        "result1#0",
        "awst_tmp%3#0"
      ]
    },
    "3575": {
      "op": "dup",
      "defined_out": [
        "awst_tmp%3#0",
        "awst_tmp%3#0 (copy)"
      ],
      "stack_out": [
        "result1#0",
        "awst_tmp%3#0",
        "awst_tmp%3#0 (copy)"
      ]
    },
    "3576": {
      "op": "extract 4 0",
      "defined_out": [
        "awst_tmp%3#0",
        "tmp%33#0"
      ],
      "stack_out": [
        "result1#0",
        "awst_tmp%3#0",
        "tmp%33#0"
      ]
    },
    "3579": {
      "op": "cover 1",
      "stack_out": [
        "result1#0",
        "tmp%33#0",
        "awst_tmp%3#0"
      ]
    },
    "3581": {
      "op": "extract 0 4",
      "defined_out": [
        "tmp%33#0",
        "tmp%34#0"
      ],
      "stack_out": [
        "result1#0",
        "tmp%33#0",
        "tmp%34#0"
      ]
    },
    "3584": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%33#0",
        "tmp%34#0"
      ],
      "stack_out": [
        "result1#0",
        "tmp%33#0",
        "tmp%34#0",
        "0x151f7c75"
      ]
    },
    "3585": {
      "op": "==",
      "defined_out": [
        "tmp%33#0",
        "tmp%35#0"
      ],
      "stack_out": [
        "result1#0",
        "tmp%33#0",
        "tmp%35#0"
      ]
    },
    "3586": {
      "error": "application log value is not the result of an ABI return",
      "op": "assert // application log value is not the result of an ABI return",
      "stack_out": [
        "result1#0",
        "tmp%33#0"
      ]
    },
    "3587": {
      "op": "dup",
      "defined_out": [
        "tmp%33#0",
        "tmp%33#0 (copy)"
      ],
      "stack_out": [
        "result1#0",
        "tmp%33#0",
        "tmp%33#0 (copy)"
      ]
    },
    "3588": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%33#0",
        "tmp%33#0 (copy)"
      ],
      "stack_out": [
        "result1#0",
        "tmp%33#0",
        "tmp%33#0 (copy)",
        "0"
      ]
    },
    "3589": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%extract_uint16%3#0",
        "tmp%33#0"
      ],
      "stack_out": [
        "result1#0",
        "tmp%33#0",
        "aggregate%extract_uint16%3#0"
      ]
    },
    "3590": {
      "op": "cover 1",
      "stack_out": [
        "result1#0",
        "aggregate%extract_uint16%3#0",
        "tmp%33#0"
      ]
    },
    "3592": {
      "op": "dup",
      "stack_out": [
        "result1#0",
        "aggregate%extract_uint16%3#0",
        "tmp%33#0",
        "tmp%33#0 (copy)"
      ]
    },
    "3593": {
      "op": "intc_3 // 2",
      "defined_out": [
        "2",
        "aggregate%extract_uint16%3#0",
        "tmp%33#0",
        "tmp%33#0 (copy)"
      ],
      "stack_out": [
        "result1#0",
        "aggregate%extract_uint16%3#0",
        "tmp%33#0",
        "tmp%33#0 (copy)",
        "2"
      ]
    },
    "3594": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%extract_uint16%3#0",
        "aggregate%extract_uint16%4#0",
        "tmp%33#0"
      ],
      "stack_out": [
        "result1#0",
        "aggregate%extract_uint16%3#0",
        "tmp%33#0",
        "aggregate%extract_uint16%4#0"
      ]
    },
    "3595": {
      "op": "dig 1",
      "stack_out": [
        "result1#0",
        "aggregate%extract_uint16%3#0",
        "tmp%33#0",
        "aggregate%extract_uint16%4#0",
        "tmp%33#0 (copy)"
      ]
    },
    "3597": {
      "op": "uncover 3",
      "stack_out": [
        "result1#0",
        "tmp%33#0",
        "aggregate%extract_uint16%4#0",
        "tmp%33#0 (copy)",
        "aggregate%extract_uint16%3#0"
      ]
    },
    "3599": {
      "op": "uncover 2",
      "stack_out": [
        "result1#0",
        "tmp%33#0",
        "tmp%33#0 (copy)",
        "aggregate%extract_uint16%3#0",
        "aggregate%extract_uint16%4#0"
      ]
    },
    "3601": {
      "op": "substring3",
      "defined_out": [
        "aggregate%substring3%2#0",
        "tmp%33#0"
      ],
      "stack_out": [
        "result1#0",
        "tmp%33#0",
        "aggregate%substring3%2#0"
      ]
    },
    "3602": {
      "op": "extract 2 0",
      "defined_out": [
        "aggregate%item0%0#0",
        "tmp%33#0"
      ],
      "stack_out": [
        "result1#0",
        "tmp%33#0",
        "aggregate%item0%0#0"
      ]
    },
    "3605": {
      "op": "cover 1",
      "stack_out": [
        "result1#0",
        "aggregate%item0%0#0",
        "tmp%33#0"
      ]
    },
    "3607": {
      "op": "dup",
      "stack_out": [
        "result1#0",
        "aggregate%item0%0#0",
        "tmp%33#0",
        "tmp%33#0 (copy)"
      ]
    },
    "3608": {
      "op": "intc_3 // 2",
      "stack_out": [
        "result1#0",
        "aggregate%item0%0#0",
        "tmp%33#0",
        "tmp%33#0 (copy)",
        "2"
      ]
    },
    "3609": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%extract_uint16%5#0",
        "aggregate%item0%0#0",
        "tmp%33#0"
      ],
      "stack_out": [
        "result1#0",
        "aggregate%item0%0#0",
        "tmp%33#0",
        "aggregate%extract_uint16%5#0"
      ]
    },
    "3610": {
      "op": "cover 1",
      "stack_out": [
        "result1#0",
        "aggregate%item0%0#0",
        "aggregate%extract_uint16%5#0",
        "tmp%33#0"
      ]
    },
    "3612": {
      "op": "dup",
      "stack_out": [
        "result1#0",
        "aggregate%item0%0#0",
        "aggregate%extract_uint16%5#0",
        "tmp%33#0",
        "tmp%33#0 (copy)"
      ]
    },
    "3613": {
      "op": "len",
      "defined_out": [
        "aggregate%extract_uint16%5#0",
        "aggregate%item0%0#0",
        "aggregate%len%1#0",
        "tmp%33#0"
      ],
      "stack_out": [
        "result1#0",
        "aggregate%item0%0#0",
        "aggregate%extract_uint16%5#0",
        "tmp%33#0",
        "aggregate%len%1#0"
      ]
    },
    "3614": {
      "op": "cover 1",
      "stack_out": [
        "result1#0",
        "aggregate%item0%0#0",
        "aggregate%extract_uint16%5#0",
        "aggregate%len%1#0",
        "tmp%33#0"
      ]
    },
    "3616": {
      "op": "dup",
      "stack_out": [
        "result1#0",
        "aggregate%item0%0#0",
        "aggregate%extract_uint16%5#0",
        "aggregate%len%1#0",
        "tmp%33#0",
        "tmp%33#0 (copy)"
      ]
    },
    "3617": {
      "op": "uncover 3",
      "stack_out": [
        "result1#0",
        "aggregate%item0%0#0",
        "aggregate%len%1#0",
        "tmp%33#0",
        "tmp%33#0 (copy)",
        "aggregate%extract_uint16%5#0"
      ]
    },
    "3619": {
      "op": "uncover 3",
      "stack_out": [
        "result1#0",
        "aggregate%item0%0#0",
        "tmp%33#0",
        "tmp%33#0 (copy)",
        "aggregate%extract_uint16%5#0",
        "aggregate%len%1#0"
      ]
    },
    "3621": {
      "op": "substring3",
      "defined_out": [
        "aggregate%item0%0#0",
        "aggregate%substring3%3#0",
        "tmp%33#0"
      ],
      "stack_out": [
        "result1#0",
        "aggregate%item0%0#0",
        "tmp%33#0",
        "aggregate%substring3%3#0"
      ]
    },
    "3622": {
      "op": "extract 2 0",
      "defined_out": [
        "aggregate%item0%0#0",
        "aggregate%item1%0#0",
        "tmp%33#0"
      ],
      "stack_out": [
        "result1#0",
        "aggregate%item0%0#0",
        "tmp%33#0",
        "aggregate%item1%0#0"
      ]
    },
    "3625": {
      "op": "cover 1",
      "stack_out": [
        "result1#0",
        "aggregate%item0%0#0",
        "aggregate%item1%0#0",
        "tmp%33#0"
      ]
    },
    "3627": {
      "op": "dup",
      "stack_out": [
        "result1#0",
        "aggregate%item0%0#0",
        "aggregate%item1%0#0",
        "tmp%33#0",
        "tmp%33#0 (copy)"
      ]
    },
    "3628": {
      "op": "pushint 4 // 4",
      "defined_out": [
        "4",
        "aggregate%item0%0#0",
        "aggregate%item1%0#0",
        "tmp%33#0",
        "tmp%33#0 (copy)"
      ],
      "stack_out": [
        "result1#0",
        "aggregate%item0%0#0",
        "aggregate%item1%0#0",
        "tmp%33#0",
        "tmp%33#0 (copy)",
        "4"
      ]
    },
    "3630": {
      "op": "intc_2 // 8",
      "defined_out": [
        "4",
        "8",
        "aggregate%item0%0#0",
        "aggregate%item1%0#0",
        "tmp%33#0",
        "tmp%33#0 (copy)"
      ],
      "stack_out": [
        "result1#0",
        "aggregate%item0%0#0",
        "aggregate%item1%0#0",
        "tmp%33#0",
        "tmp%33#0 (copy)",
        "4",
        "8"
      ]
    },
    "3631": {
      "op": "extract3",
      "defined_out": [
        "aggregate%extract%2#0",
        "aggregate%item0%0#0",
        "aggregate%item1%0#0",
        "tmp%33#0"
      ],
      "stack_out": [
        "result1#0",
        "aggregate%item0%0#0",
        "aggregate%item1%0#0",
        "tmp%33#0",
        "aggregate%extract%2#0"
      ]
    },
    "3632": {
      "op": "btoi",
      "defined_out": [
        "aggregate%item0%0#0",
        "aggregate%item1%0#0",
        "aggregate%item2%0#0",
        "tmp%33#0"
      ],
      "stack_out": [
        "result1#0",
        "aggregate%item0%0#0",
        "aggregate%item1%0#0",
        "tmp%33#0",
        "aggregate%item2%0#0"
      ]
    },
    "3633": {
      "op": "cover 1",
      "stack_out": [
        "result1#0",
        "aggregate%item0%0#0",
        "aggregate%item1%0#0",
        "aggregate%item2%0#0",
        "tmp%33#0"
      ]
    },
    "3635": {
      "op": "pushint 12 // 12",
      "defined_out": [
        "12",
        "aggregate%item0%0#0",
        "aggregate%item1%0#0",
        "aggregate%item2%0#0",
        "tmp%33#0"
      ],
      "stack_out": [
        "result1#0",
        "aggregate%item0%0#0",
        "aggregate%item1%0#0",
        "aggregate%item2%0#0",
        "tmp%33#0",
        "12"
      ]
    },
    "3637": {
      "op": "pushint 64 // 64",
      "defined_out": [
        "12",
        "64",
        "aggregate%item0%0#0",
        "aggregate%item1%0#0",
        "aggregate%item2%0#0",
        "tmp%33#0"
      ],
      "stack_out": [
        "result1#0",
        "aggregate%item0%0#0",
        "aggregate%item1%0#0",
        "aggregate%item2%0#0",
        "tmp%33#0",
        "12",
        "64"
      ]
    },
    "3639": {
      "op": "extract3",
      "defined_out": [
        "aggregate%extract%3#0",
        "aggregate%item0%0#0",
        "aggregate%item1%0#0",
        "aggregate%item2%0#0"
      ],
      "stack_out": [
        "result1#0",
        "aggregate%item0%0#0",
        "aggregate%item1%0#0",
        "aggregate%item2%0#0",
        "aggregate%extract%3#0"
      ]
    },
    "3640": {
      "op": "uncover 3",
      "stack_out": [
        "result1#0",
        "aggregate%item1%0#0",
        "aggregate%item2%0#0",
        "aggregate%extract%3#0",
        "aggregate%item0%0#0"
      ]
    },
    "3642": {
      "op": "cover 1",
      "defined_out": [
        "aggregate%extract%3#0",
        "aggregate%item1%0#0",
        "aggregate%item2%0#0",
        "tmp%36#0"
      ],
      "stack_out": [
        "result1#0",
        "aggregate%item1%0#0",
        "aggregate%item2%0#0",
        "tmp%36#0",
        "aggregate%extract%3#0"
      ]
    },
    "3644": {
      "op": "uncover 3",
      "stack_out": [
        "result1#0",
        "aggregate%item2%0#0",
        "tmp%36#0",
        "aggregate%extract%3#0",
        "aggregate%item1%0#0"
      ]
    },
    "3646": {
      "op": "cover 2",
      "defined_out": [
        "aggregate%extract%3#0",
        "tmp%36#0",
        "tmp%37#0",
        "tmp%38#0"
      ],
      "stack_out": [
        "result1#0",
        "tmp%38#0",
        "tmp%37#0",
        "tmp%36#0",
        "aggregate%extract%3#0"
      ]
    },
    "3648": {
      "op": "cover 3",
      "defined_out": [
        "tmp%36#0",
        "tmp%37#0",
        "tmp%38#0",
        "tmp%39#0"
      ],
      "stack_out": [
        "result1#0",
        "tmp%39#0",
        "tmp%38#0",
        "tmp%37#0",
        "tmp%36#0"
      ]
    },
    "3650": {
      "op": "cover 3",
      "defined_out": [
        "result_native.0#0",
        "tmp%37#0",
        "tmp%38#0",
        "tmp%39#0"
      ],
      "stack_out": [
        "result1#0",
        "result_native.0#0",
        "tmp%39#0",
        "tmp%38#0",
        "tmp%37#0"
      ]
    },
    "3652": {
      "op": "cover 3",
      "defined_out": [
        "result_native.0#0",
        "result_native.1#0",
        "tmp%38#0",
        "tmp%39#0"
      ],
      "stack_out": [
        "result1#0",
        "result_native.1#0",
        "result_native.0#0",
        "tmp%39#0",
        "tmp%38#0"
      ]
    },
    "3654": {
      "op": "cover 3",
      "defined_out": [
        "result_native.0#0",
        "result_native.1#0",
        "result_native.2#0",
        "tmp%39#0"
      ],
      "stack_out": [
        "result1#0",
        "result_native.2#0",
        "result_native.1#0",
        "result_native.0#0",
        "tmp%39#0"
      ]
    },
    "3656": {
      "op": "cover 3",
      "defined_out": [
        "result_native.0#0",
        "result_native.1#0",
        "result_native.2#0",
        "result_native.3#0"
      ],
      "stack_out": [
        "result1#0",
        "result_native.3#0",
        "result_native.2#0",
        "result_native.1#0",
        "result_native.0#0"
      ]
    },
    "3658": {
      "op": "frame_dig 0",
      "defined_out": [
        "result1#0",
        "result_native.0#0",
        "result_native.1#0",
        "result_native.2#0",
        "result_native.3#0"
      ],
      "stack_out": [
        "result1#0",
        "result_native.3#0",
        "result_native.2#0",
        "result_native.1#0",
        "result_native.0#0",
        "result1#0"
      ]
    },
    "3660": {
      "op": "dup",
      "defined_out": [
        "result1#0",
        "result1#0 (copy)",
        "result_native.0#0",
        "result_native.1#0",
        "result_native.2#0",
        "result_native.3#0"
      ],
      "stack_out": [
        "result1#0",
        "result_native.3#0",
        "result_native.2#0",
        "result_native.1#0",
        "result_native.0#0",
        "result1#0",
        "result1#0 (copy)"
      ]
    },
    "3661": {
      "op": "intc_0 // 0",
      "stack_out": [
        "result1#0",
        "result_native.3#0",
        "result_native.2#0",
        "result_native.1#0",
        "result_native.0#0",
        "result1#0",
        "result1#0 (copy)",
        "0"
      ]
    },
    "3662": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%extract_uint16%6#0",
        "result1#0",
        "result_native.0#0",
        "result_native.1#0",
        "result_native.2#0",
        "result_native.3#0"
      ],
      "stack_out": [
        "result1#0",
        "result_native.3#0",
        "result_native.2#0",
        "result_native.1#0",
        "result_native.0#0",
        "result1#0",
        "aggregate%extract_uint16%6#0"
      ]
    },
    "3663": {
      "op": "cover 1",
      "stack_out": [
        "result1#0",
        "result_native.3#0",
        "result_native.2#0",
        "result_native.1#0",
        "result_native.0#0",
        "aggregate%extract_uint16%6#0",
        "result1#0"
      ]
    },
    "3665": {
      "op": "dup",
      "stack_out": [
        "result1#0",
        "result_native.3#0",
        "result_native.2#0",
        "result_native.1#0",
        "result_native.0#0",
        "aggregate%extract_uint16%6#0",
        "result1#0",
        "result1#0 (copy)"
      ]
    },
    "3666": {
      "op": "intc_3 // 2",
      "stack_out": [
        "result1#0",
        "result_native.3#0",
        "result_native.2#0",
        "result_native.1#0",
        "result_native.0#0",
        "aggregate%extract_uint16%6#0",
        "result1#0",
        "result1#0 (copy)",
        "2"
      ]
    },
    "3667": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%extract_uint16%6#0",
        "aggregate%extract_uint16%7#0",
        "result1#0",
        "result_native.0#0",
        "result_native.1#0",
        "result_native.2#0",
        "result_native.3#0"
      ],
      "stack_out": [
        "result1#0",
        "result_native.3#0",
        "result_native.2#0",
        "result_native.1#0",
        "result_native.0#0",
        "aggregate%extract_uint16%6#0",
        "result1#0",
        "aggregate%extract_uint16%7#0"
      ]
    },
    "3668": {
      "op": "dig 1",
      "stack_out": [
        "result1#0",
        "result_native.3#0",
        "result_native.2#0",
        "result_native.1#0",
        "result_native.0#0",
        "aggregate%extract_uint16%6#0",
        "result1#0",
        "aggregate%extract_uint16%7#0",
        "result1#0 (copy)"
      ]
    },
    "3670": {
      "op": "uncover 3",
      "stack_out": [
        "result1#0",
        "result_native.3#0",
        "result_native.2#0",
        "result_native.1#0",
        "result_native.0#0",
        "result1#0",
        "aggregate%extract_uint16%7#0",
        "result1#0 (copy)",
        "aggregate%extract_uint16%6#0"
      ]
    },
    "3672": {
      "op": "uncover 2",
      "stack_out": [
        "result1#0",
        "result_native.3#0",
        "result_native.2#0",
        "result_native.1#0",
        "result_native.0#0",
        "result1#0",
        "result1#0 (copy)",
        "aggregate%extract_uint16%6#0",
        "aggregate%extract_uint16%7#0"
      ]
    },
    "3674": {
      "op": "substring3",
      "defined_out": [
        "result1#0",
        "result_native.0#0",
        "result_native.1#0",
        "result_native.2#0",
        "result_native.3#0",
        "tmp%40#0"
      ],
      "stack_out": [
        "result1#0",
        "result_native.3#0",
        "result_native.2#0",
        "result_native.1#0",
        "result_native.0#0",
        "result1#0",
        "tmp%40#0"
      ]
    },
    "3675": {
      "op": "extract 2 0",
      "defined_out": [
        "result1#0",
        "result_native.0#0",
        "result_native.1#0",
        "result_native.2#0",
        "result_native.3#0",
        "tmp%44#0"
      ],
      "stack_out": [
        "result1#0",
        "result_native.3#0",
        "result_native.2#0",
        "result_native.1#0",
        "result_native.0#0",
        "result1#0",
        "tmp%44#0"
      ]
    },
    "3678": {
      "op": "uncover 2",
      "stack_out": [
        "result1#0",
        "result_native.3#0",
        "result_native.2#0",
        "result_native.1#0",
        "result1#0",
        "tmp%44#0",
        "result_native.0#0"
      ]
    },
    "3680": {
      "op": "==",
      "defined_out": [
        "result1#0",
        "result_native.1#0",
        "result_native.2#0",
        "result_native.3#0",
        "tmp%45#0"
      ],
      "stack_out": [
        "result1#0",
        "result_native.3#0",
        "result_native.2#0",
        "result_native.1#0",
        "result1#0",
        "tmp%45#0"
      ]
    },
    "3681": {
      "op": "assert",
      "stack_out": [
        "result1#0",
        "result_native.3#0",
        "result_native.2#0",
        "result_native.1#0",
        "result1#0"
      ]
    },
    "3682": {
      "op": "dup",
      "stack_out": [
        "result1#0",
        "result_native.3#0",
        "result_native.2#0",
        "result_native.1#0",
        "result1#0",
        "result1#0 (copy)"
      ]
    },
    "3683": {
      "op": "intc_3 // 2",
      "stack_out": [
        "result1#0",
        "result_native.3#0",
        "result_native.2#0",
        "result_native.1#0",
        "result1#0",
        "result1#0 (copy)",
        "2"
      ]
    },
    "3684": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%extract_uint16%11#0",
        "result1#0",
        "result_native.1#0",
        "result_native.2#0",
        "result_native.3#0"
      ],
      "stack_out": [
        "result1#0",
        "result_native.3#0",
        "result_native.2#0",
        "result_native.1#0",
        "result1#0",
        "aggregate%extract_uint16%11#0"
      ]
    },
    "3685": {
      "op": "cover 1",
      "stack_out": [
        "result1#0",
        "result_native.3#0",
        "result_native.2#0",
        "result_native.1#0",
        "aggregate%extract_uint16%11#0",
        "result1#0"
      ]
    },
    "3687": {
      "op": "dup",
      "stack_out": [
        "result1#0",
        "result_native.3#0",
        "result_native.2#0",
        "result_native.1#0",
        "aggregate%extract_uint16%11#0",
        "result1#0",
        "result1#0 (copy)"
      ]
    },
    "3688": {
      "op": "len",
      "defined_out": [
        "aggregate%extract_uint16%11#0",
        "aggregate%len%3#0",
        "result1#0",
        "result_native.1#0",
        "result_native.2#0",
        "result_native.3#0"
      ],
      "stack_out": [
        "result1#0",
        "result_native.3#0",
        "result_native.2#0",
        "result_native.1#0",
        "aggregate%extract_uint16%11#0",
        "result1#0",
        "aggregate%len%3#0"
      ]
    },
    "3689": {
      "op": "cover 1",
      "stack_out": [
        "result1#0",
        "result_native.3#0",
        "result_native.2#0",
        "result_native.1#0",
        "aggregate%extract_uint16%11#0",
        "aggregate%len%3#0",
        "result1#0"
      ]
    },
    "3691": {
      "op": "dup",
      "stack_out": [
        "result1#0",
        "result_native.3#0",
        "result_native.2#0",
        "result_native.1#0",
        "aggregate%extract_uint16%11#0",
        "aggregate%len%3#0",
        "result1#0",
        "result1#0 (copy)"
      ]
    },
    "3692": {
      "op": "uncover 3",
      "stack_out": [
        "result1#0",
        "result_native.3#0",
        "result_native.2#0",
        "result_native.1#0",
        "aggregate%len%3#0",
        "result1#0",
        "result1#0 (copy)",
        "aggregate%extract_uint16%11#0"
      ]
    },
    "3694": {
      "op": "uncover 3",
      "stack_out": [
        "result1#0",
        "result_native.3#0",
        "result_native.2#0",
        "result_native.1#0",
        "result1#0",
        "result1#0 (copy)",
        "aggregate%extract_uint16%11#0",
        "aggregate%len%3#0"
      ]
    },
    "3696": {
      "op": "substring3",
      "defined_out": [
        "result1#0",
        "result_native.1#0",
        "result_native.2#0",
        "result_native.3#0",
        "tmp%47#0"
      ],
      "stack_out": [
        "result1#0",
        "result_native.3#0",
        "result_native.2#0",
        "result_native.1#0",
        "result1#0",
        "tmp%47#0"
      ]
    },
    "3697": {
      "op": "extract 2 0",
      "defined_out": [
        "result1#0",
        "result_native.1#0",
        "result_native.2#0",
        "result_native.3#0",
        "tmp%50#0"
      ],
      "stack_out": [
        "result1#0",
        "result_native.3#0",
        "result_native.2#0",
        "result_native.1#0",
        "result1#0",
        "tmp%50#0"
      ]
    },
    "3700": {
      "op": "uncover 2",
      "stack_out": [
        "result1#0",
        "result_native.3#0",
        "result_native.2#0",
        "result1#0",
        "tmp%50#0",
        "result_native.1#0"
      ]
    },
    "3702": {
      "op": "==",
      "defined_out": [
        "result1#0",
        "result_native.2#0",
        "result_native.3#0",
        "tmp%51#0"
      ],
      "stack_out": [
        "result1#0",
        "result_native.3#0",
        "result_native.2#0",
        "result1#0",
        "tmp%51#0"
      ]
    },
    "3703": {
      "op": "assert",
      "stack_out": [
        "result1#0",
        "result_native.3#0",
        "result_native.2#0",
        "result1#0"
      ]
    },
    "3704": {
      "op": "dup",
      "stack_out": [
        "result1#0",
        "result_native.3#0",
        "result_native.2#0",
        "result1#0",
        "result1#0 (copy)"
      ]
    },
    "3705": {
      "op": "pushint 4 // 4",
      "stack_out": [
        "result1#0",
        "result_native.3#0",
        "result_native.2#0",
        "result1#0",
        "result1#0 (copy)",
        "4"
      ]
    },
    "3707": {
      "op": "intc_2 // 8",
      "stack_out": [
        "result1#0",
        "result_native.3#0",
        "result_native.2#0",
        "result1#0",
        "result1#0 (copy)",
        "4",
        "8"
      ]
    },
    "3708": {
      "op": "extract3",
      "defined_out": [
        "result1#0",
        "result_native.2#0",
        "result_native.3#0",
        "tmp%54#0"
      ],
      "stack_out": [
        "result1#0",
        "result_native.3#0",
        "result_native.2#0",
        "result1#0",
        "tmp%54#0"
      ]
    },
    "3709": {
      "op": "btoi",
      "defined_out": [
        "result1#0",
        "result_native.2#0",
        "result_native.3#0",
        "tmp%56#0"
      ],
      "stack_out": [
        "result1#0",
        "result_native.3#0",
        "result_native.2#0",
        "result1#0",
        "tmp%56#0"
      ]
    },
    "3710": {
      "op": "uncover 2",
      "stack_out": [
        "result1#0",
        "result_native.3#0",
        "result1#0",
        "tmp%56#0",
        "result_native.2#0"
      ]
    },
    "3712": {
      "op": "==",
      "defined_out": [
        "result1#0",
        "result_native.3#0",
        "tmp%57#0"
      ],
      "stack_out": [
        "result1#0",
        "result_native.3#0",
        "result1#0",
        "tmp%57#0"
      ]
    },
    "3713": {
      "op": "assert",
      "stack_out": [
        "result1#0",
        "result_native.3#0",
        "result1#0"
      ]
    },
    "3714": {
      "op": "pushint 12 // 12",
      "stack_out": [
        "result1#0",
        "result_native.3#0",
        "result1#0",
        "12"
      ]
    },
    "3716": {
      "op": "pushint 64 // 64",
      "stack_out": [
        "result1#0",
        "result_native.3#0",
        "result1#0",
        "12",
        "64"
      ]
    },
    "3718": {
      "op": "extract3",
      "defined_out": [
        "result1#0",
        "result_native.3#0",
        "tmp%62#0"
      ],
      "stack_out": [
        "result1#0",
        "result_native.3#0",
        "tmp%62#0"
      ]
    },
    "3719": {
      "op": "b==",
      "defined_out": [
        "result1#0",
        "tmp%63#0"
      ],
      "stack_out": [
        "result1#0",
        "tmp%63#0"
      ]
    },
    "3720": {
      "op": "assert",
      "stack_out": [
        "result1#0"
      ]
    },
    "3721": {
      "retsub": true,
      "op": "retsub"
    },
    "3722": {
      "subroutine": "test_cases.typed_abi_call.typed_c2c.Greeter.test_native_tuple_method_ref",
      "params": {
        "app#0": "uint64"
      },
      "block": "test_cases.typed_abi_call.typed_c2c.Greeter.test_native_tuple_method_ref",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "3725": {
      "op": "intc_0 // 0",
      "stack_out": [
        "result.0#0"
      ]
    },
    "3726": {
      "op": "intc_0 // 0",
      "stack_out": [
        "result.0#0",
        "result.1#0"
      ]
    },
    "3727": {
      "op": "intc_0 // 0",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0"
      ]
    },
    "3728": {
      "op": "bytec_2 // \"\"",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0"
      ]
    },
    "3729": {
      "op": "b test_cases.typed_abi_call.typed_c2c.Greeter.test_native_tuple_method_ref_block@0"
    },
    "3732": {
      "block": "test_cases.typed_abi_call.typed_c2c.Greeter.test_native_tuple_method_ref_block@0",
      "stack_in": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0"
      ],
      "op": "itxn_begin"
    },
    "3733": {
      "op": "bytec_1 // \"s1\"",
      "defined_out": [
        "\"s1\""
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "\"s1\""
      ]
    },
    "3734": {
      "op": "len",
      "defined_out": [
        "aggregate%length%0#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "aggregate%length%0#0"
      ]
    },
    "3735": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%0#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "aggregate%as_bytes%0#0"
      ]
    },
    "3736": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%length_uint16%0#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "aggregate%length_uint16%0#0"
      ]
    },
    "3739": {
      "op": "bytec_1 // \"s1\"",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "aggregate%length_uint16%0#0",
        "\"s1\""
      ]
    },
    "3740": {
      "op": "concat",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "tmp%0#0"
      ]
    },
    "3741": {
      "op": "bytec_3 // 0x6231",
      "defined_out": [
        "0x6231",
        "tmp%0#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "tmp%0#0",
        "0x6231"
      ]
    },
    "3742": {
      "op": "len",
      "defined_out": [
        "aggregate%length%1#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "tmp%0#0",
        "aggregate%length%1#0"
      ]
    },
    "3743": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%1#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "tmp%0#0",
        "aggregate%as_bytes%1#0"
      ]
    },
    "3744": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%length_uint16%1#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "tmp%0#0",
        "aggregate%length_uint16%1#0"
      ]
    },
    "3747": {
      "op": "bytec_3 // 0x6231",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "tmp%0#0",
        "aggregate%length_uint16%1#0",
        "0x6231"
      ]
    },
    "3748": {
      "op": "concat",
      "defined_out": [
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0",
        "tmp%1#0"
      ]
    },
    "3749": {
      "op": "cover 1",
      "defined_out": [
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%0%%param_ApplicationArgs_idx_2#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "inner_txn_params%0%%param_ApplicationArgs_idx_2#0",
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "3751": {
      "op": "frame_dig -1",
      "defined_out": [
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%0%%param_ApplicationArgs_idx_2#0",
        "inner_txn_params%0%%param_ApplicationID_idx_0#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "inner_txn_params%0%%param_ApplicationArgs_idx_2#0",
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%0%%param_ApplicationID_idx_0#0"
      ]
    },
    "3753": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "inner_txn_params%0%%param_ApplicationArgs_idx_2#0",
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "3755": {
      "op": "bytec 7 // method \"echo_native_tuple(string,byte[],uint64,uint512)(string,byte[],uint64,uint512)\"",
      "defined_out": [
        "Method(echo_native_tuple(string,byte[],uint64,uint512)(string,byte[],uint64,uint512))",
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%0%%param_ApplicationArgs_idx_2#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "inner_txn_params%0%%param_ApplicationArgs_idx_2#0",
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0",
        "Method(echo_native_tuple(string,byte[],uint64,uint512)(string,byte[],uint64,uint512))"
      ]
    },
    "3757": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "inner_txn_params%0%%param_ApplicationArgs_idx_2#0",
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "3759": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "inner_txn_params%0%%param_ApplicationArgs_idx_2#0"
      ]
    },
    "3761": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0"
      ]
    },
    "3763": {
      "op": "bytec 5 // 0x0000000000000001",
      "defined_out": [
        "0x0000000000000001"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "0x0000000000000001"
      ]
    },
    "3765": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0"
      ]
    },
    "3767": {
      "op": "bytec 6 // 0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002",
      "defined_out": [
        "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002"
      ]
    },
    "3769": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0"
      ]
    },
    "3771": {
      "op": "intc_1 // appl",
      "defined_out": [
        "appl"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "appl"
      ]
    },
    "3772": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0"
      ]
    },
    "3774": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "0"
      ]
    },
    "3775": {
      "op": "itxn_field Fee",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0"
      ]
    },
    "3777": {
      "op": "b test_cases.typed_abi_call.typed_c2c.Greeter.test_native_tuple_method_ref_next_txn@1"
    },
    "3780": {
      "block": "test_cases.typed_abi_call.typed_c2c.Greeter.test_native_tuple_method_ref_next_txn@1",
      "stack_in": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0"
      ],
      "op": "itxn_submit"
    },
    "3781": {
      "op": "itxn LastLog",
      "defined_out": [
        "awst_tmp%0#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "awst_tmp%0#0"
      ]
    },
    "3783": {
      "op": "dup",
      "defined_out": [
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ]
    },
    "3784": {
      "op": "extract 4 0",
      "defined_out": [
        "awst_tmp%0#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "awst_tmp%0#0",
        "tmp%2#0"
      ]
    },
    "3787": {
      "op": "cover 1",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "tmp%2#0",
        "awst_tmp%0#0"
      ]
    },
    "3789": {
      "op": "extract 0 4",
      "defined_out": [
        "tmp%2#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "tmp%2#0",
        "tmp%3#0"
      ]
    },
    "3792": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%2#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "tmp%2#0",
        "tmp%3#0",
        "0x151f7c75"
      ]
    },
    "3793": {
      "op": "==",
      "defined_out": [
        "tmp%2#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "tmp%2#0",
        "tmp%4#0"
      ]
    },
    "3794": {
      "error": "application log value is not the result of an ABI return",
      "op": "assert // application log value is not the result of an ABI return",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "tmp%2#0"
      ]
    },
    "3795": {
      "op": "dup",
      "defined_out": [
        "tmp%2#0",
        "tmp%2#0 (copy)"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "tmp%2#0",
        "tmp%2#0 (copy)"
      ]
    },
    "3796": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%2#0",
        "tmp%2#0 (copy)"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "tmp%2#0",
        "tmp%2#0 (copy)",
        "0"
      ]
    },
    "3797": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%extract_uint16%0#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "tmp%2#0",
        "aggregate%extract_uint16%0#0"
      ]
    },
    "3798": {
      "op": "cover 1",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "aggregate%extract_uint16%0#0",
        "tmp%2#0"
      ]
    },
    "3800": {
      "op": "dup",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "aggregate%extract_uint16%0#0",
        "tmp%2#0",
        "tmp%2#0 (copy)"
      ]
    },
    "3801": {
      "op": "intc_3 // 2",
      "defined_out": [
        "2",
        "aggregate%extract_uint16%0#0",
        "tmp%2#0",
        "tmp%2#0 (copy)"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "aggregate%extract_uint16%0#0",
        "tmp%2#0",
        "tmp%2#0 (copy)",
        "2"
      ]
    },
    "3802": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%extract_uint16%0#0",
        "aggregate%extract_uint16%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "aggregate%extract_uint16%0#0",
        "tmp%2#0",
        "aggregate%extract_uint16%1#0"
      ]
    },
    "3803": {
      "op": "dig 1",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "aggregate%extract_uint16%0#0",
        "tmp%2#0",
        "aggregate%extract_uint16%1#0",
        "tmp%2#0 (copy)"
      ]
    },
    "3805": {
      "op": "uncover 3",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "tmp%2#0",
        "aggregate%extract_uint16%1#0",
        "tmp%2#0 (copy)",
        "aggregate%extract_uint16%0#0"
      ]
    },
    "3807": {
      "op": "uncover 2",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "tmp%2#0",
        "tmp%2#0 (copy)",
        "aggregate%extract_uint16%0#0",
        "aggregate%extract_uint16%1#0"
      ]
    },
    "3809": {
      "op": "substring3",
      "defined_out": [
        "aggregate%substring3%0#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "tmp%2#0",
        "aggregate%substring3%0#0"
      ]
    },
    "3810": {
      "op": "extract 2 0",
      "defined_out": [
        "aggregate%item0%0#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "tmp%2#0",
        "aggregate%item0%0#0"
      ]
    },
    "3813": {
      "op": "cover 1",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "aggregate%item0%0#0",
        "tmp%2#0"
      ]
    },
    "3815": {
      "op": "dup",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "aggregate%item0%0#0",
        "tmp%2#0",
        "tmp%2#0 (copy)"
      ]
    },
    "3816": {
      "op": "intc_3 // 2",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "aggregate%item0%0#0",
        "tmp%2#0",
        "tmp%2#0 (copy)",
        "2"
      ]
    },
    "3817": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%extract_uint16%2#0",
        "aggregate%item0%0#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "aggregate%item0%0#0",
        "tmp%2#0",
        "aggregate%extract_uint16%2#0"
      ]
    },
    "3818": {
      "op": "cover 1",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "aggregate%item0%0#0",
        "aggregate%extract_uint16%2#0",
        "tmp%2#0"
      ]
    },
    "3820": {
      "op": "dup",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "aggregate%item0%0#0",
        "aggregate%extract_uint16%2#0",
        "tmp%2#0",
        "tmp%2#0 (copy)"
      ]
    },
    "3821": {
      "op": "len",
      "defined_out": [
        "aggregate%extract_uint16%2#0",
        "aggregate%item0%0#0",
        "aggregate%len%0#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "aggregate%item0%0#0",
        "aggregate%extract_uint16%2#0",
        "tmp%2#0",
        "aggregate%len%0#0"
      ]
    },
    "3822": {
      "op": "cover 1",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "aggregate%item0%0#0",
        "aggregate%extract_uint16%2#0",
        "aggregate%len%0#0",
        "tmp%2#0"
      ]
    },
    "3824": {
      "op": "dup",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "aggregate%item0%0#0",
        "aggregate%extract_uint16%2#0",
        "aggregate%len%0#0",
        "tmp%2#0",
        "tmp%2#0 (copy)"
      ]
    },
    "3825": {
      "op": "uncover 3",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "aggregate%item0%0#0",
        "aggregate%len%0#0",
        "tmp%2#0",
        "tmp%2#0 (copy)",
        "aggregate%extract_uint16%2#0"
      ]
    },
    "3827": {
      "op": "uncover 3",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "aggregate%item0%0#0",
        "tmp%2#0",
        "tmp%2#0 (copy)",
        "aggregate%extract_uint16%2#0",
        "aggregate%len%0#0"
      ]
    },
    "3829": {
      "op": "substring3",
      "defined_out": [
        "aggregate%item0%0#0",
        "aggregate%substring3%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "aggregate%item0%0#0",
        "tmp%2#0",
        "aggregate%substring3%1#0"
      ]
    },
    "3830": {
      "op": "extract 2 0",
      "defined_out": [
        "aggregate%item0%0#0",
        "aggregate%item1%0#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "aggregate%item0%0#0",
        "tmp%2#0",
        "aggregate%item1%0#0"
      ]
    },
    "3833": {
      "op": "cover 1",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "aggregate%item0%0#0",
        "aggregate%item1%0#0",
        "tmp%2#0"
      ]
    },
    "3835": {
      "op": "dup",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "aggregate%item0%0#0",
        "aggregate%item1%0#0",
        "tmp%2#0",
        "tmp%2#0 (copy)"
      ]
    },
    "3836": {
      "op": "pushint 4 // 4",
      "defined_out": [
        "4",
        "aggregate%item0%0#0",
        "aggregate%item1%0#0",
        "tmp%2#0",
        "tmp%2#0 (copy)"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "aggregate%item0%0#0",
        "aggregate%item1%0#0",
        "tmp%2#0",
        "tmp%2#0 (copy)",
        "4"
      ]
    },
    "3838": {
      "op": "intc_2 // 8",
      "defined_out": [
        "4",
        "8",
        "aggregate%item0%0#0",
        "aggregate%item1%0#0",
        "tmp%2#0",
        "tmp%2#0 (copy)"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "aggregate%item0%0#0",
        "aggregate%item1%0#0",
        "tmp%2#0",
        "tmp%2#0 (copy)",
        "4",
        "8"
      ]
    },
    "3839": {
      "op": "extract3",
      "defined_out": [
        "aggregate%extract%0#0",
        "aggregate%item0%0#0",
        "aggregate%item1%0#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "aggregate%item0%0#0",
        "aggregate%item1%0#0",
        "tmp%2#0",
        "aggregate%extract%0#0"
      ]
    },
    "3840": {
      "op": "btoi",
      "defined_out": [
        "aggregate%item0%0#0",
        "aggregate%item1%0#0",
        "aggregate%item2%0#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "aggregate%item0%0#0",
        "aggregate%item1%0#0",
        "tmp%2#0",
        "aggregate%item2%0#0"
      ]
    },
    "3841": {
      "op": "cover 1",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "aggregate%item0%0#0",
        "aggregate%item1%0#0",
        "aggregate%item2%0#0",
        "tmp%2#0"
      ]
    },
    "3843": {
      "op": "pushint 12 // 12",
      "defined_out": [
        "12",
        "aggregate%item0%0#0",
        "aggregate%item1%0#0",
        "aggregate%item2%0#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "aggregate%item0%0#0",
        "aggregate%item1%0#0",
        "aggregate%item2%0#0",
        "tmp%2#0",
        "12"
      ]
    },
    "3845": {
      "op": "pushint 64 // 64",
      "defined_out": [
        "12",
        "64",
        "aggregate%item0%0#0",
        "aggregate%item1%0#0",
        "aggregate%item2%0#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "aggregate%item0%0#0",
        "aggregate%item1%0#0",
        "aggregate%item2%0#0",
        "tmp%2#0",
        "12",
        "64"
      ]
    },
    "3847": {
      "op": "extract3",
      "defined_out": [
        "aggregate%extract%1#0",
        "aggregate%item0%0#0",
        "aggregate%item1%0#0",
        "aggregate%item2%0#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "aggregate%item0%0#0",
        "aggregate%item1%0#0",
        "aggregate%item2%0#0",
        "aggregate%extract%1#0"
      ]
    },
    "3848": {
      "op": "uncover 3",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "aggregate%item1%0#0",
        "aggregate%item2%0#0",
        "aggregate%extract%1#0",
        "aggregate%item0%0#0"
      ]
    },
    "3850": {
      "op": "cover 1",
      "defined_out": [
        "aggregate%extract%1#0",
        "aggregate%item1%0#0",
        "aggregate%item2%0#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "aggregate%item1%0#0",
        "aggregate%item2%0#0",
        "tmp%5#0",
        "aggregate%extract%1#0"
      ]
    },
    "3852": {
      "op": "uncover 3",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "aggregate%item2%0#0",
        "tmp%5#0",
        "aggregate%extract%1#0",
        "aggregate%item1%0#0"
      ]
    },
    "3854": {
      "op": "cover 2",
      "defined_out": [
        "aggregate%extract%1#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "tmp%7#0",
        "tmp%6#0",
        "tmp%5#0",
        "aggregate%extract%1#0"
      ]
    },
    "3856": {
      "op": "cover 3",
      "defined_out": [
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "tmp%8#0",
        "tmp%7#0",
        "tmp%6#0",
        "tmp%5#0"
      ]
    },
    "3858": {
      "op": "dup",
      "defined_out": [
        "result.0#0 (copy)",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "tmp%8#0",
        "tmp%7#0",
        "tmp%6#0",
        "result.0#0 (copy)",
        "result.0#0 (copy)"
      ]
    },
    "3859": {
      "op": "cover 4",
      "defined_out": [
        "result.0#0",
        "result.0#0 (copy)",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "result.0#0",
        "tmp%8#0",
        "tmp%7#0",
        "tmp%6#0",
        "result.0#0 (copy)"
      ]
    },
    "3861": {
      "op": "frame_bury 0",
      "defined_out": [
        "result.0#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "result.0#0",
        "tmp%8#0",
        "tmp%7#0",
        "tmp%6#0"
      ]
    },
    "3863": {
      "op": "dup",
      "defined_out": [
        "result.0#0",
        "result.1#0 (copy)",
        "tmp%7#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "result.0#0",
        "tmp%8#0",
        "tmp%7#0",
        "result.1#0 (copy)",
        "result.1#0 (copy)"
      ]
    },
    "3864": {
      "op": "cover 4",
      "defined_out": [
        "result.0#0",
        "result.1#0",
        "result.1#0 (copy)",
        "tmp%7#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "result.1#0",
        "result.0#0",
        "tmp%8#0",
        "tmp%7#0",
        "result.1#0 (copy)"
      ]
    },
    "3866": {
      "op": "frame_bury 1",
      "defined_out": [
        "result.0#0",
        "result.1#0",
        "tmp%7#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "result.1#0",
        "result.0#0",
        "tmp%8#0",
        "tmp%7#0"
      ]
    },
    "3868": {
      "op": "dup",
      "defined_out": [
        "result.0#0",
        "result.1#0",
        "result.2#0 (copy)",
        "tmp%8#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "result.1#0",
        "result.0#0",
        "tmp%8#0",
        "result.2#0 (copy)",
        "result.2#0 (copy)"
      ]
    },
    "3869": {
      "op": "cover 4",
      "defined_out": [
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.2#0 (copy)",
        "tmp%8#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "result.2#0",
        "result.1#0",
        "result.0#0",
        "tmp%8#0",
        "result.2#0 (copy)"
      ]
    },
    "3871": {
      "op": "frame_bury 3",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "result.2#0",
        "result.1#0",
        "result.0#0",
        "tmp%8#0"
      ]
    },
    "3873": {
      "op": "dup",
      "defined_out": [
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0 (copy)"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "result.2#0",
        "result.1#0",
        "result.0#0",
        "result.3#0 (copy)",
        "result.3#0 (copy)"
      ]
    },
    "3874": {
      "op": "cover 4",
      "defined_out": [
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "result.3#0 (copy)"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "result.3#0",
        "result.2#0",
        "result.1#0",
        "result.0#0",
        "result.3#0 (copy)"
      ]
    },
    "3876": {
      "op": "frame_bury 2",
      "defined_out": [
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "result.3#0",
        "result.2#0",
        "result.1#0",
        "result.0#0"
      ]
    },
    "3878": {
      "op": "cover 3",
      "defined_out": [
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "s#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "s#0",
        "result.3#0",
        "result.2#0",
        "result.1#0"
      ]
    },
    "3880": {
      "op": "cover 3",
      "defined_out": [
        "b#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "s#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "b#0",
        "s#0",
        "result.3#0",
        "result.2#0"
      ]
    },
    "3882": {
      "op": "cover 3",
      "defined_out": [
        "b#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "s#0",
        "u#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "u#0",
        "b#0",
        "s#0",
        "result.3#0"
      ]
    },
    "3884": {
      "op": "cover 3",
      "defined_out": [
        "b#0",
        "bu#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "s#0",
        "u#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "bu#0",
        "u#0",
        "b#0",
        "s#0"
      ]
    },
    "3886": {
      "op": "bytec 17 // \"echo: s1\"",
      "defined_out": [
        "\"echo: s1\"",
        "b#0",
        "bu#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "s#0",
        "u#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "bu#0",
        "u#0",
        "b#0",
        "s#0",
        "\"echo: s1\""
      ]
    },
    "3888": {
      "op": "==",
      "defined_out": [
        "b#0",
        "bu#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "tmp%9#0",
        "u#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "bu#0",
        "u#0",
        "b#0",
        "tmp%9#0"
      ]
    },
    "3889": {
      "op": "assert",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "bu#0",
        "u#0",
        "b#0"
      ]
    },
    "3890": {
      "op": "bytec 55 // 0x6563686f3a206231",
      "defined_out": [
        "0x6563686f3a206231",
        "b#0",
        "bu#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "u#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "bu#0",
        "u#0",
        "b#0",
        "0x6563686f3a206231"
      ]
    },
    "3892": {
      "op": "==",
      "defined_out": [
        "bu#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "tmp%10#0",
        "u#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "bu#0",
        "u#0",
        "tmp%10#0"
      ]
    },
    "3893": {
      "op": "assert",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "bu#0",
        "u#0"
      ]
    },
    "3894": {
      "op": "intc_3 // 2",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "bu#0",
        "u#0",
        "2"
      ]
    },
    "3895": {
      "op": "==",
      "defined_out": [
        "bu#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "bu#0",
        "tmp%11#0"
      ]
    },
    "3896": {
      "op": "assert",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "bu#0"
      ]
    },
    "3897": {
      "op": "bytec 32 // 0x03",
      "defined_out": [
        "0x03",
        "bu#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "bu#0",
        "0x03"
      ]
    },
    "3899": {
      "op": "b==",
      "defined_out": [
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "tmp%12#0"
      ]
    },
    "3900": {
      "op": "assert",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0"
      ]
    },
    "3901": {
      "op": "itxn_begin"
    },
    "3902": {
      "op": "bytec_1 // \"s1\"",
      "defined_out": [
        "\"s1\"",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "\"s1\""
      ]
    },
    "3903": {
      "op": "len",
      "defined_out": [
        "aggregate%length%2#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "aggregate%length%2#0"
      ]
    },
    "3904": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%2#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "aggregate%as_bytes%2#0"
      ]
    },
    "3905": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%length_uint16%2#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "aggregate%length_uint16%2#0"
      ]
    },
    "3908": {
      "op": "bytec_1 // \"s1\"",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "aggregate%length_uint16%2#0",
        "\"s1\""
      ]
    },
    "3909": {
      "op": "concat",
      "defined_out": [
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "tmp%13#0"
      ]
    },
    "3910": {
      "op": "bytec_3 // 0x6231",
      "defined_out": [
        "0x6231",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "tmp%13#0",
        "0x6231"
      ]
    },
    "3911": {
      "op": "len",
      "defined_out": [
        "aggregate%length%3#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "tmp%13#0",
        "aggregate%length%3#0"
      ]
    },
    "3912": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%3#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "tmp%13#0",
        "aggregate%as_bytes%3#0"
      ]
    },
    "3913": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%length_uint16%3#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "tmp%13#0",
        "aggregate%length_uint16%3#0"
      ]
    },
    "3916": {
      "op": "bytec_3 // 0x6231",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "tmp%13#0",
        "aggregate%length_uint16%3#0",
        "0x6231"
      ]
    },
    "3917": {
      "op": "concat",
      "defined_out": [
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "tmp%13#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "tmp%13#0",
        "tmp%14#0"
      ]
    },
    "3918": {
      "op": "pushint 1 // 1",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "tmp%13#0",
        "tmp%14#0",
        "1"
      ]
    },
    "3920": {
      "op": "itob",
      "defined_out": [
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "tmp%13#0",
        "tmp%14#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "tmp%13#0",
        "tmp%14#0",
        "tmp%15#0"
      ]
    },
    "3921": {
      "op": "bytec 11 // 0x02",
      "defined_out": [
        "0x02",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "tmp%13#0",
        "tmp%14#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "tmp%13#0",
        "tmp%14#0",
        "tmp%15#0",
        "0x02"
      ]
    },
    "3923": {
      "op": "len",
      "defined_out": [
        "aggregate%value_len%0#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "tmp%13#0",
        "tmp%14#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "tmp%13#0",
        "tmp%14#0",
        "tmp%15#0",
        "aggregate%value_len%0#0"
      ]
    },
    "3924": {
      "op": "pushint 64 // 64",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "tmp%13#0",
        "tmp%14#0",
        "tmp%15#0",
        "aggregate%value_len%0#0",
        "64"
      ]
    },
    "3926": {
      "op": "<=",
      "defined_out": [
        "aggregate%len_ok%0#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "tmp%13#0",
        "tmp%14#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "tmp%13#0",
        "tmp%14#0",
        "tmp%15#0",
        "aggregate%len_ok%0#0"
      ]
    },
    "3927": {
      "error": "overflow",
      "op": "assert // overflow",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "tmp%13#0",
        "tmp%14#0",
        "tmp%15#0"
      ]
    },
    "3928": {
      "op": "pushint 64 // 64",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "tmp%13#0",
        "tmp%14#0",
        "tmp%15#0",
        "64"
      ]
    },
    "3930": {
      "op": "bzero",
      "defined_out": [
        "aggregate%bzero%0#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "tmp%13#0",
        "tmp%14#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "tmp%13#0",
        "tmp%14#0",
        "tmp%15#0",
        "aggregate%bzero%0#0"
      ]
    },
    "3931": {
      "op": "bytec 11 // 0x02",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "tmp%13#0",
        "tmp%14#0",
        "tmp%15#0",
        "aggregate%bzero%0#0",
        "0x02"
      ]
    },
    "3933": {
      "op": "b|",
      "defined_out": [
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "tmp%13#0",
        "tmp%14#0",
        "tmp%15#0",
        "tmp%16#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "tmp%13#0",
        "tmp%14#0",
        "tmp%15#0",
        "tmp%16#0"
      ]
    },
    "3934": {
      "op": "uncover 3",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "tmp%14#0",
        "tmp%15#0",
        "tmp%16#0",
        "tmp%13#0"
      ]
    },
    "3936": {
      "op": "cover 1",
      "defined_out": [
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "tmp%14#0",
        "tmp%15#0",
        "tmp%16#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "tmp%14#0",
        "tmp%15#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0",
        "tmp%16#0"
      ]
    },
    "3938": {
      "op": "uncover 3",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "tmp%15#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0",
        "tmp%16#0",
        "tmp%14#0"
      ]
    },
    "3940": {
      "op": "cover 2",
      "defined_out": [
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_2#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_3#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "tmp%16#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_3#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_2#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0",
        "tmp%16#0"
      ]
    },
    "3942": {
      "op": "cover 3",
      "defined_out": [
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_2#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_3#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_4#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_4#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_3#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_2#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "3944": {
      "op": "frame_dig -1",
      "defined_out": [
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_2#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_3#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_4#0",
        "inner_txn_params%1%%param_ApplicationID_idx_0#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_4#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_3#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_2#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%1%%param_ApplicationID_idx_0#0"
      ]
    },
    "3946": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_4#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_3#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_2#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "3948": {
      "op": "bytec 7 // method \"echo_native_tuple(string,byte[],uint64,uint512)(string,byte[],uint64,uint512)\"",
      "defined_out": [
        "Method(echo_native_tuple(string,byte[],uint64,uint512)(string,byte[],uint64,uint512))",
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_2#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_3#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_4#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_4#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_3#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_2#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0",
        "Method(echo_native_tuple(string,byte[],uint64,uint512)(string,byte[],uint64,uint512))"
      ]
    },
    "3950": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_4#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_3#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_2#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "3952": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_4#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_3#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_2#0"
      ]
    },
    "3954": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_4#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_3#0"
      ]
    },
    "3956": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_4#0"
      ]
    },
    "3958": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0"
      ]
    },
    "3960": {
      "op": "intc_1 // appl",
      "defined_out": [
        "appl",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "appl"
      ]
    },
    "3961": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0"
      ]
    },
    "3963": {
      "op": "intc_0 // 0",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "0"
      ]
    },
    "3964": {
      "op": "itxn_field Fee",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0"
      ]
    },
    "3966": {
      "op": "b test_cases.typed_abi_call.typed_c2c.Greeter.test_native_tuple_method_ref_next_txn@2"
    },
    "3969": {
      "block": "test_cases.typed_abi_call.typed_c2c.Greeter.test_native_tuple_method_ref_next_txn@2",
      "stack_in": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0"
      ],
      "op": "itxn_submit"
    },
    "3970": {
      "op": "itxn LastLog",
      "defined_out": [
        "awst_tmp%1#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "awst_tmp%1#0"
      ]
    },
    "3972": {
      "op": "dup",
      "defined_out": [
        "awst_tmp%1#0",
        "awst_tmp%1#0 (copy)"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "awst_tmp%1#0",
        "awst_tmp%1#0 (copy)"
      ]
    },
    "3973": {
      "op": "extract 4 0",
      "defined_out": [
        "awst_tmp%1#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "awst_tmp%1#0",
        "tmp%17#0"
      ]
    },
    "3976": {
      "op": "cover 1",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "tmp%17#0",
        "awst_tmp%1#0"
      ]
    },
    "3978": {
      "op": "extract 0 4",
      "defined_out": [
        "tmp%17#0",
        "tmp%18#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "tmp%17#0",
        "tmp%18#0"
      ]
    },
    "3981": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%17#0",
        "tmp%18#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "tmp%17#0",
        "tmp%18#0",
        "0x151f7c75"
      ]
    },
    "3982": {
      "op": "==",
      "defined_out": [
        "tmp%17#0",
        "tmp%19#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "tmp%17#0",
        "tmp%19#0"
      ]
    },
    "3983": {
      "error": "application log value is not the result of an ABI return",
      "op": "assert // application log value is not the result of an ABI return",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "tmp%17#0"
      ]
    },
    "3984": {
      "op": "dup",
      "defined_out": [
        "tmp%17#0",
        "tmp%17#0 (copy)"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "tmp%17#0",
        "tmp%17#0 (copy)"
      ]
    },
    "3985": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%17#0",
        "tmp%17#0 (copy)"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "tmp%17#0",
        "tmp%17#0 (copy)",
        "0"
      ]
    },
    "3986": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%extract_uint16%3#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "tmp%17#0",
        "aggregate%extract_uint16%3#0"
      ]
    },
    "3987": {
      "op": "cover 1",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "aggregate%extract_uint16%3#0",
        "tmp%17#0"
      ]
    },
    "3989": {
      "op": "dup",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "aggregate%extract_uint16%3#0",
        "tmp%17#0",
        "tmp%17#0 (copy)"
      ]
    },
    "3990": {
      "op": "intc_3 // 2",
      "defined_out": [
        "2",
        "aggregate%extract_uint16%3#0",
        "tmp%17#0",
        "tmp%17#0 (copy)"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "aggregate%extract_uint16%3#0",
        "tmp%17#0",
        "tmp%17#0 (copy)",
        "2"
      ]
    },
    "3991": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%extract_uint16%3#0",
        "aggregate%extract_uint16%4#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "aggregate%extract_uint16%3#0",
        "tmp%17#0",
        "aggregate%extract_uint16%4#0"
      ]
    },
    "3992": {
      "op": "dig 1",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "aggregate%extract_uint16%3#0",
        "tmp%17#0",
        "aggregate%extract_uint16%4#0",
        "tmp%17#0 (copy)"
      ]
    },
    "3994": {
      "op": "uncover 3",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "tmp%17#0",
        "aggregate%extract_uint16%4#0",
        "tmp%17#0 (copy)",
        "aggregate%extract_uint16%3#0"
      ]
    },
    "3996": {
      "op": "uncover 2",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "tmp%17#0",
        "tmp%17#0 (copy)",
        "aggregate%extract_uint16%3#0",
        "aggregate%extract_uint16%4#0"
      ]
    },
    "3998": {
      "op": "substring3",
      "defined_out": [
        "aggregate%substring3%2#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "tmp%17#0",
        "aggregate%substring3%2#0"
      ]
    },
    "3999": {
      "op": "extract 2 0",
      "defined_out": [
        "aggregate%item0%1#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "tmp%17#0",
        "aggregate%item0%1#0"
      ]
    },
    "4002": {
      "op": "cover 1",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "aggregate%item0%1#0",
        "tmp%17#0"
      ]
    },
    "4004": {
      "op": "dup",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "aggregate%item0%1#0",
        "tmp%17#0",
        "tmp%17#0 (copy)"
      ]
    },
    "4005": {
      "op": "intc_3 // 2",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "aggregate%item0%1#0",
        "tmp%17#0",
        "tmp%17#0 (copy)",
        "2"
      ]
    },
    "4006": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%extract_uint16%5#0",
        "aggregate%item0%1#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "aggregate%item0%1#0",
        "tmp%17#0",
        "aggregate%extract_uint16%5#0"
      ]
    },
    "4007": {
      "op": "cover 1",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "aggregate%item0%1#0",
        "aggregate%extract_uint16%5#0",
        "tmp%17#0"
      ]
    },
    "4009": {
      "op": "dup",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "aggregate%item0%1#0",
        "aggregate%extract_uint16%5#0",
        "tmp%17#0",
        "tmp%17#0 (copy)"
      ]
    },
    "4010": {
      "op": "len",
      "defined_out": [
        "aggregate%extract_uint16%5#0",
        "aggregate%item0%1#0",
        "aggregate%len%1#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "aggregate%item0%1#0",
        "aggregate%extract_uint16%5#0",
        "tmp%17#0",
        "aggregate%len%1#0"
      ]
    },
    "4011": {
      "op": "cover 1",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "aggregate%item0%1#0",
        "aggregate%extract_uint16%5#0",
        "aggregate%len%1#0",
        "tmp%17#0"
      ]
    },
    "4013": {
      "op": "dup",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "aggregate%item0%1#0",
        "aggregate%extract_uint16%5#0",
        "aggregate%len%1#0",
        "tmp%17#0",
        "tmp%17#0 (copy)"
      ]
    },
    "4014": {
      "op": "uncover 3",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "aggregate%item0%1#0",
        "aggregate%len%1#0",
        "tmp%17#0",
        "tmp%17#0 (copy)",
        "aggregate%extract_uint16%5#0"
      ]
    },
    "4016": {
      "op": "uncover 3",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "aggregate%item0%1#0",
        "tmp%17#0",
        "tmp%17#0 (copy)",
        "aggregate%extract_uint16%5#0",
        "aggregate%len%1#0"
      ]
    },
    "4018": {
      "op": "substring3",
      "defined_out": [
        "aggregate%item0%1#0",
        "aggregate%substring3%3#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "aggregate%item0%1#0",
        "tmp%17#0",
        "aggregate%substring3%3#0"
      ]
    },
    "4019": {
      "op": "extract 2 0",
      "defined_out": [
        "aggregate%item0%1#0",
        "aggregate%item1%1#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "aggregate%item0%1#0",
        "tmp%17#0",
        "aggregate%item1%1#0"
      ]
    },
    "4022": {
      "op": "cover 1",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "aggregate%item0%1#0",
        "aggregate%item1%1#0",
        "tmp%17#0"
      ]
    },
    "4024": {
      "op": "dup",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "aggregate%item0%1#0",
        "aggregate%item1%1#0",
        "tmp%17#0",
        "tmp%17#0 (copy)"
      ]
    },
    "4025": {
      "op": "pushint 4 // 4",
      "defined_out": [
        "4",
        "aggregate%item0%1#0",
        "aggregate%item1%1#0",
        "tmp%17#0",
        "tmp%17#0 (copy)"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "aggregate%item0%1#0",
        "aggregate%item1%1#0",
        "tmp%17#0",
        "tmp%17#0 (copy)",
        "4"
      ]
    },
    "4027": {
      "op": "intc_2 // 8",
      "defined_out": [
        "4",
        "8",
        "aggregate%item0%1#0",
        "aggregate%item1%1#0",
        "tmp%17#0",
        "tmp%17#0 (copy)"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "aggregate%item0%1#0",
        "aggregate%item1%1#0",
        "tmp%17#0",
        "tmp%17#0 (copy)",
        "4",
        "8"
      ]
    },
    "4028": {
      "op": "extract3",
      "defined_out": [
        "aggregate%extract%2#0",
        "aggregate%item0%1#0",
        "aggregate%item1%1#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "aggregate%item0%1#0",
        "aggregate%item1%1#0",
        "tmp%17#0",
        "aggregate%extract%2#0"
      ]
    },
    "4029": {
      "op": "btoi",
      "defined_out": [
        "aggregate%item0%1#0",
        "aggregate%item1%1#0",
        "aggregate%item2%1#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "aggregate%item0%1#0",
        "aggregate%item1%1#0",
        "tmp%17#0",
        "aggregate%item2%1#0"
      ]
    },
    "4030": {
      "op": "cover 1",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "aggregate%item0%1#0",
        "aggregate%item1%1#0",
        "aggregate%item2%1#0",
        "tmp%17#0"
      ]
    },
    "4032": {
      "op": "pushint 12 // 12",
      "defined_out": [
        "12",
        "aggregate%item0%1#0",
        "aggregate%item1%1#0",
        "aggregate%item2%1#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "aggregate%item0%1#0",
        "aggregate%item1%1#0",
        "aggregate%item2%1#0",
        "tmp%17#0",
        "12"
      ]
    },
    "4034": {
      "op": "pushint 64 // 64",
      "defined_out": [
        "12",
        "64",
        "aggregate%item0%1#0",
        "aggregate%item1%1#0",
        "aggregate%item2%1#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "aggregate%item0%1#0",
        "aggregate%item1%1#0",
        "aggregate%item2%1#0",
        "tmp%17#0",
        "12",
        "64"
      ]
    },
    "4036": {
      "op": "extract3",
      "defined_out": [
        "aggregate%extract%3#0",
        "aggregate%item0%1#0",
        "aggregate%item1%1#0",
        "aggregate%item2%1#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "aggregate%item0%1#0",
        "aggregate%item1%1#0",
        "aggregate%item2%1#0",
        "aggregate%extract%3#0"
      ]
    },
    "4037": {
      "op": "uncover 3",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "aggregate%item1%1#0",
        "aggregate%item2%1#0",
        "aggregate%extract%3#0",
        "aggregate%item0%1#0"
      ]
    },
    "4039": {
      "op": "cover 1",
      "defined_out": [
        "aggregate%extract%3#0",
        "aggregate%item1%1#0",
        "aggregate%item2%1#0",
        "tmp%20#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "aggregate%item1%1#0",
        "aggregate%item2%1#0",
        "tmp%20#0",
        "aggregate%extract%3#0"
      ]
    },
    "4041": {
      "op": "uncover 3",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "aggregate%item2%1#0",
        "tmp%20#0",
        "aggregate%extract%3#0",
        "aggregate%item1%1#0"
      ]
    },
    "4043": {
      "op": "cover 2",
      "defined_out": [
        "aggregate%extract%3#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "tmp%22#0",
        "tmp%21#0",
        "tmp%20#0",
        "aggregate%extract%3#0"
      ]
    },
    "4045": {
      "op": "cover 3",
      "defined_out": [
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%23#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "tmp%23#0",
        "tmp%22#0",
        "tmp%21#0",
        "tmp%20#0"
      ]
    },
    "4047": {
      "op": "cover 3",
      "defined_out": [
        "result_2.0#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%23#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "result_2.0#0",
        "tmp%23#0",
        "tmp%22#0",
        "tmp%21#0"
      ]
    },
    "4049": {
      "op": "cover 3",
      "defined_out": [
        "result_2.0#0",
        "result_2.1#0",
        "tmp%22#0",
        "tmp%23#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "result_2.1#0",
        "result_2.0#0",
        "tmp%23#0",
        "tmp%22#0"
      ]
    },
    "4051": {
      "op": "cover 3",
      "defined_out": [
        "result_2.0#0",
        "result_2.1#0",
        "result_2.2#0",
        "tmp%23#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "result_2.2#0",
        "result_2.1#0",
        "result_2.0#0",
        "tmp%23#0"
      ]
    },
    "4053": {
      "op": "cover 3",
      "defined_out": [
        "result_2.0#0",
        "result_2.1#0",
        "result_2.2#0",
        "result_2.3#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "result_2.3#0",
        "result_2.2#0",
        "result_2.1#0",
        "result_2.0#0"
      ]
    },
    "4055": {
      "op": "frame_dig 0",
      "defined_out": [
        "result.0#0",
        "result_2.0#0",
        "result_2.1#0",
        "result_2.2#0",
        "result_2.3#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "result_2.3#0",
        "result_2.2#0",
        "result_2.1#0",
        "result_2.0#0",
        "result.0#0"
      ]
    },
    "4057": {
      "op": "==",
      "defined_out": [
        "result.0#0",
        "result_2.1#0",
        "result_2.2#0",
        "result_2.3#0",
        "tmp%24#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "result_2.3#0",
        "result_2.2#0",
        "result_2.1#0",
        "tmp%24#0"
      ]
    },
    "4058": {
      "op": "uncover 1",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "result_2.3#0",
        "result_2.2#0",
        "tmp%24#0",
        "result_2.1#0"
      ]
    },
    "4060": {
      "op": "frame_dig 1",
      "defined_out": [
        "result.0#0",
        "result.1#0",
        "result_2.1#0",
        "result_2.2#0",
        "result_2.3#0",
        "tmp%24#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "result_2.3#0",
        "result_2.2#0",
        "tmp%24#0",
        "result_2.1#0",
        "result.1#0"
      ]
    },
    "4062": {
      "op": "==",
      "defined_out": [
        "result.0#0",
        "result.1#0",
        "result_2.2#0",
        "result_2.3#0",
        "tmp%24#0",
        "tmp%25#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "result_2.3#0",
        "result_2.2#0",
        "tmp%24#0",
        "tmp%25#0"
      ]
    },
    "4063": {
      "op": "&&",
      "defined_out": [
        "result.0#0",
        "result.1#0",
        "result_2.2#0",
        "result_2.3#0",
        "tmp%26#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "result_2.3#0",
        "result_2.2#0",
        "tmp%26#0"
      ]
    },
    "4064": {
      "op": "uncover 1",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "result_2.3#0",
        "tmp%26#0",
        "result_2.2#0"
      ]
    },
    "4066": {
      "op": "frame_dig 3",
      "defined_out": [
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result_2.2#0",
        "result_2.3#0",
        "tmp%26#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "result_2.3#0",
        "tmp%26#0",
        "result_2.2#0",
        "result.2#0"
      ]
    },
    "4068": {
      "op": "==",
      "defined_out": [
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result_2.3#0",
        "tmp%26#0",
        "tmp%27#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "result_2.3#0",
        "tmp%26#0",
        "tmp%27#0"
      ]
    },
    "4069": {
      "op": "&&",
      "defined_out": [
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result_2.3#0",
        "tmp%28#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "result_2.3#0",
        "tmp%28#0"
      ]
    },
    "4070": {
      "op": "uncover 1",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "tmp%28#0",
        "result_2.3#0"
      ]
    },
    "4072": {
      "op": "frame_dig 2",
      "defined_out": [
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "result_2.3#0",
        "tmp%28#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "tmp%28#0",
        "result_2.3#0",
        "result.3#0"
      ]
    },
    "4074": {
      "op": "b==",
      "defined_out": [
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "tmp%28#0",
        "tmp%29#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "tmp%28#0",
        "tmp%29#0"
      ]
    },
    "4075": {
      "op": "&&",
      "defined_out": [
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "tmp%30#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "tmp%30#0"
      ]
    },
    "4076": {
      "error": "expected native arguments to give the same result",
      "op": "assert // expected native arguments to give the same result",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0"
      ]
    },
    "4077": {
      "op": "itxn_begin"
    },
    "4078": {
      "op": "bytec_1 // \"s1\"",
      "defined_out": [
        "\"s1\"",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "\"s1\""
      ]
    },
    "4079": {
      "op": "len",
      "defined_out": [
        "aggregate%length%4#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "aggregate%length%4#0"
      ]
    },
    "4080": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%4#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "aggregate%as_bytes%4#0"
      ]
    },
    "4081": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%length_uint16%4#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "aggregate%length_uint16%4#0"
      ]
    },
    "4084": {
      "op": "bytec_1 // \"s1\"",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "aggregate%length_uint16%4#0",
        "\"s1\""
      ]
    },
    "4085": {
      "op": "concat",
      "defined_out": [
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "tmp%31#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "tmp%31#0"
      ]
    },
    "4086": {
      "op": "bytec_3 // 0x6231",
      "defined_out": [
        "0x6231",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "tmp%31#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "tmp%31#0",
        "0x6231"
      ]
    },
    "4087": {
      "op": "len",
      "defined_out": [
        "aggregate%length%5#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "tmp%31#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "tmp%31#0",
        "aggregate%length%5#0"
      ]
    },
    "4088": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%5#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "tmp%31#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "tmp%31#0",
        "aggregate%as_bytes%5#0"
      ]
    },
    "4089": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%length_uint16%5#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "tmp%31#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "tmp%31#0",
        "aggregate%length_uint16%5#0"
      ]
    },
    "4092": {
      "op": "bytec_3 // 0x6231",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "tmp%31#0",
        "aggregate%length_uint16%5#0",
        "0x6231"
      ]
    },
    "4093": {
      "op": "concat",
      "defined_out": [
        "inner_txn_params%2%%param_ApplicationArgs_idx_1#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "tmp%32#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "inner_txn_params%2%%param_ApplicationArgs_idx_1#0",
        "tmp%32#0"
      ]
    },
    "4094": {
      "op": "cover 1",
      "defined_out": [
        "inner_txn_params%2%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%2%%param_ApplicationArgs_idx_2#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "inner_txn_params%2%%param_ApplicationArgs_idx_2#0",
        "inner_txn_params%2%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "4096": {
      "op": "frame_dig -1",
      "defined_out": [
        "inner_txn_params%2%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%2%%param_ApplicationArgs_idx_2#0",
        "inner_txn_params%2%%param_ApplicationID_idx_0#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "inner_txn_params%2%%param_ApplicationArgs_idx_2#0",
        "inner_txn_params%2%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%2%%param_ApplicationID_idx_0#0"
      ]
    },
    "4098": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "inner_txn_params%2%%param_ApplicationArgs_idx_2#0",
        "inner_txn_params%2%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "4100": {
      "op": "bytec 7 // method \"echo_native_tuple(string,byte[],uint64,uint512)(string,byte[],uint64,uint512)\"",
      "defined_out": [
        "Method(echo_native_tuple(string,byte[],uint64,uint512)(string,byte[],uint64,uint512))",
        "inner_txn_params%2%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%2%%param_ApplicationArgs_idx_2#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "inner_txn_params%2%%param_ApplicationArgs_idx_2#0",
        "inner_txn_params%2%%param_ApplicationArgs_idx_1#0",
        "Method(echo_native_tuple(string,byte[],uint64,uint512)(string,byte[],uint64,uint512))"
      ]
    },
    "4102": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "inner_txn_params%2%%param_ApplicationArgs_idx_2#0",
        "inner_txn_params%2%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "4104": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "inner_txn_params%2%%param_ApplicationArgs_idx_2#0"
      ]
    },
    "4106": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0"
      ]
    },
    "4108": {
      "op": "bytec 5 // 0x0000000000000001",
      "defined_out": [
        "0x0000000000000001",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "0x0000000000000001"
      ]
    },
    "4110": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0"
      ]
    },
    "4112": {
      "op": "bytec 6 // 0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002",
      "defined_out": [
        "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002"
      ]
    },
    "4114": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0"
      ]
    },
    "4116": {
      "op": "intc_1 // appl",
      "defined_out": [
        "appl",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "appl"
      ]
    },
    "4117": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0"
      ]
    },
    "4119": {
      "op": "intc_0 // 0",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "0"
      ]
    },
    "4120": {
      "op": "itxn_field Fee",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0"
      ]
    },
    "4122": {
      "op": "b test_cases.typed_abi_call.typed_c2c.Greeter.test_native_tuple_method_ref_next_txn@3"
    },
    "4125": {
      "block": "test_cases.typed_abi_call.typed_c2c.Greeter.test_native_tuple_method_ref_next_txn@3",
      "stack_in": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0"
      ],
      "op": "itxn_submit"
    },
    "4126": {
      "op": "itxn LastLog",
      "defined_out": [
        "awst_tmp%2#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "awst_tmp%2#0"
      ]
    },
    "4128": {
      "op": "dup",
      "defined_out": [
        "awst_tmp%2#0",
        "awst_tmp%2#0 (copy)"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "awst_tmp%2#0",
        "awst_tmp%2#0 (copy)"
      ]
    },
    "4129": {
      "op": "extract 4 0",
      "defined_out": [
        "awst_tmp%2#0",
        "tmp%33#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "awst_tmp%2#0",
        "tmp%33#0"
      ]
    },
    "4132": {
      "op": "cover 1",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "tmp%33#0",
        "awst_tmp%2#0"
      ]
    },
    "4134": {
      "op": "extract 0 4",
      "defined_out": [
        "tmp%33#0",
        "tmp%34#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "tmp%33#0",
        "tmp%34#0"
      ]
    },
    "4137": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%33#0",
        "tmp%34#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "tmp%33#0",
        "tmp%34#0",
        "0x151f7c75"
      ]
    },
    "4138": {
      "op": "==",
      "defined_out": [
        "tmp%33#0",
        "tmp%35#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "tmp%33#0",
        "tmp%35#0"
      ]
    },
    "4139": {
      "error": "application log value is not the result of an ABI return",
      "op": "assert // application log value is not the result of an ABI return",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "tmp%33#0"
      ]
    },
    "4140": {
      "op": "dup",
      "defined_out": [
        "tmp%33#0",
        "tmp%33#0 (copy)"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "tmp%33#0",
        "tmp%33#0 (copy)"
      ]
    },
    "4141": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%33#0",
        "tmp%33#0 (copy)"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "tmp%33#0",
        "tmp%33#0 (copy)",
        "0"
      ]
    },
    "4142": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%extract_uint16%6#0",
        "tmp%33#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "tmp%33#0",
        "aggregate%extract_uint16%6#0"
      ]
    },
    "4143": {
      "op": "cover 1",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "aggregate%extract_uint16%6#0",
        "tmp%33#0"
      ]
    },
    "4145": {
      "op": "dup",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "aggregate%extract_uint16%6#0",
        "tmp%33#0",
        "tmp%33#0 (copy)"
      ]
    },
    "4146": {
      "op": "intc_3 // 2",
      "defined_out": [
        "2",
        "aggregate%extract_uint16%6#0",
        "tmp%33#0",
        "tmp%33#0 (copy)"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "aggregate%extract_uint16%6#0",
        "tmp%33#0",
        "tmp%33#0 (copy)",
        "2"
      ]
    },
    "4147": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%extract_uint16%6#0",
        "aggregate%extract_uint16%7#0",
        "tmp%33#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "aggregate%extract_uint16%6#0",
        "tmp%33#0",
        "aggregate%extract_uint16%7#0"
      ]
    },
    "4148": {
      "op": "dig 1",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "aggregate%extract_uint16%6#0",
        "tmp%33#0",
        "aggregate%extract_uint16%7#0",
        "tmp%33#0 (copy)"
      ]
    },
    "4150": {
      "op": "uncover 3",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "tmp%33#0",
        "aggregate%extract_uint16%7#0",
        "tmp%33#0 (copy)",
        "aggregate%extract_uint16%6#0"
      ]
    },
    "4152": {
      "op": "uncover 2",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "tmp%33#0",
        "tmp%33#0 (copy)",
        "aggregate%extract_uint16%6#0",
        "aggregate%extract_uint16%7#0"
      ]
    },
    "4154": {
      "op": "substring3",
      "defined_out": [
        "aggregate%substring3%4#0",
        "tmp%33#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "tmp%33#0",
        "aggregate%substring3%4#0"
      ]
    },
    "4155": {
      "op": "extract 2 0",
      "defined_out": [
        "aggregate%item0%2#0",
        "tmp%33#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "tmp%33#0",
        "aggregate%item0%2#0"
      ]
    },
    "4158": {
      "op": "cover 1",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "aggregate%item0%2#0",
        "tmp%33#0"
      ]
    },
    "4160": {
      "op": "dup",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "aggregate%item0%2#0",
        "tmp%33#0",
        "tmp%33#0 (copy)"
      ]
    },
    "4161": {
      "op": "intc_3 // 2",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "aggregate%item0%2#0",
        "tmp%33#0",
        "tmp%33#0 (copy)",
        "2"
      ]
    },
    "4162": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%extract_uint16%8#0",
        "aggregate%item0%2#0",
        "tmp%33#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "aggregate%item0%2#0",
        "tmp%33#0",
        "aggregate%extract_uint16%8#0"
      ]
    },
    "4163": {
      "op": "cover 1",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "aggregate%item0%2#0",
        "aggregate%extract_uint16%8#0",
        "tmp%33#0"
      ]
    },
    "4165": {
      "op": "dup",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "aggregate%item0%2#0",
        "aggregate%extract_uint16%8#0",
        "tmp%33#0",
        "tmp%33#0 (copy)"
      ]
    },
    "4166": {
      "op": "len",
      "defined_out": [
        "aggregate%extract_uint16%8#0",
        "aggregate%item0%2#0",
        "aggregate%len%2#0",
        "tmp%33#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "aggregate%item0%2#0",
        "aggregate%extract_uint16%8#0",
        "tmp%33#0",
        "aggregate%len%2#0"
      ]
    },
    "4167": {
      "op": "cover 1",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "aggregate%item0%2#0",
        "aggregate%extract_uint16%8#0",
        "aggregate%len%2#0",
        "tmp%33#0"
      ]
    },
    "4169": {
      "op": "dup",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "aggregate%item0%2#0",
        "aggregate%extract_uint16%8#0",
        "aggregate%len%2#0",
        "tmp%33#0",
        "tmp%33#0 (copy)"
      ]
    },
    "4170": {
      "op": "uncover 3",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "aggregate%item0%2#0",
        "aggregate%len%2#0",
        "tmp%33#0",
        "tmp%33#0 (copy)",
        "aggregate%extract_uint16%8#0"
      ]
    },
    "4172": {
      "op": "uncover 3",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "aggregate%item0%2#0",
        "tmp%33#0",
        "tmp%33#0 (copy)",
        "aggregate%extract_uint16%8#0",
        "aggregate%len%2#0"
      ]
    },
    "4174": {
      "op": "substring3",
      "defined_out": [
        "aggregate%item0%2#0",
        "aggregate%substring3%5#0",
        "tmp%33#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "aggregate%item0%2#0",
        "tmp%33#0",
        "aggregate%substring3%5#0"
      ]
    },
    "4175": {
      "op": "extract 2 0",
      "defined_out": [
        "aggregate%item0%2#0",
        "aggregate%item1%2#0",
        "tmp%33#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "aggregate%item0%2#0",
        "tmp%33#0",
        "aggregate%item1%2#0"
      ]
    },
    "4178": {
      "op": "cover 1",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "aggregate%item0%2#0",
        "aggregate%item1%2#0",
        "tmp%33#0"
      ]
    },
    "4180": {
      "op": "dup",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "aggregate%item0%2#0",
        "aggregate%item1%2#0",
        "tmp%33#0",
        "tmp%33#0 (copy)"
      ]
    },
    "4181": {
      "op": "pushint 4 // 4",
      "defined_out": [
        "4",
        "aggregate%item0%2#0",
        "aggregate%item1%2#0",
        "tmp%33#0",
        "tmp%33#0 (copy)"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "aggregate%item0%2#0",
        "aggregate%item1%2#0",
        "tmp%33#0",
        "tmp%33#0 (copy)",
        "4"
      ]
    },
    "4183": {
      "op": "intc_2 // 8",
      "defined_out": [
        "4",
        "8",
        "aggregate%item0%2#0",
        "aggregate%item1%2#0",
        "tmp%33#0",
        "tmp%33#0 (copy)"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "aggregate%item0%2#0",
        "aggregate%item1%2#0",
        "tmp%33#0",
        "tmp%33#0 (copy)",
        "4",
        "8"
      ]
    },
    "4184": {
      "op": "extract3",
      "defined_out": [
        "aggregate%extract%4#0",
        "aggregate%item0%2#0",
        "aggregate%item1%2#0",
        "tmp%33#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "aggregate%item0%2#0",
        "aggregate%item1%2#0",
        "tmp%33#0",
        "aggregate%extract%4#0"
      ]
    },
    "4185": {
      "op": "btoi",
      "defined_out": [
        "aggregate%item0%2#0",
        "aggregate%item1%2#0",
        "aggregate%item2%2#0",
        "tmp%33#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "aggregate%item0%2#0",
        "aggregate%item1%2#0",
        "tmp%33#0",
        "aggregate%item2%2#0"
      ]
    },
    "4186": {
      "op": "cover 1",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "aggregate%item0%2#0",
        "aggregate%item1%2#0",
        "aggregate%item2%2#0",
        "tmp%33#0"
      ]
    },
    "4188": {
      "op": "pushint 12 // 12",
      "defined_out": [
        "12",
        "aggregate%item0%2#0",
        "aggregate%item1%2#0",
        "aggregate%item2%2#0",
        "tmp%33#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "aggregate%item0%2#0",
        "aggregate%item1%2#0",
        "aggregate%item2%2#0",
        "tmp%33#0",
        "12"
      ]
    },
    "4190": {
      "op": "pushint 64 // 64",
      "defined_out": [
        "12",
        "64",
        "aggregate%item0%2#0",
        "aggregate%item1%2#0",
        "aggregate%item2%2#0",
        "tmp%33#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "aggregate%item0%2#0",
        "aggregate%item1%2#0",
        "aggregate%item2%2#0",
        "tmp%33#0",
        "12",
        "64"
      ]
    },
    "4192": {
      "op": "extract3",
      "defined_out": [
        "aggregate%extract%5#0",
        "aggregate%item0%2#0",
        "aggregate%item1%2#0",
        "aggregate%item2%2#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "aggregate%item0%2#0",
        "aggregate%item1%2#0",
        "aggregate%item2%2#0",
        "aggregate%extract%5#0"
      ]
    },
    "4193": {
      "op": "uncover 3",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "aggregate%item1%2#0",
        "aggregate%item2%2#0",
        "aggregate%extract%5#0",
        "aggregate%item0%2#0"
      ]
    },
    "4195": {
      "op": "cover 1",
      "defined_out": [
        "aggregate%extract%5#0",
        "aggregate%item1%2#0",
        "aggregate%item2%2#0",
        "tmp%36#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "aggregate%item1%2#0",
        "aggregate%item2%2#0",
        "tmp%36#0",
        "aggregate%extract%5#0"
      ]
    },
    "4197": {
      "op": "uncover 3",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "aggregate%item2%2#0",
        "tmp%36#0",
        "aggregate%extract%5#0",
        "aggregate%item1%2#0"
      ]
    },
    "4199": {
      "op": "cover 2",
      "defined_out": [
        "aggregate%extract%5#0",
        "tmp%36#0",
        "tmp%37#0",
        "tmp%38#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "tmp%38#0",
        "tmp%37#0",
        "tmp%36#0",
        "aggregate%extract%5#0"
      ]
    },
    "4201": {
      "op": "cover 3",
      "defined_out": [
        "tmp%36#0",
        "tmp%37#0",
        "tmp%38#0",
        "tmp%39#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "tmp%39#0",
        "tmp%38#0",
        "tmp%37#0",
        "tmp%36#0"
      ]
    },
    "4203": {
      "op": "cover 3",
      "defined_out": [
        "result_3.0#0",
        "tmp%37#0",
        "tmp%38#0",
        "tmp%39#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "result_3.0#0",
        "tmp%39#0",
        "tmp%38#0",
        "tmp%37#0"
      ]
    },
    "4205": {
      "op": "cover 3",
      "defined_out": [
        "result_3.0#0",
        "result_3.1#0",
        "tmp%38#0",
        "tmp%39#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "result_3.1#0",
        "result_3.0#0",
        "tmp%39#0",
        "tmp%38#0"
      ]
    },
    "4207": {
      "op": "cover 3",
      "defined_out": [
        "result_3.0#0",
        "result_3.1#0",
        "result_3.2#0",
        "tmp%39#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "result_3.2#0",
        "result_3.1#0",
        "result_3.0#0",
        "tmp%39#0"
      ]
    },
    "4209": {
      "op": "cover 3",
      "defined_out": [
        "result_3.0#0",
        "result_3.1#0",
        "result_3.2#0",
        "result_3.3#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "result_3.3#0",
        "result_3.2#0",
        "result_3.1#0",
        "result_3.0#0"
      ]
    },
    "4211": {
      "op": "frame_dig 0",
      "defined_out": [
        "result.0#0",
        "result_3.0#0",
        "result_3.1#0",
        "result_3.2#0",
        "result_3.3#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "result_3.3#0",
        "result_3.2#0",
        "result_3.1#0",
        "result_3.0#0",
        "result.0#0"
      ]
    },
    "4213": {
      "op": "==",
      "defined_out": [
        "result.0#0",
        "result_3.1#0",
        "result_3.2#0",
        "result_3.3#0",
        "tmp%40#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "result_3.3#0",
        "result_3.2#0",
        "result_3.1#0",
        "tmp%40#0"
      ]
    },
    "4214": {
      "op": "uncover 1",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "result_3.3#0",
        "result_3.2#0",
        "tmp%40#0",
        "result_3.1#0"
      ]
    },
    "4216": {
      "op": "frame_dig 1",
      "defined_out": [
        "result.0#0",
        "result.1#0",
        "result_3.1#0",
        "result_3.2#0",
        "result_3.3#0",
        "tmp%40#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "result_3.3#0",
        "result_3.2#0",
        "tmp%40#0",
        "result_3.1#0",
        "result.1#0"
      ]
    },
    "4218": {
      "op": "==",
      "defined_out": [
        "result.0#0",
        "result.1#0",
        "result_3.2#0",
        "result_3.3#0",
        "tmp%40#0",
        "tmp%41#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "result_3.3#0",
        "result_3.2#0",
        "tmp%40#0",
        "tmp%41#0"
      ]
    },
    "4219": {
      "op": "&&",
      "defined_out": [
        "result.0#0",
        "result.1#0",
        "result_3.2#0",
        "result_3.3#0",
        "tmp%42#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "result_3.3#0",
        "result_3.2#0",
        "tmp%42#0"
      ]
    },
    "4220": {
      "op": "uncover 1",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "result_3.3#0",
        "tmp%42#0",
        "result_3.2#0"
      ]
    },
    "4222": {
      "op": "frame_dig 3",
      "defined_out": [
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result_3.2#0",
        "result_3.3#0",
        "tmp%42#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "result_3.3#0",
        "tmp%42#0",
        "result_3.2#0",
        "result.2#0"
      ]
    },
    "4224": {
      "op": "==",
      "defined_out": [
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result_3.3#0",
        "tmp%42#0",
        "tmp%43#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "result_3.3#0",
        "tmp%42#0",
        "tmp%43#0"
      ]
    },
    "4225": {
      "op": "&&",
      "defined_out": [
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result_3.3#0",
        "tmp%44#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "result_3.3#0",
        "tmp%44#0"
      ]
    },
    "4226": {
      "op": "uncover 1",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "tmp%44#0",
        "result_3.3#0"
      ]
    },
    "4228": {
      "op": "frame_dig 2",
      "defined_out": [
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "result_3.3#0",
        "tmp%44#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "tmp%44#0",
        "result_3.3#0",
        "result.3#0"
      ]
    },
    "4230": {
      "op": "b==",
      "defined_out": [
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "tmp%44#0",
        "tmp%45#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "tmp%44#0",
        "tmp%45#0"
      ]
    },
    "4231": {
      "op": "&&",
      "defined_out": [
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "tmp%46#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "tmp%46#0"
      ]
    },
    "4232": {
      "error": "expected arc4 arguments to give the same result",
      "op": "assert // expected arc4 arguments to give the same result",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0"
      ]
    },
    "4233": {
      "op": "itxn_begin"
    },
    "4234": {
      "op": "bytec_1 // \"s1\"",
      "defined_out": [
        "\"s1\"",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "\"s1\""
      ]
    },
    "4235": {
      "op": "len",
      "defined_out": [
        "aggregate%length%6#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "aggregate%length%6#0"
      ]
    },
    "4236": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%6#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "aggregate%as_bytes%6#0"
      ]
    },
    "4237": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%length_uint16%6#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "aggregate%length_uint16%6#0"
      ]
    },
    "4240": {
      "op": "bytec_1 // \"s1\"",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "aggregate%length_uint16%6#0",
        "\"s1\""
      ]
    },
    "4241": {
      "op": "concat",
      "defined_out": [
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "tmp%47#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "tmp%47#0"
      ]
    },
    "4242": {
      "op": "bytec_3 // 0x6231",
      "defined_out": [
        "0x6231",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "tmp%47#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "tmp%47#0",
        "0x6231"
      ]
    },
    "4243": {
      "op": "len",
      "defined_out": [
        "aggregate%length%7#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "tmp%47#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "tmp%47#0",
        "aggregate%length%7#0"
      ]
    },
    "4244": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%7#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "tmp%47#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "tmp%47#0",
        "aggregate%as_bytes%7#0"
      ]
    },
    "4245": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%length_uint16%7#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "tmp%47#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "tmp%47#0",
        "aggregate%length_uint16%7#0"
      ]
    },
    "4248": {
      "op": "bytec_3 // 0x6231",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "tmp%47#0",
        "aggregate%length_uint16%7#0",
        "0x6231"
      ]
    },
    "4249": {
      "op": "concat",
      "defined_out": [
        "inner_txn_params%3%%param_ApplicationArgs_idx_1#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "tmp%48#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "inner_txn_params%3%%param_ApplicationArgs_idx_1#0",
        "tmp%48#0"
      ]
    },
    "4250": {
      "op": "cover 1",
      "defined_out": [
        "inner_txn_params%3%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%3%%param_ApplicationArgs_idx_2#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "inner_txn_params%3%%param_ApplicationArgs_idx_2#0",
        "inner_txn_params%3%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "4252": {
      "op": "frame_dig -1",
      "defined_out": [
        "inner_txn_params%3%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%3%%param_ApplicationArgs_idx_2#0",
        "inner_txn_params%3%%param_ApplicationID_idx_0#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "inner_txn_params%3%%param_ApplicationArgs_idx_2#0",
        "inner_txn_params%3%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%3%%param_ApplicationID_idx_0#0"
      ]
    },
    "4254": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "inner_txn_params%3%%param_ApplicationArgs_idx_2#0",
        "inner_txn_params%3%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "4256": {
      "op": "bytec 7 // method \"echo_native_tuple(string,byte[],uint64,uint512)(string,byte[],uint64,uint512)\"",
      "defined_out": [
        "Method(echo_native_tuple(string,byte[],uint64,uint512)(string,byte[],uint64,uint512))",
        "inner_txn_params%3%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%3%%param_ApplicationArgs_idx_2#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "inner_txn_params%3%%param_ApplicationArgs_idx_2#0",
        "inner_txn_params%3%%param_ApplicationArgs_idx_1#0",
        "Method(echo_native_tuple(string,byte[],uint64,uint512)(string,byte[],uint64,uint512))"
      ]
    },
    "4258": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "inner_txn_params%3%%param_ApplicationArgs_idx_2#0",
        "inner_txn_params%3%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "4260": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "inner_txn_params%3%%param_ApplicationArgs_idx_2#0"
      ]
    },
    "4262": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0"
      ]
    },
    "4264": {
      "op": "bytec 5 // 0x0000000000000001",
      "defined_out": [
        "0x0000000000000001",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "0x0000000000000001"
      ]
    },
    "4266": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0"
      ]
    },
    "4268": {
      "op": "bytec 6 // 0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002",
      "defined_out": [
        "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002"
      ]
    },
    "4270": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0"
      ]
    },
    "4272": {
      "op": "intc_1 // appl",
      "defined_out": [
        "appl",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "appl"
      ]
    },
    "4273": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0"
      ]
    },
    "4275": {
      "op": "intc_0 // 0",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "0"
      ]
    },
    "4276": {
      "op": "itxn_field Fee",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0"
      ]
    },
    "4278": {
      "op": "b test_cases.typed_abi_call.typed_c2c.Greeter.test_native_tuple_method_ref_next_txn@4"
    },
    "4281": {
      "block": "test_cases.typed_abi_call.typed_c2c.Greeter.test_native_tuple_method_ref_next_txn@4",
      "stack_in": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0"
      ],
      "op": "itxn_submit"
    },
    "4282": {
      "op": "itxn LastLog",
      "defined_out": [
        "awst_tmp%3#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "awst_tmp%3#0"
      ]
    },
    "4284": {
      "op": "dup",
      "defined_out": [
        "awst_tmp%3#0",
        "awst_tmp%3#0 (copy)"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "awst_tmp%3#0",
        "awst_tmp%3#0 (copy)"
      ]
    },
    "4285": {
      "op": "extract 4 0",
      "defined_out": [
        "awst_tmp%3#0",
        "tmp%49#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "awst_tmp%3#0",
        "tmp%49#0"
      ]
    },
    "4288": {
      "op": "cover 1",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "tmp%49#0",
        "awst_tmp%3#0"
      ]
    },
    "4290": {
      "op": "extract 0 4",
      "defined_out": [
        "tmp%49#0",
        "tmp%50#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "tmp%49#0",
        "tmp%50#0"
      ]
    },
    "4293": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%49#0",
        "tmp%50#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "tmp%49#0",
        "tmp%50#0",
        "0x151f7c75"
      ]
    },
    "4294": {
      "op": "==",
      "defined_out": [
        "tmp%49#0",
        "tmp%51#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "tmp%49#0",
        "tmp%51#0"
      ]
    },
    "4295": {
      "error": "application log value is not the result of an ABI return",
      "op": "assert // application log value is not the result of an ABI return",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "tmp%49#0"
      ]
    },
    "4296": {
      "op": "dup",
      "defined_out": [
        "tmp%49#0",
        "tmp%49#0 (copy)"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "tmp%49#0",
        "tmp%49#0 (copy)"
      ]
    },
    "4297": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%49#0",
        "tmp%49#0 (copy)"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "tmp%49#0",
        "tmp%49#0 (copy)",
        "0"
      ]
    },
    "4298": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%extract_uint16%9#0",
        "tmp%49#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "tmp%49#0",
        "aggregate%extract_uint16%9#0"
      ]
    },
    "4299": {
      "op": "cover 1",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "aggregate%extract_uint16%9#0",
        "tmp%49#0"
      ]
    },
    "4301": {
      "op": "dup",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "aggregate%extract_uint16%9#0",
        "tmp%49#0",
        "tmp%49#0 (copy)"
      ]
    },
    "4302": {
      "op": "intc_3 // 2",
      "defined_out": [
        "2",
        "aggregate%extract_uint16%9#0",
        "tmp%49#0",
        "tmp%49#0 (copy)"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "aggregate%extract_uint16%9#0",
        "tmp%49#0",
        "tmp%49#0 (copy)",
        "2"
      ]
    },
    "4303": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%extract_uint16%10#0",
        "aggregate%extract_uint16%9#0",
        "tmp%49#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "aggregate%extract_uint16%9#0",
        "tmp%49#0",
        "aggregate%extract_uint16%10#0"
      ]
    },
    "4304": {
      "op": "dig 1",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "aggregate%extract_uint16%9#0",
        "tmp%49#0",
        "aggregate%extract_uint16%10#0",
        "tmp%49#0 (copy)"
      ]
    },
    "4306": {
      "op": "uncover 3",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "tmp%49#0",
        "aggregate%extract_uint16%10#0",
        "tmp%49#0 (copy)",
        "aggregate%extract_uint16%9#0"
      ]
    },
    "4308": {
      "op": "uncover 2",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "tmp%49#0",
        "tmp%49#0 (copy)",
        "aggregate%extract_uint16%9#0",
        "aggregate%extract_uint16%10#0"
      ]
    },
    "4310": {
      "op": "substring3",
      "defined_out": [
        "aggregate%substring3%6#0",
        "tmp%49#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "tmp%49#0",
        "aggregate%substring3%6#0"
      ]
    },
    "4311": {
      "op": "extract 2 0",
      "defined_out": [
        "aggregate%item0%3#0",
        "tmp%49#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "tmp%49#0",
        "aggregate%item0%3#0"
      ]
    },
    "4314": {
      "op": "cover 1",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "aggregate%item0%3#0",
        "tmp%49#0"
      ]
    },
    "4316": {
      "op": "dup",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "aggregate%item0%3#0",
        "tmp%49#0",
        "tmp%49#0 (copy)"
      ]
    },
    "4317": {
      "op": "intc_3 // 2",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "aggregate%item0%3#0",
        "tmp%49#0",
        "tmp%49#0 (copy)",
        "2"
      ]
    },
    "4318": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%extract_uint16%11#0",
        "aggregate%item0%3#0",
        "tmp%49#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "aggregate%item0%3#0",
        "tmp%49#0",
        "aggregate%extract_uint16%11#0"
      ]
    },
    "4319": {
      "op": "cover 1",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "aggregate%item0%3#0",
        "aggregate%extract_uint16%11#0",
        "tmp%49#0"
      ]
    },
    "4321": {
      "op": "dup",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "aggregate%item0%3#0",
        "aggregate%extract_uint16%11#0",
        "tmp%49#0",
        "tmp%49#0 (copy)"
      ]
    },
    "4322": {
      "op": "len",
      "defined_out": [
        "aggregate%extract_uint16%11#0",
        "aggregate%item0%3#0",
        "aggregate%len%3#0",
        "tmp%49#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "aggregate%item0%3#0",
        "aggregate%extract_uint16%11#0",
        "tmp%49#0",
        "aggregate%len%3#0"
      ]
    },
    "4323": {
      "op": "cover 1",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "aggregate%item0%3#0",
        "aggregate%extract_uint16%11#0",
        "aggregate%len%3#0",
        "tmp%49#0"
      ]
    },
    "4325": {
      "op": "dup",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "aggregate%item0%3#0",
        "aggregate%extract_uint16%11#0",
        "aggregate%len%3#0",
        "tmp%49#0",
        "tmp%49#0 (copy)"
      ]
    },
    "4326": {
      "op": "uncover 3",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "aggregate%item0%3#0",
        "aggregate%len%3#0",
        "tmp%49#0",
        "tmp%49#0 (copy)",
        "aggregate%extract_uint16%11#0"
      ]
    },
    "4328": {
      "op": "uncover 3",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "aggregate%item0%3#0",
        "tmp%49#0",
        "tmp%49#0 (copy)",
        "aggregate%extract_uint16%11#0",
        "aggregate%len%3#0"
      ]
    },
    "4330": {
      "op": "substring3",
      "defined_out": [
        "aggregate%item0%3#0",
        "aggregate%substring3%7#0",
        "tmp%49#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "aggregate%item0%3#0",
        "tmp%49#0",
        "aggregate%substring3%7#0"
      ]
    },
    "4331": {
      "op": "extract 2 0",
      "defined_out": [
        "aggregate%item0%3#0",
        "aggregate%item1%3#0",
        "tmp%49#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "aggregate%item0%3#0",
        "tmp%49#0",
        "aggregate%item1%3#0"
      ]
    },
    "4334": {
      "op": "cover 1",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "aggregate%item0%3#0",
        "aggregate%item1%3#0",
        "tmp%49#0"
      ]
    },
    "4336": {
      "op": "dup",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "aggregate%item0%3#0",
        "aggregate%item1%3#0",
        "tmp%49#0",
        "tmp%49#0 (copy)"
      ]
    },
    "4337": {
      "op": "pushint 4 // 4",
      "defined_out": [
        "4",
        "aggregate%item0%3#0",
        "aggregate%item1%3#0",
        "tmp%49#0",
        "tmp%49#0 (copy)"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "aggregate%item0%3#0",
        "aggregate%item1%3#0",
        "tmp%49#0",
        "tmp%49#0 (copy)",
        "4"
      ]
    },
    "4339": {
      "op": "intc_2 // 8",
      "defined_out": [
        "4",
        "8",
        "aggregate%item0%3#0",
        "aggregate%item1%3#0",
        "tmp%49#0",
        "tmp%49#0 (copy)"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "aggregate%item0%3#0",
        "aggregate%item1%3#0",
        "tmp%49#0",
        "tmp%49#0 (copy)",
        "4",
        "8"
      ]
    },
    "4340": {
      "op": "extract3",
      "defined_out": [
        "aggregate%extract%6#0",
        "aggregate%item0%3#0",
        "aggregate%item1%3#0",
        "tmp%49#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "aggregate%item0%3#0",
        "aggregate%item1%3#0",
        "tmp%49#0",
        "aggregate%extract%6#0"
      ]
    },
    "4341": {
      "op": "btoi",
      "defined_out": [
        "aggregate%item0%3#0",
        "aggregate%item1%3#0",
        "aggregate%item2%3#0",
        "tmp%49#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "aggregate%item0%3#0",
        "aggregate%item1%3#0",
        "tmp%49#0",
        "aggregate%item2%3#0"
      ]
    },
    "4342": {
      "op": "cover 1",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "aggregate%item0%3#0",
        "aggregate%item1%3#0",
        "aggregate%item2%3#0",
        "tmp%49#0"
      ]
    },
    "4344": {
      "op": "pushint 12 // 12",
      "defined_out": [
        "12",
        "aggregate%item0%3#0",
        "aggregate%item1%3#0",
        "aggregate%item2%3#0",
        "tmp%49#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "aggregate%item0%3#0",
        "aggregate%item1%3#0",
        "aggregate%item2%3#0",
        "tmp%49#0",
        "12"
      ]
    },
    "4346": {
      "op": "pushint 64 // 64",
      "defined_out": [
        "12",
        "64",
        "aggregate%item0%3#0",
        "aggregate%item1%3#0",
        "aggregate%item2%3#0",
        "tmp%49#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "aggregate%item0%3#0",
        "aggregate%item1%3#0",
        "aggregate%item2%3#0",
        "tmp%49#0",
        "12",
        "64"
      ]
    },
    "4348": {
      "op": "extract3",
      "defined_out": [
        "aggregate%extract%7#0",
        "aggregate%item0%3#0",
        "aggregate%item1%3#0",
        "aggregate%item2%3#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "aggregate%item0%3#0",
        "aggregate%item1%3#0",
        "aggregate%item2%3#0",
        "aggregate%extract%7#0"
      ]
    },
    "4349": {
      "op": "uncover 3",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "aggregate%item1%3#0",
        "aggregate%item2%3#0",
        "aggregate%extract%7#0",
        "aggregate%item0%3#0"
      ]
    },
    "4351": {
      "op": "cover 1",
      "defined_out": [
        "aggregate%extract%7#0",
        "aggregate%item1%3#0",
        "aggregate%item2%3#0",
        "tmp%52#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "aggregate%item1%3#0",
        "aggregate%item2%3#0",
        "tmp%52#0",
        "aggregate%extract%7#0"
      ]
    },
    "4353": {
      "op": "uncover 3",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "aggregate%item2%3#0",
        "tmp%52#0",
        "aggregate%extract%7#0",
        "aggregate%item1%3#0"
      ]
    },
    "4355": {
      "op": "cover 2",
      "defined_out": [
        "aggregate%extract%7#0",
        "tmp%52#0",
        "tmp%53#0",
        "tmp%54#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "tmp%54#0",
        "tmp%53#0",
        "tmp%52#0",
        "aggregate%extract%7#0"
      ]
    },
    "4357": {
      "op": "cover 3",
      "defined_out": [
        "tmp%52#0",
        "tmp%53#0",
        "tmp%54#0",
        "tmp%55#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "tmp%55#0",
        "tmp%54#0",
        "tmp%53#0",
        "tmp%52#0"
      ]
    },
    "4359": {
      "op": "cover 3",
      "defined_out": [
        "result_native.0#0",
        "tmp%53#0",
        "tmp%54#0",
        "tmp%55#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "result_native.0#0",
        "tmp%55#0",
        "tmp%54#0",
        "tmp%53#0"
      ]
    },
    "4361": {
      "op": "cover 3",
      "defined_out": [
        "result_native.0#0",
        "result_native.1#0",
        "tmp%54#0",
        "tmp%55#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "result_native.1#0",
        "result_native.0#0",
        "tmp%55#0",
        "tmp%54#0"
      ]
    },
    "4363": {
      "op": "cover 3",
      "defined_out": [
        "result_native.0#0",
        "result_native.1#0",
        "result_native.2#0",
        "tmp%55#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "result_native.2#0",
        "result_native.1#0",
        "result_native.0#0",
        "tmp%55#0"
      ]
    },
    "4365": {
      "op": "cover 3",
      "defined_out": [
        "result_native.0#0",
        "result_native.1#0",
        "result_native.2#0",
        "result_native.3#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "result_native.3#0",
        "result_native.2#0",
        "result_native.1#0",
        "result_native.0#0"
      ]
    },
    "4367": {
      "op": "frame_dig 0",
      "defined_out": [
        "result.0#0",
        "result_native.0#0",
        "result_native.1#0",
        "result_native.2#0",
        "result_native.3#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "result_native.3#0",
        "result_native.2#0",
        "result_native.1#0",
        "result_native.0#0",
        "result.0#0"
      ]
    },
    "4369": {
      "op": "==",
      "defined_out": [
        "result.0#0",
        "result_native.1#0",
        "result_native.2#0",
        "result_native.3#0",
        "tmp%56#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "result_native.3#0",
        "result_native.2#0",
        "result_native.1#0",
        "tmp%56#0"
      ]
    },
    "4370": {
      "op": "uncover 1",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "result_native.3#0",
        "result_native.2#0",
        "tmp%56#0",
        "result_native.1#0"
      ]
    },
    "4372": {
      "op": "frame_dig 1",
      "defined_out": [
        "result.0#0",
        "result.1#0",
        "result_native.1#0",
        "result_native.2#0",
        "result_native.3#0",
        "tmp%56#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "result_native.3#0",
        "result_native.2#0",
        "tmp%56#0",
        "result_native.1#0",
        "result.1#0"
      ]
    },
    "4374": {
      "op": "==",
      "defined_out": [
        "result.0#0",
        "result.1#0",
        "result_native.2#0",
        "result_native.3#0",
        "tmp%56#0",
        "tmp%57#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "result_native.3#0",
        "result_native.2#0",
        "tmp%56#0",
        "tmp%57#0"
      ]
    },
    "4375": {
      "op": "&&",
      "defined_out": [
        "result.0#0",
        "result.1#0",
        "result_native.2#0",
        "result_native.3#0",
        "tmp%58#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "result_native.3#0",
        "result_native.2#0",
        "tmp%58#0"
      ]
    },
    "4376": {
      "op": "uncover 1",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "result_native.3#0",
        "tmp%58#0",
        "result_native.2#0"
      ]
    },
    "4378": {
      "op": "frame_dig 3",
      "defined_out": [
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result_native.2#0",
        "result_native.3#0",
        "tmp%58#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "result_native.3#0",
        "tmp%58#0",
        "result_native.2#0",
        "result.2#0"
      ]
    },
    "4380": {
      "op": "==",
      "defined_out": [
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result_native.3#0",
        "tmp%58#0",
        "tmp%59#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "result_native.3#0",
        "tmp%58#0",
        "tmp%59#0"
      ]
    },
    "4381": {
      "op": "&&",
      "defined_out": [
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result_native.3#0",
        "tmp%60#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "result_native.3#0",
        "tmp%60#0"
      ]
    },
    "4382": {
      "op": "uncover 1",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "tmp%60#0",
        "result_native.3#0"
      ]
    },
    "4384": {
      "op": "frame_dig 2",
      "defined_out": [
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "result_native.3#0",
        "tmp%60#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "tmp%60#0",
        "result_native.3#0",
        "result.3#0"
      ]
    },
    "4386": {
      "op": "b==",
      "defined_out": [
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "tmp%60#0",
        "tmp%61#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "tmp%60#0",
        "tmp%61#0"
      ]
    },
    "4387": {
      "op": "&&",
      "defined_out": [
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "tmp%62#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "tmp%62#0"
      ]
    },
    "4388": {
      "op": "assert",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0"
      ]
    },
    "4389": {
      "retsub": true,
      "op": "retsub"
    },
    "4390": {
      "subroutine": "test_cases.typed_abi_call.typed_c2c.Greeter.test_nested_tuples",
      "params": {
        "app#0": "uint64"
      },
      "block": "test_cases.typed_abi_call.typed_c2c.Greeter.test_nested_tuples",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "4393": {
      "op": "b test_cases.typed_abi_call.typed_c2c.Greeter.test_nested_tuples_block@0"
    },
    "4396": {
      "block": "test_cases.typed_abi_call.typed_c2c.Greeter.test_nested_tuples_block@0",
      "stack_in": [],
      "op": "itxn_begin"
    },
    "4397": {
      "op": "bytec_1 // \"s1\"",
      "defined_out": [
        "\"s1\""
      ],
      "stack_out": [
        "\"s1\""
      ]
    },
    "4398": {
      "op": "len",
      "defined_out": [
        "aggregate%length%0#0"
      ],
      "stack_out": [
        "aggregate%length%0#0"
      ]
    },
    "4399": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%0#0"
      ],
      "stack_out": [
        "aggregate%as_bytes%0#0"
      ]
    },
    "4400": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%length_uint16%0#0"
      ],
      "stack_out": [
        "aggregate%length_uint16%0#0"
      ]
    },
    "4403": {
      "op": "bytec_1 // \"s1\"",
      "stack_out": [
        "aggregate%length_uint16%0#0",
        "\"s1\""
      ]
    },
    "4404": {
      "op": "concat",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "4405": {
      "op": "bytec 18 // \"s2\"",
      "defined_out": [
        "\"s2\"",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "\"s2\""
      ]
    },
    "4407": {
      "op": "len",
      "defined_out": [
        "aggregate%length%1#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "aggregate%length%1#0"
      ]
    },
    "4408": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%1#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "aggregate%as_bytes%1#0"
      ]
    },
    "4409": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%length_uint16%1#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "aggregate%length_uint16%1#0"
      ]
    },
    "4412": {
      "op": "bytec 18 // \"s2\"",
      "stack_out": [
        "tmp%0#0",
        "aggregate%length_uint16%1#0",
        "\"s2\""
      ]
    },
    "4414": {
      "op": "concat",
      "defined_out": [
        "aggregate%as_Encoded(len+utf8[])%1#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "aggregate%as_Encoded(len+utf8[])%1#0"
      ]
    },
    "4415": {
      "op": "cover 1",
      "defined_out": [
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%0#0"
      ]
    },
    "4417": {
      "op": "bytec 19 // 0x33",
      "defined_out": [
        "0x33",
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%0#0",
        "0x33"
      ]
    },
    "4419": {
      "op": "len",
      "defined_out": [
        "aggregate%length%2#0",
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%0#0",
        "aggregate%length%2#0"
      ]
    },
    "4420": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%2#0",
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%0#0",
        "aggregate%as_bytes%2#0"
      ]
    },
    "4421": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%length_uint16%2#0",
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%0#0",
        "aggregate%length_uint16%2#0"
      ]
    },
    "4424": {
      "op": "bytec 19 // 0x33",
      "stack_out": [
        "tmp%1#0",
        "tmp%0#0",
        "aggregate%length_uint16%2#0",
        "0x33"
      ]
    },
    "4426": {
      "op": "concat",
      "defined_out": [
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%0#0",
        "aggregate%as_Encoded(len+uint8[])%0#0"
      ]
    },
    "4427": {
      "op": "cover 2",
      "defined_out": [
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "tmp%1#0",
        "tmp%0#0"
      ]
    },
    "4429": {
      "op": "pushint 4 // 4",
      "defined_out": [
        "4",
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "tmp%1#0",
        "tmp%0#0",
        "4"
      ]
    },
    "4431": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%3#0",
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "tmp%1#0",
        "tmp%0#0",
        "aggregate%as_bytes%3#0"
      ]
    },
    "4432": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%offset_as_uint16%0#0",
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "tmp%1#0",
        "tmp%0#0",
        "aggregate%offset_as_uint16%0#0"
      ]
    },
    "4435": {
      "op": "bytec_2 // 0x",
      "defined_out": [
        "0x",
        "aggregate%offset_as_uint16%0#0",
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "tmp%1#0",
        "tmp%0#0",
        "aggregate%offset_as_uint16%0#0",
        "0x"
      ]
    },
    "4436": {
      "op": "uncover 1",
      "stack_out": [
        "tmp%2#0",
        "tmp%1#0",
        "tmp%0#0",
        "0x",
        "aggregate%offset_as_uint16%0#0"
      ]
    },
    "4438": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%0#0",
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "tmp%1#0",
        "tmp%0#0",
        "aggregate%head%0#0"
      ]
    },
    "4439": {
      "op": "dig 1",
      "defined_out": [
        "aggregate%head%0#0",
        "tmp%0#0",
        "tmp%0#0 (copy)",
        "tmp%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "tmp%1#0",
        "tmp%0#0",
        "aggregate%head%0#0",
        "tmp%0#0 (copy)"
      ]
    },
    "4441": {
      "op": "len",
      "defined_out": [
        "aggregate%data_length%0#0",
        "aggregate%head%0#0",
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "tmp%1#0",
        "tmp%0#0",
        "aggregate%head%0#0",
        "aggregate%data_length%0#0"
      ]
    },
    "4442": {
      "op": "pushint 4 // 4",
      "stack_out": [
        "tmp%2#0",
        "tmp%1#0",
        "tmp%0#0",
        "aggregate%head%0#0",
        "aggregate%data_length%0#0",
        "4"
      ]
    },
    "4444": {
      "op": "+",
      "defined_out": [
        "aggregate%current_tail_offset%0#0",
        "aggregate%head%0#0",
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "tmp%1#0",
        "tmp%0#0",
        "aggregate%head%0#0",
        "aggregate%current_tail_offset%0#0"
      ]
    },
    "4445": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%4#0",
        "aggregate%head%0#0",
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "tmp%1#0",
        "tmp%0#0",
        "aggregate%head%0#0",
        "aggregate%as_bytes%4#0"
      ]
    },
    "4446": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%head%0#0",
        "aggregate%offset_as_uint16%1#0",
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "tmp%1#0",
        "tmp%0#0",
        "aggregate%head%0#0",
        "aggregate%offset_as_uint16%1#0"
      ]
    },
    "4449": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%1#0",
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "tmp%1#0",
        "tmp%0#0",
        "aggregate%head%1#0"
      ]
    },
    "4450": {
      "op": "uncover 1",
      "stack_out": [
        "tmp%2#0",
        "tmp%1#0",
        "aggregate%head%1#0",
        "tmp%0#0"
      ]
    },
    "4452": {
      "op": "concat",
      "defined_out": [
        "aggregate%concat%0#0",
        "tmp%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "tmp%1#0",
        "aggregate%concat%0#0"
      ]
    },
    "4453": {
      "op": "uncover 1",
      "stack_out": [
        "tmp%2#0",
        "aggregate%concat%0#0",
        "tmp%1#0"
      ]
    },
    "4455": {
      "op": "concat",
      "defined_out": [
        "aggregate%as_Encoded((len+utf8[]),(len+utf8[]))%0#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "aggregate%as_Encoded((len+utf8[]),(len+utf8[]))%0#0"
      ]
    },
    "4456": {
      "op": "pushint 4 // 4",
      "stack_out": [
        "tmp%2#0",
        "aggregate%as_Encoded((len+utf8[]),(len+utf8[]))%0#0",
        "4"
      ]
    },
    "4458": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded((len+utf8[]),(len+utf8[]))%0#0",
        "aggregate%as_bytes%5#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "aggregate%as_Encoded((len+utf8[]),(len+utf8[]))%0#0",
        "aggregate%as_bytes%5#0"
      ]
    },
    "4459": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%as_Encoded((len+utf8[]),(len+utf8[]))%0#0",
        "aggregate%offset_as_uint16%2#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "aggregate%as_Encoded((len+utf8[]),(len+utf8[]))%0#0",
        "aggregate%offset_as_uint16%2#0"
      ]
    },
    "4462": {
      "op": "bytec_2 // 0x",
      "stack_out": [
        "tmp%2#0",
        "aggregate%as_Encoded((len+utf8[]),(len+utf8[]))%0#0",
        "aggregate%offset_as_uint16%2#0",
        "0x"
      ]
    },
    "4463": {
      "op": "uncover 1",
      "stack_out": [
        "tmp%2#0",
        "aggregate%as_Encoded((len+utf8[]),(len+utf8[]))%0#0",
        "0x",
        "aggregate%offset_as_uint16%2#0"
      ]
    },
    "4465": {
      "op": "concat",
      "defined_out": [
        "aggregate%as_Encoded((len+utf8[]),(len+utf8[]))%0#0",
        "aggregate%head%2#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "aggregate%as_Encoded((len+utf8[]),(len+utf8[]))%0#0",
        "aggregate%head%2#0"
      ]
    },
    "4466": {
      "op": "cover 1",
      "stack_out": [
        "tmp%2#0",
        "aggregate%head%2#0",
        "aggregate%as_Encoded((len+utf8[]),(len+utf8[]))%0#0"
      ]
    },
    "4468": {
      "op": "dup",
      "defined_out": [
        "aggregate%as_Encoded((len+utf8[]),(len+utf8[]))%0#0",
        "aggregate%as_Encoded((len+utf8[]),(len+utf8[]))%0#0 (copy)",
        "aggregate%head%2#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "aggregate%head%2#0",
        "aggregate%as_Encoded((len+utf8[]),(len+utf8[]))%0#0",
        "aggregate%as_Encoded((len+utf8[]),(len+utf8[]))%0#0 (copy)"
      ]
    },
    "4469": {
      "op": "len",
      "defined_out": [
        "aggregate%as_Encoded((len+utf8[]),(len+utf8[]))%0#0",
        "aggregate%data_length%2#0",
        "aggregate%head%2#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "aggregate%head%2#0",
        "aggregate%as_Encoded((len+utf8[]),(len+utf8[]))%0#0",
        "aggregate%data_length%2#0"
      ]
    },
    "4470": {
      "op": "pushint 4 // 4",
      "stack_out": [
        "tmp%2#0",
        "aggregate%head%2#0",
        "aggregate%as_Encoded((len+utf8[]),(len+utf8[]))%0#0",
        "aggregate%data_length%2#0",
        "4"
      ]
    },
    "4472": {
      "op": "+",
      "defined_out": [
        "aggregate%as_Encoded((len+utf8[]),(len+utf8[]))%0#0",
        "aggregate%current_tail_offset%2#0",
        "aggregate%head%2#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "aggregate%head%2#0",
        "aggregate%as_Encoded((len+utf8[]),(len+utf8[]))%0#0",
        "aggregate%current_tail_offset%2#0"
      ]
    },
    "4473": {
      "op": "bytec_2 // 0x",
      "stack_out": [
        "tmp%2#0",
        "aggregate%head%2#0",
        "aggregate%as_Encoded((len+utf8[]),(len+utf8[]))%0#0",
        "aggregate%current_tail_offset%2#0",
        "0x"
      ]
    },
    "4474": {
      "op": "bytec 5 // 0x0000000000000001",
      "defined_out": [
        "0x",
        "0x0000000000000001",
        "aggregate%as_Encoded((len+utf8[]),(len+utf8[]))%0#0",
        "aggregate%current_tail_offset%2#0",
        "aggregate%head%2#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "aggregate%head%2#0",
        "aggregate%as_Encoded((len+utf8[]),(len+utf8[]))%0#0",
        "aggregate%current_tail_offset%2#0",
        "0x",
        "0x0000000000000001"
      ]
    },
    "4476": {
      "op": "concat",
      "defined_out": [
        "aggregate%as_Encoded((len+utf8[]),(len+utf8[]))%0#0",
        "aggregate%current_tail_offset%2#0",
        "aggregate%head%2#0",
        "aggregate%head%3#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "aggregate%head%2#0",
        "aggregate%as_Encoded((len+utf8[]),(len+utf8[]))%0#0",
        "aggregate%current_tail_offset%2#0",
        "aggregate%head%3#0"
      ]
    },
    "4477": {
      "op": "bytec 15 // 0x0000000000000002",
      "defined_out": [
        "0x0000000000000002",
        "aggregate%as_Encoded((len+utf8[]),(len+utf8[]))%0#0",
        "aggregate%current_tail_offset%2#0",
        "aggregate%head%2#0",
        "aggregate%head%3#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "aggregate%head%2#0",
        "aggregate%as_Encoded((len+utf8[]),(len+utf8[]))%0#0",
        "aggregate%current_tail_offset%2#0",
        "aggregate%head%3#0",
        "0x0000000000000002"
      ]
    },
    "4479": {
      "op": "concat",
      "defined_out": [
        "aggregate%as_Encoded((len+utf8[]),(len+utf8[]))%0#0",
        "aggregate%current_tail_offset%2#0",
        "aggregate%head%2#0",
        "aggregate%head%4#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "aggregate%head%2#0",
        "aggregate%as_Encoded((len+utf8[]),(len+utf8[]))%0#0",
        "aggregate%current_tail_offset%2#0",
        "aggregate%head%4#0"
      ]
    },
    "4480": {
      "op": "pushint 18 // 18",
      "defined_out": [
        "18",
        "aggregate%as_Encoded((len+utf8[]),(len+utf8[]))%0#0",
        "aggregate%current_tail_offset%2#0",
        "aggregate%head%2#0",
        "aggregate%head%4#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "aggregate%head%2#0",
        "aggregate%as_Encoded((len+utf8[]),(len+utf8[]))%0#0",
        "aggregate%current_tail_offset%2#0",
        "aggregate%head%4#0",
        "18"
      ]
    },
    "4482": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded((len+utf8[]),(len+utf8[]))%0#0",
        "aggregate%as_bytes%6#0",
        "aggregate%current_tail_offset%2#0",
        "aggregate%head%2#0",
        "aggregate%head%4#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "aggregate%head%2#0",
        "aggregate%as_Encoded((len+utf8[]),(len+utf8[]))%0#0",
        "aggregate%current_tail_offset%2#0",
        "aggregate%head%4#0",
        "aggregate%as_bytes%6#0"
      ]
    },
    "4483": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%as_Encoded((len+utf8[]),(len+utf8[]))%0#0",
        "aggregate%current_tail_offset%2#0",
        "aggregate%head%2#0",
        "aggregate%head%4#0",
        "aggregate%offset_as_uint16%3#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "aggregate%head%2#0",
        "aggregate%as_Encoded((len+utf8[]),(len+utf8[]))%0#0",
        "aggregate%current_tail_offset%2#0",
        "aggregate%head%4#0",
        "aggregate%offset_as_uint16%3#0"
      ]
    },
    "4486": {
      "op": "concat",
      "defined_out": [
        "aggregate%as_Encoded((len+utf8[]),(len+utf8[]))%0#0",
        "aggregate%current_tail_offset%2#0",
        "aggregate%head%2#0",
        "aggregate%head%5#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "aggregate%head%2#0",
        "aggregate%as_Encoded((len+utf8[]),(len+utf8[]))%0#0",
        "aggregate%current_tail_offset%2#0",
        "aggregate%head%5#0"
      ]
    },
    "4487": {
      "op": "uncover 4",
      "stack_out": [
        "aggregate%head%2#0",
        "aggregate%as_Encoded((len+utf8[]),(len+utf8[]))%0#0",
        "aggregate%current_tail_offset%2#0",
        "aggregate%head%5#0",
        "tmp%2#0"
      ]
    },
    "4489": {
      "op": "concat",
      "defined_out": [
        "aggregate%as_Encoded((len+utf8[]),(len+utf8[]))%0#0",
        "aggregate%as_Encoded(uint64,uint64,(len+uint8[]))%0#0",
        "aggregate%current_tail_offset%2#0",
        "aggregate%head%2#0"
      ],
      "stack_out": [
        "aggregate%head%2#0",
        "aggregate%as_Encoded((len+utf8[]),(len+utf8[]))%0#0",
        "aggregate%current_tail_offset%2#0",
        "aggregate%as_Encoded(uint64,uint64,(len+uint8[]))%0#0"
      ]
    },
    "4490": {
      "op": "uncover 1",
      "stack_out": [
        "aggregate%head%2#0",
        "aggregate%as_Encoded((len+utf8[]),(len+utf8[]))%0#0",
        "aggregate%as_Encoded(uint64,uint64,(len+uint8[]))%0#0",
        "aggregate%current_tail_offset%2#0"
      ]
    },
    "4492": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded((len+utf8[]),(len+utf8[]))%0#0",
        "aggregate%as_Encoded(uint64,uint64,(len+uint8[]))%0#0",
        "aggregate%as_bytes%7#0",
        "aggregate%head%2#0"
      ],
      "stack_out": [
        "aggregate%head%2#0",
        "aggregate%as_Encoded((len+utf8[]),(len+utf8[]))%0#0",
        "aggregate%as_Encoded(uint64,uint64,(len+uint8[]))%0#0",
        "aggregate%as_bytes%7#0"
      ]
    },
    "4493": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%as_Encoded((len+utf8[]),(len+utf8[]))%0#0",
        "aggregate%as_Encoded(uint64,uint64,(len+uint8[]))%0#0",
        "aggregate%head%2#0",
        "aggregate%offset_as_uint16%4#0"
      ],
      "stack_out": [
        "aggregate%head%2#0",
        "aggregate%as_Encoded((len+utf8[]),(len+utf8[]))%0#0",
        "aggregate%as_Encoded(uint64,uint64,(len+uint8[]))%0#0",
        "aggregate%offset_as_uint16%4#0"
      ]
    },
    "4496": {
      "op": "uncover 3",
      "stack_out": [
        "aggregate%as_Encoded((len+utf8[]),(len+utf8[]))%0#0",
        "aggregate%as_Encoded(uint64,uint64,(len+uint8[]))%0#0",
        "aggregate%offset_as_uint16%4#0",
        "aggregate%head%2#0"
      ]
    },
    "4498": {
      "op": "uncover 1",
      "stack_out": [
        "aggregate%as_Encoded((len+utf8[]),(len+utf8[]))%0#0",
        "aggregate%as_Encoded(uint64,uint64,(len+uint8[]))%0#0",
        "aggregate%head%2#0",
        "aggregate%offset_as_uint16%4#0"
      ]
    },
    "4500": {
      "op": "concat",
      "defined_out": [
        "aggregate%as_Encoded((len+utf8[]),(len+utf8[]))%0#0",
        "aggregate%as_Encoded(uint64,uint64,(len+uint8[]))%0#0",
        "aggregate%head%6#0"
      ],
      "stack_out": [
        "aggregate%as_Encoded((len+utf8[]),(len+utf8[]))%0#0",
        "aggregate%as_Encoded(uint64,uint64,(len+uint8[]))%0#0",
        "aggregate%head%6#0"
      ]
    },
    "4501": {
      "op": "uncover 2",
      "stack_out": [
        "aggregate%as_Encoded(uint64,uint64,(len+uint8[]))%0#0",
        "aggregate%head%6#0",
        "aggregate%as_Encoded((len+utf8[]),(len+utf8[]))%0#0"
      ]
    },
    "4503": {
      "op": "concat",
      "defined_out": [
        "aggregate%as_Encoded(uint64,uint64,(len+uint8[]))%0#0",
        "aggregate%concat%3#0"
      ],
      "stack_out": [
        "aggregate%as_Encoded(uint64,uint64,(len+uint8[]))%0#0",
        "aggregate%concat%3#0"
      ]
    },
    "4504": {
      "op": "uncover 1",
      "stack_out": [
        "aggregate%concat%3#0",
        "aggregate%as_Encoded(uint64,uint64,(len+uint8[]))%0#0"
      ]
    },
    "4506": {
      "op": "concat",
      "defined_out": [
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "4507": {
      "op": "frame_dig -1",
      "defined_out": [
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%0%%param_ApplicationID_idx_0#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%0%%param_ApplicationID_idx_0#0"
      ]
    },
    "4509": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "4511": {
      "op": "bytec 33 // method \"echo_nested_tuple(((string,string),(uint64,uint64,byte[])))((string,string),(uint64,uint64,byte[]))\"",
      "defined_out": [
        "Method(echo_nested_tuple(((string,string),(uint64,uint64,byte[])))((string,string),(uint64,uint64,byte[])))",
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0",
        "Method(echo_nested_tuple(((string,string),(uint64,uint64,byte[])))((string,string),(uint64,uint64,byte[])))"
      ]
    },
    "4513": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "4515": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "4517": {
      "op": "intc_1 // appl",
      "defined_out": [
        "appl"
      ],
      "stack_out": [
        "appl"
      ]
    },
    "4518": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "4520": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "4521": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "4523": {
      "op": "b test_cases.typed_abi_call.typed_c2c.Greeter.test_nested_tuples_next_txn@1"
    },
    "4526": {
      "block": "test_cases.typed_abi_call.typed_c2c.Greeter.test_nested_tuples_next_txn@1",
      "stack_in": [],
      "op": "itxn_submit"
    },
    "4527": {
      "op": "itxn LastLog",
      "defined_out": [
        "awst_tmp%0#0"
      ],
      "stack_out": [
        "awst_tmp%0#0"
      ]
    },
    "4529": {
      "op": "dup",
      "defined_out": [
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ]
    },
    "4530": {
      "op": "extract 4 0",
      "defined_out": [
        "awst_tmp%0#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "tmp%4#0"
      ]
    },
    "4533": {
      "op": "cover 1",
      "stack_out": [
        "tmp%4#0",
        "awst_tmp%0#0"
      ]
    },
    "4535": {
      "op": "extract 0 4",
      "defined_out": [
        "tmp%4#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "tmp%5#0"
      ]
    },
    "4538": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%4#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "tmp%5#0",
        "0x151f7c75"
      ]
    },
    "4539": {
      "op": "==",
      "defined_out": [
        "tmp%4#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "tmp%6#0"
      ]
    },
    "4540": {
      "error": "application log value is not the result of an ABI return",
      "op": "assert // application log value is not the result of an ABI return",
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "4541": {
      "op": "dup",
      "defined_out": [
        "tmp%4#0",
        "tmp%4#0 (copy)"
      ],
      "stack_out": [
        "tmp%4#0",
        "tmp%4#0 (copy)"
      ]
    },
    "4542": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%4#0",
        "tmp%4#0 (copy)"
      ],
      "stack_out": [
        "tmp%4#0",
        "tmp%4#0 (copy)",
        "0"
      ]
    },
    "4543": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%extract_uint16%0#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "aggregate%extract_uint16%0#0"
      ]
    },
    "4544": {
      "op": "cover 1",
      "stack_out": [
        "aggregate%extract_uint16%0#0",
        "tmp%4#0"
      ]
    },
    "4546": {
      "op": "dup",
      "stack_out": [
        "aggregate%extract_uint16%0#0",
        "tmp%4#0",
        "tmp%4#0 (copy)"
      ]
    },
    "4547": {
      "op": "intc_3 // 2",
      "defined_out": [
        "2",
        "aggregate%extract_uint16%0#0",
        "tmp%4#0",
        "tmp%4#0 (copy)"
      ],
      "stack_out": [
        "aggregate%extract_uint16%0#0",
        "tmp%4#0",
        "tmp%4#0 (copy)",
        "2"
      ]
    },
    "4548": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%extract_uint16%0#0",
        "aggregate%extract_uint16%1#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "aggregate%extract_uint16%0#0",
        "tmp%4#0",
        "aggregate%extract_uint16%1#0"
      ]
    },
    "4549": {
      "op": "dig 1",
      "stack_out": [
        "aggregate%extract_uint16%0#0",
        "tmp%4#0",
        "aggregate%extract_uint16%1#0",
        "tmp%4#0 (copy)"
      ]
    },
    "4551": {
      "op": "uncover 3",
      "stack_out": [
        "tmp%4#0",
        "aggregate%extract_uint16%1#0",
        "tmp%4#0 (copy)",
        "aggregate%extract_uint16%0#0"
      ]
    },
    "4553": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%4#0",
        "tmp%4#0 (copy)",
        "aggregate%extract_uint16%0#0",
        "aggregate%extract_uint16%1#0"
      ]
    },
    "4555": {
      "op": "substring3",
      "defined_out": [
        "aggregate%substring3%0#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "aggregate%substring3%0#0"
      ]
    },
    "4556": {
      "op": "dup",
      "defined_out": [
        "aggregate%substring3%0#0",
        "aggregate%substring3%0#0 (copy)",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "aggregate%substring3%0#0",
        "aggregate%substring3%0#0 (copy)"
      ]
    },
    "4557": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%4#0",
        "aggregate%substring3%0#0",
        "aggregate%substring3%0#0 (copy)",
        "0"
      ]
    },
    "4558": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%extract_uint16%2#0",
        "aggregate%substring3%0#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "aggregate%substring3%0#0",
        "aggregate%extract_uint16%2#0"
      ]
    },
    "4559": {
      "op": "cover 1",
      "stack_out": [
        "tmp%4#0",
        "aggregate%extract_uint16%2#0",
        "aggregate%substring3%0#0"
      ]
    },
    "4561": {
      "op": "dup",
      "stack_out": [
        "tmp%4#0",
        "aggregate%extract_uint16%2#0",
        "aggregate%substring3%0#0",
        "aggregate%substring3%0#0 (copy)"
      ]
    },
    "4562": {
      "op": "intc_3 // 2",
      "stack_out": [
        "tmp%4#0",
        "aggregate%extract_uint16%2#0",
        "aggregate%substring3%0#0",
        "aggregate%substring3%0#0 (copy)",
        "2"
      ]
    },
    "4563": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%extract_uint16%2#0",
        "aggregate%extract_uint16%3#0",
        "aggregate%substring3%0#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "aggregate%extract_uint16%2#0",
        "aggregate%substring3%0#0",
        "aggregate%extract_uint16%3#0"
      ]
    },
    "4564": {
      "op": "dig 1",
      "stack_out": [
        "tmp%4#0",
        "aggregate%extract_uint16%2#0",
        "aggregate%substring3%0#0",
        "aggregate%extract_uint16%3#0",
        "aggregate%substring3%0#0 (copy)"
      ]
    },
    "4566": {
      "op": "uncover 3",
      "stack_out": [
        "tmp%4#0",
        "aggregate%substring3%0#0",
        "aggregate%extract_uint16%3#0",
        "aggregate%substring3%0#0 (copy)",
        "aggregate%extract_uint16%2#0"
      ]
    },
    "4568": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%4#0",
        "aggregate%substring3%0#0",
        "aggregate%substring3%0#0 (copy)",
        "aggregate%extract_uint16%2#0",
        "aggregate%extract_uint16%3#0"
      ]
    },
    "4570": {
      "op": "substring3",
      "defined_out": [
        "aggregate%substring3%0#0",
        "aggregate%substring3%1#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "aggregate%substring3%0#0",
        "aggregate%substring3%1#0"
      ]
    },
    "4571": {
      "op": "extract 2 0",
      "defined_out": [
        "aggregate%item0%0#0",
        "aggregate%substring3%0#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "aggregate%substring3%0#0",
        "aggregate%item0%0#0"
      ]
    },
    "4574": {
      "op": "cover 2",
      "stack_out": [
        "aggregate%item0%0#0",
        "tmp%4#0",
        "aggregate%substring3%0#0"
      ]
    },
    "4576": {
      "op": "dup",
      "stack_out": [
        "aggregate%item0%0#0",
        "tmp%4#0",
        "aggregate%substring3%0#0",
        "aggregate%substring3%0#0 (copy)"
      ]
    },
    "4577": {
      "op": "intc_3 // 2",
      "stack_out": [
        "aggregate%item0%0#0",
        "tmp%4#0",
        "aggregate%substring3%0#0",
        "aggregate%substring3%0#0 (copy)",
        "2"
      ]
    },
    "4578": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%extract_uint16%4#0",
        "aggregate%item0%0#0",
        "aggregate%substring3%0#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "aggregate%item0%0#0",
        "tmp%4#0",
        "aggregate%substring3%0#0",
        "aggregate%extract_uint16%4#0"
      ]
    },
    "4579": {
      "op": "cover 1",
      "stack_out": [
        "aggregate%item0%0#0",
        "tmp%4#0",
        "aggregate%extract_uint16%4#0",
        "aggregate%substring3%0#0"
      ]
    },
    "4581": {
      "op": "dup",
      "stack_out": [
        "aggregate%item0%0#0",
        "tmp%4#0",
        "aggregate%extract_uint16%4#0",
        "aggregate%substring3%0#0",
        "aggregate%substring3%0#0 (copy)"
      ]
    },
    "4582": {
      "op": "len",
      "defined_out": [
        "aggregate%extract_uint16%4#0",
        "aggregate%item0%0#0",
        "aggregate%len%0#0",
        "aggregate%substring3%0#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "aggregate%item0%0#0",
        "tmp%4#0",
        "aggregate%extract_uint16%4#0",
        "aggregate%substring3%0#0",
        "aggregate%len%0#0"
      ]
    },
    "4583": {
      "op": "cover 1",
      "stack_out": [
        "aggregate%item0%0#0",
        "tmp%4#0",
        "aggregate%extract_uint16%4#0",
        "aggregate%len%0#0",
        "aggregate%substring3%0#0"
      ]
    },
    "4585": {
      "op": "uncover 2",
      "stack_out": [
        "aggregate%item0%0#0",
        "tmp%4#0",
        "aggregate%len%0#0",
        "aggregate%substring3%0#0",
        "aggregate%extract_uint16%4#0"
      ]
    },
    "4587": {
      "op": "uncover 2",
      "stack_out": [
        "aggregate%item0%0#0",
        "tmp%4#0",
        "aggregate%substring3%0#0",
        "aggregate%extract_uint16%4#0",
        "aggregate%len%0#0"
      ]
    },
    "4589": {
      "op": "substring3",
      "defined_out": [
        "aggregate%item0%0#0",
        "aggregate%substring3%2#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "aggregate%item0%0#0",
        "tmp%4#0",
        "aggregate%substring3%2#0"
      ]
    },
    "4590": {
      "op": "cover 1",
      "stack_out": [
        "aggregate%item0%0#0",
        "aggregate%substring3%2#0",
        "tmp%4#0"
      ]
    },
    "4592": {
      "op": "dup",
      "stack_out": [
        "aggregate%item0%0#0",
        "aggregate%substring3%2#0",
        "tmp%4#0",
        "tmp%4#0 (copy)"
      ]
    },
    "4593": {
      "op": "intc_3 // 2",
      "stack_out": [
        "aggregate%item0%0#0",
        "aggregate%substring3%2#0",
        "tmp%4#0",
        "tmp%4#0 (copy)",
        "2"
      ]
    },
    "4594": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%extract_uint16%5#0",
        "aggregate%item0%0#0",
        "aggregate%substring3%2#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "aggregate%item0%0#0",
        "aggregate%substring3%2#0",
        "tmp%4#0",
        "aggregate%extract_uint16%5#0"
      ]
    },
    "4595": {
      "op": "cover 1",
      "stack_out": [
        "aggregate%item0%0#0",
        "aggregate%substring3%2#0",
        "aggregate%extract_uint16%5#0",
        "tmp%4#0"
      ]
    },
    "4597": {
      "op": "dup",
      "stack_out": [
        "aggregate%item0%0#0",
        "aggregate%substring3%2#0",
        "aggregate%extract_uint16%5#0",
        "tmp%4#0",
        "tmp%4#0 (copy)"
      ]
    },
    "4598": {
      "op": "len",
      "defined_out": [
        "aggregate%extract_uint16%5#0",
        "aggregate%item0%0#0",
        "aggregate%len%1#0",
        "aggregate%substring3%2#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "aggregate%item0%0#0",
        "aggregate%substring3%2#0",
        "aggregate%extract_uint16%5#0",
        "tmp%4#0",
        "aggregate%len%1#0"
      ]
    },
    "4599": {
      "op": "cover 1",
      "stack_out": [
        "aggregate%item0%0#0",
        "aggregate%substring3%2#0",
        "aggregate%extract_uint16%5#0",
        "aggregate%len%1#0",
        "tmp%4#0"
      ]
    },
    "4601": {
      "op": "uncover 2",
      "stack_out": [
        "aggregate%item0%0#0",
        "aggregate%substring3%2#0",
        "aggregate%len%1#0",
        "tmp%4#0",
        "aggregate%extract_uint16%5#0"
      ]
    },
    "4603": {
      "op": "uncover 2",
      "stack_out": [
        "aggregate%item0%0#0",
        "aggregate%substring3%2#0",
        "tmp%4#0",
        "aggregate%extract_uint16%5#0",
        "aggregate%len%1#0"
      ]
    },
    "4605": {
      "op": "substring3",
      "defined_out": [
        "aggregate%item0%0#0",
        "aggregate%substring3%2#0",
        "aggregate%substring3%3#0"
      ],
      "stack_out": [
        "aggregate%item0%0#0",
        "aggregate%substring3%2#0",
        "aggregate%substring3%3#0"
      ]
    },
    "4606": {
      "op": "dup",
      "defined_out": [
        "aggregate%item0%0#0",
        "aggregate%substring3%2#0",
        "aggregate%substring3%3#0",
        "aggregate%substring3%3#0 (copy)"
      ],
      "stack_out": [
        "aggregate%item0%0#0",
        "aggregate%substring3%2#0",
        "aggregate%substring3%3#0",
        "aggregate%substring3%3#0 (copy)"
      ]
    },
    "4607": {
      "op": "intc_0 // 0",
      "stack_out": [
        "aggregate%item0%0#0",
        "aggregate%substring3%2#0",
        "aggregate%substring3%3#0",
        "aggregate%substring3%3#0 (copy)",
        "0"
      ]
    },
    "4608": {
      "op": "intc_2 // 8",
      "defined_out": [
        "0",
        "8",
        "aggregate%item0%0#0",
        "aggregate%substring3%2#0",
        "aggregate%substring3%3#0",
        "aggregate%substring3%3#0 (copy)"
      ],
      "stack_out": [
        "aggregate%item0%0#0",
        "aggregate%substring3%2#0",
        "aggregate%substring3%3#0",
        "aggregate%substring3%3#0 (copy)",
        "0",
        "8"
      ]
    },
    "4609": {
      "op": "extract3",
      "defined_out": [
        "aggregate%extract%0#0",
        "aggregate%item0%0#0",
        "aggregate%substring3%2#0",
        "aggregate%substring3%3#0"
      ],
      "stack_out": [
        "aggregate%item0%0#0",
        "aggregate%substring3%2#0",
        "aggregate%substring3%3#0",
        "aggregate%extract%0#0"
      ]
    },
    "4610": {
      "op": "btoi",
      "defined_out": [
        "aggregate%item0%0#0",
        "aggregate%item0%1#0",
        "aggregate%substring3%2#0",
        "aggregate%substring3%3#0"
      ],
      "stack_out": [
        "aggregate%item0%0#0",
        "aggregate%substring3%2#0",
        "aggregate%substring3%3#0",
        "aggregate%item0%1#0"
      ]
    },
    "4611": {
      "op": "cover 1",
      "stack_out": [
        "aggregate%item0%0#0",
        "aggregate%substring3%2#0",
        "aggregate%item0%1#0",
        "aggregate%substring3%3#0"
      ]
    },
    "4613": {
      "op": "dup",
      "stack_out": [
        "aggregate%item0%0#0",
        "aggregate%substring3%2#0",
        "aggregate%item0%1#0",
        "aggregate%substring3%3#0",
        "aggregate%substring3%3#0 (copy)"
      ]
    },
    "4614": {
      "op": "intc_2 // 8",
      "stack_out": [
        "aggregate%item0%0#0",
        "aggregate%substring3%2#0",
        "aggregate%item0%1#0",
        "aggregate%substring3%3#0",
        "aggregate%substring3%3#0 (copy)",
        "8"
      ]
    },
    "4615": {
      "op": "intc_2 // 8",
      "stack_out": [
        "aggregate%item0%0#0",
        "aggregate%substring3%2#0",
        "aggregate%item0%1#0",
        "aggregate%substring3%3#0",
        "aggregate%substring3%3#0 (copy)",
        "8",
        "8"
      ]
    },
    "4616": {
      "op": "extract3",
      "defined_out": [
        "aggregate%extract%1#0",
        "aggregate%item0%0#0",
        "aggregate%item0%1#0",
        "aggregate%substring3%2#0",
        "aggregate%substring3%3#0"
      ],
      "stack_out": [
        "aggregate%item0%0#0",
        "aggregate%substring3%2#0",
        "aggregate%item0%1#0",
        "aggregate%substring3%3#0",
        "aggregate%extract%1#0"
      ]
    },
    "4617": {
      "op": "cover 1",
      "stack_out": [
        "aggregate%item0%0#0",
        "aggregate%substring3%2#0",
        "aggregate%item0%1#0",
        "aggregate%extract%1#0",
        "aggregate%substring3%3#0"
      ]
    },
    "4619": {
      "op": "dup",
      "stack_out": [
        "aggregate%item0%0#0",
        "aggregate%substring3%2#0",
        "aggregate%item0%1#0",
        "aggregate%extract%1#0",
        "aggregate%substring3%3#0",
        "aggregate%substring3%3#0 (copy)"
      ]
    },
    "4620": {
      "op": "pushint 16 // 16",
      "defined_out": [
        "16",
        "aggregate%extract%1#0",
        "aggregate%item0%0#0",
        "aggregate%item0%1#0",
        "aggregate%substring3%2#0",
        "aggregate%substring3%3#0",
        "aggregate%substring3%3#0 (copy)"
      ],
      "stack_out": [
        "aggregate%item0%0#0",
        "aggregate%substring3%2#0",
        "aggregate%item0%1#0",
        "aggregate%extract%1#0",
        "aggregate%substring3%3#0",
        "aggregate%substring3%3#0 (copy)",
        "16"
      ]
    },
    "4622": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%extract%1#0",
        "aggregate%extract_uint16%6#0",
        "aggregate%item0%0#0",
        "aggregate%item0%1#0",
        "aggregate%substring3%2#0",
        "aggregate%substring3%3#0"
      ],
      "stack_out": [
        "aggregate%item0%0#0",
        "aggregate%substring3%2#0",
        "aggregate%item0%1#0",
        "aggregate%extract%1#0",
        "aggregate%substring3%3#0",
        "aggregate%extract_uint16%6#0"
      ]
    },
    "4623": {
      "op": "cover 1",
      "stack_out": [
        "aggregate%item0%0#0",
        "aggregate%substring3%2#0",
        "aggregate%item0%1#0",
        "aggregate%extract%1#0",
        "aggregate%extract_uint16%6#0",
        "aggregate%substring3%3#0"
      ]
    },
    "4625": {
      "op": "dup",
      "stack_out": [
        "aggregate%item0%0#0",
        "aggregate%substring3%2#0",
        "aggregate%item0%1#0",
        "aggregate%extract%1#0",
        "aggregate%extract_uint16%6#0",
        "aggregate%substring3%3#0",
        "aggregate%substring3%3#0 (copy)"
      ]
    },
    "4626": {
      "op": "len",
      "defined_out": [
        "aggregate%extract%1#0",
        "aggregate%extract_uint16%6#0",
        "aggregate%item0%0#0",
        "aggregate%item0%1#0",
        "aggregate%len%2#0",
        "aggregate%substring3%2#0",
        "aggregate%substring3%3#0"
      ],
      "stack_out": [
        "aggregate%item0%0#0",
        "aggregate%substring3%2#0",
        "aggregate%item0%1#0",
        "aggregate%extract%1#0",
        "aggregate%extract_uint16%6#0",
        "aggregate%substring3%3#0",
        "aggregate%len%2#0"
      ]
    },
    "4627": {
      "op": "cover 1",
      "stack_out": [
        "aggregate%item0%0#0",
        "aggregate%substring3%2#0",
        "aggregate%item0%1#0",
        "aggregate%extract%1#0",
        "aggregate%extract_uint16%6#0",
        "aggregate%len%2#0",
        "aggregate%substring3%3#0"
      ]
    },
    "4629": {
      "op": "uncover 2",
      "stack_out": [
        "aggregate%item0%0#0",
        "aggregate%substring3%2#0",
        "aggregate%item0%1#0",
        "aggregate%extract%1#0",
        "aggregate%len%2#0",
        "aggregate%substring3%3#0",
        "aggregate%extract_uint16%6#0"
      ]
    },
    "4631": {
      "op": "uncover 2",
      "stack_out": [
        "aggregate%item0%0#0",
        "aggregate%substring3%2#0",
        "aggregate%item0%1#0",
        "aggregate%extract%1#0",
        "aggregate%substring3%3#0",
        "aggregate%extract_uint16%6#0",
        "aggregate%len%2#0"
      ]
    },
    "4633": {
      "op": "substring3",
      "defined_out": [
        "aggregate%extract%1#0",
        "aggregate%item0%0#0",
        "aggregate%item0%1#0",
        "aggregate%substring3%2#0",
        "aggregate%substring3%4#0"
      ],
      "stack_out": [
        "aggregate%item0%0#0",
        "aggregate%substring3%2#0",
        "aggregate%item0%1#0",
        "aggregate%extract%1#0",
        "aggregate%substring3%4#0"
      ]
    },
    "4634": {
      "op": "extract 2 0",
      "defined_out": [
        "aggregate%extract%1#0",
        "aggregate%item0%0#0",
        "aggregate%item0%1#0",
        "aggregate%item2%0#0",
        "aggregate%substring3%2#0"
      ],
      "stack_out": [
        "aggregate%item0%0#0",
        "aggregate%substring3%2#0",
        "aggregate%item0%1#0",
        "aggregate%extract%1#0",
        "aggregate%item2%0#0"
      ]
    },
    "4637": {
      "op": "uncover 4",
      "stack_out": [
        "aggregate%substring3%2#0",
        "aggregate%item0%1#0",
        "aggregate%extract%1#0",
        "aggregate%item2%0#0",
        "aggregate%item0%0#0"
      ]
    },
    "4639": {
      "op": "cover 1",
      "defined_out": [
        "aggregate%extract%1#0",
        "aggregate%item0%1#0",
        "aggregate%item2%0#0",
        "aggregate%substring3%2#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "aggregate%substring3%2#0",
        "aggregate%item0%1#0",
        "aggregate%extract%1#0",
        "tmp%7#0",
        "aggregate%item2%0#0"
      ]
    },
    "4641": {
      "op": "uncover 4",
      "stack_out": [
        "aggregate%item0%1#0",
        "aggregate%extract%1#0",
        "tmp%7#0",
        "aggregate%item2%0#0",
        "aggregate%substring3%2#0"
      ]
    },
    "4643": {
      "op": "cover 2",
      "defined_out": [
        "aggregate%extract%1#0",
        "aggregate%item0%1#0",
        "aggregate%item2%0#0",
        "tmp%7#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "aggregate%item0%1#0",
        "aggregate%extract%1#0",
        "tmp%8#0",
        "tmp%7#0",
        "aggregate%item2%0#0"
      ]
    },
    "4645": {
      "op": "uncover 4",
      "stack_out": [
        "aggregate%extract%1#0",
        "tmp%8#0",
        "tmp%7#0",
        "aggregate%item2%0#0",
        "aggregate%item0%1#0"
      ]
    },
    "4647": {
      "op": "cover 3",
      "defined_out": [
        "aggregate%item2%0#0",
        "tmp%10#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%10#0",
        "tmp%9#0",
        "tmp%8#0",
        "tmp%7#0",
        "aggregate%item2%0#0"
      ]
    },
    "4649": {
      "op": "cover 4",
      "defined_out": [
        "tmp%10#0",
        "tmp%11#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "tmp%10#0",
        "tmp%9#0",
        "tmp%8#0",
        "tmp%7#0"
      ]
    },
    "4651": {
      "op": "cover 4",
      "defined_out": [
        "result.0.0#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "result.0.0#0",
        "tmp%11#0",
        "tmp%10#0",
        "tmp%9#0",
        "tmp%8#0"
      ]
    },
    "4653": {
      "op": "cover 4",
      "defined_out": [
        "result.0.0#0",
        "result.0.1#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "result.0.1#0",
        "result.0.0#0",
        "tmp%11#0",
        "tmp%10#0",
        "tmp%9#0"
      ]
    },
    "4655": {
      "op": "cover 4",
      "defined_out": [
        "result.0.0#0",
        "result.0.1#0",
        "result.1.0#0",
        "tmp%10#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "result.1.0#0",
        "result.0.1#0",
        "result.0.0#0",
        "tmp%11#0",
        "tmp%10#0"
      ]
    },
    "4657": {
      "op": "cover 4",
      "defined_out": [
        "result.0.0#0",
        "result.0.1#0",
        "result.1.0#0",
        "result.1.1#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "result.1.1#0",
        "result.1.0#0",
        "result.0.1#0",
        "result.0.0#0",
        "tmp%11#0"
      ]
    },
    "4659": {
      "op": "cover 4",
      "defined_out": [
        "result.0.0#0",
        "result.0.1#0",
        "result.1.0#0",
        "result.1.1#0",
        "result.1.2#0"
      ],
      "stack_out": [
        "result.1.2#0",
        "result.1.1#0",
        "result.1.0#0",
        "result.0.1#0",
        "result.0.0#0"
      ]
    },
    "4661": {
      "op": "cover 4",
      "defined_out": [
        "result.0.1#0",
        "result.1.0#0",
        "result.1.1#0",
        "result.1.2#0",
        "s1#0"
      ],
      "stack_out": [
        "s1#0",
        "result.1.2#0",
        "result.1.1#0",
        "result.1.0#0",
        "result.0.1#0"
      ]
    },
    "4663": {
      "op": "cover 4",
      "defined_out": [
        "result.1.0#0",
        "result.1.1#0",
        "result.1.2#0",
        "s1#0",
        "s2#0"
      ],
      "stack_out": [
        "s2#0",
        "s1#0",
        "result.1.2#0",
        "result.1.1#0",
        "result.1.0#0"
      ]
    },
    "4665": {
      "op": "cover 4",
      "defined_out": [
        "result.1.1#0",
        "result.1.2#0",
        "s1#0",
        "s2#0",
        "u64_1#0"
      ],
      "stack_out": [
        "u64_1#0",
        "s2#0",
        "s1#0",
        "result.1.2#0",
        "result.1.1#0"
      ]
    },
    "4667": {
      "op": "cover 4",
      "defined_out": [
        "result.1.2#0",
        "s1#0",
        "s2#0",
        "u64_1#0",
        "u64_2#0"
      ],
      "stack_out": [
        "u64_2#0",
        "u64_1#0",
        "s2#0",
        "s1#0",
        "result.1.2#0"
      ]
    },
    "4669": {
      "op": "cover 4",
      "defined_out": [
        "bytez#0",
        "s1#0",
        "s2#0",
        "u64_1#0",
        "u64_2#0"
      ],
      "stack_out": [
        "bytez#0",
        "u64_2#0",
        "u64_1#0",
        "s2#0",
        "s1#0"
      ]
    },
    "4671": {
      "op": "bytec 17 // \"echo: s1\"",
      "defined_out": [
        "\"echo: s1\"",
        "bytez#0",
        "s1#0",
        "s2#0",
        "u64_1#0",
        "u64_2#0"
      ],
      "stack_out": [
        "bytez#0",
        "u64_2#0",
        "u64_1#0",
        "s2#0",
        "s1#0",
        "\"echo: s1\""
      ]
    },
    "4673": {
      "op": "==",
      "defined_out": [
        "bytez#0",
        "s2#0",
        "tmp%12#0",
        "u64_1#0",
        "u64_2#0"
      ],
      "stack_out": [
        "bytez#0",
        "u64_2#0",
        "u64_1#0",
        "s2#0",
        "tmp%12#0"
      ]
    },
    "4674": {
      "op": "assert",
      "stack_out": [
        "bytez#0",
        "u64_2#0",
        "u64_1#0",
        "s2#0"
      ]
    },
    "4675": {
      "op": "bytec 20 // \"echo: s2\"",
      "defined_out": [
        "\"echo: s2\"",
        "bytez#0",
        "s2#0",
        "u64_1#0",
        "u64_2#0"
      ],
      "stack_out": [
        "bytez#0",
        "u64_2#0",
        "u64_1#0",
        "s2#0",
        "\"echo: s2\""
      ]
    },
    "4677": {
      "op": "len",
      "defined_out": [
        "aggregate%length%3#0",
        "bytez#0",
        "s2#0",
        "u64_1#0",
        "u64_2#0"
      ],
      "stack_out": [
        "bytez#0",
        "u64_2#0",
        "u64_1#0",
        "s2#0",
        "aggregate%length%3#0"
      ]
    },
    "4678": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%8#0",
        "bytez#0",
        "s2#0",
        "u64_1#0",
        "u64_2#0"
      ],
      "stack_out": [
        "bytez#0",
        "u64_2#0",
        "u64_1#0",
        "s2#0",
        "aggregate%as_bytes%8#0"
      ]
    },
    "4679": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%length_uint16%3#0",
        "bytez#0",
        "s2#0",
        "u64_1#0",
        "u64_2#0"
      ],
      "stack_out": [
        "bytez#0",
        "u64_2#0",
        "u64_1#0",
        "s2#0",
        "aggregate%length_uint16%3#0"
      ]
    },
    "4682": {
      "op": "bytec 20 // \"echo: s2\"",
      "stack_out": [
        "bytez#0",
        "u64_2#0",
        "u64_1#0",
        "s2#0",
        "aggregate%length_uint16%3#0",
        "\"echo: s2\""
      ]
    },
    "4684": {
      "op": "concat",
      "defined_out": [
        "bytez#0",
        "s2#0",
        "tmp%13#0",
        "u64_1#0",
        "u64_2#0"
      ],
      "stack_out": [
        "bytez#0",
        "u64_2#0",
        "u64_1#0",
        "s2#0",
        "tmp%13#0"
      ]
    },
    "4685": {
      "op": "==",
      "defined_out": [
        "bytez#0",
        "tmp%14#0",
        "u64_1#0",
        "u64_2#0"
      ],
      "stack_out": [
        "bytez#0",
        "u64_2#0",
        "u64_1#0",
        "tmp%14#0"
      ]
    },
    "4686": {
      "op": "assert",
      "stack_out": [
        "bytez#0",
        "u64_2#0",
        "u64_1#0"
      ]
    },
    "4687": {
      "op": "intc_3 // 2",
      "stack_out": [
        "bytez#0",
        "u64_2#0",
        "u64_1#0",
        "2"
      ]
    },
    "4688": {
      "op": "==",
      "defined_out": [
        "bytez#0",
        "tmp%15#0",
        "u64_2#0"
      ],
      "stack_out": [
        "bytez#0",
        "u64_2#0",
        "tmp%15#0"
      ]
    },
    "4689": {
      "op": "assert",
      "defined_out": [
        "bytez#0",
        "reinterpret_biguint%0#0"
      ],
      "stack_out": [
        "bytez#0",
        "reinterpret_biguint%0#0"
      ]
    },
    "4690": {
      "op": "bytec 23 // 0x0000000000000003",
      "defined_out": [
        "0x0000000000000003",
        "bytez#0",
        "reinterpret_biguint%0#0"
      ],
      "stack_out": [
        "bytez#0",
        "reinterpret_biguint%0#0",
        "0x0000000000000003"
      ]
    },
    "4692": {
      "op": "b==",
      "defined_out": [
        "bytez#0",
        "tmp%16#0"
      ],
      "stack_out": [
        "bytez#0",
        "tmp%16#0"
      ]
    },
    "4693": {
      "op": "assert",
      "stack_out": [
        "bytez#0"
      ]
    },
    "4694": {
      "op": "bytec 56 // 0x6563686f3a2033",
      "defined_out": [
        "0x6563686f3a2033",
        "bytez#0"
      ],
      "stack_out": [
        "bytez#0",
        "0x6563686f3a2033"
      ]
    },
    "4696": {
      "op": "==",
      "defined_out": [
        "tmp%17#0"
      ],
      "stack_out": [
        "tmp%17#0"
      ]
    },
    "4697": {
      "op": "assert",
      "stack_out": []
    },
    "4698": {
      "op": "itxn_begin"
    },
    "4699": {
      "op": "bytec 18 // \"s2\"",
      "defined_out": [
        "\"s2\""
      ],
      "stack_out": [
        "\"s2\""
      ]
    },
    "4701": {
      "op": "len",
      "defined_out": [
        "aggregate%length%4#0"
      ],
      "stack_out": [
        "aggregate%length%4#0"
      ]
    },
    "4702": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%9#0"
      ],
      "stack_out": [
        "aggregate%as_bytes%9#0"
      ]
    },
    "4703": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%length_uint16%4#0"
      ],
      "stack_out": [
        "aggregate%length_uint16%4#0"
      ]
    },
    "4706": {
      "op": "bytec 18 // \"s2\"",
      "stack_out": [
        "aggregate%length_uint16%4#0",
        "\"s2\""
      ]
    },
    "4708": {
      "op": "concat",
      "defined_out": [
        "tmp%18#0"
      ],
      "stack_out": [
        "tmp%18#0"
      ]
    },
    "4709": {
      "op": "bytec_1 // \"s1\"",
      "defined_out": [
        "\"s1\"",
        "tmp%18#0"
      ],
      "stack_out": [
        "tmp%18#0",
        "\"s1\""
      ]
    },
    "4710": {
      "op": "len",
      "defined_out": [
        "aggregate%length%5#0",
        "tmp%18#0"
      ],
      "stack_out": [
        "tmp%18#0",
        "aggregate%length%5#0"
      ]
    },
    "4711": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%10#0",
        "tmp%18#0"
      ],
      "stack_out": [
        "tmp%18#0",
        "aggregate%as_bytes%10#0"
      ]
    },
    "4712": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%length_uint16%5#0",
        "tmp%18#0"
      ],
      "stack_out": [
        "tmp%18#0",
        "aggregate%length_uint16%5#0"
      ]
    },
    "4715": {
      "op": "bytec_1 // \"s1\"",
      "stack_out": [
        "tmp%18#0",
        "aggregate%length_uint16%5#0",
        "\"s1\""
      ]
    },
    "4716": {
      "op": "concat",
      "defined_out": [
        "aggregate%as_Encoded(len+utf8[])%4#0",
        "tmp%18#0"
      ],
      "stack_out": [
        "tmp%18#0",
        "aggregate%as_Encoded(len+utf8[])%4#0"
      ]
    },
    "4717": {
      "op": "pushint 4 // 4",
      "defined_out": [
        "4",
        "aggregate%as_Encoded(len+utf8[])%4#0",
        "tmp%18#0"
      ],
      "stack_out": [
        "tmp%18#0",
        "aggregate%as_Encoded(len+utf8[])%4#0",
        "4"
      ]
    },
    "4719": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(len+utf8[])%4#0",
        "aggregate%as_bytes%11#0",
        "tmp%18#0"
      ],
      "stack_out": [
        "tmp%18#0",
        "aggregate%as_Encoded(len+utf8[])%4#0",
        "aggregate%as_bytes%11#0"
      ]
    },
    "4720": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%as_Encoded(len+utf8[])%4#0",
        "aggregate%offset_as_uint16%5#0",
        "tmp%18#0"
      ],
      "stack_out": [
        "tmp%18#0",
        "aggregate%as_Encoded(len+utf8[])%4#0",
        "aggregate%offset_as_uint16%5#0"
      ]
    },
    "4723": {
      "op": "bytec_2 // 0x",
      "defined_out": [
        "0x",
        "aggregate%as_Encoded(len+utf8[])%4#0",
        "aggregate%offset_as_uint16%5#0",
        "tmp%18#0"
      ],
      "stack_out": [
        "tmp%18#0",
        "aggregate%as_Encoded(len+utf8[])%4#0",
        "aggregate%offset_as_uint16%5#0",
        "0x"
      ]
    },
    "4724": {
      "op": "uncover 1",
      "stack_out": [
        "tmp%18#0",
        "aggregate%as_Encoded(len+utf8[])%4#0",
        "0x",
        "aggregate%offset_as_uint16%5#0"
      ]
    },
    "4726": {
      "op": "concat",
      "defined_out": [
        "aggregate%as_Encoded(len+utf8[])%4#0",
        "aggregate%head%7#0",
        "tmp%18#0"
      ],
      "stack_out": [
        "tmp%18#0",
        "aggregate%as_Encoded(len+utf8[])%4#0",
        "aggregate%head%7#0"
      ]
    },
    "4727": {
      "op": "cover 1",
      "stack_out": [
        "tmp%18#0",
        "aggregate%head%7#0",
        "aggregate%as_Encoded(len+utf8[])%4#0"
      ]
    },
    "4729": {
      "op": "dup",
      "defined_out": [
        "aggregate%as_Encoded(len+utf8[])%4#0",
        "aggregate%as_Encoded(len+utf8[])%4#0 (copy)",
        "aggregate%head%7#0",
        "tmp%18#0"
      ],
      "stack_out": [
        "tmp%18#0",
        "aggregate%head%7#0",
        "aggregate%as_Encoded(len+utf8[])%4#0",
        "aggregate%as_Encoded(len+utf8[])%4#0 (copy)"
      ]
    },
    "4730": {
      "op": "len",
      "defined_out": [
        "aggregate%as_Encoded(len+utf8[])%4#0",
        "aggregate%data_length%5#0",
        "aggregate%head%7#0",
        "tmp%18#0"
      ],
      "stack_out": [
        "tmp%18#0",
        "aggregate%head%7#0",
        "aggregate%as_Encoded(len+utf8[])%4#0",
        "aggregate%data_length%5#0"
      ]
    },
    "4731": {
      "op": "pushint 4 // 4",
      "stack_out": [
        "tmp%18#0",
        "aggregate%head%7#0",
        "aggregate%as_Encoded(len+utf8[])%4#0",
        "aggregate%data_length%5#0",
        "4"
      ]
    },
    "4733": {
      "op": "+",
      "defined_out": [
        "aggregate%as_Encoded(len+utf8[])%4#0",
        "aggregate%current_tail_offset%5#0",
        "aggregate%head%7#0",
        "tmp%18#0"
      ],
      "stack_out": [
        "tmp%18#0",
        "aggregate%head%7#0",
        "aggregate%as_Encoded(len+utf8[])%4#0",
        "aggregate%current_tail_offset%5#0"
      ]
    },
    "4734": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(len+utf8[])%4#0",
        "aggregate%as_bytes%12#0",
        "aggregate%head%7#0",
        "tmp%18#0"
      ],
      "stack_out": [
        "tmp%18#0",
        "aggregate%head%7#0",
        "aggregate%as_Encoded(len+utf8[])%4#0",
        "aggregate%as_bytes%12#0"
      ]
    },
    "4735": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%as_Encoded(len+utf8[])%4#0",
        "aggregate%head%7#0",
        "aggregate%offset_as_uint16%6#0",
        "tmp%18#0"
      ],
      "stack_out": [
        "tmp%18#0",
        "aggregate%head%7#0",
        "aggregate%as_Encoded(len+utf8[])%4#0",
        "aggregate%offset_as_uint16%6#0"
      ]
    },
    "4738": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%18#0",
        "aggregate%as_Encoded(len+utf8[])%4#0",
        "aggregate%offset_as_uint16%6#0",
        "aggregate%head%7#0"
      ]
    },
    "4740": {
      "op": "uncover 1",
      "stack_out": [
        "tmp%18#0",
        "aggregate%as_Encoded(len+utf8[])%4#0",
        "aggregate%head%7#0",
        "aggregate%offset_as_uint16%6#0"
      ]
    },
    "4742": {
      "op": "concat",
      "defined_out": [
        "aggregate%as_Encoded(len+utf8[])%4#0",
        "aggregate%head%8#0",
        "tmp%18#0"
      ],
      "stack_out": [
        "tmp%18#0",
        "aggregate%as_Encoded(len+utf8[])%4#0",
        "aggregate%head%8#0"
      ]
    },
    "4743": {
      "op": "uncover 1",
      "stack_out": [
        "tmp%18#0",
        "aggregate%head%8#0",
        "aggregate%as_Encoded(len+utf8[])%4#0"
      ]
    },
    "4745": {
      "op": "concat",
      "defined_out": [
        "aggregate%concat%5#0",
        "tmp%18#0"
      ],
      "stack_out": [
        "tmp%18#0",
        "aggregate%concat%5#0"
      ]
    },
    "4746": {
      "op": "uncover 1",
      "stack_out": [
        "aggregate%concat%5#0",
        "tmp%18#0"
      ]
    },
    "4748": {
      "op": "concat",
      "defined_out": [
        "aggregate%as_Encoded((len+utf8[]),(len+utf8[]))%1#0"
      ],
      "stack_out": [
        "aggregate%as_Encoded((len+utf8[]),(len+utf8[]))%1#0"
      ]
    },
    "4749": {
      "op": "pushint 4 // 4",
      "stack_out": [
        "aggregate%as_Encoded((len+utf8[]),(len+utf8[]))%1#0",
        "4"
      ]
    },
    "4751": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded((len+utf8[]),(len+utf8[]))%1#0",
        "aggregate%as_bytes%13#0"
      ],
      "stack_out": [
        "aggregate%as_Encoded((len+utf8[]),(len+utf8[]))%1#0",
        "aggregate%as_bytes%13#0"
      ]
    },
    "4752": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%as_Encoded((len+utf8[]),(len+utf8[]))%1#0",
        "aggregate%offset_as_uint16%7#0"
      ],
      "stack_out": [
        "aggregate%as_Encoded((len+utf8[]),(len+utf8[]))%1#0",
        "aggregate%offset_as_uint16%7#0"
      ]
    },
    "4755": {
      "op": "bytec_2 // 0x",
      "stack_out": [
        "aggregate%as_Encoded((len+utf8[]),(len+utf8[]))%1#0",
        "aggregate%offset_as_uint16%7#0",
        "0x"
      ]
    },
    "4756": {
      "op": "uncover 1",
      "stack_out": [
        "aggregate%as_Encoded((len+utf8[]),(len+utf8[]))%1#0",
        "0x",
        "aggregate%offset_as_uint16%7#0"
      ]
    },
    "4758": {
      "op": "concat",
      "defined_out": [
        "aggregate%as_Encoded((len+utf8[]),(len+utf8[]))%1#0",
        "aggregate%head%9#0"
      ],
      "stack_out": [
        "aggregate%as_Encoded((len+utf8[]),(len+utf8[]))%1#0",
        "aggregate%head%9#0"
      ]
    },
    "4759": {
      "op": "cover 1",
      "stack_out": [
        "aggregate%head%9#0",
        "aggregate%as_Encoded((len+utf8[]),(len+utf8[]))%1#0"
      ]
    },
    "4761": {
      "op": "dup",
      "defined_out": [
        "aggregate%as_Encoded((len+utf8[]),(len+utf8[]))%1#0",
        "aggregate%as_Encoded((len+utf8[]),(len+utf8[]))%1#0 (copy)",
        "aggregate%head%9#0"
      ],
      "stack_out": [
        "aggregate%head%9#0",
        "aggregate%as_Encoded((len+utf8[]),(len+utf8[]))%1#0",
        "aggregate%as_Encoded((len+utf8[]),(len+utf8[]))%1#0 (copy)"
      ]
    },
    "4762": {
      "op": "len",
      "defined_out": [
        "aggregate%as_Encoded((len+utf8[]),(len+utf8[]))%1#0",
        "aggregate%data_length%7#0",
        "aggregate%head%9#0"
      ],
      "stack_out": [
        "aggregate%head%9#0",
        "aggregate%as_Encoded((len+utf8[]),(len+utf8[]))%1#0",
        "aggregate%data_length%7#0"
      ]
    },
    "4763": {
      "op": "pushint 4 // 4",
      "stack_out": [
        "aggregate%head%9#0",
        "aggregate%as_Encoded((len+utf8[]),(len+utf8[]))%1#0",
        "aggregate%data_length%7#0",
        "4"
      ]
    },
    "4765": {
      "op": "+",
      "defined_out": [
        "aggregate%as_Encoded((len+utf8[]),(len+utf8[]))%1#0",
        "aggregate%current_tail_offset%7#0",
        "aggregate%head%9#0"
      ],
      "stack_out": [
        "aggregate%head%9#0",
        "aggregate%as_Encoded((len+utf8[]),(len+utf8[]))%1#0",
        "aggregate%current_tail_offset%7#0"
      ]
    },
    "4766": {
      "op": "pushint 1 // 1",
      "defined_out": [
        "1",
        "aggregate%as_Encoded((len+utf8[]),(len+utf8[]))%1#0",
        "aggregate%current_tail_offset%7#0",
        "aggregate%head%9#0"
      ],
      "stack_out": [
        "aggregate%head%9#0",
        "aggregate%as_Encoded((len+utf8[]),(len+utf8[]))%1#0",
        "aggregate%current_tail_offset%7#0",
        "1"
      ]
    },
    "4768": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded((len+utf8[]),(len+utf8[]))%1#0",
        "aggregate%as_Encoded(uint64)%0#0",
        "aggregate%current_tail_offset%7#0",
        "aggregate%head%9#0"
      ],
      "stack_out": [
        "aggregate%head%9#0",
        "aggregate%as_Encoded((len+utf8[]),(len+utf8[]))%1#0",
        "aggregate%current_tail_offset%7#0",
        "aggregate%as_Encoded(uint64)%0#0"
      ]
    },
    "4769": {
      "op": "bytec_2 // 0x",
      "stack_out": [
        "aggregate%head%9#0",
        "aggregate%as_Encoded((len+utf8[]),(len+utf8[]))%1#0",
        "aggregate%current_tail_offset%7#0",
        "aggregate%as_Encoded(uint64)%0#0",
        "0x"
      ]
    },
    "4770": {
      "op": "uncover 1",
      "stack_out": [
        "aggregate%head%9#0",
        "aggregate%as_Encoded((len+utf8[]),(len+utf8[]))%1#0",
        "aggregate%current_tail_offset%7#0",
        "0x",
        "aggregate%as_Encoded(uint64)%0#0"
      ]
    },
    "4772": {
      "op": "concat",
      "defined_out": [
        "aggregate%as_Encoded((len+utf8[]),(len+utf8[]))%1#0",
        "aggregate%current_tail_offset%7#0",
        "aggregate%head%10#0",
        "aggregate%head%9#0"
      ],
      "stack_out": [
        "aggregate%head%9#0",
        "aggregate%as_Encoded((len+utf8[]),(len+utf8[]))%1#0",
        "aggregate%current_tail_offset%7#0",
        "aggregate%head%10#0"
      ]
    },
    "4773": {
      "op": "bytec 15 // 0x0000000000000002",
      "defined_out": [
        "0x0000000000000002",
        "aggregate%as_Encoded((len+utf8[]),(len+utf8[]))%1#0",
        "aggregate%current_tail_offset%7#0",
        "aggregate%head%10#0",
        "aggregate%head%9#0"
      ],
      "stack_out": [
        "aggregate%head%9#0",
        "aggregate%as_Encoded((len+utf8[]),(len+utf8[]))%1#0",
        "aggregate%current_tail_offset%7#0",
        "aggregate%head%10#0",
        "0x0000000000000002"
      ]
    },
    "4775": {
      "op": "concat",
      "defined_out": [
        "aggregate%as_Encoded((len+utf8[]),(len+utf8[]))%1#0",
        "aggregate%current_tail_offset%7#0",
        "aggregate%head%11#0",
        "aggregate%head%9#0"
      ],
      "stack_out": [
        "aggregate%head%9#0",
        "aggregate%as_Encoded((len+utf8[]),(len+utf8[]))%1#0",
        "aggregate%current_tail_offset%7#0",
        "aggregate%head%11#0"
      ]
    },
    "4776": {
      "op": "bytec 19 // 0x33",
      "defined_out": [
        "0x33",
        "aggregate%as_Encoded((len+utf8[]),(len+utf8[]))%1#0",
        "aggregate%current_tail_offset%7#0",
        "aggregate%head%11#0",
        "aggregate%head%9#0"
      ],
      "stack_out": [
        "aggregate%head%9#0",
        "aggregate%as_Encoded((len+utf8[]),(len+utf8[]))%1#0",
        "aggregate%current_tail_offset%7#0",
        "aggregate%head%11#0",
        "0x33"
      ]
    },
    "4778": {
      "op": "len",
      "defined_out": [
        "aggregate%as_Encoded((len+utf8[]),(len+utf8[]))%1#0",
        "aggregate%current_tail_offset%7#0",
        "aggregate%head%11#0",
        "aggregate%head%9#0",
        "aggregate%length%6#0"
      ],
      "stack_out": [
        "aggregate%head%9#0",
        "aggregate%as_Encoded((len+utf8[]),(len+utf8[]))%1#0",
        "aggregate%current_tail_offset%7#0",
        "aggregate%head%11#0",
        "aggregate%length%6#0"
      ]
    },
    "4779": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded((len+utf8[]),(len+utf8[]))%1#0",
        "aggregate%as_bytes%14#0",
        "aggregate%current_tail_offset%7#0",
        "aggregate%head%11#0",
        "aggregate%head%9#0"
      ],
      "stack_out": [
        "aggregate%head%9#0",
        "aggregate%as_Encoded((len+utf8[]),(len+utf8[]))%1#0",
        "aggregate%current_tail_offset%7#0",
        "aggregate%head%11#0",
        "aggregate%as_bytes%14#0"
      ]
    },
    "4780": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%as_Encoded((len+utf8[]),(len+utf8[]))%1#0",
        "aggregate%current_tail_offset%7#0",
        "aggregate%head%11#0",
        "aggregate%head%9#0",
        "aggregate%length_uint16%6#0"
      ],
      "stack_out": [
        "aggregate%head%9#0",
        "aggregate%as_Encoded((len+utf8[]),(len+utf8[]))%1#0",
        "aggregate%current_tail_offset%7#0",
        "aggregate%head%11#0",
        "aggregate%length_uint16%6#0"
      ]
    },
    "4783": {
      "op": "bytec 19 // 0x33",
      "stack_out": [
        "aggregate%head%9#0",
        "aggregate%as_Encoded((len+utf8[]),(len+utf8[]))%1#0",
        "aggregate%current_tail_offset%7#0",
        "aggregate%head%11#0",
        "aggregate%length_uint16%6#0",
        "0x33"
      ]
    },
    "4785": {
      "op": "concat",
      "defined_out": [
        "aggregate%as_Encoded((len+utf8[]),(len+utf8[]))%1#0",
        "aggregate%as_Encoded(len+uint8[])%1#0",
        "aggregate%current_tail_offset%7#0",
        "aggregate%head%11#0",
        "aggregate%head%9#0"
      ],
      "stack_out": [
        "aggregate%head%9#0",
        "aggregate%as_Encoded((len+utf8[]),(len+utf8[]))%1#0",
        "aggregate%current_tail_offset%7#0",
        "aggregate%head%11#0",
        "aggregate%as_Encoded(len+uint8[])%1#0"
      ]
    },
    "4786": {
      "op": "pushint 18 // 18",
      "defined_out": [
        "18",
        "aggregate%as_Encoded((len+utf8[]),(len+utf8[]))%1#0",
        "aggregate%as_Encoded(len+uint8[])%1#0",
        "aggregate%current_tail_offset%7#0",
        "aggregate%head%11#0",
        "aggregate%head%9#0"
      ],
      "stack_out": [
        "aggregate%head%9#0",
        "aggregate%as_Encoded((len+utf8[]),(len+utf8[]))%1#0",
        "aggregate%current_tail_offset%7#0",
        "aggregate%head%11#0",
        "aggregate%as_Encoded(len+uint8[])%1#0",
        "18"
      ]
    },
    "4788": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded((len+utf8[]),(len+utf8[]))%1#0",
        "aggregate%as_Encoded(len+uint8[])%1#0",
        "aggregate%as_bytes%15#0",
        "aggregate%current_tail_offset%7#0",
        "aggregate%head%11#0",
        "aggregate%head%9#0"
      ],
      "stack_out": [
        "aggregate%head%9#0",
        "aggregate%as_Encoded((len+utf8[]),(len+utf8[]))%1#0",
        "aggregate%current_tail_offset%7#0",
        "aggregate%head%11#0",
        "aggregate%as_Encoded(len+uint8[])%1#0",
        "aggregate%as_bytes%15#0"
      ]
    },
    "4789": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%as_Encoded((len+utf8[]),(len+utf8[]))%1#0",
        "aggregate%as_Encoded(len+uint8[])%1#0",
        "aggregate%current_tail_offset%7#0",
        "aggregate%head%11#0",
        "aggregate%head%9#0",
        "aggregate%offset_as_uint16%8#0"
      ],
      "stack_out": [
        "aggregate%head%9#0",
        "aggregate%as_Encoded((len+utf8[]),(len+utf8[]))%1#0",
        "aggregate%current_tail_offset%7#0",
        "aggregate%head%11#0",
        "aggregate%as_Encoded(len+uint8[])%1#0",
        "aggregate%offset_as_uint16%8#0"
      ]
    },
    "4792": {
      "op": "uncover 2",
      "stack_out": [
        "aggregate%head%9#0",
        "aggregate%as_Encoded((len+utf8[]),(len+utf8[]))%1#0",
        "aggregate%current_tail_offset%7#0",
        "aggregate%as_Encoded(len+uint8[])%1#0",
        "aggregate%offset_as_uint16%8#0",
        "aggregate%head%11#0"
      ]
    },
    "4794": {
      "op": "uncover 1",
      "stack_out": [
        "aggregate%head%9#0",
        "aggregate%as_Encoded((len+utf8[]),(len+utf8[]))%1#0",
        "aggregate%current_tail_offset%7#0",
        "aggregate%as_Encoded(len+uint8[])%1#0",
        "aggregate%head%11#0",
        "aggregate%offset_as_uint16%8#0"
      ]
    },
    "4796": {
      "op": "concat",
      "defined_out": [
        "aggregate%as_Encoded((len+utf8[]),(len+utf8[]))%1#0",
        "aggregate%as_Encoded(len+uint8[])%1#0",
        "aggregate%current_tail_offset%7#0",
        "aggregate%head%12#0",
        "aggregate%head%9#0"
      ],
      "stack_out": [
        "aggregate%head%9#0",
        "aggregate%as_Encoded((len+utf8[]),(len+utf8[]))%1#0",
        "aggregate%current_tail_offset%7#0",
        "aggregate%as_Encoded(len+uint8[])%1#0",
        "aggregate%head%12#0"
      ]
    },
    "4797": {
      "op": "uncover 1",
      "stack_out": [
        "aggregate%head%9#0",
        "aggregate%as_Encoded((len+utf8[]),(len+utf8[]))%1#0",
        "aggregate%current_tail_offset%7#0",
        "aggregate%head%12#0",
        "aggregate%as_Encoded(len+uint8[])%1#0"
      ]
    },
    "4799": {
      "op": "concat",
      "defined_out": [
        "aggregate%as_Encoded((len+utf8[]),(len+utf8[]))%1#0",
        "aggregate%as_Encoded(uint64,uint64,(len+uint8[]))%1#0",
        "aggregate%current_tail_offset%7#0",
        "aggregate%head%9#0"
      ],
      "stack_out": [
        "aggregate%head%9#0",
        "aggregate%as_Encoded((len+utf8[]),(len+utf8[]))%1#0",
        "aggregate%current_tail_offset%7#0",
        "aggregate%as_Encoded(uint64,uint64,(len+uint8[]))%1#0"
      ]
    },
    "4800": {
      "op": "uncover 1",
      "stack_out": [
        "aggregate%head%9#0",
        "aggregate%as_Encoded((len+utf8[]),(len+utf8[]))%1#0",
        "aggregate%as_Encoded(uint64,uint64,(len+uint8[]))%1#0",
        "aggregate%current_tail_offset%7#0"
      ]
    },
    "4802": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded((len+utf8[]),(len+utf8[]))%1#0",
        "aggregate%as_Encoded(uint64,uint64,(len+uint8[]))%1#0",
        "aggregate%as_bytes%16#0",
        "aggregate%head%9#0"
      ],
      "stack_out": [
        "aggregate%head%9#0",
        "aggregate%as_Encoded((len+utf8[]),(len+utf8[]))%1#0",
        "aggregate%as_Encoded(uint64,uint64,(len+uint8[]))%1#0",
        "aggregate%as_bytes%16#0"
      ]
    },
    "4803": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%as_Encoded((len+utf8[]),(len+utf8[]))%1#0",
        "aggregate%as_Encoded(uint64,uint64,(len+uint8[]))%1#0",
        "aggregate%head%9#0",
        "aggregate%offset_as_uint16%9#0"
      ],
      "stack_out": [
        "aggregate%head%9#0",
        "aggregate%as_Encoded((len+utf8[]),(len+utf8[]))%1#0",
        "aggregate%as_Encoded(uint64,uint64,(len+uint8[]))%1#0",
        "aggregate%offset_as_uint16%9#0"
      ]
    },
    "4806": {
      "op": "uncover 3",
      "stack_out": [
        "aggregate%as_Encoded((len+utf8[]),(len+utf8[]))%1#0",
        "aggregate%as_Encoded(uint64,uint64,(len+uint8[]))%1#0",
        "aggregate%offset_as_uint16%9#0",
        "aggregate%head%9#0"
      ]
    },
    "4808": {
      "op": "uncover 1",
      "stack_out": [
        "aggregate%as_Encoded((len+utf8[]),(len+utf8[]))%1#0",
        "aggregate%as_Encoded(uint64,uint64,(len+uint8[]))%1#0",
        "aggregate%head%9#0",
        "aggregate%offset_as_uint16%9#0"
      ]
    },
    "4810": {
      "op": "concat",
      "defined_out": [
        "aggregate%as_Encoded((len+utf8[]),(len+utf8[]))%1#0",
        "aggregate%as_Encoded(uint64,uint64,(len+uint8[]))%1#0",
        "aggregate%head%13#0"
      ],
      "stack_out": [
        "aggregate%as_Encoded((len+utf8[]),(len+utf8[]))%1#0",
        "aggregate%as_Encoded(uint64,uint64,(len+uint8[]))%1#0",
        "aggregate%head%13#0"
      ]
    },
    "4811": {
      "op": "uncover 2",
      "stack_out": [
        "aggregate%as_Encoded(uint64,uint64,(len+uint8[]))%1#0",
        "aggregate%head%13#0",
        "aggregate%as_Encoded((len+utf8[]),(len+utf8[]))%1#0"
      ]
    },
    "4813": {
      "op": "concat",
      "defined_out": [
        "aggregate%as_Encoded(uint64,uint64,(len+uint8[]))%1#0",
        "aggregate%concat%8#0"
      ],
      "stack_out": [
        "aggregate%as_Encoded(uint64,uint64,(len+uint8[]))%1#0",
        "aggregate%concat%8#0"
      ]
    },
    "4814": {
      "op": "uncover 1",
      "stack_out": [
        "aggregate%concat%8#0",
        "aggregate%as_Encoded(uint64,uint64,(len+uint8[]))%1#0"
      ]
    },
    "4816": {
      "op": "concat",
      "defined_out": [
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0"
      ],
      "stack_out": [
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "4817": {
      "op": "frame_dig -1",
      "defined_out": [
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%1%%param_ApplicationID_idx_0#0"
      ],
      "stack_out": [
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%1%%param_ApplicationID_idx_0#0"
      ]
    },
    "4819": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "4821": {
      "op": "bytec 33 // method \"echo_nested_tuple(((string,string),(uint64,uint64,byte[])))((string,string),(uint64,uint64,byte[]))\"",
      "defined_out": [
        "Method(echo_nested_tuple(((string,string),(uint64,uint64,byte[])))((string,string),(uint64,uint64,byte[])))",
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0"
      ],
      "stack_out": [
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0",
        "Method(echo_nested_tuple(((string,string),(uint64,uint64,byte[])))((string,string),(uint64,uint64,byte[])))"
      ]
    },
    "4823": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "4825": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "4827": {
      "op": "intc_1 // appl",
      "defined_out": [
        "appl"
      ],
      "stack_out": [
        "appl"
      ]
    },
    "4828": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "4830": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0"
      ]
    },
    "4831": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "4833": {
      "op": "b test_cases.typed_abi_call.typed_c2c.Greeter.test_nested_tuples_next_txn@2"
    },
    "4836": {
      "block": "test_cases.typed_abi_call.typed_c2c.Greeter.test_nested_tuples_next_txn@2",
      "stack_in": [],
      "op": "itxn_submit"
    },
    "4837": {
      "op": "itxn LastLog",
      "defined_out": [
        "awst_tmp%1#0"
      ],
      "stack_out": [
        "awst_tmp%1#0"
      ]
    },
    "4839": {
      "op": "dup",
      "defined_out": [
        "awst_tmp%1#0",
        "awst_tmp%1#0 (copy)"
      ],
      "stack_out": [
        "awst_tmp%1#0",
        "awst_tmp%1#0 (copy)"
      ]
    },
    "4840": {
      "op": "extract 4 0",
      "defined_out": [
        "awst_tmp%1#0",
        "tmp%20#0"
      ],
      "stack_out": [
        "awst_tmp%1#0",
        "tmp%20#0"
      ]
    },
    "4843": {
      "op": "cover 1",
      "stack_out": [
        "tmp%20#0",
        "awst_tmp%1#0"
      ]
    },
    "4845": {
      "op": "extract 0 4",
      "defined_out": [
        "tmp%20#0",
        "tmp%21#0"
      ],
      "stack_out": [
        "tmp%20#0",
        "tmp%21#0"
      ]
    },
    "4848": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%20#0",
        "tmp%21#0"
      ],
      "stack_out": [
        "tmp%20#0",
        "tmp%21#0",
        "0x151f7c75"
      ]
    },
    "4849": {
      "op": "==",
      "defined_out": [
        "tmp%20#0",
        "tmp%22#0"
      ],
      "stack_out": [
        "tmp%20#0",
        "tmp%22#0"
      ]
    },
    "4850": {
      "error": "application log value is not the result of an ABI return",
      "op": "assert // application log value is not the result of an ABI return",
      "stack_out": [
        "tmp%20#0"
      ]
    },
    "4851": {
      "op": "dup",
      "defined_out": [
        "tmp%20#0",
        "tmp%20#0 (copy)"
      ],
      "stack_out": [
        "tmp%20#0",
        "tmp%20#0 (copy)"
      ]
    },
    "4852": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%20#0",
        "tmp%20#0 (copy)"
      ],
      "stack_out": [
        "tmp%20#0",
        "tmp%20#0 (copy)",
        "0"
      ]
    },
    "4853": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%extract_uint16%7#0",
        "tmp%20#0"
      ],
      "stack_out": [
        "tmp%20#0",
        "aggregate%extract_uint16%7#0"
      ]
    },
    "4854": {
      "op": "cover 1",
      "stack_out": [
        "aggregate%extract_uint16%7#0",
        "tmp%20#0"
      ]
    },
    "4856": {
      "op": "dup",
      "stack_out": [
        "aggregate%extract_uint16%7#0",
        "tmp%20#0",
        "tmp%20#0 (copy)"
      ]
    },
    "4857": {
      "op": "intc_3 // 2",
      "defined_out": [
        "2",
        "aggregate%extract_uint16%7#0",
        "tmp%20#0",
        "tmp%20#0 (copy)"
      ],
      "stack_out": [
        "aggregate%extract_uint16%7#0",
        "tmp%20#0",
        "tmp%20#0 (copy)",
        "2"
      ]
    },
    "4858": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%extract_uint16%7#0",
        "aggregate%extract_uint16%8#0",
        "tmp%20#0"
      ],
      "stack_out": [
        "aggregate%extract_uint16%7#0",
        "tmp%20#0",
        "aggregate%extract_uint16%8#0"
      ]
    },
    "4859": {
      "op": "dig 1",
      "stack_out": [
        "aggregate%extract_uint16%7#0",
        "tmp%20#0",
        "aggregate%extract_uint16%8#0",
        "tmp%20#0 (copy)"
      ]
    },
    "4861": {
      "op": "uncover 3",
      "stack_out": [
        "tmp%20#0",
        "aggregate%extract_uint16%8#0",
        "tmp%20#0 (copy)",
        "aggregate%extract_uint16%7#0"
      ]
    },
    "4863": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%20#0",
        "tmp%20#0 (copy)",
        "aggregate%extract_uint16%7#0",
        "aggregate%extract_uint16%8#0"
      ]
    },
    "4865": {
      "op": "substring3",
      "defined_out": [
        "aggregate%substring3%5#0",
        "tmp%20#0"
      ],
      "stack_out": [
        "tmp%20#0",
        "aggregate%substring3%5#0"
      ]
    },
    "4866": {
      "op": "dup",
      "defined_out": [
        "aggregate%substring3%5#0",
        "aggregate%substring3%5#0 (copy)",
        "tmp%20#0"
      ],
      "stack_out": [
        "tmp%20#0",
        "aggregate%substring3%5#0",
        "aggregate%substring3%5#0 (copy)"
      ]
    },
    "4867": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%20#0",
        "aggregate%substring3%5#0",
        "aggregate%substring3%5#0 (copy)",
        "0"
      ]
    },
    "4868": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%extract_uint16%9#0",
        "aggregate%substring3%5#0",
        "tmp%20#0"
      ],
      "stack_out": [
        "tmp%20#0",
        "aggregate%substring3%5#0",
        "aggregate%extract_uint16%9#0"
      ]
    },
    "4869": {
      "op": "cover 1",
      "stack_out": [
        "tmp%20#0",
        "aggregate%extract_uint16%9#0",
        "aggregate%substring3%5#0"
      ]
    },
    "4871": {
      "op": "dup",
      "stack_out": [
        "tmp%20#0",
        "aggregate%extract_uint16%9#0",
        "aggregate%substring3%5#0",
        "aggregate%substring3%5#0 (copy)"
      ]
    },
    "4872": {
      "op": "intc_3 // 2",
      "stack_out": [
        "tmp%20#0",
        "aggregate%extract_uint16%9#0",
        "aggregate%substring3%5#0",
        "aggregate%substring3%5#0 (copy)",
        "2"
      ]
    },
    "4873": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%extract_uint16%10#0",
        "aggregate%extract_uint16%9#0",
        "aggregate%substring3%5#0",
        "tmp%20#0"
      ],
      "stack_out": [
        "tmp%20#0",
        "aggregate%extract_uint16%9#0",
        "aggregate%substring3%5#0",
        "aggregate%extract_uint16%10#0"
      ]
    },
    "4874": {
      "op": "dig 1",
      "stack_out": [
        "tmp%20#0",
        "aggregate%extract_uint16%9#0",
        "aggregate%substring3%5#0",
        "aggregate%extract_uint16%10#0",
        "aggregate%substring3%5#0 (copy)"
      ]
    },
    "4876": {
      "op": "uncover 3",
      "stack_out": [
        "tmp%20#0",
        "aggregate%substring3%5#0",
        "aggregate%extract_uint16%10#0",
        "aggregate%substring3%5#0 (copy)",
        "aggregate%extract_uint16%9#0"
      ]
    },
    "4878": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%20#0",
        "aggregate%substring3%5#0",
        "aggregate%substring3%5#0 (copy)",
        "aggregate%extract_uint16%9#0",
        "aggregate%extract_uint16%10#0"
      ]
    },
    "4880": {
      "op": "substring3",
      "defined_out": [
        "aggregate%substring3%5#0",
        "aggregate%substring3%6#0",
        "tmp%20#0"
      ],
      "stack_out": [
        "tmp%20#0",
        "aggregate%substring3%5#0",
        "aggregate%substring3%6#0"
      ]
    },
    "4881": {
      "op": "extract 2 0",
      "defined_out": [
        "aggregate%item0%2#0",
        "aggregate%substring3%5#0",
        "tmp%20#0"
      ],
      "stack_out": [
        "tmp%20#0",
        "aggregate%substring3%5#0",
        "aggregate%item0%2#0"
      ]
    },
    "4884": {
      "op": "cover 2",
      "stack_out": [
        "aggregate%item0%2#0",
        "tmp%20#0",
        "aggregate%substring3%5#0"
      ]
    },
    "4886": {
      "op": "dup",
      "stack_out": [
        "aggregate%item0%2#0",
        "tmp%20#0",
        "aggregate%substring3%5#0",
        "aggregate%substring3%5#0 (copy)"
      ]
    },
    "4887": {
      "op": "intc_3 // 2",
      "stack_out": [
        "aggregate%item0%2#0",
        "tmp%20#0",
        "aggregate%substring3%5#0",
        "aggregate%substring3%5#0 (copy)",
        "2"
      ]
    },
    "4888": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%extract_uint16%11#0",
        "aggregate%item0%2#0",
        "aggregate%substring3%5#0",
        "tmp%20#0"
      ],
      "stack_out": [
        "aggregate%item0%2#0",
        "tmp%20#0",
        "aggregate%substring3%5#0",
        "aggregate%extract_uint16%11#0"
      ]
    },
    "4889": {
      "op": "cover 1",
      "stack_out": [
        "aggregate%item0%2#0",
        "tmp%20#0",
        "aggregate%extract_uint16%11#0",
        "aggregate%substring3%5#0"
      ]
    },
    "4891": {
      "op": "dup",
      "stack_out": [
        "aggregate%item0%2#0",
        "tmp%20#0",
        "aggregate%extract_uint16%11#0",
        "aggregate%substring3%5#0",
        "aggregate%substring3%5#0 (copy)"
      ]
    },
    "4892": {
      "op": "len",
      "defined_out": [
        "aggregate%extract_uint16%11#0",
        "aggregate%item0%2#0",
        "aggregate%len%3#0",
        "aggregate%substring3%5#0",
        "tmp%20#0"
      ],
      "stack_out": [
        "aggregate%item0%2#0",
        "tmp%20#0",
        "aggregate%extract_uint16%11#0",
        "aggregate%substring3%5#0",
        "aggregate%len%3#0"
      ]
    },
    "4893": {
      "op": "cover 1",
      "stack_out": [
        "aggregate%item0%2#0",
        "tmp%20#0",
        "aggregate%extract_uint16%11#0",
        "aggregate%len%3#0",
        "aggregate%substring3%5#0"
      ]
    },
    "4895": {
      "op": "uncover 2",
      "stack_out": [
        "aggregate%item0%2#0",
        "tmp%20#0",
        "aggregate%len%3#0",
        "aggregate%substring3%5#0",
        "aggregate%extract_uint16%11#0"
      ]
    },
    "4897": {
      "op": "uncover 2",
      "stack_out": [
        "aggregate%item0%2#0",
        "tmp%20#0",
        "aggregate%substring3%5#0",
        "aggregate%extract_uint16%11#0",
        "aggregate%len%3#0"
      ]
    },
    "4899": {
      "op": "substring3",
      "defined_out": [
        "aggregate%item0%2#0",
        "aggregate%substring3%7#0",
        "tmp%20#0"
      ],
      "stack_out": [
        "aggregate%item0%2#0",
        "tmp%20#0",
        "aggregate%substring3%7#0"
      ]
    },
    "4900": {
      "op": "cover 1",
      "stack_out": [
        "aggregate%item0%2#0",
        "aggregate%substring3%7#0",
        "tmp%20#0"
      ]
    },
    "4902": {
      "op": "dup",
      "stack_out": [
        "aggregate%item0%2#0",
        "aggregate%substring3%7#0",
        "tmp%20#0",
        "tmp%20#0 (copy)"
      ]
    },
    "4903": {
      "op": "intc_3 // 2",
      "stack_out": [
        "aggregate%item0%2#0",
        "aggregate%substring3%7#0",
        "tmp%20#0",
        "tmp%20#0 (copy)",
        "2"
      ]
    },
    "4904": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%extract_uint16%12#0",
        "aggregate%item0%2#0",
        "aggregate%substring3%7#0",
        "tmp%20#0"
      ],
      "stack_out": [
        "aggregate%item0%2#0",
        "aggregate%substring3%7#0",
        "tmp%20#0",
        "aggregate%extract_uint16%12#0"
      ]
    },
    "4905": {
      "op": "cover 1",
      "stack_out": [
        "aggregate%item0%2#0",
        "aggregate%substring3%7#0",
        "aggregate%extract_uint16%12#0",
        "tmp%20#0"
      ]
    },
    "4907": {
      "op": "dup",
      "stack_out": [
        "aggregate%item0%2#0",
        "aggregate%substring3%7#0",
        "aggregate%extract_uint16%12#0",
        "tmp%20#0",
        "tmp%20#0 (copy)"
      ]
    },
    "4908": {
      "op": "len",
      "defined_out": [
        "aggregate%extract_uint16%12#0",
        "aggregate%item0%2#0",
        "aggregate%len%4#0",
        "aggregate%substring3%7#0",
        "tmp%20#0"
      ],
      "stack_out": [
        "aggregate%item0%2#0",
        "aggregate%substring3%7#0",
        "aggregate%extract_uint16%12#0",
        "tmp%20#0",
        "aggregate%len%4#0"
      ]
    },
    "4909": {
      "op": "cover 1",
      "stack_out": [
        "aggregate%item0%2#0",
        "aggregate%substring3%7#0",
        "aggregate%extract_uint16%12#0",
        "aggregate%len%4#0",
        "tmp%20#0"
      ]
    },
    "4911": {
      "op": "uncover 2",
      "stack_out": [
        "aggregate%item0%2#0",
        "aggregate%substring3%7#0",
        "aggregate%len%4#0",
        "tmp%20#0",
        "aggregate%extract_uint16%12#0"
      ]
    },
    "4913": {
      "op": "uncover 2",
      "stack_out": [
        "aggregate%item0%2#0",
        "aggregate%substring3%7#0",
        "tmp%20#0",
        "aggregate%extract_uint16%12#0",
        "aggregate%len%4#0"
      ]
    },
    "4915": {
      "op": "substring3",
      "defined_out": [
        "aggregate%item0%2#0",
        "aggregate%substring3%7#0",
        "aggregate%substring3%8#0"
      ],
      "stack_out": [
        "aggregate%item0%2#0",
        "aggregate%substring3%7#0",
        "aggregate%substring3%8#0"
      ]
    },
    "4916": {
      "op": "dup",
      "defined_out": [
        "aggregate%item0%2#0",
        "aggregate%substring3%7#0",
        "aggregate%substring3%8#0",
        "aggregate%substring3%8#0 (copy)"
      ],
      "stack_out": [
        "aggregate%item0%2#0",
        "aggregate%substring3%7#0",
        "aggregate%substring3%8#0",
        "aggregate%substring3%8#0 (copy)"
      ]
    },
    "4917": {
      "op": "intc_0 // 0",
      "stack_out": [
        "aggregate%item0%2#0",
        "aggregate%substring3%7#0",
        "aggregate%substring3%8#0",
        "aggregate%substring3%8#0 (copy)",
        "0"
      ]
    },
    "4918": {
      "op": "intc_2 // 8",
      "defined_out": [
        "0",
        "8",
        "aggregate%item0%2#0",
        "aggregate%substring3%7#0",
        "aggregate%substring3%8#0",
        "aggregate%substring3%8#0 (copy)"
      ],
      "stack_out": [
        "aggregate%item0%2#0",
        "aggregate%substring3%7#0",
        "aggregate%substring3%8#0",
        "aggregate%substring3%8#0 (copy)",
        "0",
        "8"
      ]
    },
    "4919": {
      "op": "extract3",
      "defined_out": [
        "aggregate%extract%2#0",
        "aggregate%item0%2#0",
        "aggregate%substring3%7#0",
        "aggregate%substring3%8#0"
      ],
      "stack_out": [
        "aggregate%item0%2#0",
        "aggregate%substring3%7#0",
        "aggregate%substring3%8#0",
        "aggregate%extract%2#0"
      ]
    },
    "4920": {
      "op": "btoi",
      "defined_out": [
        "aggregate%item0%2#0",
        "aggregate%item0%3#0",
        "aggregate%substring3%7#0",
        "aggregate%substring3%8#0"
      ],
      "stack_out": [
        "aggregate%item0%2#0",
        "aggregate%substring3%7#0",
        "aggregate%substring3%8#0",
        "aggregate%item0%3#0"
      ]
    },
    "4921": {
      "op": "cover 1",
      "stack_out": [
        "aggregate%item0%2#0",
        "aggregate%substring3%7#0",
        "aggregate%item0%3#0",
        "aggregate%substring3%8#0"
      ]
    },
    "4923": {
      "op": "dup",
      "stack_out": [
        "aggregate%item0%2#0",
        "aggregate%substring3%7#0",
        "aggregate%item0%3#0",
        "aggregate%substring3%8#0",
        "aggregate%substring3%8#0 (copy)"
      ]
    },
    "4924": {
      "op": "intc_2 // 8",
      "stack_out": [
        "aggregate%item0%2#0",
        "aggregate%substring3%7#0",
        "aggregate%item0%3#0",
        "aggregate%substring3%8#0",
        "aggregate%substring3%8#0 (copy)",
        "8"
      ]
    },
    "4925": {
      "op": "intc_2 // 8",
      "stack_out": [
        "aggregate%item0%2#0",
        "aggregate%substring3%7#0",
        "aggregate%item0%3#0",
        "aggregate%substring3%8#0",
        "aggregate%substring3%8#0 (copy)",
        "8",
        "8"
      ]
    },
    "4926": {
      "op": "extract3",
      "defined_out": [
        "aggregate%extract%3#0",
        "aggregate%item0%2#0",
        "aggregate%item0%3#0",
        "aggregate%substring3%7#0",
        "aggregate%substring3%8#0"
      ],
      "stack_out": [
        "aggregate%item0%2#0",
        "aggregate%substring3%7#0",
        "aggregate%item0%3#0",
        "aggregate%substring3%8#0",
        "aggregate%extract%3#0"
      ]
    },
    "4927": {
      "op": "cover 1",
      "stack_out": [
        "aggregate%item0%2#0",
        "aggregate%substring3%7#0",
        "aggregate%item0%3#0",
        "aggregate%extract%3#0",
        "aggregate%substring3%8#0"
      ]
    },
    "4929": {
      "op": "dup",
      "stack_out": [
        "aggregate%item0%2#0",
        "aggregate%substring3%7#0",
        "aggregate%item0%3#0",
        "aggregate%extract%3#0",
        "aggregate%substring3%8#0",
        "aggregate%substring3%8#0 (copy)"
      ]
    },
    "4930": {
      "op": "pushint 16 // 16",
      "defined_out": [
        "16",
        "aggregate%extract%3#0",
        "aggregate%item0%2#0",
        "aggregate%item0%3#0",
        "aggregate%substring3%7#0",
        "aggregate%substring3%8#0",
        "aggregate%substring3%8#0 (copy)"
      ],
      "stack_out": [
        "aggregate%item0%2#0",
        "aggregate%substring3%7#0",
        "aggregate%item0%3#0",
        "aggregate%extract%3#0",
        "aggregate%substring3%8#0",
        "aggregate%substring3%8#0 (copy)",
        "16"
      ]
    },
    "4932": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%extract%3#0",
        "aggregate%extract_uint16%13#0",
        "aggregate%item0%2#0",
        "aggregate%item0%3#0",
        "aggregate%substring3%7#0",
        "aggregate%substring3%8#0"
      ],
      "stack_out": [
        "aggregate%item0%2#0",
        "aggregate%substring3%7#0",
        "aggregate%item0%3#0",
        "aggregate%extract%3#0",
        "aggregate%substring3%8#0",
        "aggregate%extract_uint16%13#0"
      ]
    },
    "4933": {
      "op": "cover 1",
      "stack_out": [
        "aggregate%item0%2#0",
        "aggregate%substring3%7#0",
        "aggregate%item0%3#0",
        "aggregate%extract%3#0",
        "aggregate%extract_uint16%13#0",
        "aggregate%substring3%8#0"
      ]
    },
    "4935": {
      "op": "dup",
      "stack_out": [
        "aggregate%item0%2#0",
        "aggregate%substring3%7#0",
        "aggregate%item0%3#0",
        "aggregate%extract%3#0",
        "aggregate%extract_uint16%13#0",
        "aggregate%substring3%8#0",
        "aggregate%substring3%8#0 (copy)"
      ]
    },
    "4936": {
      "op": "len",
      "defined_out": [
        "aggregate%extract%3#0",
        "aggregate%extract_uint16%13#0",
        "aggregate%item0%2#0",
        "aggregate%item0%3#0",
        "aggregate%len%5#0",
        "aggregate%substring3%7#0",
        "aggregate%substring3%8#0"
      ],
      "stack_out": [
        "aggregate%item0%2#0",
        "aggregate%substring3%7#0",
        "aggregate%item0%3#0",
        "aggregate%extract%3#0",
        "aggregate%extract_uint16%13#0",
        "aggregate%substring3%8#0",
        "aggregate%len%5#0"
      ]
    },
    "4937": {
      "op": "cover 1",
      "stack_out": [
        "aggregate%item0%2#0",
        "aggregate%substring3%7#0",
        "aggregate%item0%3#0",
        "aggregate%extract%3#0",
        "aggregate%extract_uint16%13#0",
        "aggregate%len%5#0",
        "aggregate%substring3%8#0"
      ]
    },
    "4939": {
      "op": "uncover 2",
      "stack_out": [
        "aggregate%item0%2#0",
        "aggregate%substring3%7#0",
        "aggregate%item0%3#0",
        "aggregate%extract%3#0",
        "aggregate%len%5#0",
        "aggregate%substring3%8#0",
        "aggregate%extract_uint16%13#0"
      ]
    },
    "4941": {
      "op": "uncover 2",
      "stack_out": [
        "aggregate%item0%2#0",
        "aggregate%substring3%7#0",
        "aggregate%item0%3#0",
        "aggregate%extract%3#0",
        "aggregate%substring3%8#0",
        "aggregate%extract_uint16%13#0",
        "aggregate%len%5#0"
      ]
    },
    "4943": {
      "op": "substring3",
      "defined_out": [
        "aggregate%extract%3#0",
        "aggregate%item0%2#0",
        "aggregate%item0%3#0",
        "aggregate%substring3%7#0",
        "aggregate%substring3%9#0"
      ],
      "stack_out": [
        "aggregate%item0%2#0",
        "aggregate%substring3%7#0",
        "aggregate%item0%3#0",
        "aggregate%extract%3#0",
        "aggregate%substring3%9#0"
      ]
    },
    "4944": {
      "op": "extract 2 0",
      "defined_out": [
        "aggregate%extract%3#0",
        "aggregate%item0%2#0",
        "aggregate%item0%3#0",
        "aggregate%item2%1#0",
        "aggregate%substring3%7#0"
      ],
      "stack_out": [
        "aggregate%item0%2#0",
        "aggregate%substring3%7#0",
        "aggregate%item0%3#0",
        "aggregate%extract%3#0",
        "aggregate%item2%1#0"
      ]
    },
    "4947": {
      "op": "uncover 4",
      "stack_out": [
        "aggregate%substring3%7#0",
        "aggregate%item0%3#0",
        "aggregate%extract%3#0",
        "aggregate%item2%1#0",
        "aggregate%item0%2#0"
      ]
    },
    "4949": {
      "op": "cover 1",
      "defined_out": [
        "aggregate%extract%3#0",
        "aggregate%item0%3#0",
        "aggregate%item2%1#0",
        "aggregate%substring3%7#0",
        "tmp%23#0"
      ],
      "stack_out": [
        "aggregate%substring3%7#0",
        "aggregate%item0%3#0",
        "aggregate%extract%3#0",
        "tmp%23#0",
        "aggregate%item2%1#0"
      ]
    },
    "4951": {
      "op": "uncover 4",
      "stack_out": [
        "aggregate%item0%3#0",
        "aggregate%extract%3#0",
        "tmp%23#0",
        "aggregate%item2%1#0",
        "aggregate%substring3%7#0"
      ]
    },
    "4953": {
      "op": "cover 2",
      "defined_out": [
        "aggregate%extract%3#0",
        "aggregate%item0%3#0",
        "aggregate%item2%1#0",
        "tmp%23#0",
        "tmp%24#0"
      ],
      "stack_out": [
        "aggregate%item0%3#0",
        "aggregate%extract%3#0",
        "tmp%24#0",
        "tmp%23#0",
        "aggregate%item2%1#0"
      ]
    },
    "4955": {
      "op": "uncover 4",
      "stack_out": [
        "aggregate%extract%3#0",
        "tmp%24#0",
        "tmp%23#0",
        "aggregate%item2%1#0",
        "aggregate%item0%3#0"
      ]
    },
    "4957": {
      "op": "cover 3",
      "defined_out": [
        "aggregate%item2%1#0",
        "tmp%23#0",
        "tmp%24#0",
        "tmp%25#0",
        "tmp%26#0"
      ],
      "stack_out": [
        "tmp%26#0",
        "tmp%25#0",
        "tmp%24#0",
        "tmp%23#0",
        "aggregate%item2%1#0"
      ]
    },
    "4959": {
      "op": "cover 4",
      "defined_out": [
        "tmp%23#0",
        "tmp%24#0",
        "tmp%25#0",
        "tmp%26#0",
        "tmp%27#0"
      ],
      "stack_out": [
        "tmp%27#0",
        "tmp%26#0",
        "tmp%25#0",
        "tmp%24#0",
        "tmp%23#0"
      ]
    },
    "4961": {
      "op": "cover 4",
      "defined_out": [
        "result.0.0#0",
        "tmp%24#0",
        "tmp%25#0",
        "tmp%26#0",
        "tmp%27#0"
      ],
      "stack_out": [
        "result.0.0#0",
        "tmp%27#0",
        "tmp%26#0",
        "tmp%25#0",
        "tmp%24#0"
      ]
    },
    "4963": {
      "op": "cover 4",
      "defined_out": [
        "result.0.0#0",
        "result.0.1#0",
        "tmp%25#0",
        "tmp%26#0",
        "tmp%27#0"
      ],
      "stack_out": [
        "result.0.1#0",
        "result.0.0#0",
        "tmp%27#0",
        "tmp%26#0",
        "tmp%25#0"
      ]
    },
    "4965": {
      "op": "cover 4",
      "defined_out": [
        "result.0.0#0",
        "result.0.1#0",
        "result.1.0#0",
        "tmp%26#0",
        "tmp%27#0"
      ],
      "stack_out": [
        "result.1.0#0",
        "result.0.1#0",
        "result.0.0#0",
        "tmp%27#0",
        "tmp%26#0"
      ]
    },
    "4967": {
      "op": "cover 4",
      "defined_out": [
        "result.0.0#0",
        "result.0.1#0",
        "result.1.0#0",
        "result.1.1#0",
        "tmp%27#0"
      ],
      "stack_out": [
        "result.1.1#0",
        "result.1.0#0",
        "result.0.1#0",
        "result.0.0#0",
        "tmp%27#0"
      ]
    },
    "4969": {
      "op": "cover 4",
      "defined_out": [
        "result.0.0#0",
        "result.0.1#0",
        "result.1.0#0",
        "result.1.1#0",
        "result.1.2#0"
      ],
      "stack_out": [
        "result.1.2#0",
        "result.1.1#0",
        "result.1.0#0",
        "result.0.1#0",
        "result.0.0#0"
      ]
    },
    "4971": {
      "op": "cover 4",
      "defined_out": [
        "result.0.1#0",
        "result.1.0#0",
        "result.1.1#0",
        "result.1.2#0",
        "s1#0"
      ],
      "stack_out": [
        "s1#0",
        "result.1.2#0",
        "result.1.1#0",
        "result.1.0#0",
        "result.0.1#0"
      ]
    },
    "4973": {
      "op": "cover 4",
      "defined_out": [
        "result.1.0#0",
        "result.1.1#0",
        "result.1.2#0",
        "s1#0",
        "s2#0"
      ],
      "stack_out": [
        "s2#0",
        "s1#0",
        "result.1.2#0",
        "result.1.1#0",
        "result.1.0#0"
      ]
    },
    "4975": {
      "op": "cover 4",
      "defined_out": [
        "result.1.1#0",
        "result.1.2#0",
        "s1#0",
        "s2#0",
        "u64_1#0"
      ],
      "stack_out": [
        "u64_1#0",
        "s2#0",
        "s1#0",
        "result.1.2#0",
        "result.1.1#0"
      ]
    },
    "4977": {
      "op": "cover 4",
      "defined_out": [
        "result.1.2#0",
        "s1#0",
        "s2#0",
        "u64_1#0",
        "u64_2#0"
      ],
      "stack_out": [
        "u64_2#0",
        "u64_1#0",
        "s2#0",
        "s1#0",
        "result.1.2#0"
      ]
    },
    "4979": {
      "op": "cover 4",
      "defined_out": [
        "bytez#0",
        "s1#0",
        "s2#0",
        "u64_1#0",
        "u64_2#0"
      ],
      "stack_out": [
        "bytez#0",
        "u64_2#0",
        "u64_1#0",
        "s2#0",
        "s1#0"
      ]
    },
    "4981": {
      "op": "bytec 17 // \"echo: s1\"",
      "defined_out": [
        "\"echo: s1\"",
        "bytez#0",
        "s1#0",
        "s2#0",
        "u64_1#0",
        "u64_2#0"
      ],
      "stack_out": [
        "bytez#0",
        "u64_2#0",
        "u64_1#0",
        "s2#0",
        "s1#0",
        "\"echo: s1\""
      ]
    },
    "4983": {
      "op": "==",
      "defined_out": [
        "bytez#0",
        "s2#0",
        "tmp%28#0",
        "u64_1#0",
        "u64_2#0"
      ],
      "stack_out": [
        "bytez#0",
        "u64_2#0",
        "u64_1#0",
        "s2#0",
        "tmp%28#0"
      ]
    },
    "4984": {
      "op": "assert",
      "stack_out": [
        "bytez#0",
        "u64_2#0",
        "u64_1#0",
        "s2#0"
      ]
    },
    "4985": {
      "op": "bytec 20 // \"echo: s2\"",
      "defined_out": [
        "\"echo: s2\"",
        "bytez#0",
        "s2#0",
        "u64_1#0",
        "u64_2#0"
      ],
      "stack_out": [
        "bytez#0",
        "u64_2#0",
        "u64_1#0",
        "s2#0",
        "\"echo: s2\""
      ]
    },
    "4987": {
      "op": "len",
      "defined_out": [
        "aggregate%length%7#0",
        "bytez#0",
        "s2#0",
        "u64_1#0",
        "u64_2#0"
      ],
      "stack_out": [
        "bytez#0",
        "u64_2#0",
        "u64_1#0",
        "s2#0",
        "aggregate%length%7#0"
      ]
    },
    "4988": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%17#0",
        "bytez#0",
        "s2#0",
        "u64_1#0",
        "u64_2#0"
      ],
      "stack_out": [
        "bytez#0",
        "u64_2#0",
        "u64_1#0",
        "s2#0",
        "aggregate%as_bytes%17#0"
      ]
    },
    "4989": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%length_uint16%7#0",
        "bytez#0",
        "s2#0",
        "u64_1#0",
        "u64_2#0"
      ],
      "stack_out": [
        "bytez#0",
        "u64_2#0",
        "u64_1#0",
        "s2#0",
        "aggregate%length_uint16%7#0"
      ]
    },
    "4992": {
      "op": "bytec 20 // \"echo: s2\"",
      "stack_out": [
        "bytez#0",
        "u64_2#0",
        "u64_1#0",
        "s2#0",
        "aggregate%length_uint16%7#0",
        "\"echo: s2\""
      ]
    },
    "4994": {
      "op": "concat",
      "defined_out": [
        "bytez#0",
        "s2#0",
        "tmp%29#0",
        "u64_1#0",
        "u64_2#0"
      ],
      "stack_out": [
        "bytez#0",
        "u64_2#0",
        "u64_1#0",
        "s2#0",
        "tmp%29#0"
      ]
    },
    "4995": {
      "op": "==",
      "defined_out": [
        "bytez#0",
        "tmp%30#0",
        "u64_1#0",
        "u64_2#0"
      ],
      "stack_out": [
        "bytez#0",
        "u64_2#0",
        "u64_1#0",
        "tmp%30#0"
      ]
    },
    "4996": {
      "op": "assert",
      "stack_out": [
        "bytez#0",
        "u64_2#0",
        "u64_1#0"
      ]
    },
    "4997": {
      "op": "intc_3 // 2",
      "stack_out": [
        "bytez#0",
        "u64_2#0",
        "u64_1#0",
        "2"
      ]
    },
    "4998": {
      "op": "==",
      "defined_out": [
        "bytez#0",
        "tmp%31#0",
        "u64_2#0"
      ],
      "stack_out": [
        "bytez#0",
        "u64_2#0",
        "tmp%31#0"
      ]
    },
    "4999": {
      "op": "assert",
      "defined_out": [
        "bytez#0",
        "reinterpret_biguint%2#0"
      ],
      "stack_out": [
        "bytez#0",
        "reinterpret_biguint%2#0"
      ]
    },
    "5000": {
      "op": "bytec 23 // 0x0000000000000003",
      "defined_out": [
        "0x0000000000000003",
        "bytez#0",
        "reinterpret_biguint%2#0"
      ],
      "stack_out": [
        "bytez#0",
        "reinterpret_biguint%2#0",
        "0x0000000000000003"
      ]
    },
    "5002": {
      "op": "b==",
      "defined_out": [
        "bytez#0",
        "tmp%32#0"
      ],
      "stack_out": [
        "bytez#0",
        "tmp%32#0"
      ]
    },
    "5003": {
      "op": "assert",
      "stack_out": [
        "bytez#0"
      ]
    },
    "5004": {
      "op": "bytec 56 // 0x6563686f3a2033",
      "defined_out": [
        "0x6563686f3a2033",
        "bytez#0"
      ],
      "stack_out": [
        "bytez#0",
        "0x6563686f3a2033"
      ]
    },
    "5006": {
      "op": "==",
      "defined_out": [
        "tmp%33#0"
      ],
      "stack_out": [
        "tmp%33#0"
      ]
    },
    "5007": {
      "op": "assert",
      "stack_out": []
    },
    "5008": {
      "op": "itxn_begin"
    },
    "5009": {
      "op": "bytec 57 // \"s1b\"",
      "defined_out": [
        "\"s1b\""
      ],
      "stack_out": [
        "\"s1b\""
      ]
    },
    "5011": {
      "op": "len",
      "defined_out": [
        "aggregate%length%8#0"
      ],
      "stack_out": [
        "aggregate%length%8#0"
      ]
    },
    "5012": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%18#0"
      ],
      "stack_out": [
        "aggregate%as_bytes%18#0"
      ]
    },
    "5013": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%length_uint16%8#0"
      ],
      "stack_out": [
        "aggregate%length_uint16%8#0"
      ]
    },
    "5016": {
      "op": "bytec 57 // \"s1b\"",
      "stack_out": [
        "aggregate%length_uint16%8#0",
        "\"s1b\""
      ]
    },
    "5018": {
      "op": "concat",
      "defined_out": [
        "tmp%34#0"
      ],
      "stack_out": [
        "tmp%34#0"
      ]
    },
    "5019": {
      "op": "bytec 58 // \"s2b\"",
      "defined_out": [
        "\"s2b\"",
        "tmp%34#0"
      ],
      "stack_out": [
        "tmp%34#0",
        "\"s2b\""
      ]
    },
    "5021": {
      "op": "len",
      "defined_out": [
        "aggregate%length%9#0",
        "tmp%34#0"
      ],
      "stack_out": [
        "tmp%34#0",
        "aggregate%length%9#0"
      ]
    },
    "5022": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%19#0",
        "tmp%34#0"
      ],
      "stack_out": [
        "tmp%34#0",
        "aggregate%as_bytes%19#0"
      ]
    },
    "5023": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%length_uint16%9#0",
        "tmp%34#0"
      ],
      "stack_out": [
        "tmp%34#0",
        "aggregate%length_uint16%9#0"
      ]
    },
    "5026": {
      "op": "bytec 58 // \"s2b\"",
      "stack_out": [
        "tmp%34#0",
        "aggregate%length_uint16%9#0",
        "\"s2b\""
      ]
    },
    "5028": {
      "op": "concat",
      "defined_out": [
        "aggregate%as_Encoded(len+utf8[])%7#0",
        "tmp%34#0"
      ],
      "stack_out": [
        "tmp%34#0",
        "aggregate%as_Encoded(len+utf8[])%7#0"
      ]
    },
    "5029": {
      "op": "cover 1",
      "defined_out": [
        "tmp%34#0",
        "tmp%35#0"
      ],
      "stack_out": [
        "tmp%35#0",
        "tmp%34#0"
      ]
    },
    "5031": {
      "op": "pushint 4 // 4",
      "defined_out": [
        "4",
        "tmp%34#0",
        "tmp%35#0"
      ],
      "stack_out": [
        "tmp%35#0",
        "tmp%34#0",
        "4"
      ]
    },
    "5033": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%20#0",
        "tmp%34#0",
        "tmp%35#0"
      ],
      "stack_out": [
        "tmp%35#0",
        "tmp%34#0",
        "aggregate%as_bytes%20#0"
      ]
    },
    "5034": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%offset_as_uint16%10#0",
        "tmp%34#0",
        "tmp%35#0"
      ],
      "stack_out": [
        "tmp%35#0",
        "tmp%34#0",
        "aggregate%offset_as_uint16%10#0"
      ]
    },
    "5037": {
      "op": "bytec_2 // 0x",
      "defined_out": [
        "0x",
        "aggregate%offset_as_uint16%10#0",
        "tmp%34#0",
        "tmp%35#0"
      ],
      "stack_out": [
        "tmp%35#0",
        "tmp%34#0",
        "aggregate%offset_as_uint16%10#0",
        "0x"
      ]
    },
    "5038": {
      "op": "uncover 1",
      "stack_out": [
        "tmp%35#0",
        "tmp%34#0",
        "0x",
        "aggregate%offset_as_uint16%10#0"
      ]
    },
    "5040": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%14#0",
        "tmp%34#0",
        "tmp%35#0"
      ],
      "stack_out": [
        "tmp%35#0",
        "tmp%34#0",
        "aggregate%head%14#0"
      ]
    },
    "5041": {
      "op": "dig 1",
      "defined_out": [
        "aggregate%head%14#0",
        "tmp%34#0",
        "tmp%34#0 (copy)",
        "tmp%35#0"
      ],
      "stack_out": [
        "tmp%35#0",
        "tmp%34#0",
        "aggregate%head%14#0",
        "tmp%34#0 (copy)"
      ]
    },
    "5043": {
      "op": "len",
      "defined_out": [
        "aggregate%data_length%10#0",
        "aggregate%head%14#0",
        "tmp%34#0",
        "tmp%35#0"
      ],
      "stack_out": [
        "tmp%35#0",
        "tmp%34#0",
        "aggregate%head%14#0",
        "aggregate%data_length%10#0"
      ]
    },
    "5044": {
      "op": "pushint 4 // 4",
      "stack_out": [
        "tmp%35#0",
        "tmp%34#0",
        "aggregate%head%14#0",
        "aggregate%data_length%10#0",
        "4"
      ]
    },
    "5046": {
      "op": "+",
      "defined_out": [
        "aggregate%current_tail_offset%10#0",
        "aggregate%head%14#0",
        "tmp%34#0",
        "tmp%35#0"
      ],
      "stack_out": [
        "tmp%35#0",
        "tmp%34#0",
        "aggregate%head%14#0",
        "aggregate%current_tail_offset%10#0"
      ]
    },
    "5047": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%21#0",
        "aggregate%head%14#0",
        "tmp%34#0",
        "tmp%35#0"
      ],
      "stack_out": [
        "tmp%35#0",
        "tmp%34#0",
        "aggregate%head%14#0",
        "aggregate%as_bytes%21#0"
      ]
    },
    "5048": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%head%14#0",
        "aggregate%offset_as_uint16%11#0",
        "tmp%34#0",
        "tmp%35#0"
      ],
      "stack_out": [
        "tmp%35#0",
        "tmp%34#0",
        "aggregate%head%14#0",
        "aggregate%offset_as_uint16%11#0"
      ]
    },
    "5051": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%15#0",
        "tmp%34#0",
        "tmp%35#0"
      ],
      "stack_out": [
        "tmp%35#0",
        "tmp%34#0",
        "aggregate%head%15#0"
      ]
    },
    "5052": {
      "op": "uncover 1",
      "stack_out": [
        "tmp%35#0",
        "aggregate%head%15#0",
        "tmp%34#0"
      ]
    },
    "5054": {
      "op": "concat",
      "defined_out": [
        "aggregate%concat%10#0",
        "tmp%35#0"
      ],
      "stack_out": [
        "tmp%35#0",
        "aggregate%concat%10#0"
      ]
    },
    "5055": {
      "op": "uncover 1",
      "stack_out": [
        "aggregate%concat%10#0",
        "tmp%35#0"
      ]
    },
    "5057": {
      "op": "concat",
      "defined_out": [
        "tmp%36#0"
      ],
      "stack_out": [
        "tmp%36#0"
      ]
    },
    "5058": {
      "op": "bytec 59 // 0x3362",
      "defined_out": [
        "0x3362",
        "tmp%36#0"
      ],
      "stack_out": [
        "tmp%36#0",
        "0x3362"
      ]
    },
    "5060": {
      "op": "len",
      "defined_out": [
        "aggregate%length%10#0",
        "tmp%36#0"
      ],
      "stack_out": [
        "tmp%36#0",
        "aggregate%length%10#0"
      ]
    },
    "5061": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%22#0",
        "tmp%36#0"
      ],
      "stack_out": [
        "tmp%36#0",
        "aggregate%as_bytes%22#0"
      ]
    },
    "5062": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%length_uint16%10#0",
        "tmp%36#0"
      ],
      "stack_out": [
        "tmp%36#0",
        "aggregate%length_uint16%10#0"
      ]
    },
    "5065": {
      "op": "bytec 59 // 0x3362",
      "stack_out": [
        "tmp%36#0",
        "aggregate%length_uint16%10#0",
        "0x3362"
      ]
    },
    "5067": {
      "op": "concat",
      "defined_out": [
        "tmp%36#0",
        "tmp%37#0"
      ],
      "stack_out": [
        "tmp%36#0",
        "tmp%37#0"
      ]
    },
    "5068": {
      "op": "bytec_2 // 0x",
      "stack_out": [
        "tmp%36#0",
        "tmp%37#0",
        "0x"
      ]
    },
    "5069": {
      "op": "bytec 54 // 0x000000000000000b",
      "defined_out": [
        "0x",
        "0x000000000000000b",
        "tmp%36#0",
        "tmp%37#0"
      ],
      "stack_out": [
        "tmp%36#0",
        "tmp%37#0",
        "0x",
        "0x000000000000000b"
      ]
    },
    "5071": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%16#0",
        "tmp%36#0",
        "tmp%37#0"
      ],
      "stack_out": [
        "tmp%36#0",
        "tmp%37#0",
        "aggregate%head%16#0"
      ]
    },
    "5072": {
      "op": "pushbytes 0x0000000000000015",
      "defined_out": [
        "0x0000000000000015",
        "aggregate%head%16#0",
        "tmp%36#0",
        "tmp%37#0"
      ],
      "stack_out": [
        "tmp%36#0",
        "tmp%37#0",
        "aggregate%head%16#0",
        "0x0000000000000015"
      ]
    },
    "5082": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%17#0",
        "tmp%36#0",
        "tmp%37#0"
      ],
      "stack_out": [
        "tmp%36#0",
        "tmp%37#0",
        "aggregate%head%17#0"
      ]
    },
    "5083": {
      "op": "pushint 18 // 18",
      "defined_out": [
        "18",
        "aggregate%head%17#0",
        "tmp%36#0",
        "tmp%37#0"
      ],
      "stack_out": [
        "tmp%36#0",
        "tmp%37#0",
        "aggregate%head%17#0",
        "18"
      ]
    },
    "5085": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%23#0",
        "aggregate%head%17#0",
        "tmp%36#0",
        "tmp%37#0"
      ],
      "stack_out": [
        "tmp%36#0",
        "tmp%37#0",
        "aggregate%head%17#0",
        "aggregate%as_bytes%23#0"
      ]
    },
    "5086": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%head%17#0",
        "aggregate%offset_as_uint16%12#0",
        "tmp%36#0",
        "tmp%37#0"
      ],
      "stack_out": [
        "tmp%36#0",
        "tmp%37#0",
        "aggregate%head%17#0",
        "aggregate%offset_as_uint16%12#0"
      ]
    },
    "5089": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%18#0",
        "tmp%36#0",
        "tmp%37#0"
      ],
      "stack_out": [
        "tmp%36#0",
        "tmp%37#0",
        "aggregate%head%18#0"
      ]
    },
    "5090": {
      "op": "uncover 1",
      "stack_out": [
        "tmp%36#0",
        "aggregate%head%18#0",
        "tmp%37#0"
      ]
    },
    "5092": {
      "op": "concat",
      "defined_out": [
        "tmp%36#0",
        "tmp%38#0"
      ],
      "stack_out": [
        "tmp%36#0",
        "tmp%38#0"
      ]
    },
    "5093": {
      "op": "pushint 4 // 4",
      "stack_out": [
        "tmp%36#0",
        "tmp%38#0",
        "4"
      ]
    },
    "5095": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%24#0",
        "tmp%36#0",
        "tmp%38#0"
      ],
      "stack_out": [
        "tmp%36#0",
        "tmp%38#0",
        "aggregate%as_bytes%24#0"
      ]
    },
    "5096": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%offset_as_uint16%13#0",
        "tmp%36#0",
        "tmp%38#0"
      ],
      "stack_out": [
        "tmp%36#0",
        "tmp%38#0",
        "aggregate%offset_as_uint16%13#0"
      ]
    },
    "5099": {
      "op": "bytec_2 // 0x",
      "stack_out": [
        "tmp%36#0",
        "tmp%38#0",
        "aggregate%offset_as_uint16%13#0",
        "0x"
      ]
    },
    "5100": {
      "op": "uncover 1",
      "stack_out": [
        "tmp%36#0",
        "tmp%38#0",
        "0x",
        "aggregate%offset_as_uint16%13#0"
      ]
    },
    "5102": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%19#0",
        "tmp%36#0",
        "tmp%38#0"
      ],
      "stack_out": [
        "tmp%36#0",
        "tmp%38#0",
        "aggregate%head%19#0"
      ]
    },
    "5103": {
      "op": "dig 2",
      "defined_out": [
        "aggregate%head%19#0",
        "tmp%36#0",
        "tmp%36#0 (copy)",
        "tmp%38#0"
      ],
      "stack_out": [
        "tmp%36#0",
        "tmp%38#0",
        "aggregate%head%19#0",
        "tmp%36#0 (copy)"
      ]
    },
    "5105": {
      "op": "len",
      "defined_out": [
        "aggregate%data_length%13#0",
        "aggregate%head%19#0",
        "tmp%36#0",
        "tmp%38#0"
      ],
      "stack_out": [
        "tmp%36#0",
        "tmp%38#0",
        "aggregate%head%19#0",
        "aggregate%data_length%13#0"
      ]
    },
    "5106": {
      "op": "pushint 4 // 4",
      "stack_out": [
        "tmp%36#0",
        "tmp%38#0",
        "aggregate%head%19#0",
        "aggregate%data_length%13#0",
        "4"
      ]
    },
    "5108": {
      "op": "+",
      "defined_out": [
        "aggregate%current_tail_offset%13#0",
        "aggregate%head%19#0",
        "tmp%36#0",
        "tmp%38#0"
      ],
      "stack_out": [
        "tmp%36#0",
        "tmp%38#0",
        "aggregate%head%19#0",
        "aggregate%current_tail_offset%13#0"
      ]
    },
    "5109": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%25#0",
        "aggregate%head%19#0",
        "tmp%36#0",
        "tmp%38#0"
      ],
      "stack_out": [
        "tmp%36#0",
        "tmp%38#0",
        "aggregate%head%19#0",
        "aggregate%as_bytes%25#0"
      ]
    },
    "5110": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%head%19#0",
        "aggregate%offset_as_uint16%14#0",
        "tmp%36#0",
        "tmp%38#0"
      ],
      "stack_out": [
        "tmp%36#0",
        "tmp%38#0",
        "aggregate%head%19#0",
        "aggregate%offset_as_uint16%14#0"
      ]
    },
    "5113": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%20#0",
        "tmp%36#0",
        "tmp%38#0"
      ],
      "stack_out": [
        "tmp%36#0",
        "tmp%38#0",
        "aggregate%head%20#0"
      ]
    },
    "5114": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%38#0",
        "aggregate%head%20#0",
        "tmp%36#0"
      ]
    },
    "5116": {
      "op": "concat",
      "defined_out": [
        "aggregate%concat%13#0",
        "tmp%38#0"
      ],
      "stack_out": [
        "tmp%38#0",
        "aggregate%concat%13#0"
      ]
    },
    "5117": {
      "op": "uncover 1",
      "stack_out": [
        "aggregate%concat%13#0",
        "tmp%38#0"
      ]
    },
    "5119": {
      "op": "concat",
      "defined_out": [
        "inner_txn_params%2%%param_ApplicationArgs_idx_1#0"
      ],
      "stack_out": [
        "inner_txn_params%2%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "5120": {
      "op": "frame_dig -1",
      "defined_out": [
        "inner_txn_params%2%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%2%%param_ApplicationID_idx_0#0"
      ],
      "stack_out": [
        "inner_txn_params%2%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%2%%param_ApplicationID_idx_0#0"
      ]
    },
    "5122": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "inner_txn_params%2%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "5124": {
      "op": "bytec 33 // method \"echo_nested_tuple(((string,string),(uint64,uint64,byte[])))((string,string),(uint64,uint64,byte[]))\"",
      "defined_out": [
        "Method(echo_nested_tuple(((string,string),(uint64,uint64,byte[])))((string,string),(uint64,uint64,byte[])))",
        "inner_txn_params%2%%param_ApplicationArgs_idx_1#0"
      ],
      "stack_out": [
        "inner_txn_params%2%%param_ApplicationArgs_idx_1#0",
        "Method(echo_nested_tuple(((string,string),(uint64,uint64,byte[])))((string,string),(uint64,uint64,byte[])))"
      ]
    },
    "5126": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "inner_txn_params%2%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "5128": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "5130": {
      "op": "intc_1 // appl",
      "defined_out": [
        "appl"
      ],
      "stack_out": [
        "appl"
      ]
    },
    "5131": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "5133": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0"
      ]
    },
    "5134": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "5136": {
      "op": "b test_cases.typed_abi_call.typed_c2c.Greeter.test_nested_tuples_next_txn@3"
    },
    "5139": {
      "block": "test_cases.typed_abi_call.typed_c2c.Greeter.test_nested_tuples_next_txn@3",
      "stack_in": [],
      "op": "itxn_submit"
    },
    "5140": {
      "op": "itxn LastLog",
      "defined_out": [
        "awst_tmp%2#0"
      ],
      "stack_out": [
        "awst_tmp%2#0"
      ]
    },
    "5142": {
      "op": "dup",
      "defined_out": [
        "awst_tmp%2#0",
        "awst_tmp%2#0 (copy)"
      ],
      "stack_out": [
        "awst_tmp%2#0",
        "awst_tmp%2#0 (copy)"
      ]
    },
    "5143": {
      "op": "extract 4 0",
      "defined_out": [
        "awst_tmp%2#0",
        "tmp%40#0"
      ],
      "stack_out": [
        "awst_tmp%2#0",
        "tmp%40#0"
      ]
    },
    "5146": {
      "op": "cover 1",
      "stack_out": [
        "tmp%40#0",
        "awst_tmp%2#0"
      ]
    },
    "5148": {
      "op": "extract 0 4",
      "defined_out": [
        "tmp%40#0",
        "tmp%41#0"
      ],
      "stack_out": [
        "tmp%40#0",
        "tmp%41#0"
      ]
    },
    "5151": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%40#0",
        "tmp%41#0"
      ],
      "stack_out": [
        "tmp%40#0",
        "tmp%41#0",
        "0x151f7c75"
      ]
    },
    "5152": {
      "op": "==",
      "defined_out": [
        "tmp%40#0",
        "tmp%42#0"
      ],
      "stack_out": [
        "tmp%40#0",
        "tmp%42#0"
      ]
    },
    "5153": {
      "error": "application log value is not the result of an ABI return",
      "op": "assert // application log value is not the result of an ABI return",
      "stack_out": [
        "tmp%40#0"
      ]
    },
    "5154": {
      "op": "dup",
      "defined_out": [
        "tmp%40#0",
        "tmp%40#0 (copy)"
      ],
      "stack_out": [
        "tmp%40#0",
        "tmp%40#0 (copy)"
      ]
    },
    "5155": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%40#0",
        "tmp%40#0 (copy)"
      ],
      "stack_out": [
        "tmp%40#0",
        "tmp%40#0 (copy)",
        "0"
      ]
    },
    "5156": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%extract_uint16%14#0",
        "tmp%40#0"
      ],
      "stack_out": [
        "tmp%40#0",
        "aggregate%extract_uint16%14#0"
      ]
    },
    "5157": {
      "op": "cover 1",
      "stack_out": [
        "aggregate%extract_uint16%14#0",
        "tmp%40#0"
      ]
    },
    "5159": {
      "op": "dup",
      "stack_out": [
        "aggregate%extract_uint16%14#0",
        "tmp%40#0",
        "tmp%40#0 (copy)"
      ]
    },
    "5160": {
      "op": "intc_3 // 2",
      "defined_out": [
        "2",
        "aggregate%extract_uint16%14#0",
        "tmp%40#0",
        "tmp%40#0 (copy)"
      ],
      "stack_out": [
        "aggregate%extract_uint16%14#0",
        "tmp%40#0",
        "tmp%40#0 (copy)",
        "2"
      ]
    },
    "5161": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%extract_uint16%14#0",
        "aggregate%extract_uint16%15#0",
        "tmp%40#0"
      ],
      "stack_out": [
        "aggregate%extract_uint16%14#0",
        "tmp%40#0",
        "aggregate%extract_uint16%15#0"
      ]
    },
    "5162": {
      "op": "dig 1",
      "stack_out": [
        "aggregate%extract_uint16%14#0",
        "tmp%40#0",
        "aggregate%extract_uint16%15#0",
        "tmp%40#0 (copy)"
      ]
    },
    "5164": {
      "op": "uncover 3",
      "stack_out": [
        "tmp%40#0",
        "aggregate%extract_uint16%15#0",
        "tmp%40#0 (copy)",
        "aggregate%extract_uint16%14#0"
      ]
    },
    "5166": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%40#0",
        "tmp%40#0 (copy)",
        "aggregate%extract_uint16%14#0",
        "aggregate%extract_uint16%15#0"
      ]
    },
    "5168": {
      "op": "substring3",
      "defined_out": [
        "aggregate%substring3%10#0",
        "tmp%40#0"
      ],
      "stack_out": [
        "tmp%40#0",
        "aggregate%substring3%10#0"
      ]
    },
    "5169": {
      "op": "dup",
      "defined_out": [
        "aggregate%substring3%10#0",
        "aggregate%substring3%10#0 (copy)",
        "tmp%40#0"
      ],
      "stack_out": [
        "tmp%40#0",
        "aggregate%substring3%10#0",
        "aggregate%substring3%10#0 (copy)"
      ]
    },
    "5170": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%40#0",
        "aggregate%substring3%10#0",
        "aggregate%substring3%10#0 (copy)",
        "0"
      ]
    },
    "5171": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%extract_uint16%16#0",
        "aggregate%substring3%10#0",
        "tmp%40#0"
      ],
      "stack_out": [
        "tmp%40#0",
        "aggregate%substring3%10#0",
        "aggregate%extract_uint16%16#0"
      ]
    },
    "5172": {
      "op": "cover 1",
      "stack_out": [
        "tmp%40#0",
        "aggregate%extract_uint16%16#0",
        "aggregate%substring3%10#0"
      ]
    },
    "5174": {
      "op": "dup",
      "stack_out": [
        "tmp%40#0",
        "aggregate%extract_uint16%16#0",
        "aggregate%substring3%10#0",
        "aggregate%substring3%10#0 (copy)"
      ]
    },
    "5175": {
      "op": "intc_3 // 2",
      "stack_out": [
        "tmp%40#0",
        "aggregate%extract_uint16%16#0",
        "aggregate%substring3%10#0",
        "aggregate%substring3%10#0 (copy)",
        "2"
      ]
    },
    "5176": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%extract_uint16%16#0",
        "aggregate%extract_uint16%17#0",
        "aggregate%substring3%10#0",
        "tmp%40#0"
      ],
      "stack_out": [
        "tmp%40#0",
        "aggregate%extract_uint16%16#0",
        "aggregate%substring3%10#0",
        "aggregate%extract_uint16%17#0"
      ]
    },
    "5177": {
      "op": "dig 1",
      "stack_out": [
        "tmp%40#0",
        "aggregate%extract_uint16%16#0",
        "aggregate%substring3%10#0",
        "aggregate%extract_uint16%17#0",
        "aggregate%substring3%10#0 (copy)"
      ]
    },
    "5179": {
      "op": "uncover 3",
      "stack_out": [
        "tmp%40#0",
        "aggregate%substring3%10#0",
        "aggregate%extract_uint16%17#0",
        "aggregate%substring3%10#0 (copy)",
        "aggregate%extract_uint16%16#0"
      ]
    },
    "5181": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%40#0",
        "aggregate%substring3%10#0",
        "aggregate%substring3%10#0 (copy)",
        "aggregate%extract_uint16%16#0",
        "aggregate%extract_uint16%17#0"
      ]
    },
    "5183": {
      "op": "substring3",
      "defined_out": [
        "aggregate%substring3%10#0",
        "aggregate%substring3%11#0",
        "tmp%40#0"
      ],
      "stack_out": [
        "tmp%40#0",
        "aggregate%substring3%10#0",
        "aggregate%substring3%11#0"
      ]
    },
    "5184": {
      "op": "extract 2 0",
      "defined_out": [
        "aggregate%item0%4#0",
        "aggregate%substring3%10#0",
        "tmp%40#0"
      ],
      "stack_out": [
        "tmp%40#0",
        "aggregate%substring3%10#0",
        "aggregate%item0%4#0"
      ]
    },
    "5187": {
      "op": "cover 2",
      "stack_out": [
        "aggregate%item0%4#0",
        "tmp%40#0",
        "aggregate%substring3%10#0"
      ]
    },
    "5189": {
      "op": "dup",
      "stack_out": [
        "aggregate%item0%4#0",
        "tmp%40#0",
        "aggregate%substring3%10#0",
        "aggregate%substring3%10#0 (copy)"
      ]
    },
    "5190": {
      "op": "intc_3 // 2",
      "stack_out": [
        "aggregate%item0%4#0",
        "tmp%40#0",
        "aggregate%substring3%10#0",
        "aggregate%substring3%10#0 (copy)",
        "2"
      ]
    },
    "5191": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%extract_uint16%18#0",
        "aggregate%item0%4#0",
        "aggregate%substring3%10#0",
        "tmp%40#0"
      ],
      "stack_out": [
        "aggregate%item0%4#0",
        "tmp%40#0",
        "aggregate%substring3%10#0",
        "aggregate%extract_uint16%18#0"
      ]
    },
    "5192": {
      "op": "cover 1",
      "stack_out": [
        "aggregate%item0%4#0",
        "tmp%40#0",
        "aggregate%extract_uint16%18#0",
        "aggregate%substring3%10#0"
      ]
    },
    "5194": {
      "op": "dup",
      "stack_out": [
        "aggregate%item0%4#0",
        "tmp%40#0",
        "aggregate%extract_uint16%18#0",
        "aggregate%substring3%10#0",
        "aggregate%substring3%10#0 (copy)"
      ]
    },
    "5195": {
      "op": "len",
      "defined_out": [
        "aggregate%extract_uint16%18#0",
        "aggregate%item0%4#0",
        "aggregate%len%6#0",
        "aggregate%substring3%10#0",
        "tmp%40#0"
      ],
      "stack_out": [
        "aggregate%item0%4#0",
        "tmp%40#0",
        "aggregate%extract_uint16%18#0",
        "aggregate%substring3%10#0",
        "aggregate%len%6#0"
      ]
    },
    "5196": {
      "op": "cover 1",
      "stack_out": [
        "aggregate%item0%4#0",
        "tmp%40#0",
        "aggregate%extract_uint16%18#0",
        "aggregate%len%6#0",
        "aggregate%substring3%10#0"
      ]
    },
    "5198": {
      "op": "uncover 2",
      "stack_out": [
        "aggregate%item0%4#0",
        "tmp%40#0",
        "aggregate%len%6#0",
        "aggregate%substring3%10#0",
        "aggregate%extract_uint16%18#0"
      ]
    },
    "5200": {
      "op": "uncover 2",
      "stack_out": [
        "aggregate%item0%4#0",
        "tmp%40#0",
        "aggregate%substring3%10#0",
        "aggregate%extract_uint16%18#0",
        "aggregate%len%6#0"
      ]
    },
    "5202": {
      "op": "substring3",
      "defined_out": [
        "aggregate%item0%4#0",
        "aggregate%substring3%12#0",
        "tmp%40#0"
      ],
      "stack_out": [
        "aggregate%item0%4#0",
        "tmp%40#0",
        "aggregate%substring3%12#0"
      ]
    },
    "5203": {
      "op": "cover 1",
      "stack_out": [
        "aggregate%item0%4#0",
        "aggregate%substring3%12#0",
        "tmp%40#0"
      ]
    },
    "5205": {
      "op": "dup",
      "stack_out": [
        "aggregate%item0%4#0",
        "aggregate%substring3%12#0",
        "tmp%40#0",
        "tmp%40#0 (copy)"
      ]
    },
    "5206": {
      "op": "intc_3 // 2",
      "stack_out": [
        "aggregate%item0%4#0",
        "aggregate%substring3%12#0",
        "tmp%40#0",
        "tmp%40#0 (copy)",
        "2"
      ]
    },
    "5207": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%extract_uint16%19#0",
        "aggregate%item0%4#0",
        "aggregate%substring3%12#0",
        "tmp%40#0"
      ],
      "stack_out": [
        "aggregate%item0%4#0",
        "aggregate%substring3%12#0",
        "tmp%40#0",
        "aggregate%extract_uint16%19#0"
      ]
    },
    "5208": {
      "op": "cover 1",
      "stack_out": [
        "aggregate%item0%4#0",
        "aggregate%substring3%12#0",
        "aggregate%extract_uint16%19#0",
        "tmp%40#0"
      ]
    },
    "5210": {
      "op": "dup",
      "stack_out": [
        "aggregate%item0%4#0",
        "aggregate%substring3%12#0",
        "aggregate%extract_uint16%19#0",
        "tmp%40#0",
        "tmp%40#0 (copy)"
      ]
    },
    "5211": {
      "op": "len",
      "defined_out": [
        "aggregate%extract_uint16%19#0",
        "aggregate%item0%4#0",
        "aggregate%len%7#0",
        "aggregate%substring3%12#0",
        "tmp%40#0"
      ],
      "stack_out": [
        "aggregate%item0%4#0",
        "aggregate%substring3%12#0",
        "aggregate%extract_uint16%19#0",
        "tmp%40#0",
        "aggregate%len%7#0"
      ]
    },
    "5212": {
      "op": "cover 1",
      "stack_out": [
        "aggregate%item0%4#0",
        "aggregate%substring3%12#0",
        "aggregate%extract_uint16%19#0",
        "aggregate%len%7#0",
        "tmp%40#0"
      ]
    },
    "5214": {
      "op": "uncover 2",
      "stack_out": [
        "aggregate%item0%4#0",
        "aggregate%substring3%12#0",
        "aggregate%len%7#0",
        "tmp%40#0",
        "aggregate%extract_uint16%19#0"
      ]
    },
    "5216": {
      "op": "uncover 2",
      "stack_out": [
        "aggregate%item0%4#0",
        "aggregate%substring3%12#0",
        "tmp%40#0",
        "aggregate%extract_uint16%19#0",
        "aggregate%len%7#0"
      ]
    },
    "5218": {
      "op": "substring3",
      "defined_out": [
        "aggregate%item0%4#0",
        "aggregate%substring3%12#0",
        "aggregate%substring3%13#0"
      ],
      "stack_out": [
        "aggregate%item0%4#0",
        "aggregate%substring3%12#0",
        "aggregate%substring3%13#0"
      ]
    },
    "5219": {
      "op": "dup",
      "defined_out": [
        "aggregate%item0%4#0",
        "aggregate%substring3%12#0",
        "aggregate%substring3%13#0",
        "aggregate%substring3%13#0 (copy)"
      ],
      "stack_out": [
        "aggregate%item0%4#0",
        "aggregate%substring3%12#0",
        "aggregate%substring3%13#0",
        "aggregate%substring3%13#0 (copy)"
      ]
    },
    "5220": {
      "op": "intc_0 // 0",
      "stack_out": [
        "aggregate%item0%4#0",
        "aggregate%substring3%12#0",
        "aggregate%substring3%13#0",
        "aggregate%substring3%13#0 (copy)",
        "0"
      ]
    },
    "5221": {
      "op": "intc_2 // 8",
      "defined_out": [
        "0",
        "8",
        "aggregate%item0%4#0",
        "aggregate%substring3%12#0",
        "aggregate%substring3%13#0",
        "aggregate%substring3%13#0 (copy)"
      ],
      "stack_out": [
        "aggregate%item0%4#0",
        "aggregate%substring3%12#0",
        "aggregate%substring3%13#0",
        "aggregate%substring3%13#0 (copy)",
        "0",
        "8"
      ]
    },
    "5222": {
      "op": "extract3",
      "defined_out": [
        "aggregate%extract%4#0",
        "aggregate%item0%4#0",
        "aggregate%substring3%12#0",
        "aggregate%substring3%13#0"
      ],
      "stack_out": [
        "aggregate%item0%4#0",
        "aggregate%substring3%12#0",
        "aggregate%substring3%13#0",
        "aggregate%extract%4#0"
      ]
    },
    "5223": {
      "op": "btoi",
      "defined_out": [
        "aggregate%item0%4#0",
        "aggregate%item0%5#0",
        "aggregate%substring3%12#0",
        "aggregate%substring3%13#0"
      ],
      "stack_out": [
        "aggregate%item0%4#0",
        "aggregate%substring3%12#0",
        "aggregate%substring3%13#0",
        "aggregate%item0%5#0"
      ]
    },
    "5224": {
      "op": "cover 1",
      "stack_out": [
        "aggregate%item0%4#0",
        "aggregate%substring3%12#0",
        "aggregate%item0%5#0",
        "aggregate%substring3%13#0"
      ]
    },
    "5226": {
      "op": "dup",
      "stack_out": [
        "aggregate%item0%4#0",
        "aggregate%substring3%12#0",
        "aggregate%item0%5#0",
        "aggregate%substring3%13#0",
        "aggregate%substring3%13#0 (copy)"
      ]
    },
    "5227": {
      "op": "intc_2 // 8",
      "stack_out": [
        "aggregate%item0%4#0",
        "aggregate%substring3%12#0",
        "aggregate%item0%5#0",
        "aggregate%substring3%13#0",
        "aggregate%substring3%13#0 (copy)",
        "8"
      ]
    },
    "5228": {
      "op": "intc_2 // 8",
      "stack_out": [
        "aggregate%item0%4#0",
        "aggregate%substring3%12#0",
        "aggregate%item0%5#0",
        "aggregate%substring3%13#0",
        "aggregate%substring3%13#0 (copy)",
        "8",
        "8"
      ]
    },
    "5229": {
      "op": "extract3",
      "defined_out": [
        "aggregate%extract%5#0",
        "aggregate%item0%4#0",
        "aggregate%item0%5#0",
        "aggregate%substring3%12#0",
        "aggregate%substring3%13#0"
      ],
      "stack_out": [
        "aggregate%item0%4#0",
        "aggregate%substring3%12#0",
        "aggregate%item0%5#0",
        "aggregate%substring3%13#0",
        "aggregate%extract%5#0"
      ]
    },
    "5230": {
      "op": "cover 1",
      "stack_out": [
        "aggregate%item0%4#0",
        "aggregate%substring3%12#0",
        "aggregate%item0%5#0",
        "aggregate%extract%5#0",
        "aggregate%substring3%13#0"
      ]
    },
    "5232": {
      "op": "dup",
      "stack_out": [
        "aggregate%item0%4#0",
        "aggregate%substring3%12#0",
        "aggregate%item0%5#0",
        "aggregate%extract%5#0",
        "aggregate%substring3%13#0",
        "aggregate%substring3%13#0 (copy)"
      ]
    },
    "5233": {
      "op": "pushint 16 // 16",
      "defined_out": [
        "16",
        "aggregate%extract%5#0",
        "aggregate%item0%4#0",
        "aggregate%item0%5#0",
        "aggregate%substring3%12#0",
        "aggregate%substring3%13#0",
        "aggregate%substring3%13#0 (copy)"
      ],
      "stack_out": [
        "aggregate%item0%4#0",
        "aggregate%substring3%12#0",
        "aggregate%item0%5#0",
        "aggregate%extract%5#0",
        "aggregate%substring3%13#0",
        "aggregate%substring3%13#0 (copy)",
        "16"
      ]
    },
    "5235": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%extract%5#0",
        "aggregate%extract_uint16%20#0",
        "aggregate%item0%4#0",
        "aggregate%item0%5#0",
        "aggregate%substring3%12#0",
        "aggregate%substring3%13#0"
      ],
      "stack_out": [
        "aggregate%item0%4#0",
        "aggregate%substring3%12#0",
        "aggregate%item0%5#0",
        "aggregate%extract%5#0",
        "aggregate%substring3%13#0",
        "aggregate%extract_uint16%20#0"
      ]
    },
    "5236": {
      "op": "cover 1",
      "stack_out": [
        "aggregate%item0%4#0",
        "aggregate%substring3%12#0",
        "aggregate%item0%5#0",
        "aggregate%extract%5#0",
        "aggregate%extract_uint16%20#0",
        "aggregate%substring3%13#0"
      ]
    },
    "5238": {
      "op": "dup",
      "stack_out": [
        "aggregate%item0%4#0",
        "aggregate%substring3%12#0",
        "aggregate%item0%5#0",
        "aggregate%extract%5#0",
        "aggregate%extract_uint16%20#0",
        "aggregate%substring3%13#0",
        "aggregate%substring3%13#0 (copy)"
      ]
    },
    "5239": {
      "op": "len",
      "defined_out": [
        "aggregate%extract%5#0",
        "aggregate%extract_uint16%20#0",
        "aggregate%item0%4#0",
        "aggregate%item0%5#0",
        "aggregate%len%8#0",
        "aggregate%substring3%12#0",
        "aggregate%substring3%13#0"
      ],
      "stack_out": [
        "aggregate%item0%4#0",
        "aggregate%substring3%12#0",
        "aggregate%item0%5#0",
        "aggregate%extract%5#0",
        "aggregate%extract_uint16%20#0",
        "aggregate%substring3%13#0",
        "aggregate%len%8#0"
      ]
    },
    "5240": {
      "op": "cover 1",
      "stack_out": [
        "aggregate%item0%4#0",
        "aggregate%substring3%12#0",
        "aggregate%item0%5#0",
        "aggregate%extract%5#0",
        "aggregate%extract_uint16%20#0",
        "aggregate%len%8#0",
        "aggregate%substring3%13#0"
      ]
    },
    "5242": {
      "op": "uncover 2",
      "stack_out": [
        "aggregate%item0%4#0",
        "aggregate%substring3%12#0",
        "aggregate%item0%5#0",
        "aggregate%extract%5#0",
        "aggregate%len%8#0",
        "aggregate%substring3%13#0",
        "aggregate%extract_uint16%20#0"
      ]
    },
    "5244": {
      "op": "uncover 2",
      "stack_out": [
        "aggregate%item0%4#0",
        "aggregate%substring3%12#0",
        "aggregate%item0%5#0",
        "aggregate%extract%5#0",
        "aggregate%substring3%13#0",
        "aggregate%extract_uint16%20#0",
        "aggregate%len%8#0"
      ]
    },
    "5246": {
      "op": "substring3",
      "defined_out": [
        "aggregate%extract%5#0",
        "aggregate%item0%4#0",
        "aggregate%item0%5#0",
        "aggregate%substring3%12#0",
        "aggregate%substring3%14#0"
      ],
      "stack_out": [
        "aggregate%item0%4#0",
        "aggregate%substring3%12#0",
        "aggregate%item0%5#0",
        "aggregate%extract%5#0",
        "aggregate%substring3%14#0"
      ]
    },
    "5247": {
      "op": "extract 2 0",
      "defined_out": [
        "aggregate%extract%5#0",
        "aggregate%item0%4#0",
        "aggregate%item0%5#0",
        "aggregate%item2%2#0",
        "aggregate%substring3%12#0"
      ],
      "stack_out": [
        "aggregate%item0%4#0",
        "aggregate%substring3%12#0",
        "aggregate%item0%5#0",
        "aggregate%extract%5#0",
        "aggregate%item2%2#0"
      ]
    },
    "5250": {
      "op": "uncover 4",
      "stack_out": [
        "aggregate%substring3%12#0",
        "aggregate%item0%5#0",
        "aggregate%extract%5#0",
        "aggregate%item2%2#0",
        "aggregate%item0%4#0"
      ]
    },
    "5252": {
      "op": "cover 1",
      "defined_out": [
        "aggregate%extract%5#0",
        "aggregate%item0%5#0",
        "aggregate%item2%2#0",
        "aggregate%substring3%12#0",
        "tmp%43#0"
      ],
      "stack_out": [
        "aggregate%substring3%12#0",
        "aggregate%item0%5#0",
        "aggregate%extract%5#0",
        "tmp%43#0",
        "aggregate%item2%2#0"
      ]
    },
    "5254": {
      "op": "uncover 4",
      "stack_out": [
        "aggregate%item0%5#0",
        "aggregate%extract%5#0",
        "tmp%43#0",
        "aggregate%item2%2#0",
        "aggregate%substring3%12#0"
      ]
    },
    "5256": {
      "op": "cover 2",
      "defined_out": [
        "aggregate%extract%5#0",
        "aggregate%item0%5#0",
        "aggregate%item2%2#0",
        "tmp%43#0",
        "tmp%44#0"
      ],
      "stack_out": [
        "aggregate%item0%5#0",
        "aggregate%extract%5#0",
        "tmp%44#0",
        "tmp%43#0",
        "aggregate%item2%2#0"
      ]
    },
    "5258": {
      "op": "uncover 4",
      "stack_out": [
        "aggregate%extract%5#0",
        "tmp%44#0",
        "tmp%43#0",
        "aggregate%item2%2#0",
        "aggregate%item0%5#0"
      ]
    },
    "5260": {
      "op": "cover 3",
      "defined_out": [
        "aggregate%item2%2#0",
        "tmp%43#0",
        "tmp%44#0",
        "tmp%45#0",
        "tmp%46#0"
      ],
      "stack_out": [
        "tmp%46#0",
        "tmp%45#0",
        "tmp%44#0",
        "tmp%43#0",
        "aggregate%item2%2#0"
      ]
    },
    "5262": {
      "op": "cover 4",
      "defined_out": [
        "tmp%43#0",
        "tmp%44#0",
        "tmp%45#0",
        "tmp%46#0",
        "tmp%47#0"
      ],
      "stack_out": [
        "tmp%47#0",
        "tmp%46#0",
        "tmp%45#0",
        "tmp%44#0",
        "tmp%43#0"
      ]
    },
    "5264": {
      "op": "cover 4",
      "defined_out": [
        "result.0.0#0",
        "tmp%44#0",
        "tmp%45#0",
        "tmp%46#0",
        "tmp%47#0"
      ],
      "stack_out": [
        "result.0.0#0",
        "tmp%47#0",
        "tmp%46#0",
        "tmp%45#0",
        "tmp%44#0"
      ]
    },
    "5266": {
      "op": "cover 4",
      "defined_out": [
        "result.0.0#0",
        "result.0.1#0",
        "tmp%45#0",
        "tmp%46#0",
        "tmp%47#0"
      ],
      "stack_out": [
        "result.0.1#0",
        "result.0.0#0",
        "tmp%47#0",
        "tmp%46#0",
        "tmp%45#0"
      ]
    },
    "5268": {
      "op": "cover 4",
      "defined_out": [
        "result.0.0#0",
        "result.0.1#0",
        "result.1.0#0",
        "tmp%46#0",
        "tmp%47#0"
      ],
      "stack_out": [
        "result.1.0#0",
        "result.0.1#0",
        "result.0.0#0",
        "tmp%47#0",
        "tmp%46#0"
      ]
    },
    "5270": {
      "op": "cover 4",
      "defined_out": [
        "result.0.0#0",
        "result.0.1#0",
        "result.1.0#0",
        "result.1.1#0",
        "tmp%47#0"
      ],
      "stack_out": [
        "result.1.1#0",
        "result.1.0#0",
        "result.0.1#0",
        "result.0.0#0",
        "tmp%47#0"
      ]
    },
    "5272": {
      "op": "cover 4",
      "defined_out": [
        "result.0.0#0",
        "result.0.1#0",
        "result.1.0#0",
        "result.1.1#0",
        "result.1.2#0"
      ],
      "stack_out": [
        "result.1.2#0",
        "result.1.1#0",
        "result.1.0#0",
        "result.0.1#0",
        "result.0.0#0"
      ]
    },
    "5274": {
      "op": "cover 4",
      "defined_out": [
        "result.0.1#0",
        "result.1.0#0",
        "result.1.1#0",
        "result.1.2#0",
        "s1#0"
      ],
      "stack_out": [
        "s1#0",
        "result.1.2#0",
        "result.1.1#0",
        "result.1.0#0",
        "result.0.1#0"
      ]
    },
    "5276": {
      "op": "cover 4",
      "defined_out": [
        "result.1.0#0",
        "result.1.1#0",
        "result.1.2#0",
        "s1#0",
        "s2#0"
      ],
      "stack_out": [
        "s2#0",
        "s1#0",
        "result.1.2#0",
        "result.1.1#0",
        "result.1.0#0"
      ]
    },
    "5278": {
      "op": "cover 4",
      "defined_out": [
        "result.1.1#0",
        "result.1.2#0",
        "s1#0",
        "s2#0",
        "u64_1#0"
      ],
      "stack_out": [
        "u64_1#0",
        "s2#0",
        "s1#0",
        "result.1.2#0",
        "result.1.1#0"
      ]
    },
    "5280": {
      "op": "cover 4",
      "defined_out": [
        "result.1.2#0",
        "s1#0",
        "s2#0",
        "u64_1#0",
        "u64_2#0"
      ],
      "stack_out": [
        "u64_2#0",
        "u64_1#0",
        "s2#0",
        "s1#0",
        "result.1.2#0"
      ]
    },
    "5282": {
      "op": "cover 4",
      "defined_out": [
        "bytez#0",
        "s1#0",
        "s2#0",
        "u64_1#0",
        "u64_2#0"
      ],
      "stack_out": [
        "bytez#0",
        "u64_2#0",
        "u64_1#0",
        "s2#0",
        "s1#0"
      ]
    },
    "5284": {
      "op": "pushbytes \"echo: s1b\"",
      "defined_out": [
        "\"echo: s1b\"",
        "bytez#0",
        "s1#0",
        "s2#0",
        "u64_1#0",
        "u64_2#0"
      ],
      "stack_out": [
        "bytez#0",
        "u64_2#0",
        "u64_1#0",
        "s2#0",
        "s1#0",
        "\"echo: s1b\""
      ]
    },
    "5295": {
      "op": "==",
      "defined_out": [
        "bytez#0",
        "s2#0",
        "tmp%48#0",
        "u64_1#0",
        "u64_2#0"
      ],
      "stack_out": [
        "bytez#0",
        "u64_2#0",
        "u64_1#0",
        "s2#0",
        "tmp%48#0"
      ]
    },
    "5296": {
      "op": "assert",
      "stack_out": [
        "bytez#0",
        "u64_2#0",
        "u64_1#0",
        "s2#0"
      ]
    },
    "5297": {
      "op": "bytec 60 // \"echo: s2b\"",
      "defined_out": [
        "\"echo: s2b\"",
        "bytez#0",
        "s2#0",
        "u64_1#0",
        "u64_2#0"
      ],
      "stack_out": [
        "bytez#0",
        "u64_2#0",
        "u64_1#0",
        "s2#0",
        "\"echo: s2b\""
      ]
    },
    "5299": {
      "op": "len",
      "defined_out": [
        "aggregate%length%11#0",
        "bytez#0",
        "s2#0",
        "u64_1#0",
        "u64_2#0"
      ],
      "stack_out": [
        "bytez#0",
        "u64_2#0",
        "u64_1#0",
        "s2#0",
        "aggregate%length%11#0"
      ]
    },
    "5300": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%26#0",
        "bytez#0",
        "s2#0",
        "u64_1#0",
        "u64_2#0"
      ],
      "stack_out": [
        "bytez#0",
        "u64_2#0",
        "u64_1#0",
        "s2#0",
        "aggregate%as_bytes%26#0"
      ]
    },
    "5301": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%length_uint16%11#0",
        "bytez#0",
        "s2#0",
        "u64_1#0",
        "u64_2#0"
      ],
      "stack_out": [
        "bytez#0",
        "u64_2#0",
        "u64_1#0",
        "s2#0",
        "aggregate%length_uint16%11#0"
      ]
    },
    "5304": {
      "op": "bytec 60 // \"echo: s2b\"",
      "stack_out": [
        "bytez#0",
        "u64_2#0",
        "u64_1#0",
        "s2#0",
        "aggregate%length_uint16%11#0",
        "\"echo: s2b\""
      ]
    },
    "5306": {
      "op": "concat",
      "defined_out": [
        "bytez#0",
        "s2#0",
        "tmp%49#0",
        "u64_1#0",
        "u64_2#0"
      ],
      "stack_out": [
        "bytez#0",
        "u64_2#0",
        "u64_1#0",
        "s2#0",
        "tmp%49#0"
      ]
    },
    "5307": {
      "op": "==",
      "defined_out": [
        "bytez#0",
        "tmp%50#0",
        "u64_1#0",
        "u64_2#0"
      ],
      "stack_out": [
        "bytez#0",
        "u64_2#0",
        "u64_1#0",
        "tmp%50#0"
      ]
    },
    "5308": {
      "op": "assert",
      "stack_out": [
        "bytez#0",
        "u64_2#0",
        "u64_1#0"
      ]
    },
    "5309": {
      "op": "pushint 12 // 12",
      "defined_out": [
        "12",
        "bytez#0",
        "u64_1#0",
        "u64_2#0"
      ],
      "stack_out": [
        "bytez#0",
        "u64_2#0",
        "u64_1#0",
        "12"
      ]
    },
    "5311": {
      "op": "==",
      "defined_out": [
        "bytez#0",
        "tmp%51#0",
        "u64_2#0"
      ],
      "stack_out": [
        "bytez#0",
        "u64_2#0",
        "tmp%51#0"
      ]
    },
    "5312": {
      "op": "assert",
      "defined_out": [
        "bytez#0",
        "reinterpret_biguint%4#0"
      ],
      "stack_out": [
        "bytez#0",
        "reinterpret_biguint%4#0"
      ]
    },
    "5313": {
      "op": "pushbytes 0x0000000000000016",
      "defined_out": [
        "0x0000000000000016",
        "bytez#0",
        "reinterpret_biguint%4#0"
      ],
      "stack_out": [
        "bytez#0",
        "reinterpret_biguint%4#0",
        "0x0000000000000016"
      ]
    },
    "5323": {
      "op": "b==",
      "defined_out": [
        "bytez#0",
        "tmp%52#0"
      ],
      "stack_out": [
        "bytez#0",
        "tmp%52#0"
      ]
    },
    "5324": {
      "op": "assert",
      "stack_out": [
        "bytez#0"
      ]
    },
    "5325": {
      "op": "pushbytes 0x6563686f3a203362",
      "defined_out": [
        "0x6563686f3a203362",
        "bytez#0"
      ],
      "stack_out": [
        "bytez#0",
        "0x6563686f3a203362"
      ]
    },
    "5335": {
      "op": "==",
      "defined_out": [
        "tmp%53#0"
      ],
      "stack_out": [
        "tmp%53#0"
      ]
    },
    "5336": {
      "op": "assert",
      "stack_out": []
    },
    "5337": {
      "retsub": true,
      "op": "retsub"
    },
    "5338": {
      "subroutine": "test_cases.typed_abi_call.typed_c2c.Greeter.test_no_args",
      "params": {
        "app#0": "uint64"
      },
      "block": "test_cases.typed_abi_call.typed_c2c.Greeter.test_no_args",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "5341": {
      "op": "b test_cases.typed_abi_call.typed_c2c.Greeter.test_no_args_block@0"
    },
    "5344": {
      "block": "test_cases.typed_abi_call.typed_c2c.Greeter.test_no_args_block@0",
      "stack_in": [],
      "op": "itxn_begin"
    },
    "5345": {
      "op": "frame_dig -1",
      "defined_out": [
        "inner_txn_params%0%%param_ApplicationID_idx_0#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_ApplicationID_idx_0#0"
      ]
    },
    "5347": {
      "op": "itxn_field ApplicationID",
      "stack_out": []
    },
    "5349": {
      "op": "bytec 34 // method \"no_args()uint64\"",
      "defined_out": [
        "Method(no_args()uint64)"
      ],
      "stack_out": [
        "Method(no_args()uint64)"
      ]
    },
    "5351": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "5353": {
      "op": "intc_1 // appl",
      "defined_out": [
        "appl"
      ],
      "stack_out": [
        "appl"
      ]
    },
    "5354": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "5356": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "5357": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "5359": {
      "op": "b test_cases.typed_abi_call.typed_c2c.Greeter.test_no_args_next_txn@1"
    },
    "5362": {
      "block": "test_cases.typed_abi_call.typed_c2c.Greeter.test_no_args_next_txn@1",
      "stack_in": [],
      "op": "itxn_submit"
    },
    "5363": {
      "op": "itxn LastLog",
      "defined_out": [
        "awst_tmp%0#0"
      ],
      "stack_out": [
        "awst_tmp%0#0"
      ]
    },
    "5365": {
      "op": "dup",
      "defined_out": [
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ]
    },
    "5366": {
      "op": "extract 4 0",
      "defined_out": [
        "awst_tmp%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "tmp%0#0"
      ]
    },
    "5369": {
      "op": "cover 1",
      "stack_out": [
        "tmp%0#0",
        "awst_tmp%0#0"
      ]
    },
    "5371": {
      "op": "extract 0 4",
      "defined_out": [
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0"
      ]
    },
    "5374": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "0x151f7c75"
      ]
    },
    "5375": {
      "op": "==",
      "defined_out": [
        "tmp%0#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%2#0"
      ]
    },
    "5376": {
      "error": "application log value is not the result of an ABI return",
      "op": "assert // application log value is not the result of an ABI return",
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "5377": {
      "op": "btoi",
      "defined_out": [
        "result#0"
      ],
      "stack_out": [
        "result#0"
      ]
    },
    "5378": {
      "op": "pushint 42 // 42",
      "defined_out": [
        "42",
        "result#0"
      ],
      "stack_out": [
        "result#0",
        "42"
      ]
    },
    "5380": {
      "op": "==",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "5381": {
      "op": "assert",
      "stack_out": []
    },
    "5382": {
      "op": "itxn_begin"
    },
    "5383": {
      "op": "frame_dig -1",
      "defined_out": [
        "inner_txn_params%1%%param_ApplicationID_idx_0#0"
      ],
      "stack_out": [
        "inner_txn_params%1%%param_ApplicationID_idx_0#0"
      ]
    },
    "5385": {
      "op": "itxn_field ApplicationID",
      "stack_out": []
    },
    "5387": {
      "op": "bytec 34 // method \"no_args()uint64\"",
      "defined_out": [
        "Method(no_args()uint64)"
      ],
      "stack_out": [
        "Method(no_args()uint64)"
      ]
    },
    "5389": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "5391": {
      "op": "intc_1 // appl",
      "defined_out": [
        "appl"
      ],
      "stack_out": [
        "appl"
      ]
    },
    "5392": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "5394": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "5395": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "5397": {
      "op": "b test_cases.typed_abi_call.typed_c2c.Greeter.test_no_args_next_txn@2"
    },
    "5400": {
      "block": "test_cases.typed_abi_call.typed_c2c.Greeter.test_no_args_next_txn@2",
      "stack_in": [],
      "op": "itxn_submit"
    },
    "5401": {
      "op": "itxn LastLog",
      "defined_out": [
        "awst_tmp%1#0"
      ],
      "stack_out": [
        "awst_tmp%1#0"
      ]
    },
    "5403": {
      "op": "dup",
      "defined_out": [
        "awst_tmp%1#0",
        "awst_tmp%1#0 (copy)"
      ],
      "stack_out": [
        "awst_tmp%1#0",
        "awst_tmp%1#0 (copy)"
      ]
    },
    "5404": {
      "op": "extract 4 0",
      "defined_out": [
        "awst_tmp%1#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "awst_tmp%1#0",
        "tmp%5#0"
      ]
    },
    "5407": {
      "op": "cover 1",
      "stack_out": [
        "tmp%5#0",
        "awst_tmp%1#0"
      ]
    },
    "5409": {
      "op": "extract 0 4",
      "defined_out": [
        "tmp%5#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "tmp%6#0"
      ]
    },
    "5412": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%5#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "tmp%6#0",
        "0x151f7c75"
      ]
    },
    "5413": {
      "op": "==",
      "defined_out": [
        "tmp%5#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "tmp%7#0"
      ]
    },
    "5414": {
      "error": "application log value is not the result of an ABI return",
      "op": "assert // application log value is not the result of an ABI return",
      "defined_out": [
        "reinterpret_biguint%0#0"
      ],
      "stack_out": [
        "reinterpret_biguint%0#0"
      ]
    },
    "5415": {
      "op": "bytec 61 // 0x000000000000002a",
      "defined_out": [
        "0x000000000000002a",
        "reinterpret_biguint%0#0"
      ],
      "stack_out": [
        "reinterpret_biguint%0#0",
        "0x000000000000002a"
      ]
    },
    "5417": {
      "op": "b==",
      "defined_out": [
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0"
      ]
    },
    "5418": {
      "op": "assert",
      "stack_out": []
    },
    "5419": {
      "op": "itxn_begin"
    },
    "5420": {
      "op": "frame_dig -1",
      "defined_out": [
        "inner_txn_params%2%%param_ApplicationID_idx_0#0"
      ],
      "stack_out": [
        "inner_txn_params%2%%param_ApplicationID_idx_0#0"
      ]
    },
    "5422": {
      "op": "itxn_field ApplicationID",
      "stack_out": []
    },
    "5424": {
      "op": "bytec 34 // method \"no_args()uint64\"",
      "defined_out": [
        "Method(no_args()uint64)"
      ],
      "stack_out": [
        "Method(no_args()uint64)"
      ]
    },
    "5426": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "5428": {
      "op": "intc_1 // appl",
      "defined_out": [
        "appl"
      ],
      "stack_out": [
        "appl"
      ]
    },
    "5429": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "5431": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "5432": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "5434": {
      "op": "b test_cases.typed_abi_call.typed_c2c.Greeter.test_no_args_next_txn@3"
    },
    "5437": {
      "block": "test_cases.typed_abi_call.typed_c2c.Greeter.test_no_args_next_txn@3",
      "stack_in": [],
      "op": "itxn_submit"
    },
    "5438": {
      "op": "itxn LastLog",
      "defined_out": [
        "awst_tmp%2#0"
      ],
      "stack_out": [
        "awst_tmp%2#0"
      ]
    },
    "5440": {
      "op": "extract 0 4",
      "defined_out": [
        "tmp%10#0"
      ],
      "stack_out": [
        "tmp%10#0"
      ]
    },
    "5443": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%10#0"
      ],
      "stack_out": [
        "tmp%10#0",
        "0x151f7c75"
      ]
    },
    "5444": {
      "op": "==",
      "defined_out": [
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0"
      ]
    },
    "5445": {
      "error": "application log value is not the result of an ABI return",
      "op": "assert // application log value is not the result of an ABI return",
      "stack_out": []
    },
    "5446": {
      "op": "itxn LastLog",
      "defined_out": [
        "awst_tmp%3#0"
      ],
      "stack_out": [
        "awst_tmp%3#0"
      ]
    },
    "5448": {
      "op": "dup",
      "defined_out": [
        "awst_tmp%3#0",
        "awst_tmp%3#0 (copy)"
      ],
      "stack_out": [
        "awst_tmp%3#0",
        "awst_tmp%3#0 (copy)"
      ]
    },
    "5449": {
      "op": "extract 4 0",
      "defined_out": [
        "awst_tmp%3#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "awst_tmp%3#0",
        "tmp%13#0"
      ]
    },
    "5452": {
      "op": "cover 1",
      "stack_out": [
        "tmp%13#0",
        "awst_tmp%3#0"
      ]
    },
    "5454": {
      "op": "extract 0 4",
      "defined_out": [
        "tmp%13#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%13#0",
        "tmp%14#0"
      ]
    },
    "5457": {
      "op": "bytec_0 // 0x151f7c75",
      "stack_out": [
        "tmp%13#0",
        "tmp%14#0",
        "0x151f7c75"
      ]
    },
    "5458": {
      "op": "==",
      "defined_out": [
        "tmp%13#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "tmp%13#0",
        "tmp%15#0"
      ]
    },
    "5459": {
      "error": "application log value is not the result of an ABI return",
      "op": "assert // application log value is not the result of an ABI return",
      "defined_out": [
        "reinterpret_biguint%2#0"
      ],
      "stack_out": [
        "reinterpret_biguint%2#0"
      ]
    },
    "5460": {
      "op": "bytec 61 // 0x000000000000002a",
      "defined_out": [
        "0x000000000000002a",
        "reinterpret_biguint%2#0"
      ],
      "stack_out": [
        "reinterpret_biguint%2#0",
        "0x000000000000002a"
      ]
    },
    "5462": {
      "op": "b==",
      "defined_out": [
        "tmp%16#0"
      ],
      "stack_out": [
        "tmp%16#0"
      ]
    },
    "5463": {
      "op": "assert",
      "stack_out": []
    },
    "5464": {
      "retsub": true,
      "op": "retsub"
    },
    "5465": {
      "subroutine": "test_cases.typed_abi_call.typed_c2c.Greeter.test_named_tuples",
      "params": {
        "app#0": "uint64"
      },
      "block": "test_cases.typed_abi_call.typed_c2c.Greeter.test_named_tuples",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "5468": {
      "op": "b test_cases.typed_abi_call.typed_c2c.Greeter.test_named_tuples_block@0"
    },
    "5471": {
      "block": "test_cases.typed_abi_call.typed_c2c.Greeter.test_named_tuples_block@0",
      "stack_in": [],
      "op": "itxn_begin"
    },
    "5472": {
      "op": "pushint 1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "5474": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(uint64)%0#0"
      ],
      "stack_out": [
        "aggregate%as_Encoded(uint64)%0#0"
      ]
    },
    "5475": {
      "op": "bytec_2 // 0x",
      "defined_out": [
        "0x",
        "aggregate%as_Encoded(uint64)%0#0"
      ],
      "stack_out": [
        "aggregate%as_Encoded(uint64)%0#0",
        "0x"
      ]
    },
    "5476": {
      "op": "uncover 1",
      "stack_out": [
        "0x",
        "aggregate%as_Encoded(uint64)%0#0"
      ]
    },
    "5478": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%0#0"
      ],
      "stack_out": [
        "aggregate%head%0#0"
      ]
    },
    "5479": {
      "op": "bytec 8 // \"log 1\"",
      "defined_out": [
        "\"log 1\"",
        "aggregate%head%0#0"
      ],
      "stack_out": [
        "aggregate%head%0#0",
        "\"log 1\""
      ]
    },
    "5481": {
      "op": "len",
      "defined_out": [
        "aggregate%head%0#0",
        "aggregate%length%0#0"
      ],
      "stack_out": [
        "aggregate%head%0#0",
        "aggregate%length%0#0"
      ]
    },
    "5482": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%0#0",
        "aggregate%head%0#0"
      ],
      "stack_out": [
        "aggregate%head%0#0",
        "aggregate%as_bytes%0#0"
      ]
    },
    "5483": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%head%0#0",
        "aggregate%length_uint16%0#0"
      ],
      "stack_out": [
        "aggregate%head%0#0",
        "aggregate%length_uint16%0#0"
      ]
    },
    "5486": {
      "op": "bytec 8 // \"log 1\"",
      "stack_out": [
        "aggregate%head%0#0",
        "aggregate%length_uint16%0#0",
        "\"log 1\""
      ]
    },
    "5488": {
      "op": "concat",
      "defined_out": [
        "aggregate%as_Encoded(len+utf8[])%0#0",
        "aggregate%head%0#0"
      ],
      "stack_out": [
        "aggregate%head%0#0",
        "aggregate%as_Encoded(len+utf8[])%0#0"
      ]
    },
    "5489": {
      "op": "pushint 10 // 10",
      "defined_out": [
        "10",
        "aggregate%as_Encoded(len+utf8[])%0#0",
        "aggregate%head%0#0"
      ],
      "stack_out": [
        "aggregate%head%0#0",
        "aggregate%as_Encoded(len+utf8[])%0#0",
        "10"
      ]
    },
    "5491": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(len+utf8[])%0#0",
        "aggregate%as_bytes%1#0",
        "aggregate%head%0#0"
      ],
      "stack_out": [
        "aggregate%head%0#0",
        "aggregate%as_Encoded(len+utf8[])%0#0",
        "aggregate%as_bytes%1#0"
      ]
    },
    "5492": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%as_Encoded(len+utf8[])%0#0",
        "aggregate%head%0#0",
        "aggregate%offset_as_uint16%0#0"
      ],
      "stack_out": [
        "aggregate%head%0#0",
        "aggregate%as_Encoded(len+utf8[])%0#0",
        "aggregate%offset_as_uint16%0#0"
      ]
    },
    "5495": {
      "op": "uncover 2",
      "stack_out": [
        "aggregate%as_Encoded(len+utf8[])%0#0",
        "aggregate%offset_as_uint16%0#0",
        "aggregate%head%0#0"
      ]
    },
    "5497": {
      "op": "uncover 1",
      "stack_out": [
        "aggregate%as_Encoded(len+utf8[])%0#0",
        "aggregate%head%0#0",
        "aggregate%offset_as_uint16%0#0"
      ]
    },
    "5499": {
      "op": "concat",
      "defined_out": [
        "aggregate%as_Encoded(len+utf8[])%0#0",
        "aggregate%head%1#0"
      ],
      "stack_out": [
        "aggregate%as_Encoded(len+utf8[])%0#0",
        "aggregate%head%1#0"
      ]
    },
    "5500": {
      "op": "uncover 1",
      "stack_out": [
        "aggregate%head%1#0",
        "aggregate%as_Encoded(len+utf8[])%0#0"
      ]
    },
    "5502": {
      "op": "concat",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "5503": {
      "op": "pushint 1 // 1",
      "stack_out": [
        "tmp%0#0",
        "1"
      ]
    },
    "5505": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(uint64)%1#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "aggregate%as_Encoded(uint64)%1#0"
      ]
    },
    "5506": {
      "op": "bytec_2 // 0x",
      "stack_out": [
        "tmp%0#0",
        "aggregate%as_Encoded(uint64)%1#0",
        "0x"
      ]
    },
    "5507": {
      "op": "uncover 1",
      "stack_out": [
        "tmp%0#0",
        "0x",
        "aggregate%as_Encoded(uint64)%1#0"
      ]
    },
    "5509": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%2#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "aggregate%head%2#0"
      ]
    },
    "5510": {
      "op": "bytec 8 // \"log 1\"",
      "stack_out": [
        "tmp%0#0",
        "aggregate%head%2#0",
        "\"log 1\""
      ]
    },
    "5512": {
      "op": "len",
      "defined_out": [
        "aggregate%head%2#0",
        "aggregate%length%1#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "aggregate%head%2#0",
        "aggregate%length%1#0"
      ]
    },
    "5513": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%2#0",
        "aggregate%head%2#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "aggregate%head%2#0",
        "aggregate%as_bytes%2#0"
      ]
    },
    "5514": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%head%2#0",
        "aggregate%length_uint16%1#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "aggregate%head%2#0",
        "aggregate%length_uint16%1#0"
      ]
    },
    "5517": {
      "op": "bytec 8 // \"log 1\"",
      "stack_out": [
        "tmp%0#0",
        "aggregate%head%2#0",
        "aggregate%length_uint16%1#0",
        "\"log 1\""
      ]
    },
    "5519": {
      "op": "concat",
      "defined_out": [
        "aggregate%as_Encoded(len+utf8[])%1#0",
        "aggregate%head%2#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "aggregate%head%2#0",
        "aggregate%as_Encoded(len+utf8[])%1#0"
      ]
    },
    "5520": {
      "op": "pushint 10 // 10",
      "stack_out": [
        "tmp%0#0",
        "aggregate%head%2#0",
        "aggregate%as_Encoded(len+utf8[])%1#0",
        "10"
      ]
    },
    "5522": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(len+utf8[])%1#0",
        "aggregate%as_bytes%3#0",
        "aggregate%head%2#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "aggregate%head%2#0",
        "aggregate%as_Encoded(len+utf8[])%1#0",
        "aggregate%as_bytes%3#0"
      ]
    },
    "5523": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%as_Encoded(len+utf8[])%1#0",
        "aggregate%head%2#0",
        "aggregate%offset_as_uint16%1#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "aggregate%head%2#0",
        "aggregate%as_Encoded(len+utf8[])%1#0",
        "aggregate%offset_as_uint16%1#0"
      ]
    },
    "5526": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%0#0",
        "aggregate%as_Encoded(len+utf8[])%1#0",
        "aggregate%offset_as_uint16%1#0",
        "aggregate%head%2#0"
      ]
    },
    "5528": {
      "op": "uncover 1",
      "stack_out": [
        "tmp%0#0",
        "aggregate%as_Encoded(len+utf8[])%1#0",
        "aggregate%head%2#0",
        "aggregate%offset_as_uint16%1#0"
      ]
    },
    "5530": {
      "op": "concat",
      "defined_out": [
        "aggregate%as_Encoded(len+utf8[])%1#0",
        "aggregate%head%3#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "aggregate%as_Encoded(len+utf8[])%1#0",
        "aggregate%head%3#0"
      ]
    },
    "5531": {
      "op": "uncover 1",
      "stack_out": [
        "tmp%0#0",
        "aggregate%head%3#0",
        "aggregate%as_Encoded(len+utf8[])%1#0"
      ]
    },
    "5533": {
      "op": "concat",
      "defined_out": [
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0",
        "tmp%1#0"
      ]
    },
    "5534": {
      "op": "cover 1",
      "defined_out": [
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%0%%param_ApplicationArgs_idx_2#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_ApplicationArgs_idx_2#0",
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "5536": {
      "op": "frame_dig -1",
      "defined_out": [
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%0%%param_ApplicationArgs_idx_2#0",
        "inner_txn_params%0%%param_ApplicationID_idx_0#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_ApplicationArgs_idx_2#0",
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%0%%param_ApplicationID_idx_0#0"
      ]
    },
    "5538": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "inner_txn_params%0%%param_ApplicationArgs_idx_2#0",
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "5540": {
      "op": "bytec 62 // method \"logs_are_equal((uint64,string),(uint64,string))bool\"",
      "defined_out": [
        "Method(logs_are_equal((uint64,string),(uint64,string))bool)",
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%0%%param_ApplicationArgs_idx_2#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_ApplicationArgs_idx_2#0",
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0",
        "Method(logs_are_equal((uint64,string),(uint64,string))bool)"
      ]
    },
    "5542": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "inner_txn_params%0%%param_ApplicationArgs_idx_2#0",
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "5544": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "inner_txn_params%0%%param_ApplicationArgs_idx_2#0"
      ]
    },
    "5546": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "5548": {
      "op": "intc_1 // appl",
      "defined_out": [
        "appl"
      ],
      "stack_out": [
        "appl"
      ]
    },
    "5549": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "5551": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "5552": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "5554": {
      "op": "b test_cases.typed_abi_call.typed_c2c.Greeter.test_named_tuples_next_txn@1"
    },
    "5557": {
      "block": "test_cases.typed_abi_call.typed_c2c.Greeter.test_named_tuples_next_txn@1",
      "stack_in": [],
      "op": "itxn_submit"
    },
    "5558": {
      "op": "itxn LastLog",
      "defined_out": [
        "awst_tmp%0#0"
      ],
      "stack_out": [
        "awst_tmp%0#0"
      ]
    },
    "5560": {
      "op": "dup",
      "defined_out": [
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ]
    },
    "5561": {
      "op": "extract 4 0",
      "defined_out": [
        "awst_tmp%0#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "tmp%2#0"
      ]
    },
    "5564": {
      "op": "cover 1",
      "stack_out": [
        "tmp%2#0",
        "awst_tmp%0#0"
      ]
    },
    "5566": {
      "op": "extract 0 4",
      "defined_out": [
        "tmp%2#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "tmp%3#0"
      ]
    },
    "5569": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%2#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "tmp%3#0",
        "0x151f7c75"
      ]
    },
    "5570": {
      "op": "==",
      "defined_out": [
        "tmp%2#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "tmp%4#0"
      ]
    },
    "5571": {
      "error": "application log value is not the result of an ABI return",
      "op": "assert // application log value is not the result of an ABI return",
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "5572": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "0"
      ]
    },
    "5573": {
      "op": "getbit",
      "defined_out": [
        "result#0"
      ],
      "stack_out": [
        "result#0"
      ]
    },
    "5574": {
      "op": "assert",
      "stack_out": []
    },
    "5575": {
      "op": "itxn_begin"
    },
    "5576": {
      "op": "intc_3 // 2",
      "defined_out": [
        "2"
      ],
      "stack_out": [
        "2"
      ]
    },
    "5577": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(uint64)%2#0"
      ],
      "stack_out": [
        "aggregate%as_Encoded(uint64)%2#0"
      ]
    },
    "5578": {
      "op": "bytec_2 // 0x",
      "defined_out": [
        "0x",
        "aggregate%as_Encoded(uint64)%2#0"
      ],
      "stack_out": [
        "aggregate%as_Encoded(uint64)%2#0",
        "0x"
      ]
    },
    "5579": {
      "op": "uncover 1",
      "stack_out": [
        "0x",
        "aggregate%as_Encoded(uint64)%2#0"
      ]
    },
    "5581": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%4#0"
      ],
      "stack_out": [
        "aggregate%head%4#0"
      ]
    },
    "5582": {
      "op": "bytec 63 // \"log 2\"",
      "defined_out": [
        "\"log 2\"",
        "aggregate%head%4#0"
      ],
      "stack_out": [
        "aggregate%head%4#0",
        "\"log 2\""
      ]
    },
    "5584": {
      "op": "len",
      "defined_out": [
        "aggregate%head%4#0",
        "aggregate%length%2#0"
      ],
      "stack_out": [
        "aggregate%head%4#0",
        "aggregate%length%2#0"
      ]
    },
    "5585": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%4#0",
        "aggregate%head%4#0"
      ],
      "stack_out": [
        "aggregate%head%4#0",
        "aggregate%as_bytes%4#0"
      ]
    },
    "5586": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%head%4#0",
        "aggregate%length_uint16%2#0"
      ],
      "stack_out": [
        "aggregate%head%4#0",
        "aggregate%length_uint16%2#0"
      ]
    },
    "5589": {
      "op": "bytec 63 // \"log 2\"",
      "stack_out": [
        "aggregate%head%4#0",
        "aggregate%length_uint16%2#0",
        "\"log 2\""
      ]
    },
    "5591": {
      "op": "concat",
      "defined_out": [
        "aggregate%as_Encoded(len+utf8[])%2#0",
        "aggregate%head%4#0"
      ],
      "stack_out": [
        "aggregate%head%4#0",
        "aggregate%as_Encoded(len+utf8[])%2#0"
      ]
    },
    "5592": {
      "op": "pushint 10 // 10",
      "defined_out": [
        "10",
        "aggregate%as_Encoded(len+utf8[])%2#0",
        "aggregate%head%4#0"
      ],
      "stack_out": [
        "aggregate%head%4#0",
        "aggregate%as_Encoded(len+utf8[])%2#0",
        "10"
      ]
    },
    "5594": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(len+utf8[])%2#0",
        "aggregate%as_bytes%5#0",
        "aggregate%head%4#0"
      ],
      "stack_out": [
        "aggregate%head%4#0",
        "aggregate%as_Encoded(len+utf8[])%2#0",
        "aggregate%as_bytes%5#0"
      ]
    },
    "5595": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%as_Encoded(len+utf8[])%2#0",
        "aggregate%head%4#0",
        "aggregate%offset_as_uint16%2#0"
      ],
      "stack_out": [
        "aggregate%head%4#0",
        "aggregate%as_Encoded(len+utf8[])%2#0",
        "aggregate%offset_as_uint16%2#0"
      ]
    },
    "5598": {
      "op": "uncover 2",
      "stack_out": [
        "aggregate%as_Encoded(len+utf8[])%2#0",
        "aggregate%offset_as_uint16%2#0",
        "aggregate%head%4#0"
      ]
    },
    "5600": {
      "op": "uncover 1",
      "stack_out": [
        "aggregate%as_Encoded(len+utf8[])%2#0",
        "aggregate%head%4#0",
        "aggregate%offset_as_uint16%2#0"
      ]
    },
    "5602": {
      "op": "concat",
      "defined_out": [
        "aggregate%as_Encoded(len+utf8[])%2#0",
        "aggregate%head%5#0"
      ],
      "stack_out": [
        "aggregate%as_Encoded(len+utf8[])%2#0",
        "aggregate%head%5#0"
      ]
    },
    "5603": {
      "op": "uncover 1",
      "stack_out": [
        "aggregate%head%5#0",
        "aggregate%as_Encoded(len+utf8[])%2#0"
      ]
    },
    "5605": {
      "op": "concat",
      "defined_out": [
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0"
      ]
    },
    "5606": {
      "op": "pushint 1 // 1",
      "defined_out": [
        "1",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0",
        "1"
      ]
    },
    "5608": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(uint64)%3#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0",
        "aggregate%as_Encoded(uint64)%3#0"
      ]
    },
    "5609": {
      "op": "bytec_2 // 0x",
      "stack_out": [
        "tmp%6#0",
        "aggregate%as_Encoded(uint64)%3#0",
        "0x"
      ]
    },
    "5610": {
      "op": "uncover 1",
      "stack_out": [
        "tmp%6#0",
        "0x",
        "aggregate%as_Encoded(uint64)%3#0"
      ]
    },
    "5612": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%6#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0",
        "aggregate%head%6#0"
      ]
    },
    "5613": {
      "op": "bytec 8 // \"log 1\"",
      "defined_out": [
        "\"log 1\"",
        "aggregate%head%6#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0",
        "aggregate%head%6#0",
        "\"log 1\""
      ]
    },
    "5615": {
      "op": "len",
      "defined_out": [
        "aggregate%head%6#0",
        "aggregate%length%3#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0",
        "aggregate%head%6#0",
        "aggregate%length%3#0"
      ]
    },
    "5616": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%6#0",
        "aggregate%head%6#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0",
        "aggregate%head%6#0",
        "aggregate%as_bytes%6#0"
      ]
    },
    "5617": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%head%6#0",
        "aggregate%length_uint16%3#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0",
        "aggregate%head%6#0",
        "aggregate%length_uint16%3#0"
      ]
    },
    "5620": {
      "op": "bytec 8 // \"log 1\"",
      "stack_out": [
        "tmp%6#0",
        "aggregate%head%6#0",
        "aggregate%length_uint16%3#0",
        "\"log 1\""
      ]
    },
    "5622": {
      "op": "concat",
      "defined_out": [
        "aggregate%as_Encoded(len+utf8[])%3#0",
        "aggregate%head%6#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0",
        "aggregate%head%6#0",
        "aggregate%as_Encoded(len+utf8[])%3#0"
      ]
    },
    "5623": {
      "op": "pushint 10 // 10",
      "stack_out": [
        "tmp%6#0",
        "aggregate%head%6#0",
        "aggregate%as_Encoded(len+utf8[])%3#0",
        "10"
      ]
    },
    "5625": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(len+utf8[])%3#0",
        "aggregate%as_bytes%7#0",
        "aggregate%head%6#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0",
        "aggregate%head%6#0",
        "aggregate%as_Encoded(len+utf8[])%3#0",
        "aggregate%as_bytes%7#0"
      ]
    },
    "5626": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%as_Encoded(len+utf8[])%3#0",
        "aggregate%head%6#0",
        "aggregate%offset_as_uint16%3#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0",
        "aggregate%head%6#0",
        "aggregate%as_Encoded(len+utf8[])%3#0",
        "aggregate%offset_as_uint16%3#0"
      ]
    },
    "5629": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%6#0",
        "aggregate%as_Encoded(len+utf8[])%3#0",
        "aggregate%offset_as_uint16%3#0",
        "aggregate%head%6#0"
      ]
    },
    "5631": {
      "op": "uncover 1",
      "stack_out": [
        "tmp%6#0",
        "aggregate%as_Encoded(len+utf8[])%3#0",
        "aggregate%head%6#0",
        "aggregate%offset_as_uint16%3#0"
      ]
    },
    "5633": {
      "op": "concat",
      "defined_out": [
        "aggregate%as_Encoded(len+utf8[])%3#0",
        "aggregate%head%7#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0",
        "aggregate%as_Encoded(len+utf8[])%3#0",
        "aggregate%head%7#0"
      ]
    },
    "5634": {
      "op": "uncover 1",
      "stack_out": [
        "tmp%6#0",
        "aggregate%head%7#0",
        "aggregate%as_Encoded(len+utf8[])%3#0"
      ]
    },
    "5636": {
      "op": "concat",
      "defined_out": [
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0",
        "tmp%7#0"
      ]
    },
    "5637": {
      "op": "cover 1",
      "defined_out": [
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_2#0"
      ],
      "stack_out": [
        "inner_txn_params%1%%param_ApplicationArgs_idx_2#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "5639": {
      "op": "frame_dig -1",
      "defined_out": [
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_2#0",
        "inner_txn_params%1%%param_ApplicationID_idx_0#0"
      ],
      "stack_out": [
        "inner_txn_params%1%%param_ApplicationArgs_idx_2#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%1%%param_ApplicationID_idx_0#0"
      ]
    },
    "5641": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "inner_txn_params%1%%param_ApplicationArgs_idx_2#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "5643": {
      "op": "bytec 62 // method \"logs_are_equal((uint64,string),(uint64,string))bool\"",
      "defined_out": [
        "Method(logs_are_equal((uint64,string),(uint64,string))bool)",
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_2#0"
      ],
      "stack_out": [
        "inner_txn_params%1%%param_ApplicationArgs_idx_2#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0",
        "Method(logs_are_equal((uint64,string),(uint64,string))bool)"
      ]
    },
    "5645": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "inner_txn_params%1%%param_ApplicationArgs_idx_2#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "5647": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "inner_txn_params%1%%param_ApplicationArgs_idx_2#0"
      ]
    },
    "5649": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "5651": {
      "op": "intc_1 // appl",
      "defined_out": [
        "appl"
      ],
      "stack_out": [
        "appl"
      ]
    },
    "5652": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "5654": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0"
      ]
    },
    "5655": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "5657": {
      "op": "b test_cases.typed_abi_call.typed_c2c.Greeter.test_named_tuples_next_txn@2"
    },
    "5660": {
      "block": "test_cases.typed_abi_call.typed_c2c.Greeter.test_named_tuples_next_txn@2",
      "stack_in": [],
      "op": "itxn_submit"
    },
    "5661": {
      "op": "itxn LastLog",
      "defined_out": [
        "awst_tmp%1#0"
      ],
      "stack_out": [
        "awst_tmp%1#0"
      ]
    },
    "5663": {
      "op": "dup",
      "defined_out": [
        "awst_tmp%1#0",
        "awst_tmp%1#0 (copy)"
      ],
      "stack_out": [
        "awst_tmp%1#0",
        "awst_tmp%1#0 (copy)"
      ]
    },
    "5664": {
      "op": "extract 4 0",
      "defined_out": [
        "awst_tmp%1#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "awst_tmp%1#0",
        "tmp%8#0"
      ]
    },
    "5667": {
      "op": "cover 1",
      "stack_out": [
        "tmp%8#0",
        "awst_tmp%1#0"
      ]
    },
    "5669": {
      "op": "extract 0 4",
      "defined_out": [
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "tmp%9#0"
      ]
    },
    "5672": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "tmp%9#0",
        "0x151f7c75"
      ]
    },
    "5673": {
      "op": "==",
      "defined_out": [
        "tmp%10#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "tmp%10#0"
      ]
    },
    "5674": {
      "error": "application log value is not the result of an ABI return",
      "op": "assert // application log value is not the result of an ABI return",
      "stack_out": [
        "tmp%8#0"
      ]
    },
    "5675": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "0"
      ]
    },
    "5676": {
      "op": "getbit",
      "defined_out": [
        "result#0"
      ],
      "stack_out": [
        "result#0"
      ]
    },
    "5677": {
      "op": "!",
      "defined_out": [
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%12#0"
      ]
    },
    "5678": {
      "op": "assert",
      "stack_out": []
    },
    "5679": {
      "retsub": true,
      "op": "retsub"
    },
    "5680": {
      "subroutine": "test_cases.typed_abi_call.typed_c2c.Greeter.test_arc4_struct",
      "params": {
        "app#0": "uint64"
      },
      "block": "test_cases.typed_abi_call.typed_c2c.Greeter.test_arc4_struct",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "5683": {
      "op": "b test_cases.typed_abi_call.typed_c2c.Greeter.test_arc4_struct_block@0"
    },
    "5686": {
      "block": "test_cases.typed_abi_call.typed_c2c.Greeter.test_arc4_struct_block@0",
      "stack_in": [],
      "op": "bytec 8 // \"log 1\"",
      "defined_out": [
        "\"log 1\""
      ],
      "stack_out": [
        "\"log 1\""
      ]
    },
    "5688": {
      "op": "len",
      "defined_out": [
        "aggregate%length%0#0"
      ],
      "stack_out": [
        "aggregate%length%0#0"
      ]
    },
    "5689": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%0#0"
      ],
      "stack_out": [
        "aggregate%as_bytes%0#0"
      ]
    },
    "5690": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%length_uint16%0#0"
      ],
      "stack_out": [
        "aggregate%length_uint16%0#0"
      ]
    },
    "5693": {
      "op": "bytec 8 // \"log 1\"",
      "stack_out": [
        "aggregate%length_uint16%0#0",
        "\"log 1\""
      ]
    },
    "5695": {
      "op": "concat",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "5696": {
      "op": "bytec_2 // 0x",
      "defined_out": [
        "0x",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "0x"
      ]
    },
    "5697": {
      "op": "bytec 5 // 0x0000000000000001",
      "defined_out": [
        "0x",
        "0x0000000000000001",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "0x",
        "0x0000000000000001"
      ]
    },
    "5699": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "aggregate%head%0#0"
      ]
    },
    "5700": {
      "op": "pushint 10 // 10",
      "defined_out": [
        "10",
        "aggregate%head%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "aggregate%head%0#0",
        "10"
      ]
    },
    "5702": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%1#0",
        "aggregate%head%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "aggregate%head%0#0",
        "aggregate%as_bytes%1#0"
      ]
    },
    "5703": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%head%0#0",
        "aggregate%offset_as_uint16%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "aggregate%head%0#0",
        "aggregate%offset_as_uint16%0#0"
      ]
    },
    "5706": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%1#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "aggregate%head%1#0"
      ]
    },
    "5707": {
      "op": "uncover 1",
      "stack_out": [
        "aggregate%head%1#0",
        "tmp%0#0"
      ]
    },
    "5709": {
      "op": "concat",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "5710": {
      "op": "dup",
      "defined_out": [
        "log#0"
      ],
      "stack_out": [
        "log#0",
        "log#0"
      ]
    },
    "5711": {
      "op": "itxn_begin",
      "defined_out": [
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0",
        "log#0"
      ],
      "stack_out": [
        "log#0",
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "5712": {
      "op": "frame_dig -1",
      "defined_out": [
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%0%%param_ApplicationID_idx_0#0",
        "log#0"
      ],
      "stack_out": [
        "log#0",
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%0%%param_ApplicationID_idx_0#0"
      ]
    },
    "5714": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "log#0",
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "5716": {
      "op": "pushbytes 0xdc4f1992 // method \"echo_log_struct((uint64,string))(uint64,string)\"",
      "defined_out": [
        "Method(echo_log_struct((uint64,string))(uint64,string))",
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0",
        "log#0"
      ],
      "stack_out": [
        "log#0",
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0",
        "Method(echo_log_struct((uint64,string))(uint64,string))"
      ]
    },
    "5722": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "log#0",
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "5724": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "log#0"
      ]
    },
    "5726": {
      "op": "intc_1 // appl",
      "defined_out": [
        "appl",
        "log#0"
      ],
      "stack_out": [
        "log#0",
        "appl"
      ]
    },
    "5727": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "log#0"
      ]
    },
    "5729": {
      "op": "intc_0 // 0",
      "stack_out": [
        "log#0",
        "0"
      ]
    },
    "5730": {
      "op": "itxn_field Fee",
      "stack_out": [
        "log#0"
      ]
    },
    "5732": {
      "op": "b test_cases.typed_abi_call.typed_c2c.Greeter.test_arc4_struct_next_txn@1"
    },
    "5735": {
      "block": "test_cases.typed_abi_call.typed_c2c.Greeter.test_arc4_struct_next_txn@1",
      "stack_in": [
        "log#0"
      ],
      "op": "itxn_submit"
    },
    "5736": {
      "op": "itxn LastLog",
      "defined_out": [
        "awst_tmp%0#0"
      ],
      "stack_out": [
        "log#0",
        "awst_tmp%0#0"
      ]
    },
    "5738": {
      "op": "dup",
      "defined_out": [
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ],
      "stack_out": [
        "log#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ]
    },
    "5739": {
      "op": "extract 4 0",
      "defined_out": [
        "awst_tmp%0#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "log#0",
        "awst_tmp%0#0",
        "tmp%2#0"
      ]
    },
    "5742": {
      "op": "cover 1",
      "stack_out": [
        "log#0",
        "tmp%2#0",
        "awst_tmp%0#0"
      ]
    },
    "5744": {
      "op": "extract 0 4",
      "defined_out": [
        "tmp%2#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "log#0",
        "tmp%2#0",
        "tmp%3#0"
      ]
    },
    "5747": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%2#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "log#0",
        "tmp%2#0",
        "tmp%3#0",
        "0x151f7c75"
      ]
    },
    "5748": {
      "op": "==",
      "defined_out": [
        "tmp%2#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "log#0",
        "tmp%2#0",
        "tmp%4#0"
      ]
    },
    "5749": {
      "error": "application log value is not the result of an ABI return",
      "op": "assert // application log value is not the result of an ABI return",
      "defined_out": [
        "result#0"
      ],
      "stack_out": [
        "log#0",
        "result#0"
      ]
    },
    "5750": {
      "op": "itxn LastLog",
      "defined_out": [
        "result#0",
        "txn.LastLog#0"
      ],
      "stack_out": [
        "log#0",
        "result#0",
        "txn.LastLog#0"
      ]
    },
    "5752": {
      "op": "cover 1",
      "stack_out": [
        "log#0",
        "txn.LastLog#0",
        "result#0"
      ]
    },
    "5754": {
      "op": "frame_dig 0",
      "defined_out": [
        "log#0",
        "result#0",
        "txn.LastLog#0"
      ],
      "stack_out": [
        "log#0",
        "txn.LastLog#0",
        "result#0",
        "log#0"
      ]
    },
    "5756": {
      "op": "dup",
      "defined_out": [
        "log#0",
        "log#0 (copy)",
        "result#0",
        "txn.LastLog#0"
      ],
      "stack_out": [
        "log#0",
        "txn.LastLog#0",
        "result#0",
        "log#0 (copy)",
        "log#0 (copy)"
      ]
    },
    "5757": {
      "op": "cover 3",
      "stack_out": [
        "log#0",
        "log#0",
        "txn.LastLog#0",
        "result#0",
        "log#0 (copy)"
      ]
    },
    "5759": {
      "op": "==",
      "defined_out": [
        "log#0",
        "tmp%5#0",
        "txn.LastLog#0"
      ],
      "stack_out": [
        "log#0",
        "log#0",
        "txn.LastLog#0",
        "tmp%5#0"
      ]
    },
    "5760": {
      "error": "expected output to match input",
      "op": "assert // expected output to match input",
      "stack_out": [
        "log#0",
        "log#0",
        "txn.LastLog#0"
      ]
    },
    "5761": {
      "op": "dup",
      "defined_out": [
        "log#0",
        "txn.LastLog#0",
        "txn.LastLog#0 (copy)"
      ],
      "stack_out": [
        "log#0",
        "log#0",
        "txn.LastLog#0",
        "txn.LastLog#0 (copy)"
      ]
    },
    "5762": {
      "op": "extract 4 0",
      "defined_out": [
        "log#0",
        "tmp%6#0",
        "txn.LastLog#0"
      ],
      "stack_out": [
        "log#0",
        "log#0",
        "txn.LastLog#0",
        "tmp%6#0"
      ]
    },
    "5765": {
      "op": "cover 1",
      "stack_out": [
        "log#0",
        "log#0",
        "tmp%6#0",
        "txn.LastLog#0"
      ]
    },
    "5767": {
      "op": "extract 0 4",
      "defined_out": [
        "log#0",
        "tmp%6#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "log#0",
        "log#0",
        "tmp%6#0",
        "tmp%7#0"
      ]
    },
    "5770": {
      "op": "bytec_0 // 0x151f7c75",
      "stack_out": [
        "log#0",
        "log#0",
        "tmp%6#0",
        "tmp%7#0",
        "0x151f7c75"
      ]
    },
    "5771": {
      "op": "==",
      "defined_out": [
        "log#0",
        "tmp%6#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "log#0",
        "log#0",
        "tmp%6#0",
        "tmp%8#0"
      ]
    },
    "5772": {
      "error": "application log value is not the result of an ABI return",
      "op": "assert // application log value is not the result of an ABI return",
      "stack_out": [
        "log#0",
        "log#0",
        "tmp%6#0"
      ]
    },
    "5773": {
      "op": "==",
      "defined_out": [
        "log#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "log#0",
        "tmp%9#0"
      ]
    },
    "5774": {
      "error": "expected output to match input",
      "op": "assert // expected output to match input",
      "stack_out": [
        "log#0"
      ]
    },
    "5775": {
      "retsub": true,
      "op": "retsub"
    },
    "5776": {
      "subroutine": "test_cases.typed_abi_call.typed_c2c.Greeter.test_resource_encoding",
      "params": {
        "app_to_call#0": "uint64",
        "asset#0": "uint64"
      },
      "block": "test_cases.typed_abi_call.typed_c2c.Greeter.test_resource_encoding",
      "stack_in": [],
      "op": "proto 2 0"
    },
    "5779": {
      "op": "b test_cases.typed_abi_call.typed_c2c.Greeter.test_resource_encoding_block@0"
    },
    "5782": {
      "block": "test_cases.typed_abi_call.typed_c2c.Greeter.test_resource_encoding_block@0",
      "stack_in": [],
      "op": "global CurrentApplicationID",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "5784": {
      "op": "dup",
      "defined_out": [
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "app#0"
      ]
    },
    "5785": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "app#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "app#0",
        "app#0",
        "tmp%1#0"
      ]
    },
    "5787": {
      "op": "dup",
      "defined_out": [
        "acc#0",
        "acc#0 (copy)",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "app#0",
        "acc#0",
        "acc#0 (copy)"
      ]
    },
    "5788": {
      "op": "cover 2",
      "defined_out": [
        "acc#0",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "acc#0",
        "app#0",
        "acc#0"
      ]
    },
    "5790": {
      "op": "itxn_begin"
    },
    "5791": {
      "op": "cover 1",
      "defined_out": [
        "acc#0",
        "app#0",
        "inner_txn_params%0%%param_Accounts_idx_0#0",
        "inner_txn_params%0%%param_Applications_idx_0#0"
      ],
      "stack_out": [
        "app#0",
        "acc#0",
        "inner_txn_params%0%%param_Accounts_idx_0#0",
        "inner_txn_params%0%%param_Applications_idx_0#0"
      ]
    },
    "5793": {
      "op": "frame_dig -1",
      "defined_out": [
        "acc#0",
        "app#0",
        "inner_txn_params%0%%param_Accounts_idx_0#0",
        "inner_txn_params%0%%param_Applications_idx_0#0",
        "inner_txn_params%0%%param_Assets_idx_0#0"
      ],
      "stack_out": [
        "app#0",
        "acc#0",
        "inner_txn_params%0%%param_Accounts_idx_0#0",
        "inner_txn_params%0%%param_Applications_idx_0#0",
        "inner_txn_params%0%%param_Assets_idx_0#0"
      ]
    },
    "5795": {
      "op": "frame_dig -2",
      "defined_out": [
        "acc#0",
        "app#0",
        "inner_txn_params%0%%param_Accounts_idx_0#0",
        "inner_txn_params%0%%param_ApplicationID_idx_0#0",
        "inner_txn_params%0%%param_Applications_idx_0#0",
        "inner_txn_params%0%%param_Assets_idx_0#0"
      ],
      "stack_out": [
        "app#0",
        "acc#0",
        "inner_txn_params%0%%param_Accounts_idx_0#0",
        "inner_txn_params%0%%param_Applications_idx_0#0",
        "inner_txn_params%0%%param_Assets_idx_0#0",
        "inner_txn_params%0%%param_ApplicationID_idx_0#0"
      ]
    },
    "5797": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "app#0",
        "acc#0",
        "inner_txn_params%0%%param_Accounts_idx_0#0",
        "inner_txn_params%0%%param_Applications_idx_0#0",
        "inner_txn_params%0%%param_Assets_idx_0#0"
      ]
    },
    "5799": {
      "op": "itxn_field Assets",
      "stack_out": [
        "app#0",
        "acc#0",
        "inner_txn_params%0%%param_Accounts_idx_0#0",
        "inner_txn_params%0%%param_Applications_idx_0#0"
      ]
    },
    "5801": {
      "op": "itxn_field Applications",
      "stack_out": [
        "app#0",
        "acc#0",
        "inner_txn_params%0%%param_Accounts_idx_0#0"
      ]
    },
    "5803": {
      "op": "itxn_field Accounts",
      "stack_out": [
        "app#0",
        "acc#0"
      ]
    },
    "5805": {
      "op": "bytec 35 // method \"echo_resource_by_index(asset,application,account)(uint64,uint64,address)\"",
      "defined_out": [
        "Method(echo_resource_by_index(asset,application,account)(uint64,uint64,address))",
        "acc#0",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "acc#0",
        "Method(echo_resource_by_index(asset,application,account)(uint64,uint64,address))"
      ]
    },
    "5807": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0",
        "acc#0"
      ]
    },
    "5809": {
      "op": "bytec 16 // 0x00",
      "defined_out": [
        "0x00",
        "acc#0",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "acc#0",
        "0x00"
      ]
    },
    "5811": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0",
        "acc#0"
      ]
    },
    "5813": {
      "op": "bytec 12 // 0x01",
      "defined_out": [
        "0x01",
        "acc#0",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "acc#0",
        "0x01"
      ]
    },
    "5815": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0",
        "acc#0"
      ]
    },
    "5817": {
      "op": "bytec 12 // 0x01",
      "stack_out": [
        "app#0",
        "acc#0",
        "0x01"
      ]
    },
    "5819": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0",
        "acc#0"
      ]
    },
    "5821": {
      "op": "intc_1 // appl",
      "defined_out": [
        "acc#0",
        "app#0",
        "appl"
      ],
      "stack_out": [
        "app#0",
        "acc#0",
        "appl"
      ]
    },
    "5822": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "app#0",
        "acc#0"
      ]
    },
    "5824": {
      "op": "intc_0 // 0",
      "stack_out": [
        "app#0",
        "acc#0",
        "0"
      ]
    },
    "5825": {
      "op": "itxn_field Fee",
      "stack_out": [
        "app#0",
        "acc#0"
      ]
    },
    "5827": {
      "op": "b test_cases.typed_abi_call.typed_c2c.Greeter.test_resource_encoding_next_txn@1"
    },
    "5830": {
      "block": "test_cases.typed_abi_call.typed_c2c.Greeter.test_resource_encoding_next_txn@1",
      "stack_in": [
        "app#0",
        "acc#0"
      ],
      "op": "itxn_submit"
    },
    "5831": {
      "op": "itxn LastLog",
      "defined_out": [
        "awst_tmp%0#0"
      ],
      "stack_out": [
        "app#0",
        "acc#0",
        "awst_tmp%0#0"
      ]
    },
    "5833": {
      "op": "dup",
      "defined_out": [
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ],
      "stack_out": [
        "app#0",
        "acc#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ]
    },
    "5834": {
      "op": "extract 4 0",
      "defined_out": [
        "awst_tmp%0#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "app#0",
        "acc#0",
        "awst_tmp%0#0",
        "tmp%2#0"
      ]
    },
    "5837": {
      "op": "cover 1",
      "stack_out": [
        "app#0",
        "acc#0",
        "tmp%2#0",
        "awst_tmp%0#0"
      ]
    },
    "5839": {
      "op": "extract 0 4",
      "defined_out": [
        "tmp%2#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "app#0",
        "acc#0",
        "tmp%2#0",
        "tmp%3#0"
      ]
    },
    "5842": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%2#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "app#0",
        "acc#0",
        "tmp%2#0",
        "tmp%3#0",
        "0x151f7c75"
      ]
    },
    "5843": {
      "op": "==",
      "defined_out": [
        "tmp%2#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "app#0",
        "acc#0",
        "tmp%2#0",
        "tmp%4#0"
      ]
    },
    "5844": {
      "error": "application log value is not the result of an ABI return",
      "op": "assert // application log value is not the result of an ABI return",
      "stack_out": [
        "app#0",
        "acc#0",
        "tmp%2#0"
      ]
    },
    "5845": {
      "op": "dup",
      "defined_out": [
        "tmp%2#0",
        "tmp%2#0 (copy)"
      ],
      "stack_out": [
        "app#0",
        "acc#0",
        "tmp%2#0",
        "tmp%2#0 (copy)"
      ]
    },
    "5846": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%2#0",
        "tmp%2#0 (copy)"
      ],
      "stack_out": [
        "app#0",
        "acc#0",
        "tmp%2#0",
        "tmp%2#0 (copy)",
        "0"
      ]
    },
    "5847": {
      "op": "intc_2 // 8",
      "defined_out": [
        "0",
        "8",
        "tmp%2#0",
        "tmp%2#0 (copy)"
      ],
      "stack_out": [
        "app#0",
        "acc#0",
        "tmp%2#0",
        "tmp%2#0 (copy)",
        "0",
        "8"
      ]
    },
    "5848": {
      "op": "extract3",
      "defined_out": [
        "aggregate%extract%0#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "app#0",
        "acc#0",
        "tmp%2#0",
        "aggregate%extract%0#0"
      ]
    },
    "5849": {
      "op": "btoi",
      "defined_out": [
        "aggregate%item0%0#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "app#0",
        "acc#0",
        "tmp%2#0",
        "aggregate%item0%0#0"
      ]
    },
    "5850": {
      "op": "cover 1",
      "stack_out": [
        "app#0",
        "acc#0",
        "aggregate%item0%0#0",
        "tmp%2#0"
      ]
    },
    "5852": {
      "op": "dup",
      "stack_out": [
        "app#0",
        "acc#0",
        "aggregate%item0%0#0",
        "tmp%2#0",
        "tmp%2#0 (copy)"
      ]
    },
    "5853": {
      "op": "intc_2 // 8",
      "stack_out": [
        "app#0",
        "acc#0",
        "aggregate%item0%0#0",
        "tmp%2#0",
        "tmp%2#0 (copy)",
        "8"
      ]
    },
    "5854": {
      "op": "intc_2 // 8",
      "stack_out": [
        "app#0",
        "acc#0",
        "aggregate%item0%0#0",
        "tmp%2#0",
        "tmp%2#0 (copy)",
        "8",
        "8"
      ]
    },
    "5855": {
      "op": "extract3",
      "defined_out": [
        "aggregate%extract%1#0",
        "aggregate%item0%0#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "app#0",
        "acc#0",
        "aggregate%item0%0#0",
        "tmp%2#0",
        "aggregate%extract%1#0"
      ]
    },
    "5856": {
      "op": "btoi",
      "defined_out": [
        "aggregate%item0%0#0",
        "aggregate%item1%0#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "app#0",
        "acc#0",
        "aggregate%item0%0#0",
        "tmp%2#0",
        "aggregate%item1%0#0"
      ]
    },
    "5857": {
      "op": "cover 1",
      "stack_out": [
        "app#0",
        "acc#0",
        "aggregate%item0%0#0",
        "aggregate%item1%0#0",
        "tmp%2#0"
      ]
    },
    "5859": {
      "op": "pushint 16 // 16",
      "defined_out": [
        "16",
        "aggregate%item0%0#0",
        "aggregate%item1%0#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "app#0",
        "acc#0",
        "aggregate%item0%0#0",
        "aggregate%item1%0#0",
        "tmp%2#0",
        "16"
      ]
    },
    "5861": {
      "op": "pushint 32 // 32",
      "defined_out": [
        "16",
        "32",
        "aggregate%item0%0#0",
        "aggregate%item1%0#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "app#0",
        "acc#0",
        "aggregate%item0%0#0",
        "aggregate%item1%0#0",
        "tmp%2#0",
        "16",
        "32"
      ]
    },
    "5863": {
      "op": "extract3",
      "defined_out": [
        "aggregate%extract%2#0",
        "aggregate%item0%0#0",
        "aggregate%item1%0#0"
      ],
      "stack_out": [
        "app#0",
        "acc#0",
        "aggregate%item0%0#0",
        "aggregate%item1%0#0",
        "aggregate%extract%2#0"
      ]
    },
    "5864": {
      "op": "uncover 2",
      "stack_out": [
        "app#0",
        "acc#0",
        "aggregate%item1%0#0",
        "aggregate%extract%2#0",
        "aggregate%item0%0#0"
      ]
    },
    "5866": {
      "op": "cover 1",
      "defined_out": [
        "aggregate%extract%2#0",
        "tmp%5#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "app#0",
        "acc#0",
        "tmp%6#0",
        "tmp%5#0",
        "aggregate%extract%2#0"
      ]
    },
    "5868": {
      "op": "cover 2",
      "defined_out": [
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "app#0",
        "acc#0",
        "tmp%7#0",
        "tmp%6#0",
        "tmp%5#0"
      ]
    },
    "5870": {
      "op": "cover 2",
      "defined_out": [
        "result.0#0",
        "tmp%6#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "app#0",
        "acc#0",
        "result.0#0",
        "tmp%7#0",
        "tmp%6#0"
      ]
    },
    "5872": {
      "op": "cover 2",
      "defined_out": [
        "result.0#0",
        "result.1#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "app#0",
        "acc#0",
        "result.1#0",
        "result.0#0",
        "tmp%7#0"
      ]
    },
    "5874": {
      "op": "cover 2",
      "defined_out": [
        "result.0#0",
        "result.1#0",
        "result.2#0"
      ],
      "stack_out": [
        "app#0",
        "acc#0",
        "result.2#0",
        "result.1#0",
        "result.0#0"
      ]
    },
    "5876": {
      "op": "frame_dig -1",
      "defined_out": [
        "asset#0 (copy)",
        "result.0#0",
        "result.1#0",
        "result.2#0"
      ],
      "stack_out": [
        "app#0",
        "acc#0",
        "result.2#0",
        "result.1#0",
        "result.0#0",
        "asset#0 (copy)"
      ]
    },
    "5878": {
      "op": "==",
      "defined_out": [
        "result.1#0",
        "result.2#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "app#0",
        "acc#0",
        "result.2#0",
        "result.1#0",
        "tmp%8#0"
      ]
    },
    "5879": {
      "op": "uncover 1",
      "stack_out": [
        "app#0",
        "acc#0",
        "result.2#0",
        "tmp%8#0",
        "result.1#0"
      ]
    },
    "5881": {
      "op": "frame_dig 0",
      "defined_out": [
        "app#0",
        "result.1#0",
        "result.2#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "app#0",
        "acc#0",
        "result.2#0",
        "tmp%8#0",
        "result.1#0",
        "app#0"
      ]
    },
    "5883": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "app#0 (copy)",
        "result.1#0",
        "result.2#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "app#0",
        "acc#0",
        "result.2#0",
        "tmp%8#0",
        "result.1#0",
        "app#0 (copy)",
        "app#0 (copy)"
      ]
    },
    "5884": {
      "op": "cover 4",
      "stack_out": [
        "app#0",
        "acc#0",
        "app#0",
        "result.2#0",
        "tmp%8#0",
        "result.1#0",
        "app#0 (copy)"
      ]
    },
    "5886": {
      "op": "==",
      "defined_out": [
        "app#0",
        "result.2#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "app#0",
        "acc#0",
        "app#0",
        "result.2#0",
        "tmp%8#0",
        "tmp%9#0"
      ]
    },
    "5887": {
      "op": "&&",
      "defined_out": [
        "app#0",
        "result.2#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "app#0",
        "acc#0",
        "app#0",
        "result.2#0",
        "tmp%10#0"
      ]
    },
    "5888": {
      "op": "uncover 1",
      "stack_out": [
        "app#0",
        "acc#0",
        "app#0",
        "tmp%10#0",
        "result.2#0"
      ]
    },
    "5890": {
      "op": "frame_dig 1",
      "defined_out": [
        "acc#0",
        "app#0",
        "result.2#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "app#0",
        "acc#0",
        "app#0",
        "tmp%10#0",
        "result.2#0",
        "acc#0"
      ]
    },
    "5892": {
      "op": "dup",
      "defined_out": [
        "acc#0",
        "acc#0 (copy)",
        "app#0",
        "result.2#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "app#0",
        "acc#0",
        "app#0",
        "tmp%10#0",
        "result.2#0",
        "acc#0 (copy)",
        "acc#0 (copy)"
      ]
    },
    "5893": {
      "op": "cover 3",
      "stack_out": [
        "app#0",
        "acc#0",
        "app#0",
        "acc#0",
        "tmp%10#0",
        "result.2#0",
        "acc#0 (copy)"
      ]
    },
    "5895": {
      "op": "==",
      "defined_out": [
        "acc#0",
        "app#0",
        "tmp%10#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "app#0",
        "acc#0",
        "app#0",
        "acc#0",
        "tmp%10#0",
        "tmp%11#0"
      ]
    },
    "5896": {
      "op": "&&",
      "defined_out": [
        "acc#0",
        "app#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "app#0",
        "acc#0",
        "app#0",
        "acc#0",
        "tmp%12#0"
      ]
    },
    "5897": {
      "error": "expected echo to return same resources",
      "op": "assert // expected echo to return same resources",
      "stack_out": [
        "app#0",
        "acc#0",
        "app#0",
        "acc#0"
      ]
    },
    "5898": {
      "op": "itxn_begin"
    },
    "5899": {
      "op": "frame_dig -1",
      "stack_out": [
        "app#0",
        "acc#0",
        "app#0",
        "acc#0",
        "asset#0 (copy)"
      ]
    },
    "5901": {
      "op": "itob",
      "defined_out": [
        "acc#0",
        "app#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "app#0",
        "acc#0",
        "app#0",
        "acc#0",
        "tmp%13#0"
      ]
    },
    "5902": {
      "op": "uncover 2",
      "stack_out": [
        "app#0",
        "acc#0",
        "acc#0",
        "tmp%13#0",
        "app#0"
      ]
    },
    "5904": {
      "op": "itob",
      "defined_out": [
        "acc#0",
        "app#0",
        "tmp%13#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "app#0",
        "acc#0",
        "acc#0",
        "tmp%13#0",
        "tmp%14#0"
      ]
    },
    "5905": {
      "op": "uncover 2",
      "defined_out": [
        "acc#0",
        "app#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0",
        "tmp%14#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "app#0",
        "acc#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0",
        "tmp%14#0",
        "tmp%15#0"
      ]
    },
    "5907": {
      "op": "uncover 1",
      "stack_out": [
        "app#0",
        "acc#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0",
        "tmp%15#0",
        "tmp%14#0"
      ]
    },
    "5909": {
      "op": "cover 2",
      "defined_out": [
        "acc#0",
        "app#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_2#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "app#0",
        "acc#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_2#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0",
        "tmp%15#0"
      ]
    },
    "5911": {
      "op": "cover 2",
      "defined_out": [
        "acc#0",
        "app#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_2#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_3#0"
      ],
      "stack_out": [
        "app#0",
        "acc#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_3#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_2#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "5913": {
      "op": "frame_dig -2",
      "defined_out": [
        "acc#0",
        "app#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_2#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_3#0",
        "inner_txn_params%1%%param_ApplicationID_idx_0#0"
      ],
      "stack_out": [
        "app#0",
        "acc#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_3#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_2#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%1%%param_ApplicationID_idx_0#0"
      ]
    },
    "5915": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "app#0",
        "acc#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_3#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_2#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "5917": {
      "op": "bytec 36 // method \"echo_resource_by_value(uint64,uint64,address)(uint64,uint64,address)\"",
      "defined_out": [
        "Method(echo_resource_by_value(uint64,uint64,address)(uint64,uint64,address))",
        "acc#0",
        "app#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_2#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_3#0"
      ],
      "stack_out": [
        "app#0",
        "acc#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_3#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_2#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0",
        "Method(echo_resource_by_value(uint64,uint64,address)(uint64,uint64,address))"
      ]
    },
    "5919": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0",
        "acc#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_3#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_2#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "5921": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0",
        "acc#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_3#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_2#0"
      ]
    },
    "5923": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0",
        "acc#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_3#0"
      ]
    },
    "5925": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0",
        "acc#0"
      ]
    },
    "5927": {
      "op": "intc_1 // appl",
      "defined_out": [
        "acc#0",
        "app#0",
        "appl"
      ],
      "stack_out": [
        "app#0",
        "acc#0",
        "appl"
      ]
    },
    "5928": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "app#0",
        "acc#0"
      ]
    },
    "5930": {
      "op": "intc_0 // 0",
      "stack_out": [
        "app#0",
        "acc#0",
        "0"
      ]
    },
    "5931": {
      "op": "itxn_field Fee",
      "stack_out": [
        "app#0",
        "acc#0"
      ]
    },
    "5933": {
      "op": "b test_cases.typed_abi_call.typed_c2c.Greeter.test_resource_encoding_next_txn@2"
    },
    "5936": {
      "block": "test_cases.typed_abi_call.typed_c2c.Greeter.test_resource_encoding_next_txn@2",
      "stack_in": [
        "app#0",
        "acc#0"
      ],
      "op": "itxn_submit"
    },
    "5937": {
      "op": "itxn LastLog",
      "defined_out": [
        "awst_tmp%1#0"
      ],
      "stack_out": [
        "app#0",
        "acc#0",
        "awst_tmp%1#0"
      ]
    },
    "5939": {
      "op": "dup",
      "defined_out": [
        "awst_tmp%1#0",
        "awst_tmp%1#0 (copy)"
      ],
      "stack_out": [
        "app#0",
        "acc#0",
        "awst_tmp%1#0",
        "awst_tmp%1#0 (copy)"
      ]
    },
    "5940": {
      "op": "extract 4 0",
      "defined_out": [
        "awst_tmp%1#0",
        "tmp%16#0"
      ],
      "stack_out": [
        "app#0",
        "acc#0",
        "awst_tmp%1#0",
        "tmp%16#0"
      ]
    },
    "5943": {
      "op": "cover 1",
      "stack_out": [
        "app#0",
        "acc#0",
        "tmp%16#0",
        "awst_tmp%1#0"
      ]
    },
    "5945": {
      "op": "extract 0 4",
      "defined_out": [
        "tmp%16#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "app#0",
        "acc#0",
        "tmp%16#0",
        "tmp%17#0"
      ]
    },
    "5948": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%16#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "app#0",
        "acc#0",
        "tmp%16#0",
        "tmp%17#0",
        "0x151f7c75"
      ]
    },
    "5949": {
      "op": "==",
      "defined_out": [
        "tmp%16#0",
        "tmp%18#0"
      ],
      "stack_out": [
        "app#0",
        "acc#0",
        "tmp%16#0",
        "tmp%18#0"
      ]
    },
    "5950": {
      "error": "application log value is not the result of an ABI return",
      "op": "assert // application log value is not the result of an ABI return",
      "stack_out": [
        "app#0",
        "acc#0",
        "tmp%16#0"
      ]
    },
    "5951": {
      "op": "dup",
      "defined_out": [
        "tmp%16#0",
        "tmp%16#0 (copy)"
      ],
      "stack_out": [
        "app#0",
        "acc#0",
        "tmp%16#0",
        "tmp%16#0 (copy)"
      ]
    },
    "5952": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%16#0",
        "tmp%16#0 (copy)"
      ],
      "stack_out": [
        "app#0",
        "acc#0",
        "tmp%16#0",
        "tmp%16#0 (copy)",
        "0"
      ]
    },
    "5953": {
      "op": "intc_2 // 8",
      "defined_out": [
        "0",
        "8",
        "tmp%16#0",
        "tmp%16#0 (copy)"
      ],
      "stack_out": [
        "app#0",
        "acc#0",
        "tmp%16#0",
        "tmp%16#0 (copy)",
        "0",
        "8"
      ]
    },
    "5954": {
      "op": "extract3",
      "defined_out": [
        "aggregate%extract%3#0",
        "tmp%16#0"
      ],
      "stack_out": [
        "app#0",
        "acc#0",
        "tmp%16#0",
        "aggregate%extract%3#0"
      ]
    },
    "5955": {
      "op": "btoi",
      "defined_out": [
        "aggregate%item0%1#0",
        "tmp%16#0"
      ],
      "stack_out": [
        "app#0",
        "acc#0",
        "tmp%16#0",
        "aggregate%item0%1#0"
      ]
    },
    "5956": {
      "op": "cover 1",
      "stack_out": [
        "app#0",
        "acc#0",
        "aggregate%item0%1#0",
        "tmp%16#0"
      ]
    },
    "5958": {
      "op": "dup",
      "stack_out": [
        "app#0",
        "acc#0",
        "aggregate%item0%1#0",
        "tmp%16#0",
        "tmp%16#0 (copy)"
      ]
    },
    "5959": {
      "op": "intc_2 // 8",
      "stack_out": [
        "app#0",
        "acc#0",
        "aggregate%item0%1#0",
        "tmp%16#0",
        "tmp%16#0 (copy)",
        "8"
      ]
    },
    "5960": {
      "op": "intc_2 // 8",
      "stack_out": [
        "app#0",
        "acc#0",
        "aggregate%item0%1#0",
        "tmp%16#0",
        "tmp%16#0 (copy)",
        "8",
        "8"
      ]
    },
    "5961": {
      "op": "extract3",
      "defined_out": [
        "aggregate%extract%4#0",
        "aggregate%item0%1#0",
        "tmp%16#0"
      ],
      "stack_out": [
        "app#0",
        "acc#0",
        "aggregate%item0%1#0",
        "tmp%16#0",
        "aggregate%extract%4#0"
      ]
    },
    "5962": {
      "op": "btoi",
      "defined_out": [
        "aggregate%item0%1#0",
        "aggregate%item1%1#0",
        "tmp%16#0"
      ],
      "stack_out": [
        "app#0",
        "acc#0",
        "aggregate%item0%1#0",
        "tmp%16#0",
        "aggregate%item1%1#0"
      ]
    },
    "5963": {
      "op": "cover 1",
      "stack_out": [
        "app#0",
        "acc#0",
        "aggregate%item0%1#0",
        "aggregate%item1%1#0",
        "tmp%16#0"
      ]
    },
    "5965": {
      "op": "pushint 16 // 16",
      "defined_out": [
        "16",
        "aggregate%item0%1#0",
        "aggregate%item1%1#0",
        "tmp%16#0"
      ],
      "stack_out": [
        "app#0",
        "acc#0",
        "aggregate%item0%1#0",
        "aggregate%item1%1#0",
        "tmp%16#0",
        "16"
      ]
    },
    "5967": {
      "op": "pushint 32 // 32",
      "defined_out": [
        "16",
        "32",
        "aggregate%item0%1#0",
        "aggregate%item1%1#0",
        "tmp%16#0"
      ],
      "stack_out": [
        "app#0",
        "acc#0",
        "aggregate%item0%1#0",
        "aggregate%item1%1#0",
        "tmp%16#0",
        "16",
        "32"
      ]
    },
    "5969": {
      "op": "extract3",
      "defined_out": [
        "aggregate%extract%5#0",
        "aggregate%item0%1#0",
        "aggregate%item1%1#0"
      ],
      "stack_out": [
        "app#0",
        "acc#0",
        "aggregate%item0%1#0",
        "aggregate%item1%1#0",
        "aggregate%extract%5#0"
      ]
    },
    "5970": {
      "op": "uncover 2",
      "stack_out": [
        "app#0",
        "acc#0",
        "aggregate%item1%1#0",
        "aggregate%extract%5#0",
        "aggregate%item0%1#0"
      ]
    },
    "5972": {
      "op": "cover 1",
      "defined_out": [
        "aggregate%extract%5#0",
        "tmp%19#0",
        "tmp%20#0"
      ],
      "stack_out": [
        "app#0",
        "acc#0",
        "tmp%20#0",
        "tmp%19#0",
        "aggregate%extract%5#0"
      ]
    },
    "5974": {
      "op": "cover 2",
      "defined_out": [
        "tmp%19#0",
        "tmp%20#0",
        "tmp%21#0"
      ],
      "stack_out": [
        "app#0",
        "acc#0",
        "tmp%21#0",
        "tmp%20#0",
        "tmp%19#0"
      ]
    },
    "5976": {
      "op": "cover 2",
      "defined_out": [
        "result.0#0",
        "tmp%20#0",
        "tmp%21#0"
      ],
      "stack_out": [
        "app#0",
        "acc#0",
        "result.0#0",
        "tmp%21#0",
        "tmp%20#0"
      ]
    },
    "5978": {
      "op": "cover 2",
      "defined_out": [
        "result.0#0",
        "result.1#0",
        "tmp%21#0"
      ],
      "stack_out": [
        "app#0",
        "acc#0",
        "result.1#0",
        "result.0#0",
        "tmp%21#0"
      ]
    },
    "5980": {
      "op": "cover 2",
      "defined_out": [
        "result.0#0",
        "result.1#0",
        "result.2#0"
      ],
      "stack_out": [
        "app#0",
        "acc#0",
        "result.2#0",
        "result.1#0",
        "result.0#0"
      ]
    },
    "5982": {
      "op": "frame_dig -1",
      "defined_out": [
        "asset#0 (copy)",
        "result.0#0",
        "result.1#0",
        "result.2#0"
      ],
      "stack_out": [
        "app#0",
        "acc#0",
        "result.2#0",
        "result.1#0",
        "result.0#0",
        "asset#0 (copy)"
      ]
    },
    "5984": {
      "op": "==",
      "defined_out": [
        "result.1#0",
        "result.2#0",
        "tmp%22#0"
      ],
      "stack_out": [
        "app#0",
        "acc#0",
        "result.2#0",
        "result.1#0",
        "tmp%22#0"
      ]
    },
    "5985": {
      "op": "uncover 1",
      "stack_out": [
        "app#0",
        "acc#0",
        "result.2#0",
        "tmp%22#0",
        "result.1#0"
      ]
    },
    "5987": {
      "op": "frame_dig 0",
      "defined_out": [
        "app#0",
        "result.1#0",
        "result.2#0",
        "tmp%22#0"
      ],
      "stack_out": [
        "app#0",
        "acc#0",
        "result.2#0",
        "tmp%22#0",
        "result.1#0",
        "app#0"
      ]
    },
    "5989": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "app#0 (copy)",
        "result.1#0",
        "result.2#0",
        "tmp%22#0"
      ],
      "stack_out": [
        "app#0",
        "acc#0",
        "result.2#0",
        "tmp%22#0",
        "result.1#0",
        "app#0 (copy)",
        "app#0 (copy)"
      ]
    },
    "5990": {
      "op": "cover 4",
      "stack_out": [
        "app#0",
        "acc#0",
        "app#0",
        "result.2#0",
        "tmp%22#0",
        "result.1#0",
        "app#0 (copy)"
      ]
    },
    "5992": {
      "op": "==",
      "defined_out": [
        "app#0",
        "result.2#0",
        "tmp%22#0",
        "tmp%23#0"
      ],
      "stack_out": [
        "app#0",
        "acc#0",
        "app#0",
        "result.2#0",
        "tmp%22#0",
        "tmp%23#0"
      ]
    },
    "5993": {
      "op": "&&",
      "defined_out": [
        "app#0",
        "result.2#0",
        "tmp%24#0"
      ],
      "stack_out": [
        "app#0",
        "acc#0",
        "app#0",
        "result.2#0",
        "tmp%24#0"
      ]
    },
    "5994": {
      "op": "uncover 1",
      "stack_out": [
        "app#0",
        "acc#0",
        "app#0",
        "tmp%24#0",
        "result.2#0"
      ]
    },
    "5996": {
      "op": "frame_dig 1",
      "defined_out": [
        "acc#0",
        "app#0",
        "result.2#0",
        "tmp%24#0"
      ],
      "stack_out": [
        "app#0",
        "acc#0",
        "app#0",
        "tmp%24#0",
        "result.2#0",
        "acc#0"
      ]
    },
    "5998": {
      "op": "dup",
      "defined_out": [
        "acc#0",
        "acc#0 (copy)",
        "app#0",
        "result.2#0",
        "tmp%24#0"
      ],
      "stack_out": [
        "app#0",
        "acc#0",
        "app#0",
        "tmp%24#0",
        "result.2#0",
        "acc#0 (copy)",
        "acc#0 (copy)"
      ]
    },
    "5999": {
      "op": "cover 3",
      "stack_out": [
        "app#0",
        "acc#0",
        "app#0",
        "acc#0",
        "tmp%24#0",
        "result.2#0",
        "acc#0 (copy)"
      ]
    },
    "6001": {
      "op": "==",
      "defined_out": [
        "acc#0",
        "app#0",
        "tmp%24#0",
        "tmp%25#0"
      ],
      "stack_out": [
        "app#0",
        "acc#0",
        "app#0",
        "acc#0",
        "tmp%24#0",
        "tmp%25#0"
      ]
    },
    "6002": {
      "op": "&&",
      "defined_out": [
        "acc#0",
        "app#0",
        "tmp%26#0"
      ],
      "stack_out": [
        "app#0",
        "acc#0",
        "app#0",
        "acc#0",
        "tmp%26#0"
      ]
    },
    "6003": {
      "error": "expected echo to return same resources",
      "op": "assert // expected echo to return same resources",
      "stack_out": [
        "app#0",
        "acc#0",
        "app#0",
        "acc#0"
      ]
    },
    "6004": {
      "op": "itxn_begin",
      "defined_out": [
        "acc#0",
        "app#0",
        "inner_txn_params%2%%param_Accounts_idx_0#0"
      ],
      "stack_out": [
        "app#0",
        "acc#0",
        "app#0",
        "inner_txn_params%2%%param_Accounts_idx_0#0"
      ]
    },
    "6005": {
      "op": "uncover 1",
      "defined_out": [
        "acc#0",
        "app#0",
        "inner_txn_params%2%%param_Accounts_idx_0#0",
        "inner_txn_params%2%%param_Applications_idx_0#0"
      ],
      "stack_out": [
        "app#0",
        "acc#0",
        "inner_txn_params%2%%param_Accounts_idx_0#0",
        "inner_txn_params%2%%param_Applications_idx_0#0"
      ]
    },
    "6007": {
      "op": "frame_dig -1",
      "defined_out": [
        "acc#0",
        "app#0",
        "inner_txn_params%2%%param_Accounts_idx_0#0",
        "inner_txn_params%2%%param_Applications_idx_0#0",
        "inner_txn_params%2%%param_Assets_idx_0#0"
      ],
      "stack_out": [
        "app#0",
        "acc#0",
        "inner_txn_params%2%%param_Accounts_idx_0#0",
        "inner_txn_params%2%%param_Applications_idx_0#0",
        "inner_txn_params%2%%param_Assets_idx_0#0"
      ]
    },
    "6009": {
      "op": "frame_dig -2",
      "defined_out": [
        "acc#0",
        "app#0",
        "inner_txn_params%2%%param_Accounts_idx_0#0",
        "inner_txn_params%2%%param_ApplicationID_idx_0#0",
        "inner_txn_params%2%%param_Applications_idx_0#0",
        "inner_txn_params%2%%param_Assets_idx_0#0"
      ],
      "stack_out": [
        "app#0",
        "acc#0",
        "inner_txn_params%2%%param_Accounts_idx_0#0",
        "inner_txn_params%2%%param_Applications_idx_0#0",
        "inner_txn_params%2%%param_Assets_idx_0#0",
        "inner_txn_params%2%%param_ApplicationID_idx_0#0"
      ]
    },
    "6011": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "app#0",
        "acc#0",
        "inner_txn_params%2%%param_Accounts_idx_0#0",
        "inner_txn_params%2%%param_Applications_idx_0#0",
        "inner_txn_params%2%%param_Assets_idx_0#0"
      ]
    },
    "6013": {
      "op": "itxn_field Assets",
      "stack_out": [
        "app#0",
        "acc#0",
        "inner_txn_params%2%%param_Accounts_idx_0#0",
        "inner_txn_params%2%%param_Applications_idx_0#0"
      ]
    },
    "6015": {
      "op": "itxn_field Applications",
      "stack_out": [
        "app#0",
        "acc#0",
        "inner_txn_params%2%%param_Accounts_idx_0#0"
      ]
    },
    "6017": {
      "op": "itxn_field Accounts",
      "stack_out": [
        "app#0",
        "acc#0"
      ]
    },
    "6019": {
      "op": "bytec 35 // method \"echo_resource_by_index(asset,application,account)(uint64,uint64,address)\"",
      "defined_out": [
        "Method(echo_resource_by_index(asset,application,account)(uint64,uint64,address))",
        "acc#0",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "acc#0",
        "Method(echo_resource_by_index(asset,application,account)(uint64,uint64,address))"
      ]
    },
    "6021": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0",
        "acc#0"
      ]
    },
    "6023": {
      "op": "bytec 16 // 0x00",
      "defined_out": [
        "0x00",
        "acc#0",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "acc#0",
        "0x00"
      ]
    },
    "6025": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0",
        "acc#0"
      ]
    },
    "6027": {
      "op": "bytec 12 // 0x01",
      "defined_out": [
        "0x01",
        "acc#0",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "acc#0",
        "0x01"
      ]
    },
    "6029": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0",
        "acc#0"
      ]
    },
    "6031": {
      "op": "bytec 12 // 0x01",
      "stack_out": [
        "app#0",
        "acc#0",
        "0x01"
      ]
    },
    "6033": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0",
        "acc#0"
      ]
    },
    "6035": {
      "op": "intc_1 // appl",
      "defined_out": [
        "acc#0",
        "app#0",
        "appl"
      ],
      "stack_out": [
        "app#0",
        "acc#0",
        "appl"
      ]
    },
    "6036": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "app#0",
        "acc#0"
      ]
    },
    "6038": {
      "op": "intc_0 // 0",
      "stack_out": [
        "app#0",
        "acc#0",
        "0"
      ]
    },
    "6039": {
      "op": "itxn_field Fee",
      "stack_out": [
        "app#0",
        "acc#0"
      ]
    },
    "6041": {
      "op": "b test_cases.typed_abi_call.typed_c2c.Greeter.test_resource_encoding_next_txn@3"
    },
    "6044": {
      "block": "test_cases.typed_abi_call.typed_c2c.Greeter.test_resource_encoding_next_txn@3",
      "stack_in": [
        "app#0",
        "acc#0"
      ],
      "op": "itxn_submit"
    },
    "6045": {
      "op": "itxn LastLog",
      "defined_out": [
        "awst_tmp%2#0"
      ],
      "stack_out": [
        "app#0",
        "acc#0",
        "awst_tmp%2#0"
      ]
    },
    "6047": {
      "op": "dup",
      "defined_out": [
        "awst_tmp%2#0",
        "awst_tmp%2#0 (copy)"
      ],
      "stack_out": [
        "app#0",
        "acc#0",
        "awst_tmp%2#0",
        "awst_tmp%2#0 (copy)"
      ]
    },
    "6048": {
      "op": "extract 4 0",
      "defined_out": [
        "awst_tmp%2#0",
        "tmp%27#0"
      ],
      "stack_out": [
        "app#0",
        "acc#0",
        "awst_tmp%2#0",
        "tmp%27#0"
      ]
    },
    "6051": {
      "op": "cover 1",
      "stack_out": [
        "app#0",
        "acc#0",
        "tmp%27#0",
        "awst_tmp%2#0"
      ]
    },
    "6053": {
      "op": "extract 0 4",
      "defined_out": [
        "tmp%27#0",
        "tmp%28#0"
      ],
      "stack_out": [
        "app#0",
        "acc#0",
        "tmp%27#0",
        "tmp%28#0"
      ]
    },
    "6056": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%27#0",
        "tmp%28#0"
      ],
      "stack_out": [
        "app#0",
        "acc#0",
        "tmp%27#0",
        "tmp%28#0",
        "0x151f7c75"
      ]
    },
    "6057": {
      "op": "==",
      "defined_out": [
        "tmp%27#0",
        "tmp%29#0"
      ],
      "stack_out": [
        "app#0",
        "acc#0",
        "tmp%27#0",
        "tmp%29#0"
      ]
    },
    "6058": {
      "error": "application log value is not the result of an ABI return",
      "op": "assert // application log value is not the result of an ABI return",
      "stack_out": [
        "app#0",
        "acc#0",
        "tmp%27#0"
      ]
    },
    "6059": {
      "op": "dup",
      "defined_out": [
        "tmp%27#0",
        "tmp%27#0 (copy)"
      ],
      "stack_out": [
        "app#0",
        "acc#0",
        "tmp%27#0",
        "tmp%27#0 (copy)"
      ]
    },
    "6060": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%27#0",
        "tmp%27#0 (copy)"
      ],
      "stack_out": [
        "app#0",
        "acc#0",
        "tmp%27#0",
        "tmp%27#0 (copy)",
        "0"
      ]
    },
    "6061": {
      "op": "intc_2 // 8",
      "defined_out": [
        "0",
        "8",
        "tmp%27#0",
        "tmp%27#0 (copy)"
      ],
      "stack_out": [
        "app#0",
        "acc#0",
        "tmp%27#0",
        "tmp%27#0 (copy)",
        "0",
        "8"
      ]
    },
    "6062": {
      "op": "extract3",
      "defined_out": [
        "aggregate%extract%6#0",
        "tmp%27#0"
      ],
      "stack_out": [
        "app#0",
        "acc#0",
        "tmp%27#0",
        "aggregate%extract%6#0"
      ]
    },
    "6063": {
      "op": "btoi",
      "defined_out": [
        "aggregate%item0%2#0",
        "tmp%27#0"
      ],
      "stack_out": [
        "app#0",
        "acc#0",
        "tmp%27#0",
        "aggregate%item0%2#0"
      ]
    },
    "6064": {
      "op": "cover 1",
      "stack_out": [
        "app#0",
        "acc#0",
        "aggregate%item0%2#0",
        "tmp%27#0"
      ]
    },
    "6066": {
      "op": "dup",
      "stack_out": [
        "app#0",
        "acc#0",
        "aggregate%item0%2#0",
        "tmp%27#0",
        "tmp%27#0 (copy)"
      ]
    },
    "6067": {
      "op": "intc_2 // 8",
      "stack_out": [
        "app#0",
        "acc#0",
        "aggregate%item0%2#0",
        "tmp%27#0",
        "tmp%27#0 (copy)",
        "8"
      ]
    },
    "6068": {
      "op": "intc_2 // 8",
      "stack_out": [
        "app#0",
        "acc#0",
        "aggregate%item0%2#0",
        "tmp%27#0",
        "tmp%27#0 (copy)",
        "8",
        "8"
      ]
    },
    "6069": {
      "op": "extract3",
      "defined_out": [
        "aggregate%extract%7#0",
        "aggregate%item0%2#0",
        "tmp%27#0"
      ],
      "stack_out": [
        "app#0",
        "acc#0",
        "aggregate%item0%2#0",
        "tmp%27#0",
        "aggregate%extract%7#0"
      ]
    },
    "6070": {
      "op": "btoi",
      "defined_out": [
        "aggregate%item0%2#0",
        "aggregate%item1%2#0",
        "tmp%27#0"
      ],
      "stack_out": [
        "app#0",
        "acc#0",
        "aggregate%item0%2#0",
        "tmp%27#0",
        "aggregate%item1%2#0"
      ]
    },
    "6071": {
      "op": "cover 1",
      "stack_out": [
        "app#0",
        "acc#0",
        "aggregate%item0%2#0",
        "aggregate%item1%2#0",
        "tmp%27#0"
      ]
    },
    "6073": {
      "op": "pushint 16 // 16",
      "defined_out": [
        "16",
        "aggregate%item0%2#0",
        "aggregate%item1%2#0",
        "tmp%27#0"
      ],
      "stack_out": [
        "app#0",
        "acc#0",
        "aggregate%item0%2#0",
        "aggregate%item1%2#0",
        "tmp%27#0",
        "16"
      ]
    },
    "6075": {
      "op": "pushint 32 // 32",
      "defined_out": [
        "16",
        "32",
        "aggregate%item0%2#0",
        "aggregate%item1%2#0",
        "tmp%27#0"
      ],
      "stack_out": [
        "app#0",
        "acc#0",
        "aggregate%item0%2#0",
        "aggregate%item1%2#0",
        "tmp%27#0",
        "16",
        "32"
      ]
    },
    "6077": {
      "op": "extract3",
      "defined_out": [
        "aggregate%extract%8#0",
        "aggregate%item0%2#0",
        "aggregate%item1%2#0"
      ],
      "stack_out": [
        "app#0",
        "acc#0",
        "aggregate%item0%2#0",
        "aggregate%item1%2#0",
        "aggregate%extract%8#0"
      ]
    },
    "6078": {
      "op": "uncover 2",
      "stack_out": [
        "app#0",
        "acc#0",
        "aggregate%item1%2#0",
        "aggregate%extract%8#0",
        "aggregate%item0%2#0"
      ]
    },
    "6080": {
      "op": "cover 1",
      "defined_out": [
        "aggregate%extract%8#0",
        "tmp%30#0",
        "tmp%31#0"
      ],
      "stack_out": [
        "app#0",
        "acc#0",
        "tmp%31#0",
        "tmp%30#0",
        "aggregate%extract%8#0"
      ]
    },
    "6082": {
      "op": "cover 2",
      "defined_out": [
        "tmp%30#0",
        "tmp%31#0",
        "tmp%32#0"
      ],
      "stack_out": [
        "app#0",
        "acc#0",
        "tmp%32#0",
        "tmp%31#0",
        "tmp%30#0"
      ]
    },
    "6084": {
      "op": "cover 2",
      "defined_out": [
        "result.0#0",
        "tmp%31#0",
        "tmp%32#0"
      ],
      "stack_out": [
        "app#0",
        "acc#0",
        "result.0#0",
        "tmp%32#0",
        "tmp%31#0"
      ]
    },
    "6086": {
      "op": "cover 2",
      "defined_out": [
        "result.0#0",
        "result.1#0",
        "tmp%32#0"
      ],
      "stack_out": [
        "app#0",
        "acc#0",
        "result.1#0",
        "result.0#0",
        "tmp%32#0"
      ]
    },
    "6088": {
      "op": "cover 2",
      "defined_out": [
        "result.0#0",
        "result.1#0",
        "result.2#0"
      ],
      "stack_out": [
        "app#0",
        "acc#0",
        "result.2#0",
        "result.1#0",
        "result.0#0"
      ]
    },
    "6090": {
      "op": "frame_dig -1",
      "defined_out": [
        "asset#0 (copy)",
        "result.0#0",
        "result.1#0",
        "result.2#0"
      ],
      "stack_out": [
        "app#0",
        "acc#0",
        "result.2#0",
        "result.1#0",
        "result.0#0",
        "asset#0 (copy)"
      ]
    },
    "6092": {
      "op": "==",
      "defined_out": [
        "result.1#0",
        "result.2#0",
        "tmp%33#0"
      ],
      "stack_out": [
        "app#0",
        "acc#0",
        "result.2#0",
        "result.1#0",
        "tmp%33#0"
      ]
    },
    "6093": {
      "op": "uncover 1",
      "stack_out": [
        "app#0",
        "acc#0",
        "result.2#0",
        "tmp%33#0",
        "result.1#0"
      ]
    },
    "6095": {
      "op": "frame_dig 0",
      "defined_out": [
        "app#0",
        "result.1#0",
        "result.2#0",
        "tmp%33#0"
      ],
      "stack_out": [
        "app#0",
        "acc#0",
        "result.2#0",
        "tmp%33#0",
        "result.1#0",
        "app#0"
      ]
    },
    "6097": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "app#0 (copy)",
        "result.1#0",
        "result.2#0",
        "tmp%33#0"
      ],
      "stack_out": [
        "app#0",
        "acc#0",
        "result.2#0",
        "tmp%33#0",
        "result.1#0",
        "app#0 (copy)",
        "app#0 (copy)"
      ]
    },
    "6098": {
      "op": "cover 4",
      "stack_out": [
        "app#0",
        "acc#0",
        "app#0",
        "result.2#0",
        "tmp%33#0",
        "result.1#0",
        "app#0 (copy)"
      ]
    },
    "6100": {
      "op": "==",
      "defined_out": [
        "app#0",
        "result.2#0",
        "tmp%33#0",
        "tmp%34#0"
      ],
      "stack_out": [
        "app#0",
        "acc#0",
        "app#0",
        "result.2#0",
        "tmp%33#0",
        "tmp%34#0"
      ]
    },
    "6101": {
      "op": "&&",
      "defined_out": [
        "app#0",
        "result.2#0",
        "tmp%35#0"
      ],
      "stack_out": [
        "app#0",
        "acc#0",
        "app#0",
        "result.2#0",
        "tmp%35#0"
      ]
    },
    "6102": {
      "op": "uncover 1",
      "stack_out": [
        "app#0",
        "acc#0",
        "app#0",
        "tmp%35#0",
        "result.2#0"
      ]
    },
    "6104": {
      "op": "frame_dig 1",
      "defined_out": [
        "acc#0",
        "app#0",
        "result.2#0",
        "tmp%35#0"
      ],
      "stack_out": [
        "app#0",
        "acc#0",
        "app#0",
        "tmp%35#0",
        "result.2#0",
        "acc#0"
      ]
    },
    "6106": {
      "op": "dup",
      "defined_out": [
        "acc#0",
        "acc#0 (copy)",
        "app#0",
        "result.2#0",
        "tmp%35#0"
      ],
      "stack_out": [
        "app#0",
        "acc#0",
        "app#0",
        "tmp%35#0",
        "result.2#0",
        "acc#0 (copy)",
        "acc#0 (copy)"
      ]
    },
    "6107": {
      "op": "cover 3",
      "stack_out": [
        "app#0",
        "acc#0",
        "app#0",
        "acc#0",
        "tmp%35#0",
        "result.2#0",
        "acc#0 (copy)"
      ]
    },
    "6109": {
      "op": "==",
      "defined_out": [
        "acc#0",
        "app#0",
        "tmp%35#0",
        "tmp%36#0"
      ],
      "stack_out": [
        "app#0",
        "acc#0",
        "app#0",
        "acc#0",
        "tmp%35#0",
        "tmp%36#0"
      ]
    },
    "6110": {
      "op": "&&",
      "defined_out": [
        "acc#0",
        "app#0",
        "tmp%37#0"
      ],
      "stack_out": [
        "app#0",
        "acc#0",
        "app#0",
        "acc#0",
        "tmp%37#0"
      ]
    },
    "6111": {
      "error": "expected echo to return same resources",
      "op": "assert // expected echo to return same resources",
      "stack_out": [
        "app#0",
        "acc#0",
        "app#0",
        "acc#0"
      ]
    },
    "6112": {
      "op": "itxn_begin"
    },
    "6113": {
      "op": "frame_dig -1",
      "stack_out": [
        "app#0",
        "acc#0",
        "app#0",
        "acc#0",
        "asset#0 (copy)"
      ]
    },
    "6115": {
      "op": "itob",
      "defined_out": [
        "acc#0",
        "app#0",
        "tmp%38#0"
      ],
      "stack_out": [
        "app#0",
        "acc#0",
        "app#0",
        "acc#0",
        "tmp%38#0"
      ]
    },
    "6116": {
      "op": "uncover 2",
      "stack_out": [
        "app#0",
        "acc#0",
        "acc#0",
        "tmp%38#0",
        "app#0"
      ]
    },
    "6118": {
      "op": "itob",
      "defined_out": [
        "acc#0",
        "app#0",
        "tmp%38#0",
        "tmp%39#0"
      ],
      "stack_out": [
        "app#0",
        "acc#0",
        "acc#0",
        "tmp%38#0",
        "tmp%39#0"
      ]
    },
    "6119": {
      "op": "uncover 2",
      "defined_out": [
        "acc#0",
        "app#0",
        "inner_txn_params%3%%param_ApplicationArgs_idx_1#0",
        "tmp%39#0",
        "tmp%40#0"
      ],
      "stack_out": [
        "app#0",
        "acc#0",
        "inner_txn_params%3%%param_ApplicationArgs_idx_1#0",
        "tmp%39#0",
        "tmp%40#0"
      ]
    },
    "6121": {
      "op": "uncover 1",
      "stack_out": [
        "app#0",
        "acc#0",
        "inner_txn_params%3%%param_ApplicationArgs_idx_1#0",
        "tmp%40#0",
        "tmp%39#0"
      ]
    },
    "6123": {
      "op": "cover 2",
      "defined_out": [
        "acc#0",
        "app#0",
        "inner_txn_params%3%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%3%%param_ApplicationArgs_idx_2#0",
        "tmp%40#0"
      ],
      "stack_out": [
        "app#0",
        "acc#0",
        "inner_txn_params%3%%param_ApplicationArgs_idx_2#0",
        "inner_txn_params%3%%param_ApplicationArgs_idx_1#0",
        "tmp%40#0"
      ]
    },
    "6125": {
      "op": "cover 2",
      "defined_out": [
        "acc#0",
        "app#0",
        "inner_txn_params%3%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%3%%param_ApplicationArgs_idx_2#0",
        "inner_txn_params%3%%param_ApplicationArgs_idx_3#0"
      ],
      "stack_out": [
        "app#0",
        "acc#0",
        "inner_txn_params%3%%param_ApplicationArgs_idx_3#0",
        "inner_txn_params%3%%param_ApplicationArgs_idx_2#0",
        "inner_txn_params%3%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "6127": {
      "op": "frame_dig -2",
      "defined_out": [
        "acc#0",
        "app#0",
        "inner_txn_params%3%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%3%%param_ApplicationArgs_idx_2#0",
        "inner_txn_params%3%%param_ApplicationArgs_idx_3#0",
        "inner_txn_params%3%%param_ApplicationID_idx_0#0"
      ],
      "stack_out": [
        "app#0",
        "acc#0",
        "inner_txn_params%3%%param_ApplicationArgs_idx_3#0",
        "inner_txn_params%3%%param_ApplicationArgs_idx_2#0",
        "inner_txn_params%3%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%3%%param_ApplicationID_idx_0#0"
      ]
    },
    "6129": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "app#0",
        "acc#0",
        "inner_txn_params%3%%param_ApplicationArgs_idx_3#0",
        "inner_txn_params%3%%param_ApplicationArgs_idx_2#0",
        "inner_txn_params%3%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "6131": {
      "op": "bytec 36 // method \"echo_resource_by_value(uint64,uint64,address)(uint64,uint64,address)\"",
      "defined_out": [
        "Method(echo_resource_by_value(uint64,uint64,address)(uint64,uint64,address))",
        "acc#0",
        "app#0",
        "inner_txn_params%3%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%3%%param_ApplicationArgs_idx_2#0",
        "inner_txn_params%3%%param_ApplicationArgs_idx_3#0"
      ],
      "stack_out": [
        "app#0",
        "acc#0",
        "inner_txn_params%3%%param_ApplicationArgs_idx_3#0",
        "inner_txn_params%3%%param_ApplicationArgs_idx_2#0",
        "inner_txn_params%3%%param_ApplicationArgs_idx_1#0",
        "Method(echo_resource_by_value(uint64,uint64,address)(uint64,uint64,address))"
      ]
    },
    "6133": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0",
        "acc#0",
        "inner_txn_params%3%%param_ApplicationArgs_idx_3#0",
        "inner_txn_params%3%%param_ApplicationArgs_idx_2#0",
        "inner_txn_params%3%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "6135": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0",
        "acc#0",
        "inner_txn_params%3%%param_ApplicationArgs_idx_3#0",
        "inner_txn_params%3%%param_ApplicationArgs_idx_2#0"
      ]
    },
    "6137": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0",
        "acc#0",
        "inner_txn_params%3%%param_ApplicationArgs_idx_3#0"
      ]
    },
    "6139": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0",
        "acc#0"
      ]
    },
    "6141": {
      "op": "intc_1 // appl",
      "defined_out": [
        "acc#0",
        "app#0",
        "appl"
      ],
      "stack_out": [
        "app#0",
        "acc#0",
        "appl"
      ]
    },
    "6142": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "app#0",
        "acc#0"
      ]
    },
    "6144": {
      "op": "intc_0 // 0",
      "stack_out": [
        "app#0",
        "acc#0",
        "0"
      ]
    },
    "6145": {
      "op": "itxn_field Fee",
      "stack_out": [
        "app#0",
        "acc#0"
      ]
    },
    "6147": {
      "op": "b test_cases.typed_abi_call.typed_c2c.Greeter.test_resource_encoding_next_txn@4"
    },
    "6150": {
      "block": "test_cases.typed_abi_call.typed_c2c.Greeter.test_resource_encoding_next_txn@4",
      "stack_in": [
        "app#0",
        "acc#0"
      ],
      "op": "itxn_submit"
    },
    "6151": {
      "op": "itxn LastLog",
      "defined_out": [
        "awst_tmp%3#0"
      ],
      "stack_out": [
        "app#0",
        "acc#0",
        "awst_tmp%3#0"
      ]
    },
    "6153": {
      "op": "dup",
      "defined_out": [
        "awst_tmp%3#0",
        "awst_tmp%3#0 (copy)"
      ],
      "stack_out": [
        "app#0",
        "acc#0",
        "awst_tmp%3#0",
        "awst_tmp%3#0 (copy)"
      ]
    },
    "6154": {
      "op": "extract 4 0",
      "defined_out": [
        "awst_tmp%3#0",
        "tmp%41#0"
      ],
      "stack_out": [
        "app#0",
        "acc#0",
        "awst_tmp%3#0",
        "tmp%41#0"
      ]
    },
    "6157": {
      "op": "cover 1",
      "stack_out": [
        "app#0",
        "acc#0",
        "tmp%41#0",
        "awst_tmp%3#0"
      ]
    },
    "6159": {
      "op": "extract 0 4",
      "defined_out": [
        "tmp%41#0",
        "tmp%42#0"
      ],
      "stack_out": [
        "app#0",
        "acc#0",
        "tmp%41#0",
        "tmp%42#0"
      ]
    },
    "6162": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%41#0",
        "tmp%42#0"
      ],
      "stack_out": [
        "app#0",
        "acc#0",
        "tmp%41#0",
        "tmp%42#0",
        "0x151f7c75"
      ]
    },
    "6163": {
      "op": "==",
      "defined_out": [
        "tmp%41#0",
        "tmp%43#0"
      ],
      "stack_out": [
        "app#0",
        "acc#0",
        "tmp%41#0",
        "tmp%43#0"
      ]
    },
    "6164": {
      "error": "application log value is not the result of an ABI return",
      "op": "assert // application log value is not the result of an ABI return",
      "stack_out": [
        "app#0",
        "acc#0",
        "tmp%41#0"
      ]
    },
    "6165": {
      "op": "dup",
      "defined_out": [
        "tmp%41#0",
        "tmp%41#0 (copy)"
      ],
      "stack_out": [
        "app#0",
        "acc#0",
        "tmp%41#0",
        "tmp%41#0 (copy)"
      ]
    },
    "6166": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%41#0",
        "tmp%41#0 (copy)"
      ],
      "stack_out": [
        "app#0",
        "acc#0",
        "tmp%41#0",
        "tmp%41#0 (copy)",
        "0"
      ]
    },
    "6167": {
      "op": "intc_2 // 8",
      "defined_out": [
        "0",
        "8",
        "tmp%41#0",
        "tmp%41#0 (copy)"
      ],
      "stack_out": [
        "app#0",
        "acc#0",
        "tmp%41#0",
        "tmp%41#0 (copy)",
        "0",
        "8"
      ]
    },
    "6168": {
      "op": "extract3",
      "defined_out": [
        "aggregate%extract%9#0",
        "tmp%41#0"
      ],
      "stack_out": [
        "app#0",
        "acc#0",
        "tmp%41#0",
        "aggregate%extract%9#0"
      ]
    },
    "6169": {
      "op": "btoi",
      "defined_out": [
        "aggregate%item0%3#0",
        "tmp%41#0"
      ],
      "stack_out": [
        "app#0",
        "acc#0",
        "tmp%41#0",
        "aggregate%item0%3#0"
      ]
    },
    "6170": {
      "op": "cover 1",
      "stack_out": [
        "app#0",
        "acc#0",
        "aggregate%item0%3#0",
        "tmp%41#0"
      ]
    },
    "6172": {
      "op": "dup",
      "stack_out": [
        "app#0",
        "acc#0",
        "aggregate%item0%3#0",
        "tmp%41#0",
        "tmp%41#0 (copy)"
      ]
    },
    "6173": {
      "op": "intc_2 // 8",
      "stack_out": [
        "app#0",
        "acc#0",
        "aggregate%item0%3#0",
        "tmp%41#0",
        "tmp%41#0 (copy)",
        "8"
      ]
    },
    "6174": {
      "op": "intc_2 // 8",
      "stack_out": [
        "app#0",
        "acc#0",
        "aggregate%item0%3#0",
        "tmp%41#0",
        "tmp%41#0 (copy)",
        "8",
        "8"
      ]
    },
    "6175": {
      "op": "extract3",
      "defined_out": [
        "aggregate%extract%10#0",
        "aggregate%item0%3#0",
        "tmp%41#0"
      ],
      "stack_out": [
        "app#0",
        "acc#0",
        "aggregate%item0%3#0",
        "tmp%41#0",
        "aggregate%extract%10#0"
      ]
    },
    "6176": {
      "op": "btoi",
      "defined_out": [
        "aggregate%item0%3#0",
        "aggregate%item1%3#0",
        "tmp%41#0"
      ],
      "stack_out": [
        "app#0",
        "acc#0",
        "aggregate%item0%3#0",
        "tmp%41#0",
        "aggregate%item1%3#0"
      ]
    },
    "6177": {
      "op": "cover 1",
      "stack_out": [
        "app#0",
        "acc#0",
        "aggregate%item0%3#0",
        "aggregate%item1%3#0",
        "tmp%41#0"
      ]
    },
    "6179": {
      "op": "pushint 16 // 16",
      "defined_out": [
        "16",
        "aggregate%item0%3#0",
        "aggregate%item1%3#0",
        "tmp%41#0"
      ],
      "stack_out": [
        "app#0",
        "acc#0",
        "aggregate%item0%3#0",
        "aggregate%item1%3#0",
        "tmp%41#0",
        "16"
      ]
    },
    "6181": {
      "op": "pushint 32 // 32",
      "defined_out": [
        "16",
        "32",
        "aggregate%item0%3#0",
        "aggregate%item1%3#0",
        "tmp%41#0"
      ],
      "stack_out": [
        "app#0",
        "acc#0",
        "aggregate%item0%3#0",
        "aggregate%item1%3#0",
        "tmp%41#0",
        "16",
        "32"
      ]
    },
    "6183": {
      "op": "extract3",
      "defined_out": [
        "aggregate%extract%11#0",
        "aggregate%item0%3#0",
        "aggregate%item1%3#0"
      ],
      "stack_out": [
        "app#0",
        "acc#0",
        "aggregate%item0%3#0",
        "aggregate%item1%3#0",
        "aggregate%extract%11#0"
      ]
    },
    "6184": {
      "op": "uncover 2",
      "stack_out": [
        "app#0",
        "acc#0",
        "aggregate%item1%3#0",
        "aggregate%extract%11#0",
        "aggregate%item0%3#0"
      ]
    },
    "6186": {
      "op": "cover 1",
      "defined_out": [
        "aggregate%extract%11#0",
        "tmp%44#0",
        "tmp%45#0"
      ],
      "stack_out": [
        "app#0",
        "acc#0",
        "tmp%45#0",
        "tmp%44#0",
        "aggregate%extract%11#0"
      ]
    },
    "6188": {
      "op": "cover 2",
      "defined_out": [
        "tmp%44#0",
        "tmp%45#0",
        "tmp%46#0"
      ],
      "stack_out": [
        "app#0",
        "acc#0",
        "tmp%46#0",
        "tmp%45#0",
        "tmp%44#0"
      ]
    },
    "6190": {
      "op": "cover 2",
      "defined_out": [
        "result.0#0",
        "tmp%45#0",
        "tmp%46#0"
      ],
      "stack_out": [
        "app#0",
        "acc#0",
        "result.0#0",
        "tmp%46#0",
        "tmp%45#0"
      ]
    },
    "6192": {
      "op": "cover 2",
      "defined_out": [
        "result.0#0",
        "result.1#0",
        "tmp%46#0"
      ],
      "stack_out": [
        "app#0",
        "acc#0",
        "result.1#0",
        "result.0#0",
        "tmp%46#0"
      ]
    },
    "6194": {
      "op": "cover 2",
      "defined_out": [
        "result.0#0",
        "result.1#0",
        "result.2#0"
      ],
      "stack_out": [
        "app#0",
        "acc#0",
        "result.2#0",
        "result.1#0",
        "result.0#0"
      ]
    },
    "6196": {
      "op": "frame_dig -1",
      "defined_out": [
        "asset#0 (copy)",
        "result.0#0",
        "result.1#0",
        "result.2#0"
      ],
      "stack_out": [
        "app#0",
        "acc#0",
        "result.2#0",
        "result.1#0",
        "result.0#0",
        "asset#0 (copy)"
      ]
    },
    "6198": {
      "op": "==",
      "defined_out": [
        "result.1#0",
        "result.2#0",
        "tmp%47#0"
      ],
      "stack_out": [
        "app#0",
        "acc#0",
        "result.2#0",
        "result.1#0",
        "tmp%47#0"
      ]
    },
    "6199": {
      "op": "uncover 1",
      "stack_out": [
        "app#0",
        "acc#0",
        "result.2#0",
        "tmp%47#0",
        "result.1#0"
      ]
    },
    "6201": {
      "op": "frame_dig 0",
      "defined_out": [
        "app#0",
        "result.1#0",
        "result.2#0",
        "tmp%47#0"
      ],
      "stack_out": [
        "app#0",
        "acc#0",
        "result.2#0",
        "tmp%47#0",
        "result.1#0",
        "app#0"
      ]
    },
    "6203": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "app#0 (copy)",
        "result.1#0",
        "result.2#0",
        "tmp%47#0"
      ],
      "stack_out": [
        "app#0",
        "acc#0",
        "result.2#0",
        "tmp%47#0",
        "result.1#0",
        "app#0 (copy)",
        "app#0 (copy)"
      ]
    },
    "6204": {
      "op": "cover 4",
      "stack_out": [
        "app#0",
        "acc#0",
        "app#0",
        "result.2#0",
        "tmp%47#0",
        "result.1#0",
        "app#0 (copy)"
      ]
    },
    "6206": {
      "op": "==",
      "defined_out": [
        "app#0",
        "result.2#0",
        "tmp%47#0",
        "tmp%48#0"
      ],
      "stack_out": [
        "app#0",
        "acc#0",
        "app#0",
        "result.2#0",
        "tmp%47#0",
        "tmp%48#0"
      ]
    },
    "6207": {
      "op": "&&",
      "defined_out": [
        "app#0",
        "result.2#0",
        "tmp%49#0"
      ],
      "stack_out": [
        "app#0",
        "acc#0",
        "app#0",
        "result.2#0",
        "tmp%49#0"
      ]
    },
    "6208": {
      "op": "uncover 1",
      "stack_out": [
        "app#0",
        "acc#0",
        "app#0",
        "tmp%49#0",
        "result.2#0"
      ]
    },
    "6210": {
      "op": "frame_dig 1",
      "defined_out": [
        "acc#0",
        "app#0",
        "result.2#0",
        "tmp%49#0"
      ],
      "stack_out": [
        "app#0",
        "acc#0",
        "app#0",
        "tmp%49#0",
        "result.2#0",
        "acc#0"
      ]
    },
    "6212": {
      "op": "dup",
      "defined_out": [
        "acc#0",
        "acc#0 (copy)",
        "app#0",
        "result.2#0",
        "tmp%49#0"
      ],
      "stack_out": [
        "app#0",
        "acc#0",
        "app#0",
        "tmp%49#0",
        "result.2#0",
        "acc#0 (copy)",
        "acc#0 (copy)"
      ]
    },
    "6213": {
      "op": "cover 3",
      "stack_out": [
        "app#0",
        "acc#0",
        "app#0",
        "acc#0",
        "tmp%49#0",
        "result.2#0",
        "acc#0 (copy)"
      ]
    },
    "6215": {
      "op": "==",
      "defined_out": [
        "acc#0",
        "app#0",
        "tmp%49#0",
        "tmp%50#0"
      ],
      "stack_out": [
        "app#0",
        "acc#0",
        "app#0",
        "acc#0",
        "tmp%49#0",
        "tmp%50#0"
      ]
    },
    "6216": {
      "op": "&&",
      "defined_out": [
        "acc#0",
        "app#0",
        "tmp%51#0"
      ],
      "stack_out": [
        "app#0",
        "acc#0",
        "app#0",
        "acc#0",
        "tmp%51#0"
      ]
    },
    "6217": {
      "error": "expected echo to return same resources",
      "op": "assert // expected echo to return same resources",
      "stack_out": [
        "app#0",
        "acc#0",
        "app#0",
        "acc#0"
      ]
    },
    "6218": {
      "op": "itxn_begin",
      "defined_out": [
        "acc#0",
        "app#0",
        "inner_txn_params%4%%param_Accounts_idx_0#0"
      ],
      "stack_out": [
        "app#0",
        "acc#0",
        "app#0",
        "inner_txn_params%4%%param_Accounts_idx_0#0"
      ]
    },
    "6219": {
      "op": "uncover 1",
      "defined_out": [
        "acc#0",
        "app#0",
        "inner_txn_params%4%%param_Accounts_idx_0#0",
        "inner_txn_params%4%%param_Applications_idx_0#0"
      ],
      "stack_out": [
        "app#0",
        "acc#0",
        "inner_txn_params%4%%param_Accounts_idx_0#0",
        "inner_txn_params%4%%param_Applications_idx_0#0"
      ]
    },
    "6221": {
      "op": "frame_dig -1",
      "defined_out": [
        "acc#0",
        "app#0",
        "inner_txn_params%4%%param_Accounts_idx_0#0",
        "inner_txn_params%4%%param_Applications_idx_0#0",
        "inner_txn_params%4%%param_Assets_idx_0#0"
      ],
      "stack_out": [
        "app#0",
        "acc#0",
        "inner_txn_params%4%%param_Accounts_idx_0#0",
        "inner_txn_params%4%%param_Applications_idx_0#0",
        "inner_txn_params%4%%param_Assets_idx_0#0"
      ]
    },
    "6223": {
      "op": "frame_dig -2",
      "defined_out": [
        "acc#0",
        "app#0",
        "inner_txn_params%4%%param_Accounts_idx_0#0",
        "inner_txn_params%4%%param_ApplicationID_idx_0#0",
        "inner_txn_params%4%%param_Applications_idx_0#0",
        "inner_txn_params%4%%param_Assets_idx_0#0"
      ],
      "stack_out": [
        "app#0",
        "acc#0",
        "inner_txn_params%4%%param_Accounts_idx_0#0",
        "inner_txn_params%4%%param_Applications_idx_0#0",
        "inner_txn_params%4%%param_Assets_idx_0#0",
        "inner_txn_params%4%%param_ApplicationID_idx_0#0"
      ]
    },
    "6225": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "app#0",
        "acc#0",
        "inner_txn_params%4%%param_Accounts_idx_0#0",
        "inner_txn_params%4%%param_Applications_idx_0#0",
        "inner_txn_params%4%%param_Assets_idx_0#0"
      ]
    },
    "6227": {
      "op": "itxn_field Assets",
      "stack_out": [
        "app#0",
        "acc#0",
        "inner_txn_params%4%%param_Accounts_idx_0#0",
        "inner_txn_params%4%%param_Applications_idx_0#0"
      ]
    },
    "6229": {
      "op": "itxn_field Applications",
      "stack_out": [
        "app#0",
        "acc#0",
        "inner_txn_params%4%%param_Accounts_idx_0#0"
      ]
    },
    "6231": {
      "op": "itxn_field Accounts",
      "stack_out": [
        "app#0",
        "acc#0"
      ]
    },
    "6233": {
      "op": "bytec 35 // method \"echo_resource_by_index(asset,application,account)(uint64,uint64,address)\"",
      "defined_out": [
        "Method(echo_resource_by_index(asset,application,account)(uint64,uint64,address))",
        "acc#0",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "acc#0",
        "Method(echo_resource_by_index(asset,application,account)(uint64,uint64,address))"
      ]
    },
    "6235": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0",
        "acc#0"
      ]
    },
    "6237": {
      "op": "bytec 16 // 0x00",
      "defined_out": [
        "0x00",
        "acc#0",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "acc#0",
        "0x00"
      ]
    },
    "6239": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0",
        "acc#0"
      ]
    },
    "6241": {
      "op": "bytec 12 // 0x01",
      "defined_out": [
        "0x01",
        "acc#0",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "acc#0",
        "0x01"
      ]
    },
    "6243": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0",
        "acc#0"
      ]
    },
    "6245": {
      "op": "bytec 12 // 0x01",
      "stack_out": [
        "app#0",
        "acc#0",
        "0x01"
      ]
    },
    "6247": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0",
        "acc#0"
      ]
    },
    "6249": {
      "op": "intc_1 // appl",
      "defined_out": [
        "acc#0",
        "app#0",
        "appl"
      ],
      "stack_out": [
        "app#0",
        "acc#0",
        "appl"
      ]
    },
    "6250": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "app#0",
        "acc#0"
      ]
    },
    "6252": {
      "op": "intc_0 // 0",
      "stack_out": [
        "app#0",
        "acc#0",
        "0"
      ]
    },
    "6253": {
      "op": "itxn_field Fee",
      "stack_out": [
        "app#0",
        "acc#0"
      ]
    },
    "6255": {
      "op": "b test_cases.typed_abi_call.typed_c2c.Greeter.test_resource_encoding_next_txn@5"
    },
    "6258": {
      "block": "test_cases.typed_abi_call.typed_c2c.Greeter.test_resource_encoding_next_txn@5",
      "stack_in": [
        "app#0",
        "acc#0"
      ],
      "op": "itxn_submit"
    },
    "6259": {
      "op": "itxn LastLog",
      "defined_out": [
        "awst_tmp%4#0"
      ],
      "stack_out": [
        "app#0",
        "acc#0",
        "awst_tmp%4#0"
      ]
    },
    "6261": {
      "op": "dup",
      "defined_out": [
        "awst_tmp%4#0",
        "awst_tmp%4#0 (copy)"
      ],
      "stack_out": [
        "app#0",
        "acc#0",
        "awst_tmp%4#0",
        "awst_tmp%4#0 (copy)"
      ]
    },
    "6262": {
      "op": "extract 4 0",
      "defined_out": [
        "awst_tmp%4#0",
        "tmp%52#0"
      ],
      "stack_out": [
        "app#0",
        "acc#0",
        "awst_tmp%4#0",
        "tmp%52#0"
      ]
    },
    "6265": {
      "op": "cover 1",
      "stack_out": [
        "app#0",
        "acc#0",
        "tmp%52#0",
        "awst_tmp%4#0"
      ]
    },
    "6267": {
      "op": "extract 0 4",
      "defined_out": [
        "tmp%52#0",
        "tmp%53#0"
      ],
      "stack_out": [
        "app#0",
        "acc#0",
        "tmp%52#0",
        "tmp%53#0"
      ]
    },
    "6270": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%52#0",
        "tmp%53#0"
      ],
      "stack_out": [
        "app#0",
        "acc#0",
        "tmp%52#0",
        "tmp%53#0",
        "0x151f7c75"
      ]
    },
    "6271": {
      "op": "==",
      "defined_out": [
        "tmp%52#0",
        "tmp%54#0"
      ],
      "stack_out": [
        "app#0",
        "acc#0",
        "tmp%52#0",
        "tmp%54#0"
      ]
    },
    "6272": {
      "error": "application log value is not the result of an ABI return",
      "op": "assert // application log value is not the result of an ABI return",
      "stack_out": [
        "app#0",
        "acc#0",
        "tmp%52#0"
      ]
    },
    "6273": {
      "op": "dup",
      "defined_out": [
        "tmp%52#0",
        "tmp%52#0 (copy)"
      ],
      "stack_out": [
        "app#0",
        "acc#0",
        "tmp%52#0",
        "tmp%52#0 (copy)"
      ]
    },
    "6274": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%52#0",
        "tmp%52#0 (copy)"
      ],
      "stack_out": [
        "app#0",
        "acc#0",
        "tmp%52#0",
        "tmp%52#0 (copy)",
        "0"
      ]
    },
    "6275": {
      "op": "intc_2 // 8",
      "defined_out": [
        "0",
        "8",
        "tmp%52#0",
        "tmp%52#0 (copy)"
      ],
      "stack_out": [
        "app#0",
        "acc#0",
        "tmp%52#0",
        "tmp%52#0 (copy)",
        "0",
        "8"
      ]
    },
    "6276": {
      "op": "extract3",
      "defined_out": [
        "aggregate%extract%12#0",
        "tmp%52#0"
      ],
      "stack_out": [
        "app#0",
        "acc#0",
        "tmp%52#0",
        "aggregate%extract%12#0"
      ]
    },
    "6277": {
      "op": "btoi",
      "defined_out": [
        "aggregate%item0%4#0",
        "tmp%52#0"
      ],
      "stack_out": [
        "app#0",
        "acc#0",
        "tmp%52#0",
        "aggregate%item0%4#0"
      ]
    },
    "6278": {
      "op": "cover 1",
      "stack_out": [
        "app#0",
        "acc#0",
        "aggregate%item0%4#0",
        "tmp%52#0"
      ]
    },
    "6280": {
      "op": "dup",
      "stack_out": [
        "app#0",
        "acc#0",
        "aggregate%item0%4#0",
        "tmp%52#0",
        "tmp%52#0 (copy)"
      ]
    },
    "6281": {
      "op": "intc_2 // 8",
      "stack_out": [
        "app#0",
        "acc#0",
        "aggregate%item0%4#0",
        "tmp%52#0",
        "tmp%52#0 (copy)",
        "8"
      ]
    },
    "6282": {
      "op": "intc_2 // 8",
      "stack_out": [
        "app#0",
        "acc#0",
        "aggregate%item0%4#0",
        "tmp%52#0",
        "tmp%52#0 (copy)",
        "8",
        "8"
      ]
    },
    "6283": {
      "op": "extract3",
      "defined_out": [
        "aggregate%extract%13#0",
        "aggregate%item0%4#0",
        "tmp%52#0"
      ],
      "stack_out": [
        "app#0",
        "acc#0",
        "aggregate%item0%4#0",
        "tmp%52#0",
        "aggregate%extract%13#0"
      ]
    },
    "6284": {
      "op": "btoi",
      "defined_out": [
        "aggregate%item0%4#0",
        "aggregate%item1%4#0",
        "tmp%52#0"
      ],
      "stack_out": [
        "app#0",
        "acc#0",
        "aggregate%item0%4#0",
        "tmp%52#0",
        "aggregate%item1%4#0"
      ]
    },
    "6285": {
      "op": "cover 1",
      "stack_out": [
        "app#0",
        "acc#0",
        "aggregate%item0%4#0",
        "aggregate%item1%4#0",
        "tmp%52#0"
      ]
    },
    "6287": {
      "op": "pushint 16 // 16",
      "defined_out": [
        "16",
        "aggregate%item0%4#0",
        "aggregate%item1%4#0",
        "tmp%52#0"
      ],
      "stack_out": [
        "app#0",
        "acc#0",
        "aggregate%item0%4#0",
        "aggregate%item1%4#0",
        "tmp%52#0",
        "16"
      ]
    },
    "6289": {
      "op": "pushint 32 // 32",
      "defined_out": [
        "16",
        "32",
        "aggregate%item0%4#0",
        "aggregate%item1%4#0",
        "tmp%52#0"
      ],
      "stack_out": [
        "app#0",
        "acc#0",
        "aggregate%item0%4#0",
        "aggregate%item1%4#0",
        "tmp%52#0",
        "16",
        "32"
      ]
    },
    "6291": {
      "op": "extract3",
      "defined_out": [
        "aggregate%extract%14#0",
        "aggregate%item0%4#0",
        "aggregate%item1%4#0"
      ],
      "stack_out": [
        "app#0",
        "acc#0",
        "aggregate%item0%4#0",
        "aggregate%item1%4#0",
        "aggregate%extract%14#0"
      ]
    },
    "6292": {
      "op": "uncover 2",
      "stack_out": [
        "app#0",
        "acc#0",
        "aggregate%item1%4#0",
        "aggregate%extract%14#0",
        "aggregate%item0%4#0"
      ]
    },
    "6294": {
      "op": "cover 1",
      "defined_out": [
        "aggregate%extract%14#0",
        "tmp%55#0",
        "tmp%56#0"
      ],
      "stack_out": [
        "app#0",
        "acc#0",
        "tmp%56#0",
        "tmp%55#0",
        "aggregate%extract%14#0"
      ]
    },
    "6296": {
      "op": "cover 2",
      "defined_out": [
        "tmp%55#0",
        "tmp%56#0",
        "tmp%57#0"
      ],
      "stack_out": [
        "app#0",
        "acc#0",
        "tmp%57#0",
        "tmp%56#0",
        "tmp%55#0"
      ]
    },
    "6298": {
      "op": "cover 2",
      "defined_out": [
        "result.0#0",
        "tmp%56#0",
        "tmp%57#0"
      ],
      "stack_out": [
        "app#0",
        "acc#0",
        "result.0#0",
        "tmp%57#0",
        "tmp%56#0"
      ]
    },
    "6300": {
      "op": "cover 2",
      "defined_out": [
        "result.0#0",
        "result.1#0",
        "tmp%57#0"
      ],
      "stack_out": [
        "app#0",
        "acc#0",
        "result.1#0",
        "result.0#0",
        "tmp%57#0"
      ]
    },
    "6302": {
      "op": "cover 2",
      "defined_out": [
        "result.0#0",
        "result.1#0",
        "result.2#0"
      ],
      "stack_out": [
        "app#0",
        "acc#0",
        "result.2#0",
        "result.1#0",
        "result.0#0"
      ]
    },
    "6304": {
      "op": "frame_dig -1",
      "defined_out": [
        "asset#0 (copy)",
        "result.0#0",
        "result.1#0",
        "result.2#0"
      ],
      "stack_out": [
        "app#0",
        "acc#0",
        "result.2#0",
        "result.1#0",
        "result.0#0",
        "asset#0 (copy)"
      ]
    },
    "6306": {
      "op": "==",
      "defined_out": [
        "result.1#0",
        "result.2#0",
        "tmp%58#0"
      ],
      "stack_out": [
        "app#0",
        "acc#0",
        "result.2#0",
        "result.1#0",
        "tmp%58#0"
      ]
    },
    "6307": {
      "op": "uncover 1",
      "stack_out": [
        "app#0",
        "acc#0",
        "result.2#0",
        "tmp%58#0",
        "result.1#0"
      ]
    },
    "6309": {
      "op": "frame_dig 0",
      "defined_out": [
        "app#0",
        "result.1#0",
        "result.2#0",
        "tmp%58#0"
      ],
      "stack_out": [
        "app#0",
        "acc#0",
        "result.2#0",
        "tmp%58#0",
        "result.1#0",
        "app#0"
      ]
    },
    "6311": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "app#0 (copy)",
        "result.1#0",
        "result.2#0",
        "tmp%58#0"
      ],
      "stack_out": [
        "app#0",
        "acc#0",
        "result.2#0",
        "tmp%58#0",
        "result.1#0",
        "app#0 (copy)",
        "app#0 (copy)"
      ]
    },
    "6312": {
      "op": "cover 4",
      "stack_out": [
        "app#0",
        "acc#0",
        "app#0",
        "result.2#0",
        "tmp%58#0",
        "result.1#0",
        "app#0 (copy)"
      ]
    },
    "6314": {
      "op": "==",
      "defined_out": [
        "app#0",
        "result.2#0",
        "tmp%58#0",
        "tmp%59#0"
      ],
      "stack_out": [
        "app#0",
        "acc#0",
        "app#0",
        "result.2#0",
        "tmp%58#0",
        "tmp%59#0"
      ]
    },
    "6315": {
      "op": "&&",
      "defined_out": [
        "app#0",
        "result.2#0",
        "tmp%60#0"
      ],
      "stack_out": [
        "app#0",
        "acc#0",
        "app#0",
        "result.2#0",
        "tmp%60#0"
      ]
    },
    "6316": {
      "op": "uncover 1",
      "stack_out": [
        "app#0",
        "acc#0",
        "app#0",
        "tmp%60#0",
        "result.2#0"
      ]
    },
    "6318": {
      "op": "frame_dig 1",
      "defined_out": [
        "acc#0",
        "app#0",
        "result.2#0",
        "tmp%60#0"
      ],
      "stack_out": [
        "app#0",
        "acc#0",
        "app#0",
        "tmp%60#0",
        "result.2#0",
        "acc#0"
      ]
    },
    "6320": {
      "op": "dup",
      "defined_out": [
        "acc#0",
        "acc#0 (copy)",
        "app#0",
        "result.2#0",
        "tmp%60#0"
      ],
      "stack_out": [
        "app#0",
        "acc#0",
        "app#0",
        "tmp%60#0",
        "result.2#0",
        "acc#0 (copy)",
        "acc#0 (copy)"
      ]
    },
    "6321": {
      "op": "cover 3",
      "stack_out": [
        "app#0",
        "acc#0",
        "app#0",
        "acc#0",
        "tmp%60#0",
        "result.2#0",
        "acc#0 (copy)"
      ]
    },
    "6323": {
      "op": "==",
      "defined_out": [
        "acc#0",
        "app#0",
        "tmp%60#0",
        "tmp%61#0"
      ],
      "stack_out": [
        "app#0",
        "acc#0",
        "app#0",
        "acc#0",
        "tmp%60#0",
        "tmp%61#0"
      ]
    },
    "6324": {
      "op": "&&",
      "defined_out": [
        "acc#0",
        "app#0",
        "tmp%62#0"
      ],
      "stack_out": [
        "app#0",
        "acc#0",
        "app#0",
        "acc#0",
        "tmp%62#0"
      ]
    },
    "6325": {
      "error": "expected echo to return same resources",
      "op": "assert // expected echo to return same resources",
      "stack_out": [
        "app#0",
        "acc#0",
        "app#0",
        "acc#0"
      ]
    },
    "6326": {
      "op": "itxn_begin"
    },
    "6327": {
      "op": "frame_dig -1",
      "stack_out": [
        "app#0",
        "acc#0",
        "app#0",
        "acc#0",
        "asset#0 (copy)"
      ]
    },
    "6329": {
      "op": "itob",
      "defined_out": [
        "acc#0",
        "app#0",
        "tmp%63#0"
      ],
      "stack_out": [
        "app#0",
        "acc#0",
        "app#0",
        "acc#0",
        "tmp%63#0"
      ]
    },
    "6330": {
      "op": "uncover 2",
      "stack_out": [
        "app#0",
        "acc#0",
        "acc#0",
        "tmp%63#0",
        "app#0"
      ]
    },
    "6332": {
      "op": "itob",
      "defined_out": [
        "acc#0",
        "app#0",
        "tmp%63#0",
        "tmp%64#0"
      ],
      "stack_out": [
        "app#0",
        "acc#0",
        "acc#0",
        "tmp%63#0",
        "tmp%64#0"
      ]
    },
    "6333": {
      "op": "uncover 2",
      "defined_out": [
        "acc#0",
        "app#0",
        "inner_txn_params%5%%param_ApplicationArgs_idx_1#0",
        "tmp%64#0",
        "tmp%65#0"
      ],
      "stack_out": [
        "app#0",
        "acc#0",
        "inner_txn_params%5%%param_ApplicationArgs_idx_1#0",
        "tmp%64#0",
        "tmp%65#0"
      ]
    },
    "6335": {
      "op": "uncover 1",
      "stack_out": [
        "app#0",
        "acc#0",
        "inner_txn_params%5%%param_ApplicationArgs_idx_1#0",
        "tmp%65#0",
        "tmp%64#0"
      ]
    },
    "6337": {
      "op": "cover 2",
      "defined_out": [
        "acc#0",
        "app#0",
        "inner_txn_params%5%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%5%%param_ApplicationArgs_idx_2#0",
        "tmp%65#0"
      ],
      "stack_out": [
        "app#0",
        "acc#0",
        "inner_txn_params%5%%param_ApplicationArgs_idx_2#0",
        "inner_txn_params%5%%param_ApplicationArgs_idx_1#0",
        "tmp%65#0"
      ]
    },
    "6339": {
      "op": "cover 2",
      "defined_out": [
        "acc#0",
        "app#0",
        "inner_txn_params%5%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%5%%param_ApplicationArgs_idx_2#0",
        "inner_txn_params%5%%param_ApplicationArgs_idx_3#0"
      ],
      "stack_out": [
        "app#0",
        "acc#0",
        "inner_txn_params%5%%param_ApplicationArgs_idx_3#0",
        "inner_txn_params%5%%param_ApplicationArgs_idx_2#0",
        "inner_txn_params%5%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "6341": {
      "op": "frame_dig -2",
      "defined_out": [
        "acc#0",
        "app#0",
        "inner_txn_params%5%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%5%%param_ApplicationArgs_idx_2#0",
        "inner_txn_params%5%%param_ApplicationArgs_idx_3#0",
        "inner_txn_params%5%%param_ApplicationID_idx_0#0"
      ],
      "stack_out": [
        "app#0",
        "acc#0",
        "inner_txn_params%5%%param_ApplicationArgs_idx_3#0",
        "inner_txn_params%5%%param_ApplicationArgs_idx_2#0",
        "inner_txn_params%5%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%5%%param_ApplicationID_idx_0#0"
      ]
    },
    "6343": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "app#0",
        "acc#0",
        "inner_txn_params%5%%param_ApplicationArgs_idx_3#0",
        "inner_txn_params%5%%param_ApplicationArgs_idx_2#0",
        "inner_txn_params%5%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "6345": {
      "op": "bytec 36 // method \"echo_resource_by_value(uint64,uint64,address)(uint64,uint64,address)\"",
      "defined_out": [
        "Method(echo_resource_by_value(uint64,uint64,address)(uint64,uint64,address))",
        "acc#0",
        "app#0",
        "inner_txn_params%5%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%5%%param_ApplicationArgs_idx_2#0",
        "inner_txn_params%5%%param_ApplicationArgs_idx_3#0"
      ],
      "stack_out": [
        "app#0",
        "acc#0",
        "inner_txn_params%5%%param_ApplicationArgs_idx_3#0",
        "inner_txn_params%5%%param_ApplicationArgs_idx_2#0",
        "inner_txn_params%5%%param_ApplicationArgs_idx_1#0",
        "Method(echo_resource_by_value(uint64,uint64,address)(uint64,uint64,address))"
      ]
    },
    "6347": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0",
        "acc#0",
        "inner_txn_params%5%%param_ApplicationArgs_idx_3#0",
        "inner_txn_params%5%%param_ApplicationArgs_idx_2#0",
        "inner_txn_params%5%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "6349": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0",
        "acc#0",
        "inner_txn_params%5%%param_ApplicationArgs_idx_3#0",
        "inner_txn_params%5%%param_ApplicationArgs_idx_2#0"
      ]
    },
    "6351": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0",
        "acc#0",
        "inner_txn_params%5%%param_ApplicationArgs_idx_3#0"
      ]
    },
    "6353": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0",
        "acc#0"
      ]
    },
    "6355": {
      "op": "intc_1 // appl",
      "defined_out": [
        "acc#0",
        "app#0",
        "appl"
      ],
      "stack_out": [
        "app#0",
        "acc#0",
        "appl"
      ]
    },
    "6356": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "app#0",
        "acc#0"
      ]
    },
    "6358": {
      "op": "intc_0 // 0",
      "stack_out": [
        "app#0",
        "acc#0",
        "0"
      ]
    },
    "6359": {
      "op": "itxn_field Fee",
      "stack_out": [
        "app#0",
        "acc#0"
      ]
    },
    "6361": {
      "op": "b test_cases.typed_abi_call.typed_c2c.Greeter.test_resource_encoding_next_txn@6"
    },
    "6364": {
      "block": "test_cases.typed_abi_call.typed_c2c.Greeter.test_resource_encoding_next_txn@6",
      "stack_in": [
        "app#0",
        "acc#0"
      ],
      "op": "itxn_submit"
    },
    "6365": {
      "op": "itxn LastLog",
      "defined_out": [
        "awst_tmp%5#0"
      ],
      "stack_out": [
        "app#0",
        "acc#0",
        "awst_tmp%5#0"
      ]
    },
    "6367": {
      "op": "dup",
      "defined_out": [
        "awst_tmp%5#0",
        "awst_tmp%5#0 (copy)"
      ],
      "stack_out": [
        "app#0",
        "acc#0",
        "awst_tmp%5#0",
        "awst_tmp%5#0 (copy)"
      ]
    },
    "6368": {
      "op": "extract 4 0",
      "defined_out": [
        "awst_tmp%5#0",
        "tmp%66#0"
      ],
      "stack_out": [
        "app#0",
        "acc#0",
        "awst_tmp%5#0",
        "tmp%66#0"
      ]
    },
    "6371": {
      "op": "cover 1",
      "stack_out": [
        "app#0",
        "acc#0",
        "tmp%66#0",
        "awst_tmp%5#0"
      ]
    },
    "6373": {
      "op": "extract 0 4",
      "defined_out": [
        "tmp%66#0",
        "tmp%67#0"
      ],
      "stack_out": [
        "app#0",
        "acc#0",
        "tmp%66#0",
        "tmp%67#0"
      ]
    },
    "6376": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%66#0",
        "tmp%67#0"
      ],
      "stack_out": [
        "app#0",
        "acc#0",
        "tmp%66#0",
        "tmp%67#0",
        "0x151f7c75"
      ]
    },
    "6377": {
      "op": "==",
      "defined_out": [
        "tmp%66#0",
        "tmp%68#0"
      ],
      "stack_out": [
        "app#0",
        "acc#0",
        "tmp%66#0",
        "tmp%68#0"
      ]
    },
    "6378": {
      "error": "application log value is not the result of an ABI return",
      "op": "assert // application log value is not the result of an ABI return",
      "stack_out": [
        "app#0",
        "acc#0",
        "tmp%66#0"
      ]
    },
    "6379": {
      "op": "dup",
      "defined_out": [
        "tmp%66#0",
        "tmp%66#0 (copy)"
      ],
      "stack_out": [
        "app#0",
        "acc#0",
        "tmp%66#0",
        "tmp%66#0 (copy)"
      ]
    },
    "6380": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%66#0",
        "tmp%66#0 (copy)"
      ],
      "stack_out": [
        "app#0",
        "acc#0",
        "tmp%66#0",
        "tmp%66#0 (copy)",
        "0"
      ]
    },
    "6381": {
      "op": "intc_2 // 8",
      "defined_out": [
        "0",
        "8",
        "tmp%66#0",
        "tmp%66#0 (copy)"
      ],
      "stack_out": [
        "app#0",
        "acc#0",
        "tmp%66#0",
        "tmp%66#0 (copy)",
        "0",
        "8"
      ]
    },
    "6382": {
      "op": "extract3",
      "defined_out": [
        "aggregate%extract%15#0",
        "tmp%66#0"
      ],
      "stack_out": [
        "app#0",
        "acc#0",
        "tmp%66#0",
        "aggregate%extract%15#0"
      ]
    },
    "6383": {
      "op": "btoi",
      "defined_out": [
        "aggregate%item0%5#0",
        "tmp%66#0"
      ],
      "stack_out": [
        "app#0",
        "acc#0",
        "tmp%66#0",
        "aggregate%item0%5#0"
      ]
    },
    "6384": {
      "op": "cover 1",
      "stack_out": [
        "app#0",
        "acc#0",
        "aggregate%item0%5#0",
        "tmp%66#0"
      ]
    },
    "6386": {
      "op": "dup",
      "stack_out": [
        "app#0",
        "acc#0",
        "aggregate%item0%5#0",
        "tmp%66#0",
        "tmp%66#0 (copy)"
      ]
    },
    "6387": {
      "op": "intc_2 // 8",
      "stack_out": [
        "app#0",
        "acc#0",
        "aggregate%item0%5#0",
        "tmp%66#0",
        "tmp%66#0 (copy)",
        "8"
      ]
    },
    "6388": {
      "op": "intc_2 // 8",
      "stack_out": [
        "app#0",
        "acc#0",
        "aggregate%item0%5#0",
        "tmp%66#0",
        "tmp%66#0 (copy)",
        "8",
        "8"
      ]
    },
    "6389": {
      "op": "extract3",
      "defined_out": [
        "aggregate%extract%16#0",
        "aggregate%item0%5#0",
        "tmp%66#0"
      ],
      "stack_out": [
        "app#0",
        "acc#0",
        "aggregate%item0%5#0",
        "tmp%66#0",
        "aggregate%extract%16#0"
      ]
    },
    "6390": {
      "op": "btoi",
      "defined_out": [
        "aggregate%item0%5#0",
        "aggregate%item1%5#0",
        "tmp%66#0"
      ],
      "stack_out": [
        "app#0",
        "acc#0",
        "aggregate%item0%5#0",
        "tmp%66#0",
        "aggregate%item1%5#0"
      ]
    },
    "6391": {
      "op": "cover 1",
      "stack_out": [
        "app#0",
        "acc#0",
        "aggregate%item0%5#0",
        "aggregate%item1%5#0",
        "tmp%66#0"
      ]
    },
    "6393": {
      "op": "pushint 16 // 16",
      "defined_out": [
        "16",
        "aggregate%item0%5#0",
        "aggregate%item1%5#0",
        "tmp%66#0"
      ],
      "stack_out": [
        "app#0",
        "acc#0",
        "aggregate%item0%5#0",
        "aggregate%item1%5#0",
        "tmp%66#0",
        "16"
      ]
    },
    "6395": {
      "op": "pushint 32 // 32",
      "defined_out": [
        "16",
        "32",
        "aggregate%item0%5#0",
        "aggregate%item1%5#0",
        "tmp%66#0"
      ],
      "stack_out": [
        "app#0",
        "acc#0",
        "aggregate%item0%5#0",
        "aggregate%item1%5#0",
        "tmp%66#0",
        "16",
        "32"
      ]
    },
    "6397": {
      "op": "extract3",
      "defined_out": [
        "aggregate%extract%17#0",
        "aggregate%item0%5#0",
        "aggregate%item1%5#0"
      ],
      "stack_out": [
        "app#0",
        "acc#0",
        "aggregate%item0%5#0",
        "aggregate%item1%5#0",
        "aggregate%extract%17#0"
      ]
    },
    "6398": {
      "op": "uncover 2",
      "stack_out": [
        "app#0",
        "acc#0",
        "aggregate%item1%5#0",
        "aggregate%extract%17#0",
        "aggregate%item0%5#0"
      ]
    },
    "6400": {
      "op": "cover 1",
      "defined_out": [
        "aggregate%extract%17#0",
        "tmp%69#0",
        "tmp%70#0"
      ],
      "stack_out": [
        "app#0",
        "acc#0",
        "tmp%70#0",
        "tmp%69#0",
        "aggregate%extract%17#0"
      ]
    },
    "6402": {
      "op": "cover 2",
      "defined_out": [
        "tmp%69#0",
        "tmp%70#0",
        "tmp%71#0"
      ],
      "stack_out": [
        "app#0",
        "acc#0",
        "tmp%71#0",
        "tmp%70#0",
        "tmp%69#0"
      ]
    },
    "6404": {
      "op": "cover 2",
      "defined_out": [
        "result.0#0",
        "tmp%70#0",
        "tmp%71#0"
      ],
      "stack_out": [
        "app#0",
        "acc#0",
        "result.0#0",
        "tmp%71#0",
        "tmp%70#0"
      ]
    },
    "6406": {
      "op": "cover 2",
      "defined_out": [
        "result.0#0",
        "result.1#0",
        "tmp%71#0"
      ],
      "stack_out": [
        "app#0",
        "acc#0",
        "result.1#0",
        "result.0#0",
        "tmp%71#0"
      ]
    },
    "6408": {
      "op": "cover 2",
      "defined_out": [
        "result.0#0",
        "result.1#0",
        "result.2#0"
      ],
      "stack_out": [
        "app#0",
        "acc#0",
        "result.2#0",
        "result.1#0",
        "result.0#0"
      ]
    },
    "6410": {
      "op": "frame_dig -1",
      "defined_out": [
        "asset#0 (copy)",
        "result.0#0",
        "result.1#0",
        "result.2#0"
      ],
      "stack_out": [
        "app#0",
        "acc#0",
        "result.2#0",
        "result.1#0",
        "result.0#0",
        "asset#0 (copy)"
      ]
    },
    "6412": {
      "op": "==",
      "defined_out": [
        "result.1#0",
        "result.2#0",
        "tmp%72#0"
      ],
      "stack_out": [
        "app#0",
        "acc#0",
        "result.2#0",
        "result.1#0",
        "tmp%72#0"
      ]
    },
    "6413": {
      "op": "uncover 1",
      "stack_out": [
        "app#0",
        "acc#0",
        "result.2#0",
        "tmp%72#0",
        "result.1#0"
      ]
    },
    "6415": {
      "op": "frame_dig 0",
      "defined_out": [
        "app#0",
        "result.1#0",
        "result.2#0",
        "tmp%72#0"
      ],
      "stack_out": [
        "app#0",
        "acc#0",
        "result.2#0",
        "tmp%72#0",
        "result.1#0",
        "app#0"
      ]
    },
    "6417": {
      "op": "==",
      "defined_out": [
        "app#0",
        "result.2#0",
        "tmp%72#0",
        "tmp%73#0"
      ],
      "stack_out": [
        "app#0",
        "acc#0",
        "result.2#0",
        "tmp%72#0",
        "tmp%73#0"
      ]
    },
    "6418": {
      "op": "&&",
      "defined_out": [
        "app#0",
        "result.2#0",
        "tmp%74#0"
      ],
      "stack_out": [
        "app#0",
        "acc#0",
        "result.2#0",
        "tmp%74#0"
      ]
    },
    "6419": {
      "op": "uncover 1",
      "stack_out": [
        "app#0",
        "acc#0",
        "tmp%74#0",
        "result.2#0"
      ]
    },
    "6421": {
      "op": "frame_dig 1",
      "defined_out": [
        "acc#0",
        "app#0",
        "result.2#0",
        "tmp%74#0"
      ],
      "stack_out": [
        "app#0",
        "acc#0",
        "tmp%74#0",
        "result.2#0",
        "acc#0"
      ]
    },
    "6423": {
      "op": "==",
      "defined_out": [
        "acc#0",
        "app#0",
        "tmp%74#0",
        "tmp%75#0"
      ],
      "stack_out": [
        "app#0",
        "acc#0",
        "tmp%74#0",
        "tmp%75#0"
      ]
    },
    "6424": {
      "op": "&&",
      "defined_out": [
        "acc#0",
        "app#0",
        "tmp%76#0"
      ],
      "stack_out": [
        "app#0",
        "acc#0",
        "tmp%76#0"
      ]
    },
    "6425": {
      "error": "expected echo to return same resources",
      "op": "assert // expected echo to return same resources",
      "stack_out": [
        "app#0",
        "acc#0"
      ]
    },
    "6426": {
      "retsub": true,
      "op": "retsub"
    }
  }
}