{
  "version": 3,
  "sources": [
    "../typed_c2c.py"
  ],
  "mappingssBA;;AAAA;AAAA;AAAA;;;AAAA;;;AAAA;;;;;;AAAA;;;;;;AAAA;;;;;;AAAA;;;;;;AAAA;;;;;;AAAA;;;;;;AAAA;;;;;;AAAA;;;;;;AAAA;;;;;;AAAA;;;;;;AAAA;;;;;;AAAA;;;;;;AAAA;;;;;;AAAA;;;;;;AAAA;;;;;;AAAA;;;;;;AAAA;;;;;;AAAA;;;;;;AAAA;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AA6VK;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AA7VL;;;AAAA;AAAA;;AA6VK;;;AAAA;;;;AAjBA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AA5UL;;;AAAA;AAAA;;AA4UK;;;AAAA;;;;AAVA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAlUL;;;AAAA;AAAA;;AAkUK;;;AAAA;;;;AA9CA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AApRL;;;AAAA;AAAA;;AAoRK;;;AAAA;;;;AAlDA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAlOL;;;AAAA;AAAA;;AAkOK;;;AAAA;;;;AA3DA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAvKL;;;AAAA;AAAA;;AAuKK;;;AAAA;;;;AAXA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AA5JL;;;AAAA;AAAA;;AA4JK;;;AAAA;;;;AAXA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAjJL;;;AAAA;AAAA;;AAiJK;;;AAAA;;;;AAbA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AApIL;;;AAAA;AAAA;;AAoIK;;;AAAA;;;;AAXA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAzHL;;;AAAA;AAAA;;AAyHK;;;AAAA;;;;AATA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAhHL;;;AAAA;AAAA;;AAgHK;;;AAAA;;;;AAdA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAlGL;;;AAAA;AAAA;;AAAA;;;AAAA;AAAA;;AAkGK;;;AAAA;;;;AAdA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AApFL;;;AAAA;AAAA;;AAoFK;;;AAAA;;;;AA5BA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAxDL;;;AAAA;AAAA;;AAwDK;;;AAAA;;;;AAjBA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAvCL;;;AAAA;AAAA;;AAuCK;;;AAAA;;;;AAfA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAxBL;;;AAAA;AAAA;;AAwBK;;;AAAA;;;;AAdA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAVL;;;AAAA;AAAA;;AAUK;;;AAAA;;;;AATA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AADL;;;AAAA;;;AAAA;;;AAAA;;;AAAA;;;AAAA;AAAA;;AACK;;AAAA;;AAAA;;AAAA;;;AAAA;;;;AADL;;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;AACA;;;AAEQ;AAEI;;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AACA;;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAA;AACO;;;;AAJX;;;;;;;;;;;;AAAA;;;AAAA;;;AAAA;;AAOR;;;AAEe;;AAAoC;AAApC;AAAP;AACe;AAA2B;;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAA6B;;;;AAAxD;;;;;;AAAA;;;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AACE;;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAV;AAAP;AACe;AAAiC;;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAgB;;;;AAAjD;;;;;;AAAA;;;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AACE;;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAV;AAAP;AACe;AAAmC;;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAgB;;;;AAAnD;;;;;;AAAA;;;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AACE;;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAV;AAAP;AACe;AAA2C;;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAgB;;;;AAA3D;;;;;;AAAA;;;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AACE;;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAV;AAAP;AACe;AAAiD;;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAgB;;;;AAAjE;;;;;;AAAA;;;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AACE;;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAV;AAAP;;AAER;;;AAEQ;AAAiD;;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAyB;;;;AAA1E;;;;;;AAAA;;;AAAA;;;AAAA;AAAA;;AAAA;;;AAAA;AAAA;AAAA;AAC4B;;AAArB;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAA4C;;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAA5C;AAAP;AAEA;AAAoC;;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAA2B;;;;AAA/D;;;;;;AAAA;;;AAAA;;;AAAA;AAC4B;;AAArB;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAA4C;;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAA5C;AAAP;AAES;AAAiD;;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAgB;;;;AAAjE;;;;;;AAAA;;;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;AACW;;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAb;AAAP;AACO;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAA4C;;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAA5C;AAAP;AAEa;AAAoC;;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAkB;;;;AAAtD;;;;;;AAAA;;;AAAA;;;AAAA;;;AACN;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAA6C;;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAA7C;AAAP;;AAER;;;AAEc;AAAiC;;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAqB;;;;AAAtD;;;;;;AAAA;;;AAAA;;;AAAA;;;AACiB;;AAAhB;AAAP;AAEM;AAA2C;;;;AAA3C;;;;;;;;AAAiC;;;;AAAjC;;;AAAA;;;AAAA;;;AACyB;AAAR;AAAhB;AAAP;AAEM;AAA4C;;;;AAA5C;;;;;;;;AAAkC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAlC;;;AAAA;;;AAAA;;;AAC2B;;AAAT;AAAuB;;AAAR;AAAf;AAAjB;AAAP;AAEM;AAAgC;;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAa;;;;AAA7C;;;;;;;;;;AAAA;;;AAAA;;;AAAA;;;AACiB;;AAAhB;AAAP;AAEM;AAA+B;;;AAAA;AAAA;AAAA;AAAa;;;;AAA5C;;;;;;;;;;AAAA;;;AAAA;;;AAAA;;;AACiB;;;;;;AAAhB;AAAP;;AAER;;;AAEsB;AAoBV;AAAY;;;AAAZ;AAA8B;;;AAA9B;AAAgD;;;AAAhD;AAAkE;;;AAAlE;AAJA;AAAA;;;AAAA;AACA;;;AADA;AAEA;;;AAFA;AAGA;;;AAHA;AAAA;AAAA;AAKA;;;AALA;AAMO;;;;AAtBG;;;;;;;;AAEV;;;;AACA;;;;AACA;;;;AACA;;;;;;;;;;;;AACA;;;;;;;;;;;;AACA;;;;;;;;;;;;AACA;;;;;;;;;;;;AACA;;;;;;;;;;;;AACA;;;;;;;;;;;;AACA;;;;;;;;;;;;AACA;;;;AACA;;;;;;;;;;;;AACA;;;;;;;;;;;;AACA;;;;;;;;;;;;;;AAfU;;;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAwBP;;;AAAiB;;;;;;;;;;;AAAjB;AAAP;;AAER;;;AAEc;AAAgD;;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAiB;;;;AAAjE;;;;;;AAAA;;;AAAA;;;AAAA;;;AACiB;;AAAhB;AAAP;AAEM;AAA4C;;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAiB;;;;AAA7D;;;;;;AAAA;;;AAAA;;;AAAA;;;AACiB;;AAAhB;AAAP;AAEM;AAA+B;;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAA8B;;;;AAA7D;;;;;;AAAA;;;AAAA;;;AAAA;;;AACiB;;AAAhB;AAAP;AAEM;AAAiC;;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAiB;;;;AAAlD;;;;;;AAAA;;;AAAA;;;AAAA;;;AACiB;;AAAhB;AAAP;;AAER;;;AAEc;AAGF;;AACA;;AAFA;;AAGO;;;;;;;;;;AALL;;;;;;;;AAEF;;;;;AACA;;;;;AACA;;;;;AAJE;;;AAAA;;;AAAA;;;AASC;;AAAA;;AAAA;AAAa;;AAAb;AAAwD;;AAAA;;AAAA;AAAxD;AADH;AADJ;;AAKR;;;AAEc;AAEF;;AACO;;;;AAHL;;;;;;;;;;AAAA;;;AAAA;;;AAAA;;;AAKiB;;AAAhB;AAAP;;AAER;;;;AAEwB;AAAyC;;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAY;;;;AAArD;;;;;;AAAA;;;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAhB;AAAA;;AACkB;;;;;;;;;AAAX;AAAP;AAEgB;AAAyC;;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAoB;;;;AAA7D;;;;;;AAAA;;;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AACT;;AAAA;AAAP;AAEgB;AAAyC;;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAyB;;;;AAAlE;;;;;;AAAA;;;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AACT;;AAAA;AAAP;;AAER;;;;AAEwB;AAAwC;;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAa;;;;AAArD;;;;;;AAAA;;;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAhB;AAAA;;AACkB;;;;;;;;;AAAX;AAAP;AAEgB;AAAwC;;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAoB;;;;AAA5D;;;;;;AAAA;;;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AACT;;AAAA;AAAP;AAEgB;AACc;;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAgC;;;;AAD9C;;;;;;AAAA;;;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAGT;;AAAA;AAAP;;AAER;;;;AAEwB;AAAmD;;;;AAAnD;;;;AAAyC;;;;AAAzC;;;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAhB;AAAA;;AACkB;AAAX;AAAP;AAEgB;AAAyC;AAAA;AAAkB;;;;AAA3D;;;;;;AAAA;;;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;AACT;;AAAA;AAAP;AAEgB;AAAgE;;;;AAAhE;;;;AAAyC;;;;AAAzC;;;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;AACT;;AAAA;AAAP;;AAER;;;;AAEwB;AAAoD;;;;AAApD;;;;AAA0C;;;;AAA1C;;;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAhB;AAAA;;AACkB;;AAAX;AAAP;AAEgB;AAA0C;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAmB;;;;AAA7D;;;;;;AAAA;;;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AACT;;AAAA;AAAP;AAEgB;AAAkE;;;;AAAlE;;;;AAA0C;;;;AAA1C;;;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AACT;;AAAA;AAAP;;AAER;;;;AAGuB;AAIX;AAAA;AAAA;AAAA;;;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAGO;;;;AARI;;;;;;;;AAMX;;;;AACA;;;;AAPW;;;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAf;AAAA;;AAUc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAd;;AAAA;;AAAA;;AAAA;;AACO;;;AAAY;;AAAZ;AAAP;AACO;;;AAAY;;AAAZ;AAAP;AACO;AAAY;AAAZ;AAAP;AACoB;;AAAb;AAAP;AAGe;AAIX;AAAA;AAAA;AAAA;;;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AACA;AAAA;AACA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAHA;;AAAA;AACA;;AAAA;;AAEA;;AACO;;;;AARI;;;;;;;;;;;;AAAA;;;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAUR;;AAAA;AAAP;AAGe;AAIX;AAAA;AAAA;AAAA;;;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAGO;;;;AARI;;;;;;;;AAMX;;;;AACA;;;;AAPW;;;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAUR;;AAAA;AAAP;AAGqB;AAEjB;AAAA;AAAA;AAAA;;;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAGO;;;;AANU;;;;;;;;AAIjB;;;;AACA;;;;AALiB;;;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAArB;;AAAA;;AAAA;;AAAA;;AAQO;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;AAAP;AACO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;AAAP;AACO;AAAA;;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAP;AACO;;AAAA;;AAAA;AAAA;AAAP;;AAER;;;;;;;AAGsB;AAEV;AAAA;AAAA;AAAA;;;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAGO;;;;AANG;;;;;;;;AAIV;;;;AACA;;;;AALU;;;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAd;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAQA;;AAAA;;AAAA;;AAAA;;AACY;;AAAL;AAAP;AACY;;AAAL;AAAP;AACY;AAAL;AAAP;AACa;;AAAN;AAAP;AAGgB;AAEZ;AAAA;AAAA;AAAA;;;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AACA;AAAA;AACA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAHA;;AAAA;AACA;;AAAA;;AAEA;;AACO;;;;AANK;;;;;;;;;;;;AAAA;;;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAhB;;AAAA;;AAAA;;AAAA;;AAQO;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAP;AAGgB;AAEZ;AAAA;AAAA;AAAA;;;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAGO;;;;AANK;;;;;;;;AAIZ;;;;AACA;;;;AALY;;;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAhB;;AAAA;;AAAA;;AAAA;;AAQO;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAP;AAGqB;AAEjB;AAAA;AAAA;AAAA;;;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAGO;;;;AANU;;;;;;;;AAIjB;;;;AACA;;;;AALiB;;;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAArB;;AAAA;;AAAA;;AAAA;;AAQO;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAP;;AAER;;;AAGsB;AAER;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAM;;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAA;AAAc;;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAA;;AAAtB;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAgB;;AAAhB;AAAmB;;AAAnB;AAAA;;AAAA;AAAA;;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AACO;;;;AAHG;;;;;;AAAA;;;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAd;;AAAA;;AAAA;;AAAA;;AAAA;;AAKA;;AAAA;;AAAA;;AAAA;;AAAA;;AACa;;AAAN;AAAP;AACa;;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAN;AAAP;AACgB;AAAT;AAAP;AACgB;;AAAT;AAAP;AACgB;;AAAT;AAAP;AAGc;AAEM;;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAd;AAAF;AAAA;AAAA;;;AAAE;AAAF;AAAA;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAqC;AAArC;AAAA;AAAA;AAAA;AAAgD;;AAAhD;AAAgE;;AAAhE;AAAA;AAAA;;;AAAgE;;AAAhE;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AACO;;;;AAHG;;;;;;AAAA;;;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAd;;AAAA;;AAAA;;AAAA;;AAAA;;AAKA;;AAAA;;AAAA;;AAAA;;AAAA;;AACa;;AAAN;AAAP;AACa;;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAN;AAAP;AACgB;AAAT;AAAP;AACgB;;AAAT;AAAP;AACgB;;AAAT;AAAP;AAGc;AAIU;;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAoB;;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAA;AAAhC;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAC8C;;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAA9C;AAAY;;AAAZ;AAA6B;;;;;;;;;;AAA7B;AAAA;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAHR;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAMO;;;;AARG;;;;;;AAAA;;;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAd;;AAAA;;AAAA;;AAAA;;AAAA;;AAUA;;AAAA;;AAAA;;AAAA;;AAAA;;AACa;;;;;;;;;;;AAAN;AAAP;AACa;;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAN;AAAP;AACgB;;AAAT;AAAP;AACgB;;;;;;;;;;AAAT;AAAP;AACgB;;;;;;;;;;AAAT;AAAP;;AAER;;;AAEuB;AAAqC;;;;AAArC;;;;AAAA;;;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;AACE;;AAAV;AAAP;AACoB;AAAqD;;;;AAArD;;;;AAAA;;;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AACE;;AAAf;AAAP;AAEA;AAAqC;;;;AAArC;;;;AAAA;;;AAAA;;;AAAA;AAAA;;AAAA;;;AAAA;AAAA;AAAA;AAC4B;;AAArB;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAA4C;;AAA5C;AAAP;;AAER;;;AAEuB;AAEV;AAAA;AAAW;;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAZ;AAAA;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AACiB;AAAjB;AAAoC;;AAApC;AAAA;AAAA;;;AAAoC;;AAApC;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;AACO;;;;AAJI;;;;;;;;AAAA;;;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAMf;AACe;AAEV;AAAA;AAAW;;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAZ;AAAA;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AACiB;AAAjB;AAAoC;;AAApC;AAAA;AAAA;;;AAAoC;;AAApC;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;AACO;;;;AAJI;;;;;;;;AAAA;;;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAMR;AAAP;;AAER;;;AAEsD;;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAxC;AAAgB;;AAAhB;AAAA;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAN;AACc;AAGH;;;;AAHG;;;;;;;;;;AAAA;;;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;AAKP;;AAAA;AAAA;;AAAA;AAAP;AACO;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAP;",
  "op_pc_offset": 0,
  "pc_events": {
    "1": {
      "subroutine": "algopy.arc4.ARC4Contract.approval_program",
      "params": {},
      "block": "main",
      "stack_in": [],
      "op": "intcblock 0 6 2 1"
    },
    "7": {
      "op": "bytecblock 0x151f7c75 0x7331 0x 0x6231 0x0000000000000001 0x9bf81913 0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002 0x16e03919 0x6c6f672031 0x73 0x62 0x02 0xb4b4334e 0x6563686f3a207475706c65 0x0000000000000002 \"echo: s1\" 0x7332 0x33 0x6563686f3a207332 0x636f6e76657274656431 0x34 0x0000000000000003 0x576f726c6431 0x576f726c6432 0x576f726c6433 0x576f726c6434 0x4a444c77 0x2659e818 0xa9fb6cf1 0xd8cc363b 0x03 0xab271ce4 0xb862ee19 0x7465737431 0x6563686f3a207465737431 0x7465737432 0x6563686f3a207465737432 0x7465737433 0x6563686f3a207465737433 0x7465737434 0x6563686f3a207465737434 0x7465737435 0x6563686f3a207465737435 0x7479706564202b2069676e6f7265 0x6563686f3a207479706564202b2069676e6f7265 0x756e7479706564202b2069676e6f7265 0x6563686f3a20756e7479706564202b2069676e6f7265 0x7475706c65 0x756e7479706564 0x6563686f3a20756e7479706564 0x000000000000000b 0x6563686f3a206231 0x6563686f3a2033 0x733162 0x733262 0x3362 0x6563686f3a20733262 0x000000000000002a 0xddd07185 \"log 2\""
    },
    "509": {
      "block": "main_block@1",
      "stack_in": [],
      "op": "txn NumAppArgs",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "511": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1",
        "0"
      ]
    },
    "512": {
      "op": "!=",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "513": {
      "op": "bz main_bare_routing@23",
      "stack_out": []
    },
    "516": {
      "block": "main_abi_routing@2",
      "stack_in": [],
      "op": "txna ApplicationArgs 0",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "519": {
      "op": "pushbytes 0x07916bea // method \"test_is_a_b(byte[],byte[],application)void\"",
      "defined_out": [
        "Method(test_is_a_b(byte[],byte[],application)void)",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "Method(test_is_a_b(byte[],byte[],application)void)"
      ]
    },
    "525": {
      "op": "pushbytes 0x1859b0ba // method \"test_method_selector_kinds(application)void\"",
      "defined_out": [
        "Method(test_is_a_b(byte[],byte[],application)void)",
        "Method(test_method_selector_kinds(application)void)",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "Method(test_is_a_b(byte[],byte[],application)void)",
        "Method(test_method_selector_kinds(application)void)"
      ]
    },
    "531": {
      "op": "pushbytes 0x4eb11b0d // method \"test_method_overload(application)void\"",
      "defined_out": [
        "Method(test_is_a_b(byte[],byte[],application)void)",
        "Method(test_method_overload(application)void)",
        "Method(test_method_selector_kinds(application)void)",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "Method(test_is_a_b(byte[],byte[],application)void)",
        "Method(test_method_selector_kinds(application)void)",
        "Method(test_method_overload(application)void)"
      ]
    },
    "537": {
      "op": "pushbytes 0x0d176a4a // method \"test_arg_conversion(application)void\"",
      "defined_out": [
        "Method(test_arg_conversion(application)void)",
        "Method(test_is_a_b(byte[],byte[],application)void)",
        "Method(test_method_overload(application)void)",
        "Method(test_method_selector_kinds(application)void)",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "Method(test_is_a_b(byte[],byte[],application)void)",
        "Method(test_method_selector_kinds(application)void)",
        "Method(test_method_overload(application)void)",
        "Method(test_arg_conversion(application)void)"
      ]
    },
    "543": {
      "op": "pushbytes 0xb54730c8 // method \"test_15plus_args(application)void\"",
      "defined_out": [
        "Method(test_15plus_args(application)void)",
        "Method(test_arg_conversion(application)void)",
        "Method(test_is_a_b(byte[],byte[],application)void)",
        "Method(test_method_overload(application)void)",
        "Method(test_method_selector_kinds(application)void)",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "Method(test_is_a_b(byte[],byte[],application)void)",
        "Method(test_method_selector_kinds(application)void)",
        "Method(test_method_overload(application)void)",
        "Method(test_arg_conversion(application)void)",
        "Method(test_15plus_args(application)void)"
      ]
    },
    "549": {
      "op": "pushbytes 0x7859eaf7 // method \"test_void(application)void\"",
      "defined_out": [
        "Method(test_15plus_args(application)void)",
        "Method(test_arg_conversion(application)void)",
        "Method(test_is_a_b(byte[],byte[],application)void)",
        "Method(test_method_overload(application)void)",
        "Method(test_method_selector_kinds(application)void)",
        "Method(test_void(application)void)",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "Method(test_is_a_b(byte[],byte[],application)void)",
        "Method(test_method_selector_kinds(application)void)",
        "Method(test_method_overload(application)void)",
        "Method(test_arg_conversion(application)void)",
        "Method(test_15plus_args(application)void)",
        "Method(test_void(application)void)"
      ]
    },
    "555": {
      "op": "pushbytes 0x24478a3c // method \"test_ref_types(application,asset)void\"",
      "defined_out": [
        "Method(test_15plus_args(application)void)",
        "Method(test_arg_conversion(application)void)",
        "Method(test_is_a_b(byte[],byte[],application)void)",
        "Method(test_method_overload(application)void)",
        "Method(test_method_selector_kinds(application)void)",
        "Method(test_ref_types(application,asset)void)",
        "Method(test_void(application)void)",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "Method(test_is_a_b(byte[],byte[],application)void)",
        "Method(test_method_selector_kinds(application)void)",
        "Method(test_method_overload(application)void)",
        "Method(test_arg_conversion(application)void)",
        "Method(test_15plus_args(application)void)",
        "Method(test_void(application)void)",
        "Method(test_ref_types(application,asset)void)"
      ]
    },
    "561": {
      "op": "pushbytes 0xe44b2eaf // method \"test_account_to_address(application)void\"",
      "defined_out": [
        "Method(test_15plus_args(application)void)",
        "Method(test_account_to_address(application)void)",
        "Method(test_arg_conversion(application)void)",
        "Method(test_is_a_b(byte[],byte[],application)void)",
        "Method(test_method_overload(application)void)",
        "Method(test_method_selector_kinds(application)void)",
        "Method(test_ref_types(application,asset)void)",
        "Method(test_void(application)void)",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "Method(test_is_a_b(byte[],byte[],application)void)",
        "Method(test_method_selector_kinds(application)void)",
        "Method(test_method_overload(application)void)",
        "Method(test_arg_conversion(application)void)",
        "Method(test_15plus_args(application)void)",
        "Method(test_void(application)void)",
        "Method(test_ref_types(application,asset)void)",
        "Method(test_account_to_address(application)void)"
      ]
    },
    "567": {
      "op": "pushbytes 0x7a60c035 // method \"test_native_string(application)void\"",
      "defined_out": [
        "Method(test_15plus_args(application)void)",
        "Method(test_account_to_address(application)void)",
        "Method(test_arg_conversion(application)void)",
        "Method(test_is_a_b(byte[],byte[],application)void)",
        "Method(test_method_overload(application)void)",
        "Method(test_method_selector_kinds(application)void)",
        "Method(test_native_string(application)void)",
        "Method(test_ref_types(application,asset)void)",
        "Method(test_void(application)void)",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "Method(test_is_a_b(byte[],byte[],application)void)",
        "Method(test_method_selector_kinds(application)void)",
        "Method(test_method_overload(application)void)",
        "Method(test_arg_conversion(application)void)",
        "Method(test_15plus_args(application)void)",
        "Method(test_void(application)void)",
        "Method(test_ref_types(application,asset)void)",
        "Method(test_account_to_address(application)void)",
        "Method(test_native_string(application)void)"
      ]
    },
    "573": {
      "op": "pushbytes 0x6a559cb3 // method \"test_native_bytes(application)void\"",
      "defined_out": [
        "Method(test_15plus_args(application)void)",
        "Method(test_account_to_address(application)void)",
        "Method(test_arg_conversion(application)void)",
        "Method(test_is_a_b(byte[],byte[],application)void)",
        "Method(test_method_overload(application)void)",
        "Method(test_method_selector_kinds(application)void)",
        "Method(test_native_bytes(application)void)",
        "Method(test_native_string(application)void)",
        "Method(test_ref_types(application,asset)void)",
        "Method(test_void(application)void)",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "Method(test_is_a_b(byte[],byte[],application)void)",
        "Method(test_method_selector_kinds(application)void)",
        "Method(test_method_overload(application)void)",
        "Method(test_arg_conversion(application)void)",
        "Method(test_15plus_args(application)void)",
        "Method(test_void(application)void)",
        "Method(test_ref_types(application,asset)void)",
        "Method(test_account_to_address(application)void)",
        "Method(test_native_string(application)void)",
        "Method(test_native_bytes(application)void)"
      ]
    },
    "579": {
      "op": "pushbytes 0x1be60712 // method \"test_native_uint64(application)void\"",
      "defined_out": [
        "Method(test_15plus_args(application)void)",
        "Method(test_account_to_address(application)void)",
        "Method(test_arg_conversion(application)void)",
        "Method(test_is_a_b(byte[],byte[],application)void)",
        "Method(test_method_overload(application)void)",
        "Method(test_method_selector_kinds(application)void)",
        "Method(test_native_bytes(application)void)",
        "Method(test_native_string(application)void)",
        "Method(test_native_uint64(application)void)",
        "Method(test_ref_types(application,asset)void)",
        "Method(test_void(application)void)",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "Method(test_is_a_b(byte[],byte[],application)void)",
        "Method(test_method_selector_kinds(application)void)",
        "Method(test_method_overload(application)void)",
        "Method(test_arg_conversion(application)void)",
        "Method(test_15plus_args(application)void)",
        "Method(test_void(application)void)",
        "Method(test_ref_types(application,asset)void)",
        "Method(test_account_to_address(application)void)",
        "Method(test_native_string(application)void)",
        "Method(test_native_bytes(application)void)",
        "Method(test_native_uint64(application)void)"
      ]
    },
    "585": {
      "op": "pushbytes 0x19cb78a4 // method \"test_native_biguint(application)void\"",
      "defined_out": [
        "Method(test_15plus_args(application)void)",
        "Method(test_account_to_address(application)void)",
        "Method(test_arg_conversion(application)void)",
        "Method(test_is_a_b(byte[],byte[],application)void)",
        "Method(test_method_overload(application)void)",
        "Method(test_method_selector_kinds(application)void)",
        "Method(test_native_biguint(application)void)",
        "Method(test_native_bytes(application)void)",
        "Method(test_native_string(application)void)",
        "Method(test_native_uint64(application)void)",
        "Method(test_ref_types(application,asset)void)",
        "Method(test_void(application)void)",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "Method(test_is_a_b(byte[],byte[],application)void)",
        "Method(test_method_selector_kinds(application)void)",
        "Method(test_method_overload(application)void)",
        "Method(test_arg_conversion(application)void)",
        "Method(test_15plus_args(application)void)",
        "Method(test_void(application)void)",
        "Method(test_ref_types(application,asset)void)",
        "Method(test_account_to_address(application)void)",
        "Method(test_native_string(application)void)",
        "Method(test_native_bytes(application)void)",
        "Method(test_native_uint64(application)void)",
        "Method(test_native_biguint(application)void)"
      ]
    },
    "591": {
      "op": "pushbytes 0xf0ef6873 // method \"test_native_tuple(application)void\"",
      "defined_out": [
        "Method(test_15plus_args(application)void)",
        "Method(test_account_to_address(application)void)",
        "Method(test_arg_conversion(application)void)",
        "Method(test_is_a_b(byte[],byte[],application)void)",
        "Method(test_method_overload(application)void)",
        "Method(test_method_selector_kinds(application)void)",
        "Method(test_native_biguint(application)void)",
        "Method(test_native_bytes(application)void)",
        "Method(test_native_string(application)void)",
        "Method(test_native_tuple(application)void)",
        "Method(test_native_uint64(application)void)",
        "Method(test_ref_types(application,asset)void)",
        "Method(test_void(application)void)",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "Method(test_is_a_b(byte[],byte[],application)void)",
        "Method(test_method_selector_kinds(application)void)",
        "Method(test_method_overload(application)void)",
        "Method(test_arg_conversion(application)void)",
        "Method(test_15plus_args(application)void)",
        "Method(test_void(application)void)",
        "Method(test_ref_types(application,asset)void)",
        "Method(test_account_to_address(application)void)",
        "Method(test_native_string(application)void)",
        "Method(test_native_bytes(application)void)",
        "Method(test_native_uint64(application)void)",
        "Method(test_native_biguint(application)void)",
        "Method(test_native_tuple(application)void)"
      ]
    },
    "597": {
      "op": "pushbytes 0x3d2bfe37 // method \"test_native_tuple_method_ref(application)void\"",
      "defined_out": [
        "Method(test_15plus_args(application)void)",
        "Method(test_account_to_address(application)void)",
        "Method(test_arg_conversion(application)void)",
        "Method(test_is_a_b(byte[],byte[],application)void)",
        "Method(test_method_overload(application)void)",
        "Method(test_method_selector_kinds(application)void)",
        "Method(test_native_biguint(application)void)",
        "Method(test_native_bytes(application)void)",
        "Method(test_native_string(application)void)",
        "Method(test_native_tuple(application)void)",
        "Method(test_native_tuple_method_ref(application)void)",
        "Method(test_native_uint64(application)void)",
        "Method(test_ref_types(application,asset)void)",
        "Method(test_void(application)void)",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "Method(test_is_a_b(byte[],byte[],application)void)",
        "Method(test_method_selector_kinds(application)void)",
        "Method(test_method_overload(application)void)",
        "Method(test_arg_conversion(application)void)",
        "Method(test_15plus_args(application)void)",
        "Method(test_void(application)void)",
        "Method(test_ref_types(application,asset)void)",
        "Method(test_account_to_address(application)void)",
        "Method(test_native_string(application)void)",
        "Method(test_native_bytes(application)void)",
        "Method(test_native_uint64(application)void)",
        "Method(test_native_biguint(application)void)",
        "Method(test_native_tuple(application)void)",
        "Method(test_native_tuple_method_ref(application)void)"
      ]
    },
    "603": {
      "op": "pushbytes 0x54e98f56 // method \"test_nested_tuples(application)void\"",
      "defined_out": [
        "Method(test_15plus_args(application)void)",
        "Method(test_account_to_address(application)void)",
        "Method(test_arg_conversion(application)void)",
        "Method(test_is_a_b(byte[],byte[],application)void)",
        "Method(test_method_overload(application)void)",
        "Method(test_method_selector_kinds(application)void)",
        "Method(test_native_biguint(application)void)",
        "Method(test_native_bytes(application)void)",
        "Method(test_native_string(application)void)",
        "Method(test_native_tuple(application)void)",
        "Method(test_native_tuple_method_ref(application)void)",
        "Method(test_native_uint64(application)void)",
        "Method(test_nested_tuples(application)void)",
        "Method(test_ref_types(application,asset)void)",
        "Method(test_void(application)void)",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "Method(test_is_a_b(byte[],byte[],application)void)",
        "Method(test_method_selector_kinds(application)void)",
        "Method(test_method_overload(application)void)",
        "Method(test_arg_conversion(application)void)",
        "Method(test_15plus_args(application)void)",
        "Method(test_void(application)void)",
        "Method(test_ref_types(application,asset)void)",
        "Method(test_account_to_address(application)void)",
        "Method(test_native_string(application)void)",
        "Method(test_native_bytes(application)void)",
        "Method(test_native_uint64(application)void)",
        "Method(test_native_biguint(application)void)",
        "Method(test_native_tuple(application)void)",
        "Method(test_native_tuple_method_ref(application)void)",
        "Method(test_nested_tuples(application)void)"
      ]
    },
    "609": {
      "op": "pushbytes 0xf55b7567 // method \"test_no_args(application)void\"",
      "defined_out": [
        "Method(test_15plus_args(application)void)",
        "Method(test_account_to_address(application)void)",
        "Method(test_arg_conversion(application)void)",
        "Method(test_is_a_b(byte[],byte[],application)void)",
        "Method(test_method_overload(application)void)",
        "Method(test_method_selector_kinds(application)void)",
        "Method(test_native_biguint(application)void)",
        "Method(test_native_bytes(application)void)",
        "Method(test_native_string(application)void)",
        "Method(test_native_tuple(application)void)",
        "Method(test_native_tuple_method_ref(application)void)",
        "Method(test_native_uint64(application)void)",
        "Method(test_nested_tuples(application)void)",
        "Method(test_no_args(application)void)",
        "Method(test_ref_types(application,asset)void)",
        "Method(test_void(application)void)",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "Method(test_is_a_b(byte[],byte[],application)void)",
        "Method(test_method_selector_kinds(application)void)",
        "Method(test_method_overload(application)void)",
        "Method(test_arg_conversion(application)void)",
        "Method(test_15plus_args(application)void)",
        "Method(test_void(application)void)",
        "Method(test_ref_types(application,asset)void)",
        "Method(test_account_to_address(application)void)",
        "Method(test_native_string(application)void)",
        "Method(test_native_bytes(application)void)",
        "Method(test_native_uint64(application)void)",
        "Method(test_native_biguint(application)void)",
        "Method(test_native_tuple(application)void)",
        "Method(test_native_tuple_method_ref(application)void)",
        "Method(test_nested_tuples(application)void)",
        "Method(test_no_args(application)void)"
      ]
    },
    "615": {
      "op": "pushbytes 0x8598bb43 // method \"test_named_tuples(application)void\"",
      "defined_out": [
        "Method(test_15plus_args(application)void)",
        "Method(test_account_to_address(application)void)",
        "Method(test_arg_conversion(application)void)",
        "Method(test_is_a_b(byte[],byte[],application)void)",
        "Method(test_method_overload(application)void)",
        "Method(test_method_selector_kinds(application)void)",
        "Method(test_named_tuples(application)void)",
        "Method(test_native_biguint(application)void)",
        "Method(test_native_bytes(application)void)",
        "Method(test_native_string(application)void)",
        "Method(test_native_tuple(application)void)",
        "Method(test_native_tuple_method_ref(application)void)",
        "Method(test_native_uint64(application)void)",
        "Method(test_nested_tuples(application)void)",
        "Method(test_no_args(application)void)",
        "Method(test_ref_types(application,asset)void)",
        "Method(test_void(application)void)",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "Method(test_is_a_b(byte[],byte[],application)void)",
        "Method(test_method_selector_kinds(application)void)",
        "Method(test_method_overload(application)void)",
        "Method(test_arg_conversion(application)void)",
        "Method(test_15plus_args(application)void)",
        "Method(test_void(application)void)",
        "Method(test_ref_types(application,asset)void)",
        "Method(test_account_to_address(application)void)",
        "Method(test_native_string(application)void)",
        "Method(test_native_bytes(application)void)",
        "Method(test_native_uint64(application)void)",
        "Method(test_native_biguint(application)void)",
        "Method(test_native_tuple(application)void)",
        "Method(test_native_tuple_method_ref(application)void)",
        "Method(test_nested_tuples(application)void)",
        "Method(test_no_args(application)void)",
        "Method(test_named_tuples(application)void)"
      ]
    },
    "621": {
      "op": "pushbytes 0xbb691362 // method \"test_arc4_struct(application)void\"",
      "defined_out": [
        "Method(test_15plus_args(application)void)",
        "Method(test_account_to_address(application)void)",
        "Method(test_arc4_struct(application)void)",
        "Method(test_arg_conversion(application)void)",
        "Method(test_is_a_b(byte[],byte[],application)void)",
        "Method(test_method_overload(application)void)",
        "Method(test_method_selector_kinds(application)void)",
        "Method(test_named_tuples(application)void)",
        "Method(test_native_biguint(application)void)",
        "Method(test_native_bytes(application)void)",
        "Method(test_native_string(application)void)",
        "Method(test_native_tuple(application)void)",
        "Method(test_native_tuple_method_ref(application)void)",
        "Method(test_native_uint64(application)void)",
        "Method(test_nested_tuples(application)void)",
        "Method(test_no_args(application)void)",
        "Method(test_ref_types(application,asset)void)",
        "Method(test_void(application)void)",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "Method(test_is_a_b(byte[],byte[],application)void)",
        "Method(test_method_selector_kinds(application)void)",
        "Method(test_method_overload(application)void)",
        "Method(test_arg_conversion(application)void)",
        "Method(test_15plus_args(application)void)",
        "Method(test_void(application)void)",
        "Method(test_ref_types(application,asset)void)",
        "Method(test_account_to_address(application)void)",
        "Method(test_native_string(application)void)",
        "Method(test_native_bytes(application)void)",
        "Method(test_native_uint64(application)void)",
        "Method(test_native_biguint(application)void)",
        "Method(test_native_tuple(application)void)",
        "Method(test_native_tuple_method_ref(application)void)",
        "Method(test_nested_tuples(application)void)",
        "Method(test_no_args(application)void)",
        "Method(test_named_tuples(application)void)",
        "Method(test_arc4_struct(application)void)"
      ]
    },
    "627": {
      "op": "uncover 18",
      "stack_out": [
        "Method(test_is_a_b(byte[],byte[],application)void)",
        "Method(test_method_selector_kinds(application)void)",
        "Method(test_method_overload(application)void)",
        "Method(test_arg_conversion(application)void)",
        "Method(test_15plus_args(application)void)",
        "Method(test_void(application)void)",
        "Method(test_ref_types(application,asset)void)",
        "Method(test_account_to_address(application)void)",
        "Method(test_native_string(application)void)",
        "Method(test_native_bytes(application)void)",
        "Method(test_native_uint64(application)void)",
        "Method(test_native_biguint(application)void)",
        "Method(test_native_tuple(application)void)",
        "Method(test_native_tuple_method_ref(application)void)",
        "Method(test_nested_tuples(application)void)",
        "Method(test_no_args(application)void)",
        "Method(test_named_tuples(application)void)",
        "Method(test_arc4_struct(application)void)",
        "tmp%2#0"
      ]
    },
    "629": {
      "op": "match main_test_is_a_b_route@3 main_test_method_selector_kinds_route@4 main_test_method_overload_route@5 main_test_arg_conversion_route@6 main_test_15plus_args_route@7 main_test_void_route@8 main_test_ref_types_route@9 main_test_account_to_address_route@10 main_test_native_string_route@11 main_test_native_bytes_route@12 main_test_native_uint64_route@13 main_test_native_biguint_route@14 main_test_native_tuple_route@15 main_test_native_tuple_method_ref_route@16 main_test_nested_tuples_route@17 main_test_no_args_route@18 main_test_named_tuples_route@19 main_test_arc4_struct_route@20",
      "stack_out": []
    },
    "667": {
      "block": "main_after_if_else@27",
      "stack_in": [],
      "op": "intc_0 // 0",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "668": {
      "block": "main_after_inlined_test_cases.typed_abi_call.typed_c2c.Greeter.__puya_arc4_router__@28",
      "stack_in": [
        "tmp%0#0"
      ],
      "op": "return",
      "defined_out": [],
      "stack_out": []
    },
    "669": {
      "block": "main_test_arc4_struct_route@20",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%109#0"
      ],
      "stack_out": [
        "tmp%109#0"
      ]
    },
    "671": {
      "op": "intc_0 // NoOp",
      "defined_out": [
        "NoOp",
        "tmp%109#0"
      ],
      "stack_out": [
        "tmp%109#0",
        "NoOp"
      ]
    },
    "672": {
      "op": "==",
      "defined_out": [
        "tmp%110#0"
      ],
      "stack_out": [
        "tmp%110#0"
      ]
    },
    "673": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "674": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%111#0"
      ],
      "stack_out": [
        "tmp%111#0"
      ]
    },
    "676": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%111#0"
      ],
      "stack_out": [
        "tmp%111#0",
        "0"
      ]
    },
    "677": {
      "op": "!=",
      "defined_out": [
        "tmp%112#0"
      ],
      "stack_out": [
        "tmp%112#0"
      ]
    },
    "678": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "679": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded(uint8)%18#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint8)%18#0"
      ]
    },
    "682": {
      "op": "btoi",
      "defined_out": [
        "tmp%113#0"
      ],
      "stack_out": [
        "tmp%113#0"
      ]
    },
    "683": {
      "op": "txnas Applications",
      "defined_out": [
        "tmp%114#0"
      ],
      "stack_out": [
        "tmp%114#0"
      ]
    },
    "685": {
      "callsub": "test_cases.typed_abi_call.typed_c2c.Greeter.test_arc4_struct",
      "op": "callsub test_arc4_struct",
      "stack_out": []
    },
    "688": {
      "op": "intc_3 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "689": {
      "op": "b main_after_inlined_test_cases.typed_abi_call.typed_c2c.Greeter.__puya_arc4_router__@28"
    },
    "692": {
      "block": "main_test_named_tuples_route@19",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%103#0"
      ],
      "stack_out": [
        "tmp%103#0"
      ]
    },
    "694": {
      "op": "intc_0 // NoOp",
      "defined_out": [
        "NoOp",
        "tmp%103#0"
      ],
      "stack_out": [
        "tmp%103#0",
        "NoOp"
      ]
    },
    "695": {
      "op": "==",
      "defined_out": [
        "tmp%104#0"
      ],
      "stack_out": [
        "tmp%104#0"
      ]
    },
    "696": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "697": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%105#0"
      ],
      "stack_out": [
        "tmp%105#0"
      ]
    },
    "699": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%105#0"
      ],
      "stack_out": [
        "tmp%105#0",
        "0"
      ]
    },
    "700": {
      "op": "!=",
      "defined_out": [
        "tmp%106#0"
      ],
      "stack_out": [
        "tmp%106#0"
      ]
    },
    "701": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "702": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded(uint8)%17#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint8)%17#0"
      ]
    },
    "705": {
      "op": "btoi",
      "defined_out": [
        "tmp%107#0"
      ],
      "stack_out": [
        "tmp%107#0"
      ]
    },
    "706": {
      "op": "txnas Applications",
      "defined_out": [
        "tmp%108#0"
      ],
      "stack_out": [
        "tmp%108#0"
      ]
    },
    "708": {
      "callsub": "test_cases.typed_abi_call.typed_c2c.Greeter.test_named_tuples",
      "op": "callsub test_named_tuples",
      "stack_out": []
    },
    "711": {
      "op": "intc_3 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "712": {
      "op": "b main_after_inlined_test_cases.typed_abi_call.typed_c2c.Greeter.__puya_arc4_router__@28"
    },
    "715": {
      "block": "main_test_no_args_route@18",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%97#0"
      ],
      "stack_out": [
        "tmp%97#0"
      ]
    },
    "717": {
      "op": "intc_0 // NoOp",
      "defined_out": [
        "NoOp",
        "tmp%97#0"
      ],
      "stack_out": [
        "tmp%97#0",
        "NoOp"
      ]
    },
    "718": {
      "op": "==",
      "defined_out": [
        "tmp%98#0"
      ],
      "stack_out": [
        "tmp%98#0"
      ]
    },
    "719": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "720": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%99#0"
      ],
      "stack_out": [
        "tmp%99#0"
      ]
    },
    "722": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%99#0"
      ],
      "stack_out": [
        "tmp%99#0",
        "0"
      ]
    },
    "723": {
      "op": "!=",
      "defined_out": [
        "tmp%100#0"
      ],
      "stack_out": [
        "tmp%100#0"
      ]
    },
    "724": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "725": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded(uint8)%16#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint8)%16#0"
      ]
    },
    "728": {
      "op": "btoi",
      "defined_out": [
        "tmp%101#0"
      ],
      "stack_out": [
        "tmp%101#0"
      ]
    },
    "729": {
      "op": "txnas Applications",
      "defined_out": [
        "tmp%102#0"
      ],
      "stack_out": [
        "tmp%102#0"
      ]
    },
    "731": {
      "callsub": "test_cases.typed_abi_call.typed_c2c.Greeter.test_no_args",
      "op": "callsub test_no_args",
      "stack_out": []
    },
    "734": {
      "op": "intc_3 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "735": {
      "op": "b main_after_inlined_test_cases.typed_abi_call.typed_c2c.Greeter.__puya_arc4_router__@28"
    },
    "738": {
      "block": "main_test_nested_tuples_route@17",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%91#0"
      ],
      "stack_out": [
        "tmp%91#0"
      ]
    },
    "740": {
      "op": "intc_0 // NoOp",
      "defined_out": [
        "NoOp",
        "tmp%91#0"
      ],
      "stack_out": [
        "tmp%91#0",
        "NoOp"
      ]
    },
    "741": {
      "op": "==",
      "defined_out": [
        "tmp%92#0"
      ],
      "stack_out": [
        "tmp%92#0"
      ]
    },
    "742": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "743": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%93#0"
      ],
      "stack_out": [
        "tmp%93#0"
      ]
    },
    "745": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%93#0"
      ],
      "stack_out": [
        "tmp%93#0",
        "0"
      ]
    },
    "746": {
      "op": "!=",
      "defined_out": [
        "tmp%94#0"
      ],
      "stack_out": [
        "tmp%94#0"
      ]
    },
    "747": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "748": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded(uint8)%15#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint8)%15#0"
      ]
    },
    "751": {
      "op": "btoi",
      "defined_out": [
        "tmp%95#0"
      ],
      "stack_out": [
        "tmp%95#0"
      ]
    },
    "752": {
      "op": "txnas Applications",
      "defined_out": [
        "tmp%96#0"
      ],
      "stack_out": [
        "tmp%96#0"
      ]
    },
    "754": {
      "callsub": "test_cases.typed_abi_call.typed_c2c.Greeter.test_nested_tuples",
      "op": "callsub test_nested_tuples",
      "stack_out": []
    },
    "757": {
      "op": "intc_3 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "758": {
      "op": "b main_after_inlined_test_cases.typed_abi_call.typed_c2c.Greeter.__puya_arc4_router__@28"
    },
    "761": {
      "block": "main_test_native_tuple_method_ref_route@16",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%85#0"
      ],
      "stack_out": [
        "tmp%85#0"
      ]
    },
    "763": {
      "op": "intc_0 // NoOp",
      "defined_out": [
        "NoOp",
        "tmp%85#0"
      ],
      "stack_out": [
        "tmp%85#0",
        "NoOp"
      ]
    },
    "764": {
      "op": "==",
      "defined_out": [
        "tmp%86#0"
      ],
      "stack_out": [
        "tmp%86#0"
      ]
    },
    "765": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "766": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%87#0"
      ],
      "stack_out": [
        "tmp%87#0"
      ]
    },
    "768": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%87#0"
      ],
      "stack_out": [
        "tmp%87#0",
        "0"
      ]
    },
    "769": {
      "op": "!=",
      "defined_out": [
        "tmp%88#0"
      ],
      "stack_out": [
        "tmp%88#0"
      ]
    },
    "770": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "771": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded(uint8)%14#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint8)%14#0"
      ]
    },
    "774": {
      "op": "btoi",
      "defined_out": [
        "tmp%89#0"
      ],
      "stack_out": [
        "tmp%89#0"
      ]
    },
    "775": {
      "op": "txnas Applications",
      "defined_out": [
        "tmp%90#0"
      ],
      "stack_out": [
        "tmp%90#0"
      ]
    },
    "777": {
      "callsub": "test_cases.typed_abi_call.typed_c2c.Greeter.test_native_tuple_method_ref",
      "op": "callsub test_native_tuple_method_ref",
      "stack_out": []
    },
    "780": {
      "op": "intc_3 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "781": {
      "op": "b main_after_inlined_test_cases.typed_abi_call.typed_c2c.Greeter.__puya_arc4_router__@28"
    },
    "784": {
      "block": "main_test_native_tuple_route@15",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%79#0"
      ],
      "stack_out": [
        "tmp%79#0"
      ]
    },
    "786": {
      "op": "intc_0 // NoOp",
      "defined_out": [
        "NoOp",
        "tmp%79#0"
      ],
      "stack_out": [
        "tmp%79#0",
        "NoOp"
      ]
    },
    "787": {
      "op": "==",
      "defined_out": [
        "tmp%80#0"
      ],
      "stack_out": [
        "tmp%80#0"
      ]
    },
    "788": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "789": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%81#0"
      ],
      "stack_out": [
        "tmp%81#0"
      ]
    },
    "791": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%81#0"
      ],
      "stack_out": [
        "tmp%81#0",
        "0"
      ]
    },
    "792": {
      "op": "!=",
      "defined_out": [
        "tmp%82#0"
      ],
      "stack_out": [
        "tmp%82#0"
      ]
    },
    "793": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "794": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded(uint8)%13#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint8)%13#0"
      ]
    },
    "797": {
      "op": "btoi",
      "defined_out": [
        "tmp%83#0"
      ],
      "stack_out": [
        "tmp%83#0"
      ]
    },
    "798": {
      "op": "txnas Applications",
      "defined_out": [
        "tmp%84#0"
      ],
      "stack_out": [
        "tmp%84#0"
      ]
    },
    "800": {
      "callsub": "test_cases.typed_abi_call.typed_c2c.Greeter.test_native_tuple",
      "op": "callsub test_native_tuple",
      "stack_out": []
    },
    "803": {
      "op": "intc_3 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "804": {
      "op": "b main_after_inlined_test_cases.typed_abi_call.typed_c2c.Greeter.__puya_arc4_router__@28"
    },
    "807": {
      "block": "main_test_native_biguint_route@14",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%73#0"
      ],
      "stack_out": [
        "tmp%73#0"
      ]
    },
    "809": {
      "op": "intc_0 // NoOp",
      "defined_out": [
        "NoOp",
        "tmp%73#0"
      ],
      "stack_out": [
        "tmp%73#0",
        "NoOp"
      ]
    },
    "810": {
      "op": "==",
      "defined_out": [
        "tmp%74#0"
      ],
      "stack_out": [
        "tmp%74#0"
      ]
    },
    "811": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "812": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%75#0"
      ],
      "stack_out": [
        "tmp%75#0"
      ]
    },
    "814": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%75#0"
      ],
      "stack_out": [
        "tmp%75#0",
        "0"
      ]
    },
    "815": {
      "op": "!=",
      "defined_out": [
        "tmp%76#0"
      ],
      "stack_out": [
        "tmp%76#0"
      ]
    },
    "816": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "817": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded(uint8)%12#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint8)%12#0"
      ]
    },
    "820": {
      "op": "btoi",
      "defined_out": [
        "tmp%77#0"
      ],
      "stack_out": [
        "tmp%77#0"
      ]
    },
    "821": {
      "op": "txnas Applications",
      "defined_out": [
        "tmp%78#0"
      ],
      "stack_out": [
        "tmp%78#0"
      ]
    },
    "823": {
      "callsub": "test_cases.typed_abi_call.typed_c2c.Greeter.test_native_biguint",
      "op": "callsub test_native_biguint",
      "stack_out": []
    },
    "826": {
      "op": "intc_3 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "827": {
      "op": "b main_after_inlined_test_cases.typed_abi_call.typed_c2c.Greeter.__puya_arc4_router__@28"
    },
    "830": {
      "block": "main_test_native_uint64_route@13",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%67#0"
      ],
      "stack_out": [
        "tmp%67#0"
      ]
    },
    "832": {
      "op": "intc_0 // NoOp",
      "defined_out": [
        "NoOp",
        "tmp%67#0"
      ],
      "stack_out": [
        "tmp%67#0",
        "NoOp"
      ]
    },
    "833": {
      "op": "==",
      "defined_out": [
        "tmp%68#0"
      ],
      "stack_out": [
        "tmp%68#0"
      ]
    },
    "834": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "835": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%69#0"
      ],
      "stack_out": [
        "tmp%69#0"
      ]
    },
    "837": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%69#0"
      ],
      "stack_out": [
        "tmp%69#0",
        "0"
      ]
    },
    "838": {
      "op": "!=",
      "defined_out": [
        "tmp%70#0"
      ],
      "stack_out": [
        "tmp%70#0"
      ]
    },
    "839": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "840": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded(uint8)%11#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint8)%11#0"
      ]
    },
    "843": {
      "op": "btoi",
      "defined_out": [
        "tmp%71#0"
      ],
      "stack_out": [
        "tmp%71#0"
      ]
    },
    "844": {
      "op": "txnas Applications",
      "defined_out": [
        "tmp%72#0"
      ],
      "stack_out": [
        "tmp%72#0"
      ]
    },
    "846": {
      "callsub": "test_cases.typed_abi_call.typed_c2c.Greeter.test_native_uint64",
      "op": "callsub test_native_uint64",
      "stack_out": []
    },
    "849": {
      "op": "intc_3 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "850": {
      "op": "b main_after_inlined_test_cases.typed_abi_call.typed_c2c.Greeter.__puya_arc4_router__@28"
    },
    "853": {
      "block": "main_test_native_bytes_route@12",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%61#0"
      ],
      "stack_out": [
        "tmp%61#0"
      ]
    },
    "855": {
      "op": "intc_0 // NoOp",
      "defined_out": [
        "NoOp",
        "tmp%61#0"
      ],
      "stack_out": [
        "tmp%61#0",
        "NoOp"
      ]
    },
    "856": {
      "op": "==",
      "defined_out": [
        "tmp%62#0"
      ],
      "stack_out": [
        "tmp%62#0"
      ]
    },
    "857": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "858": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%63#0"
      ],
      "stack_out": [
        "tmp%63#0"
      ]
    },
    "860": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%63#0"
      ],
      "stack_out": [
        "tmp%63#0",
        "0"
      ]
    },
    "861": {
      "op": "!=",
      "defined_out": [
        "tmp%64#0"
      ],
      "stack_out": [
        "tmp%64#0"
      ]
    },
    "862": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "863": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded(uint8)%10#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint8)%10#0"
      ]
    },
    "866": {
      "op": "btoi",
      "defined_out": [
        "tmp%65#0"
      ],
      "stack_out": [
        "tmp%65#0"
      ]
    },
    "867": {
      "op": "txnas Applications",
      "defined_out": [
        "tmp%66#0"
      ],
      "stack_out": [
        "tmp%66#0"
      ]
    },
    "869": {
      "callsub": "test_cases.typed_abi_call.typed_c2c.Greeter.test_native_bytes",
      "op": "callsub test_native_bytes",
      "stack_out": []
    },
    "872": {
      "op": "intc_3 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "873": {
      "op": "b main_after_inlined_test_cases.typed_abi_call.typed_c2c.Greeter.__puya_arc4_router__@28"
    },
    "876": {
      "block": "main_test_native_string_route@11",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%55#0"
      ],
      "stack_out": [
        "tmp%55#0"
      ]
    },
    "878": {
      "op": "intc_0 // NoOp",
      "defined_out": [
        "NoOp",
        "tmp%55#0"
      ],
      "stack_out": [
        "tmp%55#0",
        "NoOp"
      ]
    },
    "879": {
      "op": "==",
      "defined_out": [
        "tmp%56#0"
      ],
      "stack_out": [
        "tmp%56#0"
      ]
    },
    "880": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "881": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%57#0"
      ],
      "stack_out": [
        "tmp%57#0"
      ]
    },
    "883": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%57#0"
      ],
      "stack_out": [
        "tmp%57#0",
        "0"
      ]
    },
    "884": {
      "op": "!=",
      "defined_out": [
        "tmp%58#0"
      ],
      "stack_out": [
        "tmp%58#0"
      ]
    },
    "885": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "886": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded(uint8)%9#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint8)%9#0"
      ]
    },
    "889": {
      "op": "btoi",
      "defined_out": [
        "tmp%59#0"
      ],
      "stack_out": [
        "tmp%59#0"
      ]
    },
    "890": {
      "op": "txnas Applications",
      "defined_out": [
        "tmp%60#0"
      ],
      "stack_out": [
        "tmp%60#0"
      ]
    },
    "892": {
      "callsub": "test_cases.typed_abi_call.typed_c2c.Greeter.test_native_string",
      "op": "callsub test_native_string",
      "stack_out": []
    },
    "895": {
      "op": "intc_3 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "896": {
      "op": "b main_after_inlined_test_cases.typed_abi_call.typed_c2c.Greeter.__puya_arc4_router__@28"
    },
    "899": {
      "block": "main_test_account_to_address_route@10",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%49#0"
      ],
      "stack_out": [
        "tmp%49#0"
      ]
    },
    "901": {
      "op": "intc_0 // NoOp",
      "defined_out": [
        "NoOp",
        "tmp%49#0"
      ],
      "stack_out": [
        "tmp%49#0",
        "NoOp"
      ]
    },
    "902": {
      "op": "==",
      "defined_out": [
        "tmp%50#0"
      ],
      "stack_out": [
        "tmp%50#0"
      ]
    },
    "903": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "904": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%51#0"
      ],
      "stack_out": [
        "tmp%51#0"
      ]
    },
    "906": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%51#0"
      ],
      "stack_out": [
        "tmp%51#0",
        "0"
      ]
    },
    "907": {
      "op": "!=",
      "defined_out": [
        "tmp%52#0"
      ],
      "stack_out": [
        "tmp%52#0"
      ]
    },
    "908": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "909": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded(uint8)%8#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint8)%8#0"
      ]
    },
    "912": {
      "op": "btoi",
      "defined_out": [
        "tmp%53#0"
      ],
      "stack_out": [
        "tmp%53#0"
      ]
    },
    "913": {
      "op": "txnas Applications",
      "defined_out": [
        "tmp%54#0"
      ],
      "stack_out": [
        "tmp%54#0"
      ]
    },
    "915": {
      "callsub": "test_cases.typed_abi_call.typed_c2c.Greeter.test_account_to_address",
      "op": "callsub test_account_to_address",
      "stack_out": []
    },
    "918": {
      "op": "intc_3 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "919": {
      "op": "b main_after_inlined_test_cases.typed_abi_call.typed_c2c.Greeter.__puya_arc4_router__@28"
    },
    "922": {
      "block": "main_test_ref_types_route@9",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%41#0"
      ],
      "stack_out": [
        "tmp%41#0"
      ]
    },
    "924": {
      "op": "intc_0 // NoOp",
      "defined_out": [
        "NoOp",
        "tmp%41#0"
      ],
      "stack_out": [
        "tmp%41#0",
        "NoOp"
      ]
    },
    "925": {
      "op": "==",
      "defined_out": [
        "tmp%42#0"
      ],
      "stack_out": [
        "tmp%42#0"
      ]
    },
    "926": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "927": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%43#0"
      ],
      "stack_out": [
        "tmp%43#0"
      ]
    },
    "929": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%43#0"
      ],
      "stack_out": [
        "tmp%43#0",
        "0"
      ]
    },
    "930": {
      "op": "!=",
      "defined_out": [
        "tmp%44#0"
      ],
      "stack_out": [
        "tmp%44#0"
      ]
    },
    "931": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "932": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded(uint8)%6#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint8)%6#0"
      ]
    },
    "935": {
      "op": "btoi",
      "defined_out": [
        "tmp%45#0"
      ],
      "stack_out": [
        "tmp%45#0"
      ]
    },
    "936": {
      "op": "txnas Applications",
      "defined_out": [
        "tmp%46#0"
      ],
      "stack_out": [
        "tmp%46#0"
      ]
    },
    "938": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "reinterpret_Encoded(uint8)%7#0",
        "tmp%46#0"
      ],
      "stack_out": [
        "tmp%46#0",
        "reinterpret_Encoded(uint8)%7#0"
      ]
    },
    "941": {
      "op": "btoi",
      "defined_out": [
        "tmp%46#0",
        "tmp%47#0"
      ],
      "stack_out": [
        "tmp%46#0",
        "tmp%47#0"
      ]
    },
    "942": {
      "op": "txnas Assets",
      "defined_out": [
        "tmp%46#0",
        "tmp%48#0"
      ],
      "stack_out": [
        "tmp%46#0",
        "tmp%48#0"
      ]
    },
    "944": {
      "callsub": "test_cases.typed_abi_call.typed_c2c.Greeter.test_ref_types",
      "op": "callsub test_ref_types",
      "stack_out": []
    },
    "947": {
      "op": "intc_3 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "948": {
      "op": "b main_after_inlined_test_cases.typed_abi_call.typed_c2c.Greeter.__puya_arc4_router__@28"
    },
    "951": {
      "block": "main_test_void_route@8",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%35#0"
      ],
      "stack_out": [
        "tmp%35#0"
      ]
    },
    "953": {
      "op": "intc_0 // NoOp",
      "defined_out": [
        "NoOp",
        "tmp%35#0"
      ],
      "stack_out": [
        "tmp%35#0",
        "NoOp"
      ]
    },
    "954": {
      "op": "==",
      "defined_out": [
        "tmp%36#0"
      ],
      "stack_out": [
        "tmp%36#0"
      ]
    },
    "955": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "956": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%37#0"
      ],
      "stack_out": [
        "tmp%37#0"
      ]
    },
    "958": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%37#0"
      ],
      "stack_out": [
        "tmp%37#0",
        "0"
      ]
    },
    "959": {
      "op": "!=",
      "defined_out": [
        "tmp%38#0"
      ],
      "stack_out": [
        "tmp%38#0"
      ]
    },
    "960": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "961": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded(uint8)%5#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint8)%5#0"
      ]
    },
    "964": {
      "op": "btoi",
      "defined_out": [
        "tmp%39#0"
      ],
      "stack_out": [
        "tmp%39#0"
      ]
    },
    "965": {
      "op": "txnas Applications",
      "defined_out": [
        "tmp%40#0"
      ],
      "stack_out": [
        "tmp%40#0"
      ]
    },
    "967": {
      "callsub": "test_cases.typed_abi_call.typed_c2c.Greeter.test_void",
      "op": "callsub test_void",
      "stack_out": []
    },
    "970": {
      "op": "intc_3 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "971": {
      "op": "b main_after_inlined_test_cases.typed_abi_call.typed_c2c.Greeter.__puya_arc4_router__@28"
    },
    "974": {
      "block": "main_test_15plus_args_route@7",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%29#0"
      ],
      "stack_out": [
        "tmp%29#0"
      ]
    },
    "976": {
      "op": "intc_0 // NoOp",
      "defined_out": [
        "NoOp",
        "tmp%29#0"
      ],
      "stack_out": [
        "tmp%29#0",
        "NoOp"
      ]
    },
    "977": {
      "op": "==",
      "defined_out": [
        "tmp%30#0"
      ],
      "stack_out": [
        "tmp%30#0"
      ]
    },
    "978": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "979": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%31#0"
      ],
      "stack_out": [
        "tmp%31#0"
      ]
    },
    "981": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%31#0"
      ],
      "stack_out": [
        "tmp%31#0",
        "0"
      ]
    },
    "982": {
      "op": "!=",
      "defined_out": [
        "tmp%32#0"
      ],
      "stack_out": [
        "tmp%32#0"
      ]
    },
    "983": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "984": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded(uint8)%4#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint8)%4#0"
      ]
    },
    "987": {
      "op": "btoi",
      "defined_out": [
        "tmp%33#0"
      ],
      "stack_out": [
        "tmp%33#0"
      ]
    },
    "988": {
      "op": "txnas Applications",
      "defined_out": [
        "tmp%34#0"
      ],
      "stack_out": [
        "tmp%34#0"
      ]
    },
    "990": {
      "callsub": "test_cases.typed_abi_call.typed_c2c.Greeter.test_15plus_args",
      "op": "callsub test_15plus_args",
      "stack_out": []
    },
    "993": {
      "op": "intc_3 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "994": {
      "op": "b main_after_inlined_test_cases.typed_abi_call.typed_c2c.Greeter.__puya_arc4_router__@28"
    },
    "997": {
      "block": "main_test_arg_conversion_route@6",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%23#0"
      ],
      "stack_out": [
        "tmp%23#0"
      ]
    },
    "999": {
      "op": "intc_0 // NoOp",
      "defined_out": [
        "NoOp",
        "tmp%23#0"
      ],
      "stack_out": [
        "tmp%23#0",
        "NoOp"
      ]
    },
    "1000": {
      "op": "==",
      "defined_out": [
        "tmp%24#0"
      ],
      "stack_out": [
        "tmp%24#0"
      ]
    },
    "1001": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "1002": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%25#0"
      ],
      "stack_out": [
        "tmp%25#0"
      ]
    },
    "1004": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%25#0"
      ],
      "stack_out": [
        "tmp%25#0",
        "0"
      ]
    },
    "1005": {
      "op": "!=",
      "defined_out": [
        "tmp%26#0"
      ],
      "stack_out": [
        "tmp%26#0"
      ]
    },
    "1006": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "1007": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded(uint8)%3#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint8)%3#0"
      ]
    },
    "1010": {
      "op": "btoi",
      "defined_out": [
        "tmp%27#0"
      ],
      "stack_out": [
        "tmp%27#0"
      ]
    },
    "1011": {
      "op": "txnas Applications",
      "defined_out": [
        "tmp%28#0"
      ],
      "stack_out": [
        "tmp%28#0"
      ]
    },
    "1013": {
      "callsub": "test_cases.typed_abi_call.typed_c2c.Greeter.test_arg_conversion",
      "op": "callsub test_arg_conversion",
      "stack_out": []
    },
    "1016": {
      "op": "intc_3 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1017": {
      "op": "b main_after_inlined_test_cases.typed_abi_call.typed_c2c.Greeter.__puya_arc4_router__@28"
    },
    "1020": {
      "block": "main_test_method_overload_route@5",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%17#0"
      ],
      "stack_out": [
        "tmp%17#0"
      ]
    },
    "1022": {
      "op": "intc_0 // NoOp",
      "defined_out": [
        "NoOp",
        "tmp%17#0"
      ],
      "stack_out": [
        "tmp%17#0",
        "NoOp"
      ]
    },
    "1023": {
      "op": "==",
      "defined_out": [
        "tmp%18#0"
      ],
      "stack_out": [
        "tmp%18#0"
      ]
    },
    "1024": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "1025": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%19#0"
      ],
      "stack_out": [
        "tmp%19#0"
      ]
    },
    "1027": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%19#0"
      ],
      "stack_out": [
        "tmp%19#0",
        "0"
      ]
    },
    "1028": {
      "op": "!=",
      "defined_out": [
        "tmp%20#0"
      ],
      "stack_out": [
        "tmp%20#0"
      ]
    },
    "1029": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "1030": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded(uint8)%2#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint8)%2#0"
      ]
    },
    "1033": {
      "op": "btoi",
      "defined_out": [
        "tmp%21#0"
      ],
      "stack_out": [
        "tmp%21#0"
      ]
    },
    "1034": {
      "op": "txnas Applications",
      "defined_out": [
        "tmp%22#0"
      ],
      "stack_out": [
        "tmp%22#0"
      ]
    },
    "1036": {
      "callsub": "test_cases.typed_abi_call.typed_c2c.Greeter.test_method_overload",
      "op": "callsub test_method_overload",
      "stack_out": []
    },
    "1039": {
      "op": "intc_3 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1040": {
      "op": "b main_after_inlined_test_cases.typed_abi_call.typed_c2c.Greeter.__puya_arc4_router__@28"
    },
    "1043": {
      "block": "main_test_method_selector_kinds_route@4",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0"
      ]
    },
    "1045": {
      "op": "intc_0 // NoOp",
      "defined_out": [
        "NoOp",
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "NoOp"
      ]
    },
    "1046": {
      "op": "==",
      "defined_out": [
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%12#0"
      ]
    },
    "1047": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "1048": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%13#0"
      ],
      "stack_out": [
        "tmp%13#0"
      ]
    },
    "1050": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%13#0"
      ],
      "stack_out": [
        "tmp%13#0",
        "0"
      ]
    },
    "1051": {
      "op": "!=",
      "defined_out": [
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%14#0"
      ]
    },
    "1052": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "1053": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded(uint8)%1#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint8)%1#0"
      ]
    },
    "1056": {
      "op": "btoi",
      "defined_out": [
        "tmp%15#0"
      ],
      "stack_out": [
        "tmp%15#0"
      ]
    },
    "1057": {
      "op": "txnas Applications",
      "defined_out": [
        "tmp%16#0"
      ],
      "stack_out": [
        "tmp%16#0"
      ]
    },
    "1059": {
      "callsub": "test_cases.typed_abi_call.typed_c2c.Greeter.test_method_selector_kinds",
      "op": "callsub test_method_selector_kinds",
      "stack_out": []
    },
    "1062": {
      "op": "intc_3 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1063": {
      "op": "b main_after_inlined_test_cases.typed_abi_call.typed_c2c.Greeter.__puya_arc4_router__@28"
    },
    "1066": {
      "block": "main_test_is_a_b_route@3",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "1068": {
      "op": "intc_0 // NoOp",
      "defined_out": [
        "NoOp",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "NoOp"
      ]
    },
    "1069": {
      "op": "==",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "1070": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "1071": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "1073": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "0"
      ]
    },
    "1074": {
      "op": "!=",
      "defined_out": [
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0"
      ]
    },
    "1075": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "1076": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded(len+uint8[])%0#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(len+uint8[])%0#0"
      ]
    },
    "1079": {
      "op": "extract 2 0",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0"
      ]
    },
    "1082": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "reinterpret_Encoded(len+uint8[])%1#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0",
        "reinterpret_Encoded(len+uint8[])%1#0"
      ]
    },
    "1085": {
      "op": "extract 2 0",
      "defined_out": [
        "tmp%7#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%7#0",
        "tmp%8#0"
      ]
    },
    "1088": {
      "op": "txna ApplicationArgs 3",
      "defined_out": [
        "reinterpret_Encoded(uint8)%0#0",
        "tmp%7#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%7#0",
        "tmp%8#0",
        "reinterpret_Encoded(uint8)%0#0"
      ]
    },
    "1091": {
      "op": "btoi",
      "defined_out": [
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0"
      ]
    },
    "1092": {
      "op": "txnas Applications",
      "defined_out": [
        "tmp%10#0",
        "tmp%7#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%7#0",
        "tmp%8#0",
        "tmp%10#0"
      ]
    },
    "1094": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%8#0",
        "tmp%10#0",
        "tmp%7#0"
      ]
    },
    "1096": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%10#0",
        "tmp%7#0",
        "tmp%8#0"
      ]
    },
    "1098": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%7#0",
        "tmp%8#0",
        "tmp%10#0"
      ]
    },
    "1100": {
      "callsub": "test_cases.typed_abi_call.typed_c2c.Greeter.test_is_a_b",
      "op": "callsub test_is_a_b",
      "stack_out": []
    },
    "1103": {
      "op": "intc_3 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1104": {
      "op": "b main_after_inlined_test_cases.typed_abi_call.typed_c2c.Greeter.__puya_arc4_router__@28"
    },
    "1107": {
      "block": "main_bare_routing@23",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%115#0"
      ],
      "stack_out": [
        "tmp%115#0"
      ]
    },
    "1109": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%115#0"
      ],
      "stack_out": [
        "tmp%115#0",
        "0"
      ]
    },
    "1110": {
      "op": "swap",
      "stack_out": [
        "0",
        "tmp%115#0"
      ]
    },
    "1111": {
      "op": "match main___algopy_default_create@24",
      "stack_out": []
    },
    "1115": {
      "block": "main_switch_case_next@26",
      "stack_in": [],
      "op": "b main_after_if_else@27"
    },
    "1118": {
      "block": "main___algopy_default_create@24",
      "stack_in": [],
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%116#0"
      ],
      "stack_out": [
        "tmp%116#0"
      ]
    },
    "1120": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%116#0"
      ],
      "stack_out": [
        "tmp%116#0",
        "0"
      ]
    },
    "1121": {
      "op": "==",
      "defined_out": [
        "tmp%117#0"
      ],
      "stack_out": [
        "tmp%117#0"
      ]
    },
    "1122": {
      "error": "can only call when creating",
      "op": "assert // can only call when creating",
      "stack_out": []
    },
    "1123": {
      "block": "main_after_inlined_test_cases.typed_abi_call.typed_c2c.Greeter.__algopy_default_create@30",
      "stack_in": [],
      "op": "intc_3 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1124": {
      "op": "b main_after_inlined_test_cases.typed_abi_call.typed_c2c.Greeter.__puya_arc4_router__@28"
    },
    "1127": {
      "subroutine": "test_cases.typed_abi_call.typed_c2c.Greeter.test_is_a_b",
      "params": {
        "a#0": "bytes",
        "b#0": "bytes",
        "app#0": "uint64"
      },
      "block": "test_is_a_b",
      "stack_in": [],
      "op": "proto 3 0"
    },
    "1130": {
      "block": "test_is_a_b_block@0",
      "stack_in": [],
      "op": "itxn_begin"
    },
    "1131": {
      "op": "frame_dig -3",
      "defined_out": [
        "a#0 (copy)"
      ],
      "stack_out": [
        "a#0 (copy)"
      ]
    },
    "1133": {
      "op": "len",
      "defined_out": [
        "aggregate%length%0#1"
      ],
      "stack_out": [
        "aggregate%length%0#1"
      ]
    },
    "1134": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%0#1"
      ],
      "stack_out": [
        "aggregate%as_bytes%0#1"
      ]
    },
    "1135": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%length_uint16%0#1"
      ],
      "stack_out": [
        "aggregate%length_uint16%0#1"
      ]
    },
    "1138": {
      "op": "frame_dig -3",
      "stack_out": [
        "aggregate%length_uint16%0#1",
        "a#0 (copy)"
      ]
    },
    "1140": {
      "op": "concat",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1141": {
      "op": "frame_dig -2",
      "defined_out": [
        "b#0 (copy)",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "b#0 (copy)"
      ]
    },
    "1143": {
      "op": "len",
      "defined_out": [
        "aggregate%length%1#1",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "aggregate%length%1#1"
      ]
    },
    "1144": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%1#1",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "aggregate%as_bytes%1#1"
      ]
    },
    "1145": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%length_uint16%1#1",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "aggregate%length_uint16%1#1"
      ]
    },
    "1148": {
      "op": "frame_dig -2",
      "stack_out": [
        "tmp%0#0",
        "aggregate%length_uint16%1#1",
        "b#0 (copy)"
      ]
    },
    "1150": {
      "op": "concat",
      "defined_out": [
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%0%%param_ApplicationArgs_idx_2#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%0%%param_ApplicationArgs_idx_2#0"
      ]
    },
    "1151": {
      "op": "swap",
      "stack_out": [
        "inner_txn_params%0%%param_ApplicationArgs_idx_2#0",
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "1152": {
      "op": "frame_dig -1",
      "defined_out": [
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%0%%param_ApplicationArgs_idx_2#0",
        "inner_txn_params%0%%param_ApplicationID_idx_0#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_ApplicationArgs_idx_2#0",
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%0%%param_ApplicationID_idx_0#0"
      ]
    },
    "1154": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "inner_txn_params%0%%param_ApplicationArgs_idx_2#0",
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "1156": {
      "op": "pushbytes 0xc77212bc // method \"is_a_b(byte[],byte[])void\"",
      "defined_out": [
        "Method(is_a_b(byte[],byte[])void)",
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%0%%param_ApplicationArgs_idx_2#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_ApplicationArgs_idx_2#0",
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0",
        "Method(is_a_b(byte[],byte[])void)"
      ]
    },
    "1162": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "inner_txn_params%0%%param_ApplicationArgs_idx_2#0",
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "1164": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "inner_txn_params%0%%param_ApplicationArgs_idx_2#0"
      ]
    },
    "1166": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "1168": {
      "op": "intc_1 // appl",
      "defined_out": [
        "appl"
      ],
      "stack_out": [
        "appl"
      ]
    },
    "1169": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "1171": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "1172": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "1174": {
      "block": "test_is_a_b_next_txn@1",
      "stack_in": [],
      "op": "itxn_submit"
    },
    "1175": {
      "retsub": true,
      "op": "retsub"
    },
    "1176": {
      "subroutine": "test_cases.typed_abi_call.typed_c2c.Greeter.test_method_selector_kinds",
      "params": {
        "app#0": "uint64"
      },
      "block": "test_method_selector_kinds",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "1179": {
      "block": "test_method_selector_kinds_block@0",
      "stack_in": [],
      "op": "bytec 5 // method \"echo(string)string\"",
      "defined_out": [
        "Method(echo(string)string)"
      ],
      "stack_out": [
        "Method(echo(string)string)"
      ]
    },
    "1181": {
      "op": "dup",
      "stack_out": [
        "Method(echo(string)string)",
        "Method(echo(string)string)"
      ]
    },
    "1182": {
      "op": "==",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1183": {
      "op": "assert",
      "stack_out": []
    },
    "1184": {
      "op": "itxn_begin"
    },
    "1185": {
      "op": "bytec 33 // 0x7465737431",
      "defined_out": [
        "0x7465737431"
      ],
      "stack_out": [
        "0x7465737431"
      ]
    },
    "1187": {
      "op": "len",
      "defined_out": [
        "aggregate%length%0#1"
      ],
      "stack_out": [
        "aggregate%length%0#1"
      ]
    },
    "1188": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%0#1"
      ],
      "stack_out": [
        "aggregate%as_bytes%0#1"
      ]
    },
    "1189": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%length_uint16%0#1"
      ],
      "stack_out": [
        "aggregate%length_uint16%0#1"
      ]
    },
    "1192": {
      "op": "bytec 33 // 0x7465737431",
      "stack_out": [
        "aggregate%length_uint16%0#1",
        "0x7465737431"
      ]
    },
    "1194": {
      "op": "concat",
      "defined_out": [
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "1195": {
      "op": "frame_dig -1",
      "defined_out": [
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%0%%param_ApplicationID_idx_0#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%0%%param_ApplicationID_idx_0#0"
      ]
    },
    "1197": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "1199": {
      "op": "bytec 5 // method \"echo(string)string\"",
      "stack_out": [
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0",
        "Method(echo(string)string)"
      ]
    },
    "1201": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "1203": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "1205": {
      "op": "intc_1 // appl",
      "defined_out": [
        "appl"
      ],
      "stack_out": [
        "appl"
      ]
    },
    "1206": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "1208": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "1209": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "1211": {
      "block": "test_method_selector_kinds_next_txn@1",
      "stack_in": [],
      "op": "itxn_submit"
    },
    "1212": {
      "op": "itxn LastLog",
      "defined_out": [
        "awst_tmp%0#0"
      ],
      "stack_out": [
        "awst_tmp%0#0"
      ]
    },
    "1214": {
      "op": "dup",
      "defined_out": [
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ]
    },
    "1215": {
      "op": "extract 4 0",
      "defined_out": [
        "awst_tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "tmp%1#0"
      ]
    },
    "1218": {
      "op": "swap",
      "stack_out": [
        "tmp%1#0",
        "awst_tmp%0#0"
      ]
    },
    "1219": {
      "op": "extract 0 4",
      "defined_out": [
        "tmp%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%2#0"
      ]
    },
    "1222": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%2#0",
        "0x151f7c75"
      ]
    },
    "1223": {
      "op": "==",
      "defined_out": [
        "tmp%1#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%3#0"
      ]
    },
    "1224": {
      "error": "application log value is not the result of an ABI return",
      "op": "assert // application log value is not the result of an ABI return",
      "defined_out": [
        "result#0"
      ],
      "stack_out": [
        "result#0"
      ]
    },
    "1225": {
      "op": "bytec 34 // 0x6563686f3a207465737431",
      "defined_out": [
        "0x6563686f3a207465737431",
        "result#0"
      ],
      "stack_out": [
        "result#0",
        "0x6563686f3a207465737431"
      ]
    },
    "1227": {
      "op": "len",
      "defined_out": [
        "aggregate%length%1#1",
        "result#0"
      ],
      "stack_out": [
        "result#0",
        "aggregate%length%1#1"
      ]
    },
    "1228": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%1#1",
        "result#0"
      ],
      "stack_out": [
        "result#0",
        "aggregate%as_bytes%1#1"
      ]
    },
    "1229": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%length_uint16%1#1",
        "result#0"
      ],
      "stack_out": [
        "result#0",
        "aggregate%length_uint16%1#1"
      ]
    },
    "1232": {
      "op": "bytec 34 // 0x6563686f3a207465737431",
      "stack_out": [
        "result#0",
        "aggregate%length_uint16%1#1",
        "0x6563686f3a207465737431"
      ]
    },
    "1234": {
      "op": "concat",
      "defined_out": [
        "encoded%1#0",
        "result#0"
      ],
      "stack_out": [
        "result#0",
        "encoded%1#0"
      ]
    },
    "1235": {
      "op": "==",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "1236": {
      "op": "assert",
      "stack_out": []
    },
    "1237": {
      "op": "itxn_begin"
    },
    "1238": {
      "op": "bytec 35 // 0x7465737432",
      "defined_out": [
        "0x7465737432"
      ],
      "stack_out": [
        "0x7465737432"
      ]
    },
    "1240": {
      "op": "len",
      "defined_out": [
        "aggregate%length%2#1"
      ],
      "stack_out": [
        "aggregate%length%2#1"
      ]
    },
    "1241": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%2#1"
      ],
      "stack_out": [
        "aggregate%as_bytes%2#1"
      ]
    },
    "1242": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%length_uint16%2#1"
      ],
      "stack_out": [
        "aggregate%length_uint16%2#1"
      ]
    },
    "1245": {
      "op": "bytec 35 // 0x7465737432",
      "stack_out": [
        "aggregate%length_uint16%2#1",
        "0x7465737432"
      ]
    },
    "1247": {
      "op": "concat",
      "defined_out": [
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0"
      ],
      "stack_out": [
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "1248": {
      "op": "frame_dig -1",
      "defined_out": [
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%1%%param_ApplicationID_idx_0#0"
      ],
      "stack_out": [
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%1%%param_ApplicationID_idx_0#0"
      ]
    },
    "1250": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "1252": {
      "op": "bytec 5 // method \"echo(string)string\"",
      "defined_out": [
        "Method(echo(string)string)",
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0"
      ],
      "stack_out": [
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0",
        "Method(echo(string)string)"
      ]
    },
    "1254": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "1256": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "1258": {
      "op": "intc_1 // appl",
      "defined_out": [
        "appl"
      ],
      "stack_out": [
        "appl"
      ]
    },
    "1259": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "1261": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "1262": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "1264": {
      "block": "test_method_selector_kinds_next_txn@2",
      "stack_in": [],
      "op": "itxn_submit"
    },
    "1265": {
      "op": "itxn LastLog",
      "defined_out": [
        "awst_tmp%1#0"
      ],
      "stack_out": [
        "awst_tmp%1#0"
      ]
    },
    "1267": {
      "op": "dup",
      "defined_out": [
        "awst_tmp%1#0",
        "awst_tmp%1#0 (copy)"
      ],
      "stack_out": [
        "awst_tmp%1#0",
        "awst_tmp%1#0 (copy)"
      ]
    },
    "1268": {
      "op": "extract 4 0",
      "defined_out": [
        "awst_tmp%1#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "awst_tmp%1#0",
        "tmp%5#0"
      ]
    },
    "1271": {
      "op": "swap",
      "stack_out": [
        "tmp%5#0",
        "awst_tmp%1#0"
      ]
    },
    "1272": {
      "op": "extract 0 4",
      "defined_out": [
        "tmp%5#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "tmp%6#0"
      ]
    },
    "1275": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%5#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "tmp%6#0",
        "0x151f7c75"
      ]
    },
    "1276": {
      "op": "==",
      "defined_out": [
        "tmp%5#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "tmp%7#0"
      ]
    },
    "1277": {
      "error": "application log value is not the result of an ABI return",
      "op": "assert // application log value is not the result of an ABI return",
      "defined_out": [
        "result#0"
      ],
      "stack_out": [
        "result#0"
      ]
    },
    "1278": {
      "op": "bytec 36 // 0x6563686f3a207465737432",
      "defined_out": [
        "0x6563686f3a207465737432",
        "result#0"
      ],
      "stack_out": [
        "result#0",
        "0x6563686f3a207465737432"
      ]
    },
    "1280": {
      "op": "len",
      "defined_out": [
        "aggregate%length%3#1",
        "result#0"
      ],
      "stack_out": [
        "result#0",
        "aggregate%length%3#1"
      ]
    },
    "1281": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%3#1",
        "result#0"
      ],
      "stack_out": [
        "result#0",
        "aggregate%as_bytes%3#1"
      ]
    },
    "1282": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%length_uint16%3#1",
        "result#0"
      ],
      "stack_out": [
        "result#0",
        "aggregate%length_uint16%3#1"
      ]
    },
    "1285": {
      "op": "bytec 36 // 0x6563686f3a207465737432",
      "stack_out": [
        "result#0",
        "aggregate%length_uint16%3#1",
        "0x6563686f3a207465737432"
      ]
    },
    "1287": {
      "op": "concat",
      "defined_out": [
        "encoded%3#0",
        "result#0"
      ],
      "stack_out": [
        "result#0",
        "encoded%3#0"
      ]
    },
    "1288": {
      "op": "==",
      "defined_out": [
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0"
      ]
    },
    "1289": {
      "op": "assert",
      "stack_out": []
    },
    "1290": {
      "op": "itxn_begin"
    },
    "1291": {
      "op": "bytec 37 // 0x7465737433",
      "defined_out": [
        "0x7465737433"
      ],
      "stack_out": [
        "0x7465737433"
      ]
    },
    "1293": {
      "op": "len",
      "defined_out": [
        "aggregate%length%4#1"
      ],
      "stack_out": [
        "aggregate%length%4#1"
      ]
    },
    "1294": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%4#1"
      ],
      "stack_out": [
        "aggregate%as_bytes%4#1"
      ]
    },
    "1295": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%length_uint16%4#1"
      ],
      "stack_out": [
        "aggregate%length_uint16%4#1"
      ]
    },
    "1298": {
      "op": "bytec 37 // 0x7465737433",
      "stack_out": [
        "aggregate%length_uint16%4#1",
        "0x7465737433"
      ]
    },
    "1300": {
      "op": "concat",
      "defined_out": [
        "inner_txn_params%2%%param_ApplicationArgs_idx_1#0"
      ],
      "stack_out": [
        "inner_txn_params%2%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "1301": {
      "op": "frame_dig -1",
      "defined_out": [
        "inner_txn_params%2%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%2%%param_ApplicationID_idx_0#0"
      ],
      "stack_out": [
        "inner_txn_params%2%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%2%%param_ApplicationID_idx_0#0"
      ]
    },
    "1303": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "inner_txn_params%2%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "1305": {
      "op": "bytec 5 // method \"echo(string)string\"",
      "defined_out": [
        "Method(echo(string)string)",
        "inner_txn_params%2%%param_ApplicationArgs_idx_1#0"
      ],
      "stack_out": [
        "inner_txn_params%2%%param_ApplicationArgs_idx_1#0",
        "Method(echo(string)string)"
      ]
    },
    "1307": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "inner_txn_params%2%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "1309": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "1311": {
      "op": "intc_1 // appl",
      "defined_out": [
        "appl"
      ],
      "stack_out": [
        "appl"
      ]
    },
    "1312": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "1314": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "1315": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "1317": {
      "block": "test_method_selector_kinds_next_txn@3",
      "stack_in": [],
      "op": "itxn_submit"
    },
    "1318": {
      "op": "itxn LastLog",
      "defined_out": [
        "awst_tmp%2#0"
      ],
      "stack_out": [
        "awst_tmp%2#0"
      ]
    },
    "1320": {
      "op": "dup",
      "defined_out": [
        "awst_tmp%2#0",
        "awst_tmp%2#0 (copy)"
      ],
      "stack_out": [
        "awst_tmp%2#0",
        "awst_tmp%2#0 (copy)"
      ]
    },
    "1321": {
      "op": "extract 4 0",
      "defined_out": [
        "awst_tmp%2#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "awst_tmp%2#0",
        "tmp%9#0"
      ]
    },
    "1324": {
      "op": "swap",
      "stack_out": [
        "tmp%9#0",
        "awst_tmp%2#0"
      ]
    },
    "1325": {
      "op": "extract 0 4",
      "defined_out": [
        "tmp%10#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0",
        "tmp%10#0"
      ]
    },
    "1328": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%10#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0",
        "tmp%10#0",
        "0x151f7c75"
      ]
    },
    "1329": {
      "op": "==",
      "defined_out": [
        "tmp%11#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0",
        "tmp%11#0"
      ]
    },
    "1330": {
      "error": "application log value is not the result of an ABI return",
      "op": "assert // application log value is not the result of an ABI return",
      "defined_out": [
        "result#0"
      ],
      "stack_out": [
        "result#0"
      ]
    },
    "1331": {
      "op": "bytec 38 // 0x6563686f3a207465737433",
      "defined_out": [
        "0x6563686f3a207465737433",
        "result#0"
      ],
      "stack_out": [
        "result#0",
        "0x6563686f3a207465737433"
      ]
    },
    "1333": {
      "op": "len",
      "defined_out": [
        "aggregate%length%5#1",
        "result#0"
      ],
      "stack_out": [
        "result#0",
        "aggregate%length%5#1"
      ]
    },
    "1334": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%5#1",
        "result#0"
      ],
      "stack_out": [
        "result#0",
        "aggregate%as_bytes%5#1"
      ]
    },
    "1335": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%length_uint16%5#1",
        "result#0"
      ],
      "stack_out": [
        "result#0",
        "aggregate%length_uint16%5#1"
      ]
    },
    "1338": {
      "op": "bytec 38 // 0x6563686f3a207465737433",
      "stack_out": [
        "result#0",
        "aggregate%length_uint16%5#1",
        "0x6563686f3a207465737433"
      ]
    },
    "1340": {
      "op": "concat",
      "defined_out": [
        "encoded%5#0",
        "result#0"
      ],
      "stack_out": [
        "result#0",
        "encoded%5#0"
      ]
    },
    "1341": {
      "op": "==",
      "defined_out": [
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%12#0"
      ]
    },
    "1342": {
      "op": "assert",
      "stack_out": []
    },
    "1343": {
      "op": "itxn_begin"
    },
    "1344": {
      "op": "bytec 39 // 0x7465737434",
      "defined_out": [
        "0x7465737434"
      ],
      "stack_out": [
        "0x7465737434"
      ]
    },
    "1346": {
      "op": "len",
      "defined_out": [
        "aggregate%length%6#1"
      ],
      "stack_out": [
        "aggregate%length%6#1"
      ]
    },
    "1347": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%6#1"
      ],
      "stack_out": [
        "aggregate%as_bytes%6#1"
      ]
    },
    "1348": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%length_uint16%6#1"
      ],
      "stack_out": [
        "aggregate%length_uint16%6#1"
      ]
    },
    "1351": {
      "op": "bytec 39 // 0x7465737434",
      "stack_out": [
        "aggregate%length_uint16%6#1",
        "0x7465737434"
      ]
    },
    "1353": {
      "op": "concat",
      "defined_out": [
        "inner_txn_params%3%%param_ApplicationArgs_idx_1#0"
      ],
      "stack_out": [
        "inner_txn_params%3%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "1354": {
      "op": "frame_dig -1",
      "defined_out": [
        "inner_txn_params%3%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%3%%param_ApplicationID_idx_0#0"
      ],
      "stack_out": [
        "inner_txn_params%3%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%3%%param_ApplicationID_idx_0#0"
      ]
    },
    "1356": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "inner_txn_params%3%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "1358": {
      "op": "bytec 5 // method \"echo(string)string\"",
      "defined_out": [
        "Method(echo(string)string)",
        "inner_txn_params%3%%param_ApplicationArgs_idx_1#0"
      ],
      "stack_out": [
        "inner_txn_params%3%%param_ApplicationArgs_idx_1#0",
        "Method(echo(string)string)"
      ]
    },
    "1360": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "inner_txn_params%3%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "1362": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "1364": {
      "op": "intc_1 // appl",
      "defined_out": [
        "appl"
      ],
      "stack_out": [
        "appl"
      ]
    },
    "1365": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "1367": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "1368": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "1370": {
      "block": "test_method_selector_kinds_next_txn@4",
      "stack_in": [],
      "op": "itxn_submit"
    },
    "1371": {
      "op": "itxn LastLog",
      "defined_out": [
        "awst_tmp%3#0"
      ],
      "stack_out": [
        "awst_tmp%3#0"
      ]
    },
    "1373": {
      "op": "dup",
      "defined_out": [
        "awst_tmp%3#0",
        "awst_tmp%3#0 (copy)"
      ],
      "stack_out": [
        "awst_tmp%3#0",
        "awst_tmp%3#0 (copy)"
      ]
    },
    "1374": {
      "op": "extract 4 0",
      "defined_out": [
        "awst_tmp%3#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "awst_tmp%3#0",
        "tmp%13#0"
      ]
    },
    "1377": {
      "op": "swap",
      "stack_out": [
        "tmp%13#0",
        "awst_tmp%3#0"
      ]
    },
    "1378": {
      "op": "extract 0 4",
      "defined_out": [
        "tmp%13#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%13#0",
        "tmp%14#0"
      ]
    },
    "1381": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%13#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%13#0",
        "tmp%14#0",
        "0x151f7c75"
      ]
    },
    "1382": {
      "op": "==",
      "defined_out": [
        "tmp%13#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "tmp%13#0",
        "tmp%15#0"
      ]
    },
    "1383": {
      "error": "application log value is not the result of an ABI return",
      "op": "assert // application log value is not the result of an ABI return",
      "defined_out": [
        "result#0"
      ],
      "stack_out": [
        "result#0"
      ]
    },
    "1384": {
      "op": "bytec 40 // 0x6563686f3a207465737434",
      "defined_out": [
        "0x6563686f3a207465737434",
        "result#0"
      ],
      "stack_out": [
        "result#0",
        "0x6563686f3a207465737434"
      ]
    },
    "1386": {
      "op": "len",
      "defined_out": [
        "aggregate%length%7#1",
        "result#0"
      ],
      "stack_out": [
        "result#0",
        "aggregate%length%7#1"
      ]
    },
    "1387": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%7#1",
        "result#0"
      ],
      "stack_out": [
        "result#0",
        "aggregate%as_bytes%7#1"
      ]
    },
    "1388": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%length_uint16%7#1",
        "result#0"
      ],
      "stack_out": [
        "result#0",
        "aggregate%length_uint16%7#1"
      ]
    },
    "1391": {
      "op": "bytec 40 // 0x6563686f3a207465737434",
      "stack_out": [
        "result#0",
        "aggregate%length_uint16%7#1",
        "0x6563686f3a207465737434"
      ]
    },
    "1393": {
      "op": "concat",
      "defined_out": [
        "encoded%7#0",
        "result#0"
      ],
      "stack_out": [
        "result#0",
        "encoded%7#0"
      ]
    },
    "1394": {
      "op": "==",
      "defined_out": [
        "tmp%16#0"
      ],
      "stack_out": [
        "tmp%16#0"
      ]
    },
    "1395": {
      "op": "assert",
      "stack_out": []
    },
    "1396": {
      "op": "itxn_begin"
    },
    "1397": {
      "op": "bytec 41 // 0x7465737435",
      "defined_out": [
        "0x7465737435"
      ],
      "stack_out": [
        "0x7465737435"
      ]
    },
    "1399": {
      "op": "len",
      "defined_out": [
        "aggregate%length%8#1"
      ],
      "stack_out": [
        "aggregate%length%8#1"
      ]
    },
    "1400": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%8#1"
      ],
      "stack_out": [
        "aggregate%as_bytes%8#1"
      ]
    },
    "1401": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%length_uint16%8#1"
      ],
      "stack_out": [
        "aggregate%length_uint16%8#1"
      ]
    },
    "1404": {
      "op": "bytec 41 // 0x7465737435",
      "stack_out": [
        "aggregate%length_uint16%8#1",
        "0x7465737435"
      ]
    },
    "1406": {
      "op": "concat",
      "defined_out": [
        "inner_txn_params%4%%param_ApplicationArgs_idx_1#0"
      ],
      "stack_out": [
        "inner_txn_params%4%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "1407": {
      "op": "frame_dig -1",
      "defined_out": [
        "inner_txn_params%4%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%4%%param_ApplicationID_idx_0#0"
      ],
      "stack_out": [
        "inner_txn_params%4%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%4%%param_ApplicationID_idx_0#0"
      ]
    },
    "1409": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "inner_txn_params%4%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "1411": {
      "op": "bytec 5 // method \"echo(string)string\"",
      "defined_out": [
        "Method(echo(string)string)",
        "inner_txn_params%4%%param_ApplicationArgs_idx_1#0"
      ],
      "stack_out": [
        "inner_txn_params%4%%param_ApplicationArgs_idx_1#0",
        "Method(echo(string)string)"
      ]
    },
    "1413": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "inner_txn_params%4%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "1415": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "1417": {
      "op": "intc_1 // appl",
      "defined_out": [
        "appl"
      ],
      "stack_out": [
        "appl"
      ]
    },
    "1418": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "1420": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "1421": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "1423": {
      "block": "test_method_selector_kinds_next_txn@5",
      "stack_in": [],
      "op": "itxn_submit"
    },
    "1424": {
      "op": "itxn LastLog",
      "defined_out": [
        "awst_tmp%4#0"
      ],
      "stack_out": [
        "awst_tmp%4#0"
      ]
    },
    "1426": {
      "op": "dup",
      "defined_out": [
        "awst_tmp%4#0",
        "awst_tmp%4#0 (copy)"
      ],
      "stack_out": [
        "awst_tmp%4#0",
        "awst_tmp%4#0 (copy)"
      ]
    },
    "1427": {
      "op": "extract 4 0",
      "defined_out": [
        "awst_tmp%4#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "awst_tmp%4#0",
        "tmp%17#0"
      ]
    },
    "1430": {
      "op": "swap",
      "stack_out": [
        "tmp%17#0",
        "awst_tmp%4#0"
      ]
    },
    "1431": {
      "op": "extract 0 4",
      "defined_out": [
        "tmp%17#0",
        "tmp%18#0"
      ],
      "stack_out": [
        "tmp%17#0",
        "tmp%18#0"
      ]
    },
    "1434": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%17#0",
        "tmp%18#0"
      ],
      "stack_out": [
        "tmp%17#0",
        "tmp%18#0",
        "0x151f7c75"
      ]
    },
    "1435": {
      "op": "==",
      "defined_out": [
        "tmp%17#0",
        "tmp%19#0"
      ],
      "stack_out": [
        "tmp%17#0",
        "tmp%19#0"
      ]
    },
    "1436": {
      "error": "application log value is not the result of an ABI return",
      "op": "assert // application log value is not the result of an ABI return",
      "defined_out": [
        "result#0"
      ],
      "stack_out": [
        "result#0"
      ]
    },
    "1437": {
      "op": "bytec 42 // 0x6563686f3a207465737435",
      "defined_out": [
        "0x6563686f3a207465737435",
        "result#0"
      ],
      "stack_out": [
        "result#0",
        "0x6563686f3a207465737435"
      ]
    },
    "1439": {
      "op": "len",
      "defined_out": [
        "aggregate%length%9#1",
        "result#0"
      ],
      "stack_out": [
        "result#0",
        "aggregate%length%9#1"
      ]
    },
    "1440": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%9#1",
        "result#0"
      ],
      "stack_out": [
        "result#0",
        "aggregate%as_bytes%9#1"
      ]
    },
    "1441": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%length_uint16%9#1",
        "result#0"
      ],
      "stack_out": [
        "result#0",
        "aggregate%length_uint16%9#1"
      ]
    },
    "1444": {
      "op": "bytec 42 // 0x6563686f3a207465737435",
      "stack_out": [
        "result#0",
        "aggregate%length_uint16%9#1",
        "0x6563686f3a207465737435"
      ]
    },
    "1446": {
      "op": "concat",
      "defined_out": [
        "encoded%9#0",
        "result#0"
      ],
      "stack_out": [
        "result#0",
        "encoded%9#0"
      ]
    },
    "1447": {
      "op": "==",
      "defined_out": [
        "tmp%20#0"
      ],
      "stack_out": [
        "tmp%20#0"
      ]
    },
    "1448": {
      "op": "assert",
      "stack_out": []
    },
    "1449": {
      "retsub": true,
      "op": "retsub"
    },
    "1450": {
      "subroutine": "test_cases.typed_abi_call.typed_c2c.Greeter.test_method_overload",
      "params": {
        "app#0": "uint64"
      },
      "block": "test_method_overload",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "1453": {
      "block": "test_method_overload_block@0",
      "stack_in": [],
      "op": "itxn_begin"
    },
    "1454": {
      "op": "bytec 43 // 0x7479706564202b2069676e6f7265",
      "defined_out": [
        "0x7479706564202b2069676e6f7265"
      ],
      "stack_out": [
        "0x7479706564202b2069676e6f7265"
      ]
    },
    "1456": {
      "op": "len",
      "defined_out": [
        "aggregate%length%0#1"
      ],
      "stack_out": [
        "aggregate%length%0#1"
      ]
    },
    "1457": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%0#1"
      ],
      "stack_out": [
        "aggregate%as_bytes%0#1"
      ]
    },
    "1458": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%length_uint16%0#1"
      ],
      "stack_out": [
        "aggregate%length_uint16%0#1"
      ]
    },
    "1461": {
      "op": "bytec 43 // 0x7479706564202b2069676e6f7265",
      "stack_out": [
        "aggregate%length_uint16%0#1",
        "0x7479706564202b2069676e6f7265"
      ]
    },
    "1463": {
      "op": "concat",
      "defined_out": [
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "1464": {
      "op": "frame_dig -1",
      "defined_out": [
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%0%%param_ApplicationID_idx_0#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%0%%param_ApplicationID_idx_0#0"
      ]
    },
    "1466": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "1468": {
      "op": "bytec 5 // method \"echo(string)string\"",
      "defined_out": [
        "Method(echo(string)string)",
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0",
        "Method(echo(string)string)"
      ]
    },
    "1470": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "1472": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "1474": {
      "op": "intc_1 // appl",
      "defined_out": [
        "appl"
      ],
      "stack_out": [
        "appl"
      ]
    },
    "1475": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "1477": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "1478": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "1480": {
      "block": "test_method_overload_next_txn@1",
      "stack_in": [],
      "op": "itxn_submit"
    },
    "1481": {
      "op": "itxn LastLog",
      "defined_out": [
        "awst_tmp%0#0"
      ],
      "stack_out": [
        "awst_tmp%0#0"
      ]
    },
    "1483": {
      "op": "extract 0 4",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "1486": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "0x151f7c75"
      ]
    },
    "1487": {
      "op": "==",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "1488": {
      "error": "application log value is not the result of an ABI return",
      "op": "assert // application log value is not the result of an ABI return",
      "stack_out": []
    },
    "1489": {
      "op": "itxn LastLog",
      "defined_out": [
        "awst_tmp%1#0"
      ],
      "stack_out": [
        "awst_tmp%1#0"
      ]
    },
    "1491": {
      "op": "dup",
      "defined_out": [
        "awst_tmp%1#0",
        "awst_tmp%1#0 (copy)"
      ],
      "stack_out": [
        "awst_tmp%1#0",
        "awst_tmp%1#0 (copy)"
      ]
    },
    "1492": {
      "op": "extract 4 0",
      "defined_out": [
        "awst_tmp%1#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "awst_tmp%1#0",
        "tmp%3#0"
      ]
    },
    "1495": {
      "op": "swap",
      "stack_out": [
        "tmp%3#0",
        "awst_tmp%1#0"
      ]
    },
    "1496": {
      "op": "extract 0 4",
      "defined_out": [
        "tmp%3#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "tmp%4#0"
      ]
    },
    "1499": {
      "op": "bytec_0 // 0x151f7c75",
      "stack_out": [
        "tmp%3#0",
        "tmp%4#0",
        "0x151f7c75"
      ]
    },
    "1500": {
      "op": "==",
      "defined_out": [
        "tmp%3#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "tmp%5#0"
      ]
    },
    "1501": {
      "error": "application log value is not the result of an ABI return",
      "op": "assert // application log value is not the result of an ABI return",
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "1502": {
      "op": "bytec 44 // 0x6563686f3a207479706564202b2069676e6f7265",
      "defined_out": [
        "0x6563686f3a207479706564202b2069676e6f7265",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "0x6563686f3a207479706564202b2069676e6f7265"
      ]
    },
    "1504": {
      "op": "len",
      "defined_out": [
        "aggregate%length%1#1",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "aggregate%length%1#1"
      ]
    },
    "1505": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%1#1",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "aggregate%as_bytes%1#1"
      ]
    },
    "1506": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%length_uint16%1#1",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "aggregate%length_uint16%1#1"
      ]
    },
    "1509": {
      "op": "bytec 44 // 0x6563686f3a207479706564202b2069676e6f7265",
      "stack_out": [
        "tmp%3#0",
        "aggregate%length_uint16%1#1",
        "0x6563686f3a207479706564202b2069676e6f7265"
      ]
    },
    "1511": {
      "op": "concat",
      "defined_out": [
        "encoded%1#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "encoded%1#0"
      ]
    },
    "1512": {
      "op": "==",
      "defined_out": [
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0"
      ]
    },
    "1513": {
      "op": "assert",
      "stack_out": []
    },
    "1514": {
      "op": "itxn_begin"
    },
    "1515": {
      "op": "bytec 45 // 0x756e7479706564202b2069676e6f7265",
      "defined_out": [
        "0x756e7479706564202b2069676e6f7265"
      ],
      "stack_out": [
        "0x756e7479706564202b2069676e6f7265"
      ]
    },
    "1517": {
      "op": "len",
      "defined_out": [
        "aggregate%length%2#1"
      ],
      "stack_out": [
        "aggregate%length%2#1"
      ]
    },
    "1518": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%2#1"
      ],
      "stack_out": [
        "aggregate%as_bytes%2#1"
      ]
    },
    "1519": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%length_uint16%2#1"
      ],
      "stack_out": [
        "aggregate%length_uint16%2#1"
      ]
    },
    "1522": {
      "op": "bytec 45 // 0x756e7479706564202b2069676e6f7265",
      "stack_out": [
        "aggregate%length_uint16%2#1",
        "0x756e7479706564202b2069676e6f7265"
      ]
    },
    "1524": {
      "op": "concat",
      "defined_out": [
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0"
      ],
      "stack_out": [
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "1525": {
      "op": "frame_dig -1",
      "defined_out": [
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%1%%param_ApplicationID_idx_0#0"
      ],
      "stack_out": [
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%1%%param_ApplicationID_idx_0#0"
      ]
    },
    "1527": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "1529": {
      "op": "bytec 5 // method \"echo(string)string\"",
      "defined_out": [
        "Method(echo(string)string)",
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0"
      ],
      "stack_out": [
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0",
        "Method(echo(string)string)"
      ]
    },
    "1531": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "1533": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "1535": {
      "op": "intc_1 // appl",
      "defined_out": [
        "appl"
      ],
      "stack_out": [
        "appl"
      ]
    },
    "1536": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "1538": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "1539": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "1541": {
      "block": "test_method_overload_next_txn@2",
      "stack_in": [],
      "op": "itxn_submit"
    },
    "1542": {
      "op": "itxn LastLog",
      "defined_out": [
        "awst_tmp%2#0"
      ],
      "stack_out": [
        "awst_tmp%2#0"
      ]
    },
    "1544": {
      "op": "dup",
      "defined_out": [
        "awst_tmp%2#0",
        "awst_tmp%2#0 (copy)"
      ],
      "stack_out": [
        "awst_tmp%2#0",
        "awst_tmp%2#0 (copy)"
      ]
    },
    "1545": {
      "op": "extract 4 0",
      "defined_out": [
        "awst_tmp%2#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "awst_tmp%2#0",
        "tmp%7#0"
      ]
    },
    "1548": {
      "op": "swap",
      "stack_out": [
        "tmp%7#0",
        "awst_tmp%2#0"
      ]
    },
    "1549": {
      "op": "extract 0 4",
      "defined_out": [
        "tmp%7#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%7#0",
        "tmp%8#0"
      ]
    },
    "1552": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%7#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%7#0",
        "tmp%8#0",
        "0x151f7c75"
      ]
    },
    "1553": {
      "op": "==",
      "defined_out": [
        "tmp%7#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%7#0",
        "tmp%9#0"
      ]
    },
    "1554": {
      "error": "application log value is not the result of an ABI return",
      "op": "assert // application log value is not the result of an ABI return",
      "stack_out": [
        "tmp%7#0"
      ]
    },
    "1555": {
      "op": "bytec 46 // 0x6563686f3a20756e7479706564202b2069676e6f7265",
      "defined_out": [
        "0x6563686f3a20756e7479706564202b2069676e6f7265",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0",
        "0x6563686f3a20756e7479706564202b2069676e6f7265"
      ]
    },
    "1557": {
      "op": "len",
      "defined_out": [
        "aggregate%length%3#1",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0",
        "aggregate%length%3#1"
      ]
    },
    "1558": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%3#1",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0",
        "aggregate%as_bytes%3#1"
      ]
    },
    "1559": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%length_uint16%3#1",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0",
        "aggregate%length_uint16%3#1"
      ]
    },
    "1562": {
      "op": "bytec 46 // 0x6563686f3a20756e7479706564202b2069676e6f7265",
      "stack_out": [
        "tmp%7#0",
        "aggregate%length_uint16%3#1",
        "0x6563686f3a20756e7479706564202b2069676e6f7265"
      ]
    },
    "1564": {
      "op": "concat",
      "defined_out": [
        "encoded%3#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0",
        "encoded%3#0"
      ]
    },
    "1565": {
      "op": "==",
      "defined_out": [
        "tmp%10#0"
      ],
      "stack_out": [
        "tmp%10#0"
      ]
    },
    "1566": {
      "op": "assert",
      "stack_out": []
    },
    "1567": {
      "op": "itxn_begin"
    },
    "1568": {
      "op": "bytec 47 // 0x7475706c65",
      "defined_out": [
        "0x7475706c65"
      ],
      "stack_out": [
        "0x7475706c65"
      ]
    },
    "1570": {
      "op": "len",
      "defined_out": [
        "aggregate%length%4#1"
      ],
      "stack_out": [
        "aggregate%length%4#1"
      ]
    },
    "1571": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%4#1"
      ],
      "stack_out": [
        "aggregate%as_bytes%4#1"
      ]
    },
    "1572": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%length_uint16%4#1"
      ],
      "stack_out": [
        "aggregate%length_uint16%4#1"
      ]
    },
    "1575": {
      "op": "bytec 47 // 0x7475706c65",
      "stack_out": [
        "aggregate%length_uint16%4#1",
        "0x7475706c65"
      ]
    },
    "1577": {
      "op": "concat",
      "defined_out": [
        "inner_txn_params%2%%param_ApplicationArgs_idx_1#0"
      ],
      "stack_out": [
        "inner_txn_params%2%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "1578": {
      "op": "frame_dig -1",
      "defined_out": [
        "inner_txn_params%2%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%2%%param_ApplicationID_idx_0#0"
      ],
      "stack_out": [
        "inner_txn_params%2%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%2%%param_ApplicationID_idx_0#0"
      ]
    },
    "1580": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "inner_txn_params%2%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "1582": {
      "op": "bytec 5 // method \"echo(string)string\"",
      "defined_out": [
        "Method(echo(string)string)",
        "inner_txn_params%2%%param_ApplicationArgs_idx_1#0"
      ],
      "stack_out": [
        "inner_txn_params%2%%param_ApplicationArgs_idx_1#0",
        "Method(echo(string)string)"
      ]
    },
    "1584": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "inner_txn_params%2%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "1586": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "1588": {
      "op": "intc_1 // appl",
      "defined_out": [
        "appl"
      ],
      "stack_out": [
        "appl"
      ]
    },
    "1589": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "1591": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "1592": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "1594": {
      "block": "test_method_overload_next_txn@3",
      "stack_in": [],
      "op": "itxn_submit"
    },
    "1595": {
      "op": "itxn LastLog",
      "defined_out": [
        "awst_tmp%3#0"
      ],
      "stack_out": [
        "awst_tmp%3#0"
      ]
    },
    "1597": {
      "op": "dup",
      "defined_out": [
        "awst_tmp%3#0",
        "awst_tmp%3#0 (copy)"
      ],
      "stack_out": [
        "awst_tmp%3#0",
        "awst_tmp%3#0 (copy)"
      ]
    },
    "1598": {
      "op": "extract 4 0",
      "defined_out": [
        "awst_tmp%3#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "awst_tmp%3#0",
        "tmp%11#0"
      ]
    },
    "1601": {
      "op": "swap",
      "stack_out": [
        "tmp%11#0",
        "awst_tmp%3#0"
      ]
    },
    "1602": {
      "op": "extract 0 4",
      "defined_out": [
        "tmp%11#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "tmp%12#0"
      ]
    },
    "1605": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%11#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "tmp%12#0",
        "0x151f7c75"
      ]
    },
    "1606": {
      "op": "==",
      "defined_out": [
        "tmp%11#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "tmp%13#0"
      ]
    },
    "1607": {
      "error": "application log value is not the result of an ABI return",
      "op": "assert // application log value is not the result of an ABI return",
      "defined_out": [
        "result.0#0"
      ],
      "stack_out": [
        "result.0#0"
      ]
    },
    "1608": {
      "op": "itxn LastLog",
      "defined_out": [
        "result.0#0",
        "result.1.LastLog#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1.LastLog#0"
      ]
    },
    "1610": {
      "op": "swap",
      "stack_out": [
        "result.1.LastLog#0",
        "result.0#0"
      ]
    },
    "1611": {
      "op": "bytec 13 // 0x6563686f3a207475706c65",
      "defined_out": [
        "0x6563686f3a207475706c65",
        "result.0#0",
        "result.1.LastLog#0"
      ],
      "stack_out": [
        "result.1.LastLog#0",
        "result.0#0",
        "0x6563686f3a207475706c65"
      ]
    },
    "1613": {
      "op": "len",
      "defined_out": [
        "aggregate%length%5#1",
        "result.0#0",
        "result.1.LastLog#0"
      ],
      "stack_out": [
        "result.1.LastLog#0",
        "result.0#0",
        "aggregate%length%5#1"
      ]
    },
    "1614": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%5#1",
        "result.0#0",
        "result.1.LastLog#0"
      ],
      "stack_out": [
        "result.1.LastLog#0",
        "result.0#0",
        "aggregate%as_bytes%5#1"
      ]
    },
    "1615": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%length_uint16%5#1",
        "result.0#0",
        "result.1.LastLog#0"
      ],
      "stack_out": [
        "result.1.LastLog#0",
        "result.0#0",
        "aggregate%length_uint16%5#1"
      ]
    },
    "1618": {
      "op": "bytec 13 // 0x6563686f3a207475706c65",
      "stack_out": [
        "result.1.LastLog#0",
        "result.0#0",
        "aggregate%length_uint16%5#1",
        "0x6563686f3a207475706c65"
      ]
    },
    "1620": {
      "op": "concat",
      "defined_out": [
        "encoded%5#0",
        "result.0#0",
        "result.1.LastLog#0"
      ],
      "stack_out": [
        "result.1.LastLog#0",
        "result.0#0",
        "encoded%5#0"
      ]
    },
    "1621": {
      "op": "==",
      "defined_out": [
        "result.1.LastLog#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "result.1.LastLog#0",
        "tmp%14#0"
      ]
    },
    "1622": {
      "op": "assert",
      "stack_out": [
        "result.1.LastLog#0"
      ]
    },
    "1623": {
      "op": "dup",
      "defined_out": [
        "result.1.LastLog#0",
        "result.1.LastLog#0 (copy)"
      ],
      "stack_out": [
        "result.1.LastLog#0",
        "result.1.LastLog#0 (copy)"
      ]
    },
    "1624": {
      "op": "extract 4 0",
      "defined_out": [
        "result.1.LastLog#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "result.1.LastLog#0",
        "tmp%15#0"
      ]
    },
    "1627": {
      "op": "swap",
      "stack_out": [
        "tmp%15#0",
        "result.1.LastLog#0"
      ]
    },
    "1628": {
      "op": "extract 0 4",
      "defined_out": [
        "tmp%15#0",
        "tmp%16#0"
      ],
      "stack_out": [
        "tmp%15#0",
        "tmp%16#0"
      ]
    },
    "1631": {
      "op": "bytec_0 // 0x151f7c75",
      "stack_out": [
        "tmp%15#0",
        "tmp%16#0",
        "0x151f7c75"
      ]
    },
    "1632": {
      "op": "==",
      "defined_out": [
        "tmp%15#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "tmp%15#0",
        "tmp%17#0"
      ]
    },
    "1633": {
      "error": "application log value is not the result of an ABI return",
      "op": "assert // application log value is not the result of an ABI return",
      "stack_out": [
        "tmp%15#0"
      ]
    },
    "1634": {
      "op": "bytec 13 // 0x6563686f3a207475706c65",
      "stack_out": [
        "tmp%15#0",
        "0x6563686f3a207475706c65"
      ]
    },
    "1636": {
      "op": "len",
      "defined_out": [
        "aggregate%length%6#1",
        "tmp%15#0"
      ],
      "stack_out": [
        "tmp%15#0",
        "aggregate%length%6#1"
      ]
    },
    "1637": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%6#1",
        "tmp%15#0"
      ],
      "stack_out": [
        "tmp%15#0",
        "aggregate%as_bytes%6#1"
      ]
    },
    "1638": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%length_uint16%6#1",
        "tmp%15#0"
      ],
      "stack_out": [
        "tmp%15#0",
        "aggregate%length_uint16%6#1"
      ]
    },
    "1641": {
      "op": "bytec 13 // 0x6563686f3a207475706c65",
      "stack_out": [
        "tmp%15#0",
        "aggregate%length_uint16%6#1",
        "0x6563686f3a207475706c65"
      ]
    },
    "1643": {
      "op": "concat",
      "defined_out": [
        "encoded%6#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "tmp%15#0",
        "encoded%6#0"
      ]
    },
    "1644": {
      "op": "==",
      "defined_out": [
        "tmp%18#0"
      ],
      "stack_out": [
        "tmp%18#0"
      ]
    },
    "1645": {
      "op": "assert",
      "stack_out": []
    },
    "1646": {
      "op": "itxn_begin"
    },
    "1647": {
      "op": "bytec 48 // 0x756e7479706564",
      "defined_out": [
        "0x756e7479706564"
      ],
      "stack_out": [
        "0x756e7479706564"
      ]
    },
    "1649": {
      "op": "len",
      "defined_out": [
        "aggregate%length%7#1"
      ],
      "stack_out": [
        "aggregate%length%7#1"
      ]
    },
    "1650": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%7#1"
      ],
      "stack_out": [
        "aggregate%as_bytes%7#1"
      ]
    },
    "1651": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%length_uint16%7#1"
      ],
      "stack_out": [
        "aggregate%length_uint16%7#1"
      ]
    },
    "1654": {
      "op": "bytec 48 // 0x756e7479706564",
      "stack_out": [
        "aggregate%length_uint16%7#1",
        "0x756e7479706564"
      ]
    },
    "1656": {
      "op": "concat",
      "defined_out": [
        "inner_txn_params%3%%param_ApplicationArgs_idx_1#0"
      ],
      "stack_out": [
        "inner_txn_params%3%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "1657": {
      "op": "frame_dig -1",
      "defined_out": [
        "inner_txn_params%3%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%3%%param_ApplicationID_idx_0#0"
      ],
      "stack_out": [
        "inner_txn_params%3%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%3%%param_ApplicationID_idx_0#0"
      ]
    },
    "1659": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "inner_txn_params%3%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "1661": {
      "op": "bytec 5 // method \"echo(string)string\"",
      "defined_out": [
        "Method(echo(string)string)",
        "inner_txn_params%3%%param_ApplicationArgs_idx_1#0"
      ],
      "stack_out": [
        "inner_txn_params%3%%param_ApplicationArgs_idx_1#0",
        "Method(echo(string)string)"
      ]
    },
    "1663": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "inner_txn_params%3%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "1665": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "1667": {
      "op": "intc_1 // appl",
      "defined_out": [
        "appl"
      ],
      "stack_out": [
        "appl"
      ]
    },
    "1668": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "1670": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "1671": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "1673": {
      "block": "test_method_overload_next_txn@4",
      "stack_in": [],
      "op": "itxn_submit"
    },
    "1674": {
      "op": "itxn LastLog",
      "defined_out": [
        "txn_result.LastLog#0"
      ],
      "stack_out": [
        "txn_result.LastLog#0"
      ]
    },
    "1676": {
      "op": "dup",
      "defined_out": [
        "txn_result.LastLog#0",
        "txn_result.LastLog#0 (copy)"
      ],
      "stack_out": [
        "txn_result.LastLog#0",
        "txn_result.LastLog#0 (copy)"
      ]
    },
    "1677": {
      "op": "extract 4 0",
      "defined_out": [
        "tmp%19#0",
        "txn_result.LastLog#0"
      ],
      "stack_out": [
        "txn_result.LastLog#0",
        "tmp%19#0"
      ]
    },
    "1680": {
      "op": "swap",
      "stack_out": [
        "tmp%19#0",
        "txn_result.LastLog#0"
      ]
    },
    "1681": {
      "op": "extract 0 4",
      "defined_out": [
        "tmp%19#0",
        "tmp%20#0"
      ],
      "stack_out": [
        "tmp%19#0",
        "tmp%20#0"
      ]
    },
    "1684": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%19#0",
        "tmp%20#0"
      ],
      "stack_out": [
        "tmp%19#0",
        "tmp%20#0",
        "0x151f7c75"
      ]
    },
    "1685": {
      "op": "==",
      "defined_out": [
        "tmp%19#0",
        "tmp%21#0"
      ],
      "stack_out": [
        "tmp%19#0",
        "tmp%21#0"
      ]
    },
    "1686": {
      "error": "application log value is not the result of an ABI return",
      "op": "assert // application log value is not the result of an ABI return",
      "stack_out": [
        "tmp%19#0"
      ]
    },
    "1687": {
      "op": "bytec 49 // 0x6563686f3a20756e7479706564",
      "defined_out": [
        "0x6563686f3a20756e7479706564",
        "tmp%19#0"
      ],
      "stack_out": [
        "tmp%19#0",
        "0x6563686f3a20756e7479706564"
      ]
    },
    "1689": {
      "op": "len",
      "defined_out": [
        "aggregate%length%8#1",
        "tmp%19#0"
      ],
      "stack_out": [
        "tmp%19#0",
        "aggregate%length%8#1"
      ]
    },
    "1690": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%8#1",
        "tmp%19#0"
      ],
      "stack_out": [
        "tmp%19#0",
        "aggregate%as_bytes%8#1"
      ]
    },
    "1691": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%length_uint16%8#1",
        "tmp%19#0"
      ],
      "stack_out": [
        "tmp%19#0",
        "aggregate%length_uint16%8#1"
      ]
    },
    "1694": {
      "op": "bytec 49 // 0x6563686f3a20756e7479706564",
      "stack_out": [
        "tmp%19#0",
        "aggregate%length_uint16%8#1",
        "0x6563686f3a20756e7479706564"
      ]
    },
    "1696": {
      "op": "concat",
      "defined_out": [
        "encoded%8#0",
        "tmp%19#0"
      ],
      "stack_out": [
        "tmp%19#0",
        "encoded%8#0"
      ]
    },
    "1697": {
      "op": "==",
      "defined_out": [
        "tmp%22#0"
      ],
      "stack_out": [
        "tmp%22#0"
      ]
    },
    "1698": {
      "op": "assert",
      "stack_out": []
    },
    "1699": {
      "retsub": true,
      "op": "retsub"
    },
    "1700": {
      "subroutine": "test_cases.typed_abi_call.typed_c2c.Greeter.test_arg_conversion",
      "params": {
        "app#0": "uint64"
      },
      "block": "test_arg_conversion",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "1703": {
      "block": "test_arg_conversion_block@0",
      "stack_in": [],
      "op": "itxn_begin"
    },
    "1704": {
      "op": "bytec 19 // 0x636f6e76657274656431",
      "defined_out": [
        "0x636f6e76657274656431"
      ],
      "stack_out": [
        "0x636f6e76657274656431"
      ]
    },
    "1706": {
      "op": "len",
      "defined_out": [
        "aggregate%length%0#1"
      ],
      "stack_out": [
        "aggregate%length%0#1"
      ]
    },
    "1707": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%0#1"
      ],
      "stack_out": [
        "aggregate%as_bytes%0#1"
      ]
    },
    "1708": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%length_uint16%0#1"
      ],
      "stack_out": [
        "aggregate%length_uint16%0#1"
      ]
    },
    "1711": {
      "op": "bytec 19 // 0x636f6e76657274656431",
      "stack_out": [
        "aggregate%length_uint16%0#1",
        "0x636f6e76657274656431"
      ]
    },
    "1713": {
      "op": "concat",
      "defined_out": [
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "1714": {
      "op": "frame_dig -1",
      "defined_out": [
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%0%%param_ApplicationID_idx_0#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%0%%param_ApplicationID_idx_0#0"
      ]
    },
    "1716": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "1718": {
      "op": "bytec 12 // method \"log(string)void\"",
      "defined_out": [
        "Method(log(string)void)",
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0",
        "Method(log(string)void)"
      ]
    },
    "1720": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "1722": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "1724": {
      "op": "intc_1 // appl",
      "defined_out": [
        "appl"
      ],
      "stack_out": [
        "appl"
      ]
    },
    "1725": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "1727": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "1728": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "1730": {
      "block": "test_arg_conversion_next_txn@1",
      "stack_in": [],
      "op": "itxn_submit"
    },
    "1731": {
      "op": "itxn LastLog",
      "defined_out": [
        "txn.LastLog#0"
      ],
      "stack_out": [
        "txn.LastLog#0"
      ]
    },
    "1733": {
      "op": "bytec 19 // 0x636f6e76657274656431",
      "defined_out": [
        "0x636f6e76657274656431",
        "txn.LastLog#0"
      ],
      "stack_out": [
        "txn.LastLog#0",
        "0x636f6e76657274656431"
      ]
    },
    "1735": {
      "op": "==",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1736": {
      "op": "assert",
      "stack_out": []
    },
    "1737": {
      "op": "itxn_begin"
    },
    "1738": {
      "op": "frame_dig -1",
      "defined_out": [
        "inner_txn_params%1%%param_ApplicationID_idx_0#0"
      ],
      "stack_out": [
        "inner_txn_params%1%%param_ApplicationID_idx_0#0"
      ]
    },
    "1740": {
      "op": "itxn_field ApplicationID",
      "stack_out": []
    },
    "1742": {
      "op": "pushbytes 0x3c1058d9 // method \"log(uint64)void\"",
      "defined_out": [
        "Method(log(uint64)void)"
      ],
      "stack_out": [
        "Method(log(uint64)void)"
      ]
    },
    "1748": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "1750": {
      "op": "bytec 14 // 0x0000000000000002",
      "defined_out": [
        "0x0000000000000002"
      ],
      "stack_out": [
        "0x0000000000000002"
      ]
    },
    "1752": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "1754": {
      "op": "intc_1 // appl",
      "defined_out": [
        "appl"
      ],
      "stack_out": [
        "appl"
      ]
    },
    "1755": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "1757": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "1758": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "1760": {
      "block": "test_arg_conversion_next_txn@2",
      "stack_in": [],
      "op": "itxn_submit"
    },
    "1761": {
      "op": "itxn LastLog",
      "defined_out": [
        "txn.LastLog#0"
      ],
      "stack_out": [
        "txn.LastLog#0"
      ]
    },
    "1763": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "txn.LastLog#0"
      ],
      "stack_out": [
        "txn.LastLog#0",
        "2"
      ]
    },
    "1764": {
      "op": "itob",
      "defined_out": [
        "tmp%1#0",
        "txn.LastLog#0"
      ],
      "stack_out": [
        "txn.LastLog#0",
        "tmp%1#0"
      ]
    },
    "1765": {
      "op": "==",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "1766": {
      "op": "assert",
      "stack_out": []
    },
    "1767": {
      "op": "itxn_begin"
    },
    "1768": {
      "op": "frame_dig -1",
      "defined_out": [
        "inner_txn_params%2%%param_ApplicationID_idx_0#0"
      ],
      "stack_out": [
        "inner_txn_params%2%%param_ApplicationID_idx_0#0"
      ]
    },
    "1770": {
      "op": "itxn_field ApplicationID",
      "stack_out": []
    },
    "1772": {
      "op": "pushbytes 0x6af45930 // method \"log(uint512)void\"",
      "defined_out": [
        "Method(log(uint512)void)"
      ],
      "stack_out": [
        "Method(log(uint512)void)"
      ]
    },
    "1778": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "1780": {
      "op": "pushbytes 0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000003",
      "defined_out": [
        "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000003"
      ],
      "stack_out": [
        "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000003"
      ]
    },
    "1846": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "1848": {
      "op": "intc_1 // appl",
      "defined_out": [
        "appl"
      ],
      "stack_out": [
        "appl"
      ]
    },
    "1849": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "1851": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "1852": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "1854": {
      "block": "test_arg_conversion_next_txn@3",
      "stack_in": [],
      "op": "itxn_submit"
    },
    "1855": {
      "op": "itxn LastLog",
      "defined_out": [
        "txn.LastLog#0"
      ],
      "stack_out": [
        "txn.LastLog#0"
      ]
    },
    "1857": {
      "op": "pushint 56 // 56",
      "defined_out": [
        "56",
        "txn.LastLog#0"
      ],
      "stack_out": [
        "txn.LastLog#0",
        "56"
      ]
    },
    "1859": {
      "op": "bzero",
      "defined_out": [
        "tmp%3#0",
        "txn.LastLog#0"
      ],
      "stack_out": [
        "txn.LastLog#0",
        "tmp%3#0"
      ]
    },
    "1860": {
      "op": "pushint 3 // 3",
      "defined_out": [
        "3",
        "tmp%3#0",
        "txn.LastLog#0"
      ],
      "stack_out": [
        "txn.LastLog#0",
        "tmp%3#0",
        "3"
      ]
    },
    "1862": {
      "op": "itob",
      "defined_out": [
        "tmp%3#0",
        "tmp%4#0",
        "txn.LastLog#0"
      ],
      "stack_out": [
        "txn.LastLog#0",
        "tmp%3#0",
        "tmp%4#0"
      ]
    },
    "1863": {
      "op": "concat",
      "defined_out": [
        "tmp%5#0",
        "txn.LastLog#0"
      ],
      "stack_out": [
        "txn.LastLog#0",
        "tmp%5#0"
      ]
    },
    "1864": {
      "op": "==",
      "defined_out": [
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0"
      ]
    },
    "1865": {
      "op": "assert",
      "stack_out": []
    },
    "1866": {
      "op": "itxn_begin"
    },
    "1867": {
      "op": "bytec 20 // 0x34",
      "defined_out": [
        "0x34"
      ],
      "stack_out": [
        "0x34"
      ]
    },
    "1869": {
      "op": "len",
      "defined_out": [
        "aggregate%length%1#1"
      ],
      "stack_out": [
        "aggregate%length%1#1"
      ]
    },
    "1870": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%1#1"
      ],
      "stack_out": [
        "aggregate%as_bytes%1#1"
      ]
    },
    "1871": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%length_uint16%1#1"
      ],
      "stack_out": [
        "aggregate%length_uint16%1#1"
      ]
    },
    "1874": {
      "op": "bytec 20 // 0x34",
      "stack_out": [
        "aggregate%length_uint16%1#1",
        "0x34"
      ]
    },
    "1876": {
      "op": "concat",
      "defined_out": [
        "inner_txn_params%3%%param_ApplicationArgs_idx_1#0"
      ],
      "stack_out": [
        "inner_txn_params%3%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "1877": {
      "op": "frame_dig -1",
      "defined_out": [
        "inner_txn_params%3%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%3%%param_ApplicationID_idx_0#0"
      ],
      "stack_out": [
        "inner_txn_params%3%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%3%%param_ApplicationID_idx_0#0"
      ]
    },
    "1879": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "inner_txn_params%3%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "1881": {
      "op": "pushbytes 0xb500e111 // method \"log(byte[])void\"",
      "defined_out": [
        "Method(log(byte[])void)",
        "inner_txn_params%3%%param_ApplicationArgs_idx_1#0"
      ],
      "stack_out": [
        "inner_txn_params%3%%param_ApplicationArgs_idx_1#0",
        "Method(log(byte[])void)"
      ]
    },
    "1887": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "inner_txn_params%3%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "1889": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "1891": {
      "op": "intc_1 // appl",
      "defined_out": [
        "appl"
      ],
      "stack_out": [
        "appl"
      ]
    },
    "1892": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "1894": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "1895": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "1897": {
      "block": "test_arg_conversion_next_txn@4",
      "stack_in": [],
      "op": "itxn_submit"
    },
    "1898": {
      "op": "itxn LastLog",
      "defined_out": [
        "txn.LastLog#0"
      ],
      "stack_out": [
        "txn.LastLog#0"
      ]
    },
    "1900": {
      "op": "bytec 20 // 0x34",
      "defined_out": [
        "0x34",
        "txn.LastLog#0"
      ],
      "stack_out": [
        "txn.LastLog#0",
        "0x34"
      ]
    },
    "1902": {
      "op": "==",
      "defined_out": [
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0"
      ]
    },
    "1903": {
      "op": "assert",
      "stack_out": []
    },
    "1904": {
      "op": "itxn_begin"
    },
    "1905": {
      "op": "pushbytes 0x00",
      "defined_out": [
        "0x00"
      ],
      "stack_out": [
        "0x00"
      ]
    },
    "1908": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "0x00"
      ],
      "stack_out": [
        "0x00",
        "0"
      ]
    },
    "1909": {
      "op": "intc_3 // 1",
      "defined_out": [
        "0",
        "0x00",
        "1"
      ],
      "stack_out": [
        "0x00",
        "0",
        "1"
      ]
    },
    "1910": {
      "op": "setbit",
      "defined_out": [
        "inner_txn_params%4%%param_ApplicationArgs_idx_1#0"
      ],
      "stack_out": [
        "inner_txn_params%4%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "1911": {
      "op": "frame_dig -1",
      "defined_out": [
        "inner_txn_params%4%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%4%%param_ApplicationID_idx_0#0"
      ],
      "stack_out": [
        "inner_txn_params%4%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%4%%param_ApplicationID_idx_0#0"
      ]
    },
    "1913": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "inner_txn_params%4%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "1915": {
      "op": "pushbytes 0x6eed7ec3 // method \"log(bool)void\"",
      "defined_out": [
        "Method(log(bool)void)",
        "inner_txn_params%4%%param_ApplicationArgs_idx_1#0"
      ],
      "stack_out": [
        "inner_txn_params%4%%param_ApplicationArgs_idx_1#0",
        "Method(log(bool)void)"
      ]
    },
    "1921": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "inner_txn_params%4%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "1923": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "1925": {
      "op": "intc_1 // appl",
      "defined_out": [
        "appl"
      ],
      "stack_out": [
        "appl"
      ]
    },
    "1926": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "1928": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0"
      ]
    },
    "1929": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "1931": {
      "block": "test_arg_conversion_next_txn@5",
      "stack_in": [],
      "op": "itxn_submit"
    },
    "1932": {
      "op": "itxn LastLog",
      "defined_out": [
        "txn.LastLog#0"
      ],
      "stack_out": [
        "txn.LastLog#0"
      ]
    },
    "1934": {
      "op": "pushbytes 0x54727565",
      "defined_out": [
        "0x54727565",
        "txn.LastLog#0"
      ],
      "stack_out": [
        "txn.LastLog#0",
        "0x54727565"
      ]
    },
    "1940": {
      "op": "==",
      "defined_out": [
        "tmp%10#0"
      ],
      "stack_out": [
        "tmp%10#0"
      ]
    },
    "1941": {
      "op": "assert",
      "stack_out": []
    },
    "1942": {
      "retsub": true,
      "op": "retsub"
    },
    "1943": {
      "subroutine": "test_cases.typed_abi_call.typed_c2c.Greeter.test_15plus_args",
      "params": {
        "app#0": "uint64"
      },
      "block": "test_15plus_args",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "1946": {
      "block": "test_15plus_args_block@0",
      "stack_in": [],
      "op": "itxn_begin"
    },
    "1947": {
      "op": "bytec_2 // 0x",
      "defined_out": [
        "0x"
      ],
      "stack_out": [
        "0x"
      ]
    },
    "1948": {
      "op": "pushbytes 0xde",
      "defined_out": [
        "0x",
        "0xde"
      ],
      "stack_out": [
        "0x",
        "0xde"
      ]
    },
    "1951": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%0#1"
      ],
      "stack_out": [
        "aggregate%head%0#1"
      ]
    },
    "1952": {
      "op": "pushbytes 0xad",
      "defined_out": [
        "0xad",
        "aggregate%head%0#1"
      ],
      "stack_out": [
        "aggregate%head%0#1",
        "0xad"
      ]
    },
    "1955": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%1#1"
      ],
      "stack_out": [
        "aggregate%head%1#1"
      ]
    },
    "1956": {
      "op": "pushbytes 0xbe",
      "defined_out": [
        "0xbe",
        "aggregate%head%1#1"
      ],
      "stack_out": [
        "aggregate%head%1#1",
        "0xbe"
      ]
    },
    "1959": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%2#1"
      ],
      "stack_out": [
        "aggregate%head%2#1"
      ]
    },
    "1960": {
      "op": "pushbytes 0xef",
      "defined_out": [
        "0xef",
        "aggregate%head%2#1"
      ],
      "stack_out": [
        "aggregate%head%2#1",
        "0xef"
      ]
    },
    "1963": {
      "op": "concat",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1964": {
      "op": "bytec_2 // 0x",
      "stack_out": [
        "tmp%0#0",
        "0x"
      ]
    },
    "1965": {
      "op": "pushbytes 0x0f",
      "defined_out": [
        "0x",
        "0x0f",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "0x",
        "0x0f"
      ]
    },
    "1968": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%4#1",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "aggregate%head%4#1"
      ]
    },
    "1969": {
      "op": "pushbytes 0x10",
      "defined_out": [
        "0x10",
        "aggregate%head%4#1",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "aggregate%head%4#1",
        "0x10"
      ]
    },
    "1972": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%5#1",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "aggregate%head%5#1"
      ]
    },
    "1973": {
      "op": "pushbytes 0x11",
      "defined_out": [
        "0x11",
        "aggregate%head%5#1",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "aggregate%head%5#1",
        "0x11"
      ]
    },
    "1976": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%6#1",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "aggregate%head%6#1"
      ]
    },
    "1977": {
      "op": "pushbytes 0x12",
      "defined_out": [
        "0x12",
        "aggregate%head%6#1",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "aggregate%head%6#1",
        "0x12"
      ]
    },
    "1980": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%7#1",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "aggregate%head%7#1"
      ]
    },
    "1981": {
      "op": "swap",
      "stack_out": [
        "aggregate%head%7#1",
        "tmp%0#0"
      ]
    },
    "1982": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%8#1"
      ],
      "stack_out": [
        "aggregate%head%8#1"
      ]
    },
    "1983": {
      "op": "pushbytes 0x14",
      "defined_out": [
        "0x14",
        "aggregate%head%8#1"
      ],
      "stack_out": [
        "aggregate%head%8#1",
        "0x14"
      ]
    },
    "1986": {
      "op": "concat",
      "defined_out": [
        "inner_txn_params%0%%param_ApplicationArgs_idx_15#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_ApplicationArgs_idx_15#0"
      ]
    },
    "1987": {
      "op": "frame_dig -1",
      "defined_out": [
        "inner_txn_params%0%%param_ApplicationArgs_idx_15#0",
        "inner_txn_params%0%%param_ApplicationID_idx_0#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_ApplicationArgs_idx_15#0",
        "inner_txn_params%0%%param_ApplicationID_idx_0#0"
      ]
    },
    "1989": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "inner_txn_params%0%%param_ApplicationArgs_idx_15#0"
      ]
    },
    "1991": {
      "op": "pushbytes 0xba0b4381 // method \"return_args_after_14th(uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint8,uint8,uint8,uint8,(uint8,uint8,uint8,uint8),uint8)byte[]\"",
      "defined_out": [
        "Method(return_args_after_14th(uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint8,uint8,uint8,uint8,(uint8,uint8,uint8,uint8),uint8)byte[])",
        "inner_txn_params%0%%param_ApplicationArgs_idx_15#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_ApplicationArgs_idx_15#0",
        "Method(return_args_after_14th(uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint8,uint8,uint8,uint8,(uint8,uint8,uint8,uint8),uint8)byte[])"
      ]
    },
    "1997": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "inner_txn_params%0%%param_ApplicationArgs_idx_15#0"
      ]
    },
    "1999": {
      "op": "bytec 4 // 0x0000000000000001",
      "defined_out": [
        "0x0000000000000001",
        "inner_txn_params%0%%param_ApplicationArgs_idx_15#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_ApplicationArgs_idx_15#0",
        "0x0000000000000001"
      ]
    },
    "2001": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "inner_txn_params%0%%param_ApplicationArgs_idx_15#0"
      ]
    },
    "2003": {
      "op": "bytec 14 // 0x0000000000000002",
      "defined_out": [
        "0x0000000000000002",
        "inner_txn_params%0%%param_ApplicationArgs_idx_15#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_ApplicationArgs_idx_15#0",
        "0x0000000000000002"
      ]
    },
    "2005": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "inner_txn_params%0%%param_ApplicationArgs_idx_15#0"
      ]
    },
    "2007": {
      "op": "bytec 21 // 0x0000000000000003",
      "defined_out": [
        "0x0000000000000003",
        "inner_txn_params%0%%param_ApplicationArgs_idx_15#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_ApplicationArgs_idx_15#0",
        "0x0000000000000003"
      ]
    },
    "2009": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "inner_txn_params%0%%param_ApplicationArgs_idx_15#0"
      ]
    },
    "2011": {
      "op": "pushbytes 0x0000000000000004",
      "defined_out": [
        "0x0000000000000004",
        "inner_txn_params%0%%param_ApplicationArgs_idx_15#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_ApplicationArgs_idx_15#0",
        "0x0000000000000004"
      ]
    },
    "2021": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "inner_txn_params%0%%param_ApplicationArgs_idx_15#0"
      ]
    },
    "2023": {
      "op": "pushbytes 0x0000000000000005",
      "defined_out": [
        "0x0000000000000005",
        "inner_txn_params%0%%param_ApplicationArgs_idx_15#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_ApplicationArgs_idx_15#0",
        "0x0000000000000005"
      ]
    },
    "2033": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "inner_txn_params%0%%param_ApplicationArgs_idx_15#0"
      ]
    },
    "2035": {
      "op": "pushbytes 0x0000000000000006",
      "defined_out": [
        "0x0000000000000006",
        "inner_txn_params%0%%param_ApplicationArgs_idx_15#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_ApplicationArgs_idx_15#0",
        "0x0000000000000006"
      ]
    },
    "2045": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "inner_txn_params%0%%param_ApplicationArgs_idx_15#0"
      ]
    },
    "2047": {
      "op": "pushbytes 0x0000000000000007",
      "defined_out": [
        "0x0000000000000007",
        "inner_txn_params%0%%param_ApplicationArgs_idx_15#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_ApplicationArgs_idx_15#0",
        "0x0000000000000007"
      ]
    },
    "2057": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "inner_txn_params%0%%param_ApplicationArgs_idx_15#0"
      ]
    },
    "2059": {
      "op": "pushbytes 0x0000000000000008",
      "defined_out": [
        "0x0000000000000008",
        "inner_txn_params%0%%param_ApplicationArgs_idx_15#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_ApplicationArgs_idx_15#0",
        "0x0000000000000008"
      ]
    },
    "2069": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "inner_txn_params%0%%param_ApplicationArgs_idx_15#0"
      ]
    },
    "2071": {
      "op": "pushbytes 0x0000000000000009",
      "defined_out": [
        "0x0000000000000009",
        "inner_txn_params%0%%param_ApplicationArgs_idx_15#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_ApplicationArgs_idx_15#0",
        "0x0000000000000009"
      ]
    },
    "2081": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "inner_txn_params%0%%param_ApplicationArgs_idx_15#0"
      ]
    },
    "2083": {
      "op": "pushbytes 0x000000000000000a",
      "defined_out": [
        "0x000000000000000a",
        "inner_txn_params%0%%param_ApplicationArgs_idx_15#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_ApplicationArgs_idx_15#0",
        "0x000000000000000a"
      ]
    },
    "2093": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "inner_txn_params%0%%param_ApplicationArgs_idx_15#0"
      ]
    },
    "2095": {
      "op": "bytec 50 // 0x000000000000000b",
      "defined_out": [
        "0x000000000000000b",
        "inner_txn_params%0%%param_ApplicationArgs_idx_15#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_ApplicationArgs_idx_15#0",
        "0x000000000000000b"
      ]
    },
    "2097": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "inner_txn_params%0%%param_ApplicationArgs_idx_15#0"
      ]
    },
    "2099": {
      "op": "pushbytes 0x000000000000000c",
      "defined_out": [
        "0x000000000000000c",
        "inner_txn_params%0%%param_ApplicationArgs_idx_15#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_ApplicationArgs_idx_15#0",
        "0x000000000000000c"
      ]
    },
    "2109": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "inner_txn_params%0%%param_ApplicationArgs_idx_15#0"
      ]
    },
    "2111": {
      "op": "pushbytes 0x000000000000000d",
      "defined_out": [
        "0x000000000000000d",
        "inner_txn_params%0%%param_ApplicationArgs_idx_15#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_ApplicationArgs_idx_15#0",
        "0x000000000000000d"
      ]
    },
    "2121": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "inner_txn_params%0%%param_ApplicationArgs_idx_15#0"
      ]
    },
    "2123": {
      "op": "pushbytes 0x000000000000000e",
      "defined_out": [
        "0x000000000000000e",
        "inner_txn_params%0%%param_ApplicationArgs_idx_15#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_ApplicationArgs_idx_15#0",
        "0x000000000000000e"
      ]
    },
    "2133": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "inner_txn_params%0%%param_ApplicationArgs_idx_15#0"
      ]
    },
    "2135": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "2137": {
      "op": "intc_1 // appl",
      "defined_out": [
        "appl"
      ],
      "stack_out": [
        "appl"
      ]
    },
    "2138": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "2140": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "2141": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "2143": {
      "block": "test_15plus_args_next_txn@1",
      "stack_in": [],
      "op": "itxn_submit"
    },
    "2144": {
      "op": "itxn LastLog",
      "defined_out": [
        "awst_tmp%0#0"
      ],
      "stack_out": [
        "awst_tmp%0#0"
      ]
    },
    "2146": {
      "op": "dup",
      "defined_out": [
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ]
    },
    "2147": {
      "op": "extract 4 0",
      "defined_out": [
        "awst_tmp%0#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "tmp%2#0"
      ]
    },
    "2150": {
      "op": "swap",
      "stack_out": [
        "tmp%2#0",
        "awst_tmp%0#0"
      ]
    },
    "2151": {
      "op": "extract 0 4",
      "defined_out": [
        "tmp%2#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "tmp%3#0"
      ]
    },
    "2154": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%2#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "tmp%3#0",
        "0x151f7c75"
      ]
    },
    "2155": {
      "op": "==",
      "defined_out": [
        "tmp%2#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "tmp%4#0"
      ]
    },
    "2156": {
      "error": "application log value is not the result of an ABI return",
      "op": "assert // application log value is not the result of an ABI return",
      "defined_out": [
        "result#0"
      ],
      "stack_out": [
        "result#0"
      ]
    },
    "2157": {
      "op": "extract 2 0",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "2160": {
      "op": "pushbytes 0x0f101112deadbeef14",
      "defined_out": [
        "0x0f101112deadbeef14",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "0x0f101112deadbeef14"
      ]
    },
    "2171": {
      "op": "==",
      "defined_out": [
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0"
      ]
    },
    "2172": {
      "op": "assert",
      "stack_out": []
    },
    "2173": {
      "retsub": true,
      "op": "retsub"
    },
    "2174": {
      "subroutine": "test_cases.typed_abi_call.typed_c2c.Greeter.test_void",
      "params": {
        "app#0": "uint64"
      },
      "block": "test_void",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "2177": {
      "block": "test_void_block@0",
      "stack_in": [],
      "op": "itxn_begin"
    },
    "2178": {
      "op": "bytec 22 // 0x576f726c6431",
      "defined_out": [
        "0x576f726c6431"
      ],
      "stack_out": [
        "0x576f726c6431"
      ]
    },
    "2180": {
      "op": "len",
      "defined_out": [
        "aggregate%length%0#1"
      ],
      "stack_out": [
        "aggregate%length%0#1"
      ]
    },
    "2181": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%0#1"
      ],
      "stack_out": [
        "aggregate%as_bytes%0#1"
      ]
    },
    "2182": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%length_uint16%0#1"
      ],
      "stack_out": [
        "aggregate%length_uint16%0#1"
      ]
    },
    "2185": {
      "op": "bytec 22 // 0x576f726c6431",
      "stack_out": [
        "aggregate%length_uint16%0#1",
        "0x576f726c6431"
      ]
    },
    "2187": {
      "op": "concat",
      "defined_out": [
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "2188": {
      "op": "frame_dig -1",
      "defined_out": [
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%0%%param_ApplicationID_idx_0#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%0%%param_ApplicationID_idx_0#0"
      ]
    },
    "2190": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "2192": {
      "op": "bytec 12 // method \"log(string)void\"",
      "defined_out": [
        "Method(log(string)void)",
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0",
        "Method(log(string)void)"
      ]
    },
    "2194": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "2196": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "2198": {
      "op": "intc_1 // appl",
      "defined_out": [
        "appl"
      ],
      "stack_out": [
        "appl"
      ]
    },
    "2199": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "2201": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "2202": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "2204": {
      "block": "test_void_next_txn@1",
      "stack_in": [],
      "op": "itxn_submit"
    },
    "2205": {
      "op": "itxn LastLog",
      "defined_out": [
        "txn.LastLog#0"
      ],
      "stack_out": [
        "txn.LastLog#0"
      ]
    },
    "2207": {
      "op": "bytec 22 // 0x576f726c6431",
      "defined_out": [
        "0x576f726c6431",
        "txn.LastLog#0"
      ],
      "stack_out": [
        "txn.LastLog#0",
        "0x576f726c6431"
      ]
    },
    "2209": {
      "op": "==",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "2210": {
      "op": "assert",
      "stack_out": []
    },
    "2211": {
      "op": "itxn_begin"
    },
    "2212": {
      "op": "bytec 23 // 0x576f726c6432",
      "defined_out": [
        "0x576f726c6432"
      ],
      "stack_out": [
        "0x576f726c6432"
      ]
    },
    "2214": {
      "op": "len",
      "defined_out": [
        "aggregate%length%1#1"
      ],
      "stack_out": [
        "aggregate%length%1#1"
      ]
    },
    "2215": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%1#1"
      ],
      "stack_out": [
        "aggregate%as_bytes%1#1"
      ]
    },
    "2216": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%length_uint16%1#1"
      ],
      "stack_out": [
        "aggregate%length_uint16%1#1"
      ]
    },
    "2219": {
      "op": "bytec 23 // 0x576f726c6432",
      "stack_out": [
        "aggregate%length_uint16%1#1",
        "0x576f726c6432"
      ]
    },
    "2221": {
      "op": "concat",
      "defined_out": [
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0"
      ],
      "stack_out": [
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "2222": {
      "op": "frame_dig -1",
      "defined_out": [
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%1%%param_ApplicationID_idx_0#0"
      ],
      "stack_out": [
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%1%%param_ApplicationID_idx_0#0"
      ]
    },
    "2224": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "2226": {
      "op": "bytec 12 // method \"log(string)void\"",
      "defined_out": [
        "Method(log(string)void)",
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0"
      ],
      "stack_out": [
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0",
        "Method(log(string)void)"
      ]
    },
    "2228": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "2230": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "2232": {
      "op": "intc_1 // appl",
      "defined_out": [
        "appl"
      ],
      "stack_out": [
        "appl"
      ]
    },
    "2233": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "2235": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "2236": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "2238": {
      "block": "test_void_next_txn@2",
      "stack_in": [],
      "op": "itxn_submit"
    },
    "2239": {
      "op": "itxn LastLog",
      "defined_out": [
        "txn.LastLog#0"
      ],
      "stack_out": [
        "txn.LastLog#0"
      ]
    },
    "2241": {
      "op": "bytec 23 // 0x576f726c6432",
      "defined_out": [
        "0x576f726c6432",
        "txn.LastLog#0"
      ],
      "stack_out": [
        "txn.LastLog#0",
        "0x576f726c6432"
      ]
    },
    "2243": {
      "op": "==",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "2244": {
      "op": "assert",
      "stack_out": []
    },
    "2245": {
      "op": "itxn_begin"
    },
    "2246": {
      "op": "bytec 24 // 0x576f726c6433",
      "defined_out": [
        "0x576f726c6433"
      ],
      "stack_out": [
        "0x576f726c6433"
      ]
    },
    "2248": {
      "op": "len",
      "defined_out": [
        "aggregate%length%2#1"
      ],
      "stack_out": [
        "aggregate%length%2#1"
      ]
    },
    "2249": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%2#1"
      ],
      "stack_out": [
        "aggregate%as_bytes%2#1"
      ]
    },
    "2250": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%length_uint16%2#1"
      ],
      "stack_out": [
        "aggregate%length_uint16%2#1"
      ]
    },
    "2253": {
      "op": "bytec 24 // 0x576f726c6433",
      "stack_out": [
        "aggregate%length_uint16%2#1",
        "0x576f726c6433"
      ]
    },
    "2255": {
      "op": "concat",
      "defined_out": [
        "inner_txn_params%2%%param_ApplicationArgs_idx_1#0"
      ],
      "stack_out": [
        "inner_txn_params%2%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "2256": {
      "op": "frame_dig -1",
      "defined_out": [
        "inner_txn_params%2%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%2%%param_ApplicationID_idx_0#0"
      ],
      "stack_out": [
        "inner_txn_params%2%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%2%%param_ApplicationID_idx_0#0"
      ]
    },
    "2258": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "inner_txn_params%2%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "2260": {
      "op": "bytec 12 // method \"log(string)void\"",
      "defined_out": [
        "Method(log(string)void)",
        "inner_txn_params%2%%param_ApplicationArgs_idx_1#0"
      ],
      "stack_out": [
        "inner_txn_params%2%%param_ApplicationArgs_idx_1#0",
        "Method(log(string)void)"
      ]
    },
    "2262": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "inner_txn_params%2%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "2264": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "2266": {
      "op": "intc_1 // appl",
      "defined_out": [
        "appl"
      ],
      "stack_out": [
        "appl"
      ]
    },
    "2267": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "2269": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "2270": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "2272": {
      "block": "test_void_next_txn@3",
      "stack_in": [],
      "op": "itxn_submit"
    },
    "2273": {
      "op": "itxn LastLog",
      "defined_out": [
        "txn.LastLog#0"
      ],
      "stack_out": [
        "txn.LastLog#0"
      ]
    },
    "2275": {
      "op": "bytec 24 // 0x576f726c6433",
      "defined_out": [
        "0x576f726c6433",
        "txn.LastLog#0"
      ],
      "stack_out": [
        "txn.LastLog#0",
        "0x576f726c6433"
      ]
    },
    "2277": {
      "op": "==",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "2278": {
      "op": "assert",
      "stack_out": []
    },
    "2279": {
      "op": "itxn_begin"
    },
    "2280": {
      "op": "bytec 25 // 0x576f726c6434",
      "defined_out": [
        "0x576f726c6434"
      ],
      "stack_out": [
        "0x576f726c6434"
      ]
    },
    "2282": {
      "op": "len",
      "defined_out": [
        "aggregate%length%3#1"
      ],
      "stack_out": [
        "aggregate%length%3#1"
      ]
    },
    "2283": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%3#1"
      ],
      "stack_out": [
        "aggregate%as_bytes%3#1"
      ]
    },
    "2284": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%length_uint16%3#1"
      ],
      "stack_out": [
        "aggregate%length_uint16%3#1"
      ]
    },
    "2287": {
      "op": "bytec 25 // 0x576f726c6434",
      "stack_out": [
        "aggregate%length_uint16%3#1",
        "0x576f726c6434"
      ]
    },
    "2289": {
      "op": "concat",
      "defined_out": [
        "inner_txn_params%3%%param_ApplicationArgs_idx_1#0"
      ],
      "stack_out": [
        "inner_txn_params%3%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "2290": {
      "op": "frame_dig -1",
      "defined_out": [
        "inner_txn_params%3%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%3%%param_ApplicationID_idx_0#0"
      ],
      "stack_out": [
        "inner_txn_params%3%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%3%%param_ApplicationID_idx_0#0"
      ]
    },
    "2292": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "inner_txn_params%3%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "2294": {
      "op": "bytec 12 // method \"log(string)void\"",
      "defined_out": [
        "Method(log(string)void)",
        "inner_txn_params%3%%param_ApplicationArgs_idx_1#0"
      ],
      "stack_out": [
        "inner_txn_params%3%%param_ApplicationArgs_idx_1#0",
        "Method(log(string)void)"
      ]
    },
    "2296": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "inner_txn_params%3%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "2298": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "2300": {
      "op": "intc_1 // appl",
      "defined_out": [
        "appl"
      ],
      "stack_out": [
        "appl"
      ]
    },
    "2301": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "2303": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "2304": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "2306": {
      "block": "test_void_next_txn@4",
      "stack_in": [],
      "op": "itxn_submit"
    },
    "2307": {
      "op": "itxn LastLog",
      "defined_out": [
        "txn.LastLog#0"
      ],
      "stack_out": [
        "txn.LastLog#0"
      ]
    },
    "2309": {
      "op": "bytec 25 // 0x576f726c6434",
      "defined_out": [
        "0x576f726c6434",
        "txn.LastLog#0"
      ],
      "stack_out": [
        "txn.LastLog#0",
        "0x576f726c6434"
      ]
    },
    "2311": {
      "op": "==",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "2312": {
      "op": "assert",
      "stack_out": []
    },
    "2313": {
      "retsub": true,
      "op": "retsub"
    },
    "2314": {
      "subroutine": "test_cases.typed_abi_call.typed_c2c.Greeter.test_ref_types",
      "params": {
        "app#0": "uint64",
        "asset#0": "uint64"
      },
      "block": "test_ref_types",
      "stack_in": [],
      "op": "proto 2 0"
    },
    "2317": {
      "block": "test_ref_types_block@0",
      "stack_in": [],
      "op": "itxn_begin"
    },
    "2318": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "inner_txn_params%0%%param_Accounts_idx_0#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_Accounts_idx_0#0"
      ]
    },
    "2320": {
      "op": "frame_dig -2",
      "defined_out": [
        "inner_txn_params%0%%param_Accounts_idx_0#0",
        "inner_txn_params%0%%param_Applications_idx_0#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_Accounts_idx_0#0",
        "inner_txn_params%0%%param_Applications_idx_0#0"
      ]
    },
    "2322": {
      "op": "frame_dig -1",
      "defined_out": [
        "inner_txn_params%0%%param_Accounts_idx_0#0",
        "inner_txn_params%0%%param_Applications_idx_0#0",
        "inner_txn_params%0%%param_Assets_idx_0#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_Accounts_idx_0#0",
        "inner_txn_params%0%%param_Applications_idx_0#0",
        "inner_txn_params%0%%param_Assets_idx_0#0"
      ]
    },
    "2324": {
      "op": "frame_dig -2",
      "defined_out": [
        "inner_txn_params%0%%param_Accounts_idx_0#0",
        "inner_txn_params%0%%param_ApplicationID_idx_0#0",
        "inner_txn_params%0%%param_Applications_idx_0#0",
        "inner_txn_params%0%%param_Assets_idx_0#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_Accounts_idx_0#0",
        "inner_txn_params%0%%param_Applications_idx_0#0",
        "inner_txn_params%0%%param_Assets_idx_0#0",
        "inner_txn_params%0%%param_ApplicationID_idx_0#0"
      ]
    },
    "2326": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "inner_txn_params%0%%param_Accounts_idx_0#0",
        "inner_txn_params%0%%param_Applications_idx_0#0",
        "inner_txn_params%0%%param_Assets_idx_0#0"
      ]
    },
    "2328": {
      "op": "itxn_field Assets",
      "stack_out": [
        "inner_txn_params%0%%param_Accounts_idx_0#0",
        "inner_txn_params%0%%param_Applications_idx_0#0"
      ]
    },
    "2330": {
      "op": "itxn_field Applications",
      "stack_out": [
        "inner_txn_params%0%%param_Accounts_idx_0#0"
      ]
    },
    "2332": {
      "op": "itxn_field Accounts",
      "stack_out": []
    },
    "2334": {
      "op": "pushbytes 0xcd727b71 // method \"log(asset,account,application)void\"",
      "defined_out": [
        "Method(log(asset,account,application)void)"
      ],
      "stack_out": [
        "Method(log(asset,account,application)void)"
      ]
    },
    "2340": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "2342": {
      "op": "pushbytes 0x00",
      "defined_out": [
        "0x00"
      ],
      "stack_out": [
        "0x00"
      ]
    },
    "2345": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "2347": {
      "op": "pushbytes 0x01",
      "defined_out": [
        "0x01"
      ],
      "stack_out": [
        "0x01"
      ]
    },
    "2350": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "2352": {
      "op": "pushbytes 0x01",
      "stack_out": [
        "0x01"
      ]
    },
    "2355": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "2357": {
      "op": "intc_1 // appl",
      "defined_out": [
        "appl"
      ],
      "stack_out": [
        "appl"
      ]
    },
    "2358": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "2360": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "2361": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "2363": {
      "block": "test_ref_types_next_txn@1",
      "stack_in": [],
      "op": "itxn_submit"
    },
    "2364": {
      "op": "itxn LastLog",
      "defined_out": [
        "txn.LastLog#0"
      ],
      "stack_out": [
        "txn.LastLog#0"
      ]
    },
    "2366": {
      "op": "frame_dig -1",
      "defined_out": [
        "asset#0 (copy)",
        "txn.LastLog#0"
      ],
      "stack_out": [
        "txn.LastLog#0",
        "asset#0 (copy)"
      ]
    },
    "2368": {
      "op": "asset_params_get AssetName",
      "defined_out": [
        "check%0#0",
        "txn.LastLog#0",
        "value%0#0"
      ],
      "stack_out": [
        "txn.LastLog#0",
        "value%0#0",
        "check%0#0"
      ]
    },
    "2370": {
      "error": "asset exists",
      "op": "assert // asset exists",
      "stack_out": [
        "txn.LastLog#0",
        "value%0#0"
      ]
    },
    "2371": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "tmp%1#0",
        "txn.LastLog#0",
        "value%0#0"
      ],
      "stack_out": [
        "txn.LastLog#0",
        "value%0#0",
        "tmp%1#0"
      ]
    },
    "2373": {
      "op": "concat",
      "defined_out": [
        "tmp%2#0",
        "txn.LastLog#0"
      ],
      "stack_out": [
        "txn.LastLog#0",
        "tmp%2#0"
      ]
    },
    "2374": {
      "op": "frame_dig -2",
      "defined_out": [
        "app#0 (copy)",
        "tmp%2#0",
        "txn.LastLog#0"
      ],
      "stack_out": [
        "txn.LastLog#0",
        "tmp%2#0",
        "app#0 (copy)"
      ]
    },
    "2376": {
      "op": "app_params_get AppAddress",
      "defined_out": [
        "check%1#0",
        "tmp%2#0",
        "txn.LastLog#0",
        "value%1#0"
      ],
      "stack_out": [
        "txn.LastLog#0",
        "tmp%2#0",
        "value%1#0",
        "check%1#0"
      ]
    },
    "2378": {
      "error": "application exists",
      "op": "assert // application exists",
      "stack_out": [
        "txn.LastLog#0",
        "tmp%2#0",
        "value%1#0"
      ]
    },
    "2379": {
      "op": "concat",
      "defined_out": [
        "tmp%3#0",
        "txn.LastLog#0"
      ],
      "stack_out": [
        "txn.LastLog#0",
        "tmp%3#0"
      ]
    },
    "2380": {
      "op": "==",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "2381": {
      "op": "assert",
      "stack_out": []
    },
    "2382": {
      "retsub": true,
      "op": "retsub"
    },
    "2383": {
      "subroutine": "test_cases.typed_abi_call.typed_c2c.Greeter.test_account_to_address",
      "params": {
        "app#0": "uint64"
      },
      "block": "test_account_to_address",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "2386": {
      "block": "test_account_to_address_block@0",
      "stack_in": [],
      "op": "itxn_begin"
    },
    "2387": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "2389": {
      "op": "frame_dig -1",
      "defined_out": [
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%0%%param_ApplicationID_idx_0#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%0%%param_ApplicationID_idx_0#0"
      ]
    },
    "2391": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "2393": {
      "op": "pushbytes 0x0437b17e // method \"log(address)void\"",
      "defined_out": [
        "Method(log(address)void)",
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0",
        "Method(log(address)void)"
      ]
    },
    "2399": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "2401": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "2403": {
      "op": "intc_1 // appl",
      "defined_out": [
        "appl"
      ],
      "stack_out": [
        "appl"
      ]
    },
    "2404": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "2406": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "2407": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "2409": {
      "block": "test_account_to_address_next_txn@1",
      "stack_in": [],
      "op": "itxn_submit"
    },
    "2410": {
      "op": "itxn LastLog",
      "defined_out": [
        "txn.LastLog#0"
      ],
      "stack_out": [
        "txn.LastLog#0"
      ]
    },
    "2412": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "tmp%2#0",
        "txn.LastLog#0"
      ],
      "stack_out": [
        "txn.LastLog#0",
        "tmp%2#0"
      ]
    },
    "2414": {
      "op": "==",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "2415": {
      "op": "assert",
      "stack_out": []
    },
    "2416": {
      "retsub": true,
      "op": "retsub"
    },
    "2417": {
      "subroutine": "test_cases.typed_abi_call.typed_c2c.Greeter.test_native_string",
      "params": {
        "app#0": "uint64"
      },
      "block": "test_native_string",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "2420": {
      "op": "intc_0 // 0",
      "stack_out": [
        "result1#0"
      ]
    },
    "2421": {
      "block": "test_native_string_block@0",
      "stack_in": [
        "result1#0"
      ],
      "op": "itxn_begin"
    },
    "2422": {
      "op": "bytec 9 // 0x73",
      "defined_out": [
        "0x73"
      ],
      "stack_out": [
        "result1#0",
        "0x73"
      ]
    },
    "2424": {
      "op": "len",
      "defined_out": [
        "aggregate%length%0#1"
      ],
      "stack_out": [
        "result1#0",
        "aggregate%length%0#1"
      ]
    },
    "2425": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%0#1"
      ],
      "stack_out": [
        "result1#0",
        "aggregate%as_bytes%0#1"
      ]
    },
    "2426": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%length_uint16%0#1"
      ],
      "stack_out": [
        "result1#0",
        "aggregate%length_uint16%0#1"
      ]
    },
    "2429": {
      "op": "bytec 9 // 0x73",
      "stack_out": [
        "result1#0",
        "aggregate%length_uint16%0#1",
        "0x73"
      ]
    },
    "2431": {
      "op": "concat",
      "defined_out": [
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0"
      ],
      "stack_out": [
        "result1#0",
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "2432": {
      "op": "frame_dig -1",
      "defined_out": [
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%0%%param_ApplicationID_idx_0#0"
      ],
      "stack_out": [
        "result1#0",
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%0%%param_ApplicationID_idx_0#0"
      ]
    },
    "2434": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "result1#0",
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "2436": {
      "op": "bytec 26 // method \"echo_native_string(string)string\"",
      "defined_out": [
        "Method(echo_native_string(string)string)",
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0"
      ],
      "stack_out": [
        "result1#0",
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0",
        "Method(echo_native_string(string)string)"
      ]
    },
    "2438": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "result1#0",
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "2440": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "result1#0"
      ]
    },
    "2442": {
      "op": "intc_1 // appl",
      "defined_out": [
        "appl"
      ],
      "stack_out": [
        "result1#0",
        "appl"
      ]
    },
    "2443": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "result1#0"
      ]
    },
    "2445": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "result1#0",
        "0"
      ]
    },
    "2446": {
      "op": "itxn_field Fee",
      "stack_out": [
        "result1#0"
      ]
    },
    "2448": {
      "block": "test_native_string_next_txn@1",
      "stack_in": [
        "result1#0"
      ],
      "op": "itxn_submit"
    },
    "2449": {
      "op": "itxn LastLog",
      "defined_out": [
        "awst_tmp%0#0"
      ],
      "stack_out": [
        "result1#0",
        "awst_tmp%0#0"
      ]
    },
    "2451": {
      "op": "dup",
      "defined_out": [
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ],
      "stack_out": [
        "result1#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ]
    },
    "2452": {
      "op": "extract 4 0",
      "defined_out": [
        "awst_tmp%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "result1#0",
        "awst_tmp%0#0",
        "tmp%0#0"
      ]
    },
    "2455": {
      "op": "swap",
      "stack_out": [
        "result1#0",
        "tmp%0#0",
        "awst_tmp%0#0"
      ]
    },
    "2456": {
      "op": "extract 0 4",
      "defined_out": [
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "result1#0",
        "tmp%0#0",
        "tmp%1#0"
      ]
    },
    "2459": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "result1#0",
        "tmp%0#0",
        "tmp%1#0",
        "0x151f7c75"
      ]
    },
    "2460": {
      "op": "==",
      "defined_out": [
        "tmp%0#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "result1#0",
        "tmp%0#0",
        "tmp%2#0"
      ]
    },
    "2461": {
      "error": "application log value is not the result of an ABI return",
      "op": "assert // application log value is not the result of an ABI return",
      "stack_out": [
        "result1#0",
        "tmp%0#0"
      ]
    },
    "2462": {
      "op": "extract 2 0",
      "defined_out": [
        "result1#0"
      ],
      "stack_out": [
        "result1#0",
        "result1#0"
      ]
    },
    "2465": {
      "op": "dup",
      "stack_out": [
        "result1#0",
        "result1#0",
        "result1#0"
      ]
    },
    "2466": {
      "op": "frame_bury 0",
      "defined_out": [
        "result1#0"
      ],
      "stack_out": [
        "result1#0",
        "result1#0"
      ]
    },
    "2468": {
      "op": "pushbytes \"echo: s\"",
      "defined_out": [
        "\"echo: s\"",
        "result1#0"
      ],
      "stack_out": [
        "result1#0",
        "result1#0",
        "\"echo: s\""
      ]
    },
    "2477": {
      "op": "==",
      "defined_out": [
        "result1#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "result1#0",
        "tmp%4#0"
      ]
    },
    "2478": {
      "op": "assert",
      "stack_out": [
        "result1#0"
      ]
    },
    "2479": {
      "op": "itxn_begin"
    },
    "2480": {
      "op": "bytec 9 // \"s\"",
      "defined_out": [
        "\"s\"",
        "result1#0"
      ],
      "stack_out": [
        "result1#0",
        "\"s\""
      ]
    },
    "2482": {
      "op": "len",
      "defined_out": [
        "aggregate%length%1#1",
        "result1#0"
      ],
      "stack_out": [
        "result1#0",
        "aggregate%length%1#1"
      ]
    },
    "2483": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%1#1",
        "result1#0"
      ],
      "stack_out": [
        "result1#0",
        "aggregate%as_bytes%1#1"
      ]
    },
    "2484": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%length_uint16%1#1",
        "result1#0"
      ],
      "stack_out": [
        "result1#0",
        "aggregate%length_uint16%1#1"
      ]
    },
    "2487": {
      "op": "bytec 9 // \"s\"",
      "stack_out": [
        "result1#0",
        "aggregate%length_uint16%1#1",
        "\"s\""
      ]
    },
    "2489": {
      "op": "concat",
      "defined_out": [
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0",
        "result1#0"
      ],
      "stack_out": [
        "result1#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "2490": {
      "op": "frame_dig -1",
      "defined_out": [
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%1%%param_ApplicationID_idx_0#0",
        "result1#0"
      ],
      "stack_out": [
        "result1#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%1%%param_ApplicationID_idx_0#0"
      ]
    },
    "2492": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "result1#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "2494": {
      "op": "bytec 26 // method \"echo_native_string(string)string\"",
      "defined_out": [
        "Method(echo_native_string(string)string)",
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0",
        "result1#0"
      ],
      "stack_out": [
        "result1#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0",
        "Method(echo_native_string(string)string)"
      ]
    },
    "2496": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "result1#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "2498": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "result1#0"
      ]
    },
    "2500": {
      "op": "intc_1 // appl",
      "defined_out": [
        "appl",
        "result1#0"
      ],
      "stack_out": [
        "result1#0",
        "appl"
      ]
    },
    "2501": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "result1#0"
      ]
    },
    "2503": {
      "op": "intc_0 // 0",
      "stack_out": [
        "result1#0",
        "0"
      ]
    },
    "2504": {
      "op": "itxn_field Fee",
      "stack_out": [
        "result1#0"
      ]
    },
    "2506": {
      "block": "test_native_string_next_txn@2",
      "stack_in": [
        "result1#0"
      ],
      "op": "itxn_submit"
    },
    "2507": {
      "op": "itxn LastLog",
      "defined_out": [
        "awst_tmp%1#0"
      ],
      "stack_out": [
        "result1#0",
        "awst_tmp%1#0"
      ]
    },
    "2509": {
      "op": "dup",
      "defined_out": [
        "awst_tmp%1#0",
        "awst_tmp%1#0 (copy)"
      ],
      "stack_out": [
        "result1#0",
        "awst_tmp%1#0",
        "awst_tmp%1#0 (copy)"
      ]
    },
    "2510": {
      "op": "extract 4 0",
      "defined_out": [
        "awst_tmp%1#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "result1#0",
        "awst_tmp%1#0",
        "tmp%6#0"
      ]
    },
    "2513": {
      "op": "swap",
      "stack_out": [
        "result1#0",
        "tmp%6#0",
        "awst_tmp%1#0"
      ]
    },
    "2514": {
      "op": "extract 0 4",
      "defined_out": [
        "tmp%6#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "result1#0",
        "tmp%6#0",
        "tmp%7#0"
      ]
    },
    "2517": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%6#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "result1#0",
        "tmp%6#0",
        "tmp%7#0",
        "0x151f7c75"
      ]
    },
    "2518": {
      "op": "==",
      "defined_out": [
        "tmp%6#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "result1#0",
        "tmp%6#0",
        "tmp%8#0"
      ]
    },
    "2519": {
      "error": "application log value is not the result of an ABI return",
      "op": "assert // application log value is not the result of an ABI return",
      "stack_out": [
        "result1#0",
        "tmp%6#0"
      ]
    },
    "2520": {
      "op": "extract 2 0",
      "defined_out": [
        "result2#0"
      ],
      "stack_out": [
        "result1#0",
        "result2#0"
      ]
    },
    "2523": {
      "op": "frame_dig 0",
      "defined_out": [
        "result1#0",
        "result2#0"
      ],
      "stack_out": [
        "result1#0",
        "result2#0",
        "result1#0"
      ]
    },
    "2525": {
      "op": "==",
      "defined_out": [
        "result1#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "result1#0",
        "tmp%10#0"
      ]
    },
    "2526": {
      "op": "assert",
      "stack_out": [
        "result1#0"
      ]
    },
    "2527": {
      "op": "itxn_begin"
    },
    "2528": {
      "op": "bytec 9 // 0x73",
      "defined_out": [
        "0x73",
        "result1#0"
      ],
      "stack_out": [
        "result1#0",
        "0x73"
      ]
    },
    "2530": {
      "op": "len",
      "defined_out": [
        "aggregate%length%2#1",
        "result1#0"
      ],
      "stack_out": [
        "result1#0",
        "aggregate%length%2#1"
      ]
    },
    "2531": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%2#1",
        "result1#0"
      ],
      "stack_out": [
        "result1#0",
        "aggregate%as_bytes%2#1"
      ]
    },
    "2532": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%length_uint16%2#1",
        "result1#0"
      ],
      "stack_out": [
        "result1#0",
        "aggregate%length_uint16%2#1"
      ]
    },
    "2535": {
      "op": "bytec 9 // 0x73",
      "stack_out": [
        "result1#0",
        "aggregate%length_uint16%2#1",
        "0x73"
      ]
    },
    "2537": {
      "op": "concat",
      "defined_out": [
        "inner_txn_params%2%%param_ApplicationArgs_idx_1#0",
        "result1#0"
      ],
      "stack_out": [
        "result1#0",
        "inner_txn_params%2%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "2538": {
      "op": "frame_dig -1",
      "defined_out": [
        "inner_txn_params%2%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%2%%param_ApplicationID_idx_0#0",
        "result1#0"
      ],
      "stack_out": [
        "result1#0",
        "inner_txn_params%2%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%2%%param_ApplicationID_idx_0#0"
      ]
    },
    "2540": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "result1#0",
        "inner_txn_params%2%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "2542": {
      "op": "bytec 26 // method \"echo_native_string(string)string\"",
      "defined_out": [
        "Method(echo_native_string(string)string)",
        "inner_txn_params%2%%param_ApplicationArgs_idx_1#0",
        "result1#0"
      ],
      "stack_out": [
        "result1#0",
        "inner_txn_params%2%%param_ApplicationArgs_idx_1#0",
        "Method(echo_native_string(string)string)"
      ]
    },
    "2544": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "result1#0",
        "inner_txn_params%2%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "2546": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "result1#0"
      ]
    },
    "2548": {
      "op": "intc_1 // appl",
      "defined_out": [
        "appl",
        "result1#0"
      ],
      "stack_out": [
        "result1#0",
        "appl"
      ]
    },
    "2549": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "result1#0"
      ]
    },
    "2551": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "result1#0"
      ],
      "stack_out": [
        "result1#0",
        "0"
      ]
    },
    "2552": {
      "op": "itxn_field Fee",
      "stack_out": [
        "result1#0"
      ]
    },
    "2554": {
      "block": "test_native_string_next_txn@3",
      "stack_in": [
        "result1#0"
      ],
      "op": "itxn_submit"
    },
    "2555": {
      "op": "itxn LastLog",
      "defined_out": [
        "awst_tmp%2#0"
      ],
      "stack_out": [
        "result1#0",
        "awst_tmp%2#0"
      ]
    },
    "2557": {
      "op": "dup",
      "defined_out": [
        "awst_tmp%2#0",
        "awst_tmp%2#0 (copy)"
      ],
      "stack_out": [
        "result1#0",
        "awst_tmp%2#0",
        "awst_tmp%2#0 (copy)"
      ]
    },
    "2558": {
      "op": "extract 4 0",
      "defined_out": [
        "awst_tmp%2#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "result1#0",
        "awst_tmp%2#0",
        "tmp%11#0"
      ]
    },
    "2561": {
      "op": "swap",
      "stack_out": [
        "result1#0",
        "tmp%11#0",
        "awst_tmp%2#0"
      ]
    },
    "2562": {
      "op": "extract 0 4",
      "defined_out": [
        "tmp%11#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "result1#0",
        "tmp%11#0",
        "tmp%12#0"
      ]
    },
    "2565": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%11#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "result1#0",
        "tmp%11#0",
        "tmp%12#0",
        "0x151f7c75"
      ]
    },
    "2566": {
      "op": "==",
      "defined_out": [
        "tmp%11#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "result1#0",
        "tmp%11#0",
        "tmp%13#0"
      ]
    },
    "2567": {
      "error": "application log value is not the result of an ABI return",
      "op": "assert // application log value is not the result of an ABI return",
      "stack_out": [
        "result1#0",
        "tmp%11#0"
      ]
    },
    "2568": {
      "op": "extract 2 0",
      "defined_out": [
        "result3#0"
      ],
      "stack_out": [
        "result1#0",
        "result3#0"
      ]
    },
    "2571": {
      "op": "frame_dig 0",
      "defined_out": [
        "result1#0",
        "result3#0"
      ],
      "stack_out": [
        "result1#0",
        "result3#0",
        "result1#0"
      ]
    },
    "2573": {
      "op": "==",
      "defined_out": [
        "result1#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "result1#0",
        "tmp%15#0"
      ]
    },
    "2574": {
      "op": "assert",
      "stack_out": [
        "result1#0"
      ]
    },
    "2575": {
      "retsub": true,
      "op": "retsub"
    },
    "2576": {
      "subroutine": "test_cases.typed_abi_call.typed_c2c.Greeter.test_native_bytes",
      "params": {
        "app#0": "uint64"
      },
      "block": "test_native_bytes",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "2579": {
      "op": "intc_0 // 0",
      "stack_out": [
        "result1#0"
      ]
    },
    "2580": {
      "block": "test_native_bytes_block@0",
      "stack_in": [
        "result1#0"
      ],
      "op": "itxn_begin"
    },
    "2581": {
      "op": "bytec 10 // 0x62",
      "defined_out": [
        "0x62"
      ],
      "stack_out": [
        "result1#0",
        "0x62"
      ]
    },
    "2583": {
      "op": "len",
      "defined_out": [
        "aggregate%length%0#1"
      ],
      "stack_out": [
        "result1#0",
        "aggregate%length%0#1"
      ]
    },
    "2584": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%0#1"
      ],
      "stack_out": [
        "result1#0",
        "aggregate%as_bytes%0#1"
      ]
    },
    "2585": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%length_uint16%0#1"
      ],
      "stack_out": [
        "result1#0",
        "aggregate%length_uint16%0#1"
      ]
    },
    "2588": {
      "op": "bytec 10 // 0x62",
      "stack_out": [
        "result1#0",
        "aggregate%length_uint16%0#1",
        "0x62"
      ]
    },
    "2590": {
      "op": "concat",
      "defined_out": [
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0"
      ],
      "stack_out": [
        "result1#0",
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "2591": {
      "op": "frame_dig -1",
      "defined_out": [
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%0%%param_ApplicationID_idx_0#0"
      ],
      "stack_out": [
        "result1#0",
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%0%%param_ApplicationID_idx_0#0"
      ]
    },
    "2593": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "result1#0",
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "2595": {
      "op": "bytec 27 // method \"echo_native_bytes(byte[])byte[]\"",
      "defined_out": [
        "Method(echo_native_bytes(byte[])byte[])",
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0"
      ],
      "stack_out": [
        "result1#0",
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0",
        "Method(echo_native_bytes(byte[])byte[])"
      ]
    },
    "2597": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "result1#0",
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "2599": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "result1#0"
      ]
    },
    "2601": {
      "op": "intc_1 // appl",
      "defined_out": [
        "appl"
      ],
      "stack_out": [
        "result1#0",
        "appl"
      ]
    },
    "2602": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "result1#0"
      ]
    },
    "2604": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "result1#0",
        "0"
      ]
    },
    "2605": {
      "op": "itxn_field Fee",
      "stack_out": [
        "result1#0"
      ]
    },
    "2607": {
      "block": "test_native_bytes_next_txn@1",
      "stack_in": [
        "result1#0"
      ],
      "op": "itxn_submit"
    },
    "2608": {
      "op": "itxn LastLog",
      "defined_out": [
        "awst_tmp%0#0"
      ],
      "stack_out": [
        "result1#0",
        "awst_tmp%0#0"
      ]
    },
    "2610": {
      "op": "dup",
      "defined_out": [
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ],
      "stack_out": [
        "result1#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ]
    },
    "2611": {
      "op": "extract 4 0",
      "defined_out": [
        "awst_tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "result1#0",
        "awst_tmp%0#0",
        "tmp%1#0"
      ]
    },
    "2614": {
      "op": "swap",
      "stack_out": [
        "result1#0",
        "tmp%1#0",
        "awst_tmp%0#0"
      ]
    },
    "2615": {
      "op": "extract 0 4",
      "defined_out": [
        "tmp%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "result1#0",
        "tmp%1#0",
        "tmp%2#0"
      ]
    },
    "2618": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "result1#0",
        "tmp%1#0",
        "tmp%2#0",
        "0x151f7c75"
      ]
    },
    "2619": {
      "op": "==",
      "defined_out": [
        "tmp%1#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "result1#0",
        "tmp%1#0",
        "tmp%3#0"
      ]
    },
    "2620": {
      "error": "application log value is not the result of an ABI return",
      "op": "assert // application log value is not the result of an ABI return",
      "stack_out": [
        "result1#0",
        "tmp%1#0"
      ]
    },
    "2621": {
      "op": "extract 2 0",
      "defined_out": [
        "result1#0"
      ],
      "stack_out": [
        "result1#0",
        "result1#0"
      ]
    },
    "2624": {
      "op": "dup",
      "stack_out": [
        "result1#0",
        "result1#0",
        "result1#0"
      ]
    },
    "2625": {
      "op": "frame_bury 0",
      "defined_out": [
        "result1#0"
      ],
      "stack_out": [
        "result1#0",
        "result1#0"
      ]
    },
    "2627": {
      "op": "pushbytes 0x6563686f3a2062",
      "defined_out": [
        "0x6563686f3a2062",
        "result1#0"
      ],
      "stack_out": [
        "result1#0",
        "result1#0",
        "0x6563686f3a2062"
      ]
    },
    "2636": {
      "op": "==",
      "defined_out": [
        "result1#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "result1#0",
        "tmp%5#0"
      ]
    },
    "2637": {
      "op": "assert",
      "stack_out": [
        "result1#0"
      ]
    },
    "2638": {
      "op": "itxn_begin"
    },
    "2639": {
      "op": "bytec 10 // 0x62",
      "defined_out": [
        "0x62",
        "result1#0"
      ],
      "stack_out": [
        "result1#0",
        "0x62"
      ]
    },
    "2641": {
      "op": "len",
      "defined_out": [
        "aggregate%length%1#1",
        "result1#0"
      ],
      "stack_out": [
        "result1#0",
        "aggregate%length%1#1"
      ]
    },
    "2642": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%1#1",
        "result1#0"
      ],
      "stack_out": [
        "result1#0",
        "aggregate%as_bytes%1#1"
      ]
    },
    "2643": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%length_uint16%1#1",
        "result1#0"
      ],
      "stack_out": [
        "result1#0",
        "aggregate%length_uint16%1#1"
      ]
    },
    "2646": {
      "op": "bytec 10 // 0x62",
      "stack_out": [
        "result1#0",
        "aggregate%length_uint16%1#1",
        "0x62"
      ]
    },
    "2648": {
      "op": "concat",
      "defined_out": [
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0",
        "result1#0"
      ],
      "stack_out": [
        "result1#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "2649": {
      "op": "frame_dig -1",
      "defined_out": [
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%1%%param_ApplicationID_idx_0#0",
        "result1#0"
      ],
      "stack_out": [
        "result1#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%1%%param_ApplicationID_idx_0#0"
      ]
    },
    "2651": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "result1#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "2653": {
      "op": "bytec 27 // method \"echo_native_bytes(byte[])byte[]\"",
      "defined_out": [
        "Method(echo_native_bytes(byte[])byte[])",
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0",
        "result1#0"
      ],
      "stack_out": [
        "result1#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0",
        "Method(echo_native_bytes(byte[])byte[])"
      ]
    },
    "2655": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "result1#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "2657": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "result1#0"
      ]
    },
    "2659": {
      "op": "intc_1 // appl",
      "defined_out": [
        "appl",
        "result1#0"
      ],
      "stack_out": [
        "result1#0",
        "appl"
      ]
    },
    "2660": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "result1#0"
      ]
    },
    "2662": {
      "op": "intc_0 // 0",
      "stack_out": [
        "result1#0",
        "0"
      ]
    },
    "2663": {
      "op": "itxn_field Fee",
      "stack_out": [
        "result1#0"
      ]
    },
    "2665": {
      "block": "test_native_bytes_next_txn@2",
      "stack_in": [
        "result1#0"
      ],
      "op": "itxn_submit"
    },
    "2666": {
      "op": "itxn LastLog",
      "defined_out": [
        "awst_tmp%1#0"
      ],
      "stack_out": [
        "result1#0",
        "awst_tmp%1#0"
      ]
    },
    "2668": {
      "op": "dup",
      "defined_out": [
        "awst_tmp%1#0",
        "awst_tmp%1#0 (copy)"
      ],
      "stack_out": [
        "result1#0",
        "awst_tmp%1#0",
        "awst_tmp%1#0 (copy)"
      ]
    },
    "2669": {
      "op": "extract 4 0",
      "defined_out": [
        "awst_tmp%1#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "result1#0",
        "awst_tmp%1#0",
        "tmp%7#0"
      ]
    },
    "2672": {
      "op": "swap",
      "stack_out": [
        "result1#0",
        "tmp%7#0",
        "awst_tmp%1#0"
      ]
    },
    "2673": {
      "op": "extract 0 4",
      "defined_out": [
        "tmp%7#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "result1#0",
        "tmp%7#0",
        "tmp%8#0"
      ]
    },
    "2676": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%7#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "result1#0",
        "tmp%7#0",
        "tmp%8#0",
        "0x151f7c75"
      ]
    },
    "2677": {
      "op": "==",
      "defined_out": [
        "tmp%7#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "result1#0",
        "tmp%7#0",
        "tmp%9#0"
      ]
    },
    "2678": {
      "error": "application log value is not the result of an ABI return",
      "op": "assert // application log value is not the result of an ABI return",
      "stack_out": [
        "result1#0",
        "tmp%7#0"
      ]
    },
    "2679": {
      "op": "extract 2 0",
      "defined_out": [
        "result2#0"
      ],
      "stack_out": [
        "result1#0",
        "result2#0"
      ]
    },
    "2682": {
      "op": "frame_dig 0",
      "defined_out": [
        "result1#0",
        "result2#0"
      ],
      "stack_out": [
        "result1#0",
        "result2#0",
        "result1#0"
      ]
    },
    "2684": {
      "op": "==",
      "defined_out": [
        "result1#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "result1#0",
        "tmp%11#0"
      ]
    },
    "2685": {
      "op": "assert",
      "stack_out": [
        "result1#0"
      ]
    },
    "2686": {
      "op": "itxn_begin"
    },
    "2687": {
      "op": "bytec 10 // 0x62",
      "defined_out": [
        "0x62",
        "result1#0"
      ],
      "stack_out": [
        "result1#0",
        "0x62"
      ]
    },
    "2689": {
      "op": "len",
      "defined_out": [
        "aggregate%length%2#1",
        "result1#0"
      ],
      "stack_out": [
        "result1#0",
        "aggregate%length%2#1"
      ]
    },
    "2690": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%2#1",
        "result1#0"
      ],
      "stack_out": [
        "result1#0",
        "aggregate%as_bytes%2#1"
      ]
    },
    "2691": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%length_uint16%2#1",
        "result1#0"
      ],
      "stack_out": [
        "result1#0",
        "aggregate%length_uint16%2#1"
      ]
    },
    "2694": {
      "op": "bytec 10 // 0x62",
      "stack_out": [
        "result1#0",
        "aggregate%length_uint16%2#1",
        "0x62"
      ]
    },
    "2696": {
      "op": "concat",
      "defined_out": [
        "inner_txn_params%2%%param_ApplicationArgs_idx_1#0",
        "result1#0"
      ],
      "stack_out": [
        "result1#0",
        "inner_txn_params%2%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "2697": {
      "op": "frame_dig -1",
      "defined_out": [
        "inner_txn_params%2%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%2%%param_ApplicationID_idx_0#0",
        "result1#0"
      ],
      "stack_out": [
        "result1#0",
        "inner_txn_params%2%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%2%%param_ApplicationID_idx_0#0"
      ]
    },
    "2699": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "result1#0",
        "inner_txn_params%2%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "2701": {
      "op": "bytec 27 // method \"echo_native_bytes(byte[])byte[]\"",
      "defined_out": [
        "Method(echo_native_bytes(byte[])byte[])",
        "inner_txn_params%2%%param_ApplicationArgs_idx_1#0",
        "result1#0"
      ],
      "stack_out": [
        "result1#0",
        "inner_txn_params%2%%param_ApplicationArgs_idx_1#0",
        "Method(echo_native_bytes(byte[])byte[])"
      ]
    },
    "2703": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "result1#0",
        "inner_txn_params%2%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "2705": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "result1#0"
      ]
    },
    "2707": {
      "op": "intc_1 // appl",
      "defined_out": [
        "appl",
        "result1#0"
      ],
      "stack_out": [
        "result1#0",
        "appl"
      ]
    },
    "2708": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "result1#0"
      ]
    },
    "2710": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "result1#0"
      ],
      "stack_out": [
        "result1#0",
        "0"
      ]
    },
    "2711": {
      "op": "itxn_field Fee",
      "stack_out": [
        "result1#0"
      ]
    },
    "2713": {
      "block": "test_native_bytes_next_txn@3",
      "stack_in": [
        "result1#0"
      ],
      "op": "itxn_submit"
    },
    "2714": {
      "op": "itxn LastLog",
      "defined_out": [
        "awst_tmp%2#0"
      ],
      "stack_out": [
        "result1#0",
        "awst_tmp%2#0"
      ]
    },
    "2716": {
      "op": "dup",
      "defined_out": [
        "awst_tmp%2#0",
        "awst_tmp%2#0 (copy)"
      ],
      "stack_out": [
        "result1#0",
        "awst_tmp%2#0",
        "awst_tmp%2#0 (copy)"
      ]
    },
    "2717": {
      "op": "extract 4 0",
      "defined_out": [
        "awst_tmp%2#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "result1#0",
        "awst_tmp%2#0",
        "tmp%13#0"
      ]
    },
    "2720": {
      "op": "swap",
      "stack_out": [
        "result1#0",
        "tmp%13#0",
        "awst_tmp%2#0"
      ]
    },
    "2721": {
      "op": "extract 0 4",
      "defined_out": [
        "tmp%13#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "result1#0",
        "tmp%13#0",
        "tmp%14#0"
      ]
    },
    "2724": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%13#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "result1#0",
        "tmp%13#0",
        "tmp%14#0",
        "0x151f7c75"
      ]
    },
    "2725": {
      "op": "==",
      "defined_out": [
        "tmp%13#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "result1#0",
        "tmp%13#0",
        "tmp%15#0"
      ]
    },
    "2726": {
      "error": "application log value is not the result of an ABI return",
      "op": "assert // application log value is not the result of an ABI return",
      "stack_out": [
        "result1#0",
        "tmp%13#0"
      ]
    },
    "2727": {
      "op": "extract 2 0",
      "defined_out": [
        "result3#0"
      ],
      "stack_out": [
        "result1#0",
        "result3#0"
      ]
    },
    "2730": {
      "op": "frame_dig 0",
      "defined_out": [
        "result1#0",
        "result3#0"
      ],
      "stack_out": [
        "result1#0",
        "result3#0",
        "result1#0"
      ]
    },
    "2732": {
      "op": "==",
      "defined_out": [
        "result1#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "result1#0",
        "tmp%17#0"
      ]
    },
    "2733": {
      "op": "assert",
      "stack_out": [
        "result1#0"
      ]
    },
    "2734": {
      "retsub": true,
      "op": "retsub"
    },
    "2735": {
      "subroutine": "test_cases.typed_abi_call.typed_c2c.Greeter.test_native_uint64",
      "params": {
        "app#0": "uint64"
      },
      "block": "test_native_uint64",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "2738": {
      "op": "bytec_2 // \"\"",
      "stack_out": [
        "result1#0"
      ]
    },
    "2739": {
      "block": "test_native_uint64_block@0",
      "stack_in": [
        "result1#0"
      ],
      "op": "itxn_begin"
    },
    "2740": {
      "op": "frame_dig -1",
      "defined_out": [
        "inner_txn_params%0%%param_ApplicationID_idx_0#0"
      ],
      "stack_out": [
        "result1#0",
        "inner_txn_params%0%%param_ApplicationID_idx_0#0"
      ]
    },
    "2742": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "result1#0"
      ]
    },
    "2744": {
      "op": "bytec 28 // method \"echo_native_uint64(uint64)uint64\"",
      "defined_out": [
        "Method(echo_native_uint64(uint64)uint64)"
      ],
      "stack_out": [
        "result1#0",
        "Method(echo_native_uint64(uint64)uint64)"
      ]
    },
    "2746": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "result1#0"
      ]
    },
    "2748": {
      "op": "bytec 4 // 0x0000000000000001",
      "defined_out": [
        "0x0000000000000001"
      ],
      "stack_out": [
        "result1#0",
        "0x0000000000000001"
      ]
    },
    "2750": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "result1#0"
      ]
    },
    "2752": {
      "op": "intc_1 // appl",
      "defined_out": [
        "appl"
      ],
      "stack_out": [
        "result1#0",
        "appl"
      ]
    },
    "2753": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "result1#0"
      ]
    },
    "2755": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "result1#0",
        "0"
      ]
    },
    "2756": {
      "op": "itxn_field Fee",
      "stack_out": [
        "result1#0"
      ]
    },
    "2758": {
      "block": "test_native_uint64_next_txn@1",
      "stack_in": [
        "result1#0"
      ],
      "op": "itxn_submit"
    },
    "2759": {
      "op": "itxn LastLog",
      "defined_out": [
        "awst_tmp%0#0"
      ],
      "stack_out": [
        "result1#0",
        "awst_tmp%0#0"
      ]
    },
    "2761": {
      "op": "dup",
      "defined_out": [
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ],
      "stack_out": [
        "result1#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ]
    },
    "2762": {
      "op": "extract 4 0",
      "defined_out": [
        "awst_tmp%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "result1#0",
        "awst_tmp%0#0",
        "tmp%0#0"
      ]
    },
    "2765": {
      "op": "swap",
      "stack_out": [
        "result1#0",
        "tmp%0#0",
        "awst_tmp%0#0"
      ]
    },
    "2766": {
      "op": "extract 0 4",
      "defined_out": [
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "result1#0",
        "tmp%0#0",
        "tmp%1#0"
      ]
    },
    "2769": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "result1#0",
        "tmp%0#0",
        "tmp%1#0",
        "0x151f7c75"
      ]
    },
    "2770": {
      "op": "==",
      "defined_out": [
        "tmp%0#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "result1#0",
        "tmp%0#0",
        "tmp%2#0"
      ]
    },
    "2771": {
      "error": "application log value is not the result of an ABI return",
      "op": "assert // application log value is not the result of an ABI return",
      "stack_out": [
        "result1#0",
        "tmp%0#0"
      ]
    },
    "2772": {
      "op": "btoi",
      "defined_out": [
        "result1#0"
      ],
      "stack_out": [
        "result1#0",
        "result1#0"
      ]
    },
    "2773": {
      "op": "dup",
      "stack_out": [
        "result1#0",
        "result1#0",
        "result1#0"
      ]
    },
    "2774": {
      "op": "frame_bury 0",
      "defined_out": [
        "result1#0"
      ],
      "stack_out": [
        "result1#0",
        "result1#0"
      ]
    },
    "2776": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "result1#0"
      ],
      "stack_out": [
        "result1#0",
        "result1#0",
        "2"
      ]
    },
    "2777": {
      "op": "==",
      "defined_out": [
        "result1#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "result1#0",
        "tmp%4#0"
      ]
    },
    "2778": {
      "op": "assert",
      "stack_out": [
        "result1#0"
      ]
    },
    "2779": {
      "op": "itxn_begin"
    },
    "2780": {
      "op": "intc_3 // 1",
      "stack_out": [
        "result1#0",
        "1"
      ]
    },
    "2781": {
      "op": "itob",
      "defined_out": [
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0",
        "result1#0"
      ],
      "stack_out": [
        "result1#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "2782": {
      "op": "frame_dig -1",
      "defined_out": [
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%1%%param_ApplicationID_idx_0#0",
        "result1#0"
      ],
      "stack_out": [
        "result1#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%1%%param_ApplicationID_idx_0#0"
      ]
    },
    "2784": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "result1#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "2786": {
      "op": "bytec 28 // method \"echo_native_uint64(uint64)uint64\"",
      "defined_out": [
        "Method(echo_native_uint64(uint64)uint64)",
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0",
        "result1#0"
      ],
      "stack_out": [
        "result1#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0",
        "Method(echo_native_uint64(uint64)uint64)"
      ]
    },
    "2788": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "result1#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "2790": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "result1#0"
      ]
    },
    "2792": {
      "op": "intc_1 // appl",
      "defined_out": [
        "appl",
        "result1#0"
      ],
      "stack_out": [
        "result1#0",
        "appl"
      ]
    },
    "2793": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "result1#0"
      ]
    },
    "2795": {
      "op": "intc_0 // 0",
      "stack_out": [
        "result1#0",
        "0"
      ]
    },
    "2796": {
      "op": "itxn_field Fee",
      "stack_out": [
        "result1#0"
      ]
    },
    "2798": {
      "block": "test_native_uint64_next_txn@2",
      "stack_in": [
        "result1#0"
      ],
      "op": "itxn_submit"
    },
    "2799": {
      "op": "itxn LastLog",
      "defined_out": [
        "awst_tmp%1#0"
      ],
      "stack_out": [
        "result1#0",
        "awst_tmp%1#0"
      ]
    },
    "2801": {
      "op": "dup",
      "defined_out": [
        "awst_tmp%1#0",
        "awst_tmp%1#0 (copy)"
      ],
      "stack_out": [
        "result1#0",
        "awst_tmp%1#0",
        "awst_tmp%1#0 (copy)"
      ]
    },
    "2802": {
      "op": "extract 4 0",
      "defined_out": [
        "awst_tmp%1#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "result1#0",
        "awst_tmp%1#0",
        "tmp%6#0"
      ]
    },
    "2805": {
      "op": "swap",
      "stack_out": [
        "result1#0",
        "tmp%6#0",
        "awst_tmp%1#0"
      ]
    },
    "2806": {
      "op": "extract 0 4",
      "defined_out": [
        "tmp%6#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "result1#0",
        "tmp%6#0",
        "tmp%7#0"
      ]
    },
    "2809": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%6#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "result1#0",
        "tmp%6#0",
        "tmp%7#0",
        "0x151f7c75"
      ]
    },
    "2810": {
      "op": "==",
      "defined_out": [
        "tmp%6#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "result1#0",
        "tmp%6#0",
        "tmp%8#0"
      ]
    },
    "2811": {
      "error": "application log value is not the result of an ABI return",
      "op": "assert // application log value is not the result of an ABI return",
      "stack_out": [
        "result1#0",
        "tmp%6#0"
      ]
    },
    "2812": {
      "op": "btoi",
      "defined_out": [
        "result2#0"
      ],
      "stack_out": [
        "result1#0",
        "result2#0"
      ]
    },
    "2813": {
      "op": "frame_dig 0",
      "defined_out": [
        "result1#0",
        "result2#0"
      ],
      "stack_out": [
        "result1#0",
        "result2#0",
        "result1#0"
      ]
    },
    "2815": {
      "op": "==",
      "defined_out": [
        "result1#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "result1#0",
        "tmp%10#0"
      ]
    },
    "2816": {
      "op": "assert",
      "stack_out": [
        "result1#0"
      ]
    },
    "2817": {
      "op": "itxn_begin"
    },
    "2818": {
      "op": "frame_dig -1",
      "defined_out": [
        "inner_txn_params%2%%param_ApplicationID_idx_0#0",
        "result1#0"
      ],
      "stack_out": [
        "result1#0",
        "inner_txn_params%2%%param_ApplicationID_idx_0#0"
      ]
    },
    "2820": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "result1#0"
      ]
    },
    "2822": {
      "op": "bytec 28 // method \"echo_native_uint64(uint64)uint64\"",
      "defined_out": [
        "Method(echo_native_uint64(uint64)uint64)",
        "result1#0"
      ],
      "stack_out": [
        "result1#0",
        "Method(echo_native_uint64(uint64)uint64)"
      ]
    },
    "2824": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "result1#0"
      ]
    },
    "2826": {
      "op": "bytec 4 // 0x0000000000000001",
      "defined_out": [
        "0x0000000000000001",
        "result1#0"
      ],
      "stack_out": [
        "result1#0",
        "0x0000000000000001"
      ]
    },
    "2828": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "result1#0"
      ]
    },
    "2830": {
      "op": "intc_1 // appl",
      "defined_out": [
        "appl",
        "result1#0"
      ],
      "stack_out": [
        "result1#0",
        "appl"
      ]
    },
    "2831": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "result1#0"
      ]
    },
    "2833": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "result1#0"
      ],
      "stack_out": [
        "result1#0",
        "0"
      ]
    },
    "2834": {
      "op": "itxn_field Fee",
      "stack_out": [
        "result1#0"
      ]
    },
    "2836": {
      "block": "test_native_uint64_next_txn@3",
      "stack_in": [
        "result1#0"
      ],
      "op": "itxn_submit"
    },
    "2837": {
      "op": "itxn LastLog",
      "defined_out": [
        "awst_tmp%2#0"
      ],
      "stack_out": [
        "result1#0",
        "awst_tmp%2#0"
      ]
    },
    "2839": {
      "op": "dup",
      "defined_out": [
        "awst_tmp%2#0",
        "awst_tmp%2#0 (copy)"
      ],
      "stack_out": [
        "result1#0",
        "awst_tmp%2#0",
        "awst_tmp%2#0 (copy)"
      ]
    },
    "2840": {
      "op": "extract 4 0",
      "defined_out": [
        "awst_tmp%2#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "result1#0",
        "awst_tmp%2#0",
        "tmp%11#0"
      ]
    },
    "2843": {
      "op": "swap",
      "stack_out": [
        "result1#0",
        "tmp%11#0",
        "awst_tmp%2#0"
      ]
    },
    "2844": {
      "op": "extract 0 4",
      "defined_out": [
        "tmp%11#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "result1#0",
        "tmp%11#0",
        "tmp%12#0"
      ]
    },
    "2847": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%11#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "result1#0",
        "tmp%11#0",
        "tmp%12#0",
        "0x151f7c75"
      ]
    },
    "2848": {
      "op": "==",
      "defined_out": [
        "tmp%11#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "result1#0",
        "tmp%11#0",
        "tmp%13#0"
      ]
    },
    "2849": {
      "error": "application log value is not the result of an ABI return",
      "op": "assert // application log value is not the result of an ABI return",
      "stack_out": [
        "result1#0",
        "tmp%11#0"
      ]
    },
    "2850": {
      "op": "btoi",
      "defined_out": [
        "result3#0"
      ],
      "stack_out": [
        "result1#0",
        "result3#0"
      ]
    },
    "2851": {
      "op": "frame_dig 0",
      "defined_out": [
        "result1#0",
        "result3#0"
      ],
      "stack_out": [
        "result1#0",
        "result3#0",
        "result1#0"
      ]
    },
    "2853": {
      "op": "==",
      "defined_out": [
        "result1#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "result1#0",
        "tmp%15#0"
      ]
    },
    "2854": {
      "op": "assert",
      "stack_out": [
        "result1#0"
      ]
    },
    "2855": {
      "retsub": true,
      "op": "retsub"
    },
    "2856": {
      "subroutine": "test_cases.typed_abi_call.typed_c2c.Greeter.test_native_biguint",
      "params": {
        "app#0": "uint64"
      },
      "block": "test_native_biguint",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "2859": {
      "op": "intc_0 // 0",
      "stack_out": [
        "result1#0"
      ]
    },
    "2860": {
      "block": "test_native_biguint_block@0",
      "stack_in": [
        "result1#0"
      ],
      "op": "itxn_begin"
    },
    "2861": {
      "op": "frame_dig -1",
      "defined_out": [
        "inner_txn_params%0%%param_ApplicationID_idx_0#0"
      ],
      "stack_out": [
        "result1#0",
        "inner_txn_params%0%%param_ApplicationID_idx_0#0"
      ]
    },
    "2863": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "result1#0"
      ]
    },
    "2865": {
      "op": "bytec 29 // method \"echo_native_biguint(uint512)uint512\"",
      "defined_out": [
        "Method(echo_native_biguint(uint512)uint512)"
      ],
      "stack_out": [
        "result1#0",
        "Method(echo_native_biguint(uint512)uint512)"
      ]
    },
    "2867": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "result1#0"
      ]
    },
    "2869": {
      "op": "bytec 6 // 0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002",
      "defined_out": [
        "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002"
      ],
      "stack_out": [
        "result1#0",
        "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002"
      ]
    },
    "2871": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "result1#0"
      ]
    },
    "2873": {
      "op": "intc_1 // appl",
      "defined_out": [
        "appl"
      ],
      "stack_out": [
        "result1#0",
        "appl"
      ]
    },
    "2874": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "result1#0"
      ]
    },
    "2876": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "result1#0",
        "0"
      ]
    },
    "2877": {
      "op": "itxn_field Fee",
      "stack_out": [
        "result1#0"
      ]
    },
    "2879": {
      "block": "test_native_biguint_next_txn@1",
      "stack_in": [
        "result1#0"
      ],
      "op": "itxn_submit"
    },
    "2880": {
      "op": "itxn LastLog",
      "defined_out": [
        "awst_tmp%0#0"
      ],
      "stack_out": [
        "result1#0",
        "awst_tmp%0#0"
      ]
    },
    "2882": {
      "op": "dup",
      "defined_out": [
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ],
      "stack_out": [
        "result1#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ]
    },
    "2883": {
      "op": "extract 4 0",
      "defined_out": [
        "awst_tmp%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "result1#0",
        "awst_tmp%0#0",
        "tmp%0#0"
      ]
    },
    "2886": {
      "op": "swap",
      "stack_out": [
        "result1#0",
        "tmp%0#0",
        "awst_tmp%0#0"
      ]
    },
    "2887": {
      "op": "extract 0 4",
      "defined_out": [
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "result1#0",
        "tmp%0#0",
        "tmp%1#0"
      ]
    },
    "2890": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "result1#0",
        "tmp%0#0",
        "tmp%1#0",
        "0x151f7c75"
      ]
    },
    "2891": {
      "op": "==",
      "defined_out": [
        "tmp%0#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "result1#0",
        "tmp%0#0",
        "tmp%2#0"
      ]
    },
    "2892": {
      "error": "application log value is not the result of an ABI return",
      "op": "assert // application log value is not the result of an ABI return",
      "defined_out": [
        "result1#0"
      ],
      "stack_out": [
        "result1#0",
        "result1#0"
      ]
    },
    "2893": {
      "op": "dup",
      "stack_out": [
        "result1#0",
        "result1#0",
        "result1#0"
      ]
    },
    "2894": {
      "op": "frame_bury 0",
      "defined_out": [
        "result1#0"
      ],
      "stack_out": [
        "result1#0",
        "result1#0"
      ]
    },
    "2896": {
      "op": "bytec 30 // 0x03",
      "defined_out": [
        "0x03",
        "result1#0"
      ],
      "stack_out": [
        "result1#0",
        "result1#0",
        "0x03"
      ]
    },
    "2898": {
      "op": "b==",
      "defined_out": [
        "result1#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "result1#0",
        "tmp%4#0"
      ]
    },
    "2899": {
      "op": "assert",
      "stack_out": [
        "result1#0"
      ]
    },
    "2900": {
      "op": "itxn_begin"
    },
    "2901": {
      "op": "bytec 11 // 0x02",
      "defined_out": [
        "0x02",
        "result1#0"
      ],
      "stack_out": [
        "result1#0",
        "0x02"
      ]
    },
    "2903": {
      "op": "len",
      "defined_out": [
        "aggregate%value_len%0#1",
        "result1#0"
      ],
      "stack_out": [
        "result1#0",
        "aggregate%value_len%0#1"
      ]
    },
    "2904": {
      "op": "pushint 64 // 64",
      "defined_out": [
        "64",
        "aggregate%value_len%0#1",
        "result1#0"
      ],
      "stack_out": [
        "result1#0",
        "aggregate%value_len%0#1",
        "64"
      ]
    },
    "2906": {
      "op": "<=",
      "defined_out": [
        "aggregate%len_ok%0#1",
        "result1#0"
      ],
      "stack_out": [
        "result1#0",
        "aggregate%len_ok%0#1"
      ]
    },
    "2907": {
      "error": "overflow",
      "op": "assert // overflow",
      "stack_out": [
        "result1#0"
      ]
    },
    "2908": {
      "op": "pushint 64 // 64",
      "stack_out": [
        "result1#0",
        "64"
      ]
    },
    "2910": {
      "op": "bzero",
      "defined_out": [
        "aggregate%bzero%0#1",
        "result1#0"
      ],
      "stack_out": [
        "result1#0",
        "aggregate%bzero%0#1"
      ]
    },
    "2911": {
      "op": "bytec 11 // 0x02",
      "stack_out": [
        "result1#0",
        "aggregate%bzero%0#1",
        "0x02"
      ]
    },
    "2913": {
      "op": "b|",
      "defined_out": [
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0",
        "result1#0"
      ],
      "stack_out": [
        "result1#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "2914": {
      "op": "frame_dig -1",
      "defined_out": [
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%1%%param_ApplicationID_idx_0#0",
        "result1#0"
      ],
      "stack_out": [
        "result1#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%1%%param_ApplicationID_idx_0#0"
      ]
    },
    "2916": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "result1#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "2918": {
      "op": "bytec 29 // method \"echo_native_biguint(uint512)uint512\"",
      "defined_out": [
        "Method(echo_native_biguint(uint512)uint512)",
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0",
        "result1#0"
      ],
      "stack_out": [
        "result1#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0",
        "Method(echo_native_biguint(uint512)uint512)"
      ]
    },
    "2920": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "result1#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "2922": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "result1#0"
      ]
    },
    "2924": {
      "op": "intc_1 // appl",
      "defined_out": [
        "appl",
        "result1#0"
      ],
      "stack_out": [
        "result1#0",
        "appl"
      ]
    },
    "2925": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "result1#0"
      ]
    },
    "2927": {
      "op": "intc_0 // 0",
      "stack_out": [
        "result1#0",
        "0"
      ]
    },
    "2928": {
      "op": "itxn_field Fee",
      "stack_out": [
        "result1#0"
      ]
    },
    "2930": {
      "block": "test_native_biguint_next_txn@2",
      "stack_in": [
        "result1#0"
      ],
      "op": "itxn_submit"
    },
    "2931": {
      "op": "itxn LastLog",
      "defined_out": [
        "awst_tmp%1#0"
      ],
      "stack_out": [
        "result1#0",
        "awst_tmp%1#0"
      ]
    },
    "2933": {
      "op": "dup",
      "defined_out": [
        "awst_tmp%1#0",
        "awst_tmp%1#0 (copy)"
      ],
      "stack_out": [
        "result1#0",
        "awst_tmp%1#0",
        "awst_tmp%1#0 (copy)"
      ]
    },
    "2934": {
      "op": "extract 4 0",
      "defined_out": [
        "awst_tmp%1#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "result1#0",
        "awst_tmp%1#0",
        "tmp%6#0"
      ]
    },
    "2937": {
      "op": "swap",
      "stack_out": [
        "result1#0",
        "tmp%6#0",
        "awst_tmp%1#0"
      ]
    },
    "2938": {
      "op": "extract 0 4",
      "defined_out": [
        "tmp%6#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "result1#0",
        "tmp%6#0",
        "tmp%7#0"
      ]
    },
    "2941": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%6#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "result1#0",
        "tmp%6#0",
        "tmp%7#0",
        "0x151f7c75"
      ]
    },
    "2942": {
      "op": "==",
      "defined_out": [
        "tmp%6#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "result1#0",
        "tmp%6#0",
        "tmp%8#0"
      ]
    },
    "2943": {
      "error": "application log value is not the result of an ABI return",
      "op": "assert // application log value is not the result of an ABI return",
      "defined_out": [
        "result2#0"
      ],
      "stack_out": [
        "result1#0",
        "result2#0"
      ]
    },
    "2944": {
      "op": "frame_dig 0",
      "defined_out": [
        "result1#0",
        "result2#0"
      ],
      "stack_out": [
        "result1#0",
        "result2#0",
        "result1#0"
      ]
    },
    "2946": {
      "op": "b==",
      "defined_out": [
        "result1#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "result1#0",
        "tmp%10#0"
      ]
    },
    "2947": {
      "op": "assert",
      "stack_out": [
        "result1#0"
      ]
    },
    "2948": {
      "op": "itxn_begin"
    },
    "2949": {
      "op": "frame_dig -1",
      "defined_out": [
        "inner_txn_params%2%%param_ApplicationID_idx_0#0",
        "result1#0"
      ],
      "stack_out": [
        "result1#0",
        "inner_txn_params%2%%param_ApplicationID_idx_0#0"
      ]
    },
    "2951": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "result1#0"
      ]
    },
    "2953": {
      "op": "bytec 29 // method \"echo_native_biguint(uint512)uint512\"",
      "defined_out": [
        "Method(echo_native_biguint(uint512)uint512)",
        "result1#0"
      ],
      "stack_out": [
        "result1#0",
        "Method(echo_native_biguint(uint512)uint512)"
      ]
    },
    "2955": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "result1#0"
      ]
    },
    "2957": {
      "op": "bytec 6 // 0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002",
      "defined_out": [
        "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002",
        "result1#0"
      ],
      "stack_out": [
        "result1#0",
        "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002"
      ]
    },
    "2959": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "result1#0"
      ]
    },
    "2961": {
      "op": "intc_1 // appl",
      "defined_out": [
        "appl",
        "result1#0"
      ],
      "stack_out": [
        "result1#0",
        "appl"
      ]
    },
    "2962": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "result1#0"
      ]
    },
    "2964": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "result1#0"
      ],
      "stack_out": [
        "result1#0",
        "0"
      ]
    },
    "2965": {
      "op": "itxn_field Fee",
      "stack_out": [
        "result1#0"
      ]
    },
    "2967": {
      "block": "test_native_biguint_next_txn@3",
      "stack_in": [
        "result1#0"
      ],
      "op": "itxn_submit"
    },
    "2968": {
      "op": "itxn LastLog",
      "defined_out": [
        "awst_tmp%2#0"
      ],
      "stack_out": [
        "result1#0",
        "awst_tmp%2#0"
      ]
    },
    "2970": {
      "op": "dup",
      "defined_out": [
        "awst_tmp%2#0",
        "awst_tmp%2#0 (copy)"
      ],
      "stack_out": [
        "result1#0",
        "awst_tmp%2#0",
        "awst_tmp%2#0 (copy)"
      ]
    },
    "2971": {
      "op": "extract 4 0",
      "defined_out": [
        "awst_tmp%2#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "result1#0",
        "awst_tmp%2#0",
        "tmp%11#0"
      ]
    },
    "2974": {
      "op": "swap",
      "stack_out": [
        "result1#0",
        "tmp%11#0",
        "awst_tmp%2#0"
      ]
    },
    "2975": {
      "op": "extract 0 4",
      "defined_out": [
        "tmp%11#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "result1#0",
        "tmp%11#0",
        "tmp%12#0"
      ]
    },
    "2978": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%11#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "result1#0",
        "tmp%11#0",
        "tmp%12#0",
        "0x151f7c75"
      ]
    },
    "2979": {
      "op": "==",
      "defined_out": [
        "tmp%11#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "result1#0",
        "tmp%11#0",
        "tmp%13#0"
      ]
    },
    "2980": {
      "error": "application log value is not the result of an ABI return",
      "op": "assert // application log value is not the result of an ABI return",
      "defined_out": [
        "result3#0"
      ],
      "stack_out": [
        "result1#0",
        "result3#0"
      ]
    },
    "2981": {
      "op": "frame_dig 0",
      "defined_out": [
        "result1#0",
        "result3#0"
      ],
      "stack_out": [
        "result1#0",
        "result3#0",
        "result1#0"
      ]
    },
    "2983": {
      "op": "b==",
      "defined_out": [
        "result1#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "result1#0",
        "tmp%15#0"
      ]
    },
    "2984": {
      "op": "assert",
      "stack_out": [
        "result1#0"
      ]
    },
    "2985": {
      "retsub": true,
      "op": "retsub"
    },
    "2986": {
      "subroutine": "test_cases.typed_abi_call.typed_c2c.Greeter.test_native_tuple",
      "params": {
        "app#0": "uint64"
      },
      "block": "test_native_tuple",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "2989": {
      "op": "intc_0 // 0",
      "stack_out": [
        "result1#0"
      ]
    },
    "2990": {
      "block": "test_native_tuple_block@0",
      "stack_in": [
        "result1#0"
      ],
      "op": "itxn_begin"
    },
    "2991": {
      "op": "bytec_1 // 0x7331",
      "defined_out": [
        "0x7331"
      ],
      "stack_out": [
        "result1#0",
        "0x7331"
      ]
    },
    "2992": {
      "op": "len",
      "defined_out": [
        "aggregate%length%0#1"
      ],
      "stack_out": [
        "result1#0",
        "aggregate%length%0#1"
      ]
    },
    "2993": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%0#1"
      ],
      "stack_out": [
        "result1#0",
        "aggregate%as_bytes%0#1"
      ]
    },
    "2994": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%length_uint16%0#1"
      ],
      "stack_out": [
        "result1#0",
        "aggregate%length_uint16%0#1"
      ]
    },
    "2997": {
      "op": "bytec_1 // 0x7331",
      "stack_out": [
        "result1#0",
        "aggregate%length_uint16%0#1",
        "0x7331"
      ]
    },
    "2998": {
      "op": "concat",
      "defined_out": [
        "encoded%0#0"
      ],
      "stack_out": [
        "result1#0",
        "encoded%0#0"
      ]
    },
    "2999": {
      "op": "bytec_3 // 0x6231",
      "defined_out": [
        "0x6231",
        "encoded%0#0"
      ],
      "stack_out": [
        "result1#0",
        "encoded%0#0",
        "0x6231"
      ]
    },
    "3000": {
      "op": "len",
      "defined_out": [
        "aggregate%length%1#1",
        "encoded%0#0"
      ],
      "stack_out": [
        "result1#0",
        "encoded%0#0",
        "aggregate%length%1#1"
      ]
    },
    "3001": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%1#1",
        "encoded%0#0"
      ],
      "stack_out": [
        "result1#0",
        "encoded%0#0",
        "aggregate%as_bytes%1#1"
      ]
    },
    "3002": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%length_uint16%1#1",
        "encoded%0#0"
      ],
      "stack_out": [
        "result1#0",
        "encoded%0#0",
        "aggregate%length_uint16%1#1"
      ]
    },
    "3005": {
      "op": "bytec_3 // 0x6231",
      "stack_out": [
        "result1#0",
        "encoded%0#0",
        "aggregate%length_uint16%1#1",
        "0x6231"
      ]
    },
    "3006": {
      "op": "concat",
      "defined_out": [
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%0%%param_ApplicationArgs_idx_2#0"
      ],
      "stack_out": [
        "result1#0",
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%0%%param_ApplicationArgs_idx_2#0"
      ]
    },
    "3007": {
      "op": "swap",
      "stack_out": [
        "result1#0",
        "inner_txn_params%0%%param_ApplicationArgs_idx_2#0",
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "3008": {
      "op": "frame_dig -1",
      "defined_out": [
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%0%%param_ApplicationArgs_idx_2#0",
        "inner_txn_params%0%%param_ApplicationID_idx_0#0"
      ],
      "stack_out": [
        "result1#0",
        "inner_txn_params%0%%param_ApplicationArgs_idx_2#0",
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%0%%param_ApplicationID_idx_0#0"
      ]
    },
    "3010": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "result1#0",
        "inner_txn_params%0%%param_ApplicationArgs_idx_2#0",
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "3012": {
      "op": "bytec 7 // method \"echo_native_tuple(string,byte[],uint64,uint512)(string,byte[],uint64,uint512)\"",
      "defined_out": [
        "Method(echo_native_tuple(string,byte[],uint64,uint512)(string,byte[],uint64,uint512))",
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%0%%param_ApplicationArgs_idx_2#0"
      ],
      "stack_out": [
        "result1#0",
        "inner_txn_params%0%%param_ApplicationArgs_idx_2#0",
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0",
        "Method(echo_native_tuple(string,byte[],uint64,uint512)(string,byte[],uint64,uint512))"
      ]
    },
    "3014": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "result1#0",
        "inner_txn_params%0%%param_ApplicationArgs_idx_2#0",
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "3016": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "result1#0",
        "inner_txn_params%0%%param_ApplicationArgs_idx_2#0"
      ]
    },
    "3018": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "result1#0"
      ]
    },
    "3020": {
      "op": "bytec 4 // 0x0000000000000001",
      "defined_out": [
        "0x0000000000000001"
      ],
      "stack_out": [
        "result1#0",
        "0x0000000000000001"
      ]
    },
    "3022": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "result1#0"
      ]
    },
    "3024": {
      "op": "bytec 6 // 0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002",
      "defined_out": [
        "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002"
      ],
      "stack_out": [
        "result1#0",
        "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002"
      ]
    },
    "3026": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "result1#0"
      ]
    },
    "3028": {
      "op": "intc_1 // appl",
      "defined_out": [
        "appl"
      ],
      "stack_out": [
        "result1#0",
        "appl"
      ]
    },
    "3029": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "result1#0"
      ]
    },
    "3031": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "result1#0",
        "0"
      ]
    },
    "3032": {
      "op": "itxn_field Fee",
      "stack_out": [
        "result1#0"
      ]
    },
    "3034": {
      "block": "test_native_tuple_next_txn@1",
      "stack_in": [
        "result1#0"
      ],
      "op": "itxn_submit"
    },
    "3035": {
      "op": "itxn LastLog",
      "defined_out": [
        "awst_tmp%0#0"
      ],
      "stack_out": [
        "result1#0",
        "awst_tmp%0#0"
      ]
    },
    "3037": {
      "op": "dup",
      "defined_out": [
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ],
      "stack_out": [
        "result1#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ]
    },
    "3038": {
      "op": "extract 4 0",
      "defined_out": [
        "awst_tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "result1#0",
        "awst_tmp%0#0",
        "tmp%1#0"
      ]
    },
    "3041": {
      "op": "swap",
      "stack_out": [
        "result1#0",
        "tmp%1#0",
        "awst_tmp%0#0"
      ]
    },
    "3042": {
      "op": "extract 0 4",
      "defined_out": [
        "tmp%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "result1#0",
        "tmp%1#0",
        "tmp%2#0"
      ]
    },
    "3045": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "result1#0",
        "tmp%1#0",
        "tmp%2#0",
        "0x151f7c75"
      ]
    },
    "3046": {
      "op": "==",
      "defined_out": [
        "tmp%1#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "result1#0",
        "tmp%1#0",
        "tmp%3#0"
      ]
    },
    "3047": {
      "error": "application log value is not the result of an ABI return",
      "op": "assert // application log value is not the result of an ABI return",
      "defined_out": [
        "result1#0"
      ],
      "stack_out": [
        "result1#0",
        "result1#0"
      ]
    },
    "3048": {
      "op": "dup",
      "stack_out": [
        "result1#0",
        "result1#0",
        "result1#0"
      ]
    },
    "3049": {
      "op": "frame_bury 0",
      "defined_out": [
        "result1#0"
      ],
      "stack_out": [
        "result1#0",
        "result1#0"
      ]
    },
    "3051": {
      "op": "dup",
      "defined_out": [
        "result1#0",
        "result1#0 (copy)"
      ],
      "stack_out": [
        "result1#0",
        "result1#0",
        "result1#0 (copy)"
      ]
    },
    "3052": {
      "op": "intc_0 // 0",
      "stack_out": [
        "result1#0",
        "result1#0",
        "result1#0 (copy)",
        "0"
      ]
    },
    "3053": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%extract_uint16%0#1",
        "result1#0"
      ],
      "stack_out": [
        "result1#0",
        "result1#0",
        "aggregate%extract_uint16%0#1"
      ]
    },
    "3054": {
      "op": "swap",
      "stack_out": [
        "result1#0",
        "aggregate%extract_uint16%0#1",
        "result1#0"
      ]
    },
    "3055": {
      "op": "dup",
      "stack_out": [
        "result1#0",
        "aggregate%extract_uint16%0#1",
        "result1#0",
        "result1#0 (copy)"
      ]
    },
    "3056": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "aggregate%extract_uint16%0#1",
        "result1#0",
        "result1#0 (copy)"
      ],
      "stack_out": [
        "result1#0",
        "aggregate%extract_uint16%0#1",
        "result1#0",
        "result1#0 (copy)",
        "2"
      ]
    },
    "3057": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%extract_uint16%0#1",
        "aggregate%extract_uint16%1#1",
        "result1#0"
      ],
      "stack_out": [
        "result1#0",
        "aggregate%extract_uint16%0#1",
        "result1#0",
        "aggregate%extract_uint16%1#1"
      ]
    },
    "3058": {
      "op": "dig 1",
      "stack_out": [
        "result1#0",
        "aggregate%extract_uint16%0#1",
        "result1#0",
        "aggregate%extract_uint16%1#1",
        "result1#0 (copy)"
      ]
    },
    "3060": {
      "op": "uncover 3",
      "stack_out": [
        "result1#0",
        "result1#0",
        "aggregate%extract_uint16%1#1",
        "result1#0 (copy)",
        "aggregate%extract_uint16%0#1"
      ]
    },
    "3062": {
      "op": "uncover 2",
      "stack_out": [
        "result1#0",
        "result1#0",
        "result1#0 (copy)",
        "aggregate%extract_uint16%0#1",
        "aggregate%extract_uint16%1#1"
      ]
    },
    "3064": {
      "op": "substring3",
      "defined_out": [
        "aggregate%substring3%0#1",
        "result1#0"
      ],
      "stack_out": [
        "result1#0",
        "result1#0",
        "aggregate%substring3%0#1"
      ]
    },
    "3065": {
      "op": "swap",
      "stack_out": [
        "result1#0",
        "aggregate%substring3%0#1",
        "result1#0"
      ]
    },
    "3066": {
      "op": "dup",
      "stack_out": [
        "result1#0",
        "aggregate%substring3%0#1",
        "result1#0",
        "result1#0 (copy)"
      ]
    },
    "3067": {
      "op": "intc_2 // 2",
      "stack_out": [
        "result1#0",
        "aggregate%substring3%0#1",
        "result1#0",
        "result1#0 (copy)",
        "2"
      ]
    },
    "3068": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%extract_uint16%2#1",
        "aggregate%substring3%0#1",
        "result1#0"
      ],
      "stack_out": [
        "result1#0",
        "aggregate%substring3%0#1",
        "result1#0",
        "aggregate%extract_uint16%2#1"
      ]
    },
    "3069": {
      "op": "swap",
      "stack_out": [
        "result1#0",
        "aggregate%substring3%0#1",
        "aggregate%extract_uint16%2#1",
        "result1#0"
      ]
    },
    "3070": {
      "op": "dup",
      "stack_out": [
        "result1#0",
        "aggregate%substring3%0#1",
        "aggregate%extract_uint16%2#1",
        "result1#0",
        "result1#0 (copy)"
      ]
    },
    "3071": {
      "op": "len",
      "defined_out": [
        "aggregate%extract_uint16%2#1",
        "aggregate%len%0#1",
        "aggregate%substring3%0#1",
        "result1#0"
      ],
      "stack_out": [
        "result1#0",
        "aggregate%substring3%0#1",
        "aggregate%extract_uint16%2#1",
        "result1#0",
        "aggregate%len%0#1"
      ]
    },
    "3072": {
      "op": "swap",
      "stack_out": [
        "result1#0",
        "aggregate%substring3%0#1",
        "aggregate%extract_uint16%2#1",
        "aggregate%len%0#1",
        "result1#0"
      ]
    },
    "3073": {
      "op": "dup",
      "stack_out": [
        "result1#0",
        "aggregate%substring3%0#1",
        "aggregate%extract_uint16%2#1",
        "aggregate%len%0#1",
        "result1#0",
        "result1#0 (copy)"
      ]
    },
    "3074": {
      "op": "uncover 3",
      "stack_out": [
        "result1#0",
        "aggregate%substring3%0#1",
        "aggregate%len%0#1",
        "result1#0",
        "result1#0 (copy)",
        "aggregate%extract_uint16%2#1"
      ]
    },
    "3076": {
      "op": "uncover 3",
      "stack_out": [
        "result1#0",
        "aggregate%substring3%0#1",
        "result1#0",
        "result1#0 (copy)",
        "aggregate%extract_uint16%2#1",
        "aggregate%len%0#1"
      ]
    },
    "3078": {
      "op": "substring3",
      "defined_out": [
        "aggregate%substring3%0#1",
        "aggregate%substring3%1#1",
        "result1#0"
      ],
      "stack_out": [
        "result1#0",
        "aggregate%substring3%0#1",
        "result1#0",
        "aggregate%substring3%1#1"
      ]
    },
    "3079": {
      "op": "swap",
      "stack_out": [
        "result1#0",
        "aggregate%substring3%0#1",
        "aggregate%substring3%1#1",
        "result1#0"
      ]
    },
    "3080": {
      "op": "dup",
      "stack_out": [
        "result1#0",
        "aggregate%substring3%0#1",
        "aggregate%substring3%1#1",
        "result1#0",
        "result1#0 (copy)"
      ]
    },
    "3081": {
      "op": "pushint 4 // 4",
      "defined_out": [
        "4",
        "aggregate%substring3%0#1",
        "aggregate%substring3%1#1",
        "result1#0",
        "result1#0 (copy)"
      ],
      "stack_out": [
        "result1#0",
        "aggregate%substring3%0#1",
        "aggregate%substring3%1#1",
        "result1#0",
        "result1#0 (copy)",
        "4"
      ]
    },
    "3083": {
      "op": "pushint 8 // 8",
      "defined_out": [
        "4",
        "8",
        "aggregate%substring3%0#1",
        "aggregate%substring3%1#1",
        "result1#0",
        "result1#0 (copy)"
      ],
      "stack_out": [
        "result1#0",
        "aggregate%substring3%0#1",
        "aggregate%substring3%1#1",
        "result1#0",
        "result1#0 (copy)",
        "4",
        "8"
      ]
    },
    "3085": {
      "op": "extract3",
      "defined_out": [
        "aggregate%extract%0#1",
        "aggregate%substring3%0#1",
        "aggregate%substring3%1#1",
        "result1#0"
      ],
      "stack_out": [
        "result1#0",
        "aggregate%substring3%0#1",
        "aggregate%substring3%1#1",
        "result1#0",
        "aggregate%extract%0#1"
      ]
    },
    "3086": {
      "op": "swap",
      "stack_out": [
        "result1#0",
        "aggregate%substring3%0#1",
        "aggregate%substring3%1#1",
        "aggregate%extract%0#1",
        "result1#0"
      ]
    },
    "3087": {
      "op": "pushint 12 // 12",
      "defined_out": [
        "12",
        "aggregate%extract%0#1",
        "aggregate%substring3%0#1",
        "aggregate%substring3%1#1",
        "result1#0"
      ],
      "stack_out": [
        "result1#0",
        "aggregate%substring3%0#1",
        "aggregate%substring3%1#1",
        "aggregate%extract%0#1",
        "result1#0",
        "12"
      ]
    },
    "3089": {
      "op": "pushint 64 // 64",
      "defined_out": [
        "12",
        "64",
        "aggregate%extract%0#1",
        "aggregate%substring3%0#1",
        "aggregate%substring3%1#1",
        "result1#0"
      ],
      "stack_out": [
        "result1#0",
        "aggregate%substring3%0#1",
        "aggregate%substring3%1#1",
        "aggregate%extract%0#1",
        "result1#0",
        "12",
        "64"
      ]
    },
    "3091": {
      "op": "extract3",
      "defined_out": [
        "aggregate%extract%0#1",
        "aggregate%extract%1#1",
        "aggregate%substring3%0#1",
        "aggregate%substring3%1#1",
        "result1#0"
      ],
      "stack_out": [
        "result1#0",
        "aggregate%substring3%0#1",
        "aggregate%substring3%1#1",
        "aggregate%extract%0#1",
        "aggregate%extract%1#1"
      ]
    },
    "3092": {
      "op": "uncover 3",
      "defined_out": [
        "aggregate%extract%0#1",
        "aggregate%extract%1#1",
        "aggregate%substring3%1#1",
        "result1#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "result1#0",
        "aggregate%substring3%1#1",
        "aggregate%extract%0#1",
        "aggregate%extract%1#1",
        "tmp%4#0"
      ]
    },
    "3094": {
      "op": "swap",
      "stack_out": [
        "result1#0",
        "aggregate%substring3%1#1",
        "aggregate%extract%0#1",
        "tmp%4#0",
        "aggregate%extract%1#1"
      ]
    },
    "3095": {
      "op": "uncover 3",
      "defined_out": [
        "aggregate%extract%0#1",
        "aggregate%extract%1#1",
        "result1#0",
        "tmp%4#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "result1#0",
        "aggregate%extract%0#1",
        "tmp%4#0",
        "aggregate%extract%1#1",
        "tmp%5#0"
      ]
    },
    "3097": {
      "op": "cover 2",
      "defined_out": [
        "result1#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "result1#0",
        "tmp%6#0",
        "tmp%5#0",
        "tmp%4#0",
        "tmp%7#0"
      ]
    },
    "3099": {
      "op": "cover 3",
      "defined_out": [
        "result1#0",
        "s#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "result1#0",
        "tmp%7#0",
        "tmp%6#0",
        "tmp%5#0",
        "s#0"
      ]
    },
    "3101": {
      "op": "cover 3",
      "defined_out": [
        "b#0",
        "result1#0",
        "s#0",
        "tmp%6#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "result1#0",
        "s#0",
        "tmp%7#0",
        "tmp%6#0",
        "b#0"
      ]
    },
    "3103": {
      "op": "cover 3",
      "defined_out": [
        "b#0",
        "result1#0",
        "s#0",
        "tmp%7#0",
        "u#0"
      ],
      "stack_out": [
        "result1#0",
        "b#0",
        "s#0",
        "tmp%7#0",
        "u#0"
      ]
    },
    "3105": {
      "op": "cover 3",
      "defined_out": [
        "b#0",
        "bu#0",
        "result1#0",
        "s#0",
        "u#0"
      ],
      "stack_out": [
        "result1#0",
        "u#0",
        "b#0",
        "s#0",
        "bu#0"
      ]
    },
    "3107": {
      "op": "cover 3",
      "stack_out": [
        "result1#0",
        "bu#0",
        "u#0",
        "b#0",
        "s#0"
      ]
    },
    "3109": {
      "op": "extract 2 0",
      "defined_out": [
        "b#0",
        "bu#0",
        "result1#0",
        "tmp%8#0",
        "u#0"
      ],
      "stack_out": [
        "result1#0",
        "bu#0",
        "u#0",
        "b#0",
        "tmp%8#0"
      ]
    },
    "3112": {
      "op": "bytec 15 // \"echo: s1\"",
      "defined_out": [
        "\"echo: s1\"",
        "b#0",
        "bu#0",
        "result1#0",
        "tmp%8#0",
        "u#0"
      ],
      "stack_out": [
        "result1#0",
        "bu#0",
        "u#0",
        "b#0",
        "tmp%8#0",
        "\"echo: s1\""
      ]
    },
    "3114": {
      "op": "==",
      "defined_out": [
        "b#0",
        "bu#0",
        "result1#0",
        "tmp%9#0",
        "u#0"
      ],
      "stack_out": [
        "result1#0",
        "bu#0",
        "u#0",
        "b#0",
        "tmp%9#0"
      ]
    },
    "3115": {
      "op": "assert",
      "stack_out": [
        "result1#0",
        "bu#0",
        "u#0",
        "b#0"
      ]
    },
    "3116": {
      "op": "extract 2 0",
      "defined_out": [
        "bu#0",
        "result1#0",
        "tmp%10#0",
        "u#0"
      ],
      "stack_out": [
        "result1#0",
        "bu#0",
        "u#0",
        "tmp%10#0"
      ]
    },
    "3119": {
      "op": "bytec 51 // 0x6563686f3a206231",
      "defined_out": [
        "0x6563686f3a206231",
        "bu#0",
        "result1#0",
        "tmp%10#0",
        "u#0"
      ],
      "stack_out": [
        "result1#0",
        "bu#0",
        "u#0",
        "tmp%10#0",
        "0x6563686f3a206231"
      ]
    },
    "3121": {
      "op": "==",
      "defined_out": [
        "bu#0",
        "result1#0",
        "tmp%11#0",
        "u#0"
      ],
      "stack_out": [
        "result1#0",
        "bu#0",
        "u#0",
        "tmp%11#0"
      ]
    },
    "3122": {
      "op": "assert",
      "stack_out": [
        "result1#0",
        "bu#0",
        "u#0"
      ]
    },
    "3123": {
      "op": "btoi",
      "defined_out": [
        "bu#0",
        "result1#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "result1#0",
        "bu#0",
        "tmp%12#0"
      ]
    },
    "3124": {
      "op": "intc_2 // 2",
      "stack_out": [
        "result1#0",
        "bu#0",
        "tmp%12#0",
        "2"
      ]
    },
    "3125": {
      "op": "==",
      "defined_out": [
        "bu#0",
        "result1#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "result1#0",
        "bu#0",
        "tmp%13#0"
      ]
    },
    "3126": {
      "op": "assert",
      "defined_out": [
        "result1#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "result1#0",
        "tmp%14#0"
      ]
    },
    "3127": {
      "op": "bytec 30 // 0x03",
      "defined_out": [
        "0x03",
        "result1#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "result1#0",
        "tmp%14#0",
        "0x03"
      ]
    },
    "3129": {
      "op": "b==",
      "defined_out": [
        "result1#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "result1#0",
        "tmp%15#0"
      ]
    },
    "3130": {
      "op": "assert",
      "stack_out": [
        "result1#0"
      ]
    },
    "3131": {
      "op": "itxn_begin"
    },
    "3132": {
      "op": "bytec_1 // \"s1\"",
      "defined_out": [
        "\"s1\"",
        "result1#0"
      ],
      "stack_out": [
        "result1#0",
        "\"s1\""
      ]
    },
    "3133": {
      "op": "len",
      "defined_out": [
        "aggregate%length%2#1",
        "result1#0"
      ],
      "stack_out": [
        "result1#0",
        "aggregate%length%2#1"
      ]
    },
    "3134": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%2#1",
        "result1#0"
      ],
      "stack_out": [
        "result1#0",
        "aggregate%as_bytes%2#1"
      ]
    },
    "3135": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%length_uint16%2#1",
        "result1#0"
      ],
      "stack_out": [
        "result1#0",
        "aggregate%length_uint16%2#1"
      ]
    },
    "3138": {
      "op": "bytec_1 // \"s1\"",
      "stack_out": [
        "result1#0",
        "aggregate%length_uint16%2#1",
        "\"s1\""
      ]
    },
    "3139": {
      "op": "concat",
      "defined_out": [
        "result1#0",
        "tmp%16#0"
      ],
      "stack_out": [
        "result1#0",
        "tmp%16#0"
      ]
    },
    "3140": {
      "op": "bytec_3 // 0x6231",
      "defined_out": [
        "0x6231",
        "result1#0",
        "tmp%16#0"
      ],
      "stack_out": [
        "result1#0",
        "tmp%16#0",
        "0x6231"
      ]
    },
    "3141": {
      "op": "len",
      "defined_out": [
        "aggregate%length%3#1",
        "result1#0",
        "tmp%16#0"
      ],
      "stack_out": [
        "result1#0",
        "tmp%16#0",
        "aggregate%length%3#1"
      ]
    },
    "3142": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%3#1",
        "result1#0",
        "tmp%16#0"
      ],
      "stack_out": [
        "result1#0",
        "tmp%16#0",
        "aggregate%as_bytes%3#1"
      ]
    },
    "3143": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%length_uint16%3#1",
        "result1#0",
        "tmp%16#0"
      ],
      "stack_out": [
        "result1#0",
        "tmp%16#0",
        "aggregate%length_uint16%3#1"
      ]
    },
    "3146": {
      "op": "bytec_3 // 0x6231",
      "stack_out": [
        "result1#0",
        "tmp%16#0",
        "aggregate%length_uint16%3#1",
        "0x6231"
      ]
    },
    "3147": {
      "op": "concat",
      "defined_out": [
        "result1#0",
        "tmp%16#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "result1#0",
        "tmp%16#0",
        "tmp%17#0"
      ]
    },
    "3148": {
      "op": "intc_3 // 1",
      "stack_out": [
        "result1#0",
        "tmp%16#0",
        "tmp%17#0",
        "1"
      ]
    },
    "3149": {
      "op": "itob",
      "defined_out": [
        "result1#0",
        "tmp%16#0",
        "tmp%17#0",
        "tmp%18#0"
      ],
      "stack_out": [
        "result1#0",
        "tmp%16#0",
        "tmp%17#0",
        "tmp%18#0"
      ]
    },
    "3150": {
      "op": "bytec 11 // 0x02",
      "defined_out": [
        "0x02",
        "result1#0",
        "tmp%16#0",
        "tmp%17#0",
        "tmp%18#0"
      ],
      "stack_out": [
        "result1#0",
        "tmp%16#0",
        "tmp%17#0",
        "tmp%18#0",
        "0x02"
      ]
    },
    "3152": {
      "op": "len",
      "defined_out": [
        "aggregate%value_len%0#1",
        "result1#0",
        "tmp%16#0",
        "tmp%17#0",
        "tmp%18#0"
      ],
      "stack_out": [
        "result1#0",
        "tmp%16#0",
        "tmp%17#0",
        "tmp%18#0",
        "aggregate%value_len%0#1"
      ]
    },
    "3153": {
      "op": "pushint 64 // 64",
      "stack_out": [
        "result1#0",
        "tmp%16#0",
        "tmp%17#0",
        "tmp%18#0",
        "aggregate%value_len%0#1",
        "64"
      ]
    },
    "3155": {
      "op": "<=",
      "defined_out": [
        "aggregate%len_ok%0#1",
        "result1#0",
        "tmp%16#0",
        "tmp%17#0",
        "tmp%18#0"
      ],
      "stack_out": [
        "result1#0",
        "tmp%16#0",
        "tmp%17#0",
        "tmp%18#0",
        "aggregate%len_ok%0#1"
      ]
    },
    "3156": {
      "error": "overflow",
      "op": "assert // overflow",
      "stack_out": [
        "result1#0",
        "tmp%16#0",
        "tmp%17#0",
        "tmp%18#0"
      ]
    },
    "3157": {
      "op": "pushint 64 // 64",
      "stack_out": [
        "result1#0",
        "tmp%16#0",
        "tmp%17#0",
        "tmp%18#0",
        "64"
      ]
    },
    "3159": {
      "op": "bzero",
      "defined_out": [
        "aggregate%bzero%0#1",
        "result1#0",
        "tmp%16#0",
        "tmp%17#0",
        "tmp%18#0"
      ],
      "stack_out": [
        "result1#0",
        "tmp%16#0",
        "tmp%17#0",
        "tmp%18#0",
        "aggregate%bzero%0#1"
      ]
    },
    "3160": {
      "op": "bytec 11 // 0x02",
      "stack_out": [
        "result1#0",
        "tmp%16#0",
        "tmp%17#0",
        "tmp%18#0",
        "aggregate%bzero%0#1",
        "0x02"
      ]
    },
    "3162": {
      "op": "b|",
      "defined_out": [
        "result1#0",
        "tmp%16#0",
        "tmp%17#0",
        "tmp%18#0",
        "tmp%19#0"
      ],
      "stack_out": [
        "result1#0",
        "tmp%16#0",
        "tmp%17#0",
        "tmp%18#0",
        "tmp%19#0"
      ]
    },
    "3163": {
      "op": "uncover 3",
      "defined_out": [
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0",
        "result1#0",
        "tmp%17#0",
        "tmp%18#0",
        "tmp%19#0"
      ],
      "stack_out": [
        "result1#0",
        "tmp%17#0",
        "tmp%18#0",
        "tmp%19#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "3165": {
      "op": "swap",
      "stack_out": [
        "result1#0",
        "tmp%17#0",
        "tmp%18#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0",
        "tmp%19#0"
      ]
    },
    "3166": {
      "op": "uncover 3",
      "defined_out": [
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_2#0",
        "result1#0",
        "tmp%18#0",
        "tmp%19#0"
      ],
      "stack_out": [
        "result1#0",
        "tmp%18#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0",
        "tmp%19#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_2#0"
      ]
    },
    "3168": {
      "op": "cover 2",
      "defined_out": [
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_2#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_3#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_4#0",
        "result1#0"
      ],
      "stack_out": [
        "result1#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_3#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_2#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_4#0"
      ]
    },
    "3170": {
      "op": "cover 3",
      "stack_out": [
        "result1#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_4#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_3#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_2#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "3172": {
      "op": "frame_dig -1",
      "defined_out": [
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_2#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_3#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_4#0",
        "inner_txn_params%1%%param_ApplicationID_idx_0#0",
        "result1#0"
      ],
      "stack_out": [
        "result1#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_4#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_3#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_2#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%1%%param_ApplicationID_idx_0#0"
      ]
    },
    "3174": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "result1#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_4#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_3#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_2#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "3176": {
      "op": "bytec 7 // method \"echo_native_tuple(string,byte[],uint64,uint512)(string,byte[],uint64,uint512)\"",
      "defined_out": [
        "Method(echo_native_tuple(string,byte[],uint64,uint512)(string,byte[],uint64,uint512))",
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_2#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_3#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_4#0",
        "result1#0"
      ],
      "stack_out": [
        "result1#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_4#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_3#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_2#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0",
        "Method(echo_native_tuple(string,byte[],uint64,uint512)(string,byte[],uint64,uint512))"
      ]
    },
    "3178": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "result1#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_4#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_3#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_2#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "3180": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "result1#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_4#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_3#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_2#0"
      ]
    },
    "3182": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "result1#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_4#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_3#0"
      ]
    },
    "3184": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "result1#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_4#0"
      ]
    },
    "3186": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "result1#0"
      ]
    },
    "3188": {
      "op": "intc_1 // appl",
      "defined_out": [
        "appl",
        "result1#0"
      ],
      "stack_out": [
        "result1#0",
        "appl"
      ]
    },
    "3189": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "result1#0"
      ]
    },
    "3191": {
      "op": "intc_0 // 0",
      "stack_out": [
        "result1#0",
        "0"
      ]
    },
    "3192": {
      "op": "itxn_field Fee",
      "stack_out": [
        "result1#0"
      ]
    },
    "3194": {
      "block": "test_native_tuple_next_txn@2",
      "stack_in": [
        "result1#0"
      ],
      "op": "itxn_submit"
    },
    "3195": {
      "op": "itxn LastLog",
      "defined_out": [
        "awst_tmp%1#0"
      ],
      "stack_out": [
        "result1#0",
        "awst_tmp%1#0"
      ]
    },
    "3197": {
      "op": "dup",
      "defined_out": [
        "awst_tmp%1#0",
        "awst_tmp%1#0 (copy)"
      ],
      "stack_out": [
        "result1#0",
        "awst_tmp%1#0",
        "awst_tmp%1#0 (copy)"
      ]
    },
    "3198": {
      "op": "extract 4 0",
      "defined_out": [
        "awst_tmp%1#0",
        "tmp%20#0"
      ],
      "stack_out": [
        "result1#0",
        "awst_tmp%1#0",
        "tmp%20#0"
      ]
    },
    "3201": {
      "op": "swap",
      "stack_out": [
        "result1#0",
        "tmp%20#0",
        "awst_tmp%1#0"
      ]
    },
    "3202": {
      "op": "extract 0 4",
      "defined_out": [
        "tmp%20#0",
        "tmp%21#0"
      ],
      "stack_out": [
        "result1#0",
        "tmp%20#0",
        "tmp%21#0"
      ]
    },
    "3205": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%20#0",
        "tmp%21#0"
      ],
      "stack_out": [
        "result1#0",
        "tmp%20#0",
        "tmp%21#0",
        "0x151f7c75"
      ]
    },
    "3206": {
      "op": "==",
      "defined_out": [
        "tmp%20#0",
        "tmp%22#0"
      ],
      "stack_out": [
        "result1#0",
        "tmp%20#0",
        "tmp%22#0"
      ]
    },
    "3207": {
      "error": "application log value is not the result of an ABI return",
      "op": "assert // application log value is not the result of an ABI return",
      "defined_out": [
        "result2#0"
      ],
      "stack_out": [
        "result1#0",
        "result2#0"
      ]
    },
    "3208": {
      "op": "frame_dig 0",
      "defined_out": [
        "result1#0",
        "result2#0"
      ],
      "stack_out": [
        "result1#0",
        "result2#0",
        "result1#0"
      ]
    },
    "3210": {
      "op": "==",
      "defined_out": [
        "result1#0",
        "tmp%23#0"
      ],
      "stack_out": [
        "result1#0",
        "tmp%23#0"
      ]
    },
    "3211": {
      "op": "assert",
      "stack_out": [
        "result1#0"
      ]
    },
    "3212": {
      "op": "itxn_begin"
    },
    "3213": {
      "op": "bytec_1 // 0x7331",
      "defined_out": [
        "0x7331",
        "result1#0"
      ],
      "stack_out": [
        "result1#0",
        "0x7331"
      ]
    },
    "3214": {
      "op": "len",
      "defined_out": [
        "aggregate%length%4#1",
        "result1#0"
      ],
      "stack_out": [
        "result1#0",
        "aggregate%length%4#1"
      ]
    },
    "3215": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%4#1",
        "result1#0"
      ],
      "stack_out": [
        "result1#0",
        "aggregate%as_bytes%4#1"
      ]
    },
    "3216": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%length_uint16%4#1",
        "result1#0"
      ],
      "stack_out": [
        "result1#0",
        "aggregate%length_uint16%4#1"
      ]
    },
    "3219": {
      "op": "bytec_1 // 0x7331",
      "stack_out": [
        "result1#0",
        "aggregate%length_uint16%4#1",
        "0x7331"
      ]
    },
    "3220": {
      "op": "concat",
      "defined_out": [
        "encoded%1#0",
        "result1#0"
      ],
      "stack_out": [
        "result1#0",
        "encoded%1#0"
      ]
    },
    "3221": {
      "op": "bytec_3 // 0x6231",
      "defined_out": [
        "0x6231",
        "encoded%1#0",
        "result1#0"
      ],
      "stack_out": [
        "result1#0",
        "encoded%1#0",
        "0x6231"
      ]
    },
    "3222": {
      "op": "len",
      "defined_out": [
        "aggregate%length%5#1",
        "encoded%1#0",
        "result1#0"
      ],
      "stack_out": [
        "result1#0",
        "encoded%1#0",
        "aggregate%length%5#1"
      ]
    },
    "3223": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%5#1",
        "encoded%1#0",
        "result1#0"
      ],
      "stack_out": [
        "result1#0",
        "encoded%1#0",
        "aggregate%as_bytes%5#1"
      ]
    },
    "3224": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%length_uint16%5#1",
        "encoded%1#0",
        "result1#0"
      ],
      "stack_out": [
        "result1#0",
        "encoded%1#0",
        "aggregate%length_uint16%5#1"
      ]
    },
    "3227": {
      "op": "bytec_3 // 0x6231",
      "stack_out": [
        "result1#0",
        "encoded%1#0",
        "aggregate%length_uint16%5#1",
        "0x6231"
      ]
    },
    "3228": {
      "op": "concat",
      "defined_out": [
        "inner_txn_params%2%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%2%%param_ApplicationArgs_idx_2#0",
        "result1#0"
      ],
      "stack_out": [
        "result1#0",
        "inner_txn_params%2%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%2%%param_ApplicationArgs_idx_2#0"
      ]
    },
    "3229": {
      "op": "swap",
      "stack_out": [
        "result1#0",
        "inner_txn_params%2%%param_ApplicationArgs_idx_2#0",
        "inner_txn_params%2%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "3230": {
      "op": "frame_dig -1",
      "defined_out": [
        "inner_txn_params%2%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%2%%param_ApplicationArgs_idx_2#0",
        "inner_txn_params%2%%param_ApplicationID_idx_0#0",
        "result1#0"
      ],
      "stack_out": [
        "result1#0",
        "inner_txn_params%2%%param_ApplicationArgs_idx_2#0",
        "inner_txn_params%2%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%2%%param_ApplicationID_idx_0#0"
      ]
    },
    "3232": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "result1#0",
        "inner_txn_params%2%%param_ApplicationArgs_idx_2#0",
        "inner_txn_params%2%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "3234": {
      "op": "bytec 7 // method \"echo_native_tuple(string,byte[],uint64,uint512)(string,byte[],uint64,uint512)\"",
      "defined_out": [
        "Method(echo_native_tuple(string,byte[],uint64,uint512)(string,byte[],uint64,uint512))",
        "inner_txn_params%2%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%2%%param_ApplicationArgs_idx_2#0",
        "result1#0"
      ],
      "stack_out": [
        "result1#0",
        "inner_txn_params%2%%param_ApplicationArgs_idx_2#0",
        "inner_txn_params%2%%param_ApplicationArgs_idx_1#0",
        "Method(echo_native_tuple(string,byte[],uint64,uint512)(string,byte[],uint64,uint512))"
      ]
    },
    "3236": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "result1#0",
        "inner_txn_params%2%%param_ApplicationArgs_idx_2#0",
        "inner_txn_params%2%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "3238": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "result1#0",
        "inner_txn_params%2%%param_ApplicationArgs_idx_2#0"
      ]
    },
    "3240": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "result1#0"
      ]
    },
    "3242": {
      "op": "bytec 4 // 0x0000000000000001",
      "defined_out": [
        "0x0000000000000001",
        "result1#0"
      ],
      "stack_out": [
        "result1#0",
        "0x0000000000000001"
      ]
    },
    "3244": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "result1#0"
      ]
    },
    "3246": {
      "op": "bytec 6 // 0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002",
      "defined_out": [
        "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002",
        "result1#0"
      ],
      "stack_out": [
        "result1#0",
        "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002"
      ]
    },
    "3248": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "result1#0"
      ]
    },
    "3250": {
      "op": "intc_1 // appl",
      "defined_out": [
        "appl",
        "result1#0"
      ],
      "stack_out": [
        "result1#0",
        "appl"
      ]
    },
    "3251": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "result1#0"
      ]
    },
    "3253": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "result1#0"
      ],
      "stack_out": [
        "result1#0",
        "0"
      ]
    },
    "3254": {
      "op": "itxn_field Fee",
      "stack_out": [
        "result1#0"
      ]
    },
    "3256": {
      "block": "test_native_tuple_next_txn@3",
      "stack_in": [
        "result1#0"
      ],
      "op": "itxn_submit"
    },
    "3257": {
      "op": "itxn LastLog",
      "defined_out": [
        "awst_tmp%2#0"
      ],
      "stack_out": [
        "result1#0",
        "awst_tmp%2#0"
      ]
    },
    "3259": {
      "op": "dup",
      "defined_out": [
        "awst_tmp%2#0",
        "awst_tmp%2#0 (copy)"
      ],
      "stack_out": [
        "result1#0",
        "awst_tmp%2#0",
        "awst_tmp%2#0 (copy)"
      ]
    },
    "3260": {
      "op": "extract 4 0",
      "defined_out": [
        "awst_tmp%2#0",
        "tmp%25#0"
      ],
      "stack_out": [
        "result1#0",
        "awst_tmp%2#0",
        "tmp%25#0"
      ]
    },
    "3263": {
      "op": "swap",
      "stack_out": [
        "result1#0",
        "tmp%25#0",
        "awst_tmp%2#0"
      ]
    },
    "3264": {
      "op": "extract 0 4",
      "defined_out": [
        "tmp%25#0",
        "tmp%26#0"
      ],
      "stack_out": [
        "result1#0",
        "tmp%25#0",
        "tmp%26#0"
      ]
    },
    "3267": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%25#0",
        "tmp%26#0"
      ],
      "stack_out": [
        "result1#0",
        "tmp%25#0",
        "tmp%26#0",
        "0x151f7c75"
      ]
    },
    "3268": {
      "op": "==",
      "defined_out": [
        "tmp%25#0",
        "tmp%27#0"
      ],
      "stack_out": [
        "result1#0",
        "tmp%25#0",
        "tmp%27#0"
      ]
    },
    "3269": {
      "error": "application log value is not the result of an ABI return",
      "op": "assert // application log value is not the result of an ABI return",
      "defined_out": [
        "result3#0"
      ],
      "stack_out": [
        "result1#0",
        "result3#0"
      ]
    },
    "3270": {
      "op": "frame_dig 0",
      "defined_out": [
        "result1#0",
        "result3#0"
      ],
      "stack_out": [
        "result1#0",
        "result3#0",
        "result1#0"
      ]
    },
    "3272": {
      "op": "==",
      "defined_out": [
        "result1#0",
        "tmp%28#0"
      ],
      "stack_out": [
        "result1#0",
        "tmp%28#0"
      ]
    },
    "3273": {
      "op": "assert",
      "stack_out": [
        "result1#0"
      ]
    },
    "3274": {
      "op": "itxn_begin"
    },
    "3275": {
      "op": "bytec_1 // 0x7331",
      "defined_out": [
        "0x7331",
        "result1#0"
      ],
      "stack_out": [
        "result1#0",
        "0x7331"
      ]
    },
    "3276": {
      "op": "len",
      "defined_out": [
        "aggregate%length%6#1",
        "result1#0"
      ],
      "stack_out": [
        "result1#0",
        "aggregate%length%6#1"
      ]
    },
    "3277": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%6#1",
        "result1#0"
      ],
      "stack_out": [
        "result1#0",
        "aggregate%as_bytes%6#1"
      ]
    },
    "3278": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%length_uint16%6#1",
        "result1#0"
      ],
      "stack_out": [
        "result1#0",
        "aggregate%length_uint16%6#1"
      ]
    },
    "3281": {
      "op": "bytec_1 // 0x7331",
      "stack_out": [
        "result1#0",
        "aggregate%length_uint16%6#1",
        "0x7331"
      ]
    },
    "3282": {
      "op": "concat",
      "defined_out": [
        "encoded%2#0",
        "result1#0"
      ],
      "stack_out": [
        "result1#0",
        "encoded%2#0"
      ]
    },
    "3283": {
      "op": "bytec_3 // 0x6231",
      "defined_out": [
        "0x6231",
        "encoded%2#0",
        "result1#0"
      ],
      "stack_out": [
        "result1#0",
        "encoded%2#0",
        "0x6231"
      ]
    },
    "3284": {
      "op": "len",
      "defined_out": [
        "aggregate%length%7#1",
        "encoded%2#0",
        "result1#0"
      ],
      "stack_out": [
        "result1#0",
        "encoded%2#0",
        "aggregate%length%7#1"
      ]
    },
    "3285": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%7#1",
        "encoded%2#0",
        "result1#0"
      ],
      "stack_out": [
        "result1#0",
        "encoded%2#0",
        "aggregate%as_bytes%7#1"
      ]
    },
    "3286": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%length_uint16%7#1",
        "encoded%2#0",
        "result1#0"
      ],
      "stack_out": [
        "result1#0",
        "encoded%2#0",
        "aggregate%length_uint16%7#1"
      ]
    },
    "3289": {
      "op": "bytec_3 // 0x6231",
      "stack_out": [
        "result1#0",
        "encoded%2#0",
        "aggregate%length_uint16%7#1",
        "0x6231"
      ]
    },
    "3290": {
      "op": "concat",
      "defined_out": [
        "inner_txn_params%3%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%3%%param_ApplicationArgs_idx_2#0",
        "result1#0"
      ],
      "stack_out": [
        "result1#0",
        "inner_txn_params%3%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%3%%param_ApplicationArgs_idx_2#0"
      ]
    },
    "3291": {
      "op": "swap",
      "stack_out": [
        "result1#0",
        "inner_txn_params%3%%param_ApplicationArgs_idx_2#0",
        "inner_txn_params%3%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "3292": {
      "op": "frame_dig -1",
      "defined_out": [
        "inner_txn_params%3%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%3%%param_ApplicationArgs_idx_2#0",
        "inner_txn_params%3%%param_ApplicationID_idx_0#0",
        "result1#0"
      ],
      "stack_out": [
        "result1#0",
        "inner_txn_params%3%%param_ApplicationArgs_idx_2#0",
        "inner_txn_params%3%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%3%%param_ApplicationID_idx_0#0"
      ]
    },
    "3294": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "result1#0",
        "inner_txn_params%3%%param_ApplicationArgs_idx_2#0",
        "inner_txn_params%3%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "3296": {
      "op": "bytec 7 // method \"echo_native_tuple(string,byte[],uint64,uint512)(string,byte[],uint64,uint512)\"",
      "defined_out": [
        "Method(echo_native_tuple(string,byte[],uint64,uint512)(string,byte[],uint64,uint512))",
        "inner_txn_params%3%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%3%%param_ApplicationArgs_idx_2#0",
        "result1#0"
      ],
      "stack_out": [
        "result1#0",
        "inner_txn_params%3%%param_ApplicationArgs_idx_2#0",
        "inner_txn_params%3%%param_ApplicationArgs_idx_1#0",
        "Method(echo_native_tuple(string,byte[],uint64,uint512)(string,byte[],uint64,uint512))"
      ]
    },
    "3298": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "result1#0",
        "inner_txn_params%3%%param_ApplicationArgs_idx_2#0",
        "inner_txn_params%3%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "3300": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "result1#0",
        "inner_txn_params%3%%param_ApplicationArgs_idx_2#0"
      ]
    },
    "3302": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "result1#0"
      ]
    },
    "3304": {
      "op": "bytec 4 // 0x0000000000000001",
      "defined_out": [
        "0x0000000000000001",
        "result1#0"
      ],
      "stack_out": [
        "result1#0",
        "0x0000000000000001"
      ]
    },
    "3306": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "result1#0"
      ]
    },
    "3308": {
      "op": "bytec 6 // 0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002",
      "defined_out": [
        "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002",
        "result1#0"
      ],
      "stack_out": [
        "result1#0",
        "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002"
      ]
    },
    "3310": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "result1#0"
      ]
    },
    "3312": {
      "op": "intc_1 // appl",
      "defined_out": [
        "appl",
        "result1#0"
      ],
      "stack_out": [
        "result1#0",
        "appl"
      ]
    },
    "3313": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "result1#0"
      ]
    },
    "3315": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "result1#0"
      ],
      "stack_out": [
        "result1#0",
        "0"
      ]
    },
    "3316": {
      "op": "itxn_field Fee",
      "stack_out": [
        "result1#0"
      ]
    },
    "3318": {
      "block": "test_native_tuple_next_txn@4",
      "stack_in": [
        "result1#0"
      ],
      "op": "itxn_submit"
    },
    "3319": {
      "op": "itxn LastLog",
      "defined_out": [
        "awst_tmp%3#0"
      ],
      "stack_out": [
        "result1#0",
        "awst_tmp%3#0"
      ]
    },
    "3321": {
      "op": "dup",
      "defined_out": [
        "awst_tmp%3#0",
        "awst_tmp%3#0 (copy)"
      ],
      "stack_out": [
        "result1#0",
        "awst_tmp%3#0",
        "awst_tmp%3#0 (copy)"
      ]
    },
    "3322": {
      "op": "extract 4 0",
      "defined_out": [
        "awst_tmp%3#0",
        "tmp%30#0"
      ],
      "stack_out": [
        "result1#0",
        "awst_tmp%3#0",
        "tmp%30#0"
      ]
    },
    "3325": {
      "op": "swap",
      "stack_out": [
        "result1#0",
        "tmp%30#0",
        "awst_tmp%3#0"
      ]
    },
    "3326": {
      "op": "extract 0 4",
      "defined_out": [
        "tmp%30#0",
        "tmp%31#0"
      ],
      "stack_out": [
        "result1#0",
        "tmp%30#0",
        "tmp%31#0"
      ]
    },
    "3329": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%30#0",
        "tmp%31#0"
      ],
      "stack_out": [
        "result1#0",
        "tmp%30#0",
        "tmp%31#0",
        "0x151f7c75"
      ]
    },
    "3330": {
      "op": "==",
      "defined_out": [
        "tmp%30#0",
        "tmp%32#0"
      ],
      "stack_out": [
        "result1#0",
        "tmp%30#0",
        "tmp%32#0"
      ]
    },
    "3331": {
      "error": "application log value is not the result of an ABI return",
      "op": "assert // application log value is not the result of an ABI return",
      "stack_out": [
        "result1#0",
        "tmp%30#0"
      ]
    },
    "3332": {
      "op": "dup",
      "defined_out": [
        "tmp%30#0",
        "tmp%30#0 (copy)"
      ],
      "stack_out": [
        "result1#0",
        "tmp%30#0",
        "tmp%30#0 (copy)"
      ]
    },
    "3333": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%30#0",
        "tmp%30#0 (copy)"
      ],
      "stack_out": [
        "result1#0",
        "tmp%30#0",
        "tmp%30#0 (copy)",
        "0"
      ]
    },
    "3334": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%extract_uint16%3#1",
        "tmp%30#0"
      ],
      "stack_out": [
        "result1#0",
        "tmp%30#0",
        "aggregate%extract_uint16%3#1"
      ]
    },
    "3335": {
      "op": "swap",
      "stack_out": [
        "result1#0",
        "aggregate%extract_uint16%3#1",
        "tmp%30#0"
      ]
    },
    "3336": {
      "op": "dup",
      "stack_out": [
        "result1#0",
        "aggregate%extract_uint16%3#1",
        "tmp%30#0",
        "tmp%30#0 (copy)"
      ]
    },
    "3337": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "aggregate%extract_uint16%3#1",
        "tmp%30#0",
        "tmp%30#0 (copy)"
      ],
      "stack_out": [
        "result1#0",
        "aggregate%extract_uint16%3#1",
        "tmp%30#0",
        "tmp%30#0 (copy)",
        "2"
      ]
    },
    "3338": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%extract_uint16%3#1",
        "aggregate%extract_uint16%4#1",
        "tmp%30#0"
      ],
      "stack_out": [
        "result1#0",
        "aggregate%extract_uint16%3#1",
        "tmp%30#0",
        "aggregate%extract_uint16%4#1"
      ]
    },
    "3339": {
      "op": "dig 1",
      "stack_out": [
        "result1#0",
        "aggregate%extract_uint16%3#1",
        "tmp%30#0",
        "aggregate%extract_uint16%4#1",
        "tmp%30#0 (copy)"
      ]
    },
    "3341": {
      "op": "uncover 3",
      "stack_out": [
        "result1#0",
        "tmp%30#0",
        "aggregate%extract_uint16%4#1",
        "tmp%30#0 (copy)",
        "aggregate%extract_uint16%3#1"
      ]
    },
    "3343": {
      "op": "uncover 2",
      "stack_out": [
        "result1#0",
        "tmp%30#0",
        "tmp%30#0 (copy)",
        "aggregate%extract_uint16%3#1",
        "aggregate%extract_uint16%4#1"
      ]
    },
    "3345": {
      "op": "substring3",
      "defined_out": [
        "aggregate%substring3%2#1",
        "tmp%30#0"
      ],
      "stack_out": [
        "result1#0",
        "tmp%30#0",
        "aggregate%substring3%2#1"
      ]
    },
    "3346": {
      "op": "extract 2 0",
      "defined_out": [
        "aggregate%item0%0#1",
        "tmp%30#0"
      ],
      "stack_out": [
        "result1#0",
        "tmp%30#0",
        "aggregate%item0%0#1"
      ]
    },
    "3349": {
      "op": "swap",
      "stack_out": [
        "result1#0",
        "aggregate%item0%0#1",
        "tmp%30#0"
      ]
    },
    "3350": {
      "op": "dup",
      "stack_out": [
        "result1#0",
        "aggregate%item0%0#1",
        "tmp%30#0",
        "tmp%30#0 (copy)"
      ]
    },
    "3351": {
      "op": "intc_2 // 2",
      "stack_out": [
        "result1#0",
        "aggregate%item0%0#1",
        "tmp%30#0",
        "tmp%30#0 (copy)",
        "2"
      ]
    },
    "3352": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%extract_uint16%5#1",
        "aggregate%item0%0#1",
        "tmp%30#0"
      ],
      "stack_out": [
        "result1#0",
        "aggregate%item0%0#1",
        "tmp%30#0",
        "aggregate%extract_uint16%5#1"
      ]
    },
    "3353": {
      "op": "swap",
      "stack_out": [
        "result1#0",
        "aggregate%item0%0#1",
        "aggregate%extract_uint16%5#1",
        "tmp%30#0"
      ]
    },
    "3354": {
      "op": "dup",
      "stack_out": [
        "result1#0",
        "aggregate%item0%0#1",
        "aggregate%extract_uint16%5#1",
        "tmp%30#0",
        "tmp%30#0 (copy)"
      ]
    },
    "3355": {
      "op": "len",
      "defined_out": [
        "aggregate%extract_uint16%5#1",
        "aggregate%item0%0#1",
        "aggregate%len%1#1",
        "tmp%30#0"
      ],
      "stack_out": [
        "result1#0",
        "aggregate%item0%0#1",
        "aggregate%extract_uint16%5#1",
        "tmp%30#0",
        "aggregate%len%1#1"
      ]
    },
    "3356": {
      "op": "swap",
      "stack_out": [
        "result1#0",
        "aggregate%item0%0#1",
        "aggregate%extract_uint16%5#1",
        "aggregate%len%1#1",
        "tmp%30#0"
      ]
    },
    "3357": {
      "op": "dup",
      "stack_out": [
        "result1#0",
        "aggregate%item0%0#1",
        "aggregate%extract_uint16%5#1",
        "aggregate%len%1#1",
        "tmp%30#0",
        "tmp%30#0 (copy)"
      ]
    },
    "3358": {
      "op": "uncover 3",
      "stack_out": [
        "result1#0",
        "aggregate%item0%0#1",
        "aggregate%len%1#1",
        "tmp%30#0",
        "tmp%30#0 (copy)",
        "aggregate%extract_uint16%5#1"
      ]
    },
    "3360": {
      "op": "uncover 3",
      "stack_out": [
        "result1#0",
        "aggregate%item0%0#1",
        "tmp%30#0",
        "tmp%30#0 (copy)",
        "aggregate%extract_uint16%5#1",
        "aggregate%len%1#1"
      ]
    },
    "3362": {
      "op": "substring3",
      "defined_out": [
        "aggregate%item0%0#1",
        "aggregate%substring3%3#1",
        "tmp%30#0"
      ],
      "stack_out": [
        "result1#0",
        "aggregate%item0%0#1",
        "tmp%30#0",
        "aggregate%substring3%3#1"
      ]
    },
    "3363": {
      "op": "extract 2 0",
      "defined_out": [
        "aggregate%item0%0#1",
        "aggregate%item1%0#1",
        "tmp%30#0"
      ],
      "stack_out": [
        "result1#0",
        "aggregate%item0%0#1",
        "tmp%30#0",
        "aggregate%item1%0#1"
      ]
    },
    "3366": {
      "op": "swap",
      "stack_out": [
        "result1#0",
        "aggregate%item0%0#1",
        "aggregate%item1%0#1",
        "tmp%30#0"
      ]
    },
    "3367": {
      "op": "dup",
      "stack_out": [
        "result1#0",
        "aggregate%item0%0#1",
        "aggregate%item1%0#1",
        "tmp%30#0",
        "tmp%30#0 (copy)"
      ]
    },
    "3368": {
      "op": "pushint 4 // 4",
      "defined_out": [
        "4",
        "aggregate%item0%0#1",
        "aggregate%item1%0#1",
        "tmp%30#0",
        "tmp%30#0 (copy)"
      ],
      "stack_out": [
        "result1#0",
        "aggregate%item0%0#1",
        "aggregate%item1%0#1",
        "tmp%30#0",
        "tmp%30#0 (copy)",
        "4"
      ]
    },
    "3370": {
      "op": "pushint 8 // 8",
      "defined_out": [
        "4",
        "8",
        "aggregate%item0%0#1",
        "aggregate%item1%0#1",
        "tmp%30#0",
        "tmp%30#0 (copy)"
      ],
      "stack_out": [
        "result1#0",
        "aggregate%item0%0#1",
        "aggregate%item1%0#1",
        "tmp%30#0",
        "tmp%30#0 (copy)",
        "4",
        "8"
      ]
    },
    "3372": {
      "op": "extract3",
      "defined_out": [
        "aggregate%extract%2#1",
        "aggregate%item0%0#1",
        "aggregate%item1%0#1",
        "tmp%30#0"
      ],
      "stack_out": [
        "result1#0",
        "aggregate%item0%0#1",
        "aggregate%item1%0#1",
        "tmp%30#0",
        "aggregate%extract%2#1"
      ]
    },
    "3373": {
      "op": "btoi",
      "defined_out": [
        "aggregate%item0%0#1",
        "aggregate%item1%0#1",
        "aggregate%item2%0#1",
        "tmp%30#0"
      ],
      "stack_out": [
        "result1#0",
        "aggregate%item0%0#1",
        "aggregate%item1%0#1",
        "tmp%30#0",
        "aggregate%item2%0#1"
      ]
    },
    "3374": {
      "op": "swap",
      "stack_out": [
        "result1#0",
        "aggregate%item0%0#1",
        "aggregate%item1%0#1",
        "aggregate%item2%0#1",
        "tmp%30#0"
      ]
    },
    "3375": {
      "op": "pushint 12 // 12",
      "defined_out": [
        "12",
        "aggregate%item0%0#1",
        "aggregate%item1%0#1",
        "aggregate%item2%0#1",
        "tmp%30#0"
      ],
      "stack_out": [
        "result1#0",
        "aggregate%item0%0#1",
        "aggregate%item1%0#1",
        "aggregate%item2%0#1",
        "tmp%30#0",
        "12"
      ]
    },
    "3377": {
      "op": "pushint 64 // 64",
      "defined_out": [
        "12",
        "64",
        "aggregate%item0%0#1",
        "aggregate%item1%0#1",
        "aggregate%item2%0#1",
        "tmp%30#0"
      ],
      "stack_out": [
        "result1#0",
        "aggregate%item0%0#1",
        "aggregate%item1%0#1",
        "aggregate%item2%0#1",
        "tmp%30#0",
        "12",
        "64"
      ]
    },
    "3379": {
      "op": "extract3",
      "defined_out": [
        "aggregate%extract%3#1",
        "aggregate%item0%0#1",
        "aggregate%item1%0#1",
        "aggregate%item2%0#1"
      ],
      "stack_out": [
        "result1#0",
        "aggregate%item0%0#1",
        "aggregate%item1%0#1",
        "aggregate%item2%0#1",
        "aggregate%extract%3#1"
      ]
    },
    "3380": {
      "op": "uncover 3",
      "defined_out": [
        "aggregate%extract%3#1",
        "aggregate%item1%0#1",
        "aggregate%item2%0#1",
        "tmp%33#0"
      ],
      "stack_out": [
        "result1#0",
        "aggregate%item1%0#1",
        "aggregate%item2%0#1",
        "aggregate%extract%3#1",
        "tmp%33#0"
      ]
    },
    "3382": {
      "op": "swap",
      "stack_out": [
        "result1#0",
        "aggregate%item1%0#1",
        "aggregate%item2%0#1",
        "tmp%33#0",
        "aggregate%extract%3#1"
      ]
    },
    "3383": {
      "op": "uncover 3",
      "defined_out": [
        "aggregate%extract%3#1",
        "aggregate%item2%0#1",
        "tmp%33#0",
        "tmp%34#0"
      ],
      "stack_out": [
        "result1#0",
        "aggregate%item2%0#1",
        "tmp%33#0",
        "aggregate%extract%3#1",
        "tmp%34#0"
      ]
    },
    "3385": {
      "op": "cover 2",
      "defined_out": [
        "tmp%33#0",
        "tmp%34#0",
        "tmp%35#0",
        "tmp%36#0"
      ],
      "stack_out": [
        "result1#0",
        "tmp%35#0",
        "tmp%34#0",
        "tmp%33#0",
        "tmp%36#0"
      ]
    },
    "3387": {
      "op": "cover 3",
      "defined_out": [
        "result_native.0#0",
        "tmp%34#0",
        "tmp%35#0",
        "tmp%36#0"
      ],
      "stack_out": [
        "result1#0",
        "tmp%36#0",
        "tmp%35#0",
        "tmp%34#0",
        "result_native.0#0"
      ]
    },
    "3389": {
      "op": "cover 3",
      "defined_out": [
        "result_native.0#0",
        "result_native.1#0",
        "tmp%35#0",
        "tmp%36#0"
      ],
      "stack_out": [
        "result1#0",
        "result_native.0#0",
        "tmp%36#0",
        "tmp%35#0",
        "result_native.1#0"
      ]
    },
    "3391": {
      "op": "cover 3",
      "defined_out": [
        "result_native.0#0",
        "result_native.1#0",
        "result_native.2#0",
        "tmp%36#0"
      ],
      "stack_out": [
        "result1#0",
        "result_native.1#0",
        "result_native.0#0",
        "tmp%36#0",
        "result_native.2#0"
      ]
    },
    "3393": {
      "op": "cover 3",
      "defined_out": [
        "result_native.0#0",
        "result_native.1#0",
        "result_native.2#0",
        "result_native.3#0"
      ],
      "stack_out": [
        "result1#0",
        "result_native.2#0",
        "result_native.1#0",
        "result_native.0#0",
        "result_native.3#0"
      ]
    },
    "3395": {
      "op": "cover 3",
      "stack_out": [
        "result1#0",
        "result_native.3#0",
        "result_native.2#0",
        "result_native.1#0",
        "result_native.0#0"
      ]
    },
    "3397": {
      "op": "frame_dig 0",
      "defined_out": [
        "result1#0",
        "result_native.0#0",
        "result_native.1#0",
        "result_native.2#0",
        "result_native.3#0"
      ],
      "stack_out": [
        "result1#0",
        "result_native.3#0",
        "result_native.2#0",
        "result_native.1#0",
        "result_native.0#0",
        "result1#0"
      ]
    },
    "3399": {
      "op": "dup",
      "defined_out": [
        "result1#0",
        "result1#0 (copy)",
        "result_native.0#0",
        "result_native.1#0",
        "result_native.2#0",
        "result_native.3#0"
      ],
      "stack_out": [
        "result1#0",
        "result_native.3#0",
        "result_native.2#0",
        "result_native.1#0",
        "result_native.0#0",
        "result1#0",
        "result1#0 (copy)"
      ]
    },
    "3400": {
      "op": "intc_0 // 0",
      "stack_out": [
        "result1#0",
        "result_native.3#0",
        "result_native.2#0",
        "result_native.1#0",
        "result_native.0#0",
        "result1#0",
        "result1#0 (copy)",
        "0"
      ]
    },
    "3401": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%extract_uint16%6#1",
        "result1#0",
        "result_native.0#0",
        "result_native.1#0",
        "result_native.2#0",
        "result_native.3#0"
      ],
      "stack_out": [
        "result1#0",
        "result_native.3#0",
        "result_native.2#0",
        "result_native.1#0",
        "result_native.0#0",
        "result1#0",
        "aggregate%extract_uint16%6#1"
      ]
    },
    "3402": {
      "op": "swap",
      "stack_out": [
        "result1#0",
        "result_native.3#0",
        "result_native.2#0",
        "result_native.1#0",
        "result_native.0#0",
        "aggregate%extract_uint16%6#1",
        "result1#0"
      ]
    },
    "3403": {
      "op": "dup",
      "stack_out": [
        "result1#0",
        "result_native.3#0",
        "result_native.2#0",
        "result_native.1#0",
        "result_native.0#0",
        "aggregate%extract_uint16%6#1",
        "result1#0",
        "result1#0 (copy)"
      ]
    },
    "3404": {
      "op": "intc_2 // 2",
      "stack_out": [
        "result1#0",
        "result_native.3#0",
        "result_native.2#0",
        "result_native.1#0",
        "result_native.0#0",
        "aggregate%extract_uint16%6#1",
        "result1#0",
        "result1#0 (copy)",
        "2"
      ]
    },
    "3405": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%extract_uint16%6#1",
        "aggregate%extract_uint16%7#1",
        "result1#0",
        "result_native.0#0",
        "result_native.1#0",
        "result_native.2#0",
        "result_native.3#0"
      ],
      "stack_out": [
        "result1#0",
        "result_native.3#0",
        "result_native.2#0",
        "result_native.1#0",
        "result_native.0#0",
        "aggregate%extract_uint16%6#1",
        "result1#0",
        "aggregate%extract_uint16%7#1"
      ]
    },
    "3406": {
      "op": "dig 1",
      "stack_out": [
        "result1#0",
        "result_native.3#0",
        "result_native.2#0",
        "result_native.1#0",
        "result_native.0#0",
        "aggregate%extract_uint16%6#1",
        "result1#0",
        "aggregate%extract_uint16%7#1",
        "result1#0 (copy)"
      ]
    },
    "3408": {
      "op": "uncover 3",
      "stack_out": [
        "result1#0",
        "result_native.3#0",
        "result_native.2#0",
        "result_native.1#0",
        "result_native.0#0",
        "result1#0",
        "aggregate%extract_uint16%7#1",
        "result1#0 (copy)",
        "aggregate%extract_uint16%6#1"
      ]
    },
    "3410": {
      "op": "uncover 2",
      "stack_out": [
        "result1#0",
        "result_native.3#0",
        "result_native.2#0",
        "result_native.1#0",
        "result_native.0#0",
        "result1#0",
        "result1#0 (copy)",
        "aggregate%extract_uint16%6#1",
        "aggregate%extract_uint16%7#1"
      ]
    },
    "3412": {
      "op": "substring3",
      "defined_out": [
        "result1#0",
        "result_native.0#0",
        "result_native.1#0",
        "result_native.2#0",
        "result_native.3#0",
        "tmp%37#0"
      ],
      "stack_out": [
        "result1#0",
        "result_native.3#0",
        "result_native.2#0",
        "result_native.1#0",
        "result_native.0#0",
        "result1#0",
        "tmp%37#0"
      ]
    },
    "3413": {
      "op": "extract 2 0",
      "defined_out": [
        "result1#0",
        "result_native.0#0",
        "result_native.1#0",
        "result_native.2#0",
        "result_native.3#0",
        "tmp%41#0"
      ],
      "stack_out": [
        "result1#0",
        "result_native.3#0",
        "result_native.2#0",
        "result_native.1#0",
        "result_native.0#0",
        "result1#0",
        "tmp%41#0"
      ]
    },
    "3416": {
      "op": "uncover 2",
      "stack_out": [
        "result1#0",
        "result_native.3#0",
        "result_native.2#0",
        "result_native.1#0",
        "result1#0",
        "tmp%41#0",
        "result_native.0#0"
      ]
    },
    "3418": {
      "op": "==",
      "defined_out": [
        "result1#0",
        "result_native.1#0",
        "result_native.2#0",
        "result_native.3#0",
        "tmp%42#0"
      ],
      "stack_out": [
        "result1#0",
        "result_native.3#0",
        "result_native.2#0",
        "result_native.1#0",
        "result1#0",
        "tmp%42#0"
      ]
    },
    "3419": {
      "op": "assert",
      "stack_out": [
        "result1#0",
        "result_native.3#0",
        "result_native.2#0",
        "result_native.1#0",
        "result1#0"
      ]
    },
    "3420": {
      "op": "dup",
      "stack_out": [
        "result1#0",
        "result_native.3#0",
        "result_native.2#0",
        "result_native.1#0",
        "result1#0",
        "result1#0 (copy)"
      ]
    },
    "3421": {
      "op": "intc_2 // 2",
      "stack_out": [
        "result1#0",
        "result_native.3#0",
        "result_native.2#0",
        "result_native.1#0",
        "result1#0",
        "result1#0 (copy)",
        "2"
      ]
    },
    "3422": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%extract_uint16%11#1",
        "result1#0",
        "result_native.1#0",
        "result_native.2#0",
        "result_native.3#0"
      ],
      "stack_out": [
        "result1#0",
        "result_native.3#0",
        "result_native.2#0",
        "result_native.1#0",
        "result1#0",
        "aggregate%extract_uint16%11#1"
      ]
    },
    "3423": {
      "op": "swap",
      "stack_out": [
        "result1#0",
        "result_native.3#0",
        "result_native.2#0",
        "result_native.1#0",
        "aggregate%extract_uint16%11#1",
        "result1#0"
      ]
    },
    "3424": {
      "op": "dup",
      "stack_out": [
        "result1#0",
        "result_native.3#0",
        "result_native.2#0",
        "result_native.1#0",
        "aggregate%extract_uint16%11#1",
        "result1#0",
        "result1#0 (copy)"
      ]
    },
    "3425": {
      "op": "len",
      "defined_out": [
        "aggregate%extract_uint16%11#1",
        "aggregate%len%3#1",
        "result1#0",
        "result_native.1#0",
        "result_native.2#0",
        "result_native.3#0"
      ],
      "stack_out": [
        "result1#0",
        "result_native.3#0",
        "result_native.2#0",
        "result_native.1#0",
        "aggregate%extract_uint16%11#1",
        "result1#0",
        "aggregate%len%3#1"
      ]
    },
    "3426": {
      "op": "swap",
      "stack_out": [
        "result1#0",
        "result_native.3#0",
        "result_native.2#0",
        "result_native.1#0",
        "aggregate%extract_uint16%11#1",
        "aggregate%len%3#1",
        "result1#0"
      ]
    },
    "3427": {
      "op": "dup",
      "stack_out": [
        "result1#0",
        "result_native.3#0",
        "result_native.2#0",
        "result_native.1#0",
        "aggregate%extract_uint16%11#1",
        "aggregate%len%3#1",
        "result1#0",
        "result1#0 (copy)"
      ]
    },
    "3428": {
      "op": "uncover 3",
      "stack_out": [
        "result1#0",
        "result_native.3#0",
        "result_native.2#0",
        "result_native.1#0",
        "aggregate%len%3#1",
        "result1#0",
        "result1#0 (copy)",
        "aggregate%extract_uint16%11#1"
      ]
    },
    "3430": {
      "op": "uncover 3",
      "stack_out": [
        "result1#0",
        "result_native.3#0",
        "result_native.2#0",
        "result_native.1#0",
        "result1#0",
        "result1#0 (copy)",
        "aggregate%extract_uint16%11#1",
        "aggregate%len%3#1"
      ]
    },
    "3432": {
      "op": "substring3",
      "defined_out": [
        "result1#0",
        "result_native.1#0",
        "result_native.2#0",
        "result_native.3#0",
        "tmp%44#0"
      ],
      "stack_out": [
        "result1#0",
        "result_native.3#0",
        "result_native.2#0",
        "result_native.1#0",
        "result1#0",
        "tmp%44#0"
      ]
    },
    "3433": {
      "op": "extract 2 0",
      "defined_out": [
        "result1#0",
        "result_native.1#0",
        "result_native.2#0",
        "result_native.3#0",
        "tmp%47#0"
      ],
      "stack_out": [
        "result1#0",
        "result_native.3#0",
        "result_native.2#0",
        "result_native.1#0",
        "result1#0",
        "tmp%47#0"
      ]
    },
    "3436": {
      "op": "uncover 2",
      "stack_out": [
        "result1#0",
        "result_native.3#0",
        "result_native.2#0",
        "result1#0",
        "tmp%47#0",
        "result_native.1#0"
      ]
    },
    "3438": {
      "op": "==",
      "defined_out": [
        "result1#0",
        "result_native.2#0",
        "result_native.3#0",
        "tmp%48#0"
      ],
      "stack_out": [
        "result1#0",
        "result_native.3#0",
        "result_native.2#0",
        "result1#0",
        "tmp%48#0"
      ]
    },
    "3439": {
      "op": "assert",
      "stack_out": [
        "result1#0",
        "result_native.3#0",
        "result_native.2#0",
        "result1#0"
      ]
    },
    "3440": {
      "op": "dup",
      "stack_out": [
        "result1#0",
        "result_native.3#0",
        "result_native.2#0",
        "result1#0",
        "result1#0 (copy)"
      ]
    },
    "3441": {
      "op": "pushint 4 // 4",
      "stack_out": [
        "result1#0",
        "result_native.3#0",
        "result_native.2#0",
        "result1#0",
        "result1#0 (copy)",
        "4"
      ]
    },
    "3443": {
      "op": "pushint 8 // 8",
      "stack_out": [
        "result1#0",
        "result_native.3#0",
        "result_native.2#0",
        "result1#0",
        "result1#0 (copy)",
        "4",
        "8"
      ]
    },
    "3445": {
      "op": "extract3",
      "defined_out": [
        "result1#0",
        "result_native.2#0",
        "result_native.3#0",
        "tmp%51#0"
      ],
      "stack_out": [
        "result1#0",
        "result_native.3#0",
        "result_native.2#0",
        "result1#0",
        "tmp%51#0"
      ]
    },
    "3446": {
      "op": "btoi",
      "defined_out": [
        "result1#0",
        "result_native.2#0",
        "result_native.3#0",
        "tmp%53#0"
      ],
      "stack_out": [
        "result1#0",
        "result_native.3#0",
        "result_native.2#0",
        "result1#0",
        "tmp%53#0"
      ]
    },
    "3447": {
      "op": "uncover 2",
      "stack_out": [
        "result1#0",
        "result_native.3#0",
        "result1#0",
        "tmp%53#0",
        "result_native.2#0"
      ]
    },
    "3449": {
      "op": "==",
      "defined_out": [
        "result1#0",
        "result_native.3#0",
        "tmp%54#0"
      ],
      "stack_out": [
        "result1#0",
        "result_native.3#0",
        "result1#0",
        "tmp%54#0"
      ]
    },
    "3450": {
      "op": "assert",
      "stack_out": [
        "result1#0",
        "result_native.3#0",
        "result1#0"
      ]
    },
    "3451": {
      "op": "pushint 12 // 12",
      "stack_out": [
        "result1#0",
        "result_native.3#0",
        "result1#0",
        "12"
      ]
    },
    "3453": {
      "op": "pushint 64 // 64",
      "stack_out": [
        "result1#0",
        "result_native.3#0",
        "result1#0",
        "12",
        "64"
      ]
    },
    "3455": {
      "op": "extract3",
      "defined_out": [
        "result1#0",
        "result_native.3#0",
        "tmp%59#0"
      ],
      "stack_out": [
        "result1#0",
        "result_native.3#0",
        "tmp%59#0"
      ]
    },
    "3456": {
      "op": "b==",
      "defined_out": [
        "result1#0",
        "tmp%60#0"
      ],
      "stack_out": [
        "result1#0",
        "tmp%60#0"
      ]
    },
    "3457": {
      "op": "assert",
      "stack_out": [
        "result1#0"
      ]
    },
    "3458": {
      "retsub": true,
      "op": "retsub"
    },
    "3459": {
      "subroutine": "test_cases.typed_abi_call.typed_c2c.Greeter.test_native_tuple_method_ref",
      "params": {
        "app#0": "uint64"
      },
      "block": "test_native_tuple_method_ref",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "3462": {
      "op": "intc_0 // 0",
      "stack_out": [
        "result.0#0"
      ]
    },
    "3463": {
      "op": "dupn 2",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0"
      ]
    },
    "3465": {
      "op": "bytec_2 // \"\"",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0"
      ]
    },
    "3466": {
      "block": "test_native_tuple_method_ref_block@0",
      "stack_in": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0"
      ],
      "op": "itxn_begin"
    },
    "3467": {
      "op": "bytec_1 // 0x7331",
      "defined_out": [
        "0x7331"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "0x7331"
      ]
    },
    "3468": {
      "op": "len",
      "defined_out": [
        "aggregate%length%0#1"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "aggregate%length%0#1"
      ]
    },
    "3469": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%0#1"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "aggregate%as_bytes%0#1"
      ]
    },
    "3470": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%length_uint16%0#1"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "aggregate%length_uint16%0#1"
      ]
    },
    "3473": {
      "op": "bytec_1 // 0x7331",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "aggregate%length_uint16%0#1",
        "0x7331"
      ]
    },
    "3474": {
      "op": "concat",
      "defined_out": [
        "encoded%0#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "encoded%0#0"
      ]
    },
    "3475": {
      "op": "bytec_3 // 0x6231",
      "defined_out": [
        "0x6231",
        "encoded%0#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "encoded%0#0",
        "0x6231"
      ]
    },
    "3476": {
      "op": "len",
      "defined_out": [
        "aggregate%length%1#1",
        "encoded%0#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "encoded%0#0",
        "aggregate%length%1#1"
      ]
    },
    "3477": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%1#1",
        "encoded%0#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "encoded%0#0",
        "aggregate%as_bytes%1#1"
      ]
    },
    "3478": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%length_uint16%1#1",
        "encoded%0#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "encoded%0#0",
        "aggregate%length_uint16%1#1"
      ]
    },
    "3481": {
      "op": "bytec_3 // 0x6231",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "encoded%0#0",
        "aggregate%length_uint16%1#1",
        "0x6231"
      ]
    },
    "3482": {
      "op": "concat",
      "defined_out": [
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%0%%param_ApplicationArgs_idx_2#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%0%%param_ApplicationArgs_idx_2#0"
      ]
    },
    "3483": {
      "op": "swap",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "inner_txn_params%0%%param_ApplicationArgs_idx_2#0",
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "3484": {
      "op": "frame_dig -1",
      "defined_out": [
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%0%%param_ApplicationArgs_idx_2#0",
        "inner_txn_params%0%%param_ApplicationID_idx_0#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "inner_txn_params%0%%param_ApplicationArgs_idx_2#0",
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%0%%param_ApplicationID_idx_0#0"
      ]
    },
    "3486": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "inner_txn_params%0%%param_ApplicationArgs_idx_2#0",
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "3488": {
      "op": "bytec 7 // method \"echo_native_tuple(string,byte[],uint64,uint512)(string,byte[],uint64,uint512)\"",
      "defined_out": [
        "Method(echo_native_tuple(string,byte[],uint64,uint512)(string,byte[],uint64,uint512))",
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%0%%param_ApplicationArgs_idx_2#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "inner_txn_params%0%%param_ApplicationArgs_idx_2#0",
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0",
        "Method(echo_native_tuple(string,byte[],uint64,uint512)(string,byte[],uint64,uint512))"
      ]
    },
    "3490": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "inner_txn_params%0%%param_ApplicationArgs_idx_2#0",
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "3492": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "inner_txn_params%0%%param_ApplicationArgs_idx_2#0"
      ]
    },
    "3494": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0"
      ]
    },
    "3496": {
      "op": "bytec 4 // 0x0000000000000001",
      "defined_out": [
        "0x0000000000000001"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "0x0000000000000001"
      ]
    },
    "3498": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0"
      ]
    },
    "3500": {
      "op": "bytec 6 // 0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002",
      "defined_out": [
        "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002"
      ]
    },
    "3502": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0"
      ]
    },
    "3504": {
      "op": "intc_1 // appl",
      "defined_out": [
        "appl"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "appl"
      ]
    },
    "3505": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0"
      ]
    },
    "3507": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "0"
      ]
    },
    "3508": {
      "op": "itxn_field Fee",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0"
      ]
    },
    "3510": {
      "block": "test_native_tuple_method_ref_next_txn@1",
      "stack_in": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0"
      ],
      "op": "itxn_submit"
    },
    "3511": {
      "op": "itxn LastLog",
      "defined_out": [
        "awst_tmp%0#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "awst_tmp%0#0"
      ]
    },
    "3513": {
      "op": "dup",
      "defined_out": [
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ]
    },
    "3514": {
      "op": "extract 4 0",
      "defined_out": [
        "awst_tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "awst_tmp%0#0",
        "tmp%1#0"
      ]
    },
    "3517": {
      "op": "swap",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "tmp%1#0",
        "awst_tmp%0#0"
      ]
    },
    "3518": {
      "op": "extract 0 4",
      "defined_out": [
        "tmp%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "tmp%1#0",
        "tmp%2#0"
      ]
    },
    "3521": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "tmp%1#0",
        "tmp%2#0",
        "0x151f7c75"
      ]
    },
    "3522": {
      "op": "==",
      "defined_out": [
        "tmp%1#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "tmp%1#0",
        "tmp%3#0"
      ]
    },
    "3523": {
      "error": "application log value is not the result of an ABI return",
      "op": "assert // application log value is not the result of an ABI return",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "tmp%1#0"
      ]
    },
    "3524": {
      "op": "dup",
      "defined_out": [
        "tmp%1#0",
        "tmp%1#0 (copy)"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "tmp%1#0",
        "tmp%1#0 (copy)"
      ]
    },
    "3525": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%1#0",
        "tmp%1#0 (copy)"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "tmp%1#0",
        "tmp%1#0 (copy)",
        "0"
      ]
    },
    "3526": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%extract_uint16%0#1",
        "tmp%1#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "tmp%1#0",
        "aggregate%extract_uint16%0#1"
      ]
    },
    "3527": {
      "op": "swap",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "aggregate%extract_uint16%0#1",
        "tmp%1#0"
      ]
    },
    "3528": {
      "op": "dup",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "aggregate%extract_uint16%0#1",
        "tmp%1#0",
        "tmp%1#0 (copy)"
      ]
    },
    "3529": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "aggregate%extract_uint16%0#1",
        "tmp%1#0",
        "tmp%1#0 (copy)"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "aggregate%extract_uint16%0#1",
        "tmp%1#0",
        "tmp%1#0 (copy)",
        "2"
      ]
    },
    "3530": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%extract_uint16%0#1",
        "aggregate%extract_uint16%1#1",
        "tmp%1#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "aggregate%extract_uint16%0#1",
        "tmp%1#0",
        "aggregate%extract_uint16%1#1"
      ]
    },
    "3531": {
      "op": "dig 1",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "aggregate%extract_uint16%0#1",
        "tmp%1#0",
        "aggregate%extract_uint16%1#1",
        "tmp%1#0 (copy)"
      ]
    },
    "3533": {
      "op": "uncover 3",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "tmp%1#0",
        "aggregate%extract_uint16%1#1",
        "tmp%1#0 (copy)",
        "aggregate%extract_uint16%0#1"
      ]
    },
    "3535": {
      "op": "uncover 2",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "tmp%1#0",
        "tmp%1#0 (copy)",
        "aggregate%extract_uint16%0#1",
        "aggregate%extract_uint16%1#1"
      ]
    },
    "3537": {
      "op": "substring3",
      "defined_out": [
        "aggregate%substring3%0#1",
        "tmp%1#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "tmp%1#0",
        "aggregate%substring3%0#1"
      ]
    },
    "3538": {
      "op": "extract 2 0",
      "defined_out": [
        "aggregate%item0%0#1",
        "tmp%1#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "tmp%1#0",
        "aggregate%item0%0#1"
      ]
    },
    "3541": {
      "op": "swap",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "aggregate%item0%0#1",
        "tmp%1#0"
      ]
    },
    "3542": {
      "op": "dup",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "aggregate%item0%0#1",
        "tmp%1#0",
        "tmp%1#0 (copy)"
      ]
    },
    "3543": {
      "op": "intc_2 // 2",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "aggregate%item0%0#1",
        "tmp%1#0",
        "tmp%1#0 (copy)",
        "2"
      ]
    },
    "3544": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%extract_uint16%2#1",
        "aggregate%item0%0#1",
        "tmp%1#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "aggregate%item0%0#1",
        "tmp%1#0",
        "aggregate%extract_uint16%2#1"
      ]
    },
    "3545": {
      "op": "swap",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "aggregate%item0%0#1",
        "aggregate%extract_uint16%2#1",
        "tmp%1#0"
      ]
    },
    "3546": {
      "op": "dup",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "aggregate%item0%0#1",
        "aggregate%extract_uint16%2#1",
        "tmp%1#0",
        "tmp%1#0 (copy)"
      ]
    },
    "3547": {
      "op": "len",
      "defined_out": [
        "aggregate%extract_uint16%2#1",
        "aggregate%item0%0#1",
        "aggregate%len%0#1",
        "tmp%1#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "aggregate%item0%0#1",
        "aggregate%extract_uint16%2#1",
        "tmp%1#0",
        "aggregate%len%0#1"
      ]
    },
    "3548": {
      "op": "swap",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "aggregate%item0%0#1",
        "aggregate%extract_uint16%2#1",
        "aggregate%len%0#1",
        "tmp%1#0"
      ]
    },
    "3549": {
      "op": "dup",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "aggregate%item0%0#1",
        "aggregate%extract_uint16%2#1",
        "aggregate%len%0#1",
        "tmp%1#0",
        "tmp%1#0 (copy)"
      ]
    },
    "3550": {
      "op": "uncover 3",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "aggregate%item0%0#1",
        "aggregate%len%0#1",
        "tmp%1#0",
        "tmp%1#0 (copy)",
        "aggregate%extract_uint16%2#1"
      ]
    },
    "3552": {
      "op": "uncover 3",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "aggregate%item0%0#1",
        "tmp%1#0",
        "tmp%1#0 (copy)",
        "aggregate%extract_uint16%2#1",
        "aggregate%len%0#1"
      ]
    },
    "3554": {
      "op": "substring3",
      "defined_out": [
        "aggregate%item0%0#1",
        "aggregate%substring3%1#1",
        "tmp%1#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "aggregate%item0%0#1",
        "tmp%1#0",
        "aggregate%substring3%1#1"
      ]
    },
    "3555": {
      "op": "extract 2 0",
      "defined_out": [
        "aggregate%item0%0#1",
        "aggregate%item1%0#1",
        "tmp%1#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "aggregate%item0%0#1",
        "tmp%1#0",
        "aggregate%item1%0#1"
      ]
    },
    "3558": {
      "op": "swap",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "aggregate%item0%0#1",
        "aggregate%item1%0#1",
        "tmp%1#0"
      ]
    },
    "3559": {
      "op": "dup",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "aggregate%item0%0#1",
        "aggregate%item1%0#1",
        "tmp%1#0",
        "tmp%1#0 (copy)"
      ]
    },
    "3560": {
      "op": "pushint 4 // 4",
      "defined_out": [
        "4",
        "aggregate%item0%0#1",
        "aggregate%item1%0#1",
        "tmp%1#0",
        "tmp%1#0 (copy)"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "aggregate%item0%0#1",
        "aggregate%item1%0#1",
        "tmp%1#0",
        "tmp%1#0 (copy)",
        "4"
      ]
    },
    "3562": {
      "op": "pushint 8 // 8",
      "defined_out": [
        "4",
        "8",
        "aggregate%item0%0#1",
        "aggregate%item1%0#1",
        "tmp%1#0",
        "tmp%1#0 (copy)"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "aggregate%item0%0#1",
        "aggregate%item1%0#1",
        "tmp%1#0",
        "tmp%1#0 (copy)",
        "4",
        "8"
      ]
    },
    "3564": {
      "op": "extract3",
      "defined_out": [
        "aggregate%extract%0#1",
        "aggregate%item0%0#1",
        "aggregate%item1%0#1",
        "tmp%1#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "aggregate%item0%0#1",
        "aggregate%item1%0#1",
        "tmp%1#0",
        "aggregate%extract%0#1"
      ]
    },
    "3565": {
      "op": "btoi",
      "defined_out": [
        "aggregate%item0%0#1",
        "aggregate%item1%0#1",
        "aggregate%item2%0#1",
        "tmp%1#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "aggregate%item0%0#1",
        "aggregate%item1%0#1",
        "tmp%1#0",
        "aggregate%item2%0#1"
      ]
    },
    "3566": {
      "op": "swap",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "aggregate%item0%0#1",
        "aggregate%item1%0#1",
        "aggregate%item2%0#1",
        "tmp%1#0"
      ]
    },
    "3567": {
      "op": "pushint 12 // 12",
      "defined_out": [
        "12",
        "aggregate%item0%0#1",
        "aggregate%item1%0#1",
        "aggregate%item2%0#1",
        "tmp%1#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "aggregate%item0%0#1",
        "aggregate%item1%0#1",
        "aggregate%item2%0#1",
        "tmp%1#0",
        "12"
      ]
    },
    "3569": {
      "op": "pushint 64 // 64",
      "defined_out": [
        "12",
        "64",
        "aggregate%item0%0#1",
        "aggregate%item1%0#1",
        "aggregate%item2%0#1",
        "tmp%1#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "aggregate%item0%0#1",
        "aggregate%item1%0#1",
        "aggregate%item2%0#1",
        "tmp%1#0",
        "12",
        "64"
      ]
    },
    "3571": {
      "op": "extract3",
      "defined_out": [
        "aggregate%extract%1#1",
        "aggregate%item0%0#1",
        "aggregate%item1%0#1",
        "aggregate%item2%0#1"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "aggregate%item0%0#1",
        "aggregate%item1%0#1",
        "aggregate%item2%0#1",
        "aggregate%extract%1#1"
      ]
    },
    "3572": {
      "op": "uncover 3",
      "defined_out": [
        "aggregate%extract%1#1",
        "aggregate%item1%0#1",
        "aggregate%item2%0#1",
        "tmp%4#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "aggregate%item1%0#1",
        "aggregate%item2%0#1",
        "aggregate%extract%1#1",
        "tmp%4#0"
      ]
    },
    "3574": {
      "op": "swap",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "aggregate%item1%0#1",
        "aggregate%item2%0#1",
        "tmp%4#0",
        "aggregate%extract%1#1"
      ]
    },
    "3575": {
      "op": "uncover 3",
      "defined_out": [
        "aggregate%extract%1#1",
        "aggregate%item2%0#1",
        "tmp%4#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "aggregate%item2%0#1",
        "tmp%4#0",
        "aggregate%extract%1#1",
        "tmp%5#0"
      ]
    },
    "3577": {
      "op": "cover 2",
      "defined_out": [
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "tmp%6#0",
        "tmp%5#0",
        "tmp%4#0",
        "tmp%7#0"
      ]
    },
    "3579": {
      "op": "cover 3",
      "defined_out": [
        "result.0#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "tmp%7#0",
        "tmp%6#0",
        "tmp%5#0",
        "result.0#0"
      ]
    },
    "3581": {
      "op": "dup",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "tmp%7#0",
        "tmp%6#0",
        "tmp%5#0",
        "result.0#0",
        "result.0#0 (copy)"
      ]
    },
    "3582": {
      "op": "cover 4",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "result.0#0",
        "tmp%7#0",
        "tmp%6#0",
        "tmp%5#0",
        "result.0#0"
      ]
    },
    "3584": {
      "op": "frame_bury 0",
      "defined_out": [
        "result.0#0",
        "result.1#0",
        "tmp%6#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "result.0#0",
        "tmp%7#0",
        "tmp%6#0",
        "result.1#0"
      ]
    },
    "3586": {
      "op": "dup",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "result.0#0",
        "tmp%7#0",
        "tmp%6#0",
        "result.1#0",
        "result.1#0 (copy)"
      ]
    },
    "3587": {
      "op": "cover 4",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "result.1#0",
        "result.0#0",
        "tmp%7#0",
        "tmp%6#0",
        "result.1#0"
      ]
    },
    "3589": {
      "op": "frame_bury 1",
      "defined_out": [
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "result.1#0",
        "result.0#0",
        "tmp%7#0",
        "result.2#0"
      ]
    },
    "3591": {
      "op": "dup",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "result.1#0",
        "result.0#0",
        "tmp%7#0",
        "result.2#0",
        "result.2#0 (copy)"
      ]
    },
    "3592": {
      "op": "cover 4",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "result.2#0",
        "result.1#0",
        "result.0#0",
        "tmp%7#0",
        "result.2#0"
      ]
    },
    "3594": {
      "op": "frame_bury 3",
      "defined_out": [
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "result.2#0",
        "result.1#0",
        "result.0#0",
        "result.3#0"
      ]
    },
    "3596": {
      "op": "dup",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "result.2#0",
        "result.1#0",
        "result.0#0",
        "result.3#0",
        "result.3#0 (copy)"
      ]
    },
    "3597": {
      "op": "cover 4",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "result.3#0",
        "result.2#0",
        "result.1#0",
        "result.0#0",
        "result.3#0"
      ]
    },
    "3599": {
      "op": "frame_bury 2",
      "defined_out": [
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "s#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "result.3#0",
        "result.2#0",
        "result.1#0",
        "s#0"
      ]
    },
    "3601": {
      "op": "cover 3",
      "defined_out": [
        "b#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "s#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "s#0",
        "result.3#0",
        "result.2#0",
        "b#0"
      ]
    },
    "3603": {
      "op": "cover 3",
      "defined_out": [
        "b#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "s#0",
        "u#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "b#0",
        "s#0",
        "result.3#0",
        "u#0"
      ]
    },
    "3605": {
      "op": "cover 3",
      "defined_out": [
        "b#0",
        "bu#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "s#0",
        "u#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "u#0",
        "b#0",
        "s#0",
        "bu#0"
      ]
    },
    "3607": {
      "op": "cover 3",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "bu#0",
        "u#0",
        "b#0",
        "s#0"
      ]
    },
    "3609": {
      "op": "bytec 15 // \"echo: s1\"",
      "defined_out": [
        "\"echo: s1\"",
        "b#0",
        "bu#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "s#0",
        "u#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "bu#0",
        "u#0",
        "b#0",
        "s#0",
        "\"echo: s1\""
      ]
    },
    "3611": {
      "op": "==",
      "defined_out": [
        "b#0",
        "bu#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "tmp%8#0",
        "u#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "bu#0",
        "u#0",
        "b#0",
        "tmp%8#0"
      ]
    },
    "3612": {
      "op": "assert",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "bu#0",
        "u#0",
        "b#0"
      ]
    },
    "3613": {
      "op": "bytec 51 // 0x6563686f3a206231",
      "defined_out": [
        "0x6563686f3a206231",
        "b#0",
        "bu#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "u#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "bu#0",
        "u#0",
        "b#0",
        "0x6563686f3a206231"
      ]
    },
    "3615": {
      "op": "==",
      "defined_out": [
        "bu#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "tmp%9#0",
        "u#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "bu#0",
        "u#0",
        "tmp%9#0"
      ]
    },
    "3616": {
      "op": "assert",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "bu#0",
        "u#0"
      ]
    },
    "3617": {
      "op": "intc_2 // 2",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "bu#0",
        "u#0",
        "2"
      ]
    },
    "3618": {
      "op": "==",
      "defined_out": [
        "bu#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "bu#0",
        "tmp%10#0"
      ]
    },
    "3619": {
      "op": "assert",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "bu#0"
      ]
    },
    "3620": {
      "op": "bytec 30 // 0x03",
      "defined_out": [
        "0x03",
        "bu#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "bu#0",
        "0x03"
      ]
    },
    "3622": {
      "op": "b==",
      "defined_out": [
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "tmp%11#0"
      ]
    },
    "3623": {
      "op": "assert",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0"
      ]
    },
    "3624": {
      "op": "itxn_begin"
    },
    "3625": {
      "op": "bytec_1 // \"s1\"",
      "defined_out": [
        "\"s1\"",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "\"s1\""
      ]
    },
    "3626": {
      "op": "len",
      "defined_out": [
        "aggregate%length%2#1",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "aggregate%length%2#1"
      ]
    },
    "3627": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%2#1",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "aggregate%as_bytes%2#1"
      ]
    },
    "3628": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%length_uint16%2#1",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "aggregate%length_uint16%2#1"
      ]
    },
    "3631": {
      "op": "bytec_1 // \"s1\"",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "aggregate%length_uint16%2#1",
        "\"s1\""
      ]
    },
    "3632": {
      "op": "concat",
      "defined_out": [
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "tmp%12#0"
      ]
    },
    "3633": {
      "op": "bytec_3 // 0x6231",
      "defined_out": [
        "0x6231",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "tmp%12#0",
        "0x6231"
      ]
    },
    "3634": {
      "op": "len",
      "defined_out": [
        "aggregate%length%3#1",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "tmp%12#0",
        "aggregate%length%3#1"
      ]
    },
    "3635": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%3#1",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "tmp%12#0",
        "aggregate%as_bytes%3#1"
      ]
    },
    "3636": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%length_uint16%3#1",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "tmp%12#0",
        "aggregate%length_uint16%3#1"
      ]
    },
    "3639": {
      "op": "bytec_3 // 0x6231",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "tmp%12#0",
        "aggregate%length_uint16%3#1",
        "0x6231"
      ]
    },
    "3640": {
      "op": "concat",
      "defined_out": [
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "tmp%12#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "tmp%12#0",
        "tmp%13#0"
      ]
    },
    "3641": {
      "op": "intc_3 // 1",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "tmp%12#0",
        "tmp%13#0",
        "1"
      ]
    },
    "3642": {
      "op": "itob",
      "defined_out": [
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0"
      ]
    },
    "3643": {
      "op": "bytec 11 // 0x02",
      "defined_out": [
        "0x02",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "0x02"
      ]
    },
    "3645": {
      "op": "len",
      "defined_out": [
        "aggregate%value_len%0#1",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "aggregate%value_len%0#1"
      ]
    },
    "3646": {
      "op": "pushint 64 // 64",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "aggregate%value_len%0#1",
        "64"
      ]
    },
    "3648": {
      "op": "<=",
      "defined_out": [
        "aggregate%len_ok%0#1",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "aggregate%len_ok%0#1"
      ]
    },
    "3649": {
      "error": "overflow",
      "op": "assert // overflow",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0"
      ]
    },
    "3650": {
      "op": "pushint 64 // 64",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "64"
      ]
    },
    "3652": {
      "op": "bzero",
      "defined_out": [
        "aggregate%bzero%0#1",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "aggregate%bzero%0#1"
      ]
    },
    "3653": {
      "op": "bytec 11 // 0x02",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "aggregate%bzero%0#1",
        "0x02"
      ]
    },
    "3655": {
      "op": "b|",
      "defined_out": [
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "tmp%15#0"
      ]
    },
    "3656": {
      "op": "uncover 3",
      "defined_out": [
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "tmp%13#0",
        "tmp%14#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "tmp%13#0",
        "tmp%14#0",
        "tmp%15#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "3658": {
      "op": "swap",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "tmp%13#0",
        "tmp%14#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0",
        "tmp%15#0"
      ]
    },
    "3659": {
      "op": "uncover 3",
      "defined_out": [
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_2#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "tmp%14#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "tmp%14#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0",
        "tmp%15#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_2#0"
      ]
    },
    "3661": {
      "op": "cover 2",
      "defined_out": [
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_2#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_3#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_4#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_3#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_2#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_4#0"
      ]
    },
    "3663": {
      "op": "cover 3",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_4#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_3#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_2#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "3665": {
      "op": "frame_dig -1",
      "defined_out": [
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_2#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_3#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_4#0",
        "inner_txn_params%1%%param_ApplicationID_idx_0#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_4#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_3#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_2#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%1%%param_ApplicationID_idx_0#0"
      ]
    },
    "3667": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_4#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_3#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_2#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "3669": {
      "op": "bytec 7 // method \"echo_native_tuple(string,byte[],uint64,uint512)(string,byte[],uint64,uint512)\"",
      "defined_out": [
        "Method(echo_native_tuple(string,byte[],uint64,uint512)(string,byte[],uint64,uint512))",
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_2#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_3#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_4#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_4#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_3#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_2#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0",
        "Method(echo_native_tuple(string,byte[],uint64,uint512)(string,byte[],uint64,uint512))"
      ]
    },
    "3671": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_4#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_3#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_2#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "3673": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_4#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_3#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_2#0"
      ]
    },
    "3675": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_4#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_3#0"
      ]
    },
    "3677": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_4#0"
      ]
    },
    "3679": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0"
      ]
    },
    "3681": {
      "op": "intc_1 // appl",
      "defined_out": [
        "appl",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "appl"
      ]
    },
    "3682": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0"
      ]
    },
    "3684": {
      "op": "intc_0 // 0",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "0"
      ]
    },
    "3685": {
      "op": "itxn_field Fee",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0"
      ]
    },
    "3687": {
      "block": "test_native_tuple_method_ref_next_txn@2",
      "stack_in": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0"
      ],
      "op": "itxn_submit"
    },
    "3688": {
      "op": "itxn LastLog",
      "defined_out": [
        "awst_tmp%1#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "awst_tmp%1#0"
      ]
    },
    "3690": {
      "op": "dup",
      "defined_out": [
        "awst_tmp%1#0",
        "awst_tmp%1#0 (copy)"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "awst_tmp%1#0",
        "awst_tmp%1#0 (copy)"
      ]
    },
    "3691": {
      "op": "extract 4 0",
      "defined_out": [
        "awst_tmp%1#0",
        "tmp%16#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "awst_tmp%1#0",
        "tmp%16#0"
      ]
    },
    "3694": {
      "op": "swap",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "tmp%16#0",
        "awst_tmp%1#0"
      ]
    },
    "3695": {
      "op": "extract 0 4",
      "defined_out": [
        "tmp%16#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "tmp%16#0",
        "tmp%17#0"
      ]
    },
    "3698": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%16#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "tmp%16#0",
        "tmp%17#0",
        "0x151f7c75"
      ]
    },
    "3699": {
      "op": "==",
      "defined_out": [
        "tmp%16#0",
        "tmp%18#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "tmp%16#0",
        "tmp%18#0"
      ]
    },
    "3700": {
      "error": "application log value is not the result of an ABI return",
      "op": "assert // application log value is not the result of an ABI return",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "tmp%16#0"
      ]
    },
    "3701": {
      "op": "dup",
      "defined_out": [
        "tmp%16#0",
        "tmp%16#0 (copy)"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "tmp%16#0",
        "tmp%16#0 (copy)"
      ]
    },
    "3702": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%16#0",
        "tmp%16#0 (copy)"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "tmp%16#0",
        "tmp%16#0 (copy)",
        "0"
      ]
    },
    "3703": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%extract_uint16%3#1",
        "tmp%16#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "tmp%16#0",
        "aggregate%extract_uint16%3#1"
      ]
    },
    "3704": {
      "op": "swap",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "aggregate%extract_uint16%3#1",
        "tmp%16#0"
      ]
    },
    "3705": {
      "op": "dup",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "aggregate%extract_uint16%3#1",
        "tmp%16#0",
        "tmp%16#0 (copy)"
      ]
    },
    "3706": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "aggregate%extract_uint16%3#1",
        "tmp%16#0",
        "tmp%16#0 (copy)"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "aggregate%extract_uint16%3#1",
        "tmp%16#0",
        "tmp%16#0 (copy)",
        "2"
      ]
    },
    "3707": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%extract_uint16%3#1",
        "aggregate%extract_uint16%4#1",
        "tmp%16#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "aggregate%extract_uint16%3#1",
        "tmp%16#0",
        "aggregate%extract_uint16%4#1"
      ]
    },
    "3708": {
      "op": "dig 1",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "aggregate%extract_uint16%3#1",
        "tmp%16#0",
        "aggregate%extract_uint16%4#1",
        "tmp%16#0 (copy)"
      ]
    },
    "3710": {
      "op": "uncover 3",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "tmp%16#0",
        "aggregate%extract_uint16%4#1",
        "tmp%16#0 (copy)",
        "aggregate%extract_uint16%3#1"
      ]
    },
    "3712": {
      "op": "uncover 2",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "tmp%16#0",
        "tmp%16#0 (copy)",
        "aggregate%extract_uint16%3#1",
        "aggregate%extract_uint16%4#1"
      ]
    },
    "3714": {
      "op": "substring3",
      "defined_out": [
        "aggregate%substring3%2#1",
        "tmp%16#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "tmp%16#0",
        "aggregate%substring3%2#1"
      ]
    },
    "3715": {
      "op": "extract 2 0",
      "defined_out": [
        "aggregate%item0%1#1",
        "tmp%16#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "tmp%16#0",
        "aggregate%item0%1#1"
      ]
    },
    "3718": {
      "op": "swap",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "aggregate%item0%1#1",
        "tmp%16#0"
      ]
    },
    "3719": {
      "op": "dup",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "aggregate%item0%1#1",
        "tmp%16#0",
        "tmp%16#0 (copy)"
      ]
    },
    "3720": {
      "op": "intc_2 // 2",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "aggregate%item0%1#1",
        "tmp%16#0",
        "tmp%16#0 (copy)",
        "2"
      ]
    },
    "3721": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%extract_uint16%5#1",
        "aggregate%item0%1#1",
        "tmp%16#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "aggregate%item0%1#1",
        "tmp%16#0",
        "aggregate%extract_uint16%5#1"
      ]
    },
    "3722": {
      "op": "swap",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "aggregate%item0%1#1",
        "aggregate%extract_uint16%5#1",
        "tmp%16#0"
      ]
    },
    "3723": {
      "op": "dup",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "aggregate%item0%1#1",
        "aggregate%extract_uint16%5#1",
        "tmp%16#0",
        "tmp%16#0 (copy)"
      ]
    },
    "3724": {
      "op": "len",
      "defined_out": [
        "aggregate%extract_uint16%5#1",
        "aggregate%item0%1#1",
        "aggregate%len%1#1",
        "tmp%16#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "aggregate%item0%1#1",
        "aggregate%extract_uint16%5#1",
        "tmp%16#0",
        "aggregate%len%1#1"
      ]
    },
    "3725": {
      "op": "swap",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "aggregate%item0%1#1",
        "aggregate%extract_uint16%5#1",
        "aggregate%len%1#1",
        "tmp%16#0"
      ]
    },
    "3726": {
      "op": "dup",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "aggregate%item0%1#1",
        "aggregate%extract_uint16%5#1",
        "aggregate%len%1#1",
        "tmp%16#0",
        "tmp%16#0 (copy)"
      ]
    },
    "3727": {
      "op": "uncover 3",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "aggregate%item0%1#1",
        "aggregate%len%1#1",
        "tmp%16#0",
        "tmp%16#0 (copy)",
        "aggregate%extract_uint16%5#1"
      ]
    },
    "3729": {
      "op": "uncover 3",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "aggregate%item0%1#1",
        "tmp%16#0",
        "tmp%16#0 (copy)",
        "aggregate%extract_uint16%5#1",
        "aggregate%len%1#1"
      ]
    },
    "3731": {
      "op": "substring3",
      "defined_out": [
        "aggregate%item0%1#1",
        "aggregate%substring3%3#1",
        "tmp%16#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "aggregate%item0%1#1",
        "tmp%16#0",
        "aggregate%substring3%3#1"
      ]
    },
    "3732": {
      "op": "extract 2 0",
      "defined_out": [
        "aggregate%item0%1#1",
        "aggregate%item1%1#1",
        "tmp%16#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "aggregate%item0%1#1",
        "tmp%16#0",
        "aggregate%item1%1#1"
      ]
    },
    "3735": {
      "op": "swap",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "aggregate%item0%1#1",
        "aggregate%item1%1#1",
        "tmp%16#0"
      ]
    },
    "3736": {
      "op": "dup",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "aggregate%item0%1#1",
        "aggregate%item1%1#1",
        "tmp%16#0",
        "tmp%16#0 (copy)"
      ]
    },
    "3737": {
      "op": "pushint 4 // 4",
      "defined_out": [
        "4",
        "aggregate%item0%1#1",
        "aggregate%item1%1#1",
        "tmp%16#0",
        "tmp%16#0 (copy)"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "aggregate%item0%1#1",
        "aggregate%item1%1#1",
        "tmp%16#0",
        "tmp%16#0 (copy)",
        "4"
      ]
    },
    "3739": {
      "op": "pushint 8 // 8",
      "defined_out": [
        "4",
        "8",
        "aggregate%item0%1#1",
        "aggregate%item1%1#1",
        "tmp%16#0",
        "tmp%16#0 (copy)"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "aggregate%item0%1#1",
        "aggregate%item1%1#1",
        "tmp%16#0",
        "tmp%16#0 (copy)",
        "4",
        "8"
      ]
    },
    "3741": {
      "op": "extract3",
      "defined_out": [
        "aggregate%extract%2#1",
        "aggregate%item0%1#1",
        "aggregate%item1%1#1",
        "tmp%16#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "aggregate%item0%1#1",
        "aggregate%item1%1#1",
        "tmp%16#0",
        "aggregate%extract%2#1"
      ]
    },
    "3742": {
      "op": "btoi",
      "defined_out": [
        "aggregate%item0%1#1",
        "aggregate%item1%1#1",
        "aggregate%item2%1#1",
        "tmp%16#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "aggregate%item0%1#1",
        "aggregate%item1%1#1",
        "tmp%16#0",
        "aggregate%item2%1#1"
      ]
    },
    "3743": {
      "op": "swap",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "aggregate%item0%1#1",
        "aggregate%item1%1#1",
        "aggregate%item2%1#1",
        "tmp%16#0"
      ]
    },
    "3744": {
      "op": "pushint 12 // 12",
      "defined_out": [
        "12",
        "aggregate%item0%1#1",
        "aggregate%item1%1#1",
        "aggregate%item2%1#1",
        "tmp%16#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "aggregate%item0%1#1",
        "aggregate%item1%1#1",
        "aggregate%item2%1#1",
        "tmp%16#0",
        "12"
      ]
    },
    "3746": {
      "op": "pushint 64 // 64",
      "defined_out": [
        "12",
        "64",
        "aggregate%item0%1#1",
        "aggregate%item1%1#1",
        "aggregate%item2%1#1",
        "tmp%16#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "aggregate%item0%1#1",
        "aggregate%item1%1#1",
        "aggregate%item2%1#1",
        "tmp%16#0",
        "12",
        "64"
      ]
    },
    "3748": {
      "op": "extract3",
      "defined_out": [
        "aggregate%extract%3#1",
        "aggregate%item0%1#1",
        "aggregate%item1%1#1",
        "aggregate%item2%1#1"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "aggregate%item0%1#1",
        "aggregate%item1%1#1",
        "aggregate%item2%1#1",
        "aggregate%extract%3#1"
      ]
    },
    "3749": {
      "op": "uncover 3",
      "defined_out": [
        "aggregate%extract%3#1",
        "aggregate%item1%1#1",
        "aggregate%item2%1#1",
        "tmp%19#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "aggregate%item1%1#1",
        "aggregate%item2%1#1",
        "aggregate%extract%3#1",
        "tmp%19#0"
      ]
    },
    "3751": {
      "op": "swap",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "aggregate%item1%1#1",
        "aggregate%item2%1#1",
        "tmp%19#0",
        "aggregate%extract%3#1"
      ]
    },
    "3752": {
      "op": "uncover 3",
      "defined_out": [
        "aggregate%extract%3#1",
        "aggregate%item2%1#1",
        "tmp%19#0",
        "tmp%20#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "aggregate%item2%1#1",
        "tmp%19#0",
        "aggregate%extract%3#1",
        "tmp%20#0"
      ]
    },
    "3754": {
      "op": "cover 2",
      "defined_out": [
        "tmp%19#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "tmp%21#0",
        "tmp%20#0",
        "tmp%19#0",
        "tmp%22#0"
      ]
    },
    "3756": {
      "op": "cover 3",
      "defined_out": [
        "result_2.0#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "tmp%22#0",
        "tmp%21#0",
        "tmp%20#0",
        "result_2.0#0"
      ]
    },
    "3758": {
      "op": "cover 3",
      "defined_out": [
        "result_2.0#0",
        "result_2.1#0",
        "tmp%21#0",
        "tmp%22#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "result_2.0#0",
        "tmp%22#0",
        "tmp%21#0",
        "result_2.1#0"
      ]
    },
    "3760": {
      "op": "cover 3",
      "defined_out": [
        "result_2.0#0",
        "result_2.1#0",
        "result_2.2#0",
        "tmp%22#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "result_2.1#0",
        "result_2.0#0",
        "tmp%22#0",
        "result_2.2#0"
      ]
    },
    "3762": {
      "op": "cover 3",
      "defined_out": [
        "result_2.0#0",
        "result_2.1#0",
        "result_2.2#0",
        "result_2.3#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "result_2.2#0",
        "result_2.1#0",
        "result_2.0#0",
        "result_2.3#0"
      ]
    },
    "3764": {
      "op": "cover 3",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "result_2.3#0",
        "result_2.2#0",
        "result_2.1#0",
        "result_2.0#0"
      ]
    },
    "3766": {
      "op": "frame_dig 0",
      "defined_out": [
        "result.0#0",
        "result_2.0#0",
        "result_2.1#0",
        "result_2.2#0",
        "result_2.3#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "result_2.3#0",
        "result_2.2#0",
        "result_2.1#0",
        "result_2.0#0",
        "result.0#0"
      ]
    },
    "3768": {
      "op": "==",
      "defined_out": [
        "result.0#0",
        "result_2.1#0",
        "result_2.2#0",
        "result_2.3#0",
        "tmp%23#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "result_2.3#0",
        "result_2.2#0",
        "result_2.1#0",
        "tmp%23#0"
      ]
    },
    "3769": {
      "op": "swap",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "result_2.3#0",
        "result_2.2#0",
        "tmp%23#0",
        "result_2.1#0"
      ]
    },
    "3770": {
      "op": "frame_dig 1",
      "defined_out": [
        "result.0#0",
        "result.1#0",
        "result_2.1#0",
        "result_2.2#0",
        "result_2.3#0",
        "tmp%23#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "result_2.3#0",
        "result_2.2#0",
        "tmp%23#0",
        "result_2.1#0",
        "result.1#0"
      ]
    },
    "3772": {
      "op": "==",
      "defined_out": [
        "result.0#0",
        "result.1#0",
        "result_2.2#0",
        "result_2.3#0",
        "tmp%23#0",
        "tmp%24#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "result_2.3#0",
        "result_2.2#0",
        "tmp%23#0",
        "tmp%24#0"
      ]
    },
    "3773": {
      "op": "&&",
      "defined_out": [
        "result.0#0",
        "result.1#0",
        "result_2.2#0",
        "result_2.3#0",
        "tmp%25#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "result_2.3#0",
        "result_2.2#0",
        "tmp%25#0"
      ]
    },
    "3774": {
      "op": "swap",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "result_2.3#0",
        "tmp%25#0",
        "result_2.2#0"
      ]
    },
    "3775": {
      "op": "frame_dig 3",
      "defined_out": [
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result_2.2#0",
        "result_2.3#0",
        "tmp%25#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "result_2.3#0",
        "tmp%25#0",
        "result_2.2#0",
        "result.2#0"
      ]
    },
    "3777": {
      "op": "==",
      "defined_out": [
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result_2.3#0",
        "tmp%25#0",
        "tmp%26#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "result_2.3#0",
        "tmp%25#0",
        "tmp%26#0"
      ]
    },
    "3778": {
      "op": "&&",
      "defined_out": [
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result_2.3#0",
        "tmp%27#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "result_2.3#0",
        "tmp%27#0"
      ]
    },
    "3779": {
      "op": "swap",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "tmp%27#0",
        "result_2.3#0"
      ]
    },
    "3780": {
      "op": "frame_dig 2",
      "defined_out": [
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "result_2.3#0",
        "tmp%27#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "tmp%27#0",
        "result_2.3#0",
        "result.3#0"
      ]
    },
    "3782": {
      "op": "b==",
      "defined_out": [
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "tmp%27#0",
        "tmp%28#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "tmp%27#0",
        "tmp%28#0"
      ]
    },
    "3783": {
      "op": "&&",
      "defined_out": [
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "tmp%29#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "tmp%29#0"
      ]
    },
    "3784": {
      "error": "expected native arguments to give the same result",
      "op": "assert // expected native arguments to give the same result",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0"
      ]
    },
    "3785": {
      "op": "itxn_begin"
    },
    "3786": {
      "op": "bytec_1 // 0x7331",
      "defined_out": [
        "0x7331",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "0x7331"
      ]
    },
    "3787": {
      "op": "len",
      "defined_out": [
        "aggregate%length%4#1",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "aggregate%length%4#1"
      ]
    },
    "3788": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%4#1",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "aggregate%as_bytes%4#1"
      ]
    },
    "3789": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%length_uint16%4#1",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "aggregate%length_uint16%4#1"
      ]
    },
    "3792": {
      "op": "bytec_1 // 0x7331",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "aggregate%length_uint16%4#1",
        "0x7331"
      ]
    },
    "3793": {
      "op": "concat",
      "defined_out": [
        "encoded%1#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "encoded%1#0"
      ]
    },
    "3794": {
      "op": "bytec_3 // 0x6231",
      "defined_out": [
        "0x6231",
        "encoded%1#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "encoded%1#0",
        "0x6231"
      ]
    },
    "3795": {
      "op": "len",
      "defined_out": [
        "aggregate%length%5#1",
        "encoded%1#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "encoded%1#0",
        "aggregate%length%5#1"
      ]
    },
    "3796": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%5#1",
        "encoded%1#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "encoded%1#0",
        "aggregate%as_bytes%5#1"
      ]
    },
    "3797": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%length_uint16%5#1",
        "encoded%1#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "encoded%1#0",
        "aggregate%length_uint16%5#1"
      ]
    },
    "3800": {
      "op": "bytec_3 // 0x6231",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "encoded%1#0",
        "aggregate%length_uint16%5#1",
        "0x6231"
      ]
    },
    "3801": {
      "op": "concat",
      "defined_out": [
        "inner_txn_params%2%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%2%%param_ApplicationArgs_idx_2#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "inner_txn_params%2%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%2%%param_ApplicationArgs_idx_2#0"
      ]
    },
    "3802": {
      "op": "swap",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "inner_txn_params%2%%param_ApplicationArgs_idx_2#0",
        "inner_txn_params%2%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "3803": {
      "op": "frame_dig -1",
      "defined_out": [
        "inner_txn_params%2%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%2%%param_ApplicationArgs_idx_2#0",
        "inner_txn_params%2%%param_ApplicationID_idx_0#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "inner_txn_params%2%%param_ApplicationArgs_idx_2#0",
        "inner_txn_params%2%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%2%%param_ApplicationID_idx_0#0"
      ]
    },
    "3805": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "inner_txn_params%2%%param_ApplicationArgs_idx_2#0",
        "inner_txn_params%2%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "3807": {
      "op": "bytec 7 // method \"echo_native_tuple(string,byte[],uint64,uint512)(string,byte[],uint64,uint512)\"",
      "defined_out": [
        "Method(echo_native_tuple(string,byte[],uint64,uint512)(string,byte[],uint64,uint512))",
        "inner_txn_params%2%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%2%%param_ApplicationArgs_idx_2#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "inner_txn_params%2%%param_ApplicationArgs_idx_2#0",
        "inner_txn_params%2%%param_ApplicationArgs_idx_1#0",
        "Method(echo_native_tuple(string,byte[],uint64,uint512)(string,byte[],uint64,uint512))"
      ]
    },
    "3809": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "inner_txn_params%2%%param_ApplicationArgs_idx_2#0",
        "inner_txn_params%2%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "3811": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "inner_txn_params%2%%param_ApplicationArgs_idx_2#0"
      ]
    },
    "3813": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0"
      ]
    },
    "3815": {
      "op": "bytec 4 // 0x0000000000000001",
      "defined_out": [
        "0x0000000000000001",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "0x0000000000000001"
      ]
    },
    "3817": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0"
      ]
    },
    "3819": {
      "op": "bytec 6 // 0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002",
      "defined_out": [
        "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002"
      ]
    },
    "3821": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0"
      ]
    },
    "3823": {
      "op": "intc_1 // appl",
      "defined_out": [
        "appl",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "appl"
      ]
    },
    "3824": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0"
      ]
    },
    "3826": {
      "op": "intc_0 // 0",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "0"
      ]
    },
    "3827": {
      "op": "itxn_field Fee",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0"
      ]
    },
    "3829": {
      "block": "test_native_tuple_method_ref_next_txn@3",
      "stack_in": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0"
      ],
      "op": "itxn_submit"
    },
    "3830": {
      "op": "itxn LastLog",
      "defined_out": [
        "awst_tmp%2#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "awst_tmp%2#0"
      ]
    },
    "3832": {
      "op": "dup",
      "defined_out": [
        "awst_tmp%2#0",
        "awst_tmp%2#0 (copy)"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "awst_tmp%2#0",
        "awst_tmp%2#0 (copy)"
      ]
    },
    "3833": {
      "op": "extract 4 0",
      "defined_out": [
        "awst_tmp%2#0",
        "tmp%31#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "awst_tmp%2#0",
        "tmp%31#0"
      ]
    },
    "3836": {
      "op": "swap",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "tmp%31#0",
        "awst_tmp%2#0"
      ]
    },
    "3837": {
      "op": "extract 0 4",
      "defined_out": [
        "tmp%31#0",
        "tmp%32#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "tmp%31#0",
        "tmp%32#0"
      ]
    },
    "3840": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%31#0",
        "tmp%32#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "tmp%31#0",
        "tmp%32#0",
        "0x151f7c75"
      ]
    },
    "3841": {
      "op": "==",
      "defined_out": [
        "tmp%31#0",
        "tmp%33#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "tmp%31#0",
        "tmp%33#0"
      ]
    },
    "3842": {
      "error": "application log value is not the result of an ABI return",
      "op": "assert // application log value is not the result of an ABI return",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "tmp%31#0"
      ]
    },
    "3843": {
      "op": "dup",
      "defined_out": [
        "tmp%31#0",
        "tmp%31#0 (copy)"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "tmp%31#0",
        "tmp%31#0 (copy)"
      ]
    },
    "3844": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%31#0",
        "tmp%31#0 (copy)"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "tmp%31#0",
        "tmp%31#0 (copy)",
        "0"
      ]
    },
    "3845": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%extract_uint16%6#1",
        "tmp%31#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "tmp%31#0",
        "aggregate%extract_uint16%6#1"
      ]
    },
    "3846": {
      "op": "swap",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "aggregate%extract_uint16%6#1",
        "tmp%31#0"
      ]
    },
    "3847": {
      "op": "dup",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "aggregate%extract_uint16%6#1",
        "tmp%31#0",
        "tmp%31#0 (copy)"
      ]
    },
    "3848": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "aggregate%extract_uint16%6#1",
        "tmp%31#0",
        "tmp%31#0 (copy)"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "aggregate%extract_uint16%6#1",
        "tmp%31#0",
        "tmp%31#0 (copy)",
        "2"
      ]
    },
    "3849": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%extract_uint16%6#1",
        "aggregate%extract_uint16%7#1",
        "tmp%31#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "aggregate%extract_uint16%6#1",
        "tmp%31#0",
        "aggregate%extract_uint16%7#1"
      ]
    },
    "3850": {
      "op": "dig 1",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "aggregate%extract_uint16%6#1",
        "tmp%31#0",
        "aggregate%extract_uint16%7#1",
        "tmp%31#0 (copy)"
      ]
    },
    "3852": {
      "op": "uncover 3",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "tmp%31#0",
        "aggregate%extract_uint16%7#1",
        "tmp%31#0 (copy)",
        "aggregate%extract_uint16%6#1"
      ]
    },
    "3854": {
      "op": "uncover 2",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "tmp%31#0",
        "tmp%31#0 (copy)",
        "aggregate%extract_uint16%6#1",
        "aggregate%extract_uint16%7#1"
      ]
    },
    "3856": {
      "op": "substring3",
      "defined_out": [
        "aggregate%substring3%4#1",
        "tmp%31#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "tmp%31#0",
        "aggregate%substring3%4#1"
      ]
    },
    "3857": {
      "op": "extract 2 0",
      "defined_out": [
        "aggregate%item0%2#1",
        "tmp%31#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "tmp%31#0",
        "aggregate%item0%2#1"
      ]
    },
    "3860": {
      "op": "swap",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "aggregate%item0%2#1",
        "tmp%31#0"
      ]
    },
    "3861": {
      "op": "dup",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "aggregate%item0%2#1",
        "tmp%31#0",
        "tmp%31#0 (copy)"
      ]
    },
    "3862": {
      "op": "intc_2 // 2",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "aggregate%item0%2#1",
        "tmp%31#0",
        "tmp%31#0 (copy)",
        "2"
      ]
    },
    "3863": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%extract_uint16%8#1",
        "aggregate%item0%2#1",
        "tmp%31#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "aggregate%item0%2#1",
        "tmp%31#0",
        "aggregate%extract_uint16%8#1"
      ]
    },
    "3864": {
      "op": "swap",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "aggregate%item0%2#1",
        "aggregate%extract_uint16%8#1",
        "tmp%31#0"
      ]
    },
    "3865": {
      "op": "dup",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "aggregate%item0%2#1",
        "aggregate%extract_uint16%8#1",
        "tmp%31#0",
        "tmp%31#0 (copy)"
      ]
    },
    "3866": {
      "op": "len",
      "defined_out": [
        "aggregate%extract_uint16%8#1",
        "aggregate%item0%2#1",
        "aggregate%len%2#1",
        "tmp%31#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "aggregate%item0%2#1",
        "aggregate%extract_uint16%8#1",
        "tmp%31#0",
        "aggregate%len%2#1"
      ]
    },
    "3867": {
      "op": "swap",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "aggregate%item0%2#1",
        "aggregate%extract_uint16%8#1",
        "aggregate%len%2#1",
        "tmp%31#0"
      ]
    },
    "3868": {
      "op": "dup",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "aggregate%item0%2#1",
        "aggregate%extract_uint16%8#1",
        "aggregate%len%2#1",
        "tmp%31#0",
        "tmp%31#0 (copy)"
      ]
    },
    "3869": {
      "op": "uncover 3",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "aggregate%item0%2#1",
        "aggregate%len%2#1",
        "tmp%31#0",
        "tmp%31#0 (copy)",
        "aggregate%extract_uint16%8#1"
      ]
    },
    "3871": {
      "op": "uncover 3",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "aggregate%item0%2#1",
        "tmp%31#0",
        "tmp%31#0 (copy)",
        "aggregate%extract_uint16%8#1",
        "aggregate%len%2#1"
      ]
    },
    "3873": {
      "op": "substring3",
      "defined_out": [
        "aggregate%item0%2#1",
        "aggregate%substring3%5#1",
        "tmp%31#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "aggregate%item0%2#1",
        "tmp%31#0",
        "aggregate%substring3%5#1"
      ]
    },
    "3874": {
      "op": "extract 2 0",
      "defined_out": [
        "aggregate%item0%2#1",
        "aggregate%item1%2#1",
        "tmp%31#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "aggregate%item0%2#1",
        "tmp%31#0",
        "aggregate%item1%2#1"
      ]
    },
    "3877": {
      "op": "swap",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "aggregate%item0%2#1",
        "aggregate%item1%2#1",
        "tmp%31#0"
      ]
    },
    "3878": {
      "op": "dup",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "aggregate%item0%2#1",
        "aggregate%item1%2#1",
        "tmp%31#0",
        "tmp%31#0 (copy)"
      ]
    },
    "3879": {
      "op": "pushint 4 // 4",
      "defined_out": [
        "4",
        "aggregate%item0%2#1",
        "aggregate%item1%2#1",
        "tmp%31#0",
        "tmp%31#0 (copy)"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "aggregate%item0%2#1",
        "aggregate%item1%2#1",
        "tmp%31#0",
        "tmp%31#0 (copy)",
        "4"
      ]
    },
    "3881": {
      "op": "pushint 8 // 8",
      "defined_out": [
        "4",
        "8",
        "aggregate%item0%2#1",
        "aggregate%item1%2#1",
        "tmp%31#0",
        "tmp%31#0 (copy)"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "aggregate%item0%2#1",
        "aggregate%item1%2#1",
        "tmp%31#0",
        "tmp%31#0 (copy)",
        "4",
        "8"
      ]
    },
    "3883": {
      "op": "extract3",
      "defined_out": [
        "aggregate%extract%4#1",
        "aggregate%item0%2#1",
        "aggregate%item1%2#1",
        "tmp%31#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "aggregate%item0%2#1",
        "aggregate%item1%2#1",
        "tmp%31#0",
        "aggregate%extract%4#1"
      ]
    },
    "3884": {
      "op": "btoi",
      "defined_out": [
        "aggregate%item0%2#1",
        "aggregate%item1%2#1",
        "aggregate%item2%2#1",
        "tmp%31#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "aggregate%item0%2#1",
        "aggregate%item1%2#1",
        "tmp%31#0",
        "aggregate%item2%2#1"
      ]
    },
    "3885": {
      "op": "swap",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "aggregate%item0%2#1",
        "aggregate%item1%2#1",
        "aggregate%item2%2#1",
        "tmp%31#0"
      ]
    },
    "3886": {
      "op": "pushint 12 // 12",
      "defined_out": [
        "12",
        "aggregate%item0%2#1",
        "aggregate%item1%2#1",
        "aggregate%item2%2#1",
        "tmp%31#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "aggregate%item0%2#1",
        "aggregate%item1%2#1",
        "aggregate%item2%2#1",
        "tmp%31#0",
        "12"
      ]
    },
    "3888": {
      "op": "pushint 64 // 64",
      "defined_out": [
        "12",
        "64",
        "aggregate%item0%2#1",
        "aggregate%item1%2#1",
        "aggregate%item2%2#1",
        "tmp%31#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "aggregate%item0%2#1",
        "aggregate%item1%2#1",
        "aggregate%item2%2#1",
        "tmp%31#0",
        "12",
        "64"
      ]
    },
    "3890": {
      "op": "extract3",
      "defined_out": [
        "aggregate%extract%5#1",
        "aggregate%item0%2#1",
        "aggregate%item1%2#1",
        "aggregate%item2%2#1"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "aggregate%item0%2#1",
        "aggregate%item1%2#1",
        "aggregate%item2%2#1",
        "aggregate%extract%5#1"
      ]
    },
    "3891": {
      "op": "uncover 3",
      "defined_out": [
        "aggregate%extract%5#1",
        "aggregate%item1%2#1",
        "aggregate%item2%2#1",
        "tmp%34#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "aggregate%item1%2#1",
        "aggregate%item2%2#1",
        "aggregate%extract%5#1",
        "tmp%34#0"
      ]
    },
    "3893": {
      "op": "swap",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "aggregate%item1%2#1",
        "aggregate%item2%2#1",
        "tmp%34#0",
        "aggregate%extract%5#1"
      ]
    },
    "3894": {
      "op": "uncover 3",
      "defined_out": [
        "aggregate%extract%5#1",
        "aggregate%item2%2#1",
        "tmp%34#0",
        "tmp%35#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "aggregate%item2%2#1",
        "tmp%34#0",
        "aggregate%extract%5#1",
        "tmp%35#0"
      ]
    },
    "3896": {
      "op": "cover 2",
      "defined_out": [
        "tmp%34#0",
        "tmp%35#0",
        "tmp%36#0",
        "tmp%37#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "tmp%36#0",
        "tmp%35#0",
        "tmp%34#0",
        "tmp%37#0"
      ]
    },
    "3898": {
      "op": "cover 3",
      "defined_out": [
        "result_3.0#0",
        "tmp%35#0",
        "tmp%36#0",
        "tmp%37#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "tmp%37#0",
        "tmp%36#0",
        "tmp%35#0",
        "result_3.0#0"
      ]
    },
    "3900": {
      "op": "cover 3",
      "defined_out": [
        "result_3.0#0",
        "result_3.1#0",
        "tmp%36#0",
        "tmp%37#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "result_3.0#0",
        "tmp%37#0",
        "tmp%36#0",
        "result_3.1#0"
      ]
    },
    "3902": {
      "op": "cover 3",
      "defined_out": [
        "result_3.0#0",
        "result_3.1#0",
        "result_3.2#0",
        "tmp%37#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "result_3.1#0",
        "result_3.0#0",
        "tmp%37#0",
        "result_3.2#0"
      ]
    },
    "3904": {
      "op": "cover 3",
      "defined_out": [
        "result_3.0#0",
        "result_3.1#0",
        "result_3.2#0",
        "result_3.3#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "result_3.2#0",
        "result_3.1#0",
        "result_3.0#0",
        "result_3.3#0"
      ]
    },
    "3906": {
      "op": "cover 3",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "result_3.3#0",
        "result_3.2#0",
        "result_3.1#0",
        "result_3.0#0"
      ]
    },
    "3908": {
      "op": "frame_dig 0",
      "defined_out": [
        "result.0#0",
        "result_3.0#0",
        "result_3.1#0",
        "result_3.2#0",
        "result_3.3#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "result_3.3#0",
        "result_3.2#0",
        "result_3.1#0",
        "result_3.0#0",
        "result.0#0"
      ]
    },
    "3910": {
      "op": "==",
      "defined_out": [
        "result.0#0",
        "result_3.1#0",
        "result_3.2#0",
        "result_3.3#0",
        "tmp%38#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "result_3.3#0",
        "result_3.2#0",
        "result_3.1#0",
        "tmp%38#0"
      ]
    },
    "3911": {
      "op": "swap",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "result_3.3#0",
        "result_3.2#0",
        "tmp%38#0",
        "result_3.1#0"
      ]
    },
    "3912": {
      "op": "frame_dig 1",
      "defined_out": [
        "result.0#0",
        "result.1#0",
        "result_3.1#0",
        "result_3.2#0",
        "result_3.3#0",
        "tmp%38#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "result_3.3#0",
        "result_3.2#0",
        "tmp%38#0",
        "result_3.1#0",
        "result.1#0"
      ]
    },
    "3914": {
      "op": "==",
      "defined_out": [
        "result.0#0",
        "result.1#0",
        "result_3.2#0",
        "result_3.3#0",
        "tmp%38#0",
        "tmp%39#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "result_3.3#0",
        "result_3.2#0",
        "tmp%38#0",
        "tmp%39#0"
      ]
    },
    "3915": {
      "op": "&&",
      "defined_out": [
        "result.0#0",
        "result.1#0",
        "result_3.2#0",
        "result_3.3#0",
        "tmp%40#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "result_3.3#0",
        "result_3.2#0",
        "tmp%40#0"
      ]
    },
    "3916": {
      "op": "swap",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "result_3.3#0",
        "tmp%40#0",
        "result_3.2#0"
      ]
    },
    "3917": {
      "op": "frame_dig 3",
      "defined_out": [
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result_3.2#0",
        "result_3.3#0",
        "tmp%40#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "result_3.3#0",
        "tmp%40#0",
        "result_3.2#0",
        "result.2#0"
      ]
    },
    "3919": {
      "op": "==",
      "defined_out": [
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result_3.3#0",
        "tmp%40#0",
        "tmp%41#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "result_3.3#0",
        "tmp%40#0",
        "tmp%41#0"
      ]
    },
    "3920": {
      "op": "&&",
      "defined_out": [
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result_3.3#0",
        "tmp%42#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "result_3.3#0",
        "tmp%42#0"
      ]
    },
    "3921": {
      "op": "swap",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "tmp%42#0",
        "result_3.3#0"
      ]
    },
    "3922": {
      "op": "frame_dig 2",
      "defined_out": [
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "result_3.3#0",
        "tmp%42#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "tmp%42#0",
        "result_3.3#0",
        "result.3#0"
      ]
    },
    "3924": {
      "op": "b==",
      "defined_out": [
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "tmp%42#0",
        "tmp%43#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "tmp%42#0",
        "tmp%43#0"
      ]
    },
    "3925": {
      "op": "&&",
      "defined_out": [
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "tmp%44#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "tmp%44#0"
      ]
    },
    "3926": {
      "error": "expected arc4 arguments to give the same result",
      "op": "assert // expected arc4 arguments to give the same result",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0"
      ]
    },
    "3927": {
      "op": "itxn_begin"
    },
    "3928": {
      "op": "bytec_1 // 0x7331",
      "defined_out": [
        "0x7331",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "0x7331"
      ]
    },
    "3929": {
      "op": "len",
      "defined_out": [
        "aggregate%length%6#1",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "aggregate%length%6#1"
      ]
    },
    "3930": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%6#1",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "aggregate%as_bytes%6#1"
      ]
    },
    "3931": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%length_uint16%6#1",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "aggregate%length_uint16%6#1"
      ]
    },
    "3934": {
      "op": "bytec_1 // 0x7331",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "aggregate%length_uint16%6#1",
        "0x7331"
      ]
    },
    "3935": {
      "op": "concat",
      "defined_out": [
        "encoded%2#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "encoded%2#0"
      ]
    },
    "3936": {
      "op": "bytec_3 // 0x6231",
      "defined_out": [
        "0x6231",
        "encoded%2#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "encoded%2#0",
        "0x6231"
      ]
    },
    "3937": {
      "op": "len",
      "defined_out": [
        "aggregate%length%7#1",
        "encoded%2#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "encoded%2#0",
        "aggregate%length%7#1"
      ]
    },
    "3938": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%7#1",
        "encoded%2#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "encoded%2#0",
        "aggregate%as_bytes%7#1"
      ]
    },
    "3939": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%length_uint16%7#1",
        "encoded%2#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "encoded%2#0",
        "aggregate%length_uint16%7#1"
      ]
    },
    "3942": {
      "op": "bytec_3 // 0x6231",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "encoded%2#0",
        "aggregate%length_uint16%7#1",
        "0x6231"
      ]
    },
    "3943": {
      "op": "concat",
      "defined_out": [
        "inner_txn_params%3%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%3%%param_ApplicationArgs_idx_2#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "inner_txn_params%3%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%3%%param_ApplicationArgs_idx_2#0"
      ]
    },
    "3944": {
      "op": "swap",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "inner_txn_params%3%%param_ApplicationArgs_idx_2#0",
        "inner_txn_params%3%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "3945": {
      "op": "frame_dig -1",
      "defined_out": [
        "inner_txn_params%3%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%3%%param_ApplicationArgs_idx_2#0",
        "inner_txn_params%3%%param_ApplicationID_idx_0#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "inner_txn_params%3%%param_ApplicationArgs_idx_2#0",
        "inner_txn_params%3%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%3%%param_ApplicationID_idx_0#0"
      ]
    },
    "3947": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "inner_txn_params%3%%param_ApplicationArgs_idx_2#0",
        "inner_txn_params%3%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "3949": {
      "op": "bytec 7 // method \"echo_native_tuple(string,byte[],uint64,uint512)(string,byte[],uint64,uint512)\"",
      "defined_out": [
        "Method(echo_native_tuple(string,byte[],uint64,uint512)(string,byte[],uint64,uint512))",
        "inner_txn_params%3%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%3%%param_ApplicationArgs_idx_2#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "inner_txn_params%3%%param_ApplicationArgs_idx_2#0",
        "inner_txn_params%3%%param_ApplicationArgs_idx_1#0",
        "Method(echo_native_tuple(string,byte[],uint64,uint512)(string,byte[],uint64,uint512))"
      ]
    },
    "3951": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "inner_txn_params%3%%param_ApplicationArgs_idx_2#0",
        "inner_txn_params%3%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "3953": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "inner_txn_params%3%%param_ApplicationArgs_idx_2#0"
      ]
    },
    "3955": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0"
      ]
    },
    "3957": {
      "op": "bytec 4 // 0x0000000000000001",
      "defined_out": [
        "0x0000000000000001",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "0x0000000000000001"
      ]
    },
    "3959": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0"
      ]
    },
    "3961": {
      "op": "bytec 6 // 0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002",
      "defined_out": [
        "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002"
      ]
    },
    "3963": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0"
      ]
    },
    "3965": {
      "op": "intc_1 // appl",
      "defined_out": [
        "appl",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "appl"
      ]
    },
    "3966": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0"
      ]
    },
    "3968": {
      "op": "intc_0 // 0",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "0"
      ]
    },
    "3969": {
      "op": "itxn_field Fee",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0"
      ]
    },
    "3971": {
      "block": "test_native_tuple_method_ref_next_txn@4",
      "stack_in": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0"
      ],
      "op": "itxn_submit"
    },
    "3972": {
      "op": "itxn LastLog",
      "defined_out": [
        "awst_tmp%3#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "awst_tmp%3#0"
      ]
    },
    "3974": {
      "op": "dup",
      "defined_out": [
        "awst_tmp%3#0",
        "awst_tmp%3#0 (copy)"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "awst_tmp%3#0",
        "awst_tmp%3#0 (copy)"
      ]
    },
    "3975": {
      "op": "extract 4 0",
      "defined_out": [
        "awst_tmp%3#0",
        "tmp%46#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "awst_tmp%3#0",
        "tmp%46#0"
      ]
    },
    "3978": {
      "op": "swap",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "tmp%46#0",
        "awst_tmp%3#0"
      ]
    },
    "3979": {
      "op": "extract 0 4",
      "defined_out": [
        "tmp%46#0",
        "tmp%47#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "tmp%46#0",
        "tmp%47#0"
      ]
    },
    "3982": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%46#0",
        "tmp%47#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "tmp%46#0",
        "tmp%47#0",
        "0x151f7c75"
      ]
    },
    "3983": {
      "op": "==",
      "defined_out": [
        "tmp%46#0",
        "tmp%48#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "tmp%46#0",
        "tmp%48#0"
      ]
    },
    "3984": {
      "error": "application log value is not the result of an ABI return",
      "op": "assert // application log value is not the result of an ABI return",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "tmp%46#0"
      ]
    },
    "3985": {
      "op": "dup",
      "defined_out": [
        "tmp%46#0",
        "tmp%46#0 (copy)"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "tmp%46#0",
        "tmp%46#0 (copy)"
      ]
    },
    "3986": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%46#0",
        "tmp%46#0 (copy)"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "tmp%46#0",
        "tmp%46#0 (copy)",
        "0"
      ]
    },
    "3987": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%extract_uint16%9#1",
        "tmp%46#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "tmp%46#0",
        "aggregate%extract_uint16%9#1"
      ]
    },
    "3988": {
      "op": "swap",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "aggregate%extract_uint16%9#1",
        "tmp%46#0"
      ]
    },
    "3989": {
      "op": "dup",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "aggregate%extract_uint16%9#1",
        "tmp%46#0",
        "tmp%46#0 (copy)"
      ]
    },
    "3990": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "aggregate%extract_uint16%9#1",
        "tmp%46#0",
        "tmp%46#0 (copy)"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "aggregate%extract_uint16%9#1",
        "tmp%46#0",
        "tmp%46#0 (copy)",
        "2"
      ]
    },
    "3991": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%extract_uint16%10#1",
        "aggregate%extract_uint16%9#1",
        "tmp%46#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "aggregate%extract_uint16%9#1",
        "tmp%46#0",
        "aggregate%extract_uint16%10#1"
      ]
    },
    "3992": {
      "op": "dig 1",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "aggregate%extract_uint16%9#1",
        "tmp%46#0",
        "aggregate%extract_uint16%10#1",
        "tmp%46#0 (copy)"
      ]
    },
    "3994": {
      "op": "uncover 3",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "tmp%46#0",
        "aggregate%extract_uint16%10#1",
        "tmp%46#0 (copy)",
        "aggregate%extract_uint16%9#1"
      ]
    },
    "3996": {
      "op": "uncover 2",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "tmp%46#0",
        "tmp%46#0 (copy)",
        "aggregate%extract_uint16%9#1",
        "aggregate%extract_uint16%10#1"
      ]
    },
    "3998": {
      "op": "substring3",
      "defined_out": [
        "aggregate%substring3%6#1",
        "tmp%46#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "tmp%46#0",
        "aggregate%substring3%6#1"
      ]
    },
    "3999": {
      "op": "extract 2 0",
      "defined_out": [
        "aggregate%item0%3#1",
        "tmp%46#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "tmp%46#0",
        "aggregate%item0%3#1"
      ]
    },
    "4002": {
      "op": "swap",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "aggregate%item0%3#1",
        "tmp%46#0"
      ]
    },
    "4003": {
      "op": "dup",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "aggregate%item0%3#1",
        "tmp%46#0",
        "tmp%46#0 (copy)"
      ]
    },
    "4004": {
      "op": "intc_2 // 2",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "aggregate%item0%3#1",
        "tmp%46#0",
        "tmp%46#0 (copy)",
        "2"
      ]
    },
    "4005": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%extract_uint16%11#1",
        "aggregate%item0%3#1",
        "tmp%46#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "aggregate%item0%3#1",
        "tmp%46#0",
        "aggregate%extract_uint16%11#1"
      ]
    },
    "4006": {
      "op": "swap",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "aggregate%item0%3#1",
        "aggregate%extract_uint16%11#1",
        "tmp%46#0"
      ]
    },
    "4007": {
      "op": "dup",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "aggregate%item0%3#1",
        "aggregate%extract_uint16%11#1",
        "tmp%46#0",
        "tmp%46#0 (copy)"
      ]
    },
    "4008": {
      "op": "len",
      "defined_out": [
        "aggregate%extract_uint16%11#1",
        "aggregate%item0%3#1",
        "aggregate%len%3#1",
        "tmp%46#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "aggregate%item0%3#1",
        "aggregate%extract_uint16%11#1",
        "tmp%46#0",
        "aggregate%len%3#1"
      ]
    },
    "4009": {
      "op": "swap",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "aggregate%item0%3#1",
        "aggregate%extract_uint16%11#1",
        "aggregate%len%3#1",
        "tmp%46#0"
      ]
    },
    "4010": {
      "op": "dup",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "aggregate%item0%3#1",
        "aggregate%extract_uint16%11#1",
        "aggregate%len%3#1",
        "tmp%46#0",
        "tmp%46#0 (copy)"
      ]
    },
    "4011": {
      "op": "uncover 3",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "aggregate%item0%3#1",
        "aggregate%len%3#1",
        "tmp%46#0",
        "tmp%46#0 (copy)",
        "aggregate%extract_uint16%11#1"
      ]
    },
    "4013": {
      "op": "uncover 3",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "aggregate%item0%3#1",
        "tmp%46#0",
        "tmp%46#0 (copy)",
        "aggregate%extract_uint16%11#1",
        "aggregate%len%3#1"
      ]
    },
    "4015": {
      "op": "substring3",
      "defined_out": [
        "aggregate%item0%3#1",
        "aggregate%substring3%7#1",
        "tmp%46#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "aggregate%item0%3#1",
        "tmp%46#0",
        "aggregate%substring3%7#1"
      ]
    },
    "4016": {
      "op": "extract 2 0",
      "defined_out": [
        "aggregate%item0%3#1",
        "aggregate%item1%3#1",
        "tmp%46#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "aggregate%item0%3#1",
        "tmp%46#0",
        "aggregate%item1%3#1"
      ]
    },
    "4019": {
      "op": "swap",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "aggregate%item0%3#1",
        "aggregate%item1%3#1",
        "tmp%46#0"
      ]
    },
    "4020": {
      "op": "dup",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "aggregate%item0%3#1",
        "aggregate%item1%3#1",
        "tmp%46#0",
        "tmp%46#0 (copy)"
      ]
    },
    "4021": {
      "op": "pushint 4 // 4",
      "defined_out": [
        "4",
        "aggregate%item0%3#1",
        "aggregate%item1%3#1",
        "tmp%46#0",
        "tmp%46#0 (copy)"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "aggregate%item0%3#1",
        "aggregate%item1%3#1",
        "tmp%46#0",
        "tmp%46#0 (copy)",
        "4"
      ]
    },
    "4023": {
      "op": "pushint 8 // 8",
      "defined_out": [
        "4",
        "8",
        "aggregate%item0%3#1",
        "aggregate%item1%3#1",
        "tmp%46#0",
        "tmp%46#0 (copy)"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "aggregate%item0%3#1",
        "aggregate%item1%3#1",
        "tmp%46#0",
        "tmp%46#0 (copy)",
        "4",
        "8"
      ]
    },
    "4025": {
      "op": "extract3",
      "defined_out": [
        "aggregate%extract%6#1",
        "aggregate%item0%3#1",
        "aggregate%item1%3#1",
        "tmp%46#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "aggregate%item0%3#1",
        "aggregate%item1%3#1",
        "tmp%46#0",
        "aggregate%extract%6#1"
      ]
    },
    "4026": {
      "op": "btoi",
      "defined_out": [
        "aggregate%item0%3#1",
        "aggregate%item1%3#1",
        "aggregate%item2%3#1",
        "tmp%46#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "aggregate%item0%3#1",
        "aggregate%item1%3#1",
        "tmp%46#0",
        "aggregate%item2%3#1"
      ]
    },
    "4027": {
      "op": "swap",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "aggregate%item0%3#1",
        "aggregate%item1%3#1",
        "aggregate%item2%3#1",
        "tmp%46#0"
      ]
    },
    "4028": {
      "op": "pushint 12 // 12",
      "defined_out": [
        "12",
        "aggregate%item0%3#1",
        "aggregate%item1%3#1",
        "aggregate%item2%3#1",
        "tmp%46#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "aggregate%item0%3#1",
        "aggregate%item1%3#1",
        "aggregate%item2%3#1",
        "tmp%46#0",
        "12"
      ]
    },
    "4030": {
      "op": "pushint 64 // 64",
      "defined_out": [
        "12",
        "64",
        "aggregate%item0%3#1",
        "aggregate%item1%3#1",
        "aggregate%item2%3#1",
        "tmp%46#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "aggregate%item0%3#1",
        "aggregate%item1%3#1",
        "aggregate%item2%3#1",
        "tmp%46#0",
        "12",
        "64"
      ]
    },
    "4032": {
      "op": "extract3",
      "defined_out": [
        "aggregate%extract%7#1",
        "aggregate%item0%3#1",
        "aggregate%item1%3#1",
        "aggregate%item2%3#1"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "aggregate%item0%3#1",
        "aggregate%item1%3#1",
        "aggregate%item2%3#1",
        "aggregate%extract%7#1"
      ]
    },
    "4033": {
      "op": "uncover 3",
      "defined_out": [
        "aggregate%extract%7#1",
        "aggregate%item1%3#1",
        "aggregate%item2%3#1",
        "tmp%49#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "aggregate%item1%3#1",
        "aggregate%item2%3#1",
        "aggregate%extract%7#1",
        "tmp%49#0"
      ]
    },
    "4035": {
      "op": "swap",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "aggregate%item1%3#1",
        "aggregate%item2%3#1",
        "tmp%49#0",
        "aggregate%extract%7#1"
      ]
    },
    "4036": {
      "op": "uncover 3",
      "defined_out": [
        "aggregate%extract%7#1",
        "aggregate%item2%3#1",
        "tmp%49#0",
        "tmp%50#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "aggregate%item2%3#1",
        "tmp%49#0",
        "aggregate%extract%7#1",
        "tmp%50#0"
      ]
    },
    "4038": {
      "op": "cover 2",
      "defined_out": [
        "tmp%49#0",
        "tmp%50#0",
        "tmp%51#0",
        "tmp%52#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "tmp%51#0",
        "tmp%50#0",
        "tmp%49#0",
        "tmp%52#0"
      ]
    },
    "4040": {
      "op": "cover 3",
      "defined_out": [
        "result_native.0#0",
        "tmp%50#0",
        "tmp%51#0",
        "tmp%52#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "tmp%52#0",
        "tmp%51#0",
        "tmp%50#0",
        "result_native.0#0"
      ]
    },
    "4042": {
      "op": "cover 3",
      "defined_out": [
        "result_native.0#0",
        "result_native.1#0",
        "tmp%51#0",
        "tmp%52#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "result_native.0#0",
        "tmp%52#0",
        "tmp%51#0",
        "result_native.1#0"
      ]
    },
    "4044": {
      "op": "cover 3",
      "defined_out": [
        "result_native.0#0",
        "result_native.1#0",
        "result_native.2#0",
        "tmp%52#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "result_native.1#0",
        "result_native.0#0",
        "tmp%52#0",
        "result_native.2#0"
      ]
    },
    "4046": {
      "op": "cover 3",
      "defined_out": [
        "result_native.0#0",
        "result_native.1#0",
        "result_native.2#0",
        "result_native.3#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "result_native.2#0",
        "result_native.1#0",
        "result_native.0#0",
        "result_native.3#0"
      ]
    },
    "4048": {
      "op": "cover 3",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "result_native.3#0",
        "result_native.2#0",
        "result_native.1#0",
        "result_native.0#0"
      ]
    },
    "4050": {
      "op": "frame_dig 0",
      "defined_out": [
        "result.0#0",
        "result_native.0#0",
        "result_native.1#0",
        "result_native.2#0",
        "result_native.3#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "result_native.3#0",
        "result_native.2#0",
        "result_native.1#0",
        "result_native.0#0",
        "result.0#0"
      ]
    },
    "4052": {
      "op": "==",
      "defined_out": [
        "result.0#0",
        "result_native.1#0",
        "result_native.2#0",
        "result_native.3#0",
        "tmp%53#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "result_native.3#0",
        "result_native.2#0",
        "result_native.1#0",
        "tmp%53#0"
      ]
    },
    "4053": {
      "op": "swap",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "result_native.3#0",
        "result_native.2#0",
        "tmp%53#0",
        "result_native.1#0"
      ]
    },
    "4054": {
      "op": "frame_dig 1",
      "defined_out": [
        "result.0#0",
        "result.1#0",
        "result_native.1#0",
        "result_native.2#0",
        "result_native.3#0",
        "tmp%53#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "result_native.3#0",
        "result_native.2#0",
        "tmp%53#0",
        "result_native.1#0",
        "result.1#0"
      ]
    },
    "4056": {
      "op": "==",
      "defined_out": [
        "result.0#0",
        "result.1#0",
        "result_native.2#0",
        "result_native.3#0",
        "tmp%53#0",
        "tmp%54#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "result_native.3#0",
        "result_native.2#0",
        "tmp%53#0",
        "tmp%54#0"
      ]
    },
    "4057": {
      "op": "&&",
      "defined_out": [
        "result.0#0",
        "result.1#0",
        "result_native.2#0",
        "result_native.3#0",
        "tmp%55#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "result_native.3#0",
        "result_native.2#0",
        "tmp%55#0"
      ]
    },
    "4058": {
      "op": "swap",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "result_native.3#0",
        "tmp%55#0",
        "result_native.2#0"
      ]
    },
    "4059": {
      "op": "frame_dig 3",
      "defined_out": [
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result_native.2#0",
        "result_native.3#0",
        "tmp%55#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "result_native.3#0",
        "tmp%55#0",
        "result_native.2#0",
        "result.2#0"
      ]
    },
    "4061": {
      "op": "==",
      "defined_out": [
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result_native.3#0",
        "tmp%55#0",
        "tmp%56#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "result_native.3#0",
        "tmp%55#0",
        "tmp%56#0"
      ]
    },
    "4062": {
      "op": "&&",
      "defined_out": [
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result_native.3#0",
        "tmp%57#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "result_native.3#0",
        "tmp%57#0"
      ]
    },
    "4063": {
      "op": "swap",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "tmp%57#0",
        "result_native.3#0"
      ]
    },
    "4064": {
      "op": "frame_dig 2",
      "defined_out": [
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "result_native.3#0",
        "tmp%57#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "tmp%57#0",
        "result_native.3#0",
        "result.3#0"
      ]
    },
    "4066": {
      "op": "b==",
      "defined_out": [
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "tmp%57#0",
        "tmp%58#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "tmp%57#0",
        "tmp%58#0"
      ]
    },
    "4067": {
      "op": "&&",
      "defined_out": [
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "tmp%59#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0",
        "tmp%59#0"
      ]
    },
    "4068": {
      "op": "assert",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.3#0",
        "result.2#0"
      ]
    },
    "4069": {
      "retsub": true,
      "op": "retsub"
    },
    "4070": {
      "subroutine": "test_cases.typed_abi_call.typed_c2c.Greeter.test_nested_tuples",
      "params": {
        "app#0": "uint64"
      },
      "block": "test_nested_tuples",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "4073": {
      "block": "test_nested_tuples_block@0",
      "stack_in": [],
      "op": "itxn_begin"
    },
    "4074": {
      "op": "bytec_1 // 0x7331",
      "defined_out": [
        "0x7331"
      ],
      "stack_out": [
        "0x7331"
      ]
    },
    "4075": {
      "op": "len",
      "defined_out": [
        "aggregate%length%0#1"
      ],
      "stack_out": [
        "aggregate%length%0#1"
      ]
    },
    "4076": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%0#1"
      ],
      "stack_out": [
        "aggregate%as_bytes%0#1"
      ]
    },
    "4077": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%length_uint16%0#1"
      ],
      "stack_out": [
        "aggregate%length_uint16%0#1"
      ]
    },
    "4080": {
      "op": "bytec_1 // 0x7331",
      "stack_out": [
        "aggregate%length_uint16%0#1",
        "0x7331"
      ]
    },
    "4081": {
      "op": "concat",
      "defined_out": [
        "encoded%0#0"
      ],
      "stack_out": [
        "encoded%0#0"
      ]
    },
    "4082": {
      "op": "bytec 16 // 0x7332",
      "defined_out": [
        "0x7332",
        "encoded%0#0"
      ],
      "stack_out": [
        "encoded%0#0",
        "0x7332"
      ]
    },
    "4084": {
      "op": "len",
      "defined_out": [
        "aggregate%length%1#1",
        "encoded%0#0"
      ],
      "stack_out": [
        "encoded%0#0",
        "aggregate%length%1#1"
      ]
    },
    "4085": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%1#1",
        "encoded%0#0"
      ],
      "stack_out": [
        "encoded%0#0",
        "aggregate%as_bytes%1#1"
      ]
    },
    "4086": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%length_uint16%1#1",
        "encoded%0#0"
      ],
      "stack_out": [
        "encoded%0#0",
        "aggregate%length_uint16%1#1"
      ]
    },
    "4089": {
      "op": "bytec 16 // 0x7332",
      "stack_out": [
        "encoded%0#0",
        "aggregate%length_uint16%1#1",
        "0x7332"
      ]
    },
    "4091": {
      "op": "concat",
      "defined_out": [
        "encoded%0#0",
        "encoded%1#0"
      ],
      "stack_out": [
        "encoded%0#0",
        "encoded%1#0"
      ]
    },
    "4092": {
      "op": "swap",
      "stack_out": [
        "encoded%1#0",
        "encoded%0#0"
      ]
    },
    "4093": {
      "op": "bytec 17 // 0x33",
      "defined_out": [
        "0x33",
        "encoded%0#0",
        "encoded%1#0"
      ],
      "stack_out": [
        "encoded%1#0",
        "encoded%0#0",
        "0x33"
      ]
    },
    "4095": {
      "op": "len",
      "defined_out": [
        "aggregate%length%2#1",
        "encoded%0#0",
        "encoded%1#0"
      ],
      "stack_out": [
        "encoded%1#0",
        "encoded%0#0",
        "aggregate%length%2#1"
      ]
    },
    "4096": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%2#1",
        "encoded%0#0",
        "encoded%1#0"
      ],
      "stack_out": [
        "encoded%1#0",
        "encoded%0#0",
        "aggregate%as_bytes%2#1"
      ]
    },
    "4097": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%length_uint16%2#1",
        "encoded%0#0",
        "encoded%1#0"
      ],
      "stack_out": [
        "encoded%1#0",
        "encoded%0#0",
        "aggregate%length_uint16%2#1"
      ]
    },
    "4100": {
      "op": "bytec 17 // 0x33",
      "stack_out": [
        "encoded%1#0",
        "encoded%0#0",
        "aggregate%length_uint16%2#1",
        "0x33"
      ]
    },
    "4102": {
      "op": "concat",
      "defined_out": [
        "encoded%0#0",
        "encoded%1#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "encoded%1#0",
        "encoded%0#0",
        "tmp%0#0"
      ]
    },
    "4103": {
      "op": "cover 2",
      "stack_out": [
        "tmp%0#0",
        "encoded%1#0",
        "encoded%0#0"
      ]
    },
    "4105": {
      "op": "pushint 4 // 4",
      "defined_out": [
        "4",
        "encoded%0#0",
        "encoded%1#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "encoded%1#0",
        "encoded%0#0",
        "4"
      ]
    },
    "4107": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%3#1",
        "encoded%0#0",
        "encoded%1#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "encoded%1#0",
        "encoded%0#0",
        "aggregate%as_bytes%3#1"
      ]
    },
    "4108": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%offset_as_uint16%0#1",
        "encoded%0#0",
        "encoded%1#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "encoded%1#0",
        "encoded%0#0",
        "aggregate%offset_as_uint16%0#1"
      ]
    },
    "4111": {
      "op": "bytec_2 // 0x",
      "defined_out": [
        "0x",
        "aggregate%offset_as_uint16%0#1",
        "encoded%0#0",
        "encoded%1#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "encoded%1#0",
        "encoded%0#0",
        "aggregate%offset_as_uint16%0#1",
        "0x"
      ]
    },
    "4112": {
      "op": "swap",
      "stack_out": [
        "tmp%0#0",
        "encoded%1#0",
        "encoded%0#0",
        "0x",
        "aggregate%offset_as_uint16%0#1"
      ]
    },
    "4113": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%0#1",
        "encoded%0#0",
        "encoded%1#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "encoded%1#0",
        "encoded%0#0",
        "aggregate%head%0#1"
      ]
    },
    "4114": {
      "op": "dig 1",
      "defined_out": [
        "aggregate%head%0#1",
        "encoded%0#0",
        "encoded%0#0 (copy)",
        "encoded%1#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "encoded%1#0",
        "encoded%0#0",
        "aggregate%head%0#1",
        "encoded%0#0 (copy)"
      ]
    },
    "4116": {
      "op": "len",
      "defined_out": [
        "aggregate%data_length%0#1",
        "aggregate%head%0#1",
        "encoded%0#0",
        "encoded%1#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "encoded%1#0",
        "encoded%0#0",
        "aggregate%head%0#1",
        "aggregate%data_length%0#1"
      ]
    },
    "4117": {
      "op": "pushint 4 // 4",
      "stack_out": [
        "tmp%0#0",
        "encoded%1#0",
        "encoded%0#0",
        "aggregate%head%0#1",
        "aggregate%data_length%0#1",
        "4"
      ]
    },
    "4119": {
      "op": "+",
      "defined_out": [
        "aggregate%current_tail_offset%0#1",
        "aggregate%head%0#1",
        "encoded%0#0",
        "encoded%1#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "encoded%1#0",
        "encoded%0#0",
        "aggregate%head%0#1",
        "aggregate%current_tail_offset%0#1"
      ]
    },
    "4120": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%4#1",
        "aggregate%head%0#1",
        "encoded%0#0",
        "encoded%1#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "encoded%1#0",
        "encoded%0#0",
        "aggregate%head%0#1",
        "aggregate%as_bytes%4#1"
      ]
    },
    "4121": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%head%0#1",
        "aggregate%offset_as_uint16%1#1",
        "encoded%0#0",
        "encoded%1#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "encoded%1#0",
        "encoded%0#0",
        "aggregate%head%0#1",
        "aggregate%offset_as_uint16%1#1"
      ]
    },
    "4124": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%1#1",
        "encoded%0#0",
        "encoded%1#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "encoded%1#0",
        "encoded%0#0",
        "aggregate%head%1#1"
      ]
    },
    "4125": {
      "op": "swap",
      "stack_out": [
        "tmp%0#0",
        "encoded%1#0",
        "aggregate%head%1#1",
        "encoded%0#0"
      ]
    },
    "4126": {
      "op": "concat",
      "defined_out": [
        "aggregate%concat%0#1",
        "encoded%1#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "encoded%1#0",
        "aggregate%concat%0#1"
      ]
    },
    "4127": {
      "op": "swap",
      "stack_out": [
        "tmp%0#0",
        "aggregate%concat%0#1",
        "encoded%1#0"
      ]
    },
    "4128": {
      "op": "concat",
      "defined_out": [
        "aggregate%as_Encoded((len+utf8[]),(len+utf8[]))%0#1",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "aggregate%as_Encoded((len+utf8[]),(len+utf8[]))%0#1"
      ]
    },
    "4129": {
      "op": "pushint 4 // 4",
      "stack_out": [
        "tmp%0#0",
        "aggregate%as_Encoded((len+utf8[]),(len+utf8[]))%0#1",
        "4"
      ]
    },
    "4131": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded((len+utf8[]),(len+utf8[]))%0#1",
        "aggregate%as_bytes%5#1",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "aggregate%as_Encoded((len+utf8[]),(len+utf8[]))%0#1",
        "aggregate%as_bytes%5#1"
      ]
    },
    "4132": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%as_Encoded((len+utf8[]),(len+utf8[]))%0#1",
        "aggregate%offset_as_uint16%2#1",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "aggregate%as_Encoded((len+utf8[]),(len+utf8[]))%0#1",
        "aggregate%offset_as_uint16%2#1"
      ]
    },
    "4135": {
      "op": "bytec_2 // 0x",
      "stack_out": [
        "tmp%0#0",
        "aggregate%as_Encoded((len+utf8[]),(len+utf8[]))%0#1",
        "aggregate%offset_as_uint16%2#1",
        "0x"
      ]
    },
    "4136": {
      "op": "swap",
      "stack_out": [
        "tmp%0#0",
        "aggregate%as_Encoded((len+utf8[]),(len+utf8[]))%0#1",
        "0x",
        "aggregate%offset_as_uint16%2#1"
      ]
    },
    "4137": {
      "op": "concat",
      "defined_out": [
        "aggregate%as_Encoded((len+utf8[]),(len+utf8[]))%0#1",
        "aggregate%head%2#1",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "aggregate%as_Encoded((len+utf8[]),(len+utf8[]))%0#1",
        "aggregate%head%2#1"
      ]
    },
    "4138": {
      "op": "swap",
      "stack_out": [
        "tmp%0#0",
        "aggregate%head%2#1",
        "aggregate%as_Encoded((len+utf8[]),(len+utf8[]))%0#1"
      ]
    },
    "4139": {
      "op": "dup",
      "defined_out": [
        "aggregate%as_Encoded((len+utf8[]),(len+utf8[]))%0#1",
        "aggregate%as_Encoded((len+utf8[]),(len+utf8[]))%0#1 (copy)",
        "aggregate%head%2#1",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "aggregate%head%2#1",
        "aggregate%as_Encoded((len+utf8[]),(len+utf8[]))%0#1",
        "aggregate%as_Encoded((len+utf8[]),(len+utf8[]))%0#1 (copy)"
      ]
    },
    "4140": {
      "op": "len",
      "defined_out": [
        "aggregate%as_Encoded((len+utf8[]),(len+utf8[]))%0#1",
        "aggregate%data_length%2#1",
        "aggregate%head%2#1",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "aggregate%head%2#1",
        "aggregate%as_Encoded((len+utf8[]),(len+utf8[]))%0#1",
        "aggregate%data_length%2#1"
      ]
    },
    "4141": {
      "op": "pushint 4 // 4",
      "stack_out": [
        "tmp%0#0",
        "aggregate%head%2#1",
        "aggregate%as_Encoded((len+utf8[]),(len+utf8[]))%0#1",
        "aggregate%data_length%2#1",
        "4"
      ]
    },
    "4143": {
      "op": "+",
      "defined_out": [
        "aggregate%as_Encoded((len+utf8[]),(len+utf8[]))%0#1",
        "aggregate%current_tail_offset%2#1",
        "aggregate%head%2#1",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "aggregate%head%2#1",
        "aggregate%as_Encoded((len+utf8[]),(len+utf8[]))%0#1",
        "aggregate%current_tail_offset%2#1"
      ]
    },
    "4144": {
      "op": "bytec_2 // 0x",
      "stack_out": [
        "tmp%0#0",
        "aggregate%head%2#1",
        "aggregate%as_Encoded((len+utf8[]),(len+utf8[]))%0#1",
        "aggregate%current_tail_offset%2#1",
        "0x"
      ]
    },
    "4145": {
      "op": "bytec 4 // 0x0000000000000001",
      "defined_out": [
        "0x",
        "0x0000000000000001",
        "aggregate%as_Encoded((len+utf8[]),(len+utf8[]))%0#1",
        "aggregate%current_tail_offset%2#1",
        "aggregate%head%2#1",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "aggregate%head%2#1",
        "aggregate%as_Encoded((len+utf8[]),(len+utf8[]))%0#1",
        "aggregate%current_tail_offset%2#1",
        "0x",
        "0x0000000000000001"
      ]
    },
    "4147": {
      "op": "concat",
      "defined_out": [
        "aggregate%as_Encoded((len+utf8[]),(len+utf8[]))%0#1",
        "aggregate%current_tail_offset%2#1",
        "aggregate%head%2#1",
        "aggregate%head%3#1",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "aggregate%head%2#1",
        "aggregate%as_Encoded((len+utf8[]),(len+utf8[]))%0#1",
        "aggregate%current_tail_offset%2#1",
        "aggregate%head%3#1"
      ]
    },
    "4148": {
      "op": "bytec 14 // 0x0000000000000002",
      "defined_out": [
        "0x0000000000000002",
        "aggregate%as_Encoded((len+utf8[]),(len+utf8[]))%0#1",
        "aggregate%current_tail_offset%2#1",
        "aggregate%head%2#1",
        "aggregate%head%3#1",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "aggregate%head%2#1",
        "aggregate%as_Encoded((len+utf8[]),(len+utf8[]))%0#1",
        "aggregate%current_tail_offset%2#1",
        "aggregate%head%3#1",
        "0x0000000000000002"
      ]
    },
    "4150": {
      "op": "concat",
      "defined_out": [
        "aggregate%as_Encoded((len+utf8[]),(len+utf8[]))%0#1",
        "aggregate%current_tail_offset%2#1",
        "aggregate%head%2#1",
        "aggregate%head%4#1",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "aggregate%head%2#1",
        "aggregate%as_Encoded((len+utf8[]),(len+utf8[]))%0#1",
        "aggregate%current_tail_offset%2#1",
        "aggregate%head%4#1"
      ]
    },
    "4151": {
      "op": "pushint 18 // 18",
      "defined_out": [
        "18",
        "aggregate%as_Encoded((len+utf8[]),(len+utf8[]))%0#1",
        "aggregate%current_tail_offset%2#1",
        "aggregate%head%2#1",
        "aggregate%head%4#1",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "aggregate%head%2#1",
        "aggregate%as_Encoded((len+utf8[]),(len+utf8[]))%0#1",
        "aggregate%current_tail_offset%2#1",
        "aggregate%head%4#1",
        "18"
      ]
    },
    "4153": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded((len+utf8[]),(len+utf8[]))%0#1",
        "aggregate%as_bytes%6#1",
        "aggregate%current_tail_offset%2#1",
        "aggregate%head%2#1",
        "aggregate%head%4#1",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "aggregate%head%2#1",
        "aggregate%as_Encoded((len+utf8[]),(len+utf8[]))%0#1",
        "aggregate%current_tail_offset%2#1",
        "aggregate%head%4#1",
        "aggregate%as_bytes%6#1"
      ]
    },
    "4154": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%as_Encoded((len+utf8[]),(len+utf8[]))%0#1",
        "aggregate%current_tail_offset%2#1",
        "aggregate%head%2#1",
        "aggregate%head%4#1",
        "aggregate%offset_as_uint16%3#1",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "aggregate%head%2#1",
        "aggregate%as_Encoded((len+utf8[]),(len+utf8[]))%0#1",
        "aggregate%current_tail_offset%2#1",
        "aggregate%head%4#1",
        "aggregate%offset_as_uint16%3#1"
      ]
    },
    "4157": {
      "op": "concat",
      "defined_out": [
        "aggregate%as_Encoded((len+utf8[]),(len+utf8[]))%0#1",
        "aggregate%current_tail_offset%2#1",
        "aggregate%head%2#1",
        "aggregate%head%5#1",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "aggregate%head%2#1",
        "aggregate%as_Encoded((len+utf8[]),(len+utf8[]))%0#1",
        "aggregate%current_tail_offset%2#1",
        "aggregate%head%5#1"
      ]
    },
    "4158": {
      "op": "uncover 4",
      "stack_out": [
        "aggregate%head%2#1",
        "aggregate%as_Encoded((len+utf8[]),(len+utf8[]))%0#1",
        "aggregate%current_tail_offset%2#1",
        "aggregate%head%5#1",
        "tmp%0#0"
      ]
    },
    "4160": {
      "op": "concat",
      "defined_out": [
        "aggregate%as_Encoded((len+utf8[]),(len+utf8[]))%0#1",
        "aggregate%as_Encoded(uint64,uint64,(len+uint8[]))%0#1",
        "aggregate%current_tail_offset%2#1",
        "aggregate%head%2#1"
      ],
      "stack_out": [
        "aggregate%head%2#1",
        "aggregate%as_Encoded((len+utf8[]),(len+utf8[]))%0#1",
        "aggregate%current_tail_offset%2#1",
        "aggregate%as_Encoded(uint64,uint64,(len+uint8[]))%0#1"
      ]
    },
    "4161": {
      "op": "swap",
      "stack_out": [
        "aggregate%head%2#1",
        "aggregate%as_Encoded((len+utf8[]),(len+utf8[]))%0#1",
        "aggregate%as_Encoded(uint64,uint64,(len+uint8[]))%0#1",
        "aggregate%current_tail_offset%2#1"
      ]
    },
    "4162": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded((len+utf8[]),(len+utf8[]))%0#1",
        "aggregate%as_Encoded(uint64,uint64,(len+uint8[]))%0#1",
        "aggregate%as_bytes%7#1",
        "aggregate%head%2#1"
      ],
      "stack_out": [
        "aggregate%head%2#1",
        "aggregate%as_Encoded((len+utf8[]),(len+utf8[]))%0#1",
        "aggregate%as_Encoded(uint64,uint64,(len+uint8[]))%0#1",
        "aggregate%as_bytes%7#1"
      ]
    },
    "4163": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%as_Encoded((len+utf8[]),(len+utf8[]))%0#1",
        "aggregate%as_Encoded(uint64,uint64,(len+uint8[]))%0#1",
        "aggregate%head%2#1",
        "aggregate%offset_as_uint16%4#1"
      ],
      "stack_out": [
        "aggregate%head%2#1",
        "aggregate%as_Encoded((len+utf8[]),(len+utf8[]))%0#1",
        "aggregate%as_Encoded(uint64,uint64,(len+uint8[]))%0#1",
        "aggregate%offset_as_uint16%4#1"
      ]
    },
    "4166": {
      "op": "uncover 3",
      "stack_out": [
        "aggregate%as_Encoded((len+utf8[]),(len+utf8[]))%0#1",
        "aggregate%as_Encoded(uint64,uint64,(len+uint8[]))%0#1",
        "aggregate%offset_as_uint16%4#1",
        "aggregate%head%2#1"
      ]
    },
    "4168": {
      "op": "swap",
      "stack_out": [
        "aggregate%as_Encoded((len+utf8[]),(len+utf8[]))%0#1",
        "aggregate%as_Encoded(uint64,uint64,(len+uint8[]))%0#1",
        "aggregate%head%2#1",
        "aggregate%offset_as_uint16%4#1"
      ]
    },
    "4169": {
      "op": "concat",
      "defined_out": [
        "aggregate%as_Encoded((len+utf8[]),(len+utf8[]))%0#1",
        "aggregate%as_Encoded(uint64,uint64,(len+uint8[]))%0#1",
        "aggregate%head%6#1"
      ],
      "stack_out": [
        "aggregate%as_Encoded((len+utf8[]),(len+utf8[]))%0#1",
        "aggregate%as_Encoded(uint64,uint64,(len+uint8[]))%0#1",
        "aggregate%head%6#1"
      ]
    },
    "4170": {
      "op": "uncover 2",
      "stack_out": [
        "aggregate%as_Encoded(uint64,uint64,(len+uint8[]))%0#1",
        "aggregate%head%6#1",
        "aggregate%as_Encoded((len+utf8[]),(len+utf8[]))%0#1"
      ]
    },
    "4172": {
      "op": "concat",
      "defined_out": [
        "aggregate%as_Encoded(uint64,uint64,(len+uint8[]))%0#1",
        "aggregate%concat%3#1"
      ],
      "stack_out": [
        "aggregate%as_Encoded(uint64,uint64,(len+uint8[]))%0#1",
        "aggregate%concat%3#1"
      ]
    },
    "4173": {
      "op": "swap",
      "stack_out": [
        "aggregate%concat%3#1",
        "aggregate%as_Encoded(uint64,uint64,(len+uint8[]))%0#1"
      ]
    },
    "4174": {
      "op": "concat",
      "defined_out": [
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "4175": {
      "op": "frame_dig -1",
      "defined_out": [
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%0%%param_ApplicationID_idx_0#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%0%%param_ApplicationID_idx_0#0"
      ]
    },
    "4177": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "4179": {
      "op": "bytec 31 // method \"echo_nested_tuple(((string,string),(uint64,uint64,byte[])))((string,string),(uint64,uint64,byte[]))\"",
      "defined_out": [
        "Method(echo_nested_tuple(((string,string),(uint64,uint64,byte[])))((string,string),(uint64,uint64,byte[])))",
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0",
        "Method(echo_nested_tuple(((string,string),(uint64,uint64,byte[])))((string,string),(uint64,uint64,byte[])))"
      ]
    },
    "4181": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "4183": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "4185": {
      "op": "intc_1 // appl",
      "defined_out": [
        "appl"
      ],
      "stack_out": [
        "appl"
      ]
    },
    "4186": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "4188": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "4189": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "4191": {
      "block": "test_nested_tuples_next_txn@1",
      "stack_in": [],
      "op": "itxn_submit"
    },
    "4192": {
      "op": "itxn LastLog",
      "defined_out": [
        "awst_tmp%0#0"
      ],
      "stack_out": [
        "awst_tmp%0#0"
      ]
    },
    "4194": {
      "op": "dup",
      "defined_out": [
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ]
    },
    "4195": {
      "op": "extract 4 0",
      "defined_out": [
        "awst_tmp%0#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "tmp%2#0"
      ]
    },
    "4198": {
      "op": "swap",
      "stack_out": [
        "tmp%2#0",
        "awst_tmp%0#0"
      ]
    },
    "4199": {
      "op": "extract 0 4",
      "defined_out": [
        "tmp%2#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "tmp%3#0"
      ]
    },
    "4202": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%2#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "tmp%3#0",
        "0x151f7c75"
      ]
    },
    "4203": {
      "op": "==",
      "defined_out": [
        "tmp%2#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "tmp%4#0"
      ]
    },
    "4204": {
      "error": "application log value is not the result of an ABI return",
      "op": "assert // application log value is not the result of an ABI return",
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "4205": {
      "op": "dup",
      "defined_out": [
        "tmp%2#0",
        "tmp%2#0 (copy)"
      ],
      "stack_out": [
        "tmp%2#0",
        "tmp%2#0 (copy)"
      ]
    },
    "4206": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%2#0",
        "tmp%2#0 (copy)"
      ],
      "stack_out": [
        "tmp%2#0",
        "tmp%2#0 (copy)",
        "0"
      ]
    },
    "4207": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%extract_uint16%0#1",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "aggregate%extract_uint16%0#1"
      ]
    },
    "4208": {
      "op": "swap",
      "stack_out": [
        "aggregate%extract_uint16%0#1",
        "tmp%2#0"
      ]
    },
    "4209": {
      "op": "dup",
      "stack_out": [
        "aggregate%extract_uint16%0#1",
        "tmp%2#0",
        "tmp%2#0 (copy)"
      ]
    },
    "4210": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "aggregate%extract_uint16%0#1",
        "tmp%2#0",
        "tmp%2#0 (copy)"
      ],
      "stack_out": [
        "aggregate%extract_uint16%0#1",
        "tmp%2#0",
        "tmp%2#0 (copy)",
        "2"
      ]
    },
    "4211": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%extract_uint16%0#1",
        "aggregate%extract_uint16%1#1",
        "tmp%2#0"
      ],
      "stack_out": [
        "aggregate%extract_uint16%0#1",
        "tmp%2#0",
        "aggregate%extract_uint16%1#1"
      ]
    },
    "4212": {
      "op": "dig 1",
      "stack_out": [
        "aggregate%extract_uint16%0#1",
        "tmp%2#0",
        "aggregate%extract_uint16%1#1",
        "tmp%2#0 (copy)"
      ]
    },
    "4214": {
      "op": "uncover 3",
      "stack_out": [
        "tmp%2#0",
        "aggregate%extract_uint16%1#1",
        "tmp%2#0 (copy)",
        "aggregate%extract_uint16%0#1"
      ]
    },
    "4216": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%2#0",
        "tmp%2#0 (copy)",
        "aggregate%extract_uint16%0#1",
        "aggregate%extract_uint16%1#1"
      ]
    },
    "4218": {
      "op": "substring3",
      "defined_out": [
        "aggregate%substring3%0#1",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "aggregate%substring3%0#1"
      ]
    },
    "4219": {
      "op": "dup",
      "defined_out": [
        "aggregate%substring3%0#1",
        "aggregate%substring3%0#1 (copy)",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "aggregate%substring3%0#1",
        "aggregate%substring3%0#1 (copy)"
      ]
    },
    "4220": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%2#0",
        "aggregate%substring3%0#1",
        "aggregate%substring3%0#1 (copy)",
        "0"
      ]
    },
    "4221": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%extract_uint16%2#1",
        "aggregate%substring3%0#1",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "aggregate%substring3%0#1",
        "aggregate%extract_uint16%2#1"
      ]
    },
    "4222": {
      "op": "swap",
      "stack_out": [
        "tmp%2#0",
        "aggregate%extract_uint16%2#1",
        "aggregate%substring3%0#1"
      ]
    },
    "4223": {
      "op": "dup",
      "stack_out": [
        "tmp%2#0",
        "aggregate%extract_uint16%2#1",
        "aggregate%substring3%0#1",
        "aggregate%substring3%0#1 (copy)"
      ]
    },
    "4224": {
      "op": "intc_2 // 2",
      "stack_out": [
        "tmp%2#0",
        "aggregate%extract_uint16%2#1",
        "aggregate%substring3%0#1",
        "aggregate%substring3%0#1 (copy)",
        "2"
      ]
    },
    "4225": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%extract_uint16%2#1",
        "aggregate%extract_uint16%3#1",
        "aggregate%substring3%0#1",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "aggregate%extract_uint16%2#1",
        "aggregate%substring3%0#1",
        "aggregate%extract_uint16%3#1"
      ]
    },
    "4226": {
      "op": "dig 1",
      "stack_out": [
        "tmp%2#0",
        "aggregate%extract_uint16%2#1",
        "aggregate%substring3%0#1",
        "aggregate%extract_uint16%3#1",
        "aggregate%substring3%0#1 (copy)"
      ]
    },
    "4228": {
      "op": "uncover 3",
      "stack_out": [
        "tmp%2#0",
        "aggregate%substring3%0#1",
        "aggregate%extract_uint16%3#1",
        "aggregate%substring3%0#1 (copy)",
        "aggregate%extract_uint16%2#1"
      ]
    },
    "4230": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%2#0",
        "aggregate%substring3%0#1",
        "aggregate%substring3%0#1 (copy)",
        "aggregate%extract_uint16%2#1",
        "aggregate%extract_uint16%3#1"
      ]
    },
    "4232": {
      "op": "substring3",
      "defined_out": [
        "aggregate%substring3%0#1",
        "aggregate%substring3%1#1",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "aggregate%substring3%0#1",
        "aggregate%substring3%1#1"
      ]
    },
    "4233": {
      "op": "extract 2 0",
      "defined_out": [
        "aggregate%item0%0#1",
        "aggregate%substring3%0#1",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "aggregate%substring3%0#1",
        "aggregate%item0%0#1"
      ]
    },
    "4236": {
      "op": "cover 2",
      "stack_out": [
        "aggregate%item0%0#1",
        "tmp%2#0",
        "aggregate%substring3%0#1"
      ]
    },
    "4238": {
      "op": "dup",
      "stack_out": [
        "aggregate%item0%0#1",
        "tmp%2#0",
        "aggregate%substring3%0#1",
        "aggregate%substring3%0#1 (copy)"
      ]
    },
    "4239": {
      "op": "intc_2 // 2",
      "stack_out": [
        "aggregate%item0%0#1",
        "tmp%2#0",
        "aggregate%substring3%0#1",
        "aggregate%substring3%0#1 (copy)",
        "2"
      ]
    },
    "4240": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%extract_uint16%4#1",
        "aggregate%item0%0#1",
        "aggregate%substring3%0#1",
        "tmp%2#0"
      ],
      "stack_out": [
        "aggregate%item0%0#1",
        "tmp%2#0",
        "aggregate%substring3%0#1",
        "aggregate%extract_uint16%4#1"
      ]
    },
    "4241": {
      "op": "swap",
      "stack_out": [
        "aggregate%item0%0#1",
        "tmp%2#0",
        "aggregate%extract_uint16%4#1",
        "aggregate%substring3%0#1"
      ]
    },
    "4242": {
      "op": "dup",
      "stack_out": [
        "aggregate%item0%0#1",
        "tmp%2#0",
        "aggregate%extract_uint16%4#1",
        "aggregate%substring3%0#1",
        "aggregate%substring3%0#1 (copy)"
      ]
    },
    "4243": {
      "op": "len",
      "defined_out": [
        "aggregate%extract_uint16%4#1",
        "aggregate%item0%0#1",
        "aggregate%len%0#1",
        "aggregate%substring3%0#1",
        "tmp%2#0"
      ],
      "stack_out": [
        "aggregate%item0%0#1",
        "tmp%2#0",
        "aggregate%extract_uint16%4#1",
        "aggregate%substring3%0#1",
        "aggregate%len%0#1"
      ]
    },
    "4244": {
      "op": "swap",
      "stack_out": [
        "aggregate%item0%0#1",
        "tmp%2#0",
        "aggregate%extract_uint16%4#1",
        "aggregate%len%0#1",
        "aggregate%substring3%0#1"
      ]
    },
    "4245": {
      "op": "uncover 2",
      "stack_out": [
        "aggregate%item0%0#1",
        "tmp%2#0",
        "aggregate%len%0#1",
        "aggregate%substring3%0#1",
        "aggregate%extract_uint16%4#1"
      ]
    },
    "4247": {
      "op": "uncover 2",
      "stack_out": [
        "aggregate%item0%0#1",
        "tmp%2#0",
        "aggregate%substring3%0#1",
        "aggregate%extract_uint16%4#1",
        "aggregate%len%0#1"
      ]
    },
    "4249": {
      "op": "substring3",
      "defined_out": [
        "aggregate%item0%0#1",
        "aggregate%substring3%2#1",
        "tmp%2#0"
      ],
      "stack_out": [
        "aggregate%item0%0#1",
        "tmp%2#0",
        "aggregate%substring3%2#1"
      ]
    },
    "4250": {
      "op": "swap",
      "stack_out": [
        "aggregate%item0%0#1",
        "aggregate%substring3%2#1",
        "tmp%2#0"
      ]
    },
    "4251": {
      "op": "dup",
      "stack_out": [
        "aggregate%item0%0#1",
        "aggregate%substring3%2#1",
        "tmp%2#0",
        "tmp%2#0 (copy)"
      ]
    },
    "4252": {
      "op": "intc_2 // 2",
      "stack_out": [
        "aggregate%item0%0#1",
        "aggregate%substring3%2#1",
        "tmp%2#0",
        "tmp%2#0 (copy)",
        "2"
      ]
    },
    "4253": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%extract_uint16%5#1",
        "aggregate%item0%0#1",
        "aggregate%substring3%2#1",
        "tmp%2#0"
      ],
      "stack_out": [
        "aggregate%item0%0#1",
        "aggregate%substring3%2#1",
        "tmp%2#0",
        "aggregate%extract_uint16%5#1"
      ]
    },
    "4254": {
      "op": "swap",
      "stack_out": [
        "aggregate%item0%0#1",
        "aggregate%substring3%2#1",
        "aggregate%extract_uint16%5#1",
        "tmp%2#0"
      ]
    },
    "4255": {
      "op": "dup",
      "stack_out": [
        "aggregate%item0%0#1",
        "aggregate%substring3%2#1",
        "aggregate%extract_uint16%5#1",
        "tmp%2#0",
        "tmp%2#0 (copy)"
      ]
    },
    "4256": {
      "op": "len",
      "defined_out": [
        "aggregate%extract_uint16%5#1",
        "aggregate%item0%0#1",
        "aggregate%len%1#1",
        "aggregate%substring3%2#1",
        "tmp%2#0"
      ],
      "stack_out": [
        "aggregate%item0%0#1",
        "aggregate%substring3%2#1",
        "aggregate%extract_uint16%5#1",
        "tmp%2#0",
        "aggregate%len%1#1"
      ]
    },
    "4257": {
      "op": "swap",
      "stack_out": [
        "aggregate%item0%0#1",
        "aggregate%substring3%2#1",
        "aggregate%extract_uint16%5#1",
        "aggregate%len%1#1",
        "tmp%2#0"
      ]
    },
    "4258": {
      "op": "uncover 2",
      "stack_out": [
        "aggregate%item0%0#1",
        "aggregate%substring3%2#1",
        "aggregate%len%1#1",
        "tmp%2#0",
        "aggregate%extract_uint16%5#1"
      ]
    },
    "4260": {
      "op": "uncover 2",
      "stack_out": [
        "aggregate%item0%0#1",
        "aggregate%substring3%2#1",
        "tmp%2#0",
        "aggregate%extract_uint16%5#1",
        "aggregate%len%1#1"
      ]
    },
    "4262": {
      "op": "substring3",
      "defined_out": [
        "aggregate%item0%0#1",
        "aggregate%substring3%2#1",
        "aggregate%substring3%3#1"
      ],
      "stack_out": [
        "aggregate%item0%0#1",
        "aggregate%substring3%2#1",
        "aggregate%substring3%3#1"
      ]
    },
    "4263": {
      "op": "dup",
      "defined_out": [
        "aggregate%item0%0#1",
        "aggregate%substring3%2#1",
        "aggregate%substring3%3#1",
        "aggregate%substring3%3#1 (copy)"
      ],
      "stack_out": [
        "aggregate%item0%0#1",
        "aggregate%substring3%2#1",
        "aggregate%substring3%3#1",
        "aggregate%substring3%3#1 (copy)"
      ]
    },
    "4264": {
      "op": "intc_0 // 0",
      "stack_out": [
        "aggregate%item0%0#1",
        "aggregate%substring3%2#1",
        "aggregate%substring3%3#1",
        "aggregate%substring3%3#1 (copy)",
        "0"
      ]
    },
    "4265": {
      "op": "pushint 8 // 8",
      "defined_out": [
        "0",
        "8",
        "aggregate%item0%0#1",
        "aggregate%substring3%2#1",
        "aggregate%substring3%3#1",
        "aggregate%substring3%3#1 (copy)"
      ],
      "stack_out": [
        "aggregate%item0%0#1",
        "aggregate%substring3%2#1",
        "aggregate%substring3%3#1",
        "aggregate%substring3%3#1 (copy)",
        "0",
        "8"
      ]
    },
    "4267": {
      "op": "extract3",
      "defined_out": [
        "aggregate%extract%0#1",
        "aggregate%item0%0#1",
        "aggregate%substring3%2#1",
        "aggregate%substring3%3#1"
      ],
      "stack_out": [
        "aggregate%item0%0#1",
        "aggregate%substring3%2#1",
        "aggregate%substring3%3#1",
        "aggregate%extract%0#1"
      ]
    },
    "4268": {
      "op": "btoi",
      "defined_out": [
        "aggregate%item0%0#1",
        "aggregate%item0%1#1",
        "aggregate%substring3%2#1",
        "aggregate%substring3%3#1"
      ],
      "stack_out": [
        "aggregate%item0%0#1",
        "aggregate%substring3%2#1",
        "aggregate%substring3%3#1",
        "aggregate%item0%1#1"
      ]
    },
    "4269": {
      "op": "swap",
      "stack_out": [
        "aggregate%item0%0#1",
        "aggregate%substring3%2#1",
        "aggregate%item0%1#1",
        "aggregate%substring3%3#1"
      ]
    },
    "4270": {
      "op": "dup",
      "stack_out": [
        "aggregate%item0%0#1",
        "aggregate%substring3%2#1",
        "aggregate%item0%1#1",
        "aggregate%substring3%3#1",
        "aggregate%substring3%3#1 (copy)"
      ]
    },
    "4271": {
      "op": "pushint 8 // 8",
      "stack_out": [
        "aggregate%item0%0#1",
        "aggregate%substring3%2#1",
        "aggregate%item0%1#1",
        "aggregate%substring3%3#1",
        "aggregate%substring3%3#1 (copy)",
        "8"
      ]
    },
    "4273": {
      "op": "dup",
      "stack_out": [
        "aggregate%item0%0#1",
        "aggregate%substring3%2#1",
        "aggregate%item0%1#1",
        "aggregate%substring3%3#1",
        "aggregate%substring3%3#1 (copy)",
        "8",
        "8"
      ]
    },
    "4274": {
      "op": "extract3",
      "defined_out": [
        "aggregate%extract%1#1",
        "aggregate%item0%0#1",
        "aggregate%item0%1#1",
        "aggregate%substring3%2#1",
        "aggregate%substring3%3#1"
      ],
      "stack_out": [
        "aggregate%item0%0#1",
        "aggregate%substring3%2#1",
        "aggregate%item0%1#1",
        "aggregate%substring3%3#1",
        "aggregate%extract%1#1"
      ]
    },
    "4275": {
      "op": "swap",
      "stack_out": [
        "aggregate%item0%0#1",
        "aggregate%substring3%2#1",
        "aggregate%item0%1#1",
        "aggregate%extract%1#1",
        "aggregate%substring3%3#1"
      ]
    },
    "4276": {
      "op": "dup",
      "stack_out": [
        "aggregate%item0%0#1",
        "aggregate%substring3%2#1",
        "aggregate%item0%1#1",
        "aggregate%extract%1#1",
        "aggregate%substring3%3#1",
        "aggregate%substring3%3#1 (copy)"
      ]
    },
    "4277": {
      "op": "pushint 16 // 16",
      "defined_out": [
        "16",
        "aggregate%extract%1#1",
        "aggregate%item0%0#1",
        "aggregate%item0%1#1",
        "aggregate%substring3%2#1",
        "aggregate%substring3%3#1",
        "aggregate%substring3%3#1 (copy)"
      ],
      "stack_out": [
        "aggregate%item0%0#1",
        "aggregate%substring3%2#1",
        "aggregate%item0%1#1",
        "aggregate%extract%1#1",
        "aggregate%substring3%3#1",
        "aggregate%substring3%3#1 (copy)",
        "16"
      ]
    },
    "4279": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%extract%1#1",
        "aggregate%extract_uint16%6#1",
        "aggregate%item0%0#1",
        "aggregate%item0%1#1",
        "aggregate%substring3%2#1",
        "aggregate%substring3%3#1"
      ],
      "stack_out": [
        "aggregate%item0%0#1",
        "aggregate%substring3%2#1",
        "aggregate%item0%1#1",
        "aggregate%extract%1#1",
        "aggregate%substring3%3#1",
        "aggregate%extract_uint16%6#1"
      ]
    },
    "4280": {
      "op": "swap",
      "stack_out": [
        "aggregate%item0%0#1",
        "aggregate%substring3%2#1",
        "aggregate%item0%1#1",
        "aggregate%extract%1#1",
        "aggregate%extract_uint16%6#1",
        "aggregate%substring3%3#1"
      ]
    },
    "4281": {
      "op": "dup",
      "stack_out": [
        "aggregate%item0%0#1",
        "aggregate%substring3%2#1",
        "aggregate%item0%1#1",
        "aggregate%extract%1#1",
        "aggregate%extract_uint16%6#1",
        "aggregate%substring3%3#1",
        "aggregate%substring3%3#1 (copy)"
      ]
    },
    "4282": {
      "op": "len",
      "defined_out": [
        "aggregate%extract%1#1",
        "aggregate%extract_uint16%6#1",
        "aggregate%item0%0#1",
        "aggregate%item0%1#1",
        "aggregate%len%2#1",
        "aggregate%substring3%2#1",
        "aggregate%substring3%3#1"
      ],
      "stack_out": [
        "aggregate%item0%0#1",
        "aggregate%substring3%2#1",
        "aggregate%item0%1#1",
        "aggregate%extract%1#1",
        "aggregate%extract_uint16%6#1",
        "aggregate%substring3%3#1",
        "aggregate%len%2#1"
      ]
    },
    "4283": {
      "op": "swap",
      "stack_out": [
        "aggregate%item0%0#1",
        "aggregate%substring3%2#1",
        "aggregate%item0%1#1",
        "aggregate%extract%1#1",
        "aggregate%extract_uint16%6#1",
        "aggregate%len%2#1",
        "aggregate%substring3%3#1"
      ]
    },
    "4284": {
      "op": "uncover 2",
      "stack_out": [
        "aggregate%item0%0#1",
        "aggregate%substring3%2#1",
        "aggregate%item0%1#1",
        "aggregate%extract%1#1",
        "aggregate%len%2#1",
        "aggregate%substring3%3#1",
        "aggregate%extract_uint16%6#1"
      ]
    },
    "4286": {
      "op": "uncover 2",
      "stack_out": [
        "aggregate%item0%0#1",
        "aggregate%substring3%2#1",
        "aggregate%item0%1#1",
        "aggregate%extract%1#1",
        "aggregate%substring3%3#1",
        "aggregate%extract_uint16%6#1",
        "aggregate%len%2#1"
      ]
    },
    "4288": {
      "op": "substring3",
      "defined_out": [
        "aggregate%extract%1#1",
        "aggregate%item0%0#1",
        "aggregate%item0%1#1",
        "aggregate%substring3%2#1",
        "aggregate%substring3%4#1"
      ],
      "stack_out": [
        "aggregate%item0%0#1",
        "aggregate%substring3%2#1",
        "aggregate%item0%1#1",
        "aggregate%extract%1#1",
        "aggregate%substring3%4#1"
      ]
    },
    "4289": {
      "op": "extract 2 0",
      "defined_out": [
        "aggregate%extract%1#1",
        "aggregate%item0%0#1",
        "aggregate%item0%1#1",
        "aggregate%item2%0#1",
        "aggregate%substring3%2#1"
      ],
      "stack_out": [
        "aggregate%item0%0#1",
        "aggregate%substring3%2#1",
        "aggregate%item0%1#1",
        "aggregate%extract%1#1",
        "aggregate%item2%0#1"
      ]
    },
    "4292": {
      "op": "uncover 4",
      "defined_out": [
        "aggregate%extract%1#1",
        "aggregate%item0%1#1",
        "aggregate%item2%0#1",
        "aggregate%substring3%2#1",
        "tmp%5#0"
      ],
      "stack_out": [
        "aggregate%substring3%2#1",
        "aggregate%item0%1#1",
        "aggregate%extract%1#1",
        "aggregate%item2%0#1",
        "tmp%5#0"
      ]
    },
    "4294": {
      "op": "swap",
      "stack_out": [
        "aggregate%substring3%2#1",
        "aggregate%item0%1#1",
        "aggregate%extract%1#1",
        "tmp%5#0",
        "aggregate%item2%0#1"
      ]
    },
    "4295": {
      "op": "uncover 4",
      "defined_out": [
        "aggregate%extract%1#1",
        "aggregate%item0%1#1",
        "aggregate%item2%0#1",
        "tmp%5#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "aggregate%item0%1#1",
        "aggregate%extract%1#1",
        "tmp%5#0",
        "aggregate%item2%0#1",
        "tmp%6#0"
      ]
    },
    "4297": {
      "op": "cover 2",
      "stack_out": [
        "aggregate%item0%1#1",
        "aggregate%extract%1#1",
        "tmp%6#0",
        "tmp%5#0",
        "aggregate%item2%0#1"
      ]
    },
    "4299": {
      "op": "uncover 4",
      "defined_out": [
        "aggregate%extract%1#1",
        "aggregate%item2%0#1",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "aggregate%extract%1#1",
        "tmp%6#0",
        "tmp%5#0",
        "aggregate%item2%0#1",
        "tmp%7#0"
      ]
    },
    "4301": {
      "op": "cover 3",
      "defined_out": [
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "tmp%7#0",
        "tmp%6#0",
        "tmp%5#0",
        "tmp%9#0"
      ]
    },
    "4303": {
      "op": "cover 4",
      "defined_out": [
        "result.0.0#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0",
        "tmp%8#0",
        "tmp%7#0",
        "tmp%6#0",
        "result.0.0#0"
      ]
    },
    "4305": {
      "op": "cover 4",
      "defined_out": [
        "result.0.0#0",
        "result.0.1#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "result.0.0#0",
        "tmp%9#0",
        "tmp%8#0",
        "tmp%7#0",
        "result.0.1#0"
      ]
    },
    "4307": {
      "op": "cover 4",
      "defined_out": [
        "result.0.0#0",
        "result.0.1#0",
        "result.1.0#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "result.0.1#0",
        "result.0.0#0",
        "tmp%9#0",
        "tmp%8#0",
        "result.1.0#0"
      ]
    },
    "4309": {
      "op": "cover 4",
      "defined_out": [
        "result.0.0#0",
        "result.0.1#0",
        "result.1.0#0",
        "result.1.1#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "result.1.0#0",
        "result.0.1#0",
        "result.0.0#0",
        "tmp%9#0",
        "result.1.1#0"
      ]
    },
    "4311": {
      "op": "cover 4",
      "defined_out": [
        "result.0.0#0",
        "result.0.1#0",
        "result.1.0#0",
        "result.1.1#0",
        "result.1.2#0"
      ],
      "stack_out": [
        "result.1.1#0",
        "result.1.0#0",
        "result.0.1#0",
        "result.0.0#0",
        "result.1.2#0"
      ]
    },
    "4313": {
      "op": "cover 4",
      "defined_out": [
        "result.0.1#0",
        "result.1.0#0",
        "result.1.1#0",
        "result.1.2#0",
        "s1#0"
      ],
      "stack_out": [
        "result.1.2#0",
        "result.1.1#0",
        "result.1.0#0",
        "result.0.1#0",
        "s1#0"
      ]
    },
    "4315": {
      "op": "cover 4",
      "defined_out": [
        "result.1.0#0",
        "result.1.1#0",
        "result.1.2#0",
        "s1#0",
        "s2#0"
      ],
      "stack_out": [
        "s1#0",
        "result.1.2#0",
        "result.1.1#0",
        "result.1.0#0",
        "s2#0"
      ]
    },
    "4317": {
      "op": "cover 4",
      "defined_out": [
        "result.1.1#0",
        "result.1.2#0",
        "s1#0",
        "s2#0",
        "u64_1#0"
      ],
      "stack_out": [
        "s2#0",
        "s1#0",
        "result.1.2#0",
        "result.1.1#0",
        "u64_1#0"
      ]
    },
    "4319": {
      "op": "cover 4",
      "defined_out": [
        "result.1.2#0",
        "s1#0",
        "s2#0",
        "u64_1#0",
        "u64_2#0"
      ],
      "stack_out": [
        "u64_1#0",
        "s2#0",
        "s1#0",
        "result.1.2#0",
        "u64_2#0"
      ]
    },
    "4321": {
      "op": "cover 4",
      "defined_out": [
        "bytez#0",
        "s1#0",
        "s2#0",
        "u64_1#0",
        "u64_2#0"
      ],
      "stack_out": [
        "u64_2#0",
        "u64_1#0",
        "s2#0",
        "s1#0",
        "bytez#0"
      ]
    },
    "4323": {
      "op": "cover 4",
      "stack_out": [
        "bytez#0",
        "u64_2#0",
        "u64_1#0",
        "s2#0",
        "s1#0"
      ]
    },
    "4325": {
      "op": "bytec 15 // \"echo: s1\"",
      "defined_out": [
        "\"echo: s1\"",
        "bytez#0",
        "s1#0",
        "s2#0",
        "u64_1#0",
        "u64_2#0"
      ],
      "stack_out": [
        "bytez#0",
        "u64_2#0",
        "u64_1#0",
        "s2#0",
        "s1#0",
        "\"echo: s1\""
      ]
    },
    "4327": {
      "op": "==",
      "defined_out": [
        "bytez#0",
        "s2#0",
        "tmp%10#0",
        "u64_1#0",
        "u64_2#0"
      ],
      "stack_out": [
        "bytez#0",
        "u64_2#0",
        "u64_1#0",
        "s2#0",
        "tmp%10#0"
      ]
    },
    "4328": {
      "op": "assert",
      "stack_out": [
        "bytez#0",
        "u64_2#0",
        "u64_1#0",
        "s2#0"
      ]
    },
    "4329": {
      "op": "bytec 18 // 0x6563686f3a207332",
      "defined_out": [
        "0x6563686f3a207332",
        "bytez#0",
        "s2#0",
        "u64_1#0",
        "u64_2#0"
      ],
      "stack_out": [
        "bytez#0",
        "u64_2#0",
        "u64_1#0",
        "s2#0",
        "0x6563686f3a207332"
      ]
    },
    "4331": {
      "op": "len",
      "defined_out": [
        "aggregate%length%3#1",
        "bytez#0",
        "s2#0",
        "u64_1#0",
        "u64_2#0"
      ],
      "stack_out": [
        "bytez#0",
        "u64_2#0",
        "u64_1#0",
        "s2#0",
        "aggregate%length%3#1"
      ]
    },
    "4332": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%8#1",
        "bytez#0",
        "s2#0",
        "u64_1#0",
        "u64_2#0"
      ],
      "stack_out": [
        "bytez#0",
        "u64_2#0",
        "u64_1#0",
        "s2#0",
        "aggregate%as_bytes%8#1"
      ]
    },
    "4333": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%length_uint16%3#1",
        "bytez#0",
        "s2#0",
        "u64_1#0",
        "u64_2#0"
      ],
      "stack_out": [
        "bytez#0",
        "u64_2#0",
        "u64_1#0",
        "s2#0",
        "aggregate%length_uint16%3#1"
      ]
    },
    "4336": {
      "op": "bytec 18 // 0x6563686f3a207332",
      "stack_out": [
        "bytez#0",
        "u64_2#0",
        "u64_1#0",
        "s2#0",
        "aggregate%length_uint16%3#1",
        "0x6563686f3a207332"
      ]
    },
    "4338": {
      "op": "concat",
      "defined_out": [
        "bytez#0",
        "encoded%2#0",
        "s2#0",
        "u64_1#0",
        "u64_2#0"
      ],
      "stack_out": [
        "bytez#0",
        "u64_2#0",
        "u64_1#0",
        "s2#0",
        "encoded%2#0"
      ]
    },
    "4339": {
      "op": "==",
      "defined_out": [
        "bytez#0",
        "tmp%11#0",
        "u64_1#0",
        "u64_2#0"
      ],
      "stack_out": [
        "bytez#0",
        "u64_2#0",
        "u64_1#0",
        "tmp%11#0"
      ]
    },
    "4340": {
      "op": "assert",
      "stack_out": [
        "bytez#0",
        "u64_2#0",
        "u64_1#0"
      ]
    },
    "4341": {
      "op": "intc_2 // 2",
      "stack_out": [
        "bytez#0",
        "u64_2#0",
        "u64_1#0",
        "2"
      ]
    },
    "4342": {
      "op": "==",
      "defined_out": [
        "bytez#0",
        "tmp%12#0",
        "u64_2#0"
      ],
      "stack_out": [
        "bytez#0",
        "u64_2#0",
        "tmp%12#0"
      ]
    },
    "4343": {
      "op": "assert",
      "defined_out": [
        "bytez#0",
        "reinterpret_biguint%0#0"
      ],
      "stack_out": [
        "bytez#0",
        "reinterpret_biguint%0#0"
      ]
    },
    "4344": {
      "op": "bytec 21 // 0x0000000000000003",
      "defined_out": [
        "0x0000000000000003",
        "bytez#0",
        "reinterpret_biguint%0#0"
      ],
      "stack_out": [
        "bytez#0",
        "reinterpret_biguint%0#0",
        "0x0000000000000003"
      ]
    },
    "4346": {
      "op": "b==",
      "defined_out": [
        "bytez#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "bytez#0",
        "tmp%13#0"
      ]
    },
    "4347": {
      "op": "assert",
      "stack_out": [
        "bytez#0"
      ]
    },
    "4348": {
      "op": "bytec 52 // 0x6563686f3a2033",
      "defined_out": [
        "0x6563686f3a2033",
        "bytez#0"
      ],
      "stack_out": [
        "bytez#0",
        "0x6563686f3a2033"
      ]
    },
    "4350": {
      "op": "==",
      "defined_out": [
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%14#0"
      ]
    },
    "4351": {
      "op": "assert",
      "stack_out": []
    },
    "4352": {
      "op": "itxn_begin"
    },
    "4353": {
      "op": "bytec 16 // 0x7332",
      "defined_out": [
        "0x7332"
      ],
      "stack_out": [
        "0x7332"
      ]
    },
    "4355": {
      "op": "len",
      "defined_out": [
        "aggregate%length%4#1"
      ],
      "stack_out": [
        "aggregate%length%4#1"
      ]
    },
    "4356": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%9#1"
      ],
      "stack_out": [
        "aggregate%as_bytes%9#1"
      ]
    },
    "4357": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%length_uint16%4#1"
      ],
      "stack_out": [
        "aggregate%length_uint16%4#1"
      ]
    },
    "4360": {
      "op": "bytec 16 // 0x7332",
      "stack_out": [
        "aggregate%length_uint16%4#1",
        "0x7332"
      ]
    },
    "4362": {
      "op": "concat",
      "defined_out": [
        "encoded%3#0"
      ],
      "stack_out": [
        "encoded%3#0"
      ]
    },
    "4363": {
      "op": "bytec_1 // \"s1\"",
      "defined_out": [
        "\"s1\"",
        "encoded%3#0"
      ],
      "stack_out": [
        "encoded%3#0",
        "\"s1\""
      ]
    },
    "4364": {
      "op": "len",
      "defined_out": [
        "aggregate%length%5#1",
        "encoded%3#0"
      ],
      "stack_out": [
        "encoded%3#0",
        "aggregate%length%5#1"
      ]
    },
    "4365": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%10#1",
        "encoded%3#0"
      ],
      "stack_out": [
        "encoded%3#0",
        "aggregate%as_bytes%10#1"
      ]
    },
    "4366": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%length_uint16%5#1",
        "encoded%3#0"
      ],
      "stack_out": [
        "encoded%3#0",
        "aggregate%length_uint16%5#1"
      ]
    },
    "4369": {
      "op": "bytec_1 // \"s1\"",
      "stack_out": [
        "encoded%3#0",
        "aggregate%length_uint16%5#1",
        "\"s1\""
      ]
    },
    "4370": {
      "op": "concat",
      "defined_out": [
        "aggregate%as_Encoded(len+utf8[])%4#1",
        "encoded%3#0"
      ],
      "stack_out": [
        "encoded%3#0",
        "aggregate%as_Encoded(len+utf8[])%4#1"
      ]
    },
    "4371": {
      "op": "pushint 4 // 4",
      "defined_out": [
        "4",
        "aggregate%as_Encoded(len+utf8[])%4#1",
        "encoded%3#0"
      ],
      "stack_out": [
        "encoded%3#0",
        "aggregate%as_Encoded(len+utf8[])%4#1",
        "4"
      ]
    },
    "4373": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(len+utf8[])%4#1",
        "aggregate%as_bytes%11#1",
        "encoded%3#0"
      ],
      "stack_out": [
        "encoded%3#0",
        "aggregate%as_Encoded(len+utf8[])%4#1",
        "aggregate%as_bytes%11#1"
      ]
    },
    "4374": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%as_Encoded(len+utf8[])%4#1",
        "aggregate%offset_as_uint16%5#1",
        "encoded%3#0"
      ],
      "stack_out": [
        "encoded%3#0",
        "aggregate%as_Encoded(len+utf8[])%4#1",
        "aggregate%offset_as_uint16%5#1"
      ]
    },
    "4377": {
      "op": "bytec_2 // 0x",
      "defined_out": [
        "0x",
        "aggregate%as_Encoded(len+utf8[])%4#1",
        "aggregate%offset_as_uint16%5#1",
        "encoded%3#0"
      ],
      "stack_out": [
        "encoded%3#0",
        "aggregate%as_Encoded(len+utf8[])%4#1",
        "aggregate%offset_as_uint16%5#1",
        "0x"
      ]
    },
    "4378": {
      "op": "swap",
      "stack_out": [
        "encoded%3#0",
        "aggregate%as_Encoded(len+utf8[])%4#1",
        "0x",
        "aggregate%offset_as_uint16%5#1"
      ]
    },
    "4379": {
      "op": "concat",
      "defined_out": [
        "aggregate%as_Encoded(len+utf8[])%4#1",
        "aggregate%head%7#1",
        "encoded%3#0"
      ],
      "stack_out": [
        "encoded%3#0",
        "aggregate%as_Encoded(len+utf8[])%4#1",
        "aggregate%head%7#1"
      ]
    },
    "4380": {
      "op": "swap",
      "stack_out": [
        "encoded%3#0",
        "aggregate%head%7#1",
        "aggregate%as_Encoded(len+utf8[])%4#1"
      ]
    },
    "4381": {
      "op": "dup",
      "defined_out": [
        "aggregate%as_Encoded(len+utf8[])%4#1",
        "aggregate%as_Encoded(len+utf8[])%4#1 (copy)",
        "aggregate%head%7#1",
        "encoded%3#0"
      ],
      "stack_out": [
        "encoded%3#0",
        "aggregate%head%7#1",
        "aggregate%as_Encoded(len+utf8[])%4#1",
        "aggregate%as_Encoded(len+utf8[])%4#1 (copy)"
      ]
    },
    "4382": {
      "op": "len",
      "defined_out": [
        "aggregate%as_Encoded(len+utf8[])%4#1",
        "aggregate%data_length%5#1",
        "aggregate%head%7#1",
        "encoded%3#0"
      ],
      "stack_out": [
        "encoded%3#0",
        "aggregate%head%7#1",
        "aggregate%as_Encoded(len+utf8[])%4#1",
        "aggregate%data_length%5#1"
      ]
    },
    "4383": {
      "op": "pushint 4 // 4",
      "stack_out": [
        "encoded%3#0",
        "aggregate%head%7#1",
        "aggregate%as_Encoded(len+utf8[])%4#1",
        "aggregate%data_length%5#1",
        "4"
      ]
    },
    "4385": {
      "op": "+",
      "defined_out": [
        "aggregate%as_Encoded(len+utf8[])%4#1",
        "aggregate%current_tail_offset%5#1",
        "aggregate%head%7#1",
        "encoded%3#0"
      ],
      "stack_out": [
        "encoded%3#0",
        "aggregate%head%7#1",
        "aggregate%as_Encoded(len+utf8[])%4#1",
        "aggregate%current_tail_offset%5#1"
      ]
    },
    "4386": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(len+utf8[])%4#1",
        "aggregate%as_bytes%12#1",
        "aggregate%head%7#1",
        "encoded%3#0"
      ],
      "stack_out": [
        "encoded%3#0",
        "aggregate%head%7#1",
        "aggregate%as_Encoded(len+utf8[])%4#1",
        "aggregate%as_bytes%12#1"
      ]
    },
    "4387": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%as_Encoded(len+utf8[])%4#1",
        "aggregate%head%7#1",
        "aggregate%offset_as_uint16%6#1",
        "encoded%3#0"
      ],
      "stack_out": [
        "encoded%3#0",
        "aggregate%head%7#1",
        "aggregate%as_Encoded(len+utf8[])%4#1",
        "aggregate%offset_as_uint16%6#1"
      ]
    },
    "4390": {
      "op": "uncover 2",
      "stack_out": [
        "encoded%3#0",
        "aggregate%as_Encoded(len+utf8[])%4#1",
        "aggregate%offset_as_uint16%6#1",
        "aggregate%head%7#1"
      ]
    },
    "4392": {
      "op": "swap",
      "stack_out": [
        "encoded%3#0",
        "aggregate%as_Encoded(len+utf8[])%4#1",
        "aggregate%head%7#1",
        "aggregate%offset_as_uint16%6#1"
      ]
    },
    "4393": {
      "op": "concat",
      "defined_out": [
        "aggregate%as_Encoded(len+utf8[])%4#1",
        "aggregate%head%8#1",
        "encoded%3#0"
      ],
      "stack_out": [
        "encoded%3#0",
        "aggregate%as_Encoded(len+utf8[])%4#1",
        "aggregate%head%8#1"
      ]
    },
    "4394": {
      "op": "swap",
      "stack_out": [
        "encoded%3#0",
        "aggregate%head%8#1",
        "aggregate%as_Encoded(len+utf8[])%4#1"
      ]
    },
    "4395": {
      "op": "concat",
      "defined_out": [
        "aggregate%concat%5#1",
        "encoded%3#0"
      ],
      "stack_out": [
        "encoded%3#0",
        "aggregate%concat%5#1"
      ]
    },
    "4396": {
      "op": "swap",
      "stack_out": [
        "aggregate%concat%5#1",
        "encoded%3#0"
      ]
    },
    "4397": {
      "op": "concat",
      "defined_out": [
        "aggregate%as_Encoded((len+utf8[]),(len+utf8[]))%1#1"
      ],
      "stack_out": [
        "aggregate%as_Encoded((len+utf8[]),(len+utf8[]))%1#1"
      ]
    },
    "4398": {
      "op": "pushint 4 // 4",
      "stack_out": [
        "aggregate%as_Encoded((len+utf8[]),(len+utf8[]))%1#1",
        "4"
      ]
    },
    "4400": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded((len+utf8[]),(len+utf8[]))%1#1",
        "aggregate%as_bytes%13#1"
      ],
      "stack_out": [
        "aggregate%as_Encoded((len+utf8[]),(len+utf8[]))%1#1",
        "aggregate%as_bytes%13#1"
      ]
    },
    "4401": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%as_Encoded((len+utf8[]),(len+utf8[]))%1#1",
        "aggregate%offset_as_uint16%7#1"
      ],
      "stack_out": [
        "aggregate%as_Encoded((len+utf8[]),(len+utf8[]))%1#1",
        "aggregate%offset_as_uint16%7#1"
      ]
    },
    "4404": {
      "op": "bytec_2 // 0x",
      "stack_out": [
        "aggregate%as_Encoded((len+utf8[]),(len+utf8[]))%1#1",
        "aggregate%offset_as_uint16%7#1",
        "0x"
      ]
    },
    "4405": {
      "op": "swap",
      "stack_out": [
        "aggregate%as_Encoded((len+utf8[]),(len+utf8[]))%1#1",
        "0x",
        "aggregate%offset_as_uint16%7#1"
      ]
    },
    "4406": {
      "op": "concat",
      "defined_out": [
        "aggregate%as_Encoded((len+utf8[]),(len+utf8[]))%1#1",
        "aggregate%head%9#1"
      ],
      "stack_out": [
        "aggregate%as_Encoded((len+utf8[]),(len+utf8[]))%1#1",
        "aggregate%head%9#1"
      ]
    },
    "4407": {
      "op": "swap",
      "stack_out": [
        "aggregate%head%9#1",
        "aggregate%as_Encoded((len+utf8[]),(len+utf8[]))%1#1"
      ]
    },
    "4408": {
      "op": "dup",
      "defined_out": [
        "aggregate%as_Encoded((len+utf8[]),(len+utf8[]))%1#1",
        "aggregate%as_Encoded((len+utf8[]),(len+utf8[]))%1#1 (copy)",
        "aggregate%head%9#1"
      ],
      "stack_out": [
        "aggregate%head%9#1",
        "aggregate%as_Encoded((len+utf8[]),(len+utf8[]))%1#1",
        "aggregate%as_Encoded((len+utf8[]),(len+utf8[]))%1#1 (copy)"
      ]
    },
    "4409": {
      "op": "len",
      "defined_out": [
        "aggregate%as_Encoded((len+utf8[]),(len+utf8[]))%1#1",
        "aggregate%data_length%7#1",
        "aggregate%head%9#1"
      ],
      "stack_out": [
        "aggregate%head%9#1",
        "aggregate%as_Encoded((len+utf8[]),(len+utf8[]))%1#1",
        "aggregate%data_length%7#1"
      ]
    },
    "4410": {
      "op": "pushint 4 // 4",
      "stack_out": [
        "aggregate%head%9#1",
        "aggregate%as_Encoded((len+utf8[]),(len+utf8[]))%1#1",
        "aggregate%data_length%7#1",
        "4"
      ]
    },
    "4412": {
      "op": "+",
      "defined_out": [
        "aggregate%as_Encoded((len+utf8[]),(len+utf8[]))%1#1",
        "aggregate%current_tail_offset%7#1",
        "aggregate%head%9#1"
      ],
      "stack_out": [
        "aggregate%head%9#1",
        "aggregate%as_Encoded((len+utf8[]),(len+utf8[]))%1#1",
        "aggregate%current_tail_offset%7#1"
      ]
    },
    "4413": {
      "op": "intc_3 // 1",
      "defined_out": [
        "1",
        "aggregate%as_Encoded((len+utf8[]),(len+utf8[]))%1#1",
        "aggregate%current_tail_offset%7#1",
        "aggregate%head%9#1"
      ],
      "stack_out": [
        "aggregate%head%9#1",
        "aggregate%as_Encoded((len+utf8[]),(len+utf8[]))%1#1",
        "aggregate%current_tail_offset%7#1",
        "1"
      ]
    },
    "4414": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded((len+utf8[]),(len+utf8[]))%1#1",
        "aggregate%as_Encoded(uint64)%0#1",
        "aggregate%current_tail_offset%7#1",
        "aggregate%head%9#1"
      ],
      "stack_out": [
        "aggregate%head%9#1",
        "aggregate%as_Encoded((len+utf8[]),(len+utf8[]))%1#1",
        "aggregate%current_tail_offset%7#1",
        "aggregate%as_Encoded(uint64)%0#1"
      ]
    },
    "4415": {
      "op": "bytec_2 // 0x",
      "stack_out": [
        "aggregate%head%9#1",
        "aggregate%as_Encoded((len+utf8[]),(len+utf8[]))%1#1",
        "aggregate%current_tail_offset%7#1",
        "aggregate%as_Encoded(uint64)%0#1",
        "0x"
      ]
    },
    "4416": {
      "op": "swap",
      "stack_out": [
        "aggregate%head%9#1",
        "aggregate%as_Encoded((len+utf8[]),(len+utf8[]))%1#1",
        "aggregate%current_tail_offset%7#1",
        "0x",
        "aggregate%as_Encoded(uint64)%0#1"
      ]
    },
    "4417": {
      "op": "concat",
      "defined_out": [
        "aggregate%as_Encoded((len+utf8[]),(len+utf8[]))%1#1",
        "aggregate%current_tail_offset%7#1",
        "aggregate%head%10#1",
        "aggregate%head%9#1"
      ],
      "stack_out": [
        "aggregate%head%9#1",
        "aggregate%as_Encoded((len+utf8[]),(len+utf8[]))%1#1",
        "aggregate%current_tail_offset%7#1",
        "aggregate%head%10#1"
      ]
    },
    "4418": {
      "op": "bytec 14 // 0x0000000000000002",
      "defined_out": [
        "0x0000000000000002",
        "aggregate%as_Encoded((len+utf8[]),(len+utf8[]))%1#1",
        "aggregate%current_tail_offset%7#1",
        "aggregate%head%10#1",
        "aggregate%head%9#1"
      ],
      "stack_out": [
        "aggregate%head%9#1",
        "aggregate%as_Encoded((len+utf8[]),(len+utf8[]))%1#1",
        "aggregate%current_tail_offset%7#1",
        "aggregate%head%10#1",
        "0x0000000000000002"
      ]
    },
    "4420": {
      "op": "concat",
      "defined_out": [
        "aggregate%as_Encoded((len+utf8[]),(len+utf8[]))%1#1",
        "aggregate%current_tail_offset%7#1",
        "aggregate%head%11#1",
        "aggregate%head%9#1"
      ],
      "stack_out": [
        "aggregate%head%9#1",
        "aggregate%as_Encoded((len+utf8[]),(len+utf8[]))%1#1",
        "aggregate%current_tail_offset%7#1",
        "aggregate%head%11#1"
      ]
    },
    "4421": {
      "op": "bytec 17 // 0x33",
      "defined_out": [
        "0x33",
        "aggregate%as_Encoded((len+utf8[]),(len+utf8[]))%1#1",
        "aggregate%current_tail_offset%7#1",
        "aggregate%head%11#1",
        "aggregate%head%9#1"
      ],
      "stack_out": [
        "aggregate%head%9#1",
        "aggregate%as_Encoded((len+utf8[]),(len+utf8[]))%1#1",
        "aggregate%current_tail_offset%7#1",
        "aggregate%head%11#1",
        "0x33"
      ]
    },
    "4423": {
      "op": "len",
      "defined_out": [
        "aggregate%as_Encoded((len+utf8[]),(len+utf8[]))%1#1",
        "aggregate%current_tail_offset%7#1",
        "aggregate%head%11#1",
        "aggregate%head%9#1",
        "aggregate%length%6#1"
      ],
      "stack_out": [
        "aggregate%head%9#1",
        "aggregate%as_Encoded((len+utf8[]),(len+utf8[]))%1#1",
        "aggregate%current_tail_offset%7#1",
        "aggregate%head%11#1",
        "aggregate%length%6#1"
      ]
    },
    "4424": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded((len+utf8[]),(len+utf8[]))%1#1",
        "aggregate%as_bytes%14#1",
        "aggregate%current_tail_offset%7#1",
        "aggregate%head%11#1",
        "aggregate%head%9#1"
      ],
      "stack_out": [
        "aggregate%head%9#1",
        "aggregate%as_Encoded((len+utf8[]),(len+utf8[]))%1#1",
        "aggregate%current_tail_offset%7#1",
        "aggregate%head%11#1",
        "aggregate%as_bytes%14#1"
      ]
    },
    "4425": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%as_Encoded((len+utf8[]),(len+utf8[]))%1#1",
        "aggregate%current_tail_offset%7#1",
        "aggregate%head%11#1",
        "aggregate%head%9#1",
        "aggregate%length_uint16%6#1"
      ],
      "stack_out": [
        "aggregate%head%9#1",
        "aggregate%as_Encoded((len+utf8[]),(len+utf8[]))%1#1",
        "aggregate%current_tail_offset%7#1",
        "aggregate%head%11#1",
        "aggregate%length_uint16%6#1"
      ]
    },
    "4428": {
      "op": "bytec 17 // 0x33",
      "stack_out": [
        "aggregate%head%9#1",
        "aggregate%as_Encoded((len+utf8[]),(len+utf8[]))%1#1",
        "aggregate%current_tail_offset%7#1",
        "aggregate%head%11#1",
        "aggregate%length_uint16%6#1",
        "0x33"
      ]
    },
    "4430": {
      "op": "concat",
      "defined_out": [
        "aggregate%as_Encoded((len+utf8[]),(len+utf8[]))%1#1",
        "aggregate%as_Encoded(len+uint8[])%1#1",
        "aggregate%current_tail_offset%7#1",
        "aggregate%head%11#1",
        "aggregate%head%9#1"
      ],
      "stack_out": [
        "aggregate%head%9#1",
        "aggregate%as_Encoded((len+utf8[]),(len+utf8[]))%1#1",
        "aggregate%current_tail_offset%7#1",
        "aggregate%head%11#1",
        "aggregate%as_Encoded(len+uint8[])%1#1"
      ]
    },
    "4431": {
      "op": "pushint 18 // 18",
      "defined_out": [
        "18",
        "aggregate%as_Encoded((len+utf8[]),(len+utf8[]))%1#1",
        "aggregate%as_Encoded(len+uint8[])%1#1",
        "aggregate%current_tail_offset%7#1",
        "aggregate%head%11#1",
        "aggregate%head%9#1"
      ],
      "stack_out": [
        "aggregate%head%9#1",
        "aggregate%as_Encoded((len+utf8[]),(len+utf8[]))%1#1",
        "aggregate%current_tail_offset%7#1",
        "aggregate%head%11#1",
        "aggregate%as_Encoded(len+uint8[])%1#1",
        "18"
      ]
    },
    "4433": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded((len+utf8[]),(len+utf8[]))%1#1",
        "aggregate%as_Encoded(len+uint8[])%1#1",
        "aggregate%as_bytes%15#1",
        "aggregate%current_tail_offset%7#1",
        "aggregate%head%11#1",
        "aggregate%head%9#1"
      ],
      "stack_out": [
        "aggregate%head%9#1",
        "aggregate%as_Encoded((len+utf8[]),(len+utf8[]))%1#1",
        "aggregate%current_tail_offset%7#1",
        "aggregate%head%11#1",
        "aggregate%as_Encoded(len+uint8[])%1#1",
        "aggregate%as_bytes%15#1"
      ]
    },
    "4434": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%as_Encoded((len+utf8[]),(len+utf8[]))%1#1",
        "aggregate%as_Encoded(len+uint8[])%1#1",
        "aggregate%current_tail_offset%7#1",
        "aggregate%head%11#1",
        "aggregate%head%9#1",
        "aggregate%offset_as_uint16%8#1"
      ],
      "stack_out": [
        "aggregate%head%9#1",
        "aggregate%as_Encoded((len+utf8[]),(len+utf8[]))%1#1",
        "aggregate%current_tail_offset%7#1",
        "aggregate%head%11#1",
        "aggregate%as_Encoded(len+uint8[])%1#1",
        "aggregate%offset_as_uint16%8#1"
      ]
    },
    "4437": {
      "op": "uncover 2",
      "stack_out": [
        "aggregate%head%9#1",
        "aggregate%as_Encoded((len+utf8[]),(len+utf8[]))%1#1",
        "aggregate%current_tail_offset%7#1",
        "aggregate%as_Encoded(len+uint8[])%1#1",
        "aggregate%offset_as_uint16%8#1",
        "aggregate%head%11#1"
      ]
    },
    "4439": {
      "op": "swap",
      "stack_out": [
        "aggregate%head%9#1",
        "aggregate%as_Encoded((len+utf8[]),(len+utf8[]))%1#1",
        "aggregate%current_tail_offset%7#1",
        "aggregate%as_Encoded(len+uint8[])%1#1",
        "aggregate%head%11#1",
        "aggregate%offset_as_uint16%8#1"
      ]
    },
    "4440": {
      "op": "concat",
      "defined_out": [
        "aggregate%as_Encoded((len+utf8[]),(len+utf8[]))%1#1",
        "aggregate%as_Encoded(len+uint8[])%1#1",
        "aggregate%current_tail_offset%7#1",
        "aggregate%head%12#1",
        "aggregate%head%9#1"
      ],
      "stack_out": [
        "aggregate%head%9#1",
        "aggregate%as_Encoded((len+utf8[]),(len+utf8[]))%1#1",
        "aggregate%current_tail_offset%7#1",
        "aggregate%as_Encoded(len+uint8[])%1#1",
        "aggregate%head%12#1"
      ]
    },
    "4441": {
      "op": "swap",
      "stack_out": [
        "aggregate%head%9#1",
        "aggregate%as_Encoded((len+utf8[]),(len+utf8[]))%1#1",
        "aggregate%current_tail_offset%7#1",
        "aggregate%head%12#1",
        "aggregate%as_Encoded(len+uint8[])%1#1"
      ]
    },
    "4442": {
      "op": "concat",
      "defined_out": [
        "aggregate%as_Encoded((len+utf8[]),(len+utf8[]))%1#1",
        "aggregate%as_Encoded(uint64,uint64,(len+uint8[]))%1#1",
        "aggregate%current_tail_offset%7#1",
        "aggregate%head%9#1"
      ],
      "stack_out": [
        "aggregate%head%9#1",
        "aggregate%as_Encoded((len+utf8[]),(len+utf8[]))%1#1",
        "aggregate%current_tail_offset%7#1",
        "aggregate%as_Encoded(uint64,uint64,(len+uint8[]))%1#1"
      ]
    },
    "4443": {
      "op": "swap",
      "stack_out": [
        "aggregate%head%9#1",
        "aggregate%as_Encoded((len+utf8[]),(len+utf8[]))%1#1",
        "aggregate%as_Encoded(uint64,uint64,(len+uint8[]))%1#1",
        "aggregate%current_tail_offset%7#1"
      ]
    },
    "4444": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded((len+utf8[]),(len+utf8[]))%1#1",
        "aggregate%as_Encoded(uint64,uint64,(len+uint8[]))%1#1",
        "aggregate%as_bytes%16#1",
        "aggregate%head%9#1"
      ],
      "stack_out": [
        "aggregate%head%9#1",
        "aggregate%as_Encoded((len+utf8[]),(len+utf8[]))%1#1",
        "aggregate%as_Encoded(uint64,uint64,(len+uint8[]))%1#1",
        "aggregate%as_bytes%16#1"
      ]
    },
    "4445": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%as_Encoded((len+utf8[]),(len+utf8[]))%1#1",
        "aggregate%as_Encoded(uint64,uint64,(len+uint8[]))%1#1",
        "aggregate%head%9#1",
        "aggregate%offset_as_uint16%9#1"
      ],
      "stack_out": [
        "aggregate%head%9#1",
        "aggregate%as_Encoded((len+utf8[]),(len+utf8[]))%1#1",
        "aggregate%as_Encoded(uint64,uint64,(len+uint8[]))%1#1",
        "aggregate%offset_as_uint16%9#1"
      ]
    },
    "4448": {
      "op": "uncover 3",
      "stack_out": [
        "aggregate%as_Encoded((len+utf8[]),(len+utf8[]))%1#1",
        "aggregate%as_Encoded(uint64,uint64,(len+uint8[]))%1#1",
        "aggregate%offset_as_uint16%9#1",
        "aggregate%head%9#1"
      ]
    },
    "4450": {
      "op": "swap",
      "stack_out": [
        "aggregate%as_Encoded((len+utf8[]),(len+utf8[]))%1#1",
        "aggregate%as_Encoded(uint64,uint64,(len+uint8[]))%1#1",
        "aggregate%head%9#1",
        "aggregate%offset_as_uint16%9#1"
      ]
    },
    "4451": {
      "op": "concat",
      "defined_out": [
        "aggregate%as_Encoded((len+utf8[]),(len+utf8[]))%1#1",
        "aggregate%as_Encoded(uint64,uint64,(len+uint8[]))%1#1",
        "aggregate%head%13#1"
      ],
      "stack_out": [
        "aggregate%as_Encoded((len+utf8[]),(len+utf8[]))%1#1",
        "aggregate%as_Encoded(uint64,uint64,(len+uint8[]))%1#1",
        "aggregate%head%13#1"
      ]
    },
    "4452": {
      "op": "uncover 2",
      "stack_out": [
        "aggregate%as_Encoded(uint64,uint64,(len+uint8[]))%1#1",
        "aggregate%head%13#1",
        "aggregate%as_Encoded((len+utf8[]),(len+utf8[]))%1#1"
      ]
    },
    "4454": {
      "op": "concat",
      "defined_out": [
        "aggregate%as_Encoded(uint64,uint64,(len+uint8[]))%1#1",
        "aggregate%concat%8#1"
      ],
      "stack_out": [
        "aggregate%as_Encoded(uint64,uint64,(len+uint8[]))%1#1",
        "aggregate%concat%8#1"
      ]
    },
    "4455": {
      "op": "swap",
      "stack_out": [
        "aggregate%concat%8#1",
        "aggregate%as_Encoded(uint64,uint64,(len+uint8[]))%1#1"
      ]
    },
    "4456": {
      "op": "concat",
      "defined_out": [
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0"
      ],
      "stack_out": [
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "4457": {
      "op": "frame_dig -1",
      "defined_out": [
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%1%%param_ApplicationID_idx_0#0"
      ],
      "stack_out": [
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%1%%param_ApplicationID_idx_0#0"
      ]
    },
    "4459": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "4461": {
      "op": "bytec 31 // method \"echo_nested_tuple(((string,string),(uint64,uint64,byte[])))((string,string),(uint64,uint64,byte[]))\"",
      "defined_out": [
        "Method(echo_nested_tuple(((string,string),(uint64,uint64,byte[])))((string,string),(uint64,uint64,byte[])))",
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0"
      ],
      "stack_out": [
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0",
        "Method(echo_nested_tuple(((string,string),(uint64,uint64,byte[])))((string,string),(uint64,uint64,byte[])))"
      ]
    },
    "4463": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "4465": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "4467": {
      "op": "intc_1 // appl",
      "defined_out": [
        "appl"
      ],
      "stack_out": [
        "appl"
      ]
    },
    "4468": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "4470": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0"
      ]
    },
    "4471": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "4473": {
      "block": "test_nested_tuples_next_txn@2",
      "stack_in": [],
      "op": "itxn_submit"
    },
    "4474": {
      "op": "itxn LastLog",
      "defined_out": [
        "awst_tmp%1#0"
      ],
      "stack_out": [
        "awst_tmp%1#0"
      ]
    },
    "4476": {
      "op": "dup",
      "defined_out": [
        "awst_tmp%1#0",
        "awst_tmp%1#0 (copy)"
      ],
      "stack_out": [
        "awst_tmp%1#0",
        "awst_tmp%1#0 (copy)"
      ]
    },
    "4477": {
      "op": "extract 4 0",
      "defined_out": [
        "awst_tmp%1#0",
        "tmp%16#0"
      ],
      "stack_out": [
        "awst_tmp%1#0",
        "tmp%16#0"
      ]
    },
    "4480": {
      "op": "swap",
      "stack_out": [
        "tmp%16#0",
        "awst_tmp%1#0"
      ]
    },
    "4481": {
      "op": "extract 0 4",
      "defined_out": [
        "tmp%16#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "tmp%16#0",
        "tmp%17#0"
      ]
    },
    "4484": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%16#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "tmp%16#0",
        "tmp%17#0",
        "0x151f7c75"
      ]
    },
    "4485": {
      "op": "==",
      "defined_out": [
        "tmp%16#0",
        "tmp%18#0"
      ],
      "stack_out": [
        "tmp%16#0",
        "tmp%18#0"
      ]
    },
    "4486": {
      "error": "application log value is not the result of an ABI return",
      "op": "assert // application log value is not the result of an ABI return",
      "stack_out": [
        "tmp%16#0"
      ]
    },
    "4487": {
      "op": "dup",
      "defined_out": [
        "tmp%16#0",
        "tmp%16#0 (copy)"
      ],
      "stack_out": [
        "tmp%16#0",
        "tmp%16#0 (copy)"
      ]
    },
    "4488": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%16#0",
        "tmp%16#0 (copy)"
      ],
      "stack_out": [
        "tmp%16#0",
        "tmp%16#0 (copy)",
        "0"
      ]
    },
    "4489": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%extract_uint16%7#1",
        "tmp%16#0"
      ],
      "stack_out": [
        "tmp%16#0",
        "aggregate%extract_uint16%7#1"
      ]
    },
    "4490": {
      "op": "swap",
      "stack_out": [
        "aggregate%extract_uint16%7#1",
        "tmp%16#0"
      ]
    },
    "4491": {
      "op": "dup",
      "stack_out": [
        "aggregate%extract_uint16%7#1",
        "tmp%16#0",
        "tmp%16#0 (copy)"
      ]
    },
    "4492": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "aggregate%extract_uint16%7#1",
        "tmp%16#0",
        "tmp%16#0 (copy)"
      ],
      "stack_out": [
        "aggregate%extract_uint16%7#1",
        "tmp%16#0",
        "tmp%16#0 (copy)",
        "2"
      ]
    },
    "4493": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%extract_uint16%7#1",
        "aggregate%extract_uint16%8#1",
        "tmp%16#0"
      ],
      "stack_out": [
        "aggregate%extract_uint16%7#1",
        "tmp%16#0",
        "aggregate%extract_uint16%8#1"
      ]
    },
    "4494": {
      "op": "dig 1",
      "stack_out": [
        "aggregate%extract_uint16%7#1",
        "tmp%16#0",
        "aggregate%extract_uint16%8#1",
        "tmp%16#0 (copy)"
      ]
    },
    "4496": {
      "op": "uncover 3",
      "stack_out": [
        "tmp%16#0",
        "aggregate%extract_uint16%8#1",
        "tmp%16#0 (copy)",
        "aggregate%extract_uint16%7#1"
      ]
    },
    "4498": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%16#0",
        "tmp%16#0 (copy)",
        "aggregate%extract_uint16%7#1",
        "aggregate%extract_uint16%8#1"
      ]
    },
    "4500": {
      "op": "substring3",
      "defined_out": [
        "aggregate%substring3%5#1",
        "tmp%16#0"
      ],
      "stack_out": [
        "tmp%16#0",
        "aggregate%substring3%5#1"
      ]
    },
    "4501": {
      "op": "dup",
      "defined_out": [
        "aggregate%substring3%5#1",
        "aggregate%substring3%5#1 (copy)",
        "tmp%16#0"
      ],
      "stack_out": [
        "tmp%16#0",
        "aggregate%substring3%5#1",
        "aggregate%substring3%5#1 (copy)"
      ]
    },
    "4502": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%16#0",
        "aggregate%substring3%5#1",
        "aggregate%substring3%5#1 (copy)",
        "0"
      ]
    },
    "4503": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%extract_uint16%9#1",
        "aggregate%substring3%5#1",
        "tmp%16#0"
      ],
      "stack_out": [
        "tmp%16#0",
        "aggregate%substring3%5#1",
        "aggregate%extract_uint16%9#1"
      ]
    },
    "4504": {
      "op": "swap",
      "stack_out": [
        "tmp%16#0",
        "aggregate%extract_uint16%9#1",
        "aggregate%substring3%5#1"
      ]
    },
    "4505": {
      "op": "dup",
      "stack_out": [
        "tmp%16#0",
        "aggregate%extract_uint16%9#1",
        "aggregate%substring3%5#1",
        "aggregate%substring3%5#1 (copy)"
      ]
    },
    "4506": {
      "op": "intc_2 // 2",
      "stack_out": [
        "tmp%16#0",
        "aggregate%extract_uint16%9#1",
        "aggregate%substring3%5#1",
        "aggregate%substring3%5#1 (copy)",
        "2"
      ]
    },
    "4507": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%extract_uint16%10#1",
        "aggregate%extract_uint16%9#1",
        "aggregate%substring3%5#1",
        "tmp%16#0"
      ],
      "stack_out": [
        "tmp%16#0",
        "aggregate%extract_uint16%9#1",
        "aggregate%substring3%5#1",
        "aggregate%extract_uint16%10#1"
      ]
    },
    "4508": {
      "op": "dig 1",
      "stack_out": [
        "tmp%16#0",
        "aggregate%extract_uint16%9#1",
        "aggregate%substring3%5#1",
        "aggregate%extract_uint16%10#1",
        "aggregate%substring3%5#1 (copy)"
      ]
    },
    "4510": {
      "op": "uncover 3",
      "stack_out": [
        "tmp%16#0",
        "aggregate%substring3%5#1",
        "aggregate%extract_uint16%10#1",
        "aggregate%substring3%5#1 (copy)",
        "aggregate%extract_uint16%9#1"
      ]
    },
    "4512": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%16#0",
        "aggregate%substring3%5#1",
        "aggregate%substring3%5#1 (copy)",
        "aggregate%extract_uint16%9#1",
        "aggregate%extract_uint16%10#1"
      ]
    },
    "4514": {
      "op": "substring3",
      "defined_out": [
        "aggregate%substring3%5#1",
        "aggregate%substring3%6#1",
        "tmp%16#0"
      ],
      "stack_out": [
        "tmp%16#0",
        "aggregate%substring3%5#1",
        "aggregate%substring3%6#1"
      ]
    },
    "4515": {
      "op": "extract 2 0",
      "defined_out": [
        "aggregate%item0%2#1",
        "aggregate%substring3%5#1",
        "tmp%16#0"
      ],
      "stack_out": [
        "tmp%16#0",
        "aggregate%substring3%5#1",
        "aggregate%item0%2#1"
      ]
    },
    "4518": {
      "op": "cover 2",
      "stack_out": [
        "aggregate%item0%2#1",
        "tmp%16#0",
        "aggregate%substring3%5#1"
      ]
    },
    "4520": {
      "op": "dup",
      "stack_out": [
        "aggregate%item0%2#1",
        "tmp%16#0",
        "aggregate%substring3%5#1",
        "aggregate%substring3%5#1 (copy)"
      ]
    },
    "4521": {
      "op": "intc_2 // 2",
      "stack_out": [
        "aggregate%item0%2#1",
        "tmp%16#0",
        "aggregate%substring3%5#1",
        "aggregate%substring3%5#1 (copy)",
        "2"
      ]
    },
    "4522": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%extract_uint16%11#1",
        "aggregate%item0%2#1",
        "aggregate%substring3%5#1",
        "tmp%16#0"
      ],
      "stack_out": [
        "aggregate%item0%2#1",
        "tmp%16#0",
        "aggregate%substring3%5#1",
        "aggregate%extract_uint16%11#1"
      ]
    },
    "4523": {
      "op": "swap",
      "stack_out": [
        "aggregate%item0%2#1",
        "tmp%16#0",
        "aggregate%extract_uint16%11#1",
        "aggregate%substring3%5#1"
      ]
    },
    "4524": {
      "op": "dup",
      "stack_out": [
        "aggregate%item0%2#1",
        "tmp%16#0",
        "aggregate%extract_uint16%11#1",
        "aggregate%substring3%5#1",
        "aggregate%substring3%5#1 (copy)"
      ]
    },
    "4525": {
      "op": "len",
      "defined_out": [
        "aggregate%extract_uint16%11#1",
        "aggregate%item0%2#1",
        "aggregate%len%3#1",
        "aggregate%substring3%5#1",
        "tmp%16#0"
      ],
      "stack_out": [
        "aggregate%item0%2#1",
        "tmp%16#0",
        "aggregate%extract_uint16%11#1",
        "aggregate%substring3%5#1",
        "aggregate%len%3#1"
      ]
    },
    "4526": {
      "op": "swap",
      "stack_out": [
        "aggregate%item0%2#1",
        "tmp%16#0",
        "aggregate%extract_uint16%11#1",
        "aggregate%len%3#1",
        "aggregate%substring3%5#1"
      ]
    },
    "4527": {
      "op": "uncover 2",
      "stack_out": [
        "aggregate%item0%2#1",
        "tmp%16#0",
        "aggregate%len%3#1",
        "aggregate%substring3%5#1",
        "aggregate%extract_uint16%11#1"
      ]
    },
    "4529": {
      "op": "uncover 2",
      "stack_out": [
        "aggregate%item0%2#1",
        "tmp%16#0",
        "aggregate%substring3%5#1",
        "aggregate%extract_uint16%11#1",
        "aggregate%len%3#1"
      ]
    },
    "4531": {
      "op": "substring3",
      "defined_out": [
        "aggregate%item0%2#1",
        "aggregate%substring3%7#1",
        "tmp%16#0"
      ],
      "stack_out": [
        "aggregate%item0%2#1",
        "tmp%16#0",
        "aggregate%substring3%7#1"
      ]
    },
    "4532": {
      "op": "swap",
      "stack_out": [
        "aggregate%item0%2#1",
        "aggregate%substring3%7#1",
        "tmp%16#0"
      ]
    },
    "4533": {
      "op": "dup",
      "stack_out": [
        "aggregate%item0%2#1",
        "aggregate%substring3%7#1",
        "tmp%16#0",
        "tmp%16#0 (copy)"
      ]
    },
    "4534": {
      "op": "intc_2 // 2",
      "stack_out": [
        "aggregate%item0%2#1",
        "aggregate%substring3%7#1",
        "tmp%16#0",
        "tmp%16#0 (copy)",
        "2"
      ]
    },
    "4535": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%extract_uint16%12#1",
        "aggregate%item0%2#1",
        "aggregate%substring3%7#1",
        "tmp%16#0"
      ],
      "stack_out": [
        "aggregate%item0%2#1",
        "aggregate%substring3%7#1",
        "tmp%16#0",
        "aggregate%extract_uint16%12#1"
      ]
    },
    "4536": {
      "op": "swap",
      "stack_out": [
        "aggregate%item0%2#1",
        "aggregate%substring3%7#1",
        "aggregate%extract_uint16%12#1",
        "tmp%16#0"
      ]
    },
    "4537": {
      "op": "dup",
      "stack_out": [
        "aggregate%item0%2#1",
        "aggregate%substring3%7#1",
        "aggregate%extract_uint16%12#1",
        "tmp%16#0",
        "tmp%16#0 (copy)"
      ]
    },
    "4538": {
      "op": "len",
      "defined_out": [
        "aggregate%extract_uint16%12#1",
        "aggregate%item0%2#1",
        "aggregate%len%4#1",
        "aggregate%substring3%7#1",
        "tmp%16#0"
      ],
      "stack_out": [
        "aggregate%item0%2#1",
        "aggregate%substring3%7#1",
        "aggregate%extract_uint16%12#1",
        "tmp%16#0",
        "aggregate%len%4#1"
      ]
    },
    "4539": {
      "op": "swap",
      "stack_out": [
        "aggregate%item0%2#1",
        "aggregate%substring3%7#1",
        "aggregate%extract_uint16%12#1",
        "aggregate%len%4#1",
        "tmp%16#0"
      ]
    },
    "4540": {
      "op": "uncover 2",
      "stack_out": [
        "aggregate%item0%2#1",
        "aggregate%substring3%7#1",
        "aggregate%len%4#1",
        "tmp%16#0",
        "aggregate%extract_uint16%12#1"
      ]
    },
    "4542": {
      "op": "uncover 2",
      "stack_out": [
        "aggregate%item0%2#1",
        "aggregate%substring3%7#1",
        "tmp%16#0",
        "aggregate%extract_uint16%12#1",
        "aggregate%len%4#1"
      ]
    },
    "4544": {
      "op": "substring3",
      "defined_out": [
        "aggregate%item0%2#1",
        "aggregate%substring3%7#1",
        "aggregate%substring3%8#1"
      ],
      "stack_out": [
        "aggregate%item0%2#1",
        "aggregate%substring3%7#1",
        "aggregate%substring3%8#1"
      ]
    },
    "4545": {
      "op": "dup",
      "defined_out": [
        "aggregate%item0%2#1",
        "aggregate%substring3%7#1",
        "aggregate%substring3%8#1",
        "aggregate%substring3%8#1 (copy)"
      ],
      "stack_out": [
        "aggregate%item0%2#1",
        "aggregate%substring3%7#1",
        "aggregate%substring3%8#1",
        "aggregate%substring3%8#1 (copy)"
      ]
    },
    "4546": {
      "op": "intc_0 // 0",
      "stack_out": [
        "aggregate%item0%2#1",
        "aggregate%substring3%7#1",
        "aggregate%substring3%8#1",
        "aggregate%substring3%8#1 (copy)",
        "0"
      ]
    },
    "4547": {
      "op": "pushint 8 // 8",
      "defined_out": [
        "0",
        "8",
        "aggregate%item0%2#1",
        "aggregate%substring3%7#1",
        "aggregate%substring3%8#1",
        "aggregate%substring3%8#1 (copy)"
      ],
      "stack_out": [
        "aggregate%item0%2#1",
        "aggregate%substring3%7#1",
        "aggregate%substring3%8#1",
        "aggregate%substring3%8#1 (copy)",
        "0",
        "8"
      ]
    },
    "4549": {
      "op": "extract3",
      "defined_out": [
        "aggregate%extract%2#1",
        "aggregate%item0%2#1",
        "aggregate%substring3%7#1",
        "aggregate%substring3%8#1"
      ],
      "stack_out": [
        "aggregate%item0%2#1",
        "aggregate%substring3%7#1",
        "aggregate%substring3%8#1",
        "aggregate%extract%2#1"
      ]
    },
    "4550": {
      "op": "btoi",
      "defined_out": [
        "aggregate%item0%2#1",
        "aggregate%item0%3#1",
        "aggregate%substring3%7#1",
        "aggregate%substring3%8#1"
      ],
      "stack_out": [
        "aggregate%item0%2#1",
        "aggregate%substring3%7#1",
        "aggregate%substring3%8#1",
        "aggregate%item0%3#1"
      ]
    },
    "4551": {
      "op": "swap",
      "stack_out": [
        "aggregate%item0%2#1",
        "aggregate%substring3%7#1",
        "aggregate%item0%3#1",
        "aggregate%substring3%8#1"
      ]
    },
    "4552": {
      "op": "dup",
      "stack_out": [
        "aggregate%item0%2#1",
        "aggregate%substring3%7#1",
        "aggregate%item0%3#1",
        "aggregate%substring3%8#1",
        "aggregate%substring3%8#1 (copy)"
      ]
    },
    "4553": {
      "op": "pushint 8 // 8",
      "stack_out": [
        "aggregate%item0%2#1",
        "aggregate%substring3%7#1",
        "aggregate%item0%3#1",
        "aggregate%substring3%8#1",
        "aggregate%substring3%8#1 (copy)",
        "8"
      ]
    },
    "4555": {
      "op": "dup",
      "stack_out": [
        "aggregate%item0%2#1",
        "aggregate%substring3%7#1",
        "aggregate%item0%3#1",
        "aggregate%substring3%8#1",
        "aggregate%substring3%8#1 (copy)",
        "8",
        "8"
      ]
    },
    "4556": {
      "op": "extract3",
      "defined_out": [
        "aggregate%extract%3#1",
        "aggregate%item0%2#1",
        "aggregate%item0%3#1",
        "aggregate%substring3%7#1",
        "aggregate%substring3%8#1"
      ],
      "stack_out": [
        "aggregate%item0%2#1",
        "aggregate%substring3%7#1",
        "aggregate%item0%3#1",
        "aggregate%substring3%8#1",
        "aggregate%extract%3#1"
      ]
    },
    "4557": {
      "op": "swap",
      "stack_out": [
        "aggregate%item0%2#1",
        "aggregate%substring3%7#1",
        "aggregate%item0%3#1",
        "aggregate%extract%3#1",
        "aggregate%substring3%8#1"
      ]
    },
    "4558": {
      "op": "dup",
      "stack_out": [
        "aggregate%item0%2#1",
        "aggregate%substring3%7#1",
        "aggregate%item0%3#1",
        "aggregate%extract%3#1",
        "aggregate%substring3%8#1",
        "aggregate%substring3%8#1 (copy)"
      ]
    },
    "4559": {
      "op": "pushint 16 // 16",
      "defined_out": [
        "16",
        "aggregate%extract%3#1",
        "aggregate%item0%2#1",
        "aggregate%item0%3#1",
        "aggregate%substring3%7#1",
        "aggregate%substring3%8#1",
        "aggregate%substring3%8#1 (copy)"
      ],
      "stack_out": [
        "aggregate%item0%2#1",
        "aggregate%substring3%7#1",
        "aggregate%item0%3#1",
        "aggregate%extract%3#1",
        "aggregate%substring3%8#1",
        "aggregate%substring3%8#1 (copy)",
        "16"
      ]
    },
    "4561": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%extract%3#1",
        "aggregate%extract_uint16%13#1",
        "aggregate%item0%2#1",
        "aggregate%item0%3#1",
        "aggregate%substring3%7#1",
        "aggregate%substring3%8#1"
      ],
      "stack_out": [
        "aggregate%item0%2#1",
        "aggregate%substring3%7#1",
        "aggregate%item0%3#1",
        "aggregate%extract%3#1",
        "aggregate%substring3%8#1",
        "aggregate%extract_uint16%13#1"
      ]
    },
    "4562": {
      "op": "swap",
      "stack_out": [
        "aggregate%item0%2#1",
        "aggregate%substring3%7#1",
        "aggregate%item0%3#1",
        "aggregate%extract%3#1",
        "aggregate%extract_uint16%13#1",
        "aggregate%substring3%8#1"
      ]
    },
    "4563": {
      "op": "dup",
      "stack_out": [
        "aggregate%item0%2#1",
        "aggregate%substring3%7#1",
        "aggregate%item0%3#1",
        "aggregate%extract%3#1",
        "aggregate%extract_uint16%13#1",
        "aggregate%substring3%8#1",
        "aggregate%substring3%8#1 (copy)"
      ]
    },
    "4564": {
      "op": "len",
      "defined_out": [
        "aggregate%extract%3#1",
        "aggregate%extract_uint16%13#1",
        "aggregate%item0%2#1",
        "aggregate%item0%3#1",
        "aggregate%len%5#1",
        "aggregate%substring3%7#1",
        "aggregate%substring3%8#1"
      ],
      "stack_out": [
        "aggregate%item0%2#1",
        "aggregate%substring3%7#1",
        "aggregate%item0%3#1",
        "aggregate%extract%3#1",
        "aggregate%extract_uint16%13#1",
        "aggregate%substring3%8#1",
        "aggregate%len%5#1"
      ]
    },
    "4565": {
      "op": "swap",
      "stack_out": [
        "aggregate%item0%2#1",
        "aggregate%substring3%7#1",
        "aggregate%item0%3#1",
        "aggregate%extract%3#1",
        "aggregate%extract_uint16%13#1",
        "aggregate%len%5#1",
        "aggregate%substring3%8#1"
      ]
    },
    "4566": {
      "op": "uncover 2",
      "stack_out": [
        "aggregate%item0%2#1",
        "aggregate%substring3%7#1",
        "aggregate%item0%3#1",
        "aggregate%extract%3#1",
        "aggregate%len%5#1",
        "aggregate%substring3%8#1",
        "aggregate%extract_uint16%13#1"
      ]
    },
    "4568": {
      "op": "uncover 2",
      "stack_out": [
        "aggregate%item0%2#1",
        "aggregate%substring3%7#1",
        "aggregate%item0%3#1",
        "aggregate%extract%3#1",
        "aggregate%substring3%8#1",
        "aggregate%extract_uint16%13#1",
        "aggregate%len%5#1"
      ]
    },
    "4570": {
      "op": "substring3",
      "defined_out": [
        "aggregate%extract%3#1",
        "aggregate%item0%2#1",
        "aggregate%item0%3#1",
        "aggregate%substring3%7#1",
        "aggregate%substring3%9#1"
      ],
      "stack_out": [
        "aggregate%item0%2#1",
        "aggregate%substring3%7#1",
        "aggregate%item0%3#1",
        "aggregate%extract%3#1",
        "aggregate%substring3%9#1"
      ]
    },
    "4571": {
      "op": "extract 2 0",
      "defined_out": [
        "aggregate%extract%3#1",
        "aggregate%item0%2#1",
        "aggregate%item0%3#1",
        "aggregate%item2%1#1",
        "aggregate%substring3%7#1"
      ],
      "stack_out": [
        "aggregate%item0%2#1",
        "aggregate%substring3%7#1",
        "aggregate%item0%3#1",
        "aggregate%extract%3#1",
        "aggregate%item2%1#1"
      ]
    },
    "4574": {
      "op": "uncover 4",
      "defined_out": [
        "aggregate%extract%3#1",
        "aggregate%item0%3#1",
        "aggregate%item2%1#1",
        "aggregate%substring3%7#1",
        "tmp%19#0"
      ],
      "stack_out": [
        "aggregate%substring3%7#1",
        "aggregate%item0%3#1",
        "aggregate%extract%3#1",
        "aggregate%item2%1#1",
        "tmp%19#0"
      ]
    },
    "4576": {
      "op": "swap",
      "stack_out": [
        "aggregate%substring3%7#1",
        "aggregate%item0%3#1",
        "aggregate%extract%3#1",
        "tmp%19#0",
        "aggregate%item2%1#1"
      ]
    },
    "4577": {
      "op": "uncover 4",
      "defined_out": [
        "aggregate%extract%3#1",
        "aggregate%item0%3#1",
        "aggregate%item2%1#1",
        "tmp%19#0",
        "tmp%20#0"
      ],
      "stack_out": [
        "aggregate%item0%3#1",
        "aggregate%extract%3#1",
        "tmp%19#0",
        "aggregate%item2%1#1",
        "tmp%20#0"
      ]
    },
    "4579": {
      "op": "cover 2",
      "stack_out": [
        "aggregate%item0%3#1",
        "aggregate%extract%3#1",
        "tmp%20#0",
        "tmp%19#0",
        "aggregate%item2%1#1"
      ]
    },
    "4581": {
      "op": "uncover 4",
      "defined_out": [
        "aggregate%extract%3#1",
        "aggregate%item2%1#1",
        "tmp%19#0",
        "tmp%20#0",
        "tmp%21#0"
      ],
      "stack_out": [
        "aggregate%extract%3#1",
        "tmp%20#0",
        "tmp%19#0",
        "aggregate%item2%1#1",
        "tmp%21#0"
      ]
    },
    "4583": {
      "op": "cover 3",
      "defined_out": [
        "tmp%19#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%23#0"
      ],
      "stack_out": [
        "tmp%22#0",
        "tmp%21#0",
        "tmp%20#0",
        "tmp%19#0",
        "tmp%23#0"
      ]
    },
    "4585": {
      "op": "cover 4",
      "defined_out": [
        "result.0.0#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%23#0"
      ],
      "stack_out": [
        "tmp%23#0",
        "tmp%22#0",
        "tmp%21#0",
        "tmp%20#0",
        "result.0.0#0"
      ]
    },
    "4587": {
      "op": "cover 4",
      "defined_out": [
        "result.0.0#0",
        "result.0.1#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%23#0"
      ],
      "stack_out": [
        "result.0.0#0",
        "tmp%23#0",
        "tmp%22#0",
        "tmp%21#0",
        "result.0.1#0"
      ]
    },
    "4589": {
      "op": "cover 4",
      "defined_out": [
        "result.0.0#0",
        "result.0.1#0",
        "result.1.0#0",
        "tmp%22#0",
        "tmp%23#0"
      ],
      "stack_out": [
        "result.0.1#0",
        "result.0.0#0",
        "tmp%23#0",
        "tmp%22#0",
        "result.1.0#0"
      ]
    },
    "4591": {
      "op": "cover 4",
      "defined_out": [
        "result.0.0#0",
        "result.0.1#0",
        "result.1.0#0",
        "result.1.1#0",
        "tmp%23#0"
      ],
      "stack_out": [
        "result.1.0#0",
        "result.0.1#0",
        "result.0.0#0",
        "tmp%23#0",
        "result.1.1#0"
      ]
    },
    "4593": {
      "op": "cover 4",
      "defined_out": [
        "result.0.0#0",
        "result.0.1#0",
        "result.1.0#0",
        "result.1.1#0",
        "result.1.2#0"
      ],
      "stack_out": [
        "result.1.1#0",
        "result.1.0#0",
        "result.0.1#0",
        "result.0.0#0",
        "result.1.2#0"
      ]
    },
    "4595": {
      "op": "cover 4",
      "defined_out": [
        "result.0.1#0",
        "result.1.0#0",
        "result.1.1#0",
        "result.1.2#0",
        "s1#0"
      ],
      "stack_out": [
        "result.1.2#0",
        "result.1.1#0",
        "result.1.0#0",
        "result.0.1#0",
        "s1#0"
      ]
    },
    "4597": {
      "op": "cover 4",
      "defined_out": [
        "result.1.0#0",
        "result.1.1#0",
        "result.1.2#0",
        "s1#0",
        "s2#0"
      ],
      "stack_out": [
        "s1#0",
        "result.1.2#0",
        "result.1.1#0",
        "result.1.0#0",
        "s2#0"
      ]
    },
    "4599": {
      "op": "cover 4",
      "defined_out": [
        "result.1.1#0",
        "result.1.2#0",
        "s1#0",
        "s2#0",
        "u64_1#0"
      ],
      "stack_out": [
        "s2#0",
        "s1#0",
        "result.1.2#0",
        "result.1.1#0",
        "u64_1#0"
      ]
    },
    "4601": {
      "op": "cover 4",
      "defined_out": [
        "result.1.2#0",
        "s1#0",
        "s2#0",
        "u64_1#0",
        "u64_2#0"
      ],
      "stack_out": [
        "u64_1#0",
        "s2#0",
        "s1#0",
        "result.1.2#0",
        "u64_2#0"
      ]
    },
    "4603": {
      "op": "cover 4",
      "defined_out": [
        "bytez#0",
        "s1#0",
        "s2#0",
        "u64_1#0",
        "u64_2#0"
      ],
      "stack_out": [
        "u64_2#0",
        "u64_1#0",
        "s2#0",
        "s1#0",
        "bytez#0"
      ]
    },
    "4605": {
      "op": "cover 4",
      "stack_out": [
        "bytez#0",
        "u64_2#0",
        "u64_1#0",
        "s2#0",
        "s1#0"
      ]
    },
    "4607": {
      "op": "bytec 15 // \"echo: s1\"",
      "defined_out": [
        "\"echo: s1\"",
        "bytez#0",
        "s1#0",
        "s2#0",
        "u64_1#0",
        "u64_2#0"
      ],
      "stack_out": [
        "bytez#0",
        "u64_2#0",
        "u64_1#0",
        "s2#0",
        "s1#0",
        "\"echo: s1\""
      ]
    },
    "4609": {
      "op": "==",
      "defined_out": [
        "bytez#0",
        "s2#0",
        "tmp%24#0",
        "u64_1#0",
        "u64_2#0"
      ],
      "stack_out": [
        "bytez#0",
        "u64_2#0",
        "u64_1#0",
        "s2#0",
        "tmp%24#0"
      ]
    },
    "4610": {
      "op": "assert",
      "stack_out": [
        "bytez#0",
        "u64_2#0",
        "u64_1#0",
        "s2#0"
      ]
    },
    "4611": {
      "op": "bytec 18 // 0x6563686f3a207332",
      "defined_out": [
        "0x6563686f3a207332",
        "bytez#0",
        "s2#0",
        "u64_1#0",
        "u64_2#0"
      ],
      "stack_out": [
        "bytez#0",
        "u64_2#0",
        "u64_1#0",
        "s2#0",
        "0x6563686f3a207332"
      ]
    },
    "4613": {
      "op": "len",
      "defined_out": [
        "aggregate%length%7#1",
        "bytez#0",
        "s2#0",
        "u64_1#0",
        "u64_2#0"
      ],
      "stack_out": [
        "bytez#0",
        "u64_2#0",
        "u64_1#0",
        "s2#0",
        "aggregate%length%7#1"
      ]
    },
    "4614": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%17#1",
        "bytez#0",
        "s2#0",
        "u64_1#0",
        "u64_2#0"
      ],
      "stack_out": [
        "bytez#0",
        "u64_2#0",
        "u64_1#0",
        "s2#0",
        "aggregate%as_bytes%17#1"
      ]
    },
    "4615": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%length_uint16%7#1",
        "bytez#0",
        "s2#0",
        "u64_1#0",
        "u64_2#0"
      ],
      "stack_out": [
        "bytez#0",
        "u64_2#0",
        "u64_1#0",
        "s2#0",
        "aggregate%length_uint16%7#1"
      ]
    },
    "4618": {
      "op": "bytec 18 // 0x6563686f3a207332",
      "stack_out": [
        "bytez#0",
        "u64_2#0",
        "u64_1#0",
        "s2#0",
        "aggregate%length_uint16%7#1",
        "0x6563686f3a207332"
      ]
    },
    "4620": {
      "op": "concat",
      "defined_out": [
        "bytez#0",
        "encoded%4#0",
        "s2#0",
        "u64_1#0",
        "u64_2#0"
      ],
      "stack_out": [
        "bytez#0",
        "u64_2#0",
        "u64_1#0",
        "s2#0",
        "encoded%4#0"
      ]
    },
    "4621": {
      "op": "==",
      "defined_out": [
        "bytez#0",
        "tmp%25#0",
        "u64_1#0",
        "u64_2#0"
      ],
      "stack_out": [
        "bytez#0",
        "u64_2#0",
        "u64_1#0",
        "tmp%25#0"
      ]
    },
    "4622": {
      "op": "assert",
      "stack_out": [
        "bytez#0",
        "u64_2#0",
        "u64_1#0"
      ]
    },
    "4623": {
      "op": "intc_2 // 2",
      "stack_out": [
        "bytez#0",
        "u64_2#0",
        "u64_1#0",
        "2"
      ]
    },
    "4624": {
      "op": "==",
      "defined_out": [
        "bytez#0",
        "tmp%26#0",
        "u64_2#0"
      ],
      "stack_out": [
        "bytez#0",
        "u64_2#0",
        "tmp%26#0"
      ]
    },
    "4625": {
      "op": "assert",
      "defined_out": [
        "bytez#0",
        "reinterpret_biguint%2#0"
      ],
      "stack_out": [
        "bytez#0",
        "reinterpret_biguint%2#0"
      ]
    },
    "4626": {
      "op": "bytec 21 // 0x0000000000000003",
      "defined_out": [
        "0x0000000000000003",
        "bytez#0",
        "reinterpret_biguint%2#0"
      ],
      "stack_out": [
        "bytez#0",
        "reinterpret_biguint%2#0",
        "0x0000000000000003"
      ]
    },
    "4628": {
      "op": "b==",
      "defined_out": [
        "bytez#0",
        "tmp%27#0"
      ],
      "stack_out": [
        "bytez#0",
        "tmp%27#0"
      ]
    },
    "4629": {
      "op": "assert",
      "stack_out": [
        "bytez#0"
      ]
    },
    "4630": {
      "op": "bytec 52 // 0x6563686f3a2033",
      "defined_out": [
        "0x6563686f3a2033",
        "bytez#0"
      ],
      "stack_out": [
        "bytez#0",
        "0x6563686f3a2033"
      ]
    },
    "4632": {
      "op": "==",
      "defined_out": [
        "tmp%28#0"
      ],
      "stack_out": [
        "tmp%28#0"
      ]
    },
    "4633": {
      "op": "assert",
      "stack_out": []
    },
    "4634": {
      "op": "itxn_begin"
    },
    "4635": {
      "op": "bytec 53 // 0x733162",
      "defined_out": [
        "0x733162"
      ],
      "stack_out": [
        "0x733162"
      ]
    },
    "4637": {
      "op": "len",
      "defined_out": [
        "aggregate%length%8#1"
      ],
      "stack_out": [
        "aggregate%length%8#1"
      ]
    },
    "4638": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%18#1"
      ],
      "stack_out": [
        "aggregate%as_bytes%18#1"
      ]
    },
    "4639": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%length_uint16%8#1"
      ],
      "stack_out": [
        "aggregate%length_uint16%8#1"
      ]
    },
    "4642": {
      "op": "bytec 53 // 0x733162",
      "stack_out": [
        "aggregate%length_uint16%8#1",
        "0x733162"
      ]
    },
    "4644": {
      "op": "concat",
      "defined_out": [
        "encoded%5#0"
      ],
      "stack_out": [
        "encoded%5#0"
      ]
    },
    "4645": {
      "op": "bytec 54 // 0x733262",
      "defined_out": [
        "0x733262",
        "encoded%5#0"
      ],
      "stack_out": [
        "encoded%5#0",
        "0x733262"
      ]
    },
    "4647": {
      "op": "len",
      "defined_out": [
        "aggregate%length%9#1",
        "encoded%5#0"
      ],
      "stack_out": [
        "encoded%5#0",
        "aggregate%length%9#1"
      ]
    },
    "4648": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%19#1",
        "encoded%5#0"
      ],
      "stack_out": [
        "encoded%5#0",
        "aggregate%as_bytes%19#1"
      ]
    },
    "4649": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%length_uint16%9#1",
        "encoded%5#0"
      ],
      "stack_out": [
        "encoded%5#0",
        "aggregate%length_uint16%9#1"
      ]
    },
    "4652": {
      "op": "bytec 54 // 0x733262",
      "stack_out": [
        "encoded%5#0",
        "aggregate%length_uint16%9#1",
        "0x733262"
      ]
    },
    "4654": {
      "op": "concat",
      "defined_out": [
        "encoded%5#0",
        "encoded%6#0"
      ],
      "stack_out": [
        "encoded%5#0",
        "encoded%6#0"
      ]
    },
    "4655": {
      "op": "swap",
      "stack_out": [
        "encoded%6#0",
        "encoded%5#0"
      ]
    },
    "4656": {
      "op": "pushint 4 // 4",
      "defined_out": [
        "4",
        "encoded%5#0",
        "encoded%6#0"
      ],
      "stack_out": [
        "encoded%6#0",
        "encoded%5#0",
        "4"
      ]
    },
    "4658": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%20#1",
        "encoded%5#0",
        "encoded%6#0"
      ],
      "stack_out": [
        "encoded%6#0",
        "encoded%5#0",
        "aggregate%as_bytes%20#1"
      ]
    },
    "4659": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%offset_as_uint16%10#1",
        "encoded%5#0",
        "encoded%6#0"
      ],
      "stack_out": [
        "encoded%6#0",
        "encoded%5#0",
        "aggregate%offset_as_uint16%10#1"
      ]
    },
    "4662": {
      "op": "bytec_2 // 0x",
      "defined_out": [
        "0x",
        "aggregate%offset_as_uint16%10#1",
        "encoded%5#0",
        "encoded%6#0"
      ],
      "stack_out": [
        "encoded%6#0",
        "encoded%5#0",
        "aggregate%offset_as_uint16%10#1",
        "0x"
      ]
    },
    "4663": {
      "op": "swap",
      "stack_out": [
        "encoded%6#0",
        "encoded%5#0",
        "0x",
        "aggregate%offset_as_uint16%10#1"
      ]
    },
    "4664": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%14#1",
        "encoded%5#0",
        "encoded%6#0"
      ],
      "stack_out": [
        "encoded%6#0",
        "encoded%5#0",
        "aggregate%head%14#1"
      ]
    },
    "4665": {
      "op": "dig 1",
      "defined_out": [
        "aggregate%head%14#1",
        "encoded%5#0",
        "encoded%5#0 (copy)",
        "encoded%6#0"
      ],
      "stack_out": [
        "encoded%6#0",
        "encoded%5#0",
        "aggregate%head%14#1",
        "encoded%5#0 (copy)"
      ]
    },
    "4667": {
      "op": "len",
      "defined_out": [
        "aggregate%data_length%10#1",
        "aggregate%head%14#1",
        "encoded%5#0",
        "encoded%6#0"
      ],
      "stack_out": [
        "encoded%6#0",
        "encoded%5#0",
        "aggregate%head%14#1",
        "aggregate%data_length%10#1"
      ]
    },
    "4668": {
      "op": "pushint 4 // 4",
      "stack_out": [
        "encoded%6#0",
        "encoded%5#0",
        "aggregate%head%14#1",
        "aggregate%data_length%10#1",
        "4"
      ]
    },
    "4670": {
      "op": "+",
      "defined_out": [
        "aggregate%current_tail_offset%10#1",
        "aggregate%head%14#1",
        "encoded%5#0",
        "encoded%6#0"
      ],
      "stack_out": [
        "encoded%6#0",
        "encoded%5#0",
        "aggregate%head%14#1",
        "aggregate%current_tail_offset%10#1"
      ]
    },
    "4671": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%21#1",
        "aggregate%head%14#1",
        "encoded%5#0",
        "encoded%6#0"
      ],
      "stack_out": [
        "encoded%6#0",
        "encoded%5#0",
        "aggregate%head%14#1",
        "aggregate%as_bytes%21#1"
      ]
    },
    "4672": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%head%14#1",
        "aggregate%offset_as_uint16%11#1",
        "encoded%5#0",
        "encoded%6#0"
      ],
      "stack_out": [
        "encoded%6#0",
        "encoded%5#0",
        "aggregate%head%14#1",
        "aggregate%offset_as_uint16%11#1"
      ]
    },
    "4675": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%15#1",
        "encoded%5#0",
        "encoded%6#0"
      ],
      "stack_out": [
        "encoded%6#0",
        "encoded%5#0",
        "aggregate%head%15#1"
      ]
    },
    "4676": {
      "op": "swap",
      "stack_out": [
        "encoded%6#0",
        "aggregate%head%15#1",
        "encoded%5#0"
      ]
    },
    "4677": {
      "op": "concat",
      "defined_out": [
        "aggregate%concat%10#1",
        "encoded%6#0"
      ],
      "stack_out": [
        "encoded%6#0",
        "aggregate%concat%10#1"
      ]
    },
    "4678": {
      "op": "swap",
      "stack_out": [
        "aggregate%concat%10#1",
        "encoded%6#0"
      ]
    },
    "4679": {
      "op": "concat",
      "defined_out": [
        "tmp%29#0"
      ],
      "stack_out": [
        "tmp%29#0"
      ]
    },
    "4680": {
      "op": "bytec 55 // 0x3362",
      "defined_out": [
        "0x3362",
        "tmp%29#0"
      ],
      "stack_out": [
        "tmp%29#0",
        "0x3362"
      ]
    },
    "4682": {
      "op": "len",
      "defined_out": [
        "aggregate%length%10#1",
        "tmp%29#0"
      ],
      "stack_out": [
        "tmp%29#0",
        "aggregate%length%10#1"
      ]
    },
    "4683": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%22#1",
        "tmp%29#0"
      ],
      "stack_out": [
        "tmp%29#0",
        "aggregate%as_bytes%22#1"
      ]
    },
    "4684": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%length_uint16%10#1",
        "tmp%29#0"
      ],
      "stack_out": [
        "tmp%29#0",
        "aggregate%length_uint16%10#1"
      ]
    },
    "4687": {
      "op": "bytec 55 // 0x3362",
      "stack_out": [
        "tmp%29#0",
        "aggregate%length_uint16%10#1",
        "0x3362"
      ]
    },
    "4689": {
      "op": "concat",
      "defined_out": [
        "tmp%29#0",
        "tmp%30#0"
      ],
      "stack_out": [
        "tmp%29#0",
        "tmp%30#0"
      ]
    },
    "4690": {
      "op": "bytec_2 // 0x",
      "stack_out": [
        "tmp%29#0",
        "tmp%30#0",
        "0x"
      ]
    },
    "4691": {
      "op": "bytec 50 // 0x000000000000000b",
      "defined_out": [
        "0x",
        "0x000000000000000b",
        "tmp%29#0",
        "tmp%30#0"
      ],
      "stack_out": [
        "tmp%29#0",
        "tmp%30#0",
        "0x",
        "0x000000000000000b"
      ]
    },
    "4693": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%16#1",
        "tmp%29#0",
        "tmp%30#0"
      ],
      "stack_out": [
        "tmp%29#0",
        "tmp%30#0",
        "aggregate%head%16#1"
      ]
    },
    "4694": {
      "op": "pushbytes 0x0000000000000015",
      "defined_out": [
        "0x0000000000000015",
        "aggregate%head%16#1",
        "tmp%29#0",
        "tmp%30#0"
      ],
      "stack_out": [
        "tmp%29#0",
        "tmp%30#0",
        "aggregate%head%16#1",
        "0x0000000000000015"
      ]
    },
    "4704": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%17#1",
        "tmp%29#0",
        "tmp%30#0"
      ],
      "stack_out": [
        "tmp%29#0",
        "tmp%30#0",
        "aggregate%head%17#1"
      ]
    },
    "4705": {
      "op": "pushint 18 // 18",
      "defined_out": [
        "18",
        "aggregate%head%17#1",
        "tmp%29#0",
        "tmp%30#0"
      ],
      "stack_out": [
        "tmp%29#0",
        "tmp%30#0",
        "aggregate%head%17#1",
        "18"
      ]
    },
    "4707": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%23#1",
        "aggregate%head%17#1",
        "tmp%29#0",
        "tmp%30#0"
      ],
      "stack_out": [
        "tmp%29#0",
        "tmp%30#0",
        "aggregate%head%17#1",
        "aggregate%as_bytes%23#1"
      ]
    },
    "4708": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%head%17#1",
        "aggregate%offset_as_uint16%12#1",
        "tmp%29#0",
        "tmp%30#0"
      ],
      "stack_out": [
        "tmp%29#0",
        "tmp%30#0",
        "aggregate%head%17#1",
        "aggregate%offset_as_uint16%12#1"
      ]
    },
    "4711": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%18#1",
        "tmp%29#0",
        "tmp%30#0"
      ],
      "stack_out": [
        "tmp%29#0",
        "tmp%30#0",
        "aggregate%head%18#1"
      ]
    },
    "4712": {
      "op": "swap",
      "stack_out": [
        "tmp%29#0",
        "aggregate%head%18#1",
        "tmp%30#0"
      ]
    },
    "4713": {
      "op": "concat",
      "defined_out": [
        "tmp%29#0",
        "tmp%31#0"
      ],
      "stack_out": [
        "tmp%29#0",
        "tmp%31#0"
      ]
    },
    "4714": {
      "op": "pushint 4 // 4",
      "stack_out": [
        "tmp%29#0",
        "tmp%31#0",
        "4"
      ]
    },
    "4716": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%24#1",
        "tmp%29#0",
        "tmp%31#0"
      ],
      "stack_out": [
        "tmp%29#0",
        "tmp%31#0",
        "aggregate%as_bytes%24#1"
      ]
    },
    "4717": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%offset_as_uint16%13#1",
        "tmp%29#0",
        "tmp%31#0"
      ],
      "stack_out": [
        "tmp%29#0",
        "tmp%31#0",
        "aggregate%offset_as_uint16%13#1"
      ]
    },
    "4720": {
      "op": "bytec_2 // 0x",
      "stack_out": [
        "tmp%29#0",
        "tmp%31#0",
        "aggregate%offset_as_uint16%13#1",
        "0x"
      ]
    },
    "4721": {
      "op": "swap",
      "stack_out": [
        "tmp%29#0",
        "tmp%31#0",
        "0x",
        "aggregate%offset_as_uint16%13#1"
      ]
    },
    "4722": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%19#1",
        "tmp%29#0",
        "tmp%31#0"
      ],
      "stack_out": [
        "tmp%29#0",
        "tmp%31#0",
        "aggregate%head%19#1"
      ]
    },
    "4723": {
      "op": "dig 2",
      "defined_out": [
        "aggregate%head%19#1",
        "tmp%29#0",
        "tmp%29#0 (copy)",
        "tmp%31#0"
      ],
      "stack_out": [
        "tmp%29#0",
        "tmp%31#0",
        "aggregate%head%19#1",
        "tmp%29#0 (copy)"
      ]
    },
    "4725": {
      "op": "len",
      "defined_out": [
        "aggregate%data_length%13#1",
        "aggregate%head%19#1",
        "tmp%29#0",
        "tmp%31#0"
      ],
      "stack_out": [
        "tmp%29#0",
        "tmp%31#0",
        "aggregate%head%19#1",
        "aggregate%data_length%13#1"
      ]
    },
    "4726": {
      "op": "pushint 4 // 4",
      "stack_out": [
        "tmp%29#0",
        "tmp%31#0",
        "aggregate%head%19#1",
        "aggregate%data_length%13#1",
        "4"
      ]
    },
    "4728": {
      "op": "+",
      "defined_out": [
        "aggregate%current_tail_offset%13#1",
        "aggregate%head%19#1",
        "tmp%29#0",
        "tmp%31#0"
      ],
      "stack_out": [
        "tmp%29#0",
        "tmp%31#0",
        "aggregate%head%19#1",
        "aggregate%current_tail_offset%13#1"
      ]
    },
    "4729": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%25#1",
        "aggregate%head%19#1",
        "tmp%29#0",
        "tmp%31#0"
      ],
      "stack_out": [
        "tmp%29#0",
        "tmp%31#0",
        "aggregate%head%19#1",
        "aggregate%as_bytes%25#1"
      ]
    },
    "4730": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%head%19#1",
        "aggregate%offset_as_uint16%14#1",
        "tmp%29#0",
        "tmp%31#0"
      ],
      "stack_out": [
        "tmp%29#0",
        "tmp%31#0",
        "aggregate%head%19#1",
        "aggregate%offset_as_uint16%14#1"
      ]
    },
    "4733": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%20#1",
        "tmp%29#0",
        "tmp%31#0"
      ],
      "stack_out": [
        "tmp%29#0",
        "tmp%31#0",
        "aggregate%head%20#1"
      ]
    },
    "4734": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%31#0",
        "aggregate%head%20#1",
        "tmp%29#0"
      ]
    },
    "4736": {
      "op": "concat",
      "defined_out": [
        "aggregate%concat%13#1",
        "tmp%31#0"
      ],
      "stack_out": [
        "tmp%31#0",
        "aggregate%concat%13#1"
      ]
    },
    "4737": {
      "op": "swap",
      "stack_out": [
        "aggregate%concat%13#1",
        "tmp%31#0"
      ]
    },
    "4738": {
      "op": "concat",
      "defined_out": [
        "inner_txn_params%2%%param_ApplicationArgs_idx_1#0"
      ],
      "stack_out": [
        "inner_txn_params%2%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "4739": {
      "op": "frame_dig -1",
      "defined_out": [
        "inner_txn_params%2%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%2%%param_ApplicationID_idx_0#0"
      ],
      "stack_out": [
        "inner_txn_params%2%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%2%%param_ApplicationID_idx_0#0"
      ]
    },
    "4741": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "inner_txn_params%2%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "4743": {
      "op": "bytec 31 // method \"echo_nested_tuple(((string,string),(uint64,uint64,byte[])))((string,string),(uint64,uint64,byte[]))\"",
      "defined_out": [
        "Method(echo_nested_tuple(((string,string),(uint64,uint64,byte[])))((string,string),(uint64,uint64,byte[])))",
        "inner_txn_params%2%%param_ApplicationArgs_idx_1#0"
      ],
      "stack_out": [
        "inner_txn_params%2%%param_ApplicationArgs_idx_1#0",
        "Method(echo_nested_tuple(((string,string),(uint64,uint64,byte[])))((string,string),(uint64,uint64,byte[])))"
      ]
    },
    "4745": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "inner_txn_params%2%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "4747": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "4749": {
      "op": "intc_1 // appl",
      "defined_out": [
        "appl"
      ],
      "stack_out": [
        "appl"
      ]
    },
    "4750": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "4752": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0"
      ]
    },
    "4753": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "4755": {
      "block": "test_nested_tuples_next_txn@3",
      "stack_in": [],
      "op": "itxn_submit"
    },
    "4756": {
      "op": "itxn LastLog",
      "defined_out": [
        "awst_tmp%2#0"
      ],
      "stack_out": [
        "awst_tmp%2#0"
      ]
    },
    "4758": {
      "op": "dup",
      "defined_out": [
        "awst_tmp%2#0",
        "awst_tmp%2#0 (copy)"
      ],
      "stack_out": [
        "awst_tmp%2#0",
        "awst_tmp%2#0 (copy)"
      ]
    },
    "4759": {
      "op": "extract 4 0",
      "defined_out": [
        "awst_tmp%2#0",
        "tmp%33#0"
      ],
      "stack_out": [
        "awst_tmp%2#0",
        "tmp%33#0"
      ]
    },
    "4762": {
      "op": "swap",
      "stack_out": [
        "tmp%33#0",
        "awst_tmp%2#0"
      ]
    },
    "4763": {
      "op": "extract 0 4",
      "defined_out": [
        "tmp%33#0",
        "tmp%34#0"
      ],
      "stack_out": [
        "tmp%33#0",
        "tmp%34#0"
      ]
    },
    "4766": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%33#0",
        "tmp%34#0"
      ],
      "stack_out": [
        "tmp%33#0",
        "tmp%34#0",
        "0x151f7c75"
      ]
    },
    "4767": {
      "op": "==",
      "defined_out": [
        "tmp%33#0",
        "tmp%35#0"
      ],
      "stack_out": [
        "tmp%33#0",
        "tmp%35#0"
      ]
    },
    "4768": {
      "error": "application log value is not the result of an ABI return",
      "op": "assert // application log value is not the result of an ABI return",
      "stack_out": [
        "tmp%33#0"
      ]
    },
    "4769": {
      "op": "dup",
      "defined_out": [
        "tmp%33#0",
        "tmp%33#0 (copy)"
      ],
      "stack_out": [
        "tmp%33#0",
        "tmp%33#0 (copy)"
      ]
    },
    "4770": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%33#0",
        "tmp%33#0 (copy)"
      ],
      "stack_out": [
        "tmp%33#0",
        "tmp%33#0 (copy)",
        "0"
      ]
    },
    "4771": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%extract_uint16%14#1",
        "tmp%33#0"
      ],
      "stack_out": [
        "tmp%33#0",
        "aggregate%extract_uint16%14#1"
      ]
    },
    "4772": {
      "op": "swap",
      "stack_out": [
        "aggregate%extract_uint16%14#1",
        "tmp%33#0"
      ]
    },
    "4773": {
      "op": "dup",
      "stack_out": [
        "aggregate%extract_uint16%14#1",
        "tmp%33#0",
        "tmp%33#0 (copy)"
      ]
    },
    "4774": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "aggregate%extract_uint16%14#1",
        "tmp%33#0",
        "tmp%33#0 (copy)"
      ],
      "stack_out": [
        "aggregate%extract_uint16%14#1",
        "tmp%33#0",
        "tmp%33#0 (copy)",
        "2"
      ]
    },
    "4775": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%extract_uint16%14#1",
        "aggregate%extract_uint16%15#1",
        "tmp%33#0"
      ],
      "stack_out": [
        "aggregate%extract_uint16%14#1",
        "tmp%33#0",
        "aggregate%extract_uint16%15#1"
      ]
    },
    "4776": {
      "op": "dig 1",
      "stack_out": [
        "aggregate%extract_uint16%14#1",
        "tmp%33#0",
        "aggregate%extract_uint16%15#1",
        "tmp%33#0 (copy)"
      ]
    },
    "4778": {
      "op": "uncover 3",
      "stack_out": [
        "tmp%33#0",
        "aggregate%extract_uint16%15#1",
        "tmp%33#0 (copy)",
        "aggregate%extract_uint16%14#1"
      ]
    },
    "4780": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%33#0",
        "tmp%33#0 (copy)",
        "aggregate%extract_uint16%14#1",
        "aggregate%extract_uint16%15#1"
      ]
    },
    "4782": {
      "op": "substring3",
      "defined_out": [
        "aggregate%substring3%10#1",
        "tmp%33#0"
      ],
      "stack_out": [
        "tmp%33#0",
        "aggregate%substring3%10#1"
      ]
    },
    "4783": {
      "op": "dup",
      "defined_out": [
        "aggregate%substring3%10#1",
        "aggregate%substring3%10#1 (copy)",
        "tmp%33#0"
      ],
      "stack_out": [
        "tmp%33#0",
        "aggregate%substring3%10#1",
        "aggregate%substring3%10#1 (copy)"
      ]
    },
    "4784": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%33#0",
        "aggregate%substring3%10#1",
        "aggregate%substring3%10#1 (copy)",
        "0"
      ]
    },
    "4785": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%extract_uint16%16#1",
        "aggregate%substring3%10#1",
        "tmp%33#0"
      ],
      "stack_out": [
        "tmp%33#0",
        "aggregate%substring3%10#1",
        "aggregate%extract_uint16%16#1"
      ]
    },
    "4786": {
      "op": "swap",
      "stack_out": [
        "tmp%33#0",
        "aggregate%extract_uint16%16#1",
        "aggregate%substring3%10#1"
      ]
    },
    "4787": {
      "op": "dup",
      "stack_out": [
        "tmp%33#0",
        "aggregate%extract_uint16%16#1",
        "aggregate%substring3%10#1",
        "aggregate%substring3%10#1 (copy)"
      ]
    },
    "4788": {
      "op": "intc_2 // 2",
      "stack_out": [
        "tmp%33#0",
        "aggregate%extract_uint16%16#1",
        "aggregate%substring3%10#1",
        "aggregate%substring3%10#1 (copy)",
        "2"
      ]
    },
    "4789": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%extract_uint16%16#1",
        "aggregate%extract_uint16%17#1",
        "aggregate%substring3%10#1",
        "tmp%33#0"
      ],
      "stack_out": [
        "tmp%33#0",
        "aggregate%extract_uint16%16#1",
        "aggregate%substring3%10#1",
        "aggregate%extract_uint16%17#1"
      ]
    },
    "4790": {
      "op": "dig 1",
      "stack_out": [
        "tmp%33#0",
        "aggregate%extract_uint16%16#1",
        "aggregate%substring3%10#1",
        "aggregate%extract_uint16%17#1",
        "aggregate%substring3%10#1 (copy)"
      ]
    },
    "4792": {
      "op": "uncover 3",
      "stack_out": [
        "tmp%33#0",
        "aggregate%substring3%10#1",
        "aggregate%extract_uint16%17#1",
        "aggregate%substring3%10#1 (copy)",
        "aggregate%extract_uint16%16#1"
      ]
    },
    "4794": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%33#0",
        "aggregate%substring3%10#1",
        "aggregate%substring3%10#1 (copy)",
        "aggregate%extract_uint16%16#1",
        "aggregate%extract_uint16%17#1"
      ]
    },
    "4796": {
      "op": "substring3",
      "defined_out": [
        "aggregate%substring3%10#1",
        "aggregate%substring3%11#1",
        "tmp%33#0"
      ],
      "stack_out": [
        "tmp%33#0",
        "aggregate%substring3%10#1",
        "aggregate%substring3%11#1"
      ]
    },
    "4797": {
      "op": "extract 2 0",
      "defined_out": [
        "aggregate%item0%4#1",
        "aggregate%substring3%10#1",
        "tmp%33#0"
      ],
      "stack_out": [
        "tmp%33#0",
        "aggregate%substring3%10#1",
        "aggregate%item0%4#1"
      ]
    },
    "4800": {
      "op": "cover 2",
      "stack_out": [
        "aggregate%item0%4#1",
        "tmp%33#0",
        "aggregate%substring3%10#1"
      ]
    },
    "4802": {
      "op": "dup",
      "stack_out": [
        "aggregate%item0%4#1",
        "tmp%33#0",
        "aggregate%substring3%10#1",
        "aggregate%substring3%10#1 (copy)"
      ]
    },
    "4803": {
      "op": "intc_2 // 2",
      "stack_out": [
        "aggregate%item0%4#1",
        "tmp%33#0",
        "aggregate%substring3%10#1",
        "aggregate%substring3%10#1 (copy)",
        "2"
      ]
    },
    "4804": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%extract_uint16%18#1",
        "aggregate%item0%4#1",
        "aggregate%substring3%10#1",
        "tmp%33#0"
      ],
      "stack_out": [
        "aggregate%item0%4#1",
        "tmp%33#0",
        "aggregate%substring3%10#1",
        "aggregate%extract_uint16%18#1"
      ]
    },
    "4805": {
      "op": "swap",
      "stack_out": [
        "aggregate%item0%4#1",
        "tmp%33#0",
        "aggregate%extract_uint16%18#1",
        "aggregate%substring3%10#1"
      ]
    },
    "4806": {
      "op": "dup",
      "stack_out": [
        "aggregate%item0%4#1",
        "tmp%33#0",
        "aggregate%extract_uint16%18#1",
        "aggregate%substring3%10#1",
        "aggregate%substring3%10#1 (copy)"
      ]
    },
    "4807": {
      "op": "len",
      "defined_out": [
        "aggregate%extract_uint16%18#1",
        "aggregate%item0%4#1",
        "aggregate%len%6#1",
        "aggregate%substring3%10#1",
        "tmp%33#0"
      ],
      "stack_out": [
        "aggregate%item0%4#1",
        "tmp%33#0",
        "aggregate%extract_uint16%18#1",
        "aggregate%substring3%10#1",
        "aggregate%len%6#1"
      ]
    },
    "4808": {
      "op": "swap",
      "stack_out": [
        "aggregate%item0%4#1",
        "tmp%33#0",
        "aggregate%extract_uint16%18#1",
        "aggregate%len%6#1",
        "aggregate%substring3%10#1"
      ]
    },
    "4809": {
      "op": "uncover 2",
      "stack_out": [
        "aggregate%item0%4#1",
        "tmp%33#0",
        "aggregate%len%6#1",
        "aggregate%substring3%10#1",
        "aggregate%extract_uint16%18#1"
      ]
    },
    "4811": {
      "op": "uncover 2",
      "stack_out": [
        "aggregate%item0%4#1",
        "tmp%33#0",
        "aggregate%substring3%10#1",
        "aggregate%extract_uint16%18#1",
        "aggregate%len%6#1"
      ]
    },
    "4813": {
      "op": "substring3",
      "defined_out": [
        "aggregate%item0%4#1",
        "aggregate%substring3%12#1",
        "tmp%33#0"
      ],
      "stack_out": [
        "aggregate%item0%4#1",
        "tmp%33#0",
        "aggregate%substring3%12#1"
      ]
    },
    "4814": {
      "op": "swap",
      "stack_out": [
        "aggregate%item0%4#1",
        "aggregate%substring3%12#1",
        "tmp%33#0"
      ]
    },
    "4815": {
      "op": "dup",
      "stack_out": [
        "aggregate%item0%4#1",
        "aggregate%substring3%12#1",
        "tmp%33#0",
        "tmp%33#0 (copy)"
      ]
    },
    "4816": {
      "op": "intc_2 // 2",
      "stack_out": [
        "aggregate%item0%4#1",
        "aggregate%substring3%12#1",
        "tmp%33#0",
        "tmp%33#0 (copy)",
        "2"
      ]
    },
    "4817": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%extract_uint16%19#1",
        "aggregate%item0%4#1",
        "aggregate%substring3%12#1",
        "tmp%33#0"
      ],
      "stack_out": [
        "aggregate%item0%4#1",
        "aggregate%substring3%12#1",
        "tmp%33#0",
        "aggregate%extract_uint16%19#1"
      ]
    },
    "4818": {
      "op": "swap",
      "stack_out": [
        "aggregate%item0%4#1",
        "aggregate%substring3%12#1",
        "aggregate%extract_uint16%19#1",
        "tmp%33#0"
      ]
    },
    "4819": {
      "op": "dup",
      "stack_out": [
        "aggregate%item0%4#1",
        "aggregate%substring3%12#1",
        "aggregate%extract_uint16%19#1",
        "tmp%33#0",
        "tmp%33#0 (copy)"
      ]
    },
    "4820": {
      "op": "len",
      "defined_out": [
        "aggregate%extract_uint16%19#1",
        "aggregate%item0%4#1",
        "aggregate%len%7#1",
        "aggregate%substring3%12#1",
        "tmp%33#0"
      ],
      "stack_out": [
        "aggregate%item0%4#1",
        "aggregate%substring3%12#1",
        "aggregate%extract_uint16%19#1",
        "tmp%33#0",
        "aggregate%len%7#1"
      ]
    },
    "4821": {
      "op": "swap",
      "stack_out": [
        "aggregate%item0%4#1",
        "aggregate%substring3%12#1",
        "aggregate%extract_uint16%19#1",
        "aggregate%len%7#1",
        "tmp%33#0"
      ]
    },
    "4822": {
      "op": "uncover 2",
      "stack_out": [
        "aggregate%item0%4#1",
        "aggregate%substring3%12#1",
        "aggregate%len%7#1",
        "tmp%33#0",
        "aggregate%extract_uint16%19#1"
      ]
    },
    "4824": {
      "op": "uncover 2",
      "stack_out": [
        "aggregate%item0%4#1",
        "aggregate%substring3%12#1",
        "tmp%33#0",
        "aggregate%extract_uint16%19#1",
        "aggregate%len%7#1"
      ]
    },
    "4826": {
      "op": "substring3",
      "defined_out": [
        "aggregate%item0%4#1",
        "aggregate%substring3%12#1",
        "aggregate%substring3%13#1"
      ],
      "stack_out": [
        "aggregate%item0%4#1",
        "aggregate%substring3%12#1",
        "aggregate%substring3%13#1"
      ]
    },
    "4827": {
      "op": "dup",
      "defined_out": [
        "aggregate%item0%4#1",
        "aggregate%substring3%12#1",
        "aggregate%substring3%13#1",
        "aggregate%substring3%13#1 (copy)"
      ],
      "stack_out": [
        "aggregate%item0%4#1",
        "aggregate%substring3%12#1",
        "aggregate%substring3%13#1",
        "aggregate%substring3%13#1 (copy)"
      ]
    },
    "4828": {
      "op": "intc_0 // 0",
      "stack_out": [
        "aggregate%item0%4#1",
        "aggregate%substring3%12#1",
        "aggregate%substring3%13#1",
        "aggregate%substring3%13#1 (copy)",
        "0"
      ]
    },
    "4829": {
      "op": "pushint 8 // 8",
      "defined_out": [
        "0",
        "8",
        "aggregate%item0%4#1",
        "aggregate%substring3%12#1",
        "aggregate%substring3%13#1",
        "aggregate%substring3%13#1 (copy)"
      ],
      "stack_out": [
        "aggregate%item0%4#1",
        "aggregate%substring3%12#1",
        "aggregate%substring3%13#1",
        "aggregate%substring3%13#1 (copy)",
        "0",
        "8"
      ]
    },
    "4831": {
      "op": "extract3",
      "defined_out": [
        "aggregate%extract%4#1",
        "aggregate%item0%4#1",
        "aggregate%substring3%12#1",
        "aggregate%substring3%13#1"
      ],
      "stack_out": [
        "aggregate%item0%4#1",
        "aggregate%substring3%12#1",
        "aggregate%substring3%13#1",
        "aggregate%extract%4#1"
      ]
    },
    "4832": {
      "op": "btoi",
      "defined_out": [
        "aggregate%item0%4#1",
        "aggregate%item0%5#1",
        "aggregate%substring3%12#1",
        "aggregate%substring3%13#1"
      ],
      "stack_out": [
        "aggregate%item0%4#1",
        "aggregate%substring3%12#1",
        "aggregate%substring3%13#1",
        "aggregate%item0%5#1"
      ]
    },
    "4833": {
      "op": "swap",
      "stack_out": [
        "aggregate%item0%4#1",
        "aggregate%substring3%12#1",
        "aggregate%item0%5#1",
        "aggregate%substring3%13#1"
      ]
    },
    "4834": {
      "op": "dup",
      "stack_out": [
        "aggregate%item0%4#1",
        "aggregate%substring3%12#1",
        "aggregate%item0%5#1",
        "aggregate%substring3%13#1",
        "aggregate%substring3%13#1 (copy)"
      ]
    },
    "4835": {
      "op": "pushint 8 // 8",
      "stack_out": [
        "aggregate%item0%4#1",
        "aggregate%substring3%12#1",
        "aggregate%item0%5#1",
        "aggregate%substring3%13#1",
        "aggregate%substring3%13#1 (copy)",
        "8"
      ]
    },
    "4837": {
      "op": "dup",
      "stack_out": [
        "aggregate%item0%4#1",
        "aggregate%substring3%12#1",
        "aggregate%item0%5#1",
        "aggregate%substring3%13#1",
        "aggregate%substring3%13#1 (copy)",
        "8",
        "8"
      ]
    },
    "4838": {
      "op": "extract3",
      "defined_out": [
        "aggregate%extract%5#1",
        "aggregate%item0%4#1",
        "aggregate%item0%5#1",
        "aggregate%substring3%12#1",
        "aggregate%substring3%13#1"
      ],
      "stack_out": [
        "aggregate%item0%4#1",
        "aggregate%substring3%12#1",
        "aggregate%item0%5#1",
        "aggregate%substring3%13#1",
        "aggregate%extract%5#1"
      ]
    },
    "4839": {
      "op": "swap",
      "stack_out": [
        "aggregate%item0%4#1",
        "aggregate%substring3%12#1",
        "aggregate%item0%5#1",
        "aggregate%extract%5#1",
        "aggregate%substring3%13#1"
      ]
    },
    "4840": {
      "op": "dup",
      "stack_out": [
        "aggregate%item0%4#1",
        "aggregate%substring3%12#1",
        "aggregate%item0%5#1",
        "aggregate%extract%5#1",
        "aggregate%substring3%13#1",
        "aggregate%substring3%13#1 (copy)"
      ]
    },
    "4841": {
      "op": "pushint 16 // 16",
      "defined_out": [
        "16",
        "aggregate%extract%5#1",
        "aggregate%item0%4#1",
        "aggregate%item0%5#1",
        "aggregate%substring3%12#1",
        "aggregate%substring3%13#1",
        "aggregate%substring3%13#1 (copy)"
      ],
      "stack_out": [
        "aggregate%item0%4#1",
        "aggregate%substring3%12#1",
        "aggregate%item0%5#1",
        "aggregate%extract%5#1",
        "aggregate%substring3%13#1",
        "aggregate%substring3%13#1 (copy)",
        "16"
      ]
    },
    "4843": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%extract%5#1",
        "aggregate%extract_uint16%20#1",
        "aggregate%item0%4#1",
        "aggregate%item0%5#1",
        "aggregate%substring3%12#1",
        "aggregate%substring3%13#1"
      ],
      "stack_out": [
        "aggregate%item0%4#1",
        "aggregate%substring3%12#1",
        "aggregate%item0%5#1",
        "aggregate%extract%5#1",
        "aggregate%substring3%13#1",
        "aggregate%extract_uint16%20#1"
      ]
    },
    "4844": {
      "op": "swap",
      "stack_out": [
        "aggregate%item0%4#1",
        "aggregate%substring3%12#1",
        "aggregate%item0%5#1",
        "aggregate%extract%5#1",
        "aggregate%extract_uint16%20#1",
        "aggregate%substring3%13#1"
      ]
    },
    "4845": {
      "op": "dup",
      "stack_out": [
        "aggregate%item0%4#1",
        "aggregate%substring3%12#1",
        "aggregate%item0%5#1",
        "aggregate%extract%5#1",
        "aggregate%extract_uint16%20#1",
        "aggregate%substring3%13#1",
        "aggregate%substring3%13#1 (copy)"
      ]
    },
    "4846": {
      "op": "len",
      "defined_out": [
        "aggregate%extract%5#1",
        "aggregate%extract_uint16%20#1",
        "aggregate%item0%4#1",
        "aggregate%item0%5#1",
        "aggregate%len%8#1",
        "aggregate%substring3%12#1",
        "aggregate%substring3%13#1"
      ],
      "stack_out": [
        "aggregate%item0%4#1",
        "aggregate%substring3%12#1",
        "aggregate%item0%5#1",
        "aggregate%extract%5#1",
        "aggregate%extract_uint16%20#1",
        "aggregate%substring3%13#1",
        "aggregate%len%8#1"
      ]
    },
    "4847": {
      "op": "swap",
      "stack_out": [
        "aggregate%item0%4#1",
        "aggregate%substring3%12#1",
        "aggregate%item0%5#1",
        "aggregate%extract%5#1",
        "aggregate%extract_uint16%20#1",
        "aggregate%len%8#1",
        "aggregate%substring3%13#1"
      ]
    },
    "4848": {
      "op": "uncover 2",
      "stack_out": [
        "aggregate%item0%4#1",
        "aggregate%substring3%12#1",
        "aggregate%item0%5#1",
        "aggregate%extract%5#1",
        "aggregate%len%8#1",
        "aggregate%substring3%13#1",
        "aggregate%extract_uint16%20#1"
      ]
    },
    "4850": {
      "op": "uncover 2",
      "stack_out": [
        "aggregate%item0%4#1",
        "aggregate%substring3%12#1",
        "aggregate%item0%5#1",
        "aggregate%extract%5#1",
        "aggregate%substring3%13#1",
        "aggregate%extract_uint16%20#1",
        "aggregate%len%8#1"
      ]
    },
    "4852": {
      "op": "substring3",
      "defined_out": [
        "aggregate%extract%5#1",
        "aggregate%item0%4#1",
        "aggregate%item0%5#1",
        "aggregate%substring3%12#1",
        "aggregate%substring3%14#1"
      ],
      "stack_out": [
        "aggregate%item0%4#1",
        "aggregate%substring3%12#1",
        "aggregate%item0%5#1",
        "aggregate%extract%5#1",
        "aggregate%substring3%14#1"
      ]
    },
    "4853": {
      "op": "extract 2 0",
      "defined_out": [
        "aggregate%extract%5#1",
        "aggregate%item0%4#1",
        "aggregate%item0%5#1",
        "aggregate%item2%2#1",
        "aggregate%substring3%12#1"
      ],
      "stack_out": [
        "aggregate%item0%4#1",
        "aggregate%substring3%12#1",
        "aggregate%item0%5#1",
        "aggregate%extract%5#1",
        "aggregate%item2%2#1"
      ]
    },
    "4856": {
      "op": "uncover 4",
      "defined_out": [
        "aggregate%extract%5#1",
        "aggregate%item0%5#1",
        "aggregate%item2%2#1",
        "aggregate%substring3%12#1",
        "tmp%36#0"
      ],
      "stack_out": [
        "aggregate%substring3%12#1",
        "aggregate%item0%5#1",
        "aggregate%extract%5#1",
        "aggregate%item2%2#1",
        "tmp%36#0"
      ]
    },
    "4858": {
      "op": "swap",
      "stack_out": [
        "aggregate%substring3%12#1",
        "aggregate%item0%5#1",
        "aggregate%extract%5#1",
        "tmp%36#0",
        "aggregate%item2%2#1"
      ]
    },
    "4859": {
      "op": "uncover 4",
      "defined_out": [
        "aggregate%extract%5#1",
        "aggregate%item0%5#1",
        "aggregate%item2%2#1",
        "tmp%36#0",
        "tmp%37#0"
      ],
      "stack_out": [
        "aggregate%item0%5#1",
        "aggregate%extract%5#1",
        "tmp%36#0",
        "aggregate%item2%2#1",
        "tmp%37#0"
      ]
    },
    "4861": {
      "op": "cover 2",
      "stack_out": [
        "aggregate%item0%5#1",
        "aggregate%extract%5#1",
        "tmp%37#0",
        "tmp%36#0",
        "aggregate%item2%2#1"
      ]
    },
    "4863": {
      "op": "uncover 4",
      "defined_out": [
        "aggregate%extract%5#1",
        "aggregate%item2%2#1",
        "tmp%36#0",
        "tmp%37#0",
        "tmp%38#0"
      ],
      "stack_out": [
        "aggregate%extract%5#1",
        "tmp%37#0",
        "tmp%36#0",
        "aggregate%item2%2#1",
        "tmp%38#0"
      ]
    },
    "4865": {
      "op": "cover 3",
      "defined_out": [
        "tmp%36#0",
        "tmp%37#0",
        "tmp%38#0",
        "tmp%39#0",
        "tmp%40#0"
      ],
      "stack_out": [
        "tmp%39#0",
        "tmp%38#0",
        "tmp%37#0",
        "tmp%36#0",
        "tmp%40#0"
      ]
    },
    "4867": {
      "op": "cover 4",
      "defined_out": [
        "result.0.0#0",
        "tmp%37#0",
        "tmp%38#0",
        "tmp%39#0",
        "tmp%40#0"
      ],
      "stack_out": [
        "tmp%40#0",
        "tmp%39#0",
        "tmp%38#0",
        "tmp%37#0",
        "result.0.0#0"
      ]
    },
    "4869": {
      "op": "cover 4",
      "defined_out": [
        "result.0.0#0",
        "result.0.1#0",
        "tmp%38#0",
        "tmp%39#0",
        "tmp%40#0"
      ],
      "stack_out": [
        "result.0.0#0",
        "tmp%40#0",
        "tmp%39#0",
        "tmp%38#0",
        "result.0.1#0"
      ]
    },
    "4871": {
      "op": "cover 4",
      "defined_out": [
        "result.0.0#0",
        "result.0.1#0",
        "result.1.0#0",
        "tmp%39#0",
        "tmp%40#0"
      ],
      "stack_out": [
        "result.0.1#0",
        "result.0.0#0",
        "tmp%40#0",
        "tmp%39#0",
        "result.1.0#0"
      ]
    },
    "4873": {
      "op": "cover 4",
      "defined_out": [
        "result.0.0#0",
        "result.0.1#0",
        "result.1.0#0",
        "result.1.1#0",
        "tmp%40#0"
      ],
      "stack_out": [
        "result.1.0#0",
        "result.0.1#0",
        "result.0.0#0",
        "tmp%40#0",
        "result.1.1#0"
      ]
    },
    "4875": {
      "op": "cover 4",
      "defined_out": [
        "result.0.0#0",
        "result.0.1#0",
        "result.1.0#0",
        "result.1.1#0",
        "result.1.2#0"
      ],
      "stack_out": [
        "result.1.1#0",
        "result.1.0#0",
        "result.0.1#0",
        "result.0.0#0",
        "result.1.2#0"
      ]
    },
    "4877": {
      "op": "cover 4",
      "defined_out": [
        "result.0.1#0",
        "result.1.0#0",
        "result.1.1#0",
        "result.1.2#0",
        "s1#0"
      ],
      "stack_out": [
        "result.1.2#0",
        "result.1.1#0",
        "result.1.0#0",
        "result.0.1#0",
        "s1#0"
      ]
    },
    "4879": {
      "op": "cover 4",
      "defined_out": [
        "result.1.0#0",
        "result.1.1#0",
        "result.1.2#0",
        "s1#0",
        "s2#0"
      ],
      "stack_out": [
        "s1#0",
        "result.1.2#0",
        "result.1.1#0",
        "result.1.0#0",
        "s2#0"
      ]
    },
    "4881": {
      "op": "cover 4",
      "defined_out": [
        "result.1.1#0",
        "result.1.2#0",
        "s1#0",
        "s2#0",
        "u64_1#0"
      ],
      "stack_out": [
        "s2#0",
        "s1#0",
        "result.1.2#0",
        "result.1.1#0",
        "u64_1#0"
      ]
    },
    "4883": {
      "op": "cover 4",
      "defined_out": [
        "result.1.2#0",
        "s1#0",
        "s2#0",
        "u64_1#0",
        "u64_2#0"
      ],
      "stack_out": [
        "u64_1#0",
        "s2#0",
        "s1#0",
        "result.1.2#0",
        "u64_2#0"
      ]
    },
    "4885": {
      "op": "cover 4",
      "defined_out": [
        "bytez#0",
        "s1#0",
        "s2#0",
        "u64_1#0",
        "u64_2#0"
      ],
      "stack_out": [
        "u64_2#0",
        "u64_1#0",
        "s2#0",
        "s1#0",
        "bytez#0"
      ]
    },
    "4887": {
      "op": "cover 4",
      "stack_out": [
        "bytez#0",
        "u64_2#0",
        "u64_1#0",
        "s2#0",
        "s1#0"
      ]
    },
    "4889": {
      "op": "pushbytes \"echo: s1b\"",
      "defined_out": [
        "\"echo: s1b\"",
        "bytez#0",
        "s1#0",
        "s2#0",
        "u64_1#0",
        "u64_2#0"
      ],
      "stack_out": [
        "bytez#0",
        "u64_2#0",
        "u64_1#0",
        "s2#0",
        "s1#0",
        "\"echo: s1b\""
      ]
    },
    "4900": {
      "op": "==",
      "defined_out": [
        "bytez#0",
        "s2#0",
        "tmp%41#0",
        "u64_1#0",
        "u64_2#0"
      ],
      "stack_out": [
        "bytez#0",
        "u64_2#0",
        "u64_1#0",
        "s2#0",
        "tmp%41#0"
      ]
    },
    "4901": {
      "op": "assert",
      "stack_out": [
        "bytez#0",
        "u64_2#0",
        "u64_1#0",
        "s2#0"
      ]
    },
    "4902": {
      "op": "bytec 56 // 0x6563686f3a20733262",
      "defined_out": [
        "0x6563686f3a20733262",
        "bytez#0",
        "s2#0",
        "u64_1#0",
        "u64_2#0"
      ],
      "stack_out": [
        "bytez#0",
        "u64_2#0",
        "u64_1#0",
        "s2#0",
        "0x6563686f3a20733262"
      ]
    },
    "4904": {
      "op": "len",
      "defined_out": [
        "aggregate%length%11#1",
        "bytez#0",
        "s2#0",
        "u64_1#0",
        "u64_2#0"
      ],
      "stack_out": [
        "bytez#0",
        "u64_2#0",
        "u64_1#0",
        "s2#0",
        "aggregate%length%11#1"
      ]
    },
    "4905": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%26#1",
        "bytez#0",
        "s2#0",
        "u64_1#0",
        "u64_2#0"
      ],
      "stack_out": [
        "bytez#0",
        "u64_2#0",
        "u64_1#0",
        "s2#0",
        "aggregate%as_bytes%26#1"
      ]
    },
    "4906": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%length_uint16%11#1",
        "bytez#0",
        "s2#0",
        "u64_1#0",
        "u64_2#0"
      ],
      "stack_out": [
        "bytez#0",
        "u64_2#0",
        "u64_1#0",
        "s2#0",
        "aggregate%length_uint16%11#1"
      ]
    },
    "4909": {
      "op": "bytec 56 // 0x6563686f3a20733262",
      "stack_out": [
        "bytez#0",
        "u64_2#0",
        "u64_1#0",
        "s2#0",
        "aggregate%length_uint16%11#1",
        "0x6563686f3a20733262"
      ]
    },
    "4911": {
      "op": "concat",
      "defined_out": [
        "bytez#0",
        "encoded%7#0",
        "s2#0",
        "u64_1#0",
        "u64_2#0"
      ],
      "stack_out": [
        "bytez#0",
        "u64_2#0",
        "u64_1#0",
        "s2#0",
        "encoded%7#0"
      ]
    },
    "4912": {
      "op": "==",
      "defined_out": [
        "bytez#0",
        "tmp%42#0",
        "u64_1#0",
        "u64_2#0"
      ],
      "stack_out": [
        "bytez#0",
        "u64_2#0",
        "u64_1#0",
        "tmp%42#0"
      ]
    },
    "4913": {
      "op": "assert",
      "stack_out": [
        "bytez#0",
        "u64_2#0",
        "u64_1#0"
      ]
    },
    "4914": {
      "op": "pushint 12 // 12",
      "defined_out": [
        "12",
        "bytez#0",
        "u64_1#0",
        "u64_2#0"
      ],
      "stack_out": [
        "bytez#0",
        "u64_2#0",
        "u64_1#0",
        "12"
      ]
    },
    "4916": {
      "op": "==",
      "defined_out": [
        "bytez#0",
        "tmp%43#0",
        "u64_2#0"
      ],
      "stack_out": [
        "bytez#0",
        "u64_2#0",
        "tmp%43#0"
      ]
    },
    "4917": {
      "op": "assert",
      "defined_out": [
        "bytez#0",
        "reinterpret_biguint%4#0"
      ],
      "stack_out": [
        "bytez#0",
        "reinterpret_biguint%4#0"
      ]
    },
    "4918": {
      "op": "pushbytes 0x0000000000000016",
      "defined_out": [
        "0x0000000000000016",
        "bytez#0",
        "reinterpret_biguint%4#0"
      ],
      "stack_out": [
        "bytez#0",
        "reinterpret_biguint%4#0",
        "0x0000000000000016"
      ]
    },
    "4928": {
      "op": "b==",
      "defined_out": [
        "bytez#0",
        "tmp%44#0"
      ],
      "stack_out": [
        "bytez#0",
        "tmp%44#0"
      ]
    },
    "4929": {
      "op": "assert",
      "stack_out": [
        "bytez#0"
      ]
    },
    "4930": {
      "op": "pushbytes 0x6563686f3a203362",
      "defined_out": [
        "0x6563686f3a203362",
        "bytez#0"
      ],
      "stack_out": [
        "bytez#0",
        "0x6563686f3a203362"
      ]
    },
    "4940": {
      "op": "==",
      "defined_out": [
        "tmp%45#0"
      ],
      "stack_out": [
        "tmp%45#0"
      ]
    },
    "4941": {
      "op": "assert",
      "stack_out": []
    },
    "4942": {
      "retsub": true,
      "op": "retsub"
    },
    "4943": {
      "subroutine": "test_cases.typed_abi_call.typed_c2c.Greeter.test_no_args",
      "params": {
        "app#0": "uint64"
      },
      "block": "test_no_args",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "4946": {
      "block": "test_no_args_block@0",
      "stack_in": [],
      "op": "itxn_begin"
    },
    "4947": {
      "op": "frame_dig -1",
      "defined_out": [
        "inner_txn_params%0%%param_ApplicationID_idx_0#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_ApplicationID_idx_0#0"
      ]
    },
    "4949": {
      "op": "itxn_field ApplicationID",
      "stack_out": []
    },
    "4951": {
      "op": "bytec 32 // method \"no_args()uint64\"",
      "defined_out": [
        "Method(no_args()uint64)"
      ],
      "stack_out": [
        "Method(no_args()uint64)"
      ]
    },
    "4953": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "4955": {
      "op": "intc_1 // appl",
      "defined_out": [
        "appl"
      ],
      "stack_out": [
        "appl"
      ]
    },
    "4956": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "4958": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "4959": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "4961": {
      "block": "test_no_args_next_txn@1",
      "stack_in": [],
      "op": "itxn_submit"
    },
    "4962": {
      "op": "itxn LastLog",
      "defined_out": [
        "awst_tmp%0#0"
      ],
      "stack_out": [
        "awst_tmp%0#0"
      ]
    },
    "4964": {
      "op": "dup",
      "defined_out": [
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ]
    },
    "4965": {
      "op": "extract 4 0",
      "defined_out": [
        "awst_tmp%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "tmp%0#0"
      ]
    },
    "4968": {
      "op": "swap",
      "stack_out": [
        "tmp%0#0",
        "awst_tmp%0#0"
      ]
    },
    "4969": {
      "op": "extract 0 4",
      "defined_out": [
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0"
      ]
    },
    "4972": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "0x151f7c75"
      ]
    },
    "4973": {
      "op": "==",
      "defined_out": [
        "tmp%0#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%2#0"
      ]
    },
    "4974": {
      "error": "application log value is not the result of an ABI return",
      "op": "assert // application log value is not the result of an ABI return",
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "4975": {
      "op": "btoi",
      "defined_out": [
        "result#0"
      ],
      "stack_out": [
        "result#0"
      ]
    },
    "4976": {
      "op": "pushint 42 // 42",
      "defined_out": [
        "42",
        "result#0"
      ],
      "stack_out": [
        "result#0",
        "42"
      ]
    },
    "4978": {
      "op": "==",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "4979": {
      "op": "assert",
      "stack_out": []
    },
    "4980": {
      "op": "itxn_begin"
    },
    "4981": {
      "op": "frame_dig -1",
      "defined_out": [
        "inner_txn_params%1%%param_ApplicationID_idx_0#0"
      ],
      "stack_out": [
        "inner_txn_params%1%%param_ApplicationID_idx_0#0"
      ]
    },
    "4983": {
      "op": "itxn_field ApplicationID",
      "stack_out": []
    },
    "4985": {
      "op": "bytec 32 // method \"no_args()uint64\"",
      "defined_out": [
        "Method(no_args()uint64)"
      ],
      "stack_out": [
        "Method(no_args()uint64)"
      ]
    },
    "4987": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "4989": {
      "op": "intc_1 // appl",
      "defined_out": [
        "appl"
      ],
      "stack_out": [
        "appl"
      ]
    },
    "4990": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "4992": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "4993": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "4995": {
      "block": "test_no_args_next_txn@2",
      "stack_in": [],
      "op": "itxn_submit"
    },
    "4996": {
      "op": "itxn LastLog",
      "defined_out": [
        "awst_tmp%1#0"
      ],
      "stack_out": [
        "awst_tmp%1#0"
      ]
    },
    "4998": {
      "op": "dup",
      "defined_out": [
        "awst_tmp%1#0",
        "awst_tmp%1#0 (copy)"
      ],
      "stack_out": [
        "awst_tmp%1#0",
        "awst_tmp%1#0 (copy)"
      ]
    },
    "4999": {
      "op": "extract 4 0",
      "defined_out": [
        "awst_tmp%1#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "awst_tmp%1#0",
        "tmp%5#0"
      ]
    },
    "5002": {
      "op": "swap",
      "stack_out": [
        "tmp%5#0",
        "awst_tmp%1#0"
      ]
    },
    "5003": {
      "op": "extract 0 4",
      "defined_out": [
        "tmp%5#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "tmp%6#0"
      ]
    },
    "5006": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%5#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "tmp%6#0",
        "0x151f7c75"
      ]
    },
    "5007": {
      "op": "==",
      "defined_out": [
        "tmp%5#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "tmp%7#0"
      ]
    },
    "5008": {
      "error": "application log value is not the result of an ABI return",
      "op": "assert // application log value is not the result of an ABI return",
      "defined_out": [
        "reinterpret_biguint%0#0"
      ],
      "stack_out": [
        "reinterpret_biguint%0#0"
      ]
    },
    "5009": {
      "op": "bytec 57 // 0x000000000000002a",
      "defined_out": [
        "0x000000000000002a",
        "reinterpret_biguint%0#0"
      ],
      "stack_out": [
        "reinterpret_biguint%0#0",
        "0x000000000000002a"
      ]
    },
    "5011": {
      "op": "b==",
      "defined_out": [
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0"
      ]
    },
    "5012": {
      "op": "assert",
      "stack_out": []
    },
    "5013": {
      "op": "itxn_begin"
    },
    "5014": {
      "op": "frame_dig -1",
      "defined_out": [
        "inner_txn_params%2%%param_ApplicationID_idx_0#0"
      ],
      "stack_out": [
        "inner_txn_params%2%%param_ApplicationID_idx_0#0"
      ]
    },
    "5016": {
      "op": "itxn_field ApplicationID",
      "stack_out": []
    },
    "5018": {
      "op": "bytec 32 // method \"no_args()uint64\"",
      "defined_out": [
        "Method(no_args()uint64)"
      ],
      "stack_out": [
        "Method(no_args()uint64)"
      ]
    },
    "5020": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "5022": {
      "op": "intc_1 // appl",
      "defined_out": [
        "appl"
      ],
      "stack_out": [
        "appl"
      ]
    },
    "5023": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "5025": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "5026": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "5028": {
      "block": "test_no_args_next_txn@3",
      "stack_in": [],
      "op": "itxn_submit"
    },
    "5029": {
      "op": "itxn LastLog",
      "defined_out": [
        "awst_tmp%2#0"
      ],
      "stack_out": [
        "awst_tmp%2#0"
      ]
    },
    "5031": {
      "op": "extract 0 4",
      "defined_out": [
        "tmp%10#0"
      ],
      "stack_out": [
        "tmp%10#0"
      ]
    },
    "5034": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%10#0"
      ],
      "stack_out": [
        "tmp%10#0",
        "0x151f7c75"
      ]
    },
    "5035": {
      "op": "==",
      "defined_out": [
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0"
      ]
    },
    "5036": {
      "error": "application log value is not the result of an ABI return",
      "op": "assert // application log value is not the result of an ABI return",
      "stack_out": []
    },
    "5037": {
      "op": "itxn LastLog",
      "defined_out": [
        "awst_tmp%3#0"
      ],
      "stack_out": [
        "awst_tmp%3#0"
      ]
    },
    "5039": {
      "op": "dup",
      "defined_out": [
        "awst_tmp%3#0",
        "awst_tmp%3#0 (copy)"
      ],
      "stack_out": [
        "awst_tmp%3#0",
        "awst_tmp%3#0 (copy)"
      ]
    },
    "5040": {
      "op": "extract 4 0",
      "defined_out": [
        "awst_tmp%3#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "awst_tmp%3#0",
        "tmp%13#0"
      ]
    },
    "5043": {
      "op": "swap",
      "stack_out": [
        "tmp%13#0",
        "awst_tmp%3#0"
      ]
    },
    "5044": {
      "op": "extract 0 4",
      "defined_out": [
        "tmp%13#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%13#0",
        "tmp%14#0"
      ]
    },
    "5047": {
      "op": "bytec_0 // 0x151f7c75",
      "stack_out": [
        "tmp%13#0",
        "tmp%14#0",
        "0x151f7c75"
      ]
    },
    "5048": {
      "op": "==",
      "defined_out": [
        "tmp%13#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "tmp%13#0",
        "tmp%15#0"
      ]
    },
    "5049": {
      "error": "application log value is not the result of an ABI return",
      "op": "assert // application log value is not the result of an ABI return",
      "defined_out": [
        "reinterpret_biguint%2#0"
      ],
      "stack_out": [
        "reinterpret_biguint%2#0"
      ]
    },
    "5050": {
      "op": "bytec 57 // 0x000000000000002a",
      "defined_out": [
        "0x000000000000002a",
        "reinterpret_biguint%2#0"
      ],
      "stack_out": [
        "reinterpret_biguint%2#0",
        "0x000000000000002a"
      ]
    },
    "5052": {
      "op": "b==",
      "defined_out": [
        "tmp%16#0"
      ],
      "stack_out": [
        "tmp%16#0"
      ]
    },
    "5053": {
      "op": "assert",
      "stack_out": []
    },
    "5054": {
      "retsub": true,
      "op": "retsub"
    },
    "5055": {
      "subroutine": "test_cases.typed_abi_call.typed_c2c.Greeter.test_named_tuples",
      "params": {
        "app#0": "uint64"
      },
      "block": "test_named_tuples",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "5058": {
      "block": "test_named_tuples_block@0",
      "stack_in": [],
      "op": "itxn_begin"
    },
    "5059": {
      "op": "intc_3 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "5060": {
      "op": "itob",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "5061": {
      "op": "bytec 8 // \"log 1\"",
      "defined_out": [
        "\"log 1\"",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "\"log 1\""
      ]
    },
    "5063": {
      "op": "len",
      "defined_out": [
        "aggregate%length%0#1",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "aggregate%length%0#1"
      ]
    },
    "5064": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%0#1",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "aggregate%as_bytes%0#1"
      ]
    },
    "5065": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%length_uint16%0#1",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "aggregate%length_uint16%0#1"
      ]
    },
    "5068": {
      "op": "bytec 8 // \"log 1\"",
      "stack_out": [
        "tmp%0#0",
        "aggregate%length_uint16%0#1",
        "\"log 1\""
      ]
    },
    "5070": {
      "op": "concat",
      "defined_out": [
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0"
      ]
    },
    "5071": {
      "op": "bytec_2 // 0x",
      "defined_out": [
        "0x",
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "0x"
      ]
    },
    "5072": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%1#0",
        "0x",
        "tmp%0#0"
      ]
    },
    "5074": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%0#1",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "aggregate%head%0#1"
      ]
    },
    "5075": {
      "op": "pushint 10 // 10",
      "defined_out": [
        "10",
        "aggregate%head%0#1",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "aggregate%head%0#1",
        "10"
      ]
    },
    "5077": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%1#1",
        "aggregate%head%0#1",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "aggregate%head%0#1",
        "aggregate%as_bytes%1#1"
      ]
    },
    "5078": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%head%0#1",
        "aggregate%offset_as_uint16%0#1",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "aggregate%head%0#1",
        "aggregate%offset_as_uint16%0#1"
      ]
    },
    "5081": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%1#1",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "aggregate%head%1#1"
      ]
    },
    "5082": {
      "op": "swap",
      "stack_out": [
        "aggregate%head%1#1",
        "tmp%1#0"
      ]
    },
    "5083": {
      "op": "concat",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "5084": {
      "op": "intc_3 // 1",
      "stack_out": [
        "tmp%2#0",
        "1"
      ]
    },
    "5085": {
      "op": "itob",
      "defined_out": [
        "tmp%2#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "tmp%3#0"
      ]
    },
    "5086": {
      "op": "bytec 8 // \"log 1\"",
      "stack_out": [
        "tmp%2#0",
        "tmp%3#0",
        "\"log 1\""
      ]
    },
    "5088": {
      "op": "len",
      "defined_out": [
        "aggregate%length%1#1",
        "tmp%2#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "tmp%3#0",
        "aggregate%length%1#1"
      ]
    },
    "5089": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%2#1",
        "tmp%2#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "tmp%3#0",
        "aggregate%as_bytes%2#1"
      ]
    },
    "5090": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%length_uint16%1#1",
        "tmp%2#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "tmp%3#0",
        "aggregate%length_uint16%1#1"
      ]
    },
    "5093": {
      "op": "bytec 8 // \"log 1\"",
      "stack_out": [
        "tmp%2#0",
        "tmp%3#0",
        "aggregate%length_uint16%1#1",
        "\"log 1\""
      ]
    },
    "5095": {
      "op": "concat",
      "defined_out": [
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0"
      ]
    },
    "5096": {
      "op": "bytec_2 // 0x",
      "stack_out": [
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0",
        "0x"
      ]
    },
    "5097": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%2#0",
        "tmp%4#0",
        "0x",
        "tmp%3#0"
      ]
    },
    "5099": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%2#1",
        "tmp%2#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "tmp%4#0",
        "aggregate%head%2#1"
      ]
    },
    "5100": {
      "op": "pushint 10 // 10",
      "stack_out": [
        "tmp%2#0",
        "tmp%4#0",
        "aggregate%head%2#1",
        "10"
      ]
    },
    "5102": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%3#1",
        "aggregate%head%2#1",
        "tmp%2#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "tmp%4#0",
        "aggregate%head%2#1",
        "aggregate%as_bytes%3#1"
      ]
    },
    "5103": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%head%2#1",
        "aggregate%offset_as_uint16%1#1",
        "tmp%2#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "tmp%4#0",
        "aggregate%head%2#1",
        "aggregate%offset_as_uint16%1#1"
      ]
    },
    "5106": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%3#1",
        "tmp%2#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "tmp%4#0",
        "aggregate%head%3#1"
      ]
    },
    "5107": {
      "op": "swap",
      "stack_out": [
        "tmp%2#0",
        "aggregate%head%3#1",
        "tmp%4#0"
      ]
    },
    "5108": {
      "op": "concat",
      "defined_out": [
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%0%%param_ApplicationArgs_idx_2#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%0%%param_ApplicationArgs_idx_2#0"
      ]
    },
    "5109": {
      "op": "swap",
      "stack_out": [
        "inner_txn_params%0%%param_ApplicationArgs_idx_2#0",
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "5110": {
      "op": "frame_dig -1",
      "defined_out": [
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%0%%param_ApplicationArgs_idx_2#0",
        "inner_txn_params%0%%param_ApplicationID_idx_0#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_ApplicationArgs_idx_2#0",
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%0%%param_ApplicationID_idx_0#0"
      ]
    },
    "5112": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "inner_txn_params%0%%param_ApplicationArgs_idx_2#0",
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "5114": {
      "op": "bytec 58 // method \"logs_are_equal((uint64,string),(uint64,string))bool\"",
      "defined_out": [
        "Method(logs_are_equal((uint64,string),(uint64,string))bool)",
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%0%%param_ApplicationArgs_idx_2#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_ApplicationArgs_idx_2#0",
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0",
        "Method(logs_are_equal((uint64,string),(uint64,string))bool)"
      ]
    },
    "5116": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "inner_txn_params%0%%param_ApplicationArgs_idx_2#0",
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "5118": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "inner_txn_params%0%%param_ApplicationArgs_idx_2#0"
      ]
    },
    "5120": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "5122": {
      "op": "intc_1 // appl",
      "defined_out": [
        "appl"
      ],
      "stack_out": [
        "appl"
      ]
    },
    "5123": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "5125": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "5126": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "5128": {
      "block": "test_named_tuples_next_txn@1",
      "stack_in": [],
      "op": "itxn_submit"
    },
    "5129": {
      "op": "itxn LastLog",
      "defined_out": [
        "awst_tmp%0#0"
      ],
      "stack_out": [
        "awst_tmp%0#0"
      ]
    },
    "5131": {
      "op": "dup",
      "defined_out": [
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ]
    },
    "5132": {
      "op": "extract 4 0",
      "defined_out": [
        "awst_tmp%0#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "tmp%6#0"
      ]
    },
    "5135": {
      "op": "swap",
      "stack_out": [
        "tmp%6#0",
        "awst_tmp%0#0"
      ]
    },
    "5136": {
      "op": "extract 0 4",
      "defined_out": [
        "tmp%6#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%6#0",
        "tmp%7#0"
      ]
    },
    "5139": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%6#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%6#0",
        "tmp%7#0",
        "0x151f7c75"
      ]
    },
    "5140": {
      "op": "==",
      "defined_out": [
        "tmp%6#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%6#0",
        "tmp%8#0"
      ]
    },
    "5141": {
      "error": "application log value is not the result of an ABI return",
      "op": "assert // application log value is not the result of an ABI return",
      "stack_out": [
        "tmp%6#0"
      ]
    },
    "5142": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0",
        "0"
      ]
    },
    "5143": {
      "op": "getbit",
      "defined_out": [
        "result#0"
      ],
      "stack_out": [
        "result#0"
      ]
    },
    "5144": {
      "op": "assert",
      "stack_out": []
    },
    "5145": {
      "op": "itxn_begin"
    },
    "5146": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2"
      ],
      "stack_out": [
        "2"
      ]
    },
    "5147": {
      "op": "itob",
      "defined_out": [
        "tmp%10#0"
      ],
      "stack_out": [
        "tmp%10#0"
      ]
    },
    "5148": {
      "op": "bytec 59 // \"log 2\"",
      "defined_out": [
        "\"log 2\"",
        "tmp%10#0"
      ],
      "stack_out": [
        "tmp%10#0",
        "\"log 2\""
      ]
    },
    "5150": {
      "op": "len",
      "defined_out": [
        "aggregate%length%2#1",
        "tmp%10#0"
      ],
      "stack_out": [
        "tmp%10#0",
        "aggregate%length%2#1"
      ]
    },
    "5151": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%4#1",
        "tmp%10#0"
      ],
      "stack_out": [
        "tmp%10#0",
        "aggregate%as_bytes%4#1"
      ]
    },
    "5152": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%length_uint16%2#1",
        "tmp%10#0"
      ],
      "stack_out": [
        "tmp%10#0",
        "aggregate%length_uint16%2#1"
      ]
    },
    "5155": {
      "op": "bytec 59 // \"log 2\"",
      "stack_out": [
        "tmp%10#0",
        "aggregate%length_uint16%2#1",
        "\"log 2\""
      ]
    },
    "5157": {
      "op": "concat",
      "defined_out": [
        "tmp%10#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%10#0",
        "tmp%11#0"
      ]
    },
    "5158": {
      "op": "bytec_2 // 0x",
      "defined_out": [
        "0x",
        "tmp%10#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%10#0",
        "tmp%11#0",
        "0x"
      ]
    },
    "5159": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%11#0",
        "0x",
        "tmp%10#0"
      ]
    },
    "5161": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%4#1",
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "aggregate%head%4#1"
      ]
    },
    "5162": {
      "op": "pushint 10 // 10",
      "defined_out": [
        "10",
        "aggregate%head%4#1",
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "aggregate%head%4#1",
        "10"
      ]
    },
    "5164": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%5#1",
        "aggregate%head%4#1",
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "aggregate%head%4#1",
        "aggregate%as_bytes%5#1"
      ]
    },
    "5165": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%head%4#1",
        "aggregate%offset_as_uint16%2#1",
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "aggregate%head%4#1",
        "aggregate%offset_as_uint16%2#1"
      ]
    },
    "5168": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%5#1",
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "aggregate%head%5#1"
      ]
    },
    "5169": {
      "op": "swap",
      "stack_out": [
        "aggregate%head%5#1",
        "tmp%11#0"
      ]
    },
    "5170": {
      "op": "concat",
      "defined_out": [
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%12#0"
      ]
    },
    "5171": {
      "op": "intc_3 // 1",
      "defined_out": [
        "1",
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%12#0",
        "1"
      ]
    },
    "5172": {
      "op": "itob",
      "defined_out": [
        "tmp%12#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "tmp%12#0",
        "tmp%13#0"
      ]
    },
    "5173": {
      "op": "bytec 8 // \"log 1\"",
      "defined_out": [
        "\"log 1\"",
        "tmp%12#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "tmp%12#0",
        "tmp%13#0",
        "\"log 1\""
      ]
    },
    "5175": {
      "op": "len",
      "defined_out": [
        "aggregate%length%3#1",
        "tmp%12#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "tmp%12#0",
        "tmp%13#0",
        "aggregate%length%3#1"
      ]
    },
    "5176": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%6#1",
        "tmp%12#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "tmp%12#0",
        "tmp%13#0",
        "aggregate%as_bytes%6#1"
      ]
    },
    "5177": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%length_uint16%3#1",
        "tmp%12#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "tmp%12#0",
        "tmp%13#0",
        "aggregate%length_uint16%3#1"
      ]
    },
    "5180": {
      "op": "bytec 8 // \"log 1\"",
      "stack_out": [
        "tmp%12#0",
        "tmp%13#0",
        "aggregate%length_uint16%3#1",
        "\"log 1\""
      ]
    },
    "5182": {
      "op": "concat",
      "defined_out": [
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0"
      ]
    },
    "5183": {
      "op": "bytec_2 // 0x",
      "stack_out": [
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "0x"
      ]
    },
    "5184": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%12#0",
        "tmp%14#0",
        "0x",
        "tmp%13#0"
      ]
    },
    "5186": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%6#1",
        "tmp%12#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%12#0",
        "tmp%14#0",
        "aggregate%head%6#1"
      ]
    },
    "5187": {
      "op": "pushint 10 // 10",
      "stack_out": [
        "tmp%12#0",
        "tmp%14#0",
        "aggregate%head%6#1",
        "10"
      ]
    },
    "5189": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%7#1",
        "aggregate%head%6#1",
        "tmp%12#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%12#0",
        "tmp%14#0",
        "aggregate%head%6#1",
        "aggregate%as_bytes%7#1"
      ]
    },
    "5190": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%head%6#1",
        "aggregate%offset_as_uint16%3#1",
        "tmp%12#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%12#0",
        "tmp%14#0",
        "aggregate%head%6#1",
        "aggregate%offset_as_uint16%3#1"
      ]
    },
    "5193": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%7#1",
        "tmp%12#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%12#0",
        "tmp%14#0",
        "aggregate%head%7#1"
      ]
    },
    "5194": {
      "op": "swap",
      "stack_out": [
        "tmp%12#0",
        "aggregate%head%7#1",
        "tmp%14#0"
      ]
    },
    "5195": {
      "op": "concat",
      "defined_out": [
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_2#0"
      ],
      "stack_out": [
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_2#0"
      ]
    },
    "5196": {
      "op": "swap",
      "stack_out": [
        "inner_txn_params%1%%param_ApplicationArgs_idx_2#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "5197": {
      "op": "frame_dig -1",
      "defined_out": [
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_2#0",
        "inner_txn_params%1%%param_ApplicationID_idx_0#0"
      ],
      "stack_out": [
        "inner_txn_params%1%%param_ApplicationArgs_idx_2#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%1%%param_ApplicationID_idx_0#0"
      ]
    },
    "5199": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "inner_txn_params%1%%param_ApplicationArgs_idx_2#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "5201": {
      "op": "bytec 58 // method \"logs_are_equal((uint64,string),(uint64,string))bool\"",
      "defined_out": [
        "Method(logs_are_equal((uint64,string),(uint64,string))bool)",
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_2#0"
      ],
      "stack_out": [
        "inner_txn_params%1%%param_ApplicationArgs_idx_2#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0",
        "Method(logs_are_equal((uint64,string),(uint64,string))bool)"
      ]
    },
    "5203": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "inner_txn_params%1%%param_ApplicationArgs_idx_2#0",
        "inner_txn_params%1%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "5205": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "inner_txn_params%1%%param_ApplicationArgs_idx_2#0"
      ]
    },
    "5207": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "5209": {
      "op": "intc_1 // appl",
      "defined_out": [
        "appl"
      ],
      "stack_out": [
        "appl"
      ]
    },
    "5210": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "5212": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0"
      ]
    },
    "5213": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "5215": {
      "block": "test_named_tuples_next_txn@2",
      "stack_in": [],
      "op": "itxn_submit"
    },
    "5216": {
      "op": "itxn LastLog",
      "defined_out": [
        "awst_tmp%1#0"
      ],
      "stack_out": [
        "awst_tmp%1#0"
      ]
    },
    "5218": {
      "op": "dup",
      "defined_out": [
        "awst_tmp%1#0",
        "awst_tmp%1#0 (copy)"
      ],
      "stack_out": [
        "awst_tmp%1#0",
        "awst_tmp%1#0 (copy)"
      ]
    },
    "5219": {
      "op": "extract 4 0",
      "defined_out": [
        "awst_tmp%1#0",
        "tmp%16#0"
      ],
      "stack_out": [
        "awst_tmp%1#0",
        "tmp%16#0"
      ]
    },
    "5222": {
      "op": "swap",
      "stack_out": [
        "tmp%16#0",
        "awst_tmp%1#0"
      ]
    },
    "5223": {
      "op": "extract 0 4",
      "defined_out": [
        "tmp%16#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "tmp%16#0",
        "tmp%17#0"
      ]
    },
    "5226": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%16#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "tmp%16#0",
        "tmp%17#0",
        "0x151f7c75"
      ]
    },
    "5227": {
      "op": "==",
      "defined_out": [
        "tmp%16#0",
        "tmp%18#0"
      ],
      "stack_out": [
        "tmp%16#0",
        "tmp%18#0"
      ]
    },
    "5228": {
      "error": "application log value is not the result of an ABI return",
      "op": "assert // application log value is not the result of an ABI return",
      "stack_out": [
        "tmp%16#0"
      ]
    },
    "5229": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%16#0"
      ],
      "stack_out": [
        "tmp%16#0",
        "0"
      ]
    },
    "5230": {
      "op": "getbit",
      "defined_out": [
        "result#0"
      ],
      "stack_out": [
        "result#0"
      ]
    },
    "5231": {
      "op": "!",
      "defined_out": [
        "tmp%20#0"
      ],
      "stack_out": [
        "tmp%20#0"
      ]
    },
    "5232": {
      "op": "assert",
      "stack_out": []
    },
    "5233": {
      "retsub": true,
      "op": "retsub"
    },
    "5234": {
      "subroutine": "test_cases.typed_abi_call.typed_c2c.Greeter.test_arc4_struct",
      "params": {
        "app#0": "uint64"
      },
      "block": "test_arc4_struct",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "5237": {
      "block": "test_arc4_struct_block@0",
      "stack_in": [],
      "op": "bytec 8 // 0x6c6f672031",
      "defined_out": [
        "0x6c6f672031"
      ],
      "stack_out": [
        "0x6c6f672031"
      ]
    },
    "5239": {
      "op": "len",
      "defined_out": [
        "aggregate%length%0#1"
      ],
      "stack_out": [
        "aggregate%length%0#1"
      ]
    },
    "5240": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%0#1"
      ],
      "stack_out": [
        "aggregate%as_bytes%0#1"
      ]
    },
    "5241": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%length_uint16%0#1"
      ],
      "stack_out": [
        "aggregate%length_uint16%0#1"
      ]
    },
    "5244": {
      "op": "bytec 8 // 0x6c6f672031",
      "stack_out": [
        "aggregate%length_uint16%0#1",
        "0x6c6f672031"
      ]
    },
    "5246": {
      "op": "concat",
      "defined_out": [
        "encoded%0#0"
      ],
      "stack_out": [
        "encoded%0#0"
      ]
    },
    "5247": {
      "op": "bytec_2 // 0x",
      "defined_out": [
        "0x",
        "encoded%0#0"
      ],
      "stack_out": [
        "encoded%0#0",
        "0x"
      ]
    },
    "5248": {
      "op": "bytec 4 // 0x0000000000000001",
      "defined_out": [
        "0x",
        "0x0000000000000001",
        "encoded%0#0"
      ],
      "stack_out": [
        "encoded%0#0",
        "0x",
        "0x0000000000000001"
      ]
    },
    "5250": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%0#1",
        "encoded%0#0"
      ],
      "stack_out": [
        "encoded%0#0",
        "aggregate%head%0#1"
      ]
    },
    "5251": {
      "op": "pushint 10 // 10",
      "defined_out": [
        "10",
        "aggregate%head%0#1",
        "encoded%0#0"
      ],
      "stack_out": [
        "encoded%0#0",
        "aggregate%head%0#1",
        "10"
      ]
    },
    "5253": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%1#1",
        "aggregate%head%0#1",
        "encoded%0#0"
      ],
      "stack_out": [
        "encoded%0#0",
        "aggregate%head%0#1",
        "aggregate%as_bytes%1#1"
      ]
    },
    "5254": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%head%0#1",
        "aggregate%offset_as_uint16%0#1",
        "encoded%0#0"
      ],
      "stack_out": [
        "encoded%0#0",
        "aggregate%head%0#1",
        "aggregate%offset_as_uint16%0#1"
      ]
    },
    "5257": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%1#1",
        "encoded%0#0"
      ],
      "stack_out": [
        "encoded%0#0",
        "aggregate%head%1#1"
      ]
    },
    "5258": {
      "op": "swap",
      "stack_out": [
        "aggregate%head%1#1",
        "encoded%0#0"
      ]
    },
    "5259": {
      "op": "concat",
      "defined_out": [
        "log#0"
      ],
      "stack_out": [
        "log#0"
      ]
    },
    "5260": {
      "op": "dup",
      "defined_out": [
        "log#0"
      ],
      "stack_out": [
        "log#0",
        "log#0"
      ]
    },
    "5261": {
      "op": "itxn_begin",
      "defined_out": [
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0",
        "log#0"
      ],
      "stack_out": [
        "log#0",
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "5262": {
      "op": "frame_dig -1",
      "defined_out": [
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%0%%param_ApplicationID_idx_0#0",
        "log#0"
      ],
      "stack_out": [
        "log#0",
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0",
        "inner_txn_params%0%%param_ApplicationID_idx_0#0"
      ]
    },
    "5264": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "log#0",
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "5266": {
      "op": "pushbytes 0xdc4f1992 // method \"echo_log_struct((uint64,string))(uint64,string)\"",
      "defined_out": [
        "Method(echo_log_struct((uint64,string))(uint64,string))",
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0",
        "log#0"
      ],
      "stack_out": [
        "log#0",
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0",
        "Method(echo_log_struct((uint64,string))(uint64,string))"
      ]
    },
    "5272": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "log#0",
        "inner_txn_params%0%%param_ApplicationArgs_idx_1#0"
      ]
    },
    "5274": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "log#0"
      ]
    },
    "5276": {
      "op": "intc_1 // appl",
      "defined_out": [
        "appl",
        "log#0"
      ],
      "stack_out": [
        "log#0",
        "appl"
      ]
    },
    "5277": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "log#0"
      ]
    },
    "5279": {
      "op": "intc_0 // 0",
      "stack_out": [
        "log#0",
        "0"
      ]
    },
    "5280": {
      "op": "itxn_field Fee",
      "stack_out": [
        "log#0"
      ]
    },
    "5282": {
      "block": "test_arc4_struct_next_txn@1",
      "stack_in": [
        "log#0"
      ],
      "op": "itxn_submit"
    },
    "5283": {
      "op": "itxn LastLog",
      "defined_out": [
        "awst_tmp%0#0"
      ],
      "stack_out": [
        "log#0",
        "awst_tmp%0#0"
      ]
    },
    "5285": {
      "op": "dup",
      "defined_out": [
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ],
      "stack_out": [
        "log#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ]
    },
    "5286": {
      "op": "extract 4 0",
      "defined_out": [
        "awst_tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "log#0",
        "awst_tmp%0#0",
        "tmp%1#0"
      ]
    },
    "5289": {
      "op": "swap",
      "stack_out": [
        "log#0",
        "tmp%1#0",
        "awst_tmp%0#0"
      ]
    },
    "5290": {
      "op": "extract 0 4",
      "defined_out": [
        "tmp%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "log#0",
        "tmp%1#0",
        "tmp%2#0"
      ]
    },
    "5293": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "log#0",
        "tmp%1#0",
        "tmp%2#0",
        "0x151f7c75"
      ]
    },
    "5294": {
      "op": "==",
      "defined_out": [
        "tmp%1#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "log#0",
        "tmp%1#0",
        "tmp%3#0"
      ]
    },
    "5295": {
      "error": "application log value is not the result of an ABI return",
      "op": "assert // application log value is not the result of an ABI return",
      "defined_out": [
        "result#0"
      ],
      "stack_out": [
        "log#0",
        "result#0"
      ]
    },
    "5296": {
      "op": "itxn LastLog",
      "defined_out": [
        "result#0",
        "txn.LastLog#0"
      ],
      "stack_out": [
        "log#0",
        "result#0",
        "txn.LastLog#0"
      ]
    },
    "5298": {
      "op": "swap",
      "stack_out": [
        "log#0",
        "txn.LastLog#0",
        "result#0"
      ]
    },
    "5299": {
      "op": "uncover 2",
      "defined_out": [
        "log#0",
        "result#0",
        "txn.LastLog#0"
      ],
      "stack_out": [
        "txn.LastLog#0",
        "result#0",
        "log#0"
      ]
    },
    "5301": {
      "op": "dup",
      "defined_out": [
        "log#0 (copy)",
        "result#0",
        "txn.LastLog#0"
      ],
      "stack_out": [
        "txn.LastLog#0",
        "result#0",
        "log#0 (copy)",
        "log#0 (copy)"
      ]
    },
    "5302": {
      "op": "cover 3",
      "stack_out": [
        "log#0",
        "txn.LastLog#0",
        "result#0",
        "log#0 (copy)"
      ]
    },
    "5304": {
      "op": "==",
      "defined_out": [
        "log#0",
        "tmp%4#0",
        "txn.LastLog#0"
      ],
      "stack_out": [
        "log#0",
        "txn.LastLog#0",
        "tmp%4#0"
      ]
    },
    "5305": {
      "error": "expected output to match input",
      "op": "assert // expected output to match input",
      "stack_out": [
        "log#0",
        "txn.LastLog#0"
      ]
    },
    "5306": {
      "op": "dup",
      "defined_out": [
        "log#0",
        "txn.LastLog#0",
        "txn.LastLog#0 (copy)"
      ],
      "stack_out": [
        "log#0",
        "txn.LastLog#0",
        "txn.LastLog#0 (copy)"
      ]
    },
    "5307": {
      "op": "extract 4 0",
      "defined_out": [
        "log#0",
        "tmp%5#0",
        "txn.LastLog#0"
      ],
      "stack_out": [
        "log#0",
        "txn.LastLog#0",
        "tmp%5#0"
      ]
    },
    "5310": {
      "op": "swap",
      "stack_out": [
        "log#0",
        "tmp%5#0",
        "txn.LastLog#0"
      ]
    },
    "5311": {
      "op": "extract 0 4",
      "defined_out": [
        "log#0",
        "tmp%5#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "log#0",
        "tmp%5#0",
        "tmp%6#0"
      ]
    },
    "5314": {
      "op": "bytec_0 // 0x151f7c75",
      "stack_out": [
        "log#0",
        "tmp%5#0",
        "tmp%6#0",
        "0x151f7c75"
      ]
    },
    "5315": {
      "op": "==",
      "defined_out": [
        "log#0",
        "tmp%5#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "log#0",
        "tmp%5#0",
        "tmp%7#0"
      ]
    },
    "5316": {
      "error": "application log value is not the result of an ABI return",
      "op": "assert // application log value is not the result of an ABI return",
      "stack_out": [
        "log#0",
        "tmp%5#0"
      ]
    },
    "5317": {
      "op": "==",
      "defined_out": [
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0"
      ]
    },
    "5318": {
      "error": "expected output to match input",
      "op": "assert // expected output to match input",
      "stack_out": []
    },
    "5319": {
      "retsub": true,
      "op": "retsub"
    }
  }
}