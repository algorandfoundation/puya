{
  "version": 3,
  "sources": [
    "../typed_c2c.py"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgBA;;AAAA;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AA4UK;;AAAA;AAAA;AAAA;;AAAA;AA5UL;;;AAAA;AAAA;;AA8UuB;;;;AAAA;;;;AAEX;;;;AACA;;;;AAHW;;;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAAA;AAMf;AACe;;;AAAA;;;;AAEX;;;;;;;;;;;;;;;;;;;;;AACA;;;;AAHW;;;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAAA;AAMR;AAAP;AAfH;;AAVA;;AAAA;AAAA;AAAA;;AAAA;AAlUL;;;AAAA;AAAA;;AAoUuB;;;;AAAA;;;;AAAA;;;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;AACE;;AAAV;AAAP;AACoB;;;;AAAA;;;;AAAA;;;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AACE;;AAAf;AAAP;AAEA;;;AAAA;;;;AAAA;;;AAAA;;;AAAA;AAAA;;AAAA;;;AAAA;AAAA;AAAA;AAC4B;;AAArB;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAA4C;;AAA5C;AAAP;AARH;;AA9CA;;AAAA;AAAA;AAAA;;AAAA;AApRL;;;AAAA;AAAA;;AAuRsB;;;;AAAA;;;;AAEV;;;;AAFU;;;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;;;;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;;AAMP;;AAAM;;AAAN;AAAP;AACO;;AAAM;;AAAN;AAAP;AACO;;AAAS;AAAT;AAAP;AACO;AAAS;;AAAT;AAAP;AACgB;;AAAT;AAAP;AAGc;;;;AAAA;;;;AAEV;;;;AAFU;;;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;;;;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;;AAMP;;AAAM;;AAAN;AAAP;AACO;;AAAM;;AAAN;AAAP;AACO;;AAAS;AAAT;AAAP;AACO;AAAS;;AAAT;AAAP;AACgB;;AAAT;AAAP;AAGc;;;AAAA;;;;AAEV;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAFU;;;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;;;;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;;AAWP;;AAAM;;;;;;;;;;;AAAN;AAAP;AACO;;AAAM;;;;;;;;;;;;;AAAN;AAAP;AACO;;AAAS;;AAAT;AAAP;AACO;AAAS;;;;;;;;;;AAAT;AAAP;AACgB;;;;;;;;;;AAAT;AAAP;AA5CH;;AAlDA;;AAAA;AAAA;AAAA;;AAAA;AAlOL;;;AAAA;AAAA;;AAqOsB;;;;AAAA;;;;AAEV;;;;AACA;;;;AACA;;;AACA;;;AALU;;;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;;;;AAAA;AAAA;;;AAAA;;;;AAAA;AAAA;;AAAA;;;AASP;;AAAK;;AAAL;AAAP;AACO;;AAAK;;AAAL;AAAP;AACO;;AAAK;AAAL;AAAP;AACO;AAAM;;AAAN;AAAP;AAGgB;AAIZ;AAAA;;;;;AAJY;;;;AAEZ;;;;AACA;;;;;;AAEA;;;AALY;;;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;;;;AAAA;AAAA;;;AAAA;;;;AAAA;AAAA;;AAAA;;;AAQT;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAP;AAGgB;;;;;AAAA;;;;AAEZ;;;;AACA;;;;AACA;;;AACA;;;AALY;;;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;;;;AAAA;AAAA;;;AAAA;;;;AAAA;AAAA;;AAAA;;;AAQT;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAP;AAGqB;;;;;AAAA;;;;AAEjB;;;;AACA;;;;AACA;;;AACA;;;AALiB;;;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;;;;AAAA;AAAA;;;AAAA;;;;AAAA;AAAA;;AAAA;;;AAQd;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAP;AAhDH;;AA3DA;;AAAA;AAAA;AAAA;;AAAA;AAvKL;;;AAAA;AAAA;;AA0KuB;;;;AAAA;;;;AAIX;;;;AACA;;;;AACA;;;AACA;;;AAPW;;;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;;;AAAA;AAAA;AAAA;AAUD;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;;AACP;;AAAA;;;AAAA;AAAY;;AAAZ;AAAP;AACO;;AAAA;;;AAAA;AAAY;;AAAZ;AAAP;AACO;;;;AAAA;AAAA;AAAY;AAAZ;AAAP;AACO;;AAAa;;AAAb;AAAP;AAGe;AAMX;AAAA;;;;;AANW;;;;AAIX;;;;AACA;;;;;;AAEA;;;AAPW;;;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAUR;;AAAA;AAAP;AAGe;;;;;AAAA;;;;AAIX;;;;AACA;;;;AACA;;;AACA;;;AAPW;;;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAUR;;AAAA;AAAP;AAGqB;;;;;AAAA;;;;AAEjB;;;;AACA;;;;AACA;;;AACA;;;AALiB;;;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;;;;AAAA;AAAA;;;AAAA;;;;AAAA;AAAA;;AAAA;;;AAQd;;AAAA;;AAAA;AAAP;AACO;;AAAA;;AAAA;AAAP;AACO;;AAAA;AAAP;AACO;AAAP;AAzDH;;AAXA;;AAAA;AAAA;AAAA;;AAAA;AA5JL;;;AAAA;AAAA;;AA8JwB;;;;AAAA;;;;AAA0C;;;AAA1C;;;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AACT;AAAW;;AAAX;AAAP;AAEgB;;;;;AAAA;;;;AAA0C;;;AAA1C;;;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AACT;;AAAA;AAAP;AAEgB;;;;AAAA;;;;AAA0C;;;AAA1C;;;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AACT;AAAP;AATH;;AAXA;;AAAA;AAAA;AAAA;;AAAA;AAjJL;;;AAAA;AAAA;;AAmJwB;;;;AAAA;;;;AAAyC;;;AAAzC;;;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;AACT;AAAW;AAAX;AAAP;AAEgB;AAAyC;AAAA;;;;;AAAzC;;;;;;AAAA;;;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;AACT;;AAAA;AAAP;AAEgB;;;;AAAA;;;;AAAyC;;;AAAzC;;;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;AACT;AAAP;AATH;;AAbA;;AAAA;AAAA;AAAA;;AAAA;AApIL;;;AAAA;AAAA;;AAsIwB;;;;AAAA;;;;AAAwC;;;;AAAxC;;;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AACT;AAAW;;;;;;;;;AAAX;AAAP;AAEgB;;;;;AAAA;;;;AAAwC;;;;AAAxC;;;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AACT;;AAAA;AAAP;AAEgB;;;;AAAA;;;;AACc;;;;AADd;;;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAGT;AAAP;AAXH;;AAXA;;AAAA;AAAA;AAAA;;AAAA;AAzHL;;;AAAA;AAAA;;AA2HwB;;;;AAAA;;;;AAAyC;;;;AAAzC;;;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AACT;AAAW;;;;;;;;;AAAX;AAAP;AAEgB;;;;;AAAA;;;;AAAyC;;;;AAAzC;;;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AACT;;AAAA;AAAP;AAEgB;;;;AAAA;;;;AAAyC;;;;AAAzC;;;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AACT;AAAP;AATH;;AATA;;AAAA;AAAA;AAAA;;AAAA;AAhHL;;;AAAA;AAAA;;AAkHc;AAEF;;;;;AAFE;;;;;;;;;;AAAA;;;AAAA;;;AAAA;;;AAKiB;;AAAhB;AAAP;AAPH;;AAdA;;AAAA;AAAA;AAAA;;AAAA;AAlGL;;;AAAA;AAAA;;AAAA;;;AAAA;AAAA;;AAoGc;AAGF;;;;;;;;;;;;;;;;AAHE;;;;;;;;AAEF;;;;;AACA;;;;;AACA;;;;;AAJE;;;AAAA;;;AAAA;;;AASC;AAAA;;AAAA;AAAa;;AAAb;AAAwD;;AAAA;;AAAA;AAAxD;AADH;AADJ;AATH;;AAdA;;AAAA;AAAA;AAAA;;AAAA;AApFL;;;AAAA;AAAA;;AAsFc;;;;AAAA;;;;AAAgD;;;;;;;;;;;;AAAhD;;;AAAA;;;AAAA;;;AACiB;;;;;;;;AAAhB;AAAP;AAEM;;;;AAAA;;;;AAA4C;;;;;;;;;;;;AAA5C;;;AAAA;;;AAAA;;;AACiB;;;;;;;;AAAhB;AAAP;AAEM;;;;AAAA;;;;AAA+B;;;;;;;;;;;;AAA/B;;;AAAA;;;AAAA;;;AACiB;;;;;;;;AAAhB;AAAP;AAEM;;;AAAA;;;;AAAiC;;;;;;;;;;;;AAAjC;;;AAAA;;;AAAA;;;AACiB;;;;;;;;AAAhB;AAAP;AAZH;;AA5BA;;AAAA;AAAA;AAAA;;AAAA;AAxDL;;;AAAA;AAAA;;AA0DsB;;;AAAA;;;;;;;;AAEV;;;AACA;;;;AACA;;;;AACA;;;;;;;;;;;;AACA;;;;;;;;;;;;AACA;;;;;;;;;;;;AACA;;;;;;;;;;;;AACA;;;;;;;;;;;;AACA;;;;;;;;;;;;AACA;;;;;;;;;;;;AACA;;;;;;;;;;;;AACA;;;;;;;;;;;;AACA;;;;;;;;;;;;AACA;;;;;;;;;;;;AACA;;;;AAhBU;;;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAwBP;;;AAAiB;;AAAjB;AAAP;AA1BH;;AAjBA;;AAAA;AAAA;AAAA;;AAAA;AAvCL;;;AAAA;AAAA;;AAyCc;;;;AAAA;;;;AAAiC;;;;;;;;;;;;;;;;AAAjC;;;AAAA;;;AAAA;;;AACiB;;;;;;;;;;;;AAAhB;AAAP;AAEM;;;;AAAA;;;;;;;;AAAiC;;;;AAAjC;;;AAAA;;;AAAA;;;AACyB;AAAR;AAAhB;AAAP;AAEM;;;;AAAA;;;;;;;;AAAkC;;;;AAAlC;;;AAAA;;;AAAA;;;AACkB;;AAAjB;AAAP;AAEM;;;;AAAA;;;;;;;;AAAgC;;;;;;;AAAhC;;;AAAA;;;AAAA;;;AACiB;;;AAAhB;AAAP;AAEM;;;AAAA;;;;;;;;AAA+B;;;;;AAA/B;;;AAAA;;;AAAA;;;AACiB;;;;;;AAAhB;AAAP;AAfH;;AAfA;;AAAA;AAAA;AAAA;;AAAA;AAxBL;;;AAAA;AAAA;;AA0BQ;;;;AAAA;;;AAAiD;;;;;;;;;;;;;;;;;;;;AAAjD;;;AAAA;;;AAAA;AAAA;;AAAA;;;AAAA;AAAA;AAAA;AAC4B;;AAArB;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAA4C;;;;;;;;;;;;;;;;;;;;;;;;AAA5C;AAAP;AAEA;;;;AAAA;;;AAAoC;;;;;;;;;;;;;;;;;;;;;;AAApC;;;AAAA;;;AAAA;AAC4B;;AAArB;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAA4C;;;;;;;;;;;;;;;;;;;;;;;;;;AAA5C;AAAP;AAES;;;;AAAA;;;AAAiD;;;;;;;;;;;AAAjD;;;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;AACF;AAAa;;AAAb;AAAP;AACO;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAA4C;;AAA5C;AAAP;AAEa;;;AAAA;;;AAAoC;;;;;;;;;;;;;AAApC;;;AAAA;;;AAAA;;;AACN;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAA6C;;;;;;;;;;;;;;;;;AAA7C;AAAP;AAbH;;AAdA;;AAAA;AAAA;AAAA;;AAAA;AAVL;;;AAAA;AAAA;;AAauB;;;;AAAA;;;AAA2B;;;;;;;;;;;AAA3B;;;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AACE;;;;;;;;;;;;;;;AAAV;AAAP;AACe;;;;AAAA;;;AAAiC;;;;;;;;;;;AAAjC;;;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AACE;;;;;;;;;;;;;;;AAAV;AAAP;AACe;;;;AAAA;;;AAAmC;;;;;;;;;;;AAAnC;;;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AACE;;;;;;;;;;;;;;;AAAV;AAAP;AACe;;;;AAAA;;;AAA2C;;;;;;;;;;;AAA3C;;;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AACE;;;;;;;;;;;;;;;AAAV;AAAP;AACe;;;AAAA;;;AAAiD;;;;;;;;;;;AAAjD;;;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AACE;;;;;;;;;;;;;;;AAAV;AAAP;AAZH;;AATA;;AAAA;AAAA;AAAA;;AAAA;AADL;;;AAAA;;;AAAA;;;AAAA;;;AAAA;;;AAAA;AAAA;;AAGQ;AAEI;;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AACA;;AAAA;AAAA;AAAA;;;AAAA;;AAAA;;;;;AAHJ;;;;;;;;;;;;;AAAA;;;AAAA;;;AAAA;AAFH;;AADL;;AAAA;;;;;;;;",
  "op_pc_offset": 0,
  "pc_events": {
    "1": {
      "subroutine": "algopy.arc4.ARC4Contract.approval_program",
      "params": {},
      "block": "main",
      "stack_in": [],
      "op": "intcblock 0 6 1 2"
    },
    "7": {
      "op": "bytecblock 0x151f7c75 0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002 0x0000000000000001 0x9bf81913 0x16e03919 0x00027331 0x00026231 0xb4b4334e \"echo: s1\" 0x0000000000000001000a00056c6f672031 0xb862ee19 0xab271ce4 0x0000000000000003 0x03 0xd8cc363b 0xa9fb6cf1 0x2659e818 0x000162 0x4a444c77 0x000173 0xddd07185 0x000000000000002a 0x00040010000400080002733100027332000000000000000100000000000000020012000133 0x00086563686f3a207332 0x6563686f3a2033 0x6563686f3a206231 0x0000000000000002 0x0f101112deadbeef14 0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000003 0x000b6563686f3a207475706c65"
    },
    "367": {
      "op": "txn NumAppArgs",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "369": {
      "op": "bz main_bare_routing@22",
      "stack_out": []
    },
    "372": {
      "op": "pushbytess 0x07916bea 0x1859b0ba 0x4eb11b0d 0x0d176a4a 0xb54730c8 0x7859eaf7 0x24478a3c 0xe44b2eaf 0x7a60c035 0x6a559cb3 0x1be60712 0x19cb78a4 0xf0ef6873 0x3d2bfe37 0x54e98f56 0xf55b7567 0x8598bb43 // method \"test_is_a_b(byte[],byte[],application)void\", method \"test_method_selector_kinds(application)void\", method \"test_method_overload(application)void\", method \"test_arg_conversion(application)void\", method \"test_15plus_args(application)void\", method \"test_void(application)void\", method \"test_ref_types(application,asset)void\", method \"test_account_to_address(application)void\", method \"test_native_string(application)void\", method \"test_native_bytes(application)void\", method \"test_native_uint64(application)void\", method \"test_native_biguint(application)void\", method \"test_native_tuple(application)void\", method \"test_native_tuple_method_ref(application)void\", method \"test_nested_tuples(application)void\", method \"test_no_args(application)void\", method \"test_named_tuples(application)void\"",
      "defined_out": [
        "Method(test_15plus_args(application)void)",
        "Method(test_account_to_address(application)void)",
        "Method(test_arg_conversion(application)void)",
        "Method(test_is_a_b(byte[],byte[],application)void)",
        "Method(test_method_overload(application)void)",
        "Method(test_method_selector_kinds(application)void)",
        "Method(test_named_tuples(application)void)",
        "Method(test_native_biguint(application)void)",
        "Method(test_native_bytes(application)void)",
        "Method(test_native_string(application)void)",
        "Method(test_native_tuple(application)void)",
        "Method(test_native_tuple_method_ref(application)void)",
        "Method(test_native_uint64(application)void)",
        "Method(test_nested_tuples(application)void)",
        "Method(test_no_args(application)void)",
        "Method(test_ref_types(application,asset)void)",
        "Method(test_void(application)void)"
      ],
      "stack_out": [
        "Method(test_is_a_b(byte[],byte[],application)void)",
        "Method(test_method_selector_kinds(application)void)",
        "Method(test_method_overload(application)void)",
        "Method(test_arg_conversion(application)void)",
        "Method(test_15plus_args(application)void)",
        "Method(test_void(application)void)",
        "Method(test_ref_types(application,asset)void)",
        "Method(test_account_to_address(application)void)",
        "Method(test_native_string(application)void)",
        "Method(test_native_bytes(application)void)",
        "Method(test_native_uint64(application)void)",
        "Method(test_native_biguint(application)void)",
        "Method(test_native_tuple(application)void)",
        "Method(test_native_tuple_method_ref(application)void)",
        "Method(test_nested_tuples(application)void)",
        "Method(test_no_args(application)void)",
        "Method(test_named_tuples(application)void)"
      ]
    },
    "459": {
      "op": "txna ApplicationArgs 0",
      "defined_out": [
        "Method(test_15plus_args(application)void)",
        "Method(test_account_to_address(application)void)",
        "Method(test_arg_conversion(application)void)",
        "Method(test_is_a_b(byte[],byte[],application)void)",
        "Method(test_method_overload(application)void)",
        "Method(test_method_selector_kinds(application)void)",
        "Method(test_named_tuples(application)void)",
        "Method(test_native_biguint(application)void)",
        "Method(test_native_bytes(application)void)",
        "Method(test_native_string(application)void)",
        "Method(test_native_tuple(application)void)",
        "Method(test_native_tuple_method_ref(application)void)",
        "Method(test_native_uint64(application)void)",
        "Method(test_nested_tuples(application)void)",
        "Method(test_no_args(application)void)",
        "Method(test_ref_types(application,asset)void)",
        "Method(test_void(application)void)",
        "tmp%2#0"
      ],
      "stack_out": [
        "Method(test_is_a_b(byte[],byte[],application)void)",
        "Method(test_method_selector_kinds(application)void)",
        "Method(test_method_overload(application)void)",
        "Method(test_arg_conversion(application)void)",
        "Method(test_15plus_args(application)void)",
        "Method(test_void(application)void)",
        "Method(test_ref_types(application,asset)void)",
        "Method(test_account_to_address(application)void)",
        "Method(test_native_string(application)void)",
        "Method(test_native_bytes(application)void)",
        "Method(test_native_uint64(application)void)",
        "Method(test_native_biguint(application)void)",
        "Method(test_native_tuple(application)void)",
        "Method(test_native_tuple_method_ref(application)void)",
        "Method(test_nested_tuples(application)void)",
        "Method(test_no_args(application)void)",
        "Method(test_named_tuples(application)void)",
        "tmp%2#0"
      ]
    },
    "462": {
      "op": "match main_test_is_a_b_route@3 main_test_method_selector_kinds_route@4 main_test_method_overload_route@5 main_test_arg_conversion_route@6 main_test_15plus_args_route@7 main_test_void_route@8 main_test_ref_types_route@9 main_test_account_to_address_route@10 main_test_native_string_route@11 main_test_native_bytes_route@12 main_test_native_uint64_route@13 main_test_native_biguint_route@14 main_test_native_tuple_route@15 main_test_native_tuple_method_ref_route@16 main_test_nested_tuples_route@17 main_test_no_args_route@18 main_test_named_tuples_route@19",
      "stack_out": []
    },
    "498": {
      "block": "main_after_if_else@26",
      "stack_in": [],
      "op": "intc_0 // 0",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "499": {
      "op": "return",
      "stack_out": []
    },
    "500": {
      "block": "main_test_named_tuples_route@19",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%105#0"
      ],
      "stack_out": [
        "tmp%105#0"
      ]
    },
    "502": {
      "op": "!",
      "defined_out": [
        "tmp%106#0"
      ],
      "stack_out": [
        "tmp%106#0"
      ]
    },
    "503": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "504": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%107#0"
      ],
      "stack_out": [
        "tmp%107#0"
      ]
    },
    "506": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "507": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[1]%17#0"
      ],
      "stack_out": [
        "reinterpret_bytes[1]%17#0"
      ]
    },
    "510": {
      "op": "btoi",
      "defined_out": [
        "tmp%109#0"
      ],
      "stack_out": [
        "tmp%109#0"
      ]
    },
    "511": {
      "op": "txnas Applications",
      "defined_out": [
        "app#0"
      ],
      "stack_out": [
        "app#0"
      ]
    },
    "513": {
      "op": "itxn_begin"
    },
    "514": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "app#0 (copy)"
      ],
      "stack_out": [
        "app#0",
        "app#0 (copy)"
      ]
    },
    "515": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "app#0"
      ]
    },
    "517": {
      "op": "bytec 20 // method \"logs_are_equal((uint64,string),(uint64,string))bool\"",
      "defined_out": [
        "Method(logs_are_equal((uint64,string),(uint64,string))bool)",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "Method(logs_are_equal((uint64,string),(uint64,string))bool)"
      ]
    },
    "519": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0"
      ]
    },
    "521": {
      "op": "bytec 9 // 0x0000000000000001000a00056c6f672031",
      "defined_out": [
        "0x0000000000000001000a00056c6f672031",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "0x0000000000000001000a00056c6f672031"
      ]
    },
    "523": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0"
      ]
    },
    "525": {
      "op": "bytec 9 // 0x0000000000000001000a00056c6f672031",
      "stack_out": [
        "app#0",
        "0x0000000000000001000a00056c6f672031"
      ]
    },
    "527": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0"
      ]
    },
    "529": {
      "op": "intc_1 // appl",
      "defined_out": [
        "app#0",
        "appl"
      ],
      "stack_out": [
        "app#0",
        "appl"
      ]
    },
    "530": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "app#0"
      ]
    },
    "532": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "0"
      ]
    },
    "533": {
      "op": "itxn_field Fee",
      "stack_out": [
        "app#0"
      ]
    },
    "535": {
      "op": "itxn_submit"
    },
    "536": {
      "op": "itxn LastLog",
      "defined_out": [
        "app#0",
        "awst_tmp%0#0"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0"
      ]
    },
    "538": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ]
    },
    "539": {
      "op": "extract 4 0",
      "defined_out": [
        "app#0",
        "awst_tmp%0#0",
        "tmp%0#2"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "tmp%0#2"
      ]
    },
    "542": {
      "op": "swap",
      "stack_out": [
        "app#0",
        "tmp%0#2",
        "awst_tmp%0#0"
      ]
    },
    "543": {
      "op": "extract 0 4",
      "defined_out": [
        "app#0",
        "tmp%0#2",
        "tmp%1#1"
      ],
      "stack_out": [
        "app#0",
        "tmp%0#2",
        "tmp%1#1"
      ]
    },
    "546": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "app#0",
        "tmp%0#2",
        "tmp%1#1"
      ],
      "stack_out": [
        "app#0",
        "tmp%0#2",
        "tmp%1#1",
        "0x151f7c75"
      ]
    },
    "547": {
      "op": "==",
      "defined_out": [
        "app#0",
        "tmp%0#2",
        "tmp%2#1"
      ],
      "stack_out": [
        "app#0",
        "tmp%0#2",
        "tmp%2#1"
      ]
    },
    "548": {
      "error": "ARC4 prefix is valid",
      "op": "assert // ARC4 prefix is valid",
      "stack_out": [
        "app#0",
        "tmp%0#2"
      ]
    },
    "549": {
      "op": "intc_0 // 0",
      "stack_out": [
        "app#0",
        "tmp%0#2",
        "0"
      ]
    },
    "550": {
      "op": "getbit",
      "defined_out": [
        "app#0",
        "result#0"
      ],
      "stack_out": [
        "app#0",
        "result#0"
      ]
    },
    "551": {
      "op": "assert",
      "stack_out": [
        "app#0"
      ]
    },
    "552": {
      "op": "itxn_begin"
    },
    "553": {
      "op": "itxn_field ApplicationID",
      "stack_out": []
    },
    "555": {
      "op": "bytec 20 // method \"logs_are_equal((uint64,string),(uint64,string))bool\"",
      "stack_out": [
        "Method(logs_are_equal((uint64,string),(uint64,string))bool)"
      ]
    },
    "557": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "559": {
      "op": "pushbytes 0x0000000000000002000a00056c6f672032",
      "defined_out": [
        "0x0000000000000002000a00056c6f672032"
      ],
      "stack_out": [
        "0x0000000000000002000a00056c6f672032"
      ]
    },
    "578": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "580": {
      "op": "bytec 9 // 0x0000000000000001000a00056c6f672031",
      "stack_out": [
        "0x0000000000000001000a00056c6f672031"
      ]
    },
    "582": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "584": {
      "op": "intc_1 // appl",
      "stack_out": [
        "appl"
      ]
    },
    "585": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "587": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0"
      ]
    },
    "588": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "590": {
      "op": "itxn_submit"
    },
    "591": {
      "op": "itxn LastLog",
      "defined_out": [
        "awst_tmp%1#0"
      ],
      "stack_out": [
        "awst_tmp%1#0"
      ]
    },
    "593": {
      "op": "dup",
      "defined_out": [
        "awst_tmp%1#0",
        "awst_tmp%1#0 (copy)"
      ],
      "stack_out": [
        "awst_tmp%1#0",
        "awst_tmp%1#0 (copy)"
      ]
    },
    "594": {
      "op": "extract 4 0",
      "defined_out": [
        "awst_tmp%1#0",
        "tmp%4#1"
      ],
      "stack_out": [
        "awst_tmp%1#0",
        "tmp%4#1"
      ]
    },
    "597": {
      "op": "swap",
      "stack_out": [
        "tmp%4#1",
        "awst_tmp%1#0"
      ]
    },
    "598": {
      "op": "extract 0 4",
      "defined_out": [
        "tmp%4#1",
        "tmp%5#1"
      ],
      "stack_out": [
        "tmp%4#1",
        "tmp%5#1"
      ]
    },
    "601": {
      "op": "bytec_0 // 0x151f7c75",
      "stack_out": [
        "tmp%4#1",
        "tmp%5#1",
        "0x151f7c75"
      ]
    },
    "602": {
      "op": "==",
      "defined_out": [
        "tmp%4#1",
        "tmp%6#1"
      ],
      "stack_out": [
        "tmp%4#1",
        "tmp%6#1"
      ]
    },
    "603": {
      "error": "ARC4 prefix is valid",
      "op": "assert // ARC4 prefix is valid",
      "stack_out": [
        "tmp%4#1"
      ]
    },
    "604": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%4#1",
        "0"
      ]
    },
    "605": {
      "op": "getbit",
      "stack_out": [
        "result#0"
      ]
    },
    "606": {
      "op": "!",
      "defined_out": [
        "tmp%8#1"
      ],
      "stack_out": [
        "tmp%8#1"
      ]
    },
    "607": {
      "op": "assert",
      "stack_out": []
    },
    "608": {
      "op": "intc_2 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "609": {
      "op": "return",
      "stack_out": []
    },
    "610": {
      "block": "main_test_no_args_route@18",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%99#0"
      ],
      "stack_out": [
        "tmp%99#0"
      ]
    },
    "612": {
      "op": "!",
      "defined_out": [
        "tmp%100#0"
      ],
      "stack_out": [
        "tmp%100#0"
      ]
    },
    "613": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "614": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%101#0"
      ],
      "stack_out": [
        "tmp%101#0"
      ]
    },
    "616": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "617": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[1]%16#0"
      ],
      "stack_out": [
        "reinterpret_bytes[1]%16#0"
      ]
    },
    "620": {
      "op": "btoi",
      "defined_out": [
        "tmp%103#0"
      ],
      "stack_out": [
        "tmp%103#0"
      ]
    },
    "621": {
      "op": "txnas Applications",
      "defined_out": [
        "app#0"
      ],
      "stack_out": [
        "app#0"
      ]
    },
    "623": {
      "op": "itxn_begin"
    },
    "624": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "app#0 (copy)"
      ],
      "stack_out": [
        "app#0",
        "app#0 (copy)"
      ]
    },
    "625": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "app#0"
      ]
    },
    "627": {
      "op": "bytec 10 // method \"no_args()uint64\"",
      "defined_out": [
        "Method(no_args()uint64)",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "Method(no_args()uint64)"
      ]
    },
    "629": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0"
      ]
    },
    "631": {
      "op": "intc_1 // appl",
      "defined_out": [
        "app#0",
        "appl"
      ],
      "stack_out": [
        "app#0",
        "appl"
      ]
    },
    "632": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "app#0"
      ]
    },
    "634": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "0"
      ]
    },
    "635": {
      "op": "itxn_field Fee",
      "stack_out": [
        "app#0"
      ]
    },
    "637": {
      "op": "itxn_submit"
    },
    "638": {
      "op": "itxn LastLog",
      "defined_out": [
        "app#0",
        "awst_tmp%0#0"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0"
      ]
    },
    "640": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ]
    },
    "641": {
      "op": "extract 4 0",
      "defined_out": [
        "app#0",
        "awst_tmp%0#0",
        "tmp%0#3"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "tmp%0#3"
      ]
    },
    "644": {
      "op": "swap",
      "stack_out": [
        "app#0",
        "tmp%0#3",
        "awst_tmp%0#0"
      ]
    },
    "645": {
      "op": "extract 0 4",
      "defined_out": [
        "app#0",
        "tmp%0#3",
        "tmp%1#1"
      ],
      "stack_out": [
        "app#0",
        "tmp%0#3",
        "tmp%1#1"
      ]
    },
    "648": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "app#0",
        "tmp%0#3",
        "tmp%1#1"
      ],
      "stack_out": [
        "app#0",
        "tmp%0#3",
        "tmp%1#1",
        "0x151f7c75"
      ]
    },
    "649": {
      "op": "==",
      "defined_out": [
        "app#0",
        "tmp%0#3",
        "tmp%2#1"
      ],
      "stack_out": [
        "app#0",
        "tmp%0#3",
        "tmp%2#1"
      ]
    },
    "650": {
      "error": "ARC4 prefix is valid",
      "op": "assert // ARC4 prefix is valid",
      "stack_out": [
        "app#0",
        "tmp%0#3"
      ]
    },
    "651": {
      "op": "btoi",
      "defined_out": [
        "app#0",
        "result#2"
      ],
      "stack_out": [
        "app#0",
        "result#2"
      ]
    },
    "652": {
      "op": "pushint 42 // 42",
      "defined_out": [
        "42",
        "app#0",
        "result#2"
      ],
      "stack_out": [
        "app#0",
        "result#2",
        "42"
      ]
    },
    "654": {
      "op": "==",
      "defined_out": [
        "app#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "app#0",
        "tmp%4#0"
      ]
    },
    "655": {
      "op": "assert",
      "stack_out": [
        "app#0"
      ]
    },
    "656": {
      "op": "itxn_begin"
    },
    "657": {
      "op": "dup",
      "stack_out": [
        "app#0",
        "app#0 (copy)"
      ]
    },
    "658": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "app#0"
      ]
    },
    "660": {
      "op": "bytec 10 // method \"no_args()uint64\"",
      "stack_out": [
        "app#0",
        "Method(no_args()uint64)"
      ]
    },
    "662": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0"
      ]
    },
    "664": {
      "op": "intc_1 // appl",
      "stack_out": [
        "app#0",
        "appl"
      ]
    },
    "665": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "app#0"
      ]
    },
    "667": {
      "op": "intc_0 // 0",
      "stack_out": [
        "app#0",
        "0"
      ]
    },
    "668": {
      "op": "itxn_field Fee",
      "stack_out": [
        "app#0"
      ]
    },
    "670": {
      "op": "itxn_submit"
    },
    "671": {
      "op": "itxn LastLog",
      "defined_out": [
        "app#0",
        "awst_tmp%1#0"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%1#0"
      ]
    },
    "673": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "awst_tmp%1#0",
        "awst_tmp%1#0 (copy)"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%1#0",
        "awst_tmp%1#0 (copy)"
      ]
    },
    "674": {
      "op": "extract 4 0",
      "defined_out": [
        "app#0",
        "arc4_result#0",
        "awst_tmp%1#0"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%1#0",
        "arc4_result#0"
      ]
    },
    "677": {
      "op": "swap",
      "stack_out": [
        "app#0",
        "arc4_result#0",
        "awst_tmp%1#0"
      ]
    },
    "678": {
      "op": "extract 0 4",
      "defined_out": [
        "app#0",
        "arc4_result#0",
        "tmp%6#2"
      ],
      "stack_out": [
        "app#0",
        "arc4_result#0",
        "tmp%6#2"
      ]
    },
    "681": {
      "op": "bytec_0 // 0x151f7c75",
      "stack_out": [
        "app#0",
        "arc4_result#0",
        "tmp%6#2",
        "0x151f7c75"
      ]
    },
    "682": {
      "op": "==",
      "defined_out": [
        "app#0",
        "arc4_result#0",
        "tmp%7#1"
      ],
      "stack_out": [
        "app#0",
        "arc4_result#0",
        "tmp%7#1"
      ]
    },
    "683": {
      "error": "ARC4 prefix is valid",
      "op": "assert // ARC4 prefix is valid",
      "stack_out": [
        "app#0",
        "arc4_result#0"
      ]
    },
    "684": {
      "op": "bytec 21 // 0x000000000000002a",
      "defined_out": [
        "0x000000000000002a",
        "app#0",
        "arc4_result#0"
      ],
      "stack_out": [
        "app#0",
        "arc4_result#0",
        "0x000000000000002a"
      ]
    },
    "686": {
      "op": "b==",
      "defined_out": [
        "app#0",
        "tmp%8#1"
      ],
      "stack_out": [
        "app#0",
        "tmp%8#1"
      ]
    },
    "687": {
      "op": "assert",
      "stack_out": [
        "app#0"
      ]
    },
    "688": {
      "op": "itxn_begin"
    },
    "689": {
      "op": "itxn_field ApplicationID",
      "stack_out": []
    },
    "691": {
      "op": "bytec 10 // method \"no_args()uint64\"",
      "stack_out": [
        "Method(no_args()uint64)"
      ]
    },
    "693": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "695": {
      "op": "intc_1 // appl",
      "stack_out": [
        "appl"
      ]
    },
    "696": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "698": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0"
      ]
    },
    "699": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "701": {
      "op": "itxn_submit"
    },
    "702": {
      "op": "itxn LastLog",
      "defined_out": [
        "awst_tmp%2#0"
      ],
      "stack_out": [
        "awst_tmp%2#0"
      ]
    },
    "704": {
      "op": "extract 0 4",
      "defined_out": [
        "tmp%10#1"
      ],
      "stack_out": [
        "tmp%10#1"
      ]
    },
    "707": {
      "op": "bytec_0 // 0x151f7c75",
      "stack_out": [
        "tmp%10#1",
        "0x151f7c75"
      ]
    },
    "708": {
      "op": "==",
      "defined_out": [
        "tmp%11#1"
      ],
      "stack_out": [
        "tmp%11#1"
      ]
    },
    "709": {
      "error": "ARC4 prefix is valid",
      "op": "assert // ARC4 prefix is valid",
      "stack_out": []
    },
    "710": {
      "op": "itxn LastLog",
      "defined_out": [
        "awst_tmp%3#0"
      ],
      "stack_out": [
        "awst_tmp%3#0"
      ]
    },
    "712": {
      "op": "dup",
      "defined_out": [
        "awst_tmp%3#0",
        "awst_tmp%3#0 (copy)"
      ],
      "stack_out": [
        "awst_tmp%3#0",
        "awst_tmp%3#0 (copy)"
      ]
    },
    "713": {
      "op": "extract 4 0",
      "defined_out": [
        "awst_tmp%3#0",
        "tmp%13#1"
      ],
      "stack_out": [
        "awst_tmp%3#0",
        "tmp%13#1"
      ]
    },
    "716": {
      "op": "swap",
      "stack_out": [
        "tmp%13#1",
        "awst_tmp%3#0"
      ]
    },
    "717": {
      "op": "extract 0 4",
      "defined_out": [
        "tmp%13#1",
        "tmp%14#1"
      ],
      "stack_out": [
        "tmp%13#1",
        "tmp%14#1"
      ]
    },
    "720": {
      "op": "bytec_0 // 0x151f7c75",
      "stack_out": [
        "tmp%13#1",
        "tmp%14#1",
        "0x151f7c75"
      ]
    },
    "721": {
      "op": "==",
      "defined_out": [
        "tmp%13#1",
        "tmp%15#1"
      ],
      "stack_out": [
        "tmp%13#1",
        "tmp%15#1"
      ]
    },
    "722": {
      "error": "ARC4 prefix is valid",
      "op": "assert // ARC4 prefix is valid",
      "stack_out": [
        "tmp%13#1"
      ]
    },
    "723": {
      "op": "bytec 21 // 0x000000000000002a",
      "stack_out": [
        "tmp%13#1",
        "0x000000000000002a"
      ]
    },
    "725": {
      "op": "b==",
      "defined_out": [
        "tmp%16#1"
      ],
      "stack_out": [
        "tmp%16#1"
      ]
    },
    "726": {
      "op": "assert",
      "stack_out": []
    },
    "727": {
      "op": "intc_2 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "728": {
      "op": "return",
      "stack_out": []
    },
    "729": {
      "block": "main_test_nested_tuples_route@17",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%93#0"
      ],
      "stack_out": [
        "tmp%93#0"
      ]
    },
    "731": {
      "op": "!",
      "defined_out": [
        "tmp%94#0"
      ],
      "stack_out": [
        "tmp%94#0"
      ]
    },
    "732": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "733": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%95#0"
      ],
      "stack_out": [
        "tmp%95#0"
      ]
    },
    "735": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "736": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[1]%15#0"
      ],
      "stack_out": [
        "reinterpret_bytes[1]%15#0"
      ]
    },
    "739": {
      "op": "btoi",
      "defined_out": [
        "tmp%97#0"
      ],
      "stack_out": [
        "tmp%97#0"
      ]
    },
    "740": {
      "op": "txnas Applications",
      "defined_out": [
        "app#0"
      ],
      "stack_out": [
        "app#0"
      ]
    },
    "742": {
      "op": "itxn_begin"
    },
    "743": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "app#0 (copy)"
      ],
      "stack_out": [
        "app#0",
        "app#0 (copy)"
      ]
    },
    "744": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "app#0"
      ]
    },
    "746": {
      "op": "bytec 11 // method \"echo_nested_tuple(((string,string),(uint64,uint64,byte[])))((string,string),(uint64,uint64,byte[]))\"",
      "defined_out": [
        "Method(echo_nested_tuple(((string,string),(uint64,uint64,byte[])))((string,string),(uint64,uint64,byte[])))",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "Method(echo_nested_tuple(((string,string),(uint64,uint64,byte[])))((string,string),(uint64,uint64,byte[])))"
      ]
    },
    "748": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0"
      ]
    },
    "750": {
      "op": "bytec 22 // 0x00040010000400080002733100027332000000000000000100000000000000020012000133",
      "defined_out": [
        "0x00040010000400080002733100027332000000000000000100000000000000020012000133",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "0x00040010000400080002733100027332000000000000000100000000000000020012000133"
      ]
    },
    "752": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0"
      ]
    },
    "754": {
      "op": "intc_1 // appl",
      "defined_out": [
        "app#0",
        "appl"
      ],
      "stack_out": [
        "app#0",
        "appl"
      ]
    },
    "755": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "app#0"
      ]
    },
    "757": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "0"
      ]
    },
    "758": {
      "op": "itxn_field Fee",
      "stack_out": [
        "app#0"
      ]
    },
    "760": {
      "op": "itxn_submit"
    },
    "761": {
      "op": "itxn LastLog",
      "defined_out": [
        "app#0",
        "awst_tmp%0#0"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0"
      ]
    },
    "763": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ]
    },
    "764": {
      "op": "extract 4 0",
      "defined_out": [
        "app#0",
        "awst_tmp%0#0",
        "tmp%0#4"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "tmp%0#4"
      ]
    },
    "767": {
      "op": "swap",
      "stack_out": [
        "app#0",
        "tmp%0#4",
        "awst_tmp%0#0"
      ]
    },
    "768": {
      "op": "extract 0 4",
      "defined_out": [
        "app#0",
        "tmp%0#4",
        "tmp%1#1"
      ],
      "stack_out": [
        "app#0",
        "tmp%0#4",
        "tmp%1#1"
      ]
    },
    "771": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "app#0",
        "tmp%0#4",
        "tmp%1#1"
      ],
      "stack_out": [
        "app#0",
        "tmp%0#4",
        "tmp%1#1",
        "0x151f7c75"
      ]
    },
    "772": {
      "op": "==",
      "defined_out": [
        "app#0",
        "tmp%0#4",
        "tmp%2#1"
      ],
      "stack_out": [
        "app#0",
        "tmp%0#4",
        "tmp%2#1"
      ]
    },
    "773": {
      "error": "ARC4 prefix is valid",
      "op": "assert // ARC4 prefix is valid",
      "stack_out": [
        "app#0",
        "tmp%0#4"
      ]
    },
    "774": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "tmp%0#4",
        "tmp%0#4 (copy)"
      ],
      "stack_out": [
        "app#0",
        "tmp%0#4",
        "tmp%0#4 (copy)"
      ]
    },
    "775": {
      "op": "intc_0 // 0",
      "stack_out": [
        "app#0",
        "tmp%0#4",
        "tmp%0#4 (copy)",
        "0"
      ]
    },
    "776": {
      "op": "extract_uint16",
      "defined_out": [
        "app#0",
        "item_start_offset%0#0",
        "tmp%0#4"
      ],
      "stack_out": [
        "app#0",
        "tmp%0#4",
        "item_start_offset%0#0"
      ]
    },
    "777": {
      "op": "dig 1",
      "stack_out": [
        "app#0",
        "tmp%0#4",
        "item_start_offset%0#0",
        "tmp%0#4 (copy)"
      ]
    },
    "779": {
      "op": "intc_3 // 2",
      "defined_out": [
        "2",
        "app#0",
        "item_start_offset%0#0",
        "tmp%0#4",
        "tmp%0#4 (copy)"
      ],
      "stack_out": [
        "app#0",
        "tmp%0#4",
        "item_start_offset%0#0",
        "tmp%0#4 (copy)",
        "2"
      ]
    },
    "780": {
      "op": "extract_uint16",
      "defined_out": [
        "app#0",
        "item_end_offset%0#0",
        "item_start_offset%0#0",
        "tmp%0#4"
      ],
      "stack_out": [
        "app#0",
        "tmp%0#4",
        "item_start_offset%0#0",
        "item_end_offset%0#0"
      ]
    },
    "781": {
      "op": "dig 2",
      "stack_out": [
        "app#0",
        "tmp%0#4",
        "item_start_offset%0#0",
        "item_end_offset%0#0",
        "tmp%0#4 (copy)"
      ]
    },
    "783": {
      "op": "uncover 2",
      "stack_out": [
        "app#0",
        "tmp%0#4",
        "item_end_offset%0#0",
        "tmp%0#4 (copy)",
        "item_start_offset%0#0"
      ]
    },
    "785": {
      "op": "dig 2",
      "defined_out": [
        "app#0",
        "item_end_offset%0#0",
        "item_end_offset%0#0 (copy)",
        "item_start_offset%0#0",
        "tmp%0#4",
        "tmp%0#4 (copy)"
      ],
      "stack_out": [
        "app#0",
        "tmp%0#4",
        "item_end_offset%0#0",
        "tmp%0#4 (copy)",
        "item_start_offset%0#0",
        "item_end_offset%0#0 (copy)"
      ]
    },
    "787": {
      "op": "substring3",
      "defined_out": [
        "app#0",
        "item0%0#0",
        "item_end_offset%0#0",
        "tmp%0#4"
      ],
      "stack_out": [
        "app#0",
        "tmp%0#4",
        "item_end_offset%0#0",
        "item0%0#0"
      ]
    },
    "788": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "item0%0#0",
        "item0%0#0 (copy)",
        "item_end_offset%0#0",
        "tmp%0#4"
      ],
      "stack_out": [
        "app#0",
        "tmp%0#4",
        "item_end_offset%0#0",
        "item0%0#0",
        "item0%0#0 (copy)"
      ]
    },
    "789": {
      "op": "intc_0 // 0",
      "stack_out": [
        "app#0",
        "tmp%0#4",
        "item_end_offset%0#0",
        "item0%0#0",
        "item0%0#0 (copy)",
        "0"
      ]
    },
    "790": {
      "op": "extract_uint16",
      "defined_out": [
        "app#0",
        "item0%0#0",
        "item_end_offset%0#0",
        "item_start_offset%1#0",
        "tmp%0#4"
      ],
      "stack_out": [
        "app#0",
        "tmp%0#4",
        "item_end_offset%0#0",
        "item0%0#0",
        "item_start_offset%1#0"
      ]
    },
    "791": {
      "op": "dig 1",
      "stack_out": [
        "app#0",
        "tmp%0#4",
        "item_end_offset%0#0",
        "item0%0#0",
        "item_start_offset%1#0",
        "item0%0#0 (copy)"
      ]
    },
    "793": {
      "op": "intc_3 // 2",
      "stack_out": [
        "app#0",
        "tmp%0#4",
        "item_end_offset%0#0",
        "item0%0#0",
        "item_start_offset%1#0",
        "item0%0#0 (copy)",
        "2"
      ]
    },
    "794": {
      "op": "extract_uint16",
      "defined_out": [
        "app#0",
        "item0%0#0",
        "item_end_offset%0#0",
        "item_end_offset%1#0",
        "item_start_offset%1#0",
        "tmp%0#4"
      ],
      "stack_out": [
        "app#0",
        "tmp%0#4",
        "item_end_offset%0#0",
        "item0%0#0",
        "item_start_offset%1#0",
        "item_end_offset%1#0"
      ]
    },
    "795": {
      "op": "dig 2",
      "stack_out": [
        "app#0",
        "tmp%0#4",
        "item_end_offset%0#0",
        "item0%0#0",
        "item_start_offset%1#0",
        "item_end_offset%1#0",
        "item0%0#0 (copy)"
      ]
    },
    "797": {
      "op": "uncover 2",
      "stack_out": [
        "app#0",
        "tmp%0#4",
        "item_end_offset%0#0",
        "item0%0#0",
        "item_end_offset%1#0",
        "item0%0#0 (copy)",
        "item_start_offset%1#0"
      ]
    },
    "799": {
      "op": "dig 2",
      "defined_out": [
        "app#0",
        "item0%0#0",
        "item0%0#0 (copy)",
        "item_end_offset%0#0",
        "item_end_offset%1#0",
        "item_end_offset%1#0 (copy)",
        "item_start_offset%1#0",
        "tmp%0#4"
      ],
      "stack_out": [
        "app#0",
        "tmp%0#4",
        "item_end_offset%0#0",
        "item0%0#0",
        "item_end_offset%1#0",
        "item0%0#0 (copy)",
        "item_start_offset%1#0",
        "item_end_offset%1#0 (copy)"
      ]
    },
    "801": {
      "op": "substring3",
      "defined_out": [
        "app#0",
        "item0%0#0",
        "item0%1#0",
        "item_end_offset%0#0",
        "item_end_offset%1#0",
        "tmp%0#4"
      ],
      "stack_out": [
        "app#0",
        "tmp%0#4",
        "item_end_offset%0#0",
        "item0%0#0",
        "item_end_offset%1#0",
        "item0%1#0"
      ]
    },
    "802": {
      "op": "extract 2 0",
      "defined_out": [
        "app#0",
        "item0%0#0",
        "item_end_offset%0#0",
        "item_end_offset%1#0",
        "result.0.0#0",
        "tmp%0#4"
      ],
      "stack_out": [
        "app#0",
        "tmp%0#4",
        "item_end_offset%0#0",
        "item0%0#0",
        "item_end_offset%1#0",
        "result.0.0#0"
      ]
    },
    "805": {
      "op": "dig 2",
      "stack_out": [
        "app#0",
        "tmp%0#4",
        "item_end_offset%0#0",
        "item0%0#0",
        "item_end_offset%1#0",
        "result.0.0#0",
        "item0%0#0 (copy)"
      ]
    },
    "807": {
      "op": "len",
      "defined_out": [
        "app#0",
        "item0%0#0",
        "item_end_offset%0#0",
        "item_end_offset%1#0",
        "item_end_offset%2#0",
        "result.0.0#0",
        "tmp%0#4"
      ],
      "stack_out": [
        "app#0",
        "tmp%0#4",
        "item_end_offset%0#0",
        "item0%0#0",
        "item_end_offset%1#0",
        "result.0.0#0",
        "item_end_offset%2#0"
      ]
    },
    "808": {
      "op": "swap"
    },
    "809": {
      "op": "cover 3",
      "stack_out": [
        "app#0",
        "tmp%0#4",
        "item_end_offset%0#0",
        "result.0.0#0",
        "item0%0#0",
        "item_end_offset%1#0",
        "item_end_offset%2#0"
      ]
    },
    "811": {
      "op": "substring3",
      "defined_out": [
        "app#0",
        "item_end_offset%0#0",
        "result.0.0#0",
        "result.0.1#0",
        "tmp%0#4"
      ],
      "stack_out": [
        "app#0",
        "tmp%0#4",
        "item_end_offset%0#0",
        "result.0.0#0",
        "result.0.1#0"
      ]
    },
    "812": {
      "op": "dig 3",
      "stack_out": [
        "app#0",
        "tmp%0#4",
        "item_end_offset%0#0",
        "result.0.0#0",
        "result.0.1#0",
        "tmp%0#4 (copy)"
      ]
    },
    "814": {
      "op": "len",
      "defined_out": [
        "app#0",
        "item_end_offset%0#0",
        "item_end_offset%3#0",
        "result.0.0#0",
        "result.0.1#0",
        "tmp%0#4"
      ],
      "stack_out": [
        "app#0",
        "tmp%0#4",
        "item_end_offset%0#0",
        "result.0.0#0",
        "result.0.1#0",
        "item_end_offset%3#0"
      ]
    },
    "815": {
      "op": "uncover 4",
      "stack_out": [
        "app#0",
        "item_end_offset%0#0",
        "result.0.0#0",
        "result.0.1#0",
        "item_end_offset%3#0",
        "tmp%0#4"
      ]
    },
    "817": {
      "op": "uncover 4",
      "stack_out": [
        "app#0",
        "result.0.0#0",
        "result.0.1#0",
        "item_end_offset%3#0",
        "tmp%0#4",
        "item_end_offset%0#0"
      ]
    },
    "819": {
      "op": "uncover 2",
      "stack_out": [
        "app#0",
        "result.0.0#0",
        "result.0.1#0",
        "tmp%0#4",
        "item_end_offset%0#0",
        "item_end_offset%3#0"
      ]
    },
    "821": {
      "op": "substring3",
      "defined_out": [
        "app#0",
        "item1%1#0",
        "result.0.0#0",
        "result.0.1#0"
      ],
      "stack_out": [
        "app#0",
        "result.0.0#0",
        "result.0.1#0",
        "item1%1#0"
      ]
    },
    "822": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "item1%1#0",
        "item1%1#0 (copy)",
        "result.0.0#0",
        "result.0.1#0"
      ],
      "stack_out": [
        "app#0",
        "result.0.0#0",
        "result.0.1#0",
        "item1%1#0",
        "item1%1#0 (copy)"
      ]
    },
    "823": {
      "op": "intc_0 // 0",
      "stack_out": [
        "app#0",
        "result.0.0#0",
        "result.0.1#0",
        "item1%1#0",
        "item1%1#0 (copy)",
        "0"
      ]
    },
    "824": {
      "op": "extract_uint64",
      "defined_out": [
        "app#0",
        "item1%1#0",
        "result.0.0#0",
        "result.0.1#0",
        "result.1.0#0"
      ],
      "stack_out": [
        "app#0",
        "result.0.0#0",
        "result.0.1#0",
        "item1%1#0",
        "result.1.0#0"
      ]
    },
    "825": {
      "op": "dig 1",
      "stack_out": [
        "app#0",
        "result.0.0#0",
        "result.0.1#0",
        "item1%1#0",
        "result.1.0#0",
        "item1%1#0 (copy)"
      ]
    },
    "827": {
      "error": "Index access is out of bounds",
      "op": "extract 8 8 // on error: Index access is out of bounds",
      "defined_out": [
        "app#0",
        "item1%1#0",
        "result.0.0#0",
        "result.0.1#0",
        "result.1.0#0",
        "result.1.1#0"
      ],
      "stack_out": [
        "app#0",
        "result.0.0#0",
        "result.0.1#0",
        "item1%1#0",
        "result.1.0#0",
        "result.1.1#0"
      ]
    },
    "830": {
      "op": "dig 2",
      "stack_out": [
        "app#0",
        "result.0.0#0",
        "result.0.1#0",
        "item1%1#0",
        "result.1.0#0",
        "result.1.1#0",
        "item1%1#0 (copy)"
      ]
    },
    "832": {
      "op": "pushint 16 // 16",
      "defined_out": [
        "16",
        "app#0",
        "item1%1#0",
        "item1%1#0 (copy)",
        "result.0.0#0",
        "result.0.1#0",
        "result.1.0#0",
        "result.1.1#0"
      ],
      "stack_out": [
        "app#0",
        "result.0.0#0",
        "result.0.1#0",
        "item1%1#0",
        "result.1.0#0",
        "result.1.1#0",
        "item1%1#0 (copy)",
        "16"
      ]
    },
    "834": {
      "op": "extract_uint16",
      "defined_out": [
        "app#0",
        "item1%1#0",
        "item_start_offset%4#0",
        "result.0.0#0",
        "result.0.1#0",
        "result.1.0#0",
        "result.1.1#0"
      ],
      "stack_out": [
        "app#0",
        "result.0.0#0",
        "result.0.1#0",
        "item1%1#0",
        "result.1.0#0",
        "result.1.1#0",
        "item_start_offset%4#0"
      ]
    },
    "835": {
      "op": "dig 3",
      "stack_out": [
        "app#0",
        "result.0.0#0",
        "result.0.1#0",
        "item1%1#0",
        "result.1.0#0",
        "result.1.1#0",
        "item_start_offset%4#0",
        "item1%1#0 (copy)"
      ]
    },
    "837": {
      "op": "len",
      "defined_out": [
        "app#0",
        "item1%1#0",
        "item_end_offset%4#0",
        "item_start_offset%4#0",
        "result.0.0#0",
        "result.0.1#0",
        "result.1.0#0",
        "result.1.1#0"
      ],
      "stack_out": [
        "app#0",
        "result.0.0#0",
        "result.0.1#0",
        "item1%1#0",
        "result.1.0#0",
        "result.1.1#0",
        "item_start_offset%4#0",
        "item_end_offset%4#0"
      ]
    },
    "838": {
      "op": "uncover 4",
      "stack_out": [
        "app#0",
        "result.0.0#0",
        "result.0.1#0",
        "result.1.0#0",
        "result.1.1#0",
        "item_start_offset%4#0",
        "item_end_offset%4#0",
        "item1%1#0"
      ]
    },
    "840": {
      "op": "cover 2",
      "stack_out": [
        "app#0",
        "result.0.0#0",
        "result.0.1#0",
        "result.1.0#0",
        "result.1.1#0",
        "item1%1#0",
        "item_start_offset%4#0",
        "item_end_offset%4#0"
      ]
    },
    "842": {
      "op": "substring3",
      "defined_out": [
        "app#0",
        "item2%0#0",
        "result.0.0#0",
        "result.0.1#0",
        "result.1.0#0",
        "result.1.1#0"
      ],
      "stack_out": [
        "app#0",
        "result.0.0#0",
        "result.0.1#0",
        "result.1.0#0",
        "result.1.1#0",
        "item2%0#0"
      ]
    },
    "843": {
      "op": "extract 2 0",
      "defined_out": [
        "app#0",
        "result.0.0#0",
        "result.0.1#0",
        "result.1.0#0",
        "result.1.1#0",
        "result.1.2#0"
      ],
      "stack_out": [
        "app#0",
        "result.0.0#0",
        "result.0.1#0",
        "result.1.0#0",
        "result.1.1#0",
        "result.1.2#0"
      ]
    },
    "846": {
      "op": "uncover 4",
      "stack_out": [
        "app#0",
        "result.0.1#0",
        "result.1.0#0",
        "result.1.1#0",
        "result.1.2#0",
        "result.0.0#0"
      ]
    },
    "848": {
      "op": "bytec 8 // \"echo: s1\"",
      "defined_out": [
        "\"echo: s1\"",
        "app#0",
        "result.0.0#0",
        "result.0.1#0",
        "result.1.0#0",
        "result.1.1#0",
        "result.1.2#0"
      ],
      "stack_out": [
        "app#0",
        "result.0.1#0",
        "result.1.0#0",
        "result.1.1#0",
        "result.1.2#0",
        "result.0.0#0",
        "\"echo: s1\""
      ]
    },
    "850": {
      "op": "==",
      "defined_out": [
        "app#0",
        "result.0.1#0",
        "result.1.0#0",
        "result.1.1#0",
        "result.1.2#0",
        "tmp%3#1"
      ],
      "stack_out": [
        "app#0",
        "result.0.1#0",
        "result.1.0#0",
        "result.1.1#0",
        "result.1.2#0",
        "tmp%3#1"
      ]
    },
    "851": {
      "op": "assert",
      "stack_out": [
        "app#0",
        "result.0.1#0",
        "result.1.0#0",
        "result.1.1#0",
        "result.1.2#0"
      ]
    },
    "852": {
      "op": "uncover 3",
      "stack_out": [
        "app#0",
        "result.1.0#0",
        "result.1.1#0",
        "result.1.2#0",
        "result.0.1#0"
      ]
    },
    "854": {
      "op": "bytec 23 // 0x00086563686f3a207332",
      "defined_out": [
        "0x00086563686f3a207332",
        "app#0",
        "result.0.1#0",
        "result.1.0#0",
        "result.1.1#0",
        "result.1.2#0"
      ],
      "stack_out": [
        "app#0",
        "result.1.0#0",
        "result.1.1#0",
        "result.1.2#0",
        "result.0.1#0",
        "0x00086563686f3a207332"
      ]
    },
    "856": {
      "op": "==",
      "defined_out": [
        "app#0",
        "result.1.0#0",
        "result.1.1#0",
        "result.1.2#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "app#0",
        "result.1.0#0",
        "result.1.1#0",
        "result.1.2#0",
        "tmp%4#0"
      ]
    },
    "857": {
      "op": "assert",
      "stack_out": [
        "app#0",
        "result.1.0#0",
        "result.1.1#0",
        "result.1.2#0"
      ]
    },
    "858": {
      "op": "uncover 2",
      "stack_out": [
        "app#0",
        "result.1.1#0",
        "result.1.2#0",
        "result.1.0#0"
      ]
    },
    "860": {
      "op": "intc_3 // 2",
      "stack_out": [
        "app#0",
        "result.1.1#0",
        "result.1.2#0",
        "result.1.0#0",
        "2"
      ]
    },
    "861": {
      "op": "==",
      "defined_out": [
        "app#0",
        "result.1.1#0",
        "result.1.2#0",
        "tmp%5#2"
      ],
      "stack_out": [
        "app#0",
        "result.1.1#0",
        "result.1.2#0",
        "tmp%5#2"
      ]
    },
    "862": {
      "op": "assert",
      "stack_out": [
        "app#0",
        "result.1.1#0",
        "result.1.2#0"
      ]
    },
    "863": {
      "op": "swap",
      "stack_out": [
        "app#0",
        "result.1.2#0",
        "result.1.1#0"
      ]
    },
    "864": {
      "op": "bytec 12 // 0x0000000000000003",
      "defined_out": [
        "0x0000000000000003",
        "app#0",
        "result.1.1#0",
        "result.1.2#0"
      ],
      "stack_out": [
        "app#0",
        "result.1.2#0",
        "result.1.1#0",
        "0x0000000000000003"
      ]
    },
    "866": {
      "op": "b==",
      "defined_out": [
        "app#0",
        "result.1.2#0",
        "tmp%6#1"
      ],
      "stack_out": [
        "app#0",
        "result.1.2#0",
        "tmp%6#1"
      ]
    },
    "867": {
      "op": "assert",
      "stack_out": [
        "app#0",
        "result.1.2#0"
      ]
    },
    "868": {
      "op": "bytec 24 // 0x6563686f3a2033",
      "defined_out": [
        "0x6563686f3a2033",
        "app#0",
        "result.1.2#0"
      ],
      "stack_out": [
        "app#0",
        "result.1.2#0",
        "0x6563686f3a2033"
      ]
    },
    "870": {
      "op": "==",
      "defined_out": [
        "app#0",
        "tmp%7#1"
      ],
      "stack_out": [
        "app#0",
        "tmp%7#1"
      ]
    },
    "871": {
      "op": "assert",
      "stack_out": [
        "app#0"
      ]
    },
    "872": {
      "op": "itxn_begin"
    },
    "873": {
      "op": "dup",
      "stack_out": [
        "app#0",
        "app#0 (copy)"
      ]
    },
    "874": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "app#0"
      ]
    },
    "876": {
      "op": "bytec 11 // method \"echo_nested_tuple(((string,string),(uint64,uint64,byte[])))((string,string),(uint64,uint64,byte[]))\"",
      "stack_out": [
        "app#0",
        "Method(echo_nested_tuple(((string,string),(uint64,uint64,byte[])))((string,string),(uint64,uint64,byte[])))"
      ]
    },
    "878": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0"
      ]
    },
    "880": {
      "op": "bytec 22 // 0x00040010000400080002733100027332000000000000000100000000000000020012000133",
      "stack_out": [
        "app#0",
        "0x00040010000400080002733100027332000000000000000100000000000000020012000133"
      ]
    },
    "882": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0"
      ]
    },
    "884": {
      "op": "intc_1 // appl",
      "stack_out": [
        "app#0",
        "appl"
      ]
    },
    "885": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "app#0"
      ]
    },
    "887": {
      "op": "intc_0 // 0",
      "stack_out": [
        "app#0",
        "0"
      ]
    },
    "888": {
      "op": "itxn_field Fee",
      "stack_out": [
        "app#0"
      ]
    },
    "890": {
      "op": "itxn_submit"
    },
    "891": {
      "op": "itxn LastLog",
      "defined_out": [
        "app#0",
        "awst_tmp%1#0"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%1#0"
      ]
    },
    "893": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "awst_tmp%1#0",
        "awst_tmp%1#0 (copy)"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%1#0",
        "awst_tmp%1#0 (copy)"
      ]
    },
    "894": {
      "op": "extract 4 0",
      "defined_out": [
        "app#0",
        "awst_tmp%1#0",
        "tmp%8#3"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%1#0",
        "tmp%8#3"
      ]
    },
    "897": {
      "op": "swap",
      "stack_out": [
        "app#0",
        "tmp%8#3",
        "awst_tmp%1#0"
      ]
    },
    "898": {
      "op": "extract 0 4",
      "defined_out": [
        "app#0",
        "tmp%8#3",
        "tmp%9#0"
      ],
      "stack_out": [
        "app#0",
        "tmp%8#3",
        "tmp%9#0"
      ]
    },
    "901": {
      "op": "bytec_0 // 0x151f7c75",
      "stack_out": [
        "app#0",
        "tmp%8#3",
        "tmp%9#0",
        "0x151f7c75"
      ]
    },
    "902": {
      "op": "==",
      "defined_out": [
        "app#0",
        "tmp%10#2",
        "tmp%8#3"
      ],
      "stack_out": [
        "app#0",
        "tmp%8#3",
        "tmp%10#2"
      ]
    },
    "903": {
      "error": "ARC4 prefix is valid",
      "op": "assert // ARC4 prefix is valid",
      "stack_out": [
        "app#0",
        "tmp%8#3"
      ]
    },
    "904": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "tmp%8#3",
        "tmp%8#3 (copy)"
      ],
      "stack_out": [
        "app#0",
        "tmp%8#3",
        "tmp%8#3 (copy)"
      ]
    },
    "905": {
      "op": "intc_0 // 0",
      "stack_out": [
        "app#0",
        "tmp%8#3",
        "tmp%8#3 (copy)",
        "0"
      ]
    },
    "906": {
      "op": "extract_uint16",
      "defined_out": [
        "app#0",
        "item_start_offset%5#0",
        "tmp%8#3"
      ],
      "stack_out": [
        "app#0",
        "tmp%8#3",
        "item_start_offset%5#0"
      ]
    },
    "907": {
      "op": "dig 1",
      "stack_out": [
        "app#0",
        "tmp%8#3",
        "item_start_offset%5#0",
        "tmp%8#3 (copy)"
      ]
    },
    "909": {
      "op": "intc_3 // 2",
      "stack_out": [
        "app#0",
        "tmp%8#3",
        "item_start_offset%5#0",
        "tmp%8#3 (copy)",
        "2"
      ]
    },
    "910": {
      "op": "extract_uint16",
      "defined_out": [
        "app#0",
        "item_end_offset%5#0",
        "item_start_offset%5#0",
        "tmp%8#3"
      ],
      "stack_out": [
        "app#0",
        "tmp%8#3",
        "item_start_offset%5#0",
        "item_end_offset%5#0"
      ]
    },
    "911": {
      "op": "dig 2",
      "stack_out": [
        "app#0",
        "tmp%8#3",
        "item_start_offset%5#0",
        "item_end_offset%5#0",
        "tmp%8#3 (copy)"
      ]
    },
    "913": {
      "op": "uncover 2",
      "stack_out": [
        "app#0",
        "tmp%8#3",
        "item_end_offset%5#0",
        "tmp%8#3 (copy)",
        "item_start_offset%5#0"
      ]
    },
    "915": {
      "op": "dig 2",
      "defined_out": [
        "app#0",
        "item_end_offset%5#0",
        "item_end_offset%5#0 (copy)",
        "item_start_offset%5#0",
        "tmp%8#3",
        "tmp%8#3 (copy)"
      ],
      "stack_out": [
        "app#0",
        "tmp%8#3",
        "item_end_offset%5#0",
        "tmp%8#3 (copy)",
        "item_start_offset%5#0",
        "item_end_offset%5#0 (copy)"
      ]
    },
    "917": {
      "op": "substring3",
      "defined_out": [
        "app#0",
        "item0%3#0",
        "item_end_offset%5#0",
        "tmp%8#3"
      ],
      "stack_out": [
        "app#0",
        "tmp%8#3",
        "item_end_offset%5#0",
        "item0%3#0"
      ]
    },
    "918": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "item0%3#0",
        "item0%3#0 (copy)",
        "item_end_offset%5#0",
        "tmp%8#3"
      ],
      "stack_out": [
        "app#0",
        "tmp%8#3",
        "item_end_offset%5#0",
        "item0%3#0",
        "item0%3#0 (copy)"
      ]
    },
    "919": {
      "op": "intc_0 // 0",
      "stack_out": [
        "app#0",
        "tmp%8#3",
        "item_end_offset%5#0",
        "item0%3#0",
        "item0%3#0 (copy)",
        "0"
      ]
    },
    "920": {
      "op": "extract_uint16",
      "defined_out": [
        "app#0",
        "item0%3#0",
        "item_end_offset%5#0",
        "item_start_offset%6#0",
        "tmp%8#3"
      ],
      "stack_out": [
        "app#0",
        "tmp%8#3",
        "item_end_offset%5#0",
        "item0%3#0",
        "item_start_offset%6#0"
      ]
    },
    "921": {
      "op": "dig 1",
      "stack_out": [
        "app#0",
        "tmp%8#3",
        "item_end_offset%5#0",
        "item0%3#0",
        "item_start_offset%6#0",
        "item0%3#0 (copy)"
      ]
    },
    "923": {
      "op": "intc_3 // 2",
      "stack_out": [
        "app#0",
        "tmp%8#3",
        "item_end_offset%5#0",
        "item0%3#0",
        "item_start_offset%6#0",
        "item0%3#0 (copy)",
        "2"
      ]
    },
    "924": {
      "op": "extract_uint16",
      "defined_out": [
        "app#0",
        "item0%3#0",
        "item_end_offset%5#0",
        "item_end_offset%6#0",
        "item_start_offset%6#0",
        "tmp%8#3"
      ],
      "stack_out": [
        "app#0",
        "tmp%8#3",
        "item_end_offset%5#0",
        "item0%3#0",
        "item_start_offset%6#0",
        "item_end_offset%6#0"
      ]
    },
    "925": {
      "op": "dig 2",
      "stack_out": [
        "app#0",
        "tmp%8#3",
        "item_end_offset%5#0",
        "item0%3#0",
        "item_start_offset%6#0",
        "item_end_offset%6#0",
        "item0%3#0 (copy)"
      ]
    },
    "927": {
      "op": "uncover 2",
      "stack_out": [
        "app#0",
        "tmp%8#3",
        "item_end_offset%5#0",
        "item0%3#0",
        "item_end_offset%6#0",
        "item0%3#0 (copy)",
        "item_start_offset%6#0"
      ]
    },
    "929": {
      "op": "dig 2",
      "defined_out": [
        "app#0",
        "item0%3#0",
        "item0%3#0 (copy)",
        "item_end_offset%5#0",
        "item_end_offset%6#0",
        "item_end_offset%6#0 (copy)",
        "item_start_offset%6#0",
        "tmp%8#3"
      ],
      "stack_out": [
        "app#0",
        "tmp%8#3",
        "item_end_offset%5#0",
        "item0%3#0",
        "item_end_offset%6#0",
        "item0%3#0 (copy)",
        "item_start_offset%6#0",
        "item_end_offset%6#0 (copy)"
      ]
    },
    "931": {
      "op": "substring3",
      "defined_out": [
        "app#0",
        "item0%3#0",
        "item0%4#0",
        "item_end_offset%5#0",
        "item_end_offset%6#0",
        "tmp%8#3"
      ],
      "stack_out": [
        "app#0",
        "tmp%8#3",
        "item_end_offset%5#0",
        "item0%3#0",
        "item_end_offset%6#0",
        "item0%4#0"
      ]
    },
    "932": {
      "op": "extract 2 0",
      "stack_out": [
        "app#0",
        "tmp%8#3",
        "item_end_offset%5#0",
        "item0%3#0",
        "item_end_offset%6#0",
        "result.0.0#0"
      ]
    },
    "935": {
      "op": "dig 2",
      "stack_out": [
        "app#0",
        "tmp%8#3",
        "item_end_offset%5#0",
        "item0%3#0",
        "item_end_offset%6#0",
        "result.0.0#0",
        "item0%3#0 (copy)"
      ]
    },
    "937": {
      "op": "len",
      "defined_out": [
        "app#0",
        "item0%3#0",
        "item_end_offset%5#0",
        "item_end_offset%6#0",
        "item_end_offset%7#0",
        "result.0.0#0",
        "tmp%8#3"
      ],
      "stack_out": [
        "app#0",
        "tmp%8#3",
        "item_end_offset%5#0",
        "item0%3#0",
        "item_end_offset%6#0",
        "result.0.0#0",
        "item_end_offset%7#0"
      ]
    },
    "938": {
      "op": "swap"
    },
    "939": {
      "op": "cover 3",
      "stack_out": [
        "app#0",
        "tmp%8#3",
        "item_end_offset%5#0",
        "result.0.0#0",
        "item0%3#0",
        "item_end_offset%6#0",
        "item_end_offset%7#0"
      ]
    },
    "941": {
      "op": "substring3",
      "stack_out": [
        "app#0",
        "tmp%8#3",
        "item_end_offset%5#0",
        "result.0.0#0",
        "result.0.1#0"
      ]
    },
    "942": {
      "op": "dig 3",
      "stack_out": [
        "app#0",
        "tmp%8#3",
        "item_end_offset%5#0",
        "result.0.0#0",
        "result.0.1#0",
        "tmp%8#3 (copy)"
      ]
    },
    "944": {
      "op": "len",
      "defined_out": [
        "app#0",
        "item_end_offset%5#0",
        "item_end_offset%8#0",
        "result.0.0#0",
        "result.0.1#0",
        "tmp%8#3"
      ],
      "stack_out": [
        "app#0",
        "tmp%8#3",
        "item_end_offset%5#0",
        "result.0.0#0",
        "result.0.1#0",
        "item_end_offset%8#0"
      ]
    },
    "945": {
      "op": "uncover 4",
      "stack_out": [
        "app#0",
        "item_end_offset%5#0",
        "result.0.0#0",
        "result.0.1#0",
        "item_end_offset%8#0",
        "tmp%8#3"
      ]
    },
    "947": {
      "op": "uncover 4",
      "stack_out": [
        "app#0",
        "result.0.0#0",
        "result.0.1#0",
        "item_end_offset%8#0",
        "tmp%8#3",
        "item_end_offset%5#0"
      ]
    },
    "949": {
      "op": "uncover 2",
      "stack_out": [
        "app#0",
        "result.0.0#0",
        "result.0.1#0",
        "tmp%8#3",
        "item_end_offset%5#0",
        "item_end_offset%8#0"
      ]
    },
    "951": {
      "op": "substring3",
      "defined_out": [
        "app#0",
        "item1%4#0",
        "result.0.0#0",
        "result.0.1#0"
      ],
      "stack_out": [
        "app#0",
        "result.0.0#0",
        "result.0.1#0",
        "item1%4#0"
      ]
    },
    "952": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "item1%4#0",
        "item1%4#0 (copy)",
        "result.0.0#0",
        "result.0.1#0"
      ],
      "stack_out": [
        "app#0",
        "result.0.0#0",
        "result.0.1#0",
        "item1%4#0",
        "item1%4#0 (copy)"
      ]
    },
    "953": {
      "op": "intc_0 // 0",
      "stack_out": [
        "app#0",
        "result.0.0#0",
        "result.0.1#0",
        "item1%4#0",
        "item1%4#0 (copy)",
        "0"
      ]
    },
    "954": {
      "op": "extract_uint64",
      "stack_out": [
        "app#0",
        "result.0.0#0",
        "result.0.1#0",
        "item1%4#0",
        "result.1.0#0"
      ]
    },
    "955": {
      "op": "dig 1",
      "stack_out": [
        "app#0",
        "result.0.0#0",
        "result.0.1#0",
        "item1%4#0",
        "result.1.0#0",
        "item1%4#0 (copy)"
      ]
    },
    "957": {
      "error": "Index access is out of bounds",
      "op": "extract 8 8 // on error: Index access is out of bounds",
      "stack_out": [
        "app#0",
        "result.0.0#0",
        "result.0.1#0",
        "item1%4#0",
        "result.1.0#0",
        "result.1.1#0"
      ]
    },
    "960": {
      "op": "dig 2",
      "stack_out": [
        "app#0",
        "result.0.0#0",
        "result.0.1#0",
        "item1%4#0",
        "result.1.0#0",
        "result.1.1#0",
        "item1%4#0 (copy)"
      ]
    },
    "962": {
      "op": "pushint 16 // 16",
      "stack_out": [
        "app#0",
        "result.0.0#0",
        "result.0.1#0",
        "item1%4#0",
        "result.1.0#0",
        "result.1.1#0",
        "item1%4#0 (copy)",
        "16"
      ]
    },
    "964": {
      "op": "extract_uint16",
      "defined_out": [
        "app#0",
        "item1%4#0",
        "item_start_offset%9#0",
        "result.0.0#0",
        "result.0.1#0",
        "result.1.0#0",
        "result.1.1#0"
      ],
      "stack_out": [
        "app#0",
        "result.0.0#0",
        "result.0.1#0",
        "item1%4#0",
        "result.1.0#0",
        "result.1.1#0",
        "item_start_offset%9#0"
      ]
    },
    "965": {
      "op": "dig 3",
      "stack_out": [
        "app#0",
        "result.0.0#0",
        "result.0.1#0",
        "item1%4#0",
        "result.1.0#0",
        "result.1.1#0",
        "item_start_offset%9#0",
        "item1%4#0 (copy)"
      ]
    },
    "967": {
      "op": "len",
      "defined_out": [
        "app#0",
        "item1%4#0",
        "item_end_offset%9#0",
        "item_start_offset%9#0",
        "result.0.0#0",
        "result.0.1#0",
        "result.1.0#0",
        "result.1.1#0"
      ],
      "stack_out": [
        "app#0",
        "result.0.0#0",
        "result.0.1#0",
        "item1%4#0",
        "result.1.0#0",
        "result.1.1#0",
        "item_start_offset%9#0",
        "item_end_offset%9#0"
      ]
    },
    "968": {
      "op": "uncover 4",
      "stack_out": [
        "app#0",
        "result.0.0#0",
        "result.0.1#0",
        "result.1.0#0",
        "result.1.1#0",
        "item_start_offset%9#0",
        "item_end_offset%9#0",
        "item1%4#0"
      ]
    },
    "970": {
      "op": "cover 2",
      "stack_out": [
        "app#0",
        "result.0.0#0",
        "result.0.1#0",
        "result.1.0#0",
        "result.1.1#0",
        "item1%4#0",
        "item_start_offset%9#0",
        "item_end_offset%9#0"
      ]
    },
    "972": {
      "op": "substring3",
      "defined_out": [
        "app#0",
        "item2%1#0",
        "result.0.0#0",
        "result.0.1#0",
        "result.1.0#0",
        "result.1.1#0"
      ],
      "stack_out": [
        "app#0",
        "result.0.0#0",
        "result.0.1#0",
        "result.1.0#0",
        "result.1.1#0",
        "item2%1#0"
      ]
    },
    "973": {
      "op": "extract 2 0",
      "stack_out": [
        "app#0",
        "result.0.0#0",
        "result.0.1#0",
        "result.1.0#0",
        "result.1.1#0",
        "result.1.2#0"
      ]
    },
    "976": {
      "op": "uncover 4",
      "stack_out": [
        "app#0",
        "result.0.1#0",
        "result.1.0#0",
        "result.1.1#0",
        "result.1.2#0",
        "result.0.0#0"
      ]
    },
    "978": {
      "op": "bytec 8 // \"echo: s1\"",
      "stack_out": [
        "app#0",
        "result.0.1#0",
        "result.1.0#0",
        "result.1.1#0",
        "result.1.2#0",
        "result.0.0#0",
        "\"echo: s1\""
      ]
    },
    "980": {
      "op": "==",
      "defined_out": [
        "app#0",
        "result.0.1#0",
        "result.1.0#0",
        "result.1.1#0",
        "result.1.2#0",
        "tmp%11#1"
      ],
      "stack_out": [
        "app#0",
        "result.0.1#0",
        "result.1.0#0",
        "result.1.1#0",
        "result.1.2#0",
        "tmp%11#1"
      ]
    },
    "981": {
      "op": "assert",
      "stack_out": [
        "app#0",
        "result.0.1#0",
        "result.1.0#0",
        "result.1.1#0",
        "result.1.2#0"
      ]
    },
    "982": {
      "op": "uncover 3",
      "stack_out": [
        "app#0",
        "result.1.0#0",
        "result.1.1#0",
        "result.1.2#0",
        "result.0.1#0"
      ]
    },
    "984": {
      "op": "bytec 23 // 0x00086563686f3a207332",
      "stack_out": [
        "app#0",
        "result.1.0#0",
        "result.1.1#0",
        "result.1.2#0",
        "result.0.1#0",
        "0x00086563686f3a207332"
      ]
    },
    "986": {
      "op": "==",
      "defined_out": [
        "app#0",
        "result.1.0#0",
        "result.1.1#0",
        "result.1.2#0",
        "tmp%12#1"
      ],
      "stack_out": [
        "app#0",
        "result.1.0#0",
        "result.1.1#0",
        "result.1.2#0",
        "tmp%12#1"
      ]
    },
    "987": {
      "op": "assert",
      "stack_out": [
        "app#0",
        "result.1.0#0",
        "result.1.1#0",
        "result.1.2#0"
      ]
    },
    "988": {
      "op": "uncover 2",
      "stack_out": [
        "app#0",
        "result.1.1#0",
        "result.1.2#0",
        "result.1.0#0"
      ]
    },
    "990": {
      "op": "intc_3 // 2",
      "stack_out": [
        "app#0",
        "result.1.1#0",
        "result.1.2#0",
        "result.1.0#0",
        "2"
      ]
    },
    "991": {
      "op": "==",
      "defined_out": [
        "app#0",
        "result.1.1#0",
        "result.1.2#0",
        "tmp%13#2"
      ],
      "stack_out": [
        "app#0",
        "result.1.1#0",
        "result.1.2#0",
        "tmp%13#2"
      ]
    },
    "992": {
      "op": "assert",
      "stack_out": [
        "app#0",
        "result.1.1#0",
        "result.1.2#0"
      ]
    },
    "993": {
      "op": "swap",
      "stack_out": [
        "app#0",
        "result.1.2#0",
        "result.1.1#0"
      ]
    },
    "994": {
      "op": "bytec 12 // 0x0000000000000003",
      "stack_out": [
        "app#0",
        "result.1.2#0",
        "result.1.1#0",
        "0x0000000000000003"
      ]
    },
    "996": {
      "op": "b==",
      "defined_out": [
        "app#0",
        "result.1.2#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "app#0",
        "result.1.2#0",
        "tmp%14#0"
      ]
    },
    "997": {
      "op": "assert",
      "stack_out": [
        "app#0",
        "result.1.2#0"
      ]
    },
    "998": {
      "op": "bytec 24 // 0x6563686f3a2033",
      "stack_out": [
        "app#0",
        "result.1.2#0",
        "0x6563686f3a2033"
      ]
    },
    "1000": {
      "op": "==",
      "defined_out": [
        "app#0",
        "tmp%15#1"
      ],
      "stack_out": [
        "app#0",
        "tmp%15#1"
      ]
    },
    "1001": {
      "op": "assert",
      "stack_out": [
        "app#0"
      ]
    },
    "1002": {
      "op": "itxn_begin"
    },
    "1003": {
      "op": "itxn_field ApplicationID",
      "stack_out": []
    },
    "1005": {
      "op": "bytec 11 // method \"echo_nested_tuple(((string,string),(uint64,uint64,byte[])))((string,string),(uint64,uint64,byte[]))\"",
      "stack_out": [
        "Method(echo_nested_tuple(((string,string),(uint64,uint64,byte[])))((string,string),(uint64,uint64,byte[])))"
      ]
    },
    "1007": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "1009": {
      "op": "pushbytes 0x000400120004000900037331620003733262000000000000000b0000000000000015001200023362",
      "defined_out": [
        "0x000400120004000900037331620003733262000000000000000b0000000000000015001200023362"
      ],
      "stack_out": [
        "0x000400120004000900037331620003733262000000000000000b0000000000000015001200023362"
      ]
    },
    "1051": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "1053": {
      "op": "intc_1 // appl",
      "stack_out": [
        "appl"
      ]
    },
    "1054": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "1056": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0"
      ]
    },
    "1057": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "1059": {
      "op": "itxn_submit"
    },
    "1060": {
      "op": "itxn LastLog",
      "defined_out": [
        "awst_tmp%2#0"
      ],
      "stack_out": [
        "awst_tmp%2#0"
      ]
    },
    "1062": {
      "op": "dup",
      "defined_out": [
        "awst_tmp%2#0",
        "awst_tmp%2#0 (copy)"
      ],
      "stack_out": [
        "awst_tmp%2#0",
        "awst_tmp%2#0 (copy)"
      ]
    },
    "1063": {
      "op": "extract 4 0",
      "defined_out": [
        "awst_tmp%2#0",
        "tmp%16#2"
      ],
      "stack_out": [
        "awst_tmp%2#0",
        "tmp%16#2"
      ]
    },
    "1066": {
      "op": "swap",
      "stack_out": [
        "tmp%16#2",
        "awst_tmp%2#0"
      ]
    },
    "1067": {
      "op": "extract 0 4",
      "defined_out": [
        "tmp%16#2",
        "tmp%17#1"
      ],
      "stack_out": [
        "tmp%16#2",
        "tmp%17#1"
      ]
    },
    "1070": {
      "op": "bytec_0 // 0x151f7c75",
      "stack_out": [
        "tmp%16#2",
        "tmp%17#1",
        "0x151f7c75"
      ]
    },
    "1071": {
      "op": "==",
      "defined_out": [
        "tmp%16#2",
        "tmp%18#1"
      ],
      "stack_out": [
        "tmp%16#2",
        "tmp%18#1"
      ]
    },
    "1072": {
      "error": "ARC4 prefix is valid",
      "op": "assert // ARC4 prefix is valid",
      "stack_out": [
        "tmp%16#2"
      ]
    },
    "1073": {
      "op": "dup",
      "defined_out": [
        "tmp%16#2",
        "tmp%16#2 (copy)"
      ],
      "stack_out": [
        "tmp%16#2",
        "tmp%16#2 (copy)"
      ]
    },
    "1074": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%16#2",
        "tmp%16#2 (copy)",
        "0"
      ]
    },
    "1075": {
      "op": "extract_uint16",
      "defined_out": [
        "item_start_offset%10#0",
        "tmp%16#2"
      ],
      "stack_out": [
        "tmp%16#2",
        "item_start_offset%10#0"
      ]
    },
    "1076": {
      "op": "dig 1",
      "stack_out": [
        "tmp%16#2",
        "item_start_offset%10#0",
        "tmp%16#2 (copy)"
      ]
    },
    "1078": {
      "op": "intc_3 // 2",
      "stack_out": [
        "tmp%16#2",
        "item_start_offset%10#0",
        "tmp%16#2 (copy)",
        "2"
      ]
    },
    "1079": {
      "op": "extract_uint16",
      "defined_out": [
        "item_end_offset%10#0",
        "item_start_offset%10#0",
        "tmp%16#2"
      ],
      "stack_out": [
        "tmp%16#2",
        "item_start_offset%10#0",
        "item_end_offset%10#0"
      ]
    },
    "1080": {
      "op": "dig 2",
      "stack_out": [
        "tmp%16#2",
        "item_start_offset%10#0",
        "item_end_offset%10#0",
        "tmp%16#2 (copy)"
      ]
    },
    "1082": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%16#2",
        "item_end_offset%10#0",
        "tmp%16#2 (copy)",
        "item_start_offset%10#0"
      ]
    },
    "1084": {
      "op": "dig 2",
      "defined_out": [
        "item_end_offset%10#0",
        "item_end_offset%10#0 (copy)",
        "item_start_offset%10#0",
        "tmp%16#2",
        "tmp%16#2 (copy)"
      ],
      "stack_out": [
        "tmp%16#2",
        "item_end_offset%10#0",
        "tmp%16#2 (copy)",
        "item_start_offset%10#0",
        "item_end_offset%10#0 (copy)"
      ]
    },
    "1086": {
      "op": "substring3",
      "defined_out": [
        "item0%6#0",
        "item_end_offset%10#0",
        "tmp%16#2"
      ],
      "stack_out": [
        "tmp%16#2",
        "item_end_offset%10#0",
        "item0%6#0"
      ]
    },
    "1087": {
      "op": "dup",
      "defined_out": [
        "item0%6#0",
        "item0%6#0 (copy)",
        "item_end_offset%10#0",
        "tmp%16#2"
      ],
      "stack_out": [
        "tmp%16#2",
        "item_end_offset%10#0",
        "item0%6#0",
        "item0%6#0 (copy)"
      ]
    },
    "1088": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%16#2",
        "item_end_offset%10#0",
        "item0%6#0",
        "item0%6#0 (copy)",
        "0"
      ]
    },
    "1089": {
      "op": "extract_uint16",
      "defined_out": [
        "item0%6#0",
        "item_end_offset%10#0",
        "item_start_offset%11#0",
        "tmp%16#2"
      ],
      "stack_out": [
        "tmp%16#2",
        "item_end_offset%10#0",
        "item0%6#0",
        "item_start_offset%11#0"
      ]
    },
    "1090": {
      "op": "dig 1",
      "stack_out": [
        "tmp%16#2",
        "item_end_offset%10#0",
        "item0%6#0",
        "item_start_offset%11#0",
        "item0%6#0 (copy)"
      ]
    },
    "1092": {
      "op": "intc_3 // 2",
      "stack_out": [
        "tmp%16#2",
        "item_end_offset%10#0",
        "item0%6#0",
        "item_start_offset%11#0",
        "item0%6#0 (copy)",
        "2"
      ]
    },
    "1093": {
      "op": "extract_uint16",
      "defined_out": [
        "item0%6#0",
        "item_end_offset%10#0",
        "item_end_offset%11#0",
        "item_start_offset%11#0",
        "tmp%16#2"
      ],
      "stack_out": [
        "tmp%16#2",
        "item_end_offset%10#0",
        "item0%6#0",
        "item_start_offset%11#0",
        "item_end_offset%11#0"
      ]
    },
    "1094": {
      "op": "dig 2",
      "stack_out": [
        "tmp%16#2",
        "item_end_offset%10#0",
        "item0%6#0",
        "item_start_offset%11#0",
        "item_end_offset%11#0",
        "item0%6#0 (copy)"
      ]
    },
    "1096": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%16#2",
        "item_end_offset%10#0",
        "item0%6#0",
        "item_end_offset%11#0",
        "item0%6#0 (copy)",
        "item_start_offset%11#0"
      ]
    },
    "1098": {
      "op": "dig 2",
      "defined_out": [
        "item0%6#0",
        "item0%6#0 (copy)",
        "item_end_offset%10#0",
        "item_end_offset%11#0",
        "item_end_offset%11#0 (copy)",
        "item_start_offset%11#0",
        "tmp%16#2"
      ],
      "stack_out": [
        "tmp%16#2",
        "item_end_offset%10#0",
        "item0%6#0",
        "item_end_offset%11#0",
        "item0%6#0 (copy)",
        "item_start_offset%11#0",
        "item_end_offset%11#0 (copy)"
      ]
    },
    "1100": {
      "op": "substring3",
      "defined_out": [
        "item0%6#0",
        "item0%7#0",
        "item_end_offset%10#0",
        "item_end_offset%11#0",
        "tmp%16#2"
      ],
      "stack_out": [
        "tmp%16#2",
        "item_end_offset%10#0",
        "item0%6#0",
        "item_end_offset%11#0",
        "item0%7#0"
      ]
    },
    "1101": {
      "op": "extract 2 0",
      "stack_out": [
        "tmp%16#2",
        "item_end_offset%10#0",
        "item0%6#0",
        "item_end_offset%11#0",
        "result.0.0#0"
      ]
    },
    "1104": {
      "op": "dig 2",
      "stack_out": [
        "tmp%16#2",
        "item_end_offset%10#0",
        "item0%6#0",
        "item_end_offset%11#0",
        "result.0.0#0",
        "item0%6#0 (copy)"
      ]
    },
    "1106": {
      "op": "len",
      "defined_out": [
        "item0%6#0",
        "item_end_offset%10#0",
        "item_end_offset%11#0",
        "item_end_offset%12#0",
        "result.0.0#0",
        "tmp%16#2"
      ],
      "stack_out": [
        "tmp%16#2",
        "item_end_offset%10#0",
        "item0%6#0",
        "item_end_offset%11#0",
        "result.0.0#0",
        "item_end_offset%12#0"
      ]
    },
    "1107": {
      "op": "swap"
    },
    "1108": {
      "op": "cover 3",
      "stack_out": [
        "tmp%16#2",
        "item_end_offset%10#0",
        "result.0.0#0",
        "item0%6#0",
        "item_end_offset%11#0",
        "item_end_offset%12#0"
      ]
    },
    "1110": {
      "op": "substring3",
      "stack_out": [
        "tmp%16#2",
        "item_end_offset%10#0",
        "result.0.0#0",
        "result.0.1#0"
      ]
    },
    "1111": {
      "op": "dig 3",
      "stack_out": [
        "tmp%16#2",
        "item_end_offset%10#0",
        "result.0.0#0",
        "result.0.1#0",
        "tmp%16#2 (copy)"
      ]
    },
    "1113": {
      "op": "len",
      "defined_out": [
        "item_end_offset%10#0",
        "item_end_offset%13#0",
        "result.0.0#0",
        "result.0.1#0",
        "tmp%16#2"
      ],
      "stack_out": [
        "tmp%16#2",
        "item_end_offset%10#0",
        "result.0.0#0",
        "result.0.1#0",
        "item_end_offset%13#0"
      ]
    },
    "1114": {
      "op": "uncover 4",
      "stack_out": [
        "item_end_offset%10#0",
        "result.0.0#0",
        "result.0.1#0",
        "item_end_offset%13#0",
        "tmp%16#2"
      ]
    },
    "1116": {
      "op": "uncover 4",
      "stack_out": [
        "result.0.0#0",
        "result.0.1#0",
        "item_end_offset%13#0",
        "tmp%16#2",
        "item_end_offset%10#0"
      ]
    },
    "1118": {
      "op": "uncover 2",
      "stack_out": [
        "result.0.0#0",
        "result.0.1#0",
        "tmp%16#2",
        "item_end_offset%10#0",
        "item_end_offset%13#0"
      ]
    },
    "1120": {
      "op": "substring3",
      "defined_out": [
        "item1%7#0",
        "result.0.0#0",
        "result.0.1#0"
      ],
      "stack_out": [
        "result.0.0#0",
        "result.0.1#0",
        "item1%7#0"
      ]
    },
    "1121": {
      "op": "dup",
      "defined_out": [
        "item1%7#0",
        "item1%7#0 (copy)",
        "result.0.0#0",
        "result.0.1#0"
      ],
      "stack_out": [
        "result.0.0#0",
        "result.0.1#0",
        "item1%7#0",
        "item1%7#0 (copy)"
      ]
    },
    "1122": {
      "op": "intc_0 // 0",
      "stack_out": [
        "result.0.0#0",
        "result.0.1#0",
        "item1%7#0",
        "item1%7#0 (copy)",
        "0"
      ]
    },
    "1123": {
      "op": "extract_uint64",
      "stack_out": [
        "result.0.0#0",
        "result.0.1#0",
        "item1%7#0",
        "result.1.0#0"
      ]
    },
    "1124": {
      "op": "dig 1",
      "stack_out": [
        "result.0.0#0",
        "result.0.1#0",
        "item1%7#0",
        "result.1.0#0",
        "item1%7#0 (copy)"
      ]
    },
    "1126": {
      "error": "Index access is out of bounds",
      "op": "extract 8 8 // on error: Index access is out of bounds",
      "stack_out": [
        "result.0.0#0",
        "result.0.1#0",
        "item1%7#0",
        "result.1.0#0",
        "result.1.1#0"
      ]
    },
    "1129": {
      "op": "dig 2",
      "stack_out": [
        "result.0.0#0",
        "result.0.1#0",
        "item1%7#0",
        "result.1.0#0",
        "result.1.1#0",
        "item1%7#0 (copy)"
      ]
    },
    "1131": {
      "op": "pushint 16 // 16",
      "stack_out": [
        "result.0.0#0",
        "result.0.1#0",
        "item1%7#0",
        "result.1.0#0",
        "result.1.1#0",
        "item1%7#0 (copy)",
        "16"
      ]
    },
    "1133": {
      "op": "extract_uint16",
      "defined_out": [
        "item1%7#0",
        "item_start_offset%14#0",
        "result.0.0#0",
        "result.0.1#0",
        "result.1.0#0",
        "result.1.1#0"
      ],
      "stack_out": [
        "result.0.0#0",
        "result.0.1#0",
        "item1%7#0",
        "result.1.0#0",
        "result.1.1#0",
        "item_start_offset%14#0"
      ]
    },
    "1134": {
      "op": "dig 3",
      "stack_out": [
        "result.0.0#0",
        "result.0.1#0",
        "item1%7#0",
        "result.1.0#0",
        "result.1.1#0",
        "item_start_offset%14#0",
        "item1%7#0 (copy)"
      ]
    },
    "1136": {
      "op": "len",
      "defined_out": [
        "item1%7#0",
        "item_end_offset%14#0",
        "item_start_offset%14#0",
        "result.0.0#0",
        "result.0.1#0",
        "result.1.0#0",
        "result.1.1#0"
      ],
      "stack_out": [
        "result.0.0#0",
        "result.0.1#0",
        "item1%7#0",
        "result.1.0#0",
        "result.1.1#0",
        "item_start_offset%14#0",
        "item_end_offset%14#0"
      ]
    },
    "1137": {
      "op": "uncover 4",
      "stack_out": [
        "result.0.0#0",
        "result.0.1#0",
        "result.1.0#0",
        "result.1.1#0",
        "item_start_offset%14#0",
        "item_end_offset%14#0",
        "item1%7#0"
      ]
    },
    "1139": {
      "op": "cover 2",
      "stack_out": [
        "result.0.0#0",
        "result.0.1#0",
        "result.1.0#0",
        "result.1.1#0",
        "item1%7#0",
        "item_start_offset%14#0",
        "item_end_offset%14#0"
      ]
    },
    "1141": {
      "op": "substring3",
      "defined_out": [
        "item2%2#0",
        "result.0.0#0",
        "result.0.1#0",
        "result.1.0#0",
        "result.1.1#0"
      ],
      "stack_out": [
        "result.0.0#0",
        "result.0.1#0",
        "result.1.0#0",
        "result.1.1#0",
        "item2%2#0"
      ]
    },
    "1142": {
      "op": "extract 2 0",
      "stack_out": [
        "result.0.0#0",
        "result.0.1#0",
        "result.1.0#0",
        "result.1.1#0",
        "result.1.2#0"
      ]
    },
    "1145": {
      "op": "uncover 4",
      "stack_out": [
        "result.0.1#0",
        "result.1.0#0",
        "result.1.1#0",
        "result.1.2#0",
        "result.0.0#0"
      ]
    },
    "1147": {
      "op": "pushbytes \"echo: s1b\"",
      "defined_out": [
        "\"echo: s1b\"",
        "result.0.0#0",
        "result.0.1#0",
        "result.1.0#0",
        "result.1.1#0",
        "result.1.2#0"
      ],
      "stack_out": [
        "result.0.1#0",
        "result.1.0#0",
        "result.1.1#0",
        "result.1.2#0",
        "result.0.0#0",
        "\"echo: s1b\""
      ]
    },
    "1158": {
      "op": "==",
      "defined_out": [
        "result.0.1#0",
        "result.1.0#0",
        "result.1.1#0",
        "result.1.2#0",
        "tmp%19#1"
      ],
      "stack_out": [
        "result.0.1#0",
        "result.1.0#0",
        "result.1.1#0",
        "result.1.2#0",
        "tmp%19#1"
      ]
    },
    "1159": {
      "op": "assert",
      "stack_out": [
        "result.0.1#0",
        "result.1.0#0",
        "result.1.1#0",
        "result.1.2#0"
      ]
    },
    "1160": {
      "op": "uncover 3",
      "stack_out": [
        "result.1.0#0",
        "result.1.1#0",
        "result.1.2#0",
        "result.0.1#0"
      ]
    },
    "1162": {
      "op": "pushbytes 0x00096563686f3a20733262",
      "defined_out": [
        "0x00096563686f3a20733262",
        "result.0.1#0",
        "result.1.0#0",
        "result.1.1#0",
        "result.1.2#0"
      ],
      "stack_out": [
        "result.1.0#0",
        "result.1.1#0",
        "result.1.2#0",
        "result.0.1#0",
        "0x00096563686f3a20733262"
      ]
    },
    "1175": {
      "op": "==",
      "defined_out": [
        "result.1.0#0",
        "result.1.1#0",
        "result.1.2#0",
        "tmp%20#0"
      ],
      "stack_out": [
        "result.1.0#0",
        "result.1.1#0",
        "result.1.2#0",
        "tmp%20#0"
      ]
    },
    "1176": {
      "op": "assert",
      "stack_out": [
        "result.1.0#0",
        "result.1.1#0",
        "result.1.2#0"
      ]
    },
    "1177": {
      "op": "uncover 2",
      "stack_out": [
        "result.1.1#0",
        "result.1.2#0",
        "result.1.0#0"
      ]
    },
    "1179": {
      "op": "pushint 12 // 12",
      "defined_out": [
        "12",
        "result.1.0#0",
        "result.1.1#0",
        "result.1.2#0"
      ],
      "stack_out": [
        "result.1.1#0",
        "result.1.2#0",
        "result.1.0#0",
        "12"
      ]
    },
    "1181": {
      "op": "==",
      "defined_out": [
        "result.1.1#0",
        "result.1.2#0",
        "tmp%21#1"
      ],
      "stack_out": [
        "result.1.1#0",
        "result.1.2#0",
        "tmp%21#1"
      ]
    },
    "1182": {
      "op": "assert",
      "stack_out": [
        "result.1.1#0",
        "result.1.2#0"
      ]
    },
    "1183": {
      "op": "swap",
      "stack_out": [
        "result.1.2#0",
        "result.1.1#0"
      ]
    },
    "1184": {
      "op": "pushbytes 0x0000000000000016",
      "defined_out": [
        "0x0000000000000016",
        "result.1.1#0",
        "result.1.2#0"
      ],
      "stack_out": [
        "result.1.2#0",
        "result.1.1#0",
        "0x0000000000000016"
      ]
    },
    "1194": {
      "op": "b==",
      "defined_out": [
        "result.1.2#0",
        "tmp%22#1"
      ],
      "stack_out": [
        "result.1.2#0",
        "tmp%22#1"
      ]
    },
    "1195": {
      "op": "assert",
      "stack_out": [
        "result.1.2#0"
      ]
    },
    "1196": {
      "op": "pushbytes 0x6563686f3a203362",
      "defined_out": [
        "0x6563686f3a203362",
        "result.1.2#0"
      ],
      "stack_out": [
        "result.1.2#0",
        "0x6563686f3a203362"
      ]
    },
    "1206": {
      "op": "==",
      "defined_out": [
        "tmp%23#1"
      ],
      "stack_out": [
        "tmp%23#1"
      ]
    },
    "1207": {
      "op": "assert",
      "stack_out": []
    },
    "1208": {
      "op": "intc_2 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1209": {
      "op": "return",
      "stack_out": []
    },
    "1210": {
      "block": "main_test_native_tuple_method_ref_route@16",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%87#0"
      ],
      "stack_out": [
        "tmp%87#0"
      ]
    },
    "1212": {
      "op": "!",
      "defined_out": [
        "tmp%88#0"
      ],
      "stack_out": [
        "tmp%88#0"
      ]
    },
    "1213": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "1214": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%89#0"
      ],
      "stack_out": [
        "tmp%89#0"
      ]
    },
    "1216": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "1217": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[1]%14#0"
      ],
      "stack_out": [
        "reinterpret_bytes[1]%14#0"
      ]
    },
    "1220": {
      "op": "btoi",
      "defined_out": [
        "tmp%91#0"
      ],
      "stack_out": [
        "tmp%91#0"
      ]
    },
    "1221": {
      "op": "txnas Applications",
      "defined_out": [
        "app#0"
      ],
      "stack_out": [
        "app#0"
      ]
    },
    "1223": {
      "op": "itxn_begin"
    },
    "1224": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "app#0 (copy)"
      ],
      "stack_out": [
        "app#0",
        "app#0 (copy)"
      ]
    },
    "1225": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "app#0"
      ]
    },
    "1227": {
      "op": "bytec 4 // method \"echo_native_tuple(string,byte[],uint64,uint512)(string,byte[],uint64,uint512)\"",
      "defined_out": [
        "Method(echo_native_tuple(string,byte[],uint64,uint512)(string,byte[],uint64,uint512))",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "Method(echo_native_tuple(string,byte[],uint64,uint512)(string,byte[],uint64,uint512))"
      ]
    },
    "1229": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0"
      ]
    },
    "1231": {
      "op": "bytec 5 // 0x00027331",
      "defined_out": [
        "0x00027331",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "0x00027331"
      ]
    },
    "1233": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0"
      ]
    },
    "1235": {
      "op": "bytec 6 // 0x00026231",
      "defined_out": [
        "0x00026231",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "0x00026231"
      ]
    },
    "1237": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0"
      ]
    },
    "1239": {
      "op": "bytec_2 // 0x0000000000000001",
      "defined_out": [
        "0x0000000000000001",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "0x0000000000000001"
      ]
    },
    "1240": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0"
      ]
    },
    "1242": {
      "op": "bytec_1 // 0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002",
      "defined_out": [
        "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002"
      ]
    },
    "1243": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0"
      ]
    },
    "1245": {
      "op": "intc_1 // appl",
      "defined_out": [
        "app#0",
        "appl"
      ],
      "stack_out": [
        "app#0",
        "appl"
      ]
    },
    "1246": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "app#0"
      ]
    },
    "1248": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "0"
      ]
    },
    "1249": {
      "op": "itxn_field Fee",
      "stack_out": [
        "app#0"
      ]
    },
    "1251": {
      "op": "itxn_submit"
    },
    "1252": {
      "op": "itxn LastLog",
      "defined_out": [
        "app#0",
        "awst_tmp%0#0"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0"
      ]
    },
    "1254": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ]
    },
    "1255": {
      "op": "extract 4 0",
      "defined_out": [
        "app#0",
        "awst_tmp%0#0",
        "tmp%0#4"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "tmp%0#4"
      ]
    },
    "1258": {
      "op": "dig 1",
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "tmp%0#4",
        "awst_tmp%0#0 (copy)"
      ]
    },
    "1260": {
      "op": "extract 0 4",
      "defined_out": [
        "app#0",
        "awst_tmp%0#0",
        "tmp%0#4",
        "tmp%1#1"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "tmp%0#4",
        "tmp%1#1"
      ]
    },
    "1263": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "app#0",
        "awst_tmp%0#0",
        "tmp%0#4",
        "tmp%1#1"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "tmp%0#4",
        "tmp%1#1",
        "0x151f7c75"
      ]
    },
    "1264": {
      "op": "==",
      "defined_out": [
        "app#0",
        "awst_tmp%0#0",
        "tmp%0#4",
        "tmp%2#1"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "tmp%0#4",
        "tmp%2#1"
      ]
    },
    "1265": {
      "error": "ARC4 prefix is valid",
      "op": "assert // ARC4 prefix is valid",
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "tmp%0#4"
      ]
    },
    "1266": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "awst_tmp%0#0",
        "tmp%0#4",
        "tmp%0#4 (copy)"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "tmp%0#4",
        "tmp%0#4 (copy)"
      ]
    },
    "1267": {
      "op": "intc_0 // 0",
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "tmp%0#4",
        "tmp%0#4 (copy)",
        "0"
      ]
    },
    "1268": {
      "op": "extract_uint16",
      "defined_out": [
        "app#0",
        "awst_tmp%0#0",
        "item_start_offset%0#0",
        "tmp%0#4"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "tmp%0#4",
        "item_start_offset%0#0"
      ]
    },
    "1269": {
      "op": "dig 1",
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "tmp%0#4",
        "item_start_offset%0#0",
        "tmp%0#4 (copy)"
      ]
    },
    "1271": {
      "op": "intc_3 // 2",
      "defined_out": [
        "2",
        "app#0",
        "awst_tmp%0#0",
        "item_start_offset%0#0",
        "tmp%0#4",
        "tmp%0#4 (copy)"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "tmp%0#4",
        "item_start_offset%0#0",
        "tmp%0#4 (copy)",
        "2"
      ]
    },
    "1272": {
      "op": "extract_uint16",
      "defined_out": [
        "app#0",
        "awst_tmp%0#0",
        "item_end_offset%0#0",
        "item_start_offset%0#0",
        "tmp%0#4"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "tmp%0#4",
        "item_start_offset%0#0",
        "item_end_offset%0#0"
      ]
    },
    "1273": {
      "op": "dig 2",
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "tmp%0#4",
        "item_start_offset%0#0",
        "item_end_offset%0#0",
        "tmp%0#4 (copy)"
      ]
    },
    "1275": {
      "op": "uncover 2",
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "tmp%0#4",
        "item_end_offset%0#0",
        "tmp%0#4 (copy)",
        "item_start_offset%0#0"
      ]
    },
    "1277": {
      "op": "dig 2",
      "defined_out": [
        "app#0",
        "awst_tmp%0#0",
        "item_end_offset%0#0",
        "item_end_offset%0#0 (copy)",
        "item_start_offset%0#0",
        "tmp%0#4",
        "tmp%0#4 (copy)"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "tmp%0#4",
        "item_end_offset%0#0",
        "tmp%0#4 (copy)",
        "item_start_offset%0#0",
        "item_end_offset%0#0 (copy)"
      ]
    },
    "1279": {
      "op": "substring3",
      "defined_out": [
        "app#0",
        "awst_tmp%0#0",
        "item0%0#0",
        "item_end_offset%0#0",
        "tmp%0#4"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "tmp%0#4",
        "item_end_offset%0#0",
        "item0%0#0"
      ]
    },
    "1280": {
      "op": "extract 2 0",
      "defined_out": [
        "app#0",
        "awst_tmp%0#0",
        "item_end_offset%0#0",
        "result.0#0",
        "tmp%0#4"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "tmp%0#4",
        "item_end_offset%0#0",
        "result.0#0"
      ]
    },
    "1283": {
      "op": "dig 2",
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "tmp%0#4",
        "item_end_offset%0#0",
        "result.0#0",
        "tmp%0#4 (copy)"
      ]
    },
    "1285": {
      "op": "len",
      "defined_out": [
        "app#0",
        "awst_tmp%0#0",
        "item_end_offset%0#0",
        "item_end_offset%1#0",
        "result.0#0",
        "tmp%0#4"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "tmp%0#4",
        "item_end_offset%0#0",
        "result.0#0",
        "item_end_offset%1#0"
      ]
    },
    "1286": {
      "op": "swap"
    },
    "1287": {
      "op": "cover 3",
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "result.0#0",
        "tmp%0#4",
        "item_end_offset%0#0",
        "item_end_offset%1#0"
      ]
    },
    "1289": {
      "op": "substring3",
      "defined_out": [
        "app#0",
        "awst_tmp%0#0",
        "item1%0#0",
        "result.0#0"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "result.0#0",
        "item1%0#0"
      ]
    },
    "1290": {
      "op": "extract 2 0",
      "defined_out": [
        "app#0",
        "awst_tmp%0#0",
        "result.0#0",
        "result.1#0"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "result.0#0",
        "result.1#0"
      ]
    },
    "1293": {
      "op": "dig 2",
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "result.0#0",
        "result.1#0",
        "awst_tmp%0#0 (copy)"
      ]
    },
    "1295": {
      "op": "pushint 8 // 8",
      "defined_out": [
        "8",
        "app#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)",
        "result.0#0",
        "result.1#0"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "result.0#0",
        "result.1#0",
        "awst_tmp%0#0 (copy)",
        "8"
      ]
    },
    "1297": {
      "op": "extract_uint64",
      "defined_out": [
        "app#0",
        "awst_tmp%0#0",
        "result.0#0",
        "result.1#0",
        "result.2#0"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "result.0#0",
        "result.1#0",
        "result.2#0"
      ]
    },
    "1298": {
      "op": "uncover 3",
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "awst_tmp%0#0"
      ]
    },
    "1300": {
      "op": "extract 16 64",
      "defined_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0"
      ],
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0"
      ]
    },
    "1303": {
      "op": "dig 3",
      "defined_out": [
        "app#0",
        "result.0#0",
        "result.0#0 (copy)",
        "result.1#0",
        "result.2#0",
        "result.3#0"
      ],
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "result.0#0 (copy)"
      ]
    },
    "1305": {
      "op": "bytec 8 // \"echo: s1\"",
      "defined_out": [
        "\"echo: s1\"",
        "app#0",
        "result.0#0",
        "result.0#0 (copy)",
        "result.1#0",
        "result.2#0",
        "result.3#0"
      ],
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "result.0#0 (copy)",
        "\"echo: s1\""
      ]
    },
    "1307": {
      "op": "==",
      "defined_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "tmp%3#1"
      ],
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "tmp%3#1"
      ]
    },
    "1308": {
      "op": "assert",
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0"
      ]
    },
    "1309": {
      "op": "dig 2",
      "defined_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.1#0 (copy)",
        "result.2#0",
        "result.3#0"
      ],
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "result.1#0 (copy)"
      ]
    },
    "1311": {
      "op": "bytec 25 // 0x6563686f3a206231",
      "defined_out": [
        "0x6563686f3a206231",
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.1#0 (copy)",
        "result.2#0",
        "result.3#0"
      ],
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "result.1#0 (copy)",
        "0x6563686f3a206231"
      ]
    },
    "1313": {
      "op": "==",
      "defined_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "tmp%4#0"
      ]
    },
    "1314": {
      "op": "assert",
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0"
      ]
    },
    "1315": {
      "op": "dig 1",
      "defined_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.2#0 (copy)",
        "result.3#0"
      ],
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "result.2#0 (copy)"
      ]
    },
    "1317": {
      "op": "intc_3 // 2",
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "result.2#0 (copy)",
        "2"
      ]
    },
    "1318": {
      "op": "==",
      "defined_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "tmp%5#2"
      ],
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "tmp%5#2"
      ]
    },
    "1319": {
      "op": "assert",
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0"
      ]
    },
    "1320": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "result.3#0 (copy)"
      ],
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "result.3#0 (copy)"
      ]
    },
    "1321": {
      "op": "bytec 13 // 0x03",
      "defined_out": [
        "0x03",
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "result.3#0 (copy)"
      ],
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "result.3#0 (copy)",
        "0x03"
      ]
    },
    "1323": {
      "op": "b==",
      "defined_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "tmp%6#1"
      ],
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "tmp%6#1"
      ]
    },
    "1324": {
      "op": "assert",
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0"
      ]
    },
    "1325": {
      "op": "itxn_begin"
    },
    "1326": {
      "op": "intc_2 // 1",
      "defined_out": [
        "1",
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0"
      ],
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "1"
      ]
    },
    "1327": {
      "op": "itob",
      "defined_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "val_as_bytes%0#1"
      ],
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "val_as_bytes%0#1"
      ]
    },
    "1328": {
      "op": "dig 5",
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "val_as_bytes%0#1",
        "app#0 (copy)"
      ]
    },
    "1330": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "val_as_bytes%0#1"
      ]
    },
    "1332": {
      "op": "bytec 4 // method \"echo_native_tuple(string,byte[],uint64,uint512)(string,byte[],uint64,uint512)\"",
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "val_as_bytes%0#1",
        "Method(echo_native_tuple(string,byte[],uint64,uint512)(string,byte[],uint64,uint512))"
      ]
    },
    "1334": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "val_as_bytes%0#1"
      ]
    },
    "1336": {
      "op": "bytec 5 // 0x00027331",
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "val_as_bytes%0#1",
        "0x00027331"
      ]
    },
    "1338": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "val_as_bytes%0#1"
      ]
    },
    "1340": {
      "op": "bytec 6 // 0x00026231",
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "val_as_bytes%0#1",
        "0x00026231"
      ]
    },
    "1342": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "val_as_bytes%0#1"
      ]
    },
    "1344": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0"
      ]
    },
    "1346": {
      "op": "bytec_1 // 0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002",
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002"
      ]
    },
    "1347": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0"
      ]
    },
    "1349": {
      "op": "intc_1 // appl",
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "appl"
      ]
    },
    "1350": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0"
      ]
    },
    "1352": {
      "op": "intc_0 // 0",
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "0"
      ]
    },
    "1353": {
      "op": "itxn_field Fee",
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0"
      ]
    },
    "1355": {
      "op": "itxn_submit"
    },
    "1356": {
      "op": "itxn LastLog",
      "defined_out": [
        "app#0",
        "awst_tmp%1#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0"
      ],
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "awst_tmp%1#0"
      ]
    },
    "1358": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "awst_tmp%1#0",
        "awst_tmp%1#0 (copy)",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0"
      ],
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "awst_tmp%1#0",
        "awst_tmp%1#0 (copy)"
      ]
    },
    "1359": {
      "op": "extract 4 0",
      "defined_out": [
        "app#0",
        "awst_tmp%1#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "awst_tmp%1#0",
        "tmp%7#0"
      ]
    },
    "1362": {
      "op": "dig 1",
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "awst_tmp%1#0",
        "tmp%7#0",
        "awst_tmp%1#0 (copy)"
      ]
    },
    "1364": {
      "op": "extract 0 4",
      "defined_out": [
        "app#0",
        "awst_tmp%1#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "tmp%7#0",
        "tmp%8#3"
      ],
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "awst_tmp%1#0",
        "tmp%7#0",
        "tmp%8#3"
      ]
    },
    "1367": {
      "op": "bytec_0 // 0x151f7c75",
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "awst_tmp%1#0",
        "tmp%7#0",
        "tmp%8#3",
        "0x151f7c75"
      ]
    },
    "1368": {
      "op": "==",
      "defined_out": [
        "app#0",
        "awst_tmp%1#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "tmp%7#0",
        "tmp%9#3"
      ],
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "awst_tmp%1#0",
        "tmp%7#0",
        "tmp%9#3"
      ]
    },
    "1369": {
      "error": "ARC4 prefix is valid",
      "op": "assert // ARC4 prefix is valid",
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "awst_tmp%1#0",
        "tmp%7#0"
      ]
    },
    "1370": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "awst_tmp%1#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "tmp%7#0",
        "tmp%7#0 (copy)"
      ],
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "awst_tmp%1#0",
        "tmp%7#0",
        "tmp%7#0 (copy)"
      ]
    },
    "1371": {
      "op": "intc_0 // 0",
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "awst_tmp%1#0",
        "tmp%7#0",
        "tmp%7#0 (copy)",
        "0"
      ]
    },
    "1372": {
      "op": "extract_uint16",
      "defined_out": [
        "app#0",
        "awst_tmp%1#0",
        "item_start_offset%2#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "awst_tmp%1#0",
        "tmp%7#0",
        "item_start_offset%2#0"
      ]
    },
    "1373": {
      "op": "dig 1",
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "awst_tmp%1#0",
        "tmp%7#0",
        "item_start_offset%2#0",
        "tmp%7#0 (copy)"
      ]
    },
    "1375": {
      "op": "intc_3 // 2",
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "awst_tmp%1#0",
        "tmp%7#0",
        "item_start_offset%2#0",
        "tmp%7#0 (copy)",
        "2"
      ]
    },
    "1376": {
      "op": "extract_uint16",
      "defined_out": [
        "app#0",
        "awst_tmp%1#0",
        "item_end_offset%2#0",
        "item_start_offset%2#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "awst_tmp%1#0",
        "tmp%7#0",
        "item_start_offset%2#0",
        "item_end_offset%2#0"
      ]
    },
    "1377": {
      "op": "dig 2",
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "awst_tmp%1#0",
        "tmp%7#0",
        "item_start_offset%2#0",
        "item_end_offset%2#0",
        "tmp%7#0 (copy)"
      ]
    },
    "1379": {
      "op": "uncover 2",
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "awst_tmp%1#0",
        "tmp%7#0",
        "item_end_offset%2#0",
        "tmp%7#0 (copy)",
        "item_start_offset%2#0"
      ]
    },
    "1381": {
      "op": "dig 2",
      "defined_out": [
        "app#0",
        "awst_tmp%1#0",
        "item_end_offset%2#0",
        "item_end_offset%2#0 (copy)",
        "item_start_offset%2#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "tmp%7#0",
        "tmp%7#0 (copy)"
      ],
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "awst_tmp%1#0",
        "tmp%7#0",
        "item_end_offset%2#0",
        "tmp%7#0 (copy)",
        "item_start_offset%2#0",
        "item_end_offset%2#0 (copy)"
      ]
    },
    "1383": {
      "op": "substring3",
      "defined_out": [
        "app#0",
        "awst_tmp%1#0",
        "item0%1#0",
        "item_end_offset%2#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "awst_tmp%1#0",
        "tmp%7#0",
        "item_end_offset%2#0",
        "item0%1#0"
      ]
    },
    "1384": {
      "op": "extract 2 0",
      "defined_out": [
        "app#0",
        "awst_tmp%1#0",
        "item_end_offset%2#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "result_2.0#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "awst_tmp%1#0",
        "tmp%7#0",
        "item_end_offset%2#0",
        "result_2.0#0"
      ]
    },
    "1387": {
      "op": "dig 2",
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "awst_tmp%1#0",
        "tmp%7#0",
        "item_end_offset%2#0",
        "result_2.0#0",
        "tmp%7#0 (copy)"
      ]
    },
    "1389": {
      "op": "len",
      "defined_out": [
        "app#0",
        "awst_tmp%1#0",
        "item_end_offset%2#0",
        "item_end_offset%3#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "result_2.0#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "awst_tmp%1#0",
        "tmp%7#0",
        "item_end_offset%2#0",
        "result_2.0#0",
        "item_end_offset%3#0"
      ]
    },
    "1390": {
      "op": "swap"
    },
    "1391": {
      "op": "cover 3",
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "awst_tmp%1#0",
        "result_2.0#0",
        "tmp%7#0",
        "item_end_offset%2#0",
        "item_end_offset%3#0"
      ]
    },
    "1393": {
      "op": "substring3",
      "defined_out": [
        "app#0",
        "awst_tmp%1#0",
        "item1%1#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "result_2.0#0"
      ],
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "awst_tmp%1#0",
        "result_2.0#0",
        "item1%1#0"
      ]
    },
    "1394": {
      "op": "extract 2 0",
      "defined_out": [
        "app#0",
        "awst_tmp%1#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "result_2.0#0",
        "result_2.1#0"
      ],
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "awst_tmp%1#0",
        "result_2.0#0",
        "result_2.1#0"
      ]
    },
    "1397": {
      "op": "dig 2",
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "awst_tmp%1#0",
        "result_2.0#0",
        "result_2.1#0",
        "awst_tmp%1#0 (copy)"
      ]
    },
    "1399": {
      "op": "pushint 8 // 8",
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "awst_tmp%1#0",
        "result_2.0#0",
        "result_2.1#0",
        "awst_tmp%1#0 (copy)",
        "8"
      ]
    },
    "1401": {
      "op": "extract_uint64",
      "defined_out": [
        "app#0",
        "awst_tmp%1#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "result_2.0#0",
        "result_2.1#0",
        "result_2.2#0"
      ],
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "awst_tmp%1#0",
        "result_2.0#0",
        "result_2.1#0",
        "result_2.2#0"
      ]
    },
    "1402": {
      "op": "uncover 3",
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "result_2.0#0",
        "result_2.1#0",
        "result_2.2#0",
        "awst_tmp%1#0"
      ]
    },
    "1404": {
      "op": "extract 16 64",
      "defined_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "result_2.0#0",
        "result_2.1#0",
        "result_2.2#0",
        "result_2.3#0"
      ],
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "result_2.0#0",
        "result_2.1#0",
        "result_2.2#0",
        "result_2.3#0"
      ]
    },
    "1407": {
      "op": "uncover 3",
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "result_2.1#0",
        "result_2.2#0",
        "result_2.3#0",
        "result_2.0#0"
      ]
    },
    "1409": {
      "op": "dig 7",
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "result_2.1#0",
        "result_2.2#0",
        "result_2.3#0",
        "result_2.0#0",
        "result.0#0 (copy)"
      ]
    },
    "1411": {
      "op": "==",
      "defined_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "result_2.1#0",
        "result_2.2#0",
        "result_2.3#0",
        "tmp%10#2"
      ],
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "result_2.1#0",
        "result_2.2#0",
        "result_2.3#0",
        "tmp%10#2"
      ]
    },
    "1412": {
      "op": "uncover 3",
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "result_2.2#0",
        "result_2.3#0",
        "tmp%10#2",
        "result_2.1#0"
      ]
    },
    "1414": {
      "op": "dig 6",
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "result_2.2#0",
        "result_2.3#0",
        "tmp%10#2",
        "result_2.1#0",
        "result.1#0 (copy)"
      ]
    },
    "1416": {
      "op": "==",
      "defined_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "result_2.2#0",
        "result_2.3#0",
        "tmp%10#2",
        "tmp%11#1"
      ],
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "result_2.2#0",
        "result_2.3#0",
        "tmp%10#2",
        "tmp%11#1"
      ]
    },
    "1417": {
      "op": "&&",
      "defined_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "result_2.2#0",
        "result_2.3#0",
        "tmp%12#1"
      ],
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "result_2.2#0",
        "result_2.3#0",
        "tmp%12#1"
      ]
    },
    "1418": {
      "op": "uncover 2",
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "result_2.3#0",
        "tmp%12#1",
        "result_2.2#0"
      ]
    },
    "1420": {
      "op": "dig 4",
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "result_2.3#0",
        "tmp%12#1",
        "result_2.2#0",
        "result.2#0 (copy)"
      ]
    },
    "1422": {
      "op": "==",
      "defined_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "result_2.3#0",
        "tmp%12#1",
        "tmp%13#2"
      ],
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "result_2.3#0",
        "tmp%12#1",
        "tmp%13#2"
      ]
    },
    "1423": {
      "op": "&&",
      "defined_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "result_2.3#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "result_2.3#0",
        "tmp%14#0"
      ]
    },
    "1424": {
      "op": "swap",
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "tmp%14#0",
        "result_2.3#0"
      ]
    },
    "1425": {
      "op": "dig 2",
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "tmp%14#0",
        "result_2.3#0",
        "result.3#0 (copy)"
      ]
    },
    "1427": {
      "op": "b==",
      "defined_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "tmp%14#0",
        "tmp%15#1"
      ],
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "tmp%14#0",
        "tmp%15#1"
      ]
    },
    "1428": {
      "op": "&&",
      "defined_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "tmp%16#1"
      ],
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "tmp%16#1"
      ]
    },
    "1429": {
      "error": "expected native arguments to give the same result",
      "op": "assert // expected native arguments to give the same result",
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0"
      ]
    },
    "1430": {
      "op": "itxn_begin"
    },
    "1431": {
      "op": "dig 4",
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "app#0 (copy)"
      ]
    },
    "1433": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0"
      ]
    },
    "1435": {
      "op": "bytec 4 // method \"echo_native_tuple(string,byte[],uint64,uint512)(string,byte[],uint64,uint512)\"",
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "Method(echo_native_tuple(string,byte[],uint64,uint512)(string,byte[],uint64,uint512))"
      ]
    },
    "1437": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0"
      ]
    },
    "1439": {
      "op": "bytec 5 // 0x00027331",
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "0x00027331"
      ]
    },
    "1441": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0"
      ]
    },
    "1443": {
      "op": "bytec 6 // 0x00026231",
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "0x00026231"
      ]
    },
    "1445": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0"
      ]
    },
    "1447": {
      "op": "bytec_2 // 0x0000000000000001",
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "0x0000000000000001"
      ]
    },
    "1448": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0"
      ]
    },
    "1450": {
      "op": "bytec_1 // 0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002",
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002"
      ]
    },
    "1451": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0"
      ]
    },
    "1453": {
      "op": "intc_1 // appl",
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "appl"
      ]
    },
    "1454": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0"
      ]
    },
    "1456": {
      "op": "intc_0 // 0",
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "0"
      ]
    },
    "1457": {
      "op": "itxn_field Fee",
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0"
      ]
    },
    "1459": {
      "op": "itxn_submit"
    },
    "1460": {
      "op": "itxn LastLog",
      "defined_out": [
        "app#0",
        "awst_tmp%2#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0"
      ],
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "awst_tmp%2#0"
      ]
    },
    "1462": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "awst_tmp%2#0",
        "awst_tmp%2#0 (copy)",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0"
      ],
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "awst_tmp%2#0",
        "awst_tmp%2#0 (copy)"
      ]
    },
    "1463": {
      "op": "extract 4 0",
      "defined_out": [
        "app#0",
        "awst_tmp%2#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "tmp%17#1"
      ],
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "awst_tmp%2#0",
        "tmp%17#1"
      ]
    },
    "1466": {
      "op": "dig 1",
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "awst_tmp%2#0",
        "tmp%17#1",
        "awst_tmp%2#0 (copy)"
      ]
    },
    "1468": {
      "op": "extract 0 4",
      "defined_out": [
        "app#0",
        "awst_tmp%2#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "tmp%17#1",
        "tmp%18#2"
      ],
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "awst_tmp%2#0",
        "tmp%17#1",
        "tmp%18#2"
      ]
    },
    "1471": {
      "op": "bytec_0 // 0x151f7c75",
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "awst_tmp%2#0",
        "tmp%17#1",
        "tmp%18#2",
        "0x151f7c75"
      ]
    },
    "1472": {
      "op": "==",
      "defined_out": [
        "app#0",
        "awst_tmp%2#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "tmp%17#1",
        "tmp%19#1"
      ],
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "awst_tmp%2#0",
        "tmp%17#1",
        "tmp%19#1"
      ]
    },
    "1473": {
      "error": "ARC4 prefix is valid",
      "op": "assert // ARC4 prefix is valid",
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "awst_tmp%2#0",
        "tmp%17#1"
      ]
    },
    "1474": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "awst_tmp%2#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "tmp%17#1",
        "tmp%17#1 (copy)"
      ],
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "awst_tmp%2#0",
        "tmp%17#1",
        "tmp%17#1 (copy)"
      ]
    },
    "1475": {
      "op": "intc_0 // 0",
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "awst_tmp%2#0",
        "tmp%17#1",
        "tmp%17#1 (copy)",
        "0"
      ]
    },
    "1476": {
      "op": "extract_uint16",
      "defined_out": [
        "app#0",
        "awst_tmp%2#0",
        "item_start_offset%4#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "tmp%17#1"
      ],
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "awst_tmp%2#0",
        "tmp%17#1",
        "item_start_offset%4#0"
      ]
    },
    "1477": {
      "op": "dig 1",
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "awst_tmp%2#0",
        "tmp%17#1",
        "item_start_offset%4#0",
        "tmp%17#1 (copy)"
      ]
    },
    "1479": {
      "op": "intc_3 // 2",
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "awst_tmp%2#0",
        "tmp%17#1",
        "item_start_offset%4#0",
        "tmp%17#1 (copy)",
        "2"
      ]
    },
    "1480": {
      "op": "extract_uint16",
      "defined_out": [
        "app#0",
        "awst_tmp%2#0",
        "item_end_offset%4#0",
        "item_start_offset%4#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "tmp%17#1"
      ],
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "awst_tmp%2#0",
        "tmp%17#1",
        "item_start_offset%4#0",
        "item_end_offset%4#0"
      ]
    },
    "1481": {
      "op": "dig 2",
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "awst_tmp%2#0",
        "tmp%17#1",
        "item_start_offset%4#0",
        "item_end_offset%4#0",
        "tmp%17#1 (copy)"
      ]
    },
    "1483": {
      "op": "uncover 2",
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "awst_tmp%2#0",
        "tmp%17#1",
        "item_end_offset%4#0",
        "tmp%17#1 (copy)",
        "item_start_offset%4#0"
      ]
    },
    "1485": {
      "op": "dig 2",
      "defined_out": [
        "app#0",
        "awst_tmp%2#0",
        "item_end_offset%4#0",
        "item_end_offset%4#0 (copy)",
        "item_start_offset%4#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "tmp%17#1",
        "tmp%17#1 (copy)"
      ],
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "awst_tmp%2#0",
        "tmp%17#1",
        "item_end_offset%4#0",
        "tmp%17#1 (copy)",
        "item_start_offset%4#0",
        "item_end_offset%4#0 (copy)"
      ]
    },
    "1487": {
      "op": "substring3",
      "defined_out": [
        "app#0",
        "awst_tmp%2#0",
        "item0%2#1",
        "item_end_offset%4#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "tmp%17#1"
      ],
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "awst_tmp%2#0",
        "tmp%17#1",
        "item_end_offset%4#0",
        "item0%2#1"
      ]
    },
    "1488": {
      "op": "extract 2 0",
      "defined_out": [
        "app#0",
        "awst_tmp%2#0",
        "item_end_offset%4#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "result_3.0#0",
        "tmp%17#1"
      ],
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "awst_tmp%2#0",
        "tmp%17#1",
        "item_end_offset%4#0",
        "result_3.0#0"
      ]
    },
    "1491": {
      "op": "dig 2",
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "awst_tmp%2#0",
        "tmp%17#1",
        "item_end_offset%4#0",
        "result_3.0#0",
        "tmp%17#1 (copy)"
      ]
    },
    "1493": {
      "op": "len",
      "defined_out": [
        "app#0",
        "awst_tmp%2#0",
        "item_end_offset%4#0",
        "item_end_offset%5#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "result_3.0#0",
        "tmp%17#1"
      ],
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "awst_tmp%2#0",
        "tmp%17#1",
        "item_end_offset%4#0",
        "result_3.0#0",
        "item_end_offset%5#0"
      ]
    },
    "1494": {
      "op": "swap"
    },
    "1495": {
      "op": "cover 3",
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "awst_tmp%2#0",
        "result_3.0#0",
        "tmp%17#1",
        "item_end_offset%4#0",
        "item_end_offset%5#0"
      ]
    },
    "1497": {
      "op": "substring3",
      "defined_out": [
        "app#0",
        "awst_tmp%2#0",
        "item1%2#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "result_3.0#0"
      ],
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "awst_tmp%2#0",
        "result_3.0#0",
        "item1%2#0"
      ]
    },
    "1498": {
      "op": "extract 2 0",
      "defined_out": [
        "app#0",
        "awst_tmp%2#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "result_3.0#0",
        "result_3.1#0"
      ],
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "awst_tmp%2#0",
        "result_3.0#0",
        "result_3.1#0"
      ]
    },
    "1501": {
      "op": "dig 2",
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "awst_tmp%2#0",
        "result_3.0#0",
        "result_3.1#0",
        "awst_tmp%2#0 (copy)"
      ]
    },
    "1503": {
      "op": "pushint 8 // 8",
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "awst_tmp%2#0",
        "result_3.0#0",
        "result_3.1#0",
        "awst_tmp%2#0 (copy)",
        "8"
      ]
    },
    "1505": {
      "op": "extract_uint64",
      "defined_out": [
        "app#0",
        "awst_tmp%2#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "result_3.0#0",
        "result_3.1#0",
        "result_3.2#0"
      ],
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "awst_tmp%2#0",
        "result_3.0#0",
        "result_3.1#0",
        "result_3.2#0"
      ]
    },
    "1506": {
      "op": "uncover 3",
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "result_3.0#0",
        "result_3.1#0",
        "result_3.2#0",
        "awst_tmp%2#0"
      ]
    },
    "1508": {
      "op": "extract 16 64",
      "defined_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "result_3.0#0",
        "result_3.1#0",
        "result_3.2#0",
        "result_3.3#0"
      ],
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "result_3.0#0",
        "result_3.1#0",
        "result_3.2#0",
        "result_3.3#0"
      ]
    },
    "1511": {
      "op": "uncover 3",
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "result_3.1#0",
        "result_3.2#0",
        "result_3.3#0",
        "result_3.0#0"
      ]
    },
    "1513": {
      "op": "dig 7",
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "result_3.1#0",
        "result_3.2#0",
        "result_3.3#0",
        "result_3.0#0",
        "result.0#0 (copy)"
      ]
    },
    "1515": {
      "op": "==",
      "defined_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "result_3.1#0",
        "result_3.2#0",
        "result_3.3#0",
        "tmp%20#0"
      ],
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "result_3.1#0",
        "result_3.2#0",
        "result_3.3#0",
        "tmp%20#0"
      ]
    },
    "1516": {
      "op": "uncover 3",
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "result_3.2#0",
        "result_3.3#0",
        "tmp%20#0",
        "result_3.1#0"
      ]
    },
    "1518": {
      "op": "dig 6",
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "result_3.2#0",
        "result_3.3#0",
        "tmp%20#0",
        "result_3.1#0",
        "result.1#0 (copy)"
      ]
    },
    "1520": {
      "op": "==",
      "defined_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "result_3.2#0",
        "result_3.3#0",
        "tmp%20#0",
        "tmp%21#1"
      ],
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "result_3.2#0",
        "result_3.3#0",
        "tmp%20#0",
        "tmp%21#1"
      ]
    },
    "1521": {
      "op": "&&",
      "defined_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "result_3.2#0",
        "result_3.3#0",
        "tmp%22#1"
      ],
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "result_3.2#0",
        "result_3.3#0",
        "tmp%22#1"
      ]
    },
    "1522": {
      "op": "uncover 2",
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "result_3.3#0",
        "tmp%22#1",
        "result_3.2#0"
      ]
    },
    "1524": {
      "op": "dig 4",
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "result_3.3#0",
        "tmp%22#1",
        "result_3.2#0",
        "result.2#0 (copy)"
      ]
    },
    "1526": {
      "op": "==",
      "defined_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "result_3.3#0",
        "tmp%22#1",
        "tmp%23#1"
      ],
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "result_3.3#0",
        "tmp%22#1",
        "tmp%23#1"
      ]
    },
    "1527": {
      "op": "&&",
      "defined_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "result_3.3#0",
        "tmp%24#1"
      ],
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "result_3.3#0",
        "tmp%24#1"
      ]
    },
    "1528": {
      "op": "swap",
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "tmp%24#1",
        "result_3.3#0"
      ]
    },
    "1529": {
      "op": "dig 2",
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "tmp%24#1",
        "result_3.3#0",
        "result.3#0 (copy)"
      ]
    },
    "1531": {
      "op": "b==",
      "defined_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "tmp%24#1",
        "tmp%25#1"
      ],
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "tmp%24#1",
        "tmp%25#1"
      ]
    },
    "1532": {
      "op": "&&",
      "defined_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "tmp%26#0"
      ],
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "tmp%26#0"
      ]
    },
    "1533": {
      "error": "expected arc4 arguments to give the same result",
      "op": "assert // expected arc4 arguments to give the same result",
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0"
      ]
    },
    "1534": {
      "op": "itxn_begin"
    },
    "1535": {
      "op": "uncover 4",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "app#0"
      ]
    },
    "1537": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0"
      ]
    },
    "1539": {
      "op": "bytec 4 // method \"echo_native_tuple(string,byte[],uint64,uint512)(string,byte[],uint64,uint512)\"",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "Method(echo_native_tuple(string,byte[],uint64,uint512)(string,byte[],uint64,uint512))"
      ]
    },
    "1541": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0"
      ]
    },
    "1543": {
      "op": "bytec 5 // 0x00027331",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "0x00027331"
      ]
    },
    "1545": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0"
      ]
    },
    "1547": {
      "op": "bytec 6 // 0x00026231",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "0x00026231"
      ]
    },
    "1549": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0"
      ]
    },
    "1551": {
      "op": "bytec_2 // 0x0000000000000001",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "0x0000000000000001"
      ]
    },
    "1552": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0"
      ]
    },
    "1554": {
      "op": "bytec_1 // 0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002"
      ]
    },
    "1555": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0"
      ]
    },
    "1557": {
      "op": "intc_1 // appl",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "appl"
      ]
    },
    "1558": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0"
      ]
    },
    "1560": {
      "op": "intc_0 // 0",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "0"
      ]
    },
    "1561": {
      "op": "itxn_field Fee",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0"
      ]
    },
    "1563": {
      "op": "itxn_submit"
    },
    "1564": {
      "op": "itxn LastLog",
      "defined_out": [
        "awst_tmp%3#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "awst_tmp%3#0"
      ]
    },
    "1566": {
      "op": "dup",
      "defined_out": [
        "awst_tmp%3#0",
        "awst_tmp%3#0 (copy)",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "awst_tmp%3#0",
        "awst_tmp%3#0 (copy)"
      ]
    },
    "1567": {
      "op": "extract 4 0",
      "defined_out": [
        "awst_tmp%3#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "tmp%27#1"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "awst_tmp%3#0",
        "tmp%27#1"
      ]
    },
    "1570": {
      "op": "dig 1",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "awst_tmp%3#0",
        "tmp%27#1",
        "awst_tmp%3#0 (copy)"
      ]
    },
    "1572": {
      "op": "extract 0 4",
      "defined_out": [
        "awst_tmp%3#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "tmp%27#1",
        "tmp%28#1"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "awst_tmp%3#0",
        "tmp%27#1",
        "tmp%28#1"
      ]
    },
    "1575": {
      "op": "bytec_0 // 0x151f7c75",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "awst_tmp%3#0",
        "tmp%27#1",
        "tmp%28#1",
        "0x151f7c75"
      ]
    },
    "1576": {
      "op": "==",
      "defined_out": [
        "awst_tmp%3#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "tmp%27#1",
        "tmp%29#1"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "awst_tmp%3#0",
        "tmp%27#1",
        "tmp%29#1"
      ]
    },
    "1577": {
      "error": "ARC4 prefix is valid",
      "op": "assert // ARC4 prefix is valid",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "awst_tmp%3#0",
        "tmp%27#1"
      ]
    },
    "1578": {
      "op": "dup",
      "defined_out": [
        "awst_tmp%3#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "tmp%27#1",
        "tmp%27#1 (copy)"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "awst_tmp%3#0",
        "tmp%27#1",
        "tmp%27#1 (copy)"
      ]
    },
    "1579": {
      "op": "intc_0 // 0",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "awst_tmp%3#0",
        "tmp%27#1",
        "tmp%27#1 (copy)",
        "0"
      ]
    },
    "1580": {
      "op": "extract_uint16",
      "defined_out": [
        "awst_tmp%3#0",
        "item_start_offset%6#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "tmp%27#1"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "awst_tmp%3#0",
        "tmp%27#1",
        "item_start_offset%6#0"
      ]
    },
    "1581": {
      "op": "dig 1",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "awst_tmp%3#0",
        "tmp%27#1",
        "item_start_offset%6#0",
        "tmp%27#1 (copy)"
      ]
    },
    "1583": {
      "op": "intc_3 // 2",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "awst_tmp%3#0",
        "tmp%27#1",
        "item_start_offset%6#0",
        "tmp%27#1 (copy)",
        "2"
      ]
    },
    "1584": {
      "op": "extract_uint16",
      "defined_out": [
        "awst_tmp%3#0",
        "item_end_offset%6#0",
        "item_start_offset%6#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "tmp%27#1"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "awst_tmp%3#0",
        "tmp%27#1",
        "item_start_offset%6#0",
        "item_end_offset%6#0"
      ]
    },
    "1585": {
      "op": "dig 2",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "awst_tmp%3#0",
        "tmp%27#1",
        "item_start_offset%6#0",
        "item_end_offset%6#0",
        "tmp%27#1 (copy)"
      ]
    },
    "1587": {
      "op": "uncover 2",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "awst_tmp%3#0",
        "tmp%27#1",
        "item_end_offset%6#0",
        "tmp%27#1 (copy)",
        "item_start_offset%6#0"
      ]
    },
    "1589": {
      "op": "dig 2",
      "defined_out": [
        "awst_tmp%3#0",
        "item_end_offset%6#0",
        "item_end_offset%6#0 (copy)",
        "item_start_offset%6#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "tmp%27#1",
        "tmp%27#1 (copy)"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "awst_tmp%3#0",
        "tmp%27#1",
        "item_end_offset%6#0",
        "tmp%27#1 (copy)",
        "item_start_offset%6#0",
        "item_end_offset%6#0 (copy)"
      ]
    },
    "1591": {
      "op": "substring3",
      "defined_out": [
        "awst_tmp%3#0",
        "item0%3#0",
        "item_end_offset%6#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "tmp%27#1"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "awst_tmp%3#0",
        "tmp%27#1",
        "item_end_offset%6#0",
        "item0%3#0"
      ]
    },
    "1592": {
      "op": "extract 2 0",
      "defined_out": [
        "awst_tmp%3#0",
        "item_end_offset%6#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "result_native.0#0",
        "tmp%27#1"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "awst_tmp%3#0",
        "tmp%27#1",
        "item_end_offset%6#0",
        "result_native.0#0"
      ]
    },
    "1595": {
      "op": "dig 2",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "awst_tmp%3#0",
        "tmp%27#1",
        "item_end_offset%6#0",
        "result_native.0#0",
        "tmp%27#1 (copy)"
      ]
    },
    "1597": {
      "op": "len",
      "defined_out": [
        "awst_tmp%3#0",
        "item_end_offset%6#0",
        "item_end_offset%7#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "result_native.0#0",
        "tmp%27#1"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "awst_tmp%3#0",
        "tmp%27#1",
        "item_end_offset%6#0",
        "result_native.0#0",
        "item_end_offset%7#0"
      ]
    },
    "1598": {
      "op": "swap"
    },
    "1599": {
      "op": "cover 3",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "awst_tmp%3#0",
        "result_native.0#0",
        "tmp%27#1",
        "item_end_offset%6#0",
        "item_end_offset%7#0"
      ]
    },
    "1601": {
      "op": "substring3",
      "defined_out": [
        "awst_tmp%3#0",
        "item1%3#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "result_native.0#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "awst_tmp%3#0",
        "result_native.0#0",
        "item1%3#0"
      ]
    },
    "1602": {
      "op": "extract 2 0",
      "defined_out": [
        "awst_tmp%3#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "result_native.0#0",
        "result_native.1#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "awst_tmp%3#0",
        "result_native.0#0",
        "result_native.1#0"
      ]
    },
    "1605": {
      "op": "dig 2",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "awst_tmp%3#0",
        "result_native.0#0",
        "result_native.1#0",
        "awst_tmp%3#0 (copy)"
      ]
    },
    "1607": {
      "op": "pushint 8 // 8",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "awst_tmp%3#0",
        "result_native.0#0",
        "result_native.1#0",
        "awst_tmp%3#0 (copy)",
        "8"
      ]
    },
    "1609": {
      "op": "extract_uint64",
      "defined_out": [
        "awst_tmp%3#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "result_native.0#0",
        "result_native.1#0",
        "result_native.2#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "awst_tmp%3#0",
        "result_native.0#0",
        "result_native.1#0",
        "result_native.2#0"
      ]
    },
    "1610": {
      "op": "uncover 3",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "result_native.0#0",
        "result_native.1#0",
        "result_native.2#0",
        "awst_tmp%3#0"
      ]
    },
    "1612": {
      "op": "extract 16 64",
      "defined_out": [
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "result_native.0#0",
        "result_native.1#0",
        "result_native.2#0",
        "result_native.3#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "result_native.0#0",
        "result_native.1#0",
        "result_native.2#0",
        "result_native.3#0"
      ]
    },
    "1615": {
      "op": "uncover 3",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "result_native.1#0",
        "result_native.2#0",
        "result_native.3#0",
        "result_native.0#0"
      ]
    },
    "1617": {
      "op": "uncover 7",
      "stack_out": [
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "result_native.1#0",
        "result_native.2#0",
        "result_native.3#0",
        "result_native.0#0",
        "result.0#0"
      ]
    },
    "1619": {
      "op": "==",
      "defined_out": [
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "result_native.1#0",
        "result_native.2#0",
        "result_native.3#0",
        "tmp%30#1"
      ],
      "stack_out": [
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "result_native.1#0",
        "result_native.2#0",
        "result_native.3#0",
        "tmp%30#1"
      ]
    },
    "1620": {
      "op": "uncover 3",
      "stack_out": [
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "result_native.2#0",
        "result_native.3#0",
        "tmp%30#1",
        "result_native.1#0"
      ]
    },
    "1622": {
      "op": "uncover 6",
      "stack_out": [
        "result.2#0",
        "result.3#0",
        "result_native.2#0",
        "result_native.3#0",
        "tmp%30#1",
        "result_native.1#0",
        "result.1#0"
      ]
    },
    "1624": {
      "op": "==",
      "defined_out": [
        "result.2#0",
        "result.3#0",
        "result_native.2#0",
        "result_native.3#0",
        "tmp%30#1",
        "tmp%31#1"
      ],
      "stack_out": [
        "result.2#0",
        "result.3#0",
        "result_native.2#0",
        "result_native.3#0",
        "tmp%30#1",
        "tmp%31#1"
      ]
    },
    "1625": {
      "op": "&&",
      "defined_out": [
        "result.2#0",
        "result.3#0",
        "result_native.2#0",
        "result_native.3#0",
        "tmp%32#0"
      ],
      "stack_out": [
        "result.2#0",
        "result.3#0",
        "result_native.2#0",
        "result_native.3#0",
        "tmp%32#0"
      ]
    },
    "1626": {
      "op": "uncover 2",
      "stack_out": [
        "result.2#0",
        "result.3#0",
        "result_native.3#0",
        "tmp%32#0",
        "result_native.2#0"
      ]
    },
    "1628": {
      "op": "uncover 4",
      "stack_out": [
        "result.3#0",
        "result_native.3#0",
        "tmp%32#0",
        "result_native.2#0",
        "result.2#0"
      ]
    },
    "1630": {
      "op": "==",
      "defined_out": [
        "result.3#0",
        "result_native.3#0",
        "tmp%32#0",
        "tmp%33#1"
      ],
      "stack_out": [
        "result.3#0",
        "result_native.3#0",
        "tmp%32#0",
        "tmp%33#1"
      ]
    },
    "1631": {
      "op": "&&",
      "defined_out": [
        "result.3#0",
        "result_native.3#0",
        "tmp%34#1"
      ],
      "stack_out": [
        "result.3#0",
        "result_native.3#0",
        "tmp%34#1"
      ]
    },
    "1632": {
      "op": "swap",
      "stack_out": [
        "result.3#0",
        "tmp%34#1",
        "result_native.3#0"
      ]
    },
    "1633": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%34#1",
        "result_native.3#0",
        "result.3#0"
      ]
    },
    "1635": {
      "op": "b==",
      "defined_out": [
        "tmp%34#1",
        "tmp%35#1"
      ],
      "stack_out": [
        "tmp%34#1",
        "tmp%35#1"
      ]
    },
    "1636": {
      "op": "&&",
      "defined_out": [
        "tmp%36#1"
      ],
      "stack_out": [
        "tmp%36#1"
      ]
    },
    "1637": {
      "op": "assert",
      "stack_out": []
    },
    "1638": {
      "op": "intc_2 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1639": {
      "op": "return",
      "stack_out": []
    },
    "1640": {
      "block": "main_test_native_tuple_route@15",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%81#0"
      ],
      "stack_out": [
        "tmp%81#0"
      ]
    },
    "1642": {
      "op": "!",
      "defined_out": [
        "tmp%82#0"
      ],
      "stack_out": [
        "tmp%82#0"
      ]
    },
    "1643": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "1644": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%83#0"
      ],
      "stack_out": [
        "tmp%83#0"
      ]
    },
    "1646": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "1647": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[1]%13#0"
      ],
      "stack_out": [
        "reinterpret_bytes[1]%13#0"
      ]
    },
    "1650": {
      "op": "btoi",
      "defined_out": [
        "tmp%85#0"
      ],
      "stack_out": [
        "tmp%85#0"
      ]
    },
    "1651": {
      "op": "txnas Applications",
      "defined_out": [
        "app#0"
      ],
      "stack_out": [
        "app#0"
      ]
    },
    "1653": {
      "op": "itxn_begin"
    },
    "1654": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "app#0 (copy)"
      ],
      "stack_out": [
        "app#0",
        "app#0 (copy)"
      ]
    },
    "1655": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "app#0"
      ]
    },
    "1657": {
      "op": "bytec 4 // method \"echo_native_tuple(string,byte[],uint64,uint512)(string,byte[],uint64,uint512)\"",
      "defined_out": [
        "Method(echo_native_tuple(string,byte[],uint64,uint512)(string,byte[],uint64,uint512))",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "Method(echo_native_tuple(string,byte[],uint64,uint512)(string,byte[],uint64,uint512))"
      ]
    },
    "1659": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0"
      ]
    },
    "1661": {
      "op": "bytec 5 // 0x00027331",
      "defined_out": [
        "0x00027331",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "0x00027331"
      ]
    },
    "1663": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0"
      ]
    },
    "1665": {
      "op": "bytec 6 // 0x00026231",
      "defined_out": [
        "0x00026231",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "0x00026231"
      ]
    },
    "1667": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0"
      ]
    },
    "1669": {
      "op": "bytec_2 // 0x0000000000000001",
      "defined_out": [
        "0x0000000000000001",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "0x0000000000000001"
      ]
    },
    "1670": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0"
      ]
    },
    "1672": {
      "op": "bytec_1 // 0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002",
      "defined_out": [
        "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002"
      ]
    },
    "1673": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0"
      ]
    },
    "1675": {
      "op": "intc_1 // appl",
      "defined_out": [
        "app#0",
        "appl"
      ],
      "stack_out": [
        "app#0",
        "appl"
      ]
    },
    "1676": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "app#0"
      ]
    },
    "1678": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "0"
      ]
    },
    "1679": {
      "op": "itxn_field Fee",
      "stack_out": [
        "app#0"
      ]
    },
    "1681": {
      "op": "itxn_submit"
    },
    "1682": {
      "op": "itxn LastLog",
      "defined_out": [
        "app#0",
        "awst_tmp%0#0"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0"
      ]
    },
    "1684": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ]
    },
    "1685": {
      "op": "extract 4 0",
      "defined_out": [
        "app#0",
        "awst_tmp%0#0",
        "result1#0"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "result1#0"
      ]
    },
    "1688": {
      "op": "dig 1",
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "result1#0",
        "awst_tmp%0#0 (copy)"
      ]
    },
    "1690": {
      "op": "extract 0 4",
      "defined_out": [
        "app#0",
        "awst_tmp%0#0",
        "result1#0",
        "tmp%1#1"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "result1#0",
        "tmp%1#1"
      ]
    },
    "1693": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "app#0",
        "awst_tmp%0#0",
        "result1#0",
        "tmp%1#1"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "result1#0",
        "tmp%1#1",
        "0x151f7c75"
      ]
    },
    "1694": {
      "op": "==",
      "defined_out": [
        "app#0",
        "awst_tmp%0#0",
        "result1#0",
        "tmp%2#1"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "result1#0",
        "tmp%2#1"
      ]
    },
    "1695": {
      "error": "ARC4 prefix is valid",
      "op": "assert // ARC4 prefix is valid",
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "result1#0"
      ]
    },
    "1696": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "awst_tmp%0#0",
        "result1#0",
        "result1#0 (copy)"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "result1#0",
        "result1#0 (copy)"
      ]
    },
    "1697": {
      "op": "intc_0 // 0",
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "result1#0",
        "result1#0 (copy)",
        "0"
      ]
    },
    "1698": {
      "op": "extract_uint16",
      "defined_out": [
        "app#0",
        "awst_tmp%0#0",
        "item_start_offset%0#0",
        "result1#0"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "result1#0",
        "item_start_offset%0#0"
      ]
    },
    "1699": {
      "op": "dig 1",
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "result1#0",
        "item_start_offset%0#0",
        "result1#0 (copy)"
      ]
    },
    "1701": {
      "op": "intc_3 // 2",
      "defined_out": [
        "2",
        "app#0",
        "awst_tmp%0#0",
        "item_start_offset%0#0",
        "result1#0",
        "result1#0 (copy)"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "result1#0",
        "item_start_offset%0#0",
        "result1#0 (copy)",
        "2"
      ]
    },
    "1702": {
      "op": "extract_uint16",
      "defined_out": [
        "app#0",
        "awst_tmp%0#0",
        "item_end_offset%0#0",
        "item_start_offset%0#0",
        "result1#0"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "result1#0",
        "item_start_offset%0#0",
        "item_end_offset%0#0"
      ]
    },
    "1703": {
      "op": "dig 2",
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "result1#0",
        "item_start_offset%0#0",
        "item_end_offset%0#0",
        "result1#0 (copy)"
      ]
    },
    "1705": {
      "op": "uncover 2",
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "result1#0",
        "item_end_offset%0#0",
        "result1#0 (copy)",
        "item_start_offset%0#0"
      ]
    },
    "1707": {
      "op": "dig 2",
      "defined_out": [
        "app#0",
        "awst_tmp%0#0",
        "item_end_offset%0#0",
        "item_end_offset%0#0 (copy)",
        "item_start_offset%0#0",
        "result1#0",
        "result1#0 (copy)"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "result1#0",
        "item_end_offset%0#0",
        "result1#0 (copy)",
        "item_start_offset%0#0",
        "item_end_offset%0#0 (copy)"
      ]
    },
    "1709": {
      "op": "substring3",
      "defined_out": [
        "app#0",
        "awst_tmp%0#0",
        "item_end_offset%0#0",
        "result1#0",
        "s#0"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "result1#0",
        "item_end_offset%0#0",
        "s#0"
      ]
    },
    "1710": {
      "op": "dig 2",
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "result1#0",
        "item_end_offset%0#0",
        "s#0",
        "result1#0 (copy)"
      ]
    },
    "1712": {
      "op": "len",
      "defined_out": [
        "app#0",
        "awst_tmp%0#0",
        "item_end_offset%0#0",
        "item_end_offset%1#0",
        "result1#0",
        "s#0"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "result1#0",
        "item_end_offset%0#0",
        "s#0",
        "item_end_offset%1#0"
      ]
    },
    "1713": {
      "op": "dig 3",
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "result1#0",
        "item_end_offset%0#0",
        "s#0",
        "item_end_offset%1#0",
        "result1#0 (copy)"
      ]
    },
    "1715": {
      "op": "uncover 3",
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "result1#0",
        "s#0",
        "item_end_offset%1#0",
        "result1#0 (copy)",
        "item_end_offset%0#0"
      ]
    },
    "1717": {
      "op": "uncover 2",
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "result1#0",
        "s#0",
        "result1#0 (copy)",
        "item_end_offset%0#0",
        "item_end_offset%1#0"
      ]
    },
    "1719": {
      "op": "substring3",
      "defined_out": [
        "app#0",
        "awst_tmp%0#0",
        "b#0",
        "result1#0",
        "s#0"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "result1#0",
        "s#0",
        "b#0"
      ]
    },
    "1720": {
      "op": "dig 3",
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "result1#0",
        "s#0",
        "b#0",
        "awst_tmp%0#0 (copy)"
      ]
    },
    "1722": {
      "op": "extract 16 64",
      "defined_out": [
        "app#0",
        "awst_tmp%0#0",
        "b#0",
        "bu#0",
        "result1#0",
        "s#0"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "result1#0",
        "s#0",
        "b#0",
        "bu#0"
      ]
    },
    "1725": {
      "op": "uncover 2",
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "result1#0",
        "b#0",
        "bu#0",
        "s#0"
      ]
    },
    "1727": {
      "op": "extract 2 0",
      "defined_out": [
        "app#0",
        "awst_tmp%0#0",
        "b#0",
        "bu#0",
        "result1#0",
        "tmp%3#3"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "result1#0",
        "b#0",
        "bu#0",
        "tmp%3#3"
      ]
    },
    "1730": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "awst_tmp%0#0",
        "b#0",
        "bu#0",
        "result1#0",
        "tmp%3#3",
        "tmp%3#3 (copy)"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "result1#0",
        "b#0",
        "bu#0",
        "tmp%3#3",
        "tmp%3#3 (copy)"
      ]
    },
    "1731": {
      "op": "bytec 8 // \"echo: s1\"",
      "defined_out": [
        "\"echo: s1\"",
        "app#0",
        "awst_tmp%0#0",
        "b#0",
        "bu#0",
        "result1#0",
        "tmp%3#3",
        "tmp%3#3 (copy)"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "result1#0",
        "b#0",
        "bu#0",
        "tmp%3#3",
        "tmp%3#3 (copy)",
        "\"echo: s1\""
      ]
    },
    "1733": {
      "op": "==",
      "defined_out": [
        "app#0",
        "awst_tmp%0#0",
        "b#0",
        "bu#0",
        "result1#0",
        "tmp%3#3",
        "tmp%4#0"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "result1#0",
        "b#0",
        "bu#0",
        "tmp%3#3",
        "tmp%4#0"
      ]
    },
    "1734": {
      "op": "assert",
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "result1#0",
        "b#0",
        "bu#0",
        "tmp%3#3"
      ]
    },
    "1735": {
      "op": "uncover 2",
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "result1#0",
        "bu#0",
        "tmp%3#3",
        "b#0"
      ]
    },
    "1737": {
      "op": "extract 2 0",
      "defined_out": [
        "app#0",
        "awst_tmp%0#0",
        "bu#0",
        "result1#0",
        "tmp%3#3",
        "tmp%5#1"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "result1#0",
        "bu#0",
        "tmp%3#3",
        "tmp%5#1"
      ]
    },
    "1740": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "awst_tmp%0#0",
        "bu#0",
        "result1#0",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%5#1 (copy)"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "result1#0",
        "bu#0",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%5#1 (copy)"
      ]
    },
    "1741": {
      "op": "bytec 25 // 0x6563686f3a206231",
      "defined_out": [
        "0x6563686f3a206231",
        "app#0",
        "awst_tmp%0#0",
        "bu#0",
        "result1#0",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%5#1 (copy)"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "result1#0",
        "bu#0",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%5#1 (copy)",
        "0x6563686f3a206231"
      ]
    },
    "1743": {
      "op": "==",
      "defined_out": [
        "app#0",
        "awst_tmp%0#0",
        "bu#0",
        "result1#0",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%6#1"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "result1#0",
        "bu#0",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%6#1"
      ]
    },
    "1744": {
      "op": "assert",
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "result1#0",
        "bu#0",
        "tmp%3#3",
        "tmp%5#1"
      ]
    },
    "1745": {
      "op": "uncover 4",
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%3#3",
        "tmp%5#1",
        "awst_tmp%0#0"
      ]
    },
    "1747": {
      "op": "pushint 8 // 8",
      "defined_out": [
        "8",
        "app#0",
        "awst_tmp%0#0",
        "bu#0",
        "result1#0",
        "tmp%3#3",
        "tmp%5#1"
      ],
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%3#3",
        "tmp%5#1",
        "awst_tmp%0#0",
        "8"
      ]
    },
    "1749": {
      "op": "extract_uint64",
      "defined_out": [
        "app#0",
        "bu#0",
        "result1#0",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%7#4"
      ],
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%7#4"
      ]
    },
    "1750": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "bu#0",
        "result1#0",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%7#4",
        "tmp%7#4 (copy)"
      ],
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%7#4",
        "tmp%7#4 (copy)"
      ]
    },
    "1751": {
      "op": "intc_3 // 2",
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%7#4",
        "tmp%7#4 (copy)",
        "2"
      ]
    },
    "1752": {
      "op": "==",
      "defined_out": [
        "app#0",
        "bu#0",
        "result1#0",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%7#4",
        "tmp%8#1"
      ],
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%7#4",
        "tmp%8#1"
      ]
    },
    "1753": {
      "op": "assert",
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%7#4"
      ]
    },
    "1754": {
      "op": "dig 3",
      "defined_out": [
        "app#0",
        "bu#0",
        "bu#0 (copy)",
        "result1#0",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%7#4"
      ],
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%7#4",
        "bu#0 (copy)"
      ]
    },
    "1756": {
      "op": "bytec 13 // 0x03",
      "defined_out": [
        "0x03",
        "app#0",
        "bu#0",
        "bu#0 (copy)",
        "result1#0",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%7#4"
      ],
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%7#4",
        "bu#0 (copy)",
        "0x03"
      ]
    },
    "1758": {
      "op": "b==",
      "defined_out": [
        "app#0",
        "bu#0",
        "result1#0",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%7#4",
        "tmp%9#3"
      ],
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%7#4",
        "tmp%9#3"
      ]
    },
    "1759": {
      "op": "assert",
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%7#4"
      ]
    },
    "1760": {
      "op": "itxn_begin"
    },
    "1761": {
      "op": "intc_2 // 1",
      "defined_out": [
        "1",
        "app#0",
        "bu#0",
        "result1#0",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%7#4"
      ],
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%7#4",
        "1"
      ]
    },
    "1762": {
      "op": "itob",
      "defined_out": [
        "app#0",
        "bu#0",
        "result1#0",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%7#4",
        "val_as_bytes%0#1"
      ],
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%7#4",
        "val_as_bytes%0#1"
      ]
    },
    "1763": {
      "op": "dig 6",
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%7#4",
        "val_as_bytes%0#1",
        "app#0 (copy)"
      ]
    },
    "1765": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%7#4",
        "val_as_bytes%0#1"
      ]
    },
    "1767": {
      "op": "bytec 4 // method \"echo_native_tuple(string,byte[],uint64,uint512)(string,byte[],uint64,uint512)\"",
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%7#4",
        "val_as_bytes%0#1",
        "Method(echo_native_tuple(string,byte[],uint64,uint512)(string,byte[],uint64,uint512))"
      ]
    },
    "1769": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%7#4",
        "val_as_bytes%0#1"
      ]
    },
    "1771": {
      "op": "bytec 5 // 0x00027331",
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%7#4",
        "val_as_bytes%0#1",
        "0x00027331"
      ]
    },
    "1773": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%7#4",
        "val_as_bytes%0#1"
      ]
    },
    "1775": {
      "op": "bytec 6 // 0x00026231",
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%7#4",
        "val_as_bytes%0#1",
        "0x00026231"
      ]
    },
    "1777": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%7#4",
        "val_as_bytes%0#1"
      ]
    },
    "1779": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%7#4"
      ]
    },
    "1781": {
      "op": "bytec_1 // 0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002",
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%7#4",
        "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002"
      ]
    },
    "1782": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%7#4"
      ]
    },
    "1784": {
      "op": "intc_1 // appl",
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%7#4",
        "appl"
      ]
    },
    "1785": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%7#4"
      ]
    },
    "1787": {
      "op": "intc_0 // 0",
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%7#4",
        "0"
      ]
    },
    "1788": {
      "op": "itxn_field Fee",
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%7#4"
      ]
    },
    "1790": {
      "op": "itxn_submit"
    },
    "1791": {
      "op": "itxn LastLog",
      "defined_out": [
        "app#0",
        "awst_tmp%1#0",
        "bu#0",
        "result1#0",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%7#4"
      ],
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%7#4",
        "awst_tmp%1#0"
      ]
    },
    "1793": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "awst_tmp%1#0",
        "awst_tmp%1#0 (copy)",
        "bu#0",
        "result1#0",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%7#4"
      ],
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%7#4",
        "awst_tmp%1#0",
        "awst_tmp%1#0 (copy)"
      ]
    },
    "1794": {
      "op": "extract 4 0",
      "defined_out": [
        "app#0",
        "awst_tmp%1#0",
        "bu#0",
        "result1#0",
        "result2#0",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%7#4"
      ],
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%7#4",
        "awst_tmp%1#0",
        "result2#0"
      ]
    },
    "1797": {
      "op": "swap",
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%7#4",
        "result2#0",
        "awst_tmp%1#0"
      ]
    },
    "1798": {
      "op": "extract 0 4",
      "defined_out": [
        "app#0",
        "bu#0",
        "result1#0",
        "result2#0",
        "tmp%11#4",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%7#4"
      ],
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%7#4",
        "result2#0",
        "tmp%11#4"
      ]
    },
    "1801": {
      "op": "bytec_0 // 0x151f7c75",
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%7#4",
        "result2#0",
        "tmp%11#4",
        "0x151f7c75"
      ]
    },
    "1802": {
      "op": "==",
      "defined_out": [
        "app#0",
        "bu#0",
        "result1#0",
        "result2#0",
        "tmp%12#1",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%7#4"
      ],
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%7#4",
        "result2#0",
        "tmp%12#1"
      ]
    },
    "1803": {
      "error": "ARC4 prefix is valid",
      "op": "assert // ARC4 prefix is valid",
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%7#4",
        "result2#0"
      ]
    },
    "1804": {
      "op": "dig 5",
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%7#4",
        "result2#0",
        "result1#0 (copy)"
      ]
    },
    "1806": {
      "op": "==",
      "defined_out": [
        "app#0",
        "bu#0",
        "result1#0",
        "tmp%13#2",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%7#4"
      ],
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%7#4",
        "tmp%13#2"
      ]
    },
    "1807": {
      "op": "assert",
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%7#4"
      ]
    },
    "1808": {
      "op": "itxn_begin"
    },
    "1809": {
      "op": "dig 5",
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%7#4",
        "app#0 (copy)"
      ]
    },
    "1811": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%7#4"
      ]
    },
    "1813": {
      "op": "bytec 4 // method \"echo_native_tuple(string,byte[],uint64,uint512)(string,byte[],uint64,uint512)\"",
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%7#4",
        "Method(echo_native_tuple(string,byte[],uint64,uint512)(string,byte[],uint64,uint512))"
      ]
    },
    "1815": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%7#4"
      ]
    },
    "1817": {
      "op": "bytec 5 // 0x00027331",
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%7#4",
        "0x00027331"
      ]
    },
    "1819": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%7#4"
      ]
    },
    "1821": {
      "op": "bytec 6 // 0x00026231",
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%7#4",
        "0x00026231"
      ]
    },
    "1823": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%7#4"
      ]
    },
    "1825": {
      "op": "bytec_2 // 0x0000000000000001",
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%7#4",
        "0x0000000000000001"
      ]
    },
    "1826": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%7#4"
      ]
    },
    "1828": {
      "op": "bytec_1 // 0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002",
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%7#4",
        "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002"
      ]
    },
    "1829": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%7#4"
      ]
    },
    "1831": {
      "op": "intc_1 // appl",
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%7#4",
        "appl"
      ]
    },
    "1832": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%7#4"
      ]
    },
    "1834": {
      "op": "intc_0 // 0",
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%7#4",
        "0"
      ]
    },
    "1835": {
      "op": "itxn_field Fee",
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%7#4"
      ]
    },
    "1837": {
      "op": "itxn_submit"
    },
    "1838": {
      "op": "itxn LastLog",
      "defined_out": [
        "app#0",
        "awst_tmp%2#0",
        "bu#0",
        "result1#0",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%7#4"
      ],
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%7#4",
        "awst_tmp%2#0"
      ]
    },
    "1840": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "awst_tmp%2#0",
        "awst_tmp%2#0 (copy)",
        "bu#0",
        "result1#0",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%7#4"
      ],
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%7#4",
        "awst_tmp%2#0",
        "awst_tmp%2#0 (copy)"
      ]
    },
    "1841": {
      "op": "extract 4 0",
      "defined_out": [
        "app#0",
        "awst_tmp%2#0",
        "bu#0",
        "result1#0",
        "result3#0",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%7#4"
      ],
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%7#4",
        "awst_tmp%2#0",
        "result3#0"
      ]
    },
    "1844": {
      "op": "swap",
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%7#4",
        "result3#0",
        "awst_tmp%2#0"
      ]
    },
    "1845": {
      "op": "extract 0 4",
      "defined_out": [
        "app#0",
        "bu#0",
        "result1#0",
        "result3#0",
        "tmp%15#4",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%7#4"
      ],
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%7#4",
        "result3#0",
        "tmp%15#4"
      ]
    },
    "1848": {
      "op": "bytec_0 // 0x151f7c75",
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%7#4",
        "result3#0",
        "tmp%15#4",
        "0x151f7c75"
      ]
    },
    "1849": {
      "op": "==",
      "defined_out": [
        "app#0",
        "bu#0",
        "result1#0",
        "result3#0",
        "tmp%16#1",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%7#4"
      ],
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%7#4",
        "result3#0",
        "tmp%16#1"
      ]
    },
    "1850": {
      "error": "ARC4 prefix is valid",
      "op": "assert // ARC4 prefix is valid",
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%7#4",
        "result3#0"
      ]
    },
    "1851": {
      "op": "uncover 5",
      "stack_out": [
        "app#0",
        "bu#0",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%7#4",
        "result3#0",
        "result1#0"
      ]
    },
    "1853": {
      "op": "==",
      "defined_out": [
        "app#0",
        "bu#0",
        "tmp%17#3",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%7#4"
      ],
      "stack_out": [
        "app#0",
        "bu#0",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%7#4",
        "tmp%17#3"
      ]
    },
    "1854": {
      "op": "assert",
      "stack_out": [
        "app#0",
        "bu#0",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%7#4"
      ]
    },
    "1855": {
      "op": "itxn_begin"
    },
    "1856": {
      "op": "uncover 4",
      "stack_out": [
        "bu#0",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%7#4",
        "app#0"
      ]
    },
    "1858": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "bu#0",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%7#4"
      ]
    },
    "1860": {
      "op": "bytec 4 // method \"echo_native_tuple(string,byte[],uint64,uint512)(string,byte[],uint64,uint512)\"",
      "stack_out": [
        "bu#0",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%7#4",
        "Method(echo_native_tuple(string,byte[],uint64,uint512)(string,byte[],uint64,uint512))"
      ]
    },
    "1862": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "bu#0",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%7#4"
      ]
    },
    "1864": {
      "op": "bytec 5 // 0x00027331",
      "stack_out": [
        "bu#0",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%7#4",
        "0x00027331"
      ]
    },
    "1866": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "bu#0",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%7#4"
      ]
    },
    "1868": {
      "op": "bytec 6 // 0x00026231",
      "stack_out": [
        "bu#0",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%7#4",
        "0x00026231"
      ]
    },
    "1870": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "bu#0",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%7#4"
      ]
    },
    "1872": {
      "op": "bytec_2 // 0x0000000000000001",
      "stack_out": [
        "bu#0",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%7#4",
        "0x0000000000000001"
      ]
    },
    "1873": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "bu#0",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%7#4"
      ]
    },
    "1875": {
      "op": "bytec_1 // 0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002",
      "stack_out": [
        "bu#0",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%7#4",
        "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002"
      ]
    },
    "1876": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "bu#0",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%7#4"
      ]
    },
    "1878": {
      "op": "intc_1 // appl",
      "stack_out": [
        "bu#0",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%7#4",
        "appl"
      ]
    },
    "1879": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "bu#0",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%7#4"
      ]
    },
    "1881": {
      "op": "intc_0 // 0",
      "stack_out": [
        "bu#0",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%7#4",
        "0"
      ]
    },
    "1882": {
      "op": "itxn_field Fee",
      "stack_out": [
        "bu#0",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%7#4"
      ]
    },
    "1884": {
      "op": "itxn_submit"
    },
    "1885": {
      "op": "itxn LastLog",
      "defined_out": [
        "awst_tmp%3#0",
        "bu#0",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%7#4"
      ],
      "stack_out": [
        "bu#0",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%7#4",
        "awst_tmp%3#0"
      ]
    },
    "1887": {
      "op": "dup",
      "defined_out": [
        "awst_tmp%3#0",
        "awst_tmp%3#0 (copy)",
        "bu#0",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%7#4"
      ],
      "stack_out": [
        "bu#0",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%7#4",
        "awst_tmp%3#0",
        "awst_tmp%3#0 (copy)"
      ]
    },
    "1888": {
      "op": "extract 4 0",
      "defined_out": [
        "awst_tmp%3#0",
        "bu#0",
        "tmp%18#2",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%7#4"
      ],
      "stack_out": [
        "bu#0",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%7#4",
        "awst_tmp%3#0",
        "tmp%18#2"
      ]
    },
    "1891": {
      "op": "dig 1",
      "stack_out": [
        "bu#0",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%7#4",
        "awst_tmp%3#0",
        "tmp%18#2",
        "awst_tmp%3#0 (copy)"
      ]
    },
    "1893": {
      "op": "extract 0 4",
      "defined_out": [
        "awst_tmp%3#0",
        "bu#0",
        "tmp%18#2",
        "tmp%19#3",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%7#4"
      ],
      "stack_out": [
        "bu#0",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%7#4",
        "awst_tmp%3#0",
        "tmp%18#2",
        "tmp%19#3"
      ]
    },
    "1896": {
      "op": "bytec_0 // 0x151f7c75",
      "stack_out": [
        "bu#0",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%7#4",
        "awst_tmp%3#0",
        "tmp%18#2",
        "tmp%19#3",
        "0x151f7c75"
      ]
    },
    "1897": {
      "op": "==",
      "defined_out": [
        "awst_tmp%3#0",
        "bu#0",
        "tmp%18#2",
        "tmp%20#0",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%7#4"
      ],
      "stack_out": [
        "bu#0",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%7#4",
        "awst_tmp%3#0",
        "tmp%18#2",
        "tmp%20#0"
      ]
    },
    "1898": {
      "error": "ARC4 prefix is valid",
      "op": "assert // ARC4 prefix is valid",
      "stack_out": [
        "bu#0",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%7#4",
        "awst_tmp%3#0",
        "tmp%18#2"
      ]
    },
    "1899": {
      "op": "dup",
      "defined_out": [
        "awst_tmp%3#0",
        "bu#0",
        "tmp%18#2",
        "tmp%18#2 (copy)",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%7#4"
      ],
      "stack_out": [
        "bu#0",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%7#4",
        "awst_tmp%3#0",
        "tmp%18#2",
        "tmp%18#2 (copy)"
      ]
    },
    "1900": {
      "op": "intc_0 // 0",
      "stack_out": [
        "bu#0",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%7#4",
        "awst_tmp%3#0",
        "tmp%18#2",
        "tmp%18#2 (copy)",
        "0"
      ]
    },
    "1901": {
      "op": "extract_uint16",
      "defined_out": [
        "awst_tmp%3#0",
        "bu#0",
        "item_start_offset%2#0",
        "tmp%18#2",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%7#4"
      ],
      "stack_out": [
        "bu#0",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%7#4",
        "awst_tmp%3#0",
        "tmp%18#2",
        "item_start_offset%2#0"
      ]
    },
    "1902": {
      "op": "dig 1",
      "stack_out": [
        "bu#0",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%7#4",
        "awst_tmp%3#0",
        "tmp%18#2",
        "item_start_offset%2#0",
        "tmp%18#2 (copy)"
      ]
    },
    "1904": {
      "op": "intc_3 // 2",
      "stack_out": [
        "bu#0",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%7#4",
        "awst_tmp%3#0",
        "tmp%18#2",
        "item_start_offset%2#0",
        "tmp%18#2 (copy)",
        "2"
      ]
    },
    "1905": {
      "op": "extract_uint16",
      "defined_out": [
        "awst_tmp%3#0",
        "bu#0",
        "item_end_offset%2#0",
        "item_start_offset%2#0",
        "tmp%18#2",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%7#4"
      ],
      "stack_out": [
        "bu#0",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%7#4",
        "awst_tmp%3#0",
        "tmp%18#2",
        "item_start_offset%2#0",
        "item_end_offset%2#0"
      ]
    },
    "1906": {
      "op": "dig 2",
      "stack_out": [
        "bu#0",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%7#4",
        "awst_tmp%3#0",
        "tmp%18#2",
        "item_start_offset%2#0",
        "item_end_offset%2#0",
        "tmp%18#2 (copy)"
      ]
    },
    "1908": {
      "op": "uncover 2",
      "stack_out": [
        "bu#0",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%7#4",
        "awst_tmp%3#0",
        "tmp%18#2",
        "item_end_offset%2#0",
        "tmp%18#2 (copy)",
        "item_start_offset%2#0"
      ]
    },
    "1910": {
      "op": "dig 2",
      "defined_out": [
        "awst_tmp%3#0",
        "bu#0",
        "item_end_offset%2#0",
        "item_end_offset%2#0 (copy)",
        "item_start_offset%2#0",
        "tmp%18#2",
        "tmp%18#2 (copy)",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%7#4"
      ],
      "stack_out": [
        "bu#0",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%7#4",
        "awst_tmp%3#0",
        "tmp%18#2",
        "item_end_offset%2#0",
        "tmp%18#2 (copy)",
        "item_start_offset%2#0",
        "item_end_offset%2#0 (copy)"
      ]
    },
    "1912": {
      "op": "substring3",
      "defined_out": [
        "awst_tmp%3#0",
        "bu#0",
        "item0%1#0",
        "item_end_offset%2#0",
        "tmp%18#2",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%7#4"
      ],
      "stack_out": [
        "bu#0",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%7#4",
        "awst_tmp%3#0",
        "tmp%18#2",
        "item_end_offset%2#0",
        "item0%1#0"
      ]
    },
    "1913": {
      "op": "extract 2 0",
      "defined_out": [
        "awst_tmp%3#0",
        "bu#0",
        "item_end_offset%2#0",
        "result_native.0#0",
        "tmp%18#2",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%7#4"
      ],
      "stack_out": [
        "bu#0",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%7#4",
        "awst_tmp%3#0",
        "tmp%18#2",
        "item_end_offset%2#0",
        "result_native.0#0"
      ]
    },
    "1916": {
      "op": "dig 2",
      "stack_out": [
        "bu#0",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%7#4",
        "awst_tmp%3#0",
        "tmp%18#2",
        "item_end_offset%2#0",
        "result_native.0#0",
        "tmp%18#2 (copy)"
      ]
    },
    "1918": {
      "op": "len",
      "defined_out": [
        "awst_tmp%3#0",
        "bu#0",
        "item_end_offset%2#0",
        "item_end_offset%3#0",
        "result_native.0#0",
        "tmp%18#2",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%7#4"
      ],
      "stack_out": [
        "bu#0",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%7#4",
        "awst_tmp%3#0",
        "tmp%18#2",
        "item_end_offset%2#0",
        "result_native.0#0",
        "item_end_offset%3#0"
      ]
    },
    "1919": {
      "op": "swap"
    },
    "1920": {
      "op": "cover 3",
      "stack_out": [
        "bu#0",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%7#4",
        "awst_tmp%3#0",
        "result_native.0#0",
        "tmp%18#2",
        "item_end_offset%2#0",
        "item_end_offset%3#0"
      ]
    },
    "1922": {
      "op": "substring3",
      "defined_out": [
        "awst_tmp%3#0",
        "bu#0",
        "item1%1#0",
        "result_native.0#0",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%7#4"
      ],
      "stack_out": [
        "bu#0",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%7#4",
        "awst_tmp%3#0",
        "result_native.0#0",
        "item1%1#0"
      ]
    },
    "1923": {
      "op": "extract 2 0",
      "defined_out": [
        "awst_tmp%3#0",
        "bu#0",
        "result_native.0#0",
        "result_native.1#0",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%7#4"
      ],
      "stack_out": [
        "bu#0",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%7#4",
        "awst_tmp%3#0",
        "result_native.0#0",
        "result_native.1#0"
      ]
    },
    "1926": {
      "op": "dig 2",
      "stack_out": [
        "bu#0",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%7#4",
        "awst_tmp%3#0",
        "result_native.0#0",
        "result_native.1#0",
        "awst_tmp%3#0 (copy)"
      ]
    },
    "1928": {
      "op": "pushint 8 // 8",
      "stack_out": [
        "bu#0",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%7#4",
        "awst_tmp%3#0",
        "result_native.0#0",
        "result_native.1#0",
        "awst_tmp%3#0 (copy)",
        "8"
      ]
    },
    "1930": {
      "op": "extract_uint64",
      "defined_out": [
        "awst_tmp%3#0",
        "bu#0",
        "result_native.0#0",
        "result_native.1#0",
        "result_native.2#0",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%7#4"
      ],
      "stack_out": [
        "bu#0",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%7#4",
        "awst_tmp%3#0",
        "result_native.0#0",
        "result_native.1#0",
        "result_native.2#0"
      ]
    },
    "1931": {
      "op": "uncover 3",
      "stack_out": [
        "bu#0",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%7#4",
        "result_native.0#0",
        "result_native.1#0",
        "result_native.2#0",
        "awst_tmp%3#0"
      ]
    },
    "1933": {
      "op": "extract 16 64",
      "defined_out": [
        "bu#0",
        "result_native.0#0",
        "result_native.1#0",
        "result_native.2#0",
        "result_native.3#0",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%7#4"
      ],
      "stack_out": [
        "bu#0",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%7#4",
        "result_native.0#0",
        "result_native.1#0",
        "result_native.2#0",
        "result_native.3#0"
      ]
    },
    "1936": {
      "op": "uncover 6",
      "stack_out": [
        "bu#0",
        "tmp%5#1",
        "tmp%7#4",
        "result_native.0#0",
        "result_native.1#0",
        "result_native.2#0",
        "result_native.3#0",
        "tmp%3#3"
      ]
    },
    "1938": {
      "op": "uncover 4",
      "stack_out": [
        "bu#0",
        "tmp%5#1",
        "tmp%7#4",
        "result_native.1#0",
        "result_native.2#0",
        "result_native.3#0",
        "tmp%3#3",
        "result_native.0#0"
      ]
    },
    "1940": {
      "op": "==",
      "defined_out": [
        "bu#0",
        "result_native.1#0",
        "result_native.2#0",
        "result_native.3#0",
        "tmp%22#1",
        "tmp%5#1",
        "tmp%7#4"
      ],
      "stack_out": [
        "bu#0",
        "tmp%5#1",
        "tmp%7#4",
        "result_native.1#0",
        "result_native.2#0",
        "result_native.3#0",
        "tmp%22#1"
      ]
    },
    "1941": {
      "op": "assert",
      "stack_out": [
        "bu#0",
        "tmp%5#1",
        "tmp%7#4",
        "result_native.1#0",
        "result_native.2#0",
        "result_native.3#0"
      ]
    },
    "1942": {
      "op": "uncover 4",
      "stack_out": [
        "bu#0",
        "tmp%7#4",
        "result_native.1#0",
        "result_native.2#0",
        "result_native.3#0",
        "tmp%5#1"
      ]
    },
    "1944": {
      "op": "uncover 3",
      "stack_out": [
        "bu#0",
        "tmp%7#4",
        "result_native.2#0",
        "result_native.3#0",
        "tmp%5#1",
        "result_native.1#0"
      ]
    },
    "1946": {
      "op": "==",
      "defined_out": [
        "bu#0",
        "result_native.2#0",
        "result_native.3#0",
        "tmp%24#1",
        "tmp%7#4"
      ],
      "stack_out": [
        "bu#0",
        "tmp%7#4",
        "result_native.2#0",
        "result_native.3#0",
        "tmp%24#1"
      ]
    },
    "1947": {
      "op": "assert",
      "stack_out": [
        "bu#0",
        "tmp%7#4",
        "result_native.2#0",
        "result_native.3#0"
      ]
    },
    "1948": {
      "op": "cover 2",
      "stack_out": [
        "bu#0",
        "result_native.3#0",
        "tmp%7#4",
        "result_native.2#0"
      ]
    },
    "1950": {
      "op": "==",
      "defined_out": [
        "bu#0",
        "result_native.3#0",
        "tmp%26#0"
      ],
      "stack_out": [
        "bu#0",
        "result_native.3#0",
        "tmp%26#0"
      ]
    },
    "1951": {
      "op": "assert",
      "stack_out": [
        "bu#0",
        "result_native.3#0"
      ]
    },
    "1952": {
      "op": "b==",
      "defined_out": [
        "tmp%27#2"
      ],
      "stack_out": [
        "tmp%27#2"
      ]
    },
    "1953": {
      "op": "assert",
      "stack_out": []
    },
    "1954": {
      "op": "intc_2 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1955": {
      "op": "return",
      "stack_out": []
    },
    "1956": {
      "block": "main_test_native_biguint_route@14",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%75#0"
      ],
      "stack_out": [
        "tmp%75#0"
      ]
    },
    "1958": {
      "op": "!",
      "defined_out": [
        "tmp%76#0"
      ],
      "stack_out": [
        "tmp%76#0"
      ]
    },
    "1959": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "1960": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%77#0"
      ],
      "stack_out": [
        "tmp%77#0"
      ]
    },
    "1962": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "1963": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[1]%12#0"
      ],
      "stack_out": [
        "reinterpret_bytes[1]%12#0"
      ]
    },
    "1966": {
      "op": "btoi",
      "defined_out": [
        "tmp%79#0"
      ],
      "stack_out": [
        "tmp%79#0"
      ]
    },
    "1967": {
      "op": "txnas Applications",
      "defined_out": [
        "app#0"
      ],
      "stack_out": [
        "app#0"
      ]
    },
    "1969": {
      "op": "itxn_begin"
    },
    "1970": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "app#0 (copy)"
      ],
      "stack_out": [
        "app#0",
        "app#0 (copy)"
      ]
    },
    "1971": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "app#0"
      ]
    },
    "1973": {
      "op": "bytec 14 // method \"echo_native_biguint(uint512)uint512\"",
      "defined_out": [
        "Method(echo_native_biguint(uint512)uint512)",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "Method(echo_native_biguint(uint512)uint512)"
      ]
    },
    "1975": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0"
      ]
    },
    "1977": {
      "op": "bytec_1 // 0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002",
      "defined_out": [
        "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002"
      ]
    },
    "1978": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0"
      ]
    },
    "1980": {
      "op": "intc_1 // appl",
      "defined_out": [
        "app#0",
        "appl"
      ],
      "stack_out": [
        "app#0",
        "appl"
      ]
    },
    "1981": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "app#0"
      ]
    },
    "1983": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "0"
      ]
    },
    "1984": {
      "op": "itxn_field Fee",
      "stack_out": [
        "app#0"
      ]
    },
    "1986": {
      "op": "itxn_submit"
    },
    "1987": {
      "op": "itxn LastLog",
      "defined_out": [
        "app#0",
        "awst_tmp%0#0"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0"
      ]
    },
    "1989": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ]
    },
    "1990": {
      "op": "extract 4 0",
      "defined_out": [
        "app#0",
        "awst_tmp%0#0",
        "result1#1"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "result1#1"
      ]
    },
    "1993": {
      "op": "swap",
      "stack_out": [
        "app#0",
        "result1#1",
        "awst_tmp%0#0"
      ]
    },
    "1994": {
      "op": "extract 0 4",
      "defined_out": [
        "app#0",
        "result1#1",
        "tmp%1#1"
      ],
      "stack_out": [
        "app#0",
        "result1#1",
        "tmp%1#1"
      ]
    },
    "1997": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "app#0",
        "result1#1",
        "tmp%1#1"
      ],
      "stack_out": [
        "app#0",
        "result1#1",
        "tmp%1#1",
        "0x151f7c75"
      ]
    },
    "1998": {
      "op": "==",
      "defined_out": [
        "app#0",
        "result1#1",
        "tmp%2#1"
      ],
      "stack_out": [
        "app#0",
        "result1#1",
        "tmp%2#1"
      ]
    },
    "1999": {
      "error": "ARC4 prefix is valid",
      "op": "assert // ARC4 prefix is valid",
      "stack_out": [
        "app#0",
        "result1#1"
      ]
    },
    "2000": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "result1#1",
        "result1#1 (copy)"
      ],
      "stack_out": [
        "app#0",
        "result1#1",
        "result1#1 (copy)"
      ]
    },
    "2001": {
      "op": "bytec 13 // 0x03",
      "defined_out": [
        "0x03",
        "app#0",
        "result1#1",
        "result1#1 (copy)"
      ],
      "stack_out": [
        "app#0",
        "result1#1",
        "result1#1 (copy)",
        "0x03"
      ]
    },
    "2003": {
      "op": "b==",
      "defined_out": [
        "app#0",
        "result1#1",
        "tmp%3#1"
      ],
      "stack_out": [
        "app#0",
        "result1#1",
        "tmp%3#1"
      ]
    },
    "2004": {
      "op": "assert",
      "stack_out": [
        "app#0",
        "result1#1"
      ]
    },
    "2005": {
      "op": "itxn_begin"
    },
    "2006": {
      "op": "dig 1",
      "stack_out": [
        "app#0",
        "result1#1",
        "app#0 (copy)"
      ]
    },
    "2008": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "app#0",
        "result1#1"
      ]
    },
    "2010": {
      "op": "bytec 14 // method \"echo_native_biguint(uint512)uint512\"",
      "stack_out": [
        "app#0",
        "result1#1",
        "Method(echo_native_biguint(uint512)uint512)"
      ]
    },
    "2012": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0",
        "result1#1"
      ]
    },
    "2014": {
      "op": "bytec_1 // 0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002",
      "stack_out": [
        "app#0",
        "result1#1",
        "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002"
      ]
    },
    "2015": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0",
        "result1#1"
      ]
    },
    "2017": {
      "op": "intc_1 // appl",
      "stack_out": [
        "app#0",
        "result1#1",
        "appl"
      ]
    },
    "2018": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "app#0",
        "result1#1"
      ]
    },
    "2020": {
      "op": "intc_0 // 0",
      "stack_out": [
        "app#0",
        "result1#1",
        "0"
      ]
    },
    "2021": {
      "op": "itxn_field Fee",
      "stack_out": [
        "app#0",
        "result1#1"
      ]
    },
    "2023": {
      "op": "itxn_submit"
    },
    "2024": {
      "op": "itxn LastLog",
      "defined_out": [
        "app#0",
        "awst_tmp%1#0",
        "result1#1"
      ],
      "stack_out": [
        "app#0",
        "result1#1",
        "awst_tmp%1#0"
      ]
    },
    "2026": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "awst_tmp%1#0",
        "awst_tmp%1#0 (copy)",
        "result1#1"
      ],
      "stack_out": [
        "app#0",
        "result1#1",
        "awst_tmp%1#0",
        "awst_tmp%1#0 (copy)"
      ]
    },
    "2027": {
      "op": "extract 4 0",
      "defined_out": [
        "app#0",
        "awst_tmp%1#0",
        "result1#1",
        "result2#1"
      ],
      "stack_out": [
        "app#0",
        "result1#1",
        "awst_tmp%1#0",
        "result2#1"
      ]
    },
    "2030": {
      "op": "swap",
      "stack_out": [
        "app#0",
        "result1#1",
        "result2#1",
        "awst_tmp%1#0"
      ]
    },
    "2031": {
      "op": "extract 0 4",
      "defined_out": [
        "app#0",
        "result1#1",
        "result2#1",
        "tmp%5#1"
      ],
      "stack_out": [
        "app#0",
        "result1#1",
        "result2#1",
        "tmp%5#1"
      ]
    },
    "2034": {
      "op": "bytec_0 // 0x151f7c75",
      "stack_out": [
        "app#0",
        "result1#1",
        "result2#1",
        "tmp%5#1",
        "0x151f7c75"
      ]
    },
    "2035": {
      "op": "==",
      "defined_out": [
        "app#0",
        "result1#1",
        "result2#1",
        "tmp%6#1"
      ],
      "stack_out": [
        "app#0",
        "result1#1",
        "result2#1",
        "tmp%6#1"
      ]
    },
    "2036": {
      "error": "ARC4 prefix is valid",
      "op": "assert // ARC4 prefix is valid",
      "stack_out": [
        "app#0",
        "result1#1",
        "result2#1"
      ]
    },
    "2037": {
      "op": "dig 1",
      "stack_out": [
        "app#0",
        "result1#1",
        "result2#1",
        "result1#1 (copy)"
      ]
    },
    "2039": {
      "op": "b==",
      "defined_out": [
        "app#0",
        "result1#1",
        "tmp%7#1"
      ],
      "stack_out": [
        "app#0",
        "result1#1",
        "tmp%7#1"
      ]
    },
    "2040": {
      "op": "assert",
      "stack_out": [
        "app#0",
        "result1#1"
      ]
    },
    "2041": {
      "op": "itxn_begin"
    },
    "2042": {
      "op": "swap",
      "stack_out": [
        "result1#1",
        "app#0"
      ]
    },
    "2043": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "result1#1"
      ]
    },
    "2045": {
      "op": "bytec 14 // method \"echo_native_biguint(uint512)uint512\"",
      "stack_out": [
        "result1#1",
        "Method(echo_native_biguint(uint512)uint512)"
      ]
    },
    "2047": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "result1#1"
      ]
    },
    "2049": {
      "op": "bytec_1 // 0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002",
      "stack_out": [
        "result1#1",
        "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002"
      ]
    },
    "2050": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "result1#1"
      ]
    },
    "2052": {
      "op": "intc_1 // appl",
      "stack_out": [
        "result1#1",
        "appl"
      ]
    },
    "2053": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "result1#1"
      ]
    },
    "2055": {
      "op": "intc_0 // 0",
      "stack_out": [
        "result1#1",
        "0"
      ]
    },
    "2056": {
      "op": "itxn_field Fee",
      "stack_out": [
        "result1#1"
      ]
    },
    "2058": {
      "op": "itxn_submit"
    },
    "2059": {
      "op": "itxn LastLog",
      "defined_out": [
        "awst_tmp%2#0",
        "result1#1"
      ],
      "stack_out": [
        "result1#1",
        "awst_tmp%2#0"
      ]
    },
    "2061": {
      "op": "dup",
      "defined_out": [
        "awst_tmp%2#0",
        "awst_tmp%2#0 (copy)",
        "result1#1"
      ],
      "stack_out": [
        "result1#1",
        "awst_tmp%2#0",
        "awst_tmp%2#0 (copy)"
      ]
    },
    "2062": {
      "op": "extract 4 0",
      "defined_out": [
        "awst_tmp%2#0",
        "result1#1",
        "result3#1"
      ],
      "stack_out": [
        "result1#1",
        "awst_tmp%2#0",
        "result3#1"
      ]
    },
    "2065": {
      "op": "swap",
      "stack_out": [
        "result1#1",
        "result3#1",
        "awst_tmp%2#0"
      ]
    },
    "2066": {
      "op": "extract 0 4",
      "defined_out": [
        "result1#1",
        "result3#1",
        "tmp%9#0"
      ],
      "stack_out": [
        "result1#1",
        "result3#1",
        "tmp%9#0"
      ]
    },
    "2069": {
      "op": "bytec_0 // 0x151f7c75",
      "stack_out": [
        "result1#1",
        "result3#1",
        "tmp%9#0",
        "0x151f7c75"
      ]
    },
    "2070": {
      "op": "==",
      "defined_out": [
        "result1#1",
        "result3#1",
        "tmp%10#2"
      ],
      "stack_out": [
        "result1#1",
        "result3#1",
        "tmp%10#2"
      ]
    },
    "2071": {
      "error": "ARC4 prefix is valid",
      "op": "assert // ARC4 prefix is valid",
      "stack_out": [
        "result1#1",
        "result3#1"
      ]
    },
    "2072": {
      "op": "b==",
      "defined_out": [
        "tmp%11#1"
      ],
      "stack_out": [
        "tmp%11#1"
      ]
    },
    "2073": {
      "op": "assert",
      "stack_out": []
    },
    "2074": {
      "op": "intc_2 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "2075": {
      "op": "return",
      "stack_out": []
    },
    "2076": {
      "block": "main_test_native_uint64_route@13",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%69#0"
      ],
      "stack_out": [
        "tmp%69#0"
      ]
    },
    "2078": {
      "op": "!",
      "defined_out": [
        "tmp%70#0"
      ],
      "stack_out": [
        "tmp%70#0"
      ]
    },
    "2079": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "2080": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%71#0"
      ],
      "stack_out": [
        "tmp%71#0"
      ]
    },
    "2082": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "2083": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[1]%11#0"
      ],
      "stack_out": [
        "reinterpret_bytes[1]%11#0"
      ]
    },
    "2086": {
      "op": "btoi",
      "defined_out": [
        "tmp%73#0"
      ],
      "stack_out": [
        "tmp%73#0"
      ]
    },
    "2087": {
      "op": "txnas Applications",
      "defined_out": [
        "app#0"
      ],
      "stack_out": [
        "app#0"
      ]
    },
    "2089": {
      "op": "itxn_begin"
    },
    "2090": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "app#0 (copy)"
      ],
      "stack_out": [
        "app#0",
        "app#0 (copy)"
      ]
    },
    "2091": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "app#0"
      ]
    },
    "2093": {
      "op": "bytec 15 // method \"echo_native_uint64(uint64)uint64\"",
      "defined_out": [
        "Method(echo_native_uint64(uint64)uint64)",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "Method(echo_native_uint64(uint64)uint64)"
      ]
    },
    "2095": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0"
      ]
    },
    "2097": {
      "op": "bytec_2 // 0x0000000000000001",
      "defined_out": [
        "0x0000000000000001",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "0x0000000000000001"
      ]
    },
    "2098": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0"
      ]
    },
    "2100": {
      "op": "intc_1 // appl",
      "defined_out": [
        "app#0",
        "appl"
      ],
      "stack_out": [
        "app#0",
        "appl"
      ]
    },
    "2101": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "app#0"
      ]
    },
    "2103": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "0"
      ]
    },
    "2104": {
      "op": "itxn_field Fee",
      "stack_out": [
        "app#0"
      ]
    },
    "2106": {
      "op": "itxn_submit"
    },
    "2107": {
      "op": "itxn LastLog",
      "defined_out": [
        "app#0",
        "awst_tmp%0#0"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0"
      ]
    },
    "2109": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ]
    },
    "2110": {
      "op": "extract 4 0",
      "defined_out": [
        "app#0",
        "awst_tmp%0#0",
        "tmp%0#3"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "tmp%0#3"
      ]
    },
    "2113": {
      "op": "swap",
      "stack_out": [
        "app#0",
        "tmp%0#3",
        "awst_tmp%0#0"
      ]
    },
    "2114": {
      "op": "extract 0 4",
      "defined_out": [
        "app#0",
        "tmp%0#3",
        "tmp%1#1"
      ],
      "stack_out": [
        "app#0",
        "tmp%0#3",
        "tmp%1#1"
      ]
    },
    "2117": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "app#0",
        "tmp%0#3",
        "tmp%1#1"
      ],
      "stack_out": [
        "app#0",
        "tmp%0#3",
        "tmp%1#1",
        "0x151f7c75"
      ]
    },
    "2118": {
      "op": "==",
      "defined_out": [
        "app#0",
        "tmp%0#3",
        "tmp%2#1"
      ],
      "stack_out": [
        "app#0",
        "tmp%0#3",
        "tmp%2#1"
      ]
    },
    "2119": {
      "error": "ARC4 prefix is valid",
      "op": "assert // ARC4 prefix is valid",
      "stack_out": [
        "app#0",
        "tmp%0#3"
      ]
    },
    "2120": {
      "op": "btoi",
      "defined_out": [
        "app#0",
        "result1#2"
      ],
      "stack_out": [
        "app#0",
        "result1#2"
      ]
    },
    "2121": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "result1#2",
        "result1#2 (copy)"
      ],
      "stack_out": [
        "app#0",
        "result1#2",
        "result1#2 (copy)"
      ]
    },
    "2122": {
      "op": "intc_3 // 2",
      "defined_out": [
        "2",
        "app#0",
        "result1#2",
        "result1#2 (copy)"
      ],
      "stack_out": [
        "app#0",
        "result1#2",
        "result1#2 (copy)",
        "2"
      ]
    },
    "2123": {
      "op": "==",
      "defined_out": [
        "app#0",
        "result1#2",
        "tmp%4#0"
      ],
      "stack_out": [
        "app#0",
        "result1#2",
        "tmp%4#0"
      ]
    },
    "2124": {
      "op": "assert",
      "stack_out": [
        "app#0",
        "result1#2"
      ]
    },
    "2125": {
      "op": "itxn_begin"
    },
    "2126": {
      "op": "intc_2 // 1",
      "defined_out": [
        "1",
        "app#0",
        "result1#2"
      ],
      "stack_out": [
        "app#0",
        "result1#2",
        "1"
      ]
    },
    "2127": {
      "op": "itob",
      "defined_out": [
        "app#0",
        "result1#2",
        "val_as_bytes%0#1"
      ],
      "stack_out": [
        "app#0",
        "result1#2",
        "val_as_bytes%0#1"
      ]
    },
    "2128": {
      "op": "dig 2",
      "stack_out": [
        "app#0",
        "result1#2",
        "val_as_bytes%0#1",
        "app#0 (copy)"
      ]
    },
    "2130": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "app#0",
        "result1#2",
        "val_as_bytes%0#1"
      ]
    },
    "2132": {
      "op": "bytec 15 // method \"echo_native_uint64(uint64)uint64\"",
      "stack_out": [
        "app#0",
        "result1#2",
        "val_as_bytes%0#1",
        "Method(echo_native_uint64(uint64)uint64)"
      ]
    },
    "2134": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0",
        "result1#2",
        "val_as_bytes%0#1"
      ]
    },
    "2136": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0",
        "result1#2"
      ]
    },
    "2138": {
      "op": "intc_1 // appl",
      "stack_out": [
        "app#0",
        "result1#2",
        "appl"
      ]
    },
    "2139": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "app#0",
        "result1#2"
      ]
    },
    "2141": {
      "op": "intc_0 // 0",
      "stack_out": [
        "app#0",
        "result1#2",
        "0"
      ]
    },
    "2142": {
      "op": "itxn_field Fee",
      "stack_out": [
        "app#0",
        "result1#2"
      ]
    },
    "2144": {
      "op": "itxn_submit"
    },
    "2145": {
      "op": "itxn LastLog",
      "defined_out": [
        "app#0",
        "awst_tmp%1#0",
        "result1#2"
      ],
      "stack_out": [
        "app#0",
        "result1#2",
        "awst_tmp%1#0"
      ]
    },
    "2147": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "awst_tmp%1#0",
        "awst_tmp%1#0 (copy)",
        "result1#2"
      ],
      "stack_out": [
        "app#0",
        "result1#2",
        "awst_tmp%1#0",
        "awst_tmp%1#0 (copy)"
      ]
    },
    "2148": {
      "op": "extract 4 0",
      "defined_out": [
        "app#0",
        "awst_tmp%1#0",
        "result1#2",
        "tmp%5#6"
      ],
      "stack_out": [
        "app#0",
        "result1#2",
        "awst_tmp%1#0",
        "tmp%5#6"
      ]
    },
    "2151": {
      "op": "swap",
      "stack_out": [
        "app#0",
        "result1#2",
        "tmp%5#6",
        "awst_tmp%1#0"
      ]
    },
    "2152": {
      "op": "extract 0 4",
      "defined_out": [
        "app#0",
        "result1#2",
        "tmp%5#6",
        "tmp%6#2"
      ],
      "stack_out": [
        "app#0",
        "result1#2",
        "tmp%5#6",
        "tmp%6#2"
      ]
    },
    "2155": {
      "op": "bytec_0 // 0x151f7c75",
      "stack_out": [
        "app#0",
        "result1#2",
        "tmp%5#6",
        "tmp%6#2",
        "0x151f7c75"
      ]
    },
    "2156": {
      "op": "==",
      "defined_out": [
        "app#0",
        "result1#2",
        "tmp%5#6",
        "tmp%7#1"
      ],
      "stack_out": [
        "app#0",
        "result1#2",
        "tmp%5#6",
        "tmp%7#1"
      ]
    },
    "2157": {
      "error": "ARC4 prefix is valid",
      "op": "assert // ARC4 prefix is valid",
      "stack_out": [
        "app#0",
        "result1#2",
        "tmp%5#6"
      ]
    },
    "2158": {
      "op": "btoi",
      "defined_out": [
        "app#0",
        "result1#2",
        "result2#2"
      ],
      "stack_out": [
        "app#0",
        "result1#2",
        "result2#2"
      ]
    },
    "2159": {
      "op": "dig 1",
      "stack_out": [
        "app#0",
        "result1#2",
        "result2#2",
        "result1#2 (copy)"
      ]
    },
    "2161": {
      "op": "==",
      "defined_out": [
        "app#0",
        "result1#2",
        "tmp%9#3"
      ],
      "stack_out": [
        "app#0",
        "result1#2",
        "tmp%9#3"
      ]
    },
    "2162": {
      "op": "assert",
      "stack_out": [
        "app#0",
        "result1#2"
      ]
    },
    "2163": {
      "op": "itxn_begin"
    },
    "2164": {
      "op": "swap",
      "stack_out": [
        "result1#2",
        "app#0"
      ]
    },
    "2165": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "result1#2"
      ]
    },
    "2167": {
      "op": "bytec 15 // method \"echo_native_uint64(uint64)uint64\"",
      "stack_out": [
        "result1#2",
        "Method(echo_native_uint64(uint64)uint64)"
      ]
    },
    "2169": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "result1#2"
      ]
    },
    "2171": {
      "op": "bytec_2 // 0x0000000000000001",
      "stack_out": [
        "result1#2",
        "0x0000000000000001"
      ]
    },
    "2172": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "result1#2"
      ]
    },
    "2174": {
      "op": "intc_1 // appl",
      "stack_out": [
        "result1#2",
        "appl"
      ]
    },
    "2175": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "result1#2"
      ]
    },
    "2177": {
      "op": "intc_0 // 0",
      "stack_out": [
        "result1#2",
        "0"
      ]
    },
    "2178": {
      "op": "itxn_field Fee",
      "stack_out": [
        "result1#2"
      ]
    },
    "2180": {
      "op": "itxn_submit"
    },
    "2181": {
      "op": "itxn LastLog",
      "defined_out": [
        "awst_tmp%2#0",
        "result1#2"
      ],
      "stack_out": [
        "result1#2",
        "awst_tmp%2#0"
      ]
    },
    "2183": {
      "op": "dup",
      "defined_out": [
        "awst_tmp%2#0",
        "awst_tmp%2#0 (copy)",
        "result1#2"
      ],
      "stack_out": [
        "result1#2",
        "awst_tmp%2#0",
        "awst_tmp%2#0 (copy)"
      ]
    },
    "2184": {
      "op": "extract 4 0",
      "defined_out": [
        "awst_tmp%2#0",
        "result1#2",
        "tmp%10#5"
      ],
      "stack_out": [
        "result1#2",
        "awst_tmp%2#0",
        "tmp%10#5"
      ]
    },
    "2187": {
      "op": "swap",
      "stack_out": [
        "result1#2",
        "tmp%10#5",
        "awst_tmp%2#0"
      ]
    },
    "2188": {
      "op": "extract 0 4",
      "defined_out": [
        "result1#2",
        "tmp%10#5",
        "tmp%11#4"
      ],
      "stack_out": [
        "result1#2",
        "tmp%10#5",
        "tmp%11#4"
      ]
    },
    "2191": {
      "op": "bytec_0 // 0x151f7c75",
      "stack_out": [
        "result1#2",
        "tmp%10#5",
        "tmp%11#4",
        "0x151f7c75"
      ]
    },
    "2192": {
      "op": "==",
      "defined_out": [
        "result1#2",
        "tmp%10#5",
        "tmp%12#1"
      ],
      "stack_out": [
        "result1#2",
        "tmp%10#5",
        "tmp%12#1"
      ]
    },
    "2193": {
      "error": "ARC4 prefix is valid",
      "op": "assert // ARC4 prefix is valid",
      "stack_out": [
        "result1#2",
        "tmp%10#5"
      ]
    },
    "2194": {
      "op": "btoi",
      "defined_out": [
        "result1#2",
        "result3#2"
      ],
      "stack_out": [
        "result1#2",
        "result3#2"
      ]
    },
    "2195": {
      "op": "==",
      "defined_out": [
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%14#0"
      ]
    },
    "2196": {
      "op": "assert",
      "stack_out": []
    },
    "2197": {
      "op": "intc_2 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "2198": {
      "op": "return",
      "stack_out": []
    },
    "2199": {
      "block": "main_test_native_bytes_route@12",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%63#0"
      ],
      "stack_out": [
        "tmp%63#0"
      ]
    },
    "2201": {
      "op": "!",
      "defined_out": [
        "tmp%64#0"
      ],
      "stack_out": [
        "tmp%64#0"
      ]
    },
    "2202": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "2203": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%65#0"
      ],
      "stack_out": [
        "tmp%65#0"
      ]
    },
    "2205": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "2206": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[1]%10#0"
      ],
      "stack_out": [
        "reinterpret_bytes[1]%10#0"
      ]
    },
    "2209": {
      "op": "btoi",
      "defined_out": [
        "tmp%67#0"
      ],
      "stack_out": [
        "tmp%67#0"
      ]
    },
    "2210": {
      "op": "txnas Applications",
      "defined_out": [
        "app#0"
      ],
      "stack_out": [
        "app#0"
      ]
    },
    "2212": {
      "op": "itxn_begin"
    },
    "2213": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "app#0 (copy)"
      ],
      "stack_out": [
        "app#0",
        "app#0 (copy)"
      ]
    },
    "2214": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "app#0"
      ]
    },
    "2216": {
      "op": "bytec 16 // method \"echo_native_bytes(byte[])byte[]\"",
      "defined_out": [
        "Method(echo_native_bytes(byte[])byte[])",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "Method(echo_native_bytes(byte[])byte[])"
      ]
    },
    "2218": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0"
      ]
    },
    "2220": {
      "op": "bytec 17 // 0x000162",
      "defined_out": [
        "0x000162",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "0x000162"
      ]
    },
    "2222": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0"
      ]
    },
    "2224": {
      "op": "intc_1 // appl",
      "defined_out": [
        "app#0",
        "appl"
      ],
      "stack_out": [
        "app#0",
        "appl"
      ]
    },
    "2225": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "app#0"
      ]
    },
    "2227": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "0"
      ]
    },
    "2228": {
      "op": "itxn_field Fee",
      "stack_out": [
        "app#0"
      ]
    },
    "2230": {
      "op": "itxn_submit"
    },
    "2231": {
      "op": "itxn LastLog",
      "defined_out": [
        "app#0",
        "awst_tmp%0#0"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0"
      ]
    },
    "2233": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ]
    },
    "2234": {
      "op": "extract 0 4",
      "defined_out": [
        "app#0",
        "awst_tmp%0#0",
        "tmp%1#1"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "tmp%1#1"
      ]
    },
    "2237": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "app#0",
        "awst_tmp%0#0",
        "tmp%1#1"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "tmp%1#1",
        "0x151f7c75"
      ]
    },
    "2238": {
      "op": "==",
      "defined_out": [
        "app#0",
        "awst_tmp%0#0",
        "tmp%2#1"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "tmp%2#1"
      ]
    },
    "2239": {
      "error": "ARC4 prefix is valid",
      "op": "assert // ARC4 prefix is valid",
      "stack_out": [
        "app#0",
        "awst_tmp%0#0"
      ]
    },
    "2240": {
      "op": "extract 6 0",
      "defined_out": [
        "app#0",
        "result1#0"
      ],
      "stack_out": [
        "app#0",
        "result1#0"
      ]
    },
    "2243": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "result1#0",
        "result1#0 (copy)"
      ],
      "stack_out": [
        "app#0",
        "result1#0",
        "result1#0 (copy)"
      ]
    },
    "2244": {
      "op": "pushbytes 0x6563686f3a2062",
      "defined_out": [
        "0x6563686f3a2062",
        "app#0",
        "result1#0",
        "result1#0 (copy)"
      ],
      "stack_out": [
        "app#0",
        "result1#0",
        "result1#0 (copy)",
        "0x6563686f3a2062"
      ]
    },
    "2253": {
      "op": "==",
      "defined_out": [
        "app#0",
        "result1#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "app#0",
        "result1#0",
        "tmp%4#0"
      ]
    },
    "2254": {
      "op": "assert",
      "stack_out": [
        "app#0",
        "result1#0"
      ]
    },
    "2255": {
      "op": "itxn_begin"
    },
    "2256": {
      "op": "dig 1",
      "stack_out": [
        "app#0",
        "result1#0",
        "app#0 (copy)"
      ]
    },
    "2258": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "app#0",
        "result1#0"
      ]
    },
    "2260": {
      "op": "bytec 16 // method \"echo_native_bytes(byte[])byte[]\"",
      "stack_out": [
        "app#0",
        "result1#0",
        "Method(echo_native_bytes(byte[])byte[])"
      ]
    },
    "2262": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0",
        "result1#0"
      ]
    },
    "2264": {
      "op": "bytec 17 // 0x000162",
      "stack_out": [
        "app#0",
        "result1#0",
        "0x000162"
      ]
    },
    "2266": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0",
        "result1#0"
      ]
    },
    "2268": {
      "op": "intc_1 // appl",
      "stack_out": [
        "app#0",
        "result1#0",
        "appl"
      ]
    },
    "2269": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "app#0",
        "result1#0"
      ]
    },
    "2271": {
      "op": "intc_0 // 0",
      "stack_out": [
        "app#0",
        "result1#0",
        "0"
      ]
    },
    "2272": {
      "op": "itxn_field Fee",
      "stack_out": [
        "app#0",
        "result1#0"
      ]
    },
    "2274": {
      "op": "itxn_submit"
    },
    "2275": {
      "op": "itxn LastLog",
      "defined_out": [
        "app#0",
        "awst_tmp%1#0",
        "result1#0"
      ],
      "stack_out": [
        "app#0",
        "result1#0",
        "awst_tmp%1#0"
      ]
    },
    "2277": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "awst_tmp%1#0",
        "awst_tmp%1#0 (copy)",
        "result1#0"
      ],
      "stack_out": [
        "app#0",
        "result1#0",
        "awst_tmp%1#0",
        "awst_tmp%1#0 (copy)"
      ]
    },
    "2278": {
      "op": "extract 0 4",
      "defined_out": [
        "app#0",
        "awst_tmp%1#0",
        "result1#0",
        "tmp%6#2"
      ],
      "stack_out": [
        "app#0",
        "result1#0",
        "awst_tmp%1#0",
        "tmp%6#2"
      ]
    },
    "2281": {
      "op": "bytec_0 // 0x151f7c75",
      "stack_out": [
        "app#0",
        "result1#0",
        "awst_tmp%1#0",
        "tmp%6#2",
        "0x151f7c75"
      ]
    },
    "2282": {
      "op": "==",
      "defined_out": [
        "app#0",
        "awst_tmp%1#0",
        "result1#0",
        "tmp%7#1"
      ],
      "stack_out": [
        "app#0",
        "result1#0",
        "awst_tmp%1#0",
        "tmp%7#1"
      ]
    },
    "2283": {
      "error": "ARC4 prefix is valid",
      "op": "assert // ARC4 prefix is valid",
      "stack_out": [
        "app#0",
        "result1#0",
        "awst_tmp%1#0"
      ]
    },
    "2284": {
      "op": "extract 6 0",
      "defined_out": [
        "app#0",
        "result1#0",
        "result2#0"
      ],
      "stack_out": [
        "app#0",
        "result1#0",
        "result2#0"
      ]
    },
    "2287": {
      "op": "dig 1",
      "stack_out": [
        "app#0",
        "result1#0",
        "result2#0",
        "result1#0 (copy)"
      ]
    },
    "2289": {
      "op": "==",
      "defined_out": [
        "app#0",
        "result1#0",
        "tmp%9#3"
      ],
      "stack_out": [
        "app#0",
        "result1#0",
        "tmp%9#3"
      ]
    },
    "2290": {
      "op": "assert",
      "stack_out": [
        "app#0",
        "result1#0"
      ]
    },
    "2291": {
      "op": "itxn_begin"
    },
    "2292": {
      "op": "swap",
      "stack_out": [
        "result1#0",
        "app#0"
      ]
    },
    "2293": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "result1#0"
      ]
    },
    "2295": {
      "op": "bytec 16 // method \"echo_native_bytes(byte[])byte[]\"",
      "stack_out": [
        "result1#0",
        "Method(echo_native_bytes(byte[])byte[])"
      ]
    },
    "2297": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "result1#0"
      ]
    },
    "2299": {
      "op": "bytec 17 // 0x000162",
      "stack_out": [
        "result1#0",
        "0x000162"
      ]
    },
    "2301": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "result1#0"
      ]
    },
    "2303": {
      "op": "intc_1 // appl",
      "stack_out": [
        "result1#0",
        "appl"
      ]
    },
    "2304": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "result1#0"
      ]
    },
    "2306": {
      "op": "intc_0 // 0",
      "stack_out": [
        "result1#0",
        "0"
      ]
    },
    "2307": {
      "op": "itxn_field Fee",
      "stack_out": [
        "result1#0"
      ]
    },
    "2309": {
      "op": "itxn_submit"
    },
    "2310": {
      "op": "itxn LastLog",
      "defined_out": [
        "awst_tmp%2#0",
        "result1#0"
      ],
      "stack_out": [
        "result1#0",
        "awst_tmp%2#0"
      ]
    },
    "2312": {
      "op": "dup",
      "defined_out": [
        "awst_tmp%2#0",
        "awst_tmp%2#0 (copy)",
        "result1#0"
      ],
      "stack_out": [
        "result1#0",
        "awst_tmp%2#0",
        "awst_tmp%2#0 (copy)"
      ]
    },
    "2313": {
      "op": "extract 0 4",
      "defined_out": [
        "awst_tmp%2#0",
        "result1#0",
        "tmp%11#4"
      ],
      "stack_out": [
        "result1#0",
        "awst_tmp%2#0",
        "tmp%11#4"
      ]
    },
    "2316": {
      "op": "bytec_0 // 0x151f7c75",
      "stack_out": [
        "result1#0",
        "awst_tmp%2#0",
        "tmp%11#4",
        "0x151f7c75"
      ]
    },
    "2317": {
      "op": "==",
      "defined_out": [
        "awst_tmp%2#0",
        "result1#0",
        "tmp%12#1"
      ],
      "stack_out": [
        "result1#0",
        "awst_tmp%2#0",
        "tmp%12#1"
      ]
    },
    "2318": {
      "error": "ARC4 prefix is valid",
      "op": "assert // ARC4 prefix is valid",
      "stack_out": [
        "result1#0",
        "awst_tmp%2#0"
      ]
    },
    "2319": {
      "op": "extract 6 0",
      "defined_out": [
        "result1#0",
        "result3#0"
      ],
      "stack_out": [
        "result1#0",
        "result3#0"
      ]
    },
    "2322": {
      "op": "==",
      "defined_out": [
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%14#0"
      ]
    },
    "2323": {
      "op": "assert",
      "stack_out": []
    },
    "2324": {
      "op": "intc_2 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "2325": {
      "op": "return",
      "stack_out": []
    },
    "2326": {
      "block": "main_test_native_string_route@11",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%57#0"
      ],
      "stack_out": [
        "tmp%57#0"
      ]
    },
    "2328": {
      "op": "!",
      "defined_out": [
        "tmp%58#0"
      ],
      "stack_out": [
        "tmp%58#0"
      ]
    },
    "2329": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "2330": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%59#0"
      ],
      "stack_out": [
        "tmp%59#0"
      ]
    },
    "2332": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "2333": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[1]%9#0"
      ],
      "stack_out": [
        "reinterpret_bytes[1]%9#0"
      ]
    },
    "2336": {
      "op": "btoi",
      "defined_out": [
        "tmp%61#0"
      ],
      "stack_out": [
        "tmp%61#0"
      ]
    },
    "2337": {
      "op": "txnas Applications",
      "defined_out": [
        "app#0"
      ],
      "stack_out": [
        "app#0"
      ]
    },
    "2339": {
      "op": "itxn_begin"
    },
    "2340": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "app#0 (copy)"
      ],
      "stack_out": [
        "app#0",
        "app#0 (copy)"
      ]
    },
    "2341": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "app#0"
      ]
    },
    "2343": {
      "op": "bytec 18 // method \"echo_native_string(string)string\"",
      "defined_out": [
        "Method(echo_native_string(string)string)",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "Method(echo_native_string(string)string)"
      ]
    },
    "2345": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0"
      ]
    },
    "2347": {
      "op": "bytec 19 // 0x000173",
      "defined_out": [
        "0x000173",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "0x000173"
      ]
    },
    "2349": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0"
      ]
    },
    "2351": {
      "op": "intc_1 // appl",
      "defined_out": [
        "app#0",
        "appl"
      ],
      "stack_out": [
        "app#0",
        "appl"
      ]
    },
    "2352": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "app#0"
      ]
    },
    "2354": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "0"
      ]
    },
    "2355": {
      "op": "itxn_field Fee",
      "stack_out": [
        "app#0"
      ]
    },
    "2357": {
      "op": "itxn_submit"
    },
    "2358": {
      "op": "itxn LastLog",
      "defined_out": [
        "app#0",
        "awst_tmp%0#0"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0"
      ]
    },
    "2360": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ]
    },
    "2361": {
      "op": "extract 0 4",
      "defined_out": [
        "app#0",
        "awst_tmp%0#0",
        "tmp%1#1"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "tmp%1#1"
      ]
    },
    "2364": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "app#0",
        "awst_tmp%0#0",
        "tmp%1#1"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "tmp%1#1",
        "0x151f7c75"
      ]
    },
    "2365": {
      "op": "==",
      "defined_out": [
        "app#0",
        "awst_tmp%0#0",
        "tmp%2#1"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "tmp%2#1"
      ]
    },
    "2366": {
      "error": "ARC4 prefix is valid",
      "op": "assert // ARC4 prefix is valid",
      "stack_out": [
        "app#0",
        "awst_tmp%0#0"
      ]
    },
    "2367": {
      "op": "extract 6 0",
      "defined_out": [
        "app#0",
        "result1#0"
      ],
      "stack_out": [
        "app#0",
        "result1#0"
      ]
    },
    "2370": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "result1#0",
        "result1#0 (copy)"
      ],
      "stack_out": [
        "app#0",
        "result1#0",
        "result1#0 (copy)"
      ]
    },
    "2371": {
      "op": "pushbytes \"echo: s\"",
      "defined_out": [
        "\"echo: s\"",
        "app#0",
        "result1#0",
        "result1#0 (copy)"
      ],
      "stack_out": [
        "app#0",
        "result1#0",
        "result1#0 (copy)",
        "\"echo: s\""
      ]
    },
    "2380": {
      "op": "==",
      "defined_out": [
        "app#0",
        "result1#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "app#0",
        "result1#0",
        "tmp%4#0"
      ]
    },
    "2381": {
      "op": "assert",
      "stack_out": [
        "app#0",
        "result1#0"
      ]
    },
    "2382": {
      "op": "itxn_begin"
    },
    "2383": {
      "op": "dig 1",
      "stack_out": [
        "app#0",
        "result1#0",
        "app#0 (copy)"
      ]
    },
    "2385": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "app#0",
        "result1#0"
      ]
    },
    "2387": {
      "op": "bytec 18 // method \"echo_native_string(string)string\"",
      "stack_out": [
        "app#0",
        "result1#0",
        "Method(echo_native_string(string)string)"
      ]
    },
    "2389": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0",
        "result1#0"
      ]
    },
    "2391": {
      "op": "bytec 19 // 0x000173",
      "stack_out": [
        "app#0",
        "result1#0",
        "0x000173"
      ]
    },
    "2393": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0",
        "result1#0"
      ]
    },
    "2395": {
      "op": "intc_1 // appl",
      "stack_out": [
        "app#0",
        "result1#0",
        "appl"
      ]
    },
    "2396": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "app#0",
        "result1#0"
      ]
    },
    "2398": {
      "op": "intc_0 // 0",
      "stack_out": [
        "app#0",
        "result1#0",
        "0"
      ]
    },
    "2399": {
      "op": "itxn_field Fee",
      "stack_out": [
        "app#0",
        "result1#0"
      ]
    },
    "2401": {
      "op": "itxn_submit"
    },
    "2402": {
      "op": "itxn LastLog",
      "defined_out": [
        "app#0",
        "awst_tmp%1#0",
        "result1#0"
      ],
      "stack_out": [
        "app#0",
        "result1#0",
        "awst_tmp%1#0"
      ]
    },
    "2404": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "awst_tmp%1#0",
        "awst_tmp%1#0 (copy)",
        "result1#0"
      ],
      "stack_out": [
        "app#0",
        "result1#0",
        "awst_tmp%1#0",
        "awst_tmp%1#0 (copy)"
      ]
    },
    "2405": {
      "op": "extract 0 4",
      "defined_out": [
        "app#0",
        "awst_tmp%1#0",
        "result1#0",
        "tmp%6#2"
      ],
      "stack_out": [
        "app#0",
        "result1#0",
        "awst_tmp%1#0",
        "tmp%6#2"
      ]
    },
    "2408": {
      "op": "bytec_0 // 0x151f7c75",
      "stack_out": [
        "app#0",
        "result1#0",
        "awst_tmp%1#0",
        "tmp%6#2",
        "0x151f7c75"
      ]
    },
    "2409": {
      "op": "==",
      "defined_out": [
        "app#0",
        "awst_tmp%1#0",
        "result1#0",
        "tmp%7#1"
      ],
      "stack_out": [
        "app#0",
        "result1#0",
        "awst_tmp%1#0",
        "tmp%7#1"
      ]
    },
    "2410": {
      "error": "ARC4 prefix is valid",
      "op": "assert // ARC4 prefix is valid",
      "stack_out": [
        "app#0",
        "result1#0",
        "awst_tmp%1#0"
      ]
    },
    "2411": {
      "op": "extract 6 0",
      "defined_out": [
        "app#0",
        "result1#0",
        "result2#0"
      ],
      "stack_out": [
        "app#0",
        "result1#0",
        "result2#0"
      ]
    },
    "2414": {
      "op": "dig 1",
      "stack_out": [
        "app#0",
        "result1#0",
        "result2#0",
        "result1#0 (copy)"
      ]
    },
    "2416": {
      "op": "==",
      "defined_out": [
        "app#0",
        "result1#0",
        "tmp%9#3"
      ],
      "stack_out": [
        "app#0",
        "result1#0",
        "tmp%9#3"
      ]
    },
    "2417": {
      "op": "assert",
      "stack_out": [
        "app#0",
        "result1#0"
      ]
    },
    "2418": {
      "op": "itxn_begin"
    },
    "2419": {
      "op": "swap",
      "stack_out": [
        "result1#0",
        "app#0"
      ]
    },
    "2420": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "result1#0"
      ]
    },
    "2422": {
      "op": "bytec 18 // method \"echo_native_string(string)string\"",
      "stack_out": [
        "result1#0",
        "Method(echo_native_string(string)string)"
      ]
    },
    "2424": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "result1#0"
      ]
    },
    "2426": {
      "op": "bytec 19 // 0x000173",
      "stack_out": [
        "result1#0",
        "0x000173"
      ]
    },
    "2428": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "result1#0"
      ]
    },
    "2430": {
      "op": "intc_1 // appl",
      "stack_out": [
        "result1#0",
        "appl"
      ]
    },
    "2431": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "result1#0"
      ]
    },
    "2433": {
      "op": "intc_0 // 0",
      "stack_out": [
        "result1#0",
        "0"
      ]
    },
    "2434": {
      "op": "itxn_field Fee",
      "stack_out": [
        "result1#0"
      ]
    },
    "2436": {
      "op": "itxn_submit"
    },
    "2437": {
      "op": "itxn LastLog",
      "defined_out": [
        "awst_tmp%2#0",
        "result1#0"
      ],
      "stack_out": [
        "result1#0",
        "awst_tmp%2#0"
      ]
    },
    "2439": {
      "op": "dup",
      "defined_out": [
        "awst_tmp%2#0",
        "awst_tmp%2#0 (copy)",
        "result1#0"
      ],
      "stack_out": [
        "result1#0",
        "awst_tmp%2#0",
        "awst_tmp%2#0 (copy)"
      ]
    },
    "2440": {
      "op": "extract 0 4",
      "defined_out": [
        "awst_tmp%2#0",
        "result1#0",
        "tmp%11#4"
      ],
      "stack_out": [
        "result1#0",
        "awst_tmp%2#0",
        "tmp%11#4"
      ]
    },
    "2443": {
      "op": "bytec_0 // 0x151f7c75",
      "stack_out": [
        "result1#0",
        "awst_tmp%2#0",
        "tmp%11#4",
        "0x151f7c75"
      ]
    },
    "2444": {
      "op": "==",
      "defined_out": [
        "awst_tmp%2#0",
        "result1#0",
        "tmp%12#1"
      ],
      "stack_out": [
        "result1#0",
        "awst_tmp%2#0",
        "tmp%12#1"
      ]
    },
    "2445": {
      "error": "ARC4 prefix is valid",
      "op": "assert // ARC4 prefix is valid",
      "stack_out": [
        "result1#0",
        "awst_tmp%2#0"
      ]
    },
    "2446": {
      "op": "extract 6 0",
      "defined_out": [
        "result1#0",
        "result3#0"
      ],
      "stack_out": [
        "result1#0",
        "result3#0"
      ]
    },
    "2449": {
      "op": "==",
      "defined_out": [
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%14#0"
      ]
    },
    "2450": {
      "op": "assert",
      "stack_out": []
    },
    "2451": {
      "op": "intc_2 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "2452": {
      "op": "return",
      "stack_out": []
    },
    "2453": {
      "block": "main_test_account_to_address_route@10",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%51#0"
      ],
      "stack_out": [
        "tmp%51#0"
      ]
    },
    "2455": {
      "op": "!",
      "defined_out": [
        "tmp%52#0"
      ],
      "stack_out": [
        "tmp%52#0"
      ]
    },
    "2456": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "2457": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%53#0"
      ],
      "stack_out": [
        "tmp%53#0"
      ]
    },
    "2459": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "2460": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[1]%8#0"
      ],
      "stack_out": [
        "reinterpret_bytes[1]%8#0"
      ]
    },
    "2463": {
      "op": "btoi",
      "defined_out": [
        "tmp%55#0"
      ],
      "stack_out": [
        "tmp%55#0"
      ]
    },
    "2464": {
      "op": "txnas Applications",
      "defined_out": [
        "app#0"
      ],
      "stack_out": [
        "app#0"
      ]
    },
    "2466": {
      "op": "itxn_begin"
    },
    "2467": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "app#0",
        "tmp%0#9"
      ],
      "stack_out": [
        "app#0",
        "tmp%0#9"
      ]
    },
    "2469": {
      "op": "swap",
      "stack_out": [
        "tmp%0#9",
        "app#0"
      ]
    },
    "2470": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "tmp%0#9"
      ]
    },
    "2472": {
      "op": "pushbytes 0x0437b17e // method \"log(address)void\"",
      "defined_out": [
        "Method(log(address)void)",
        "tmp%0#9"
      ],
      "stack_out": [
        "tmp%0#9",
        "Method(log(address)void)"
      ]
    },
    "2478": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "tmp%0#9"
      ]
    },
    "2480": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "2482": {
      "op": "intc_1 // appl",
      "defined_out": [
        "appl"
      ],
      "stack_out": [
        "appl"
      ]
    },
    "2483": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "2485": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "2486": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "2488": {
      "op": "itxn_submit"
    },
    "2489": {
      "op": "itxn LastLog",
      "defined_out": [
        "txn.LastLog#0"
      ],
      "stack_out": [
        "txn.LastLog#0"
      ]
    },
    "2491": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "tmp%1#10",
        "txn.LastLog#0"
      ],
      "stack_out": [
        "txn.LastLog#0",
        "tmp%1#10"
      ]
    },
    "2493": {
      "op": "==",
      "defined_out": [
        "tmp%2#1"
      ],
      "stack_out": [
        "tmp%2#1"
      ]
    },
    "2494": {
      "op": "assert",
      "stack_out": []
    },
    "2495": {
      "op": "intc_2 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "2496": {
      "op": "return",
      "stack_out": []
    },
    "2497": {
      "block": "main_test_ref_types_route@9",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%43#0"
      ],
      "stack_out": [
        "tmp%43#0"
      ]
    },
    "2499": {
      "op": "!",
      "defined_out": [
        "tmp%44#0"
      ],
      "stack_out": [
        "tmp%44#0"
      ]
    },
    "2500": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "2501": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%45#0"
      ],
      "stack_out": [
        "tmp%45#0"
      ]
    },
    "2503": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "2504": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[1]%6#0"
      ],
      "stack_out": [
        "reinterpret_bytes[1]%6#0"
      ]
    },
    "2507": {
      "op": "btoi",
      "defined_out": [
        "tmp%47#0"
      ],
      "stack_out": [
        "tmp%47#0"
      ]
    },
    "2508": {
      "op": "txnas Applications",
      "defined_out": [
        "app#0"
      ],
      "stack_out": [
        "app#0"
      ]
    },
    "2510": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "app#0",
        "reinterpret_bytes[1]%7#0"
      ],
      "stack_out": [
        "app#0",
        "reinterpret_bytes[1]%7#0"
      ]
    },
    "2513": {
      "op": "btoi",
      "defined_out": [
        "app#0",
        "tmp%49#0"
      ],
      "stack_out": [
        "app#0",
        "tmp%49#0"
      ]
    },
    "2514": {
      "op": "txnas Assets",
      "defined_out": [
        "app#0",
        "asset#0"
      ],
      "stack_out": [
        "app#0",
        "asset#0"
      ]
    },
    "2516": {
      "op": "itxn_begin"
    },
    "2517": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "app#0",
        "asset#0",
        "tmp%0#9"
      ],
      "stack_out": [
        "app#0",
        "asset#0",
        "tmp%0#9"
      ]
    },
    "2519": {
      "op": "dig 2",
      "defined_out": [
        "app#0",
        "app#0 (copy)",
        "asset#0",
        "tmp%0#9"
      ],
      "stack_out": [
        "app#0",
        "asset#0",
        "tmp%0#9",
        "app#0 (copy)"
      ]
    },
    "2521": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "app#0",
        "asset#0",
        "tmp%0#9"
      ]
    },
    "2523": {
      "op": "dig 1",
      "defined_out": [
        "app#0",
        "asset#0",
        "asset#0 (copy)",
        "tmp%0#9"
      ],
      "stack_out": [
        "app#0",
        "asset#0",
        "tmp%0#9",
        "asset#0 (copy)"
      ]
    },
    "2525": {
      "op": "itxn_field Assets",
      "stack_out": [
        "app#0",
        "asset#0",
        "tmp%0#9"
      ]
    },
    "2527": {
      "op": "dig 2",
      "stack_out": [
        "app#0",
        "asset#0",
        "tmp%0#9",
        "app#0 (copy)"
      ]
    },
    "2529": {
      "op": "itxn_field Applications",
      "stack_out": [
        "app#0",
        "asset#0",
        "tmp%0#9"
      ]
    },
    "2531": {
      "op": "itxn_field Accounts",
      "stack_out": [
        "app#0",
        "asset#0"
      ]
    },
    "2533": {
      "op": "pushbytes 0xcd727b71 // method \"log(asset,account,application)void\"",
      "defined_out": [
        "Method(log(asset,account,application)void)",
        "app#0",
        "asset#0"
      ],
      "stack_out": [
        "app#0",
        "asset#0",
        "Method(log(asset,account,application)void)"
      ]
    },
    "2539": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0",
        "asset#0"
      ]
    },
    "2541": {
      "op": "pushbytes 0x00",
      "defined_out": [
        "0x00",
        "app#0",
        "asset#0"
      ],
      "stack_out": [
        "app#0",
        "asset#0",
        "0x00"
      ]
    },
    "2544": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0",
        "asset#0"
      ]
    },
    "2546": {
      "op": "pushbytes 0x01",
      "defined_out": [
        "0x01",
        "app#0",
        "asset#0"
      ],
      "stack_out": [
        "app#0",
        "asset#0",
        "0x01"
      ]
    },
    "2549": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0",
        "asset#0"
      ]
    },
    "2551": {
      "op": "pushbytes 0x01",
      "stack_out": [
        "app#0",
        "asset#0",
        "0x01"
      ]
    },
    "2554": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0",
        "asset#0"
      ]
    },
    "2556": {
      "op": "intc_1 // appl",
      "defined_out": [
        "app#0",
        "appl",
        "asset#0"
      ],
      "stack_out": [
        "app#0",
        "asset#0",
        "appl"
      ]
    },
    "2557": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "app#0",
        "asset#0"
      ]
    },
    "2559": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "app#0",
        "asset#0"
      ],
      "stack_out": [
        "app#0",
        "asset#0",
        "0"
      ]
    },
    "2560": {
      "op": "itxn_field Fee",
      "stack_out": [
        "app#0",
        "asset#0"
      ]
    },
    "2562": {
      "op": "itxn_submit"
    },
    "2563": {
      "op": "itxn LastLog",
      "defined_out": [
        "app#0",
        "asset#0",
        "txn.LastLog#0"
      ],
      "stack_out": [
        "app#0",
        "asset#0",
        "txn.LastLog#0"
      ]
    },
    "2565": {
      "op": "swap",
      "stack_out": [
        "app#0",
        "txn.LastLog#0",
        "asset#0"
      ]
    },
    "2566": {
      "op": "asset_params_get AssetName",
      "defined_out": [
        "app#0",
        "check%0#0",
        "txn.LastLog#0",
        "value%0#0"
      ],
      "stack_out": [
        "app#0",
        "txn.LastLog#0",
        "value%0#0",
        "check%0#0"
      ]
    },
    "2568": {
      "error": "asset exists",
      "op": "assert // asset exists",
      "stack_out": [
        "app#0",
        "txn.LastLog#0",
        "value%0#0"
      ]
    },
    "2569": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "app#0",
        "tmp%1#10",
        "txn.LastLog#0",
        "value%0#0"
      ],
      "stack_out": [
        "app#0",
        "txn.LastLog#0",
        "value%0#0",
        "tmp%1#10"
      ]
    },
    "2571": {
      "op": "concat",
      "defined_out": [
        "app#0",
        "tmp%2#0",
        "txn.LastLog#0"
      ],
      "stack_out": [
        "app#0",
        "txn.LastLog#0",
        "tmp%2#0"
      ]
    },
    "2572": {
      "op": "uncover 2",
      "stack_out": [
        "txn.LastLog#0",
        "tmp%2#0",
        "app#0"
      ]
    },
    "2574": {
      "op": "app_params_get AppAddress",
      "defined_out": [
        "check%1#0",
        "tmp%2#0",
        "txn.LastLog#0",
        "value%1#0"
      ],
      "stack_out": [
        "txn.LastLog#0",
        "tmp%2#0",
        "value%1#0",
        "check%1#0"
      ]
    },
    "2576": {
      "error": "application exists",
      "op": "assert // application exists",
      "stack_out": [
        "txn.LastLog#0",
        "tmp%2#0",
        "value%1#0"
      ]
    },
    "2577": {
      "op": "concat",
      "defined_out": [
        "tmp%3#3",
        "txn.LastLog#0"
      ],
      "stack_out": [
        "txn.LastLog#0",
        "tmp%3#3"
      ]
    },
    "2578": {
      "op": "==",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "2579": {
      "op": "assert",
      "stack_out": []
    },
    "2580": {
      "op": "intc_2 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "2581": {
      "op": "return",
      "stack_out": []
    },
    "2582": {
      "block": "main_test_void_route@8",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%37#0"
      ],
      "stack_out": [
        "tmp%37#0"
      ]
    },
    "2584": {
      "op": "!",
      "defined_out": [
        "tmp%38#0"
      ],
      "stack_out": [
        "tmp%38#0"
      ]
    },
    "2585": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "2586": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%39#0"
      ],
      "stack_out": [
        "tmp%39#0"
      ]
    },
    "2588": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "2589": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[1]%5#0"
      ],
      "stack_out": [
        "reinterpret_bytes[1]%5#0"
      ]
    },
    "2592": {
      "op": "btoi",
      "defined_out": [
        "tmp%41#0"
      ],
      "stack_out": [
        "tmp%41#0"
      ]
    },
    "2593": {
      "op": "txnas Applications",
      "defined_out": [
        "app#0"
      ],
      "stack_out": [
        "app#0"
      ]
    },
    "2595": {
      "op": "itxn_begin"
    },
    "2596": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "app#0 (copy)"
      ],
      "stack_out": [
        "app#0",
        "app#0 (copy)"
      ]
    },
    "2597": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "app#0"
      ]
    },
    "2599": {
      "op": "bytec 7 // method \"log(string)void\"",
      "defined_out": [
        "Method(log(string)void)",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "Method(log(string)void)"
      ]
    },
    "2601": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0"
      ]
    },
    "2603": {
      "op": "pushbytes 0x0006576f726c6431",
      "defined_out": [
        "0x0006576f726c6431",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "0x0006576f726c6431"
      ]
    },
    "2613": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0"
      ]
    },
    "2615": {
      "op": "intc_1 // appl",
      "defined_out": [
        "app#0",
        "appl"
      ],
      "stack_out": [
        "app#0",
        "appl"
      ]
    },
    "2616": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "app#0"
      ]
    },
    "2618": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "0"
      ]
    },
    "2619": {
      "op": "itxn_field Fee",
      "stack_out": [
        "app#0"
      ]
    },
    "2621": {
      "op": "itxn_submit"
    },
    "2622": {
      "op": "itxn LastLog",
      "defined_out": [
        "app#0",
        "txn.LastLog#0"
      ],
      "stack_out": [
        "app#0",
        "txn.LastLog#0"
      ]
    },
    "2624": {
      "op": "pushbytes 0x576f726c6431",
      "defined_out": [
        "0x576f726c6431",
        "app#0",
        "txn.LastLog#0"
      ],
      "stack_out": [
        "app#0",
        "txn.LastLog#0",
        "0x576f726c6431"
      ]
    },
    "2632": {
      "op": "==",
      "defined_out": [
        "app#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "app#0",
        "tmp%0#0"
      ]
    },
    "2633": {
      "op": "assert",
      "stack_out": [
        "app#0"
      ]
    },
    "2634": {
      "op": "itxn_begin"
    },
    "2635": {
      "op": "dup",
      "stack_out": [
        "app#0",
        "app#0 (copy)"
      ]
    },
    "2636": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "app#0"
      ]
    },
    "2638": {
      "op": "bytec 7 // method \"log(string)void\"",
      "stack_out": [
        "app#0",
        "Method(log(string)void)"
      ]
    },
    "2640": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0"
      ]
    },
    "2642": {
      "op": "pushbytes 0x0006576f726c6432",
      "defined_out": [
        "0x0006576f726c6432",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "0x0006576f726c6432"
      ]
    },
    "2652": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0"
      ]
    },
    "2654": {
      "op": "intc_1 // appl",
      "stack_out": [
        "app#0",
        "appl"
      ]
    },
    "2655": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "app#0"
      ]
    },
    "2657": {
      "op": "intc_0 // 0",
      "stack_out": [
        "app#0",
        "0"
      ]
    },
    "2658": {
      "op": "itxn_field Fee",
      "stack_out": [
        "app#0"
      ]
    },
    "2660": {
      "op": "itxn_submit"
    },
    "2661": {
      "op": "itxn LastLog",
      "stack_out": [
        "app#0",
        "txn.LastLog#0"
      ]
    },
    "2663": {
      "op": "pushbytes 0x576f726c6432",
      "defined_out": [
        "0x576f726c6432",
        "app#0",
        "txn.LastLog#0"
      ],
      "stack_out": [
        "app#0",
        "txn.LastLog#0",
        "0x576f726c6432"
      ]
    },
    "2671": {
      "op": "==",
      "defined_out": [
        "app#0",
        "tmp%1#12"
      ],
      "stack_out": [
        "app#0",
        "tmp%1#12"
      ]
    },
    "2672": {
      "op": "assert",
      "stack_out": [
        "app#0"
      ]
    },
    "2673": {
      "op": "itxn_begin"
    },
    "2674": {
      "op": "dup",
      "stack_out": [
        "app#0",
        "app#0 (copy)"
      ]
    },
    "2675": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "app#0"
      ]
    },
    "2677": {
      "op": "bytec 7 // method \"log(string)void\"",
      "stack_out": [
        "app#0",
        "Method(log(string)void)"
      ]
    },
    "2679": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0"
      ]
    },
    "2681": {
      "op": "pushbytes 0x0006576f726c6433",
      "defined_out": [
        "0x0006576f726c6433",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "0x0006576f726c6433"
      ]
    },
    "2691": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0"
      ]
    },
    "2693": {
      "op": "intc_1 // appl",
      "stack_out": [
        "app#0",
        "appl"
      ]
    },
    "2694": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "app#0"
      ]
    },
    "2696": {
      "op": "intc_0 // 0",
      "stack_out": [
        "app#0",
        "0"
      ]
    },
    "2697": {
      "op": "itxn_field Fee",
      "stack_out": [
        "app#0"
      ]
    },
    "2699": {
      "op": "itxn_submit"
    },
    "2700": {
      "op": "itxn LastLog",
      "stack_out": [
        "app#0",
        "txn.LastLog#0"
      ]
    },
    "2702": {
      "op": "pushbytes 0x576f726c6433",
      "defined_out": [
        "0x576f726c6433",
        "app#0",
        "txn.LastLog#0"
      ],
      "stack_out": [
        "app#0",
        "txn.LastLog#0",
        "0x576f726c6433"
      ]
    },
    "2710": {
      "op": "==",
      "defined_out": [
        "app#0",
        "tmp%2#1"
      ],
      "stack_out": [
        "app#0",
        "tmp%2#1"
      ]
    },
    "2711": {
      "op": "assert",
      "stack_out": [
        "app#0"
      ]
    },
    "2712": {
      "op": "itxn_begin"
    },
    "2713": {
      "op": "itxn_field ApplicationID",
      "stack_out": []
    },
    "2715": {
      "op": "bytec 7 // method \"log(string)void\"",
      "stack_out": [
        "Method(log(string)void)"
      ]
    },
    "2717": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "2719": {
      "op": "pushbytes 0x0006576f726c6434",
      "defined_out": [
        "0x0006576f726c6434"
      ],
      "stack_out": [
        "0x0006576f726c6434"
      ]
    },
    "2729": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "2731": {
      "op": "intc_1 // appl",
      "stack_out": [
        "appl"
      ]
    },
    "2732": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "2734": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0"
      ]
    },
    "2735": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "2737": {
      "op": "itxn_submit"
    },
    "2738": {
      "op": "itxn LastLog",
      "stack_out": [
        "txn.LastLog#0"
      ]
    },
    "2740": {
      "op": "pushbytes 0x576f726c6434",
      "defined_out": [
        "0x576f726c6434",
        "txn.LastLog#0"
      ],
      "stack_out": [
        "txn.LastLog#0",
        "0x576f726c6434"
      ]
    },
    "2748": {
      "op": "==",
      "defined_out": [
        "tmp%3#1"
      ],
      "stack_out": [
        "tmp%3#1"
      ]
    },
    "2749": {
      "op": "assert",
      "stack_out": []
    },
    "2750": {
      "op": "intc_2 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "2751": {
      "op": "return",
      "stack_out": []
    },
    "2752": {
      "block": "main_test_15plus_args_route@7",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%31#0"
      ],
      "stack_out": [
        "tmp%31#0"
      ]
    },
    "2754": {
      "op": "!",
      "defined_out": [
        "tmp%32#0"
      ],
      "stack_out": [
        "tmp%32#0"
      ]
    },
    "2755": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "2756": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%33#0"
      ],
      "stack_out": [
        "tmp%33#0"
      ]
    },
    "2758": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "2759": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[1]%4#0"
      ],
      "stack_out": [
        "reinterpret_bytes[1]%4#0"
      ]
    },
    "2762": {
      "op": "btoi",
      "defined_out": [
        "tmp%35#0"
      ],
      "stack_out": [
        "tmp%35#0"
      ]
    },
    "2763": {
      "op": "txnas Applications",
      "defined_out": [
        "app#0"
      ],
      "stack_out": [
        "app#0"
      ]
    },
    "2765": {
      "op": "itxn_begin"
    },
    "2766": {
      "op": "itxn_field ApplicationID",
      "stack_out": []
    },
    "2768": {
      "op": "pushbytes 0xba0b4381 // method \"return_args_after_14th(uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint8,uint8,uint8,uint8,(uint8,uint8,uint8,uint8),uint8)byte[]\"",
      "defined_out": [
        "Method(return_args_after_14th(uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint8,uint8,uint8,uint8,(uint8,uint8,uint8,uint8),uint8)byte[])"
      ],
      "stack_out": [
        "Method(return_args_after_14th(uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint8,uint8,uint8,uint8,(uint8,uint8,uint8,uint8),uint8)byte[])"
      ]
    },
    "2774": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "2776": {
      "op": "bytec_2 // 0x0000000000000001",
      "defined_out": [
        "0x0000000000000001"
      ],
      "stack_out": [
        "0x0000000000000001"
      ]
    },
    "2777": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "2779": {
      "op": "bytec 26 // 0x0000000000000002",
      "defined_out": [
        "0x0000000000000002"
      ],
      "stack_out": [
        "0x0000000000000002"
      ]
    },
    "2781": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "2783": {
      "op": "bytec 12 // 0x0000000000000003",
      "defined_out": [
        "0x0000000000000003"
      ],
      "stack_out": [
        "0x0000000000000003"
      ]
    },
    "2785": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "2787": {
      "op": "pushbytes 0x0000000000000004",
      "defined_out": [
        "0x0000000000000004"
      ],
      "stack_out": [
        "0x0000000000000004"
      ]
    },
    "2797": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "2799": {
      "op": "pushbytes 0x0000000000000005",
      "defined_out": [
        "0x0000000000000005"
      ],
      "stack_out": [
        "0x0000000000000005"
      ]
    },
    "2809": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "2811": {
      "op": "pushbytes 0x0000000000000006",
      "defined_out": [
        "0x0000000000000006"
      ],
      "stack_out": [
        "0x0000000000000006"
      ]
    },
    "2821": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "2823": {
      "op": "pushbytes 0x0000000000000007",
      "defined_out": [
        "0x0000000000000007"
      ],
      "stack_out": [
        "0x0000000000000007"
      ]
    },
    "2833": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "2835": {
      "op": "pushbytes 0x0000000000000008",
      "defined_out": [
        "0x0000000000000008"
      ],
      "stack_out": [
        "0x0000000000000008"
      ]
    },
    "2845": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "2847": {
      "op": "pushbytes 0x0000000000000009",
      "defined_out": [
        "0x0000000000000009"
      ],
      "stack_out": [
        "0x0000000000000009"
      ]
    },
    "2857": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "2859": {
      "op": "pushbytes 0x000000000000000a",
      "defined_out": [
        "0x000000000000000a"
      ],
      "stack_out": [
        "0x000000000000000a"
      ]
    },
    "2869": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "2871": {
      "op": "pushbytes 0x000000000000000b",
      "defined_out": [
        "0x000000000000000b"
      ],
      "stack_out": [
        "0x000000000000000b"
      ]
    },
    "2881": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "2883": {
      "op": "pushbytes 0x000000000000000c",
      "defined_out": [
        "0x000000000000000c"
      ],
      "stack_out": [
        "0x000000000000000c"
      ]
    },
    "2893": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "2895": {
      "op": "pushbytes 0x000000000000000d",
      "defined_out": [
        "0x000000000000000d"
      ],
      "stack_out": [
        "0x000000000000000d"
      ]
    },
    "2905": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "2907": {
      "op": "pushbytes 0x000000000000000e",
      "defined_out": [
        "0x000000000000000e"
      ],
      "stack_out": [
        "0x000000000000000e"
      ]
    },
    "2917": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "2919": {
      "op": "bytec 27 // 0x0f101112deadbeef14",
      "defined_out": [
        "0x0f101112deadbeef14"
      ],
      "stack_out": [
        "0x0f101112deadbeef14"
      ]
    },
    "2921": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "2923": {
      "op": "intc_1 // appl",
      "defined_out": [
        "appl"
      ],
      "stack_out": [
        "appl"
      ]
    },
    "2924": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "2926": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "2927": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "2929": {
      "op": "itxn_submit"
    },
    "2930": {
      "op": "itxn LastLog",
      "defined_out": [
        "awst_tmp%0#0"
      ],
      "stack_out": [
        "awst_tmp%0#0"
      ]
    },
    "2932": {
      "op": "dup",
      "defined_out": [
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ]
    },
    "2933": {
      "op": "extract 0 4",
      "defined_out": [
        "awst_tmp%0#0",
        "tmp%1#1"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "tmp%1#1"
      ]
    },
    "2936": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "awst_tmp%0#0",
        "tmp%1#1"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "tmp%1#1",
        "0x151f7c75"
      ]
    },
    "2937": {
      "op": "==",
      "defined_out": [
        "awst_tmp%0#0",
        "tmp%2#1"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "tmp%2#1"
      ]
    },
    "2938": {
      "error": "ARC4 prefix is valid",
      "op": "assert // ARC4 prefix is valid",
      "stack_out": [
        "awst_tmp%0#0"
      ]
    },
    "2939": {
      "op": "extract 6 0",
      "defined_out": [
        "tmp%3#3"
      ],
      "stack_out": [
        "tmp%3#3"
      ]
    },
    "2942": {
      "op": "bytec 27 // 0x0f101112deadbeef14",
      "stack_out": [
        "tmp%3#3",
        "0x0f101112deadbeef14"
      ]
    },
    "2944": {
      "op": "==",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "2945": {
      "op": "assert",
      "stack_out": []
    },
    "2946": {
      "op": "intc_2 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "2947": {
      "op": "return",
      "stack_out": []
    },
    "2948": {
      "block": "main_test_arg_conversion_route@6",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%25#0"
      ],
      "stack_out": [
        "tmp%25#0"
      ]
    },
    "2950": {
      "op": "!",
      "defined_out": [
        "tmp%26#0"
      ],
      "stack_out": [
        "tmp%26#0"
      ]
    },
    "2951": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "2952": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%27#0"
      ],
      "stack_out": [
        "tmp%27#0"
      ]
    },
    "2954": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "2955": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[1]%3#0"
      ],
      "stack_out": [
        "reinterpret_bytes[1]%3#0"
      ]
    },
    "2958": {
      "op": "btoi",
      "defined_out": [
        "tmp%29#0"
      ],
      "stack_out": [
        "tmp%29#0"
      ]
    },
    "2959": {
      "op": "txnas Applications",
      "defined_out": [
        "app#0"
      ],
      "stack_out": [
        "app#0"
      ]
    },
    "2961": {
      "op": "itxn_begin"
    },
    "2962": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "app#0 (copy)"
      ],
      "stack_out": [
        "app#0",
        "app#0 (copy)"
      ]
    },
    "2963": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "app#0"
      ]
    },
    "2965": {
      "op": "bytec 7 // method \"log(string)void\"",
      "defined_out": [
        "Method(log(string)void)",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "Method(log(string)void)"
      ]
    },
    "2967": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0"
      ]
    },
    "2969": {
      "op": "pushbytes 0x000a636f6e76657274656431",
      "defined_out": [
        "0x000a636f6e76657274656431",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "0x000a636f6e76657274656431"
      ]
    },
    "2983": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0"
      ]
    },
    "2985": {
      "op": "intc_1 // appl",
      "defined_out": [
        "app#0",
        "appl"
      ],
      "stack_out": [
        "app#0",
        "appl"
      ]
    },
    "2986": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "app#0"
      ]
    },
    "2988": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "0"
      ]
    },
    "2989": {
      "op": "itxn_field Fee",
      "stack_out": [
        "app#0"
      ]
    },
    "2991": {
      "op": "itxn_submit"
    },
    "2992": {
      "op": "itxn LastLog",
      "defined_out": [
        "app#0",
        "txn.LastLog#0"
      ],
      "stack_out": [
        "app#0",
        "txn.LastLog#0"
      ]
    },
    "2994": {
      "op": "pushbytes 0x636f6e76657274656431",
      "defined_out": [
        "0x636f6e76657274656431",
        "app#0",
        "txn.LastLog#0"
      ],
      "stack_out": [
        "app#0",
        "txn.LastLog#0",
        "0x636f6e76657274656431"
      ]
    },
    "3006": {
      "op": "==",
      "defined_out": [
        "app#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "app#0",
        "tmp%0#0"
      ]
    },
    "3007": {
      "op": "assert",
      "stack_out": [
        "app#0"
      ]
    },
    "3008": {
      "op": "itxn_begin"
    },
    "3009": {
      "op": "dup",
      "stack_out": [
        "app#0",
        "app#0 (copy)"
      ]
    },
    "3010": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "app#0"
      ]
    },
    "3012": {
      "op": "pushbytes 0x3c1058d9 // method \"log(uint64)void\"",
      "defined_out": [
        "Method(log(uint64)void)",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "Method(log(uint64)void)"
      ]
    },
    "3018": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0"
      ]
    },
    "3020": {
      "op": "bytec 26 // 0x0000000000000002",
      "defined_out": [
        "0x0000000000000002",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "0x0000000000000002"
      ]
    },
    "3022": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0"
      ]
    },
    "3024": {
      "op": "intc_1 // appl",
      "stack_out": [
        "app#0",
        "appl"
      ]
    },
    "3025": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "app#0"
      ]
    },
    "3027": {
      "op": "intc_0 // 0",
      "stack_out": [
        "app#0",
        "0"
      ]
    },
    "3028": {
      "op": "itxn_field Fee",
      "stack_out": [
        "app#0"
      ]
    },
    "3030": {
      "op": "itxn_submit"
    },
    "3031": {
      "op": "itxn LastLog",
      "stack_out": [
        "app#0",
        "txn.LastLog#0"
      ]
    },
    "3033": {
      "op": "intc_3 // 2",
      "defined_out": [
        "2",
        "app#0",
        "txn.LastLog#0"
      ],
      "stack_out": [
        "app#0",
        "txn.LastLog#0",
        "2"
      ]
    },
    "3034": {
      "op": "itob",
      "defined_out": [
        "app#0",
        "tmp%1#1",
        "txn.LastLog#0"
      ],
      "stack_out": [
        "app#0",
        "txn.LastLog#0",
        "tmp%1#1"
      ]
    },
    "3035": {
      "op": "==",
      "defined_out": [
        "app#0",
        "tmp%2#1"
      ],
      "stack_out": [
        "app#0",
        "tmp%2#1"
      ]
    },
    "3036": {
      "op": "assert",
      "stack_out": [
        "app#0"
      ]
    },
    "3037": {
      "op": "itxn_begin"
    },
    "3038": {
      "op": "dup",
      "stack_out": [
        "app#0",
        "app#0 (copy)"
      ]
    },
    "3039": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "app#0"
      ]
    },
    "3041": {
      "op": "pushbytes 0x6af45930 // method \"log(uint512)void\"",
      "defined_out": [
        "Method(log(uint512)void)",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "Method(log(uint512)void)"
      ]
    },
    "3047": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0"
      ]
    },
    "3049": {
      "op": "bytec 28 // 0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000003",
      "defined_out": [
        "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000003",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000003"
      ]
    },
    "3051": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0"
      ]
    },
    "3053": {
      "op": "intc_1 // appl",
      "stack_out": [
        "app#0",
        "appl"
      ]
    },
    "3054": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "app#0"
      ]
    },
    "3056": {
      "op": "intc_0 // 0",
      "stack_out": [
        "app#0",
        "0"
      ]
    },
    "3057": {
      "op": "itxn_field Fee",
      "stack_out": [
        "app#0"
      ]
    },
    "3059": {
      "op": "itxn_submit"
    },
    "3060": {
      "op": "itxn LastLog",
      "stack_out": [
        "app#0",
        "txn.LastLog#0"
      ]
    },
    "3062": {
      "op": "bytec 28 // 0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000003",
      "stack_out": [
        "app#0",
        "txn.LastLog#0",
        "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000003"
      ]
    },
    "3064": {
      "op": "==",
      "defined_out": [
        "app#0",
        "tmp%6#1"
      ],
      "stack_out": [
        "app#0",
        "tmp%6#1"
      ]
    },
    "3065": {
      "op": "assert",
      "stack_out": [
        "app#0"
      ]
    },
    "3066": {
      "op": "itxn_begin"
    },
    "3067": {
      "op": "dup",
      "stack_out": [
        "app#0",
        "app#0 (copy)"
      ]
    },
    "3068": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "app#0"
      ]
    },
    "3070": {
      "op": "pushbytes 0xb500e111 // method \"log(byte[])void\"",
      "defined_out": [
        "Method(log(byte[])void)",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "Method(log(byte[])void)"
      ]
    },
    "3076": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0"
      ]
    },
    "3078": {
      "op": "pushbytes 0x000134",
      "defined_out": [
        "0x000134",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "0x000134"
      ]
    },
    "3083": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0"
      ]
    },
    "3085": {
      "op": "intc_1 // appl",
      "stack_out": [
        "app#0",
        "appl"
      ]
    },
    "3086": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "app#0"
      ]
    },
    "3088": {
      "op": "intc_0 // 0",
      "stack_out": [
        "app#0",
        "0"
      ]
    },
    "3089": {
      "op": "itxn_field Fee",
      "stack_out": [
        "app#0"
      ]
    },
    "3091": {
      "op": "itxn_submit"
    },
    "3092": {
      "op": "itxn LastLog",
      "stack_out": [
        "app#0",
        "txn.LastLog#0"
      ]
    },
    "3094": {
      "op": "pushbytes 0x34",
      "defined_out": [
        "0x34",
        "app#0",
        "txn.LastLog#0"
      ],
      "stack_out": [
        "app#0",
        "txn.LastLog#0",
        "0x34"
      ]
    },
    "3097": {
      "op": "==",
      "defined_out": [
        "app#0",
        "tmp%7#1"
      ],
      "stack_out": [
        "app#0",
        "tmp%7#1"
      ]
    },
    "3098": {
      "op": "assert",
      "stack_out": [
        "app#0"
      ]
    },
    "3099": {
      "op": "itxn_begin"
    },
    "3100": {
      "op": "itxn_field ApplicationID",
      "stack_out": []
    },
    "3102": {
      "op": "pushbytes 0x6eed7ec3 // method \"log(bool)void\"",
      "defined_out": [
        "Method(log(bool)void)"
      ],
      "stack_out": [
        "Method(log(bool)void)"
      ]
    },
    "3108": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "3110": {
      "op": "pushbytes 0x80",
      "defined_out": [
        "0x80"
      ],
      "stack_out": [
        "0x80"
      ]
    },
    "3113": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "3115": {
      "op": "intc_1 // appl",
      "stack_out": [
        "appl"
      ]
    },
    "3116": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "3118": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0"
      ]
    },
    "3119": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "3121": {
      "op": "itxn_submit"
    },
    "3122": {
      "op": "itxn LastLog",
      "stack_out": [
        "txn.LastLog#0"
      ]
    },
    "3124": {
      "op": "pushbytes 0x54727565",
      "defined_out": [
        "0x54727565",
        "txn.LastLog#0"
      ],
      "stack_out": [
        "txn.LastLog#0",
        "0x54727565"
      ]
    },
    "3130": {
      "op": "==",
      "defined_out": [
        "tmp%8#1"
      ],
      "stack_out": [
        "tmp%8#1"
      ]
    },
    "3131": {
      "op": "assert",
      "stack_out": []
    },
    "3132": {
      "op": "intc_2 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "3133": {
      "op": "return",
      "stack_out": []
    },
    "3134": {
      "block": "main_test_method_overload_route@5",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%19#0"
      ],
      "stack_out": [
        "tmp%19#0"
      ]
    },
    "3136": {
      "op": "!",
      "defined_out": [
        "tmp%20#0"
      ],
      "stack_out": [
        "tmp%20#0"
      ]
    },
    "3137": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "3138": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%21#0"
      ],
      "stack_out": [
        "tmp%21#0"
      ]
    },
    "3140": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "3141": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[1]%2#0"
      ],
      "stack_out": [
        "reinterpret_bytes[1]%2#0"
      ]
    },
    "3144": {
      "op": "btoi",
      "defined_out": [
        "tmp%23#0"
      ],
      "stack_out": [
        "tmp%23#0"
      ]
    },
    "3145": {
      "op": "txnas Applications",
      "defined_out": [
        "app#0"
      ],
      "stack_out": [
        "app#0"
      ]
    },
    "3147": {
      "op": "itxn_begin"
    },
    "3148": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "app#0 (copy)"
      ],
      "stack_out": [
        "app#0",
        "app#0 (copy)"
      ]
    },
    "3149": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "app#0"
      ]
    },
    "3151": {
      "op": "bytec_3 // method \"echo(string)string\"",
      "defined_out": [
        "Method(echo(string)string)",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "Method(echo(string)string)"
      ]
    },
    "3152": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0"
      ]
    },
    "3154": {
      "op": "pushbytes 0x000e7479706564202b2069676e6f7265",
      "defined_out": [
        "0x000e7479706564202b2069676e6f7265",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "0x000e7479706564202b2069676e6f7265"
      ]
    },
    "3172": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0"
      ]
    },
    "3174": {
      "op": "intc_1 // appl",
      "defined_out": [
        "app#0",
        "appl"
      ],
      "stack_out": [
        "app#0",
        "appl"
      ]
    },
    "3175": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "app#0"
      ]
    },
    "3177": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "0"
      ]
    },
    "3178": {
      "op": "itxn_field Fee",
      "stack_out": [
        "app#0"
      ]
    },
    "3180": {
      "op": "itxn_submit"
    },
    "3181": {
      "op": "itxn LastLog",
      "defined_out": [
        "app#0",
        "awst_tmp%0#0"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0"
      ]
    },
    "3183": {
      "op": "extract 0 4",
      "defined_out": [
        "app#0",
        "tmp%1#1"
      ],
      "stack_out": [
        "app#0",
        "tmp%1#1"
      ]
    },
    "3186": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "app#0",
        "tmp%1#1"
      ],
      "stack_out": [
        "app#0",
        "tmp%1#1",
        "0x151f7c75"
      ]
    },
    "3187": {
      "op": "==",
      "defined_out": [
        "app#0",
        "tmp%2#1"
      ],
      "stack_out": [
        "app#0",
        "tmp%2#1"
      ]
    },
    "3188": {
      "error": "ARC4 prefix is valid",
      "op": "assert // ARC4 prefix is valid",
      "stack_out": [
        "app#0"
      ]
    },
    "3189": {
      "op": "itxn LastLog",
      "defined_out": [
        "app#0",
        "awst_tmp%1#0"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%1#0"
      ]
    },
    "3191": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "awst_tmp%1#0",
        "awst_tmp%1#0 (copy)"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%1#0",
        "awst_tmp%1#0 (copy)"
      ]
    },
    "3192": {
      "op": "extract 4 0",
      "defined_out": [
        "app#0",
        "awst_tmp%1#0",
        "tmp%3#3"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%1#0",
        "tmp%3#3"
      ]
    },
    "3195": {
      "op": "swap",
      "stack_out": [
        "app#0",
        "tmp%3#3",
        "awst_tmp%1#0"
      ]
    },
    "3196": {
      "op": "extract 0 4",
      "defined_out": [
        "app#0",
        "tmp%3#3",
        "tmp%4#12"
      ],
      "stack_out": [
        "app#0",
        "tmp%3#3",
        "tmp%4#12"
      ]
    },
    "3199": {
      "op": "bytec_0 // 0x151f7c75",
      "stack_out": [
        "app#0",
        "tmp%3#3",
        "tmp%4#12",
        "0x151f7c75"
      ]
    },
    "3200": {
      "op": "==",
      "defined_out": [
        "app#0",
        "tmp%3#3",
        "tmp%5#2"
      ],
      "stack_out": [
        "app#0",
        "tmp%3#3",
        "tmp%5#2"
      ]
    },
    "3201": {
      "error": "ARC4 prefix is valid",
      "op": "assert // ARC4 prefix is valid",
      "stack_out": [
        "app#0",
        "tmp%3#3"
      ]
    },
    "3202": {
      "op": "pushbytes 0x00146563686f3a207479706564202b2069676e6f7265",
      "defined_out": [
        "0x00146563686f3a207479706564202b2069676e6f7265",
        "app#0",
        "tmp%3#3"
      ],
      "stack_out": [
        "app#0",
        "tmp%3#3",
        "0x00146563686f3a207479706564202b2069676e6f7265"
      ]
    },
    "3226": {
      "op": "==",
      "defined_out": [
        "app#0",
        "tmp%6#1"
      ],
      "stack_out": [
        "app#0",
        "tmp%6#1"
      ]
    },
    "3227": {
      "op": "assert",
      "stack_out": [
        "app#0"
      ]
    },
    "3228": {
      "op": "itxn_begin"
    },
    "3229": {
      "op": "dup",
      "stack_out": [
        "app#0",
        "app#0 (copy)"
      ]
    },
    "3230": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "app#0"
      ]
    },
    "3232": {
      "op": "bytec_3 // method \"echo(string)string\"",
      "stack_out": [
        "app#0",
        "Method(echo(string)string)"
      ]
    },
    "3233": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0"
      ]
    },
    "3235": {
      "op": "pushbytes 0x0010756e7479706564202b2069676e6f7265",
      "defined_out": [
        "0x0010756e7479706564202b2069676e6f7265",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "0x0010756e7479706564202b2069676e6f7265"
      ]
    },
    "3255": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0"
      ]
    },
    "3257": {
      "op": "intc_1 // appl",
      "stack_out": [
        "app#0",
        "appl"
      ]
    },
    "3258": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "app#0"
      ]
    },
    "3260": {
      "op": "intc_0 // 0",
      "stack_out": [
        "app#0",
        "0"
      ]
    },
    "3261": {
      "op": "itxn_field Fee",
      "stack_out": [
        "app#0"
      ]
    },
    "3263": {
      "op": "itxn_submit"
    },
    "3264": {
      "op": "itxn LastLog",
      "defined_out": [
        "app#0",
        "awst_tmp%2#0"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%2#0"
      ]
    },
    "3266": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "awst_tmp%2#0",
        "awst_tmp%2#0 (copy)"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%2#0",
        "awst_tmp%2#0 (copy)"
      ]
    },
    "3267": {
      "op": "extract 4 0",
      "defined_out": [
        "app#0",
        "awst_tmp%2#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%2#0",
        "tmp%7#0"
      ]
    },
    "3270": {
      "op": "swap",
      "stack_out": [
        "app#0",
        "tmp%7#0",
        "awst_tmp%2#0"
      ]
    },
    "3271": {
      "op": "extract 0 4",
      "defined_out": [
        "app#0",
        "tmp%7#0",
        "tmp%8#3"
      ],
      "stack_out": [
        "app#0",
        "tmp%7#0",
        "tmp%8#3"
      ]
    },
    "3274": {
      "op": "bytec_0 // 0x151f7c75",
      "stack_out": [
        "app#0",
        "tmp%7#0",
        "tmp%8#3",
        "0x151f7c75"
      ]
    },
    "3275": {
      "op": "==",
      "defined_out": [
        "app#0",
        "tmp%7#0",
        "tmp%9#3"
      ],
      "stack_out": [
        "app#0",
        "tmp%7#0",
        "tmp%9#3"
      ]
    },
    "3276": {
      "error": "ARC4 prefix is valid",
      "op": "assert // ARC4 prefix is valid",
      "stack_out": [
        "app#0",
        "tmp%7#0"
      ]
    },
    "3277": {
      "op": "pushbytes 0x00166563686f3a20756e7479706564202b2069676e6f7265",
      "defined_out": [
        "0x00166563686f3a20756e7479706564202b2069676e6f7265",
        "app#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "app#0",
        "tmp%7#0",
        "0x00166563686f3a20756e7479706564202b2069676e6f7265"
      ]
    },
    "3303": {
      "op": "==",
      "defined_out": [
        "app#0",
        "tmp%10#2"
      ],
      "stack_out": [
        "app#0",
        "tmp%10#2"
      ]
    },
    "3304": {
      "op": "assert",
      "stack_out": [
        "app#0"
      ]
    },
    "3305": {
      "op": "itxn_begin"
    },
    "3306": {
      "op": "dup",
      "stack_out": [
        "app#0",
        "app#0 (copy)"
      ]
    },
    "3307": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "app#0"
      ]
    },
    "3309": {
      "op": "bytec_3 // method \"echo(string)string\"",
      "stack_out": [
        "app#0",
        "Method(echo(string)string)"
      ]
    },
    "3310": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0"
      ]
    },
    "3312": {
      "op": "pushbytes 0x00057475706c65",
      "defined_out": [
        "0x00057475706c65",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "0x00057475706c65"
      ]
    },
    "3321": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0"
      ]
    },
    "3323": {
      "op": "intc_1 // appl",
      "stack_out": [
        "app#0",
        "appl"
      ]
    },
    "3324": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "app#0"
      ]
    },
    "3326": {
      "op": "intc_0 // 0",
      "stack_out": [
        "app#0",
        "0"
      ]
    },
    "3327": {
      "op": "itxn_field Fee",
      "stack_out": [
        "app#0"
      ]
    },
    "3329": {
      "op": "itxn_submit"
    },
    "3330": {
      "op": "itxn LastLog",
      "defined_out": [
        "app#0",
        "awst_tmp%3#0"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%3#0"
      ]
    },
    "3332": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "awst_tmp%3#0",
        "awst_tmp%3#0 (copy)"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%3#0",
        "awst_tmp%3#0 (copy)"
      ]
    },
    "3333": {
      "op": "extract 4 0",
      "defined_out": [
        "app#0",
        "awst_tmp%3#0",
        "result.0#0"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%3#0",
        "result.0#0"
      ]
    },
    "3336": {
      "op": "swap",
      "stack_out": [
        "app#0",
        "result.0#0",
        "awst_tmp%3#0"
      ]
    },
    "3337": {
      "op": "extract 0 4",
      "defined_out": [
        "app#0",
        "result.0#0",
        "tmp%12#7"
      ],
      "stack_out": [
        "app#0",
        "result.0#0",
        "tmp%12#7"
      ]
    },
    "3340": {
      "op": "bytec_0 // 0x151f7c75",
      "stack_out": [
        "app#0",
        "result.0#0",
        "tmp%12#7",
        "0x151f7c75"
      ]
    },
    "3341": {
      "op": "==",
      "defined_out": [
        "app#0",
        "result.0#0",
        "tmp%13#2"
      ],
      "stack_out": [
        "app#0",
        "result.0#0",
        "tmp%13#2"
      ]
    },
    "3342": {
      "error": "ARC4 prefix is valid",
      "op": "assert // ARC4 prefix is valid",
      "stack_out": [
        "app#0",
        "result.0#0"
      ]
    },
    "3343": {
      "op": "itxn LastLog",
      "defined_out": [
        "app#0",
        "result.0#0",
        "result.1.LastLog#0"
      ],
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1.LastLog#0"
      ]
    },
    "3345": {
      "op": "swap",
      "stack_out": [
        "app#0",
        "result.1.LastLog#0",
        "result.0#0"
      ]
    },
    "3346": {
      "op": "bytec 29 // 0x000b6563686f3a207475706c65",
      "defined_out": [
        "0x000b6563686f3a207475706c65",
        "app#0",
        "result.0#0",
        "result.1.LastLog#0"
      ],
      "stack_out": [
        "app#0",
        "result.1.LastLog#0",
        "result.0#0",
        "0x000b6563686f3a207475706c65"
      ]
    },
    "3348": {
      "op": "==",
      "defined_out": [
        "app#0",
        "result.1.LastLog#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "app#0",
        "result.1.LastLog#0",
        "tmp%14#0"
      ]
    },
    "3349": {
      "op": "assert",
      "stack_out": [
        "app#0",
        "result.1.LastLog#0"
      ]
    },
    "3350": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "result.1.LastLog#0",
        "result.1.LastLog#0 (copy)"
      ],
      "stack_out": [
        "app#0",
        "result.1.LastLog#0",
        "result.1.LastLog#0 (copy)"
      ]
    },
    "3351": {
      "op": "extract 4 0",
      "defined_out": [
        "app#0",
        "result.1.LastLog#0",
        "tmp%15#4"
      ],
      "stack_out": [
        "app#0",
        "result.1.LastLog#0",
        "tmp%15#4"
      ]
    },
    "3354": {
      "op": "swap",
      "stack_out": [
        "app#0",
        "tmp%15#4",
        "result.1.LastLog#0"
      ]
    },
    "3355": {
      "op": "extract 0 4",
      "defined_out": [
        "app#0",
        "tmp%15#4",
        "tmp%16#2"
      ],
      "stack_out": [
        "app#0",
        "tmp%15#4",
        "tmp%16#2"
      ]
    },
    "3358": {
      "op": "bytec_0 // 0x151f7c75",
      "stack_out": [
        "app#0",
        "tmp%15#4",
        "tmp%16#2",
        "0x151f7c75"
      ]
    },
    "3359": {
      "op": "==",
      "defined_out": [
        "app#0",
        "tmp%15#4",
        "tmp%17#3"
      ],
      "stack_out": [
        "app#0",
        "tmp%15#4",
        "tmp%17#3"
      ]
    },
    "3360": {
      "error": "ARC4 prefix is valid",
      "op": "assert // ARC4 prefix is valid",
      "stack_out": [
        "app#0",
        "tmp%15#4"
      ]
    },
    "3361": {
      "op": "bytec 29 // 0x000b6563686f3a207475706c65",
      "stack_out": [
        "app#0",
        "tmp%15#4",
        "0x000b6563686f3a207475706c65"
      ]
    },
    "3363": {
      "op": "==",
      "defined_out": [
        "app#0",
        "tmp%18#1"
      ],
      "stack_out": [
        "app#0",
        "tmp%18#1"
      ]
    },
    "3364": {
      "op": "assert",
      "stack_out": [
        "app#0"
      ]
    },
    "3365": {
      "op": "itxn_begin"
    },
    "3366": {
      "op": "itxn_field ApplicationID",
      "stack_out": []
    },
    "3368": {
      "op": "bytec_3 // method \"echo(string)string\"",
      "stack_out": [
        "Method(echo(string)string)"
      ]
    },
    "3369": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "3371": {
      "op": "pushbytes 0x0007756e7479706564",
      "defined_out": [
        "0x0007756e7479706564"
      ],
      "stack_out": [
        "0x0007756e7479706564"
      ]
    },
    "3382": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "3384": {
      "op": "intc_1 // appl",
      "stack_out": [
        "appl"
      ]
    },
    "3385": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "3387": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0"
      ]
    },
    "3388": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "3390": {
      "op": "itxn_submit"
    },
    "3391": {
      "op": "itxn LastLog",
      "defined_out": [
        "txn_result.LastLog#0"
      ],
      "stack_out": [
        "txn_result.LastLog#0"
      ]
    },
    "3393": {
      "op": "dup",
      "defined_out": [
        "txn_result.LastLog#0",
        "txn_result.LastLog#0 (copy)"
      ],
      "stack_out": [
        "txn_result.LastLog#0",
        "txn_result.LastLog#0 (copy)"
      ]
    },
    "3394": {
      "op": "extract 4 0",
      "defined_out": [
        "tmp%19#3",
        "txn_result.LastLog#0"
      ],
      "stack_out": [
        "txn_result.LastLog#0",
        "tmp%19#3"
      ]
    },
    "3397": {
      "op": "swap",
      "stack_out": [
        "tmp%19#3",
        "txn_result.LastLog#0"
      ]
    },
    "3398": {
      "op": "extract 0 4",
      "defined_out": [
        "tmp%19#3",
        "tmp%20#4"
      ],
      "stack_out": [
        "tmp%19#3",
        "tmp%20#4"
      ]
    },
    "3401": {
      "op": "bytec_0 // 0x151f7c75",
      "stack_out": [
        "tmp%19#3",
        "tmp%20#4",
        "0x151f7c75"
      ]
    },
    "3402": {
      "op": "==",
      "defined_out": [
        "tmp%19#3",
        "tmp%21#1"
      ],
      "stack_out": [
        "tmp%19#3",
        "tmp%21#1"
      ]
    },
    "3403": {
      "error": "ARC4 prefix is valid",
      "op": "assert // ARC4 prefix is valid",
      "stack_out": [
        "tmp%19#3"
      ]
    },
    "3404": {
      "op": "pushbytes 0x000d6563686f3a20756e7479706564",
      "defined_out": [
        "0x000d6563686f3a20756e7479706564",
        "tmp%19#3"
      ],
      "stack_out": [
        "tmp%19#3",
        "0x000d6563686f3a20756e7479706564"
      ]
    },
    "3421": {
      "op": "==",
      "defined_out": [
        "tmp%22#1"
      ],
      "stack_out": [
        "tmp%22#1"
      ]
    },
    "3422": {
      "op": "assert",
      "stack_out": []
    },
    "3423": {
      "op": "intc_2 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "3424": {
      "op": "return",
      "stack_out": []
    },
    "3425": {
      "block": "main_test_method_selector_kinds_route@4",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%13#0"
      ],
      "stack_out": [
        "tmp%13#0"
      ]
    },
    "3427": {
      "op": "!",
      "defined_out": [
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%14#0"
      ]
    },
    "3428": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "3429": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%15#0"
      ],
      "stack_out": [
        "tmp%15#0"
      ]
    },
    "3431": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "3432": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[1]%1#0"
      ],
      "stack_out": [
        "reinterpret_bytes[1]%1#0"
      ]
    },
    "3435": {
      "op": "btoi",
      "defined_out": [
        "tmp%17#0"
      ],
      "stack_out": [
        "tmp%17#0"
      ]
    },
    "3436": {
      "op": "txnas Applications",
      "defined_out": [
        "app#0"
      ],
      "stack_out": [
        "app#0"
      ]
    },
    "3438": {
      "op": "itxn_begin"
    },
    "3439": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "app#0 (copy)"
      ],
      "stack_out": [
        "app#0",
        "app#0 (copy)"
      ]
    },
    "3440": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "app#0"
      ]
    },
    "3442": {
      "op": "bytec_3 // method \"echo(string)string\"",
      "defined_out": [
        "Method(echo(string)string)",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "Method(echo(string)string)"
      ]
    },
    "3443": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0"
      ]
    },
    "3445": {
      "op": "pushbytes 0x00057465737431",
      "defined_out": [
        "0x00057465737431",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "0x00057465737431"
      ]
    },
    "3454": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0"
      ]
    },
    "3456": {
      "op": "intc_1 // appl",
      "defined_out": [
        "app#0",
        "appl"
      ],
      "stack_out": [
        "app#0",
        "appl"
      ]
    },
    "3457": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "app#0"
      ]
    },
    "3459": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "0"
      ]
    },
    "3460": {
      "op": "itxn_field Fee",
      "stack_out": [
        "app#0"
      ]
    },
    "3462": {
      "op": "itxn_submit"
    },
    "3463": {
      "op": "itxn LastLog",
      "defined_out": [
        "app#0",
        "awst_tmp%0#0"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0"
      ]
    },
    "3465": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ]
    },
    "3466": {
      "op": "extract 4 0",
      "defined_out": [
        "app#0",
        "awst_tmp%0#0",
        "result#4"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "result#4"
      ]
    },
    "3469": {
      "op": "swap",
      "stack_out": [
        "app#0",
        "result#4",
        "awst_tmp%0#0"
      ]
    },
    "3470": {
      "op": "extract 0 4",
      "defined_out": [
        "app#0",
        "result#4",
        "tmp%2#0"
      ],
      "stack_out": [
        "app#0",
        "result#4",
        "tmp%2#0"
      ]
    },
    "3473": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "app#0",
        "result#4",
        "tmp%2#0"
      ],
      "stack_out": [
        "app#0",
        "result#4",
        "tmp%2#0",
        "0x151f7c75"
      ]
    },
    "3474": {
      "op": "==",
      "defined_out": [
        "app#0",
        "result#4",
        "tmp%3#1"
      ],
      "stack_out": [
        "app#0",
        "result#4",
        "tmp%3#1"
      ]
    },
    "3475": {
      "error": "ARC4 prefix is valid",
      "op": "assert // ARC4 prefix is valid",
      "stack_out": [
        "app#0",
        "result#4"
      ]
    },
    "3476": {
      "op": "pushbytes 0x000b6563686f3a207465737431",
      "defined_out": [
        "0x000b6563686f3a207465737431",
        "app#0",
        "result#4"
      ],
      "stack_out": [
        "app#0",
        "result#4",
        "0x000b6563686f3a207465737431"
      ]
    },
    "3491": {
      "op": "==",
      "defined_out": [
        "app#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "app#0",
        "tmp%4#0"
      ]
    },
    "3492": {
      "op": "assert",
      "stack_out": [
        "app#0"
      ]
    },
    "3493": {
      "op": "itxn_begin"
    },
    "3494": {
      "op": "dup",
      "stack_out": [
        "app#0",
        "app#0 (copy)"
      ]
    },
    "3495": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "app#0"
      ]
    },
    "3497": {
      "op": "bytec_3 // method \"echo(string)string\"",
      "stack_out": [
        "app#0",
        "Method(echo(string)string)"
      ]
    },
    "3498": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0"
      ]
    },
    "3500": {
      "op": "pushbytes 0x00057465737432",
      "defined_out": [
        "0x00057465737432",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "0x00057465737432"
      ]
    },
    "3509": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0"
      ]
    },
    "3511": {
      "op": "intc_1 // appl",
      "stack_out": [
        "app#0",
        "appl"
      ]
    },
    "3512": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "app#0"
      ]
    },
    "3514": {
      "op": "intc_0 // 0",
      "stack_out": [
        "app#0",
        "0"
      ]
    },
    "3515": {
      "op": "itxn_field Fee",
      "stack_out": [
        "app#0"
      ]
    },
    "3517": {
      "op": "itxn_submit"
    },
    "3518": {
      "op": "itxn LastLog",
      "defined_out": [
        "app#0",
        "awst_tmp%1#0"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%1#0"
      ]
    },
    "3520": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "awst_tmp%1#0",
        "awst_tmp%1#0 (copy)"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%1#0",
        "awst_tmp%1#0 (copy)"
      ]
    },
    "3521": {
      "op": "extract 4 0",
      "stack_out": [
        "app#0",
        "awst_tmp%1#0",
        "result#4"
      ]
    },
    "3524": {
      "op": "swap",
      "stack_out": [
        "app#0",
        "result#4",
        "awst_tmp%1#0"
      ]
    },
    "3525": {
      "op": "extract 0 4",
      "defined_out": [
        "app#0",
        "result#4",
        "tmp%6#2"
      ],
      "stack_out": [
        "app#0",
        "result#4",
        "tmp%6#2"
      ]
    },
    "3528": {
      "op": "bytec_0 // 0x151f7c75",
      "stack_out": [
        "app#0",
        "result#4",
        "tmp%6#2",
        "0x151f7c75"
      ]
    },
    "3529": {
      "op": "==",
      "defined_out": [
        "app#0",
        "result#4",
        "tmp%7#1"
      ],
      "stack_out": [
        "app#0",
        "result#4",
        "tmp%7#1"
      ]
    },
    "3530": {
      "error": "ARC4 prefix is valid",
      "op": "assert // ARC4 prefix is valid",
      "stack_out": [
        "app#0",
        "result#4"
      ]
    },
    "3531": {
      "op": "pushbytes 0x000b6563686f3a207465737432",
      "defined_out": [
        "0x000b6563686f3a207465737432",
        "app#0",
        "result#4"
      ],
      "stack_out": [
        "app#0",
        "result#4",
        "0x000b6563686f3a207465737432"
      ]
    },
    "3546": {
      "op": "==",
      "defined_out": [
        "app#0",
        "tmp%8#1"
      ],
      "stack_out": [
        "app#0",
        "tmp%8#1"
      ]
    },
    "3547": {
      "op": "assert",
      "stack_out": [
        "app#0"
      ]
    },
    "3548": {
      "op": "itxn_begin"
    },
    "3549": {
      "op": "dup",
      "stack_out": [
        "app#0",
        "app#0 (copy)"
      ]
    },
    "3550": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "app#0"
      ]
    },
    "3552": {
      "op": "bytec_3 // method \"echo(string)string\"",
      "stack_out": [
        "app#0",
        "Method(echo(string)string)"
      ]
    },
    "3553": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0"
      ]
    },
    "3555": {
      "op": "pushbytes 0x00057465737433",
      "defined_out": [
        "0x00057465737433",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "0x00057465737433"
      ]
    },
    "3564": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0"
      ]
    },
    "3566": {
      "op": "intc_1 // appl",
      "stack_out": [
        "app#0",
        "appl"
      ]
    },
    "3567": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "app#0"
      ]
    },
    "3569": {
      "op": "intc_0 // 0",
      "stack_out": [
        "app#0",
        "0"
      ]
    },
    "3570": {
      "op": "itxn_field Fee",
      "stack_out": [
        "app#0"
      ]
    },
    "3572": {
      "op": "itxn_submit"
    },
    "3573": {
      "op": "itxn LastLog",
      "defined_out": [
        "app#0",
        "awst_tmp%2#0"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%2#0"
      ]
    },
    "3575": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "awst_tmp%2#0",
        "awst_tmp%2#0 (copy)"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%2#0",
        "awst_tmp%2#0 (copy)"
      ]
    },
    "3576": {
      "op": "extract 4 0",
      "stack_out": [
        "app#0",
        "awst_tmp%2#0",
        "result#4"
      ]
    },
    "3579": {
      "op": "swap",
      "stack_out": [
        "app#0",
        "result#4",
        "awst_tmp%2#0"
      ]
    },
    "3580": {
      "op": "extract 0 4",
      "defined_out": [
        "app#0",
        "result#4",
        "tmp%10#1"
      ],
      "stack_out": [
        "app#0",
        "result#4",
        "tmp%10#1"
      ]
    },
    "3583": {
      "op": "bytec_0 // 0x151f7c75",
      "stack_out": [
        "app#0",
        "result#4",
        "tmp%10#1",
        "0x151f7c75"
      ]
    },
    "3584": {
      "op": "==",
      "defined_out": [
        "app#0",
        "result#4",
        "tmp%11#1"
      ],
      "stack_out": [
        "app#0",
        "result#4",
        "tmp%11#1"
      ]
    },
    "3585": {
      "error": "ARC4 prefix is valid",
      "op": "assert // ARC4 prefix is valid",
      "stack_out": [
        "app#0",
        "result#4"
      ]
    },
    "3586": {
      "op": "pushbytes 0x000b6563686f3a207465737433",
      "defined_out": [
        "0x000b6563686f3a207465737433",
        "app#0",
        "result#4"
      ],
      "stack_out": [
        "app#0",
        "result#4",
        "0x000b6563686f3a207465737433"
      ]
    },
    "3601": {
      "op": "==",
      "defined_out": [
        "app#0",
        "tmp%12#1"
      ],
      "stack_out": [
        "app#0",
        "tmp%12#1"
      ]
    },
    "3602": {
      "op": "assert",
      "stack_out": [
        "app#0"
      ]
    },
    "3603": {
      "op": "itxn_begin"
    },
    "3604": {
      "op": "dup",
      "stack_out": [
        "app#0",
        "app#0 (copy)"
      ]
    },
    "3605": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "app#0"
      ]
    },
    "3607": {
      "op": "bytec_3 // method \"echo(string)string\"",
      "stack_out": [
        "app#0",
        "Method(echo(string)string)"
      ]
    },
    "3608": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0"
      ]
    },
    "3610": {
      "op": "pushbytes 0x00057465737434",
      "defined_out": [
        "0x00057465737434",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "0x00057465737434"
      ]
    },
    "3619": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0"
      ]
    },
    "3621": {
      "op": "intc_1 // appl",
      "stack_out": [
        "app#0",
        "appl"
      ]
    },
    "3622": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "app#0"
      ]
    },
    "3624": {
      "op": "intc_0 // 0",
      "stack_out": [
        "app#0",
        "0"
      ]
    },
    "3625": {
      "op": "itxn_field Fee",
      "stack_out": [
        "app#0"
      ]
    },
    "3627": {
      "op": "itxn_submit"
    },
    "3628": {
      "op": "itxn LastLog",
      "defined_out": [
        "app#0",
        "awst_tmp%3#0"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%3#0"
      ]
    },
    "3630": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "awst_tmp%3#0",
        "awst_tmp%3#0 (copy)"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%3#0",
        "awst_tmp%3#0 (copy)"
      ]
    },
    "3631": {
      "op": "extract 4 0",
      "stack_out": [
        "app#0",
        "awst_tmp%3#0",
        "result#4"
      ]
    },
    "3634": {
      "op": "swap",
      "stack_out": [
        "app#0",
        "result#4",
        "awst_tmp%3#0"
      ]
    },
    "3635": {
      "op": "extract 0 4",
      "defined_out": [
        "app#0",
        "result#4",
        "tmp%14#1"
      ],
      "stack_out": [
        "app#0",
        "result#4",
        "tmp%14#1"
      ]
    },
    "3638": {
      "op": "bytec_0 // 0x151f7c75",
      "stack_out": [
        "app#0",
        "result#4",
        "tmp%14#1",
        "0x151f7c75"
      ]
    },
    "3639": {
      "op": "==",
      "defined_out": [
        "app#0",
        "result#4",
        "tmp%15#1"
      ],
      "stack_out": [
        "app#0",
        "result#4",
        "tmp%15#1"
      ]
    },
    "3640": {
      "error": "ARC4 prefix is valid",
      "op": "assert // ARC4 prefix is valid",
      "stack_out": [
        "app#0",
        "result#4"
      ]
    },
    "3641": {
      "op": "pushbytes 0x000b6563686f3a207465737434",
      "defined_out": [
        "0x000b6563686f3a207465737434",
        "app#0",
        "result#4"
      ],
      "stack_out": [
        "app#0",
        "result#4",
        "0x000b6563686f3a207465737434"
      ]
    },
    "3656": {
      "op": "==",
      "defined_out": [
        "app#0",
        "tmp%16#1"
      ],
      "stack_out": [
        "app#0",
        "tmp%16#1"
      ]
    },
    "3657": {
      "op": "assert",
      "stack_out": [
        "app#0"
      ]
    },
    "3658": {
      "op": "itxn_begin"
    },
    "3659": {
      "op": "itxn_field ApplicationID",
      "stack_out": []
    },
    "3661": {
      "op": "bytec_3 // method \"echo(string)string\"",
      "stack_out": [
        "Method(echo(string)string)"
      ]
    },
    "3662": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "3664": {
      "op": "pushbytes 0x00057465737435",
      "defined_out": [
        "0x00057465737435"
      ],
      "stack_out": [
        "0x00057465737435"
      ]
    },
    "3673": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "3675": {
      "op": "intc_1 // appl",
      "stack_out": [
        "appl"
      ]
    },
    "3676": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "3678": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0"
      ]
    },
    "3679": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "3681": {
      "op": "itxn_submit"
    },
    "3682": {
      "op": "itxn LastLog",
      "defined_out": [
        "awst_tmp%4#0"
      ],
      "stack_out": [
        "awst_tmp%4#0"
      ]
    },
    "3684": {
      "op": "dup",
      "defined_out": [
        "awst_tmp%4#0",
        "awst_tmp%4#0 (copy)"
      ],
      "stack_out": [
        "awst_tmp%4#0",
        "awst_tmp%4#0 (copy)"
      ]
    },
    "3685": {
      "op": "extract 4 0",
      "stack_out": [
        "awst_tmp%4#0",
        "result#4"
      ]
    },
    "3688": {
      "op": "swap",
      "stack_out": [
        "result#4",
        "awst_tmp%4#0"
      ]
    },
    "3689": {
      "op": "extract 0 4",
      "defined_out": [
        "result#4",
        "tmp%18#2"
      ],
      "stack_out": [
        "result#4",
        "tmp%18#2"
      ]
    },
    "3692": {
      "op": "bytec_0 // 0x151f7c75",
      "stack_out": [
        "result#4",
        "tmp%18#2",
        "0x151f7c75"
      ]
    },
    "3693": {
      "op": "==",
      "defined_out": [
        "result#4",
        "tmp%19#1"
      ],
      "stack_out": [
        "result#4",
        "tmp%19#1"
      ]
    },
    "3694": {
      "error": "ARC4 prefix is valid",
      "op": "assert // ARC4 prefix is valid",
      "stack_out": [
        "result#4"
      ]
    },
    "3695": {
      "op": "pushbytes 0x000b6563686f3a207465737435",
      "defined_out": [
        "0x000b6563686f3a207465737435",
        "result#4"
      ],
      "stack_out": [
        "result#4",
        "0x000b6563686f3a207465737435"
      ]
    },
    "3710": {
      "op": "==",
      "defined_out": [
        "tmp%20#0"
      ],
      "stack_out": [
        "tmp%20#0"
      ]
    },
    "3711": {
      "op": "assert",
      "stack_out": []
    },
    "3712": {
      "op": "intc_2 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "3713": {
      "op": "return",
      "stack_out": []
    },
    "3714": {
      "block": "main_test_is_a_b_route@3",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "3716": {
      "op": "!",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "3717": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "3718": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "3720": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "3721": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0"
      ]
    },
    "3724": {
      "op": "extract 2 0",
      "defined_out": [
        "a#0"
      ],
      "stack_out": [
        "a#0"
      ]
    },
    "3727": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "a#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "a#0",
        "tmp%9#0"
      ]
    },
    "3730": {
      "op": "extract 2 0",
      "defined_out": [
        "a#0",
        "b#0"
      ],
      "stack_out": [
        "a#0",
        "b#0"
      ]
    },
    "3733": {
      "op": "txna ApplicationArgs 3",
      "defined_out": [
        "a#0",
        "b#0",
        "reinterpret_bytes[1]%0#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "reinterpret_bytes[1]%0#0"
      ]
    },
    "3736": {
      "op": "btoi",
      "defined_out": [
        "a#0",
        "b#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "tmp%11#0"
      ]
    },
    "3737": {
      "op": "txnas Applications",
      "defined_out": [
        "a#0",
        "app#0",
        "b#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "app#0"
      ]
    },
    "3739": {
      "op": "itxn_begin"
    },
    "3740": {
      "op": "dig 2",
      "defined_out": [
        "a#0",
        "a#0 (copy)",
        "app#0",
        "b#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "app#0",
        "a#0 (copy)"
      ]
    },
    "3742": {
      "op": "len",
      "defined_out": [
        "a#0",
        "app#0",
        "b#0",
        "length%0#7"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "app#0",
        "length%0#7"
      ]
    },
    "3743": {
      "op": "itob",
      "defined_out": [
        "a#0",
        "app#0",
        "as_bytes%0#7",
        "b#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "app#0",
        "as_bytes%0#7"
      ]
    },
    "3744": {
      "op": "extract 6 2",
      "defined_out": [
        "a#0",
        "app#0",
        "b#0",
        "length_uint16%0#7"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "app#0",
        "length_uint16%0#7"
      ]
    },
    "3747": {
      "op": "uncover 3",
      "stack_out": [
        "b#0",
        "app#0",
        "length_uint16%0#7",
        "a#0"
      ]
    },
    "3749": {
      "op": "concat",
      "defined_out": [
        "app#0",
        "b#0",
        "encoded_value%0#7"
      ],
      "stack_out": [
        "b#0",
        "app#0",
        "encoded_value%0#7"
      ]
    },
    "3750": {
      "op": "dig 2",
      "defined_out": [
        "app#0",
        "b#0",
        "b#0 (copy)",
        "encoded_value%0#7"
      ],
      "stack_out": [
        "b#0",
        "app#0",
        "encoded_value%0#7",
        "b#0 (copy)"
      ]
    },
    "3752": {
      "op": "len",
      "defined_out": [
        "app#0",
        "b#0",
        "encoded_value%0#7",
        "length%1#5"
      ],
      "stack_out": [
        "b#0",
        "app#0",
        "encoded_value%0#7",
        "length%1#5"
      ]
    },
    "3753": {
      "op": "itob",
      "defined_out": [
        "app#0",
        "as_bytes%1#2",
        "b#0",
        "encoded_value%0#7"
      ],
      "stack_out": [
        "b#0",
        "app#0",
        "encoded_value%0#7",
        "as_bytes%1#2"
      ]
    },
    "3754": {
      "op": "extract 6 2",
      "defined_out": [
        "app#0",
        "b#0",
        "encoded_value%0#7",
        "length_uint16%1#5"
      ],
      "stack_out": [
        "b#0",
        "app#0",
        "encoded_value%0#7",
        "length_uint16%1#5"
      ]
    },
    "3757": {
      "op": "uncover 3",
      "stack_out": [
        "app#0",
        "encoded_value%0#7",
        "length_uint16%1#5",
        "b#0"
      ]
    },
    "3759": {
      "op": "concat",
      "defined_out": [
        "app#0",
        "encoded_value%0#7",
        "encoded_value%1#5"
      ],
      "stack_out": [
        "app#0",
        "encoded_value%0#7",
        "encoded_value%1#5"
      ]
    },
    "3760": {
      "op": "uncover 2",
      "stack_out": [
        "encoded_value%0#7",
        "encoded_value%1#5",
        "app#0"
      ]
    },
    "3762": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "encoded_value%0#7",
        "encoded_value%1#5"
      ]
    },
    "3764": {
      "op": "pushbytes 0xc77212bc // method \"is_a_b(byte[],byte[])void\"",
      "defined_out": [
        "Method(is_a_b(byte[],byte[])void)",
        "encoded_value%0#7",
        "encoded_value%1#5"
      ],
      "stack_out": [
        "encoded_value%0#7",
        "encoded_value%1#5",
        "Method(is_a_b(byte[],byte[])void)"
      ]
    },
    "3770": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "encoded_value%0#7",
        "encoded_value%1#5"
      ]
    },
    "3772": {
      "op": "swap",
      "stack_out": [
        "encoded_value%1#5",
        "encoded_value%0#7"
      ]
    },
    "3773": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "encoded_value%1#5"
      ]
    },
    "3775": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "3777": {
      "op": "intc_1 // appl",
      "defined_out": [
        "appl"
      ],
      "stack_out": [
        "appl"
      ]
    },
    "3778": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "3780": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "3781": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "3783": {
      "op": "itxn_submit"
    },
    "3784": {
      "op": "intc_2 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "3785": {
      "op": "return",
      "stack_out": []
    },
    "3786": {
      "block": "main_bare_routing@22",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%111#0"
      ],
      "stack_out": [
        "tmp%111#0"
      ]
    },
    "3788": {
      "op": "bnz main_after_if_else@26",
      "stack_out": []
    },
    "3791": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%112#0"
      ],
      "stack_out": [
        "tmp%112#0"
      ]
    },
    "3793": {
      "op": "!",
      "defined_out": [
        "tmp%113#0"
      ],
      "stack_out": [
        "tmp%113#0"
      ]
    },
    "3794": {
      "error": "can only call when creating",
      "op": "assert // can only call when creating",
      "stack_out": []
    },
    "3795": {
      "op": "intc_2 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "3796": {
      "op": "return",
      "stack_out": []
    }
  }
}