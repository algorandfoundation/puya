{
  "version": 3,
  "sources": [
    "../typed_c2c.py"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuBA;;AAAA;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AAwWK;;AAAA;AAAA;AAAA;;AAAA;AAxWL;;;AAAA;AAAA;;;AAAA;AAAA;AA0Wc;;AACA;;AAEQ;;;;;;;;;;;;;;;;AAAA;;;;AACqB;;;;AAAO;;;;AAAK;;;;AADjC;;;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;;;AAAA;AAAA;;AAAA;;;AAGP;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAP;AAEc;AAC4B;;AAAA;;;;;AAD5B;;;;;;;;;;;;;;;AAAA;;;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;;;AAAA;AAAA;;AAAA;;;AAGP;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAP;AAEc;;;;;;;;;;;;;;;;;AAAA;;;;AAC2B;;;;AAAO;;;;AAAK;;;;AADvC;;;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;;;AAAA;AAAA;;AAAA;;;AAGP;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAP;AAEc;;;;;AAAA;;;;;;;;;;;;;;;AAAA;;;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;;;AAAA;AAAA;;AAAA;;;AAGP;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAP;AAEc;;;;;;;;;;;;;;;;;AAAA;;;;AAEV;;;;AACA;;;;AACA;;;;AAJU;;;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;;;AAAA;AAAA;;AAAA;;;AAOP;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAP;AAEc;;;;;AAAA;;;;;;;;;;;;;AAAA;;;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;;;AAAA;AAAA;;AAAA;;;AAOP;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAP;AAzCH;;AAXA;;AAAA;AAAA;AAAA;;AAAA;AA7VL;;;AAAA;AAgWsB;;;AAAA;;;;;;;;AADR;;;;AACQ;;;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;AAKP;AAND;;AAMC;AAAP;AACO;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAPD;;AAOC;AAAP;AATH;;AAjBA;;AAAA;AAAA;AAAA;;AAAA;AA5UL;;;AAAA;AA8UuB;;;;AAAA;;;;AAEX;;;;AACA;;;;AAHW;;;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAMf;AACe;;;AAAA;;;;AAEX;;;;;;;;;;;;;;;;;;;;;AANA;;;;AAIW;;;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAMR;AAAP;AAfH;;AAVA;;AAAA;AAAA;AAAA;;AAAA;AAlUL;;;AAAA;AAoUuB;;;;AAAA;;;;AAAA;;;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;AACE;;AAAV;AAAP;AACoB;;;;AAAA;;;;AAAA;;;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AACE;;AAAf;AAAP;AAEA;;;AAAA;;;;AAAA;;;AAAA;;;AAAA;AAAA;;AAAA;;;AAAA;AAAA;AAAA;AAC4B;;AAArB;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAA4C;;AAA5C;AAAP;AARH;;AA9CA;;AAAA;AAAA;AAAA;;AAAA;AApRL;;;AAAA;AAuRsB;;;;AAAA;;;;AAEV;;;;AAFU;;;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;;;;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;;AAMP;;AAAM;;AAAN;AAAP;AACO;;AAAM;;AAAN;AAAP;AACO;;AAAS;AAAT;AAAP;AACO;AAAS;;AAAT;AAAP;AACgB;;AAAT;AAAP;AAGc;;;;AAAA;;;;AAEV;;;;AAFU;;;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;;;;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;;AAMP;;AAAM;;AAAN;AAAP;AACO;;AAbM;;AAaN;AAAP;AACO;;AAAS;AAAT;AAAP;AACO;AAAS;;AAAT;AAAP;AACgB;;AAAT;AAAP;AAGc;;;AAAA;;;;AAEV;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAFU;;;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;;;;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;;AAWP;;AAAM;;;;;;;;;;;AAAN;AAAP;AACO;;AAAM;;;;;;;;;;;;;AAAN;AAAP;AACO;;AAAS;;AAAT;AAAP;AACO;AAAS;;;;;;;;;;AAAT;AAAP;AACgB;;;;;;;;;;AAAT;AAAP;AA5CH;;AAlDA;;AAAA;AAAA;AAAA;;AAAA;AAlOL;;;AAAA;AAqOsB;;;;AAAA;;;;AAEV;;;;AACA;;;;AACA;;;AACA;;;AALU;;;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;;;;AAAA;AAAA;;;AAAA;;;;AAAA;AAAA;;AAAA;;;AASP;;AAAK;;AAAL;AAAP;AACO;;AAAK;;AAAL;AAAP;AACO;;AAAK;AAAL;AAAP;AACO;AAAM;;AAAN;AAAP;AAGgB;AAIZ;AAAA;;;;;AAJY;;;;AAbZ;;;;AACA;;;;;;AAiBA;;;AALY;;;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;;;;AAAA;AAAA;;;AAAA;;;;AAAA;AAAA;;AAAA;;;AAQT;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAP;AAGgB;;;;;AAAA;;;;AAxBZ;;;;AACA;;;;AA2BA;;;AACA;;;AALY;;;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;;;;AAAA;AAAA;;;AAAA;;;;AAAA;AAAA;;AAAA;;;AAQT;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAP;AAGqB;;;;;AAAA;;;;AAnCjB;;;;AACA;;;;AAsCA;;;AACA;;;AALiB;;;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;;;;AAAA;AAAA;;;AAAA;;;;AAAA;AAAA;;AAAA;;;AAQd;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAP;AAhDH;;AA3DA;;AAAA;AAAA;AAAA;;AAAA;AAvKL;;;AAAA;AA0KuB;;;;AAAA;;;;AAIX;;;;AACA;;;;AACA;;;AACA;;;AAPW;;;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;;;AAAA;AAAA;AAAA;AAUD;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;;AACP;;AAAA;;;AAAA;AAAY;;AAAZ;AAAP;AACO;;AAAA;;;AAAA;AAAY;;AAAZ;AAAP;AACO;;;;AAAA;AAAA;AAAY;AAAZ;AAAP;AACO;;AAAa;;AAAb;AAAP;AAGe;AAMX;AAAA;;;;;AANW;;;;AAbX;;;;AACA;;;;;;AAmBA;;;AAPW;;;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAUR;;AAAA;AAAP;AAGe;;;;;AAAA;;;;AA1BX;;;;AACA;;;;AA+BA;;;AACA;;;AAPW;;;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAUR;;AAAA;AAAP;AAGqB;;;;;AAAA;;;;AAvCjB;;;;AACA;;;;AA0CA;;;AACA;;;AALiB;;;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;;;;AAAA;AAAA;;;AAAA;;;;AAAA;AAAA;;AAAA;;;AAQd;;AAAA;;AAAA;AAAP;AACO;;AAAA;;AAAA;AAAP;AACO;;AAAA;AAAP;AACO;AAAP;AAzDH;;AAXA;;AAAA;AAAA;AAAA;;AAAA;AA5JL;;;AAAA;AA8JwB;;;;AAAA;;;;AAA0C;;;AAA1C;;;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AACT;AAAW;;AAAX;AAAP;AAEgB;;;;;AAAA;;;;AAA0C;;;AAA1C;;;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AACT;;AAAA;AAAP;AAEgB;;;;AAAA;;;;AAA0C;;;AAA1C;;;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AACT;AAAP;AATH;;AAXA;;AAAA;AAAA;AAAA;;AAAA;AAjJL;;;AAAA;AAmJwB;;;;AAAA;;;;AAAyC;;;AAAzC;;;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;AACT;AAAW;AAAX;AAAP;AAEgB;AAAyC;AAAA;;;;;AAAzC;;;;;;AAAA;;;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;AACT;;AAAA;AAAP;AAEgB;;;;AAAA;;;;AAAyC;;;AAAzC;;;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;AACT;AAAP;AATH;;AAbA;;AAAA;AAAA;AAAA;;AAAA;AApIL;;;AAAA;AAsIwB;;;;AAAA;;;;AAAwC;;;;AAAxC;;;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AACT;AAAW;;;;;;;;;AAAX;AAAP;AAEgB;;;;;AAAA;;;;AAHwC;;;;AAGxC;;;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AACT;;AAAA;AAAP;AAEgB;;;;AAAA;;;;AANwC;;;;AAMxC;;;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAGT;AAAP;AAXH;;AAXA;;AAAA;AAAA;AAAA;;AAAA;AAzHL;;;AAAA;AA2HwB;;;;AAAA;;;;AAAyC;;;;AAAzC;;;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AACT;AAAW;;;;;;;;;AAAX;AAAP;AAEgB;;;;;AAAA;;;;AAHyC;;;;AAGzC;;;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AACT;;AAAA;AAAP;AAEgB;;;;AAAA;;;;AANyC;;;;AAMzC;;;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AACT;AAAP;AATH;;AATA;;AAAA;AAAA;AAAA;;AAAA;AAhHL;;;AAAA;AAkHc;AAEF;;;;;AAFE;;;;;;;;;;AAAA;;;AAAA;;;AAAA;;;AAKiB;;AAAhB;AAAP;AAPH;;AAdA;;AAAA;AAAA;AAAA;;AAAA;AAlGL;;;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAoGc;AAGF;;;;;;AAHE;;;;;;;;;;;;;;;;;;AAAA;;;AAAA;;;AAAA;;;AASC;AAAA;;AAAA;AAAa;;AAAb;AAAwD;;AAAA;;AAAA;AAAxD;AADH;AADJ;AATH;;AAdA;;AAAA;AAAA;AAAA;;AAAA;AApFL;;;AAAA;AAsFc;;;;AAAA;;;;AAAgD;;;;;;;;;;;;AAAhD;;;AAAA;;;AAAA;;;AACiB;;;;;;;;AAAhB;AAAP;AAEM;;;;AAAA;;;;AAA4C;;;;;;;;;;;;AAA5C;;;AAAA;;;AAAA;;;AACiB;;;;;;;;AAAhB;AAAP;AAEM;;;;AAAA;;;;AAA+B;;;;;;;;;;;;AAA/B;;;AAAA;;;AAAA;;;AACiB;;;;;;;;AAAhB;AAAP;AAEM;;;AAAA;;;;AAAiC;;;;;;;;;;;;AAAjC;;;AAAA;;;AAAA;;;AACiB;;;;;;;;AAAhB;AAAP;AAZH;;AA5BA;;AAAA;AAAA;AAAA;;AAAA;AAxDL;;;AAAA;AA0DsB;;;AAAA;;;;;;;;AAEV;;;AACA;;;;AACA;;;;AACA;;;;;;;;;;;;AACA;;;;;;;;;;;;AACA;;;;;;;;;;;;AACA;;;;;;;;;;;;AACA;;;;;;;;;;;;AACA;;;;;;;;;;;;AACA;;;;;;;;;;;;AACA;;;;;;;;;;;;AACA;;;;;;;;;;;;AACA;;;;;;;;;;;;AACA;;;;;;;;;;;;AACA;;;;AAhBU;;;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAwBP;;;AAAiB;;AAAjB;AAAP;AA1BH;;AAjBA;;AAAA;AAAA;AAAA;;AAAA;AAvCL;;;AAAA;AAyCc;;;;AAAA;;;;AAAiC;;;;;;;;;;;;;;;;AAAjC;;;AAAA;;;AAAA;;;AACiB;;;;;;;;;;;;AAAhB;AAAP;AAEM;;;;AAAA;;;;;;;;AAAiC;;;;AAAjC;;;AAAA;;;AAAA;;;AACyB;AAAR;AAAhB;AAAP;AAEM;;;;AAAA;;;;;;;;AAAkC;;;;AAAlC;;;AAAA;;;AAAA;;;AACkB;;AAAjB;AAAP;AAEM;;;;AAAA;;;;;;;;AAAgC;;;;;;;AAAhC;;;AAAA;;;AAAA;;;AACiB;;;AAAhB;AAAP;AAEM;;;AAAA;;;;;;;;AAA+B;;;;;AAA/B;;;AAAA;;;AAAA;;;AACiB;;;;;;AAAhB;AAAP;AAfH;;AAfA;;AAAA;AAAA;AAAA;;AAAA;AAxBL;;;AAAA;AA0BQ;;;;AAAA;;;AAAiD;;;;;;;;;;;;;;;;;;;;AAAjD;;;AAAA;;;AAAA;AAAA;;AAAA;;;AAAA;AAAA;AAAA;AAC4B;;AAArB;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAA4C;;;;;;;;;;;;;;;;;;;;;;;;AAA5C;AAAP;AAEA;;;;AAAA;;;AAAoC;;;;;;;;;;;;;;;;;;;;;;AAApC;;;AAAA;;;AAAA;AAC4B;;AAArB;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAA4C;;;;;;;;;;;;;;;;;;;;;;;;;;AAA5C;AAAP;AAES;;;;AAAA;;;AAAiD;;;;;;;;;;;AAAjD;;;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;AACF;AAAa;;AAAb;AAAP;AACO;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AADa;;AACb;AAAP;AAEa;;;AAAA;;;AAAoC;;;;;;;;;;;;;AAApC;;;AAAA;;;AAAA;;;AACN;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAA6C;;;;;;;;;;;;;;;;;AAA7C;AAAP;AAbH;;AAdA;;AAAA;AAAA;AAAA;;AAAA;AAVL;;;AAAA;AAauB;;;;AAAA;;;AAA2B;;;;;;;;;;;AAA3B;;;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AACE;;;;;;;;;;;;;;;AAAV;AAAP;AACe;;;;AAAA;;;AAAiC;;;;;;;;;;;AAAjC;;;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AACE;;;;;;;;;;;;;;;AAAV;AAAP;AACe;;;;AAAA;;;AAAmC;;;;;;;;;;;AAAnC;;;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AACE;;;;;;;;;;;;;;;AAAV;AAAP;AACe;;;;AAAA;;;AAA2C;;;;;;;;;;;AAA3C;;;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AACE;;;;;;;;;;;;;;;AAAV;AAAP;AACe;;;AAAA;;;AAAiD;;;;;;;;;;;AAAjD;;;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AACE;;;;;;;;;;;;;;;AAAV;AAAP;AAZH;;AATA;;AAAA;AAAA;AAAA;;AAAA;AADL;;;AAAA;;;AAAA;;;AAAA;AAGQ;;;AAAA;;;;;;;;;;;;;AAAA;;;AAAA;;;AAAA;AAFH;;AADL;;AAAA;;;;;;;;",
  "op_pc_offset": 0,
  "pc_events": {
    "1": {
      "subroutine": "algopy.arc4.ARC4Contract.approval_program",
      "params": {},
      "block": "main",
      "stack_in": [],
      "op": "intcblock 0 6 1 2"
    },
    "7": {
      "op": "bytecblock 0x151f7c75 0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002 0x0000000000000001 0x9bf81913 0x16e03919 0x00027331 0x00026231 0x01 0x0000000000000001000a00056c6f672031 0xb4b4334e \"echo: s1\" 0xd6c2ac7f 0x00 0x48142d5e 0xb862ee19 0xab271ce4 0x0000000000000003 0x03 0xd8cc363b 0xa9fb6cf1 0x2659e818 0x000162 0x4a444c77 0x000173 0xddd07185 0x000000000000002a 0x00040010000400080002733100027332000000000000000100000000000000020012000133 0x00086563686f3a207332 0x6563686f3a2033 0x6563686f3a206231 0x0000000000000002 0x0f101112deadbeef14 0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000003 0x000b6563686f3a207475706c65"
    },
    "381": {
      "op": "txn NumAppArgs",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "383": {
      "op": "bz main_bare_routing@24",
      "stack_out": []
    },
    "386": {
      "op": "pushbytess 0x094418cd 0x31e8e212 0xb5dcf0ba 0xbf3b242b 0x063beac7 0xe9f3087d 0xc88920f9 0xc2f21b73 0x86052a5c 0xe85f2441 0x92082d08 0x6211cd59 0x19eed724 0x92f75ee2 0xe748ef8e 0xc7b94959 0x868e49e7 0xaccd5072 0xf7f3d8ac // method \"test_is_a_b(byte[],byte[],uint64)void\", method \"test_method_selector_kinds(uint64)void\", method \"test_method_overload(uint64)void\", method \"test_arg_conversion(uint64)void\", method \"test_15plus_args(uint64)void\", method \"test_void(uint64)void\", method \"test_ref_types(uint64,uint64)void\", method \"test_account_to_address(uint64)void\", method \"test_native_string(uint64)void\", method \"test_native_bytes(uint64)void\", method \"test_native_uint64(uint64)void\", method \"test_native_biguint(uint64)void\", method \"test_native_tuple(uint64)void\", method \"test_native_tuple_method_ref(uint64)void\", method \"test_nested_tuples(uint64)void\", method \"test_no_args(uint64)void\", method \"test_named_tuples(uint64)void\", method \"test_arc4_struct(uint64)void\", method \"test_resource_encoding(uint64,uint64)void\"",
      "defined_out": [
        "Method(test_15plus_args(uint64)void)",
        "Method(test_account_to_address(uint64)void)",
        "Method(test_arc4_struct(uint64)void)",
        "Method(test_arg_conversion(uint64)void)",
        "Method(test_is_a_b(byte[],byte[],uint64)void)",
        "Method(test_method_overload(uint64)void)",
        "Method(test_method_selector_kinds(uint64)void)",
        "Method(test_named_tuples(uint64)void)",
        "Method(test_native_biguint(uint64)void)",
        "Method(test_native_bytes(uint64)void)",
        "Method(test_native_string(uint64)void)",
        "Method(test_native_tuple(uint64)void)",
        "Method(test_native_tuple_method_ref(uint64)void)",
        "Method(test_native_uint64(uint64)void)",
        "Method(test_nested_tuples(uint64)void)",
        "Method(test_no_args(uint64)void)",
        "Method(test_ref_types(uint64,uint64)void)",
        "Method(test_resource_encoding(uint64,uint64)void)",
        "Method(test_void(uint64)void)"
      ],
      "stack_out": [
        "Method(test_is_a_b(byte[],byte[],uint64)void)",
        "Method(test_method_selector_kinds(uint64)void)",
        "Method(test_method_overload(uint64)void)",
        "Method(test_arg_conversion(uint64)void)",
        "Method(test_15plus_args(uint64)void)",
        "Method(test_void(uint64)void)",
        "Method(test_ref_types(uint64,uint64)void)",
        "Method(test_account_to_address(uint64)void)",
        "Method(test_native_string(uint64)void)",
        "Method(test_native_bytes(uint64)void)",
        "Method(test_native_uint64(uint64)void)",
        "Method(test_native_biguint(uint64)void)",
        "Method(test_native_tuple(uint64)void)",
        "Method(test_native_tuple_method_ref(uint64)void)",
        "Method(test_nested_tuples(uint64)void)",
        "Method(test_no_args(uint64)void)",
        "Method(test_named_tuples(uint64)void)",
        "Method(test_arc4_struct(uint64)void)",
        "Method(test_resource_encoding(uint64,uint64)void)"
      ]
    },
    "483": {
      "op": "txna ApplicationArgs 0",
      "defined_out": [
        "Method(test_15plus_args(uint64)void)",
        "Method(test_account_to_address(uint64)void)",
        "Method(test_arc4_struct(uint64)void)",
        "Method(test_arg_conversion(uint64)void)",
        "Method(test_is_a_b(byte[],byte[],uint64)void)",
        "Method(test_method_overload(uint64)void)",
        "Method(test_method_selector_kinds(uint64)void)",
        "Method(test_named_tuples(uint64)void)",
        "Method(test_native_biguint(uint64)void)",
        "Method(test_native_bytes(uint64)void)",
        "Method(test_native_string(uint64)void)",
        "Method(test_native_tuple(uint64)void)",
        "Method(test_native_tuple_method_ref(uint64)void)",
        "Method(test_native_uint64(uint64)void)",
        "Method(test_nested_tuples(uint64)void)",
        "Method(test_no_args(uint64)void)",
        "Method(test_ref_types(uint64,uint64)void)",
        "Method(test_resource_encoding(uint64,uint64)void)",
        "Method(test_void(uint64)void)",
        "tmp%2#0"
      ],
      "stack_out": [
        "Method(test_is_a_b(byte[],byte[],uint64)void)",
        "Method(test_method_selector_kinds(uint64)void)",
        "Method(test_method_overload(uint64)void)",
        "Method(test_arg_conversion(uint64)void)",
        "Method(test_15plus_args(uint64)void)",
        "Method(test_void(uint64)void)",
        "Method(test_ref_types(uint64,uint64)void)",
        "Method(test_account_to_address(uint64)void)",
        "Method(test_native_string(uint64)void)",
        "Method(test_native_bytes(uint64)void)",
        "Method(test_native_uint64(uint64)void)",
        "Method(test_native_biguint(uint64)void)",
        "Method(test_native_tuple(uint64)void)",
        "Method(test_native_tuple_method_ref(uint64)void)",
        "Method(test_nested_tuples(uint64)void)",
        "Method(test_no_args(uint64)void)",
        "Method(test_named_tuples(uint64)void)",
        "Method(test_arc4_struct(uint64)void)",
        "Method(test_resource_encoding(uint64,uint64)void)",
        "tmp%2#0"
      ]
    },
    "486": {
      "op": "match main_test_is_a_b_route@3 main_test_method_selector_kinds_route@4 main_test_method_overload_route@5 main_test_arg_conversion_route@6 main_test_15plus_args_route@7 main_test_void_route@8 main_test_ref_types_route@9 main_test_account_to_address_route@10 main_test_native_string_route@11 main_test_native_bytes_route@12 main_test_native_uint64_route@13 main_test_native_biguint_route@14 main_test_native_tuple_route@15 main_test_native_tuple_method_ref_route@16 main_test_nested_tuples_route@17 main_test_no_args_route@18 main_test_named_tuples_route@19 main_test_arc4_struct_route@20 main_test_resource_encoding_route@21",
      "stack_out": []
    },
    "526": {
      "block": "main_after_if_else@28",
      "stack_in": [],
      "op": "intc_0 // 0",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "527": {
      "op": "return",
      "stack_out": []
    },
    "528": {
      "block": "main_test_resource_encoding_route@21",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%96#0"
      ],
      "stack_out": [
        "tmp%96#0"
      ]
    },
    "530": {
      "op": "!",
      "defined_out": [
        "tmp%97#0"
      ],
      "stack_out": [
        "tmp%97#0"
      ]
    },
    "531": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "532": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%98#0"
      ],
      "stack_out": [
        "tmp%98#0"
      ]
    },
    "534": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "535": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded(uint64)%19#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint64)%19#0"
      ]
    },
    "538": {
      "op": "btoi",
      "defined_out": [
        "app_to_call#0"
      ],
      "stack_out": [
        "app_to_call#0"
      ]
    },
    "539": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0"
      ],
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0"
      ]
    },
    "542": {
      "op": "dup",
      "defined_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "reinterpret_Encoded(uint64)%20#0 (copy)"
      ],
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "reinterpret_Encoded(uint64)%20#0 (copy)"
      ]
    },
    "543": {
      "op": "btoi",
      "defined_out": [
        "app_to_call#0",
        "asset#0",
        "reinterpret_Encoded(uint64)%20#0"
      ],
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0"
      ]
    },
    "544": {
      "op": "global CurrentApplicationID",
      "defined_out": [
        "app#0",
        "app_to_call#0",
        "asset#0",
        "reinterpret_Encoded(uint64)%20#0"
      ],
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0"
      ]
    },
    "546": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "acc#0",
        "app#0",
        "app_to_call#0",
        "asset#0",
        "reinterpret_Encoded(uint64)%20#0"
      ],
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0"
      ]
    },
    "548": {
      "op": "itxn_begin"
    },
    "549": {
      "op": "dig 4",
      "defined_out": [
        "acc#0",
        "app#0",
        "app_to_call#0",
        "app_to_call#0 (copy)",
        "asset#0",
        "reinterpret_Encoded(uint64)%20#0"
      ],
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "app_to_call#0 (copy)"
      ]
    },
    "551": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0"
      ]
    },
    "553": {
      "op": "dig 2",
      "defined_out": [
        "acc#0",
        "app#0",
        "app_to_call#0",
        "asset#0",
        "asset#0 (copy)",
        "reinterpret_Encoded(uint64)%20#0"
      ],
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "asset#0 (copy)"
      ]
    },
    "555": {
      "op": "itxn_field Assets",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0"
      ]
    },
    "557": {
      "op": "dig 1",
      "defined_out": [
        "acc#0",
        "app#0",
        "app#0 (copy)",
        "app_to_call#0",
        "asset#0",
        "reinterpret_Encoded(uint64)%20#0"
      ],
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "app#0 (copy)"
      ]
    },
    "559": {
      "op": "itxn_field Applications",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0"
      ]
    },
    "561": {
      "op": "dup",
      "defined_out": [
        "acc#0",
        "acc#0 (copy)",
        "app#0",
        "app_to_call#0",
        "asset#0",
        "reinterpret_Encoded(uint64)%20#0"
      ],
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "acc#0 (copy)"
      ]
    },
    "562": {
      "op": "itxn_field Accounts",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0"
      ]
    },
    "564": {
      "op": "bytec 11 // method \"echo_resource_by_index(asset,application,account)(uint64,uint64,address)\"",
      "defined_out": [
        "Method(echo_resource_by_index(asset,application,account)(uint64,uint64,address))",
        "acc#0",
        "app#0",
        "app_to_call#0",
        "asset#0",
        "reinterpret_Encoded(uint64)%20#0"
      ],
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "Method(echo_resource_by_index(asset,application,account)(uint64,uint64,address))"
      ]
    },
    "566": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0"
      ]
    },
    "568": {
      "op": "bytec 12 // 0x00",
      "defined_out": [
        "0x00",
        "acc#0",
        "app#0",
        "app_to_call#0",
        "asset#0",
        "reinterpret_Encoded(uint64)%20#0"
      ],
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "0x00"
      ]
    },
    "570": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0"
      ]
    },
    "572": {
      "op": "bytec 7 // 0x01",
      "defined_out": [
        "0x01",
        "acc#0",
        "app#0",
        "app_to_call#0",
        "asset#0",
        "reinterpret_Encoded(uint64)%20#0"
      ],
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "0x01"
      ]
    },
    "574": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0"
      ]
    },
    "576": {
      "op": "bytec 7 // 0x01",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "0x01"
      ]
    },
    "578": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0"
      ]
    },
    "580": {
      "op": "intc_1 // appl",
      "defined_out": [
        "acc#0",
        "app#0",
        "app_to_call#0",
        "appl",
        "asset#0",
        "reinterpret_Encoded(uint64)%20#0"
      ],
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "appl"
      ]
    },
    "581": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0"
      ]
    },
    "583": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "acc#0",
        "app#0",
        "app_to_call#0",
        "asset#0",
        "reinterpret_Encoded(uint64)%20#0"
      ],
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "0"
      ]
    },
    "584": {
      "op": "itxn_field Fee",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0"
      ]
    },
    "586": {
      "op": "itxn_submit"
    },
    "587": {
      "op": "itxn LastLog",
      "defined_out": [
        "acc#0",
        "app#0",
        "app_to_call#0",
        "asset#0",
        "awst_tmp%0#0",
        "reinterpret_Encoded(uint64)%20#0"
      ],
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "awst_tmp%0#0"
      ]
    },
    "589": {
      "op": "dup",
      "defined_out": [
        "acc#0",
        "app#0",
        "app_to_call#0",
        "asset#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)",
        "reinterpret_Encoded(uint64)%20#0"
      ],
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ]
    },
    "590": {
      "op": "extract 0 4",
      "defined_out": [
        "acc#0",
        "app#0",
        "app_to_call#0",
        "asset#0",
        "awst_tmp%0#0",
        "reinterpret_Encoded(uint64)%20#0",
        "tmp%3#1"
      ],
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "awst_tmp%0#0",
        "tmp%3#1"
      ]
    },
    "593": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "acc#0",
        "app#0",
        "app_to_call#0",
        "asset#0",
        "awst_tmp%0#0",
        "reinterpret_Encoded(uint64)%20#0",
        "tmp%3#1"
      ],
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "awst_tmp%0#0",
        "tmp%3#1",
        "0x151f7c75"
      ]
    },
    "594": {
      "op": "==",
      "defined_out": [
        "acc#0",
        "app#0",
        "app_to_call#0",
        "asset#0",
        "awst_tmp%0#0",
        "reinterpret_Encoded(uint64)%20#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "awst_tmp%0#0",
        "tmp%4#0"
      ]
    },
    "595": {
      "error": "application log value is not the result of an ABI return",
      "op": "assert // application log value is not the result of an ABI return",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "awst_tmp%0#0"
      ]
    },
    "596": {
      "op": "dup",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ]
    },
    "597": {
      "op": "pushint 4 // 4",
      "defined_out": [
        "4",
        "acc#0",
        "app#0",
        "app_to_call#0",
        "asset#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)",
        "reinterpret_Encoded(uint64)%20#0"
      ],
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)",
        "4"
      ]
    },
    "599": {
      "op": "extract_uint64",
      "defined_out": [
        "acc#0",
        "app#0",
        "app_to_call#0",
        "asset#0",
        "awst_tmp%0#0",
        "reinterpret_Encoded(uint64)%20#0",
        "result.0#0"
      ],
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "awst_tmp%0#0",
        "result.0#0"
      ]
    },
    "600": {
      "op": "dig 1",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "awst_tmp%0#0",
        "result.0#0",
        "awst_tmp%0#0 (copy)"
      ]
    },
    "602": {
      "op": "pushint 12 // 12",
      "defined_out": [
        "12",
        "acc#0",
        "app#0",
        "app_to_call#0",
        "asset#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)",
        "reinterpret_Encoded(uint64)%20#0",
        "result.0#0"
      ],
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "awst_tmp%0#0",
        "result.0#0",
        "awst_tmp%0#0 (copy)",
        "12"
      ]
    },
    "604": {
      "op": "extract_uint64",
      "defined_out": [
        "acc#0",
        "app#0",
        "app_to_call#0",
        "asset#0",
        "awst_tmp%0#0",
        "reinterpret_Encoded(uint64)%20#0",
        "result.0#0",
        "result.1#0"
      ],
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "awst_tmp%0#0",
        "result.0#0",
        "result.1#0"
      ]
    },
    "605": {
      "op": "uncover 2",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "result.0#0",
        "result.1#0",
        "awst_tmp%0#0"
      ]
    },
    "607": {
      "op": "extract 20 32",
      "defined_out": [
        "acc#0",
        "app#0",
        "app_to_call#0",
        "asset#0",
        "reinterpret_Encoded(uint64)%20#0",
        "result.0#0",
        "result.1#0",
        "result.2#0"
      ],
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "result.0#0",
        "result.1#0",
        "result.2#0"
      ]
    },
    "610": {
      "op": "uncover 2",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "result.1#0",
        "result.2#0",
        "result.0#0"
      ]
    },
    "612": {
      "op": "dig 5",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "result.1#0",
        "result.2#0",
        "result.0#0",
        "asset#0 (copy)"
      ]
    },
    "614": {
      "op": "==",
      "defined_out": [
        "acc#0",
        "app#0",
        "app_to_call#0",
        "asset#0",
        "reinterpret_Encoded(uint64)%20#0",
        "result.1#0",
        "result.2#0",
        "tmp%8#1"
      ],
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "result.1#0",
        "result.2#0",
        "tmp%8#1"
      ]
    },
    "615": {
      "op": "uncover 2",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "result.2#0",
        "tmp%8#1",
        "result.1#0"
      ]
    },
    "617": {
      "op": "dig 4",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "result.2#0",
        "tmp%8#1",
        "result.1#0",
        "app#0 (copy)"
      ]
    },
    "619": {
      "op": "==",
      "defined_out": [
        "acc#0",
        "app#0",
        "app_to_call#0",
        "asset#0",
        "reinterpret_Encoded(uint64)%20#0",
        "result.2#0",
        "tmp%8#1",
        "tmp%9#1"
      ],
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "result.2#0",
        "tmp%8#1",
        "tmp%9#1"
      ]
    },
    "620": {
      "op": "&&",
      "defined_out": [
        "acc#0",
        "app#0",
        "app_to_call#0",
        "asset#0",
        "reinterpret_Encoded(uint64)%20#0",
        "result.2#0",
        "tmp%10#1"
      ],
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "result.2#0",
        "tmp%10#1"
      ]
    },
    "621": {
      "op": "swap",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "tmp%10#1",
        "result.2#0"
      ]
    },
    "622": {
      "op": "dig 2",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "tmp%10#1",
        "result.2#0",
        "acc#0 (copy)"
      ]
    },
    "624": {
      "op": "==",
      "defined_out": [
        "acc#0",
        "app#0",
        "app_to_call#0",
        "asset#0",
        "reinterpret_Encoded(uint64)%20#0",
        "tmp%10#1",
        "tmp%11#0"
      ],
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "tmp%10#1",
        "tmp%11#0"
      ]
    },
    "625": {
      "op": "&&",
      "defined_out": [
        "acc#0",
        "app#0",
        "app_to_call#0",
        "asset#0",
        "reinterpret_Encoded(uint64)%20#0",
        "tmp%12#1"
      ],
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "tmp%12#1"
      ]
    },
    "626": {
      "error": "expected echo to return same resources",
      "op": "assert // expected echo to return same resources",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0"
      ]
    },
    "627": {
      "op": "itxn_begin"
    },
    "628": {
      "op": "dig 1",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "app#0 (copy)"
      ]
    },
    "630": {
      "op": "itob",
      "defined_out": [
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "app#0",
        "app_to_call#0",
        "asset#0",
        "reinterpret_Encoded(uint64)%20#0"
      ],
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0"
      ]
    },
    "631": {
      "op": "dig 5",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "app_to_call#0 (copy)"
      ]
    },
    "633": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0"
      ]
    },
    "635": {
      "op": "bytec 13 // method \"echo_resource_by_value(uint64,uint64,address)(uint64,uint64,address)\"",
      "defined_out": [
        "Method(echo_resource_by_value(uint64,uint64,address)(uint64,uint64,address))",
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "app#0",
        "app_to_call#0",
        "asset#0",
        "reinterpret_Encoded(uint64)%20#0"
      ],
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "Method(echo_resource_by_value(uint64,uint64,address)(uint64,uint64,address))"
      ]
    },
    "637": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0"
      ]
    },
    "639": {
      "op": "dig 4",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "reinterpret_Encoded(uint64)%20#0 (copy)"
      ]
    },
    "641": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0"
      ]
    },
    "643": {
      "op": "dup",
      "defined_out": [
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "aggregate%val_as_bytes%7#0 (copy)",
        "app#0",
        "app_to_call#0",
        "asset#0",
        "reinterpret_Encoded(uint64)%20#0"
      ],
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "aggregate%val_as_bytes%7#0 (copy)"
      ]
    },
    "644": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0"
      ]
    },
    "646": {
      "op": "dig 1",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "acc#0 (copy)"
      ]
    },
    "648": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0"
      ]
    },
    "650": {
      "op": "intc_1 // appl",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "appl"
      ]
    },
    "651": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0"
      ]
    },
    "653": {
      "op": "intc_0 // 0",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "0"
      ]
    },
    "654": {
      "op": "itxn_field Fee",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0"
      ]
    },
    "656": {
      "op": "itxn_submit"
    },
    "657": {
      "op": "itxn LastLog",
      "defined_out": [
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "app#0",
        "app_to_call#0",
        "asset#0",
        "awst_tmp%1#0",
        "reinterpret_Encoded(uint64)%20#0"
      ],
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "awst_tmp%1#0"
      ]
    },
    "659": {
      "op": "dup",
      "defined_out": [
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "app#0",
        "app_to_call#0",
        "asset#0",
        "awst_tmp%1#0",
        "awst_tmp%1#0 (copy)",
        "reinterpret_Encoded(uint64)%20#0"
      ],
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "awst_tmp%1#0",
        "awst_tmp%1#0 (copy)"
      ]
    },
    "660": {
      "op": "extract 0 4",
      "defined_out": [
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "app#0",
        "app_to_call#0",
        "asset#0",
        "awst_tmp%1#0",
        "reinterpret_Encoded(uint64)%20#0",
        "tmp%17#1"
      ],
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "awst_tmp%1#0",
        "tmp%17#1"
      ]
    },
    "663": {
      "op": "bytec_0 // 0x151f7c75",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "awst_tmp%1#0",
        "tmp%17#1",
        "0x151f7c75"
      ]
    },
    "664": {
      "op": "==",
      "defined_out": [
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "app#0",
        "app_to_call#0",
        "asset#0",
        "awst_tmp%1#0",
        "reinterpret_Encoded(uint64)%20#0",
        "tmp%18#1"
      ],
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "awst_tmp%1#0",
        "tmp%18#1"
      ]
    },
    "665": {
      "error": "application log value is not the result of an ABI return",
      "op": "assert // application log value is not the result of an ABI return",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "awst_tmp%1#0"
      ]
    },
    "666": {
      "op": "dup",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "awst_tmp%1#0",
        "awst_tmp%1#0 (copy)"
      ]
    },
    "667": {
      "op": "pushint 4 // 4",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "awst_tmp%1#0",
        "awst_tmp%1#0 (copy)",
        "4"
      ]
    },
    "669": {
      "op": "extract_uint64",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "awst_tmp%1#0",
        "result.0#0"
      ]
    },
    "670": {
      "op": "dig 1",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "awst_tmp%1#0",
        "result.0#0",
        "awst_tmp%1#0 (copy)"
      ]
    },
    "672": {
      "op": "pushint 12 // 12",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "awst_tmp%1#0",
        "result.0#0",
        "awst_tmp%1#0 (copy)",
        "12"
      ]
    },
    "674": {
      "op": "extract_uint64",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "awst_tmp%1#0",
        "result.0#0",
        "result.1#0"
      ]
    },
    "675": {
      "op": "uncover 2",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "result.0#0",
        "result.1#0",
        "awst_tmp%1#0"
      ]
    },
    "677": {
      "op": "extract 20 32",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "result.0#0",
        "result.1#0",
        "result.2#0"
      ]
    },
    "680": {
      "op": "uncover 2",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "result.1#0",
        "result.2#0",
        "result.0#0"
      ]
    },
    "682": {
      "op": "dig 6",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "result.1#0",
        "result.2#0",
        "result.0#0",
        "asset#0 (copy)"
      ]
    },
    "684": {
      "op": "==",
      "defined_out": [
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "app#0",
        "app_to_call#0",
        "asset#0",
        "reinterpret_Encoded(uint64)%20#0",
        "result.1#0",
        "result.2#0",
        "tmp%22#1"
      ],
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "result.1#0",
        "result.2#0",
        "tmp%22#1"
      ]
    },
    "685": {
      "op": "uncover 2",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "result.2#0",
        "tmp%22#1",
        "result.1#0"
      ]
    },
    "687": {
      "op": "dig 5",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "result.2#0",
        "tmp%22#1",
        "result.1#0",
        "app#0 (copy)"
      ]
    },
    "689": {
      "op": "==",
      "defined_out": [
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "app#0",
        "app_to_call#0",
        "asset#0",
        "reinterpret_Encoded(uint64)%20#0",
        "result.2#0",
        "tmp%22#1",
        "tmp%23#1"
      ],
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "result.2#0",
        "tmp%22#1",
        "tmp%23#1"
      ]
    },
    "690": {
      "op": "&&",
      "defined_out": [
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "app#0",
        "app_to_call#0",
        "asset#0",
        "reinterpret_Encoded(uint64)%20#0",
        "result.2#0",
        "tmp%24#1"
      ],
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "result.2#0",
        "tmp%24#1"
      ]
    },
    "691": {
      "op": "swap",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "tmp%24#1",
        "result.2#0"
      ]
    },
    "692": {
      "op": "dig 3",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "tmp%24#1",
        "result.2#0",
        "acc#0 (copy)"
      ]
    },
    "694": {
      "op": "==",
      "defined_out": [
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "app#0",
        "app_to_call#0",
        "asset#0",
        "reinterpret_Encoded(uint64)%20#0",
        "tmp%24#1",
        "tmp%25#1"
      ],
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "tmp%24#1",
        "tmp%25#1"
      ]
    },
    "695": {
      "op": "&&",
      "defined_out": [
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "app#0",
        "app_to_call#0",
        "asset#0",
        "reinterpret_Encoded(uint64)%20#0",
        "tmp%26#0"
      ],
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "tmp%26#0"
      ]
    },
    "696": {
      "error": "expected echo to return same resources",
      "op": "assert // expected echo to return same resources",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0"
      ]
    },
    "697": {
      "op": "itxn_begin"
    },
    "698": {
      "op": "dig 5",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "app_to_call#0 (copy)"
      ]
    },
    "700": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0"
      ]
    },
    "702": {
      "op": "dig 3",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "asset#0 (copy)"
      ]
    },
    "704": {
      "op": "itxn_field Assets",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0"
      ]
    },
    "706": {
      "op": "dig 2",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "app#0 (copy)"
      ]
    },
    "708": {
      "op": "itxn_field Applications",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0"
      ]
    },
    "710": {
      "op": "dig 1",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "acc#0 (copy)"
      ]
    },
    "712": {
      "op": "itxn_field Accounts",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0"
      ]
    },
    "714": {
      "op": "bytec 11 // method \"echo_resource_by_index(asset,application,account)(uint64,uint64,address)\"",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "Method(echo_resource_by_index(asset,application,account)(uint64,uint64,address))"
      ]
    },
    "716": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0"
      ]
    },
    "718": {
      "op": "bytec 12 // 0x00",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "0x00"
      ]
    },
    "720": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0"
      ]
    },
    "722": {
      "op": "bytec 7 // 0x01",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "0x01"
      ]
    },
    "724": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0"
      ]
    },
    "726": {
      "op": "bytec 7 // 0x01",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "0x01"
      ]
    },
    "728": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0"
      ]
    },
    "730": {
      "op": "intc_1 // appl",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "appl"
      ]
    },
    "731": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0"
      ]
    },
    "733": {
      "op": "intc_0 // 0",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "0"
      ]
    },
    "734": {
      "op": "itxn_field Fee",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0"
      ]
    },
    "736": {
      "op": "itxn_submit"
    },
    "737": {
      "op": "itxn LastLog",
      "defined_out": [
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "app#0",
        "app_to_call#0",
        "asset#0",
        "awst_tmp%2#0",
        "reinterpret_Encoded(uint64)%20#0"
      ],
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "awst_tmp%2#0"
      ]
    },
    "739": {
      "op": "dup",
      "defined_out": [
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "app#0",
        "app_to_call#0",
        "asset#0",
        "awst_tmp%2#0",
        "awst_tmp%2#0 (copy)",
        "reinterpret_Encoded(uint64)%20#0"
      ],
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "awst_tmp%2#0",
        "awst_tmp%2#0 (copy)"
      ]
    },
    "740": {
      "op": "extract 0 4",
      "defined_out": [
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "app#0",
        "app_to_call#0",
        "asset#0",
        "awst_tmp%2#0",
        "reinterpret_Encoded(uint64)%20#0",
        "tmp%28#1"
      ],
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "awst_tmp%2#0",
        "tmp%28#1"
      ]
    },
    "743": {
      "op": "bytec_0 // 0x151f7c75",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "awst_tmp%2#0",
        "tmp%28#1",
        "0x151f7c75"
      ]
    },
    "744": {
      "op": "==",
      "defined_out": [
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "app#0",
        "app_to_call#0",
        "asset#0",
        "awst_tmp%2#0",
        "reinterpret_Encoded(uint64)%20#0",
        "tmp%29#1"
      ],
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "awst_tmp%2#0",
        "tmp%29#1"
      ]
    },
    "745": {
      "error": "application log value is not the result of an ABI return",
      "op": "assert // application log value is not the result of an ABI return",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "awst_tmp%2#0"
      ]
    },
    "746": {
      "op": "dup",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "awst_tmp%2#0",
        "awst_tmp%2#0 (copy)"
      ]
    },
    "747": {
      "op": "pushint 4 // 4",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "awst_tmp%2#0",
        "awst_tmp%2#0 (copy)",
        "4"
      ]
    },
    "749": {
      "op": "extract_uint64",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "awst_tmp%2#0",
        "result.0#0"
      ]
    },
    "750": {
      "op": "dig 1",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "awst_tmp%2#0",
        "result.0#0",
        "awst_tmp%2#0 (copy)"
      ]
    },
    "752": {
      "op": "pushint 12 // 12",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "awst_tmp%2#0",
        "result.0#0",
        "awst_tmp%2#0 (copy)",
        "12"
      ]
    },
    "754": {
      "op": "extract_uint64",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "awst_tmp%2#0",
        "result.0#0",
        "result.1#0"
      ]
    },
    "755": {
      "op": "uncover 2",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "result.0#0",
        "result.1#0",
        "awst_tmp%2#0"
      ]
    },
    "757": {
      "op": "extract 20 32",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "result.0#0",
        "result.1#0",
        "result.2#0"
      ]
    },
    "760": {
      "op": "uncover 2",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "result.1#0",
        "result.2#0",
        "result.0#0"
      ]
    },
    "762": {
      "op": "dig 6",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "result.1#0",
        "result.2#0",
        "result.0#0",
        "asset#0 (copy)"
      ]
    },
    "764": {
      "op": "==",
      "defined_out": [
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "app#0",
        "app_to_call#0",
        "asset#0",
        "reinterpret_Encoded(uint64)%20#0",
        "result.1#0",
        "result.2#0",
        "tmp%33#1"
      ],
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "result.1#0",
        "result.2#0",
        "tmp%33#1"
      ]
    },
    "765": {
      "op": "uncover 2",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "result.2#0",
        "tmp%33#1",
        "result.1#0"
      ]
    },
    "767": {
      "op": "dig 5",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "result.2#0",
        "tmp%33#1",
        "result.1#0",
        "app#0 (copy)"
      ]
    },
    "769": {
      "op": "==",
      "defined_out": [
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "app#0",
        "app_to_call#0",
        "asset#0",
        "reinterpret_Encoded(uint64)%20#0",
        "result.2#0",
        "tmp%33#1",
        "tmp%34#1"
      ],
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "result.2#0",
        "tmp%33#1",
        "tmp%34#1"
      ]
    },
    "770": {
      "op": "&&",
      "defined_out": [
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "app#0",
        "app_to_call#0",
        "asset#0",
        "reinterpret_Encoded(uint64)%20#0",
        "result.2#0",
        "tmp%35#1"
      ],
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "result.2#0",
        "tmp%35#1"
      ]
    },
    "771": {
      "op": "swap",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "tmp%35#1",
        "result.2#0"
      ]
    },
    "772": {
      "op": "dig 3",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "tmp%35#1",
        "result.2#0",
        "acc#0 (copy)"
      ]
    },
    "774": {
      "op": "==",
      "defined_out": [
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "app#0",
        "app_to_call#0",
        "asset#0",
        "reinterpret_Encoded(uint64)%20#0",
        "tmp%35#1",
        "tmp%36#0"
      ],
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "tmp%35#1",
        "tmp%36#0"
      ]
    },
    "775": {
      "op": "&&",
      "defined_out": [
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "app#0",
        "app_to_call#0",
        "asset#0",
        "reinterpret_Encoded(uint64)%20#0",
        "tmp%37#1"
      ],
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "tmp%37#1"
      ]
    },
    "776": {
      "error": "expected echo to return same resources",
      "op": "assert // expected echo to return same resources",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0"
      ]
    },
    "777": {
      "op": "itxn_begin"
    },
    "778": {
      "op": "dig 5",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "app_to_call#0 (copy)"
      ]
    },
    "780": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0"
      ]
    },
    "782": {
      "op": "bytec 13 // method \"echo_resource_by_value(uint64,uint64,address)(uint64,uint64,address)\"",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "Method(echo_resource_by_value(uint64,uint64,address)(uint64,uint64,address))"
      ]
    },
    "784": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0"
      ]
    },
    "786": {
      "op": "dig 4",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "reinterpret_Encoded(uint64)%20#0 (copy)"
      ]
    },
    "788": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0"
      ]
    },
    "790": {
      "op": "dup",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "aggregate%val_as_bytes%7#0 (copy)"
      ]
    },
    "791": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0"
      ]
    },
    "793": {
      "op": "dig 1",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "acc#0 (copy)"
      ]
    },
    "795": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0"
      ]
    },
    "797": {
      "op": "intc_1 // appl",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "appl"
      ]
    },
    "798": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0"
      ]
    },
    "800": {
      "op": "intc_0 // 0",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "0"
      ]
    },
    "801": {
      "op": "itxn_field Fee",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0"
      ]
    },
    "803": {
      "op": "itxn_submit"
    },
    "804": {
      "op": "itxn LastLog",
      "defined_out": [
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "app#0",
        "app_to_call#0",
        "asset#0",
        "awst_tmp%3#0",
        "reinterpret_Encoded(uint64)%20#0"
      ],
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "awst_tmp%3#0"
      ]
    },
    "806": {
      "op": "dup",
      "defined_out": [
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "app#0",
        "app_to_call#0",
        "asset#0",
        "awst_tmp%3#0",
        "awst_tmp%3#0 (copy)",
        "reinterpret_Encoded(uint64)%20#0"
      ],
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "awst_tmp%3#0",
        "awst_tmp%3#0 (copy)"
      ]
    },
    "807": {
      "op": "extract 0 4",
      "defined_out": [
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "app#0",
        "app_to_call#0",
        "asset#0",
        "awst_tmp%3#0",
        "reinterpret_Encoded(uint64)%20#0",
        "tmp%42#1"
      ],
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "awst_tmp%3#0",
        "tmp%42#1"
      ]
    },
    "810": {
      "op": "bytec_0 // 0x151f7c75",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "awst_tmp%3#0",
        "tmp%42#1",
        "0x151f7c75"
      ]
    },
    "811": {
      "op": "==",
      "defined_out": [
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "app#0",
        "app_to_call#0",
        "asset#0",
        "awst_tmp%3#0",
        "reinterpret_Encoded(uint64)%20#0",
        "tmp%43#1"
      ],
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "awst_tmp%3#0",
        "tmp%43#1"
      ]
    },
    "812": {
      "error": "application log value is not the result of an ABI return",
      "op": "assert // application log value is not the result of an ABI return",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "awst_tmp%3#0"
      ]
    },
    "813": {
      "op": "dup",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "awst_tmp%3#0",
        "awst_tmp%3#0 (copy)"
      ]
    },
    "814": {
      "op": "pushint 4 // 4",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "awst_tmp%3#0",
        "awst_tmp%3#0 (copy)",
        "4"
      ]
    },
    "816": {
      "op": "extract_uint64",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "awst_tmp%3#0",
        "result.0#0"
      ]
    },
    "817": {
      "op": "dig 1",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "awst_tmp%3#0",
        "result.0#0",
        "awst_tmp%3#0 (copy)"
      ]
    },
    "819": {
      "op": "pushint 12 // 12",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "awst_tmp%3#0",
        "result.0#0",
        "awst_tmp%3#0 (copy)",
        "12"
      ]
    },
    "821": {
      "op": "extract_uint64",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "awst_tmp%3#0",
        "result.0#0",
        "result.1#0"
      ]
    },
    "822": {
      "op": "uncover 2",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "result.0#0",
        "result.1#0",
        "awst_tmp%3#0"
      ]
    },
    "824": {
      "op": "extract 20 32",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "result.0#0",
        "result.1#0",
        "result.2#0"
      ]
    },
    "827": {
      "op": "uncover 2",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "result.1#0",
        "result.2#0",
        "result.0#0"
      ]
    },
    "829": {
      "op": "dig 6",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "result.1#0",
        "result.2#0",
        "result.0#0",
        "asset#0 (copy)"
      ]
    },
    "831": {
      "op": "==",
      "defined_out": [
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "app#0",
        "app_to_call#0",
        "asset#0",
        "reinterpret_Encoded(uint64)%20#0",
        "result.1#0",
        "result.2#0",
        "tmp%47#0"
      ],
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "result.1#0",
        "result.2#0",
        "tmp%47#0"
      ]
    },
    "832": {
      "op": "uncover 2",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "result.2#0",
        "tmp%47#0",
        "result.1#0"
      ]
    },
    "834": {
      "op": "dig 5",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "result.2#0",
        "tmp%47#0",
        "result.1#0",
        "app#0 (copy)"
      ]
    },
    "836": {
      "op": "==",
      "defined_out": [
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "app#0",
        "app_to_call#0",
        "asset#0",
        "reinterpret_Encoded(uint64)%20#0",
        "result.2#0",
        "tmp%47#0",
        "tmp%48#1"
      ],
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "result.2#0",
        "tmp%47#0",
        "tmp%48#1"
      ]
    },
    "837": {
      "op": "&&",
      "defined_out": [
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "app#0",
        "app_to_call#0",
        "asset#0",
        "reinterpret_Encoded(uint64)%20#0",
        "result.2#0",
        "tmp%49#1"
      ],
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "result.2#0",
        "tmp%49#1"
      ]
    },
    "838": {
      "op": "swap",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "tmp%49#1",
        "result.2#0"
      ]
    },
    "839": {
      "op": "dig 3",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "tmp%49#1",
        "result.2#0",
        "acc#0 (copy)"
      ]
    },
    "841": {
      "op": "==",
      "defined_out": [
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "app#0",
        "app_to_call#0",
        "asset#0",
        "reinterpret_Encoded(uint64)%20#0",
        "tmp%49#1",
        "tmp%50#1"
      ],
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "tmp%49#1",
        "tmp%50#1"
      ]
    },
    "842": {
      "op": "&&",
      "defined_out": [
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "app#0",
        "app_to_call#0",
        "asset#0",
        "reinterpret_Encoded(uint64)%20#0",
        "tmp%51#1"
      ],
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "tmp%51#1"
      ]
    },
    "843": {
      "error": "expected echo to return same resources",
      "op": "assert // expected echo to return same resources",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0"
      ]
    },
    "844": {
      "op": "itxn_begin"
    },
    "845": {
      "op": "dig 5",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "app_to_call#0 (copy)"
      ]
    },
    "847": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0"
      ]
    },
    "849": {
      "op": "dig 3",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "asset#0 (copy)"
      ]
    },
    "851": {
      "op": "itxn_field Assets",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0"
      ]
    },
    "853": {
      "op": "dig 2",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "app#0 (copy)"
      ]
    },
    "855": {
      "op": "itxn_field Applications",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0"
      ]
    },
    "857": {
      "op": "dig 1",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "acc#0 (copy)"
      ]
    },
    "859": {
      "op": "itxn_field Accounts",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0"
      ]
    },
    "861": {
      "op": "bytec 11 // method \"echo_resource_by_index(asset,application,account)(uint64,uint64,address)\"",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "Method(echo_resource_by_index(asset,application,account)(uint64,uint64,address))"
      ]
    },
    "863": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0"
      ]
    },
    "865": {
      "op": "bytec 12 // 0x00",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "0x00"
      ]
    },
    "867": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0"
      ]
    },
    "869": {
      "op": "bytec 7 // 0x01",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "0x01"
      ]
    },
    "871": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0"
      ]
    },
    "873": {
      "op": "bytec 7 // 0x01",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "0x01"
      ]
    },
    "875": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0"
      ]
    },
    "877": {
      "op": "intc_1 // appl",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "appl"
      ]
    },
    "878": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0"
      ]
    },
    "880": {
      "op": "intc_0 // 0",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "0"
      ]
    },
    "881": {
      "op": "itxn_field Fee",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0"
      ]
    },
    "883": {
      "op": "itxn_submit"
    },
    "884": {
      "op": "itxn LastLog",
      "defined_out": [
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "app#0",
        "app_to_call#0",
        "asset#0",
        "awst_tmp%4#0",
        "reinterpret_Encoded(uint64)%20#0"
      ],
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "awst_tmp%4#0"
      ]
    },
    "886": {
      "op": "dup",
      "defined_out": [
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "app#0",
        "app_to_call#0",
        "asset#0",
        "awst_tmp%4#0",
        "awst_tmp%4#0 (copy)",
        "reinterpret_Encoded(uint64)%20#0"
      ],
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "awst_tmp%4#0",
        "awst_tmp%4#0 (copy)"
      ]
    },
    "887": {
      "op": "extract 0 4",
      "defined_out": [
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "app#0",
        "app_to_call#0",
        "asset#0",
        "awst_tmp%4#0",
        "reinterpret_Encoded(uint64)%20#0",
        "tmp%53#1"
      ],
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "awst_tmp%4#0",
        "tmp%53#1"
      ]
    },
    "890": {
      "op": "bytec_0 // 0x151f7c75",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "awst_tmp%4#0",
        "tmp%53#1",
        "0x151f7c75"
      ]
    },
    "891": {
      "op": "==",
      "defined_out": [
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "app#0",
        "app_to_call#0",
        "asset#0",
        "awst_tmp%4#0",
        "reinterpret_Encoded(uint64)%20#0",
        "tmp%54#1"
      ],
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "awst_tmp%4#0",
        "tmp%54#1"
      ]
    },
    "892": {
      "error": "application log value is not the result of an ABI return",
      "op": "assert // application log value is not the result of an ABI return",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "awst_tmp%4#0"
      ]
    },
    "893": {
      "op": "dup",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "awst_tmp%4#0",
        "awst_tmp%4#0 (copy)"
      ]
    },
    "894": {
      "op": "pushint 4 // 4",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "awst_tmp%4#0",
        "awst_tmp%4#0 (copy)",
        "4"
      ]
    },
    "896": {
      "op": "extract_uint64",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "awst_tmp%4#0",
        "result.0#0"
      ]
    },
    "897": {
      "op": "dig 1",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "awst_tmp%4#0",
        "result.0#0",
        "awst_tmp%4#0 (copy)"
      ]
    },
    "899": {
      "op": "pushint 12 // 12",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "awst_tmp%4#0",
        "result.0#0",
        "awst_tmp%4#0 (copy)",
        "12"
      ]
    },
    "901": {
      "op": "extract_uint64",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "awst_tmp%4#0",
        "result.0#0",
        "result.1#0"
      ]
    },
    "902": {
      "op": "uncover 2",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "result.0#0",
        "result.1#0",
        "awst_tmp%4#0"
      ]
    },
    "904": {
      "op": "extract 20 32",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "result.0#0",
        "result.1#0",
        "result.2#0"
      ]
    },
    "907": {
      "op": "uncover 2",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "result.1#0",
        "result.2#0",
        "result.0#0"
      ]
    },
    "909": {
      "op": "dig 6",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "result.1#0",
        "result.2#0",
        "result.0#0",
        "asset#0 (copy)"
      ]
    },
    "911": {
      "op": "==",
      "defined_out": [
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "app#0",
        "app_to_call#0",
        "asset#0",
        "reinterpret_Encoded(uint64)%20#0",
        "result.1#0",
        "result.2#0",
        "tmp%58#1"
      ],
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "result.1#0",
        "result.2#0",
        "tmp%58#1"
      ]
    },
    "912": {
      "op": "uncover 2",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "result.2#0",
        "tmp%58#1",
        "result.1#0"
      ]
    },
    "914": {
      "op": "dig 5",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "result.2#0",
        "tmp%58#1",
        "result.1#0",
        "app#0 (copy)"
      ]
    },
    "916": {
      "op": "==",
      "defined_out": [
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "app#0",
        "app_to_call#0",
        "asset#0",
        "reinterpret_Encoded(uint64)%20#0",
        "result.2#0",
        "tmp%58#1",
        "tmp%59#1"
      ],
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "result.2#0",
        "tmp%58#1",
        "tmp%59#1"
      ]
    },
    "917": {
      "op": "&&",
      "defined_out": [
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "app#0",
        "app_to_call#0",
        "asset#0",
        "reinterpret_Encoded(uint64)%20#0",
        "result.2#0",
        "tmp%60#1"
      ],
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "result.2#0",
        "tmp%60#1"
      ]
    },
    "918": {
      "op": "swap",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "tmp%60#1",
        "result.2#0"
      ]
    },
    "919": {
      "op": "dig 3",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "tmp%60#1",
        "result.2#0",
        "acc#0 (copy)"
      ]
    },
    "921": {
      "op": "==",
      "defined_out": [
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "app#0",
        "app_to_call#0",
        "asset#0",
        "reinterpret_Encoded(uint64)%20#0",
        "tmp%60#1",
        "tmp%61#1"
      ],
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "tmp%60#1",
        "tmp%61#1"
      ]
    },
    "922": {
      "op": "&&",
      "defined_out": [
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "app#0",
        "app_to_call#0",
        "asset#0",
        "reinterpret_Encoded(uint64)%20#0",
        "tmp%62#0"
      ],
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "tmp%62#0"
      ]
    },
    "923": {
      "error": "expected echo to return same resources",
      "op": "assert // expected echo to return same resources",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0"
      ]
    },
    "924": {
      "op": "itxn_begin"
    },
    "925": {
      "op": "uncover 5",
      "stack_out": [
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "app_to_call#0"
      ]
    },
    "927": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0"
      ]
    },
    "929": {
      "op": "bytec 13 // method \"echo_resource_by_value(uint64,uint64,address)(uint64,uint64,address)\"",
      "stack_out": [
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "Method(echo_resource_by_value(uint64,uint64,address)(uint64,uint64,address))"
      ]
    },
    "931": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0"
      ]
    },
    "933": {
      "op": "uncover 4",
      "stack_out": [
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "reinterpret_Encoded(uint64)%20#0"
      ]
    },
    "935": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0"
      ]
    },
    "937": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "asset#0",
        "app#0",
        "acc#0"
      ]
    },
    "939": {
      "op": "dup",
      "stack_out": [
        "asset#0",
        "app#0",
        "acc#0",
        "acc#0 (copy)"
      ]
    },
    "940": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "asset#0",
        "app#0",
        "acc#0"
      ]
    },
    "942": {
      "op": "intc_1 // appl",
      "stack_out": [
        "asset#0",
        "app#0",
        "acc#0",
        "appl"
      ]
    },
    "943": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "asset#0",
        "app#0",
        "acc#0"
      ]
    },
    "945": {
      "op": "intc_0 // 0",
      "stack_out": [
        "asset#0",
        "app#0",
        "acc#0",
        "0"
      ]
    },
    "946": {
      "op": "itxn_field Fee",
      "stack_out": [
        "asset#0",
        "app#0",
        "acc#0"
      ]
    },
    "948": {
      "op": "itxn_submit"
    },
    "949": {
      "op": "itxn LastLog",
      "defined_out": [
        "acc#0",
        "app#0",
        "asset#0",
        "awst_tmp%5#0"
      ],
      "stack_out": [
        "asset#0",
        "app#0",
        "acc#0",
        "awst_tmp%5#0"
      ]
    },
    "951": {
      "op": "dup",
      "defined_out": [
        "acc#0",
        "app#0",
        "asset#0",
        "awst_tmp%5#0",
        "awst_tmp%5#0 (copy)"
      ],
      "stack_out": [
        "asset#0",
        "app#0",
        "acc#0",
        "awst_tmp%5#0",
        "awst_tmp%5#0 (copy)"
      ]
    },
    "952": {
      "op": "extract 0 4",
      "defined_out": [
        "acc#0",
        "app#0",
        "asset#0",
        "awst_tmp%5#0",
        "tmp%67#1"
      ],
      "stack_out": [
        "asset#0",
        "app#0",
        "acc#0",
        "awst_tmp%5#0",
        "tmp%67#1"
      ]
    },
    "955": {
      "op": "bytec_0 // 0x151f7c75",
      "stack_out": [
        "asset#0",
        "app#0",
        "acc#0",
        "awst_tmp%5#0",
        "tmp%67#1",
        "0x151f7c75"
      ]
    },
    "956": {
      "op": "==",
      "defined_out": [
        "acc#0",
        "app#0",
        "asset#0",
        "awst_tmp%5#0",
        "tmp%68#1"
      ],
      "stack_out": [
        "asset#0",
        "app#0",
        "acc#0",
        "awst_tmp%5#0",
        "tmp%68#1"
      ]
    },
    "957": {
      "error": "application log value is not the result of an ABI return",
      "op": "assert // application log value is not the result of an ABI return",
      "stack_out": [
        "asset#0",
        "app#0",
        "acc#0",
        "awst_tmp%5#0"
      ]
    },
    "958": {
      "op": "dup",
      "stack_out": [
        "asset#0",
        "app#0",
        "acc#0",
        "awst_tmp%5#0",
        "awst_tmp%5#0 (copy)"
      ]
    },
    "959": {
      "op": "pushint 4 // 4",
      "stack_out": [
        "asset#0",
        "app#0",
        "acc#0",
        "awst_tmp%5#0",
        "awst_tmp%5#0 (copy)",
        "4"
      ]
    },
    "961": {
      "op": "extract_uint64",
      "stack_out": [
        "asset#0",
        "app#0",
        "acc#0",
        "awst_tmp%5#0",
        "result.0#0"
      ]
    },
    "962": {
      "op": "dig 1",
      "stack_out": [
        "asset#0",
        "app#0",
        "acc#0",
        "awst_tmp%5#0",
        "result.0#0",
        "awst_tmp%5#0 (copy)"
      ]
    },
    "964": {
      "op": "pushint 12 // 12",
      "stack_out": [
        "asset#0",
        "app#0",
        "acc#0",
        "awst_tmp%5#0",
        "result.0#0",
        "awst_tmp%5#0 (copy)",
        "12"
      ]
    },
    "966": {
      "op": "extract_uint64",
      "stack_out": [
        "asset#0",
        "app#0",
        "acc#0",
        "awst_tmp%5#0",
        "result.0#0",
        "result.1#0"
      ]
    },
    "967": {
      "op": "uncover 2",
      "stack_out": [
        "asset#0",
        "app#0",
        "acc#0",
        "result.0#0",
        "result.1#0",
        "awst_tmp%5#0"
      ]
    },
    "969": {
      "op": "extract 20 32",
      "stack_out": [
        "asset#0",
        "app#0",
        "acc#0",
        "result.0#0",
        "result.1#0",
        "result.2#0"
      ]
    },
    "972": {
      "op": "uncover 2",
      "stack_out": [
        "asset#0",
        "app#0",
        "acc#0",
        "result.1#0",
        "result.2#0",
        "result.0#0"
      ]
    },
    "974": {
      "op": "uncover 5",
      "stack_out": [
        "app#0",
        "acc#0",
        "result.1#0",
        "result.2#0",
        "result.0#0",
        "asset#0"
      ]
    },
    "976": {
      "op": "==",
      "defined_out": [
        "acc#0",
        "app#0",
        "result.1#0",
        "result.2#0",
        "tmp%72#0"
      ],
      "stack_out": [
        "app#0",
        "acc#0",
        "result.1#0",
        "result.2#0",
        "tmp%72#0"
      ]
    },
    "977": {
      "op": "uncover 2",
      "stack_out": [
        "app#0",
        "acc#0",
        "result.2#0",
        "tmp%72#0",
        "result.1#0"
      ]
    },
    "979": {
      "op": "uncover 4",
      "stack_out": [
        "acc#0",
        "result.2#0",
        "tmp%72#0",
        "result.1#0",
        "app#0"
      ]
    },
    "981": {
      "op": "==",
      "defined_out": [
        "acc#0",
        "result.2#0",
        "tmp%72#0",
        "tmp%73#1"
      ],
      "stack_out": [
        "acc#0",
        "result.2#0",
        "tmp%72#0",
        "tmp%73#1"
      ]
    },
    "982": {
      "op": "&&",
      "defined_out": [
        "acc#0",
        "result.2#0",
        "tmp%74#1"
      ],
      "stack_out": [
        "acc#0",
        "result.2#0",
        "tmp%74#1"
      ]
    },
    "983": {
      "op": "swap",
      "stack_out": [
        "acc#0",
        "tmp%74#1",
        "result.2#0"
      ]
    },
    "984": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%74#1",
        "result.2#0",
        "acc#0"
      ]
    },
    "986": {
      "op": "==",
      "defined_out": [
        "tmp%74#1",
        "tmp%75#1"
      ],
      "stack_out": [
        "tmp%74#1",
        "tmp%75#1"
      ]
    },
    "987": {
      "op": "&&",
      "defined_out": [
        "tmp%76#1"
      ],
      "stack_out": [
        "tmp%76#1"
      ]
    },
    "988": {
      "error": "expected echo to return same resources",
      "op": "assert // expected echo to return same resources",
      "stack_out": []
    },
    "989": {
      "op": "intc_2 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "990": {
      "op": "return",
      "stack_out": []
    },
    "991": {
      "block": "main_test_arc4_struct_route@20",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%91#0"
      ],
      "stack_out": [
        "tmp%91#0"
      ]
    },
    "993": {
      "op": "!",
      "defined_out": [
        "tmp%92#0"
      ],
      "stack_out": [
        "tmp%92#0"
      ]
    },
    "994": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "995": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%93#0"
      ],
      "stack_out": [
        "tmp%93#0"
      ]
    },
    "997": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "998": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded(uint64)%18#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint64)%18#0"
      ]
    },
    "1001": {
      "op": "btoi",
      "defined_out": [
        "app#0"
      ],
      "stack_out": [
        "app#0"
      ]
    },
    "1002": {
      "op": "itxn_begin"
    },
    "1003": {
      "op": "itxn_field ApplicationID",
      "stack_out": []
    },
    "1005": {
      "op": "pushbytes 0xdc4f1992 // method \"echo_log_struct((uint64,string))(uint64,string)\"",
      "defined_out": [
        "Method(echo_log_struct((uint64,string))(uint64,string))"
      ],
      "stack_out": [
        "Method(echo_log_struct((uint64,string))(uint64,string))"
      ]
    },
    "1011": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "1013": {
      "op": "bytec 8 // 0x0000000000000001000a00056c6f672031",
      "defined_out": [
        "0x0000000000000001000a00056c6f672031"
      ],
      "stack_out": [
        "0x0000000000000001000a00056c6f672031"
      ]
    },
    "1015": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "1017": {
      "op": "intc_1 // appl",
      "defined_out": [
        "appl"
      ],
      "stack_out": [
        "appl"
      ]
    },
    "1018": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "1020": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "1021": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "1023": {
      "op": "itxn_submit"
    },
    "1024": {
      "op": "itxn LastLog",
      "defined_out": [
        "awst_tmp%0#0"
      ],
      "stack_out": [
        "awst_tmp%0#0"
      ]
    },
    "1026": {
      "op": "dup",
      "defined_out": [
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ]
    },
    "1027": {
      "op": "extract 4 0",
      "defined_out": [
        "awst_tmp%0#0",
        "result#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "result#0"
      ]
    },
    "1030": {
      "op": "swap",
      "stack_out": [
        "result#0",
        "awst_tmp%0#0"
      ]
    },
    "1031": {
      "op": "extract 0 4",
      "defined_out": [
        "result#0",
        "tmp%3#1"
      ],
      "stack_out": [
        "result#0",
        "tmp%3#1"
      ]
    },
    "1034": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "result#0",
        "tmp%3#1"
      ],
      "stack_out": [
        "result#0",
        "tmp%3#1",
        "0x151f7c75"
      ]
    },
    "1035": {
      "op": "==",
      "defined_out": [
        "result#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "result#0",
        "tmp%4#0"
      ]
    },
    "1036": {
      "error": "application log value is not the result of an ABI return",
      "op": "assert // application log value is not the result of an ABI return",
      "stack_out": [
        "result#0"
      ]
    },
    "1037": {
      "op": "itxn LastLog",
      "defined_out": [
        "result#0",
        "txn.LastLog#0"
      ],
      "stack_out": [
        "result#0",
        "txn.LastLog#0"
      ]
    },
    "1039": {
      "op": "swap",
      "stack_out": [
        "txn.LastLog#0",
        "result#0"
      ]
    },
    "1040": {
      "op": "bytec 8 // 0x0000000000000001000a00056c6f672031",
      "stack_out": [
        "txn.LastLog#0",
        "result#0",
        "0x0000000000000001000a00056c6f672031"
      ]
    },
    "1042": {
      "op": "==",
      "defined_out": [
        "tmp%5#1",
        "txn.LastLog#0"
      ],
      "stack_out": [
        "txn.LastLog#0",
        "tmp%5#1"
      ]
    },
    "1043": {
      "error": "expected output to match input",
      "op": "assert // expected output to match input",
      "stack_out": [
        "txn.LastLog#0"
      ]
    },
    "1044": {
      "op": "dup",
      "defined_out": [
        "txn.LastLog#0",
        "txn.LastLog#0 (copy)"
      ],
      "stack_out": [
        "txn.LastLog#0",
        "txn.LastLog#0 (copy)"
      ]
    },
    "1045": {
      "op": "extract 4 0",
      "defined_out": [
        "tmp%6#1",
        "txn.LastLog#0"
      ],
      "stack_out": [
        "txn.LastLog#0",
        "tmp%6#1"
      ]
    },
    "1048": {
      "op": "swap",
      "stack_out": [
        "tmp%6#1",
        "txn.LastLog#0"
      ]
    },
    "1049": {
      "op": "extract 0 4",
      "defined_out": [
        "tmp%6#1",
        "tmp%7#1"
      ],
      "stack_out": [
        "tmp%6#1",
        "tmp%7#1"
      ]
    },
    "1052": {
      "op": "bytec_0 // 0x151f7c75",
      "stack_out": [
        "tmp%6#1",
        "tmp%7#1",
        "0x151f7c75"
      ]
    },
    "1053": {
      "op": "==",
      "defined_out": [
        "tmp%6#1",
        "tmp%8#1"
      ],
      "stack_out": [
        "tmp%6#1",
        "tmp%8#1"
      ]
    },
    "1054": {
      "error": "application log value is not the result of an ABI return",
      "op": "assert // application log value is not the result of an ABI return",
      "stack_out": [
        "tmp%6#1"
      ]
    },
    "1055": {
      "op": "bytec 8 // 0x0000000000000001000a00056c6f672031",
      "stack_out": [
        "tmp%6#1",
        "0x0000000000000001000a00056c6f672031"
      ]
    },
    "1057": {
      "op": "==",
      "defined_out": [
        "tmp%9#1"
      ],
      "stack_out": [
        "tmp%9#1"
      ]
    },
    "1058": {
      "error": "expected output to match input",
      "op": "assert // expected output to match input",
      "stack_out": []
    },
    "1059": {
      "op": "intc_2 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1060": {
      "op": "return",
      "stack_out": []
    },
    "1061": {
      "block": "main_test_named_tuples_route@19",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%86#0"
      ],
      "stack_out": [
        "tmp%86#0"
      ]
    },
    "1063": {
      "op": "!",
      "defined_out": [
        "tmp%87#0"
      ],
      "stack_out": [
        "tmp%87#0"
      ]
    },
    "1064": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "1065": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%88#0"
      ],
      "stack_out": [
        "tmp%88#0"
      ]
    },
    "1067": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "1068": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded(uint64)%17#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint64)%17#0"
      ]
    },
    "1071": {
      "op": "btoi",
      "defined_out": [
        "app#0"
      ],
      "stack_out": [
        "app#0"
      ]
    },
    "1072": {
      "op": "itxn_begin"
    },
    "1073": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "app#0 (copy)"
      ],
      "stack_out": [
        "app#0",
        "app#0 (copy)"
      ]
    },
    "1074": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "app#0"
      ]
    },
    "1076": {
      "op": "bytec 24 // method \"logs_are_equal((uint64,string),(uint64,string))bool\"",
      "defined_out": [
        "Method(logs_are_equal((uint64,string),(uint64,string))bool)",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "Method(logs_are_equal((uint64,string),(uint64,string))bool)"
      ]
    },
    "1078": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0"
      ]
    },
    "1080": {
      "op": "bytec 8 // 0x0000000000000001000a00056c6f672031",
      "defined_out": [
        "0x0000000000000001000a00056c6f672031",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "0x0000000000000001000a00056c6f672031"
      ]
    },
    "1082": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0"
      ]
    },
    "1084": {
      "op": "bytec 8 // 0x0000000000000001000a00056c6f672031",
      "stack_out": [
        "app#0",
        "0x0000000000000001000a00056c6f672031"
      ]
    },
    "1086": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0"
      ]
    },
    "1088": {
      "op": "intc_1 // appl",
      "defined_out": [
        "app#0",
        "appl"
      ],
      "stack_out": [
        "app#0",
        "appl"
      ]
    },
    "1089": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "app#0"
      ]
    },
    "1091": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "0"
      ]
    },
    "1092": {
      "op": "itxn_field Fee",
      "stack_out": [
        "app#0"
      ]
    },
    "1094": {
      "op": "itxn_submit"
    },
    "1095": {
      "op": "itxn LastLog",
      "defined_out": [
        "app#0",
        "awst_tmp%0#0"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0"
      ]
    },
    "1097": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ]
    },
    "1098": {
      "op": "extract 4 0",
      "defined_out": [
        "app#0",
        "awst_tmp%0#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "tmp%2#0"
      ]
    },
    "1101": {
      "op": "swap",
      "stack_out": [
        "app#0",
        "tmp%2#0",
        "awst_tmp%0#0"
      ]
    },
    "1102": {
      "op": "extract 0 4",
      "defined_out": [
        "app#0",
        "tmp%2#0",
        "tmp%3#1"
      ],
      "stack_out": [
        "app#0",
        "tmp%2#0",
        "tmp%3#1"
      ]
    },
    "1105": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "app#0",
        "tmp%2#0",
        "tmp%3#1"
      ],
      "stack_out": [
        "app#0",
        "tmp%2#0",
        "tmp%3#1",
        "0x151f7c75"
      ]
    },
    "1106": {
      "op": "==",
      "defined_out": [
        "app#0",
        "tmp%2#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "app#0",
        "tmp%2#0",
        "tmp%4#0"
      ]
    },
    "1107": {
      "error": "application log value is not the result of an ABI return",
      "op": "assert // application log value is not the result of an ABI return",
      "stack_out": [
        "app#0",
        "tmp%2#0"
      ]
    },
    "1108": {
      "op": "intc_0 // 0",
      "stack_out": [
        "app#0",
        "tmp%2#0",
        "0"
      ]
    },
    "1109": {
      "op": "getbit",
      "defined_out": [
        "app#0",
        "result#1"
      ],
      "stack_out": [
        "app#0",
        "result#1"
      ]
    },
    "1110": {
      "op": "assert",
      "stack_out": [
        "app#0"
      ]
    },
    "1111": {
      "op": "itxn_begin"
    },
    "1112": {
      "op": "itxn_field ApplicationID",
      "stack_out": []
    },
    "1114": {
      "op": "bytec 24 // method \"logs_are_equal((uint64,string),(uint64,string))bool\"",
      "stack_out": [
        "Method(logs_are_equal((uint64,string),(uint64,string))bool)"
      ]
    },
    "1116": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "1118": {
      "op": "pushbytes 0x0000000000000002000a00056c6f672032",
      "defined_out": [
        "0x0000000000000002000a00056c6f672032"
      ],
      "stack_out": [
        "0x0000000000000002000a00056c6f672032"
      ]
    },
    "1137": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "1139": {
      "op": "bytec 8 // 0x0000000000000001000a00056c6f672031",
      "stack_out": [
        "0x0000000000000001000a00056c6f672031"
      ]
    },
    "1141": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "1143": {
      "op": "intc_1 // appl",
      "stack_out": [
        "appl"
      ]
    },
    "1144": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "1146": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0"
      ]
    },
    "1147": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "1149": {
      "op": "itxn_submit"
    },
    "1150": {
      "op": "itxn LastLog",
      "defined_out": [
        "awst_tmp%1#0"
      ],
      "stack_out": [
        "awst_tmp%1#0"
      ]
    },
    "1152": {
      "op": "dup",
      "defined_out": [
        "awst_tmp%1#0",
        "awst_tmp%1#0 (copy)"
      ],
      "stack_out": [
        "awst_tmp%1#0",
        "awst_tmp%1#0 (copy)"
      ]
    },
    "1153": {
      "op": "extract 4 0",
      "defined_out": [
        "awst_tmp%1#0",
        "tmp%8#3"
      ],
      "stack_out": [
        "awst_tmp%1#0",
        "tmp%8#3"
      ]
    },
    "1156": {
      "op": "swap",
      "stack_out": [
        "tmp%8#3",
        "awst_tmp%1#0"
      ]
    },
    "1157": {
      "op": "extract 0 4",
      "defined_out": [
        "tmp%8#3",
        "tmp%9#3"
      ],
      "stack_out": [
        "tmp%8#3",
        "tmp%9#3"
      ]
    },
    "1160": {
      "op": "bytec_0 // 0x151f7c75",
      "stack_out": [
        "tmp%8#3",
        "tmp%9#3",
        "0x151f7c75"
      ]
    },
    "1161": {
      "op": "==",
      "defined_out": [
        "tmp%10#1",
        "tmp%8#3"
      ],
      "stack_out": [
        "tmp%8#3",
        "tmp%10#1"
      ]
    },
    "1162": {
      "error": "application log value is not the result of an ABI return",
      "op": "assert // application log value is not the result of an ABI return",
      "stack_out": [
        "tmp%8#3"
      ]
    },
    "1163": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%8#3",
        "0"
      ]
    },
    "1164": {
      "op": "getbit",
      "stack_out": [
        "result#1"
      ]
    },
    "1165": {
      "op": "!",
      "defined_out": [
        "tmp%12#1"
      ],
      "stack_out": [
        "tmp%12#1"
      ]
    },
    "1166": {
      "op": "assert",
      "stack_out": []
    },
    "1167": {
      "op": "intc_2 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1168": {
      "op": "return",
      "stack_out": []
    },
    "1169": {
      "block": "main_test_no_args_route@18",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%81#0"
      ],
      "stack_out": [
        "tmp%81#0"
      ]
    },
    "1171": {
      "op": "!",
      "defined_out": [
        "tmp%82#0"
      ],
      "stack_out": [
        "tmp%82#0"
      ]
    },
    "1172": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "1173": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%83#0"
      ],
      "stack_out": [
        "tmp%83#0"
      ]
    },
    "1175": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "1176": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded(uint64)%16#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint64)%16#0"
      ]
    },
    "1179": {
      "op": "btoi",
      "defined_out": [
        "app#0"
      ],
      "stack_out": [
        "app#0"
      ]
    },
    "1180": {
      "op": "itxn_begin"
    },
    "1181": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "app#0 (copy)"
      ],
      "stack_out": [
        "app#0",
        "app#0 (copy)"
      ]
    },
    "1182": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "app#0"
      ]
    },
    "1184": {
      "op": "bytec 14 // method \"no_args()uint64\"",
      "defined_out": [
        "Method(no_args()uint64)",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "Method(no_args()uint64)"
      ]
    },
    "1186": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0"
      ]
    },
    "1188": {
      "op": "intc_1 // appl",
      "defined_out": [
        "app#0",
        "appl"
      ],
      "stack_out": [
        "app#0",
        "appl"
      ]
    },
    "1189": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "app#0"
      ]
    },
    "1191": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "0"
      ]
    },
    "1192": {
      "op": "itxn_field Fee",
      "stack_out": [
        "app#0"
      ]
    },
    "1194": {
      "op": "itxn_submit"
    },
    "1195": {
      "op": "itxn LastLog",
      "defined_out": [
        "app#0",
        "awst_tmp%0#0"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0"
      ]
    },
    "1197": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ]
    },
    "1198": {
      "op": "extract 4 0",
      "defined_out": [
        "app#0",
        "awst_tmp%0#0",
        "tmp%0#4"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "tmp%0#4"
      ]
    },
    "1201": {
      "op": "swap",
      "stack_out": [
        "app#0",
        "tmp%0#4",
        "awst_tmp%0#0"
      ]
    },
    "1202": {
      "op": "extract 0 4",
      "defined_out": [
        "app#0",
        "tmp%0#4",
        "tmp%1#2"
      ],
      "stack_out": [
        "app#0",
        "tmp%0#4",
        "tmp%1#2"
      ]
    },
    "1205": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "app#0",
        "tmp%0#4",
        "tmp%1#2"
      ],
      "stack_out": [
        "app#0",
        "tmp%0#4",
        "tmp%1#2",
        "0x151f7c75"
      ]
    },
    "1206": {
      "op": "==",
      "defined_out": [
        "app#0",
        "tmp%0#4",
        "tmp%2#3"
      ],
      "stack_out": [
        "app#0",
        "tmp%0#4",
        "tmp%2#3"
      ]
    },
    "1207": {
      "error": "application log value is not the result of an ABI return",
      "op": "assert // application log value is not the result of an ABI return",
      "stack_out": [
        "app#0",
        "tmp%0#4"
      ]
    },
    "1208": {
      "op": "btoi",
      "defined_out": [
        "app#0",
        "result#3"
      ],
      "stack_out": [
        "app#0",
        "result#3"
      ]
    },
    "1209": {
      "op": "pushint 42 // 42",
      "defined_out": [
        "42",
        "app#0",
        "result#3"
      ],
      "stack_out": [
        "app#0",
        "result#3",
        "42"
      ]
    },
    "1211": {
      "op": "==",
      "defined_out": [
        "app#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "app#0",
        "tmp%4#0"
      ]
    },
    "1212": {
      "op": "assert",
      "stack_out": [
        "app#0"
      ]
    },
    "1213": {
      "op": "itxn_begin"
    },
    "1214": {
      "op": "dup",
      "stack_out": [
        "app#0",
        "app#0 (copy)"
      ]
    },
    "1215": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "app#0"
      ]
    },
    "1217": {
      "op": "bytec 14 // method \"no_args()uint64\"",
      "stack_out": [
        "app#0",
        "Method(no_args()uint64)"
      ]
    },
    "1219": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0"
      ]
    },
    "1221": {
      "op": "intc_1 // appl",
      "stack_out": [
        "app#0",
        "appl"
      ]
    },
    "1222": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "app#0"
      ]
    },
    "1224": {
      "op": "intc_0 // 0",
      "stack_out": [
        "app#0",
        "0"
      ]
    },
    "1225": {
      "op": "itxn_field Fee",
      "stack_out": [
        "app#0"
      ]
    },
    "1227": {
      "op": "itxn_submit"
    },
    "1228": {
      "op": "itxn LastLog",
      "defined_out": [
        "app#0",
        "awst_tmp%1#0"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%1#0"
      ]
    },
    "1230": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "awst_tmp%1#0",
        "awst_tmp%1#0 (copy)"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%1#0",
        "awst_tmp%1#0 (copy)"
      ]
    },
    "1231": {
      "op": "extract 4 0",
      "defined_out": [
        "app#0",
        "arc4_result#0",
        "awst_tmp%1#0"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%1#0",
        "arc4_result#0"
      ]
    },
    "1234": {
      "op": "swap",
      "stack_out": [
        "app#0",
        "arc4_result#0",
        "awst_tmp%1#0"
      ]
    },
    "1235": {
      "op": "extract 0 4",
      "defined_out": [
        "app#0",
        "arc4_result#0",
        "tmp%6#1"
      ],
      "stack_out": [
        "app#0",
        "arc4_result#0",
        "tmp%6#1"
      ]
    },
    "1238": {
      "op": "bytec_0 // 0x151f7c75",
      "stack_out": [
        "app#0",
        "arc4_result#0",
        "tmp%6#1",
        "0x151f7c75"
      ]
    },
    "1239": {
      "op": "==",
      "defined_out": [
        "app#0",
        "arc4_result#0",
        "tmp%7#2"
      ],
      "stack_out": [
        "app#0",
        "arc4_result#0",
        "tmp%7#2"
      ]
    },
    "1240": {
      "error": "application log value is not the result of an ABI return",
      "op": "assert // application log value is not the result of an ABI return",
      "stack_out": [
        "app#0",
        "arc4_result#0"
      ]
    },
    "1241": {
      "op": "bytec 25 // 0x000000000000002a",
      "defined_out": [
        "0x000000000000002a",
        "app#0",
        "arc4_result#0"
      ],
      "stack_out": [
        "app#0",
        "arc4_result#0",
        "0x000000000000002a"
      ]
    },
    "1243": {
      "op": "b==",
      "defined_out": [
        "app#0",
        "tmp%8#1"
      ],
      "stack_out": [
        "app#0",
        "tmp%8#1"
      ]
    },
    "1244": {
      "op": "assert",
      "stack_out": [
        "app#0"
      ]
    },
    "1245": {
      "op": "itxn_begin"
    },
    "1246": {
      "op": "itxn_field ApplicationID",
      "stack_out": []
    },
    "1248": {
      "op": "bytec 14 // method \"no_args()uint64\"",
      "stack_out": [
        "Method(no_args()uint64)"
      ]
    },
    "1250": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "1252": {
      "op": "intc_1 // appl",
      "stack_out": [
        "appl"
      ]
    },
    "1253": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "1255": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0"
      ]
    },
    "1256": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "1258": {
      "op": "itxn_submit"
    },
    "1259": {
      "op": "itxn LastLog",
      "defined_out": [
        "awst_tmp%2#0"
      ],
      "stack_out": [
        "awst_tmp%2#0"
      ]
    },
    "1261": {
      "op": "extract 0 4",
      "defined_out": [
        "tmp%10#3"
      ],
      "stack_out": [
        "tmp%10#3"
      ]
    },
    "1264": {
      "op": "bytec_0 // 0x151f7c75",
      "stack_out": [
        "tmp%10#3",
        "0x151f7c75"
      ]
    },
    "1265": {
      "op": "==",
      "defined_out": [
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0"
      ]
    },
    "1266": {
      "error": "application log value is not the result of an ABI return",
      "op": "assert // application log value is not the result of an ABI return",
      "stack_out": []
    },
    "1267": {
      "op": "itxn LastLog",
      "defined_out": [
        "awst_tmp%3#0"
      ],
      "stack_out": [
        "awst_tmp%3#0"
      ]
    },
    "1269": {
      "op": "dup",
      "defined_out": [
        "awst_tmp%3#0",
        "awst_tmp%3#0 (copy)"
      ],
      "stack_out": [
        "awst_tmp%3#0",
        "awst_tmp%3#0 (copy)"
      ]
    },
    "1270": {
      "op": "extract 4 0",
      "defined_out": [
        "awst_tmp%3#0",
        "tmp%13#2"
      ],
      "stack_out": [
        "awst_tmp%3#0",
        "tmp%13#2"
      ]
    },
    "1273": {
      "op": "swap",
      "stack_out": [
        "tmp%13#2",
        "awst_tmp%3#0"
      ]
    },
    "1274": {
      "op": "extract 0 4",
      "defined_out": [
        "tmp%13#2",
        "tmp%14#2"
      ],
      "stack_out": [
        "tmp%13#2",
        "tmp%14#2"
      ]
    },
    "1277": {
      "op": "bytec_0 // 0x151f7c75",
      "stack_out": [
        "tmp%13#2",
        "tmp%14#2",
        "0x151f7c75"
      ]
    },
    "1278": {
      "op": "==",
      "defined_out": [
        "tmp%13#2",
        "tmp%15#2"
      ],
      "stack_out": [
        "tmp%13#2",
        "tmp%15#2"
      ]
    },
    "1279": {
      "error": "application log value is not the result of an ABI return",
      "op": "assert // application log value is not the result of an ABI return",
      "stack_out": [
        "tmp%13#2"
      ]
    },
    "1280": {
      "op": "bytec 25 // 0x000000000000002a",
      "stack_out": [
        "tmp%13#2",
        "0x000000000000002a"
      ]
    },
    "1282": {
      "op": "b==",
      "defined_out": [
        "tmp%16#0"
      ],
      "stack_out": [
        "tmp%16#0"
      ]
    },
    "1283": {
      "op": "assert",
      "stack_out": []
    },
    "1284": {
      "op": "intc_2 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1285": {
      "op": "return",
      "stack_out": []
    },
    "1286": {
      "block": "main_test_nested_tuples_route@17",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%76#0"
      ],
      "stack_out": [
        "tmp%76#0"
      ]
    },
    "1288": {
      "op": "!",
      "defined_out": [
        "tmp%77#0"
      ],
      "stack_out": [
        "tmp%77#0"
      ]
    },
    "1289": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "1290": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%78#0"
      ],
      "stack_out": [
        "tmp%78#0"
      ]
    },
    "1292": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "1293": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded(uint64)%15#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint64)%15#0"
      ]
    },
    "1296": {
      "op": "btoi",
      "defined_out": [
        "app#0"
      ],
      "stack_out": [
        "app#0"
      ]
    },
    "1297": {
      "op": "itxn_begin"
    },
    "1298": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "app#0 (copy)"
      ],
      "stack_out": [
        "app#0",
        "app#0 (copy)"
      ]
    },
    "1299": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "app#0"
      ]
    },
    "1301": {
      "op": "bytec 15 // method \"echo_nested_tuple(((string,string),(uint64,uint64,byte[])))((string,string),(uint64,uint64,byte[]))\"",
      "defined_out": [
        "Method(echo_nested_tuple(((string,string),(uint64,uint64,byte[])))((string,string),(uint64,uint64,byte[])))",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "Method(echo_nested_tuple(((string,string),(uint64,uint64,byte[])))((string,string),(uint64,uint64,byte[])))"
      ]
    },
    "1303": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0"
      ]
    },
    "1305": {
      "op": "bytec 26 // 0x00040010000400080002733100027332000000000000000100000000000000020012000133",
      "defined_out": [
        "0x00040010000400080002733100027332000000000000000100000000000000020012000133",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "0x00040010000400080002733100027332000000000000000100000000000000020012000133"
      ]
    },
    "1307": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0"
      ]
    },
    "1309": {
      "op": "intc_1 // appl",
      "defined_out": [
        "app#0",
        "appl"
      ],
      "stack_out": [
        "app#0",
        "appl"
      ]
    },
    "1310": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "app#0"
      ]
    },
    "1312": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "0"
      ]
    },
    "1313": {
      "op": "itxn_field Fee",
      "stack_out": [
        "app#0"
      ]
    },
    "1315": {
      "op": "itxn_submit"
    },
    "1316": {
      "op": "itxn LastLog",
      "defined_out": [
        "app#0",
        "awst_tmp%0#0"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0"
      ]
    },
    "1318": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ]
    },
    "1319": {
      "op": "extract 4 0",
      "defined_out": [
        "app#0",
        "awst_tmp%0#0",
        "tmp%4#5"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "tmp%4#5"
      ]
    },
    "1322": {
      "op": "swap",
      "stack_out": [
        "app#0",
        "tmp%4#5",
        "awst_tmp%0#0"
      ]
    },
    "1323": {
      "op": "extract 0 4",
      "defined_out": [
        "app#0",
        "tmp%4#5",
        "tmp%5#2"
      ],
      "stack_out": [
        "app#0",
        "tmp%4#5",
        "tmp%5#2"
      ]
    },
    "1326": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "app#0",
        "tmp%4#5",
        "tmp%5#2"
      ],
      "stack_out": [
        "app#0",
        "tmp%4#5",
        "tmp%5#2",
        "0x151f7c75"
      ]
    },
    "1327": {
      "op": "==",
      "defined_out": [
        "app#0",
        "tmp%4#5",
        "tmp%6#4"
      ],
      "stack_out": [
        "app#0",
        "tmp%4#5",
        "tmp%6#4"
      ]
    },
    "1328": {
      "error": "application log value is not the result of an ABI return",
      "op": "assert // application log value is not the result of an ABI return",
      "stack_out": [
        "app#0",
        "tmp%4#5"
      ]
    },
    "1329": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "tmp%4#5",
        "tmp%4#5 (copy)"
      ],
      "stack_out": [
        "app#0",
        "tmp%4#5",
        "tmp%4#5 (copy)"
      ]
    },
    "1330": {
      "op": "intc_0 // 0",
      "stack_out": [
        "app#0",
        "tmp%4#5",
        "tmp%4#5 (copy)",
        "0"
      ]
    },
    "1331": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%extract_uint16%18#0",
        "app#0",
        "tmp%4#5"
      ],
      "stack_out": [
        "app#0",
        "tmp%4#5",
        "aggregate%extract_uint16%18#0"
      ]
    },
    "1332": {
      "op": "dig 1",
      "stack_out": [
        "app#0",
        "tmp%4#5",
        "aggregate%extract_uint16%18#0",
        "tmp%4#5 (copy)"
      ]
    },
    "1334": {
      "op": "intc_3 // 2",
      "defined_out": [
        "2",
        "aggregate%extract_uint16%18#0",
        "app#0",
        "tmp%4#5",
        "tmp%4#5 (copy)"
      ],
      "stack_out": [
        "app#0",
        "tmp%4#5",
        "aggregate%extract_uint16%18#0",
        "tmp%4#5 (copy)",
        "2"
      ]
    },
    "1335": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%extract_uint16%18#0",
        "aggregate%extract_uint16%19#0",
        "app#0",
        "tmp%4#5"
      ],
      "stack_out": [
        "app#0",
        "tmp%4#5",
        "aggregate%extract_uint16%18#0",
        "aggregate%extract_uint16%19#0"
      ]
    },
    "1336": {
      "op": "dig 2",
      "stack_out": [
        "app#0",
        "tmp%4#5",
        "aggregate%extract_uint16%18#0",
        "aggregate%extract_uint16%19#0",
        "tmp%4#5 (copy)"
      ]
    },
    "1338": {
      "op": "uncover 2",
      "stack_out": [
        "app#0",
        "tmp%4#5",
        "aggregate%extract_uint16%19#0",
        "tmp%4#5 (copy)",
        "aggregate%extract_uint16%18#0"
      ]
    },
    "1340": {
      "op": "dig 2",
      "defined_out": [
        "aggregate%extract_uint16%18#0",
        "aggregate%extract_uint16%19#0",
        "aggregate%extract_uint16%19#0 (copy)",
        "app#0",
        "tmp%4#5",
        "tmp%4#5 (copy)"
      ],
      "stack_out": [
        "app#0",
        "tmp%4#5",
        "aggregate%extract_uint16%19#0",
        "tmp%4#5 (copy)",
        "aggregate%extract_uint16%18#0",
        "aggregate%extract_uint16%19#0 (copy)"
      ]
    },
    "1342": {
      "op": "substring3",
      "defined_out": [
        "aggregate%extract_uint16%19#0",
        "aggregate%substring3%12#0",
        "app#0",
        "tmp%4#5"
      ],
      "stack_out": [
        "app#0",
        "tmp%4#5",
        "aggregate%extract_uint16%19#0",
        "aggregate%substring3%12#0"
      ]
    },
    "1343": {
      "op": "dup",
      "defined_out": [
        "aggregate%extract_uint16%19#0",
        "aggregate%substring3%12#0",
        "aggregate%substring3%12#0 (copy)",
        "app#0",
        "tmp%4#5"
      ],
      "stack_out": [
        "app#0",
        "tmp%4#5",
        "aggregate%extract_uint16%19#0",
        "aggregate%substring3%12#0",
        "aggregate%substring3%12#0 (copy)"
      ]
    },
    "1344": {
      "op": "intc_0 // 0",
      "stack_out": [
        "app#0",
        "tmp%4#5",
        "aggregate%extract_uint16%19#0",
        "aggregate%substring3%12#0",
        "aggregate%substring3%12#0 (copy)",
        "0"
      ]
    },
    "1345": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%extract_uint16%19#0",
        "aggregate%extract_uint16%20#0",
        "aggregate%substring3%12#0",
        "app#0",
        "tmp%4#5"
      ],
      "stack_out": [
        "app#0",
        "tmp%4#5",
        "aggregate%extract_uint16%19#0",
        "aggregate%substring3%12#0",
        "aggregate%extract_uint16%20#0"
      ]
    },
    "1346": {
      "op": "dig 1",
      "stack_out": [
        "app#0",
        "tmp%4#5",
        "aggregate%extract_uint16%19#0",
        "aggregate%substring3%12#0",
        "aggregate%extract_uint16%20#0",
        "aggregate%substring3%12#0 (copy)"
      ]
    },
    "1348": {
      "op": "intc_3 // 2",
      "stack_out": [
        "app#0",
        "tmp%4#5",
        "aggregate%extract_uint16%19#0",
        "aggregate%substring3%12#0",
        "aggregate%extract_uint16%20#0",
        "aggregate%substring3%12#0 (copy)",
        "2"
      ]
    },
    "1349": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%extract_uint16%19#0",
        "aggregate%extract_uint16%20#0",
        "aggregate%extract_uint16%21#0",
        "aggregate%substring3%12#0",
        "app#0",
        "tmp%4#5"
      ],
      "stack_out": [
        "app#0",
        "tmp%4#5",
        "aggregate%extract_uint16%19#0",
        "aggregate%substring3%12#0",
        "aggregate%extract_uint16%20#0",
        "aggregate%extract_uint16%21#0"
      ]
    },
    "1350": {
      "op": "dig 2",
      "stack_out": [
        "app#0",
        "tmp%4#5",
        "aggregate%extract_uint16%19#0",
        "aggregate%substring3%12#0",
        "aggregate%extract_uint16%20#0",
        "aggregate%extract_uint16%21#0",
        "aggregate%substring3%12#0 (copy)"
      ]
    },
    "1352": {
      "op": "uncover 2",
      "stack_out": [
        "app#0",
        "tmp%4#5",
        "aggregate%extract_uint16%19#0",
        "aggregate%substring3%12#0",
        "aggregate%extract_uint16%21#0",
        "aggregate%substring3%12#0 (copy)",
        "aggregate%extract_uint16%20#0"
      ]
    },
    "1354": {
      "op": "dig 2",
      "defined_out": [
        "aggregate%extract_uint16%19#0",
        "aggregate%extract_uint16%20#0",
        "aggregate%extract_uint16%21#0",
        "aggregate%extract_uint16%21#0 (copy)",
        "aggregate%substring3%12#0",
        "aggregate%substring3%12#0 (copy)",
        "app#0",
        "tmp%4#5"
      ],
      "stack_out": [
        "app#0",
        "tmp%4#5",
        "aggregate%extract_uint16%19#0",
        "aggregate%substring3%12#0",
        "aggregate%extract_uint16%21#0",
        "aggregate%substring3%12#0 (copy)",
        "aggregate%extract_uint16%20#0",
        "aggregate%extract_uint16%21#0 (copy)"
      ]
    },
    "1356": {
      "op": "substring3",
      "defined_out": [
        "aggregate%extract_uint16%19#0",
        "aggregate%extract_uint16%21#0",
        "aggregate%substring3%12#0",
        "aggregate%substring3%13#0",
        "app#0",
        "tmp%4#5"
      ],
      "stack_out": [
        "app#0",
        "tmp%4#5",
        "aggregate%extract_uint16%19#0",
        "aggregate%substring3%12#0",
        "aggregate%extract_uint16%21#0",
        "aggregate%substring3%13#0"
      ]
    },
    "1357": {
      "op": "extract 2 0",
      "defined_out": [
        "aggregate%extract_uint16%19#0",
        "aggregate%extract_uint16%21#0",
        "aggregate%substring3%12#0",
        "app#0",
        "result.0.0#0",
        "tmp%4#5"
      ],
      "stack_out": [
        "app#0",
        "tmp%4#5",
        "aggregate%extract_uint16%19#0",
        "aggregate%substring3%12#0",
        "aggregate%extract_uint16%21#0",
        "result.0.0#0"
      ]
    },
    "1360": {
      "op": "dig 2",
      "stack_out": [
        "app#0",
        "tmp%4#5",
        "aggregate%extract_uint16%19#0",
        "aggregate%substring3%12#0",
        "aggregate%extract_uint16%21#0",
        "result.0.0#0",
        "aggregate%substring3%12#0 (copy)"
      ]
    },
    "1362": {
      "op": "len",
      "defined_out": [
        "aggregate%extract_uint16%19#0",
        "aggregate%extract_uint16%21#0",
        "aggregate%len%6#0",
        "aggregate%substring3%12#0",
        "app#0",
        "result.0.0#0",
        "tmp%4#5"
      ],
      "stack_out": [
        "app#0",
        "tmp%4#5",
        "aggregate%extract_uint16%19#0",
        "aggregate%substring3%12#0",
        "aggregate%extract_uint16%21#0",
        "result.0.0#0",
        "aggregate%len%6#0"
      ]
    },
    "1363": {
      "op": "swap"
    },
    "1364": {
      "op": "cover 3",
      "stack_out": [
        "app#0",
        "tmp%4#5",
        "aggregate%extract_uint16%19#0",
        "result.0.0#0",
        "aggregate%substring3%12#0",
        "aggregate%extract_uint16%21#0",
        "aggregate%len%6#0"
      ]
    },
    "1366": {
      "op": "substring3",
      "defined_out": [
        "aggregate%extract_uint16%19#0",
        "app#0",
        "result.0.0#0",
        "result.0.1#0",
        "tmp%4#5"
      ],
      "stack_out": [
        "app#0",
        "tmp%4#5",
        "aggregate%extract_uint16%19#0",
        "result.0.0#0",
        "result.0.1#0"
      ]
    },
    "1367": {
      "op": "dig 3",
      "stack_out": [
        "app#0",
        "tmp%4#5",
        "aggregate%extract_uint16%19#0",
        "result.0.0#0",
        "result.0.1#0",
        "tmp%4#5 (copy)"
      ]
    },
    "1369": {
      "op": "len",
      "defined_out": [
        "aggregate%extract_uint16%19#0",
        "aggregate%len%7#0",
        "app#0",
        "result.0.0#0",
        "result.0.1#0",
        "tmp%4#5"
      ],
      "stack_out": [
        "app#0",
        "tmp%4#5",
        "aggregate%extract_uint16%19#0",
        "result.0.0#0",
        "result.0.1#0",
        "aggregate%len%7#0"
      ]
    },
    "1370": {
      "op": "uncover 4",
      "stack_out": [
        "app#0",
        "aggregate%extract_uint16%19#0",
        "result.0.0#0",
        "result.0.1#0",
        "aggregate%len%7#0",
        "tmp%4#5"
      ]
    },
    "1372": {
      "op": "uncover 4",
      "stack_out": [
        "app#0",
        "result.0.0#0",
        "result.0.1#0",
        "aggregate%len%7#0",
        "tmp%4#5",
        "aggregate%extract_uint16%19#0"
      ]
    },
    "1374": {
      "op": "uncover 2",
      "stack_out": [
        "app#0",
        "result.0.0#0",
        "result.0.1#0",
        "tmp%4#5",
        "aggregate%extract_uint16%19#0",
        "aggregate%len%7#0"
      ]
    },
    "1376": {
      "op": "substring3",
      "defined_out": [
        "aggregate%substring3%15#0",
        "app#0",
        "result.0.0#0",
        "result.0.1#0"
      ],
      "stack_out": [
        "app#0",
        "result.0.0#0",
        "result.0.1#0",
        "aggregate%substring3%15#0"
      ]
    },
    "1377": {
      "op": "dup",
      "defined_out": [
        "aggregate%substring3%15#0",
        "aggregate%substring3%15#0 (copy)",
        "app#0",
        "result.0.0#0",
        "result.0.1#0"
      ],
      "stack_out": [
        "app#0",
        "result.0.0#0",
        "result.0.1#0",
        "aggregate%substring3%15#0",
        "aggregate%substring3%15#0 (copy)"
      ]
    },
    "1378": {
      "op": "intc_0 // 0",
      "stack_out": [
        "app#0",
        "result.0.0#0",
        "result.0.1#0",
        "aggregate%substring3%15#0",
        "aggregate%substring3%15#0 (copy)",
        "0"
      ]
    },
    "1379": {
      "op": "extract_uint64",
      "defined_out": [
        "aggregate%substring3%15#0",
        "app#0",
        "result.0.0#0",
        "result.0.1#0",
        "result.1.0#0"
      ],
      "stack_out": [
        "app#0",
        "result.0.0#0",
        "result.0.1#0",
        "aggregate%substring3%15#0",
        "result.1.0#0"
      ]
    },
    "1380": {
      "op": "dig 1",
      "stack_out": [
        "app#0",
        "result.0.0#0",
        "result.0.1#0",
        "aggregate%substring3%15#0",
        "result.1.0#0",
        "aggregate%substring3%15#0 (copy)"
      ]
    },
    "1382": {
      "op": "extract 8 8",
      "defined_out": [
        "aggregate%substring3%15#0",
        "app#0",
        "result.0.0#0",
        "result.0.1#0",
        "result.1.0#0",
        "result.1.1#0"
      ],
      "stack_out": [
        "app#0",
        "result.0.0#0",
        "result.0.1#0",
        "aggregate%substring3%15#0",
        "result.1.0#0",
        "result.1.1#0"
      ]
    },
    "1385": {
      "op": "dig 2",
      "stack_out": [
        "app#0",
        "result.0.0#0",
        "result.0.1#0",
        "aggregate%substring3%15#0",
        "result.1.0#0",
        "result.1.1#0",
        "aggregate%substring3%15#0 (copy)"
      ]
    },
    "1387": {
      "op": "pushint 16 // 16",
      "defined_out": [
        "16",
        "aggregate%substring3%15#0",
        "aggregate%substring3%15#0 (copy)",
        "app#0",
        "result.0.0#0",
        "result.0.1#0",
        "result.1.0#0",
        "result.1.1#0"
      ],
      "stack_out": [
        "app#0",
        "result.0.0#0",
        "result.0.1#0",
        "aggregate%substring3%15#0",
        "result.1.0#0",
        "result.1.1#0",
        "aggregate%substring3%15#0 (copy)",
        "16"
      ]
    },
    "1389": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%extract_uint16%24#0",
        "aggregate%substring3%15#0",
        "app#0",
        "result.0.0#0",
        "result.0.1#0",
        "result.1.0#0",
        "result.1.1#0"
      ],
      "stack_out": [
        "app#0",
        "result.0.0#0",
        "result.0.1#0",
        "aggregate%substring3%15#0",
        "result.1.0#0",
        "result.1.1#0",
        "aggregate%extract_uint16%24#0"
      ]
    },
    "1390": {
      "op": "dig 3",
      "stack_out": [
        "app#0",
        "result.0.0#0",
        "result.0.1#0",
        "aggregate%substring3%15#0",
        "result.1.0#0",
        "result.1.1#0",
        "aggregate%extract_uint16%24#0",
        "aggregate%substring3%15#0 (copy)"
      ]
    },
    "1392": {
      "op": "len",
      "defined_out": [
        "aggregate%extract_uint16%24#0",
        "aggregate%len%8#0",
        "aggregate%substring3%15#0",
        "app#0",
        "result.0.0#0",
        "result.0.1#0",
        "result.1.0#0",
        "result.1.1#0"
      ],
      "stack_out": [
        "app#0",
        "result.0.0#0",
        "result.0.1#0",
        "aggregate%substring3%15#0",
        "result.1.0#0",
        "result.1.1#0",
        "aggregate%extract_uint16%24#0",
        "aggregate%len%8#0"
      ]
    },
    "1393": {
      "op": "uncover 4",
      "stack_out": [
        "app#0",
        "result.0.0#0",
        "result.0.1#0",
        "result.1.0#0",
        "result.1.1#0",
        "aggregate%extract_uint16%24#0",
        "aggregate%len%8#0",
        "aggregate%substring3%15#0"
      ]
    },
    "1395": {
      "op": "cover 2",
      "stack_out": [
        "app#0",
        "result.0.0#0",
        "result.0.1#0",
        "result.1.0#0",
        "result.1.1#0",
        "aggregate%substring3%15#0",
        "aggregate%extract_uint16%24#0",
        "aggregate%len%8#0"
      ]
    },
    "1397": {
      "op": "substring3",
      "defined_out": [
        "aggregate%substring3%16#0",
        "app#0",
        "result.0.0#0",
        "result.0.1#0",
        "result.1.0#0",
        "result.1.1#0"
      ],
      "stack_out": [
        "app#0",
        "result.0.0#0",
        "result.0.1#0",
        "result.1.0#0",
        "result.1.1#0",
        "aggregate%substring3%16#0"
      ]
    },
    "1398": {
      "op": "extract 2 0",
      "defined_out": [
        "app#0",
        "result.0.0#0",
        "result.0.1#0",
        "result.1.0#0",
        "result.1.1#0",
        "result.1.2#0"
      ],
      "stack_out": [
        "app#0",
        "result.0.0#0",
        "result.0.1#0",
        "result.1.0#0",
        "result.1.1#0",
        "result.1.2#0"
      ]
    },
    "1401": {
      "op": "uncover 4",
      "stack_out": [
        "app#0",
        "result.0.1#0",
        "result.1.0#0",
        "result.1.1#0",
        "result.1.2#0",
        "result.0.0#0"
      ]
    },
    "1403": {
      "op": "bytec 10 // \"echo: s1\"",
      "defined_out": [
        "\"echo: s1\"",
        "app#0",
        "result.0.0#0",
        "result.0.1#0",
        "result.1.0#0",
        "result.1.1#0",
        "result.1.2#0"
      ],
      "stack_out": [
        "app#0",
        "result.0.1#0",
        "result.1.0#0",
        "result.1.1#0",
        "result.1.2#0",
        "result.0.0#0",
        "\"echo: s1\""
      ]
    },
    "1405": {
      "op": "==",
      "defined_out": [
        "app#0",
        "result.0.1#0",
        "result.1.0#0",
        "result.1.1#0",
        "result.1.2#0",
        "tmp%12#1"
      ],
      "stack_out": [
        "app#0",
        "result.0.1#0",
        "result.1.0#0",
        "result.1.1#0",
        "result.1.2#0",
        "tmp%12#1"
      ]
    },
    "1406": {
      "op": "assert",
      "stack_out": [
        "app#0",
        "result.0.1#0",
        "result.1.0#0",
        "result.1.1#0",
        "result.1.2#0"
      ]
    },
    "1407": {
      "op": "uncover 3",
      "stack_out": [
        "app#0",
        "result.1.0#0",
        "result.1.1#0",
        "result.1.2#0",
        "result.0.1#0"
      ]
    },
    "1409": {
      "op": "bytec 27 // 0x00086563686f3a207332",
      "defined_out": [
        "0x00086563686f3a207332",
        "app#0",
        "result.0.1#0",
        "result.1.0#0",
        "result.1.1#0",
        "result.1.2#0"
      ],
      "stack_out": [
        "app#0",
        "result.1.0#0",
        "result.1.1#0",
        "result.1.2#0",
        "result.0.1#0",
        "0x00086563686f3a207332"
      ]
    },
    "1411": {
      "op": "==",
      "defined_out": [
        "app#0",
        "result.1.0#0",
        "result.1.1#0",
        "result.1.2#0",
        "tmp%14#3"
      ],
      "stack_out": [
        "app#0",
        "result.1.0#0",
        "result.1.1#0",
        "result.1.2#0",
        "tmp%14#3"
      ]
    },
    "1412": {
      "op": "assert",
      "stack_out": [
        "app#0",
        "result.1.0#0",
        "result.1.1#0",
        "result.1.2#0"
      ]
    },
    "1413": {
      "op": "uncover 2",
      "stack_out": [
        "app#0",
        "result.1.1#0",
        "result.1.2#0",
        "result.1.0#0"
      ]
    },
    "1415": {
      "op": "intc_3 // 2",
      "stack_out": [
        "app#0",
        "result.1.1#0",
        "result.1.2#0",
        "result.1.0#0",
        "2"
      ]
    },
    "1416": {
      "op": "==",
      "defined_out": [
        "app#0",
        "result.1.1#0",
        "result.1.2#0",
        "tmp%15#2"
      ],
      "stack_out": [
        "app#0",
        "result.1.1#0",
        "result.1.2#0",
        "tmp%15#2"
      ]
    },
    "1417": {
      "op": "assert",
      "stack_out": [
        "app#0",
        "result.1.1#0",
        "result.1.2#0"
      ]
    },
    "1418": {
      "op": "swap",
      "stack_out": [
        "app#0",
        "result.1.2#0",
        "result.1.1#0"
      ]
    },
    "1419": {
      "op": "bytec 16 // 0x0000000000000003",
      "defined_out": [
        "0x0000000000000003",
        "app#0",
        "result.1.1#0",
        "result.1.2#0"
      ],
      "stack_out": [
        "app#0",
        "result.1.2#0",
        "result.1.1#0",
        "0x0000000000000003"
      ]
    },
    "1421": {
      "op": "b==",
      "defined_out": [
        "app#0",
        "result.1.2#0",
        "tmp%16#0"
      ],
      "stack_out": [
        "app#0",
        "result.1.2#0",
        "tmp%16#0"
      ]
    },
    "1422": {
      "op": "assert",
      "stack_out": [
        "app#0",
        "result.1.2#0"
      ]
    },
    "1423": {
      "op": "bytec 28 // 0x6563686f3a2033",
      "defined_out": [
        "0x6563686f3a2033",
        "app#0",
        "result.1.2#0"
      ],
      "stack_out": [
        "app#0",
        "result.1.2#0",
        "0x6563686f3a2033"
      ]
    },
    "1425": {
      "op": "==",
      "defined_out": [
        "app#0",
        "tmp%17#2"
      ],
      "stack_out": [
        "app#0",
        "tmp%17#2"
      ]
    },
    "1426": {
      "op": "assert",
      "stack_out": [
        "app#0"
      ]
    },
    "1427": {
      "op": "itxn_begin"
    },
    "1428": {
      "op": "dup",
      "stack_out": [
        "app#0",
        "app#0 (copy)"
      ]
    },
    "1429": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "app#0"
      ]
    },
    "1431": {
      "op": "bytec 15 // method \"echo_nested_tuple(((string,string),(uint64,uint64,byte[])))((string,string),(uint64,uint64,byte[]))\"",
      "stack_out": [
        "app#0",
        "Method(echo_nested_tuple(((string,string),(uint64,uint64,byte[])))((string,string),(uint64,uint64,byte[])))"
      ]
    },
    "1433": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0"
      ]
    },
    "1435": {
      "op": "bytec 26 // 0x00040010000400080002733100027332000000000000000100000000000000020012000133",
      "stack_out": [
        "app#0",
        "0x00040010000400080002733100027332000000000000000100000000000000020012000133"
      ]
    },
    "1437": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0"
      ]
    },
    "1439": {
      "op": "intc_1 // appl",
      "stack_out": [
        "app#0",
        "appl"
      ]
    },
    "1440": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "app#0"
      ]
    },
    "1442": {
      "op": "intc_0 // 0",
      "stack_out": [
        "app#0",
        "0"
      ]
    },
    "1443": {
      "op": "itxn_field Fee",
      "stack_out": [
        "app#0"
      ]
    },
    "1445": {
      "op": "itxn_submit"
    },
    "1446": {
      "op": "itxn LastLog",
      "defined_out": [
        "app#0",
        "awst_tmp%1#0"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%1#0"
      ]
    },
    "1448": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "awst_tmp%1#0",
        "awst_tmp%1#0 (copy)"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%1#0",
        "awst_tmp%1#0 (copy)"
      ]
    },
    "1449": {
      "op": "extract 4 0",
      "defined_out": [
        "app#0",
        "awst_tmp%1#0",
        "tmp%20#1"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%1#0",
        "tmp%20#1"
      ]
    },
    "1452": {
      "op": "swap",
      "stack_out": [
        "app#0",
        "tmp%20#1",
        "awst_tmp%1#0"
      ]
    },
    "1453": {
      "op": "extract 0 4",
      "defined_out": [
        "app#0",
        "tmp%20#1",
        "tmp%21#1"
      ],
      "stack_out": [
        "app#0",
        "tmp%20#1",
        "tmp%21#1"
      ]
    },
    "1456": {
      "op": "bytec_0 // 0x151f7c75",
      "stack_out": [
        "app#0",
        "tmp%20#1",
        "tmp%21#1",
        "0x151f7c75"
      ]
    },
    "1457": {
      "op": "==",
      "defined_out": [
        "app#0",
        "tmp%20#1",
        "tmp%22#1"
      ],
      "stack_out": [
        "app#0",
        "tmp%20#1",
        "tmp%22#1"
      ]
    },
    "1458": {
      "error": "application log value is not the result of an ABI return",
      "op": "assert // application log value is not the result of an ABI return",
      "stack_out": [
        "app#0",
        "tmp%20#1"
      ]
    },
    "1459": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "tmp%20#1",
        "tmp%20#1 (copy)"
      ],
      "stack_out": [
        "app#0",
        "tmp%20#1",
        "tmp%20#1 (copy)"
      ]
    },
    "1460": {
      "op": "intc_0 // 0",
      "stack_out": [
        "app#0",
        "tmp%20#1",
        "tmp%20#1 (copy)",
        "0"
      ]
    },
    "1461": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%extract_uint16%25#0",
        "app#0",
        "tmp%20#1"
      ],
      "stack_out": [
        "app#0",
        "tmp%20#1",
        "aggregate%extract_uint16%25#0"
      ]
    },
    "1462": {
      "op": "dig 1",
      "stack_out": [
        "app#0",
        "tmp%20#1",
        "aggregate%extract_uint16%25#0",
        "tmp%20#1 (copy)"
      ]
    },
    "1464": {
      "op": "intc_3 // 2",
      "stack_out": [
        "app#0",
        "tmp%20#1",
        "aggregate%extract_uint16%25#0",
        "tmp%20#1 (copy)",
        "2"
      ]
    },
    "1465": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%extract_uint16%25#0",
        "aggregate%extract_uint16%26#0",
        "app#0",
        "tmp%20#1"
      ],
      "stack_out": [
        "app#0",
        "tmp%20#1",
        "aggregate%extract_uint16%25#0",
        "aggregate%extract_uint16%26#0"
      ]
    },
    "1466": {
      "op": "dig 2",
      "stack_out": [
        "app#0",
        "tmp%20#1",
        "aggregate%extract_uint16%25#0",
        "aggregate%extract_uint16%26#0",
        "tmp%20#1 (copy)"
      ]
    },
    "1468": {
      "op": "uncover 2",
      "stack_out": [
        "app#0",
        "tmp%20#1",
        "aggregate%extract_uint16%26#0",
        "tmp%20#1 (copy)",
        "aggregate%extract_uint16%25#0"
      ]
    },
    "1470": {
      "op": "dig 2",
      "defined_out": [
        "aggregate%extract_uint16%25#0",
        "aggregate%extract_uint16%26#0",
        "aggregate%extract_uint16%26#0 (copy)",
        "app#0",
        "tmp%20#1",
        "tmp%20#1 (copy)"
      ],
      "stack_out": [
        "app#0",
        "tmp%20#1",
        "aggregate%extract_uint16%26#0",
        "tmp%20#1 (copy)",
        "aggregate%extract_uint16%25#0",
        "aggregate%extract_uint16%26#0 (copy)"
      ]
    },
    "1472": {
      "op": "substring3",
      "defined_out": [
        "aggregate%extract_uint16%26#0",
        "aggregate%substring3%17#0",
        "app#0",
        "tmp%20#1"
      ],
      "stack_out": [
        "app#0",
        "tmp%20#1",
        "aggregate%extract_uint16%26#0",
        "aggregate%substring3%17#0"
      ]
    },
    "1473": {
      "op": "dup",
      "defined_out": [
        "aggregate%extract_uint16%26#0",
        "aggregate%substring3%17#0",
        "aggregate%substring3%17#0 (copy)",
        "app#0",
        "tmp%20#1"
      ],
      "stack_out": [
        "app#0",
        "tmp%20#1",
        "aggregate%extract_uint16%26#0",
        "aggregate%substring3%17#0",
        "aggregate%substring3%17#0 (copy)"
      ]
    },
    "1474": {
      "op": "intc_0 // 0",
      "stack_out": [
        "app#0",
        "tmp%20#1",
        "aggregate%extract_uint16%26#0",
        "aggregate%substring3%17#0",
        "aggregate%substring3%17#0 (copy)",
        "0"
      ]
    },
    "1475": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%extract_uint16%26#0",
        "aggregate%extract_uint16%27#0",
        "aggregate%substring3%17#0",
        "app#0",
        "tmp%20#1"
      ],
      "stack_out": [
        "app#0",
        "tmp%20#1",
        "aggregate%extract_uint16%26#0",
        "aggregate%substring3%17#0",
        "aggregate%extract_uint16%27#0"
      ]
    },
    "1476": {
      "op": "dig 1",
      "stack_out": [
        "app#0",
        "tmp%20#1",
        "aggregate%extract_uint16%26#0",
        "aggregate%substring3%17#0",
        "aggregate%extract_uint16%27#0",
        "aggregate%substring3%17#0 (copy)"
      ]
    },
    "1478": {
      "op": "intc_3 // 2",
      "stack_out": [
        "app#0",
        "tmp%20#1",
        "aggregate%extract_uint16%26#0",
        "aggregate%substring3%17#0",
        "aggregate%extract_uint16%27#0",
        "aggregate%substring3%17#0 (copy)",
        "2"
      ]
    },
    "1479": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%extract_uint16%26#0",
        "aggregate%extract_uint16%27#0",
        "aggregate%extract_uint16%28#0",
        "aggregate%substring3%17#0",
        "app#0",
        "tmp%20#1"
      ],
      "stack_out": [
        "app#0",
        "tmp%20#1",
        "aggregate%extract_uint16%26#0",
        "aggregate%substring3%17#0",
        "aggregate%extract_uint16%27#0",
        "aggregate%extract_uint16%28#0"
      ]
    },
    "1480": {
      "op": "dig 2",
      "stack_out": [
        "app#0",
        "tmp%20#1",
        "aggregate%extract_uint16%26#0",
        "aggregate%substring3%17#0",
        "aggregate%extract_uint16%27#0",
        "aggregate%extract_uint16%28#0",
        "aggregate%substring3%17#0 (copy)"
      ]
    },
    "1482": {
      "op": "uncover 2",
      "stack_out": [
        "app#0",
        "tmp%20#1",
        "aggregate%extract_uint16%26#0",
        "aggregate%substring3%17#0",
        "aggregate%extract_uint16%28#0",
        "aggregate%substring3%17#0 (copy)",
        "aggregate%extract_uint16%27#0"
      ]
    },
    "1484": {
      "op": "dig 2",
      "defined_out": [
        "aggregate%extract_uint16%26#0",
        "aggregate%extract_uint16%27#0",
        "aggregate%extract_uint16%28#0",
        "aggregate%extract_uint16%28#0 (copy)",
        "aggregate%substring3%17#0",
        "aggregate%substring3%17#0 (copy)",
        "app#0",
        "tmp%20#1"
      ],
      "stack_out": [
        "app#0",
        "tmp%20#1",
        "aggregate%extract_uint16%26#0",
        "aggregate%substring3%17#0",
        "aggregate%extract_uint16%28#0",
        "aggregate%substring3%17#0 (copy)",
        "aggregate%extract_uint16%27#0",
        "aggregate%extract_uint16%28#0 (copy)"
      ]
    },
    "1486": {
      "op": "substring3",
      "defined_out": [
        "aggregate%extract_uint16%26#0",
        "aggregate%extract_uint16%28#0",
        "aggregate%substring3%17#0",
        "aggregate%substring3%18#0",
        "app#0",
        "tmp%20#1"
      ],
      "stack_out": [
        "app#0",
        "tmp%20#1",
        "aggregate%extract_uint16%26#0",
        "aggregate%substring3%17#0",
        "aggregate%extract_uint16%28#0",
        "aggregate%substring3%18#0"
      ]
    },
    "1487": {
      "op": "extract 2 0",
      "stack_out": [
        "app#0",
        "tmp%20#1",
        "aggregate%extract_uint16%26#0",
        "aggregate%substring3%17#0",
        "aggregate%extract_uint16%28#0",
        "result.0.0#0"
      ]
    },
    "1490": {
      "op": "dig 2",
      "stack_out": [
        "app#0",
        "tmp%20#1",
        "aggregate%extract_uint16%26#0",
        "aggregate%substring3%17#0",
        "aggregate%extract_uint16%28#0",
        "result.0.0#0",
        "aggregate%substring3%17#0 (copy)"
      ]
    },
    "1492": {
      "op": "len",
      "defined_out": [
        "aggregate%extract_uint16%26#0",
        "aggregate%extract_uint16%28#0",
        "aggregate%len%9#0",
        "aggregate%substring3%17#0",
        "app#0",
        "result.0.0#0",
        "tmp%20#1"
      ],
      "stack_out": [
        "app#0",
        "tmp%20#1",
        "aggregate%extract_uint16%26#0",
        "aggregate%substring3%17#0",
        "aggregate%extract_uint16%28#0",
        "result.0.0#0",
        "aggregate%len%9#0"
      ]
    },
    "1493": {
      "op": "swap"
    },
    "1494": {
      "op": "cover 3",
      "stack_out": [
        "app#0",
        "tmp%20#1",
        "aggregate%extract_uint16%26#0",
        "result.0.0#0",
        "aggregate%substring3%17#0",
        "aggregate%extract_uint16%28#0",
        "aggregate%len%9#0"
      ]
    },
    "1496": {
      "op": "substring3",
      "stack_out": [
        "app#0",
        "tmp%20#1",
        "aggregate%extract_uint16%26#0",
        "result.0.0#0",
        "result.0.1#0"
      ]
    },
    "1497": {
      "op": "dig 3",
      "stack_out": [
        "app#0",
        "tmp%20#1",
        "aggregate%extract_uint16%26#0",
        "result.0.0#0",
        "result.0.1#0",
        "tmp%20#1 (copy)"
      ]
    },
    "1499": {
      "op": "len",
      "defined_out": [
        "aggregate%extract_uint16%26#0",
        "aggregate%len%10#0",
        "app#0",
        "result.0.0#0",
        "result.0.1#0",
        "tmp%20#1"
      ],
      "stack_out": [
        "app#0",
        "tmp%20#1",
        "aggregate%extract_uint16%26#0",
        "result.0.0#0",
        "result.0.1#0",
        "aggregate%len%10#0"
      ]
    },
    "1500": {
      "op": "uncover 4",
      "stack_out": [
        "app#0",
        "aggregate%extract_uint16%26#0",
        "result.0.0#0",
        "result.0.1#0",
        "aggregate%len%10#0",
        "tmp%20#1"
      ]
    },
    "1502": {
      "op": "uncover 4",
      "stack_out": [
        "app#0",
        "result.0.0#0",
        "result.0.1#0",
        "aggregate%len%10#0",
        "tmp%20#1",
        "aggregate%extract_uint16%26#0"
      ]
    },
    "1504": {
      "op": "uncover 2",
      "stack_out": [
        "app#0",
        "result.0.0#0",
        "result.0.1#0",
        "tmp%20#1",
        "aggregate%extract_uint16%26#0",
        "aggregate%len%10#0"
      ]
    },
    "1506": {
      "op": "substring3",
      "defined_out": [
        "aggregate%substring3%20#0",
        "app#0",
        "result.0.0#0",
        "result.0.1#0"
      ],
      "stack_out": [
        "app#0",
        "result.0.0#0",
        "result.0.1#0",
        "aggregate%substring3%20#0"
      ]
    },
    "1507": {
      "op": "dup",
      "defined_out": [
        "aggregate%substring3%20#0",
        "aggregate%substring3%20#0 (copy)",
        "app#0",
        "result.0.0#0",
        "result.0.1#0"
      ],
      "stack_out": [
        "app#0",
        "result.0.0#0",
        "result.0.1#0",
        "aggregate%substring3%20#0",
        "aggregate%substring3%20#0 (copy)"
      ]
    },
    "1508": {
      "op": "intc_0 // 0",
      "stack_out": [
        "app#0",
        "result.0.0#0",
        "result.0.1#0",
        "aggregate%substring3%20#0",
        "aggregate%substring3%20#0 (copy)",
        "0"
      ]
    },
    "1509": {
      "op": "extract_uint64",
      "stack_out": [
        "app#0",
        "result.0.0#0",
        "result.0.1#0",
        "aggregate%substring3%20#0",
        "result.1.0#0"
      ]
    },
    "1510": {
      "op": "dig 1",
      "stack_out": [
        "app#0",
        "result.0.0#0",
        "result.0.1#0",
        "aggregate%substring3%20#0",
        "result.1.0#0",
        "aggregate%substring3%20#0 (copy)"
      ]
    },
    "1512": {
      "op": "extract 8 8",
      "stack_out": [
        "app#0",
        "result.0.0#0",
        "result.0.1#0",
        "aggregate%substring3%20#0",
        "result.1.0#0",
        "result.1.1#0"
      ]
    },
    "1515": {
      "op": "dig 2",
      "stack_out": [
        "app#0",
        "result.0.0#0",
        "result.0.1#0",
        "aggregate%substring3%20#0",
        "result.1.0#0",
        "result.1.1#0",
        "aggregate%substring3%20#0 (copy)"
      ]
    },
    "1517": {
      "op": "pushint 16 // 16",
      "stack_out": [
        "app#0",
        "result.0.0#0",
        "result.0.1#0",
        "aggregate%substring3%20#0",
        "result.1.0#0",
        "result.1.1#0",
        "aggregate%substring3%20#0 (copy)",
        "16"
      ]
    },
    "1519": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%extract_uint16%31#0",
        "aggregate%substring3%20#0",
        "app#0",
        "result.0.0#0",
        "result.0.1#0",
        "result.1.0#0",
        "result.1.1#0"
      ],
      "stack_out": [
        "app#0",
        "result.0.0#0",
        "result.0.1#0",
        "aggregate%substring3%20#0",
        "result.1.0#0",
        "result.1.1#0",
        "aggregate%extract_uint16%31#0"
      ]
    },
    "1520": {
      "op": "dig 3",
      "stack_out": [
        "app#0",
        "result.0.0#0",
        "result.0.1#0",
        "aggregate%substring3%20#0",
        "result.1.0#0",
        "result.1.1#0",
        "aggregate%extract_uint16%31#0",
        "aggregate%substring3%20#0 (copy)"
      ]
    },
    "1522": {
      "op": "len",
      "defined_out": [
        "aggregate%extract_uint16%31#0",
        "aggregate%len%11#0",
        "aggregate%substring3%20#0",
        "app#0",
        "result.0.0#0",
        "result.0.1#0",
        "result.1.0#0",
        "result.1.1#0"
      ],
      "stack_out": [
        "app#0",
        "result.0.0#0",
        "result.0.1#0",
        "aggregate%substring3%20#0",
        "result.1.0#0",
        "result.1.1#0",
        "aggregate%extract_uint16%31#0",
        "aggregate%len%11#0"
      ]
    },
    "1523": {
      "op": "uncover 4",
      "stack_out": [
        "app#0",
        "result.0.0#0",
        "result.0.1#0",
        "result.1.0#0",
        "result.1.1#0",
        "aggregate%extract_uint16%31#0",
        "aggregate%len%11#0",
        "aggregate%substring3%20#0"
      ]
    },
    "1525": {
      "op": "cover 2",
      "stack_out": [
        "app#0",
        "result.0.0#0",
        "result.0.1#0",
        "result.1.0#0",
        "result.1.1#0",
        "aggregate%substring3%20#0",
        "aggregate%extract_uint16%31#0",
        "aggregate%len%11#0"
      ]
    },
    "1527": {
      "op": "substring3",
      "defined_out": [
        "aggregate%substring3%21#0",
        "app#0",
        "result.0.0#0",
        "result.0.1#0",
        "result.1.0#0",
        "result.1.1#0"
      ],
      "stack_out": [
        "app#0",
        "result.0.0#0",
        "result.0.1#0",
        "result.1.0#0",
        "result.1.1#0",
        "aggregate%substring3%21#0"
      ]
    },
    "1528": {
      "op": "extract 2 0",
      "stack_out": [
        "app#0",
        "result.0.0#0",
        "result.0.1#0",
        "result.1.0#0",
        "result.1.1#0",
        "result.1.2#0"
      ]
    },
    "1531": {
      "op": "uncover 4",
      "stack_out": [
        "app#0",
        "result.0.1#0",
        "result.1.0#0",
        "result.1.1#0",
        "result.1.2#0",
        "result.0.0#0"
      ]
    },
    "1533": {
      "op": "bytec 10 // \"echo: s1\"",
      "stack_out": [
        "app#0",
        "result.0.1#0",
        "result.1.0#0",
        "result.1.1#0",
        "result.1.2#0",
        "result.0.0#0",
        "\"echo: s1\""
      ]
    },
    "1535": {
      "op": "==",
      "defined_out": [
        "app#0",
        "result.0.1#0",
        "result.1.0#0",
        "result.1.1#0",
        "result.1.2#0",
        "tmp%28#2"
      ],
      "stack_out": [
        "app#0",
        "result.0.1#0",
        "result.1.0#0",
        "result.1.1#0",
        "result.1.2#0",
        "tmp%28#2"
      ]
    },
    "1536": {
      "op": "assert",
      "stack_out": [
        "app#0",
        "result.0.1#0",
        "result.1.0#0",
        "result.1.1#0",
        "result.1.2#0"
      ]
    },
    "1537": {
      "op": "uncover 3",
      "stack_out": [
        "app#0",
        "result.1.0#0",
        "result.1.1#0",
        "result.1.2#0",
        "result.0.1#0"
      ]
    },
    "1539": {
      "op": "bytec 27 // 0x00086563686f3a207332",
      "stack_out": [
        "app#0",
        "result.1.0#0",
        "result.1.1#0",
        "result.1.2#0",
        "result.0.1#0",
        "0x00086563686f3a207332"
      ]
    },
    "1541": {
      "op": "==",
      "defined_out": [
        "app#0",
        "result.1.0#0",
        "result.1.1#0",
        "result.1.2#0",
        "tmp%30#1"
      ],
      "stack_out": [
        "app#0",
        "result.1.0#0",
        "result.1.1#0",
        "result.1.2#0",
        "tmp%30#1"
      ]
    },
    "1542": {
      "op": "assert",
      "stack_out": [
        "app#0",
        "result.1.0#0",
        "result.1.1#0",
        "result.1.2#0"
      ]
    },
    "1543": {
      "op": "uncover 2",
      "stack_out": [
        "app#0",
        "result.1.1#0",
        "result.1.2#0",
        "result.1.0#0"
      ]
    },
    "1545": {
      "op": "intc_3 // 2",
      "stack_out": [
        "app#0",
        "result.1.1#0",
        "result.1.2#0",
        "result.1.0#0",
        "2"
      ]
    },
    "1546": {
      "op": "==",
      "defined_out": [
        "app#0",
        "result.1.1#0",
        "result.1.2#0",
        "tmp%31#0"
      ],
      "stack_out": [
        "app#0",
        "result.1.1#0",
        "result.1.2#0",
        "tmp%31#0"
      ]
    },
    "1547": {
      "op": "assert",
      "stack_out": [
        "app#0",
        "result.1.1#0",
        "result.1.2#0"
      ]
    },
    "1548": {
      "op": "swap",
      "stack_out": [
        "app#0",
        "result.1.2#0",
        "result.1.1#0"
      ]
    },
    "1549": {
      "op": "bytec 16 // 0x0000000000000003",
      "stack_out": [
        "app#0",
        "result.1.2#0",
        "result.1.1#0",
        "0x0000000000000003"
      ]
    },
    "1551": {
      "op": "b==",
      "defined_out": [
        "app#0",
        "result.1.2#0",
        "tmp%32#1"
      ],
      "stack_out": [
        "app#0",
        "result.1.2#0",
        "tmp%32#1"
      ]
    },
    "1552": {
      "op": "assert",
      "stack_out": [
        "app#0",
        "result.1.2#0"
      ]
    },
    "1553": {
      "op": "bytec 28 // 0x6563686f3a2033",
      "stack_out": [
        "app#0",
        "result.1.2#0",
        "0x6563686f3a2033"
      ]
    },
    "1555": {
      "op": "==",
      "defined_out": [
        "app#0",
        "tmp%33#1"
      ],
      "stack_out": [
        "app#0",
        "tmp%33#1"
      ]
    },
    "1556": {
      "op": "assert",
      "stack_out": [
        "app#0"
      ]
    },
    "1557": {
      "op": "itxn_begin"
    },
    "1558": {
      "op": "itxn_field ApplicationID",
      "stack_out": []
    },
    "1560": {
      "op": "bytec 15 // method \"echo_nested_tuple(((string,string),(uint64,uint64,byte[])))((string,string),(uint64,uint64,byte[]))\"",
      "stack_out": [
        "Method(echo_nested_tuple(((string,string),(uint64,uint64,byte[])))((string,string),(uint64,uint64,byte[])))"
      ]
    },
    "1562": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "1564": {
      "op": "pushbytes 0x000400120004000900037331620003733262000000000000000b0000000000000015001200023362",
      "defined_out": [
        "0x000400120004000900037331620003733262000000000000000b0000000000000015001200023362"
      ],
      "stack_out": [
        "0x000400120004000900037331620003733262000000000000000b0000000000000015001200023362"
      ]
    },
    "1606": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "1608": {
      "op": "intc_1 // appl",
      "stack_out": [
        "appl"
      ]
    },
    "1609": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "1611": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0"
      ]
    },
    "1612": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "1614": {
      "op": "itxn_submit"
    },
    "1615": {
      "op": "itxn LastLog",
      "defined_out": [
        "awst_tmp%2#0"
      ],
      "stack_out": [
        "awst_tmp%2#0"
      ]
    },
    "1617": {
      "op": "dup",
      "defined_out": [
        "awst_tmp%2#0",
        "awst_tmp%2#0 (copy)"
      ],
      "stack_out": [
        "awst_tmp%2#0",
        "awst_tmp%2#0 (copy)"
      ]
    },
    "1618": {
      "op": "extract 4 0",
      "defined_out": [
        "awst_tmp%2#0",
        "tmp%40#1"
      ],
      "stack_out": [
        "awst_tmp%2#0",
        "tmp%40#1"
      ]
    },
    "1621": {
      "op": "swap",
      "stack_out": [
        "tmp%40#1",
        "awst_tmp%2#0"
      ]
    },
    "1622": {
      "op": "extract 0 4",
      "defined_out": [
        "tmp%40#1",
        "tmp%41#2"
      ],
      "stack_out": [
        "tmp%40#1",
        "tmp%41#2"
      ]
    },
    "1625": {
      "op": "bytec_0 // 0x151f7c75",
      "stack_out": [
        "tmp%40#1",
        "tmp%41#2",
        "0x151f7c75"
      ]
    },
    "1626": {
      "op": "==",
      "defined_out": [
        "tmp%40#1",
        "tmp%42#0"
      ],
      "stack_out": [
        "tmp%40#1",
        "tmp%42#0"
      ]
    },
    "1627": {
      "error": "application log value is not the result of an ABI return",
      "op": "assert // application log value is not the result of an ABI return",
      "stack_out": [
        "tmp%40#1"
      ]
    },
    "1628": {
      "op": "dup",
      "defined_out": [
        "tmp%40#1",
        "tmp%40#1 (copy)"
      ],
      "stack_out": [
        "tmp%40#1",
        "tmp%40#1 (copy)"
      ]
    },
    "1629": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%40#1",
        "tmp%40#1 (copy)",
        "0"
      ]
    },
    "1630": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%extract_uint16%32#0",
        "tmp%40#1"
      ],
      "stack_out": [
        "tmp%40#1",
        "aggregate%extract_uint16%32#0"
      ]
    },
    "1631": {
      "op": "dig 1",
      "stack_out": [
        "tmp%40#1",
        "aggregate%extract_uint16%32#0",
        "tmp%40#1 (copy)"
      ]
    },
    "1633": {
      "op": "intc_3 // 2",
      "stack_out": [
        "tmp%40#1",
        "aggregate%extract_uint16%32#0",
        "tmp%40#1 (copy)",
        "2"
      ]
    },
    "1634": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%extract_uint16%32#0",
        "aggregate%extract_uint16%33#0",
        "tmp%40#1"
      ],
      "stack_out": [
        "tmp%40#1",
        "aggregate%extract_uint16%32#0",
        "aggregate%extract_uint16%33#0"
      ]
    },
    "1635": {
      "op": "dig 2",
      "stack_out": [
        "tmp%40#1",
        "aggregate%extract_uint16%32#0",
        "aggregate%extract_uint16%33#0",
        "tmp%40#1 (copy)"
      ]
    },
    "1637": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%40#1",
        "aggregate%extract_uint16%33#0",
        "tmp%40#1 (copy)",
        "aggregate%extract_uint16%32#0"
      ]
    },
    "1639": {
      "op": "dig 2",
      "defined_out": [
        "aggregate%extract_uint16%32#0",
        "aggregate%extract_uint16%33#0",
        "aggregate%extract_uint16%33#0 (copy)",
        "tmp%40#1",
        "tmp%40#1 (copy)"
      ],
      "stack_out": [
        "tmp%40#1",
        "aggregate%extract_uint16%33#0",
        "tmp%40#1 (copy)",
        "aggregate%extract_uint16%32#0",
        "aggregate%extract_uint16%33#0 (copy)"
      ]
    },
    "1641": {
      "op": "substring3",
      "defined_out": [
        "aggregate%extract_uint16%33#0",
        "aggregate%substring3%22#0",
        "tmp%40#1"
      ],
      "stack_out": [
        "tmp%40#1",
        "aggregate%extract_uint16%33#0",
        "aggregate%substring3%22#0"
      ]
    },
    "1642": {
      "op": "dup",
      "defined_out": [
        "aggregate%extract_uint16%33#0",
        "aggregate%substring3%22#0",
        "aggregate%substring3%22#0 (copy)",
        "tmp%40#1"
      ],
      "stack_out": [
        "tmp%40#1",
        "aggregate%extract_uint16%33#0",
        "aggregate%substring3%22#0",
        "aggregate%substring3%22#0 (copy)"
      ]
    },
    "1643": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%40#1",
        "aggregate%extract_uint16%33#0",
        "aggregate%substring3%22#0",
        "aggregate%substring3%22#0 (copy)",
        "0"
      ]
    },
    "1644": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%extract_uint16%33#0",
        "aggregate%extract_uint16%34#0",
        "aggregate%substring3%22#0",
        "tmp%40#1"
      ],
      "stack_out": [
        "tmp%40#1",
        "aggregate%extract_uint16%33#0",
        "aggregate%substring3%22#0",
        "aggregate%extract_uint16%34#0"
      ]
    },
    "1645": {
      "op": "dig 1",
      "stack_out": [
        "tmp%40#1",
        "aggregate%extract_uint16%33#0",
        "aggregate%substring3%22#0",
        "aggregate%extract_uint16%34#0",
        "aggregate%substring3%22#0 (copy)"
      ]
    },
    "1647": {
      "op": "intc_3 // 2",
      "stack_out": [
        "tmp%40#1",
        "aggregate%extract_uint16%33#0",
        "aggregate%substring3%22#0",
        "aggregate%extract_uint16%34#0",
        "aggregate%substring3%22#0 (copy)",
        "2"
      ]
    },
    "1648": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%extract_uint16%33#0",
        "aggregate%extract_uint16%34#0",
        "aggregate%extract_uint16%35#0",
        "aggregate%substring3%22#0",
        "tmp%40#1"
      ],
      "stack_out": [
        "tmp%40#1",
        "aggregate%extract_uint16%33#0",
        "aggregate%substring3%22#0",
        "aggregate%extract_uint16%34#0",
        "aggregate%extract_uint16%35#0"
      ]
    },
    "1649": {
      "op": "dig 2",
      "stack_out": [
        "tmp%40#1",
        "aggregate%extract_uint16%33#0",
        "aggregate%substring3%22#0",
        "aggregate%extract_uint16%34#0",
        "aggregate%extract_uint16%35#0",
        "aggregate%substring3%22#0 (copy)"
      ]
    },
    "1651": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%40#1",
        "aggregate%extract_uint16%33#0",
        "aggregate%substring3%22#0",
        "aggregate%extract_uint16%35#0",
        "aggregate%substring3%22#0 (copy)",
        "aggregate%extract_uint16%34#0"
      ]
    },
    "1653": {
      "op": "dig 2",
      "defined_out": [
        "aggregate%extract_uint16%33#0",
        "aggregate%extract_uint16%34#0",
        "aggregate%extract_uint16%35#0",
        "aggregate%extract_uint16%35#0 (copy)",
        "aggregate%substring3%22#0",
        "aggregate%substring3%22#0 (copy)",
        "tmp%40#1"
      ],
      "stack_out": [
        "tmp%40#1",
        "aggregate%extract_uint16%33#0",
        "aggregate%substring3%22#0",
        "aggregate%extract_uint16%35#0",
        "aggregate%substring3%22#0 (copy)",
        "aggregate%extract_uint16%34#0",
        "aggregate%extract_uint16%35#0 (copy)"
      ]
    },
    "1655": {
      "op": "substring3",
      "defined_out": [
        "aggregate%extract_uint16%33#0",
        "aggregate%extract_uint16%35#0",
        "aggregate%substring3%22#0",
        "aggregate%substring3%23#0",
        "tmp%40#1"
      ],
      "stack_out": [
        "tmp%40#1",
        "aggregate%extract_uint16%33#0",
        "aggregate%substring3%22#0",
        "aggregate%extract_uint16%35#0",
        "aggregate%substring3%23#0"
      ]
    },
    "1656": {
      "op": "extract 2 0",
      "stack_out": [
        "tmp%40#1",
        "aggregate%extract_uint16%33#0",
        "aggregate%substring3%22#0",
        "aggregate%extract_uint16%35#0",
        "result.0.0#0"
      ]
    },
    "1659": {
      "op": "dig 2",
      "stack_out": [
        "tmp%40#1",
        "aggregate%extract_uint16%33#0",
        "aggregate%substring3%22#0",
        "aggregate%extract_uint16%35#0",
        "result.0.0#0",
        "aggregate%substring3%22#0 (copy)"
      ]
    },
    "1661": {
      "op": "len",
      "defined_out": [
        "aggregate%extract_uint16%33#0",
        "aggregate%extract_uint16%35#0",
        "aggregate%len%12#0",
        "aggregate%substring3%22#0",
        "result.0.0#0",
        "tmp%40#1"
      ],
      "stack_out": [
        "tmp%40#1",
        "aggregate%extract_uint16%33#0",
        "aggregate%substring3%22#0",
        "aggregate%extract_uint16%35#0",
        "result.0.0#0",
        "aggregate%len%12#0"
      ]
    },
    "1662": {
      "op": "swap"
    },
    "1663": {
      "op": "cover 3",
      "stack_out": [
        "tmp%40#1",
        "aggregate%extract_uint16%33#0",
        "result.0.0#0",
        "aggregate%substring3%22#0",
        "aggregate%extract_uint16%35#0",
        "aggregate%len%12#0"
      ]
    },
    "1665": {
      "op": "substring3",
      "stack_out": [
        "tmp%40#1",
        "aggregate%extract_uint16%33#0",
        "result.0.0#0",
        "result.0.1#0"
      ]
    },
    "1666": {
      "op": "dig 3",
      "stack_out": [
        "tmp%40#1",
        "aggregate%extract_uint16%33#0",
        "result.0.0#0",
        "result.0.1#0",
        "tmp%40#1 (copy)"
      ]
    },
    "1668": {
      "op": "len",
      "defined_out": [
        "aggregate%extract_uint16%33#0",
        "aggregate%len%13#0",
        "result.0.0#0",
        "result.0.1#0",
        "tmp%40#1"
      ],
      "stack_out": [
        "tmp%40#1",
        "aggregate%extract_uint16%33#0",
        "result.0.0#0",
        "result.0.1#0",
        "aggregate%len%13#0"
      ]
    },
    "1669": {
      "op": "uncover 4",
      "stack_out": [
        "aggregate%extract_uint16%33#0",
        "result.0.0#0",
        "result.0.1#0",
        "aggregate%len%13#0",
        "tmp%40#1"
      ]
    },
    "1671": {
      "op": "uncover 4",
      "stack_out": [
        "result.0.0#0",
        "result.0.1#0",
        "aggregate%len%13#0",
        "tmp%40#1",
        "aggregate%extract_uint16%33#0"
      ]
    },
    "1673": {
      "op": "uncover 2",
      "stack_out": [
        "result.0.0#0",
        "result.0.1#0",
        "tmp%40#1",
        "aggregate%extract_uint16%33#0",
        "aggregate%len%13#0"
      ]
    },
    "1675": {
      "op": "substring3",
      "defined_out": [
        "aggregate%substring3%25#0",
        "result.0.0#0",
        "result.0.1#0"
      ],
      "stack_out": [
        "result.0.0#0",
        "result.0.1#0",
        "aggregate%substring3%25#0"
      ]
    },
    "1676": {
      "op": "dup",
      "defined_out": [
        "aggregate%substring3%25#0",
        "aggregate%substring3%25#0 (copy)",
        "result.0.0#0",
        "result.0.1#0"
      ],
      "stack_out": [
        "result.0.0#0",
        "result.0.1#0",
        "aggregate%substring3%25#0",
        "aggregate%substring3%25#0 (copy)"
      ]
    },
    "1677": {
      "op": "intc_0 // 0",
      "stack_out": [
        "result.0.0#0",
        "result.0.1#0",
        "aggregate%substring3%25#0",
        "aggregate%substring3%25#0 (copy)",
        "0"
      ]
    },
    "1678": {
      "op": "extract_uint64",
      "stack_out": [
        "result.0.0#0",
        "result.0.1#0",
        "aggregate%substring3%25#0",
        "result.1.0#0"
      ]
    },
    "1679": {
      "op": "dig 1",
      "stack_out": [
        "result.0.0#0",
        "result.0.1#0",
        "aggregate%substring3%25#0",
        "result.1.0#0",
        "aggregate%substring3%25#0 (copy)"
      ]
    },
    "1681": {
      "op": "extract 8 8",
      "stack_out": [
        "result.0.0#0",
        "result.0.1#0",
        "aggregate%substring3%25#0",
        "result.1.0#0",
        "result.1.1#0"
      ]
    },
    "1684": {
      "op": "dig 2",
      "stack_out": [
        "result.0.0#0",
        "result.0.1#0",
        "aggregate%substring3%25#0",
        "result.1.0#0",
        "result.1.1#0",
        "aggregate%substring3%25#0 (copy)"
      ]
    },
    "1686": {
      "op": "pushint 16 // 16",
      "stack_out": [
        "result.0.0#0",
        "result.0.1#0",
        "aggregate%substring3%25#0",
        "result.1.0#0",
        "result.1.1#0",
        "aggregate%substring3%25#0 (copy)",
        "16"
      ]
    },
    "1688": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%extract_uint16%38#0",
        "aggregate%substring3%25#0",
        "result.0.0#0",
        "result.0.1#0",
        "result.1.0#0",
        "result.1.1#0"
      ],
      "stack_out": [
        "result.0.0#0",
        "result.0.1#0",
        "aggregate%substring3%25#0",
        "result.1.0#0",
        "result.1.1#0",
        "aggregate%extract_uint16%38#0"
      ]
    },
    "1689": {
      "op": "dig 3",
      "stack_out": [
        "result.0.0#0",
        "result.0.1#0",
        "aggregate%substring3%25#0",
        "result.1.0#0",
        "result.1.1#0",
        "aggregate%extract_uint16%38#0",
        "aggregate%substring3%25#0 (copy)"
      ]
    },
    "1691": {
      "op": "len",
      "defined_out": [
        "aggregate%extract_uint16%38#0",
        "aggregate%len%14#0",
        "aggregate%substring3%25#0",
        "result.0.0#0",
        "result.0.1#0",
        "result.1.0#0",
        "result.1.1#0"
      ],
      "stack_out": [
        "result.0.0#0",
        "result.0.1#0",
        "aggregate%substring3%25#0",
        "result.1.0#0",
        "result.1.1#0",
        "aggregate%extract_uint16%38#0",
        "aggregate%len%14#0"
      ]
    },
    "1692": {
      "op": "uncover 4",
      "stack_out": [
        "result.0.0#0",
        "result.0.1#0",
        "result.1.0#0",
        "result.1.1#0",
        "aggregate%extract_uint16%38#0",
        "aggregate%len%14#0",
        "aggregate%substring3%25#0"
      ]
    },
    "1694": {
      "op": "cover 2",
      "stack_out": [
        "result.0.0#0",
        "result.0.1#0",
        "result.1.0#0",
        "result.1.1#0",
        "aggregate%substring3%25#0",
        "aggregate%extract_uint16%38#0",
        "aggregate%len%14#0"
      ]
    },
    "1696": {
      "op": "substring3",
      "defined_out": [
        "aggregate%substring3%26#0",
        "result.0.0#0",
        "result.0.1#0",
        "result.1.0#0",
        "result.1.1#0"
      ],
      "stack_out": [
        "result.0.0#0",
        "result.0.1#0",
        "result.1.0#0",
        "result.1.1#0",
        "aggregate%substring3%26#0"
      ]
    },
    "1697": {
      "op": "extract 2 0",
      "stack_out": [
        "result.0.0#0",
        "result.0.1#0",
        "result.1.0#0",
        "result.1.1#0",
        "result.1.2#0"
      ]
    },
    "1700": {
      "op": "uncover 4",
      "stack_out": [
        "result.0.1#0",
        "result.1.0#0",
        "result.1.1#0",
        "result.1.2#0",
        "result.0.0#0"
      ]
    },
    "1702": {
      "op": "pushbytes \"echo: s1b\"",
      "defined_out": [
        "\"echo: s1b\"",
        "result.0.0#0",
        "result.0.1#0",
        "result.1.0#0",
        "result.1.1#0",
        "result.1.2#0"
      ],
      "stack_out": [
        "result.0.1#0",
        "result.1.0#0",
        "result.1.1#0",
        "result.1.2#0",
        "result.0.0#0",
        "\"echo: s1b\""
      ]
    },
    "1713": {
      "op": "==",
      "defined_out": [
        "result.0.1#0",
        "result.1.0#0",
        "result.1.1#0",
        "result.1.2#0",
        "tmp%48#1"
      ],
      "stack_out": [
        "result.0.1#0",
        "result.1.0#0",
        "result.1.1#0",
        "result.1.2#0",
        "tmp%48#1"
      ]
    },
    "1714": {
      "op": "assert",
      "stack_out": [
        "result.0.1#0",
        "result.1.0#0",
        "result.1.1#0",
        "result.1.2#0"
      ]
    },
    "1715": {
      "op": "uncover 3",
      "stack_out": [
        "result.1.0#0",
        "result.1.1#0",
        "result.1.2#0",
        "result.0.1#0"
      ]
    },
    "1717": {
      "op": "pushbytes 0x00096563686f3a20733262",
      "defined_out": [
        "0x00096563686f3a20733262",
        "result.0.1#0",
        "result.1.0#0",
        "result.1.1#0",
        "result.1.2#0"
      ],
      "stack_out": [
        "result.1.0#0",
        "result.1.1#0",
        "result.1.2#0",
        "result.0.1#0",
        "0x00096563686f3a20733262"
      ]
    },
    "1730": {
      "op": "==",
      "defined_out": [
        "result.1.0#0",
        "result.1.1#0",
        "result.1.2#0",
        "tmp%50#1"
      ],
      "stack_out": [
        "result.1.0#0",
        "result.1.1#0",
        "result.1.2#0",
        "tmp%50#1"
      ]
    },
    "1731": {
      "op": "assert",
      "stack_out": [
        "result.1.0#0",
        "result.1.1#0",
        "result.1.2#0"
      ]
    },
    "1732": {
      "op": "uncover 2",
      "stack_out": [
        "result.1.1#0",
        "result.1.2#0",
        "result.1.0#0"
      ]
    },
    "1734": {
      "op": "pushint 12 // 12",
      "defined_out": [
        "12",
        "result.1.0#0",
        "result.1.1#0",
        "result.1.2#0"
      ],
      "stack_out": [
        "result.1.1#0",
        "result.1.2#0",
        "result.1.0#0",
        "12"
      ]
    },
    "1736": {
      "op": "==",
      "defined_out": [
        "result.1.1#0",
        "result.1.2#0",
        "tmp%51#1"
      ],
      "stack_out": [
        "result.1.1#0",
        "result.1.2#0",
        "tmp%51#1"
      ]
    },
    "1737": {
      "op": "assert",
      "stack_out": [
        "result.1.1#0",
        "result.1.2#0"
      ]
    },
    "1738": {
      "op": "swap",
      "stack_out": [
        "result.1.2#0",
        "result.1.1#0"
      ]
    },
    "1739": {
      "op": "pushbytes 0x0000000000000016",
      "defined_out": [
        "0x0000000000000016",
        "result.1.1#0",
        "result.1.2#0"
      ],
      "stack_out": [
        "result.1.2#0",
        "result.1.1#0",
        "0x0000000000000016"
      ]
    },
    "1749": {
      "op": "b==",
      "defined_out": [
        "result.1.2#0",
        "tmp%52#0"
      ],
      "stack_out": [
        "result.1.2#0",
        "tmp%52#0"
      ]
    },
    "1750": {
      "op": "assert",
      "stack_out": [
        "result.1.2#0"
      ]
    },
    "1751": {
      "op": "pushbytes 0x6563686f3a203362",
      "defined_out": [
        "0x6563686f3a203362",
        "result.1.2#0"
      ],
      "stack_out": [
        "result.1.2#0",
        "0x6563686f3a203362"
      ]
    },
    "1761": {
      "op": "==",
      "defined_out": [
        "tmp%53#2"
      ],
      "stack_out": [
        "tmp%53#2"
      ]
    },
    "1762": {
      "op": "assert",
      "stack_out": []
    },
    "1763": {
      "op": "intc_2 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1764": {
      "op": "return",
      "stack_out": []
    },
    "1765": {
      "block": "main_test_native_tuple_method_ref_route@16",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%71#0"
      ],
      "stack_out": [
        "tmp%71#0"
      ]
    },
    "1767": {
      "op": "!",
      "defined_out": [
        "tmp%72#0"
      ],
      "stack_out": [
        "tmp%72#0"
      ]
    },
    "1768": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "1769": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%73#0"
      ],
      "stack_out": [
        "tmp%73#0"
      ]
    },
    "1771": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "1772": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded(uint64)%14#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint64)%14#0"
      ]
    },
    "1775": {
      "op": "btoi",
      "defined_out": [
        "app#0"
      ],
      "stack_out": [
        "app#0"
      ]
    },
    "1776": {
      "op": "itxn_begin"
    },
    "1777": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "app#0 (copy)"
      ],
      "stack_out": [
        "app#0",
        "app#0 (copy)"
      ]
    },
    "1778": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "app#0"
      ]
    },
    "1780": {
      "op": "bytec 4 // method \"echo_native_tuple(string,byte[],uint64,uint512)(string,byte[],uint64,uint512)\"",
      "defined_out": [
        "Method(echo_native_tuple(string,byte[],uint64,uint512)(string,byte[],uint64,uint512))",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "Method(echo_native_tuple(string,byte[],uint64,uint512)(string,byte[],uint64,uint512))"
      ]
    },
    "1782": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0"
      ]
    },
    "1784": {
      "op": "bytec 5 // 0x00027331",
      "defined_out": [
        "0x00027331",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "0x00027331"
      ]
    },
    "1786": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0"
      ]
    },
    "1788": {
      "op": "bytec 6 // 0x00026231",
      "defined_out": [
        "0x00026231",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "0x00026231"
      ]
    },
    "1790": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0"
      ]
    },
    "1792": {
      "op": "bytec_2 // 0x0000000000000001",
      "defined_out": [
        "0x0000000000000001",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "0x0000000000000001"
      ]
    },
    "1793": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0"
      ]
    },
    "1795": {
      "op": "bytec_1 // 0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002",
      "defined_out": [
        "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002"
      ]
    },
    "1796": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0"
      ]
    },
    "1798": {
      "op": "intc_1 // appl",
      "defined_out": [
        "app#0",
        "appl"
      ],
      "stack_out": [
        "app#0",
        "appl"
      ]
    },
    "1799": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "app#0"
      ]
    },
    "1801": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "0"
      ]
    },
    "1802": {
      "op": "itxn_field Fee",
      "stack_out": [
        "app#0"
      ]
    },
    "1804": {
      "op": "itxn_submit"
    },
    "1805": {
      "op": "itxn LastLog",
      "defined_out": [
        "app#0",
        "awst_tmp%0#0"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0"
      ]
    },
    "1807": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ]
    },
    "1808": {
      "op": "extract 4 0",
      "defined_out": [
        "app#0",
        "awst_tmp%0#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "tmp%2#0"
      ]
    },
    "1811": {
      "op": "dig 1",
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "tmp%2#0",
        "awst_tmp%0#0 (copy)"
      ]
    },
    "1813": {
      "op": "extract 0 4",
      "defined_out": [
        "app#0",
        "awst_tmp%0#0",
        "tmp%2#0",
        "tmp%3#1"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "tmp%2#0",
        "tmp%3#1"
      ]
    },
    "1816": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "app#0",
        "awst_tmp%0#0",
        "tmp%2#0",
        "tmp%3#1"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "tmp%2#0",
        "tmp%3#1",
        "0x151f7c75"
      ]
    },
    "1817": {
      "op": "==",
      "defined_out": [
        "app#0",
        "awst_tmp%0#0",
        "tmp%2#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "tmp%2#0",
        "tmp%4#0"
      ]
    },
    "1818": {
      "error": "application log value is not the result of an ABI return",
      "op": "assert // application log value is not the result of an ABI return",
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "tmp%2#0"
      ]
    },
    "1819": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "awst_tmp%0#0",
        "tmp%2#0",
        "tmp%2#0 (copy)"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "tmp%2#0",
        "tmp%2#0 (copy)"
      ]
    },
    "1820": {
      "op": "intc_0 // 0",
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "tmp%2#0",
        "tmp%2#0 (copy)",
        "0"
      ]
    },
    "1821": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%extract_uint16%6#0",
        "app#0",
        "awst_tmp%0#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "tmp%2#0",
        "aggregate%extract_uint16%6#0"
      ]
    },
    "1822": {
      "op": "dig 1",
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "tmp%2#0",
        "aggregate%extract_uint16%6#0",
        "tmp%2#0 (copy)"
      ]
    },
    "1824": {
      "op": "intc_3 // 2",
      "defined_out": [
        "2",
        "aggregate%extract_uint16%6#0",
        "app#0",
        "awst_tmp%0#0",
        "tmp%2#0",
        "tmp%2#0 (copy)"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "tmp%2#0",
        "aggregate%extract_uint16%6#0",
        "tmp%2#0 (copy)",
        "2"
      ]
    },
    "1825": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%extract_uint16%6#0",
        "aggregate%extract_uint16%7#0",
        "app#0",
        "awst_tmp%0#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "tmp%2#0",
        "aggregate%extract_uint16%6#0",
        "aggregate%extract_uint16%7#0"
      ]
    },
    "1826": {
      "op": "dig 2",
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "tmp%2#0",
        "aggregate%extract_uint16%6#0",
        "aggregate%extract_uint16%7#0",
        "tmp%2#0 (copy)"
      ]
    },
    "1828": {
      "op": "uncover 2",
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "tmp%2#0",
        "aggregate%extract_uint16%7#0",
        "tmp%2#0 (copy)",
        "aggregate%extract_uint16%6#0"
      ]
    },
    "1830": {
      "op": "dig 2",
      "defined_out": [
        "aggregate%extract_uint16%6#0",
        "aggregate%extract_uint16%7#0",
        "aggregate%extract_uint16%7#0 (copy)",
        "app#0",
        "awst_tmp%0#0",
        "tmp%2#0",
        "tmp%2#0 (copy)"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "tmp%2#0",
        "aggregate%extract_uint16%7#0",
        "tmp%2#0 (copy)",
        "aggregate%extract_uint16%6#0",
        "aggregate%extract_uint16%7#0 (copy)"
      ]
    },
    "1832": {
      "op": "substring3",
      "defined_out": [
        "aggregate%extract_uint16%7#0",
        "aggregate%substring3%4#0",
        "app#0",
        "awst_tmp%0#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "tmp%2#0",
        "aggregate%extract_uint16%7#0",
        "aggregate%substring3%4#0"
      ]
    },
    "1833": {
      "op": "extract 2 0",
      "defined_out": [
        "aggregate%extract_uint16%7#0",
        "app#0",
        "awst_tmp%0#0",
        "result.0#6",
        "tmp%2#0"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "tmp%2#0",
        "aggregate%extract_uint16%7#0",
        "result.0#6"
      ]
    },
    "1836": {
      "op": "dig 2",
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "tmp%2#0",
        "aggregate%extract_uint16%7#0",
        "result.0#6",
        "tmp%2#0 (copy)"
      ]
    },
    "1838": {
      "op": "len",
      "defined_out": [
        "aggregate%extract_uint16%7#0",
        "aggregate%len%2#0",
        "app#0",
        "awst_tmp%0#0",
        "result.0#6",
        "tmp%2#0"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "tmp%2#0",
        "aggregate%extract_uint16%7#0",
        "result.0#6",
        "aggregate%len%2#0"
      ]
    },
    "1839": {
      "op": "swap"
    },
    "1840": {
      "op": "cover 3",
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "result.0#6",
        "tmp%2#0",
        "aggregate%extract_uint16%7#0",
        "aggregate%len%2#0"
      ]
    },
    "1842": {
      "op": "substring3",
      "defined_out": [
        "aggregate%substring3%5#0",
        "app#0",
        "awst_tmp%0#0",
        "result.0#6"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "result.0#6",
        "aggregate%substring3%5#0"
      ]
    },
    "1843": {
      "op": "extract 2 0",
      "defined_out": [
        "app#0",
        "awst_tmp%0#0",
        "result.0#6",
        "result.1#6"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "result.0#6",
        "result.1#6"
      ]
    },
    "1846": {
      "op": "dig 2",
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "result.0#6",
        "result.1#6",
        "awst_tmp%0#0 (copy)"
      ]
    },
    "1848": {
      "op": "pushint 8 // 8",
      "defined_out": [
        "8",
        "app#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)",
        "result.0#6",
        "result.1#6"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "result.0#6",
        "result.1#6",
        "awst_tmp%0#0 (copy)",
        "8"
      ]
    },
    "1850": {
      "op": "extract_uint64",
      "defined_out": [
        "app#0",
        "awst_tmp%0#0",
        "result.0#6",
        "result.1#6",
        "result.2#6"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "result.0#6",
        "result.1#6",
        "result.2#6"
      ]
    },
    "1851": {
      "op": "uncover 3",
      "stack_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "awst_tmp%0#0"
      ]
    },
    "1853": {
      "op": "extract 16 64",
      "defined_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0"
      ],
      "stack_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0"
      ]
    },
    "1856": {
      "op": "dig 3",
      "defined_out": [
        "app#0",
        "result.0#6",
        "result.0#6 (copy)",
        "result.1#6",
        "result.2#6",
        "result.3#0"
      ],
      "stack_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "result.0#6 (copy)"
      ]
    },
    "1858": {
      "op": "bytec 10 // \"echo: s1\"",
      "defined_out": [
        "\"echo: s1\"",
        "app#0",
        "result.0#6",
        "result.0#6 (copy)",
        "result.1#6",
        "result.2#6",
        "result.3#0"
      ],
      "stack_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "result.0#6 (copy)",
        "\"echo: s1\""
      ]
    },
    "1860": {
      "op": "==",
      "defined_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "tmp%9#1"
      ],
      "stack_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "tmp%9#1"
      ]
    },
    "1861": {
      "op": "assert",
      "stack_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0"
      ]
    },
    "1862": {
      "op": "dig 2",
      "defined_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.1#6 (copy)",
        "result.2#6",
        "result.3#0"
      ],
      "stack_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "result.1#6 (copy)"
      ]
    },
    "1864": {
      "op": "bytec 29 // 0x6563686f3a206231",
      "defined_out": [
        "0x6563686f3a206231",
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.1#6 (copy)",
        "result.2#6",
        "result.3#0"
      ],
      "stack_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "result.1#6 (copy)",
        "0x6563686f3a206231"
      ]
    },
    "1866": {
      "op": "==",
      "defined_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "tmp%10#1"
      ],
      "stack_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "tmp%10#1"
      ]
    },
    "1867": {
      "op": "assert",
      "stack_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0"
      ]
    },
    "1868": {
      "op": "dig 1",
      "defined_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.2#6 (copy)",
        "result.3#0"
      ],
      "stack_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "result.2#6 (copy)"
      ]
    },
    "1870": {
      "op": "intc_3 // 2",
      "stack_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "result.2#6 (copy)",
        "2"
      ]
    },
    "1871": {
      "op": "==",
      "defined_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "tmp%11#0"
      ]
    },
    "1872": {
      "op": "assert",
      "stack_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0"
      ]
    },
    "1873": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "result.3#0 (copy)"
      ],
      "stack_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "result.3#0 (copy)"
      ]
    },
    "1874": {
      "op": "bytec 17 // 0x03",
      "defined_out": [
        "0x03",
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "result.3#0 (copy)"
      ],
      "stack_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "result.3#0 (copy)",
        "0x03"
      ]
    },
    "1876": {
      "op": "b==",
      "defined_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "tmp%12#1"
      ],
      "stack_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "tmp%12#1"
      ]
    },
    "1877": {
      "op": "assert",
      "stack_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0"
      ]
    },
    "1878": {
      "op": "itxn_begin"
    },
    "1879": {
      "op": "intc_2 // 1",
      "defined_out": [
        "1",
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0"
      ],
      "stack_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "1"
      ]
    },
    "1880": {
      "op": "itob",
      "defined_out": [
        "aggregate%val_as_bytes%2#0",
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0"
      ],
      "stack_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "aggregate%val_as_bytes%2#0"
      ]
    },
    "1881": {
      "op": "dig 5",
      "stack_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "aggregate%val_as_bytes%2#0",
        "app#0 (copy)"
      ]
    },
    "1883": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "aggregate%val_as_bytes%2#0"
      ]
    },
    "1885": {
      "op": "bytec 4 // method \"echo_native_tuple(string,byte[],uint64,uint512)(string,byte[],uint64,uint512)\"",
      "stack_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "aggregate%val_as_bytes%2#0",
        "Method(echo_native_tuple(string,byte[],uint64,uint512)(string,byte[],uint64,uint512))"
      ]
    },
    "1887": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "aggregate%val_as_bytes%2#0"
      ]
    },
    "1889": {
      "op": "bytec 5 // 0x00027331",
      "stack_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "aggregate%val_as_bytes%2#0",
        "0x00027331"
      ]
    },
    "1891": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "aggregate%val_as_bytes%2#0"
      ]
    },
    "1893": {
      "op": "bytec 6 // 0x00026231",
      "stack_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "aggregate%val_as_bytes%2#0",
        "0x00026231"
      ]
    },
    "1895": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "aggregate%val_as_bytes%2#0"
      ]
    },
    "1897": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0"
      ]
    },
    "1899": {
      "op": "bytec_1 // 0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002",
      "stack_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002"
      ]
    },
    "1900": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0"
      ]
    },
    "1902": {
      "op": "intc_1 // appl",
      "stack_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "appl"
      ]
    },
    "1903": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0"
      ]
    },
    "1905": {
      "op": "intc_0 // 0",
      "stack_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "0"
      ]
    },
    "1906": {
      "op": "itxn_field Fee",
      "stack_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0"
      ]
    },
    "1908": {
      "op": "itxn_submit"
    },
    "1909": {
      "op": "itxn LastLog",
      "defined_out": [
        "app#0",
        "awst_tmp%1#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0"
      ],
      "stack_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "awst_tmp%1#0"
      ]
    },
    "1911": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "awst_tmp%1#0",
        "awst_tmp%1#0 (copy)",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0"
      ],
      "stack_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "awst_tmp%1#0",
        "awst_tmp%1#0 (copy)"
      ]
    },
    "1912": {
      "op": "extract 4 0",
      "defined_out": [
        "app#0",
        "awst_tmp%1#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "tmp%17#1"
      ],
      "stack_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "awst_tmp%1#0",
        "tmp%17#1"
      ]
    },
    "1915": {
      "op": "dig 1",
      "stack_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "awst_tmp%1#0",
        "tmp%17#1",
        "awst_tmp%1#0 (copy)"
      ]
    },
    "1917": {
      "op": "extract 0 4",
      "defined_out": [
        "app#0",
        "awst_tmp%1#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "tmp%17#1",
        "tmp%18#2"
      ],
      "stack_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "awst_tmp%1#0",
        "tmp%17#1",
        "tmp%18#2"
      ]
    },
    "1920": {
      "op": "bytec_0 // 0x151f7c75",
      "stack_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "awst_tmp%1#0",
        "tmp%17#1",
        "tmp%18#2",
        "0x151f7c75"
      ]
    },
    "1921": {
      "op": "==",
      "defined_out": [
        "app#0",
        "awst_tmp%1#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "tmp%17#1",
        "tmp%19#2"
      ],
      "stack_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "awst_tmp%1#0",
        "tmp%17#1",
        "tmp%19#2"
      ]
    },
    "1922": {
      "error": "application log value is not the result of an ABI return",
      "op": "assert // application log value is not the result of an ABI return",
      "stack_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "awst_tmp%1#0",
        "tmp%17#1"
      ]
    },
    "1923": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "awst_tmp%1#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "tmp%17#1",
        "tmp%17#1 (copy)"
      ],
      "stack_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "awst_tmp%1#0",
        "tmp%17#1",
        "tmp%17#1 (copy)"
      ]
    },
    "1924": {
      "op": "intc_0 // 0",
      "stack_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "awst_tmp%1#0",
        "tmp%17#1",
        "tmp%17#1 (copy)",
        "0"
      ]
    },
    "1925": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%extract_uint16%9#0",
        "app#0",
        "awst_tmp%1#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "tmp%17#1"
      ],
      "stack_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "awst_tmp%1#0",
        "tmp%17#1",
        "aggregate%extract_uint16%9#0"
      ]
    },
    "1926": {
      "op": "dig 1",
      "stack_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "awst_tmp%1#0",
        "tmp%17#1",
        "aggregate%extract_uint16%9#0",
        "tmp%17#1 (copy)"
      ]
    },
    "1928": {
      "op": "intc_3 // 2",
      "stack_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "awst_tmp%1#0",
        "tmp%17#1",
        "aggregate%extract_uint16%9#0",
        "tmp%17#1 (copy)",
        "2"
      ]
    },
    "1929": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%extract_uint16%10#0",
        "aggregate%extract_uint16%9#0",
        "app#0",
        "awst_tmp%1#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "tmp%17#1"
      ],
      "stack_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "awst_tmp%1#0",
        "tmp%17#1",
        "aggregate%extract_uint16%9#0",
        "aggregate%extract_uint16%10#0"
      ]
    },
    "1930": {
      "op": "dig 2",
      "stack_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "awst_tmp%1#0",
        "tmp%17#1",
        "aggregate%extract_uint16%9#0",
        "aggregate%extract_uint16%10#0",
        "tmp%17#1 (copy)"
      ]
    },
    "1932": {
      "op": "uncover 2",
      "stack_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "awst_tmp%1#0",
        "tmp%17#1",
        "aggregate%extract_uint16%10#0",
        "tmp%17#1 (copy)",
        "aggregate%extract_uint16%9#0"
      ]
    },
    "1934": {
      "op": "dig 2",
      "defined_out": [
        "aggregate%extract_uint16%10#0",
        "aggregate%extract_uint16%10#0 (copy)",
        "aggregate%extract_uint16%9#0",
        "app#0",
        "awst_tmp%1#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "tmp%17#1",
        "tmp%17#1 (copy)"
      ],
      "stack_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "awst_tmp%1#0",
        "tmp%17#1",
        "aggregate%extract_uint16%10#0",
        "tmp%17#1 (copy)",
        "aggregate%extract_uint16%9#0",
        "aggregate%extract_uint16%10#0 (copy)"
      ]
    },
    "1936": {
      "op": "substring3",
      "defined_out": [
        "aggregate%extract_uint16%10#0",
        "aggregate%substring3%6#0",
        "app#0",
        "awst_tmp%1#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "tmp%17#1"
      ],
      "stack_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "awst_tmp%1#0",
        "tmp%17#1",
        "aggregate%extract_uint16%10#0",
        "aggregate%substring3%6#0"
      ]
    },
    "1937": {
      "op": "extract 2 0",
      "defined_out": [
        "aggregate%extract_uint16%10#0",
        "app#0",
        "awst_tmp%1#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "result_2.0#0",
        "tmp%17#1"
      ],
      "stack_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "awst_tmp%1#0",
        "tmp%17#1",
        "aggregate%extract_uint16%10#0",
        "result_2.0#0"
      ]
    },
    "1940": {
      "op": "dig 2",
      "stack_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "awst_tmp%1#0",
        "tmp%17#1",
        "aggregate%extract_uint16%10#0",
        "result_2.0#0",
        "tmp%17#1 (copy)"
      ]
    },
    "1942": {
      "op": "len",
      "defined_out": [
        "aggregate%extract_uint16%10#0",
        "aggregate%len%3#0",
        "app#0",
        "awst_tmp%1#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "result_2.0#0",
        "tmp%17#1"
      ],
      "stack_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "awst_tmp%1#0",
        "tmp%17#1",
        "aggregate%extract_uint16%10#0",
        "result_2.0#0",
        "aggregate%len%3#0"
      ]
    },
    "1943": {
      "op": "swap"
    },
    "1944": {
      "op": "cover 3",
      "stack_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "awst_tmp%1#0",
        "result_2.0#0",
        "tmp%17#1",
        "aggregate%extract_uint16%10#0",
        "aggregate%len%3#0"
      ]
    },
    "1946": {
      "op": "substring3",
      "defined_out": [
        "aggregate%substring3%7#0",
        "app#0",
        "awst_tmp%1#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "result_2.0#0"
      ],
      "stack_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "awst_tmp%1#0",
        "result_2.0#0",
        "aggregate%substring3%7#0"
      ]
    },
    "1947": {
      "op": "extract 2 0",
      "defined_out": [
        "app#0",
        "awst_tmp%1#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "result_2.0#0",
        "result_2.1#0"
      ],
      "stack_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "awst_tmp%1#0",
        "result_2.0#0",
        "result_2.1#0"
      ]
    },
    "1950": {
      "op": "dig 2",
      "stack_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "awst_tmp%1#0",
        "result_2.0#0",
        "result_2.1#0",
        "awst_tmp%1#0 (copy)"
      ]
    },
    "1952": {
      "op": "pushint 8 // 8",
      "stack_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "awst_tmp%1#0",
        "result_2.0#0",
        "result_2.1#0",
        "awst_tmp%1#0 (copy)",
        "8"
      ]
    },
    "1954": {
      "op": "extract_uint64",
      "defined_out": [
        "app#0",
        "awst_tmp%1#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "result_2.0#0",
        "result_2.1#0",
        "result_2.2#0"
      ],
      "stack_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "awst_tmp%1#0",
        "result_2.0#0",
        "result_2.1#0",
        "result_2.2#0"
      ]
    },
    "1955": {
      "op": "uncover 3",
      "stack_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "result_2.0#0",
        "result_2.1#0",
        "result_2.2#0",
        "awst_tmp%1#0"
      ]
    },
    "1957": {
      "op": "extract 16 64",
      "defined_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "result_2.0#0",
        "result_2.1#0",
        "result_2.2#0",
        "result_2.3#0"
      ],
      "stack_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "result_2.0#0",
        "result_2.1#0",
        "result_2.2#0",
        "result_2.3#0"
      ]
    },
    "1960": {
      "op": "uncover 3",
      "stack_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "result_2.1#0",
        "result_2.2#0",
        "result_2.3#0",
        "result_2.0#0"
      ]
    },
    "1962": {
      "op": "dig 7",
      "stack_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "result_2.1#0",
        "result_2.2#0",
        "result_2.3#0",
        "result_2.0#0",
        "result.0#6 (copy)"
      ]
    },
    "1964": {
      "op": "==",
      "defined_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "result_2.1#0",
        "result_2.2#0",
        "result_2.3#0",
        "tmp%24#1"
      ],
      "stack_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "result_2.1#0",
        "result_2.2#0",
        "result_2.3#0",
        "tmp%24#1"
      ]
    },
    "1965": {
      "op": "uncover 3",
      "stack_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "result_2.2#0",
        "result_2.3#0",
        "tmp%24#1",
        "result_2.1#0"
      ]
    },
    "1967": {
      "op": "dig 6",
      "stack_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "result_2.2#0",
        "result_2.3#0",
        "tmp%24#1",
        "result_2.1#0",
        "result.1#6 (copy)"
      ]
    },
    "1969": {
      "op": "==",
      "defined_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "result_2.2#0",
        "result_2.3#0",
        "tmp%24#1",
        "tmp%25#1"
      ],
      "stack_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "result_2.2#0",
        "result_2.3#0",
        "tmp%24#1",
        "tmp%25#1"
      ]
    },
    "1970": {
      "op": "&&",
      "defined_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "result_2.2#0",
        "result_2.3#0",
        "tmp%26#0"
      ],
      "stack_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "result_2.2#0",
        "result_2.3#0",
        "tmp%26#0"
      ]
    },
    "1971": {
      "op": "uncover 2",
      "stack_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "result_2.3#0",
        "tmp%26#0",
        "result_2.2#0"
      ]
    },
    "1973": {
      "op": "dig 4",
      "stack_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "result_2.3#0",
        "tmp%26#0",
        "result_2.2#0",
        "result.2#6 (copy)"
      ]
    },
    "1975": {
      "op": "==",
      "defined_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "result_2.3#0",
        "tmp%26#0",
        "tmp%27#2"
      ],
      "stack_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "result_2.3#0",
        "tmp%26#0",
        "tmp%27#2"
      ]
    },
    "1976": {
      "op": "&&",
      "defined_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "result_2.3#0",
        "tmp%28#2"
      ],
      "stack_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "result_2.3#0",
        "tmp%28#2"
      ]
    },
    "1977": {
      "op": "swap",
      "stack_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "tmp%28#2",
        "result_2.3#0"
      ]
    },
    "1978": {
      "op": "dig 2",
      "stack_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "tmp%28#2",
        "result_2.3#0",
        "result.3#0 (copy)"
      ]
    },
    "1980": {
      "op": "b==",
      "defined_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "tmp%28#2",
        "tmp%29#1"
      ],
      "stack_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "tmp%28#2",
        "tmp%29#1"
      ]
    },
    "1981": {
      "op": "&&",
      "defined_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "tmp%30#1"
      ],
      "stack_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "tmp%30#1"
      ]
    },
    "1982": {
      "error": "expected native arguments to give the same result",
      "op": "assert // expected native arguments to give the same result",
      "stack_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0"
      ]
    },
    "1983": {
      "op": "itxn_begin"
    },
    "1984": {
      "op": "dig 4",
      "stack_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "app#0 (copy)"
      ]
    },
    "1986": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0"
      ]
    },
    "1988": {
      "op": "bytec 4 // method \"echo_native_tuple(string,byte[],uint64,uint512)(string,byte[],uint64,uint512)\"",
      "stack_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "Method(echo_native_tuple(string,byte[],uint64,uint512)(string,byte[],uint64,uint512))"
      ]
    },
    "1990": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0"
      ]
    },
    "1992": {
      "op": "bytec 5 // 0x00027331",
      "stack_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "0x00027331"
      ]
    },
    "1994": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0"
      ]
    },
    "1996": {
      "op": "bytec 6 // 0x00026231",
      "stack_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "0x00026231"
      ]
    },
    "1998": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0"
      ]
    },
    "2000": {
      "op": "bytec_2 // 0x0000000000000001",
      "stack_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "0x0000000000000001"
      ]
    },
    "2001": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0"
      ]
    },
    "2003": {
      "op": "bytec_1 // 0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002",
      "stack_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002"
      ]
    },
    "2004": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0"
      ]
    },
    "2006": {
      "op": "intc_1 // appl",
      "stack_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "appl"
      ]
    },
    "2007": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0"
      ]
    },
    "2009": {
      "op": "intc_0 // 0",
      "stack_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "0"
      ]
    },
    "2010": {
      "op": "itxn_field Fee",
      "stack_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0"
      ]
    },
    "2012": {
      "op": "itxn_submit"
    },
    "2013": {
      "op": "itxn LastLog",
      "defined_out": [
        "app#0",
        "awst_tmp%2#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0"
      ],
      "stack_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "awst_tmp%2#0"
      ]
    },
    "2015": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "awst_tmp%2#0",
        "awst_tmp%2#0 (copy)",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0"
      ],
      "stack_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "awst_tmp%2#0",
        "awst_tmp%2#0 (copy)"
      ]
    },
    "2016": {
      "op": "extract 4 0",
      "defined_out": [
        "app#0",
        "awst_tmp%2#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "tmp%33#3"
      ],
      "stack_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "awst_tmp%2#0",
        "tmp%33#3"
      ]
    },
    "2019": {
      "op": "dig 1",
      "stack_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "awst_tmp%2#0",
        "tmp%33#3",
        "awst_tmp%2#0 (copy)"
      ]
    },
    "2021": {
      "op": "extract 0 4",
      "defined_out": [
        "app#0",
        "awst_tmp%2#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "tmp%33#3",
        "tmp%34#3"
      ],
      "stack_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "awst_tmp%2#0",
        "tmp%33#3",
        "tmp%34#3"
      ]
    },
    "2024": {
      "op": "bytec_0 // 0x151f7c75",
      "stack_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "awst_tmp%2#0",
        "tmp%33#3",
        "tmp%34#3",
        "0x151f7c75"
      ]
    },
    "2025": {
      "op": "==",
      "defined_out": [
        "app#0",
        "awst_tmp%2#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "tmp%33#3",
        "tmp%35#1"
      ],
      "stack_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "awst_tmp%2#0",
        "tmp%33#3",
        "tmp%35#1"
      ]
    },
    "2026": {
      "error": "application log value is not the result of an ABI return",
      "op": "assert // application log value is not the result of an ABI return",
      "stack_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "awst_tmp%2#0",
        "tmp%33#3"
      ]
    },
    "2027": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "awst_tmp%2#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "tmp%33#3",
        "tmp%33#3 (copy)"
      ],
      "stack_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "awst_tmp%2#0",
        "tmp%33#3",
        "tmp%33#3 (copy)"
      ]
    },
    "2028": {
      "op": "intc_0 // 0",
      "stack_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "awst_tmp%2#0",
        "tmp%33#3",
        "tmp%33#3 (copy)",
        "0"
      ]
    },
    "2029": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%extract_uint16%12#0",
        "app#0",
        "awst_tmp%2#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "tmp%33#3"
      ],
      "stack_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "awst_tmp%2#0",
        "tmp%33#3",
        "aggregate%extract_uint16%12#0"
      ]
    },
    "2030": {
      "op": "dig 1",
      "stack_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "awst_tmp%2#0",
        "tmp%33#3",
        "aggregate%extract_uint16%12#0",
        "tmp%33#3 (copy)"
      ]
    },
    "2032": {
      "op": "intc_3 // 2",
      "stack_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "awst_tmp%2#0",
        "tmp%33#3",
        "aggregate%extract_uint16%12#0",
        "tmp%33#3 (copy)",
        "2"
      ]
    },
    "2033": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%extract_uint16%12#0",
        "aggregate%extract_uint16%13#0",
        "app#0",
        "awst_tmp%2#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "tmp%33#3"
      ],
      "stack_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "awst_tmp%2#0",
        "tmp%33#3",
        "aggregate%extract_uint16%12#0",
        "aggregate%extract_uint16%13#0"
      ]
    },
    "2034": {
      "op": "dig 2",
      "stack_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "awst_tmp%2#0",
        "tmp%33#3",
        "aggregate%extract_uint16%12#0",
        "aggregate%extract_uint16%13#0",
        "tmp%33#3 (copy)"
      ]
    },
    "2036": {
      "op": "uncover 2",
      "stack_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "awst_tmp%2#0",
        "tmp%33#3",
        "aggregate%extract_uint16%13#0",
        "tmp%33#3 (copy)",
        "aggregate%extract_uint16%12#0"
      ]
    },
    "2038": {
      "op": "dig 2",
      "defined_out": [
        "aggregate%extract_uint16%12#0",
        "aggregate%extract_uint16%13#0",
        "aggregate%extract_uint16%13#0 (copy)",
        "app#0",
        "awst_tmp%2#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "tmp%33#3",
        "tmp%33#3 (copy)"
      ],
      "stack_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "awst_tmp%2#0",
        "tmp%33#3",
        "aggregate%extract_uint16%13#0",
        "tmp%33#3 (copy)",
        "aggregate%extract_uint16%12#0",
        "aggregate%extract_uint16%13#0 (copy)"
      ]
    },
    "2040": {
      "op": "substring3",
      "defined_out": [
        "aggregate%extract_uint16%13#0",
        "aggregate%substring3%8#0",
        "app#0",
        "awst_tmp%2#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "tmp%33#3"
      ],
      "stack_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "awst_tmp%2#0",
        "tmp%33#3",
        "aggregate%extract_uint16%13#0",
        "aggregate%substring3%8#0"
      ]
    },
    "2041": {
      "op": "extract 2 0",
      "defined_out": [
        "aggregate%extract_uint16%13#0",
        "app#0",
        "awst_tmp%2#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "result_3.0#0",
        "tmp%33#3"
      ],
      "stack_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "awst_tmp%2#0",
        "tmp%33#3",
        "aggregate%extract_uint16%13#0",
        "result_3.0#0"
      ]
    },
    "2044": {
      "op": "dig 2",
      "stack_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "awst_tmp%2#0",
        "tmp%33#3",
        "aggregate%extract_uint16%13#0",
        "result_3.0#0",
        "tmp%33#3 (copy)"
      ]
    },
    "2046": {
      "op": "len",
      "defined_out": [
        "aggregate%extract_uint16%13#0",
        "aggregate%len%4#0",
        "app#0",
        "awst_tmp%2#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "result_3.0#0",
        "tmp%33#3"
      ],
      "stack_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "awst_tmp%2#0",
        "tmp%33#3",
        "aggregate%extract_uint16%13#0",
        "result_3.0#0",
        "aggregate%len%4#0"
      ]
    },
    "2047": {
      "op": "swap"
    },
    "2048": {
      "op": "cover 3",
      "stack_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "awst_tmp%2#0",
        "result_3.0#0",
        "tmp%33#3",
        "aggregate%extract_uint16%13#0",
        "aggregate%len%4#0"
      ]
    },
    "2050": {
      "op": "substring3",
      "defined_out": [
        "aggregate%substring3%9#0",
        "app#0",
        "awst_tmp%2#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "result_3.0#0"
      ],
      "stack_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "awst_tmp%2#0",
        "result_3.0#0",
        "aggregate%substring3%9#0"
      ]
    },
    "2051": {
      "op": "extract 2 0",
      "defined_out": [
        "app#0",
        "awst_tmp%2#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "result_3.0#0",
        "result_3.1#0"
      ],
      "stack_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "awst_tmp%2#0",
        "result_3.0#0",
        "result_3.1#0"
      ]
    },
    "2054": {
      "op": "dig 2",
      "stack_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "awst_tmp%2#0",
        "result_3.0#0",
        "result_3.1#0",
        "awst_tmp%2#0 (copy)"
      ]
    },
    "2056": {
      "op": "pushint 8 // 8",
      "stack_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "awst_tmp%2#0",
        "result_3.0#0",
        "result_3.1#0",
        "awst_tmp%2#0 (copy)",
        "8"
      ]
    },
    "2058": {
      "op": "extract_uint64",
      "defined_out": [
        "app#0",
        "awst_tmp%2#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "result_3.0#0",
        "result_3.1#0",
        "result_3.2#0"
      ],
      "stack_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "awst_tmp%2#0",
        "result_3.0#0",
        "result_3.1#0",
        "result_3.2#0"
      ]
    },
    "2059": {
      "op": "uncover 3",
      "stack_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "result_3.0#0",
        "result_3.1#0",
        "result_3.2#0",
        "awst_tmp%2#0"
      ]
    },
    "2061": {
      "op": "extract 16 64",
      "defined_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "result_3.0#0",
        "result_3.1#0",
        "result_3.2#0",
        "result_3.3#0"
      ],
      "stack_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "result_3.0#0",
        "result_3.1#0",
        "result_3.2#0",
        "result_3.3#0"
      ]
    },
    "2064": {
      "op": "uncover 3",
      "stack_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "result_3.1#0",
        "result_3.2#0",
        "result_3.3#0",
        "result_3.0#0"
      ]
    },
    "2066": {
      "op": "dig 7",
      "stack_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "result_3.1#0",
        "result_3.2#0",
        "result_3.3#0",
        "result_3.0#0",
        "result.0#6 (copy)"
      ]
    },
    "2068": {
      "op": "==",
      "defined_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "result_3.1#0",
        "result_3.2#0",
        "result_3.3#0",
        "tmp%40#2"
      ],
      "stack_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "result_3.1#0",
        "result_3.2#0",
        "result_3.3#0",
        "tmp%40#2"
      ]
    },
    "2069": {
      "op": "uncover 3",
      "stack_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "result_3.2#0",
        "result_3.3#0",
        "tmp%40#2",
        "result_3.1#0"
      ]
    },
    "2071": {
      "op": "dig 6",
      "stack_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "result_3.2#0",
        "result_3.3#0",
        "tmp%40#2",
        "result_3.1#0",
        "result.1#6 (copy)"
      ]
    },
    "2073": {
      "op": "==",
      "defined_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "result_3.2#0",
        "result_3.3#0",
        "tmp%40#2",
        "tmp%41#3"
      ],
      "stack_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "result_3.2#0",
        "result_3.3#0",
        "tmp%40#2",
        "tmp%41#3"
      ]
    },
    "2074": {
      "op": "&&",
      "defined_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "result_3.2#0",
        "result_3.3#0",
        "tmp%42#0"
      ],
      "stack_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "result_3.2#0",
        "result_3.3#0",
        "tmp%42#0"
      ]
    },
    "2075": {
      "op": "uncover 2",
      "stack_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "result_3.3#0",
        "tmp%42#0",
        "result_3.2#0"
      ]
    },
    "2077": {
      "op": "dig 4",
      "stack_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "result_3.3#0",
        "tmp%42#0",
        "result_3.2#0",
        "result.2#6 (copy)"
      ]
    },
    "2079": {
      "op": "==",
      "defined_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "result_3.3#0",
        "tmp%42#0",
        "tmp%43#1"
      ],
      "stack_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "result_3.3#0",
        "tmp%42#0",
        "tmp%43#1"
      ]
    },
    "2080": {
      "op": "&&",
      "defined_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "result_3.3#0",
        "tmp%44#1"
      ],
      "stack_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "result_3.3#0",
        "tmp%44#1"
      ]
    },
    "2081": {
      "op": "swap",
      "stack_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "tmp%44#1",
        "result_3.3#0"
      ]
    },
    "2082": {
      "op": "dig 2",
      "stack_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "tmp%44#1",
        "result_3.3#0",
        "result.3#0 (copy)"
      ]
    },
    "2084": {
      "op": "b==",
      "defined_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "tmp%44#1",
        "tmp%45#1"
      ],
      "stack_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "tmp%44#1",
        "tmp%45#1"
      ]
    },
    "2085": {
      "op": "&&",
      "defined_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "tmp%46#1"
      ],
      "stack_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "tmp%46#1"
      ]
    },
    "2086": {
      "error": "expected arc4 arguments to give the same result",
      "op": "assert // expected arc4 arguments to give the same result",
      "stack_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0"
      ]
    },
    "2087": {
      "op": "itxn_begin"
    },
    "2088": {
      "op": "uncover 4",
      "stack_out": [
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "app#0"
      ]
    },
    "2090": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0"
      ]
    },
    "2092": {
      "op": "bytec 4 // method \"echo_native_tuple(string,byte[],uint64,uint512)(string,byte[],uint64,uint512)\"",
      "stack_out": [
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "Method(echo_native_tuple(string,byte[],uint64,uint512)(string,byte[],uint64,uint512))"
      ]
    },
    "2094": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0"
      ]
    },
    "2096": {
      "op": "bytec 5 // 0x00027331",
      "stack_out": [
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "0x00027331"
      ]
    },
    "2098": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0"
      ]
    },
    "2100": {
      "op": "bytec 6 // 0x00026231",
      "stack_out": [
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "0x00026231"
      ]
    },
    "2102": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0"
      ]
    },
    "2104": {
      "op": "bytec_2 // 0x0000000000000001",
      "stack_out": [
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "0x0000000000000001"
      ]
    },
    "2105": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0"
      ]
    },
    "2107": {
      "op": "bytec_1 // 0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002",
      "stack_out": [
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002"
      ]
    },
    "2108": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0"
      ]
    },
    "2110": {
      "op": "intc_1 // appl",
      "stack_out": [
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "appl"
      ]
    },
    "2111": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0"
      ]
    },
    "2113": {
      "op": "intc_0 // 0",
      "stack_out": [
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "0"
      ]
    },
    "2114": {
      "op": "itxn_field Fee",
      "stack_out": [
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0"
      ]
    },
    "2116": {
      "op": "itxn_submit"
    },
    "2117": {
      "op": "itxn LastLog",
      "defined_out": [
        "awst_tmp%3#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0"
      ],
      "stack_out": [
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "awst_tmp%3#0"
      ]
    },
    "2119": {
      "op": "dup",
      "defined_out": [
        "awst_tmp%3#0",
        "awst_tmp%3#0 (copy)",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0"
      ],
      "stack_out": [
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "awst_tmp%3#0",
        "awst_tmp%3#0 (copy)"
      ]
    },
    "2120": {
      "op": "extract 4 0",
      "defined_out": [
        "awst_tmp%3#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "tmp%49#3"
      ],
      "stack_out": [
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "awst_tmp%3#0",
        "tmp%49#3"
      ]
    },
    "2123": {
      "op": "dig 1",
      "stack_out": [
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "awst_tmp%3#0",
        "tmp%49#3",
        "awst_tmp%3#0 (copy)"
      ]
    },
    "2125": {
      "op": "extract 0 4",
      "defined_out": [
        "awst_tmp%3#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "tmp%49#3",
        "tmp%50#3"
      ],
      "stack_out": [
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "awst_tmp%3#0",
        "tmp%49#3",
        "tmp%50#3"
      ]
    },
    "2128": {
      "op": "bytec_0 // 0x151f7c75",
      "stack_out": [
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "awst_tmp%3#0",
        "tmp%49#3",
        "tmp%50#3",
        "0x151f7c75"
      ]
    },
    "2129": {
      "op": "==",
      "defined_out": [
        "awst_tmp%3#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "tmp%49#3",
        "tmp%51#1"
      ],
      "stack_out": [
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "awst_tmp%3#0",
        "tmp%49#3",
        "tmp%51#1"
      ]
    },
    "2130": {
      "error": "application log value is not the result of an ABI return",
      "op": "assert // application log value is not the result of an ABI return",
      "stack_out": [
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "awst_tmp%3#0",
        "tmp%49#3"
      ]
    },
    "2131": {
      "op": "dup",
      "defined_out": [
        "awst_tmp%3#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "tmp%49#3",
        "tmp%49#3 (copy)"
      ],
      "stack_out": [
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "awst_tmp%3#0",
        "tmp%49#3",
        "tmp%49#3 (copy)"
      ]
    },
    "2132": {
      "op": "intc_0 // 0",
      "stack_out": [
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "awst_tmp%3#0",
        "tmp%49#3",
        "tmp%49#3 (copy)",
        "0"
      ]
    },
    "2133": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%extract_uint16%15#0",
        "awst_tmp%3#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "tmp%49#3"
      ],
      "stack_out": [
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "awst_tmp%3#0",
        "tmp%49#3",
        "aggregate%extract_uint16%15#0"
      ]
    },
    "2134": {
      "op": "dig 1",
      "stack_out": [
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "awst_tmp%3#0",
        "tmp%49#3",
        "aggregate%extract_uint16%15#0",
        "tmp%49#3 (copy)"
      ]
    },
    "2136": {
      "op": "intc_3 // 2",
      "stack_out": [
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "awst_tmp%3#0",
        "tmp%49#3",
        "aggregate%extract_uint16%15#0",
        "tmp%49#3 (copy)",
        "2"
      ]
    },
    "2137": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%extract_uint16%15#0",
        "aggregate%extract_uint16%16#0",
        "awst_tmp%3#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "tmp%49#3"
      ],
      "stack_out": [
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "awst_tmp%3#0",
        "tmp%49#3",
        "aggregate%extract_uint16%15#0",
        "aggregate%extract_uint16%16#0"
      ]
    },
    "2138": {
      "op": "dig 2",
      "stack_out": [
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "awst_tmp%3#0",
        "tmp%49#3",
        "aggregate%extract_uint16%15#0",
        "aggregate%extract_uint16%16#0",
        "tmp%49#3 (copy)"
      ]
    },
    "2140": {
      "op": "uncover 2",
      "stack_out": [
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "awst_tmp%3#0",
        "tmp%49#3",
        "aggregate%extract_uint16%16#0",
        "tmp%49#3 (copy)",
        "aggregate%extract_uint16%15#0"
      ]
    },
    "2142": {
      "op": "dig 2",
      "defined_out": [
        "aggregate%extract_uint16%15#0",
        "aggregate%extract_uint16%16#0",
        "aggregate%extract_uint16%16#0 (copy)",
        "awst_tmp%3#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "tmp%49#3",
        "tmp%49#3 (copy)"
      ],
      "stack_out": [
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "awst_tmp%3#0",
        "tmp%49#3",
        "aggregate%extract_uint16%16#0",
        "tmp%49#3 (copy)",
        "aggregate%extract_uint16%15#0",
        "aggregate%extract_uint16%16#0 (copy)"
      ]
    },
    "2144": {
      "op": "substring3",
      "defined_out": [
        "aggregate%extract_uint16%16#0",
        "aggregate%substring3%10#0",
        "awst_tmp%3#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "tmp%49#3"
      ],
      "stack_out": [
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "awst_tmp%3#0",
        "tmp%49#3",
        "aggregate%extract_uint16%16#0",
        "aggregate%substring3%10#0"
      ]
    },
    "2145": {
      "op": "extract 2 0",
      "defined_out": [
        "aggregate%extract_uint16%16#0",
        "awst_tmp%3#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "result_native.0#0",
        "tmp%49#3"
      ],
      "stack_out": [
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "awst_tmp%3#0",
        "tmp%49#3",
        "aggregate%extract_uint16%16#0",
        "result_native.0#0"
      ]
    },
    "2148": {
      "op": "dig 2",
      "stack_out": [
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "awst_tmp%3#0",
        "tmp%49#3",
        "aggregate%extract_uint16%16#0",
        "result_native.0#0",
        "tmp%49#3 (copy)"
      ]
    },
    "2150": {
      "op": "len",
      "defined_out": [
        "aggregate%extract_uint16%16#0",
        "aggregate%len%5#0",
        "awst_tmp%3#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "result_native.0#0",
        "tmp%49#3"
      ],
      "stack_out": [
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "awst_tmp%3#0",
        "tmp%49#3",
        "aggregate%extract_uint16%16#0",
        "result_native.0#0",
        "aggregate%len%5#0"
      ]
    },
    "2151": {
      "op": "swap"
    },
    "2152": {
      "op": "cover 3",
      "stack_out": [
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "awst_tmp%3#0",
        "result_native.0#0",
        "tmp%49#3",
        "aggregate%extract_uint16%16#0",
        "aggregate%len%5#0"
      ]
    },
    "2154": {
      "op": "substring3",
      "defined_out": [
        "aggregate%substring3%11#0",
        "awst_tmp%3#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "result_native.0#0"
      ],
      "stack_out": [
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "awst_tmp%3#0",
        "result_native.0#0",
        "aggregate%substring3%11#0"
      ]
    },
    "2155": {
      "op": "extract 2 0",
      "defined_out": [
        "awst_tmp%3#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "result_native.0#0",
        "result_native.1#0"
      ],
      "stack_out": [
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "awst_tmp%3#0",
        "result_native.0#0",
        "result_native.1#0"
      ]
    },
    "2158": {
      "op": "dig 2",
      "stack_out": [
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "awst_tmp%3#0",
        "result_native.0#0",
        "result_native.1#0",
        "awst_tmp%3#0 (copy)"
      ]
    },
    "2160": {
      "op": "pushint 8 // 8",
      "stack_out": [
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "awst_tmp%3#0",
        "result_native.0#0",
        "result_native.1#0",
        "awst_tmp%3#0 (copy)",
        "8"
      ]
    },
    "2162": {
      "op": "extract_uint64",
      "defined_out": [
        "awst_tmp%3#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "result_native.0#0",
        "result_native.1#0",
        "result_native.2#0"
      ],
      "stack_out": [
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "awst_tmp%3#0",
        "result_native.0#0",
        "result_native.1#0",
        "result_native.2#0"
      ]
    },
    "2163": {
      "op": "uncover 3",
      "stack_out": [
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "result_native.0#0",
        "result_native.1#0",
        "result_native.2#0",
        "awst_tmp%3#0"
      ]
    },
    "2165": {
      "op": "extract 16 64",
      "defined_out": [
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "result_native.0#0",
        "result_native.1#0",
        "result_native.2#0",
        "result_native.3#0"
      ],
      "stack_out": [
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "result_native.0#0",
        "result_native.1#0",
        "result_native.2#0",
        "result_native.3#0"
      ]
    },
    "2168": {
      "op": "uncover 3",
      "stack_out": [
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "result_native.1#0",
        "result_native.2#0",
        "result_native.3#0",
        "result_native.0#0"
      ]
    },
    "2170": {
      "op": "uncover 7",
      "stack_out": [
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "result_native.1#0",
        "result_native.2#0",
        "result_native.3#0",
        "result_native.0#0",
        "result.0#6"
      ]
    },
    "2172": {
      "op": "==",
      "defined_out": [
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "result_native.1#0",
        "result_native.2#0",
        "result_native.3#0",
        "tmp%56#1"
      ],
      "stack_out": [
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "result_native.1#0",
        "result_native.2#0",
        "result_native.3#0",
        "tmp%56#1"
      ]
    },
    "2173": {
      "op": "uncover 3",
      "stack_out": [
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "result_native.2#0",
        "result_native.3#0",
        "tmp%56#1",
        "result_native.1#0"
      ]
    },
    "2175": {
      "op": "uncover 6",
      "stack_out": [
        "result.2#6",
        "result.3#0",
        "result_native.2#0",
        "result_native.3#0",
        "tmp%56#1",
        "result_native.1#0",
        "result.1#6"
      ]
    },
    "2177": {
      "op": "==",
      "defined_out": [
        "result.2#6",
        "result.3#0",
        "result_native.2#0",
        "result_native.3#0",
        "tmp%56#1",
        "tmp%57#0"
      ],
      "stack_out": [
        "result.2#6",
        "result.3#0",
        "result_native.2#0",
        "result_native.3#0",
        "tmp%56#1",
        "tmp%57#0"
      ]
    },
    "2178": {
      "op": "&&",
      "defined_out": [
        "result.2#6",
        "result.3#0",
        "result_native.2#0",
        "result_native.3#0",
        "tmp%58#1"
      ],
      "stack_out": [
        "result.2#6",
        "result.3#0",
        "result_native.2#0",
        "result_native.3#0",
        "tmp%58#1"
      ]
    },
    "2179": {
      "op": "uncover 2",
      "stack_out": [
        "result.2#6",
        "result.3#0",
        "result_native.3#0",
        "tmp%58#1",
        "result_native.2#0"
      ]
    },
    "2181": {
      "op": "uncover 4",
      "stack_out": [
        "result.3#0",
        "result_native.3#0",
        "tmp%58#1",
        "result_native.2#0",
        "result.2#6"
      ]
    },
    "2183": {
      "op": "==",
      "defined_out": [
        "result.3#0",
        "result_native.3#0",
        "tmp%58#1",
        "tmp%59#1"
      ],
      "stack_out": [
        "result.3#0",
        "result_native.3#0",
        "tmp%58#1",
        "tmp%59#1"
      ]
    },
    "2184": {
      "op": "&&",
      "defined_out": [
        "result.3#0",
        "result_native.3#0",
        "tmp%60#1"
      ],
      "stack_out": [
        "result.3#0",
        "result_native.3#0",
        "tmp%60#1"
      ]
    },
    "2185": {
      "op": "swap",
      "stack_out": [
        "result.3#0",
        "tmp%60#1",
        "result_native.3#0"
      ]
    },
    "2186": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%60#1",
        "result_native.3#0",
        "result.3#0"
      ]
    },
    "2188": {
      "op": "b==",
      "defined_out": [
        "tmp%60#1",
        "tmp%61#1"
      ],
      "stack_out": [
        "tmp%60#1",
        "tmp%61#1"
      ]
    },
    "2189": {
      "op": "&&",
      "defined_out": [
        "tmp%62#0"
      ],
      "stack_out": [
        "tmp%62#0"
      ]
    },
    "2190": {
      "op": "assert",
      "stack_out": []
    },
    "2191": {
      "op": "intc_2 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "2192": {
      "op": "return",
      "stack_out": []
    },
    "2193": {
      "block": "main_test_native_tuple_route@15",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%66#0"
      ],
      "stack_out": [
        "tmp%66#0"
      ]
    },
    "2195": {
      "op": "!",
      "defined_out": [
        "tmp%67#0"
      ],
      "stack_out": [
        "tmp%67#0"
      ]
    },
    "2196": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "2197": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%68#0"
      ],
      "stack_out": [
        "tmp%68#0"
      ]
    },
    "2199": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "2200": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded(uint64)%13#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint64)%13#0"
      ]
    },
    "2203": {
      "op": "btoi",
      "defined_out": [
        "app#0"
      ],
      "stack_out": [
        "app#0"
      ]
    },
    "2204": {
      "op": "itxn_begin"
    },
    "2205": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "app#0 (copy)"
      ],
      "stack_out": [
        "app#0",
        "app#0 (copy)"
      ]
    },
    "2206": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "app#0"
      ]
    },
    "2208": {
      "op": "bytec 4 // method \"echo_native_tuple(string,byte[],uint64,uint512)(string,byte[],uint64,uint512)\"",
      "defined_out": [
        "Method(echo_native_tuple(string,byte[],uint64,uint512)(string,byte[],uint64,uint512))",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "Method(echo_native_tuple(string,byte[],uint64,uint512)(string,byte[],uint64,uint512))"
      ]
    },
    "2210": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0"
      ]
    },
    "2212": {
      "op": "bytec 5 // 0x00027331",
      "defined_out": [
        "0x00027331",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "0x00027331"
      ]
    },
    "2214": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0"
      ]
    },
    "2216": {
      "op": "bytec 6 // 0x00026231",
      "defined_out": [
        "0x00026231",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "0x00026231"
      ]
    },
    "2218": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0"
      ]
    },
    "2220": {
      "op": "bytec_2 // 0x0000000000000001",
      "defined_out": [
        "0x0000000000000001",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "0x0000000000000001"
      ]
    },
    "2221": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0"
      ]
    },
    "2223": {
      "op": "bytec_1 // 0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002",
      "defined_out": [
        "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002"
      ]
    },
    "2224": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0"
      ]
    },
    "2226": {
      "op": "intc_1 // appl",
      "defined_out": [
        "app#0",
        "appl"
      ],
      "stack_out": [
        "app#0",
        "appl"
      ]
    },
    "2227": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "app#0"
      ]
    },
    "2229": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "0"
      ]
    },
    "2230": {
      "op": "itxn_field Fee",
      "stack_out": [
        "app#0"
      ]
    },
    "2232": {
      "op": "itxn_submit"
    },
    "2233": {
      "op": "itxn LastLog",
      "defined_out": [
        "app#0",
        "awst_tmp%0#0"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0"
      ]
    },
    "2235": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ]
    },
    "2236": {
      "op": "extract 4 0",
      "defined_out": [
        "app#0",
        "awst_tmp%0#0",
        "result1#0"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "result1#0"
      ]
    },
    "2239": {
      "op": "dig 1",
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "result1#0",
        "awst_tmp%0#0 (copy)"
      ]
    },
    "2241": {
      "op": "extract 0 4",
      "defined_out": [
        "app#0",
        "awst_tmp%0#0",
        "result1#0",
        "tmp%3#1"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "result1#0",
        "tmp%3#1"
      ]
    },
    "2244": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "app#0",
        "awst_tmp%0#0",
        "result1#0",
        "tmp%3#1"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "result1#0",
        "tmp%3#1",
        "0x151f7c75"
      ]
    },
    "2245": {
      "op": "==",
      "defined_out": [
        "app#0",
        "awst_tmp%0#0",
        "result1#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "result1#0",
        "tmp%4#0"
      ]
    },
    "2246": {
      "error": "application log value is not the result of an ABI return",
      "op": "assert // application log value is not the result of an ABI return",
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "result1#0"
      ]
    },
    "2247": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "awst_tmp%0#0",
        "result1#0",
        "result1#0 (copy)"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "result1#0",
        "result1#0 (copy)"
      ]
    },
    "2248": {
      "op": "intc_0 // 0",
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "result1#0",
        "result1#0 (copy)",
        "0"
      ]
    },
    "2249": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%extract_uint16%0#0",
        "app#0",
        "awst_tmp%0#0",
        "result1#0"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "result1#0",
        "aggregate%extract_uint16%0#0"
      ]
    },
    "2250": {
      "op": "dig 1",
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "result1#0",
        "aggregate%extract_uint16%0#0",
        "result1#0 (copy)"
      ]
    },
    "2252": {
      "op": "intc_3 // 2",
      "defined_out": [
        "2",
        "aggregate%extract_uint16%0#0",
        "app#0",
        "awst_tmp%0#0",
        "result1#0",
        "result1#0 (copy)"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "result1#0",
        "aggregate%extract_uint16%0#0",
        "result1#0 (copy)",
        "2"
      ]
    },
    "2253": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%extract_uint16%0#0",
        "aggregate%extract_uint16%1#0",
        "app#0",
        "awst_tmp%0#0",
        "result1#0"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "result1#0",
        "aggregate%extract_uint16%0#0",
        "aggregate%extract_uint16%1#0"
      ]
    },
    "2254": {
      "op": "dig 2",
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "result1#0",
        "aggregate%extract_uint16%0#0",
        "aggregate%extract_uint16%1#0",
        "result1#0 (copy)"
      ]
    },
    "2256": {
      "op": "uncover 2",
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "result1#0",
        "aggregate%extract_uint16%1#0",
        "result1#0 (copy)",
        "aggregate%extract_uint16%0#0"
      ]
    },
    "2258": {
      "op": "dig 2",
      "defined_out": [
        "aggregate%extract_uint16%0#0",
        "aggregate%extract_uint16%1#0",
        "aggregate%extract_uint16%1#0 (copy)",
        "app#0",
        "awst_tmp%0#0",
        "result1#0",
        "result1#0 (copy)"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "result1#0",
        "aggregate%extract_uint16%1#0",
        "result1#0 (copy)",
        "aggregate%extract_uint16%0#0",
        "aggregate%extract_uint16%1#0 (copy)"
      ]
    },
    "2260": {
      "op": "substring3",
      "defined_out": [
        "aggregate%extract_uint16%1#0",
        "app#0",
        "awst_tmp%0#0",
        "result1#0",
        "s#0"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "result1#0",
        "aggregate%extract_uint16%1#0",
        "s#0"
      ]
    },
    "2261": {
      "op": "dig 2",
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "result1#0",
        "aggregate%extract_uint16%1#0",
        "s#0",
        "result1#0 (copy)"
      ]
    },
    "2263": {
      "op": "len",
      "defined_out": [
        "aggregate%extract_uint16%1#0",
        "aggregate%len%0#0",
        "app#0",
        "awst_tmp%0#0",
        "result1#0",
        "s#0"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "result1#0",
        "aggregate%extract_uint16%1#0",
        "s#0",
        "aggregate%len%0#0"
      ]
    },
    "2264": {
      "op": "dig 3",
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "result1#0",
        "aggregate%extract_uint16%1#0",
        "s#0",
        "aggregate%len%0#0",
        "result1#0 (copy)"
      ]
    },
    "2266": {
      "op": "uncover 3",
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "result1#0",
        "s#0",
        "aggregate%len%0#0",
        "result1#0 (copy)",
        "aggregate%extract_uint16%1#0"
      ]
    },
    "2268": {
      "op": "uncover 2",
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "result1#0",
        "s#0",
        "result1#0 (copy)",
        "aggregate%extract_uint16%1#0",
        "aggregate%len%0#0"
      ]
    },
    "2270": {
      "op": "substring3",
      "defined_out": [
        "app#0",
        "awst_tmp%0#0",
        "b#0",
        "result1#0",
        "s#0"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "result1#0",
        "s#0",
        "b#0"
      ]
    },
    "2271": {
      "op": "dig 3",
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "result1#0",
        "s#0",
        "b#0",
        "awst_tmp%0#0 (copy)"
      ]
    },
    "2273": {
      "op": "extract 16 64",
      "defined_out": [
        "app#0",
        "awst_tmp%0#0",
        "b#0",
        "bu#0",
        "result1#0",
        "s#0"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "result1#0",
        "s#0",
        "b#0",
        "bu#0"
      ]
    },
    "2276": {
      "op": "uncover 2",
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "result1#0",
        "b#0",
        "bu#0",
        "s#0"
      ]
    },
    "2278": {
      "op": "extract 2 0",
      "defined_out": [
        "app#0",
        "awst_tmp%0#0",
        "b#0",
        "bu#0",
        "result1#0",
        "tmp%9#5"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "result1#0",
        "b#0",
        "bu#0",
        "tmp%9#5"
      ]
    },
    "2281": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "awst_tmp%0#0",
        "b#0",
        "bu#0",
        "result1#0",
        "tmp%9#5",
        "tmp%9#5 (copy)"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "result1#0",
        "b#0",
        "bu#0",
        "tmp%9#5",
        "tmp%9#5 (copy)"
      ]
    },
    "2282": {
      "op": "bytec 10 // \"echo: s1\"",
      "defined_out": [
        "\"echo: s1\"",
        "app#0",
        "awst_tmp%0#0",
        "b#0",
        "bu#0",
        "result1#0",
        "tmp%9#5",
        "tmp%9#5 (copy)"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "result1#0",
        "b#0",
        "bu#0",
        "tmp%9#5",
        "tmp%9#5 (copy)",
        "\"echo: s1\""
      ]
    },
    "2284": {
      "op": "==",
      "defined_out": [
        "app#0",
        "awst_tmp%0#0",
        "b#0",
        "bu#0",
        "result1#0",
        "tmp%10#1",
        "tmp%9#5"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "result1#0",
        "b#0",
        "bu#0",
        "tmp%9#5",
        "tmp%10#1"
      ]
    },
    "2285": {
      "op": "assert",
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "result1#0",
        "b#0",
        "bu#0",
        "tmp%9#5"
      ]
    },
    "2286": {
      "op": "uncover 2",
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "result1#0",
        "bu#0",
        "tmp%9#5",
        "b#0"
      ]
    },
    "2288": {
      "op": "extract 2 0",
      "defined_out": [
        "app#0",
        "awst_tmp%0#0",
        "bu#0",
        "result1#0",
        "tmp%11#4",
        "tmp%9#5"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "result1#0",
        "bu#0",
        "tmp%9#5",
        "tmp%11#4"
      ]
    },
    "2291": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "awst_tmp%0#0",
        "bu#0",
        "result1#0",
        "tmp%11#4",
        "tmp%11#4 (copy)",
        "tmp%9#5"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "result1#0",
        "bu#0",
        "tmp%9#5",
        "tmp%11#4",
        "tmp%11#4 (copy)"
      ]
    },
    "2292": {
      "op": "bytec 29 // 0x6563686f3a206231",
      "defined_out": [
        "0x6563686f3a206231",
        "app#0",
        "awst_tmp%0#0",
        "bu#0",
        "result1#0",
        "tmp%11#4",
        "tmp%11#4 (copy)",
        "tmp%9#5"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "result1#0",
        "bu#0",
        "tmp%9#5",
        "tmp%11#4",
        "tmp%11#4 (copy)",
        "0x6563686f3a206231"
      ]
    },
    "2294": {
      "op": "==",
      "defined_out": [
        "app#0",
        "awst_tmp%0#0",
        "bu#0",
        "result1#0",
        "tmp%11#4",
        "tmp%12#1",
        "tmp%9#5"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "result1#0",
        "bu#0",
        "tmp%9#5",
        "tmp%11#4",
        "tmp%12#1"
      ]
    },
    "2295": {
      "op": "assert",
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "result1#0",
        "bu#0",
        "tmp%9#5",
        "tmp%11#4"
      ]
    },
    "2296": {
      "op": "uncover 4",
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%9#5",
        "tmp%11#4",
        "awst_tmp%0#0"
      ]
    },
    "2298": {
      "op": "pushint 8 // 8",
      "defined_out": [
        "8",
        "app#0",
        "awst_tmp%0#0",
        "bu#0",
        "result1#0",
        "tmp%11#4",
        "tmp%9#5"
      ],
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%9#5",
        "tmp%11#4",
        "awst_tmp%0#0",
        "8"
      ]
    },
    "2300": {
      "op": "extract_uint64",
      "defined_out": [
        "app#0",
        "bu#0",
        "result1#0",
        "tmp%11#4",
        "tmp%13#4",
        "tmp%9#5"
      ],
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%9#5",
        "tmp%11#4",
        "tmp%13#4"
      ]
    },
    "2301": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "bu#0",
        "result1#0",
        "tmp%11#4",
        "tmp%13#4",
        "tmp%13#4 (copy)",
        "tmp%9#5"
      ],
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%9#5",
        "tmp%11#4",
        "tmp%13#4",
        "tmp%13#4 (copy)"
      ]
    },
    "2302": {
      "op": "intc_3 // 2",
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%9#5",
        "tmp%11#4",
        "tmp%13#4",
        "tmp%13#4 (copy)",
        "2"
      ]
    },
    "2303": {
      "op": "==",
      "defined_out": [
        "app#0",
        "bu#0",
        "result1#0",
        "tmp%11#4",
        "tmp%13#4",
        "tmp%14#3",
        "tmp%9#5"
      ],
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%9#5",
        "tmp%11#4",
        "tmp%13#4",
        "tmp%14#3"
      ]
    },
    "2304": {
      "op": "assert",
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%9#5",
        "tmp%11#4",
        "tmp%13#4"
      ]
    },
    "2305": {
      "op": "dig 3",
      "defined_out": [
        "app#0",
        "bu#0",
        "bu#0 (copy)",
        "result1#0",
        "tmp%11#4",
        "tmp%13#4",
        "tmp%9#5"
      ],
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%9#5",
        "tmp%11#4",
        "tmp%13#4",
        "bu#0 (copy)"
      ]
    },
    "2307": {
      "op": "bytec 17 // 0x03",
      "defined_out": [
        "0x03",
        "app#0",
        "bu#0",
        "bu#0 (copy)",
        "result1#0",
        "tmp%11#4",
        "tmp%13#4",
        "tmp%9#5"
      ],
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%9#5",
        "tmp%11#4",
        "tmp%13#4",
        "bu#0 (copy)",
        "0x03"
      ]
    },
    "2309": {
      "op": "b==",
      "defined_out": [
        "app#0",
        "bu#0",
        "result1#0",
        "tmp%11#4",
        "tmp%13#4",
        "tmp%16#0",
        "tmp%9#5"
      ],
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%9#5",
        "tmp%11#4",
        "tmp%13#4",
        "tmp%16#0"
      ]
    },
    "2310": {
      "op": "assert",
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%9#5",
        "tmp%11#4",
        "tmp%13#4"
      ]
    },
    "2311": {
      "op": "itxn_begin"
    },
    "2312": {
      "op": "intc_2 // 1",
      "defined_out": [
        "1",
        "app#0",
        "bu#0",
        "result1#0",
        "tmp%11#4",
        "tmp%13#4",
        "tmp%9#5"
      ],
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%9#5",
        "tmp%11#4",
        "tmp%13#4",
        "1"
      ]
    },
    "2313": {
      "op": "itob",
      "defined_out": [
        "aggregate%val_as_bytes%1#0",
        "app#0",
        "bu#0",
        "result1#0",
        "tmp%11#4",
        "tmp%13#4",
        "tmp%9#5"
      ],
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%9#5",
        "tmp%11#4",
        "tmp%13#4",
        "aggregate%val_as_bytes%1#0"
      ]
    },
    "2314": {
      "op": "dig 6",
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%9#5",
        "tmp%11#4",
        "tmp%13#4",
        "aggregate%val_as_bytes%1#0",
        "app#0 (copy)"
      ]
    },
    "2316": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%9#5",
        "tmp%11#4",
        "tmp%13#4",
        "aggregate%val_as_bytes%1#0"
      ]
    },
    "2318": {
      "op": "bytec 4 // method \"echo_native_tuple(string,byte[],uint64,uint512)(string,byte[],uint64,uint512)\"",
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%9#5",
        "tmp%11#4",
        "tmp%13#4",
        "aggregate%val_as_bytes%1#0",
        "Method(echo_native_tuple(string,byte[],uint64,uint512)(string,byte[],uint64,uint512))"
      ]
    },
    "2320": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%9#5",
        "tmp%11#4",
        "tmp%13#4",
        "aggregate%val_as_bytes%1#0"
      ]
    },
    "2322": {
      "op": "bytec 5 // 0x00027331",
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%9#5",
        "tmp%11#4",
        "tmp%13#4",
        "aggregate%val_as_bytes%1#0",
        "0x00027331"
      ]
    },
    "2324": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%9#5",
        "tmp%11#4",
        "tmp%13#4",
        "aggregate%val_as_bytes%1#0"
      ]
    },
    "2326": {
      "op": "bytec 6 // 0x00026231",
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%9#5",
        "tmp%11#4",
        "tmp%13#4",
        "aggregate%val_as_bytes%1#0",
        "0x00026231"
      ]
    },
    "2328": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%9#5",
        "tmp%11#4",
        "tmp%13#4",
        "aggregate%val_as_bytes%1#0"
      ]
    },
    "2330": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%9#5",
        "tmp%11#4",
        "tmp%13#4"
      ]
    },
    "2332": {
      "op": "bytec_1 // 0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002",
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%9#5",
        "tmp%11#4",
        "tmp%13#4",
        "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002"
      ]
    },
    "2333": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%9#5",
        "tmp%11#4",
        "tmp%13#4"
      ]
    },
    "2335": {
      "op": "intc_1 // appl",
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%9#5",
        "tmp%11#4",
        "tmp%13#4",
        "appl"
      ]
    },
    "2336": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%9#5",
        "tmp%11#4",
        "tmp%13#4"
      ]
    },
    "2338": {
      "op": "intc_0 // 0",
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%9#5",
        "tmp%11#4",
        "tmp%13#4",
        "0"
      ]
    },
    "2339": {
      "op": "itxn_field Fee",
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%9#5",
        "tmp%11#4",
        "tmp%13#4"
      ]
    },
    "2341": {
      "op": "itxn_submit"
    },
    "2342": {
      "op": "itxn LastLog",
      "defined_out": [
        "app#0",
        "awst_tmp%1#0",
        "bu#0",
        "result1#0",
        "tmp%11#4",
        "tmp%13#4",
        "tmp%9#5"
      ],
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%9#5",
        "tmp%11#4",
        "tmp%13#4",
        "awst_tmp%1#0"
      ]
    },
    "2344": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "awst_tmp%1#0",
        "awst_tmp%1#0 (copy)",
        "bu#0",
        "result1#0",
        "tmp%11#4",
        "tmp%13#4",
        "tmp%9#5"
      ],
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%9#5",
        "tmp%11#4",
        "tmp%13#4",
        "awst_tmp%1#0",
        "awst_tmp%1#0 (copy)"
      ]
    },
    "2345": {
      "op": "extract 4 0",
      "defined_out": [
        "app#0",
        "awst_tmp%1#0",
        "bu#0",
        "result1#0",
        "result2#0",
        "tmp%11#4",
        "tmp%13#4",
        "tmp%9#5"
      ],
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%9#5",
        "tmp%11#4",
        "tmp%13#4",
        "awst_tmp%1#0",
        "result2#0"
      ]
    },
    "2348": {
      "op": "swap",
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%9#5",
        "tmp%11#4",
        "tmp%13#4",
        "result2#0",
        "awst_tmp%1#0"
      ]
    },
    "2349": {
      "op": "extract 0 4",
      "defined_out": [
        "app#0",
        "bu#0",
        "result1#0",
        "result2#0",
        "tmp%11#4",
        "tmp%13#4",
        "tmp%22#3",
        "tmp%9#5"
      ],
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%9#5",
        "tmp%11#4",
        "tmp%13#4",
        "result2#0",
        "tmp%22#3"
      ]
    },
    "2352": {
      "op": "bytec_0 // 0x151f7c75",
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%9#5",
        "tmp%11#4",
        "tmp%13#4",
        "result2#0",
        "tmp%22#3",
        "0x151f7c75"
      ]
    },
    "2353": {
      "op": "==",
      "defined_out": [
        "app#0",
        "bu#0",
        "result1#0",
        "result2#0",
        "tmp%11#4",
        "tmp%13#4",
        "tmp%23#1",
        "tmp%9#5"
      ],
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%9#5",
        "tmp%11#4",
        "tmp%13#4",
        "result2#0",
        "tmp%23#1"
      ]
    },
    "2354": {
      "error": "application log value is not the result of an ABI return",
      "op": "assert // application log value is not the result of an ABI return",
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%9#5",
        "tmp%11#4",
        "tmp%13#4",
        "result2#0"
      ]
    },
    "2355": {
      "op": "dig 5",
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%9#5",
        "tmp%11#4",
        "tmp%13#4",
        "result2#0",
        "result1#0 (copy)"
      ]
    },
    "2357": {
      "op": "==",
      "defined_out": [
        "app#0",
        "bu#0",
        "result1#0",
        "tmp%11#4",
        "tmp%13#4",
        "tmp%24#1",
        "tmp%9#5"
      ],
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%9#5",
        "tmp%11#4",
        "tmp%13#4",
        "tmp%24#1"
      ]
    },
    "2358": {
      "op": "assert",
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%9#5",
        "tmp%11#4",
        "tmp%13#4"
      ]
    },
    "2359": {
      "op": "itxn_begin"
    },
    "2360": {
      "op": "dig 5",
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%9#5",
        "tmp%11#4",
        "tmp%13#4",
        "app#0 (copy)"
      ]
    },
    "2362": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%9#5",
        "tmp%11#4",
        "tmp%13#4"
      ]
    },
    "2364": {
      "op": "bytec 4 // method \"echo_native_tuple(string,byte[],uint64,uint512)(string,byte[],uint64,uint512)\"",
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%9#5",
        "tmp%11#4",
        "tmp%13#4",
        "Method(echo_native_tuple(string,byte[],uint64,uint512)(string,byte[],uint64,uint512))"
      ]
    },
    "2366": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%9#5",
        "tmp%11#4",
        "tmp%13#4"
      ]
    },
    "2368": {
      "op": "bytec 5 // 0x00027331",
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%9#5",
        "tmp%11#4",
        "tmp%13#4",
        "0x00027331"
      ]
    },
    "2370": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%9#5",
        "tmp%11#4",
        "tmp%13#4"
      ]
    },
    "2372": {
      "op": "bytec 6 // 0x00026231",
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%9#5",
        "tmp%11#4",
        "tmp%13#4",
        "0x00026231"
      ]
    },
    "2374": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%9#5",
        "tmp%11#4",
        "tmp%13#4"
      ]
    },
    "2376": {
      "op": "bytec_2 // 0x0000000000000001",
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%9#5",
        "tmp%11#4",
        "tmp%13#4",
        "0x0000000000000001"
      ]
    },
    "2377": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%9#5",
        "tmp%11#4",
        "tmp%13#4"
      ]
    },
    "2379": {
      "op": "bytec_1 // 0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002",
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%9#5",
        "tmp%11#4",
        "tmp%13#4",
        "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002"
      ]
    },
    "2380": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%9#5",
        "tmp%11#4",
        "tmp%13#4"
      ]
    },
    "2382": {
      "op": "intc_1 // appl",
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%9#5",
        "tmp%11#4",
        "tmp%13#4",
        "appl"
      ]
    },
    "2383": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%9#5",
        "tmp%11#4",
        "tmp%13#4"
      ]
    },
    "2385": {
      "op": "intc_0 // 0",
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%9#5",
        "tmp%11#4",
        "tmp%13#4",
        "0"
      ]
    },
    "2386": {
      "op": "itxn_field Fee",
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%9#5",
        "tmp%11#4",
        "tmp%13#4"
      ]
    },
    "2388": {
      "op": "itxn_submit"
    },
    "2389": {
      "op": "itxn LastLog",
      "defined_out": [
        "app#0",
        "awst_tmp%2#0",
        "bu#0",
        "result1#0",
        "tmp%11#4",
        "tmp%13#4",
        "tmp%9#5"
      ],
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%9#5",
        "tmp%11#4",
        "tmp%13#4",
        "awst_tmp%2#0"
      ]
    },
    "2391": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "awst_tmp%2#0",
        "awst_tmp%2#0 (copy)",
        "bu#0",
        "result1#0",
        "tmp%11#4",
        "tmp%13#4",
        "tmp%9#5"
      ],
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%9#5",
        "tmp%11#4",
        "tmp%13#4",
        "awst_tmp%2#0",
        "awst_tmp%2#0 (copy)"
      ]
    },
    "2392": {
      "op": "extract 4 0",
      "defined_out": [
        "app#0",
        "awst_tmp%2#0",
        "bu#0",
        "result1#0",
        "result3#0",
        "tmp%11#4",
        "tmp%13#4",
        "tmp%9#5"
      ],
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%9#5",
        "tmp%11#4",
        "tmp%13#4",
        "awst_tmp%2#0",
        "result3#0"
      ]
    },
    "2395": {
      "op": "swap",
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%9#5",
        "tmp%11#4",
        "tmp%13#4",
        "result3#0",
        "awst_tmp%2#0"
      ]
    },
    "2396": {
      "op": "extract 0 4",
      "defined_out": [
        "app#0",
        "bu#0",
        "result1#0",
        "result3#0",
        "tmp%11#4",
        "tmp%13#4",
        "tmp%28#1",
        "tmp%9#5"
      ],
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%9#5",
        "tmp%11#4",
        "tmp%13#4",
        "result3#0",
        "tmp%28#1"
      ]
    },
    "2399": {
      "op": "bytec_0 // 0x151f7c75",
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%9#5",
        "tmp%11#4",
        "tmp%13#4",
        "result3#0",
        "tmp%28#1",
        "0x151f7c75"
      ]
    },
    "2400": {
      "op": "==",
      "defined_out": [
        "app#0",
        "bu#0",
        "result1#0",
        "result3#0",
        "tmp%11#4",
        "tmp%13#4",
        "tmp%29#1",
        "tmp%9#5"
      ],
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%9#5",
        "tmp%11#4",
        "tmp%13#4",
        "result3#0",
        "tmp%29#1"
      ]
    },
    "2401": {
      "error": "application log value is not the result of an ABI return",
      "op": "assert // application log value is not the result of an ABI return",
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%9#5",
        "tmp%11#4",
        "tmp%13#4",
        "result3#0"
      ]
    },
    "2402": {
      "op": "uncover 5",
      "stack_out": [
        "app#0",
        "bu#0",
        "tmp%9#5",
        "tmp%11#4",
        "tmp%13#4",
        "result3#0",
        "result1#0"
      ]
    },
    "2404": {
      "op": "==",
      "defined_out": [
        "app#0",
        "bu#0",
        "tmp%11#4",
        "tmp%13#4",
        "tmp%30#1",
        "tmp%9#5"
      ],
      "stack_out": [
        "app#0",
        "bu#0",
        "tmp%9#5",
        "tmp%11#4",
        "tmp%13#4",
        "tmp%30#1"
      ]
    },
    "2405": {
      "op": "assert",
      "stack_out": [
        "app#0",
        "bu#0",
        "tmp%9#5",
        "tmp%11#4",
        "tmp%13#4"
      ]
    },
    "2406": {
      "op": "itxn_begin"
    },
    "2407": {
      "op": "uncover 4",
      "stack_out": [
        "bu#0",
        "tmp%9#5",
        "tmp%11#4",
        "tmp%13#4",
        "app#0"
      ]
    },
    "2409": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "bu#0",
        "tmp%9#5",
        "tmp%11#4",
        "tmp%13#4"
      ]
    },
    "2411": {
      "op": "bytec 4 // method \"echo_native_tuple(string,byte[],uint64,uint512)(string,byte[],uint64,uint512)\"",
      "stack_out": [
        "bu#0",
        "tmp%9#5",
        "tmp%11#4",
        "tmp%13#4",
        "Method(echo_native_tuple(string,byte[],uint64,uint512)(string,byte[],uint64,uint512))"
      ]
    },
    "2413": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "bu#0",
        "tmp%9#5",
        "tmp%11#4",
        "tmp%13#4"
      ]
    },
    "2415": {
      "op": "bytec 5 // 0x00027331",
      "stack_out": [
        "bu#0",
        "tmp%9#5",
        "tmp%11#4",
        "tmp%13#4",
        "0x00027331"
      ]
    },
    "2417": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "bu#0",
        "tmp%9#5",
        "tmp%11#4",
        "tmp%13#4"
      ]
    },
    "2419": {
      "op": "bytec 6 // 0x00026231",
      "stack_out": [
        "bu#0",
        "tmp%9#5",
        "tmp%11#4",
        "tmp%13#4",
        "0x00026231"
      ]
    },
    "2421": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "bu#0",
        "tmp%9#5",
        "tmp%11#4",
        "tmp%13#4"
      ]
    },
    "2423": {
      "op": "bytec_2 // 0x0000000000000001",
      "stack_out": [
        "bu#0",
        "tmp%9#5",
        "tmp%11#4",
        "tmp%13#4",
        "0x0000000000000001"
      ]
    },
    "2424": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "bu#0",
        "tmp%9#5",
        "tmp%11#4",
        "tmp%13#4"
      ]
    },
    "2426": {
      "op": "bytec_1 // 0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002",
      "stack_out": [
        "bu#0",
        "tmp%9#5",
        "tmp%11#4",
        "tmp%13#4",
        "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002"
      ]
    },
    "2427": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "bu#0",
        "tmp%9#5",
        "tmp%11#4",
        "tmp%13#4"
      ]
    },
    "2429": {
      "op": "intc_1 // appl",
      "stack_out": [
        "bu#0",
        "tmp%9#5",
        "tmp%11#4",
        "tmp%13#4",
        "appl"
      ]
    },
    "2430": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "bu#0",
        "tmp%9#5",
        "tmp%11#4",
        "tmp%13#4"
      ]
    },
    "2432": {
      "op": "intc_0 // 0",
      "stack_out": [
        "bu#0",
        "tmp%9#5",
        "tmp%11#4",
        "tmp%13#4",
        "0"
      ]
    },
    "2433": {
      "op": "itxn_field Fee",
      "stack_out": [
        "bu#0",
        "tmp%9#5",
        "tmp%11#4",
        "tmp%13#4"
      ]
    },
    "2435": {
      "op": "itxn_submit"
    },
    "2436": {
      "op": "itxn LastLog",
      "defined_out": [
        "awst_tmp%3#0",
        "bu#0",
        "tmp%11#4",
        "tmp%13#4",
        "tmp%9#5"
      ],
      "stack_out": [
        "bu#0",
        "tmp%9#5",
        "tmp%11#4",
        "tmp%13#4",
        "awst_tmp%3#0"
      ]
    },
    "2438": {
      "op": "dup",
      "defined_out": [
        "awst_tmp%3#0",
        "awst_tmp%3#0 (copy)",
        "bu#0",
        "tmp%11#4",
        "tmp%13#4",
        "tmp%9#5"
      ],
      "stack_out": [
        "bu#0",
        "tmp%9#5",
        "tmp%11#4",
        "tmp%13#4",
        "awst_tmp%3#0",
        "awst_tmp%3#0 (copy)"
      ]
    },
    "2439": {
      "op": "extract 4 0",
      "defined_out": [
        "awst_tmp%3#0",
        "bu#0",
        "tmp%11#4",
        "tmp%13#4",
        "tmp%33#3",
        "tmp%9#5"
      ],
      "stack_out": [
        "bu#0",
        "tmp%9#5",
        "tmp%11#4",
        "tmp%13#4",
        "awst_tmp%3#0",
        "tmp%33#3"
      ]
    },
    "2442": {
      "op": "dig 1",
      "stack_out": [
        "bu#0",
        "tmp%9#5",
        "tmp%11#4",
        "tmp%13#4",
        "awst_tmp%3#0",
        "tmp%33#3",
        "awst_tmp%3#0 (copy)"
      ]
    },
    "2444": {
      "op": "extract 0 4",
      "defined_out": [
        "awst_tmp%3#0",
        "bu#0",
        "tmp%11#4",
        "tmp%13#4",
        "tmp%33#3",
        "tmp%34#3",
        "tmp%9#5"
      ],
      "stack_out": [
        "bu#0",
        "tmp%9#5",
        "tmp%11#4",
        "tmp%13#4",
        "awst_tmp%3#0",
        "tmp%33#3",
        "tmp%34#3"
      ]
    },
    "2447": {
      "op": "bytec_0 // 0x151f7c75",
      "stack_out": [
        "bu#0",
        "tmp%9#5",
        "tmp%11#4",
        "tmp%13#4",
        "awst_tmp%3#0",
        "tmp%33#3",
        "tmp%34#3",
        "0x151f7c75"
      ]
    },
    "2448": {
      "op": "==",
      "defined_out": [
        "awst_tmp%3#0",
        "bu#0",
        "tmp%11#4",
        "tmp%13#4",
        "tmp%33#3",
        "tmp%35#1",
        "tmp%9#5"
      ],
      "stack_out": [
        "bu#0",
        "tmp%9#5",
        "tmp%11#4",
        "tmp%13#4",
        "awst_tmp%3#0",
        "tmp%33#3",
        "tmp%35#1"
      ]
    },
    "2449": {
      "error": "application log value is not the result of an ABI return",
      "op": "assert // application log value is not the result of an ABI return",
      "stack_out": [
        "bu#0",
        "tmp%9#5",
        "tmp%11#4",
        "tmp%13#4",
        "awst_tmp%3#0",
        "tmp%33#3"
      ]
    },
    "2450": {
      "op": "dup",
      "defined_out": [
        "awst_tmp%3#0",
        "bu#0",
        "tmp%11#4",
        "tmp%13#4",
        "tmp%33#3",
        "tmp%33#3 (copy)",
        "tmp%9#5"
      ],
      "stack_out": [
        "bu#0",
        "tmp%9#5",
        "tmp%11#4",
        "tmp%13#4",
        "awst_tmp%3#0",
        "tmp%33#3",
        "tmp%33#3 (copy)"
      ]
    },
    "2451": {
      "op": "intc_0 // 0",
      "stack_out": [
        "bu#0",
        "tmp%9#5",
        "tmp%11#4",
        "tmp%13#4",
        "awst_tmp%3#0",
        "tmp%33#3",
        "tmp%33#3 (copy)",
        "0"
      ]
    },
    "2452": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%extract_uint16%3#0",
        "awst_tmp%3#0",
        "bu#0",
        "tmp%11#4",
        "tmp%13#4",
        "tmp%33#3",
        "tmp%9#5"
      ],
      "stack_out": [
        "bu#0",
        "tmp%9#5",
        "tmp%11#4",
        "tmp%13#4",
        "awst_tmp%3#0",
        "tmp%33#3",
        "aggregate%extract_uint16%3#0"
      ]
    },
    "2453": {
      "op": "dig 1",
      "stack_out": [
        "bu#0",
        "tmp%9#5",
        "tmp%11#4",
        "tmp%13#4",
        "awst_tmp%3#0",
        "tmp%33#3",
        "aggregate%extract_uint16%3#0",
        "tmp%33#3 (copy)"
      ]
    },
    "2455": {
      "op": "intc_3 // 2",
      "stack_out": [
        "bu#0",
        "tmp%9#5",
        "tmp%11#4",
        "tmp%13#4",
        "awst_tmp%3#0",
        "tmp%33#3",
        "aggregate%extract_uint16%3#0",
        "tmp%33#3 (copy)",
        "2"
      ]
    },
    "2456": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%extract_uint16%3#0",
        "aggregate%extract_uint16%4#0",
        "awst_tmp%3#0",
        "bu#0",
        "tmp%11#4",
        "tmp%13#4",
        "tmp%33#3",
        "tmp%9#5"
      ],
      "stack_out": [
        "bu#0",
        "tmp%9#5",
        "tmp%11#4",
        "tmp%13#4",
        "awst_tmp%3#0",
        "tmp%33#3",
        "aggregate%extract_uint16%3#0",
        "aggregate%extract_uint16%4#0"
      ]
    },
    "2457": {
      "op": "dig 2",
      "stack_out": [
        "bu#0",
        "tmp%9#5",
        "tmp%11#4",
        "tmp%13#4",
        "awst_tmp%3#0",
        "tmp%33#3",
        "aggregate%extract_uint16%3#0",
        "aggregate%extract_uint16%4#0",
        "tmp%33#3 (copy)"
      ]
    },
    "2459": {
      "op": "uncover 2",
      "stack_out": [
        "bu#0",
        "tmp%9#5",
        "tmp%11#4",
        "tmp%13#4",
        "awst_tmp%3#0",
        "tmp%33#3",
        "aggregate%extract_uint16%4#0",
        "tmp%33#3 (copy)",
        "aggregate%extract_uint16%3#0"
      ]
    },
    "2461": {
      "op": "dig 2",
      "defined_out": [
        "aggregate%extract_uint16%3#0",
        "aggregate%extract_uint16%4#0",
        "aggregate%extract_uint16%4#0 (copy)",
        "awst_tmp%3#0",
        "bu#0",
        "tmp%11#4",
        "tmp%13#4",
        "tmp%33#3",
        "tmp%33#3 (copy)",
        "tmp%9#5"
      ],
      "stack_out": [
        "bu#0",
        "tmp%9#5",
        "tmp%11#4",
        "tmp%13#4",
        "awst_tmp%3#0",
        "tmp%33#3",
        "aggregate%extract_uint16%4#0",
        "tmp%33#3 (copy)",
        "aggregate%extract_uint16%3#0",
        "aggregate%extract_uint16%4#0 (copy)"
      ]
    },
    "2463": {
      "op": "substring3",
      "defined_out": [
        "aggregate%extract_uint16%4#0",
        "aggregate%substring3%2#0",
        "awst_tmp%3#0",
        "bu#0",
        "tmp%11#4",
        "tmp%13#4",
        "tmp%33#3",
        "tmp%9#5"
      ],
      "stack_out": [
        "bu#0",
        "tmp%9#5",
        "tmp%11#4",
        "tmp%13#4",
        "awst_tmp%3#0",
        "tmp%33#3",
        "aggregate%extract_uint16%4#0",
        "aggregate%substring3%2#0"
      ]
    },
    "2464": {
      "op": "extract 2 0",
      "defined_out": [
        "aggregate%extract_uint16%4#0",
        "awst_tmp%3#0",
        "bu#0",
        "result_native.0#0",
        "tmp%11#4",
        "tmp%13#4",
        "tmp%33#3",
        "tmp%9#5"
      ],
      "stack_out": [
        "bu#0",
        "tmp%9#5",
        "tmp%11#4",
        "tmp%13#4",
        "awst_tmp%3#0",
        "tmp%33#3",
        "aggregate%extract_uint16%4#0",
        "result_native.0#0"
      ]
    },
    "2467": {
      "op": "dig 2",
      "stack_out": [
        "bu#0",
        "tmp%9#5",
        "tmp%11#4",
        "tmp%13#4",
        "awst_tmp%3#0",
        "tmp%33#3",
        "aggregate%extract_uint16%4#0",
        "result_native.0#0",
        "tmp%33#3 (copy)"
      ]
    },
    "2469": {
      "op": "len",
      "defined_out": [
        "aggregate%extract_uint16%4#0",
        "aggregate%len%1#0",
        "awst_tmp%3#0",
        "bu#0",
        "result_native.0#0",
        "tmp%11#4",
        "tmp%13#4",
        "tmp%33#3",
        "tmp%9#5"
      ],
      "stack_out": [
        "bu#0",
        "tmp%9#5",
        "tmp%11#4",
        "tmp%13#4",
        "awst_tmp%3#0",
        "tmp%33#3",
        "aggregate%extract_uint16%4#0",
        "result_native.0#0",
        "aggregate%len%1#0"
      ]
    },
    "2470": {
      "op": "swap"
    },
    "2471": {
      "op": "cover 3",
      "stack_out": [
        "bu#0",
        "tmp%9#5",
        "tmp%11#4",
        "tmp%13#4",
        "awst_tmp%3#0",
        "result_native.0#0",
        "tmp%33#3",
        "aggregate%extract_uint16%4#0",
        "aggregate%len%1#0"
      ]
    },
    "2473": {
      "op": "substring3",
      "defined_out": [
        "aggregate%substring3%3#0",
        "awst_tmp%3#0",
        "bu#0",
        "result_native.0#0",
        "tmp%11#4",
        "tmp%13#4",
        "tmp%9#5"
      ],
      "stack_out": [
        "bu#0",
        "tmp%9#5",
        "tmp%11#4",
        "tmp%13#4",
        "awst_tmp%3#0",
        "result_native.0#0",
        "aggregate%substring3%3#0"
      ]
    },
    "2474": {
      "op": "extract 2 0",
      "defined_out": [
        "awst_tmp%3#0",
        "bu#0",
        "result_native.0#0",
        "result_native.1#0",
        "tmp%11#4",
        "tmp%13#4",
        "tmp%9#5"
      ],
      "stack_out": [
        "bu#0",
        "tmp%9#5",
        "tmp%11#4",
        "tmp%13#4",
        "awst_tmp%3#0",
        "result_native.0#0",
        "result_native.1#0"
      ]
    },
    "2477": {
      "op": "dig 2",
      "stack_out": [
        "bu#0",
        "tmp%9#5",
        "tmp%11#4",
        "tmp%13#4",
        "awst_tmp%3#0",
        "result_native.0#0",
        "result_native.1#0",
        "awst_tmp%3#0 (copy)"
      ]
    },
    "2479": {
      "op": "pushint 8 // 8",
      "stack_out": [
        "bu#0",
        "tmp%9#5",
        "tmp%11#4",
        "tmp%13#4",
        "awst_tmp%3#0",
        "result_native.0#0",
        "result_native.1#0",
        "awst_tmp%3#0 (copy)",
        "8"
      ]
    },
    "2481": {
      "op": "extract_uint64",
      "defined_out": [
        "awst_tmp%3#0",
        "bu#0",
        "result_native.0#0",
        "result_native.1#0",
        "result_native.2#0",
        "tmp%11#4",
        "tmp%13#4",
        "tmp%9#5"
      ],
      "stack_out": [
        "bu#0",
        "tmp%9#5",
        "tmp%11#4",
        "tmp%13#4",
        "awst_tmp%3#0",
        "result_native.0#0",
        "result_native.1#0",
        "result_native.2#0"
      ]
    },
    "2482": {
      "op": "uncover 3",
      "stack_out": [
        "bu#0",
        "tmp%9#5",
        "tmp%11#4",
        "tmp%13#4",
        "result_native.0#0",
        "result_native.1#0",
        "result_native.2#0",
        "awst_tmp%3#0"
      ]
    },
    "2484": {
      "op": "extract 16 64",
      "defined_out": [
        "bu#0",
        "result_native.0#0",
        "result_native.1#0",
        "result_native.2#0",
        "result_native.3#0",
        "tmp%11#4",
        "tmp%13#4",
        "tmp%9#5"
      ],
      "stack_out": [
        "bu#0",
        "tmp%9#5",
        "tmp%11#4",
        "tmp%13#4",
        "result_native.0#0",
        "result_native.1#0",
        "result_native.2#0",
        "result_native.3#0"
      ]
    },
    "2487": {
      "op": "uncover 6",
      "stack_out": [
        "bu#0",
        "tmp%11#4",
        "tmp%13#4",
        "result_native.0#0",
        "result_native.1#0",
        "result_native.2#0",
        "result_native.3#0",
        "tmp%9#5"
      ]
    },
    "2489": {
      "op": "uncover 4",
      "stack_out": [
        "bu#0",
        "tmp%11#4",
        "tmp%13#4",
        "result_native.1#0",
        "result_native.2#0",
        "result_native.3#0",
        "tmp%9#5",
        "result_native.0#0"
      ]
    },
    "2491": {
      "op": "==",
      "defined_out": [
        "bu#0",
        "result_native.1#0",
        "result_native.2#0",
        "result_native.3#0",
        "tmp%11#4",
        "tmp%13#4",
        "tmp%45#1"
      ],
      "stack_out": [
        "bu#0",
        "tmp%11#4",
        "tmp%13#4",
        "result_native.1#0",
        "result_native.2#0",
        "result_native.3#0",
        "tmp%45#1"
      ]
    },
    "2492": {
      "op": "assert",
      "stack_out": [
        "bu#0",
        "tmp%11#4",
        "tmp%13#4",
        "result_native.1#0",
        "result_native.2#0",
        "result_native.3#0"
      ]
    },
    "2493": {
      "op": "uncover 4",
      "stack_out": [
        "bu#0",
        "tmp%13#4",
        "result_native.1#0",
        "result_native.2#0",
        "result_native.3#0",
        "tmp%11#4"
      ]
    },
    "2495": {
      "op": "uncover 3",
      "stack_out": [
        "bu#0",
        "tmp%13#4",
        "result_native.2#0",
        "result_native.3#0",
        "tmp%11#4",
        "result_native.1#0"
      ]
    },
    "2497": {
      "op": "==",
      "defined_out": [
        "bu#0",
        "result_native.2#0",
        "result_native.3#0",
        "tmp%13#4",
        "tmp%51#1"
      ],
      "stack_out": [
        "bu#0",
        "tmp%13#4",
        "result_native.2#0",
        "result_native.3#0",
        "tmp%51#1"
      ]
    },
    "2498": {
      "op": "assert",
      "stack_out": [
        "bu#0",
        "tmp%13#4",
        "result_native.2#0",
        "result_native.3#0"
      ]
    },
    "2499": {
      "op": "cover 2",
      "stack_out": [
        "bu#0",
        "result_native.3#0",
        "tmp%13#4",
        "result_native.2#0"
      ]
    },
    "2501": {
      "op": "==",
      "defined_out": [
        "bu#0",
        "result_native.3#0",
        "tmp%57#0"
      ],
      "stack_out": [
        "bu#0",
        "result_native.3#0",
        "tmp%57#0"
      ]
    },
    "2502": {
      "op": "assert",
      "stack_out": [
        "bu#0",
        "result_native.3#0"
      ]
    },
    "2503": {
      "op": "b==",
      "defined_out": [
        "tmp%63#1"
      ],
      "stack_out": [
        "tmp%63#1"
      ]
    },
    "2504": {
      "op": "assert",
      "stack_out": []
    },
    "2505": {
      "op": "intc_2 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "2506": {
      "op": "return",
      "stack_out": []
    },
    "2507": {
      "block": "main_test_native_biguint_route@14",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%61#0"
      ],
      "stack_out": [
        "tmp%61#0"
      ]
    },
    "2509": {
      "op": "!",
      "defined_out": [
        "tmp%62#0"
      ],
      "stack_out": [
        "tmp%62#0"
      ]
    },
    "2510": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "2511": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%63#0"
      ],
      "stack_out": [
        "tmp%63#0"
      ]
    },
    "2513": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "2514": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded(uint64)%12#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint64)%12#0"
      ]
    },
    "2517": {
      "op": "btoi",
      "defined_out": [
        "app#0"
      ],
      "stack_out": [
        "app#0"
      ]
    },
    "2518": {
      "op": "itxn_begin"
    },
    "2519": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "app#0 (copy)"
      ],
      "stack_out": [
        "app#0",
        "app#0 (copy)"
      ]
    },
    "2520": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "app#0"
      ]
    },
    "2522": {
      "op": "bytec 18 // method \"echo_native_biguint(uint512)uint512\"",
      "defined_out": [
        "Method(echo_native_biguint(uint512)uint512)",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "Method(echo_native_biguint(uint512)uint512)"
      ]
    },
    "2524": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0"
      ]
    },
    "2526": {
      "op": "bytec_1 // 0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002",
      "defined_out": [
        "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002"
      ]
    },
    "2527": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0"
      ]
    },
    "2529": {
      "op": "intc_1 // appl",
      "defined_out": [
        "app#0",
        "appl"
      ],
      "stack_out": [
        "app#0",
        "appl"
      ]
    },
    "2530": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "app#0"
      ]
    },
    "2532": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "0"
      ]
    },
    "2533": {
      "op": "itxn_field Fee",
      "stack_out": [
        "app#0"
      ]
    },
    "2535": {
      "op": "itxn_submit"
    },
    "2536": {
      "op": "itxn LastLog",
      "defined_out": [
        "app#0",
        "awst_tmp%0#0"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0"
      ]
    },
    "2538": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ]
    },
    "2539": {
      "op": "extract 4 0",
      "defined_out": [
        "app#0",
        "awst_tmp%0#0",
        "result1#1"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "result1#1"
      ]
    },
    "2542": {
      "op": "swap",
      "stack_out": [
        "app#0",
        "result1#1",
        "awst_tmp%0#0"
      ]
    },
    "2543": {
      "op": "extract 0 4",
      "defined_out": [
        "app#0",
        "result1#1",
        "tmp%1#2"
      ],
      "stack_out": [
        "app#0",
        "result1#1",
        "tmp%1#2"
      ]
    },
    "2546": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "app#0",
        "result1#1",
        "tmp%1#2"
      ],
      "stack_out": [
        "app#0",
        "result1#1",
        "tmp%1#2",
        "0x151f7c75"
      ]
    },
    "2547": {
      "op": "==",
      "defined_out": [
        "app#0",
        "result1#1",
        "tmp%2#3"
      ],
      "stack_out": [
        "app#0",
        "result1#1",
        "tmp%2#3"
      ]
    },
    "2548": {
      "error": "application log value is not the result of an ABI return",
      "op": "assert // application log value is not the result of an ABI return",
      "stack_out": [
        "app#0",
        "result1#1"
      ]
    },
    "2549": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "result1#1",
        "result1#1 (copy)"
      ],
      "stack_out": [
        "app#0",
        "result1#1",
        "result1#1 (copy)"
      ]
    },
    "2550": {
      "op": "bytec 17 // 0x03",
      "defined_out": [
        "0x03",
        "app#0",
        "result1#1",
        "result1#1 (copy)"
      ],
      "stack_out": [
        "app#0",
        "result1#1",
        "result1#1 (copy)",
        "0x03"
      ]
    },
    "2552": {
      "op": "b==",
      "defined_out": [
        "app#0",
        "result1#1",
        "tmp%4#0"
      ],
      "stack_out": [
        "app#0",
        "result1#1",
        "tmp%4#0"
      ]
    },
    "2553": {
      "op": "assert",
      "stack_out": [
        "app#0",
        "result1#1"
      ]
    },
    "2554": {
      "op": "itxn_begin"
    },
    "2555": {
      "op": "dig 1",
      "stack_out": [
        "app#0",
        "result1#1",
        "app#0 (copy)"
      ]
    },
    "2557": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "app#0",
        "result1#1"
      ]
    },
    "2559": {
      "op": "bytec 18 // method \"echo_native_biguint(uint512)uint512\"",
      "stack_out": [
        "app#0",
        "result1#1",
        "Method(echo_native_biguint(uint512)uint512)"
      ]
    },
    "2561": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0",
        "result1#1"
      ]
    },
    "2563": {
      "op": "bytec_1 // 0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002",
      "stack_out": [
        "app#0",
        "result1#1",
        "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002"
      ]
    },
    "2564": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0",
        "result1#1"
      ]
    },
    "2566": {
      "op": "intc_1 // appl",
      "stack_out": [
        "app#0",
        "result1#1",
        "appl"
      ]
    },
    "2567": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "app#0",
        "result1#1"
      ]
    },
    "2569": {
      "op": "intc_0 // 0",
      "stack_out": [
        "app#0",
        "result1#1",
        "0"
      ]
    },
    "2570": {
      "op": "itxn_field Fee",
      "stack_out": [
        "app#0",
        "result1#1"
      ]
    },
    "2572": {
      "op": "itxn_submit"
    },
    "2573": {
      "op": "itxn LastLog",
      "defined_out": [
        "app#0",
        "awst_tmp%1#0",
        "result1#1"
      ],
      "stack_out": [
        "app#0",
        "result1#1",
        "awst_tmp%1#0"
      ]
    },
    "2575": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "awst_tmp%1#0",
        "awst_tmp%1#0 (copy)",
        "result1#1"
      ],
      "stack_out": [
        "app#0",
        "result1#1",
        "awst_tmp%1#0",
        "awst_tmp%1#0 (copy)"
      ]
    },
    "2576": {
      "op": "extract 4 0",
      "defined_out": [
        "app#0",
        "awst_tmp%1#0",
        "result1#1",
        "result2#1"
      ],
      "stack_out": [
        "app#0",
        "result1#1",
        "awst_tmp%1#0",
        "result2#1"
      ]
    },
    "2579": {
      "op": "swap",
      "stack_out": [
        "app#0",
        "result1#1",
        "result2#1",
        "awst_tmp%1#0"
      ]
    },
    "2580": {
      "op": "extract 0 4",
      "defined_out": [
        "app#0",
        "result1#1",
        "result2#1",
        "tmp%7#1"
      ],
      "stack_out": [
        "app#0",
        "result1#1",
        "result2#1",
        "tmp%7#1"
      ]
    },
    "2583": {
      "op": "bytec_0 // 0x151f7c75",
      "stack_out": [
        "app#0",
        "result1#1",
        "result2#1",
        "tmp%7#1",
        "0x151f7c75"
      ]
    },
    "2584": {
      "op": "==",
      "defined_out": [
        "app#0",
        "result1#1",
        "result2#1",
        "tmp%8#1"
      ],
      "stack_out": [
        "app#0",
        "result1#1",
        "result2#1",
        "tmp%8#1"
      ]
    },
    "2585": {
      "error": "application log value is not the result of an ABI return",
      "op": "assert // application log value is not the result of an ABI return",
      "stack_out": [
        "app#0",
        "result1#1",
        "result2#1"
      ]
    },
    "2586": {
      "op": "dig 1",
      "stack_out": [
        "app#0",
        "result1#1",
        "result2#1",
        "result1#1 (copy)"
      ]
    },
    "2588": {
      "op": "b==",
      "defined_out": [
        "app#0",
        "result1#1",
        "tmp%10#1"
      ],
      "stack_out": [
        "app#0",
        "result1#1",
        "tmp%10#1"
      ]
    },
    "2589": {
      "op": "assert",
      "stack_out": [
        "app#0",
        "result1#1"
      ]
    },
    "2590": {
      "op": "itxn_begin"
    },
    "2591": {
      "op": "swap",
      "stack_out": [
        "result1#1",
        "app#0"
      ]
    },
    "2592": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "result1#1"
      ]
    },
    "2594": {
      "op": "bytec 18 // method \"echo_native_biguint(uint512)uint512\"",
      "stack_out": [
        "result1#1",
        "Method(echo_native_biguint(uint512)uint512)"
      ]
    },
    "2596": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "result1#1"
      ]
    },
    "2598": {
      "op": "bytec_1 // 0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002",
      "stack_out": [
        "result1#1",
        "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002"
      ]
    },
    "2599": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "result1#1"
      ]
    },
    "2601": {
      "op": "intc_1 // appl",
      "stack_out": [
        "result1#1",
        "appl"
      ]
    },
    "2602": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "result1#1"
      ]
    },
    "2604": {
      "op": "intc_0 // 0",
      "stack_out": [
        "result1#1",
        "0"
      ]
    },
    "2605": {
      "op": "itxn_field Fee",
      "stack_out": [
        "result1#1"
      ]
    },
    "2607": {
      "op": "itxn_submit"
    },
    "2608": {
      "op": "itxn LastLog",
      "defined_out": [
        "awst_tmp%2#0",
        "result1#1"
      ],
      "stack_out": [
        "result1#1",
        "awst_tmp%2#0"
      ]
    },
    "2610": {
      "op": "dup",
      "defined_out": [
        "awst_tmp%2#0",
        "awst_tmp%2#0 (copy)",
        "result1#1"
      ],
      "stack_out": [
        "result1#1",
        "awst_tmp%2#0",
        "awst_tmp%2#0 (copy)"
      ]
    },
    "2611": {
      "op": "extract 4 0",
      "defined_out": [
        "awst_tmp%2#0",
        "result1#1",
        "result3#1"
      ],
      "stack_out": [
        "result1#1",
        "awst_tmp%2#0",
        "result3#1"
      ]
    },
    "2614": {
      "op": "swap",
      "stack_out": [
        "result1#1",
        "result3#1",
        "awst_tmp%2#0"
      ]
    },
    "2615": {
      "op": "extract 0 4",
      "defined_out": [
        "result1#1",
        "result3#1",
        "tmp%12#6"
      ],
      "stack_out": [
        "result1#1",
        "result3#1",
        "tmp%12#6"
      ]
    },
    "2618": {
      "op": "bytec_0 // 0x151f7c75",
      "stack_out": [
        "result1#1",
        "result3#1",
        "tmp%12#6",
        "0x151f7c75"
      ]
    },
    "2619": {
      "op": "==",
      "defined_out": [
        "result1#1",
        "result3#1",
        "tmp%13#5"
      ],
      "stack_out": [
        "result1#1",
        "result3#1",
        "tmp%13#5"
      ]
    },
    "2620": {
      "error": "application log value is not the result of an ABI return",
      "op": "assert // application log value is not the result of an ABI return",
      "stack_out": [
        "result1#1",
        "result3#1"
      ]
    },
    "2621": {
      "op": "b==",
      "defined_out": [
        "tmp%15#2"
      ],
      "stack_out": [
        "tmp%15#2"
      ]
    },
    "2622": {
      "op": "assert",
      "stack_out": []
    },
    "2623": {
      "op": "intc_2 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "2624": {
      "op": "return",
      "stack_out": []
    },
    "2625": {
      "block": "main_test_native_uint64_route@13",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%56#0"
      ],
      "stack_out": [
        "tmp%56#0"
      ]
    },
    "2627": {
      "op": "!",
      "defined_out": [
        "tmp%57#0"
      ],
      "stack_out": [
        "tmp%57#0"
      ]
    },
    "2628": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "2629": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%58#0"
      ],
      "stack_out": [
        "tmp%58#0"
      ]
    },
    "2631": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "2632": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded(uint64)%11#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint64)%11#0"
      ]
    },
    "2635": {
      "op": "btoi",
      "defined_out": [
        "app#0"
      ],
      "stack_out": [
        "app#0"
      ]
    },
    "2636": {
      "op": "itxn_begin"
    },
    "2637": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "app#0 (copy)"
      ],
      "stack_out": [
        "app#0",
        "app#0 (copy)"
      ]
    },
    "2638": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "app#0"
      ]
    },
    "2640": {
      "op": "bytec 19 // method \"echo_native_uint64(uint64)uint64\"",
      "defined_out": [
        "Method(echo_native_uint64(uint64)uint64)",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "Method(echo_native_uint64(uint64)uint64)"
      ]
    },
    "2642": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0"
      ]
    },
    "2644": {
      "op": "bytec_2 // 0x0000000000000001",
      "defined_out": [
        "0x0000000000000001",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "0x0000000000000001"
      ]
    },
    "2645": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0"
      ]
    },
    "2647": {
      "op": "intc_1 // appl",
      "defined_out": [
        "app#0",
        "appl"
      ],
      "stack_out": [
        "app#0",
        "appl"
      ]
    },
    "2648": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "app#0"
      ]
    },
    "2650": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "0"
      ]
    },
    "2651": {
      "op": "itxn_field Fee",
      "stack_out": [
        "app#0"
      ]
    },
    "2653": {
      "op": "itxn_submit"
    },
    "2654": {
      "op": "itxn LastLog",
      "defined_out": [
        "app#0",
        "awst_tmp%0#0"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0"
      ]
    },
    "2656": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ]
    },
    "2657": {
      "op": "extract 4 0",
      "defined_out": [
        "app#0",
        "awst_tmp%0#0",
        "tmp%0#4"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "tmp%0#4"
      ]
    },
    "2660": {
      "op": "swap",
      "stack_out": [
        "app#0",
        "tmp%0#4",
        "awst_tmp%0#0"
      ]
    },
    "2661": {
      "op": "extract 0 4",
      "defined_out": [
        "app#0",
        "tmp%0#4",
        "tmp%1#2"
      ],
      "stack_out": [
        "app#0",
        "tmp%0#4",
        "tmp%1#2"
      ]
    },
    "2664": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "app#0",
        "tmp%0#4",
        "tmp%1#2"
      ],
      "stack_out": [
        "app#0",
        "tmp%0#4",
        "tmp%1#2",
        "0x151f7c75"
      ]
    },
    "2665": {
      "op": "==",
      "defined_out": [
        "app#0",
        "tmp%0#4",
        "tmp%2#3"
      ],
      "stack_out": [
        "app#0",
        "tmp%0#4",
        "tmp%2#3"
      ]
    },
    "2666": {
      "error": "application log value is not the result of an ABI return",
      "op": "assert // application log value is not the result of an ABI return",
      "stack_out": [
        "app#0",
        "tmp%0#4"
      ]
    },
    "2667": {
      "op": "btoi",
      "defined_out": [
        "app#0",
        "result1#2"
      ],
      "stack_out": [
        "app#0",
        "result1#2"
      ]
    },
    "2668": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "result1#2",
        "result1#2 (copy)"
      ],
      "stack_out": [
        "app#0",
        "result1#2",
        "result1#2 (copy)"
      ]
    },
    "2669": {
      "op": "intc_3 // 2",
      "defined_out": [
        "2",
        "app#0",
        "result1#2",
        "result1#2 (copy)"
      ],
      "stack_out": [
        "app#0",
        "result1#2",
        "result1#2 (copy)",
        "2"
      ]
    },
    "2670": {
      "op": "==",
      "defined_out": [
        "app#0",
        "result1#2",
        "tmp%4#0"
      ],
      "stack_out": [
        "app#0",
        "result1#2",
        "tmp%4#0"
      ]
    },
    "2671": {
      "op": "assert",
      "stack_out": [
        "app#0",
        "result1#2"
      ]
    },
    "2672": {
      "op": "itxn_begin"
    },
    "2673": {
      "op": "intc_2 // 1",
      "defined_out": [
        "1",
        "app#0",
        "result1#2"
      ],
      "stack_out": [
        "app#0",
        "result1#2",
        "1"
      ]
    },
    "2674": {
      "op": "itob",
      "defined_out": [
        "aggregate%val_as_bytes%0#0",
        "app#0",
        "result1#2"
      ],
      "stack_out": [
        "app#0",
        "result1#2",
        "aggregate%val_as_bytes%0#0"
      ]
    },
    "2675": {
      "op": "dig 2",
      "stack_out": [
        "app#0",
        "result1#2",
        "aggregate%val_as_bytes%0#0",
        "app#0 (copy)"
      ]
    },
    "2677": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "app#0",
        "result1#2",
        "aggregate%val_as_bytes%0#0"
      ]
    },
    "2679": {
      "op": "bytec 19 // method \"echo_native_uint64(uint64)uint64\"",
      "stack_out": [
        "app#0",
        "result1#2",
        "aggregate%val_as_bytes%0#0",
        "Method(echo_native_uint64(uint64)uint64)"
      ]
    },
    "2681": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0",
        "result1#2",
        "aggregate%val_as_bytes%0#0"
      ]
    },
    "2683": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0",
        "result1#2"
      ]
    },
    "2685": {
      "op": "intc_1 // appl",
      "stack_out": [
        "app#0",
        "result1#2",
        "appl"
      ]
    },
    "2686": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "app#0",
        "result1#2"
      ]
    },
    "2688": {
      "op": "intc_0 // 0",
      "stack_out": [
        "app#0",
        "result1#2",
        "0"
      ]
    },
    "2689": {
      "op": "itxn_field Fee",
      "stack_out": [
        "app#0",
        "result1#2"
      ]
    },
    "2691": {
      "op": "itxn_submit"
    },
    "2692": {
      "op": "itxn LastLog",
      "defined_out": [
        "app#0",
        "awst_tmp%1#0",
        "result1#2"
      ],
      "stack_out": [
        "app#0",
        "result1#2",
        "awst_tmp%1#0"
      ]
    },
    "2694": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "awst_tmp%1#0",
        "awst_tmp%1#0 (copy)",
        "result1#2"
      ],
      "stack_out": [
        "app#0",
        "result1#2",
        "awst_tmp%1#0",
        "awst_tmp%1#0 (copy)"
      ]
    },
    "2695": {
      "op": "extract 4 0",
      "defined_out": [
        "app#0",
        "awst_tmp%1#0",
        "result1#2",
        "tmp%6#1"
      ],
      "stack_out": [
        "app#0",
        "result1#2",
        "awst_tmp%1#0",
        "tmp%6#1"
      ]
    },
    "2698": {
      "op": "swap",
      "stack_out": [
        "app#0",
        "result1#2",
        "tmp%6#1",
        "awst_tmp%1#0"
      ]
    },
    "2699": {
      "op": "extract 0 4",
      "defined_out": [
        "app#0",
        "result1#2",
        "tmp%6#1",
        "tmp%7#1"
      ],
      "stack_out": [
        "app#0",
        "result1#2",
        "tmp%6#1",
        "tmp%7#1"
      ]
    },
    "2702": {
      "op": "bytec_0 // 0x151f7c75",
      "stack_out": [
        "app#0",
        "result1#2",
        "tmp%6#1",
        "tmp%7#1",
        "0x151f7c75"
      ]
    },
    "2703": {
      "op": "==",
      "defined_out": [
        "app#0",
        "result1#2",
        "tmp%6#1",
        "tmp%8#1"
      ],
      "stack_out": [
        "app#0",
        "result1#2",
        "tmp%6#1",
        "tmp%8#1"
      ]
    },
    "2704": {
      "error": "application log value is not the result of an ABI return",
      "op": "assert // application log value is not the result of an ABI return",
      "stack_out": [
        "app#0",
        "result1#2",
        "tmp%6#1"
      ]
    },
    "2705": {
      "op": "btoi",
      "defined_out": [
        "app#0",
        "result1#2",
        "result2#2"
      ],
      "stack_out": [
        "app#0",
        "result1#2",
        "result2#2"
      ]
    },
    "2706": {
      "op": "dig 1",
      "stack_out": [
        "app#0",
        "result1#2",
        "result2#2",
        "result1#2 (copy)"
      ]
    },
    "2708": {
      "op": "==",
      "defined_out": [
        "app#0",
        "result1#2",
        "tmp%10#1"
      ],
      "stack_out": [
        "app#0",
        "result1#2",
        "tmp%10#1"
      ]
    },
    "2709": {
      "op": "assert",
      "stack_out": [
        "app#0",
        "result1#2"
      ]
    },
    "2710": {
      "op": "itxn_begin"
    },
    "2711": {
      "op": "swap",
      "stack_out": [
        "result1#2",
        "app#0"
      ]
    },
    "2712": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "result1#2"
      ]
    },
    "2714": {
      "op": "bytec 19 // method \"echo_native_uint64(uint64)uint64\"",
      "stack_out": [
        "result1#2",
        "Method(echo_native_uint64(uint64)uint64)"
      ]
    },
    "2716": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "result1#2"
      ]
    },
    "2718": {
      "op": "bytec_2 // 0x0000000000000001",
      "stack_out": [
        "result1#2",
        "0x0000000000000001"
      ]
    },
    "2719": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "result1#2"
      ]
    },
    "2721": {
      "op": "intc_1 // appl",
      "stack_out": [
        "result1#2",
        "appl"
      ]
    },
    "2722": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "result1#2"
      ]
    },
    "2724": {
      "op": "intc_0 // 0",
      "stack_out": [
        "result1#2",
        "0"
      ]
    },
    "2725": {
      "op": "itxn_field Fee",
      "stack_out": [
        "result1#2"
      ]
    },
    "2727": {
      "op": "itxn_submit"
    },
    "2728": {
      "op": "itxn LastLog",
      "defined_out": [
        "awst_tmp%2#0",
        "result1#2"
      ],
      "stack_out": [
        "result1#2",
        "awst_tmp%2#0"
      ]
    },
    "2730": {
      "op": "dup",
      "defined_out": [
        "awst_tmp%2#0",
        "awst_tmp%2#0 (copy)",
        "result1#2"
      ],
      "stack_out": [
        "result1#2",
        "awst_tmp%2#0",
        "awst_tmp%2#0 (copy)"
      ]
    },
    "2731": {
      "op": "extract 4 0",
      "defined_out": [
        "awst_tmp%2#0",
        "result1#2",
        "tmp%11#4"
      ],
      "stack_out": [
        "result1#2",
        "awst_tmp%2#0",
        "tmp%11#4"
      ]
    },
    "2734": {
      "op": "swap",
      "stack_out": [
        "result1#2",
        "tmp%11#4",
        "awst_tmp%2#0"
      ]
    },
    "2735": {
      "op": "extract 0 4",
      "defined_out": [
        "result1#2",
        "tmp%11#4",
        "tmp%12#6"
      ],
      "stack_out": [
        "result1#2",
        "tmp%11#4",
        "tmp%12#6"
      ]
    },
    "2738": {
      "op": "bytec_0 // 0x151f7c75",
      "stack_out": [
        "result1#2",
        "tmp%11#4",
        "tmp%12#6",
        "0x151f7c75"
      ]
    },
    "2739": {
      "op": "==",
      "defined_out": [
        "result1#2",
        "tmp%11#4",
        "tmp%13#5"
      ],
      "stack_out": [
        "result1#2",
        "tmp%11#4",
        "tmp%13#5"
      ]
    },
    "2740": {
      "error": "application log value is not the result of an ABI return",
      "op": "assert // application log value is not the result of an ABI return",
      "stack_out": [
        "result1#2",
        "tmp%11#4"
      ]
    },
    "2741": {
      "op": "btoi",
      "defined_out": [
        "result1#2",
        "result3#2"
      ],
      "stack_out": [
        "result1#2",
        "result3#2"
      ]
    },
    "2742": {
      "op": "==",
      "defined_out": [
        "tmp%15#2"
      ],
      "stack_out": [
        "tmp%15#2"
      ]
    },
    "2743": {
      "op": "assert",
      "stack_out": []
    },
    "2744": {
      "op": "intc_2 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "2745": {
      "op": "return",
      "stack_out": []
    },
    "2746": {
      "block": "main_test_native_bytes_route@12",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%51#0"
      ],
      "stack_out": [
        "tmp%51#0"
      ]
    },
    "2748": {
      "op": "!",
      "defined_out": [
        "tmp%52#0"
      ],
      "stack_out": [
        "tmp%52#0"
      ]
    },
    "2749": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "2750": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%53#0"
      ],
      "stack_out": [
        "tmp%53#0"
      ]
    },
    "2752": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "2753": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded(uint64)%10#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint64)%10#0"
      ]
    },
    "2756": {
      "op": "btoi",
      "defined_out": [
        "app#0"
      ],
      "stack_out": [
        "app#0"
      ]
    },
    "2757": {
      "op": "itxn_begin"
    },
    "2758": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "app#0 (copy)"
      ],
      "stack_out": [
        "app#0",
        "app#0 (copy)"
      ]
    },
    "2759": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "app#0"
      ]
    },
    "2761": {
      "op": "bytec 20 // method \"echo_native_bytes(byte[])byte[]\"",
      "defined_out": [
        "Method(echo_native_bytes(byte[])byte[])",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "Method(echo_native_bytes(byte[])byte[])"
      ]
    },
    "2763": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0"
      ]
    },
    "2765": {
      "op": "bytec 21 // 0x000162",
      "defined_out": [
        "0x000162",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "0x000162"
      ]
    },
    "2767": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0"
      ]
    },
    "2769": {
      "op": "intc_1 // appl",
      "defined_out": [
        "app#0",
        "appl"
      ],
      "stack_out": [
        "app#0",
        "appl"
      ]
    },
    "2770": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "app#0"
      ]
    },
    "2772": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "0"
      ]
    },
    "2773": {
      "op": "itxn_field Fee",
      "stack_out": [
        "app#0"
      ]
    },
    "2775": {
      "op": "itxn_submit"
    },
    "2776": {
      "op": "itxn LastLog",
      "defined_out": [
        "app#0",
        "awst_tmp%0#0"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0"
      ]
    },
    "2778": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ]
    },
    "2779": {
      "op": "extract 0 4",
      "defined_out": [
        "app#0",
        "awst_tmp%0#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "tmp%2#0"
      ]
    },
    "2782": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "app#0",
        "awst_tmp%0#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "tmp%2#0",
        "0x151f7c75"
      ]
    },
    "2783": {
      "op": "==",
      "defined_out": [
        "app#0",
        "awst_tmp%0#0",
        "tmp%3#7"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "tmp%3#7"
      ]
    },
    "2784": {
      "error": "application log value is not the result of an ABI return",
      "op": "assert // application log value is not the result of an ABI return",
      "stack_out": [
        "app#0",
        "awst_tmp%0#0"
      ]
    },
    "2785": {
      "op": "extract 6 0",
      "defined_out": [
        "app#0",
        "result1#0"
      ],
      "stack_out": [
        "app#0",
        "result1#0"
      ]
    },
    "2788": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "result1#0",
        "result1#0 (copy)"
      ],
      "stack_out": [
        "app#0",
        "result1#0",
        "result1#0 (copy)"
      ]
    },
    "2789": {
      "op": "pushbytes 0x6563686f3a2062",
      "defined_out": [
        "0x6563686f3a2062",
        "app#0",
        "result1#0",
        "result1#0 (copy)"
      ],
      "stack_out": [
        "app#0",
        "result1#0",
        "result1#0 (copy)",
        "0x6563686f3a2062"
      ]
    },
    "2798": {
      "op": "==",
      "defined_out": [
        "app#0",
        "result1#0",
        "tmp%5#1"
      ],
      "stack_out": [
        "app#0",
        "result1#0",
        "tmp%5#1"
      ]
    },
    "2799": {
      "op": "assert",
      "stack_out": [
        "app#0",
        "result1#0"
      ]
    },
    "2800": {
      "op": "itxn_begin"
    },
    "2801": {
      "op": "dig 1",
      "stack_out": [
        "app#0",
        "result1#0",
        "app#0 (copy)"
      ]
    },
    "2803": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "app#0",
        "result1#0"
      ]
    },
    "2805": {
      "op": "bytec 20 // method \"echo_native_bytes(byte[])byte[]\"",
      "stack_out": [
        "app#0",
        "result1#0",
        "Method(echo_native_bytes(byte[])byte[])"
      ]
    },
    "2807": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0",
        "result1#0"
      ]
    },
    "2809": {
      "op": "bytec 21 // 0x000162",
      "stack_out": [
        "app#0",
        "result1#0",
        "0x000162"
      ]
    },
    "2811": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0",
        "result1#0"
      ]
    },
    "2813": {
      "op": "intc_1 // appl",
      "stack_out": [
        "app#0",
        "result1#0",
        "appl"
      ]
    },
    "2814": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "app#0",
        "result1#0"
      ]
    },
    "2816": {
      "op": "intc_0 // 0",
      "stack_out": [
        "app#0",
        "result1#0",
        "0"
      ]
    },
    "2817": {
      "op": "itxn_field Fee",
      "stack_out": [
        "app#0",
        "result1#0"
      ]
    },
    "2819": {
      "op": "itxn_submit"
    },
    "2820": {
      "op": "itxn LastLog",
      "defined_out": [
        "app#0",
        "awst_tmp%1#0",
        "result1#0"
      ],
      "stack_out": [
        "app#0",
        "result1#0",
        "awst_tmp%1#0"
      ]
    },
    "2822": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "awst_tmp%1#0",
        "awst_tmp%1#0 (copy)",
        "result1#0"
      ],
      "stack_out": [
        "app#0",
        "result1#0",
        "awst_tmp%1#0",
        "awst_tmp%1#0 (copy)"
      ]
    },
    "2823": {
      "op": "extract 0 4",
      "defined_out": [
        "app#0",
        "awst_tmp%1#0",
        "result1#0",
        "tmp%8#3"
      ],
      "stack_out": [
        "app#0",
        "result1#0",
        "awst_tmp%1#0",
        "tmp%8#3"
      ]
    },
    "2826": {
      "op": "bytec_0 // 0x151f7c75",
      "stack_out": [
        "app#0",
        "result1#0",
        "awst_tmp%1#0",
        "tmp%8#3",
        "0x151f7c75"
      ]
    },
    "2827": {
      "op": "==",
      "defined_out": [
        "app#0",
        "awst_tmp%1#0",
        "result1#0",
        "tmp%9#1"
      ],
      "stack_out": [
        "app#0",
        "result1#0",
        "awst_tmp%1#0",
        "tmp%9#1"
      ]
    },
    "2828": {
      "error": "application log value is not the result of an ABI return",
      "op": "assert // application log value is not the result of an ABI return",
      "stack_out": [
        "app#0",
        "result1#0",
        "awst_tmp%1#0"
      ]
    },
    "2829": {
      "op": "extract 6 0",
      "defined_out": [
        "app#0",
        "result1#0",
        "result2#0"
      ],
      "stack_out": [
        "app#0",
        "result1#0",
        "result2#0"
      ]
    },
    "2832": {
      "op": "dig 1",
      "stack_out": [
        "app#0",
        "result1#0",
        "result2#0",
        "result1#0 (copy)"
      ]
    },
    "2834": {
      "op": "==",
      "defined_out": [
        "app#0",
        "result1#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "app#0",
        "result1#0",
        "tmp%11#0"
      ]
    },
    "2835": {
      "op": "assert",
      "stack_out": [
        "app#0",
        "result1#0"
      ]
    },
    "2836": {
      "op": "itxn_begin"
    },
    "2837": {
      "op": "swap",
      "stack_out": [
        "result1#0",
        "app#0"
      ]
    },
    "2838": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "result1#0"
      ]
    },
    "2840": {
      "op": "bytec 20 // method \"echo_native_bytes(byte[])byte[]\"",
      "stack_out": [
        "result1#0",
        "Method(echo_native_bytes(byte[])byte[])"
      ]
    },
    "2842": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "result1#0"
      ]
    },
    "2844": {
      "op": "bytec 21 // 0x000162",
      "stack_out": [
        "result1#0",
        "0x000162"
      ]
    },
    "2846": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "result1#0"
      ]
    },
    "2848": {
      "op": "intc_1 // appl",
      "stack_out": [
        "result1#0",
        "appl"
      ]
    },
    "2849": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "result1#0"
      ]
    },
    "2851": {
      "op": "intc_0 // 0",
      "stack_out": [
        "result1#0",
        "0"
      ]
    },
    "2852": {
      "op": "itxn_field Fee",
      "stack_out": [
        "result1#0"
      ]
    },
    "2854": {
      "op": "itxn_submit"
    },
    "2855": {
      "op": "itxn LastLog",
      "defined_out": [
        "awst_tmp%2#0",
        "result1#0"
      ],
      "stack_out": [
        "result1#0",
        "awst_tmp%2#0"
      ]
    },
    "2857": {
      "op": "dup",
      "defined_out": [
        "awst_tmp%2#0",
        "awst_tmp%2#0 (copy)",
        "result1#0"
      ],
      "stack_out": [
        "result1#0",
        "awst_tmp%2#0",
        "awst_tmp%2#0 (copy)"
      ]
    },
    "2858": {
      "op": "extract 0 4",
      "defined_out": [
        "awst_tmp%2#0",
        "result1#0",
        "tmp%14#2"
      ],
      "stack_out": [
        "result1#0",
        "awst_tmp%2#0",
        "tmp%14#2"
      ]
    },
    "2861": {
      "op": "bytec_0 // 0x151f7c75",
      "stack_out": [
        "result1#0",
        "awst_tmp%2#0",
        "tmp%14#2",
        "0x151f7c75"
      ]
    },
    "2862": {
      "op": "==",
      "defined_out": [
        "awst_tmp%2#0",
        "result1#0",
        "tmp%15#2"
      ],
      "stack_out": [
        "result1#0",
        "awst_tmp%2#0",
        "tmp%15#2"
      ]
    },
    "2863": {
      "error": "application log value is not the result of an ABI return",
      "op": "assert // application log value is not the result of an ABI return",
      "stack_out": [
        "result1#0",
        "awst_tmp%2#0"
      ]
    },
    "2864": {
      "op": "extract 6 0",
      "defined_out": [
        "result1#0",
        "result3#0"
      ],
      "stack_out": [
        "result1#0",
        "result3#0"
      ]
    },
    "2867": {
      "op": "==",
      "defined_out": [
        "tmp%17#2"
      ],
      "stack_out": [
        "tmp%17#2"
      ]
    },
    "2868": {
      "op": "assert",
      "stack_out": []
    },
    "2869": {
      "op": "intc_2 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "2870": {
      "op": "return",
      "stack_out": []
    },
    "2871": {
      "block": "main_test_native_string_route@11",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%46#0"
      ],
      "stack_out": [
        "tmp%46#0"
      ]
    },
    "2873": {
      "op": "!",
      "defined_out": [
        "tmp%47#0"
      ],
      "stack_out": [
        "tmp%47#0"
      ]
    },
    "2874": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "2875": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%48#0"
      ],
      "stack_out": [
        "tmp%48#0"
      ]
    },
    "2877": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "2878": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded(uint64)%9#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint64)%9#0"
      ]
    },
    "2881": {
      "op": "btoi",
      "defined_out": [
        "app#0"
      ],
      "stack_out": [
        "app#0"
      ]
    },
    "2882": {
      "op": "itxn_begin"
    },
    "2883": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "app#0 (copy)"
      ],
      "stack_out": [
        "app#0",
        "app#0 (copy)"
      ]
    },
    "2884": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "app#0"
      ]
    },
    "2886": {
      "op": "bytec 22 // method \"echo_native_string(string)string\"",
      "defined_out": [
        "Method(echo_native_string(string)string)",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "Method(echo_native_string(string)string)"
      ]
    },
    "2888": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0"
      ]
    },
    "2890": {
      "op": "bytec 23 // 0x000173",
      "defined_out": [
        "0x000173",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "0x000173"
      ]
    },
    "2892": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0"
      ]
    },
    "2894": {
      "op": "intc_1 // appl",
      "defined_out": [
        "app#0",
        "appl"
      ],
      "stack_out": [
        "app#0",
        "appl"
      ]
    },
    "2895": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "app#0"
      ]
    },
    "2897": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "0"
      ]
    },
    "2898": {
      "op": "itxn_field Fee",
      "stack_out": [
        "app#0"
      ]
    },
    "2900": {
      "op": "itxn_submit"
    },
    "2901": {
      "op": "itxn LastLog",
      "defined_out": [
        "app#0",
        "awst_tmp%0#0"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0"
      ]
    },
    "2903": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ]
    },
    "2904": {
      "op": "extract 0 4",
      "defined_out": [
        "app#0",
        "awst_tmp%0#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "tmp%2#0"
      ]
    },
    "2907": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "app#0",
        "awst_tmp%0#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "tmp%2#0",
        "0x151f7c75"
      ]
    },
    "2908": {
      "op": "==",
      "defined_out": [
        "app#0",
        "awst_tmp%0#0",
        "tmp%3#7"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "tmp%3#7"
      ]
    },
    "2909": {
      "error": "application log value is not the result of an ABI return",
      "op": "assert // application log value is not the result of an ABI return",
      "stack_out": [
        "app#0",
        "awst_tmp%0#0"
      ]
    },
    "2910": {
      "op": "extract 6 0",
      "defined_out": [
        "app#0",
        "result1#4"
      ],
      "stack_out": [
        "app#0",
        "result1#4"
      ]
    },
    "2913": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "result1#4",
        "result1#4 (copy)"
      ],
      "stack_out": [
        "app#0",
        "result1#4",
        "result1#4 (copy)"
      ]
    },
    "2914": {
      "op": "pushbytes \"echo: s\"",
      "defined_out": [
        "\"echo: s\"",
        "app#0",
        "result1#4",
        "result1#4 (copy)"
      ],
      "stack_out": [
        "app#0",
        "result1#4",
        "result1#4 (copy)",
        "\"echo: s\""
      ]
    },
    "2923": {
      "op": "==",
      "defined_out": [
        "app#0",
        "result1#4",
        "tmp%5#1"
      ],
      "stack_out": [
        "app#0",
        "result1#4",
        "tmp%5#1"
      ]
    },
    "2924": {
      "op": "assert",
      "stack_out": [
        "app#0",
        "result1#4"
      ]
    },
    "2925": {
      "op": "itxn_begin"
    },
    "2926": {
      "op": "dig 1",
      "stack_out": [
        "app#0",
        "result1#4",
        "app#0 (copy)"
      ]
    },
    "2928": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "app#0",
        "result1#4"
      ]
    },
    "2930": {
      "op": "bytec 22 // method \"echo_native_string(string)string\"",
      "stack_out": [
        "app#0",
        "result1#4",
        "Method(echo_native_string(string)string)"
      ]
    },
    "2932": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0",
        "result1#4"
      ]
    },
    "2934": {
      "op": "bytec 23 // 0x000173",
      "stack_out": [
        "app#0",
        "result1#4",
        "0x000173"
      ]
    },
    "2936": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0",
        "result1#4"
      ]
    },
    "2938": {
      "op": "intc_1 // appl",
      "stack_out": [
        "app#0",
        "result1#4",
        "appl"
      ]
    },
    "2939": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "app#0",
        "result1#4"
      ]
    },
    "2941": {
      "op": "intc_0 // 0",
      "stack_out": [
        "app#0",
        "result1#4",
        "0"
      ]
    },
    "2942": {
      "op": "itxn_field Fee",
      "stack_out": [
        "app#0",
        "result1#4"
      ]
    },
    "2944": {
      "op": "itxn_submit"
    },
    "2945": {
      "op": "itxn LastLog",
      "defined_out": [
        "app#0",
        "awst_tmp%1#0",
        "result1#4"
      ],
      "stack_out": [
        "app#0",
        "result1#4",
        "awst_tmp%1#0"
      ]
    },
    "2947": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "awst_tmp%1#0",
        "awst_tmp%1#0 (copy)",
        "result1#4"
      ],
      "stack_out": [
        "app#0",
        "result1#4",
        "awst_tmp%1#0",
        "awst_tmp%1#0 (copy)"
      ]
    },
    "2948": {
      "op": "extract 0 4",
      "defined_out": [
        "app#0",
        "awst_tmp%1#0",
        "result1#4",
        "tmp%8#3"
      ],
      "stack_out": [
        "app#0",
        "result1#4",
        "awst_tmp%1#0",
        "tmp%8#3"
      ]
    },
    "2951": {
      "op": "bytec_0 // 0x151f7c75",
      "stack_out": [
        "app#0",
        "result1#4",
        "awst_tmp%1#0",
        "tmp%8#3",
        "0x151f7c75"
      ]
    },
    "2952": {
      "op": "==",
      "defined_out": [
        "app#0",
        "awst_tmp%1#0",
        "result1#4",
        "tmp%9#1"
      ],
      "stack_out": [
        "app#0",
        "result1#4",
        "awst_tmp%1#0",
        "tmp%9#1"
      ]
    },
    "2953": {
      "error": "application log value is not the result of an ABI return",
      "op": "assert // application log value is not the result of an ABI return",
      "stack_out": [
        "app#0",
        "result1#4",
        "awst_tmp%1#0"
      ]
    },
    "2954": {
      "op": "extract 6 0",
      "defined_out": [
        "app#0",
        "result1#4",
        "result2#4"
      ],
      "stack_out": [
        "app#0",
        "result1#4",
        "result2#4"
      ]
    },
    "2957": {
      "op": "dig 1",
      "stack_out": [
        "app#0",
        "result1#4",
        "result2#4",
        "result1#4 (copy)"
      ]
    },
    "2959": {
      "op": "==",
      "defined_out": [
        "app#0",
        "result1#4",
        "tmp%11#0"
      ],
      "stack_out": [
        "app#0",
        "result1#4",
        "tmp%11#0"
      ]
    },
    "2960": {
      "op": "assert",
      "stack_out": [
        "app#0",
        "result1#4"
      ]
    },
    "2961": {
      "op": "itxn_begin"
    },
    "2962": {
      "op": "swap",
      "stack_out": [
        "result1#4",
        "app#0"
      ]
    },
    "2963": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "result1#4"
      ]
    },
    "2965": {
      "op": "bytec 22 // method \"echo_native_string(string)string\"",
      "stack_out": [
        "result1#4",
        "Method(echo_native_string(string)string)"
      ]
    },
    "2967": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "result1#4"
      ]
    },
    "2969": {
      "op": "bytec 23 // 0x000173",
      "stack_out": [
        "result1#4",
        "0x000173"
      ]
    },
    "2971": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "result1#4"
      ]
    },
    "2973": {
      "op": "intc_1 // appl",
      "stack_out": [
        "result1#4",
        "appl"
      ]
    },
    "2974": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "result1#4"
      ]
    },
    "2976": {
      "op": "intc_0 // 0",
      "stack_out": [
        "result1#4",
        "0"
      ]
    },
    "2977": {
      "op": "itxn_field Fee",
      "stack_out": [
        "result1#4"
      ]
    },
    "2979": {
      "op": "itxn_submit"
    },
    "2980": {
      "op": "itxn LastLog",
      "defined_out": [
        "awst_tmp%2#0",
        "result1#4"
      ],
      "stack_out": [
        "result1#4",
        "awst_tmp%2#0"
      ]
    },
    "2982": {
      "op": "dup",
      "defined_out": [
        "awst_tmp%2#0",
        "awst_tmp%2#0 (copy)",
        "result1#4"
      ],
      "stack_out": [
        "result1#4",
        "awst_tmp%2#0",
        "awst_tmp%2#0 (copy)"
      ]
    },
    "2983": {
      "op": "extract 0 4",
      "defined_out": [
        "awst_tmp%2#0",
        "result1#4",
        "tmp%14#2"
      ],
      "stack_out": [
        "result1#4",
        "awst_tmp%2#0",
        "tmp%14#2"
      ]
    },
    "2986": {
      "op": "bytec_0 // 0x151f7c75",
      "stack_out": [
        "result1#4",
        "awst_tmp%2#0",
        "tmp%14#2",
        "0x151f7c75"
      ]
    },
    "2987": {
      "op": "==",
      "defined_out": [
        "awst_tmp%2#0",
        "result1#4",
        "tmp%15#2"
      ],
      "stack_out": [
        "result1#4",
        "awst_tmp%2#0",
        "tmp%15#2"
      ]
    },
    "2988": {
      "error": "application log value is not the result of an ABI return",
      "op": "assert // application log value is not the result of an ABI return",
      "stack_out": [
        "result1#4",
        "awst_tmp%2#0"
      ]
    },
    "2989": {
      "op": "extract 6 0",
      "defined_out": [
        "result1#4",
        "result3#4"
      ],
      "stack_out": [
        "result1#4",
        "result3#4"
      ]
    },
    "2992": {
      "op": "==",
      "defined_out": [
        "tmp%17#2"
      ],
      "stack_out": [
        "tmp%17#2"
      ]
    },
    "2993": {
      "op": "assert",
      "stack_out": []
    },
    "2994": {
      "op": "intc_2 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "2995": {
      "op": "return",
      "stack_out": []
    },
    "2996": {
      "block": "main_test_account_to_address_route@10",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%41#0"
      ],
      "stack_out": [
        "tmp%41#0"
      ]
    },
    "2998": {
      "op": "!",
      "defined_out": [
        "tmp%42#0"
      ],
      "stack_out": [
        "tmp%42#0"
      ]
    },
    "2999": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "3000": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%43#0"
      ],
      "stack_out": [
        "tmp%43#0"
      ]
    },
    "3002": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "3003": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded(uint64)%8#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint64)%8#0"
      ]
    },
    "3006": {
      "op": "btoi",
      "defined_out": [
        "app#0"
      ],
      "stack_out": [
        "app#0"
      ]
    },
    "3007": {
      "op": "itxn_begin"
    },
    "3008": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "app#0",
        "tmp%0#12"
      ],
      "stack_out": [
        "app#0",
        "tmp%0#12"
      ]
    },
    "3010": {
      "op": "swap",
      "stack_out": [
        "tmp%0#12",
        "app#0"
      ]
    },
    "3011": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "tmp%0#12"
      ]
    },
    "3013": {
      "op": "pushbytes 0x0437b17e // method \"log(address)void\"",
      "defined_out": [
        "Method(log(address)void)",
        "tmp%0#12"
      ],
      "stack_out": [
        "tmp%0#12",
        "Method(log(address)void)"
      ]
    },
    "3019": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "tmp%0#12"
      ]
    },
    "3021": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "3023": {
      "op": "intc_1 // appl",
      "defined_out": [
        "appl"
      ],
      "stack_out": [
        "appl"
      ]
    },
    "3024": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "3026": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "3027": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "3029": {
      "op": "itxn_submit"
    },
    "3030": {
      "op": "itxn LastLog",
      "defined_out": [
        "txn.LastLog#0"
      ],
      "stack_out": [
        "txn.LastLog#0"
      ]
    },
    "3032": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "tmp%2#10",
        "txn.LastLog#0"
      ],
      "stack_out": [
        "txn.LastLog#0",
        "tmp%2#10"
      ]
    },
    "3034": {
      "op": "==",
      "defined_out": [
        "tmp%3#7"
      ],
      "stack_out": [
        "tmp%3#7"
      ]
    },
    "3035": {
      "op": "assert",
      "stack_out": []
    },
    "3036": {
      "op": "intc_2 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "3037": {
      "op": "return",
      "stack_out": []
    },
    "3038": {
      "block": "main_test_ref_types_route@9",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%35#0"
      ],
      "stack_out": [
        "tmp%35#0"
      ]
    },
    "3040": {
      "op": "!",
      "defined_out": [
        "tmp%36#0"
      ],
      "stack_out": [
        "tmp%36#0"
      ]
    },
    "3041": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "3042": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%37#0"
      ],
      "stack_out": [
        "tmp%37#0"
      ]
    },
    "3044": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "3045": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded(uint64)%6#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint64)%6#0"
      ]
    },
    "3048": {
      "op": "dup",
      "defined_out": [
        "reinterpret_Encoded(uint64)%6#0",
        "reinterpret_Encoded(uint64)%6#0 (copy)"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint64)%6#0",
        "reinterpret_Encoded(uint64)%6#0 (copy)"
      ]
    },
    "3049": {
      "op": "btoi",
      "defined_out": [
        "app#0",
        "reinterpret_Encoded(uint64)%6#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint64)%6#0",
        "app#0"
      ]
    },
    "3050": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "app#0",
        "reinterpret_Encoded(uint64)%6#0",
        "reinterpret_Encoded(uint64)%7#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint64)%6#0",
        "app#0",
        "reinterpret_Encoded(uint64)%7#0"
      ]
    },
    "3053": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "reinterpret_Encoded(uint64)%6#0",
        "reinterpret_Encoded(uint64)%7#0",
        "reinterpret_Encoded(uint64)%7#0 (copy)"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint64)%6#0",
        "app#0",
        "reinterpret_Encoded(uint64)%7#0",
        "reinterpret_Encoded(uint64)%7#0 (copy)"
      ]
    },
    "3054": {
      "op": "btoi",
      "defined_out": [
        "app#0",
        "asset#0",
        "reinterpret_Encoded(uint64)%6#0",
        "reinterpret_Encoded(uint64)%7#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint64)%6#0",
        "app#0",
        "reinterpret_Encoded(uint64)%7#0",
        "asset#0"
      ]
    },
    "3055": {
      "op": "itxn_begin"
    },
    "3056": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "app#0",
        "asset#0",
        "reinterpret_Encoded(uint64)%6#0",
        "reinterpret_Encoded(uint64)%7#0",
        "tmp%1#11"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint64)%6#0",
        "app#0",
        "reinterpret_Encoded(uint64)%7#0",
        "asset#0",
        "tmp%1#11"
      ]
    },
    "3058": {
      "op": "dig 3",
      "defined_out": [
        "app#0",
        "app#0 (copy)",
        "asset#0",
        "reinterpret_Encoded(uint64)%6#0",
        "reinterpret_Encoded(uint64)%7#0",
        "tmp%1#11"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint64)%6#0",
        "app#0",
        "reinterpret_Encoded(uint64)%7#0",
        "asset#0",
        "tmp%1#11",
        "app#0 (copy)"
      ]
    },
    "3060": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "reinterpret_Encoded(uint64)%6#0",
        "app#0",
        "reinterpret_Encoded(uint64)%7#0",
        "asset#0",
        "tmp%1#11"
      ]
    },
    "3062": {
      "op": "pushbytes 0x46b50faf // method \"log(uint64,address,uint64)void\"",
      "defined_out": [
        "Method(log(uint64,address,uint64)void)",
        "app#0",
        "asset#0",
        "reinterpret_Encoded(uint64)%6#0",
        "reinterpret_Encoded(uint64)%7#0",
        "tmp%1#11"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint64)%6#0",
        "app#0",
        "reinterpret_Encoded(uint64)%7#0",
        "asset#0",
        "tmp%1#11",
        "Method(log(uint64,address,uint64)void)"
      ]
    },
    "3068": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "reinterpret_Encoded(uint64)%6#0",
        "app#0",
        "reinterpret_Encoded(uint64)%7#0",
        "asset#0",
        "tmp%1#11"
      ]
    },
    "3070": {
      "op": "uncover 2",
      "stack_out": [
        "reinterpret_Encoded(uint64)%6#0",
        "app#0",
        "asset#0",
        "tmp%1#11",
        "reinterpret_Encoded(uint64)%7#0"
      ]
    },
    "3072": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "reinterpret_Encoded(uint64)%6#0",
        "app#0",
        "asset#0",
        "tmp%1#11"
      ]
    },
    "3074": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "reinterpret_Encoded(uint64)%6#0",
        "app#0",
        "asset#0"
      ]
    },
    "3076": {
      "op": "uncover 2",
      "stack_out": [
        "app#0",
        "asset#0",
        "reinterpret_Encoded(uint64)%6#0"
      ]
    },
    "3078": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0",
        "asset#0"
      ]
    },
    "3080": {
      "op": "intc_1 // appl",
      "defined_out": [
        "app#0",
        "appl",
        "asset#0"
      ],
      "stack_out": [
        "app#0",
        "asset#0",
        "appl"
      ]
    },
    "3081": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "app#0",
        "asset#0"
      ]
    },
    "3083": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "app#0",
        "asset#0"
      ],
      "stack_out": [
        "app#0",
        "asset#0",
        "0"
      ]
    },
    "3084": {
      "op": "itxn_field Fee",
      "stack_out": [
        "app#0",
        "asset#0"
      ]
    },
    "3086": {
      "op": "itxn_submit"
    },
    "3087": {
      "op": "itxn LastLog",
      "defined_out": [
        "app#0",
        "asset#0",
        "txn.LastLog#0"
      ],
      "stack_out": [
        "app#0",
        "asset#0",
        "txn.LastLog#0"
      ]
    },
    "3089": {
      "op": "swap",
      "stack_out": [
        "app#0",
        "txn.LastLog#0",
        "asset#0"
      ]
    },
    "3090": {
      "op": "asset_params_get AssetName",
      "defined_out": [
        "app#0",
        "check%0#0",
        "txn.LastLog#0",
        "value%0#0"
      ],
      "stack_out": [
        "app#0",
        "txn.LastLog#0",
        "value%0#0",
        "check%0#0"
      ]
    },
    "3092": {
      "error": "asset exists",
      "op": "assert // asset exists",
      "stack_out": [
        "app#0",
        "txn.LastLog#0",
        "value%0#0"
      ]
    },
    "3093": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "app#0",
        "tmp%4#10",
        "txn.LastLog#0",
        "value%0#0"
      ],
      "stack_out": [
        "app#0",
        "txn.LastLog#0",
        "value%0#0",
        "tmp%4#10"
      ]
    },
    "3095": {
      "op": "concat",
      "defined_out": [
        "app#0",
        "tmp%5#2",
        "txn.LastLog#0"
      ],
      "stack_out": [
        "app#0",
        "txn.LastLog#0",
        "tmp%5#2"
      ]
    },
    "3096": {
      "op": "uncover 2",
      "stack_out": [
        "txn.LastLog#0",
        "tmp%5#2",
        "app#0"
      ]
    },
    "3098": {
      "op": "app_params_get AppAddress",
      "defined_out": [
        "check%1#0",
        "tmp%5#2",
        "txn.LastLog#0",
        "value%1#0"
      ],
      "stack_out": [
        "txn.LastLog#0",
        "tmp%5#2",
        "value%1#0",
        "check%1#0"
      ]
    },
    "3100": {
      "error": "application exists",
      "op": "assert // application exists",
      "stack_out": [
        "txn.LastLog#0",
        "tmp%5#2",
        "value%1#0"
      ]
    },
    "3101": {
      "op": "concat",
      "defined_out": [
        "tmp%6#1",
        "txn.LastLog#0"
      ],
      "stack_out": [
        "txn.LastLog#0",
        "tmp%6#1"
      ]
    },
    "3102": {
      "op": "==",
      "defined_out": [
        "tmp%7#2"
      ],
      "stack_out": [
        "tmp%7#2"
      ]
    },
    "3103": {
      "op": "assert",
      "stack_out": []
    },
    "3104": {
      "op": "intc_2 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "3105": {
      "op": "return",
      "stack_out": []
    },
    "3106": {
      "block": "main_test_void_route@8",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%30#0"
      ],
      "stack_out": [
        "tmp%30#0"
      ]
    },
    "3108": {
      "op": "!",
      "defined_out": [
        "tmp%31#0"
      ],
      "stack_out": [
        "tmp%31#0"
      ]
    },
    "3109": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "3110": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%32#0"
      ],
      "stack_out": [
        "tmp%32#0"
      ]
    },
    "3112": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "3113": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded(uint64)%5#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint64)%5#0"
      ]
    },
    "3116": {
      "op": "btoi",
      "defined_out": [
        "app#0"
      ],
      "stack_out": [
        "app#0"
      ]
    },
    "3117": {
      "op": "itxn_begin"
    },
    "3118": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "app#0 (copy)"
      ],
      "stack_out": [
        "app#0",
        "app#0 (copy)"
      ]
    },
    "3119": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "app#0"
      ]
    },
    "3121": {
      "op": "bytec 9 // method \"log(string)void\"",
      "defined_out": [
        "Method(log(string)void)",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "Method(log(string)void)"
      ]
    },
    "3123": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0"
      ]
    },
    "3125": {
      "op": "pushbytes 0x0006576f726c6431",
      "defined_out": [
        "0x0006576f726c6431",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "0x0006576f726c6431"
      ]
    },
    "3135": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0"
      ]
    },
    "3137": {
      "op": "intc_1 // appl",
      "defined_out": [
        "app#0",
        "appl"
      ],
      "stack_out": [
        "app#0",
        "appl"
      ]
    },
    "3138": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "app#0"
      ]
    },
    "3140": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "0"
      ]
    },
    "3141": {
      "op": "itxn_field Fee",
      "stack_out": [
        "app#0"
      ]
    },
    "3143": {
      "op": "itxn_submit"
    },
    "3144": {
      "op": "itxn LastLog",
      "defined_out": [
        "app#0",
        "txn.LastLog#0"
      ],
      "stack_out": [
        "app#0",
        "txn.LastLog#0"
      ]
    },
    "3146": {
      "op": "pushbytes 0x576f726c6431",
      "defined_out": [
        "0x576f726c6431",
        "app#0",
        "txn.LastLog#0"
      ],
      "stack_out": [
        "app#0",
        "txn.LastLog#0",
        "0x576f726c6431"
      ]
    },
    "3154": {
      "op": "==",
      "defined_out": [
        "app#0",
        "tmp%1#12"
      ],
      "stack_out": [
        "app#0",
        "tmp%1#12"
      ]
    },
    "3155": {
      "op": "assert",
      "stack_out": [
        "app#0"
      ]
    },
    "3156": {
      "op": "itxn_begin"
    },
    "3157": {
      "op": "dup",
      "stack_out": [
        "app#0",
        "app#0 (copy)"
      ]
    },
    "3158": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "app#0"
      ]
    },
    "3160": {
      "op": "bytec 9 // method \"log(string)void\"",
      "stack_out": [
        "app#0",
        "Method(log(string)void)"
      ]
    },
    "3162": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0"
      ]
    },
    "3164": {
      "op": "pushbytes 0x0006576f726c6432",
      "defined_out": [
        "0x0006576f726c6432",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "0x0006576f726c6432"
      ]
    },
    "3174": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0"
      ]
    },
    "3176": {
      "op": "intc_1 // appl",
      "stack_out": [
        "app#0",
        "appl"
      ]
    },
    "3177": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "app#0"
      ]
    },
    "3179": {
      "op": "intc_0 // 0",
      "stack_out": [
        "app#0",
        "0"
      ]
    },
    "3180": {
      "op": "itxn_field Fee",
      "stack_out": [
        "app#0"
      ]
    },
    "3182": {
      "op": "itxn_submit"
    },
    "3183": {
      "op": "itxn LastLog",
      "stack_out": [
        "app#0",
        "txn.LastLog#0"
      ]
    },
    "3185": {
      "op": "pushbytes 0x576f726c6432",
      "defined_out": [
        "0x576f726c6432",
        "app#0",
        "txn.LastLog#0"
      ],
      "stack_out": [
        "app#0",
        "txn.LastLog#0",
        "0x576f726c6432"
      ]
    },
    "3193": {
      "op": "==",
      "defined_out": [
        "app#0",
        "tmp%3#7"
      ],
      "stack_out": [
        "app#0",
        "tmp%3#7"
      ]
    },
    "3194": {
      "op": "assert",
      "stack_out": [
        "app#0"
      ]
    },
    "3195": {
      "op": "itxn_begin"
    },
    "3196": {
      "op": "dup",
      "stack_out": [
        "app#0",
        "app#0 (copy)"
      ]
    },
    "3197": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "app#0"
      ]
    },
    "3199": {
      "op": "bytec 9 // method \"log(string)void\"",
      "stack_out": [
        "app#0",
        "Method(log(string)void)"
      ]
    },
    "3201": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0"
      ]
    },
    "3203": {
      "op": "pushbytes 0x0006576f726c6433",
      "defined_out": [
        "0x0006576f726c6433",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "0x0006576f726c6433"
      ]
    },
    "3213": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0"
      ]
    },
    "3215": {
      "op": "intc_1 // appl",
      "stack_out": [
        "app#0",
        "appl"
      ]
    },
    "3216": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "app#0"
      ]
    },
    "3218": {
      "op": "intc_0 // 0",
      "stack_out": [
        "app#0",
        "0"
      ]
    },
    "3219": {
      "op": "itxn_field Fee",
      "stack_out": [
        "app#0"
      ]
    },
    "3221": {
      "op": "itxn_submit"
    },
    "3222": {
      "op": "itxn LastLog",
      "stack_out": [
        "app#0",
        "txn.LastLog#0"
      ]
    },
    "3224": {
      "op": "pushbytes 0x576f726c6433",
      "defined_out": [
        "0x576f726c6433",
        "app#0",
        "txn.LastLog#0"
      ],
      "stack_out": [
        "app#0",
        "txn.LastLog#0",
        "0x576f726c6433"
      ]
    },
    "3232": {
      "op": "==",
      "defined_out": [
        "app#0",
        "tmp%5#1"
      ],
      "stack_out": [
        "app#0",
        "tmp%5#1"
      ]
    },
    "3233": {
      "op": "assert",
      "stack_out": [
        "app#0"
      ]
    },
    "3234": {
      "op": "itxn_begin"
    },
    "3235": {
      "op": "itxn_field ApplicationID",
      "stack_out": []
    },
    "3237": {
      "op": "bytec 9 // method \"log(string)void\"",
      "stack_out": [
        "Method(log(string)void)"
      ]
    },
    "3239": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "3241": {
      "op": "pushbytes 0x0006576f726c6434",
      "defined_out": [
        "0x0006576f726c6434"
      ],
      "stack_out": [
        "0x0006576f726c6434"
      ]
    },
    "3251": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "3253": {
      "op": "intc_1 // appl",
      "stack_out": [
        "appl"
      ]
    },
    "3254": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "3256": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0"
      ]
    },
    "3257": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "3259": {
      "op": "itxn_submit"
    },
    "3260": {
      "op": "itxn LastLog",
      "stack_out": [
        "txn.LastLog#0"
      ]
    },
    "3262": {
      "op": "pushbytes 0x576f726c6434",
      "defined_out": [
        "0x576f726c6434",
        "txn.LastLog#0"
      ],
      "stack_out": [
        "txn.LastLog#0",
        "0x576f726c6434"
      ]
    },
    "3270": {
      "op": "==",
      "defined_out": [
        "tmp%7#2"
      ],
      "stack_out": [
        "tmp%7#2"
      ]
    },
    "3271": {
      "op": "assert",
      "stack_out": []
    },
    "3272": {
      "op": "intc_2 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "3273": {
      "op": "return",
      "stack_out": []
    },
    "3274": {
      "block": "main_test_15plus_args_route@7",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%25#0"
      ],
      "stack_out": [
        "tmp%25#0"
      ]
    },
    "3276": {
      "op": "!",
      "defined_out": [
        "tmp%26#0"
      ],
      "stack_out": [
        "tmp%26#0"
      ]
    },
    "3277": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "3278": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%27#0"
      ],
      "stack_out": [
        "tmp%27#0"
      ]
    },
    "3280": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "3281": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded(uint64)%4#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint64)%4#0"
      ]
    },
    "3284": {
      "op": "btoi",
      "defined_out": [
        "app#0"
      ],
      "stack_out": [
        "app#0"
      ]
    },
    "3285": {
      "op": "itxn_begin"
    },
    "3286": {
      "op": "itxn_field ApplicationID",
      "stack_out": []
    },
    "3288": {
      "op": "pushbytes 0xba0b4381 // method \"return_args_after_14th(uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint8,uint8,uint8,uint8,(uint8,uint8,uint8,uint8),uint8)byte[]\"",
      "defined_out": [
        "Method(return_args_after_14th(uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint8,uint8,uint8,uint8,(uint8,uint8,uint8,uint8),uint8)byte[])"
      ],
      "stack_out": [
        "Method(return_args_after_14th(uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint8,uint8,uint8,uint8,(uint8,uint8,uint8,uint8),uint8)byte[])"
      ]
    },
    "3294": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "3296": {
      "op": "bytec_2 // 0x0000000000000001",
      "defined_out": [
        "0x0000000000000001"
      ],
      "stack_out": [
        "0x0000000000000001"
      ]
    },
    "3297": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "3299": {
      "op": "bytec 30 // 0x0000000000000002",
      "defined_out": [
        "0x0000000000000002"
      ],
      "stack_out": [
        "0x0000000000000002"
      ]
    },
    "3301": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "3303": {
      "op": "bytec 16 // 0x0000000000000003",
      "defined_out": [
        "0x0000000000000003"
      ],
      "stack_out": [
        "0x0000000000000003"
      ]
    },
    "3305": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "3307": {
      "op": "pushbytes 0x0000000000000004",
      "defined_out": [
        "0x0000000000000004"
      ],
      "stack_out": [
        "0x0000000000000004"
      ]
    },
    "3317": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "3319": {
      "op": "pushbytes 0x0000000000000005",
      "defined_out": [
        "0x0000000000000005"
      ],
      "stack_out": [
        "0x0000000000000005"
      ]
    },
    "3329": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "3331": {
      "op": "pushbytes 0x0000000000000006",
      "defined_out": [
        "0x0000000000000006"
      ],
      "stack_out": [
        "0x0000000000000006"
      ]
    },
    "3341": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "3343": {
      "op": "pushbytes 0x0000000000000007",
      "defined_out": [
        "0x0000000000000007"
      ],
      "stack_out": [
        "0x0000000000000007"
      ]
    },
    "3353": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "3355": {
      "op": "pushbytes 0x0000000000000008",
      "defined_out": [
        "0x0000000000000008"
      ],
      "stack_out": [
        "0x0000000000000008"
      ]
    },
    "3365": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "3367": {
      "op": "pushbytes 0x0000000000000009",
      "defined_out": [
        "0x0000000000000009"
      ],
      "stack_out": [
        "0x0000000000000009"
      ]
    },
    "3377": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "3379": {
      "op": "pushbytes 0x000000000000000a",
      "defined_out": [
        "0x000000000000000a"
      ],
      "stack_out": [
        "0x000000000000000a"
      ]
    },
    "3389": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "3391": {
      "op": "pushbytes 0x000000000000000b",
      "defined_out": [
        "0x000000000000000b"
      ],
      "stack_out": [
        "0x000000000000000b"
      ]
    },
    "3401": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "3403": {
      "op": "pushbytes 0x000000000000000c",
      "defined_out": [
        "0x000000000000000c"
      ],
      "stack_out": [
        "0x000000000000000c"
      ]
    },
    "3413": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "3415": {
      "op": "pushbytes 0x000000000000000d",
      "defined_out": [
        "0x000000000000000d"
      ],
      "stack_out": [
        "0x000000000000000d"
      ]
    },
    "3425": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "3427": {
      "op": "pushbytes 0x000000000000000e",
      "defined_out": [
        "0x000000000000000e"
      ],
      "stack_out": [
        "0x000000000000000e"
      ]
    },
    "3437": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "3439": {
      "op": "bytec 31 // 0x0f101112deadbeef14",
      "defined_out": [
        "0x0f101112deadbeef14"
      ],
      "stack_out": [
        "0x0f101112deadbeef14"
      ]
    },
    "3441": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "3443": {
      "op": "intc_1 // appl",
      "defined_out": [
        "appl"
      ],
      "stack_out": [
        "appl"
      ]
    },
    "3444": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "3446": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "3447": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "3449": {
      "op": "itxn_submit"
    },
    "3450": {
      "op": "itxn LastLog",
      "defined_out": [
        "awst_tmp%0#0"
      ],
      "stack_out": [
        "awst_tmp%0#0"
      ]
    },
    "3452": {
      "op": "dup",
      "defined_out": [
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ]
    },
    "3453": {
      "op": "extract 0 4",
      "defined_out": [
        "awst_tmp%0#0",
        "tmp%3#1"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "tmp%3#1"
      ]
    },
    "3456": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "awst_tmp%0#0",
        "tmp%3#1"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "tmp%3#1",
        "0x151f7c75"
      ]
    },
    "3457": {
      "op": "==",
      "defined_out": [
        "awst_tmp%0#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "tmp%4#0"
      ]
    },
    "3458": {
      "error": "application log value is not the result of an ABI return",
      "op": "assert // application log value is not the result of an ABI return",
      "stack_out": [
        "awst_tmp%0#0"
      ]
    },
    "3459": {
      "op": "extract 6 0",
      "defined_out": [
        "tmp%5#2"
      ],
      "stack_out": [
        "tmp%5#2"
      ]
    },
    "3462": {
      "op": "bytec 31 // 0x0f101112deadbeef14",
      "stack_out": [
        "tmp%5#2",
        "0x0f101112deadbeef14"
      ]
    },
    "3464": {
      "op": "==",
      "defined_out": [
        "tmp%6#4"
      ],
      "stack_out": [
        "tmp%6#4"
      ]
    },
    "3465": {
      "op": "assert",
      "stack_out": []
    },
    "3466": {
      "op": "intc_2 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "3467": {
      "op": "return",
      "stack_out": []
    },
    "3468": {
      "block": "main_test_arg_conversion_route@6",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%20#0"
      ],
      "stack_out": [
        "tmp%20#0"
      ]
    },
    "3470": {
      "op": "!",
      "defined_out": [
        "tmp%21#0"
      ],
      "stack_out": [
        "tmp%21#0"
      ]
    },
    "3471": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "3472": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%22#0"
      ],
      "stack_out": [
        "tmp%22#0"
      ]
    },
    "3474": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "3475": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded(uint64)%3#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint64)%3#0"
      ]
    },
    "3478": {
      "op": "btoi",
      "defined_out": [
        "app#0"
      ],
      "stack_out": [
        "app#0"
      ]
    },
    "3479": {
      "op": "itxn_begin"
    },
    "3480": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "app#0 (copy)"
      ],
      "stack_out": [
        "app#0",
        "app#0 (copy)"
      ]
    },
    "3481": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "app#0"
      ]
    },
    "3483": {
      "op": "bytec 9 // method \"log(string)void\"",
      "defined_out": [
        "Method(log(string)void)",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "Method(log(string)void)"
      ]
    },
    "3485": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0"
      ]
    },
    "3487": {
      "op": "pushbytes 0x000a636f6e76657274656431",
      "defined_out": [
        "0x000a636f6e76657274656431",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "0x000a636f6e76657274656431"
      ]
    },
    "3501": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0"
      ]
    },
    "3503": {
      "op": "intc_1 // appl",
      "defined_out": [
        "app#0",
        "appl"
      ],
      "stack_out": [
        "app#0",
        "appl"
      ]
    },
    "3504": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "app#0"
      ]
    },
    "3506": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "0"
      ]
    },
    "3507": {
      "op": "itxn_field Fee",
      "stack_out": [
        "app#0"
      ]
    },
    "3509": {
      "op": "itxn_submit"
    },
    "3510": {
      "op": "itxn LastLog",
      "defined_out": [
        "app#0",
        "txn.LastLog#0"
      ],
      "stack_out": [
        "app#0",
        "txn.LastLog#0"
      ]
    },
    "3512": {
      "op": "pushbytes 0x636f6e76657274656431",
      "defined_out": [
        "0x636f6e76657274656431",
        "app#0",
        "txn.LastLog#0"
      ],
      "stack_out": [
        "app#0",
        "txn.LastLog#0",
        "0x636f6e76657274656431"
      ]
    },
    "3524": {
      "op": "==",
      "defined_out": [
        "app#0",
        "tmp%1#12"
      ],
      "stack_out": [
        "app#0",
        "tmp%1#12"
      ]
    },
    "3525": {
      "op": "assert",
      "stack_out": [
        "app#0"
      ]
    },
    "3526": {
      "op": "itxn_begin"
    },
    "3527": {
      "op": "dup",
      "stack_out": [
        "app#0",
        "app#0 (copy)"
      ]
    },
    "3528": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "app#0"
      ]
    },
    "3530": {
      "op": "pushbytes 0x3c1058d9 // method \"log(uint64)void\"",
      "defined_out": [
        "Method(log(uint64)void)",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "Method(log(uint64)void)"
      ]
    },
    "3536": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0"
      ]
    },
    "3538": {
      "op": "bytec 30 // 0x0000000000000002",
      "defined_out": [
        "0x0000000000000002",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "0x0000000000000002"
      ]
    },
    "3540": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0"
      ]
    },
    "3542": {
      "op": "intc_1 // appl",
      "stack_out": [
        "app#0",
        "appl"
      ]
    },
    "3543": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "app#0"
      ]
    },
    "3545": {
      "op": "intc_0 // 0",
      "stack_out": [
        "app#0",
        "0"
      ]
    },
    "3546": {
      "op": "itxn_field Fee",
      "stack_out": [
        "app#0"
      ]
    },
    "3548": {
      "op": "itxn_submit"
    },
    "3549": {
      "op": "itxn LastLog",
      "stack_out": [
        "app#0",
        "txn.LastLog#0"
      ]
    },
    "3551": {
      "op": "intc_3 // 2",
      "defined_out": [
        "2",
        "app#0",
        "txn.LastLog#0"
      ],
      "stack_out": [
        "app#0",
        "txn.LastLog#0",
        "2"
      ]
    },
    "3552": {
      "op": "itob",
      "defined_out": [
        "app#0",
        "tmp%2#0",
        "txn.LastLog#0"
      ],
      "stack_out": [
        "app#0",
        "txn.LastLog#0",
        "tmp%2#0"
      ]
    },
    "3553": {
      "op": "==",
      "defined_out": [
        "app#0",
        "tmp%3#7"
      ],
      "stack_out": [
        "app#0",
        "tmp%3#7"
      ]
    },
    "3554": {
      "op": "assert",
      "stack_out": [
        "app#0"
      ]
    },
    "3555": {
      "op": "itxn_begin"
    },
    "3556": {
      "op": "dup",
      "stack_out": [
        "app#0",
        "app#0 (copy)"
      ]
    },
    "3557": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "app#0"
      ]
    },
    "3559": {
      "op": "pushbytes 0x6af45930 // method \"log(uint512)void\"",
      "defined_out": [
        "Method(log(uint512)void)",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "Method(log(uint512)void)"
      ]
    },
    "3565": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0"
      ]
    },
    "3567": {
      "op": "bytec 32 // 0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000003",
      "defined_out": [
        "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000003",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000003"
      ]
    },
    "3569": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0"
      ]
    },
    "3571": {
      "op": "intc_1 // appl",
      "stack_out": [
        "app#0",
        "appl"
      ]
    },
    "3572": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "app#0"
      ]
    },
    "3574": {
      "op": "intc_0 // 0",
      "stack_out": [
        "app#0",
        "0"
      ]
    },
    "3575": {
      "op": "itxn_field Fee",
      "stack_out": [
        "app#0"
      ]
    },
    "3577": {
      "op": "itxn_submit"
    },
    "3578": {
      "op": "itxn LastLog",
      "stack_out": [
        "app#0",
        "txn.LastLog#0"
      ]
    },
    "3580": {
      "op": "bytec 32 // 0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000003",
      "stack_out": [
        "app#0",
        "txn.LastLog#0",
        "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000003"
      ]
    },
    "3582": {
      "op": "==",
      "defined_out": [
        "app#0",
        "tmp%7#2"
      ],
      "stack_out": [
        "app#0",
        "tmp%7#2"
      ]
    },
    "3583": {
      "op": "assert",
      "stack_out": [
        "app#0"
      ]
    },
    "3584": {
      "op": "itxn_begin"
    },
    "3585": {
      "op": "dup",
      "stack_out": [
        "app#0",
        "app#0 (copy)"
      ]
    },
    "3586": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "app#0"
      ]
    },
    "3588": {
      "op": "pushbytes 0xb500e111 // method \"log(byte[])void\"",
      "defined_out": [
        "Method(log(byte[])void)",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "Method(log(byte[])void)"
      ]
    },
    "3594": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0"
      ]
    },
    "3596": {
      "op": "pushbytes 0x000134",
      "defined_out": [
        "0x000134",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "0x000134"
      ]
    },
    "3601": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0"
      ]
    },
    "3603": {
      "op": "intc_1 // appl",
      "stack_out": [
        "app#0",
        "appl"
      ]
    },
    "3604": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "app#0"
      ]
    },
    "3606": {
      "op": "intc_0 // 0",
      "stack_out": [
        "app#0",
        "0"
      ]
    },
    "3607": {
      "op": "itxn_field Fee",
      "stack_out": [
        "app#0"
      ]
    },
    "3609": {
      "op": "itxn_submit"
    },
    "3610": {
      "op": "itxn LastLog",
      "stack_out": [
        "app#0",
        "txn.LastLog#0"
      ]
    },
    "3612": {
      "op": "pushbytes 0x34",
      "defined_out": [
        "0x34",
        "app#0",
        "txn.LastLog#0"
      ],
      "stack_out": [
        "app#0",
        "txn.LastLog#0",
        "0x34"
      ]
    },
    "3615": {
      "op": "==",
      "defined_out": [
        "app#0",
        "tmp%9#1"
      ],
      "stack_out": [
        "app#0",
        "tmp%9#1"
      ]
    },
    "3616": {
      "op": "assert",
      "stack_out": [
        "app#0"
      ]
    },
    "3617": {
      "op": "itxn_begin"
    },
    "3618": {
      "op": "itxn_field ApplicationID",
      "stack_out": []
    },
    "3620": {
      "op": "pushbytes 0x6eed7ec3 // method \"log(bool)void\"",
      "defined_out": [
        "Method(log(bool)void)"
      ],
      "stack_out": [
        "Method(log(bool)void)"
      ]
    },
    "3626": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "3628": {
      "op": "pushbytes 0x80",
      "defined_out": [
        "0x80"
      ],
      "stack_out": [
        "0x80"
      ]
    },
    "3631": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "3633": {
      "op": "intc_1 // appl",
      "stack_out": [
        "appl"
      ]
    },
    "3634": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "3636": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0"
      ]
    },
    "3637": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "3639": {
      "op": "itxn_submit"
    },
    "3640": {
      "op": "itxn LastLog",
      "stack_out": [
        "txn.LastLog#0"
      ]
    },
    "3642": {
      "op": "pushbytes 0x54727565",
      "defined_out": [
        "0x54727565",
        "txn.LastLog#0"
      ],
      "stack_out": [
        "txn.LastLog#0",
        "0x54727565"
      ]
    },
    "3648": {
      "op": "==",
      "defined_out": [
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0"
      ]
    },
    "3649": {
      "op": "assert",
      "stack_out": []
    },
    "3650": {
      "op": "intc_2 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "3651": {
      "op": "return",
      "stack_out": []
    },
    "3652": {
      "block": "main_test_method_overload_route@5",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%15#0"
      ],
      "stack_out": [
        "tmp%15#0"
      ]
    },
    "3654": {
      "op": "!",
      "defined_out": [
        "tmp%16#0"
      ],
      "stack_out": [
        "tmp%16#0"
      ]
    },
    "3655": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "3656": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%17#0"
      ],
      "stack_out": [
        "tmp%17#0"
      ]
    },
    "3658": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "3659": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded(uint64)%2#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint64)%2#0"
      ]
    },
    "3662": {
      "op": "btoi",
      "defined_out": [
        "app#0"
      ],
      "stack_out": [
        "app#0"
      ]
    },
    "3663": {
      "op": "itxn_begin"
    },
    "3664": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "app#0 (copy)"
      ],
      "stack_out": [
        "app#0",
        "app#0 (copy)"
      ]
    },
    "3665": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "app#0"
      ]
    },
    "3667": {
      "op": "bytec_3 // method \"echo(string)string\"",
      "defined_out": [
        "Method(echo(string)string)",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "Method(echo(string)string)"
      ]
    },
    "3668": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0"
      ]
    },
    "3670": {
      "op": "pushbytes 0x000e7479706564202b2069676e6f7265",
      "defined_out": [
        "0x000e7479706564202b2069676e6f7265",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "0x000e7479706564202b2069676e6f7265"
      ]
    },
    "3688": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0"
      ]
    },
    "3690": {
      "op": "intc_1 // appl",
      "defined_out": [
        "app#0",
        "appl"
      ],
      "stack_out": [
        "app#0",
        "appl"
      ]
    },
    "3691": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "app#0"
      ]
    },
    "3693": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "0"
      ]
    },
    "3694": {
      "op": "itxn_field Fee",
      "stack_out": [
        "app#0"
      ]
    },
    "3696": {
      "op": "itxn_submit"
    },
    "3697": {
      "op": "itxn LastLog",
      "defined_out": [
        "app#0",
        "awst_tmp%0#0"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0"
      ]
    },
    "3699": {
      "op": "extract 0 4",
      "defined_out": [
        "app#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "app#0",
        "tmp%2#0"
      ]
    },
    "3702": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "app#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "app#0",
        "tmp%2#0",
        "0x151f7c75"
      ]
    },
    "3703": {
      "op": "==",
      "defined_out": [
        "app#0",
        "tmp%3#7"
      ],
      "stack_out": [
        "app#0",
        "tmp%3#7"
      ]
    },
    "3704": {
      "error": "application log value is not the result of an ABI return",
      "op": "assert // application log value is not the result of an ABI return",
      "stack_out": [
        "app#0"
      ]
    },
    "3705": {
      "op": "itxn LastLog",
      "defined_out": [
        "app#0",
        "awst_tmp%1#0"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%1#0"
      ]
    },
    "3707": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "awst_tmp%1#0",
        "awst_tmp%1#0 (copy)"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%1#0",
        "awst_tmp%1#0 (copy)"
      ]
    },
    "3708": {
      "op": "extract 4 0",
      "defined_out": [
        "app#0",
        "awst_tmp%1#0",
        "tmp%4#5"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%1#0",
        "tmp%4#5"
      ]
    },
    "3711": {
      "op": "swap",
      "stack_out": [
        "app#0",
        "tmp%4#5",
        "awst_tmp%1#0"
      ]
    },
    "3712": {
      "op": "extract 0 4",
      "defined_out": [
        "app#0",
        "tmp%4#5",
        "tmp%5#2"
      ],
      "stack_out": [
        "app#0",
        "tmp%4#5",
        "tmp%5#2"
      ]
    },
    "3715": {
      "op": "bytec_0 // 0x151f7c75",
      "stack_out": [
        "app#0",
        "tmp%4#5",
        "tmp%5#2",
        "0x151f7c75"
      ]
    },
    "3716": {
      "op": "==",
      "defined_out": [
        "app#0",
        "tmp%4#5",
        "tmp%6#4"
      ],
      "stack_out": [
        "app#0",
        "tmp%4#5",
        "tmp%6#4"
      ]
    },
    "3717": {
      "error": "application log value is not the result of an ABI return",
      "op": "assert // application log value is not the result of an ABI return",
      "stack_out": [
        "app#0",
        "tmp%4#5"
      ]
    },
    "3718": {
      "op": "pushbytes 0x00146563686f3a207479706564202b2069676e6f7265",
      "defined_out": [
        "0x00146563686f3a207479706564202b2069676e6f7265",
        "app#0",
        "tmp%4#5"
      ],
      "stack_out": [
        "app#0",
        "tmp%4#5",
        "0x00146563686f3a207479706564202b2069676e6f7265"
      ]
    },
    "3742": {
      "op": "==",
      "defined_out": [
        "app#0",
        "tmp%8#1"
      ],
      "stack_out": [
        "app#0",
        "tmp%8#1"
      ]
    },
    "3743": {
      "op": "assert",
      "stack_out": [
        "app#0"
      ]
    },
    "3744": {
      "op": "itxn_begin"
    },
    "3745": {
      "op": "dup",
      "stack_out": [
        "app#0",
        "app#0 (copy)"
      ]
    },
    "3746": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "app#0"
      ]
    },
    "3748": {
      "op": "bytec_3 // method \"echo(string)string\"",
      "stack_out": [
        "app#0",
        "Method(echo(string)string)"
      ]
    },
    "3749": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0"
      ]
    },
    "3751": {
      "op": "pushbytes 0x0010756e7479706564202b2069676e6f7265",
      "defined_out": [
        "0x0010756e7479706564202b2069676e6f7265",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "0x0010756e7479706564202b2069676e6f7265"
      ]
    },
    "3771": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0"
      ]
    },
    "3773": {
      "op": "intc_1 // appl",
      "stack_out": [
        "app#0",
        "appl"
      ]
    },
    "3774": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "app#0"
      ]
    },
    "3776": {
      "op": "intc_0 // 0",
      "stack_out": [
        "app#0",
        "0"
      ]
    },
    "3777": {
      "op": "itxn_field Fee",
      "stack_out": [
        "app#0"
      ]
    },
    "3779": {
      "op": "itxn_submit"
    },
    "3780": {
      "op": "itxn LastLog",
      "defined_out": [
        "app#0",
        "awst_tmp%2#0"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%2#0"
      ]
    },
    "3782": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "awst_tmp%2#0",
        "awst_tmp%2#0 (copy)"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%2#0",
        "awst_tmp%2#0 (copy)"
      ]
    },
    "3783": {
      "op": "extract 4 0",
      "defined_out": [
        "app#0",
        "awst_tmp%2#0",
        "tmp%10#3"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%2#0",
        "tmp%10#3"
      ]
    },
    "3786": {
      "op": "swap",
      "stack_out": [
        "app#0",
        "tmp%10#3",
        "awst_tmp%2#0"
      ]
    },
    "3787": {
      "op": "extract 0 4",
      "defined_out": [
        "app#0",
        "tmp%10#3",
        "tmp%11#4"
      ],
      "stack_out": [
        "app#0",
        "tmp%10#3",
        "tmp%11#4"
      ]
    },
    "3790": {
      "op": "bytec_0 // 0x151f7c75",
      "stack_out": [
        "app#0",
        "tmp%10#3",
        "tmp%11#4",
        "0x151f7c75"
      ]
    },
    "3791": {
      "op": "==",
      "defined_out": [
        "app#0",
        "tmp%10#3",
        "tmp%12#1"
      ],
      "stack_out": [
        "app#0",
        "tmp%10#3",
        "tmp%12#1"
      ]
    },
    "3792": {
      "error": "application log value is not the result of an ABI return",
      "op": "assert // application log value is not the result of an ABI return",
      "stack_out": [
        "app#0",
        "tmp%10#3"
      ]
    },
    "3793": {
      "op": "pushbytes 0x00166563686f3a20756e7479706564202b2069676e6f7265",
      "defined_out": [
        "0x00166563686f3a20756e7479706564202b2069676e6f7265",
        "app#0",
        "tmp%10#3"
      ],
      "stack_out": [
        "app#0",
        "tmp%10#3",
        "0x00166563686f3a20756e7479706564202b2069676e6f7265"
      ]
    },
    "3819": {
      "op": "==",
      "defined_out": [
        "app#0",
        "tmp%14#3"
      ],
      "stack_out": [
        "app#0",
        "tmp%14#3"
      ]
    },
    "3820": {
      "op": "assert",
      "stack_out": [
        "app#0"
      ]
    },
    "3821": {
      "op": "itxn_begin"
    },
    "3822": {
      "op": "dup",
      "stack_out": [
        "app#0",
        "app#0 (copy)"
      ]
    },
    "3823": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "app#0"
      ]
    },
    "3825": {
      "op": "bytec_3 // method \"echo(string)string\"",
      "stack_out": [
        "app#0",
        "Method(echo(string)string)"
      ]
    },
    "3826": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0"
      ]
    },
    "3828": {
      "op": "pushbytes 0x00057475706c65",
      "defined_out": [
        "0x00057475706c65",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "0x00057475706c65"
      ]
    },
    "3837": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0"
      ]
    },
    "3839": {
      "op": "intc_1 // appl",
      "stack_out": [
        "app#0",
        "appl"
      ]
    },
    "3840": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "app#0"
      ]
    },
    "3842": {
      "op": "intc_0 // 0",
      "stack_out": [
        "app#0",
        "0"
      ]
    },
    "3843": {
      "op": "itxn_field Fee",
      "stack_out": [
        "app#0"
      ]
    },
    "3845": {
      "op": "itxn_submit"
    },
    "3846": {
      "op": "itxn LastLog",
      "defined_out": [
        "app#0",
        "awst_tmp%3#0"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%3#0"
      ]
    },
    "3848": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "awst_tmp%3#0",
        "awst_tmp%3#0 (copy)"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%3#0",
        "awst_tmp%3#0 (copy)"
      ]
    },
    "3849": {
      "op": "extract 4 0",
      "defined_out": [
        "app#0",
        "awst_tmp%3#0",
        "result.0#7"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%3#0",
        "result.0#7"
      ]
    },
    "3852": {
      "op": "swap",
      "stack_out": [
        "app#0",
        "result.0#7",
        "awst_tmp%3#0"
      ]
    },
    "3853": {
      "op": "extract 0 4",
      "defined_out": [
        "app#0",
        "result.0#7",
        "tmp%17#1"
      ],
      "stack_out": [
        "app#0",
        "result.0#7",
        "tmp%17#1"
      ]
    },
    "3856": {
      "op": "bytec_0 // 0x151f7c75",
      "stack_out": [
        "app#0",
        "result.0#7",
        "tmp%17#1",
        "0x151f7c75"
      ]
    },
    "3857": {
      "op": "==",
      "defined_out": [
        "app#0",
        "result.0#7",
        "tmp%18#1"
      ],
      "stack_out": [
        "app#0",
        "result.0#7",
        "tmp%18#1"
      ]
    },
    "3858": {
      "error": "application log value is not the result of an ABI return",
      "op": "assert // application log value is not the result of an ABI return",
      "stack_out": [
        "app#0",
        "result.0#7"
      ]
    },
    "3859": {
      "op": "itxn LastLog",
      "defined_out": [
        "app#0",
        "result.0#7",
        "result.1.LastLog#0"
      ],
      "stack_out": [
        "app#0",
        "result.0#7",
        "result.1.LastLog#0"
      ]
    },
    "3861": {
      "op": "swap",
      "stack_out": [
        "app#0",
        "result.1.LastLog#0",
        "result.0#7"
      ]
    },
    "3862": {
      "op": "bytec 33 // 0x000b6563686f3a207475706c65",
      "defined_out": [
        "0x000b6563686f3a207475706c65",
        "app#0",
        "result.0#7",
        "result.1.LastLog#0"
      ],
      "stack_out": [
        "app#0",
        "result.1.LastLog#0",
        "result.0#7",
        "0x000b6563686f3a207475706c65"
      ]
    },
    "3864": {
      "op": "==",
      "defined_out": [
        "app#0",
        "result.1.LastLog#0",
        "tmp%20#3"
      ],
      "stack_out": [
        "app#0",
        "result.1.LastLog#0",
        "tmp%20#3"
      ]
    },
    "3865": {
      "op": "assert",
      "stack_out": [
        "app#0",
        "result.1.LastLog#0"
      ]
    },
    "3866": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "result.1.LastLog#0",
        "result.1.LastLog#0 (copy)"
      ],
      "stack_out": [
        "app#0",
        "result.1.LastLog#0",
        "result.1.LastLog#0 (copy)"
      ]
    },
    "3867": {
      "op": "extract 4 0",
      "defined_out": [
        "app#0",
        "result.1.LastLog#0",
        "tmp%21#1"
      ],
      "stack_out": [
        "app#0",
        "result.1.LastLog#0",
        "tmp%21#1"
      ]
    },
    "3870": {
      "op": "swap",
      "stack_out": [
        "app#0",
        "tmp%21#1",
        "result.1.LastLog#0"
      ]
    },
    "3871": {
      "op": "extract 0 4",
      "defined_out": [
        "app#0",
        "tmp%21#1",
        "tmp%22#3"
      ],
      "stack_out": [
        "app#0",
        "tmp%21#1",
        "tmp%22#3"
      ]
    },
    "3874": {
      "op": "bytec_0 // 0x151f7c75",
      "stack_out": [
        "app#0",
        "tmp%21#1",
        "tmp%22#3",
        "0x151f7c75"
      ]
    },
    "3875": {
      "op": "==",
      "defined_out": [
        "app#0",
        "tmp%21#1",
        "tmp%23#1"
      ],
      "stack_out": [
        "app#0",
        "tmp%21#1",
        "tmp%23#1"
      ]
    },
    "3876": {
      "error": "application log value is not the result of an ABI return",
      "op": "assert // application log value is not the result of an ABI return",
      "stack_out": [
        "app#0",
        "tmp%21#1"
      ]
    },
    "3877": {
      "op": "bytec 33 // 0x000b6563686f3a207475706c65",
      "stack_out": [
        "app#0",
        "tmp%21#1",
        "0x000b6563686f3a207475706c65"
      ]
    },
    "3879": {
      "op": "==",
      "defined_out": [
        "app#0",
        "tmp%25#1"
      ],
      "stack_out": [
        "app#0",
        "tmp%25#1"
      ]
    },
    "3880": {
      "op": "assert",
      "stack_out": [
        "app#0"
      ]
    },
    "3881": {
      "op": "itxn_begin"
    },
    "3882": {
      "op": "itxn_field ApplicationID",
      "stack_out": []
    },
    "3884": {
      "op": "bytec_3 // method \"echo(string)string\"",
      "stack_out": [
        "Method(echo(string)string)"
      ]
    },
    "3885": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "3887": {
      "op": "pushbytes 0x0007756e7479706564",
      "defined_out": [
        "0x0007756e7479706564"
      ],
      "stack_out": [
        "0x0007756e7479706564"
      ]
    },
    "3898": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "3900": {
      "op": "intc_1 // appl",
      "stack_out": [
        "appl"
      ]
    },
    "3901": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "3903": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0"
      ]
    },
    "3904": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "3906": {
      "op": "itxn_submit"
    },
    "3907": {
      "op": "itxn LastLog",
      "defined_out": [
        "txn_result.LastLog#0"
      ],
      "stack_out": [
        "txn_result.LastLog#0"
      ]
    },
    "3909": {
      "op": "dup",
      "defined_out": [
        "txn_result.LastLog#0",
        "txn_result.LastLog#0 (copy)"
      ],
      "stack_out": [
        "txn_result.LastLog#0",
        "txn_result.LastLog#0 (copy)"
      ]
    },
    "3910": {
      "op": "extract 4 0",
      "defined_out": [
        "tmp%27#3",
        "txn_result.LastLog#0"
      ],
      "stack_out": [
        "txn_result.LastLog#0",
        "tmp%27#3"
      ]
    },
    "3913": {
      "op": "swap",
      "stack_out": [
        "tmp%27#3",
        "txn_result.LastLog#0"
      ]
    },
    "3914": {
      "op": "extract 0 4",
      "defined_out": [
        "tmp%27#3",
        "tmp%28#1"
      ],
      "stack_out": [
        "tmp%27#3",
        "tmp%28#1"
      ]
    },
    "3917": {
      "op": "bytec_0 // 0x151f7c75",
      "stack_out": [
        "tmp%27#3",
        "tmp%28#1",
        "0x151f7c75"
      ]
    },
    "3918": {
      "op": "==",
      "defined_out": [
        "tmp%27#3",
        "tmp%29#1"
      ],
      "stack_out": [
        "tmp%27#3",
        "tmp%29#1"
      ]
    },
    "3919": {
      "error": "application log value is not the result of an ABI return",
      "op": "assert // application log value is not the result of an ABI return",
      "stack_out": [
        "tmp%27#3"
      ]
    },
    "3920": {
      "op": "pushbytes 0x000d6563686f3a20756e7479706564",
      "defined_out": [
        "0x000d6563686f3a20756e7479706564",
        "tmp%27#3"
      ],
      "stack_out": [
        "tmp%27#3",
        "0x000d6563686f3a20756e7479706564"
      ]
    },
    "3937": {
      "op": "==",
      "defined_out": [
        "tmp%31#0"
      ],
      "stack_out": [
        "tmp%31#0"
      ]
    },
    "3938": {
      "op": "assert",
      "stack_out": []
    },
    "3939": {
      "op": "intc_2 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "3940": {
      "op": "return",
      "stack_out": []
    },
    "3941": {
      "block": "main_test_method_selector_kinds_route@4",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%10#0"
      ],
      "stack_out": [
        "tmp%10#0"
      ]
    },
    "3943": {
      "op": "!",
      "defined_out": [
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0"
      ]
    },
    "3944": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "3945": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%12#0"
      ]
    },
    "3947": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "3948": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded(uint64)%1#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint64)%1#0"
      ]
    },
    "3951": {
      "op": "btoi",
      "defined_out": [
        "app#0"
      ],
      "stack_out": [
        "app#0"
      ]
    },
    "3952": {
      "op": "itxn_begin"
    },
    "3953": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "app#0 (copy)"
      ],
      "stack_out": [
        "app#0",
        "app#0 (copy)"
      ]
    },
    "3954": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "app#0"
      ]
    },
    "3956": {
      "op": "bytec_3 // method \"echo(string)string\"",
      "defined_out": [
        "Method(echo(string)string)",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "Method(echo(string)string)"
      ]
    },
    "3957": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0"
      ]
    },
    "3959": {
      "op": "pushbytes 0x00057465737431",
      "defined_out": [
        "0x00057465737431",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "0x00057465737431"
      ]
    },
    "3968": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0"
      ]
    },
    "3970": {
      "op": "intc_1 // appl",
      "defined_out": [
        "app#0",
        "appl"
      ],
      "stack_out": [
        "app#0",
        "appl"
      ]
    },
    "3971": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "app#0"
      ]
    },
    "3973": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "0"
      ]
    },
    "3974": {
      "op": "itxn_field Fee",
      "stack_out": [
        "app#0"
      ]
    },
    "3976": {
      "op": "itxn_submit"
    },
    "3977": {
      "op": "itxn LastLog",
      "defined_out": [
        "app#0",
        "awst_tmp%0#0"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0"
      ]
    },
    "3979": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ]
    },
    "3980": {
      "op": "extract 4 0",
      "defined_out": [
        "app#0",
        "awst_tmp%0#0",
        "result#0"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "result#0"
      ]
    },
    "3983": {
      "op": "swap",
      "stack_out": [
        "app#0",
        "result#0",
        "awst_tmp%0#0"
      ]
    },
    "3984": {
      "op": "extract 0 4",
      "defined_out": [
        "app#0",
        "result#0",
        "tmp%3#1"
      ],
      "stack_out": [
        "app#0",
        "result#0",
        "tmp%3#1"
      ]
    },
    "3987": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "app#0",
        "result#0",
        "tmp%3#1"
      ],
      "stack_out": [
        "app#0",
        "result#0",
        "tmp%3#1",
        "0x151f7c75"
      ]
    },
    "3988": {
      "op": "==",
      "defined_out": [
        "app#0",
        "result#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "app#0",
        "result#0",
        "tmp%4#0"
      ]
    },
    "3989": {
      "error": "application log value is not the result of an ABI return",
      "op": "assert // application log value is not the result of an ABI return",
      "stack_out": [
        "app#0",
        "result#0"
      ]
    },
    "3990": {
      "op": "pushbytes 0x000b6563686f3a207465737431",
      "defined_out": [
        "0x000b6563686f3a207465737431",
        "app#0",
        "result#0"
      ],
      "stack_out": [
        "app#0",
        "result#0",
        "0x000b6563686f3a207465737431"
      ]
    },
    "4005": {
      "op": "==",
      "defined_out": [
        "app#0",
        "tmp%6#4"
      ],
      "stack_out": [
        "app#0",
        "tmp%6#4"
      ]
    },
    "4006": {
      "op": "assert",
      "stack_out": [
        "app#0"
      ]
    },
    "4007": {
      "op": "itxn_begin"
    },
    "4008": {
      "op": "dup",
      "stack_out": [
        "app#0",
        "app#0 (copy)"
      ]
    },
    "4009": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "app#0"
      ]
    },
    "4011": {
      "op": "bytec_3 // method \"echo(string)string\"",
      "stack_out": [
        "app#0",
        "Method(echo(string)string)"
      ]
    },
    "4012": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0"
      ]
    },
    "4014": {
      "op": "pushbytes 0x00057465737432",
      "defined_out": [
        "0x00057465737432",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "0x00057465737432"
      ]
    },
    "4023": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0"
      ]
    },
    "4025": {
      "op": "intc_1 // appl",
      "stack_out": [
        "app#0",
        "appl"
      ]
    },
    "4026": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "app#0"
      ]
    },
    "4028": {
      "op": "intc_0 // 0",
      "stack_out": [
        "app#0",
        "0"
      ]
    },
    "4029": {
      "op": "itxn_field Fee",
      "stack_out": [
        "app#0"
      ]
    },
    "4031": {
      "op": "itxn_submit"
    },
    "4032": {
      "op": "itxn LastLog",
      "defined_out": [
        "app#0",
        "awst_tmp%1#0"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%1#0"
      ]
    },
    "4034": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "awst_tmp%1#0",
        "awst_tmp%1#0 (copy)"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%1#0",
        "awst_tmp%1#0 (copy)"
      ]
    },
    "4035": {
      "op": "extract 4 0",
      "stack_out": [
        "app#0",
        "awst_tmp%1#0",
        "result#0"
      ]
    },
    "4038": {
      "op": "swap",
      "stack_out": [
        "app#0",
        "result#0",
        "awst_tmp%1#0"
      ]
    },
    "4039": {
      "op": "extract 0 4",
      "defined_out": [
        "app#0",
        "result#0",
        "tmp%9#3"
      ],
      "stack_out": [
        "app#0",
        "result#0",
        "tmp%9#3"
      ]
    },
    "4042": {
      "op": "bytec_0 // 0x151f7c75",
      "stack_out": [
        "app#0",
        "result#0",
        "tmp%9#3",
        "0x151f7c75"
      ]
    },
    "4043": {
      "op": "==",
      "defined_out": [
        "app#0",
        "result#0",
        "tmp%10#1"
      ],
      "stack_out": [
        "app#0",
        "result#0",
        "tmp%10#1"
      ]
    },
    "4044": {
      "error": "application log value is not the result of an ABI return",
      "op": "assert // application log value is not the result of an ABI return",
      "stack_out": [
        "app#0",
        "result#0"
      ]
    },
    "4045": {
      "op": "pushbytes 0x000b6563686f3a207465737432",
      "defined_out": [
        "0x000b6563686f3a207465737432",
        "app#0",
        "result#0"
      ],
      "stack_out": [
        "app#0",
        "result#0",
        "0x000b6563686f3a207465737432"
      ]
    },
    "4060": {
      "op": "==",
      "defined_out": [
        "app#0",
        "tmp%12#1"
      ],
      "stack_out": [
        "app#0",
        "tmp%12#1"
      ]
    },
    "4061": {
      "op": "assert",
      "stack_out": [
        "app#0"
      ]
    },
    "4062": {
      "op": "itxn_begin"
    },
    "4063": {
      "op": "dup",
      "stack_out": [
        "app#0",
        "app#0 (copy)"
      ]
    },
    "4064": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "app#0"
      ]
    },
    "4066": {
      "op": "bytec_3 // method \"echo(string)string\"",
      "stack_out": [
        "app#0",
        "Method(echo(string)string)"
      ]
    },
    "4067": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0"
      ]
    },
    "4069": {
      "op": "pushbytes 0x00057465737433",
      "defined_out": [
        "0x00057465737433",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "0x00057465737433"
      ]
    },
    "4078": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0"
      ]
    },
    "4080": {
      "op": "intc_1 // appl",
      "stack_out": [
        "app#0",
        "appl"
      ]
    },
    "4081": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "app#0"
      ]
    },
    "4083": {
      "op": "intc_0 // 0",
      "stack_out": [
        "app#0",
        "0"
      ]
    },
    "4084": {
      "op": "itxn_field Fee",
      "stack_out": [
        "app#0"
      ]
    },
    "4086": {
      "op": "itxn_submit"
    },
    "4087": {
      "op": "itxn LastLog",
      "defined_out": [
        "app#0",
        "awst_tmp%2#0"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%2#0"
      ]
    },
    "4089": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "awst_tmp%2#0",
        "awst_tmp%2#0 (copy)"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%2#0",
        "awst_tmp%2#0 (copy)"
      ]
    },
    "4090": {
      "op": "extract 4 0",
      "stack_out": [
        "app#0",
        "awst_tmp%2#0",
        "result#0"
      ]
    },
    "4093": {
      "op": "swap",
      "stack_out": [
        "app#0",
        "result#0",
        "awst_tmp%2#0"
      ]
    },
    "4094": {
      "op": "extract 0 4",
      "defined_out": [
        "app#0",
        "result#0",
        "tmp%15#11"
      ],
      "stack_out": [
        "app#0",
        "result#0",
        "tmp%15#11"
      ]
    },
    "4097": {
      "op": "bytec_0 // 0x151f7c75",
      "stack_out": [
        "app#0",
        "result#0",
        "tmp%15#11",
        "0x151f7c75"
      ]
    },
    "4098": {
      "op": "==",
      "defined_out": [
        "app#0",
        "result#0",
        "tmp%16#0"
      ],
      "stack_out": [
        "app#0",
        "result#0",
        "tmp%16#0"
      ]
    },
    "4099": {
      "error": "application log value is not the result of an ABI return",
      "op": "assert // application log value is not the result of an ABI return",
      "stack_out": [
        "app#0",
        "result#0"
      ]
    },
    "4100": {
      "op": "pushbytes 0x000b6563686f3a207465737433",
      "defined_out": [
        "0x000b6563686f3a207465737433",
        "app#0",
        "result#0"
      ],
      "stack_out": [
        "app#0",
        "result#0",
        "0x000b6563686f3a207465737433"
      ]
    },
    "4115": {
      "op": "==",
      "defined_out": [
        "app#0",
        "tmp%18#1"
      ],
      "stack_out": [
        "app#0",
        "tmp%18#1"
      ]
    },
    "4116": {
      "op": "assert",
      "stack_out": [
        "app#0"
      ]
    },
    "4117": {
      "op": "itxn_begin"
    },
    "4118": {
      "op": "dup",
      "stack_out": [
        "app#0",
        "app#0 (copy)"
      ]
    },
    "4119": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "app#0"
      ]
    },
    "4121": {
      "op": "bytec_3 // method \"echo(string)string\"",
      "stack_out": [
        "app#0",
        "Method(echo(string)string)"
      ]
    },
    "4122": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0"
      ]
    },
    "4124": {
      "op": "pushbytes 0x00057465737434",
      "defined_out": [
        "0x00057465737434",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "0x00057465737434"
      ]
    },
    "4133": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0"
      ]
    },
    "4135": {
      "op": "intc_1 // appl",
      "stack_out": [
        "app#0",
        "appl"
      ]
    },
    "4136": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "app#0"
      ]
    },
    "4138": {
      "op": "intc_0 // 0",
      "stack_out": [
        "app#0",
        "0"
      ]
    },
    "4139": {
      "op": "itxn_field Fee",
      "stack_out": [
        "app#0"
      ]
    },
    "4141": {
      "op": "itxn_submit"
    },
    "4142": {
      "op": "itxn LastLog",
      "defined_out": [
        "app#0",
        "awst_tmp%3#0"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%3#0"
      ]
    },
    "4144": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "awst_tmp%3#0",
        "awst_tmp%3#0 (copy)"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%3#0",
        "awst_tmp%3#0 (copy)"
      ]
    },
    "4145": {
      "op": "extract 4 0",
      "stack_out": [
        "app#0",
        "awst_tmp%3#0",
        "result#0"
      ]
    },
    "4148": {
      "op": "swap",
      "stack_out": [
        "app#0",
        "result#0",
        "awst_tmp%3#0"
      ]
    },
    "4149": {
      "op": "extract 0 4",
      "defined_out": [
        "app#0",
        "result#0",
        "tmp%21#1"
      ],
      "stack_out": [
        "app#0",
        "result#0",
        "tmp%21#1"
      ]
    },
    "4152": {
      "op": "bytec_0 // 0x151f7c75",
      "stack_out": [
        "app#0",
        "result#0",
        "tmp%21#1",
        "0x151f7c75"
      ]
    },
    "4153": {
      "op": "==",
      "defined_out": [
        "app#0",
        "result#0",
        "tmp%22#1"
      ],
      "stack_out": [
        "app#0",
        "result#0",
        "tmp%22#1"
      ]
    },
    "4154": {
      "error": "application log value is not the result of an ABI return",
      "op": "assert // application log value is not the result of an ABI return",
      "stack_out": [
        "app#0",
        "result#0"
      ]
    },
    "4155": {
      "op": "pushbytes 0x000b6563686f3a207465737434",
      "defined_out": [
        "0x000b6563686f3a207465737434",
        "app#0",
        "result#0"
      ],
      "stack_out": [
        "app#0",
        "result#0",
        "0x000b6563686f3a207465737434"
      ]
    },
    "4170": {
      "op": "==",
      "defined_out": [
        "app#0",
        "tmp%24#1"
      ],
      "stack_out": [
        "app#0",
        "tmp%24#1"
      ]
    },
    "4171": {
      "op": "assert",
      "stack_out": [
        "app#0"
      ]
    },
    "4172": {
      "op": "itxn_begin"
    },
    "4173": {
      "op": "itxn_field ApplicationID",
      "stack_out": []
    },
    "4175": {
      "op": "bytec_3 // method \"echo(string)string\"",
      "stack_out": [
        "Method(echo(string)string)"
      ]
    },
    "4176": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "4178": {
      "op": "pushbytes 0x00057465737435",
      "defined_out": [
        "0x00057465737435"
      ],
      "stack_out": [
        "0x00057465737435"
      ]
    },
    "4187": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "4189": {
      "op": "intc_1 // appl",
      "stack_out": [
        "appl"
      ]
    },
    "4190": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "4192": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0"
      ]
    },
    "4193": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "4195": {
      "op": "itxn_submit"
    },
    "4196": {
      "op": "itxn LastLog",
      "defined_out": [
        "awst_tmp%4#0"
      ],
      "stack_out": [
        "awst_tmp%4#0"
      ]
    },
    "4198": {
      "op": "dup",
      "defined_out": [
        "awst_tmp%4#0",
        "awst_tmp%4#0 (copy)"
      ],
      "stack_out": [
        "awst_tmp%4#0",
        "awst_tmp%4#0 (copy)"
      ]
    },
    "4199": {
      "op": "extract 4 0",
      "stack_out": [
        "awst_tmp%4#0",
        "result#0"
      ]
    },
    "4202": {
      "op": "swap",
      "stack_out": [
        "result#0",
        "awst_tmp%4#0"
      ]
    },
    "4203": {
      "op": "extract 0 4",
      "defined_out": [
        "result#0",
        "tmp%27#3"
      ],
      "stack_out": [
        "result#0",
        "tmp%27#3"
      ]
    },
    "4206": {
      "op": "bytec_0 // 0x151f7c75",
      "stack_out": [
        "result#0",
        "tmp%27#3",
        "0x151f7c75"
      ]
    },
    "4207": {
      "op": "==",
      "defined_out": [
        "result#0",
        "tmp%28#2"
      ],
      "stack_out": [
        "result#0",
        "tmp%28#2"
      ]
    },
    "4208": {
      "error": "application log value is not the result of an ABI return",
      "op": "assert // application log value is not the result of an ABI return",
      "stack_out": [
        "result#0"
      ]
    },
    "4209": {
      "op": "pushbytes 0x000b6563686f3a207465737435",
      "defined_out": [
        "0x000b6563686f3a207465737435",
        "result#0"
      ],
      "stack_out": [
        "result#0",
        "0x000b6563686f3a207465737435"
      ]
    },
    "4224": {
      "op": "==",
      "defined_out": [
        "tmp%30#1"
      ],
      "stack_out": [
        "tmp%30#1"
      ]
    },
    "4225": {
      "op": "assert",
      "stack_out": []
    },
    "4226": {
      "op": "intc_2 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "4227": {
      "op": "return",
      "stack_out": []
    },
    "4228": {
      "block": "main_test_is_a_b_route@3",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "4230": {
      "op": "!",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "4231": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "4232": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "4234": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "4235": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded(len+uint8[])%0#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(len+uint8[])%0#0"
      ]
    },
    "4238": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "reinterpret_Encoded(len+uint8[])%0#0",
        "reinterpret_Encoded(len+uint8[])%1#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(len+uint8[])%0#0",
        "reinterpret_Encoded(len+uint8[])%1#0"
      ]
    },
    "4241": {
      "op": "txna ApplicationArgs 3",
      "defined_out": [
        "reinterpret_Encoded(len+uint8[])%0#0",
        "reinterpret_Encoded(len+uint8[])%1#0",
        "reinterpret_Encoded(uint64)%0#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(len+uint8[])%0#0",
        "reinterpret_Encoded(len+uint8[])%1#0",
        "reinterpret_Encoded(uint64)%0#0"
      ]
    },
    "4244": {
      "op": "btoi",
      "defined_out": [
        "app#0",
        "reinterpret_Encoded(len+uint8[])%0#0",
        "reinterpret_Encoded(len+uint8[])%1#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(len+uint8[])%0#0",
        "reinterpret_Encoded(len+uint8[])%1#0",
        "app#0"
      ]
    },
    "4245": {
      "op": "itxn_begin"
    },
    "4246": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "reinterpret_Encoded(len+uint8[])%0#0",
        "reinterpret_Encoded(len+uint8[])%1#0"
      ]
    },
    "4248": {
      "op": "pushbytes 0xc77212bc // method \"is_a_b(byte[],byte[])void\"",
      "defined_out": [
        "Method(is_a_b(byte[],byte[])void)",
        "reinterpret_Encoded(len+uint8[])%0#0",
        "reinterpret_Encoded(len+uint8[])%1#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(len+uint8[])%0#0",
        "reinterpret_Encoded(len+uint8[])%1#0",
        "Method(is_a_b(byte[],byte[])void)"
      ]
    },
    "4254": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "reinterpret_Encoded(len+uint8[])%0#0",
        "reinterpret_Encoded(len+uint8[])%1#0"
      ]
    },
    "4256": {
      "op": "swap",
      "stack_out": [
        "reinterpret_Encoded(len+uint8[])%1#0",
        "reinterpret_Encoded(len+uint8[])%0#0"
      ]
    },
    "4257": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "reinterpret_Encoded(len+uint8[])%1#0"
      ]
    },
    "4259": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "4261": {
      "op": "intc_1 // appl",
      "defined_out": [
        "appl"
      ],
      "stack_out": [
        "appl"
      ]
    },
    "4262": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "4264": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "4265": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "4267": {
      "op": "itxn_submit"
    },
    "4268": {
      "op": "intc_2 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "4269": {
      "op": "return",
      "stack_out": []
    },
    "4270": {
      "block": "main_bare_routing@24",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%102#0"
      ],
      "stack_out": [
        "tmp%102#0"
      ]
    },
    "4272": {
      "op": "bnz main_after_if_else@28",
      "stack_out": []
    },
    "4275": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%103#0"
      ],
      "stack_out": [
        "tmp%103#0"
      ]
    },
    "4277": {
      "op": "!",
      "defined_out": [
        "tmp%104#0"
      ],
      "stack_out": [
        "tmp%104#0"
      ]
    },
    "4278": {
      "error": "can only call when creating",
      "op": "assert // can only call when creating",
      "stack_out": []
    },
    "4279": {
      "op": "intc_2 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "4280": {
      "op": "return",
      "stack_out": []
    }
  }
}