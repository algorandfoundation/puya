{
  "version": 3,
  "sources": [
    "../typed_c2c.py"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuBA;;AAAA;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwWK;;AAAA;AAAA;AAAA;;AAAA;AAxWL;;;AAAA;AAAA;;;AAAA;AAAA;AA0Wc;;AACA;;AAEQ;;;;;;;;;;;;;;;;AAAA;;;;AACqB;;;;AAAO;;;;AAAK;;;;AADjC;;;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;;;AAAA;AAAA;;AAAA;;;AAGP;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAP;AAEc;AAC4B;;AAAA;;;;;AAD5B;;;;;;;;;;;;;;;AAAA;;;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;;;AAAA;AAAA;;AAAA;;;AAGP;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAP;AAEc;;;;;;;;;;;;;;;;;AAAA;;;;AAC2B;;;;AAAO;;;;AAAK;;;;AADvC;;;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;;;AAAA;AAAA;;AAAA;;;AAGP;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAP;AAEc;;;;;AAAA;;;;;;;;;;;;;;;AAAA;;;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;;;AAAA;AAAA;;AAAA;;;AAGP;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAP;AAEc;;;;;;;;;;;;;;;;;AAAA;;;;AAEV;;;;AACA;;;;AACA;;;;AAJU;;;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;;;AAAA;AAAA;;AAAA;;;AAOP;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAP;AAEc;;;;;AAAA;;;;;;;;;;;;;AAAA;;;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;;;AAAA;AAAA;;AAAA;;;AAOP;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAP;AAzCH;;AAXA;;AAAA;AAAA;AAAA;;AAAA;AA7VL;;;AAAA;AAgWsB;;;AAAA;;;;;;;;AADR;;;;AACQ;;;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;AAKP;AAND;;AAMC;AAAP;AACO;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAPD;;AAOC;AAAP;AATH;;AAjBA;;AAAA;AAAA;AAAA;;AAAA;AA5UL;;;AAAA;AA8UuB;;;;AAAA;;;;AAEX;;;;AACA;;;;AAHW;;;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAMf;AACe;;;AAAA;;;;AAEX;;;;;;;;;;;;;;;;;;;;;AANA;;;;AAIW;;;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAMR;AAAP;AAfH;;AAVA;;AAAA;AAAA;AAAA;;AAAA;AAlUL;;;AAAA;AAoUuB;;;;AAAA;;;;AAAA;;;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;AACE;;AAAV;AAAP;AACoB;;;;AAAA;;;;AAAA;;;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AACE;;AAAf;AAAP;AAEA;;;AAAA;;;;AAAA;;;AAAA;;;AAAA;AAAA;;AAAA;;;AAAA;AAAA;AAAA;AAC4B;;AAArB;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAA4C;;AAA5C;AAAP;AARH;;AA9CA;;AAAA;AAAA;AAAA;;AAAA;AApRL;;;AAAA;AAuRsB;;;;AAAA;;;;AAEV;;;;AAFU;;;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;;;;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;;AAMP;;AAAM;;AAAN;AAAP;AACO;;AAAM;;AAAN;AAAP;AACO;;AAAS;AAAT;AAAP;AACO;AAAS;;AAAT;AAAP;AACgB;;AAAT;AAAP;AAGc;;;;AAAA;;;;AAEV;;;;AAFU;;;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;;;;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;;AAMP;;AAAM;;AAAN;AAAP;AACO;;AAbM;;AAaN;AAAP;AACO;;AAAS;AAAT;AAAP;AACO;AAAS;;AAAT;AAAP;AACgB;;AAAT;AAAP;AAGc;;;AAAA;;;;AAEV;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAFU;;;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;;;;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;;AAWP;;AAAM;;;;;;;;;;;AAAN;AAAP;AACO;;AAAM;;;;;;;;;;;;;AAAN;AAAP;AACO;;AAAS;;AAAT;AAAP;AACO;AAAS;;;;;;;;;;AAAT;AAAP;AACgB;;;;;;;;;;AAAT;AAAP;AA5CH;;AAlDA;;AAAA;AAAA;AAAA;;AAAA;AAlOL;;;AAAA;AAqOsB;;;;AAAA;;;;AAEV;;;;AACA;;;;AACA;;;AACA;;;AALU;;;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;;;;AAAA;AAAA;;;AAAA;;;;AAAA;AAAA;;AAAA;;;AASP;;AAAK;;AAAL;AAAP;AACO;;AAAK;;AAAL;AAAP;AACO;;AAAK;AAAL;AAAP;AACO;AAAM;;AAAN;AAAP;AAGgB;AAIZ;AAAA;;;;;AAJY;;;;AAbZ;;;;AACA;;;;;;AAiBA;;;AALY;;;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;;;;AAAA;AAAA;;;AAAA;;;;AAAA;AAAA;;AAAA;;;AAQT;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAP;AAGgB;;;;;AAAA;;;;AAxBZ;;;;AACA;;;;AA2BA;;;AACA;;;AALY;;;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;;;;AAAA;AAAA;;;AAAA;;;;AAAA;AAAA;;AAAA;;;AAQT;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAP;AAGqB;;;;;AAAA;;;;AAnCjB;;;;AACA;;;;AAsCA;;;AACA;;;AALiB;;;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;;;;AAAA;AAAA;;;AAAA;;;;AAAA;AAAA;;AAAA;;;AAQd;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAP;AAhDH;;AA3DA;;AAAA;AAAA;AAAA;;AAAA;AAvKL;;;AAAA;AA0KuB;;;;AAAA;;;;AAIX;;;;AACA;;;;AACA;;;AACA;;;AAPW;;;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;;;AAAA;AAAA;AAAA;AAUD;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;;AACP;;AAAA;;;AAAA;AAAY;;AAAZ;AAAP;AACO;;AAAA;;;AAAA;AAAY;;AAAZ;AAAP;AACO;;;;AAAA;AAAA;AAAY;AAAZ;AAAP;AACO;;AAAa;;AAAb;AAAP;AAGe;AAMX;AAAA;;;;;AANW;;;;AAbX;;;;AACA;;;;;;AAmBA;;;AAPW;;;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAUR;;AAAA;AAAP;AAGe;;;;;AAAA;;;;AA1BX;;;;AACA;;;;AA+BA;;;AACA;;;AAPW;;;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAUR;;AAAA;AAAP;AAGqB;;;;;AAAA;;;;AAvCjB;;;;AACA;;;;AA0CA;;;AACA;;;AALiB;;;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;;;;AAAA;AAAA;;;AAAA;;;;AAAA;AAAA;;AAAA;;;AAQd;;AAAA;;AAAA;AAAP;AACO;;AAAA;;AAAA;AAAP;AACO;;AAAA;AAAP;AACO;AAAP;AAzDH;;AAXA;;AAAA;AAAA;AAAA;;AAAA;AA5JL;;;AAAA;AA8JwB;;;;AAAA;;;;AAA0C;;;AAA1C;;;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AACT;AAAW;;AAAX;AAAP;AAEgB;;;;;AAAA;;;;AAA0C;;;AAA1C;;;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AACT;;AAAA;AAAP;AAEgB;;;;AAAA;;;;AAA0C;;;AAA1C;;;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AACT;AAAP;AATH;;AAXA;;AAAA;AAAA;AAAA;;AAAA;AAjJL;;;AAAA;AAmJwB;;;;AAAA;;;;AAAyC;;;AAAzC;;;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;AACT;AAAW;AAAX;AAAP;AAEgB;AAAyC;AAAA;;;;;AAAzC;;;;;;AAAA;;;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;AACT;;AAAA;AAAP;AAEgB;;;;AAAA;;;;AAAyC;;;AAAzC;;;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;AACT;AAAP;AATH;;AAbA;;AAAA;AAAA;AAAA;;AAAA;AApIL;;;AAAA;AAsIwB;;;;AAAA;;;;AAAwC;;;;AAAxC;;;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AACT;AAAW;;;;;;;;;AAAX;AAAP;AAEgB;;;;;AAAA;;;;AAHwC;;;;AAGxC;;;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AACT;;AAAA;AAAP;AAEgB;;;;AAAA;;;;AANwC;;;;AAMxC;;;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAGT;AAAP;AAXH;;AAXA;;AAAA;AAAA;AAAA;;AAAA;AAzHL;;;AAAA;AA2HwB;;;;AAAA;;;;AAAyC;;;;AAAzC;;;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AACT;AAAW;;;;;;;;;AAAX;AAAP;AAEgB;;;;;AAAA;;;;AAHyC;;;;AAGzC;;;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AACT;;AAAA;AAAP;AAEgB;;;;AAAA;;;;AANyC;;;;AAMzC;;;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AACT;AAAP;AATH;;AATA;;AAAA;AAAA;AAAA;;AAAA;AAhHL;;;AAAA;AAkHc;AAEF;;;;;AAFE;;;;;;;;;;AAAA;;;AAAA;;;AAAA;;;AAKiB;;AAAhB;AAAP;AAPH;;AAdA;;AAAA;AAAA;AAAA;;AAAA;AAlGL;;;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAoGc;AAGF;;;;;;AAHE;;;;;;;;;;;;;;;;;;AAAA;;;AAAA;;;AAAA;;;AASC;AAAA;;AAAA;AAAa;;AAAb;AAAwD;;AAAA;;AAAA;AAAxD;AADH;AADJ;AATH;;AAdA;;AAAA;AAAA;AAAA;;AAAA;AApFL;;;AAAA;AAsFc;;;;AAAA;;;;AAAgD;;;;;;;;;;;;AAAhD;;;AAAA;;;AAAA;;;AACiB;;;;;;;;AAAhB;AAAP;AAEM;;;;AAAA;;;;AAA4C;;;;;;;;;;;;AAA5C;;;AAAA;;;AAAA;;;AACiB;;;;;;;;AAAhB;AAAP;AAEM;;;;AAAA;;;;AAA+B;;;;;;;;;;;;AAA/B;;;AAAA;;;AAAA;;;AACiB;;;;;;;;AAAhB;AAAP;AAEM;;;AAAA;;;;AAAiC;;;;;;;;;;;;AAAjC;;;AAAA;;;AAAA;;;AACiB;;;;;;;;AAAhB;AAAP;AAZH;;AA5BA;;AAAA;AAAA;AAAA;;AAAA;AAxDL;;;AAAA;AA0DsB;;;AAAA;;;;;;;;AAEV;;;AACA;;;;AACA;;;;AACA;;;;;;;;;;;;AACA;;;;;;;;;;;;AACA;;;;;;;;;;;;AACA;;;;;;;;;;;;AACA;;;;;;;;;;;;AACA;;;;;;;;;;;;AACA;;;;;;;;;;;;AACA;;;;;;;;;;;;AACA;;;;;;;;;;;;AACA;;;;;;;;;;;;AACA;;;;;;;;;;;;AACA;;;;AAhBU;;;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAwBP;;;AAAiB;;AAAjB;AAAP;AA1BH;;AAjBA;;AAAA;AAAA;AAAA;;AAAA;AAvCL;;;AAAA;AAyCc;;;;AAAA;;;;AAAiC;;;;;;;;;;;;;;;;AAAjC;;;AAAA;;;AAAA;;;AACiB;;;;;;;;;;;;AAAhB;AAAP;AAEM;;;;AAAA;;;;;;;;AAAiC;;;;AAAjC;;;AAAA;;;AAAA;;;AACyB;AAAR;AAAhB;AAAP;AAEM;;;;AAAA;;;;;;;;AAAkC;;;;AAAlC;;;AAAA;;;AAAA;;;AACkB;;AAAjB;AAAP;AAEM;;;;AAAA;;;;;;;;AAAgC;;;;;;;AAAhC;;;AAAA;;;AAAA;;;AACiB;;;AAAhB;AAAP;AAEM;;;AAAA;;;;;;;;AAA+B;;;;;AAA/B;;;AAAA;;;AAAA;;;AACiB;;;;;;AAAhB;AAAP;AAfH;;AAfA;;AAAA;AAAA;AAAA;;AAAA;AAxBL;;;AAAA;AA0BQ;;;;AAAA;;;AAAiD;;;;;;;;;;;;;;;;;;;;AAAjD;;;AAAA;;;AAAA;AAAA;;AAAA;;;AAAA;AAAA;AAAA;AAC4B;;AAArB;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAA4C;;;;;;;;;;;;;;;;;;;;;;;;AAA5C;AAAP;AAEA;;;;AAAA;;;AAAoC;;;;;;;;;;;;;;;;;;;;;;AAApC;;;AAAA;;;AAAA;AAC4B;;AAArB;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAA4C;;;;;;;;;;;;;;;;;;;;;;;;;;AAA5C;AAAP;AAES;;;;AAAA;;;AAAiD;;;;;;;;;;;AAAjD;;;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;AACF;AAAa;;AAAb;AAAP;AACO;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AADa;;AACb;AAAP;AAEa;;;AAAA;;;AAAoC;;;;;;;;;;;;;AAApC;;;AAAA;;;AAAA;;;AACN;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAA6C;;;;;;;;;;;;;;;;;AAA7C;AAAP;AAbH;;AAdA;;AAAA;AAAA;AAAA;;AAAA;AAVL;;;AAAA;AAauB;;;;AAAA;;;AAA2B;;;;;;;;;;;AAA3B;;;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AACE;;;;;;;;;;;;;;;AAAV;AAAP;AACe;;;;AAAA;;;AAAiC;;;;;;;;;;;AAAjC;;;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AACE;;;;;;;;;;;;;;;AAAV;AAAP;AACe;;;;AAAA;;;AAAmC;;;;;;;;;;;AAAnC;;;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AACE;;;;;;;;;;;;;;;AAAV;AAAP;AACe;;;;AAAA;;;AAA2C;;;;;;;;;;;AAA3C;;;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AACE;;;;;;;;;;;;;;;AAAV;AAAP;AACe;;;AAAA;;;AAAiD;;;;;;;;;;;AAAjD;;;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AACE;;;;;;;;;;;;;;;AAAV;AAAP;AAZH;;AATA;;AAAA;AAAA;AAAA;;AAAA;AADL;;;AAAA;;;AAAA;;;AAAA;AAGQ;;;AAAA;;;;;;;;;;;;;AAAA;;;AAAA;;;AAAA;AAFH;;AADL;;AAAA;;;;;;;;",
  "op_pc_offset": 0,
  "pc_events": {
    "1": {
      "subroutine": "algopy.arc4.ARC4Contract.approval_program",
      "params": {},
      "block": "main",
      "stack_in": [],
      "op": "intcblock 0 6 1 2"
    },
    "7": {
      "op": "bytecblock 0x151f7c75 0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002 0x0000000000000001 0x9bf81913 0x16e03919 0x00027331 0x00026231 0x01 0x0000000000000001000a00056c6f672031 0xb4b4334e \"echo: s1\" 0xd6c2ac7f 0x00 0x48142d5e 0xb862ee19 0xab271ce4 0x0000000000000003 0x03 0xd8cc363b 0xa9fb6cf1 0x2659e818 0x000162 0x4a444c77 0x000173 0xddd07185 0x000000000000002a 0x00040010000400080002733100027332000000000000000100000000000000020012000133 0x00086563686f3a207332 0x6563686f3a2033 0x6563686f3a206231 0x0000000000000002 0x0f101112deadbeef14 0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000003 0x000b6563686f3a207475706c65"
    },
    "381": {
      "op": "txn NumAppArgs",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "383": {
      "op": "bz main_bare_routing@24",
      "stack_out": []
    },
    "386": {
      "op": "pushbytess 0x094418cd 0x31e8e212 0xb5dcf0ba 0xbf3b242b 0x063beac7 0xe9f3087d 0xc88920f9 0xc2f21b73 0x86052a5c 0xe85f2441 0x92082d08 0x6211cd59 0x19eed724 0x92f75ee2 0xe748ef8e 0xc7b94959 0x868e49e7 0xaccd5072 0xf7f3d8ac // method \"test_is_a_b(byte[],byte[],uint64)void\", method \"test_method_selector_kinds(uint64)void\", method \"test_method_overload(uint64)void\", method \"test_arg_conversion(uint64)void\", method \"test_15plus_args(uint64)void\", method \"test_void(uint64)void\", method \"test_ref_types(uint64,uint64)void\", method \"test_account_to_address(uint64)void\", method \"test_native_string(uint64)void\", method \"test_native_bytes(uint64)void\", method \"test_native_uint64(uint64)void\", method \"test_native_biguint(uint64)void\", method \"test_native_tuple(uint64)void\", method \"test_native_tuple_method_ref(uint64)void\", method \"test_nested_tuples(uint64)void\", method \"test_no_args(uint64)void\", method \"test_named_tuples(uint64)void\", method \"test_arc4_struct(uint64)void\", method \"test_resource_encoding(uint64,uint64)void\"",
      "defined_out": [
        "Method(test_15plus_args(uint64)void)",
        "Method(test_account_to_address(uint64)void)",
        "Method(test_arc4_struct(uint64)void)",
        "Method(test_arg_conversion(uint64)void)",
        "Method(test_is_a_b(byte[],byte[],uint64)void)",
        "Method(test_method_overload(uint64)void)",
        "Method(test_method_selector_kinds(uint64)void)",
        "Method(test_named_tuples(uint64)void)",
        "Method(test_native_biguint(uint64)void)",
        "Method(test_native_bytes(uint64)void)",
        "Method(test_native_string(uint64)void)",
        "Method(test_native_tuple(uint64)void)",
        "Method(test_native_tuple_method_ref(uint64)void)",
        "Method(test_native_uint64(uint64)void)",
        "Method(test_nested_tuples(uint64)void)",
        "Method(test_no_args(uint64)void)",
        "Method(test_ref_types(uint64,uint64)void)",
        "Method(test_resource_encoding(uint64,uint64)void)",
        "Method(test_void(uint64)void)"
      ],
      "stack_out": [
        "Method(test_is_a_b(byte[],byte[],uint64)void)",
        "Method(test_method_selector_kinds(uint64)void)",
        "Method(test_method_overload(uint64)void)",
        "Method(test_arg_conversion(uint64)void)",
        "Method(test_15plus_args(uint64)void)",
        "Method(test_void(uint64)void)",
        "Method(test_ref_types(uint64,uint64)void)",
        "Method(test_account_to_address(uint64)void)",
        "Method(test_native_string(uint64)void)",
        "Method(test_native_bytes(uint64)void)",
        "Method(test_native_uint64(uint64)void)",
        "Method(test_native_biguint(uint64)void)",
        "Method(test_native_tuple(uint64)void)",
        "Method(test_native_tuple_method_ref(uint64)void)",
        "Method(test_nested_tuples(uint64)void)",
        "Method(test_no_args(uint64)void)",
        "Method(test_named_tuples(uint64)void)",
        "Method(test_arc4_struct(uint64)void)",
        "Method(test_resource_encoding(uint64,uint64)void)"
      ]
    },
    "483": {
      "op": "txna ApplicationArgs 0",
      "defined_out": [
        "Method(test_15plus_args(uint64)void)",
        "Method(test_account_to_address(uint64)void)",
        "Method(test_arc4_struct(uint64)void)",
        "Method(test_arg_conversion(uint64)void)",
        "Method(test_is_a_b(byte[],byte[],uint64)void)",
        "Method(test_method_overload(uint64)void)",
        "Method(test_method_selector_kinds(uint64)void)",
        "Method(test_named_tuples(uint64)void)",
        "Method(test_native_biguint(uint64)void)",
        "Method(test_native_bytes(uint64)void)",
        "Method(test_native_string(uint64)void)",
        "Method(test_native_tuple(uint64)void)",
        "Method(test_native_tuple_method_ref(uint64)void)",
        "Method(test_native_uint64(uint64)void)",
        "Method(test_nested_tuples(uint64)void)",
        "Method(test_no_args(uint64)void)",
        "Method(test_ref_types(uint64,uint64)void)",
        "Method(test_resource_encoding(uint64,uint64)void)",
        "Method(test_void(uint64)void)",
        "tmp%2#0"
      ],
      "stack_out": [
        "Method(test_is_a_b(byte[],byte[],uint64)void)",
        "Method(test_method_selector_kinds(uint64)void)",
        "Method(test_method_overload(uint64)void)",
        "Method(test_arg_conversion(uint64)void)",
        "Method(test_15plus_args(uint64)void)",
        "Method(test_void(uint64)void)",
        "Method(test_ref_types(uint64,uint64)void)",
        "Method(test_account_to_address(uint64)void)",
        "Method(test_native_string(uint64)void)",
        "Method(test_native_bytes(uint64)void)",
        "Method(test_native_uint64(uint64)void)",
        "Method(test_native_biguint(uint64)void)",
        "Method(test_native_tuple(uint64)void)",
        "Method(test_native_tuple_method_ref(uint64)void)",
        "Method(test_nested_tuples(uint64)void)",
        "Method(test_no_args(uint64)void)",
        "Method(test_named_tuples(uint64)void)",
        "Method(test_arc4_struct(uint64)void)",
        "Method(test_resource_encoding(uint64,uint64)void)",
        "tmp%2#0"
      ]
    },
    "486": {
      "op": "match main_test_is_a_b_route@3 main_test_method_selector_kinds_route@4 main_test_method_overload_route@5 main_test_arg_conversion_route@6 main_test_15plus_args_route@7 main_test_void_route@8 main_test_ref_types_route@9 main_test_account_to_address_route@10 main_test_native_string_route@11 main_test_native_bytes_route@12 main_test_native_uint64_route@13 main_test_native_biguint_route@14 main_test_native_tuple_route@15 main_test_native_tuple_method_ref_route@16 main_test_nested_tuples_route@17 main_test_no_args_route@18 main_test_named_tuples_route@19 main_test_arc4_struct_route@20 main_test_resource_encoding_route@21",
      "stack_out": []
    },
    "526": {
      "block": "main_after_if_else@28",
      "stack_in": [],
      "op": "err",
      "defined_out": []
    },
    "527": {
      "block": "main_test_resource_encoding_route@21",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%96#0"
      ],
      "stack_out": [
        "tmp%96#0"
      ]
    },
    "529": {
      "op": "!",
      "defined_out": [
        "tmp%97#0"
      ],
      "stack_out": [
        "tmp%97#0"
      ]
    },
    "530": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "531": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%98#0"
      ],
      "stack_out": [
        "tmp%98#0"
      ]
    },
    "533": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "534": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded(uint64)%19#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint64)%19#0"
      ]
    },
    "537": {
      "op": "btoi",
      "defined_out": [
        "app_to_call#0"
      ],
      "stack_out": [
        "app_to_call#0"
      ]
    },
    "538": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0"
      ],
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0"
      ]
    },
    "541": {
      "op": "dup",
      "defined_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "reinterpret_Encoded(uint64)%20#0 (copy)"
      ],
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "reinterpret_Encoded(uint64)%20#0 (copy)"
      ]
    },
    "542": {
      "op": "btoi",
      "defined_out": [
        "app_to_call#0",
        "asset#0",
        "reinterpret_Encoded(uint64)%20#0"
      ],
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0"
      ]
    },
    "543": {
      "op": "global CurrentApplicationID",
      "defined_out": [
        "app#0",
        "app_to_call#0",
        "asset#0",
        "reinterpret_Encoded(uint64)%20#0"
      ],
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0"
      ]
    },
    "545": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "acc#0",
        "app#0",
        "app_to_call#0",
        "asset#0",
        "reinterpret_Encoded(uint64)%20#0"
      ],
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0"
      ]
    },
    "547": {
      "op": "itxn_begin"
    },
    "548": {
      "op": "dig 4",
      "defined_out": [
        "acc#0",
        "app#0",
        "app_to_call#0",
        "app_to_call#0 (copy)",
        "asset#0",
        "reinterpret_Encoded(uint64)%20#0"
      ],
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "app_to_call#0 (copy)"
      ]
    },
    "550": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0"
      ]
    },
    "552": {
      "op": "dig 2",
      "defined_out": [
        "acc#0",
        "app#0",
        "app_to_call#0",
        "asset#0",
        "asset#0 (copy)",
        "reinterpret_Encoded(uint64)%20#0"
      ],
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "asset#0 (copy)"
      ]
    },
    "554": {
      "op": "itxn_field Assets",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0"
      ]
    },
    "556": {
      "op": "dig 1",
      "defined_out": [
        "acc#0",
        "app#0",
        "app#0 (copy)",
        "app_to_call#0",
        "asset#0",
        "reinterpret_Encoded(uint64)%20#0"
      ],
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "app#0 (copy)"
      ]
    },
    "558": {
      "op": "itxn_field Applications",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0"
      ]
    },
    "560": {
      "op": "dup",
      "defined_out": [
        "acc#0",
        "acc#0 (copy)",
        "app#0",
        "app_to_call#0",
        "asset#0",
        "reinterpret_Encoded(uint64)%20#0"
      ],
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "acc#0 (copy)"
      ]
    },
    "561": {
      "op": "itxn_field Accounts",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0"
      ]
    },
    "563": {
      "op": "bytec 11 // method \"echo_resource_by_index(asset,application,account)(uint64,uint64,address)\"",
      "defined_out": [
        "Method(echo_resource_by_index(asset,application,account)(uint64,uint64,address))",
        "acc#0",
        "app#0",
        "app_to_call#0",
        "asset#0",
        "reinterpret_Encoded(uint64)%20#0"
      ],
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "Method(echo_resource_by_index(asset,application,account)(uint64,uint64,address))"
      ]
    },
    "565": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0"
      ]
    },
    "567": {
      "op": "bytec 12 // 0x00",
      "defined_out": [
        "0x00",
        "acc#0",
        "app#0",
        "app_to_call#0",
        "asset#0",
        "reinterpret_Encoded(uint64)%20#0"
      ],
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "0x00"
      ]
    },
    "569": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0"
      ]
    },
    "571": {
      "op": "bytec 7 // 0x01",
      "defined_out": [
        "0x01",
        "acc#0",
        "app#0",
        "app_to_call#0",
        "asset#0",
        "reinterpret_Encoded(uint64)%20#0"
      ],
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "0x01"
      ]
    },
    "573": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0"
      ]
    },
    "575": {
      "op": "bytec 7 // 0x01",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "0x01"
      ]
    },
    "577": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0"
      ]
    },
    "579": {
      "op": "intc_1 // appl",
      "defined_out": [
        "acc#0",
        "app#0",
        "app_to_call#0",
        "appl",
        "asset#0",
        "reinterpret_Encoded(uint64)%20#0"
      ],
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "appl"
      ]
    },
    "580": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0"
      ]
    },
    "582": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "acc#0",
        "app#0",
        "app_to_call#0",
        "asset#0",
        "reinterpret_Encoded(uint64)%20#0"
      ],
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "0"
      ]
    },
    "583": {
      "op": "itxn_field Fee",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0"
      ]
    },
    "585": {
      "op": "itxn_submit"
    },
    "586": {
      "op": "itxn LastLog",
      "defined_out": [
        "acc#0",
        "app#0",
        "app_to_call#0",
        "asset#0",
        "awst_tmp%0#0",
        "reinterpret_Encoded(uint64)%20#0"
      ],
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "awst_tmp%0#0"
      ]
    },
    "588": {
      "op": "dup",
      "defined_out": [
        "acc#0",
        "app#0",
        "app_to_call#0",
        "asset#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)",
        "reinterpret_Encoded(uint64)%20#0"
      ],
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ]
    },
    "589": {
      "op": "extract 0 4",
      "defined_out": [
        "acc#0",
        "app#0",
        "app_to_call#0",
        "asset#0",
        "awst_tmp%0#0",
        "reinterpret_Encoded(uint64)%20#0",
        "tmp%3#1"
      ],
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "awst_tmp%0#0",
        "tmp%3#1"
      ]
    },
    "592": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "acc#0",
        "app#0",
        "app_to_call#0",
        "asset#0",
        "awst_tmp%0#0",
        "reinterpret_Encoded(uint64)%20#0",
        "tmp%3#1"
      ],
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "awst_tmp%0#0",
        "tmp%3#1",
        "0x151f7c75"
      ]
    },
    "593": {
      "op": "==",
      "defined_out": [
        "acc#0",
        "app#0",
        "app_to_call#0",
        "asset#0",
        "awst_tmp%0#0",
        "reinterpret_Encoded(uint64)%20#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "awst_tmp%0#0",
        "tmp%4#0"
      ]
    },
    "594": {
      "error": "application log value is not the result of an ABI return",
      "op": "assert // application log value is not the result of an ABI return",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "awst_tmp%0#0"
      ]
    },
    "595": {
      "op": "dup",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ]
    },
    "596": {
      "op": "pushint 4 // 4",
      "defined_out": [
        "4",
        "acc#0",
        "app#0",
        "app_to_call#0",
        "asset#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)",
        "reinterpret_Encoded(uint64)%20#0"
      ],
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)",
        "4"
      ]
    },
    "598": {
      "op": "extract_uint64",
      "defined_out": [
        "acc#0",
        "app#0",
        "app_to_call#0",
        "asset#0",
        "awst_tmp%0#0",
        "reinterpret_Encoded(uint64)%20#0",
        "result.0#0"
      ],
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "awst_tmp%0#0",
        "result.0#0"
      ]
    },
    "599": {
      "op": "dig 1",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "awst_tmp%0#0",
        "result.0#0",
        "awst_tmp%0#0 (copy)"
      ]
    },
    "601": {
      "op": "pushint 12 // 12",
      "defined_out": [
        "12",
        "acc#0",
        "app#0",
        "app_to_call#0",
        "asset#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)",
        "reinterpret_Encoded(uint64)%20#0",
        "result.0#0"
      ],
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "awst_tmp%0#0",
        "result.0#0",
        "awst_tmp%0#0 (copy)",
        "12"
      ]
    },
    "603": {
      "op": "extract_uint64",
      "defined_out": [
        "acc#0",
        "app#0",
        "app_to_call#0",
        "asset#0",
        "awst_tmp%0#0",
        "reinterpret_Encoded(uint64)%20#0",
        "result.0#0",
        "result.1#0"
      ],
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "awst_tmp%0#0",
        "result.0#0",
        "result.1#0"
      ]
    },
    "604": {
      "op": "uncover 2",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "result.0#0",
        "result.1#0",
        "awst_tmp%0#0"
      ]
    },
    "606": {
      "op": "extract 20 32",
      "defined_out": [
        "acc#0",
        "app#0",
        "app_to_call#0",
        "asset#0",
        "reinterpret_Encoded(uint64)%20#0",
        "result.0#0",
        "result.1#0",
        "result.2#0"
      ],
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "result.0#0",
        "result.1#0",
        "result.2#0"
      ]
    },
    "609": {
      "op": "uncover 2",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "result.1#0",
        "result.2#0",
        "result.0#0"
      ]
    },
    "611": {
      "op": "dig 5",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "result.1#0",
        "result.2#0",
        "result.0#0",
        "asset#0 (copy)"
      ]
    },
    "613": {
      "op": "==",
      "defined_out": [
        "acc#0",
        "app#0",
        "app_to_call#0",
        "asset#0",
        "reinterpret_Encoded(uint64)%20#0",
        "result.1#0",
        "result.2#0",
        "tmp%8#1"
      ],
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "result.1#0",
        "result.2#0",
        "tmp%8#1"
      ]
    },
    "614": {
      "op": "uncover 2",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "result.2#0",
        "tmp%8#1",
        "result.1#0"
      ]
    },
    "616": {
      "op": "dig 4",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "result.2#0",
        "tmp%8#1",
        "result.1#0",
        "app#0 (copy)"
      ]
    },
    "618": {
      "op": "==",
      "defined_out": [
        "acc#0",
        "app#0",
        "app_to_call#0",
        "asset#0",
        "reinterpret_Encoded(uint64)%20#0",
        "result.2#0",
        "tmp%8#1",
        "tmp%9#1"
      ],
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "result.2#0",
        "tmp%8#1",
        "tmp%9#1"
      ]
    },
    "619": {
      "op": "&&",
      "defined_out": [
        "acc#0",
        "app#0",
        "app_to_call#0",
        "asset#0",
        "reinterpret_Encoded(uint64)%20#0",
        "result.2#0",
        "tmp%10#1"
      ],
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "result.2#0",
        "tmp%10#1"
      ]
    },
    "620": {
      "op": "swap",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "tmp%10#1",
        "result.2#0"
      ]
    },
    "621": {
      "op": "dig 2",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "tmp%10#1",
        "result.2#0",
        "acc#0 (copy)"
      ]
    },
    "623": {
      "op": "==",
      "defined_out": [
        "acc#0",
        "app#0",
        "app_to_call#0",
        "asset#0",
        "reinterpret_Encoded(uint64)%20#0",
        "tmp%10#1",
        "tmp%11#0"
      ],
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "tmp%10#1",
        "tmp%11#0"
      ]
    },
    "624": {
      "op": "&&",
      "defined_out": [
        "acc#0",
        "app#0",
        "app_to_call#0",
        "asset#0",
        "reinterpret_Encoded(uint64)%20#0",
        "tmp%12#1"
      ],
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "tmp%12#1"
      ]
    },
    "625": {
      "error": "expected echo to return same resources",
      "op": "assert // expected echo to return same resources",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0"
      ]
    },
    "626": {
      "op": "itxn_begin"
    },
    "627": {
      "op": "dig 1",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "app#0 (copy)"
      ]
    },
    "629": {
      "op": "itob",
      "defined_out": [
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "app#0",
        "app_to_call#0",
        "asset#0",
        "reinterpret_Encoded(uint64)%20#0"
      ],
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0"
      ]
    },
    "630": {
      "op": "dig 5",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "app_to_call#0 (copy)"
      ]
    },
    "632": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0"
      ]
    },
    "634": {
      "op": "bytec 13 // method \"echo_resource_by_value(uint64,uint64,address)(uint64,uint64,address)\"",
      "defined_out": [
        "Method(echo_resource_by_value(uint64,uint64,address)(uint64,uint64,address))",
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "app#0",
        "app_to_call#0",
        "asset#0",
        "reinterpret_Encoded(uint64)%20#0"
      ],
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "Method(echo_resource_by_value(uint64,uint64,address)(uint64,uint64,address))"
      ]
    },
    "636": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0"
      ]
    },
    "638": {
      "op": "dig 4",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "reinterpret_Encoded(uint64)%20#0 (copy)"
      ]
    },
    "640": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0"
      ]
    },
    "642": {
      "op": "dup",
      "defined_out": [
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "aggregate%val_as_bytes%7#0 (copy)",
        "app#0",
        "app_to_call#0",
        "asset#0",
        "reinterpret_Encoded(uint64)%20#0"
      ],
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "aggregate%val_as_bytes%7#0 (copy)"
      ]
    },
    "643": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0"
      ]
    },
    "645": {
      "op": "dig 1",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "acc#0 (copy)"
      ]
    },
    "647": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0"
      ]
    },
    "649": {
      "op": "intc_1 // appl",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "appl"
      ]
    },
    "650": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0"
      ]
    },
    "652": {
      "op": "intc_0 // 0",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "0"
      ]
    },
    "653": {
      "op": "itxn_field Fee",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0"
      ]
    },
    "655": {
      "op": "itxn_submit"
    },
    "656": {
      "op": "itxn LastLog",
      "defined_out": [
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "app#0",
        "app_to_call#0",
        "asset#0",
        "awst_tmp%1#0",
        "reinterpret_Encoded(uint64)%20#0"
      ],
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "awst_tmp%1#0"
      ]
    },
    "658": {
      "op": "dup",
      "defined_out": [
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "app#0",
        "app_to_call#0",
        "asset#0",
        "awst_tmp%1#0",
        "awst_tmp%1#0 (copy)",
        "reinterpret_Encoded(uint64)%20#0"
      ],
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "awst_tmp%1#0",
        "awst_tmp%1#0 (copy)"
      ]
    },
    "659": {
      "op": "extract 0 4",
      "defined_out": [
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "app#0",
        "app_to_call#0",
        "asset#0",
        "awst_tmp%1#0",
        "reinterpret_Encoded(uint64)%20#0",
        "tmp%17#1"
      ],
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "awst_tmp%1#0",
        "tmp%17#1"
      ]
    },
    "662": {
      "op": "bytec_0 // 0x151f7c75",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "awst_tmp%1#0",
        "tmp%17#1",
        "0x151f7c75"
      ]
    },
    "663": {
      "op": "==",
      "defined_out": [
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "app#0",
        "app_to_call#0",
        "asset#0",
        "awst_tmp%1#0",
        "reinterpret_Encoded(uint64)%20#0",
        "tmp%18#1"
      ],
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "awst_tmp%1#0",
        "tmp%18#1"
      ]
    },
    "664": {
      "error": "application log value is not the result of an ABI return",
      "op": "assert // application log value is not the result of an ABI return",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "awst_tmp%1#0"
      ]
    },
    "665": {
      "op": "dup",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "awst_tmp%1#0",
        "awst_tmp%1#0 (copy)"
      ]
    },
    "666": {
      "op": "pushint 4 // 4",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "awst_tmp%1#0",
        "awst_tmp%1#0 (copy)",
        "4"
      ]
    },
    "668": {
      "op": "extract_uint64",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "awst_tmp%1#0",
        "result.0#0"
      ]
    },
    "669": {
      "op": "dig 1",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "awst_tmp%1#0",
        "result.0#0",
        "awst_tmp%1#0 (copy)"
      ]
    },
    "671": {
      "op": "pushint 12 // 12",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "awst_tmp%1#0",
        "result.0#0",
        "awst_tmp%1#0 (copy)",
        "12"
      ]
    },
    "673": {
      "op": "extract_uint64",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "awst_tmp%1#0",
        "result.0#0",
        "result.1#0"
      ]
    },
    "674": {
      "op": "uncover 2",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "result.0#0",
        "result.1#0",
        "awst_tmp%1#0"
      ]
    },
    "676": {
      "op": "extract 20 32",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "result.0#0",
        "result.1#0",
        "result.2#0"
      ]
    },
    "679": {
      "op": "uncover 2",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "result.1#0",
        "result.2#0",
        "result.0#0"
      ]
    },
    "681": {
      "op": "dig 6",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "result.1#0",
        "result.2#0",
        "result.0#0",
        "asset#0 (copy)"
      ]
    },
    "683": {
      "op": "==",
      "defined_out": [
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "app#0",
        "app_to_call#0",
        "asset#0",
        "reinterpret_Encoded(uint64)%20#0",
        "result.1#0",
        "result.2#0",
        "tmp%22#1"
      ],
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "result.1#0",
        "result.2#0",
        "tmp%22#1"
      ]
    },
    "684": {
      "op": "uncover 2",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "result.2#0",
        "tmp%22#1",
        "result.1#0"
      ]
    },
    "686": {
      "op": "dig 5",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "result.2#0",
        "tmp%22#1",
        "result.1#0",
        "app#0 (copy)"
      ]
    },
    "688": {
      "op": "==",
      "defined_out": [
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "app#0",
        "app_to_call#0",
        "asset#0",
        "reinterpret_Encoded(uint64)%20#0",
        "result.2#0",
        "tmp%22#1",
        "tmp%23#1"
      ],
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "result.2#0",
        "tmp%22#1",
        "tmp%23#1"
      ]
    },
    "689": {
      "op": "&&",
      "defined_out": [
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "app#0",
        "app_to_call#0",
        "asset#0",
        "reinterpret_Encoded(uint64)%20#0",
        "result.2#0",
        "tmp%24#1"
      ],
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "result.2#0",
        "tmp%24#1"
      ]
    },
    "690": {
      "op": "swap",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "tmp%24#1",
        "result.2#0"
      ]
    },
    "691": {
      "op": "dig 3",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "tmp%24#1",
        "result.2#0",
        "acc#0 (copy)"
      ]
    },
    "693": {
      "op": "==",
      "defined_out": [
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "app#0",
        "app_to_call#0",
        "asset#0",
        "reinterpret_Encoded(uint64)%20#0",
        "tmp%24#1",
        "tmp%25#1"
      ],
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "tmp%24#1",
        "tmp%25#1"
      ]
    },
    "694": {
      "op": "&&",
      "defined_out": [
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "app#0",
        "app_to_call#0",
        "asset#0",
        "reinterpret_Encoded(uint64)%20#0",
        "tmp%26#0"
      ],
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "tmp%26#0"
      ]
    },
    "695": {
      "error": "expected echo to return same resources",
      "op": "assert // expected echo to return same resources",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0"
      ]
    },
    "696": {
      "op": "itxn_begin"
    },
    "697": {
      "op": "dig 5",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "app_to_call#0 (copy)"
      ]
    },
    "699": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0"
      ]
    },
    "701": {
      "op": "dig 3",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "asset#0 (copy)"
      ]
    },
    "703": {
      "op": "itxn_field Assets",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0"
      ]
    },
    "705": {
      "op": "dig 2",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "app#0 (copy)"
      ]
    },
    "707": {
      "op": "itxn_field Applications",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0"
      ]
    },
    "709": {
      "op": "dig 1",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "acc#0 (copy)"
      ]
    },
    "711": {
      "op": "itxn_field Accounts",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0"
      ]
    },
    "713": {
      "op": "bytec 11 // method \"echo_resource_by_index(asset,application,account)(uint64,uint64,address)\"",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "Method(echo_resource_by_index(asset,application,account)(uint64,uint64,address))"
      ]
    },
    "715": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0"
      ]
    },
    "717": {
      "op": "bytec 12 // 0x00",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "0x00"
      ]
    },
    "719": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0"
      ]
    },
    "721": {
      "op": "bytec 7 // 0x01",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "0x01"
      ]
    },
    "723": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0"
      ]
    },
    "725": {
      "op": "bytec 7 // 0x01",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "0x01"
      ]
    },
    "727": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0"
      ]
    },
    "729": {
      "op": "intc_1 // appl",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "appl"
      ]
    },
    "730": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0"
      ]
    },
    "732": {
      "op": "intc_0 // 0",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "0"
      ]
    },
    "733": {
      "op": "itxn_field Fee",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0"
      ]
    },
    "735": {
      "op": "itxn_submit"
    },
    "736": {
      "op": "itxn LastLog",
      "defined_out": [
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "app#0",
        "app_to_call#0",
        "asset#0",
        "awst_tmp%2#0",
        "reinterpret_Encoded(uint64)%20#0"
      ],
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "awst_tmp%2#0"
      ]
    },
    "738": {
      "op": "dup",
      "defined_out": [
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "app#0",
        "app_to_call#0",
        "asset#0",
        "awst_tmp%2#0",
        "awst_tmp%2#0 (copy)",
        "reinterpret_Encoded(uint64)%20#0"
      ],
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "awst_tmp%2#0",
        "awst_tmp%2#0 (copy)"
      ]
    },
    "739": {
      "op": "extract 0 4",
      "defined_out": [
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "app#0",
        "app_to_call#0",
        "asset#0",
        "awst_tmp%2#0",
        "reinterpret_Encoded(uint64)%20#0",
        "tmp%28#1"
      ],
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "awst_tmp%2#0",
        "tmp%28#1"
      ]
    },
    "742": {
      "op": "bytec_0 // 0x151f7c75",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "awst_tmp%2#0",
        "tmp%28#1",
        "0x151f7c75"
      ]
    },
    "743": {
      "op": "==",
      "defined_out": [
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "app#0",
        "app_to_call#0",
        "asset#0",
        "awst_tmp%2#0",
        "reinterpret_Encoded(uint64)%20#0",
        "tmp%29#1"
      ],
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "awst_tmp%2#0",
        "tmp%29#1"
      ]
    },
    "744": {
      "error": "application log value is not the result of an ABI return",
      "op": "assert // application log value is not the result of an ABI return",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "awst_tmp%2#0"
      ]
    },
    "745": {
      "op": "dup",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "awst_tmp%2#0",
        "awst_tmp%2#0 (copy)"
      ]
    },
    "746": {
      "op": "pushint 4 // 4",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "awst_tmp%2#0",
        "awst_tmp%2#0 (copy)",
        "4"
      ]
    },
    "748": {
      "op": "extract_uint64",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "awst_tmp%2#0",
        "result.0#0"
      ]
    },
    "749": {
      "op": "dig 1",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "awst_tmp%2#0",
        "result.0#0",
        "awst_tmp%2#0 (copy)"
      ]
    },
    "751": {
      "op": "pushint 12 // 12",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "awst_tmp%2#0",
        "result.0#0",
        "awst_tmp%2#0 (copy)",
        "12"
      ]
    },
    "753": {
      "op": "extract_uint64",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "awst_tmp%2#0",
        "result.0#0",
        "result.1#0"
      ]
    },
    "754": {
      "op": "uncover 2",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "result.0#0",
        "result.1#0",
        "awst_tmp%2#0"
      ]
    },
    "756": {
      "op": "extract 20 32",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "result.0#0",
        "result.1#0",
        "result.2#0"
      ]
    },
    "759": {
      "op": "uncover 2",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "result.1#0",
        "result.2#0",
        "result.0#0"
      ]
    },
    "761": {
      "op": "dig 6",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "result.1#0",
        "result.2#0",
        "result.0#0",
        "asset#0 (copy)"
      ]
    },
    "763": {
      "op": "==",
      "defined_out": [
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "app#0",
        "app_to_call#0",
        "asset#0",
        "reinterpret_Encoded(uint64)%20#0",
        "result.1#0",
        "result.2#0",
        "tmp%33#1"
      ],
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "result.1#0",
        "result.2#0",
        "tmp%33#1"
      ]
    },
    "764": {
      "op": "uncover 2",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "result.2#0",
        "tmp%33#1",
        "result.1#0"
      ]
    },
    "766": {
      "op": "dig 5",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "result.2#0",
        "tmp%33#1",
        "result.1#0",
        "app#0 (copy)"
      ]
    },
    "768": {
      "op": "==",
      "defined_out": [
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "app#0",
        "app_to_call#0",
        "asset#0",
        "reinterpret_Encoded(uint64)%20#0",
        "result.2#0",
        "tmp%33#1",
        "tmp%34#1"
      ],
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "result.2#0",
        "tmp%33#1",
        "tmp%34#1"
      ]
    },
    "769": {
      "op": "&&",
      "defined_out": [
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "app#0",
        "app_to_call#0",
        "asset#0",
        "reinterpret_Encoded(uint64)%20#0",
        "result.2#0",
        "tmp%35#1"
      ],
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "result.2#0",
        "tmp%35#1"
      ]
    },
    "770": {
      "op": "swap",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "tmp%35#1",
        "result.2#0"
      ]
    },
    "771": {
      "op": "dig 3",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "tmp%35#1",
        "result.2#0",
        "acc#0 (copy)"
      ]
    },
    "773": {
      "op": "==",
      "defined_out": [
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "app#0",
        "app_to_call#0",
        "asset#0",
        "reinterpret_Encoded(uint64)%20#0",
        "tmp%35#1",
        "tmp%36#0"
      ],
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "tmp%35#1",
        "tmp%36#0"
      ]
    },
    "774": {
      "op": "&&",
      "defined_out": [
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "app#0",
        "app_to_call#0",
        "asset#0",
        "reinterpret_Encoded(uint64)%20#0",
        "tmp%37#1"
      ],
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "tmp%37#1"
      ]
    },
    "775": {
      "error": "expected echo to return same resources",
      "op": "assert // expected echo to return same resources",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0"
      ]
    },
    "776": {
      "op": "itxn_begin"
    },
    "777": {
      "op": "dig 5",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "app_to_call#0 (copy)"
      ]
    },
    "779": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0"
      ]
    },
    "781": {
      "op": "bytec 13 // method \"echo_resource_by_value(uint64,uint64,address)(uint64,uint64,address)\"",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "Method(echo_resource_by_value(uint64,uint64,address)(uint64,uint64,address))"
      ]
    },
    "783": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0"
      ]
    },
    "785": {
      "op": "dig 4",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "reinterpret_Encoded(uint64)%20#0 (copy)"
      ]
    },
    "787": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0"
      ]
    },
    "789": {
      "op": "dup",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "aggregate%val_as_bytes%7#0 (copy)"
      ]
    },
    "790": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0"
      ]
    },
    "792": {
      "op": "dig 1",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "acc#0 (copy)"
      ]
    },
    "794": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0"
      ]
    },
    "796": {
      "op": "intc_1 // appl",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "appl"
      ]
    },
    "797": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0"
      ]
    },
    "799": {
      "op": "intc_0 // 0",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "0"
      ]
    },
    "800": {
      "op": "itxn_field Fee",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0"
      ]
    },
    "802": {
      "op": "itxn_submit"
    },
    "803": {
      "op": "itxn LastLog",
      "defined_out": [
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "app#0",
        "app_to_call#0",
        "asset#0",
        "awst_tmp%3#0",
        "reinterpret_Encoded(uint64)%20#0"
      ],
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "awst_tmp%3#0"
      ]
    },
    "805": {
      "op": "dup",
      "defined_out": [
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "app#0",
        "app_to_call#0",
        "asset#0",
        "awst_tmp%3#0",
        "awst_tmp%3#0 (copy)",
        "reinterpret_Encoded(uint64)%20#0"
      ],
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "awst_tmp%3#0",
        "awst_tmp%3#0 (copy)"
      ]
    },
    "806": {
      "op": "extract 0 4",
      "defined_out": [
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "app#0",
        "app_to_call#0",
        "asset#0",
        "awst_tmp%3#0",
        "reinterpret_Encoded(uint64)%20#0",
        "tmp%42#1"
      ],
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "awst_tmp%3#0",
        "tmp%42#1"
      ]
    },
    "809": {
      "op": "bytec_0 // 0x151f7c75",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "awst_tmp%3#0",
        "tmp%42#1",
        "0x151f7c75"
      ]
    },
    "810": {
      "op": "==",
      "defined_out": [
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "app#0",
        "app_to_call#0",
        "asset#0",
        "awst_tmp%3#0",
        "reinterpret_Encoded(uint64)%20#0",
        "tmp%43#1"
      ],
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "awst_tmp%3#0",
        "tmp%43#1"
      ]
    },
    "811": {
      "error": "application log value is not the result of an ABI return",
      "op": "assert // application log value is not the result of an ABI return",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "awst_tmp%3#0"
      ]
    },
    "812": {
      "op": "dup",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "awst_tmp%3#0",
        "awst_tmp%3#0 (copy)"
      ]
    },
    "813": {
      "op": "pushint 4 // 4",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "awst_tmp%3#0",
        "awst_tmp%3#0 (copy)",
        "4"
      ]
    },
    "815": {
      "op": "extract_uint64",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "awst_tmp%3#0",
        "result.0#0"
      ]
    },
    "816": {
      "op": "dig 1",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "awst_tmp%3#0",
        "result.0#0",
        "awst_tmp%3#0 (copy)"
      ]
    },
    "818": {
      "op": "pushint 12 // 12",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "awst_tmp%3#0",
        "result.0#0",
        "awst_tmp%3#0 (copy)",
        "12"
      ]
    },
    "820": {
      "op": "extract_uint64",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "awst_tmp%3#0",
        "result.0#0",
        "result.1#0"
      ]
    },
    "821": {
      "op": "uncover 2",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "result.0#0",
        "result.1#0",
        "awst_tmp%3#0"
      ]
    },
    "823": {
      "op": "extract 20 32",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "result.0#0",
        "result.1#0",
        "result.2#0"
      ]
    },
    "826": {
      "op": "uncover 2",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "result.1#0",
        "result.2#0",
        "result.0#0"
      ]
    },
    "828": {
      "op": "dig 6",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "result.1#0",
        "result.2#0",
        "result.0#0",
        "asset#0 (copy)"
      ]
    },
    "830": {
      "op": "==",
      "defined_out": [
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "app#0",
        "app_to_call#0",
        "asset#0",
        "reinterpret_Encoded(uint64)%20#0",
        "result.1#0",
        "result.2#0",
        "tmp%47#0"
      ],
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "result.1#0",
        "result.2#0",
        "tmp%47#0"
      ]
    },
    "831": {
      "op": "uncover 2",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "result.2#0",
        "tmp%47#0",
        "result.1#0"
      ]
    },
    "833": {
      "op": "dig 5",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "result.2#0",
        "tmp%47#0",
        "result.1#0",
        "app#0 (copy)"
      ]
    },
    "835": {
      "op": "==",
      "defined_out": [
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "app#0",
        "app_to_call#0",
        "asset#0",
        "reinterpret_Encoded(uint64)%20#0",
        "result.2#0",
        "tmp%47#0",
        "tmp%48#1"
      ],
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "result.2#0",
        "tmp%47#0",
        "tmp%48#1"
      ]
    },
    "836": {
      "op": "&&",
      "defined_out": [
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "app#0",
        "app_to_call#0",
        "asset#0",
        "reinterpret_Encoded(uint64)%20#0",
        "result.2#0",
        "tmp%49#1"
      ],
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "result.2#0",
        "tmp%49#1"
      ]
    },
    "837": {
      "op": "swap",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "tmp%49#1",
        "result.2#0"
      ]
    },
    "838": {
      "op": "dig 3",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "tmp%49#1",
        "result.2#0",
        "acc#0 (copy)"
      ]
    },
    "840": {
      "op": "==",
      "defined_out": [
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "app#0",
        "app_to_call#0",
        "asset#0",
        "reinterpret_Encoded(uint64)%20#0",
        "tmp%49#1",
        "tmp%50#1"
      ],
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "tmp%49#1",
        "tmp%50#1"
      ]
    },
    "841": {
      "op": "&&",
      "defined_out": [
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "app#0",
        "app_to_call#0",
        "asset#0",
        "reinterpret_Encoded(uint64)%20#0",
        "tmp%51#1"
      ],
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "tmp%51#1"
      ]
    },
    "842": {
      "error": "expected echo to return same resources",
      "op": "assert // expected echo to return same resources",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0"
      ]
    },
    "843": {
      "op": "itxn_begin"
    },
    "844": {
      "op": "dig 5",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "app_to_call#0 (copy)"
      ]
    },
    "846": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0"
      ]
    },
    "848": {
      "op": "dig 3",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "asset#0 (copy)"
      ]
    },
    "850": {
      "op": "itxn_field Assets",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0"
      ]
    },
    "852": {
      "op": "dig 2",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "app#0 (copy)"
      ]
    },
    "854": {
      "op": "itxn_field Applications",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0"
      ]
    },
    "856": {
      "op": "dig 1",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "acc#0 (copy)"
      ]
    },
    "858": {
      "op": "itxn_field Accounts",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0"
      ]
    },
    "860": {
      "op": "bytec 11 // method \"echo_resource_by_index(asset,application,account)(uint64,uint64,address)\"",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "Method(echo_resource_by_index(asset,application,account)(uint64,uint64,address))"
      ]
    },
    "862": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0"
      ]
    },
    "864": {
      "op": "bytec 12 // 0x00",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "0x00"
      ]
    },
    "866": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0"
      ]
    },
    "868": {
      "op": "bytec 7 // 0x01",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "0x01"
      ]
    },
    "870": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0"
      ]
    },
    "872": {
      "op": "bytec 7 // 0x01",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "0x01"
      ]
    },
    "874": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0"
      ]
    },
    "876": {
      "op": "intc_1 // appl",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "appl"
      ]
    },
    "877": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0"
      ]
    },
    "879": {
      "op": "intc_0 // 0",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "0"
      ]
    },
    "880": {
      "op": "itxn_field Fee",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0"
      ]
    },
    "882": {
      "op": "itxn_submit"
    },
    "883": {
      "op": "itxn LastLog",
      "defined_out": [
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "app#0",
        "app_to_call#0",
        "asset#0",
        "awst_tmp%4#0",
        "reinterpret_Encoded(uint64)%20#0"
      ],
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "awst_tmp%4#0"
      ]
    },
    "885": {
      "op": "dup",
      "defined_out": [
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "app#0",
        "app_to_call#0",
        "asset#0",
        "awst_tmp%4#0",
        "awst_tmp%4#0 (copy)",
        "reinterpret_Encoded(uint64)%20#0"
      ],
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "awst_tmp%4#0",
        "awst_tmp%4#0 (copy)"
      ]
    },
    "886": {
      "op": "extract 0 4",
      "defined_out": [
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "app#0",
        "app_to_call#0",
        "asset#0",
        "awst_tmp%4#0",
        "reinterpret_Encoded(uint64)%20#0",
        "tmp%53#1"
      ],
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "awst_tmp%4#0",
        "tmp%53#1"
      ]
    },
    "889": {
      "op": "bytec_0 // 0x151f7c75",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "awst_tmp%4#0",
        "tmp%53#1",
        "0x151f7c75"
      ]
    },
    "890": {
      "op": "==",
      "defined_out": [
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "app#0",
        "app_to_call#0",
        "asset#0",
        "awst_tmp%4#0",
        "reinterpret_Encoded(uint64)%20#0",
        "tmp%54#1"
      ],
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "awst_tmp%4#0",
        "tmp%54#1"
      ]
    },
    "891": {
      "error": "application log value is not the result of an ABI return",
      "op": "assert // application log value is not the result of an ABI return",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "awst_tmp%4#0"
      ]
    },
    "892": {
      "op": "dup",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "awst_tmp%4#0",
        "awst_tmp%4#0 (copy)"
      ]
    },
    "893": {
      "op": "pushint 4 // 4",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "awst_tmp%4#0",
        "awst_tmp%4#0 (copy)",
        "4"
      ]
    },
    "895": {
      "op": "extract_uint64",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "awst_tmp%4#0",
        "result.0#0"
      ]
    },
    "896": {
      "op": "dig 1",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "awst_tmp%4#0",
        "result.0#0",
        "awst_tmp%4#0 (copy)"
      ]
    },
    "898": {
      "op": "pushint 12 // 12",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "awst_tmp%4#0",
        "result.0#0",
        "awst_tmp%4#0 (copy)",
        "12"
      ]
    },
    "900": {
      "op": "extract_uint64",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "awst_tmp%4#0",
        "result.0#0",
        "result.1#0"
      ]
    },
    "901": {
      "op": "uncover 2",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "result.0#0",
        "result.1#0",
        "awst_tmp%4#0"
      ]
    },
    "903": {
      "op": "extract 20 32",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "result.0#0",
        "result.1#0",
        "result.2#0"
      ]
    },
    "906": {
      "op": "uncover 2",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "result.1#0",
        "result.2#0",
        "result.0#0"
      ]
    },
    "908": {
      "op": "dig 6",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "result.1#0",
        "result.2#0",
        "result.0#0",
        "asset#0 (copy)"
      ]
    },
    "910": {
      "op": "==",
      "defined_out": [
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "app#0",
        "app_to_call#0",
        "asset#0",
        "reinterpret_Encoded(uint64)%20#0",
        "result.1#0",
        "result.2#0",
        "tmp%58#1"
      ],
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "result.1#0",
        "result.2#0",
        "tmp%58#1"
      ]
    },
    "911": {
      "op": "uncover 2",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "result.2#0",
        "tmp%58#1",
        "result.1#0"
      ]
    },
    "913": {
      "op": "dig 5",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "result.2#0",
        "tmp%58#1",
        "result.1#0",
        "app#0 (copy)"
      ]
    },
    "915": {
      "op": "==",
      "defined_out": [
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "app#0",
        "app_to_call#0",
        "asset#0",
        "reinterpret_Encoded(uint64)%20#0",
        "result.2#0",
        "tmp%58#1",
        "tmp%59#1"
      ],
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "result.2#0",
        "tmp%58#1",
        "tmp%59#1"
      ]
    },
    "916": {
      "op": "&&",
      "defined_out": [
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "app#0",
        "app_to_call#0",
        "asset#0",
        "reinterpret_Encoded(uint64)%20#0",
        "result.2#0",
        "tmp%60#1"
      ],
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "result.2#0",
        "tmp%60#1"
      ]
    },
    "917": {
      "op": "swap",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "tmp%60#1",
        "result.2#0"
      ]
    },
    "918": {
      "op": "dig 3",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "tmp%60#1",
        "result.2#0",
        "acc#0 (copy)"
      ]
    },
    "920": {
      "op": "==",
      "defined_out": [
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "app#0",
        "app_to_call#0",
        "asset#0",
        "reinterpret_Encoded(uint64)%20#0",
        "tmp%60#1",
        "tmp%61#1"
      ],
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "tmp%60#1",
        "tmp%61#1"
      ]
    },
    "921": {
      "op": "&&",
      "defined_out": [
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "app#0",
        "app_to_call#0",
        "asset#0",
        "reinterpret_Encoded(uint64)%20#0",
        "tmp%62#0"
      ],
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "tmp%62#0"
      ]
    },
    "922": {
      "error": "expected echo to return same resources",
      "op": "assert // expected echo to return same resources",
      "stack_out": [
        "app_to_call#0",
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0"
      ]
    },
    "923": {
      "op": "itxn_begin"
    },
    "924": {
      "op": "uncover 5",
      "stack_out": [
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "app_to_call#0"
      ]
    },
    "926": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0"
      ]
    },
    "928": {
      "op": "bytec 13 // method \"echo_resource_by_value(uint64,uint64,address)(uint64,uint64,address)\"",
      "stack_out": [
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "Method(echo_resource_by_value(uint64,uint64,address)(uint64,uint64,address))"
      ]
    },
    "930": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "reinterpret_Encoded(uint64)%20#0",
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0"
      ]
    },
    "932": {
      "op": "uncover 4",
      "stack_out": [
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0",
        "reinterpret_Encoded(uint64)%20#0"
      ]
    },
    "934": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "asset#0",
        "app#0",
        "acc#0",
        "aggregate%val_as_bytes%7#0"
      ]
    },
    "936": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "asset#0",
        "app#0",
        "acc#0"
      ]
    },
    "938": {
      "op": "dup",
      "stack_out": [
        "asset#0",
        "app#0",
        "acc#0",
        "acc#0 (copy)"
      ]
    },
    "939": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "asset#0",
        "app#0",
        "acc#0"
      ]
    },
    "941": {
      "op": "intc_1 // appl",
      "stack_out": [
        "asset#0",
        "app#0",
        "acc#0",
        "appl"
      ]
    },
    "942": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "asset#0",
        "app#0",
        "acc#0"
      ]
    },
    "944": {
      "op": "intc_0 // 0",
      "stack_out": [
        "asset#0",
        "app#0",
        "acc#0",
        "0"
      ]
    },
    "945": {
      "op": "itxn_field Fee",
      "stack_out": [
        "asset#0",
        "app#0",
        "acc#0"
      ]
    },
    "947": {
      "op": "itxn_submit"
    },
    "948": {
      "op": "itxn LastLog",
      "defined_out": [
        "acc#0",
        "app#0",
        "asset#0",
        "awst_tmp%5#0"
      ],
      "stack_out": [
        "asset#0",
        "app#0",
        "acc#0",
        "awst_tmp%5#0"
      ]
    },
    "950": {
      "op": "dup",
      "defined_out": [
        "acc#0",
        "app#0",
        "asset#0",
        "awst_tmp%5#0",
        "awst_tmp%5#0 (copy)"
      ],
      "stack_out": [
        "asset#0",
        "app#0",
        "acc#0",
        "awst_tmp%5#0",
        "awst_tmp%5#0 (copy)"
      ]
    },
    "951": {
      "op": "extract 0 4",
      "defined_out": [
        "acc#0",
        "app#0",
        "asset#0",
        "awst_tmp%5#0",
        "tmp%67#1"
      ],
      "stack_out": [
        "asset#0",
        "app#0",
        "acc#0",
        "awst_tmp%5#0",
        "tmp%67#1"
      ]
    },
    "954": {
      "op": "bytec_0 // 0x151f7c75",
      "stack_out": [
        "asset#0",
        "app#0",
        "acc#0",
        "awst_tmp%5#0",
        "tmp%67#1",
        "0x151f7c75"
      ]
    },
    "955": {
      "op": "==",
      "defined_out": [
        "acc#0",
        "app#0",
        "asset#0",
        "awst_tmp%5#0",
        "tmp%68#1"
      ],
      "stack_out": [
        "asset#0",
        "app#0",
        "acc#0",
        "awst_tmp%5#0",
        "tmp%68#1"
      ]
    },
    "956": {
      "error": "application log value is not the result of an ABI return",
      "op": "assert // application log value is not the result of an ABI return",
      "stack_out": [
        "asset#0",
        "app#0",
        "acc#0",
        "awst_tmp%5#0"
      ]
    },
    "957": {
      "op": "dup",
      "stack_out": [
        "asset#0",
        "app#0",
        "acc#0",
        "awst_tmp%5#0",
        "awst_tmp%5#0 (copy)"
      ]
    },
    "958": {
      "op": "pushint 4 // 4",
      "stack_out": [
        "asset#0",
        "app#0",
        "acc#0",
        "awst_tmp%5#0",
        "awst_tmp%5#0 (copy)",
        "4"
      ]
    },
    "960": {
      "op": "extract_uint64",
      "stack_out": [
        "asset#0",
        "app#0",
        "acc#0",
        "awst_tmp%5#0",
        "result.0#0"
      ]
    },
    "961": {
      "op": "dig 1",
      "stack_out": [
        "asset#0",
        "app#0",
        "acc#0",
        "awst_tmp%5#0",
        "result.0#0",
        "awst_tmp%5#0 (copy)"
      ]
    },
    "963": {
      "op": "pushint 12 // 12",
      "stack_out": [
        "asset#0",
        "app#0",
        "acc#0",
        "awst_tmp%5#0",
        "result.0#0",
        "awst_tmp%5#0 (copy)",
        "12"
      ]
    },
    "965": {
      "op": "extract_uint64",
      "stack_out": [
        "asset#0",
        "app#0",
        "acc#0",
        "awst_tmp%5#0",
        "result.0#0",
        "result.1#0"
      ]
    },
    "966": {
      "op": "uncover 2",
      "stack_out": [
        "asset#0",
        "app#0",
        "acc#0",
        "result.0#0",
        "result.1#0",
        "awst_tmp%5#0"
      ]
    },
    "968": {
      "op": "extract 20 32",
      "stack_out": [
        "asset#0",
        "app#0",
        "acc#0",
        "result.0#0",
        "result.1#0",
        "result.2#0"
      ]
    },
    "971": {
      "op": "uncover 2",
      "stack_out": [
        "asset#0",
        "app#0",
        "acc#0",
        "result.1#0",
        "result.2#0",
        "result.0#0"
      ]
    },
    "973": {
      "op": "uncover 5",
      "stack_out": [
        "app#0",
        "acc#0",
        "result.1#0",
        "result.2#0",
        "result.0#0",
        "asset#0"
      ]
    },
    "975": {
      "op": "==",
      "defined_out": [
        "acc#0",
        "app#0",
        "result.1#0",
        "result.2#0",
        "tmp%72#0"
      ],
      "stack_out": [
        "app#0",
        "acc#0",
        "result.1#0",
        "result.2#0",
        "tmp%72#0"
      ]
    },
    "976": {
      "op": "uncover 2",
      "stack_out": [
        "app#0",
        "acc#0",
        "result.2#0",
        "tmp%72#0",
        "result.1#0"
      ]
    },
    "978": {
      "op": "uncover 4",
      "stack_out": [
        "acc#0",
        "result.2#0",
        "tmp%72#0",
        "result.1#0",
        "app#0"
      ]
    },
    "980": {
      "op": "==",
      "defined_out": [
        "acc#0",
        "result.2#0",
        "tmp%72#0",
        "tmp%73#1"
      ],
      "stack_out": [
        "acc#0",
        "result.2#0",
        "tmp%72#0",
        "tmp%73#1"
      ]
    },
    "981": {
      "op": "&&",
      "defined_out": [
        "acc#0",
        "result.2#0",
        "tmp%74#1"
      ],
      "stack_out": [
        "acc#0",
        "result.2#0",
        "tmp%74#1"
      ]
    },
    "982": {
      "op": "swap",
      "stack_out": [
        "acc#0",
        "tmp%74#1",
        "result.2#0"
      ]
    },
    "983": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%74#1",
        "result.2#0",
        "acc#0"
      ]
    },
    "985": {
      "op": "==",
      "defined_out": [
        "tmp%74#1",
        "tmp%75#1"
      ],
      "stack_out": [
        "tmp%74#1",
        "tmp%75#1"
      ]
    },
    "986": {
      "op": "&&",
      "defined_out": [
        "tmp%76#1"
      ],
      "stack_out": [
        "tmp%76#1"
      ]
    },
    "987": {
      "error": "expected echo to return same resources",
      "op": "assert // expected echo to return same resources",
      "stack_out": []
    },
    "988": {
      "op": "intc_2 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "989": {
      "op": "return",
      "stack_out": []
    },
    "990": {
      "block": "main_test_arc4_struct_route@20",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%91#0"
      ],
      "stack_out": [
        "tmp%91#0"
      ]
    },
    "992": {
      "op": "!",
      "defined_out": [
        "tmp%92#0"
      ],
      "stack_out": [
        "tmp%92#0"
      ]
    },
    "993": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "994": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%93#0"
      ],
      "stack_out": [
        "tmp%93#0"
      ]
    },
    "996": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "997": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded(uint64)%18#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint64)%18#0"
      ]
    },
    "1000": {
      "op": "btoi",
      "defined_out": [
        "app#0"
      ],
      "stack_out": [
        "app#0"
      ]
    },
    "1001": {
      "op": "itxn_begin"
    },
    "1002": {
      "op": "itxn_field ApplicationID",
      "stack_out": []
    },
    "1004": {
      "op": "pushbytes 0xdc4f1992 // method \"echo_log_struct((uint64,string))(uint64,string)\"",
      "defined_out": [
        "Method(echo_log_struct((uint64,string))(uint64,string))"
      ],
      "stack_out": [
        "Method(echo_log_struct((uint64,string))(uint64,string))"
      ]
    },
    "1010": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "1012": {
      "op": "bytec 8 // 0x0000000000000001000a00056c6f672031",
      "defined_out": [
        "0x0000000000000001000a00056c6f672031"
      ],
      "stack_out": [
        "0x0000000000000001000a00056c6f672031"
      ]
    },
    "1014": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "1016": {
      "op": "intc_1 // appl",
      "defined_out": [
        "appl"
      ],
      "stack_out": [
        "appl"
      ]
    },
    "1017": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "1019": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "1020": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "1022": {
      "op": "itxn_submit"
    },
    "1023": {
      "op": "itxn LastLog",
      "defined_out": [
        "awst_tmp%0#0"
      ],
      "stack_out": [
        "awst_tmp%0#0"
      ]
    },
    "1025": {
      "op": "dup",
      "defined_out": [
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ]
    },
    "1026": {
      "op": "extract 4 0",
      "defined_out": [
        "awst_tmp%0#0",
        "result#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "result#0"
      ]
    },
    "1029": {
      "op": "swap",
      "stack_out": [
        "result#0",
        "awst_tmp%0#0"
      ]
    },
    "1030": {
      "op": "extract 0 4",
      "defined_out": [
        "result#0",
        "tmp%3#1"
      ],
      "stack_out": [
        "result#0",
        "tmp%3#1"
      ]
    },
    "1033": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "result#0",
        "tmp%3#1"
      ],
      "stack_out": [
        "result#0",
        "tmp%3#1",
        "0x151f7c75"
      ]
    },
    "1034": {
      "op": "==",
      "defined_out": [
        "result#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "result#0",
        "tmp%4#0"
      ]
    },
    "1035": {
      "error": "application log value is not the result of an ABI return",
      "op": "assert // application log value is not the result of an ABI return",
      "stack_out": [
        "result#0"
      ]
    },
    "1036": {
      "op": "itxn LastLog",
      "defined_out": [
        "result#0",
        "txn.LastLog#0"
      ],
      "stack_out": [
        "result#0",
        "txn.LastLog#0"
      ]
    },
    "1038": {
      "op": "swap",
      "stack_out": [
        "txn.LastLog#0",
        "result#0"
      ]
    },
    "1039": {
      "op": "bytec 8 // 0x0000000000000001000a00056c6f672031",
      "stack_out": [
        "txn.LastLog#0",
        "result#0",
        "0x0000000000000001000a00056c6f672031"
      ]
    },
    "1041": {
      "op": "==",
      "defined_out": [
        "tmp%5#1",
        "txn.LastLog#0"
      ],
      "stack_out": [
        "txn.LastLog#0",
        "tmp%5#1"
      ]
    },
    "1042": {
      "error": "expected output to match input",
      "op": "assert // expected output to match input",
      "stack_out": [
        "txn.LastLog#0"
      ]
    },
    "1043": {
      "op": "dup",
      "defined_out": [
        "txn.LastLog#0",
        "txn.LastLog#0 (copy)"
      ],
      "stack_out": [
        "txn.LastLog#0",
        "txn.LastLog#0 (copy)"
      ]
    },
    "1044": {
      "op": "extract 4 0",
      "defined_out": [
        "tmp%6#1",
        "txn.LastLog#0"
      ],
      "stack_out": [
        "txn.LastLog#0",
        "tmp%6#1"
      ]
    },
    "1047": {
      "op": "swap",
      "stack_out": [
        "tmp%6#1",
        "txn.LastLog#0"
      ]
    },
    "1048": {
      "op": "extract 0 4",
      "defined_out": [
        "tmp%6#1",
        "tmp%7#1"
      ],
      "stack_out": [
        "tmp%6#1",
        "tmp%7#1"
      ]
    },
    "1051": {
      "op": "bytec_0 // 0x151f7c75",
      "stack_out": [
        "tmp%6#1",
        "tmp%7#1",
        "0x151f7c75"
      ]
    },
    "1052": {
      "op": "==",
      "defined_out": [
        "tmp%6#1",
        "tmp%8#1"
      ],
      "stack_out": [
        "tmp%6#1",
        "tmp%8#1"
      ]
    },
    "1053": {
      "error": "application log value is not the result of an ABI return",
      "op": "assert // application log value is not the result of an ABI return",
      "stack_out": [
        "tmp%6#1"
      ]
    },
    "1054": {
      "op": "bytec 8 // 0x0000000000000001000a00056c6f672031",
      "stack_out": [
        "tmp%6#1",
        "0x0000000000000001000a00056c6f672031"
      ]
    },
    "1056": {
      "op": "==",
      "defined_out": [
        "tmp%9#1"
      ],
      "stack_out": [
        "tmp%9#1"
      ]
    },
    "1057": {
      "error": "expected output to match input",
      "op": "assert // expected output to match input",
      "stack_out": []
    },
    "1058": {
      "op": "intc_2 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1059": {
      "op": "return",
      "stack_out": []
    },
    "1060": {
      "block": "main_test_named_tuples_route@19",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%86#0"
      ],
      "stack_out": [
        "tmp%86#0"
      ]
    },
    "1062": {
      "op": "!",
      "defined_out": [
        "tmp%87#0"
      ],
      "stack_out": [
        "tmp%87#0"
      ]
    },
    "1063": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "1064": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%88#0"
      ],
      "stack_out": [
        "tmp%88#0"
      ]
    },
    "1066": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "1067": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded(uint64)%17#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint64)%17#0"
      ]
    },
    "1070": {
      "op": "btoi",
      "defined_out": [
        "app#0"
      ],
      "stack_out": [
        "app#0"
      ]
    },
    "1071": {
      "op": "itxn_begin"
    },
    "1072": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "app#0 (copy)"
      ],
      "stack_out": [
        "app#0",
        "app#0 (copy)"
      ]
    },
    "1073": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "app#0"
      ]
    },
    "1075": {
      "op": "bytec 24 // method \"logs_are_equal((uint64,string),(uint64,string))bool\"",
      "defined_out": [
        "Method(logs_are_equal((uint64,string),(uint64,string))bool)",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "Method(logs_are_equal((uint64,string),(uint64,string))bool)"
      ]
    },
    "1077": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0"
      ]
    },
    "1079": {
      "op": "bytec 8 // 0x0000000000000001000a00056c6f672031",
      "defined_out": [
        "0x0000000000000001000a00056c6f672031",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "0x0000000000000001000a00056c6f672031"
      ]
    },
    "1081": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0"
      ]
    },
    "1083": {
      "op": "bytec 8 // 0x0000000000000001000a00056c6f672031",
      "stack_out": [
        "app#0",
        "0x0000000000000001000a00056c6f672031"
      ]
    },
    "1085": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0"
      ]
    },
    "1087": {
      "op": "intc_1 // appl",
      "defined_out": [
        "app#0",
        "appl"
      ],
      "stack_out": [
        "app#0",
        "appl"
      ]
    },
    "1088": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "app#0"
      ]
    },
    "1090": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "0"
      ]
    },
    "1091": {
      "op": "itxn_field Fee",
      "stack_out": [
        "app#0"
      ]
    },
    "1093": {
      "op": "itxn_submit"
    },
    "1094": {
      "op": "itxn LastLog",
      "defined_out": [
        "app#0",
        "awst_tmp%0#0"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0"
      ]
    },
    "1096": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ]
    },
    "1097": {
      "op": "extract 4 0",
      "defined_out": [
        "app#0",
        "awst_tmp%0#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "tmp%2#0"
      ]
    },
    "1100": {
      "op": "swap",
      "stack_out": [
        "app#0",
        "tmp%2#0",
        "awst_tmp%0#0"
      ]
    },
    "1101": {
      "op": "extract 0 4",
      "defined_out": [
        "app#0",
        "tmp%2#0",
        "tmp%3#1"
      ],
      "stack_out": [
        "app#0",
        "tmp%2#0",
        "tmp%3#1"
      ]
    },
    "1104": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "app#0",
        "tmp%2#0",
        "tmp%3#1"
      ],
      "stack_out": [
        "app#0",
        "tmp%2#0",
        "tmp%3#1",
        "0x151f7c75"
      ]
    },
    "1105": {
      "op": "==",
      "defined_out": [
        "app#0",
        "tmp%2#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "app#0",
        "tmp%2#0",
        "tmp%4#0"
      ]
    },
    "1106": {
      "error": "application log value is not the result of an ABI return",
      "op": "assert // application log value is not the result of an ABI return",
      "stack_out": [
        "app#0",
        "tmp%2#0"
      ]
    },
    "1107": {
      "op": "intc_0 // 0",
      "stack_out": [
        "app#0",
        "tmp%2#0",
        "0"
      ]
    },
    "1108": {
      "op": "getbit",
      "defined_out": [
        "app#0",
        "result#1"
      ],
      "stack_out": [
        "app#0",
        "result#1"
      ]
    },
    "1109": {
      "op": "assert",
      "stack_out": [
        "app#0"
      ]
    },
    "1110": {
      "op": "itxn_begin"
    },
    "1111": {
      "op": "itxn_field ApplicationID",
      "stack_out": []
    },
    "1113": {
      "op": "bytec 24 // method \"logs_are_equal((uint64,string),(uint64,string))bool\"",
      "stack_out": [
        "Method(logs_are_equal((uint64,string),(uint64,string))bool)"
      ]
    },
    "1115": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "1117": {
      "op": "pushbytes 0x0000000000000002000a00056c6f672032",
      "defined_out": [
        "0x0000000000000002000a00056c6f672032"
      ],
      "stack_out": [
        "0x0000000000000002000a00056c6f672032"
      ]
    },
    "1136": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "1138": {
      "op": "bytec 8 // 0x0000000000000001000a00056c6f672031",
      "stack_out": [
        "0x0000000000000001000a00056c6f672031"
      ]
    },
    "1140": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "1142": {
      "op": "intc_1 // appl",
      "stack_out": [
        "appl"
      ]
    },
    "1143": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "1145": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0"
      ]
    },
    "1146": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "1148": {
      "op": "itxn_submit"
    },
    "1149": {
      "op": "itxn LastLog",
      "defined_out": [
        "awst_tmp%1#0"
      ],
      "stack_out": [
        "awst_tmp%1#0"
      ]
    },
    "1151": {
      "op": "dup",
      "defined_out": [
        "awst_tmp%1#0",
        "awst_tmp%1#0 (copy)"
      ],
      "stack_out": [
        "awst_tmp%1#0",
        "awst_tmp%1#0 (copy)"
      ]
    },
    "1152": {
      "op": "extract 4 0",
      "defined_out": [
        "awst_tmp%1#0",
        "tmp%8#3"
      ],
      "stack_out": [
        "awst_tmp%1#0",
        "tmp%8#3"
      ]
    },
    "1155": {
      "op": "swap",
      "stack_out": [
        "tmp%8#3",
        "awst_tmp%1#0"
      ]
    },
    "1156": {
      "op": "extract 0 4",
      "defined_out": [
        "tmp%8#3",
        "tmp%9#3"
      ],
      "stack_out": [
        "tmp%8#3",
        "tmp%9#3"
      ]
    },
    "1159": {
      "op": "bytec_0 // 0x151f7c75",
      "stack_out": [
        "tmp%8#3",
        "tmp%9#3",
        "0x151f7c75"
      ]
    },
    "1160": {
      "op": "==",
      "defined_out": [
        "tmp%10#1",
        "tmp%8#3"
      ],
      "stack_out": [
        "tmp%8#3",
        "tmp%10#1"
      ]
    },
    "1161": {
      "error": "application log value is not the result of an ABI return",
      "op": "assert // application log value is not the result of an ABI return",
      "stack_out": [
        "tmp%8#3"
      ]
    },
    "1162": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%8#3",
        "0"
      ]
    },
    "1163": {
      "op": "getbit",
      "stack_out": [
        "result#1"
      ]
    },
    "1164": {
      "op": "!",
      "defined_out": [
        "tmp%12#1"
      ],
      "stack_out": [
        "tmp%12#1"
      ]
    },
    "1165": {
      "op": "assert",
      "stack_out": []
    },
    "1166": {
      "op": "intc_2 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1167": {
      "op": "return",
      "stack_out": []
    },
    "1168": {
      "block": "main_test_no_args_route@18",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%81#0"
      ],
      "stack_out": [
        "tmp%81#0"
      ]
    },
    "1170": {
      "op": "!",
      "defined_out": [
        "tmp%82#0"
      ],
      "stack_out": [
        "tmp%82#0"
      ]
    },
    "1171": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "1172": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%83#0"
      ],
      "stack_out": [
        "tmp%83#0"
      ]
    },
    "1174": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "1175": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded(uint64)%16#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint64)%16#0"
      ]
    },
    "1178": {
      "op": "btoi",
      "defined_out": [
        "app#0"
      ],
      "stack_out": [
        "app#0"
      ]
    },
    "1179": {
      "op": "itxn_begin"
    },
    "1180": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "app#0 (copy)"
      ],
      "stack_out": [
        "app#0",
        "app#0 (copy)"
      ]
    },
    "1181": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "app#0"
      ]
    },
    "1183": {
      "op": "bytec 14 // method \"no_args()uint64\"",
      "defined_out": [
        "Method(no_args()uint64)",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "Method(no_args()uint64)"
      ]
    },
    "1185": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0"
      ]
    },
    "1187": {
      "op": "intc_1 // appl",
      "defined_out": [
        "app#0",
        "appl"
      ],
      "stack_out": [
        "app#0",
        "appl"
      ]
    },
    "1188": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "app#0"
      ]
    },
    "1190": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "0"
      ]
    },
    "1191": {
      "op": "itxn_field Fee",
      "stack_out": [
        "app#0"
      ]
    },
    "1193": {
      "op": "itxn_submit"
    },
    "1194": {
      "op": "itxn LastLog",
      "defined_out": [
        "app#0",
        "awst_tmp%0#0"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0"
      ]
    },
    "1196": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ]
    },
    "1197": {
      "op": "extract 4 0",
      "defined_out": [
        "app#0",
        "awst_tmp%0#0",
        "tmp%0#4"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "tmp%0#4"
      ]
    },
    "1200": {
      "op": "swap",
      "stack_out": [
        "app#0",
        "tmp%0#4",
        "awst_tmp%0#0"
      ]
    },
    "1201": {
      "op": "extract 0 4",
      "defined_out": [
        "app#0",
        "tmp%0#4",
        "tmp%1#2"
      ],
      "stack_out": [
        "app#0",
        "tmp%0#4",
        "tmp%1#2"
      ]
    },
    "1204": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "app#0",
        "tmp%0#4",
        "tmp%1#2"
      ],
      "stack_out": [
        "app#0",
        "tmp%0#4",
        "tmp%1#2",
        "0x151f7c75"
      ]
    },
    "1205": {
      "op": "==",
      "defined_out": [
        "app#0",
        "tmp%0#4",
        "tmp%2#3"
      ],
      "stack_out": [
        "app#0",
        "tmp%0#4",
        "tmp%2#3"
      ]
    },
    "1206": {
      "error": "application log value is not the result of an ABI return",
      "op": "assert // application log value is not the result of an ABI return",
      "stack_out": [
        "app#0",
        "tmp%0#4"
      ]
    },
    "1207": {
      "op": "btoi",
      "defined_out": [
        "app#0",
        "result#3"
      ],
      "stack_out": [
        "app#0",
        "result#3"
      ]
    },
    "1208": {
      "op": "pushint 42 // 42",
      "defined_out": [
        "42",
        "app#0",
        "result#3"
      ],
      "stack_out": [
        "app#0",
        "result#3",
        "42"
      ]
    },
    "1210": {
      "op": "==",
      "defined_out": [
        "app#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "app#0",
        "tmp%4#0"
      ]
    },
    "1211": {
      "op": "assert",
      "stack_out": [
        "app#0"
      ]
    },
    "1212": {
      "op": "itxn_begin"
    },
    "1213": {
      "op": "dup",
      "stack_out": [
        "app#0",
        "app#0 (copy)"
      ]
    },
    "1214": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "app#0"
      ]
    },
    "1216": {
      "op": "bytec 14 // method \"no_args()uint64\"",
      "stack_out": [
        "app#0",
        "Method(no_args()uint64)"
      ]
    },
    "1218": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0"
      ]
    },
    "1220": {
      "op": "intc_1 // appl",
      "stack_out": [
        "app#0",
        "appl"
      ]
    },
    "1221": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "app#0"
      ]
    },
    "1223": {
      "op": "intc_0 // 0",
      "stack_out": [
        "app#0",
        "0"
      ]
    },
    "1224": {
      "op": "itxn_field Fee",
      "stack_out": [
        "app#0"
      ]
    },
    "1226": {
      "op": "itxn_submit"
    },
    "1227": {
      "op": "itxn LastLog",
      "defined_out": [
        "app#0",
        "awst_tmp%1#0"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%1#0"
      ]
    },
    "1229": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "awst_tmp%1#0",
        "awst_tmp%1#0 (copy)"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%1#0",
        "awst_tmp%1#0 (copy)"
      ]
    },
    "1230": {
      "op": "extract 4 0",
      "defined_out": [
        "app#0",
        "arc4_result#0",
        "awst_tmp%1#0"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%1#0",
        "arc4_result#0"
      ]
    },
    "1233": {
      "op": "swap",
      "stack_out": [
        "app#0",
        "arc4_result#0",
        "awst_tmp%1#0"
      ]
    },
    "1234": {
      "op": "extract 0 4",
      "defined_out": [
        "app#0",
        "arc4_result#0",
        "tmp%6#1"
      ],
      "stack_out": [
        "app#0",
        "arc4_result#0",
        "tmp%6#1"
      ]
    },
    "1237": {
      "op": "bytec_0 // 0x151f7c75",
      "stack_out": [
        "app#0",
        "arc4_result#0",
        "tmp%6#1",
        "0x151f7c75"
      ]
    },
    "1238": {
      "op": "==",
      "defined_out": [
        "app#0",
        "arc4_result#0",
        "tmp%7#2"
      ],
      "stack_out": [
        "app#0",
        "arc4_result#0",
        "tmp%7#2"
      ]
    },
    "1239": {
      "error": "application log value is not the result of an ABI return",
      "op": "assert // application log value is not the result of an ABI return",
      "stack_out": [
        "app#0",
        "arc4_result#0"
      ]
    },
    "1240": {
      "op": "bytec 25 // 0x000000000000002a",
      "defined_out": [
        "0x000000000000002a",
        "app#0",
        "arc4_result#0"
      ],
      "stack_out": [
        "app#0",
        "arc4_result#0",
        "0x000000000000002a"
      ]
    },
    "1242": {
      "op": "b==",
      "defined_out": [
        "app#0",
        "tmp%8#1"
      ],
      "stack_out": [
        "app#0",
        "tmp%8#1"
      ]
    },
    "1243": {
      "op": "assert",
      "stack_out": [
        "app#0"
      ]
    },
    "1244": {
      "op": "itxn_begin"
    },
    "1245": {
      "op": "itxn_field ApplicationID",
      "stack_out": []
    },
    "1247": {
      "op": "bytec 14 // method \"no_args()uint64\"",
      "stack_out": [
        "Method(no_args()uint64)"
      ]
    },
    "1249": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "1251": {
      "op": "intc_1 // appl",
      "stack_out": [
        "appl"
      ]
    },
    "1252": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "1254": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0"
      ]
    },
    "1255": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "1257": {
      "op": "itxn_submit"
    },
    "1258": {
      "op": "itxn LastLog",
      "defined_out": [
        "awst_tmp%2#0"
      ],
      "stack_out": [
        "awst_tmp%2#0"
      ]
    },
    "1260": {
      "op": "extract 0 4",
      "defined_out": [
        "tmp%10#3"
      ],
      "stack_out": [
        "tmp%10#3"
      ]
    },
    "1263": {
      "op": "bytec_0 // 0x151f7c75",
      "stack_out": [
        "tmp%10#3",
        "0x151f7c75"
      ]
    },
    "1264": {
      "op": "==",
      "defined_out": [
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0"
      ]
    },
    "1265": {
      "error": "application log value is not the result of an ABI return",
      "op": "assert // application log value is not the result of an ABI return",
      "stack_out": []
    },
    "1266": {
      "op": "itxn LastLog",
      "defined_out": [
        "awst_tmp%3#0"
      ],
      "stack_out": [
        "awst_tmp%3#0"
      ]
    },
    "1268": {
      "op": "dup",
      "defined_out": [
        "awst_tmp%3#0",
        "awst_tmp%3#0 (copy)"
      ],
      "stack_out": [
        "awst_tmp%3#0",
        "awst_tmp%3#0 (copy)"
      ]
    },
    "1269": {
      "op": "extract 4 0",
      "defined_out": [
        "awst_tmp%3#0",
        "tmp%13#2"
      ],
      "stack_out": [
        "awst_tmp%3#0",
        "tmp%13#2"
      ]
    },
    "1272": {
      "op": "swap",
      "stack_out": [
        "tmp%13#2",
        "awst_tmp%3#0"
      ]
    },
    "1273": {
      "op": "extract 0 4",
      "defined_out": [
        "tmp%13#2",
        "tmp%14#2"
      ],
      "stack_out": [
        "tmp%13#2",
        "tmp%14#2"
      ]
    },
    "1276": {
      "op": "bytec_0 // 0x151f7c75",
      "stack_out": [
        "tmp%13#2",
        "tmp%14#2",
        "0x151f7c75"
      ]
    },
    "1277": {
      "op": "==",
      "defined_out": [
        "tmp%13#2",
        "tmp%15#2"
      ],
      "stack_out": [
        "tmp%13#2",
        "tmp%15#2"
      ]
    },
    "1278": {
      "error": "application log value is not the result of an ABI return",
      "op": "assert // application log value is not the result of an ABI return",
      "stack_out": [
        "tmp%13#2"
      ]
    },
    "1279": {
      "op": "bytec 25 // 0x000000000000002a",
      "stack_out": [
        "tmp%13#2",
        "0x000000000000002a"
      ]
    },
    "1281": {
      "op": "b==",
      "defined_out": [
        "tmp%16#0"
      ],
      "stack_out": [
        "tmp%16#0"
      ]
    },
    "1282": {
      "op": "assert",
      "stack_out": []
    },
    "1283": {
      "op": "intc_2 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1284": {
      "op": "return",
      "stack_out": []
    },
    "1285": {
      "block": "main_test_nested_tuples_route@17",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%76#0"
      ],
      "stack_out": [
        "tmp%76#0"
      ]
    },
    "1287": {
      "op": "!",
      "defined_out": [
        "tmp%77#0"
      ],
      "stack_out": [
        "tmp%77#0"
      ]
    },
    "1288": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "1289": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%78#0"
      ],
      "stack_out": [
        "tmp%78#0"
      ]
    },
    "1291": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "1292": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded(uint64)%15#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint64)%15#0"
      ]
    },
    "1295": {
      "op": "btoi",
      "defined_out": [
        "app#0"
      ],
      "stack_out": [
        "app#0"
      ]
    },
    "1296": {
      "op": "itxn_begin"
    },
    "1297": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "app#0 (copy)"
      ],
      "stack_out": [
        "app#0",
        "app#0 (copy)"
      ]
    },
    "1298": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "app#0"
      ]
    },
    "1300": {
      "op": "bytec 15 // method \"echo_nested_tuple(((string,string),(uint64,uint64,byte[])))((string,string),(uint64,uint64,byte[]))\"",
      "defined_out": [
        "Method(echo_nested_tuple(((string,string),(uint64,uint64,byte[])))((string,string),(uint64,uint64,byte[])))",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "Method(echo_nested_tuple(((string,string),(uint64,uint64,byte[])))((string,string),(uint64,uint64,byte[])))"
      ]
    },
    "1302": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0"
      ]
    },
    "1304": {
      "op": "bytec 26 // 0x00040010000400080002733100027332000000000000000100000000000000020012000133",
      "defined_out": [
        "0x00040010000400080002733100027332000000000000000100000000000000020012000133",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "0x00040010000400080002733100027332000000000000000100000000000000020012000133"
      ]
    },
    "1306": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0"
      ]
    },
    "1308": {
      "op": "intc_1 // appl",
      "defined_out": [
        "app#0",
        "appl"
      ],
      "stack_out": [
        "app#0",
        "appl"
      ]
    },
    "1309": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "app#0"
      ]
    },
    "1311": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "0"
      ]
    },
    "1312": {
      "op": "itxn_field Fee",
      "stack_out": [
        "app#0"
      ]
    },
    "1314": {
      "op": "itxn_submit"
    },
    "1315": {
      "op": "itxn LastLog",
      "defined_out": [
        "app#0",
        "awst_tmp%0#0"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0"
      ]
    },
    "1317": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ]
    },
    "1318": {
      "op": "extract 4 0",
      "defined_out": [
        "app#0",
        "awst_tmp%0#0",
        "tmp%4#5"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "tmp%4#5"
      ]
    },
    "1321": {
      "op": "swap",
      "stack_out": [
        "app#0",
        "tmp%4#5",
        "awst_tmp%0#0"
      ]
    },
    "1322": {
      "op": "extract 0 4",
      "defined_out": [
        "app#0",
        "tmp%4#5",
        "tmp%5#2"
      ],
      "stack_out": [
        "app#0",
        "tmp%4#5",
        "tmp%5#2"
      ]
    },
    "1325": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "app#0",
        "tmp%4#5",
        "tmp%5#2"
      ],
      "stack_out": [
        "app#0",
        "tmp%4#5",
        "tmp%5#2",
        "0x151f7c75"
      ]
    },
    "1326": {
      "op": "==",
      "defined_out": [
        "app#0",
        "tmp%4#5",
        "tmp%6#4"
      ],
      "stack_out": [
        "app#0",
        "tmp%4#5",
        "tmp%6#4"
      ]
    },
    "1327": {
      "error": "application log value is not the result of an ABI return",
      "op": "assert // application log value is not the result of an ABI return",
      "stack_out": [
        "app#0",
        "tmp%4#5"
      ]
    },
    "1328": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "tmp%4#5",
        "tmp%4#5 (copy)"
      ],
      "stack_out": [
        "app#0",
        "tmp%4#5",
        "tmp%4#5 (copy)"
      ]
    },
    "1329": {
      "op": "intc_0 // 0",
      "stack_out": [
        "app#0",
        "tmp%4#5",
        "tmp%4#5 (copy)",
        "0"
      ]
    },
    "1330": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%extract_uint16%18#0",
        "app#0",
        "tmp%4#5"
      ],
      "stack_out": [
        "app#0",
        "tmp%4#5",
        "aggregate%extract_uint16%18#0"
      ]
    },
    "1331": {
      "op": "dig 1",
      "stack_out": [
        "app#0",
        "tmp%4#5",
        "aggregate%extract_uint16%18#0",
        "tmp%4#5 (copy)"
      ]
    },
    "1333": {
      "op": "intc_3 // 2",
      "defined_out": [
        "2",
        "aggregate%extract_uint16%18#0",
        "app#0",
        "tmp%4#5",
        "tmp%4#5 (copy)"
      ],
      "stack_out": [
        "app#0",
        "tmp%4#5",
        "aggregate%extract_uint16%18#0",
        "tmp%4#5 (copy)",
        "2"
      ]
    },
    "1334": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%extract_uint16%18#0",
        "aggregate%extract_uint16%19#0",
        "app#0",
        "tmp%4#5"
      ],
      "stack_out": [
        "app#0",
        "tmp%4#5",
        "aggregate%extract_uint16%18#0",
        "aggregate%extract_uint16%19#0"
      ]
    },
    "1335": {
      "op": "dig 2",
      "stack_out": [
        "app#0",
        "tmp%4#5",
        "aggregate%extract_uint16%18#0",
        "aggregate%extract_uint16%19#0",
        "tmp%4#5 (copy)"
      ]
    },
    "1337": {
      "op": "uncover 2",
      "stack_out": [
        "app#0",
        "tmp%4#5",
        "aggregate%extract_uint16%19#0",
        "tmp%4#5 (copy)",
        "aggregate%extract_uint16%18#0"
      ]
    },
    "1339": {
      "op": "dig 2",
      "defined_out": [
        "aggregate%extract_uint16%18#0",
        "aggregate%extract_uint16%19#0",
        "aggregate%extract_uint16%19#0 (copy)",
        "app#0",
        "tmp%4#5",
        "tmp%4#5 (copy)"
      ],
      "stack_out": [
        "app#0",
        "tmp%4#5",
        "aggregate%extract_uint16%19#0",
        "tmp%4#5 (copy)",
        "aggregate%extract_uint16%18#0",
        "aggregate%extract_uint16%19#0 (copy)"
      ]
    },
    "1341": {
      "op": "substring3",
      "defined_out": [
        "aggregate%extract_uint16%19#0",
        "aggregate%substring3%12#0",
        "app#0",
        "tmp%4#5"
      ],
      "stack_out": [
        "app#0",
        "tmp%4#5",
        "aggregate%extract_uint16%19#0",
        "aggregate%substring3%12#0"
      ]
    },
    "1342": {
      "op": "dup",
      "defined_out": [
        "aggregate%extract_uint16%19#0",
        "aggregate%substring3%12#0",
        "aggregate%substring3%12#0 (copy)",
        "app#0",
        "tmp%4#5"
      ],
      "stack_out": [
        "app#0",
        "tmp%4#5",
        "aggregate%extract_uint16%19#0",
        "aggregate%substring3%12#0",
        "aggregate%substring3%12#0 (copy)"
      ]
    },
    "1343": {
      "op": "intc_0 // 0",
      "stack_out": [
        "app#0",
        "tmp%4#5",
        "aggregate%extract_uint16%19#0",
        "aggregate%substring3%12#0",
        "aggregate%substring3%12#0 (copy)",
        "0"
      ]
    },
    "1344": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%extract_uint16%19#0",
        "aggregate%extract_uint16%20#0",
        "aggregate%substring3%12#0",
        "app#0",
        "tmp%4#5"
      ],
      "stack_out": [
        "app#0",
        "tmp%4#5",
        "aggregate%extract_uint16%19#0",
        "aggregate%substring3%12#0",
        "aggregate%extract_uint16%20#0"
      ]
    },
    "1345": {
      "op": "dig 1",
      "stack_out": [
        "app#0",
        "tmp%4#5",
        "aggregate%extract_uint16%19#0",
        "aggregate%substring3%12#0",
        "aggregate%extract_uint16%20#0",
        "aggregate%substring3%12#0 (copy)"
      ]
    },
    "1347": {
      "op": "intc_3 // 2",
      "stack_out": [
        "app#0",
        "tmp%4#5",
        "aggregate%extract_uint16%19#0",
        "aggregate%substring3%12#0",
        "aggregate%extract_uint16%20#0",
        "aggregate%substring3%12#0 (copy)",
        "2"
      ]
    },
    "1348": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%extract_uint16%19#0",
        "aggregate%extract_uint16%20#0",
        "aggregate%extract_uint16%21#0",
        "aggregate%substring3%12#0",
        "app#0",
        "tmp%4#5"
      ],
      "stack_out": [
        "app#0",
        "tmp%4#5",
        "aggregate%extract_uint16%19#0",
        "aggregate%substring3%12#0",
        "aggregate%extract_uint16%20#0",
        "aggregate%extract_uint16%21#0"
      ]
    },
    "1349": {
      "op": "dig 2",
      "stack_out": [
        "app#0",
        "tmp%4#5",
        "aggregate%extract_uint16%19#0",
        "aggregate%substring3%12#0",
        "aggregate%extract_uint16%20#0",
        "aggregate%extract_uint16%21#0",
        "aggregate%substring3%12#0 (copy)"
      ]
    },
    "1351": {
      "op": "uncover 2",
      "stack_out": [
        "app#0",
        "tmp%4#5",
        "aggregate%extract_uint16%19#0",
        "aggregate%substring3%12#0",
        "aggregate%extract_uint16%21#0",
        "aggregate%substring3%12#0 (copy)",
        "aggregate%extract_uint16%20#0"
      ]
    },
    "1353": {
      "op": "dig 2",
      "defined_out": [
        "aggregate%extract_uint16%19#0",
        "aggregate%extract_uint16%20#0",
        "aggregate%extract_uint16%21#0",
        "aggregate%extract_uint16%21#0 (copy)",
        "aggregate%substring3%12#0",
        "aggregate%substring3%12#0 (copy)",
        "app#0",
        "tmp%4#5"
      ],
      "stack_out": [
        "app#0",
        "tmp%4#5",
        "aggregate%extract_uint16%19#0",
        "aggregate%substring3%12#0",
        "aggregate%extract_uint16%21#0",
        "aggregate%substring3%12#0 (copy)",
        "aggregate%extract_uint16%20#0",
        "aggregate%extract_uint16%21#0 (copy)"
      ]
    },
    "1355": {
      "op": "substring3",
      "defined_out": [
        "aggregate%extract_uint16%19#0",
        "aggregate%extract_uint16%21#0",
        "aggregate%substring3%12#0",
        "aggregate%substring3%13#0",
        "app#0",
        "tmp%4#5"
      ],
      "stack_out": [
        "app#0",
        "tmp%4#5",
        "aggregate%extract_uint16%19#0",
        "aggregate%substring3%12#0",
        "aggregate%extract_uint16%21#0",
        "aggregate%substring3%13#0"
      ]
    },
    "1356": {
      "op": "extract 2 0",
      "defined_out": [
        "aggregate%extract_uint16%19#0",
        "aggregate%extract_uint16%21#0",
        "aggregate%substring3%12#0",
        "app#0",
        "result.0.0#0",
        "tmp%4#5"
      ],
      "stack_out": [
        "app#0",
        "tmp%4#5",
        "aggregate%extract_uint16%19#0",
        "aggregate%substring3%12#0",
        "aggregate%extract_uint16%21#0",
        "result.0.0#0"
      ]
    },
    "1359": {
      "op": "dig 2",
      "stack_out": [
        "app#0",
        "tmp%4#5",
        "aggregate%extract_uint16%19#0",
        "aggregate%substring3%12#0",
        "aggregate%extract_uint16%21#0",
        "result.0.0#0",
        "aggregate%substring3%12#0 (copy)"
      ]
    },
    "1361": {
      "op": "len",
      "defined_out": [
        "aggregate%extract_uint16%19#0",
        "aggregate%extract_uint16%21#0",
        "aggregate%len%6#0",
        "aggregate%substring3%12#0",
        "app#0",
        "result.0.0#0",
        "tmp%4#5"
      ],
      "stack_out": [
        "app#0",
        "tmp%4#5",
        "aggregate%extract_uint16%19#0",
        "aggregate%substring3%12#0",
        "aggregate%extract_uint16%21#0",
        "result.0.0#0",
        "aggregate%len%6#0"
      ]
    },
    "1362": {
      "op": "swap"
    },
    "1363": {
      "op": "cover 3",
      "stack_out": [
        "app#0",
        "tmp%4#5",
        "aggregate%extract_uint16%19#0",
        "result.0.0#0",
        "aggregate%substring3%12#0",
        "aggregate%extract_uint16%21#0",
        "aggregate%len%6#0"
      ]
    },
    "1365": {
      "op": "substring3",
      "defined_out": [
        "aggregate%extract_uint16%19#0",
        "app#0",
        "result.0.0#0",
        "result.0.1#0",
        "tmp%4#5"
      ],
      "stack_out": [
        "app#0",
        "tmp%4#5",
        "aggregate%extract_uint16%19#0",
        "result.0.0#0",
        "result.0.1#0"
      ]
    },
    "1366": {
      "op": "dig 3",
      "stack_out": [
        "app#0",
        "tmp%4#5",
        "aggregate%extract_uint16%19#0",
        "result.0.0#0",
        "result.0.1#0",
        "tmp%4#5 (copy)"
      ]
    },
    "1368": {
      "op": "len",
      "defined_out": [
        "aggregate%extract_uint16%19#0",
        "aggregate%len%7#0",
        "app#0",
        "result.0.0#0",
        "result.0.1#0",
        "tmp%4#5"
      ],
      "stack_out": [
        "app#0",
        "tmp%4#5",
        "aggregate%extract_uint16%19#0",
        "result.0.0#0",
        "result.0.1#0",
        "aggregate%len%7#0"
      ]
    },
    "1369": {
      "op": "uncover 4",
      "stack_out": [
        "app#0",
        "aggregate%extract_uint16%19#0",
        "result.0.0#0",
        "result.0.1#0",
        "aggregate%len%7#0",
        "tmp%4#5"
      ]
    },
    "1371": {
      "op": "uncover 4",
      "stack_out": [
        "app#0",
        "result.0.0#0",
        "result.0.1#0",
        "aggregate%len%7#0",
        "tmp%4#5",
        "aggregate%extract_uint16%19#0"
      ]
    },
    "1373": {
      "op": "uncover 2",
      "stack_out": [
        "app#0",
        "result.0.0#0",
        "result.0.1#0",
        "tmp%4#5",
        "aggregate%extract_uint16%19#0",
        "aggregate%len%7#0"
      ]
    },
    "1375": {
      "op": "substring3",
      "defined_out": [
        "aggregate%substring3%15#0",
        "app#0",
        "result.0.0#0",
        "result.0.1#0"
      ],
      "stack_out": [
        "app#0",
        "result.0.0#0",
        "result.0.1#0",
        "aggregate%substring3%15#0"
      ]
    },
    "1376": {
      "op": "dup",
      "defined_out": [
        "aggregate%substring3%15#0",
        "aggregate%substring3%15#0 (copy)",
        "app#0",
        "result.0.0#0",
        "result.0.1#0"
      ],
      "stack_out": [
        "app#0",
        "result.0.0#0",
        "result.0.1#0",
        "aggregate%substring3%15#0",
        "aggregate%substring3%15#0 (copy)"
      ]
    },
    "1377": {
      "op": "intc_0 // 0",
      "stack_out": [
        "app#0",
        "result.0.0#0",
        "result.0.1#0",
        "aggregate%substring3%15#0",
        "aggregate%substring3%15#0 (copy)",
        "0"
      ]
    },
    "1378": {
      "op": "extract_uint64",
      "defined_out": [
        "aggregate%substring3%15#0",
        "app#0",
        "result.0.0#0",
        "result.0.1#0",
        "result.1.0#0"
      ],
      "stack_out": [
        "app#0",
        "result.0.0#0",
        "result.0.1#0",
        "aggregate%substring3%15#0",
        "result.1.0#0"
      ]
    },
    "1379": {
      "op": "dig 1",
      "stack_out": [
        "app#0",
        "result.0.0#0",
        "result.0.1#0",
        "aggregate%substring3%15#0",
        "result.1.0#0",
        "aggregate%substring3%15#0 (copy)"
      ]
    },
    "1381": {
      "op": "extract 8 8",
      "defined_out": [
        "aggregate%substring3%15#0",
        "app#0",
        "result.0.0#0",
        "result.0.1#0",
        "result.1.0#0",
        "result.1.1#0"
      ],
      "stack_out": [
        "app#0",
        "result.0.0#0",
        "result.0.1#0",
        "aggregate%substring3%15#0",
        "result.1.0#0",
        "result.1.1#0"
      ]
    },
    "1384": {
      "op": "dig 2",
      "stack_out": [
        "app#0",
        "result.0.0#0",
        "result.0.1#0",
        "aggregate%substring3%15#0",
        "result.1.0#0",
        "result.1.1#0",
        "aggregate%substring3%15#0 (copy)"
      ]
    },
    "1386": {
      "op": "pushint 16 // 16",
      "defined_out": [
        "16",
        "aggregate%substring3%15#0",
        "aggregate%substring3%15#0 (copy)",
        "app#0",
        "result.0.0#0",
        "result.0.1#0",
        "result.1.0#0",
        "result.1.1#0"
      ],
      "stack_out": [
        "app#0",
        "result.0.0#0",
        "result.0.1#0",
        "aggregate%substring3%15#0",
        "result.1.0#0",
        "result.1.1#0",
        "aggregate%substring3%15#0 (copy)",
        "16"
      ]
    },
    "1388": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%extract_uint16%24#0",
        "aggregate%substring3%15#0",
        "app#0",
        "result.0.0#0",
        "result.0.1#0",
        "result.1.0#0",
        "result.1.1#0"
      ],
      "stack_out": [
        "app#0",
        "result.0.0#0",
        "result.0.1#0",
        "aggregate%substring3%15#0",
        "result.1.0#0",
        "result.1.1#0",
        "aggregate%extract_uint16%24#0"
      ]
    },
    "1389": {
      "op": "dig 3",
      "stack_out": [
        "app#0",
        "result.0.0#0",
        "result.0.1#0",
        "aggregate%substring3%15#0",
        "result.1.0#0",
        "result.1.1#0",
        "aggregate%extract_uint16%24#0",
        "aggregate%substring3%15#0 (copy)"
      ]
    },
    "1391": {
      "op": "len",
      "defined_out": [
        "aggregate%extract_uint16%24#0",
        "aggregate%len%8#0",
        "aggregate%substring3%15#0",
        "app#0",
        "result.0.0#0",
        "result.0.1#0",
        "result.1.0#0",
        "result.1.1#0"
      ],
      "stack_out": [
        "app#0",
        "result.0.0#0",
        "result.0.1#0",
        "aggregate%substring3%15#0",
        "result.1.0#0",
        "result.1.1#0",
        "aggregate%extract_uint16%24#0",
        "aggregate%len%8#0"
      ]
    },
    "1392": {
      "op": "uncover 4",
      "stack_out": [
        "app#0",
        "result.0.0#0",
        "result.0.1#0",
        "result.1.0#0",
        "result.1.1#0",
        "aggregate%extract_uint16%24#0",
        "aggregate%len%8#0",
        "aggregate%substring3%15#0"
      ]
    },
    "1394": {
      "op": "cover 2",
      "stack_out": [
        "app#0",
        "result.0.0#0",
        "result.0.1#0",
        "result.1.0#0",
        "result.1.1#0",
        "aggregate%substring3%15#0",
        "aggregate%extract_uint16%24#0",
        "aggregate%len%8#0"
      ]
    },
    "1396": {
      "op": "substring3",
      "defined_out": [
        "aggregate%substring3%16#0",
        "app#0",
        "result.0.0#0",
        "result.0.1#0",
        "result.1.0#0",
        "result.1.1#0"
      ],
      "stack_out": [
        "app#0",
        "result.0.0#0",
        "result.0.1#0",
        "result.1.0#0",
        "result.1.1#0",
        "aggregate%substring3%16#0"
      ]
    },
    "1397": {
      "op": "extract 2 0",
      "defined_out": [
        "app#0",
        "result.0.0#0",
        "result.0.1#0",
        "result.1.0#0",
        "result.1.1#0",
        "result.1.2#0"
      ],
      "stack_out": [
        "app#0",
        "result.0.0#0",
        "result.0.1#0",
        "result.1.0#0",
        "result.1.1#0",
        "result.1.2#0"
      ]
    },
    "1400": {
      "op": "uncover 4",
      "stack_out": [
        "app#0",
        "result.0.1#0",
        "result.1.0#0",
        "result.1.1#0",
        "result.1.2#0",
        "result.0.0#0"
      ]
    },
    "1402": {
      "op": "bytec 10 // \"echo: s1\"",
      "defined_out": [
        "\"echo: s1\"",
        "app#0",
        "result.0.0#0",
        "result.0.1#0",
        "result.1.0#0",
        "result.1.1#0",
        "result.1.2#0"
      ],
      "stack_out": [
        "app#0",
        "result.0.1#0",
        "result.1.0#0",
        "result.1.1#0",
        "result.1.2#0",
        "result.0.0#0",
        "\"echo: s1\""
      ]
    },
    "1404": {
      "op": "==",
      "defined_out": [
        "app#0",
        "result.0.1#0",
        "result.1.0#0",
        "result.1.1#0",
        "result.1.2#0",
        "tmp%12#1"
      ],
      "stack_out": [
        "app#0",
        "result.0.1#0",
        "result.1.0#0",
        "result.1.1#0",
        "result.1.2#0",
        "tmp%12#1"
      ]
    },
    "1405": {
      "op": "assert",
      "stack_out": [
        "app#0",
        "result.0.1#0",
        "result.1.0#0",
        "result.1.1#0",
        "result.1.2#0"
      ]
    },
    "1406": {
      "op": "uncover 3",
      "stack_out": [
        "app#0",
        "result.1.0#0",
        "result.1.1#0",
        "result.1.2#0",
        "result.0.1#0"
      ]
    },
    "1408": {
      "op": "bytec 27 // 0x00086563686f3a207332",
      "defined_out": [
        "0x00086563686f3a207332",
        "app#0",
        "result.0.1#0",
        "result.1.0#0",
        "result.1.1#0",
        "result.1.2#0"
      ],
      "stack_out": [
        "app#0",
        "result.1.0#0",
        "result.1.1#0",
        "result.1.2#0",
        "result.0.1#0",
        "0x00086563686f3a207332"
      ]
    },
    "1410": {
      "op": "==",
      "defined_out": [
        "app#0",
        "result.1.0#0",
        "result.1.1#0",
        "result.1.2#0",
        "tmp%14#3"
      ],
      "stack_out": [
        "app#0",
        "result.1.0#0",
        "result.1.1#0",
        "result.1.2#0",
        "tmp%14#3"
      ]
    },
    "1411": {
      "op": "assert",
      "stack_out": [
        "app#0",
        "result.1.0#0",
        "result.1.1#0",
        "result.1.2#0"
      ]
    },
    "1412": {
      "op": "uncover 2",
      "stack_out": [
        "app#0",
        "result.1.1#0",
        "result.1.2#0",
        "result.1.0#0"
      ]
    },
    "1414": {
      "op": "intc_3 // 2",
      "stack_out": [
        "app#0",
        "result.1.1#0",
        "result.1.2#0",
        "result.1.0#0",
        "2"
      ]
    },
    "1415": {
      "op": "==",
      "defined_out": [
        "app#0",
        "result.1.1#0",
        "result.1.2#0",
        "tmp%15#2"
      ],
      "stack_out": [
        "app#0",
        "result.1.1#0",
        "result.1.2#0",
        "tmp%15#2"
      ]
    },
    "1416": {
      "op": "assert",
      "stack_out": [
        "app#0",
        "result.1.1#0",
        "result.1.2#0"
      ]
    },
    "1417": {
      "op": "swap",
      "stack_out": [
        "app#0",
        "result.1.2#0",
        "result.1.1#0"
      ]
    },
    "1418": {
      "op": "bytec 16 // 0x0000000000000003",
      "defined_out": [
        "0x0000000000000003",
        "app#0",
        "result.1.1#0",
        "result.1.2#0"
      ],
      "stack_out": [
        "app#0",
        "result.1.2#0",
        "result.1.1#0",
        "0x0000000000000003"
      ]
    },
    "1420": {
      "op": "b==",
      "defined_out": [
        "app#0",
        "result.1.2#0",
        "tmp%16#0"
      ],
      "stack_out": [
        "app#0",
        "result.1.2#0",
        "tmp%16#0"
      ]
    },
    "1421": {
      "op": "assert",
      "stack_out": [
        "app#0",
        "result.1.2#0"
      ]
    },
    "1422": {
      "op": "bytec 28 // 0x6563686f3a2033",
      "defined_out": [
        "0x6563686f3a2033",
        "app#0",
        "result.1.2#0"
      ],
      "stack_out": [
        "app#0",
        "result.1.2#0",
        "0x6563686f3a2033"
      ]
    },
    "1424": {
      "op": "==",
      "defined_out": [
        "app#0",
        "tmp%17#2"
      ],
      "stack_out": [
        "app#0",
        "tmp%17#2"
      ]
    },
    "1425": {
      "op": "assert",
      "stack_out": [
        "app#0"
      ]
    },
    "1426": {
      "op": "itxn_begin"
    },
    "1427": {
      "op": "dup",
      "stack_out": [
        "app#0",
        "app#0 (copy)"
      ]
    },
    "1428": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "app#0"
      ]
    },
    "1430": {
      "op": "bytec 15 // method \"echo_nested_tuple(((string,string),(uint64,uint64,byte[])))((string,string),(uint64,uint64,byte[]))\"",
      "stack_out": [
        "app#0",
        "Method(echo_nested_tuple(((string,string),(uint64,uint64,byte[])))((string,string),(uint64,uint64,byte[])))"
      ]
    },
    "1432": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0"
      ]
    },
    "1434": {
      "op": "bytec 26 // 0x00040010000400080002733100027332000000000000000100000000000000020012000133",
      "stack_out": [
        "app#0",
        "0x00040010000400080002733100027332000000000000000100000000000000020012000133"
      ]
    },
    "1436": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0"
      ]
    },
    "1438": {
      "op": "intc_1 // appl",
      "stack_out": [
        "app#0",
        "appl"
      ]
    },
    "1439": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "app#0"
      ]
    },
    "1441": {
      "op": "intc_0 // 0",
      "stack_out": [
        "app#0",
        "0"
      ]
    },
    "1442": {
      "op": "itxn_field Fee",
      "stack_out": [
        "app#0"
      ]
    },
    "1444": {
      "op": "itxn_submit"
    },
    "1445": {
      "op": "itxn LastLog",
      "defined_out": [
        "app#0",
        "awst_tmp%1#0"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%1#0"
      ]
    },
    "1447": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "awst_tmp%1#0",
        "awst_tmp%1#0 (copy)"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%1#0",
        "awst_tmp%1#0 (copy)"
      ]
    },
    "1448": {
      "op": "extract 4 0",
      "defined_out": [
        "app#0",
        "awst_tmp%1#0",
        "tmp%20#1"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%1#0",
        "tmp%20#1"
      ]
    },
    "1451": {
      "op": "swap",
      "stack_out": [
        "app#0",
        "tmp%20#1",
        "awst_tmp%1#0"
      ]
    },
    "1452": {
      "op": "extract 0 4",
      "defined_out": [
        "app#0",
        "tmp%20#1",
        "tmp%21#1"
      ],
      "stack_out": [
        "app#0",
        "tmp%20#1",
        "tmp%21#1"
      ]
    },
    "1455": {
      "op": "bytec_0 // 0x151f7c75",
      "stack_out": [
        "app#0",
        "tmp%20#1",
        "tmp%21#1",
        "0x151f7c75"
      ]
    },
    "1456": {
      "op": "==",
      "defined_out": [
        "app#0",
        "tmp%20#1",
        "tmp%22#1"
      ],
      "stack_out": [
        "app#0",
        "tmp%20#1",
        "tmp%22#1"
      ]
    },
    "1457": {
      "error": "application log value is not the result of an ABI return",
      "op": "assert // application log value is not the result of an ABI return",
      "stack_out": [
        "app#0",
        "tmp%20#1"
      ]
    },
    "1458": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "tmp%20#1",
        "tmp%20#1 (copy)"
      ],
      "stack_out": [
        "app#0",
        "tmp%20#1",
        "tmp%20#1 (copy)"
      ]
    },
    "1459": {
      "op": "intc_0 // 0",
      "stack_out": [
        "app#0",
        "tmp%20#1",
        "tmp%20#1 (copy)",
        "0"
      ]
    },
    "1460": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%extract_uint16%25#0",
        "app#0",
        "tmp%20#1"
      ],
      "stack_out": [
        "app#0",
        "tmp%20#1",
        "aggregate%extract_uint16%25#0"
      ]
    },
    "1461": {
      "op": "dig 1",
      "stack_out": [
        "app#0",
        "tmp%20#1",
        "aggregate%extract_uint16%25#0",
        "tmp%20#1 (copy)"
      ]
    },
    "1463": {
      "op": "intc_3 // 2",
      "stack_out": [
        "app#0",
        "tmp%20#1",
        "aggregate%extract_uint16%25#0",
        "tmp%20#1 (copy)",
        "2"
      ]
    },
    "1464": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%extract_uint16%25#0",
        "aggregate%extract_uint16%26#0",
        "app#0",
        "tmp%20#1"
      ],
      "stack_out": [
        "app#0",
        "tmp%20#1",
        "aggregate%extract_uint16%25#0",
        "aggregate%extract_uint16%26#0"
      ]
    },
    "1465": {
      "op": "dig 2",
      "stack_out": [
        "app#0",
        "tmp%20#1",
        "aggregate%extract_uint16%25#0",
        "aggregate%extract_uint16%26#0",
        "tmp%20#1 (copy)"
      ]
    },
    "1467": {
      "op": "uncover 2",
      "stack_out": [
        "app#0",
        "tmp%20#1",
        "aggregate%extract_uint16%26#0",
        "tmp%20#1 (copy)",
        "aggregate%extract_uint16%25#0"
      ]
    },
    "1469": {
      "op": "dig 2",
      "defined_out": [
        "aggregate%extract_uint16%25#0",
        "aggregate%extract_uint16%26#0",
        "aggregate%extract_uint16%26#0 (copy)",
        "app#0",
        "tmp%20#1",
        "tmp%20#1 (copy)"
      ],
      "stack_out": [
        "app#0",
        "tmp%20#1",
        "aggregate%extract_uint16%26#0",
        "tmp%20#1 (copy)",
        "aggregate%extract_uint16%25#0",
        "aggregate%extract_uint16%26#0 (copy)"
      ]
    },
    "1471": {
      "op": "substring3",
      "defined_out": [
        "aggregate%extract_uint16%26#0",
        "aggregate%substring3%17#0",
        "app#0",
        "tmp%20#1"
      ],
      "stack_out": [
        "app#0",
        "tmp%20#1",
        "aggregate%extract_uint16%26#0",
        "aggregate%substring3%17#0"
      ]
    },
    "1472": {
      "op": "dup",
      "defined_out": [
        "aggregate%extract_uint16%26#0",
        "aggregate%substring3%17#0",
        "aggregate%substring3%17#0 (copy)",
        "app#0",
        "tmp%20#1"
      ],
      "stack_out": [
        "app#0",
        "tmp%20#1",
        "aggregate%extract_uint16%26#0",
        "aggregate%substring3%17#0",
        "aggregate%substring3%17#0 (copy)"
      ]
    },
    "1473": {
      "op": "intc_0 // 0",
      "stack_out": [
        "app#0",
        "tmp%20#1",
        "aggregate%extract_uint16%26#0",
        "aggregate%substring3%17#0",
        "aggregate%substring3%17#0 (copy)",
        "0"
      ]
    },
    "1474": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%extract_uint16%26#0",
        "aggregate%extract_uint16%27#0",
        "aggregate%substring3%17#0",
        "app#0",
        "tmp%20#1"
      ],
      "stack_out": [
        "app#0",
        "tmp%20#1",
        "aggregate%extract_uint16%26#0",
        "aggregate%substring3%17#0",
        "aggregate%extract_uint16%27#0"
      ]
    },
    "1475": {
      "op": "dig 1",
      "stack_out": [
        "app#0",
        "tmp%20#1",
        "aggregate%extract_uint16%26#0",
        "aggregate%substring3%17#0",
        "aggregate%extract_uint16%27#0",
        "aggregate%substring3%17#0 (copy)"
      ]
    },
    "1477": {
      "op": "intc_3 // 2",
      "stack_out": [
        "app#0",
        "tmp%20#1",
        "aggregate%extract_uint16%26#0",
        "aggregate%substring3%17#0",
        "aggregate%extract_uint16%27#0",
        "aggregate%substring3%17#0 (copy)",
        "2"
      ]
    },
    "1478": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%extract_uint16%26#0",
        "aggregate%extract_uint16%27#0",
        "aggregate%extract_uint16%28#0",
        "aggregate%substring3%17#0",
        "app#0",
        "tmp%20#1"
      ],
      "stack_out": [
        "app#0",
        "tmp%20#1",
        "aggregate%extract_uint16%26#0",
        "aggregate%substring3%17#0",
        "aggregate%extract_uint16%27#0",
        "aggregate%extract_uint16%28#0"
      ]
    },
    "1479": {
      "op": "dig 2",
      "stack_out": [
        "app#0",
        "tmp%20#1",
        "aggregate%extract_uint16%26#0",
        "aggregate%substring3%17#0",
        "aggregate%extract_uint16%27#0",
        "aggregate%extract_uint16%28#0",
        "aggregate%substring3%17#0 (copy)"
      ]
    },
    "1481": {
      "op": "uncover 2",
      "stack_out": [
        "app#0",
        "tmp%20#1",
        "aggregate%extract_uint16%26#0",
        "aggregate%substring3%17#0",
        "aggregate%extract_uint16%28#0",
        "aggregate%substring3%17#0 (copy)",
        "aggregate%extract_uint16%27#0"
      ]
    },
    "1483": {
      "op": "dig 2",
      "defined_out": [
        "aggregate%extract_uint16%26#0",
        "aggregate%extract_uint16%27#0",
        "aggregate%extract_uint16%28#0",
        "aggregate%extract_uint16%28#0 (copy)",
        "aggregate%substring3%17#0",
        "aggregate%substring3%17#0 (copy)",
        "app#0",
        "tmp%20#1"
      ],
      "stack_out": [
        "app#0",
        "tmp%20#1",
        "aggregate%extract_uint16%26#0",
        "aggregate%substring3%17#0",
        "aggregate%extract_uint16%28#0",
        "aggregate%substring3%17#0 (copy)",
        "aggregate%extract_uint16%27#0",
        "aggregate%extract_uint16%28#0 (copy)"
      ]
    },
    "1485": {
      "op": "substring3",
      "defined_out": [
        "aggregate%extract_uint16%26#0",
        "aggregate%extract_uint16%28#0",
        "aggregate%substring3%17#0",
        "aggregate%substring3%18#0",
        "app#0",
        "tmp%20#1"
      ],
      "stack_out": [
        "app#0",
        "tmp%20#1",
        "aggregate%extract_uint16%26#0",
        "aggregate%substring3%17#0",
        "aggregate%extract_uint16%28#0",
        "aggregate%substring3%18#0"
      ]
    },
    "1486": {
      "op": "extract 2 0",
      "stack_out": [
        "app#0",
        "tmp%20#1",
        "aggregate%extract_uint16%26#0",
        "aggregate%substring3%17#0",
        "aggregate%extract_uint16%28#0",
        "result.0.0#0"
      ]
    },
    "1489": {
      "op": "dig 2",
      "stack_out": [
        "app#0",
        "tmp%20#1",
        "aggregate%extract_uint16%26#0",
        "aggregate%substring3%17#0",
        "aggregate%extract_uint16%28#0",
        "result.0.0#0",
        "aggregate%substring3%17#0 (copy)"
      ]
    },
    "1491": {
      "op": "len",
      "defined_out": [
        "aggregate%extract_uint16%26#0",
        "aggregate%extract_uint16%28#0",
        "aggregate%len%9#0",
        "aggregate%substring3%17#0",
        "app#0",
        "result.0.0#0",
        "tmp%20#1"
      ],
      "stack_out": [
        "app#0",
        "tmp%20#1",
        "aggregate%extract_uint16%26#0",
        "aggregate%substring3%17#0",
        "aggregate%extract_uint16%28#0",
        "result.0.0#0",
        "aggregate%len%9#0"
      ]
    },
    "1492": {
      "op": "swap"
    },
    "1493": {
      "op": "cover 3",
      "stack_out": [
        "app#0",
        "tmp%20#1",
        "aggregate%extract_uint16%26#0",
        "result.0.0#0",
        "aggregate%substring3%17#0",
        "aggregate%extract_uint16%28#0",
        "aggregate%len%9#0"
      ]
    },
    "1495": {
      "op": "substring3",
      "stack_out": [
        "app#0",
        "tmp%20#1",
        "aggregate%extract_uint16%26#0",
        "result.0.0#0",
        "result.0.1#0"
      ]
    },
    "1496": {
      "op": "dig 3",
      "stack_out": [
        "app#0",
        "tmp%20#1",
        "aggregate%extract_uint16%26#0",
        "result.0.0#0",
        "result.0.1#0",
        "tmp%20#1 (copy)"
      ]
    },
    "1498": {
      "op": "len",
      "defined_out": [
        "aggregate%extract_uint16%26#0",
        "aggregate%len%10#0",
        "app#0",
        "result.0.0#0",
        "result.0.1#0",
        "tmp%20#1"
      ],
      "stack_out": [
        "app#0",
        "tmp%20#1",
        "aggregate%extract_uint16%26#0",
        "result.0.0#0",
        "result.0.1#0",
        "aggregate%len%10#0"
      ]
    },
    "1499": {
      "op": "uncover 4",
      "stack_out": [
        "app#0",
        "aggregate%extract_uint16%26#0",
        "result.0.0#0",
        "result.0.1#0",
        "aggregate%len%10#0",
        "tmp%20#1"
      ]
    },
    "1501": {
      "op": "uncover 4",
      "stack_out": [
        "app#0",
        "result.0.0#0",
        "result.0.1#0",
        "aggregate%len%10#0",
        "tmp%20#1",
        "aggregate%extract_uint16%26#0"
      ]
    },
    "1503": {
      "op": "uncover 2",
      "stack_out": [
        "app#0",
        "result.0.0#0",
        "result.0.1#0",
        "tmp%20#1",
        "aggregate%extract_uint16%26#0",
        "aggregate%len%10#0"
      ]
    },
    "1505": {
      "op": "substring3",
      "defined_out": [
        "aggregate%substring3%20#0",
        "app#0",
        "result.0.0#0",
        "result.0.1#0"
      ],
      "stack_out": [
        "app#0",
        "result.0.0#0",
        "result.0.1#0",
        "aggregate%substring3%20#0"
      ]
    },
    "1506": {
      "op": "dup",
      "defined_out": [
        "aggregate%substring3%20#0",
        "aggregate%substring3%20#0 (copy)",
        "app#0",
        "result.0.0#0",
        "result.0.1#0"
      ],
      "stack_out": [
        "app#0",
        "result.0.0#0",
        "result.0.1#0",
        "aggregate%substring3%20#0",
        "aggregate%substring3%20#0 (copy)"
      ]
    },
    "1507": {
      "op": "intc_0 // 0",
      "stack_out": [
        "app#0",
        "result.0.0#0",
        "result.0.1#0",
        "aggregate%substring3%20#0",
        "aggregate%substring3%20#0 (copy)",
        "0"
      ]
    },
    "1508": {
      "op": "extract_uint64",
      "stack_out": [
        "app#0",
        "result.0.0#0",
        "result.0.1#0",
        "aggregate%substring3%20#0",
        "result.1.0#0"
      ]
    },
    "1509": {
      "op": "dig 1",
      "stack_out": [
        "app#0",
        "result.0.0#0",
        "result.0.1#0",
        "aggregate%substring3%20#0",
        "result.1.0#0",
        "aggregate%substring3%20#0 (copy)"
      ]
    },
    "1511": {
      "op": "extract 8 8",
      "stack_out": [
        "app#0",
        "result.0.0#0",
        "result.0.1#0",
        "aggregate%substring3%20#0",
        "result.1.0#0",
        "result.1.1#0"
      ]
    },
    "1514": {
      "op": "dig 2",
      "stack_out": [
        "app#0",
        "result.0.0#0",
        "result.0.1#0",
        "aggregate%substring3%20#0",
        "result.1.0#0",
        "result.1.1#0",
        "aggregate%substring3%20#0 (copy)"
      ]
    },
    "1516": {
      "op": "pushint 16 // 16",
      "stack_out": [
        "app#0",
        "result.0.0#0",
        "result.0.1#0",
        "aggregate%substring3%20#0",
        "result.1.0#0",
        "result.1.1#0",
        "aggregate%substring3%20#0 (copy)",
        "16"
      ]
    },
    "1518": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%extract_uint16%31#0",
        "aggregate%substring3%20#0",
        "app#0",
        "result.0.0#0",
        "result.0.1#0",
        "result.1.0#0",
        "result.1.1#0"
      ],
      "stack_out": [
        "app#0",
        "result.0.0#0",
        "result.0.1#0",
        "aggregate%substring3%20#0",
        "result.1.0#0",
        "result.1.1#0",
        "aggregate%extract_uint16%31#0"
      ]
    },
    "1519": {
      "op": "dig 3",
      "stack_out": [
        "app#0",
        "result.0.0#0",
        "result.0.1#0",
        "aggregate%substring3%20#0",
        "result.1.0#0",
        "result.1.1#0",
        "aggregate%extract_uint16%31#0",
        "aggregate%substring3%20#0 (copy)"
      ]
    },
    "1521": {
      "op": "len",
      "defined_out": [
        "aggregate%extract_uint16%31#0",
        "aggregate%len%11#0",
        "aggregate%substring3%20#0",
        "app#0",
        "result.0.0#0",
        "result.0.1#0",
        "result.1.0#0",
        "result.1.1#0"
      ],
      "stack_out": [
        "app#0",
        "result.0.0#0",
        "result.0.1#0",
        "aggregate%substring3%20#0",
        "result.1.0#0",
        "result.1.1#0",
        "aggregate%extract_uint16%31#0",
        "aggregate%len%11#0"
      ]
    },
    "1522": {
      "op": "uncover 4",
      "stack_out": [
        "app#0",
        "result.0.0#0",
        "result.0.1#0",
        "result.1.0#0",
        "result.1.1#0",
        "aggregate%extract_uint16%31#0",
        "aggregate%len%11#0",
        "aggregate%substring3%20#0"
      ]
    },
    "1524": {
      "op": "cover 2",
      "stack_out": [
        "app#0",
        "result.0.0#0",
        "result.0.1#0",
        "result.1.0#0",
        "result.1.1#0",
        "aggregate%substring3%20#0",
        "aggregate%extract_uint16%31#0",
        "aggregate%len%11#0"
      ]
    },
    "1526": {
      "op": "substring3",
      "defined_out": [
        "aggregate%substring3%21#0",
        "app#0",
        "result.0.0#0",
        "result.0.1#0",
        "result.1.0#0",
        "result.1.1#0"
      ],
      "stack_out": [
        "app#0",
        "result.0.0#0",
        "result.0.1#0",
        "result.1.0#0",
        "result.1.1#0",
        "aggregate%substring3%21#0"
      ]
    },
    "1527": {
      "op": "extract 2 0",
      "stack_out": [
        "app#0",
        "result.0.0#0",
        "result.0.1#0",
        "result.1.0#0",
        "result.1.1#0",
        "result.1.2#0"
      ]
    },
    "1530": {
      "op": "uncover 4",
      "stack_out": [
        "app#0",
        "result.0.1#0",
        "result.1.0#0",
        "result.1.1#0",
        "result.1.2#0",
        "result.0.0#0"
      ]
    },
    "1532": {
      "op": "bytec 10 // \"echo: s1\"",
      "stack_out": [
        "app#0",
        "result.0.1#0",
        "result.1.0#0",
        "result.1.1#0",
        "result.1.2#0",
        "result.0.0#0",
        "\"echo: s1\""
      ]
    },
    "1534": {
      "op": "==",
      "defined_out": [
        "app#0",
        "result.0.1#0",
        "result.1.0#0",
        "result.1.1#0",
        "result.1.2#0",
        "tmp%28#2"
      ],
      "stack_out": [
        "app#0",
        "result.0.1#0",
        "result.1.0#0",
        "result.1.1#0",
        "result.1.2#0",
        "tmp%28#2"
      ]
    },
    "1535": {
      "op": "assert",
      "stack_out": [
        "app#0",
        "result.0.1#0",
        "result.1.0#0",
        "result.1.1#0",
        "result.1.2#0"
      ]
    },
    "1536": {
      "op": "uncover 3",
      "stack_out": [
        "app#0",
        "result.1.0#0",
        "result.1.1#0",
        "result.1.2#0",
        "result.0.1#0"
      ]
    },
    "1538": {
      "op": "bytec 27 // 0x00086563686f3a207332",
      "stack_out": [
        "app#0",
        "result.1.0#0",
        "result.1.1#0",
        "result.1.2#0",
        "result.0.1#0",
        "0x00086563686f3a207332"
      ]
    },
    "1540": {
      "op": "==",
      "defined_out": [
        "app#0",
        "result.1.0#0",
        "result.1.1#0",
        "result.1.2#0",
        "tmp%30#1"
      ],
      "stack_out": [
        "app#0",
        "result.1.0#0",
        "result.1.1#0",
        "result.1.2#0",
        "tmp%30#1"
      ]
    },
    "1541": {
      "op": "assert",
      "stack_out": [
        "app#0",
        "result.1.0#0",
        "result.1.1#0",
        "result.1.2#0"
      ]
    },
    "1542": {
      "op": "uncover 2",
      "stack_out": [
        "app#0",
        "result.1.1#0",
        "result.1.2#0",
        "result.1.0#0"
      ]
    },
    "1544": {
      "op": "intc_3 // 2",
      "stack_out": [
        "app#0",
        "result.1.1#0",
        "result.1.2#0",
        "result.1.0#0",
        "2"
      ]
    },
    "1545": {
      "op": "==",
      "defined_out": [
        "app#0",
        "result.1.1#0",
        "result.1.2#0",
        "tmp%31#0"
      ],
      "stack_out": [
        "app#0",
        "result.1.1#0",
        "result.1.2#0",
        "tmp%31#0"
      ]
    },
    "1546": {
      "op": "assert",
      "stack_out": [
        "app#0",
        "result.1.1#0",
        "result.1.2#0"
      ]
    },
    "1547": {
      "op": "swap",
      "stack_out": [
        "app#0",
        "result.1.2#0",
        "result.1.1#0"
      ]
    },
    "1548": {
      "op": "bytec 16 // 0x0000000000000003",
      "stack_out": [
        "app#0",
        "result.1.2#0",
        "result.1.1#0",
        "0x0000000000000003"
      ]
    },
    "1550": {
      "op": "b==",
      "defined_out": [
        "app#0",
        "result.1.2#0",
        "tmp%32#1"
      ],
      "stack_out": [
        "app#0",
        "result.1.2#0",
        "tmp%32#1"
      ]
    },
    "1551": {
      "op": "assert",
      "stack_out": [
        "app#0",
        "result.1.2#0"
      ]
    },
    "1552": {
      "op": "bytec 28 // 0x6563686f3a2033",
      "stack_out": [
        "app#0",
        "result.1.2#0",
        "0x6563686f3a2033"
      ]
    },
    "1554": {
      "op": "==",
      "defined_out": [
        "app#0",
        "tmp%33#1"
      ],
      "stack_out": [
        "app#0",
        "tmp%33#1"
      ]
    },
    "1555": {
      "op": "assert",
      "stack_out": [
        "app#0"
      ]
    },
    "1556": {
      "op": "itxn_begin"
    },
    "1557": {
      "op": "itxn_field ApplicationID",
      "stack_out": []
    },
    "1559": {
      "op": "bytec 15 // method \"echo_nested_tuple(((string,string),(uint64,uint64,byte[])))((string,string),(uint64,uint64,byte[]))\"",
      "stack_out": [
        "Method(echo_nested_tuple(((string,string),(uint64,uint64,byte[])))((string,string),(uint64,uint64,byte[])))"
      ]
    },
    "1561": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "1563": {
      "op": "pushbytes 0x000400120004000900037331620003733262000000000000000b0000000000000015001200023362",
      "defined_out": [
        "0x000400120004000900037331620003733262000000000000000b0000000000000015001200023362"
      ],
      "stack_out": [
        "0x000400120004000900037331620003733262000000000000000b0000000000000015001200023362"
      ]
    },
    "1605": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "1607": {
      "op": "intc_1 // appl",
      "stack_out": [
        "appl"
      ]
    },
    "1608": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "1610": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0"
      ]
    },
    "1611": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "1613": {
      "op": "itxn_submit"
    },
    "1614": {
      "op": "itxn LastLog",
      "defined_out": [
        "awst_tmp%2#0"
      ],
      "stack_out": [
        "awst_tmp%2#0"
      ]
    },
    "1616": {
      "op": "dup",
      "defined_out": [
        "awst_tmp%2#0",
        "awst_tmp%2#0 (copy)"
      ],
      "stack_out": [
        "awst_tmp%2#0",
        "awst_tmp%2#0 (copy)"
      ]
    },
    "1617": {
      "op": "extract 4 0",
      "defined_out": [
        "awst_tmp%2#0",
        "tmp%40#1"
      ],
      "stack_out": [
        "awst_tmp%2#0",
        "tmp%40#1"
      ]
    },
    "1620": {
      "op": "swap",
      "stack_out": [
        "tmp%40#1",
        "awst_tmp%2#0"
      ]
    },
    "1621": {
      "op": "extract 0 4",
      "defined_out": [
        "tmp%40#1",
        "tmp%41#2"
      ],
      "stack_out": [
        "tmp%40#1",
        "tmp%41#2"
      ]
    },
    "1624": {
      "op": "bytec_0 // 0x151f7c75",
      "stack_out": [
        "tmp%40#1",
        "tmp%41#2",
        "0x151f7c75"
      ]
    },
    "1625": {
      "op": "==",
      "defined_out": [
        "tmp%40#1",
        "tmp%42#0"
      ],
      "stack_out": [
        "tmp%40#1",
        "tmp%42#0"
      ]
    },
    "1626": {
      "error": "application log value is not the result of an ABI return",
      "op": "assert // application log value is not the result of an ABI return",
      "stack_out": [
        "tmp%40#1"
      ]
    },
    "1627": {
      "op": "dup",
      "defined_out": [
        "tmp%40#1",
        "tmp%40#1 (copy)"
      ],
      "stack_out": [
        "tmp%40#1",
        "tmp%40#1 (copy)"
      ]
    },
    "1628": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%40#1",
        "tmp%40#1 (copy)",
        "0"
      ]
    },
    "1629": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%extract_uint16%32#0",
        "tmp%40#1"
      ],
      "stack_out": [
        "tmp%40#1",
        "aggregate%extract_uint16%32#0"
      ]
    },
    "1630": {
      "op": "dig 1",
      "stack_out": [
        "tmp%40#1",
        "aggregate%extract_uint16%32#0",
        "tmp%40#1 (copy)"
      ]
    },
    "1632": {
      "op": "intc_3 // 2",
      "stack_out": [
        "tmp%40#1",
        "aggregate%extract_uint16%32#0",
        "tmp%40#1 (copy)",
        "2"
      ]
    },
    "1633": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%extract_uint16%32#0",
        "aggregate%extract_uint16%33#0",
        "tmp%40#1"
      ],
      "stack_out": [
        "tmp%40#1",
        "aggregate%extract_uint16%32#0",
        "aggregate%extract_uint16%33#0"
      ]
    },
    "1634": {
      "op": "dig 2",
      "stack_out": [
        "tmp%40#1",
        "aggregate%extract_uint16%32#0",
        "aggregate%extract_uint16%33#0",
        "tmp%40#1 (copy)"
      ]
    },
    "1636": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%40#1",
        "aggregate%extract_uint16%33#0",
        "tmp%40#1 (copy)",
        "aggregate%extract_uint16%32#0"
      ]
    },
    "1638": {
      "op": "dig 2",
      "defined_out": [
        "aggregate%extract_uint16%32#0",
        "aggregate%extract_uint16%33#0",
        "aggregate%extract_uint16%33#0 (copy)",
        "tmp%40#1",
        "tmp%40#1 (copy)"
      ],
      "stack_out": [
        "tmp%40#1",
        "aggregate%extract_uint16%33#0",
        "tmp%40#1 (copy)",
        "aggregate%extract_uint16%32#0",
        "aggregate%extract_uint16%33#0 (copy)"
      ]
    },
    "1640": {
      "op": "substring3",
      "defined_out": [
        "aggregate%extract_uint16%33#0",
        "aggregate%substring3%22#0",
        "tmp%40#1"
      ],
      "stack_out": [
        "tmp%40#1",
        "aggregate%extract_uint16%33#0",
        "aggregate%substring3%22#0"
      ]
    },
    "1641": {
      "op": "dup",
      "defined_out": [
        "aggregate%extract_uint16%33#0",
        "aggregate%substring3%22#0",
        "aggregate%substring3%22#0 (copy)",
        "tmp%40#1"
      ],
      "stack_out": [
        "tmp%40#1",
        "aggregate%extract_uint16%33#0",
        "aggregate%substring3%22#0",
        "aggregate%substring3%22#0 (copy)"
      ]
    },
    "1642": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%40#1",
        "aggregate%extract_uint16%33#0",
        "aggregate%substring3%22#0",
        "aggregate%substring3%22#0 (copy)",
        "0"
      ]
    },
    "1643": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%extract_uint16%33#0",
        "aggregate%extract_uint16%34#0",
        "aggregate%substring3%22#0",
        "tmp%40#1"
      ],
      "stack_out": [
        "tmp%40#1",
        "aggregate%extract_uint16%33#0",
        "aggregate%substring3%22#0",
        "aggregate%extract_uint16%34#0"
      ]
    },
    "1644": {
      "op": "dig 1",
      "stack_out": [
        "tmp%40#1",
        "aggregate%extract_uint16%33#0",
        "aggregate%substring3%22#0",
        "aggregate%extract_uint16%34#0",
        "aggregate%substring3%22#0 (copy)"
      ]
    },
    "1646": {
      "op": "intc_3 // 2",
      "stack_out": [
        "tmp%40#1",
        "aggregate%extract_uint16%33#0",
        "aggregate%substring3%22#0",
        "aggregate%extract_uint16%34#0",
        "aggregate%substring3%22#0 (copy)",
        "2"
      ]
    },
    "1647": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%extract_uint16%33#0",
        "aggregate%extract_uint16%34#0",
        "aggregate%extract_uint16%35#0",
        "aggregate%substring3%22#0",
        "tmp%40#1"
      ],
      "stack_out": [
        "tmp%40#1",
        "aggregate%extract_uint16%33#0",
        "aggregate%substring3%22#0",
        "aggregate%extract_uint16%34#0",
        "aggregate%extract_uint16%35#0"
      ]
    },
    "1648": {
      "op": "dig 2",
      "stack_out": [
        "tmp%40#1",
        "aggregate%extract_uint16%33#0",
        "aggregate%substring3%22#0",
        "aggregate%extract_uint16%34#0",
        "aggregate%extract_uint16%35#0",
        "aggregate%substring3%22#0 (copy)"
      ]
    },
    "1650": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%40#1",
        "aggregate%extract_uint16%33#0",
        "aggregate%substring3%22#0",
        "aggregate%extract_uint16%35#0",
        "aggregate%substring3%22#0 (copy)",
        "aggregate%extract_uint16%34#0"
      ]
    },
    "1652": {
      "op": "dig 2",
      "defined_out": [
        "aggregate%extract_uint16%33#0",
        "aggregate%extract_uint16%34#0",
        "aggregate%extract_uint16%35#0",
        "aggregate%extract_uint16%35#0 (copy)",
        "aggregate%substring3%22#0",
        "aggregate%substring3%22#0 (copy)",
        "tmp%40#1"
      ],
      "stack_out": [
        "tmp%40#1",
        "aggregate%extract_uint16%33#0",
        "aggregate%substring3%22#0",
        "aggregate%extract_uint16%35#0",
        "aggregate%substring3%22#0 (copy)",
        "aggregate%extract_uint16%34#0",
        "aggregate%extract_uint16%35#0 (copy)"
      ]
    },
    "1654": {
      "op": "substring3",
      "defined_out": [
        "aggregate%extract_uint16%33#0",
        "aggregate%extract_uint16%35#0",
        "aggregate%substring3%22#0",
        "aggregate%substring3%23#0",
        "tmp%40#1"
      ],
      "stack_out": [
        "tmp%40#1",
        "aggregate%extract_uint16%33#0",
        "aggregate%substring3%22#0",
        "aggregate%extract_uint16%35#0",
        "aggregate%substring3%23#0"
      ]
    },
    "1655": {
      "op": "extract 2 0",
      "stack_out": [
        "tmp%40#1",
        "aggregate%extract_uint16%33#0",
        "aggregate%substring3%22#0",
        "aggregate%extract_uint16%35#0",
        "result.0.0#0"
      ]
    },
    "1658": {
      "op": "dig 2",
      "stack_out": [
        "tmp%40#1",
        "aggregate%extract_uint16%33#0",
        "aggregate%substring3%22#0",
        "aggregate%extract_uint16%35#0",
        "result.0.0#0",
        "aggregate%substring3%22#0 (copy)"
      ]
    },
    "1660": {
      "op": "len",
      "defined_out": [
        "aggregate%extract_uint16%33#0",
        "aggregate%extract_uint16%35#0",
        "aggregate%len%12#0",
        "aggregate%substring3%22#0",
        "result.0.0#0",
        "tmp%40#1"
      ],
      "stack_out": [
        "tmp%40#1",
        "aggregate%extract_uint16%33#0",
        "aggregate%substring3%22#0",
        "aggregate%extract_uint16%35#0",
        "result.0.0#0",
        "aggregate%len%12#0"
      ]
    },
    "1661": {
      "op": "swap"
    },
    "1662": {
      "op": "cover 3",
      "stack_out": [
        "tmp%40#1",
        "aggregate%extract_uint16%33#0",
        "result.0.0#0",
        "aggregate%substring3%22#0",
        "aggregate%extract_uint16%35#0",
        "aggregate%len%12#0"
      ]
    },
    "1664": {
      "op": "substring3",
      "stack_out": [
        "tmp%40#1",
        "aggregate%extract_uint16%33#0",
        "result.0.0#0",
        "result.0.1#0"
      ]
    },
    "1665": {
      "op": "dig 3",
      "stack_out": [
        "tmp%40#1",
        "aggregate%extract_uint16%33#0",
        "result.0.0#0",
        "result.0.1#0",
        "tmp%40#1 (copy)"
      ]
    },
    "1667": {
      "op": "len",
      "defined_out": [
        "aggregate%extract_uint16%33#0",
        "aggregate%len%13#0",
        "result.0.0#0",
        "result.0.1#0",
        "tmp%40#1"
      ],
      "stack_out": [
        "tmp%40#1",
        "aggregate%extract_uint16%33#0",
        "result.0.0#0",
        "result.0.1#0",
        "aggregate%len%13#0"
      ]
    },
    "1668": {
      "op": "uncover 4",
      "stack_out": [
        "aggregate%extract_uint16%33#0",
        "result.0.0#0",
        "result.0.1#0",
        "aggregate%len%13#0",
        "tmp%40#1"
      ]
    },
    "1670": {
      "op": "uncover 4",
      "stack_out": [
        "result.0.0#0",
        "result.0.1#0",
        "aggregate%len%13#0",
        "tmp%40#1",
        "aggregate%extract_uint16%33#0"
      ]
    },
    "1672": {
      "op": "uncover 2",
      "stack_out": [
        "result.0.0#0",
        "result.0.1#0",
        "tmp%40#1",
        "aggregate%extract_uint16%33#0",
        "aggregate%len%13#0"
      ]
    },
    "1674": {
      "op": "substring3",
      "defined_out": [
        "aggregate%substring3%25#0",
        "result.0.0#0",
        "result.0.1#0"
      ],
      "stack_out": [
        "result.0.0#0",
        "result.0.1#0",
        "aggregate%substring3%25#0"
      ]
    },
    "1675": {
      "op": "dup",
      "defined_out": [
        "aggregate%substring3%25#0",
        "aggregate%substring3%25#0 (copy)",
        "result.0.0#0",
        "result.0.1#0"
      ],
      "stack_out": [
        "result.0.0#0",
        "result.0.1#0",
        "aggregate%substring3%25#0",
        "aggregate%substring3%25#0 (copy)"
      ]
    },
    "1676": {
      "op": "intc_0 // 0",
      "stack_out": [
        "result.0.0#0",
        "result.0.1#0",
        "aggregate%substring3%25#0",
        "aggregate%substring3%25#0 (copy)",
        "0"
      ]
    },
    "1677": {
      "op": "extract_uint64",
      "stack_out": [
        "result.0.0#0",
        "result.0.1#0",
        "aggregate%substring3%25#0",
        "result.1.0#0"
      ]
    },
    "1678": {
      "op": "dig 1",
      "stack_out": [
        "result.0.0#0",
        "result.0.1#0",
        "aggregate%substring3%25#0",
        "result.1.0#0",
        "aggregate%substring3%25#0 (copy)"
      ]
    },
    "1680": {
      "op": "extract 8 8",
      "stack_out": [
        "result.0.0#0",
        "result.0.1#0",
        "aggregate%substring3%25#0",
        "result.1.0#0",
        "result.1.1#0"
      ]
    },
    "1683": {
      "op": "dig 2",
      "stack_out": [
        "result.0.0#0",
        "result.0.1#0",
        "aggregate%substring3%25#0",
        "result.1.0#0",
        "result.1.1#0",
        "aggregate%substring3%25#0 (copy)"
      ]
    },
    "1685": {
      "op": "pushint 16 // 16",
      "stack_out": [
        "result.0.0#0",
        "result.0.1#0",
        "aggregate%substring3%25#0",
        "result.1.0#0",
        "result.1.1#0",
        "aggregate%substring3%25#0 (copy)",
        "16"
      ]
    },
    "1687": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%extract_uint16%38#0",
        "aggregate%substring3%25#0",
        "result.0.0#0",
        "result.0.1#0",
        "result.1.0#0",
        "result.1.1#0"
      ],
      "stack_out": [
        "result.0.0#0",
        "result.0.1#0",
        "aggregate%substring3%25#0",
        "result.1.0#0",
        "result.1.1#0",
        "aggregate%extract_uint16%38#0"
      ]
    },
    "1688": {
      "op": "dig 3",
      "stack_out": [
        "result.0.0#0",
        "result.0.1#0",
        "aggregate%substring3%25#0",
        "result.1.0#0",
        "result.1.1#0",
        "aggregate%extract_uint16%38#0",
        "aggregate%substring3%25#0 (copy)"
      ]
    },
    "1690": {
      "op": "len",
      "defined_out": [
        "aggregate%extract_uint16%38#0",
        "aggregate%len%14#0",
        "aggregate%substring3%25#0",
        "result.0.0#0",
        "result.0.1#0",
        "result.1.0#0",
        "result.1.1#0"
      ],
      "stack_out": [
        "result.0.0#0",
        "result.0.1#0",
        "aggregate%substring3%25#0",
        "result.1.0#0",
        "result.1.1#0",
        "aggregate%extract_uint16%38#0",
        "aggregate%len%14#0"
      ]
    },
    "1691": {
      "op": "uncover 4",
      "stack_out": [
        "result.0.0#0",
        "result.0.1#0",
        "result.1.0#0",
        "result.1.1#0",
        "aggregate%extract_uint16%38#0",
        "aggregate%len%14#0",
        "aggregate%substring3%25#0"
      ]
    },
    "1693": {
      "op": "cover 2",
      "stack_out": [
        "result.0.0#0",
        "result.0.1#0",
        "result.1.0#0",
        "result.1.1#0",
        "aggregate%substring3%25#0",
        "aggregate%extract_uint16%38#0",
        "aggregate%len%14#0"
      ]
    },
    "1695": {
      "op": "substring3",
      "defined_out": [
        "aggregate%substring3%26#0",
        "result.0.0#0",
        "result.0.1#0",
        "result.1.0#0",
        "result.1.1#0"
      ],
      "stack_out": [
        "result.0.0#0",
        "result.0.1#0",
        "result.1.0#0",
        "result.1.1#0",
        "aggregate%substring3%26#0"
      ]
    },
    "1696": {
      "op": "extract 2 0",
      "stack_out": [
        "result.0.0#0",
        "result.0.1#0",
        "result.1.0#0",
        "result.1.1#0",
        "result.1.2#0"
      ]
    },
    "1699": {
      "op": "uncover 4",
      "stack_out": [
        "result.0.1#0",
        "result.1.0#0",
        "result.1.1#0",
        "result.1.2#0",
        "result.0.0#0"
      ]
    },
    "1701": {
      "op": "pushbytes \"echo: s1b\"",
      "defined_out": [
        "\"echo: s1b\"",
        "result.0.0#0",
        "result.0.1#0",
        "result.1.0#0",
        "result.1.1#0",
        "result.1.2#0"
      ],
      "stack_out": [
        "result.0.1#0",
        "result.1.0#0",
        "result.1.1#0",
        "result.1.2#0",
        "result.0.0#0",
        "\"echo: s1b\""
      ]
    },
    "1712": {
      "op": "==",
      "defined_out": [
        "result.0.1#0",
        "result.1.0#0",
        "result.1.1#0",
        "result.1.2#0",
        "tmp%48#1"
      ],
      "stack_out": [
        "result.0.1#0",
        "result.1.0#0",
        "result.1.1#0",
        "result.1.2#0",
        "tmp%48#1"
      ]
    },
    "1713": {
      "op": "assert",
      "stack_out": [
        "result.0.1#0",
        "result.1.0#0",
        "result.1.1#0",
        "result.1.2#0"
      ]
    },
    "1714": {
      "op": "uncover 3",
      "stack_out": [
        "result.1.0#0",
        "result.1.1#0",
        "result.1.2#0",
        "result.0.1#0"
      ]
    },
    "1716": {
      "op": "pushbytes 0x00096563686f3a20733262",
      "defined_out": [
        "0x00096563686f3a20733262",
        "result.0.1#0",
        "result.1.0#0",
        "result.1.1#0",
        "result.1.2#0"
      ],
      "stack_out": [
        "result.1.0#0",
        "result.1.1#0",
        "result.1.2#0",
        "result.0.1#0",
        "0x00096563686f3a20733262"
      ]
    },
    "1729": {
      "op": "==",
      "defined_out": [
        "result.1.0#0",
        "result.1.1#0",
        "result.1.2#0",
        "tmp%50#1"
      ],
      "stack_out": [
        "result.1.0#0",
        "result.1.1#0",
        "result.1.2#0",
        "tmp%50#1"
      ]
    },
    "1730": {
      "op": "assert",
      "stack_out": [
        "result.1.0#0",
        "result.1.1#0",
        "result.1.2#0"
      ]
    },
    "1731": {
      "op": "uncover 2",
      "stack_out": [
        "result.1.1#0",
        "result.1.2#0",
        "result.1.0#0"
      ]
    },
    "1733": {
      "op": "pushint 12 // 12",
      "defined_out": [
        "12",
        "result.1.0#0",
        "result.1.1#0",
        "result.1.2#0"
      ],
      "stack_out": [
        "result.1.1#0",
        "result.1.2#0",
        "result.1.0#0",
        "12"
      ]
    },
    "1735": {
      "op": "==",
      "defined_out": [
        "result.1.1#0",
        "result.1.2#0",
        "tmp%51#1"
      ],
      "stack_out": [
        "result.1.1#0",
        "result.1.2#0",
        "tmp%51#1"
      ]
    },
    "1736": {
      "op": "assert",
      "stack_out": [
        "result.1.1#0",
        "result.1.2#0"
      ]
    },
    "1737": {
      "op": "swap",
      "stack_out": [
        "result.1.2#0",
        "result.1.1#0"
      ]
    },
    "1738": {
      "op": "pushbytes 0x0000000000000016",
      "defined_out": [
        "0x0000000000000016",
        "result.1.1#0",
        "result.1.2#0"
      ],
      "stack_out": [
        "result.1.2#0",
        "result.1.1#0",
        "0x0000000000000016"
      ]
    },
    "1748": {
      "op": "b==",
      "defined_out": [
        "result.1.2#0",
        "tmp%52#0"
      ],
      "stack_out": [
        "result.1.2#0",
        "tmp%52#0"
      ]
    },
    "1749": {
      "op": "assert",
      "stack_out": [
        "result.1.2#0"
      ]
    },
    "1750": {
      "op": "pushbytes 0x6563686f3a203362",
      "defined_out": [
        "0x6563686f3a203362",
        "result.1.2#0"
      ],
      "stack_out": [
        "result.1.2#0",
        "0x6563686f3a203362"
      ]
    },
    "1760": {
      "op": "==",
      "defined_out": [
        "tmp%53#2"
      ],
      "stack_out": [
        "tmp%53#2"
      ]
    },
    "1761": {
      "op": "assert",
      "stack_out": []
    },
    "1762": {
      "op": "intc_2 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1763": {
      "op": "return",
      "stack_out": []
    },
    "1764": {
      "block": "main_test_native_tuple_method_ref_route@16",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%71#0"
      ],
      "stack_out": [
        "tmp%71#0"
      ]
    },
    "1766": {
      "op": "!",
      "defined_out": [
        "tmp%72#0"
      ],
      "stack_out": [
        "tmp%72#0"
      ]
    },
    "1767": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "1768": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%73#0"
      ],
      "stack_out": [
        "tmp%73#0"
      ]
    },
    "1770": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "1771": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded(uint64)%14#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint64)%14#0"
      ]
    },
    "1774": {
      "op": "btoi",
      "defined_out": [
        "app#0"
      ],
      "stack_out": [
        "app#0"
      ]
    },
    "1775": {
      "op": "itxn_begin"
    },
    "1776": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "app#0 (copy)"
      ],
      "stack_out": [
        "app#0",
        "app#0 (copy)"
      ]
    },
    "1777": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "app#0"
      ]
    },
    "1779": {
      "op": "bytec 4 // method \"echo_native_tuple(string,byte[],uint64,uint512)(string,byte[],uint64,uint512)\"",
      "defined_out": [
        "Method(echo_native_tuple(string,byte[],uint64,uint512)(string,byte[],uint64,uint512))",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "Method(echo_native_tuple(string,byte[],uint64,uint512)(string,byte[],uint64,uint512))"
      ]
    },
    "1781": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0"
      ]
    },
    "1783": {
      "op": "bytec 5 // 0x00027331",
      "defined_out": [
        "0x00027331",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "0x00027331"
      ]
    },
    "1785": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0"
      ]
    },
    "1787": {
      "op": "bytec 6 // 0x00026231",
      "defined_out": [
        "0x00026231",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "0x00026231"
      ]
    },
    "1789": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0"
      ]
    },
    "1791": {
      "op": "bytec_2 // 0x0000000000000001",
      "defined_out": [
        "0x0000000000000001",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "0x0000000000000001"
      ]
    },
    "1792": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0"
      ]
    },
    "1794": {
      "op": "bytec_1 // 0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002",
      "defined_out": [
        "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002"
      ]
    },
    "1795": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0"
      ]
    },
    "1797": {
      "op": "intc_1 // appl",
      "defined_out": [
        "app#0",
        "appl"
      ],
      "stack_out": [
        "app#0",
        "appl"
      ]
    },
    "1798": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "app#0"
      ]
    },
    "1800": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "0"
      ]
    },
    "1801": {
      "op": "itxn_field Fee",
      "stack_out": [
        "app#0"
      ]
    },
    "1803": {
      "op": "itxn_submit"
    },
    "1804": {
      "op": "itxn LastLog",
      "defined_out": [
        "app#0",
        "awst_tmp%0#0"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0"
      ]
    },
    "1806": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ]
    },
    "1807": {
      "op": "extract 4 0",
      "defined_out": [
        "app#0",
        "awst_tmp%0#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "tmp%2#0"
      ]
    },
    "1810": {
      "op": "dig 1",
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "tmp%2#0",
        "awst_tmp%0#0 (copy)"
      ]
    },
    "1812": {
      "op": "extract 0 4",
      "defined_out": [
        "app#0",
        "awst_tmp%0#0",
        "tmp%2#0",
        "tmp%3#1"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "tmp%2#0",
        "tmp%3#1"
      ]
    },
    "1815": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "app#0",
        "awst_tmp%0#0",
        "tmp%2#0",
        "tmp%3#1"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "tmp%2#0",
        "tmp%3#1",
        "0x151f7c75"
      ]
    },
    "1816": {
      "op": "==",
      "defined_out": [
        "app#0",
        "awst_tmp%0#0",
        "tmp%2#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "tmp%2#0",
        "tmp%4#0"
      ]
    },
    "1817": {
      "error": "application log value is not the result of an ABI return",
      "op": "assert // application log value is not the result of an ABI return",
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "tmp%2#0"
      ]
    },
    "1818": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "awst_tmp%0#0",
        "tmp%2#0",
        "tmp%2#0 (copy)"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "tmp%2#0",
        "tmp%2#0 (copy)"
      ]
    },
    "1819": {
      "op": "intc_0 // 0",
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "tmp%2#0",
        "tmp%2#0 (copy)",
        "0"
      ]
    },
    "1820": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%extract_uint16%6#0",
        "app#0",
        "awst_tmp%0#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "tmp%2#0",
        "aggregate%extract_uint16%6#0"
      ]
    },
    "1821": {
      "op": "dig 1",
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "tmp%2#0",
        "aggregate%extract_uint16%6#0",
        "tmp%2#0 (copy)"
      ]
    },
    "1823": {
      "op": "intc_3 // 2",
      "defined_out": [
        "2",
        "aggregate%extract_uint16%6#0",
        "app#0",
        "awst_tmp%0#0",
        "tmp%2#0",
        "tmp%2#0 (copy)"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "tmp%2#0",
        "aggregate%extract_uint16%6#0",
        "tmp%2#0 (copy)",
        "2"
      ]
    },
    "1824": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%extract_uint16%6#0",
        "aggregate%extract_uint16%7#0",
        "app#0",
        "awst_tmp%0#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "tmp%2#0",
        "aggregate%extract_uint16%6#0",
        "aggregate%extract_uint16%7#0"
      ]
    },
    "1825": {
      "op": "dig 2",
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "tmp%2#0",
        "aggregate%extract_uint16%6#0",
        "aggregate%extract_uint16%7#0",
        "tmp%2#0 (copy)"
      ]
    },
    "1827": {
      "op": "uncover 2",
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "tmp%2#0",
        "aggregate%extract_uint16%7#0",
        "tmp%2#0 (copy)",
        "aggregate%extract_uint16%6#0"
      ]
    },
    "1829": {
      "op": "dig 2",
      "defined_out": [
        "aggregate%extract_uint16%6#0",
        "aggregate%extract_uint16%7#0",
        "aggregate%extract_uint16%7#0 (copy)",
        "app#0",
        "awst_tmp%0#0",
        "tmp%2#0",
        "tmp%2#0 (copy)"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "tmp%2#0",
        "aggregate%extract_uint16%7#0",
        "tmp%2#0 (copy)",
        "aggregate%extract_uint16%6#0",
        "aggregate%extract_uint16%7#0 (copy)"
      ]
    },
    "1831": {
      "op": "substring3",
      "defined_out": [
        "aggregate%extract_uint16%7#0",
        "aggregate%substring3%4#0",
        "app#0",
        "awst_tmp%0#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "tmp%2#0",
        "aggregate%extract_uint16%7#0",
        "aggregate%substring3%4#0"
      ]
    },
    "1832": {
      "op": "extract 2 0",
      "defined_out": [
        "aggregate%extract_uint16%7#0",
        "app#0",
        "awst_tmp%0#0",
        "result.0#6",
        "tmp%2#0"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "tmp%2#0",
        "aggregate%extract_uint16%7#0",
        "result.0#6"
      ]
    },
    "1835": {
      "op": "dig 2",
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "tmp%2#0",
        "aggregate%extract_uint16%7#0",
        "result.0#6",
        "tmp%2#0 (copy)"
      ]
    },
    "1837": {
      "op": "len",
      "defined_out": [
        "aggregate%extract_uint16%7#0",
        "aggregate%len%2#0",
        "app#0",
        "awst_tmp%0#0",
        "result.0#6",
        "tmp%2#0"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "tmp%2#0",
        "aggregate%extract_uint16%7#0",
        "result.0#6",
        "aggregate%len%2#0"
      ]
    },
    "1838": {
      "op": "swap"
    },
    "1839": {
      "op": "cover 3",
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "result.0#6",
        "tmp%2#0",
        "aggregate%extract_uint16%7#0",
        "aggregate%len%2#0"
      ]
    },
    "1841": {
      "op": "substring3",
      "defined_out": [
        "aggregate%substring3%5#0",
        "app#0",
        "awst_tmp%0#0",
        "result.0#6"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "result.0#6",
        "aggregate%substring3%5#0"
      ]
    },
    "1842": {
      "op": "extract 2 0",
      "defined_out": [
        "app#0",
        "awst_tmp%0#0",
        "result.0#6",
        "result.1#6"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "result.0#6",
        "result.1#6"
      ]
    },
    "1845": {
      "op": "dig 2",
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "result.0#6",
        "result.1#6",
        "awst_tmp%0#0 (copy)"
      ]
    },
    "1847": {
      "op": "pushint 8 // 8",
      "defined_out": [
        "8",
        "app#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)",
        "result.0#6",
        "result.1#6"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "result.0#6",
        "result.1#6",
        "awst_tmp%0#0 (copy)",
        "8"
      ]
    },
    "1849": {
      "op": "extract_uint64",
      "defined_out": [
        "app#0",
        "awst_tmp%0#0",
        "result.0#6",
        "result.1#6",
        "result.2#6"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "result.0#6",
        "result.1#6",
        "result.2#6"
      ]
    },
    "1850": {
      "op": "uncover 3",
      "stack_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "awst_tmp%0#0"
      ]
    },
    "1852": {
      "op": "extract 16 64",
      "defined_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0"
      ],
      "stack_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0"
      ]
    },
    "1855": {
      "op": "dig 3",
      "defined_out": [
        "app#0",
        "result.0#6",
        "result.0#6 (copy)",
        "result.1#6",
        "result.2#6",
        "result.3#0"
      ],
      "stack_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "result.0#6 (copy)"
      ]
    },
    "1857": {
      "op": "bytec 10 // \"echo: s1\"",
      "defined_out": [
        "\"echo: s1\"",
        "app#0",
        "result.0#6",
        "result.0#6 (copy)",
        "result.1#6",
        "result.2#6",
        "result.3#0"
      ],
      "stack_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "result.0#6 (copy)",
        "\"echo: s1\""
      ]
    },
    "1859": {
      "op": "==",
      "defined_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "tmp%9#1"
      ],
      "stack_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "tmp%9#1"
      ]
    },
    "1860": {
      "op": "assert",
      "stack_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0"
      ]
    },
    "1861": {
      "op": "dig 2",
      "defined_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.1#6 (copy)",
        "result.2#6",
        "result.3#0"
      ],
      "stack_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "result.1#6 (copy)"
      ]
    },
    "1863": {
      "op": "bytec 29 // 0x6563686f3a206231",
      "defined_out": [
        "0x6563686f3a206231",
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.1#6 (copy)",
        "result.2#6",
        "result.3#0"
      ],
      "stack_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "result.1#6 (copy)",
        "0x6563686f3a206231"
      ]
    },
    "1865": {
      "op": "==",
      "defined_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "tmp%10#1"
      ],
      "stack_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "tmp%10#1"
      ]
    },
    "1866": {
      "op": "assert",
      "stack_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0"
      ]
    },
    "1867": {
      "op": "dig 1",
      "defined_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.2#6 (copy)",
        "result.3#0"
      ],
      "stack_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "result.2#6 (copy)"
      ]
    },
    "1869": {
      "op": "intc_3 // 2",
      "stack_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "result.2#6 (copy)",
        "2"
      ]
    },
    "1870": {
      "op": "==",
      "defined_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "tmp%11#0"
      ]
    },
    "1871": {
      "op": "assert",
      "stack_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0"
      ]
    },
    "1872": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "result.3#0 (copy)"
      ],
      "stack_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "result.3#0 (copy)"
      ]
    },
    "1873": {
      "op": "bytec 17 // 0x03",
      "defined_out": [
        "0x03",
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "result.3#0 (copy)"
      ],
      "stack_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "result.3#0 (copy)",
        "0x03"
      ]
    },
    "1875": {
      "op": "b==",
      "defined_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "tmp%12#1"
      ],
      "stack_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "tmp%12#1"
      ]
    },
    "1876": {
      "op": "assert",
      "stack_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0"
      ]
    },
    "1877": {
      "op": "itxn_begin"
    },
    "1878": {
      "op": "intc_2 // 1",
      "defined_out": [
        "1",
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0"
      ],
      "stack_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "1"
      ]
    },
    "1879": {
      "op": "itob",
      "defined_out": [
        "aggregate%val_as_bytes%2#0",
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0"
      ],
      "stack_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "aggregate%val_as_bytes%2#0"
      ]
    },
    "1880": {
      "op": "dig 5",
      "stack_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "aggregate%val_as_bytes%2#0",
        "app#0 (copy)"
      ]
    },
    "1882": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "aggregate%val_as_bytes%2#0"
      ]
    },
    "1884": {
      "op": "bytec 4 // method \"echo_native_tuple(string,byte[],uint64,uint512)(string,byte[],uint64,uint512)\"",
      "stack_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "aggregate%val_as_bytes%2#0",
        "Method(echo_native_tuple(string,byte[],uint64,uint512)(string,byte[],uint64,uint512))"
      ]
    },
    "1886": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "aggregate%val_as_bytes%2#0"
      ]
    },
    "1888": {
      "op": "bytec 5 // 0x00027331",
      "stack_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "aggregate%val_as_bytes%2#0",
        "0x00027331"
      ]
    },
    "1890": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "aggregate%val_as_bytes%2#0"
      ]
    },
    "1892": {
      "op": "bytec 6 // 0x00026231",
      "stack_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "aggregate%val_as_bytes%2#0",
        "0x00026231"
      ]
    },
    "1894": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "aggregate%val_as_bytes%2#0"
      ]
    },
    "1896": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0"
      ]
    },
    "1898": {
      "op": "bytec_1 // 0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002",
      "stack_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002"
      ]
    },
    "1899": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0"
      ]
    },
    "1901": {
      "op": "intc_1 // appl",
      "stack_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "appl"
      ]
    },
    "1902": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0"
      ]
    },
    "1904": {
      "op": "intc_0 // 0",
      "stack_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "0"
      ]
    },
    "1905": {
      "op": "itxn_field Fee",
      "stack_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0"
      ]
    },
    "1907": {
      "op": "itxn_submit"
    },
    "1908": {
      "op": "itxn LastLog",
      "defined_out": [
        "app#0",
        "awst_tmp%1#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0"
      ],
      "stack_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "awst_tmp%1#0"
      ]
    },
    "1910": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "awst_tmp%1#0",
        "awst_tmp%1#0 (copy)",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0"
      ],
      "stack_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "awst_tmp%1#0",
        "awst_tmp%1#0 (copy)"
      ]
    },
    "1911": {
      "op": "extract 4 0",
      "defined_out": [
        "app#0",
        "awst_tmp%1#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "tmp%17#1"
      ],
      "stack_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "awst_tmp%1#0",
        "tmp%17#1"
      ]
    },
    "1914": {
      "op": "dig 1",
      "stack_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "awst_tmp%1#0",
        "tmp%17#1",
        "awst_tmp%1#0 (copy)"
      ]
    },
    "1916": {
      "op": "extract 0 4",
      "defined_out": [
        "app#0",
        "awst_tmp%1#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "tmp%17#1",
        "tmp%18#2"
      ],
      "stack_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "awst_tmp%1#0",
        "tmp%17#1",
        "tmp%18#2"
      ]
    },
    "1919": {
      "op": "bytec_0 // 0x151f7c75",
      "stack_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "awst_tmp%1#0",
        "tmp%17#1",
        "tmp%18#2",
        "0x151f7c75"
      ]
    },
    "1920": {
      "op": "==",
      "defined_out": [
        "app#0",
        "awst_tmp%1#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "tmp%17#1",
        "tmp%19#2"
      ],
      "stack_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "awst_tmp%1#0",
        "tmp%17#1",
        "tmp%19#2"
      ]
    },
    "1921": {
      "error": "application log value is not the result of an ABI return",
      "op": "assert // application log value is not the result of an ABI return",
      "stack_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "awst_tmp%1#0",
        "tmp%17#1"
      ]
    },
    "1922": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "awst_tmp%1#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "tmp%17#1",
        "tmp%17#1 (copy)"
      ],
      "stack_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "awst_tmp%1#0",
        "tmp%17#1",
        "tmp%17#1 (copy)"
      ]
    },
    "1923": {
      "op": "intc_0 // 0",
      "stack_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "awst_tmp%1#0",
        "tmp%17#1",
        "tmp%17#1 (copy)",
        "0"
      ]
    },
    "1924": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%extract_uint16%9#0",
        "app#0",
        "awst_tmp%1#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "tmp%17#1"
      ],
      "stack_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "awst_tmp%1#0",
        "tmp%17#1",
        "aggregate%extract_uint16%9#0"
      ]
    },
    "1925": {
      "op": "dig 1",
      "stack_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "awst_tmp%1#0",
        "tmp%17#1",
        "aggregate%extract_uint16%9#0",
        "tmp%17#1 (copy)"
      ]
    },
    "1927": {
      "op": "intc_3 // 2",
      "stack_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "awst_tmp%1#0",
        "tmp%17#1",
        "aggregate%extract_uint16%9#0",
        "tmp%17#1 (copy)",
        "2"
      ]
    },
    "1928": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%extract_uint16%10#0",
        "aggregate%extract_uint16%9#0",
        "app#0",
        "awst_tmp%1#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "tmp%17#1"
      ],
      "stack_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "awst_tmp%1#0",
        "tmp%17#1",
        "aggregate%extract_uint16%9#0",
        "aggregate%extract_uint16%10#0"
      ]
    },
    "1929": {
      "op": "dig 2",
      "stack_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "awst_tmp%1#0",
        "tmp%17#1",
        "aggregate%extract_uint16%9#0",
        "aggregate%extract_uint16%10#0",
        "tmp%17#1 (copy)"
      ]
    },
    "1931": {
      "op": "uncover 2",
      "stack_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "awst_tmp%1#0",
        "tmp%17#1",
        "aggregate%extract_uint16%10#0",
        "tmp%17#1 (copy)",
        "aggregate%extract_uint16%9#0"
      ]
    },
    "1933": {
      "op": "dig 2",
      "defined_out": [
        "aggregate%extract_uint16%10#0",
        "aggregate%extract_uint16%10#0 (copy)",
        "aggregate%extract_uint16%9#0",
        "app#0",
        "awst_tmp%1#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "tmp%17#1",
        "tmp%17#1 (copy)"
      ],
      "stack_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "awst_tmp%1#0",
        "tmp%17#1",
        "aggregate%extract_uint16%10#0",
        "tmp%17#1 (copy)",
        "aggregate%extract_uint16%9#0",
        "aggregate%extract_uint16%10#0 (copy)"
      ]
    },
    "1935": {
      "op": "substring3",
      "defined_out": [
        "aggregate%extract_uint16%10#0",
        "aggregate%substring3%6#0",
        "app#0",
        "awst_tmp%1#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "tmp%17#1"
      ],
      "stack_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "awst_tmp%1#0",
        "tmp%17#1",
        "aggregate%extract_uint16%10#0",
        "aggregate%substring3%6#0"
      ]
    },
    "1936": {
      "op": "extract 2 0",
      "defined_out": [
        "aggregate%extract_uint16%10#0",
        "app#0",
        "awst_tmp%1#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "result_2.0#0",
        "tmp%17#1"
      ],
      "stack_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "awst_tmp%1#0",
        "tmp%17#1",
        "aggregate%extract_uint16%10#0",
        "result_2.0#0"
      ]
    },
    "1939": {
      "op": "dig 2",
      "stack_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "awst_tmp%1#0",
        "tmp%17#1",
        "aggregate%extract_uint16%10#0",
        "result_2.0#0",
        "tmp%17#1 (copy)"
      ]
    },
    "1941": {
      "op": "len",
      "defined_out": [
        "aggregate%extract_uint16%10#0",
        "aggregate%len%3#0",
        "app#0",
        "awst_tmp%1#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "result_2.0#0",
        "tmp%17#1"
      ],
      "stack_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "awst_tmp%1#0",
        "tmp%17#1",
        "aggregate%extract_uint16%10#0",
        "result_2.0#0",
        "aggregate%len%3#0"
      ]
    },
    "1942": {
      "op": "swap"
    },
    "1943": {
      "op": "cover 3",
      "stack_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "awst_tmp%1#0",
        "result_2.0#0",
        "tmp%17#1",
        "aggregate%extract_uint16%10#0",
        "aggregate%len%3#0"
      ]
    },
    "1945": {
      "op": "substring3",
      "defined_out": [
        "aggregate%substring3%7#0",
        "app#0",
        "awst_tmp%1#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "result_2.0#0"
      ],
      "stack_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "awst_tmp%1#0",
        "result_2.0#0",
        "aggregate%substring3%7#0"
      ]
    },
    "1946": {
      "op": "extract 2 0",
      "defined_out": [
        "app#0",
        "awst_tmp%1#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "result_2.0#0",
        "result_2.1#0"
      ],
      "stack_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "awst_tmp%1#0",
        "result_2.0#0",
        "result_2.1#0"
      ]
    },
    "1949": {
      "op": "dig 2",
      "stack_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "awst_tmp%1#0",
        "result_2.0#0",
        "result_2.1#0",
        "awst_tmp%1#0 (copy)"
      ]
    },
    "1951": {
      "op": "pushint 8 // 8",
      "stack_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "awst_tmp%1#0",
        "result_2.0#0",
        "result_2.1#0",
        "awst_tmp%1#0 (copy)",
        "8"
      ]
    },
    "1953": {
      "op": "extract_uint64",
      "defined_out": [
        "app#0",
        "awst_tmp%1#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "result_2.0#0",
        "result_2.1#0",
        "result_2.2#0"
      ],
      "stack_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "awst_tmp%1#0",
        "result_2.0#0",
        "result_2.1#0",
        "result_2.2#0"
      ]
    },
    "1954": {
      "op": "uncover 3",
      "stack_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "result_2.0#0",
        "result_2.1#0",
        "result_2.2#0",
        "awst_tmp%1#0"
      ]
    },
    "1956": {
      "op": "extract 16 64",
      "defined_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "result_2.0#0",
        "result_2.1#0",
        "result_2.2#0",
        "result_2.3#0"
      ],
      "stack_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "result_2.0#0",
        "result_2.1#0",
        "result_2.2#0",
        "result_2.3#0"
      ]
    },
    "1959": {
      "op": "uncover 3",
      "stack_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "result_2.1#0",
        "result_2.2#0",
        "result_2.3#0",
        "result_2.0#0"
      ]
    },
    "1961": {
      "op": "dig 7",
      "stack_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "result_2.1#0",
        "result_2.2#0",
        "result_2.3#0",
        "result_2.0#0",
        "result.0#6 (copy)"
      ]
    },
    "1963": {
      "op": "==",
      "defined_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "result_2.1#0",
        "result_2.2#0",
        "result_2.3#0",
        "tmp%24#1"
      ],
      "stack_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "result_2.1#0",
        "result_2.2#0",
        "result_2.3#0",
        "tmp%24#1"
      ]
    },
    "1964": {
      "op": "uncover 3",
      "stack_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "result_2.2#0",
        "result_2.3#0",
        "tmp%24#1",
        "result_2.1#0"
      ]
    },
    "1966": {
      "op": "dig 6",
      "stack_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "result_2.2#0",
        "result_2.3#0",
        "tmp%24#1",
        "result_2.1#0",
        "result.1#6 (copy)"
      ]
    },
    "1968": {
      "op": "==",
      "defined_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "result_2.2#0",
        "result_2.3#0",
        "tmp%24#1",
        "tmp%25#1"
      ],
      "stack_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "result_2.2#0",
        "result_2.3#0",
        "tmp%24#1",
        "tmp%25#1"
      ]
    },
    "1969": {
      "op": "&&",
      "defined_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "result_2.2#0",
        "result_2.3#0",
        "tmp%26#0"
      ],
      "stack_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "result_2.2#0",
        "result_2.3#0",
        "tmp%26#0"
      ]
    },
    "1970": {
      "op": "uncover 2",
      "stack_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "result_2.3#0",
        "tmp%26#0",
        "result_2.2#0"
      ]
    },
    "1972": {
      "op": "dig 4",
      "stack_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "result_2.3#0",
        "tmp%26#0",
        "result_2.2#0",
        "result.2#6 (copy)"
      ]
    },
    "1974": {
      "op": "==",
      "defined_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "result_2.3#0",
        "tmp%26#0",
        "tmp%27#2"
      ],
      "stack_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "result_2.3#0",
        "tmp%26#0",
        "tmp%27#2"
      ]
    },
    "1975": {
      "op": "&&",
      "defined_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "result_2.3#0",
        "tmp%28#2"
      ],
      "stack_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "result_2.3#0",
        "tmp%28#2"
      ]
    },
    "1976": {
      "op": "swap",
      "stack_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "tmp%28#2",
        "result_2.3#0"
      ]
    },
    "1977": {
      "op": "dig 2",
      "stack_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "tmp%28#2",
        "result_2.3#0",
        "result.3#0 (copy)"
      ]
    },
    "1979": {
      "op": "b==",
      "defined_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "tmp%28#2",
        "tmp%29#1"
      ],
      "stack_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "tmp%28#2",
        "tmp%29#1"
      ]
    },
    "1980": {
      "op": "&&",
      "defined_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "tmp%30#1"
      ],
      "stack_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "tmp%30#1"
      ]
    },
    "1981": {
      "error": "expected native arguments to give the same result",
      "op": "assert // expected native arguments to give the same result",
      "stack_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0"
      ]
    },
    "1982": {
      "op": "itxn_begin"
    },
    "1983": {
      "op": "dig 4",
      "stack_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "app#0 (copy)"
      ]
    },
    "1985": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0"
      ]
    },
    "1987": {
      "op": "bytec 4 // method \"echo_native_tuple(string,byte[],uint64,uint512)(string,byte[],uint64,uint512)\"",
      "stack_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "Method(echo_native_tuple(string,byte[],uint64,uint512)(string,byte[],uint64,uint512))"
      ]
    },
    "1989": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0"
      ]
    },
    "1991": {
      "op": "bytec 5 // 0x00027331",
      "stack_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "0x00027331"
      ]
    },
    "1993": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0"
      ]
    },
    "1995": {
      "op": "bytec 6 // 0x00026231",
      "stack_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "0x00026231"
      ]
    },
    "1997": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0"
      ]
    },
    "1999": {
      "op": "bytec_2 // 0x0000000000000001",
      "stack_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "0x0000000000000001"
      ]
    },
    "2000": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0"
      ]
    },
    "2002": {
      "op": "bytec_1 // 0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002",
      "stack_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002"
      ]
    },
    "2003": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0"
      ]
    },
    "2005": {
      "op": "intc_1 // appl",
      "stack_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "appl"
      ]
    },
    "2006": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0"
      ]
    },
    "2008": {
      "op": "intc_0 // 0",
      "stack_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "0"
      ]
    },
    "2009": {
      "op": "itxn_field Fee",
      "stack_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0"
      ]
    },
    "2011": {
      "op": "itxn_submit"
    },
    "2012": {
      "op": "itxn LastLog",
      "defined_out": [
        "app#0",
        "awst_tmp%2#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0"
      ],
      "stack_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "awst_tmp%2#0"
      ]
    },
    "2014": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "awst_tmp%2#0",
        "awst_tmp%2#0 (copy)",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0"
      ],
      "stack_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "awst_tmp%2#0",
        "awst_tmp%2#0 (copy)"
      ]
    },
    "2015": {
      "op": "extract 4 0",
      "defined_out": [
        "app#0",
        "awst_tmp%2#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "tmp%33#3"
      ],
      "stack_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "awst_tmp%2#0",
        "tmp%33#3"
      ]
    },
    "2018": {
      "op": "dig 1",
      "stack_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "awst_tmp%2#0",
        "tmp%33#3",
        "awst_tmp%2#0 (copy)"
      ]
    },
    "2020": {
      "op": "extract 0 4",
      "defined_out": [
        "app#0",
        "awst_tmp%2#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "tmp%33#3",
        "tmp%34#3"
      ],
      "stack_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "awst_tmp%2#0",
        "tmp%33#3",
        "tmp%34#3"
      ]
    },
    "2023": {
      "op": "bytec_0 // 0x151f7c75",
      "stack_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "awst_tmp%2#0",
        "tmp%33#3",
        "tmp%34#3",
        "0x151f7c75"
      ]
    },
    "2024": {
      "op": "==",
      "defined_out": [
        "app#0",
        "awst_tmp%2#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "tmp%33#3",
        "tmp%35#1"
      ],
      "stack_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "awst_tmp%2#0",
        "tmp%33#3",
        "tmp%35#1"
      ]
    },
    "2025": {
      "error": "application log value is not the result of an ABI return",
      "op": "assert // application log value is not the result of an ABI return",
      "stack_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "awst_tmp%2#0",
        "tmp%33#3"
      ]
    },
    "2026": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "awst_tmp%2#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "tmp%33#3",
        "tmp%33#3 (copy)"
      ],
      "stack_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "awst_tmp%2#0",
        "tmp%33#3",
        "tmp%33#3 (copy)"
      ]
    },
    "2027": {
      "op": "intc_0 // 0",
      "stack_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "awst_tmp%2#0",
        "tmp%33#3",
        "tmp%33#3 (copy)",
        "0"
      ]
    },
    "2028": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%extract_uint16%12#0",
        "app#0",
        "awst_tmp%2#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "tmp%33#3"
      ],
      "stack_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "awst_tmp%2#0",
        "tmp%33#3",
        "aggregate%extract_uint16%12#0"
      ]
    },
    "2029": {
      "op": "dig 1",
      "stack_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "awst_tmp%2#0",
        "tmp%33#3",
        "aggregate%extract_uint16%12#0",
        "tmp%33#3 (copy)"
      ]
    },
    "2031": {
      "op": "intc_3 // 2",
      "stack_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "awst_tmp%2#0",
        "tmp%33#3",
        "aggregate%extract_uint16%12#0",
        "tmp%33#3 (copy)",
        "2"
      ]
    },
    "2032": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%extract_uint16%12#0",
        "aggregate%extract_uint16%13#0",
        "app#0",
        "awst_tmp%2#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "tmp%33#3"
      ],
      "stack_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "awst_tmp%2#0",
        "tmp%33#3",
        "aggregate%extract_uint16%12#0",
        "aggregate%extract_uint16%13#0"
      ]
    },
    "2033": {
      "op": "dig 2",
      "stack_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "awst_tmp%2#0",
        "tmp%33#3",
        "aggregate%extract_uint16%12#0",
        "aggregate%extract_uint16%13#0",
        "tmp%33#3 (copy)"
      ]
    },
    "2035": {
      "op": "uncover 2",
      "stack_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "awst_tmp%2#0",
        "tmp%33#3",
        "aggregate%extract_uint16%13#0",
        "tmp%33#3 (copy)",
        "aggregate%extract_uint16%12#0"
      ]
    },
    "2037": {
      "op": "dig 2",
      "defined_out": [
        "aggregate%extract_uint16%12#0",
        "aggregate%extract_uint16%13#0",
        "aggregate%extract_uint16%13#0 (copy)",
        "app#0",
        "awst_tmp%2#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "tmp%33#3",
        "tmp%33#3 (copy)"
      ],
      "stack_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "awst_tmp%2#0",
        "tmp%33#3",
        "aggregate%extract_uint16%13#0",
        "tmp%33#3 (copy)",
        "aggregate%extract_uint16%12#0",
        "aggregate%extract_uint16%13#0 (copy)"
      ]
    },
    "2039": {
      "op": "substring3",
      "defined_out": [
        "aggregate%extract_uint16%13#0",
        "aggregate%substring3%8#0",
        "app#0",
        "awst_tmp%2#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "tmp%33#3"
      ],
      "stack_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "awst_tmp%2#0",
        "tmp%33#3",
        "aggregate%extract_uint16%13#0",
        "aggregate%substring3%8#0"
      ]
    },
    "2040": {
      "op": "extract 2 0",
      "defined_out": [
        "aggregate%extract_uint16%13#0",
        "app#0",
        "awst_tmp%2#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "result_3.0#0",
        "tmp%33#3"
      ],
      "stack_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "awst_tmp%2#0",
        "tmp%33#3",
        "aggregate%extract_uint16%13#0",
        "result_3.0#0"
      ]
    },
    "2043": {
      "op": "dig 2",
      "stack_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "awst_tmp%2#0",
        "tmp%33#3",
        "aggregate%extract_uint16%13#0",
        "result_3.0#0",
        "tmp%33#3 (copy)"
      ]
    },
    "2045": {
      "op": "len",
      "defined_out": [
        "aggregate%extract_uint16%13#0",
        "aggregate%len%4#0",
        "app#0",
        "awst_tmp%2#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "result_3.0#0",
        "tmp%33#3"
      ],
      "stack_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "awst_tmp%2#0",
        "tmp%33#3",
        "aggregate%extract_uint16%13#0",
        "result_3.0#0",
        "aggregate%len%4#0"
      ]
    },
    "2046": {
      "op": "swap"
    },
    "2047": {
      "op": "cover 3",
      "stack_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "awst_tmp%2#0",
        "result_3.0#0",
        "tmp%33#3",
        "aggregate%extract_uint16%13#0",
        "aggregate%len%4#0"
      ]
    },
    "2049": {
      "op": "substring3",
      "defined_out": [
        "aggregate%substring3%9#0",
        "app#0",
        "awst_tmp%2#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "result_3.0#0"
      ],
      "stack_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "awst_tmp%2#0",
        "result_3.0#0",
        "aggregate%substring3%9#0"
      ]
    },
    "2050": {
      "op": "extract 2 0",
      "defined_out": [
        "app#0",
        "awst_tmp%2#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "result_3.0#0",
        "result_3.1#0"
      ],
      "stack_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "awst_tmp%2#0",
        "result_3.0#0",
        "result_3.1#0"
      ]
    },
    "2053": {
      "op": "dig 2",
      "stack_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "awst_tmp%2#0",
        "result_3.0#0",
        "result_3.1#0",
        "awst_tmp%2#0 (copy)"
      ]
    },
    "2055": {
      "op": "pushint 8 // 8",
      "stack_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "awst_tmp%2#0",
        "result_3.0#0",
        "result_3.1#0",
        "awst_tmp%2#0 (copy)",
        "8"
      ]
    },
    "2057": {
      "op": "extract_uint64",
      "defined_out": [
        "app#0",
        "awst_tmp%2#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "result_3.0#0",
        "result_3.1#0",
        "result_3.2#0"
      ],
      "stack_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "awst_tmp%2#0",
        "result_3.0#0",
        "result_3.1#0",
        "result_3.2#0"
      ]
    },
    "2058": {
      "op": "uncover 3",
      "stack_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "result_3.0#0",
        "result_3.1#0",
        "result_3.2#0",
        "awst_tmp%2#0"
      ]
    },
    "2060": {
      "op": "extract 16 64",
      "defined_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "result_3.0#0",
        "result_3.1#0",
        "result_3.2#0",
        "result_3.3#0"
      ],
      "stack_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "result_3.0#0",
        "result_3.1#0",
        "result_3.2#0",
        "result_3.3#0"
      ]
    },
    "2063": {
      "op": "uncover 3",
      "stack_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "result_3.1#0",
        "result_3.2#0",
        "result_3.3#0",
        "result_3.0#0"
      ]
    },
    "2065": {
      "op": "dig 7",
      "stack_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "result_3.1#0",
        "result_3.2#0",
        "result_3.3#0",
        "result_3.0#0",
        "result.0#6 (copy)"
      ]
    },
    "2067": {
      "op": "==",
      "defined_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "result_3.1#0",
        "result_3.2#0",
        "result_3.3#0",
        "tmp%40#2"
      ],
      "stack_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "result_3.1#0",
        "result_3.2#0",
        "result_3.3#0",
        "tmp%40#2"
      ]
    },
    "2068": {
      "op": "uncover 3",
      "stack_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "result_3.2#0",
        "result_3.3#0",
        "tmp%40#2",
        "result_3.1#0"
      ]
    },
    "2070": {
      "op": "dig 6",
      "stack_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "result_3.2#0",
        "result_3.3#0",
        "tmp%40#2",
        "result_3.1#0",
        "result.1#6 (copy)"
      ]
    },
    "2072": {
      "op": "==",
      "defined_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "result_3.2#0",
        "result_3.3#0",
        "tmp%40#2",
        "tmp%41#3"
      ],
      "stack_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "result_3.2#0",
        "result_3.3#0",
        "tmp%40#2",
        "tmp%41#3"
      ]
    },
    "2073": {
      "op": "&&",
      "defined_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "result_3.2#0",
        "result_3.3#0",
        "tmp%42#0"
      ],
      "stack_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "result_3.2#0",
        "result_3.3#0",
        "tmp%42#0"
      ]
    },
    "2074": {
      "op": "uncover 2",
      "stack_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "result_3.3#0",
        "tmp%42#0",
        "result_3.2#0"
      ]
    },
    "2076": {
      "op": "dig 4",
      "stack_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "result_3.3#0",
        "tmp%42#0",
        "result_3.2#0",
        "result.2#6 (copy)"
      ]
    },
    "2078": {
      "op": "==",
      "defined_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "result_3.3#0",
        "tmp%42#0",
        "tmp%43#1"
      ],
      "stack_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "result_3.3#0",
        "tmp%42#0",
        "tmp%43#1"
      ]
    },
    "2079": {
      "op": "&&",
      "defined_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "result_3.3#0",
        "tmp%44#1"
      ],
      "stack_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "result_3.3#0",
        "tmp%44#1"
      ]
    },
    "2080": {
      "op": "swap",
      "stack_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "tmp%44#1",
        "result_3.3#0"
      ]
    },
    "2081": {
      "op": "dig 2",
      "stack_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "tmp%44#1",
        "result_3.3#0",
        "result.3#0 (copy)"
      ]
    },
    "2083": {
      "op": "b==",
      "defined_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "tmp%44#1",
        "tmp%45#1"
      ],
      "stack_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "tmp%44#1",
        "tmp%45#1"
      ]
    },
    "2084": {
      "op": "&&",
      "defined_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "tmp%46#1"
      ],
      "stack_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "tmp%46#1"
      ]
    },
    "2085": {
      "error": "expected arc4 arguments to give the same result",
      "op": "assert // expected arc4 arguments to give the same result",
      "stack_out": [
        "app#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0"
      ]
    },
    "2086": {
      "op": "itxn_begin"
    },
    "2087": {
      "op": "uncover 4",
      "stack_out": [
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "app#0"
      ]
    },
    "2089": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0"
      ]
    },
    "2091": {
      "op": "bytec 4 // method \"echo_native_tuple(string,byte[],uint64,uint512)(string,byte[],uint64,uint512)\"",
      "stack_out": [
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "Method(echo_native_tuple(string,byte[],uint64,uint512)(string,byte[],uint64,uint512))"
      ]
    },
    "2093": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0"
      ]
    },
    "2095": {
      "op": "bytec 5 // 0x00027331",
      "stack_out": [
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "0x00027331"
      ]
    },
    "2097": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0"
      ]
    },
    "2099": {
      "op": "bytec 6 // 0x00026231",
      "stack_out": [
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "0x00026231"
      ]
    },
    "2101": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0"
      ]
    },
    "2103": {
      "op": "bytec_2 // 0x0000000000000001",
      "stack_out": [
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "0x0000000000000001"
      ]
    },
    "2104": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0"
      ]
    },
    "2106": {
      "op": "bytec_1 // 0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002",
      "stack_out": [
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002"
      ]
    },
    "2107": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0"
      ]
    },
    "2109": {
      "op": "intc_1 // appl",
      "stack_out": [
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "appl"
      ]
    },
    "2110": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0"
      ]
    },
    "2112": {
      "op": "intc_0 // 0",
      "stack_out": [
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "0"
      ]
    },
    "2113": {
      "op": "itxn_field Fee",
      "stack_out": [
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0"
      ]
    },
    "2115": {
      "op": "itxn_submit"
    },
    "2116": {
      "op": "itxn LastLog",
      "defined_out": [
        "awst_tmp%3#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0"
      ],
      "stack_out": [
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "awst_tmp%3#0"
      ]
    },
    "2118": {
      "op": "dup",
      "defined_out": [
        "awst_tmp%3#0",
        "awst_tmp%3#0 (copy)",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0"
      ],
      "stack_out": [
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "awst_tmp%3#0",
        "awst_tmp%3#0 (copy)"
      ]
    },
    "2119": {
      "op": "extract 4 0",
      "defined_out": [
        "awst_tmp%3#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "tmp%49#3"
      ],
      "stack_out": [
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "awst_tmp%3#0",
        "tmp%49#3"
      ]
    },
    "2122": {
      "op": "dig 1",
      "stack_out": [
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "awst_tmp%3#0",
        "tmp%49#3",
        "awst_tmp%3#0 (copy)"
      ]
    },
    "2124": {
      "op": "extract 0 4",
      "defined_out": [
        "awst_tmp%3#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "tmp%49#3",
        "tmp%50#3"
      ],
      "stack_out": [
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "awst_tmp%3#0",
        "tmp%49#3",
        "tmp%50#3"
      ]
    },
    "2127": {
      "op": "bytec_0 // 0x151f7c75",
      "stack_out": [
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "awst_tmp%3#0",
        "tmp%49#3",
        "tmp%50#3",
        "0x151f7c75"
      ]
    },
    "2128": {
      "op": "==",
      "defined_out": [
        "awst_tmp%3#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "tmp%49#3",
        "tmp%51#1"
      ],
      "stack_out": [
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "awst_tmp%3#0",
        "tmp%49#3",
        "tmp%51#1"
      ]
    },
    "2129": {
      "error": "application log value is not the result of an ABI return",
      "op": "assert // application log value is not the result of an ABI return",
      "stack_out": [
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "awst_tmp%3#0",
        "tmp%49#3"
      ]
    },
    "2130": {
      "op": "dup",
      "defined_out": [
        "awst_tmp%3#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "tmp%49#3",
        "tmp%49#3 (copy)"
      ],
      "stack_out": [
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "awst_tmp%3#0",
        "tmp%49#3",
        "tmp%49#3 (copy)"
      ]
    },
    "2131": {
      "op": "intc_0 // 0",
      "stack_out": [
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "awst_tmp%3#0",
        "tmp%49#3",
        "tmp%49#3 (copy)",
        "0"
      ]
    },
    "2132": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%extract_uint16%15#0",
        "awst_tmp%3#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "tmp%49#3"
      ],
      "stack_out": [
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "awst_tmp%3#0",
        "tmp%49#3",
        "aggregate%extract_uint16%15#0"
      ]
    },
    "2133": {
      "op": "dig 1",
      "stack_out": [
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "awst_tmp%3#0",
        "tmp%49#3",
        "aggregate%extract_uint16%15#0",
        "tmp%49#3 (copy)"
      ]
    },
    "2135": {
      "op": "intc_3 // 2",
      "stack_out": [
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "awst_tmp%3#0",
        "tmp%49#3",
        "aggregate%extract_uint16%15#0",
        "tmp%49#3 (copy)",
        "2"
      ]
    },
    "2136": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%extract_uint16%15#0",
        "aggregate%extract_uint16%16#0",
        "awst_tmp%3#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "tmp%49#3"
      ],
      "stack_out": [
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "awst_tmp%3#0",
        "tmp%49#3",
        "aggregate%extract_uint16%15#0",
        "aggregate%extract_uint16%16#0"
      ]
    },
    "2137": {
      "op": "dig 2",
      "stack_out": [
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "awst_tmp%3#0",
        "tmp%49#3",
        "aggregate%extract_uint16%15#0",
        "aggregate%extract_uint16%16#0",
        "tmp%49#3 (copy)"
      ]
    },
    "2139": {
      "op": "uncover 2",
      "stack_out": [
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "awst_tmp%3#0",
        "tmp%49#3",
        "aggregate%extract_uint16%16#0",
        "tmp%49#3 (copy)",
        "aggregate%extract_uint16%15#0"
      ]
    },
    "2141": {
      "op": "dig 2",
      "defined_out": [
        "aggregate%extract_uint16%15#0",
        "aggregate%extract_uint16%16#0",
        "aggregate%extract_uint16%16#0 (copy)",
        "awst_tmp%3#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "tmp%49#3",
        "tmp%49#3 (copy)"
      ],
      "stack_out": [
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "awst_tmp%3#0",
        "tmp%49#3",
        "aggregate%extract_uint16%16#0",
        "tmp%49#3 (copy)",
        "aggregate%extract_uint16%15#0",
        "aggregate%extract_uint16%16#0 (copy)"
      ]
    },
    "2143": {
      "op": "substring3",
      "defined_out": [
        "aggregate%extract_uint16%16#0",
        "aggregate%substring3%10#0",
        "awst_tmp%3#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "tmp%49#3"
      ],
      "stack_out": [
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "awst_tmp%3#0",
        "tmp%49#3",
        "aggregate%extract_uint16%16#0",
        "aggregate%substring3%10#0"
      ]
    },
    "2144": {
      "op": "extract 2 0",
      "defined_out": [
        "aggregate%extract_uint16%16#0",
        "awst_tmp%3#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "result_native.0#0",
        "tmp%49#3"
      ],
      "stack_out": [
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "awst_tmp%3#0",
        "tmp%49#3",
        "aggregate%extract_uint16%16#0",
        "result_native.0#0"
      ]
    },
    "2147": {
      "op": "dig 2",
      "stack_out": [
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "awst_tmp%3#0",
        "tmp%49#3",
        "aggregate%extract_uint16%16#0",
        "result_native.0#0",
        "tmp%49#3 (copy)"
      ]
    },
    "2149": {
      "op": "len",
      "defined_out": [
        "aggregate%extract_uint16%16#0",
        "aggregate%len%5#0",
        "awst_tmp%3#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "result_native.0#0",
        "tmp%49#3"
      ],
      "stack_out": [
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "awst_tmp%3#0",
        "tmp%49#3",
        "aggregate%extract_uint16%16#0",
        "result_native.0#0",
        "aggregate%len%5#0"
      ]
    },
    "2150": {
      "op": "swap"
    },
    "2151": {
      "op": "cover 3",
      "stack_out": [
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "awst_tmp%3#0",
        "result_native.0#0",
        "tmp%49#3",
        "aggregate%extract_uint16%16#0",
        "aggregate%len%5#0"
      ]
    },
    "2153": {
      "op": "substring3",
      "defined_out": [
        "aggregate%substring3%11#0",
        "awst_tmp%3#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "result_native.0#0"
      ],
      "stack_out": [
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "awst_tmp%3#0",
        "result_native.0#0",
        "aggregate%substring3%11#0"
      ]
    },
    "2154": {
      "op": "extract 2 0",
      "defined_out": [
        "awst_tmp%3#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "result_native.0#0",
        "result_native.1#0"
      ],
      "stack_out": [
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "awst_tmp%3#0",
        "result_native.0#0",
        "result_native.1#0"
      ]
    },
    "2157": {
      "op": "dig 2",
      "stack_out": [
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "awst_tmp%3#0",
        "result_native.0#0",
        "result_native.1#0",
        "awst_tmp%3#0 (copy)"
      ]
    },
    "2159": {
      "op": "pushint 8 // 8",
      "stack_out": [
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "awst_tmp%3#0",
        "result_native.0#0",
        "result_native.1#0",
        "awst_tmp%3#0 (copy)",
        "8"
      ]
    },
    "2161": {
      "op": "extract_uint64",
      "defined_out": [
        "awst_tmp%3#0",
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "result_native.0#0",
        "result_native.1#0",
        "result_native.2#0"
      ],
      "stack_out": [
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "awst_tmp%3#0",
        "result_native.0#0",
        "result_native.1#0",
        "result_native.2#0"
      ]
    },
    "2162": {
      "op": "uncover 3",
      "stack_out": [
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "result_native.0#0",
        "result_native.1#0",
        "result_native.2#0",
        "awst_tmp%3#0"
      ]
    },
    "2164": {
      "op": "extract 16 64",
      "defined_out": [
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "result_native.0#0",
        "result_native.1#0",
        "result_native.2#0",
        "result_native.3#0"
      ],
      "stack_out": [
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "result_native.0#0",
        "result_native.1#0",
        "result_native.2#0",
        "result_native.3#0"
      ]
    },
    "2167": {
      "op": "uncover 3",
      "stack_out": [
        "result.0#6",
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "result_native.1#0",
        "result_native.2#0",
        "result_native.3#0",
        "result_native.0#0"
      ]
    },
    "2169": {
      "op": "uncover 7",
      "stack_out": [
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "result_native.1#0",
        "result_native.2#0",
        "result_native.3#0",
        "result_native.0#0",
        "result.0#6"
      ]
    },
    "2171": {
      "op": "==",
      "defined_out": [
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "result_native.1#0",
        "result_native.2#0",
        "result_native.3#0",
        "tmp%56#1"
      ],
      "stack_out": [
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "result_native.1#0",
        "result_native.2#0",
        "result_native.3#0",
        "tmp%56#1"
      ]
    },
    "2172": {
      "op": "uncover 3",
      "stack_out": [
        "result.1#6",
        "result.2#6",
        "result.3#0",
        "result_native.2#0",
        "result_native.3#0",
        "tmp%56#1",
        "result_native.1#0"
      ]
    },
    "2174": {
      "op": "uncover 6",
      "stack_out": [
        "result.2#6",
        "result.3#0",
        "result_native.2#0",
        "result_native.3#0",
        "tmp%56#1",
        "result_native.1#0",
        "result.1#6"
      ]
    },
    "2176": {
      "op": "==",
      "defined_out": [
        "result.2#6",
        "result.3#0",
        "result_native.2#0",
        "result_native.3#0",
        "tmp%56#1",
        "tmp%57#0"
      ],
      "stack_out": [
        "result.2#6",
        "result.3#0",
        "result_native.2#0",
        "result_native.3#0",
        "tmp%56#1",
        "tmp%57#0"
      ]
    },
    "2177": {
      "op": "&&",
      "defined_out": [
        "result.2#6",
        "result.3#0",
        "result_native.2#0",
        "result_native.3#0",
        "tmp%58#1"
      ],
      "stack_out": [
        "result.2#6",
        "result.3#0",
        "result_native.2#0",
        "result_native.3#0",
        "tmp%58#1"
      ]
    },
    "2178": {
      "op": "uncover 2",
      "stack_out": [
        "result.2#6",
        "result.3#0",
        "result_native.3#0",
        "tmp%58#1",
        "result_native.2#0"
      ]
    },
    "2180": {
      "op": "uncover 4",
      "stack_out": [
        "result.3#0",
        "result_native.3#0",
        "tmp%58#1",
        "result_native.2#0",
        "result.2#6"
      ]
    },
    "2182": {
      "op": "==",
      "defined_out": [
        "result.3#0",
        "result_native.3#0",
        "tmp%58#1",
        "tmp%59#1"
      ],
      "stack_out": [
        "result.3#0",
        "result_native.3#0",
        "tmp%58#1",
        "tmp%59#1"
      ]
    },
    "2183": {
      "op": "&&",
      "defined_out": [
        "result.3#0",
        "result_native.3#0",
        "tmp%60#1"
      ],
      "stack_out": [
        "result.3#0",
        "result_native.3#0",
        "tmp%60#1"
      ]
    },
    "2184": {
      "op": "swap",
      "stack_out": [
        "result.3#0",
        "tmp%60#1",
        "result_native.3#0"
      ]
    },
    "2185": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%60#1",
        "result_native.3#0",
        "result.3#0"
      ]
    },
    "2187": {
      "op": "b==",
      "defined_out": [
        "tmp%60#1",
        "tmp%61#1"
      ],
      "stack_out": [
        "tmp%60#1",
        "tmp%61#1"
      ]
    },
    "2188": {
      "op": "&&",
      "defined_out": [
        "tmp%62#0"
      ],
      "stack_out": [
        "tmp%62#0"
      ]
    },
    "2189": {
      "op": "assert",
      "stack_out": []
    },
    "2190": {
      "op": "intc_2 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "2191": {
      "op": "return",
      "stack_out": []
    },
    "2192": {
      "block": "main_test_native_tuple_route@15",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%66#0"
      ],
      "stack_out": [
        "tmp%66#0"
      ]
    },
    "2194": {
      "op": "!",
      "defined_out": [
        "tmp%67#0"
      ],
      "stack_out": [
        "tmp%67#0"
      ]
    },
    "2195": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "2196": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%68#0"
      ],
      "stack_out": [
        "tmp%68#0"
      ]
    },
    "2198": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "2199": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded(uint64)%13#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint64)%13#0"
      ]
    },
    "2202": {
      "op": "btoi",
      "defined_out": [
        "app#0"
      ],
      "stack_out": [
        "app#0"
      ]
    },
    "2203": {
      "op": "itxn_begin"
    },
    "2204": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "app#0 (copy)"
      ],
      "stack_out": [
        "app#0",
        "app#0 (copy)"
      ]
    },
    "2205": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "app#0"
      ]
    },
    "2207": {
      "op": "bytec 4 // method \"echo_native_tuple(string,byte[],uint64,uint512)(string,byte[],uint64,uint512)\"",
      "defined_out": [
        "Method(echo_native_tuple(string,byte[],uint64,uint512)(string,byte[],uint64,uint512))",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "Method(echo_native_tuple(string,byte[],uint64,uint512)(string,byte[],uint64,uint512))"
      ]
    },
    "2209": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0"
      ]
    },
    "2211": {
      "op": "bytec 5 // 0x00027331",
      "defined_out": [
        "0x00027331",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "0x00027331"
      ]
    },
    "2213": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0"
      ]
    },
    "2215": {
      "op": "bytec 6 // 0x00026231",
      "defined_out": [
        "0x00026231",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "0x00026231"
      ]
    },
    "2217": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0"
      ]
    },
    "2219": {
      "op": "bytec_2 // 0x0000000000000001",
      "defined_out": [
        "0x0000000000000001",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "0x0000000000000001"
      ]
    },
    "2220": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0"
      ]
    },
    "2222": {
      "op": "bytec_1 // 0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002",
      "defined_out": [
        "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002"
      ]
    },
    "2223": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0"
      ]
    },
    "2225": {
      "op": "intc_1 // appl",
      "defined_out": [
        "app#0",
        "appl"
      ],
      "stack_out": [
        "app#0",
        "appl"
      ]
    },
    "2226": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "app#0"
      ]
    },
    "2228": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "0"
      ]
    },
    "2229": {
      "op": "itxn_field Fee",
      "stack_out": [
        "app#0"
      ]
    },
    "2231": {
      "op": "itxn_submit"
    },
    "2232": {
      "op": "itxn LastLog",
      "defined_out": [
        "app#0",
        "awst_tmp%0#0"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0"
      ]
    },
    "2234": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ]
    },
    "2235": {
      "op": "extract 4 0",
      "defined_out": [
        "app#0",
        "awst_tmp%0#0",
        "result1#0"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "result1#0"
      ]
    },
    "2238": {
      "op": "dig 1",
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "result1#0",
        "awst_tmp%0#0 (copy)"
      ]
    },
    "2240": {
      "op": "extract 0 4",
      "defined_out": [
        "app#0",
        "awst_tmp%0#0",
        "result1#0",
        "tmp%3#1"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "result1#0",
        "tmp%3#1"
      ]
    },
    "2243": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "app#0",
        "awst_tmp%0#0",
        "result1#0",
        "tmp%3#1"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "result1#0",
        "tmp%3#1",
        "0x151f7c75"
      ]
    },
    "2244": {
      "op": "==",
      "defined_out": [
        "app#0",
        "awst_tmp%0#0",
        "result1#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "result1#0",
        "tmp%4#0"
      ]
    },
    "2245": {
      "error": "application log value is not the result of an ABI return",
      "op": "assert // application log value is not the result of an ABI return",
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "result1#0"
      ]
    },
    "2246": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "awst_tmp%0#0",
        "result1#0",
        "result1#0 (copy)"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "result1#0",
        "result1#0 (copy)"
      ]
    },
    "2247": {
      "op": "intc_0 // 0",
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "result1#0",
        "result1#0 (copy)",
        "0"
      ]
    },
    "2248": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%extract_uint16%0#0",
        "app#0",
        "awst_tmp%0#0",
        "result1#0"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "result1#0",
        "aggregate%extract_uint16%0#0"
      ]
    },
    "2249": {
      "op": "dig 1",
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "result1#0",
        "aggregate%extract_uint16%0#0",
        "result1#0 (copy)"
      ]
    },
    "2251": {
      "op": "intc_3 // 2",
      "defined_out": [
        "2",
        "aggregate%extract_uint16%0#0",
        "app#0",
        "awst_tmp%0#0",
        "result1#0",
        "result1#0 (copy)"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "result1#0",
        "aggregate%extract_uint16%0#0",
        "result1#0 (copy)",
        "2"
      ]
    },
    "2252": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%extract_uint16%0#0",
        "aggregate%extract_uint16%1#0",
        "app#0",
        "awst_tmp%0#0",
        "result1#0"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "result1#0",
        "aggregate%extract_uint16%0#0",
        "aggregate%extract_uint16%1#0"
      ]
    },
    "2253": {
      "op": "dig 2",
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "result1#0",
        "aggregate%extract_uint16%0#0",
        "aggregate%extract_uint16%1#0",
        "result1#0 (copy)"
      ]
    },
    "2255": {
      "op": "uncover 2",
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "result1#0",
        "aggregate%extract_uint16%1#0",
        "result1#0 (copy)",
        "aggregate%extract_uint16%0#0"
      ]
    },
    "2257": {
      "op": "dig 2",
      "defined_out": [
        "aggregate%extract_uint16%0#0",
        "aggregate%extract_uint16%1#0",
        "aggregate%extract_uint16%1#0 (copy)",
        "app#0",
        "awst_tmp%0#0",
        "result1#0",
        "result1#0 (copy)"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "result1#0",
        "aggregate%extract_uint16%1#0",
        "result1#0 (copy)",
        "aggregate%extract_uint16%0#0",
        "aggregate%extract_uint16%1#0 (copy)"
      ]
    },
    "2259": {
      "op": "substring3",
      "defined_out": [
        "aggregate%extract_uint16%1#0",
        "app#0",
        "awst_tmp%0#0",
        "result1#0",
        "s#0"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "result1#0",
        "aggregate%extract_uint16%1#0",
        "s#0"
      ]
    },
    "2260": {
      "op": "dig 2",
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "result1#0",
        "aggregate%extract_uint16%1#0",
        "s#0",
        "result1#0 (copy)"
      ]
    },
    "2262": {
      "op": "len",
      "defined_out": [
        "aggregate%extract_uint16%1#0",
        "aggregate%len%0#0",
        "app#0",
        "awst_tmp%0#0",
        "result1#0",
        "s#0"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "result1#0",
        "aggregate%extract_uint16%1#0",
        "s#0",
        "aggregate%len%0#0"
      ]
    },
    "2263": {
      "op": "dig 3",
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "result1#0",
        "aggregate%extract_uint16%1#0",
        "s#0",
        "aggregate%len%0#0",
        "result1#0 (copy)"
      ]
    },
    "2265": {
      "op": "uncover 3",
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "result1#0",
        "s#0",
        "aggregate%len%0#0",
        "result1#0 (copy)",
        "aggregate%extract_uint16%1#0"
      ]
    },
    "2267": {
      "op": "uncover 2",
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "result1#0",
        "s#0",
        "result1#0 (copy)",
        "aggregate%extract_uint16%1#0",
        "aggregate%len%0#0"
      ]
    },
    "2269": {
      "op": "substring3",
      "defined_out": [
        "app#0",
        "awst_tmp%0#0",
        "b#0",
        "result1#0",
        "s#0"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "result1#0",
        "s#0",
        "b#0"
      ]
    },
    "2270": {
      "op": "dig 3",
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "result1#0",
        "s#0",
        "b#0",
        "awst_tmp%0#0 (copy)"
      ]
    },
    "2272": {
      "op": "extract 16 64",
      "defined_out": [
        "app#0",
        "awst_tmp%0#0",
        "b#0",
        "bu#0",
        "result1#0",
        "s#0"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "result1#0",
        "s#0",
        "b#0",
        "bu#0"
      ]
    },
    "2275": {
      "op": "uncover 2",
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "result1#0",
        "b#0",
        "bu#0",
        "s#0"
      ]
    },
    "2277": {
      "op": "extract 2 0",
      "defined_out": [
        "app#0",
        "awst_tmp%0#0",
        "b#0",
        "bu#0",
        "result1#0",
        "tmp%9#5"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "result1#0",
        "b#0",
        "bu#0",
        "tmp%9#5"
      ]
    },
    "2280": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "awst_tmp%0#0",
        "b#0",
        "bu#0",
        "result1#0",
        "tmp%9#5",
        "tmp%9#5 (copy)"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "result1#0",
        "b#0",
        "bu#0",
        "tmp%9#5",
        "tmp%9#5 (copy)"
      ]
    },
    "2281": {
      "op": "bytec 10 // \"echo: s1\"",
      "defined_out": [
        "\"echo: s1\"",
        "app#0",
        "awst_tmp%0#0",
        "b#0",
        "bu#0",
        "result1#0",
        "tmp%9#5",
        "tmp%9#5 (copy)"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "result1#0",
        "b#0",
        "bu#0",
        "tmp%9#5",
        "tmp%9#5 (copy)",
        "\"echo: s1\""
      ]
    },
    "2283": {
      "op": "==",
      "defined_out": [
        "app#0",
        "awst_tmp%0#0",
        "b#0",
        "bu#0",
        "result1#0",
        "tmp%10#1",
        "tmp%9#5"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "result1#0",
        "b#0",
        "bu#0",
        "tmp%9#5",
        "tmp%10#1"
      ]
    },
    "2284": {
      "op": "assert",
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "result1#0",
        "b#0",
        "bu#0",
        "tmp%9#5"
      ]
    },
    "2285": {
      "op": "uncover 2",
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "result1#0",
        "bu#0",
        "tmp%9#5",
        "b#0"
      ]
    },
    "2287": {
      "op": "extract 2 0",
      "defined_out": [
        "app#0",
        "awst_tmp%0#0",
        "bu#0",
        "result1#0",
        "tmp%11#4",
        "tmp%9#5"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "result1#0",
        "bu#0",
        "tmp%9#5",
        "tmp%11#4"
      ]
    },
    "2290": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "awst_tmp%0#0",
        "bu#0",
        "result1#0",
        "tmp%11#4",
        "tmp%11#4 (copy)",
        "tmp%9#5"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "result1#0",
        "bu#0",
        "tmp%9#5",
        "tmp%11#4",
        "tmp%11#4 (copy)"
      ]
    },
    "2291": {
      "op": "bytec 29 // 0x6563686f3a206231",
      "defined_out": [
        "0x6563686f3a206231",
        "app#0",
        "awst_tmp%0#0",
        "bu#0",
        "result1#0",
        "tmp%11#4",
        "tmp%11#4 (copy)",
        "tmp%9#5"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "result1#0",
        "bu#0",
        "tmp%9#5",
        "tmp%11#4",
        "tmp%11#4 (copy)",
        "0x6563686f3a206231"
      ]
    },
    "2293": {
      "op": "==",
      "defined_out": [
        "app#0",
        "awst_tmp%0#0",
        "bu#0",
        "result1#0",
        "tmp%11#4",
        "tmp%12#1",
        "tmp%9#5"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "result1#0",
        "bu#0",
        "tmp%9#5",
        "tmp%11#4",
        "tmp%12#1"
      ]
    },
    "2294": {
      "op": "assert",
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "result1#0",
        "bu#0",
        "tmp%9#5",
        "tmp%11#4"
      ]
    },
    "2295": {
      "op": "uncover 4",
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%9#5",
        "tmp%11#4",
        "awst_tmp%0#0"
      ]
    },
    "2297": {
      "op": "pushint 8 // 8",
      "defined_out": [
        "8",
        "app#0",
        "awst_tmp%0#0",
        "bu#0",
        "result1#0",
        "tmp%11#4",
        "tmp%9#5"
      ],
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%9#5",
        "tmp%11#4",
        "awst_tmp%0#0",
        "8"
      ]
    },
    "2299": {
      "op": "extract_uint64",
      "defined_out": [
        "app#0",
        "bu#0",
        "result1#0",
        "tmp%11#4",
        "tmp%13#4",
        "tmp%9#5"
      ],
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%9#5",
        "tmp%11#4",
        "tmp%13#4"
      ]
    },
    "2300": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "bu#0",
        "result1#0",
        "tmp%11#4",
        "tmp%13#4",
        "tmp%13#4 (copy)",
        "tmp%9#5"
      ],
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%9#5",
        "tmp%11#4",
        "tmp%13#4",
        "tmp%13#4 (copy)"
      ]
    },
    "2301": {
      "op": "intc_3 // 2",
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%9#5",
        "tmp%11#4",
        "tmp%13#4",
        "tmp%13#4 (copy)",
        "2"
      ]
    },
    "2302": {
      "op": "==",
      "defined_out": [
        "app#0",
        "bu#0",
        "result1#0",
        "tmp%11#4",
        "tmp%13#4",
        "tmp%14#3",
        "tmp%9#5"
      ],
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%9#5",
        "tmp%11#4",
        "tmp%13#4",
        "tmp%14#3"
      ]
    },
    "2303": {
      "op": "assert",
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%9#5",
        "tmp%11#4",
        "tmp%13#4"
      ]
    },
    "2304": {
      "op": "dig 3",
      "defined_out": [
        "app#0",
        "bu#0",
        "bu#0 (copy)",
        "result1#0",
        "tmp%11#4",
        "tmp%13#4",
        "tmp%9#5"
      ],
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%9#5",
        "tmp%11#4",
        "tmp%13#4",
        "bu#0 (copy)"
      ]
    },
    "2306": {
      "op": "bytec 17 // 0x03",
      "defined_out": [
        "0x03",
        "app#0",
        "bu#0",
        "bu#0 (copy)",
        "result1#0",
        "tmp%11#4",
        "tmp%13#4",
        "tmp%9#5"
      ],
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%9#5",
        "tmp%11#4",
        "tmp%13#4",
        "bu#0 (copy)",
        "0x03"
      ]
    },
    "2308": {
      "op": "b==",
      "defined_out": [
        "app#0",
        "bu#0",
        "result1#0",
        "tmp%11#4",
        "tmp%13#4",
        "tmp%16#0",
        "tmp%9#5"
      ],
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%9#5",
        "tmp%11#4",
        "tmp%13#4",
        "tmp%16#0"
      ]
    },
    "2309": {
      "op": "assert",
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%9#5",
        "tmp%11#4",
        "tmp%13#4"
      ]
    },
    "2310": {
      "op": "itxn_begin"
    },
    "2311": {
      "op": "intc_2 // 1",
      "defined_out": [
        "1",
        "app#0",
        "bu#0",
        "result1#0",
        "tmp%11#4",
        "tmp%13#4",
        "tmp%9#5"
      ],
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%9#5",
        "tmp%11#4",
        "tmp%13#4",
        "1"
      ]
    },
    "2312": {
      "op": "itob",
      "defined_out": [
        "aggregate%val_as_bytes%1#0",
        "app#0",
        "bu#0",
        "result1#0",
        "tmp%11#4",
        "tmp%13#4",
        "tmp%9#5"
      ],
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%9#5",
        "tmp%11#4",
        "tmp%13#4",
        "aggregate%val_as_bytes%1#0"
      ]
    },
    "2313": {
      "op": "dig 6",
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%9#5",
        "tmp%11#4",
        "tmp%13#4",
        "aggregate%val_as_bytes%1#0",
        "app#0 (copy)"
      ]
    },
    "2315": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%9#5",
        "tmp%11#4",
        "tmp%13#4",
        "aggregate%val_as_bytes%1#0"
      ]
    },
    "2317": {
      "op": "bytec 4 // method \"echo_native_tuple(string,byte[],uint64,uint512)(string,byte[],uint64,uint512)\"",
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%9#5",
        "tmp%11#4",
        "tmp%13#4",
        "aggregate%val_as_bytes%1#0",
        "Method(echo_native_tuple(string,byte[],uint64,uint512)(string,byte[],uint64,uint512))"
      ]
    },
    "2319": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%9#5",
        "tmp%11#4",
        "tmp%13#4",
        "aggregate%val_as_bytes%1#0"
      ]
    },
    "2321": {
      "op": "bytec 5 // 0x00027331",
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%9#5",
        "tmp%11#4",
        "tmp%13#4",
        "aggregate%val_as_bytes%1#0",
        "0x00027331"
      ]
    },
    "2323": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%9#5",
        "tmp%11#4",
        "tmp%13#4",
        "aggregate%val_as_bytes%1#0"
      ]
    },
    "2325": {
      "op": "bytec 6 // 0x00026231",
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%9#5",
        "tmp%11#4",
        "tmp%13#4",
        "aggregate%val_as_bytes%1#0",
        "0x00026231"
      ]
    },
    "2327": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%9#5",
        "tmp%11#4",
        "tmp%13#4",
        "aggregate%val_as_bytes%1#0"
      ]
    },
    "2329": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%9#5",
        "tmp%11#4",
        "tmp%13#4"
      ]
    },
    "2331": {
      "op": "bytec_1 // 0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002",
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%9#5",
        "tmp%11#4",
        "tmp%13#4",
        "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002"
      ]
    },
    "2332": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%9#5",
        "tmp%11#4",
        "tmp%13#4"
      ]
    },
    "2334": {
      "op": "intc_1 // appl",
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%9#5",
        "tmp%11#4",
        "tmp%13#4",
        "appl"
      ]
    },
    "2335": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%9#5",
        "tmp%11#4",
        "tmp%13#4"
      ]
    },
    "2337": {
      "op": "intc_0 // 0",
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%9#5",
        "tmp%11#4",
        "tmp%13#4",
        "0"
      ]
    },
    "2338": {
      "op": "itxn_field Fee",
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%9#5",
        "tmp%11#4",
        "tmp%13#4"
      ]
    },
    "2340": {
      "op": "itxn_submit"
    },
    "2341": {
      "op": "itxn LastLog",
      "defined_out": [
        "app#0",
        "awst_tmp%1#0",
        "bu#0",
        "result1#0",
        "tmp%11#4",
        "tmp%13#4",
        "tmp%9#5"
      ],
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%9#5",
        "tmp%11#4",
        "tmp%13#4",
        "awst_tmp%1#0"
      ]
    },
    "2343": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "awst_tmp%1#0",
        "awst_tmp%1#0 (copy)",
        "bu#0",
        "result1#0",
        "tmp%11#4",
        "tmp%13#4",
        "tmp%9#5"
      ],
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%9#5",
        "tmp%11#4",
        "tmp%13#4",
        "awst_tmp%1#0",
        "awst_tmp%1#0 (copy)"
      ]
    },
    "2344": {
      "op": "extract 4 0",
      "defined_out": [
        "app#0",
        "awst_tmp%1#0",
        "bu#0",
        "result1#0",
        "result2#0",
        "tmp%11#4",
        "tmp%13#4",
        "tmp%9#5"
      ],
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%9#5",
        "tmp%11#4",
        "tmp%13#4",
        "awst_tmp%1#0",
        "result2#0"
      ]
    },
    "2347": {
      "op": "swap",
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%9#5",
        "tmp%11#4",
        "tmp%13#4",
        "result2#0",
        "awst_tmp%1#0"
      ]
    },
    "2348": {
      "op": "extract 0 4",
      "defined_out": [
        "app#0",
        "bu#0",
        "result1#0",
        "result2#0",
        "tmp%11#4",
        "tmp%13#4",
        "tmp%22#3",
        "tmp%9#5"
      ],
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%9#5",
        "tmp%11#4",
        "tmp%13#4",
        "result2#0",
        "tmp%22#3"
      ]
    },
    "2351": {
      "op": "bytec_0 // 0x151f7c75",
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%9#5",
        "tmp%11#4",
        "tmp%13#4",
        "result2#0",
        "tmp%22#3",
        "0x151f7c75"
      ]
    },
    "2352": {
      "op": "==",
      "defined_out": [
        "app#0",
        "bu#0",
        "result1#0",
        "result2#0",
        "tmp%11#4",
        "tmp%13#4",
        "tmp%23#1",
        "tmp%9#5"
      ],
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%9#5",
        "tmp%11#4",
        "tmp%13#4",
        "result2#0",
        "tmp%23#1"
      ]
    },
    "2353": {
      "error": "application log value is not the result of an ABI return",
      "op": "assert // application log value is not the result of an ABI return",
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%9#5",
        "tmp%11#4",
        "tmp%13#4",
        "result2#0"
      ]
    },
    "2354": {
      "op": "dig 5",
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%9#5",
        "tmp%11#4",
        "tmp%13#4",
        "result2#0",
        "result1#0 (copy)"
      ]
    },
    "2356": {
      "op": "==",
      "defined_out": [
        "app#0",
        "bu#0",
        "result1#0",
        "tmp%11#4",
        "tmp%13#4",
        "tmp%24#1",
        "tmp%9#5"
      ],
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%9#5",
        "tmp%11#4",
        "tmp%13#4",
        "tmp%24#1"
      ]
    },
    "2357": {
      "op": "assert",
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%9#5",
        "tmp%11#4",
        "tmp%13#4"
      ]
    },
    "2358": {
      "op": "itxn_begin"
    },
    "2359": {
      "op": "dig 5",
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%9#5",
        "tmp%11#4",
        "tmp%13#4",
        "app#0 (copy)"
      ]
    },
    "2361": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%9#5",
        "tmp%11#4",
        "tmp%13#4"
      ]
    },
    "2363": {
      "op": "bytec 4 // method \"echo_native_tuple(string,byte[],uint64,uint512)(string,byte[],uint64,uint512)\"",
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%9#5",
        "tmp%11#4",
        "tmp%13#4",
        "Method(echo_native_tuple(string,byte[],uint64,uint512)(string,byte[],uint64,uint512))"
      ]
    },
    "2365": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%9#5",
        "tmp%11#4",
        "tmp%13#4"
      ]
    },
    "2367": {
      "op": "bytec 5 // 0x00027331",
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%9#5",
        "tmp%11#4",
        "tmp%13#4",
        "0x00027331"
      ]
    },
    "2369": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%9#5",
        "tmp%11#4",
        "tmp%13#4"
      ]
    },
    "2371": {
      "op": "bytec 6 // 0x00026231",
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%9#5",
        "tmp%11#4",
        "tmp%13#4",
        "0x00026231"
      ]
    },
    "2373": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%9#5",
        "tmp%11#4",
        "tmp%13#4"
      ]
    },
    "2375": {
      "op": "bytec_2 // 0x0000000000000001",
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%9#5",
        "tmp%11#4",
        "tmp%13#4",
        "0x0000000000000001"
      ]
    },
    "2376": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%9#5",
        "tmp%11#4",
        "tmp%13#4"
      ]
    },
    "2378": {
      "op": "bytec_1 // 0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002",
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%9#5",
        "tmp%11#4",
        "tmp%13#4",
        "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002"
      ]
    },
    "2379": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%9#5",
        "tmp%11#4",
        "tmp%13#4"
      ]
    },
    "2381": {
      "op": "intc_1 // appl",
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%9#5",
        "tmp%11#4",
        "tmp%13#4",
        "appl"
      ]
    },
    "2382": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%9#5",
        "tmp%11#4",
        "tmp%13#4"
      ]
    },
    "2384": {
      "op": "intc_0 // 0",
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%9#5",
        "tmp%11#4",
        "tmp%13#4",
        "0"
      ]
    },
    "2385": {
      "op": "itxn_field Fee",
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%9#5",
        "tmp%11#4",
        "tmp%13#4"
      ]
    },
    "2387": {
      "op": "itxn_submit"
    },
    "2388": {
      "op": "itxn LastLog",
      "defined_out": [
        "app#0",
        "awst_tmp%2#0",
        "bu#0",
        "result1#0",
        "tmp%11#4",
        "tmp%13#4",
        "tmp%9#5"
      ],
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%9#5",
        "tmp%11#4",
        "tmp%13#4",
        "awst_tmp%2#0"
      ]
    },
    "2390": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "awst_tmp%2#0",
        "awst_tmp%2#0 (copy)",
        "bu#0",
        "result1#0",
        "tmp%11#4",
        "tmp%13#4",
        "tmp%9#5"
      ],
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%9#5",
        "tmp%11#4",
        "tmp%13#4",
        "awst_tmp%2#0",
        "awst_tmp%2#0 (copy)"
      ]
    },
    "2391": {
      "op": "extract 4 0",
      "defined_out": [
        "app#0",
        "awst_tmp%2#0",
        "bu#0",
        "result1#0",
        "result3#0",
        "tmp%11#4",
        "tmp%13#4",
        "tmp%9#5"
      ],
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%9#5",
        "tmp%11#4",
        "tmp%13#4",
        "awst_tmp%2#0",
        "result3#0"
      ]
    },
    "2394": {
      "op": "swap",
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%9#5",
        "tmp%11#4",
        "tmp%13#4",
        "result3#0",
        "awst_tmp%2#0"
      ]
    },
    "2395": {
      "op": "extract 0 4",
      "defined_out": [
        "app#0",
        "bu#0",
        "result1#0",
        "result3#0",
        "tmp%11#4",
        "tmp%13#4",
        "tmp%28#1",
        "tmp%9#5"
      ],
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%9#5",
        "tmp%11#4",
        "tmp%13#4",
        "result3#0",
        "tmp%28#1"
      ]
    },
    "2398": {
      "op": "bytec_0 // 0x151f7c75",
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%9#5",
        "tmp%11#4",
        "tmp%13#4",
        "result3#0",
        "tmp%28#1",
        "0x151f7c75"
      ]
    },
    "2399": {
      "op": "==",
      "defined_out": [
        "app#0",
        "bu#0",
        "result1#0",
        "result3#0",
        "tmp%11#4",
        "tmp%13#4",
        "tmp%29#1",
        "tmp%9#5"
      ],
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%9#5",
        "tmp%11#4",
        "tmp%13#4",
        "result3#0",
        "tmp%29#1"
      ]
    },
    "2400": {
      "error": "application log value is not the result of an ABI return",
      "op": "assert // application log value is not the result of an ABI return",
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%9#5",
        "tmp%11#4",
        "tmp%13#4",
        "result3#0"
      ]
    },
    "2401": {
      "op": "uncover 5",
      "stack_out": [
        "app#0",
        "bu#0",
        "tmp%9#5",
        "tmp%11#4",
        "tmp%13#4",
        "result3#0",
        "result1#0"
      ]
    },
    "2403": {
      "op": "==",
      "defined_out": [
        "app#0",
        "bu#0",
        "tmp%11#4",
        "tmp%13#4",
        "tmp%30#1",
        "tmp%9#5"
      ],
      "stack_out": [
        "app#0",
        "bu#0",
        "tmp%9#5",
        "tmp%11#4",
        "tmp%13#4",
        "tmp%30#1"
      ]
    },
    "2404": {
      "op": "assert",
      "stack_out": [
        "app#0",
        "bu#0",
        "tmp%9#5",
        "tmp%11#4",
        "tmp%13#4"
      ]
    },
    "2405": {
      "op": "itxn_begin"
    },
    "2406": {
      "op": "uncover 4",
      "stack_out": [
        "bu#0",
        "tmp%9#5",
        "tmp%11#4",
        "tmp%13#4",
        "app#0"
      ]
    },
    "2408": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "bu#0",
        "tmp%9#5",
        "tmp%11#4",
        "tmp%13#4"
      ]
    },
    "2410": {
      "op": "bytec 4 // method \"echo_native_tuple(string,byte[],uint64,uint512)(string,byte[],uint64,uint512)\"",
      "stack_out": [
        "bu#0",
        "tmp%9#5",
        "tmp%11#4",
        "tmp%13#4",
        "Method(echo_native_tuple(string,byte[],uint64,uint512)(string,byte[],uint64,uint512))"
      ]
    },
    "2412": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "bu#0",
        "tmp%9#5",
        "tmp%11#4",
        "tmp%13#4"
      ]
    },
    "2414": {
      "op": "bytec 5 // 0x00027331",
      "stack_out": [
        "bu#0",
        "tmp%9#5",
        "tmp%11#4",
        "tmp%13#4",
        "0x00027331"
      ]
    },
    "2416": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "bu#0",
        "tmp%9#5",
        "tmp%11#4",
        "tmp%13#4"
      ]
    },
    "2418": {
      "op": "bytec 6 // 0x00026231",
      "stack_out": [
        "bu#0",
        "tmp%9#5",
        "tmp%11#4",
        "tmp%13#4",
        "0x00026231"
      ]
    },
    "2420": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "bu#0",
        "tmp%9#5",
        "tmp%11#4",
        "tmp%13#4"
      ]
    },
    "2422": {
      "op": "bytec_2 // 0x0000000000000001",
      "stack_out": [
        "bu#0",
        "tmp%9#5",
        "tmp%11#4",
        "tmp%13#4",
        "0x0000000000000001"
      ]
    },
    "2423": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "bu#0",
        "tmp%9#5",
        "tmp%11#4",
        "tmp%13#4"
      ]
    },
    "2425": {
      "op": "bytec_1 // 0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002",
      "stack_out": [
        "bu#0",
        "tmp%9#5",
        "tmp%11#4",
        "tmp%13#4",
        "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002"
      ]
    },
    "2426": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "bu#0",
        "tmp%9#5",
        "tmp%11#4",
        "tmp%13#4"
      ]
    },
    "2428": {
      "op": "intc_1 // appl",
      "stack_out": [
        "bu#0",
        "tmp%9#5",
        "tmp%11#4",
        "tmp%13#4",
        "appl"
      ]
    },
    "2429": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "bu#0",
        "tmp%9#5",
        "tmp%11#4",
        "tmp%13#4"
      ]
    },
    "2431": {
      "op": "intc_0 // 0",
      "stack_out": [
        "bu#0",
        "tmp%9#5",
        "tmp%11#4",
        "tmp%13#4",
        "0"
      ]
    },
    "2432": {
      "op": "itxn_field Fee",
      "stack_out": [
        "bu#0",
        "tmp%9#5",
        "tmp%11#4",
        "tmp%13#4"
      ]
    },
    "2434": {
      "op": "itxn_submit"
    },
    "2435": {
      "op": "itxn LastLog",
      "defined_out": [
        "awst_tmp%3#0",
        "bu#0",
        "tmp%11#4",
        "tmp%13#4",
        "tmp%9#5"
      ],
      "stack_out": [
        "bu#0",
        "tmp%9#5",
        "tmp%11#4",
        "tmp%13#4",
        "awst_tmp%3#0"
      ]
    },
    "2437": {
      "op": "dup",
      "defined_out": [
        "awst_tmp%3#0",
        "awst_tmp%3#0 (copy)",
        "bu#0",
        "tmp%11#4",
        "tmp%13#4",
        "tmp%9#5"
      ],
      "stack_out": [
        "bu#0",
        "tmp%9#5",
        "tmp%11#4",
        "tmp%13#4",
        "awst_tmp%3#0",
        "awst_tmp%3#0 (copy)"
      ]
    },
    "2438": {
      "op": "extract 4 0",
      "defined_out": [
        "awst_tmp%3#0",
        "bu#0",
        "tmp%11#4",
        "tmp%13#4",
        "tmp%33#3",
        "tmp%9#5"
      ],
      "stack_out": [
        "bu#0",
        "tmp%9#5",
        "tmp%11#4",
        "tmp%13#4",
        "awst_tmp%3#0",
        "tmp%33#3"
      ]
    },
    "2441": {
      "op": "dig 1",
      "stack_out": [
        "bu#0",
        "tmp%9#5",
        "tmp%11#4",
        "tmp%13#4",
        "awst_tmp%3#0",
        "tmp%33#3",
        "awst_tmp%3#0 (copy)"
      ]
    },
    "2443": {
      "op": "extract 0 4",
      "defined_out": [
        "awst_tmp%3#0",
        "bu#0",
        "tmp%11#4",
        "tmp%13#4",
        "tmp%33#3",
        "tmp%34#3",
        "tmp%9#5"
      ],
      "stack_out": [
        "bu#0",
        "tmp%9#5",
        "tmp%11#4",
        "tmp%13#4",
        "awst_tmp%3#0",
        "tmp%33#3",
        "tmp%34#3"
      ]
    },
    "2446": {
      "op": "bytec_0 // 0x151f7c75",
      "stack_out": [
        "bu#0",
        "tmp%9#5",
        "tmp%11#4",
        "tmp%13#4",
        "awst_tmp%3#0",
        "tmp%33#3",
        "tmp%34#3",
        "0x151f7c75"
      ]
    },
    "2447": {
      "op": "==",
      "defined_out": [
        "awst_tmp%3#0",
        "bu#0",
        "tmp%11#4",
        "tmp%13#4",
        "tmp%33#3",
        "tmp%35#1",
        "tmp%9#5"
      ],
      "stack_out": [
        "bu#0",
        "tmp%9#5",
        "tmp%11#4",
        "tmp%13#4",
        "awst_tmp%3#0",
        "tmp%33#3",
        "tmp%35#1"
      ]
    },
    "2448": {
      "error": "application log value is not the result of an ABI return",
      "op": "assert // application log value is not the result of an ABI return",
      "stack_out": [
        "bu#0",
        "tmp%9#5",
        "tmp%11#4",
        "tmp%13#4",
        "awst_tmp%3#0",
        "tmp%33#3"
      ]
    },
    "2449": {
      "op": "dup",
      "defined_out": [
        "awst_tmp%3#0",
        "bu#0",
        "tmp%11#4",
        "tmp%13#4",
        "tmp%33#3",
        "tmp%33#3 (copy)",
        "tmp%9#5"
      ],
      "stack_out": [
        "bu#0",
        "tmp%9#5",
        "tmp%11#4",
        "tmp%13#4",
        "awst_tmp%3#0",
        "tmp%33#3",
        "tmp%33#3 (copy)"
      ]
    },
    "2450": {
      "op": "intc_0 // 0",
      "stack_out": [
        "bu#0",
        "tmp%9#5",
        "tmp%11#4",
        "tmp%13#4",
        "awst_tmp%3#0",
        "tmp%33#3",
        "tmp%33#3 (copy)",
        "0"
      ]
    },
    "2451": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%extract_uint16%3#0",
        "awst_tmp%3#0",
        "bu#0",
        "tmp%11#4",
        "tmp%13#4",
        "tmp%33#3",
        "tmp%9#5"
      ],
      "stack_out": [
        "bu#0",
        "tmp%9#5",
        "tmp%11#4",
        "tmp%13#4",
        "awst_tmp%3#0",
        "tmp%33#3",
        "aggregate%extract_uint16%3#0"
      ]
    },
    "2452": {
      "op": "dig 1",
      "stack_out": [
        "bu#0",
        "tmp%9#5",
        "tmp%11#4",
        "tmp%13#4",
        "awst_tmp%3#0",
        "tmp%33#3",
        "aggregate%extract_uint16%3#0",
        "tmp%33#3 (copy)"
      ]
    },
    "2454": {
      "op": "intc_3 // 2",
      "stack_out": [
        "bu#0",
        "tmp%9#5",
        "tmp%11#4",
        "tmp%13#4",
        "awst_tmp%3#0",
        "tmp%33#3",
        "aggregate%extract_uint16%3#0",
        "tmp%33#3 (copy)",
        "2"
      ]
    },
    "2455": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%extract_uint16%3#0",
        "aggregate%extract_uint16%4#0",
        "awst_tmp%3#0",
        "bu#0",
        "tmp%11#4",
        "tmp%13#4",
        "tmp%33#3",
        "tmp%9#5"
      ],
      "stack_out": [
        "bu#0",
        "tmp%9#5",
        "tmp%11#4",
        "tmp%13#4",
        "awst_tmp%3#0",
        "tmp%33#3",
        "aggregate%extract_uint16%3#0",
        "aggregate%extract_uint16%4#0"
      ]
    },
    "2456": {
      "op": "dig 2",
      "stack_out": [
        "bu#0",
        "tmp%9#5",
        "tmp%11#4",
        "tmp%13#4",
        "awst_tmp%3#0",
        "tmp%33#3",
        "aggregate%extract_uint16%3#0",
        "aggregate%extract_uint16%4#0",
        "tmp%33#3 (copy)"
      ]
    },
    "2458": {
      "op": "uncover 2",
      "stack_out": [
        "bu#0",
        "tmp%9#5",
        "tmp%11#4",
        "tmp%13#4",
        "awst_tmp%3#0",
        "tmp%33#3",
        "aggregate%extract_uint16%4#0",
        "tmp%33#3 (copy)",
        "aggregate%extract_uint16%3#0"
      ]
    },
    "2460": {
      "op": "dig 2",
      "defined_out": [
        "aggregate%extract_uint16%3#0",
        "aggregate%extract_uint16%4#0",
        "aggregate%extract_uint16%4#0 (copy)",
        "awst_tmp%3#0",
        "bu#0",
        "tmp%11#4",
        "tmp%13#4",
        "tmp%33#3",
        "tmp%33#3 (copy)",
        "tmp%9#5"
      ],
      "stack_out": [
        "bu#0",
        "tmp%9#5",
        "tmp%11#4",
        "tmp%13#4",
        "awst_tmp%3#0",
        "tmp%33#3",
        "aggregate%extract_uint16%4#0",
        "tmp%33#3 (copy)",
        "aggregate%extract_uint16%3#0",
        "aggregate%extract_uint16%4#0 (copy)"
      ]
    },
    "2462": {
      "op": "substring3",
      "defined_out": [
        "aggregate%extract_uint16%4#0",
        "aggregate%substring3%2#0",
        "awst_tmp%3#0",
        "bu#0",
        "tmp%11#4",
        "tmp%13#4",
        "tmp%33#3",
        "tmp%9#5"
      ],
      "stack_out": [
        "bu#0",
        "tmp%9#5",
        "tmp%11#4",
        "tmp%13#4",
        "awst_tmp%3#0",
        "tmp%33#3",
        "aggregate%extract_uint16%4#0",
        "aggregate%substring3%2#0"
      ]
    },
    "2463": {
      "op": "extract 2 0",
      "defined_out": [
        "aggregate%extract_uint16%4#0",
        "awst_tmp%3#0",
        "bu#0",
        "result_native.0#0",
        "tmp%11#4",
        "tmp%13#4",
        "tmp%33#3",
        "tmp%9#5"
      ],
      "stack_out": [
        "bu#0",
        "tmp%9#5",
        "tmp%11#4",
        "tmp%13#4",
        "awst_tmp%3#0",
        "tmp%33#3",
        "aggregate%extract_uint16%4#0",
        "result_native.0#0"
      ]
    },
    "2466": {
      "op": "dig 2",
      "stack_out": [
        "bu#0",
        "tmp%9#5",
        "tmp%11#4",
        "tmp%13#4",
        "awst_tmp%3#0",
        "tmp%33#3",
        "aggregate%extract_uint16%4#0",
        "result_native.0#0",
        "tmp%33#3 (copy)"
      ]
    },
    "2468": {
      "op": "len",
      "defined_out": [
        "aggregate%extract_uint16%4#0",
        "aggregate%len%1#0",
        "awst_tmp%3#0",
        "bu#0",
        "result_native.0#0",
        "tmp%11#4",
        "tmp%13#4",
        "tmp%33#3",
        "tmp%9#5"
      ],
      "stack_out": [
        "bu#0",
        "tmp%9#5",
        "tmp%11#4",
        "tmp%13#4",
        "awst_tmp%3#0",
        "tmp%33#3",
        "aggregate%extract_uint16%4#0",
        "result_native.0#0",
        "aggregate%len%1#0"
      ]
    },
    "2469": {
      "op": "swap"
    },
    "2470": {
      "op": "cover 3",
      "stack_out": [
        "bu#0",
        "tmp%9#5",
        "tmp%11#4",
        "tmp%13#4",
        "awst_tmp%3#0",
        "result_native.0#0",
        "tmp%33#3",
        "aggregate%extract_uint16%4#0",
        "aggregate%len%1#0"
      ]
    },
    "2472": {
      "op": "substring3",
      "defined_out": [
        "aggregate%substring3%3#0",
        "awst_tmp%3#0",
        "bu#0",
        "result_native.0#0",
        "tmp%11#4",
        "tmp%13#4",
        "tmp%9#5"
      ],
      "stack_out": [
        "bu#0",
        "tmp%9#5",
        "tmp%11#4",
        "tmp%13#4",
        "awst_tmp%3#0",
        "result_native.0#0",
        "aggregate%substring3%3#0"
      ]
    },
    "2473": {
      "op": "extract 2 0",
      "defined_out": [
        "awst_tmp%3#0",
        "bu#0",
        "result_native.0#0",
        "result_native.1#0",
        "tmp%11#4",
        "tmp%13#4",
        "tmp%9#5"
      ],
      "stack_out": [
        "bu#0",
        "tmp%9#5",
        "tmp%11#4",
        "tmp%13#4",
        "awst_tmp%3#0",
        "result_native.0#0",
        "result_native.1#0"
      ]
    },
    "2476": {
      "op": "dig 2",
      "stack_out": [
        "bu#0",
        "tmp%9#5",
        "tmp%11#4",
        "tmp%13#4",
        "awst_tmp%3#0",
        "result_native.0#0",
        "result_native.1#0",
        "awst_tmp%3#0 (copy)"
      ]
    },
    "2478": {
      "op": "pushint 8 // 8",
      "stack_out": [
        "bu#0",
        "tmp%9#5",
        "tmp%11#4",
        "tmp%13#4",
        "awst_tmp%3#0",
        "result_native.0#0",
        "result_native.1#0",
        "awst_tmp%3#0 (copy)",
        "8"
      ]
    },
    "2480": {
      "op": "extract_uint64",
      "defined_out": [
        "awst_tmp%3#0",
        "bu#0",
        "result_native.0#0",
        "result_native.1#0",
        "result_native.2#0",
        "tmp%11#4",
        "tmp%13#4",
        "tmp%9#5"
      ],
      "stack_out": [
        "bu#0",
        "tmp%9#5",
        "tmp%11#4",
        "tmp%13#4",
        "awst_tmp%3#0",
        "result_native.0#0",
        "result_native.1#0",
        "result_native.2#0"
      ]
    },
    "2481": {
      "op": "uncover 3",
      "stack_out": [
        "bu#0",
        "tmp%9#5",
        "tmp%11#4",
        "tmp%13#4",
        "result_native.0#0",
        "result_native.1#0",
        "result_native.2#0",
        "awst_tmp%3#0"
      ]
    },
    "2483": {
      "op": "extract 16 64",
      "defined_out": [
        "bu#0",
        "result_native.0#0",
        "result_native.1#0",
        "result_native.2#0",
        "result_native.3#0",
        "tmp%11#4",
        "tmp%13#4",
        "tmp%9#5"
      ],
      "stack_out": [
        "bu#0",
        "tmp%9#5",
        "tmp%11#4",
        "tmp%13#4",
        "result_native.0#0",
        "result_native.1#0",
        "result_native.2#0",
        "result_native.3#0"
      ]
    },
    "2486": {
      "op": "uncover 6",
      "stack_out": [
        "bu#0",
        "tmp%11#4",
        "tmp%13#4",
        "result_native.0#0",
        "result_native.1#0",
        "result_native.2#0",
        "result_native.3#0",
        "tmp%9#5"
      ]
    },
    "2488": {
      "op": "uncover 4",
      "stack_out": [
        "bu#0",
        "tmp%11#4",
        "tmp%13#4",
        "result_native.1#0",
        "result_native.2#0",
        "result_native.3#0",
        "tmp%9#5",
        "result_native.0#0"
      ]
    },
    "2490": {
      "op": "==",
      "defined_out": [
        "bu#0",
        "result_native.1#0",
        "result_native.2#0",
        "result_native.3#0",
        "tmp%11#4",
        "tmp%13#4",
        "tmp%45#1"
      ],
      "stack_out": [
        "bu#0",
        "tmp%11#4",
        "tmp%13#4",
        "result_native.1#0",
        "result_native.2#0",
        "result_native.3#0",
        "tmp%45#1"
      ]
    },
    "2491": {
      "op": "assert",
      "stack_out": [
        "bu#0",
        "tmp%11#4",
        "tmp%13#4",
        "result_native.1#0",
        "result_native.2#0",
        "result_native.3#0"
      ]
    },
    "2492": {
      "op": "uncover 4",
      "stack_out": [
        "bu#0",
        "tmp%13#4",
        "result_native.1#0",
        "result_native.2#0",
        "result_native.3#0",
        "tmp%11#4"
      ]
    },
    "2494": {
      "op": "uncover 3",
      "stack_out": [
        "bu#0",
        "tmp%13#4",
        "result_native.2#0",
        "result_native.3#0",
        "tmp%11#4",
        "result_native.1#0"
      ]
    },
    "2496": {
      "op": "==",
      "defined_out": [
        "bu#0",
        "result_native.2#0",
        "result_native.3#0",
        "tmp%13#4",
        "tmp%51#1"
      ],
      "stack_out": [
        "bu#0",
        "tmp%13#4",
        "result_native.2#0",
        "result_native.3#0",
        "tmp%51#1"
      ]
    },
    "2497": {
      "op": "assert",
      "stack_out": [
        "bu#0",
        "tmp%13#4",
        "result_native.2#0",
        "result_native.3#0"
      ]
    },
    "2498": {
      "op": "cover 2",
      "stack_out": [
        "bu#0",
        "result_native.3#0",
        "tmp%13#4",
        "result_native.2#0"
      ]
    },
    "2500": {
      "op": "==",
      "defined_out": [
        "bu#0",
        "result_native.3#0",
        "tmp%57#0"
      ],
      "stack_out": [
        "bu#0",
        "result_native.3#0",
        "tmp%57#0"
      ]
    },
    "2501": {
      "op": "assert",
      "stack_out": [
        "bu#0",
        "result_native.3#0"
      ]
    },
    "2502": {
      "op": "b==",
      "defined_out": [
        "tmp%63#1"
      ],
      "stack_out": [
        "tmp%63#1"
      ]
    },
    "2503": {
      "op": "assert",
      "stack_out": []
    },
    "2504": {
      "op": "intc_2 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "2505": {
      "op": "return",
      "stack_out": []
    },
    "2506": {
      "block": "main_test_native_biguint_route@14",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%61#0"
      ],
      "stack_out": [
        "tmp%61#0"
      ]
    },
    "2508": {
      "op": "!",
      "defined_out": [
        "tmp%62#0"
      ],
      "stack_out": [
        "tmp%62#0"
      ]
    },
    "2509": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "2510": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%63#0"
      ],
      "stack_out": [
        "tmp%63#0"
      ]
    },
    "2512": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "2513": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded(uint64)%12#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint64)%12#0"
      ]
    },
    "2516": {
      "op": "btoi",
      "defined_out": [
        "app#0"
      ],
      "stack_out": [
        "app#0"
      ]
    },
    "2517": {
      "op": "itxn_begin"
    },
    "2518": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "app#0 (copy)"
      ],
      "stack_out": [
        "app#0",
        "app#0 (copy)"
      ]
    },
    "2519": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "app#0"
      ]
    },
    "2521": {
      "op": "bytec 18 // method \"echo_native_biguint(uint512)uint512\"",
      "defined_out": [
        "Method(echo_native_biguint(uint512)uint512)",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "Method(echo_native_biguint(uint512)uint512)"
      ]
    },
    "2523": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0"
      ]
    },
    "2525": {
      "op": "bytec_1 // 0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002",
      "defined_out": [
        "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002"
      ]
    },
    "2526": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0"
      ]
    },
    "2528": {
      "op": "intc_1 // appl",
      "defined_out": [
        "app#0",
        "appl"
      ],
      "stack_out": [
        "app#0",
        "appl"
      ]
    },
    "2529": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "app#0"
      ]
    },
    "2531": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "0"
      ]
    },
    "2532": {
      "op": "itxn_field Fee",
      "stack_out": [
        "app#0"
      ]
    },
    "2534": {
      "op": "itxn_submit"
    },
    "2535": {
      "op": "itxn LastLog",
      "defined_out": [
        "app#0",
        "awst_tmp%0#0"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0"
      ]
    },
    "2537": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ]
    },
    "2538": {
      "op": "extract 4 0",
      "defined_out": [
        "app#0",
        "awst_tmp%0#0",
        "result1#1"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "result1#1"
      ]
    },
    "2541": {
      "op": "swap",
      "stack_out": [
        "app#0",
        "result1#1",
        "awst_tmp%0#0"
      ]
    },
    "2542": {
      "op": "extract 0 4",
      "defined_out": [
        "app#0",
        "result1#1",
        "tmp%1#2"
      ],
      "stack_out": [
        "app#0",
        "result1#1",
        "tmp%1#2"
      ]
    },
    "2545": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "app#0",
        "result1#1",
        "tmp%1#2"
      ],
      "stack_out": [
        "app#0",
        "result1#1",
        "tmp%1#2",
        "0x151f7c75"
      ]
    },
    "2546": {
      "op": "==",
      "defined_out": [
        "app#0",
        "result1#1",
        "tmp%2#3"
      ],
      "stack_out": [
        "app#0",
        "result1#1",
        "tmp%2#3"
      ]
    },
    "2547": {
      "error": "application log value is not the result of an ABI return",
      "op": "assert // application log value is not the result of an ABI return",
      "stack_out": [
        "app#0",
        "result1#1"
      ]
    },
    "2548": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "result1#1",
        "result1#1 (copy)"
      ],
      "stack_out": [
        "app#0",
        "result1#1",
        "result1#1 (copy)"
      ]
    },
    "2549": {
      "op": "bytec 17 // 0x03",
      "defined_out": [
        "0x03",
        "app#0",
        "result1#1",
        "result1#1 (copy)"
      ],
      "stack_out": [
        "app#0",
        "result1#1",
        "result1#1 (copy)",
        "0x03"
      ]
    },
    "2551": {
      "op": "b==",
      "defined_out": [
        "app#0",
        "result1#1",
        "tmp%4#0"
      ],
      "stack_out": [
        "app#0",
        "result1#1",
        "tmp%4#0"
      ]
    },
    "2552": {
      "op": "assert",
      "stack_out": [
        "app#0",
        "result1#1"
      ]
    },
    "2553": {
      "op": "itxn_begin"
    },
    "2554": {
      "op": "dig 1",
      "stack_out": [
        "app#0",
        "result1#1",
        "app#0 (copy)"
      ]
    },
    "2556": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "app#0",
        "result1#1"
      ]
    },
    "2558": {
      "op": "bytec 18 // method \"echo_native_biguint(uint512)uint512\"",
      "stack_out": [
        "app#0",
        "result1#1",
        "Method(echo_native_biguint(uint512)uint512)"
      ]
    },
    "2560": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0",
        "result1#1"
      ]
    },
    "2562": {
      "op": "bytec_1 // 0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002",
      "stack_out": [
        "app#0",
        "result1#1",
        "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002"
      ]
    },
    "2563": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0",
        "result1#1"
      ]
    },
    "2565": {
      "op": "intc_1 // appl",
      "stack_out": [
        "app#0",
        "result1#1",
        "appl"
      ]
    },
    "2566": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "app#0",
        "result1#1"
      ]
    },
    "2568": {
      "op": "intc_0 // 0",
      "stack_out": [
        "app#0",
        "result1#1",
        "0"
      ]
    },
    "2569": {
      "op": "itxn_field Fee",
      "stack_out": [
        "app#0",
        "result1#1"
      ]
    },
    "2571": {
      "op": "itxn_submit"
    },
    "2572": {
      "op": "itxn LastLog",
      "defined_out": [
        "app#0",
        "awst_tmp%1#0",
        "result1#1"
      ],
      "stack_out": [
        "app#0",
        "result1#1",
        "awst_tmp%1#0"
      ]
    },
    "2574": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "awst_tmp%1#0",
        "awst_tmp%1#0 (copy)",
        "result1#1"
      ],
      "stack_out": [
        "app#0",
        "result1#1",
        "awst_tmp%1#0",
        "awst_tmp%1#0 (copy)"
      ]
    },
    "2575": {
      "op": "extract 4 0",
      "defined_out": [
        "app#0",
        "awst_tmp%1#0",
        "result1#1",
        "result2#1"
      ],
      "stack_out": [
        "app#0",
        "result1#1",
        "awst_tmp%1#0",
        "result2#1"
      ]
    },
    "2578": {
      "op": "swap",
      "stack_out": [
        "app#0",
        "result1#1",
        "result2#1",
        "awst_tmp%1#0"
      ]
    },
    "2579": {
      "op": "extract 0 4",
      "defined_out": [
        "app#0",
        "result1#1",
        "result2#1",
        "tmp%7#1"
      ],
      "stack_out": [
        "app#0",
        "result1#1",
        "result2#1",
        "tmp%7#1"
      ]
    },
    "2582": {
      "op": "bytec_0 // 0x151f7c75",
      "stack_out": [
        "app#0",
        "result1#1",
        "result2#1",
        "tmp%7#1",
        "0x151f7c75"
      ]
    },
    "2583": {
      "op": "==",
      "defined_out": [
        "app#0",
        "result1#1",
        "result2#1",
        "tmp%8#1"
      ],
      "stack_out": [
        "app#0",
        "result1#1",
        "result2#1",
        "tmp%8#1"
      ]
    },
    "2584": {
      "error": "application log value is not the result of an ABI return",
      "op": "assert // application log value is not the result of an ABI return",
      "stack_out": [
        "app#0",
        "result1#1",
        "result2#1"
      ]
    },
    "2585": {
      "op": "dig 1",
      "stack_out": [
        "app#0",
        "result1#1",
        "result2#1",
        "result1#1 (copy)"
      ]
    },
    "2587": {
      "op": "b==",
      "defined_out": [
        "app#0",
        "result1#1",
        "tmp%10#1"
      ],
      "stack_out": [
        "app#0",
        "result1#1",
        "tmp%10#1"
      ]
    },
    "2588": {
      "op": "assert",
      "stack_out": [
        "app#0",
        "result1#1"
      ]
    },
    "2589": {
      "op": "itxn_begin"
    },
    "2590": {
      "op": "swap",
      "stack_out": [
        "result1#1",
        "app#0"
      ]
    },
    "2591": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "result1#1"
      ]
    },
    "2593": {
      "op": "bytec 18 // method \"echo_native_biguint(uint512)uint512\"",
      "stack_out": [
        "result1#1",
        "Method(echo_native_biguint(uint512)uint512)"
      ]
    },
    "2595": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "result1#1"
      ]
    },
    "2597": {
      "op": "bytec_1 // 0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002",
      "stack_out": [
        "result1#1",
        "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002"
      ]
    },
    "2598": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "result1#1"
      ]
    },
    "2600": {
      "op": "intc_1 // appl",
      "stack_out": [
        "result1#1",
        "appl"
      ]
    },
    "2601": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "result1#1"
      ]
    },
    "2603": {
      "op": "intc_0 // 0",
      "stack_out": [
        "result1#1",
        "0"
      ]
    },
    "2604": {
      "op": "itxn_field Fee",
      "stack_out": [
        "result1#1"
      ]
    },
    "2606": {
      "op": "itxn_submit"
    },
    "2607": {
      "op": "itxn LastLog",
      "defined_out": [
        "awst_tmp%2#0",
        "result1#1"
      ],
      "stack_out": [
        "result1#1",
        "awst_tmp%2#0"
      ]
    },
    "2609": {
      "op": "dup",
      "defined_out": [
        "awst_tmp%2#0",
        "awst_tmp%2#0 (copy)",
        "result1#1"
      ],
      "stack_out": [
        "result1#1",
        "awst_tmp%2#0",
        "awst_tmp%2#0 (copy)"
      ]
    },
    "2610": {
      "op": "extract 4 0",
      "defined_out": [
        "awst_tmp%2#0",
        "result1#1",
        "result3#1"
      ],
      "stack_out": [
        "result1#1",
        "awst_tmp%2#0",
        "result3#1"
      ]
    },
    "2613": {
      "op": "swap",
      "stack_out": [
        "result1#1",
        "result3#1",
        "awst_tmp%2#0"
      ]
    },
    "2614": {
      "op": "extract 0 4",
      "defined_out": [
        "result1#1",
        "result3#1",
        "tmp%12#6"
      ],
      "stack_out": [
        "result1#1",
        "result3#1",
        "tmp%12#6"
      ]
    },
    "2617": {
      "op": "bytec_0 // 0x151f7c75",
      "stack_out": [
        "result1#1",
        "result3#1",
        "tmp%12#6",
        "0x151f7c75"
      ]
    },
    "2618": {
      "op": "==",
      "defined_out": [
        "result1#1",
        "result3#1",
        "tmp%13#5"
      ],
      "stack_out": [
        "result1#1",
        "result3#1",
        "tmp%13#5"
      ]
    },
    "2619": {
      "error": "application log value is not the result of an ABI return",
      "op": "assert // application log value is not the result of an ABI return",
      "stack_out": [
        "result1#1",
        "result3#1"
      ]
    },
    "2620": {
      "op": "b==",
      "defined_out": [
        "tmp%15#2"
      ],
      "stack_out": [
        "tmp%15#2"
      ]
    },
    "2621": {
      "op": "assert",
      "stack_out": []
    },
    "2622": {
      "op": "intc_2 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "2623": {
      "op": "return",
      "stack_out": []
    },
    "2624": {
      "block": "main_test_native_uint64_route@13",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%56#0"
      ],
      "stack_out": [
        "tmp%56#0"
      ]
    },
    "2626": {
      "op": "!",
      "defined_out": [
        "tmp%57#0"
      ],
      "stack_out": [
        "tmp%57#0"
      ]
    },
    "2627": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "2628": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%58#0"
      ],
      "stack_out": [
        "tmp%58#0"
      ]
    },
    "2630": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "2631": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded(uint64)%11#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint64)%11#0"
      ]
    },
    "2634": {
      "op": "btoi",
      "defined_out": [
        "app#0"
      ],
      "stack_out": [
        "app#0"
      ]
    },
    "2635": {
      "op": "itxn_begin"
    },
    "2636": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "app#0 (copy)"
      ],
      "stack_out": [
        "app#0",
        "app#0 (copy)"
      ]
    },
    "2637": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "app#0"
      ]
    },
    "2639": {
      "op": "bytec 19 // method \"echo_native_uint64(uint64)uint64\"",
      "defined_out": [
        "Method(echo_native_uint64(uint64)uint64)",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "Method(echo_native_uint64(uint64)uint64)"
      ]
    },
    "2641": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0"
      ]
    },
    "2643": {
      "op": "bytec_2 // 0x0000000000000001",
      "defined_out": [
        "0x0000000000000001",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "0x0000000000000001"
      ]
    },
    "2644": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0"
      ]
    },
    "2646": {
      "op": "intc_1 // appl",
      "defined_out": [
        "app#0",
        "appl"
      ],
      "stack_out": [
        "app#0",
        "appl"
      ]
    },
    "2647": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "app#0"
      ]
    },
    "2649": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "0"
      ]
    },
    "2650": {
      "op": "itxn_field Fee",
      "stack_out": [
        "app#0"
      ]
    },
    "2652": {
      "op": "itxn_submit"
    },
    "2653": {
      "op": "itxn LastLog",
      "defined_out": [
        "app#0",
        "awst_tmp%0#0"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0"
      ]
    },
    "2655": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ]
    },
    "2656": {
      "op": "extract 4 0",
      "defined_out": [
        "app#0",
        "awst_tmp%0#0",
        "tmp%0#4"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "tmp%0#4"
      ]
    },
    "2659": {
      "op": "swap",
      "stack_out": [
        "app#0",
        "tmp%0#4",
        "awst_tmp%0#0"
      ]
    },
    "2660": {
      "op": "extract 0 4",
      "defined_out": [
        "app#0",
        "tmp%0#4",
        "tmp%1#2"
      ],
      "stack_out": [
        "app#0",
        "tmp%0#4",
        "tmp%1#2"
      ]
    },
    "2663": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "app#0",
        "tmp%0#4",
        "tmp%1#2"
      ],
      "stack_out": [
        "app#0",
        "tmp%0#4",
        "tmp%1#2",
        "0x151f7c75"
      ]
    },
    "2664": {
      "op": "==",
      "defined_out": [
        "app#0",
        "tmp%0#4",
        "tmp%2#3"
      ],
      "stack_out": [
        "app#0",
        "tmp%0#4",
        "tmp%2#3"
      ]
    },
    "2665": {
      "error": "application log value is not the result of an ABI return",
      "op": "assert // application log value is not the result of an ABI return",
      "stack_out": [
        "app#0",
        "tmp%0#4"
      ]
    },
    "2666": {
      "op": "btoi",
      "defined_out": [
        "app#0",
        "result1#2"
      ],
      "stack_out": [
        "app#0",
        "result1#2"
      ]
    },
    "2667": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "result1#2",
        "result1#2 (copy)"
      ],
      "stack_out": [
        "app#0",
        "result1#2",
        "result1#2 (copy)"
      ]
    },
    "2668": {
      "op": "intc_3 // 2",
      "defined_out": [
        "2",
        "app#0",
        "result1#2",
        "result1#2 (copy)"
      ],
      "stack_out": [
        "app#0",
        "result1#2",
        "result1#2 (copy)",
        "2"
      ]
    },
    "2669": {
      "op": "==",
      "defined_out": [
        "app#0",
        "result1#2",
        "tmp%4#0"
      ],
      "stack_out": [
        "app#0",
        "result1#2",
        "tmp%4#0"
      ]
    },
    "2670": {
      "op": "assert",
      "stack_out": [
        "app#0",
        "result1#2"
      ]
    },
    "2671": {
      "op": "itxn_begin"
    },
    "2672": {
      "op": "intc_2 // 1",
      "defined_out": [
        "1",
        "app#0",
        "result1#2"
      ],
      "stack_out": [
        "app#0",
        "result1#2",
        "1"
      ]
    },
    "2673": {
      "op": "itob",
      "defined_out": [
        "aggregate%val_as_bytes%0#0",
        "app#0",
        "result1#2"
      ],
      "stack_out": [
        "app#0",
        "result1#2",
        "aggregate%val_as_bytes%0#0"
      ]
    },
    "2674": {
      "op": "dig 2",
      "stack_out": [
        "app#0",
        "result1#2",
        "aggregate%val_as_bytes%0#0",
        "app#0 (copy)"
      ]
    },
    "2676": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "app#0",
        "result1#2",
        "aggregate%val_as_bytes%0#0"
      ]
    },
    "2678": {
      "op": "bytec 19 // method \"echo_native_uint64(uint64)uint64\"",
      "stack_out": [
        "app#0",
        "result1#2",
        "aggregate%val_as_bytes%0#0",
        "Method(echo_native_uint64(uint64)uint64)"
      ]
    },
    "2680": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0",
        "result1#2",
        "aggregate%val_as_bytes%0#0"
      ]
    },
    "2682": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0",
        "result1#2"
      ]
    },
    "2684": {
      "op": "intc_1 // appl",
      "stack_out": [
        "app#0",
        "result1#2",
        "appl"
      ]
    },
    "2685": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "app#0",
        "result1#2"
      ]
    },
    "2687": {
      "op": "intc_0 // 0",
      "stack_out": [
        "app#0",
        "result1#2",
        "0"
      ]
    },
    "2688": {
      "op": "itxn_field Fee",
      "stack_out": [
        "app#0",
        "result1#2"
      ]
    },
    "2690": {
      "op": "itxn_submit"
    },
    "2691": {
      "op": "itxn LastLog",
      "defined_out": [
        "app#0",
        "awst_tmp%1#0",
        "result1#2"
      ],
      "stack_out": [
        "app#0",
        "result1#2",
        "awst_tmp%1#0"
      ]
    },
    "2693": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "awst_tmp%1#0",
        "awst_tmp%1#0 (copy)",
        "result1#2"
      ],
      "stack_out": [
        "app#0",
        "result1#2",
        "awst_tmp%1#0",
        "awst_tmp%1#0 (copy)"
      ]
    },
    "2694": {
      "op": "extract 4 0",
      "defined_out": [
        "app#0",
        "awst_tmp%1#0",
        "result1#2",
        "tmp%6#1"
      ],
      "stack_out": [
        "app#0",
        "result1#2",
        "awst_tmp%1#0",
        "tmp%6#1"
      ]
    },
    "2697": {
      "op": "swap",
      "stack_out": [
        "app#0",
        "result1#2",
        "tmp%6#1",
        "awst_tmp%1#0"
      ]
    },
    "2698": {
      "op": "extract 0 4",
      "defined_out": [
        "app#0",
        "result1#2",
        "tmp%6#1",
        "tmp%7#1"
      ],
      "stack_out": [
        "app#0",
        "result1#2",
        "tmp%6#1",
        "tmp%7#1"
      ]
    },
    "2701": {
      "op": "bytec_0 // 0x151f7c75",
      "stack_out": [
        "app#0",
        "result1#2",
        "tmp%6#1",
        "tmp%7#1",
        "0x151f7c75"
      ]
    },
    "2702": {
      "op": "==",
      "defined_out": [
        "app#0",
        "result1#2",
        "tmp%6#1",
        "tmp%8#1"
      ],
      "stack_out": [
        "app#0",
        "result1#2",
        "tmp%6#1",
        "tmp%8#1"
      ]
    },
    "2703": {
      "error": "application log value is not the result of an ABI return",
      "op": "assert // application log value is not the result of an ABI return",
      "stack_out": [
        "app#0",
        "result1#2",
        "tmp%6#1"
      ]
    },
    "2704": {
      "op": "btoi",
      "defined_out": [
        "app#0",
        "result1#2",
        "result2#2"
      ],
      "stack_out": [
        "app#0",
        "result1#2",
        "result2#2"
      ]
    },
    "2705": {
      "op": "dig 1",
      "stack_out": [
        "app#0",
        "result1#2",
        "result2#2",
        "result1#2 (copy)"
      ]
    },
    "2707": {
      "op": "==",
      "defined_out": [
        "app#0",
        "result1#2",
        "tmp%10#1"
      ],
      "stack_out": [
        "app#0",
        "result1#2",
        "tmp%10#1"
      ]
    },
    "2708": {
      "op": "assert",
      "stack_out": [
        "app#0",
        "result1#2"
      ]
    },
    "2709": {
      "op": "itxn_begin"
    },
    "2710": {
      "op": "swap",
      "stack_out": [
        "result1#2",
        "app#0"
      ]
    },
    "2711": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "result1#2"
      ]
    },
    "2713": {
      "op": "bytec 19 // method \"echo_native_uint64(uint64)uint64\"",
      "stack_out": [
        "result1#2",
        "Method(echo_native_uint64(uint64)uint64)"
      ]
    },
    "2715": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "result1#2"
      ]
    },
    "2717": {
      "op": "bytec_2 // 0x0000000000000001",
      "stack_out": [
        "result1#2",
        "0x0000000000000001"
      ]
    },
    "2718": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "result1#2"
      ]
    },
    "2720": {
      "op": "intc_1 // appl",
      "stack_out": [
        "result1#2",
        "appl"
      ]
    },
    "2721": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "result1#2"
      ]
    },
    "2723": {
      "op": "intc_0 // 0",
      "stack_out": [
        "result1#2",
        "0"
      ]
    },
    "2724": {
      "op": "itxn_field Fee",
      "stack_out": [
        "result1#2"
      ]
    },
    "2726": {
      "op": "itxn_submit"
    },
    "2727": {
      "op": "itxn LastLog",
      "defined_out": [
        "awst_tmp%2#0",
        "result1#2"
      ],
      "stack_out": [
        "result1#2",
        "awst_tmp%2#0"
      ]
    },
    "2729": {
      "op": "dup",
      "defined_out": [
        "awst_tmp%2#0",
        "awst_tmp%2#0 (copy)",
        "result1#2"
      ],
      "stack_out": [
        "result1#2",
        "awst_tmp%2#0",
        "awst_tmp%2#0 (copy)"
      ]
    },
    "2730": {
      "op": "extract 4 0",
      "defined_out": [
        "awst_tmp%2#0",
        "result1#2",
        "tmp%11#4"
      ],
      "stack_out": [
        "result1#2",
        "awst_tmp%2#0",
        "tmp%11#4"
      ]
    },
    "2733": {
      "op": "swap",
      "stack_out": [
        "result1#2",
        "tmp%11#4",
        "awst_tmp%2#0"
      ]
    },
    "2734": {
      "op": "extract 0 4",
      "defined_out": [
        "result1#2",
        "tmp%11#4",
        "tmp%12#6"
      ],
      "stack_out": [
        "result1#2",
        "tmp%11#4",
        "tmp%12#6"
      ]
    },
    "2737": {
      "op": "bytec_0 // 0x151f7c75",
      "stack_out": [
        "result1#2",
        "tmp%11#4",
        "tmp%12#6",
        "0x151f7c75"
      ]
    },
    "2738": {
      "op": "==",
      "defined_out": [
        "result1#2",
        "tmp%11#4",
        "tmp%13#5"
      ],
      "stack_out": [
        "result1#2",
        "tmp%11#4",
        "tmp%13#5"
      ]
    },
    "2739": {
      "error": "application log value is not the result of an ABI return",
      "op": "assert // application log value is not the result of an ABI return",
      "stack_out": [
        "result1#2",
        "tmp%11#4"
      ]
    },
    "2740": {
      "op": "btoi",
      "defined_out": [
        "result1#2",
        "result3#2"
      ],
      "stack_out": [
        "result1#2",
        "result3#2"
      ]
    },
    "2741": {
      "op": "==",
      "defined_out": [
        "tmp%15#2"
      ],
      "stack_out": [
        "tmp%15#2"
      ]
    },
    "2742": {
      "op": "assert",
      "stack_out": []
    },
    "2743": {
      "op": "intc_2 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "2744": {
      "op": "return",
      "stack_out": []
    },
    "2745": {
      "block": "main_test_native_bytes_route@12",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%51#0"
      ],
      "stack_out": [
        "tmp%51#0"
      ]
    },
    "2747": {
      "op": "!",
      "defined_out": [
        "tmp%52#0"
      ],
      "stack_out": [
        "tmp%52#0"
      ]
    },
    "2748": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "2749": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%53#0"
      ],
      "stack_out": [
        "tmp%53#0"
      ]
    },
    "2751": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "2752": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded(uint64)%10#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint64)%10#0"
      ]
    },
    "2755": {
      "op": "btoi",
      "defined_out": [
        "app#0"
      ],
      "stack_out": [
        "app#0"
      ]
    },
    "2756": {
      "op": "itxn_begin"
    },
    "2757": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "app#0 (copy)"
      ],
      "stack_out": [
        "app#0",
        "app#0 (copy)"
      ]
    },
    "2758": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "app#0"
      ]
    },
    "2760": {
      "op": "bytec 20 // method \"echo_native_bytes(byte[])byte[]\"",
      "defined_out": [
        "Method(echo_native_bytes(byte[])byte[])",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "Method(echo_native_bytes(byte[])byte[])"
      ]
    },
    "2762": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0"
      ]
    },
    "2764": {
      "op": "bytec 21 // 0x000162",
      "defined_out": [
        "0x000162",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "0x000162"
      ]
    },
    "2766": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0"
      ]
    },
    "2768": {
      "op": "intc_1 // appl",
      "defined_out": [
        "app#0",
        "appl"
      ],
      "stack_out": [
        "app#0",
        "appl"
      ]
    },
    "2769": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "app#0"
      ]
    },
    "2771": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "0"
      ]
    },
    "2772": {
      "op": "itxn_field Fee",
      "stack_out": [
        "app#0"
      ]
    },
    "2774": {
      "op": "itxn_submit"
    },
    "2775": {
      "op": "itxn LastLog",
      "defined_out": [
        "app#0",
        "awst_tmp%0#0"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0"
      ]
    },
    "2777": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ]
    },
    "2778": {
      "op": "extract 0 4",
      "defined_out": [
        "app#0",
        "awst_tmp%0#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "tmp%2#0"
      ]
    },
    "2781": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "app#0",
        "awst_tmp%0#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "tmp%2#0",
        "0x151f7c75"
      ]
    },
    "2782": {
      "op": "==",
      "defined_out": [
        "app#0",
        "awst_tmp%0#0",
        "tmp%3#7"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "tmp%3#7"
      ]
    },
    "2783": {
      "error": "application log value is not the result of an ABI return",
      "op": "assert // application log value is not the result of an ABI return",
      "stack_out": [
        "app#0",
        "awst_tmp%0#0"
      ]
    },
    "2784": {
      "op": "extract 6 0",
      "defined_out": [
        "app#0",
        "result1#0"
      ],
      "stack_out": [
        "app#0",
        "result1#0"
      ]
    },
    "2787": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "result1#0",
        "result1#0 (copy)"
      ],
      "stack_out": [
        "app#0",
        "result1#0",
        "result1#0 (copy)"
      ]
    },
    "2788": {
      "op": "pushbytes 0x6563686f3a2062",
      "defined_out": [
        "0x6563686f3a2062",
        "app#0",
        "result1#0",
        "result1#0 (copy)"
      ],
      "stack_out": [
        "app#0",
        "result1#0",
        "result1#0 (copy)",
        "0x6563686f3a2062"
      ]
    },
    "2797": {
      "op": "==",
      "defined_out": [
        "app#0",
        "result1#0",
        "tmp%5#1"
      ],
      "stack_out": [
        "app#0",
        "result1#0",
        "tmp%5#1"
      ]
    },
    "2798": {
      "op": "assert",
      "stack_out": [
        "app#0",
        "result1#0"
      ]
    },
    "2799": {
      "op": "itxn_begin"
    },
    "2800": {
      "op": "dig 1",
      "stack_out": [
        "app#0",
        "result1#0",
        "app#0 (copy)"
      ]
    },
    "2802": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "app#0",
        "result1#0"
      ]
    },
    "2804": {
      "op": "bytec 20 // method \"echo_native_bytes(byte[])byte[]\"",
      "stack_out": [
        "app#0",
        "result1#0",
        "Method(echo_native_bytes(byte[])byte[])"
      ]
    },
    "2806": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0",
        "result1#0"
      ]
    },
    "2808": {
      "op": "bytec 21 // 0x000162",
      "stack_out": [
        "app#0",
        "result1#0",
        "0x000162"
      ]
    },
    "2810": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0",
        "result1#0"
      ]
    },
    "2812": {
      "op": "intc_1 // appl",
      "stack_out": [
        "app#0",
        "result1#0",
        "appl"
      ]
    },
    "2813": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "app#0",
        "result1#0"
      ]
    },
    "2815": {
      "op": "intc_0 // 0",
      "stack_out": [
        "app#0",
        "result1#0",
        "0"
      ]
    },
    "2816": {
      "op": "itxn_field Fee",
      "stack_out": [
        "app#0",
        "result1#0"
      ]
    },
    "2818": {
      "op": "itxn_submit"
    },
    "2819": {
      "op": "itxn LastLog",
      "defined_out": [
        "app#0",
        "awst_tmp%1#0",
        "result1#0"
      ],
      "stack_out": [
        "app#0",
        "result1#0",
        "awst_tmp%1#0"
      ]
    },
    "2821": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "awst_tmp%1#0",
        "awst_tmp%1#0 (copy)",
        "result1#0"
      ],
      "stack_out": [
        "app#0",
        "result1#0",
        "awst_tmp%1#0",
        "awst_tmp%1#0 (copy)"
      ]
    },
    "2822": {
      "op": "extract 0 4",
      "defined_out": [
        "app#0",
        "awst_tmp%1#0",
        "result1#0",
        "tmp%8#3"
      ],
      "stack_out": [
        "app#0",
        "result1#0",
        "awst_tmp%1#0",
        "tmp%8#3"
      ]
    },
    "2825": {
      "op": "bytec_0 // 0x151f7c75",
      "stack_out": [
        "app#0",
        "result1#0",
        "awst_tmp%1#0",
        "tmp%8#3",
        "0x151f7c75"
      ]
    },
    "2826": {
      "op": "==",
      "defined_out": [
        "app#0",
        "awst_tmp%1#0",
        "result1#0",
        "tmp%9#1"
      ],
      "stack_out": [
        "app#0",
        "result1#0",
        "awst_tmp%1#0",
        "tmp%9#1"
      ]
    },
    "2827": {
      "error": "application log value is not the result of an ABI return",
      "op": "assert // application log value is not the result of an ABI return",
      "stack_out": [
        "app#0",
        "result1#0",
        "awst_tmp%1#0"
      ]
    },
    "2828": {
      "op": "extract 6 0",
      "defined_out": [
        "app#0",
        "result1#0",
        "result2#0"
      ],
      "stack_out": [
        "app#0",
        "result1#0",
        "result2#0"
      ]
    },
    "2831": {
      "op": "dig 1",
      "stack_out": [
        "app#0",
        "result1#0",
        "result2#0",
        "result1#0 (copy)"
      ]
    },
    "2833": {
      "op": "==",
      "defined_out": [
        "app#0",
        "result1#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "app#0",
        "result1#0",
        "tmp%11#0"
      ]
    },
    "2834": {
      "op": "assert",
      "stack_out": [
        "app#0",
        "result1#0"
      ]
    },
    "2835": {
      "op": "itxn_begin"
    },
    "2836": {
      "op": "swap",
      "stack_out": [
        "result1#0",
        "app#0"
      ]
    },
    "2837": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "result1#0"
      ]
    },
    "2839": {
      "op": "bytec 20 // method \"echo_native_bytes(byte[])byte[]\"",
      "stack_out": [
        "result1#0",
        "Method(echo_native_bytes(byte[])byte[])"
      ]
    },
    "2841": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "result1#0"
      ]
    },
    "2843": {
      "op": "bytec 21 // 0x000162",
      "stack_out": [
        "result1#0",
        "0x000162"
      ]
    },
    "2845": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "result1#0"
      ]
    },
    "2847": {
      "op": "intc_1 // appl",
      "stack_out": [
        "result1#0",
        "appl"
      ]
    },
    "2848": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "result1#0"
      ]
    },
    "2850": {
      "op": "intc_0 // 0",
      "stack_out": [
        "result1#0",
        "0"
      ]
    },
    "2851": {
      "op": "itxn_field Fee",
      "stack_out": [
        "result1#0"
      ]
    },
    "2853": {
      "op": "itxn_submit"
    },
    "2854": {
      "op": "itxn LastLog",
      "defined_out": [
        "awst_tmp%2#0",
        "result1#0"
      ],
      "stack_out": [
        "result1#0",
        "awst_tmp%2#0"
      ]
    },
    "2856": {
      "op": "dup",
      "defined_out": [
        "awst_tmp%2#0",
        "awst_tmp%2#0 (copy)",
        "result1#0"
      ],
      "stack_out": [
        "result1#0",
        "awst_tmp%2#0",
        "awst_tmp%2#0 (copy)"
      ]
    },
    "2857": {
      "op": "extract 0 4",
      "defined_out": [
        "awst_tmp%2#0",
        "result1#0",
        "tmp%14#2"
      ],
      "stack_out": [
        "result1#0",
        "awst_tmp%2#0",
        "tmp%14#2"
      ]
    },
    "2860": {
      "op": "bytec_0 // 0x151f7c75",
      "stack_out": [
        "result1#0",
        "awst_tmp%2#0",
        "tmp%14#2",
        "0x151f7c75"
      ]
    },
    "2861": {
      "op": "==",
      "defined_out": [
        "awst_tmp%2#0",
        "result1#0",
        "tmp%15#2"
      ],
      "stack_out": [
        "result1#0",
        "awst_tmp%2#0",
        "tmp%15#2"
      ]
    },
    "2862": {
      "error": "application log value is not the result of an ABI return",
      "op": "assert // application log value is not the result of an ABI return",
      "stack_out": [
        "result1#0",
        "awst_tmp%2#0"
      ]
    },
    "2863": {
      "op": "extract 6 0",
      "defined_out": [
        "result1#0",
        "result3#0"
      ],
      "stack_out": [
        "result1#0",
        "result3#0"
      ]
    },
    "2866": {
      "op": "==",
      "defined_out": [
        "tmp%17#2"
      ],
      "stack_out": [
        "tmp%17#2"
      ]
    },
    "2867": {
      "op": "assert",
      "stack_out": []
    },
    "2868": {
      "op": "intc_2 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "2869": {
      "op": "return",
      "stack_out": []
    },
    "2870": {
      "block": "main_test_native_string_route@11",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%46#0"
      ],
      "stack_out": [
        "tmp%46#0"
      ]
    },
    "2872": {
      "op": "!",
      "defined_out": [
        "tmp%47#0"
      ],
      "stack_out": [
        "tmp%47#0"
      ]
    },
    "2873": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "2874": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%48#0"
      ],
      "stack_out": [
        "tmp%48#0"
      ]
    },
    "2876": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "2877": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded(uint64)%9#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint64)%9#0"
      ]
    },
    "2880": {
      "op": "btoi",
      "defined_out": [
        "app#0"
      ],
      "stack_out": [
        "app#0"
      ]
    },
    "2881": {
      "op": "itxn_begin"
    },
    "2882": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "app#0 (copy)"
      ],
      "stack_out": [
        "app#0",
        "app#0 (copy)"
      ]
    },
    "2883": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "app#0"
      ]
    },
    "2885": {
      "op": "bytec 22 // method \"echo_native_string(string)string\"",
      "defined_out": [
        "Method(echo_native_string(string)string)",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "Method(echo_native_string(string)string)"
      ]
    },
    "2887": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0"
      ]
    },
    "2889": {
      "op": "bytec 23 // 0x000173",
      "defined_out": [
        "0x000173",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "0x000173"
      ]
    },
    "2891": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0"
      ]
    },
    "2893": {
      "op": "intc_1 // appl",
      "defined_out": [
        "app#0",
        "appl"
      ],
      "stack_out": [
        "app#0",
        "appl"
      ]
    },
    "2894": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "app#0"
      ]
    },
    "2896": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "0"
      ]
    },
    "2897": {
      "op": "itxn_field Fee",
      "stack_out": [
        "app#0"
      ]
    },
    "2899": {
      "op": "itxn_submit"
    },
    "2900": {
      "op": "itxn LastLog",
      "defined_out": [
        "app#0",
        "awst_tmp%0#0"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0"
      ]
    },
    "2902": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ]
    },
    "2903": {
      "op": "extract 0 4",
      "defined_out": [
        "app#0",
        "awst_tmp%0#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "tmp%2#0"
      ]
    },
    "2906": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "app#0",
        "awst_tmp%0#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "tmp%2#0",
        "0x151f7c75"
      ]
    },
    "2907": {
      "op": "==",
      "defined_out": [
        "app#0",
        "awst_tmp%0#0",
        "tmp%3#7"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "tmp%3#7"
      ]
    },
    "2908": {
      "error": "application log value is not the result of an ABI return",
      "op": "assert // application log value is not the result of an ABI return",
      "stack_out": [
        "app#0",
        "awst_tmp%0#0"
      ]
    },
    "2909": {
      "op": "extract 6 0",
      "defined_out": [
        "app#0",
        "result1#4"
      ],
      "stack_out": [
        "app#0",
        "result1#4"
      ]
    },
    "2912": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "result1#4",
        "result1#4 (copy)"
      ],
      "stack_out": [
        "app#0",
        "result1#4",
        "result1#4 (copy)"
      ]
    },
    "2913": {
      "op": "pushbytes \"echo: s\"",
      "defined_out": [
        "\"echo: s\"",
        "app#0",
        "result1#4",
        "result1#4 (copy)"
      ],
      "stack_out": [
        "app#0",
        "result1#4",
        "result1#4 (copy)",
        "\"echo: s\""
      ]
    },
    "2922": {
      "op": "==",
      "defined_out": [
        "app#0",
        "result1#4",
        "tmp%5#1"
      ],
      "stack_out": [
        "app#0",
        "result1#4",
        "tmp%5#1"
      ]
    },
    "2923": {
      "op": "assert",
      "stack_out": [
        "app#0",
        "result1#4"
      ]
    },
    "2924": {
      "op": "itxn_begin"
    },
    "2925": {
      "op": "dig 1",
      "stack_out": [
        "app#0",
        "result1#4",
        "app#0 (copy)"
      ]
    },
    "2927": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "app#0",
        "result1#4"
      ]
    },
    "2929": {
      "op": "bytec 22 // method \"echo_native_string(string)string\"",
      "stack_out": [
        "app#0",
        "result1#4",
        "Method(echo_native_string(string)string)"
      ]
    },
    "2931": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0",
        "result1#4"
      ]
    },
    "2933": {
      "op": "bytec 23 // 0x000173",
      "stack_out": [
        "app#0",
        "result1#4",
        "0x000173"
      ]
    },
    "2935": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0",
        "result1#4"
      ]
    },
    "2937": {
      "op": "intc_1 // appl",
      "stack_out": [
        "app#0",
        "result1#4",
        "appl"
      ]
    },
    "2938": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "app#0",
        "result1#4"
      ]
    },
    "2940": {
      "op": "intc_0 // 0",
      "stack_out": [
        "app#0",
        "result1#4",
        "0"
      ]
    },
    "2941": {
      "op": "itxn_field Fee",
      "stack_out": [
        "app#0",
        "result1#4"
      ]
    },
    "2943": {
      "op": "itxn_submit"
    },
    "2944": {
      "op": "itxn LastLog",
      "defined_out": [
        "app#0",
        "awst_tmp%1#0",
        "result1#4"
      ],
      "stack_out": [
        "app#0",
        "result1#4",
        "awst_tmp%1#0"
      ]
    },
    "2946": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "awst_tmp%1#0",
        "awst_tmp%1#0 (copy)",
        "result1#4"
      ],
      "stack_out": [
        "app#0",
        "result1#4",
        "awst_tmp%1#0",
        "awst_tmp%1#0 (copy)"
      ]
    },
    "2947": {
      "op": "extract 0 4",
      "defined_out": [
        "app#0",
        "awst_tmp%1#0",
        "result1#4",
        "tmp%8#3"
      ],
      "stack_out": [
        "app#0",
        "result1#4",
        "awst_tmp%1#0",
        "tmp%8#3"
      ]
    },
    "2950": {
      "op": "bytec_0 // 0x151f7c75",
      "stack_out": [
        "app#0",
        "result1#4",
        "awst_tmp%1#0",
        "tmp%8#3",
        "0x151f7c75"
      ]
    },
    "2951": {
      "op": "==",
      "defined_out": [
        "app#0",
        "awst_tmp%1#0",
        "result1#4",
        "tmp%9#1"
      ],
      "stack_out": [
        "app#0",
        "result1#4",
        "awst_tmp%1#0",
        "tmp%9#1"
      ]
    },
    "2952": {
      "error": "application log value is not the result of an ABI return",
      "op": "assert // application log value is not the result of an ABI return",
      "stack_out": [
        "app#0",
        "result1#4",
        "awst_tmp%1#0"
      ]
    },
    "2953": {
      "op": "extract 6 0",
      "defined_out": [
        "app#0",
        "result1#4",
        "result2#4"
      ],
      "stack_out": [
        "app#0",
        "result1#4",
        "result2#4"
      ]
    },
    "2956": {
      "op": "dig 1",
      "stack_out": [
        "app#0",
        "result1#4",
        "result2#4",
        "result1#4 (copy)"
      ]
    },
    "2958": {
      "op": "==",
      "defined_out": [
        "app#0",
        "result1#4",
        "tmp%11#0"
      ],
      "stack_out": [
        "app#0",
        "result1#4",
        "tmp%11#0"
      ]
    },
    "2959": {
      "op": "assert",
      "stack_out": [
        "app#0",
        "result1#4"
      ]
    },
    "2960": {
      "op": "itxn_begin"
    },
    "2961": {
      "op": "swap",
      "stack_out": [
        "result1#4",
        "app#0"
      ]
    },
    "2962": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "result1#4"
      ]
    },
    "2964": {
      "op": "bytec 22 // method \"echo_native_string(string)string\"",
      "stack_out": [
        "result1#4",
        "Method(echo_native_string(string)string)"
      ]
    },
    "2966": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "result1#4"
      ]
    },
    "2968": {
      "op": "bytec 23 // 0x000173",
      "stack_out": [
        "result1#4",
        "0x000173"
      ]
    },
    "2970": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "result1#4"
      ]
    },
    "2972": {
      "op": "intc_1 // appl",
      "stack_out": [
        "result1#4",
        "appl"
      ]
    },
    "2973": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "result1#4"
      ]
    },
    "2975": {
      "op": "intc_0 // 0",
      "stack_out": [
        "result1#4",
        "0"
      ]
    },
    "2976": {
      "op": "itxn_field Fee",
      "stack_out": [
        "result1#4"
      ]
    },
    "2978": {
      "op": "itxn_submit"
    },
    "2979": {
      "op": "itxn LastLog",
      "defined_out": [
        "awst_tmp%2#0",
        "result1#4"
      ],
      "stack_out": [
        "result1#4",
        "awst_tmp%2#0"
      ]
    },
    "2981": {
      "op": "dup",
      "defined_out": [
        "awst_tmp%2#0",
        "awst_tmp%2#0 (copy)",
        "result1#4"
      ],
      "stack_out": [
        "result1#4",
        "awst_tmp%2#0",
        "awst_tmp%2#0 (copy)"
      ]
    },
    "2982": {
      "op": "extract 0 4",
      "defined_out": [
        "awst_tmp%2#0",
        "result1#4",
        "tmp%14#2"
      ],
      "stack_out": [
        "result1#4",
        "awst_tmp%2#0",
        "tmp%14#2"
      ]
    },
    "2985": {
      "op": "bytec_0 // 0x151f7c75",
      "stack_out": [
        "result1#4",
        "awst_tmp%2#0",
        "tmp%14#2",
        "0x151f7c75"
      ]
    },
    "2986": {
      "op": "==",
      "defined_out": [
        "awst_tmp%2#0",
        "result1#4",
        "tmp%15#2"
      ],
      "stack_out": [
        "result1#4",
        "awst_tmp%2#0",
        "tmp%15#2"
      ]
    },
    "2987": {
      "error": "application log value is not the result of an ABI return",
      "op": "assert // application log value is not the result of an ABI return",
      "stack_out": [
        "result1#4",
        "awst_tmp%2#0"
      ]
    },
    "2988": {
      "op": "extract 6 0",
      "defined_out": [
        "result1#4",
        "result3#4"
      ],
      "stack_out": [
        "result1#4",
        "result3#4"
      ]
    },
    "2991": {
      "op": "==",
      "defined_out": [
        "tmp%17#2"
      ],
      "stack_out": [
        "tmp%17#2"
      ]
    },
    "2992": {
      "op": "assert",
      "stack_out": []
    },
    "2993": {
      "op": "intc_2 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "2994": {
      "op": "return",
      "stack_out": []
    },
    "2995": {
      "block": "main_test_account_to_address_route@10",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%41#0"
      ],
      "stack_out": [
        "tmp%41#0"
      ]
    },
    "2997": {
      "op": "!",
      "defined_out": [
        "tmp%42#0"
      ],
      "stack_out": [
        "tmp%42#0"
      ]
    },
    "2998": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "2999": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%43#0"
      ],
      "stack_out": [
        "tmp%43#0"
      ]
    },
    "3001": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "3002": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded(uint64)%8#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint64)%8#0"
      ]
    },
    "3005": {
      "op": "btoi",
      "defined_out": [
        "app#0"
      ],
      "stack_out": [
        "app#0"
      ]
    },
    "3006": {
      "op": "itxn_begin"
    },
    "3007": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "app#0",
        "tmp%0#12"
      ],
      "stack_out": [
        "app#0",
        "tmp%0#12"
      ]
    },
    "3009": {
      "op": "swap",
      "stack_out": [
        "tmp%0#12",
        "app#0"
      ]
    },
    "3010": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "tmp%0#12"
      ]
    },
    "3012": {
      "op": "pushbytes 0x0437b17e // method \"log(address)void\"",
      "defined_out": [
        "Method(log(address)void)",
        "tmp%0#12"
      ],
      "stack_out": [
        "tmp%0#12",
        "Method(log(address)void)"
      ]
    },
    "3018": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "tmp%0#12"
      ]
    },
    "3020": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "3022": {
      "op": "intc_1 // appl",
      "defined_out": [
        "appl"
      ],
      "stack_out": [
        "appl"
      ]
    },
    "3023": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "3025": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "3026": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "3028": {
      "op": "itxn_submit"
    },
    "3029": {
      "op": "itxn LastLog",
      "defined_out": [
        "txn.LastLog#0"
      ],
      "stack_out": [
        "txn.LastLog#0"
      ]
    },
    "3031": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "tmp%2#10",
        "txn.LastLog#0"
      ],
      "stack_out": [
        "txn.LastLog#0",
        "tmp%2#10"
      ]
    },
    "3033": {
      "op": "==",
      "defined_out": [
        "tmp%3#7"
      ],
      "stack_out": [
        "tmp%3#7"
      ]
    },
    "3034": {
      "op": "assert",
      "stack_out": []
    },
    "3035": {
      "op": "intc_2 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "3036": {
      "op": "return",
      "stack_out": []
    },
    "3037": {
      "block": "main_test_ref_types_route@9",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%35#0"
      ],
      "stack_out": [
        "tmp%35#0"
      ]
    },
    "3039": {
      "op": "!",
      "defined_out": [
        "tmp%36#0"
      ],
      "stack_out": [
        "tmp%36#0"
      ]
    },
    "3040": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "3041": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%37#0"
      ],
      "stack_out": [
        "tmp%37#0"
      ]
    },
    "3043": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "3044": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded(uint64)%6#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint64)%6#0"
      ]
    },
    "3047": {
      "op": "dup",
      "defined_out": [
        "reinterpret_Encoded(uint64)%6#0",
        "reinterpret_Encoded(uint64)%6#0 (copy)"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint64)%6#0",
        "reinterpret_Encoded(uint64)%6#0 (copy)"
      ]
    },
    "3048": {
      "op": "btoi",
      "defined_out": [
        "app#0",
        "reinterpret_Encoded(uint64)%6#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint64)%6#0",
        "app#0"
      ]
    },
    "3049": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "app#0",
        "reinterpret_Encoded(uint64)%6#0",
        "reinterpret_Encoded(uint64)%7#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint64)%6#0",
        "app#0",
        "reinterpret_Encoded(uint64)%7#0"
      ]
    },
    "3052": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "reinterpret_Encoded(uint64)%6#0",
        "reinterpret_Encoded(uint64)%7#0",
        "reinterpret_Encoded(uint64)%7#0 (copy)"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint64)%6#0",
        "app#0",
        "reinterpret_Encoded(uint64)%7#0",
        "reinterpret_Encoded(uint64)%7#0 (copy)"
      ]
    },
    "3053": {
      "op": "btoi",
      "defined_out": [
        "app#0",
        "asset#0",
        "reinterpret_Encoded(uint64)%6#0",
        "reinterpret_Encoded(uint64)%7#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint64)%6#0",
        "app#0",
        "reinterpret_Encoded(uint64)%7#0",
        "asset#0"
      ]
    },
    "3054": {
      "op": "itxn_begin"
    },
    "3055": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "app#0",
        "asset#0",
        "reinterpret_Encoded(uint64)%6#0",
        "reinterpret_Encoded(uint64)%7#0",
        "tmp%1#11"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint64)%6#0",
        "app#0",
        "reinterpret_Encoded(uint64)%7#0",
        "asset#0",
        "tmp%1#11"
      ]
    },
    "3057": {
      "op": "dig 3",
      "defined_out": [
        "app#0",
        "app#0 (copy)",
        "asset#0",
        "reinterpret_Encoded(uint64)%6#0",
        "reinterpret_Encoded(uint64)%7#0",
        "tmp%1#11"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint64)%6#0",
        "app#0",
        "reinterpret_Encoded(uint64)%7#0",
        "asset#0",
        "tmp%1#11",
        "app#0 (copy)"
      ]
    },
    "3059": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "reinterpret_Encoded(uint64)%6#0",
        "app#0",
        "reinterpret_Encoded(uint64)%7#0",
        "asset#0",
        "tmp%1#11"
      ]
    },
    "3061": {
      "op": "pushbytes 0x46b50faf // method \"log(uint64,address,uint64)void\"",
      "defined_out": [
        "Method(log(uint64,address,uint64)void)",
        "app#0",
        "asset#0",
        "reinterpret_Encoded(uint64)%6#0",
        "reinterpret_Encoded(uint64)%7#0",
        "tmp%1#11"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint64)%6#0",
        "app#0",
        "reinterpret_Encoded(uint64)%7#0",
        "asset#0",
        "tmp%1#11",
        "Method(log(uint64,address,uint64)void)"
      ]
    },
    "3067": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "reinterpret_Encoded(uint64)%6#0",
        "app#0",
        "reinterpret_Encoded(uint64)%7#0",
        "asset#0",
        "tmp%1#11"
      ]
    },
    "3069": {
      "op": "uncover 2",
      "stack_out": [
        "reinterpret_Encoded(uint64)%6#0",
        "app#0",
        "asset#0",
        "tmp%1#11",
        "reinterpret_Encoded(uint64)%7#0"
      ]
    },
    "3071": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "reinterpret_Encoded(uint64)%6#0",
        "app#0",
        "asset#0",
        "tmp%1#11"
      ]
    },
    "3073": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "reinterpret_Encoded(uint64)%6#0",
        "app#0",
        "asset#0"
      ]
    },
    "3075": {
      "op": "uncover 2",
      "stack_out": [
        "app#0",
        "asset#0",
        "reinterpret_Encoded(uint64)%6#0"
      ]
    },
    "3077": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0",
        "asset#0"
      ]
    },
    "3079": {
      "op": "intc_1 // appl",
      "defined_out": [
        "app#0",
        "appl",
        "asset#0"
      ],
      "stack_out": [
        "app#0",
        "asset#0",
        "appl"
      ]
    },
    "3080": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "app#0",
        "asset#0"
      ]
    },
    "3082": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "app#0",
        "asset#0"
      ],
      "stack_out": [
        "app#0",
        "asset#0",
        "0"
      ]
    },
    "3083": {
      "op": "itxn_field Fee",
      "stack_out": [
        "app#0",
        "asset#0"
      ]
    },
    "3085": {
      "op": "itxn_submit"
    },
    "3086": {
      "op": "itxn LastLog",
      "defined_out": [
        "app#0",
        "asset#0",
        "txn.LastLog#0"
      ],
      "stack_out": [
        "app#0",
        "asset#0",
        "txn.LastLog#0"
      ]
    },
    "3088": {
      "op": "swap",
      "stack_out": [
        "app#0",
        "txn.LastLog#0",
        "asset#0"
      ]
    },
    "3089": {
      "op": "asset_params_get AssetName",
      "defined_out": [
        "app#0",
        "check%0#0",
        "txn.LastLog#0",
        "value%0#0"
      ],
      "stack_out": [
        "app#0",
        "txn.LastLog#0",
        "value%0#0",
        "check%0#0"
      ]
    },
    "3091": {
      "error": "asset exists",
      "op": "assert // asset exists",
      "stack_out": [
        "app#0",
        "txn.LastLog#0",
        "value%0#0"
      ]
    },
    "3092": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "app#0",
        "tmp%4#10",
        "txn.LastLog#0",
        "value%0#0"
      ],
      "stack_out": [
        "app#0",
        "txn.LastLog#0",
        "value%0#0",
        "tmp%4#10"
      ]
    },
    "3094": {
      "op": "concat",
      "defined_out": [
        "app#0",
        "tmp%5#2",
        "txn.LastLog#0"
      ],
      "stack_out": [
        "app#0",
        "txn.LastLog#0",
        "tmp%5#2"
      ]
    },
    "3095": {
      "op": "uncover 2",
      "stack_out": [
        "txn.LastLog#0",
        "tmp%5#2",
        "app#0"
      ]
    },
    "3097": {
      "op": "app_params_get AppAddress",
      "defined_out": [
        "check%1#0",
        "tmp%5#2",
        "txn.LastLog#0",
        "value%1#0"
      ],
      "stack_out": [
        "txn.LastLog#0",
        "tmp%5#2",
        "value%1#0",
        "check%1#0"
      ]
    },
    "3099": {
      "error": "application exists",
      "op": "assert // application exists",
      "stack_out": [
        "txn.LastLog#0",
        "tmp%5#2",
        "value%1#0"
      ]
    },
    "3100": {
      "op": "concat",
      "defined_out": [
        "tmp%6#1",
        "txn.LastLog#0"
      ],
      "stack_out": [
        "txn.LastLog#0",
        "tmp%6#1"
      ]
    },
    "3101": {
      "op": "==",
      "defined_out": [
        "tmp%7#2"
      ],
      "stack_out": [
        "tmp%7#2"
      ]
    },
    "3102": {
      "op": "assert",
      "stack_out": []
    },
    "3103": {
      "op": "intc_2 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "3104": {
      "op": "return",
      "stack_out": []
    },
    "3105": {
      "block": "main_test_void_route@8",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%30#0"
      ],
      "stack_out": [
        "tmp%30#0"
      ]
    },
    "3107": {
      "op": "!",
      "defined_out": [
        "tmp%31#0"
      ],
      "stack_out": [
        "tmp%31#0"
      ]
    },
    "3108": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "3109": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%32#0"
      ],
      "stack_out": [
        "tmp%32#0"
      ]
    },
    "3111": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "3112": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded(uint64)%5#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint64)%5#0"
      ]
    },
    "3115": {
      "op": "btoi",
      "defined_out": [
        "app#0"
      ],
      "stack_out": [
        "app#0"
      ]
    },
    "3116": {
      "op": "itxn_begin"
    },
    "3117": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "app#0 (copy)"
      ],
      "stack_out": [
        "app#0",
        "app#0 (copy)"
      ]
    },
    "3118": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "app#0"
      ]
    },
    "3120": {
      "op": "bytec 9 // method \"log(string)void\"",
      "defined_out": [
        "Method(log(string)void)",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "Method(log(string)void)"
      ]
    },
    "3122": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0"
      ]
    },
    "3124": {
      "op": "pushbytes 0x0006576f726c6431",
      "defined_out": [
        "0x0006576f726c6431",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "0x0006576f726c6431"
      ]
    },
    "3134": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0"
      ]
    },
    "3136": {
      "op": "intc_1 // appl",
      "defined_out": [
        "app#0",
        "appl"
      ],
      "stack_out": [
        "app#0",
        "appl"
      ]
    },
    "3137": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "app#0"
      ]
    },
    "3139": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "0"
      ]
    },
    "3140": {
      "op": "itxn_field Fee",
      "stack_out": [
        "app#0"
      ]
    },
    "3142": {
      "op": "itxn_submit"
    },
    "3143": {
      "op": "itxn LastLog",
      "defined_out": [
        "app#0",
        "txn.LastLog#0"
      ],
      "stack_out": [
        "app#0",
        "txn.LastLog#0"
      ]
    },
    "3145": {
      "op": "pushbytes 0x576f726c6431",
      "defined_out": [
        "0x576f726c6431",
        "app#0",
        "txn.LastLog#0"
      ],
      "stack_out": [
        "app#0",
        "txn.LastLog#0",
        "0x576f726c6431"
      ]
    },
    "3153": {
      "op": "==",
      "defined_out": [
        "app#0",
        "tmp%1#12"
      ],
      "stack_out": [
        "app#0",
        "tmp%1#12"
      ]
    },
    "3154": {
      "op": "assert",
      "stack_out": [
        "app#0"
      ]
    },
    "3155": {
      "op": "itxn_begin"
    },
    "3156": {
      "op": "dup",
      "stack_out": [
        "app#0",
        "app#0 (copy)"
      ]
    },
    "3157": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "app#0"
      ]
    },
    "3159": {
      "op": "bytec 9 // method \"log(string)void\"",
      "stack_out": [
        "app#0",
        "Method(log(string)void)"
      ]
    },
    "3161": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0"
      ]
    },
    "3163": {
      "op": "pushbytes 0x0006576f726c6432",
      "defined_out": [
        "0x0006576f726c6432",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "0x0006576f726c6432"
      ]
    },
    "3173": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0"
      ]
    },
    "3175": {
      "op": "intc_1 // appl",
      "stack_out": [
        "app#0",
        "appl"
      ]
    },
    "3176": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "app#0"
      ]
    },
    "3178": {
      "op": "intc_0 // 0",
      "stack_out": [
        "app#0",
        "0"
      ]
    },
    "3179": {
      "op": "itxn_field Fee",
      "stack_out": [
        "app#0"
      ]
    },
    "3181": {
      "op": "itxn_submit"
    },
    "3182": {
      "op": "itxn LastLog",
      "stack_out": [
        "app#0",
        "txn.LastLog#0"
      ]
    },
    "3184": {
      "op": "pushbytes 0x576f726c6432",
      "defined_out": [
        "0x576f726c6432",
        "app#0",
        "txn.LastLog#0"
      ],
      "stack_out": [
        "app#0",
        "txn.LastLog#0",
        "0x576f726c6432"
      ]
    },
    "3192": {
      "op": "==",
      "defined_out": [
        "app#0",
        "tmp%3#7"
      ],
      "stack_out": [
        "app#0",
        "tmp%3#7"
      ]
    },
    "3193": {
      "op": "assert",
      "stack_out": [
        "app#0"
      ]
    },
    "3194": {
      "op": "itxn_begin"
    },
    "3195": {
      "op": "dup",
      "stack_out": [
        "app#0",
        "app#0 (copy)"
      ]
    },
    "3196": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "app#0"
      ]
    },
    "3198": {
      "op": "bytec 9 // method \"log(string)void\"",
      "stack_out": [
        "app#0",
        "Method(log(string)void)"
      ]
    },
    "3200": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0"
      ]
    },
    "3202": {
      "op": "pushbytes 0x0006576f726c6433",
      "defined_out": [
        "0x0006576f726c6433",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "0x0006576f726c6433"
      ]
    },
    "3212": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0"
      ]
    },
    "3214": {
      "op": "intc_1 // appl",
      "stack_out": [
        "app#0",
        "appl"
      ]
    },
    "3215": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "app#0"
      ]
    },
    "3217": {
      "op": "intc_0 // 0",
      "stack_out": [
        "app#0",
        "0"
      ]
    },
    "3218": {
      "op": "itxn_field Fee",
      "stack_out": [
        "app#0"
      ]
    },
    "3220": {
      "op": "itxn_submit"
    },
    "3221": {
      "op": "itxn LastLog",
      "stack_out": [
        "app#0",
        "txn.LastLog#0"
      ]
    },
    "3223": {
      "op": "pushbytes 0x576f726c6433",
      "defined_out": [
        "0x576f726c6433",
        "app#0",
        "txn.LastLog#0"
      ],
      "stack_out": [
        "app#0",
        "txn.LastLog#0",
        "0x576f726c6433"
      ]
    },
    "3231": {
      "op": "==",
      "defined_out": [
        "app#0",
        "tmp%5#1"
      ],
      "stack_out": [
        "app#0",
        "tmp%5#1"
      ]
    },
    "3232": {
      "op": "assert",
      "stack_out": [
        "app#0"
      ]
    },
    "3233": {
      "op": "itxn_begin"
    },
    "3234": {
      "op": "itxn_field ApplicationID",
      "stack_out": []
    },
    "3236": {
      "op": "bytec 9 // method \"log(string)void\"",
      "stack_out": [
        "Method(log(string)void)"
      ]
    },
    "3238": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "3240": {
      "op": "pushbytes 0x0006576f726c6434",
      "defined_out": [
        "0x0006576f726c6434"
      ],
      "stack_out": [
        "0x0006576f726c6434"
      ]
    },
    "3250": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "3252": {
      "op": "intc_1 // appl",
      "stack_out": [
        "appl"
      ]
    },
    "3253": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "3255": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0"
      ]
    },
    "3256": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "3258": {
      "op": "itxn_submit"
    },
    "3259": {
      "op": "itxn LastLog",
      "stack_out": [
        "txn.LastLog#0"
      ]
    },
    "3261": {
      "op": "pushbytes 0x576f726c6434",
      "defined_out": [
        "0x576f726c6434",
        "txn.LastLog#0"
      ],
      "stack_out": [
        "txn.LastLog#0",
        "0x576f726c6434"
      ]
    },
    "3269": {
      "op": "==",
      "defined_out": [
        "tmp%7#2"
      ],
      "stack_out": [
        "tmp%7#2"
      ]
    },
    "3270": {
      "op": "assert",
      "stack_out": []
    },
    "3271": {
      "op": "intc_2 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "3272": {
      "op": "return",
      "stack_out": []
    },
    "3273": {
      "block": "main_test_15plus_args_route@7",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%25#0"
      ],
      "stack_out": [
        "tmp%25#0"
      ]
    },
    "3275": {
      "op": "!",
      "defined_out": [
        "tmp%26#0"
      ],
      "stack_out": [
        "tmp%26#0"
      ]
    },
    "3276": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "3277": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%27#0"
      ],
      "stack_out": [
        "tmp%27#0"
      ]
    },
    "3279": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "3280": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded(uint64)%4#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint64)%4#0"
      ]
    },
    "3283": {
      "op": "btoi",
      "defined_out": [
        "app#0"
      ],
      "stack_out": [
        "app#0"
      ]
    },
    "3284": {
      "op": "itxn_begin"
    },
    "3285": {
      "op": "itxn_field ApplicationID",
      "stack_out": []
    },
    "3287": {
      "op": "pushbytes 0xba0b4381 // method \"return_args_after_14th(uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint8,uint8,uint8,uint8,(uint8,uint8,uint8,uint8),uint8)byte[]\"",
      "defined_out": [
        "Method(return_args_after_14th(uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint8,uint8,uint8,uint8,(uint8,uint8,uint8,uint8),uint8)byte[])"
      ],
      "stack_out": [
        "Method(return_args_after_14th(uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint8,uint8,uint8,uint8,(uint8,uint8,uint8,uint8),uint8)byte[])"
      ]
    },
    "3293": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "3295": {
      "op": "bytec_2 // 0x0000000000000001",
      "defined_out": [
        "0x0000000000000001"
      ],
      "stack_out": [
        "0x0000000000000001"
      ]
    },
    "3296": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "3298": {
      "op": "bytec 30 // 0x0000000000000002",
      "defined_out": [
        "0x0000000000000002"
      ],
      "stack_out": [
        "0x0000000000000002"
      ]
    },
    "3300": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "3302": {
      "op": "bytec 16 // 0x0000000000000003",
      "defined_out": [
        "0x0000000000000003"
      ],
      "stack_out": [
        "0x0000000000000003"
      ]
    },
    "3304": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "3306": {
      "op": "pushbytes 0x0000000000000004",
      "defined_out": [
        "0x0000000000000004"
      ],
      "stack_out": [
        "0x0000000000000004"
      ]
    },
    "3316": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "3318": {
      "op": "pushbytes 0x0000000000000005",
      "defined_out": [
        "0x0000000000000005"
      ],
      "stack_out": [
        "0x0000000000000005"
      ]
    },
    "3328": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "3330": {
      "op": "pushbytes 0x0000000000000006",
      "defined_out": [
        "0x0000000000000006"
      ],
      "stack_out": [
        "0x0000000000000006"
      ]
    },
    "3340": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "3342": {
      "op": "pushbytes 0x0000000000000007",
      "defined_out": [
        "0x0000000000000007"
      ],
      "stack_out": [
        "0x0000000000000007"
      ]
    },
    "3352": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "3354": {
      "op": "pushbytes 0x0000000000000008",
      "defined_out": [
        "0x0000000000000008"
      ],
      "stack_out": [
        "0x0000000000000008"
      ]
    },
    "3364": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "3366": {
      "op": "pushbytes 0x0000000000000009",
      "defined_out": [
        "0x0000000000000009"
      ],
      "stack_out": [
        "0x0000000000000009"
      ]
    },
    "3376": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "3378": {
      "op": "pushbytes 0x000000000000000a",
      "defined_out": [
        "0x000000000000000a"
      ],
      "stack_out": [
        "0x000000000000000a"
      ]
    },
    "3388": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "3390": {
      "op": "pushbytes 0x000000000000000b",
      "defined_out": [
        "0x000000000000000b"
      ],
      "stack_out": [
        "0x000000000000000b"
      ]
    },
    "3400": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "3402": {
      "op": "pushbytes 0x000000000000000c",
      "defined_out": [
        "0x000000000000000c"
      ],
      "stack_out": [
        "0x000000000000000c"
      ]
    },
    "3412": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "3414": {
      "op": "pushbytes 0x000000000000000d",
      "defined_out": [
        "0x000000000000000d"
      ],
      "stack_out": [
        "0x000000000000000d"
      ]
    },
    "3424": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "3426": {
      "op": "pushbytes 0x000000000000000e",
      "defined_out": [
        "0x000000000000000e"
      ],
      "stack_out": [
        "0x000000000000000e"
      ]
    },
    "3436": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "3438": {
      "op": "bytec 31 // 0x0f101112deadbeef14",
      "defined_out": [
        "0x0f101112deadbeef14"
      ],
      "stack_out": [
        "0x0f101112deadbeef14"
      ]
    },
    "3440": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "3442": {
      "op": "intc_1 // appl",
      "defined_out": [
        "appl"
      ],
      "stack_out": [
        "appl"
      ]
    },
    "3443": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "3445": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "3446": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "3448": {
      "op": "itxn_submit"
    },
    "3449": {
      "op": "itxn LastLog",
      "defined_out": [
        "awst_tmp%0#0"
      ],
      "stack_out": [
        "awst_tmp%0#0"
      ]
    },
    "3451": {
      "op": "dup",
      "defined_out": [
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ]
    },
    "3452": {
      "op": "extract 0 4",
      "defined_out": [
        "awst_tmp%0#0",
        "tmp%3#1"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "tmp%3#1"
      ]
    },
    "3455": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "awst_tmp%0#0",
        "tmp%3#1"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "tmp%3#1",
        "0x151f7c75"
      ]
    },
    "3456": {
      "op": "==",
      "defined_out": [
        "awst_tmp%0#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "tmp%4#0"
      ]
    },
    "3457": {
      "error": "application log value is not the result of an ABI return",
      "op": "assert // application log value is not the result of an ABI return",
      "stack_out": [
        "awst_tmp%0#0"
      ]
    },
    "3458": {
      "op": "extract 6 0",
      "defined_out": [
        "tmp%5#2"
      ],
      "stack_out": [
        "tmp%5#2"
      ]
    },
    "3461": {
      "op": "bytec 31 // 0x0f101112deadbeef14",
      "stack_out": [
        "tmp%5#2",
        "0x0f101112deadbeef14"
      ]
    },
    "3463": {
      "op": "==",
      "defined_out": [
        "tmp%6#4"
      ],
      "stack_out": [
        "tmp%6#4"
      ]
    },
    "3464": {
      "op": "assert",
      "stack_out": []
    },
    "3465": {
      "op": "intc_2 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "3466": {
      "op": "return",
      "stack_out": []
    },
    "3467": {
      "block": "main_test_arg_conversion_route@6",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%20#0"
      ],
      "stack_out": [
        "tmp%20#0"
      ]
    },
    "3469": {
      "op": "!",
      "defined_out": [
        "tmp%21#0"
      ],
      "stack_out": [
        "tmp%21#0"
      ]
    },
    "3470": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "3471": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%22#0"
      ],
      "stack_out": [
        "tmp%22#0"
      ]
    },
    "3473": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "3474": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded(uint64)%3#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint64)%3#0"
      ]
    },
    "3477": {
      "op": "btoi",
      "defined_out": [
        "app#0"
      ],
      "stack_out": [
        "app#0"
      ]
    },
    "3478": {
      "op": "itxn_begin"
    },
    "3479": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "app#0 (copy)"
      ],
      "stack_out": [
        "app#0",
        "app#0 (copy)"
      ]
    },
    "3480": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "app#0"
      ]
    },
    "3482": {
      "op": "bytec 9 // method \"log(string)void\"",
      "defined_out": [
        "Method(log(string)void)",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "Method(log(string)void)"
      ]
    },
    "3484": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0"
      ]
    },
    "3486": {
      "op": "pushbytes 0x000a636f6e76657274656431",
      "defined_out": [
        "0x000a636f6e76657274656431",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "0x000a636f6e76657274656431"
      ]
    },
    "3500": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0"
      ]
    },
    "3502": {
      "op": "intc_1 // appl",
      "defined_out": [
        "app#0",
        "appl"
      ],
      "stack_out": [
        "app#0",
        "appl"
      ]
    },
    "3503": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "app#0"
      ]
    },
    "3505": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "0"
      ]
    },
    "3506": {
      "op": "itxn_field Fee",
      "stack_out": [
        "app#0"
      ]
    },
    "3508": {
      "op": "itxn_submit"
    },
    "3509": {
      "op": "itxn LastLog",
      "defined_out": [
        "app#0",
        "txn.LastLog#0"
      ],
      "stack_out": [
        "app#0",
        "txn.LastLog#0"
      ]
    },
    "3511": {
      "op": "pushbytes 0x636f6e76657274656431",
      "defined_out": [
        "0x636f6e76657274656431",
        "app#0",
        "txn.LastLog#0"
      ],
      "stack_out": [
        "app#0",
        "txn.LastLog#0",
        "0x636f6e76657274656431"
      ]
    },
    "3523": {
      "op": "==",
      "defined_out": [
        "app#0",
        "tmp%1#12"
      ],
      "stack_out": [
        "app#0",
        "tmp%1#12"
      ]
    },
    "3524": {
      "op": "assert",
      "stack_out": [
        "app#0"
      ]
    },
    "3525": {
      "op": "itxn_begin"
    },
    "3526": {
      "op": "dup",
      "stack_out": [
        "app#0",
        "app#0 (copy)"
      ]
    },
    "3527": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "app#0"
      ]
    },
    "3529": {
      "op": "pushbytes 0x3c1058d9 // method \"log(uint64)void\"",
      "defined_out": [
        "Method(log(uint64)void)",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "Method(log(uint64)void)"
      ]
    },
    "3535": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0"
      ]
    },
    "3537": {
      "op": "bytec 30 // 0x0000000000000002",
      "defined_out": [
        "0x0000000000000002",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "0x0000000000000002"
      ]
    },
    "3539": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0"
      ]
    },
    "3541": {
      "op": "intc_1 // appl",
      "stack_out": [
        "app#0",
        "appl"
      ]
    },
    "3542": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "app#0"
      ]
    },
    "3544": {
      "op": "intc_0 // 0",
      "stack_out": [
        "app#0",
        "0"
      ]
    },
    "3545": {
      "op": "itxn_field Fee",
      "stack_out": [
        "app#0"
      ]
    },
    "3547": {
      "op": "itxn_submit"
    },
    "3548": {
      "op": "itxn LastLog",
      "stack_out": [
        "app#0",
        "txn.LastLog#0"
      ]
    },
    "3550": {
      "op": "intc_3 // 2",
      "defined_out": [
        "2",
        "app#0",
        "txn.LastLog#0"
      ],
      "stack_out": [
        "app#0",
        "txn.LastLog#0",
        "2"
      ]
    },
    "3551": {
      "op": "itob",
      "defined_out": [
        "app#0",
        "tmp%2#0",
        "txn.LastLog#0"
      ],
      "stack_out": [
        "app#0",
        "txn.LastLog#0",
        "tmp%2#0"
      ]
    },
    "3552": {
      "op": "==",
      "defined_out": [
        "app#0",
        "tmp%3#7"
      ],
      "stack_out": [
        "app#0",
        "tmp%3#7"
      ]
    },
    "3553": {
      "op": "assert",
      "stack_out": [
        "app#0"
      ]
    },
    "3554": {
      "op": "itxn_begin"
    },
    "3555": {
      "op": "dup",
      "stack_out": [
        "app#0",
        "app#0 (copy)"
      ]
    },
    "3556": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "app#0"
      ]
    },
    "3558": {
      "op": "pushbytes 0x6af45930 // method \"log(uint512)void\"",
      "defined_out": [
        "Method(log(uint512)void)",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "Method(log(uint512)void)"
      ]
    },
    "3564": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0"
      ]
    },
    "3566": {
      "op": "bytec 32 // 0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000003",
      "defined_out": [
        "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000003",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000003"
      ]
    },
    "3568": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0"
      ]
    },
    "3570": {
      "op": "intc_1 // appl",
      "stack_out": [
        "app#0",
        "appl"
      ]
    },
    "3571": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "app#0"
      ]
    },
    "3573": {
      "op": "intc_0 // 0",
      "stack_out": [
        "app#0",
        "0"
      ]
    },
    "3574": {
      "op": "itxn_field Fee",
      "stack_out": [
        "app#0"
      ]
    },
    "3576": {
      "op": "itxn_submit"
    },
    "3577": {
      "op": "itxn LastLog",
      "stack_out": [
        "app#0",
        "txn.LastLog#0"
      ]
    },
    "3579": {
      "op": "bytec 32 // 0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000003",
      "stack_out": [
        "app#0",
        "txn.LastLog#0",
        "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000003"
      ]
    },
    "3581": {
      "op": "==",
      "defined_out": [
        "app#0",
        "tmp%7#2"
      ],
      "stack_out": [
        "app#0",
        "tmp%7#2"
      ]
    },
    "3582": {
      "op": "assert",
      "stack_out": [
        "app#0"
      ]
    },
    "3583": {
      "op": "itxn_begin"
    },
    "3584": {
      "op": "dup",
      "stack_out": [
        "app#0",
        "app#0 (copy)"
      ]
    },
    "3585": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "app#0"
      ]
    },
    "3587": {
      "op": "pushbytes 0xb500e111 // method \"log(byte[])void\"",
      "defined_out": [
        "Method(log(byte[])void)",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "Method(log(byte[])void)"
      ]
    },
    "3593": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0"
      ]
    },
    "3595": {
      "op": "pushbytes 0x000134",
      "defined_out": [
        "0x000134",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "0x000134"
      ]
    },
    "3600": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0"
      ]
    },
    "3602": {
      "op": "intc_1 // appl",
      "stack_out": [
        "app#0",
        "appl"
      ]
    },
    "3603": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "app#0"
      ]
    },
    "3605": {
      "op": "intc_0 // 0",
      "stack_out": [
        "app#0",
        "0"
      ]
    },
    "3606": {
      "op": "itxn_field Fee",
      "stack_out": [
        "app#0"
      ]
    },
    "3608": {
      "op": "itxn_submit"
    },
    "3609": {
      "op": "itxn LastLog",
      "stack_out": [
        "app#0",
        "txn.LastLog#0"
      ]
    },
    "3611": {
      "op": "pushbytes 0x34",
      "defined_out": [
        "0x34",
        "app#0",
        "txn.LastLog#0"
      ],
      "stack_out": [
        "app#0",
        "txn.LastLog#0",
        "0x34"
      ]
    },
    "3614": {
      "op": "==",
      "defined_out": [
        "app#0",
        "tmp%9#1"
      ],
      "stack_out": [
        "app#0",
        "tmp%9#1"
      ]
    },
    "3615": {
      "op": "assert",
      "stack_out": [
        "app#0"
      ]
    },
    "3616": {
      "op": "itxn_begin"
    },
    "3617": {
      "op": "itxn_field ApplicationID",
      "stack_out": []
    },
    "3619": {
      "op": "pushbytes 0x6eed7ec3 // method \"log(bool)void\"",
      "defined_out": [
        "Method(log(bool)void)"
      ],
      "stack_out": [
        "Method(log(bool)void)"
      ]
    },
    "3625": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "3627": {
      "op": "pushbytes 0x80",
      "defined_out": [
        "0x80"
      ],
      "stack_out": [
        "0x80"
      ]
    },
    "3630": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "3632": {
      "op": "intc_1 // appl",
      "stack_out": [
        "appl"
      ]
    },
    "3633": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "3635": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0"
      ]
    },
    "3636": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "3638": {
      "op": "itxn_submit"
    },
    "3639": {
      "op": "itxn LastLog",
      "stack_out": [
        "txn.LastLog#0"
      ]
    },
    "3641": {
      "op": "pushbytes 0x54727565",
      "defined_out": [
        "0x54727565",
        "txn.LastLog#0"
      ],
      "stack_out": [
        "txn.LastLog#0",
        "0x54727565"
      ]
    },
    "3647": {
      "op": "==",
      "defined_out": [
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0"
      ]
    },
    "3648": {
      "op": "assert",
      "stack_out": []
    },
    "3649": {
      "op": "intc_2 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "3650": {
      "op": "return",
      "stack_out": []
    },
    "3651": {
      "block": "main_test_method_overload_route@5",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%15#0"
      ],
      "stack_out": [
        "tmp%15#0"
      ]
    },
    "3653": {
      "op": "!",
      "defined_out": [
        "tmp%16#0"
      ],
      "stack_out": [
        "tmp%16#0"
      ]
    },
    "3654": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "3655": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%17#0"
      ],
      "stack_out": [
        "tmp%17#0"
      ]
    },
    "3657": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "3658": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded(uint64)%2#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint64)%2#0"
      ]
    },
    "3661": {
      "op": "btoi",
      "defined_out": [
        "app#0"
      ],
      "stack_out": [
        "app#0"
      ]
    },
    "3662": {
      "op": "itxn_begin"
    },
    "3663": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "app#0 (copy)"
      ],
      "stack_out": [
        "app#0",
        "app#0 (copy)"
      ]
    },
    "3664": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "app#0"
      ]
    },
    "3666": {
      "op": "bytec_3 // method \"echo(string)string\"",
      "defined_out": [
        "Method(echo(string)string)",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "Method(echo(string)string)"
      ]
    },
    "3667": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0"
      ]
    },
    "3669": {
      "op": "pushbytes 0x000e7479706564202b2069676e6f7265",
      "defined_out": [
        "0x000e7479706564202b2069676e6f7265",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "0x000e7479706564202b2069676e6f7265"
      ]
    },
    "3687": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0"
      ]
    },
    "3689": {
      "op": "intc_1 // appl",
      "defined_out": [
        "app#0",
        "appl"
      ],
      "stack_out": [
        "app#0",
        "appl"
      ]
    },
    "3690": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "app#0"
      ]
    },
    "3692": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "0"
      ]
    },
    "3693": {
      "op": "itxn_field Fee",
      "stack_out": [
        "app#0"
      ]
    },
    "3695": {
      "op": "itxn_submit"
    },
    "3696": {
      "op": "itxn LastLog",
      "defined_out": [
        "app#0",
        "awst_tmp%0#0"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0"
      ]
    },
    "3698": {
      "op": "extract 0 4",
      "defined_out": [
        "app#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "app#0",
        "tmp%2#0"
      ]
    },
    "3701": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "app#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "app#0",
        "tmp%2#0",
        "0x151f7c75"
      ]
    },
    "3702": {
      "op": "==",
      "defined_out": [
        "app#0",
        "tmp%3#7"
      ],
      "stack_out": [
        "app#0",
        "tmp%3#7"
      ]
    },
    "3703": {
      "error": "application log value is not the result of an ABI return",
      "op": "assert // application log value is not the result of an ABI return",
      "stack_out": [
        "app#0"
      ]
    },
    "3704": {
      "op": "itxn LastLog",
      "defined_out": [
        "app#0",
        "awst_tmp%1#0"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%1#0"
      ]
    },
    "3706": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "awst_tmp%1#0",
        "awst_tmp%1#0 (copy)"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%1#0",
        "awst_tmp%1#0 (copy)"
      ]
    },
    "3707": {
      "op": "extract 4 0",
      "defined_out": [
        "app#0",
        "awst_tmp%1#0",
        "tmp%4#5"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%1#0",
        "tmp%4#5"
      ]
    },
    "3710": {
      "op": "swap",
      "stack_out": [
        "app#0",
        "tmp%4#5",
        "awst_tmp%1#0"
      ]
    },
    "3711": {
      "op": "extract 0 4",
      "defined_out": [
        "app#0",
        "tmp%4#5",
        "tmp%5#2"
      ],
      "stack_out": [
        "app#0",
        "tmp%4#5",
        "tmp%5#2"
      ]
    },
    "3714": {
      "op": "bytec_0 // 0x151f7c75",
      "stack_out": [
        "app#0",
        "tmp%4#5",
        "tmp%5#2",
        "0x151f7c75"
      ]
    },
    "3715": {
      "op": "==",
      "defined_out": [
        "app#0",
        "tmp%4#5",
        "tmp%6#4"
      ],
      "stack_out": [
        "app#0",
        "tmp%4#5",
        "tmp%6#4"
      ]
    },
    "3716": {
      "error": "application log value is not the result of an ABI return",
      "op": "assert // application log value is not the result of an ABI return",
      "stack_out": [
        "app#0",
        "tmp%4#5"
      ]
    },
    "3717": {
      "op": "pushbytes 0x00146563686f3a207479706564202b2069676e6f7265",
      "defined_out": [
        "0x00146563686f3a207479706564202b2069676e6f7265",
        "app#0",
        "tmp%4#5"
      ],
      "stack_out": [
        "app#0",
        "tmp%4#5",
        "0x00146563686f3a207479706564202b2069676e6f7265"
      ]
    },
    "3741": {
      "op": "==",
      "defined_out": [
        "app#0",
        "tmp%8#1"
      ],
      "stack_out": [
        "app#0",
        "tmp%8#1"
      ]
    },
    "3742": {
      "op": "assert",
      "stack_out": [
        "app#0"
      ]
    },
    "3743": {
      "op": "itxn_begin"
    },
    "3744": {
      "op": "dup",
      "stack_out": [
        "app#0",
        "app#0 (copy)"
      ]
    },
    "3745": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "app#0"
      ]
    },
    "3747": {
      "op": "bytec_3 // method \"echo(string)string\"",
      "stack_out": [
        "app#0",
        "Method(echo(string)string)"
      ]
    },
    "3748": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0"
      ]
    },
    "3750": {
      "op": "pushbytes 0x0010756e7479706564202b2069676e6f7265",
      "defined_out": [
        "0x0010756e7479706564202b2069676e6f7265",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "0x0010756e7479706564202b2069676e6f7265"
      ]
    },
    "3770": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0"
      ]
    },
    "3772": {
      "op": "intc_1 // appl",
      "stack_out": [
        "app#0",
        "appl"
      ]
    },
    "3773": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "app#0"
      ]
    },
    "3775": {
      "op": "intc_0 // 0",
      "stack_out": [
        "app#0",
        "0"
      ]
    },
    "3776": {
      "op": "itxn_field Fee",
      "stack_out": [
        "app#0"
      ]
    },
    "3778": {
      "op": "itxn_submit"
    },
    "3779": {
      "op": "itxn LastLog",
      "defined_out": [
        "app#0",
        "awst_tmp%2#0"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%2#0"
      ]
    },
    "3781": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "awst_tmp%2#0",
        "awst_tmp%2#0 (copy)"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%2#0",
        "awst_tmp%2#0 (copy)"
      ]
    },
    "3782": {
      "op": "extract 4 0",
      "defined_out": [
        "app#0",
        "awst_tmp%2#0",
        "tmp%10#3"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%2#0",
        "tmp%10#3"
      ]
    },
    "3785": {
      "op": "swap",
      "stack_out": [
        "app#0",
        "tmp%10#3",
        "awst_tmp%2#0"
      ]
    },
    "3786": {
      "op": "extract 0 4",
      "defined_out": [
        "app#0",
        "tmp%10#3",
        "tmp%11#4"
      ],
      "stack_out": [
        "app#0",
        "tmp%10#3",
        "tmp%11#4"
      ]
    },
    "3789": {
      "op": "bytec_0 // 0x151f7c75",
      "stack_out": [
        "app#0",
        "tmp%10#3",
        "tmp%11#4",
        "0x151f7c75"
      ]
    },
    "3790": {
      "op": "==",
      "defined_out": [
        "app#0",
        "tmp%10#3",
        "tmp%12#1"
      ],
      "stack_out": [
        "app#0",
        "tmp%10#3",
        "tmp%12#1"
      ]
    },
    "3791": {
      "error": "application log value is not the result of an ABI return",
      "op": "assert // application log value is not the result of an ABI return",
      "stack_out": [
        "app#0",
        "tmp%10#3"
      ]
    },
    "3792": {
      "op": "pushbytes 0x00166563686f3a20756e7479706564202b2069676e6f7265",
      "defined_out": [
        "0x00166563686f3a20756e7479706564202b2069676e6f7265",
        "app#0",
        "tmp%10#3"
      ],
      "stack_out": [
        "app#0",
        "tmp%10#3",
        "0x00166563686f3a20756e7479706564202b2069676e6f7265"
      ]
    },
    "3818": {
      "op": "==",
      "defined_out": [
        "app#0",
        "tmp%14#3"
      ],
      "stack_out": [
        "app#0",
        "tmp%14#3"
      ]
    },
    "3819": {
      "op": "assert",
      "stack_out": [
        "app#0"
      ]
    },
    "3820": {
      "op": "itxn_begin"
    },
    "3821": {
      "op": "dup",
      "stack_out": [
        "app#0",
        "app#0 (copy)"
      ]
    },
    "3822": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "app#0"
      ]
    },
    "3824": {
      "op": "bytec_3 // method \"echo(string)string\"",
      "stack_out": [
        "app#0",
        "Method(echo(string)string)"
      ]
    },
    "3825": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0"
      ]
    },
    "3827": {
      "op": "pushbytes 0x00057475706c65",
      "defined_out": [
        "0x00057475706c65",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "0x00057475706c65"
      ]
    },
    "3836": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0"
      ]
    },
    "3838": {
      "op": "intc_1 // appl",
      "stack_out": [
        "app#0",
        "appl"
      ]
    },
    "3839": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "app#0"
      ]
    },
    "3841": {
      "op": "intc_0 // 0",
      "stack_out": [
        "app#0",
        "0"
      ]
    },
    "3842": {
      "op": "itxn_field Fee",
      "stack_out": [
        "app#0"
      ]
    },
    "3844": {
      "op": "itxn_submit"
    },
    "3845": {
      "op": "itxn LastLog",
      "defined_out": [
        "app#0",
        "awst_tmp%3#0"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%3#0"
      ]
    },
    "3847": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "awst_tmp%3#0",
        "awst_tmp%3#0 (copy)"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%3#0",
        "awst_tmp%3#0 (copy)"
      ]
    },
    "3848": {
      "op": "extract 4 0",
      "defined_out": [
        "app#0",
        "awst_tmp%3#0",
        "result.0#7"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%3#0",
        "result.0#7"
      ]
    },
    "3851": {
      "op": "swap",
      "stack_out": [
        "app#0",
        "result.0#7",
        "awst_tmp%3#0"
      ]
    },
    "3852": {
      "op": "extract 0 4",
      "defined_out": [
        "app#0",
        "result.0#7",
        "tmp%17#1"
      ],
      "stack_out": [
        "app#0",
        "result.0#7",
        "tmp%17#1"
      ]
    },
    "3855": {
      "op": "bytec_0 // 0x151f7c75",
      "stack_out": [
        "app#0",
        "result.0#7",
        "tmp%17#1",
        "0x151f7c75"
      ]
    },
    "3856": {
      "op": "==",
      "defined_out": [
        "app#0",
        "result.0#7",
        "tmp%18#1"
      ],
      "stack_out": [
        "app#0",
        "result.0#7",
        "tmp%18#1"
      ]
    },
    "3857": {
      "error": "application log value is not the result of an ABI return",
      "op": "assert // application log value is not the result of an ABI return",
      "stack_out": [
        "app#0",
        "result.0#7"
      ]
    },
    "3858": {
      "op": "itxn LastLog",
      "defined_out": [
        "app#0",
        "result.0#7",
        "result.1.LastLog#0"
      ],
      "stack_out": [
        "app#0",
        "result.0#7",
        "result.1.LastLog#0"
      ]
    },
    "3860": {
      "op": "swap",
      "stack_out": [
        "app#0",
        "result.1.LastLog#0",
        "result.0#7"
      ]
    },
    "3861": {
      "op": "bytec 33 // 0x000b6563686f3a207475706c65",
      "defined_out": [
        "0x000b6563686f3a207475706c65",
        "app#0",
        "result.0#7",
        "result.1.LastLog#0"
      ],
      "stack_out": [
        "app#0",
        "result.1.LastLog#0",
        "result.0#7",
        "0x000b6563686f3a207475706c65"
      ]
    },
    "3863": {
      "op": "==",
      "defined_out": [
        "app#0",
        "result.1.LastLog#0",
        "tmp%20#3"
      ],
      "stack_out": [
        "app#0",
        "result.1.LastLog#0",
        "tmp%20#3"
      ]
    },
    "3864": {
      "op": "assert",
      "stack_out": [
        "app#0",
        "result.1.LastLog#0"
      ]
    },
    "3865": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "result.1.LastLog#0",
        "result.1.LastLog#0 (copy)"
      ],
      "stack_out": [
        "app#0",
        "result.1.LastLog#0",
        "result.1.LastLog#0 (copy)"
      ]
    },
    "3866": {
      "op": "extract 4 0",
      "defined_out": [
        "app#0",
        "result.1.LastLog#0",
        "tmp%21#1"
      ],
      "stack_out": [
        "app#0",
        "result.1.LastLog#0",
        "tmp%21#1"
      ]
    },
    "3869": {
      "op": "swap",
      "stack_out": [
        "app#0",
        "tmp%21#1",
        "result.1.LastLog#0"
      ]
    },
    "3870": {
      "op": "extract 0 4",
      "defined_out": [
        "app#0",
        "tmp%21#1",
        "tmp%22#3"
      ],
      "stack_out": [
        "app#0",
        "tmp%21#1",
        "tmp%22#3"
      ]
    },
    "3873": {
      "op": "bytec_0 // 0x151f7c75",
      "stack_out": [
        "app#0",
        "tmp%21#1",
        "tmp%22#3",
        "0x151f7c75"
      ]
    },
    "3874": {
      "op": "==",
      "defined_out": [
        "app#0",
        "tmp%21#1",
        "tmp%23#1"
      ],
      "stack_out": [
        "app#0",
        "tmp%21#1",
        "tmp%23#1"
      ]
    },
    "3875": {
      "error": "application log value is not the result of an ABI return",
      "op": "assert // application log value is not the result of an ABI return",
      "stack_out": [
        "app#0",
        "tmp%21#1"
      ]
    },
    "3876": {
      "op": "bytec 33 // 0x000b6563686f3a207475706c65",
      "stack_out": [
        "app#0",
        "tmp%21#1",
        "0x000b6563686f3a207475706c65"
      ]
    },
    "3878": {
      "op": "==",
      "defined_out": [
        "app#0",
        "tmp%25#1"
      ],
      "stack_out": [
        "app#0",
        "tmp%25#1"
      ]
    },
    "3879": {
      "op": "assert",
      "stack_out": [
        "app#0"
      ]
    },
    "3880": {
      "op": "itxn_begin"
    },
    "3881": {
      "op": "itxn_field ApplicationID",
      "stack_out": []
    },
    "3883": {
      "op": "bytec_3 // method \"echo(string)string\"",
      "stack_out": [
        "Method(echo(string)string)"
      ]
    },
    "3884": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "3886": {
      "op": "pushbytes 0x0007756e7479706564",
      "defined_out": [
        "0x0007756e7479706564"
      ],
      "stack_out": [
        "0x0007756e7479706564"
      ]
    },
    "3897": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "3899": {
      "op": "intc_1 // appl",
      "stack_out": [
        "appl"
      ]
    },
    "3900": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "3902": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0"
      ]
    },
    "3903": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "3905": {
      "op": "itxn_submit"
    },
    "3906": {
      "op": "itxn LastLog",
      "defined_out": [
        "txn_result.LastLog#0"
      ],
      "stack_out": [
        "txn_result.LastLog#0"
      ]
    },
    "3908": {
      "op": "dup",
      "defined_out": [
        "txn_result.LastLog#0",
        "txn_result.LastLog#0 (copy)"
      ],
      "stack_out": [
        "txn_result.LastLog#0",
        "txn_result.LastLog#0 (copy)"
      ]
    },
    "3909": {
      "op": "extract 4 0",
      "defined_out": [
        "tmp%27#3",
        "txn_result.LastLog#0"
      ],
      "stack_out": [
        "txn_result.LastLog#0",
        "tmp%27#3"
      ]
    },
    "3912": {
      "op": "swap",
      "stack_out": [
        "tmp%27#3",
        "txn_result.LastLog#0"
      ]
    },
    "3913": {
      "op": "extract 0 4",
      "defined_out": [
        "tmp%27#3",
        "tmp%28#1"
      ],
      "stack_out": [
        "tmp%27#3",
        "tmp%28#1"
      ]
    },
    "3916": {
      "op": "bytec_0 // 0x151f7c75",
      "stack_out": [
        "tmp%27#3",
        "tmp%28#1",
        "0x151f7c75"
      ]
    },
    "3917": {
      "op": "==",
      "defined_out": [
        "tmp%27#3",
        "tmp%29#1"
      ],
      "stack_out": [
        "tmp%27#3",
        "tmp%29#1"
      ]
    },
    "3918": {
      "error": "application log value is not the result of an ABI return",
      "op": "assert // application log value is not the result of an ABI return",
      "stack_out": [
        "tmp%27#3"
      ]
    },
    "3919": {
      "op": "pushbytes 0x000d6563686f3a20756e7479706564",
      "defined_out": [
        "0x000d6563686f3a20756e7479706564",
        "tmp%27#3"
      ],
      "stack_out": [
        "tmp%27#3",
        "0x000d6563686f3a20756e7479706564"
      ]
    },
    "3936": {
      "op": "==",
      "defined_out": [
        "tmp%31#0"
      ],
      "stack_out": [
        "tmp%31#0"
      ]
    },
    "3937": {
      "op": "assert",
      "stack_out": []
    },
    "3938": {
      "op": "intc_2 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "3939": {
      "op": "return",
      "stack_out": []
    },
    "3940": {
      "block": "main_test_method_selector_kinds_route@4",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%10#0"
      ],
      "stack_out": [
        "tmp%10#0"
      ]
    },
    "3942": {
      "op": "!",
      "defined_out": [
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0"
      ]
    },
    "3943": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "3944": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%12#0"
      ]
    },
    "3946": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "3947": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded(uint64)%1#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint64)%1#0"
      ]
    },
    "3950": {
      "op": "btoi",
      "defined_out": [
        "app#0"
      ],
      "stack_out": [
        "app#0"
      ]
    },
    "3951": {
      "op": "itxn_begin"
    },
    "3952": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "app#0 (copy)"
      ],
      "stack_out": [
        "app#0",
        "app#0 (copy)"
      ]
    },
    "3953": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "app#0"
      ]
    },
    "3955": {
      "op": "bytec_3 // method \"echo(string)string\"",
      "defined_out": [
        "Method(echo(string)string)",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "Method(echo(string)string)"
      ]
    },
    "3956": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0"
      ]
    },
    "3958": {
      "op": "pushbytes 0x00057465737431",
      "defined_out": [
        "0x00057465737431",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "0x00057465737431"
      ]
    },
    "3967": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0"
      ]
    },
    "3969": {
      "op": "intc_1 // appl",
      "defined_out": [
        "app#0",
        "appl"
      ],
      "stack_out": [
        "app#0",
        "appl"
      ]
    },
    "3970": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "app#0"
      ]
    },
    "3972": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "0"
      ]
    },
    "3973": {
      "op": "itxn_field Fee",
      "stack_out": [
        "app#0"
      ]
    },
    "3975": {
      "op": "itxn_submit"
    },
    "3976": {
      "op": "itxn LastLog",
      "defined_out": [
        "app#0",
        "awst_tmp%0#0"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0"
      ]
    },
    "3978": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ]
    },
    "3979": {
      "op": "extract 4 0",
      "defined_out": [
        "app#0",
        "awst_tmp%0#0",
        "result#0"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "result#0"
      ]
    },
    "3982": {
      "op": "swap",
      "stack_out": [
        "app#0",
        "result#0",
        "awst_tmp%0#0"
      ]
    },
    "3983": {
      "op": "extract 0 4",
      "defined_out": [
        "app#0",
        "result#0",
        "tmp%3#1"
      ],
      "stack_out": [
        "app#0",
        "result#0",
        "tmp%3#1"
      ]
    },
    "3986": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "app#0",
        "result#0",
        "tmp%3#1"
      ],
      "stack_out": [
        "app#0",
        "result#0",
        "tmp%3#1",
        "0x151f7c75"
      ]
    },
    "3987": {
      "op": "==",
      "defined_out": [
        "app#0",
        "result#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "app#0",
        "result#0",
        "tmp%4#0"
      ]
    },
    "3988": {
      "error": "application log value is not the result of an ABI return",
      "op": "assert // application log value is not the result of an ABI return",
      "stack_out": [
        "app#0",
        "result#0"
      ]
    },
    "3989": {
      "op": "pushbytes 0x000b6563686f3a207465737431",
      "defined_out": [
        "0x000b6563686f3a207465737431",
        "app#0",
        "result#0"
      ],
      "stack_out": [
        "app#0",
        "result#0",
        "0x000b6563686f3a207465737431"
      ]
    },
    "4004": {
      "op": "==",
      "defined_out": [
        "app#0",
        "tmp%6#4"
      ],
      "stack_out": [
        "app#0",
        "tmp%6#4"
      ]
    },
    "4005": {
      "op": "assert",
      "stack_out": [
        "app#0"
      ]
    },
    "4006": {
      "op": "itxn_begin"
    },
    "4007": {
      "op": "dup",
      "stack_out": [
        "app#0",
        "app#0 (copy)"
      ]
    },
    "4008": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "app#0"
      ]
    },
    "4010": {
      "op": "bytec_3 // method \"echo(string)string\"",
      "stack_out": [
        "app#0",
        "Method(echo(string)string)"
      ]
    },
    "4011": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0"
      ]
    },
    "4013": {
      "op": "pushbytes 0x00057465737432",
      "defined_out": [
        "0x00057465737432",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "0x00057465737432"
      ]
    },
    "4022": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0"
      ]
    },
    "4024": {
      "op": "intc_1 // appl",
      "stack_out": [
        "app#0",
        "appl"
      ]
    },
    "4025": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "app#0"
      ]
    },
    "4027": {
      "op": "intc_0 // 0",
      "stack_out": [
        "app#0",
        "0"
      ]
    },
    "4028": {
      "op": "itxn_field Fee",
      "stack_out": [
        "app#0"
      ]
    },
    "4030": {
      "op": "itxn_submit"
    },
    "4031": {
      "op": "itxn LastLog",
      "defined_out": [
        "app#0",
        "awst_tmp%1#0"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%1#0"
      ]
    },
    "4033": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "awst_tmp%1#0",
        "awst_tmp%1#0 (copy)"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%1#0",
        "awst_tmp%1#0 (copy)"
      ]
    },
    "4034": {
      "op": "extract 4 0",
      "stack_out": [
        "app#0",
        "awst_tmp%1#0",
        "result#0"
      ]
    },
    "4037": {
      "op": "swap",
      "stack_out": [
        "app#0",
        "result#0",
        "awst_tmp%1#0"
      ]
    },
    "4038": {
      "op": "extract 0 4",
      "defined_out": [
        "app#0",
        "result#0",
        "tmp%9#3"
      ],
      "stack_out": [
        "app#0",
        "result#0",
        "tmp%9#3"
      ]
    },
    "4041": {
      "op": "bytec_0 // 0x151f7c75",
      "stack_out": [
        "app#0",
        "result#0",
        "tmp%9#3",
        "0x151f7c75"
      ]
    },
    "4042": {
      "op": "==",
      "defined_out": [
        "app#0",
        "result#0",
        "tmp%10#1"
      ],
      "stack_out": [
        "app#0",
        "result#0",
        "tmp%10#1"
      ]
    },
    "4043": {
      "error": "application log value is not the result of an ABI return",
      "op": "assert // application log value is not the result of an ABI return",
      "stack_out": [
        "app#0",
        "result#0"
      ]
    },
    "4044": {
      "op": "pushbytes 0x000b6563686f3a207465737432",
      "defined_out": [
        "0x000b6563686f3a207465737432",
        "app#0",
        "result#0"
      ],
      "stack_out": [
        "app#0",
        "result#0",
        "0x000b6563686f3a207465737432"
      ]
    },
    "4059": {
      "op": "==",
      "defined_out": [
        "app#0",
        "tmp%12#1"
      ],
      "stack_out": [
        "app#0",
        "tmp%12#1"
      ]
    },
    "4060": {
      "op": "assert",
      "stack_out": [
        "app#0"
      ]
    },
    "4061": {
      "op": "itxn_begin"
    },
    "4062": {
      "op": "dup",
      "stack_out": [
        "app#0",
        "app#0 (copy)"
      ]
    },
    "4063": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "app#0"
      ]
    },
    "4065": {
      "op": "bytec_3 // method \"echo(string)string\"",
      "stack_out": [
        "app#0",
        "Method(echo(string)string)"
      ]
    },
    "4066": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0"
      ]
    },
    "4068": {
      "op": "pushbytes 0x00057465737433",
      "defined_out": [
        "0x00057465737433",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "0x00057465737433"
      ]
    },
    "4077": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0"
      ]
    },
    "4079": {
      "op": "intc_1 // appl",
      "stack_out": [
        "app#0",
        "appl"
      ]
    },
    "4080": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "app#0"
      ]
    },
    "4082": {
      "op": "intc_0 // 0",
      "stack_out": [
        "app#0",
        "0"
      ]
    },
    "4083": {
      "op": "itxn_field Fee",
      "stack_out": [
        "app#0"
      ]
    },
    "4085": {
      "op": "itxn_submit"
    },
    "4086": {
      "op": "itxn LastLog",
      "defined_out": [
        "app#0",
        "awst_tmp%2#0"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%2#0"
      ]
    },
    "4088": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "awst_tmp%2#0",
        "awst_tmp%2#0 (copy)"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%2#0",
        "awst_tmp%2#0 (copy)"
      ]
    },
    "4089": {
      "op": "extract 4 0",
      "stack_out": [
        "app#0",
        "awst_tmp%2#0",
        "result#0"
      ]
    },
    "4092": {
      "op": "swap",
      "stack_out": [
        "app#0",
        "result#0",
        "awst_tmp%2#0"
      ]
    },
    "4093": {
      "op": "extract 0 4",
      "defined_out": [
        "app#0",
        "result#0",
        "tmp%15#11"
      ],
      "stack_out": [
        "app#0",
        "result#0",
        "tmp%15#11"
      ]
    },
    "4096": {
      "op": "bytec_0 // 0x151f7c75",
      "stack_out": [
        "app#0",
        "result#0",
        "tmp%15#11",
        "0x151f7c75"
      ]
    },
    "4097": {
      "op": "==",
      "defined_out": [
        "app#0",
        "result#0",
        "tmp%16#0"
      ],
      "stack_out": [
        "app#0",
        "result#0",
        "tmp%16#0"
      ]
    },
    "4098": {
      "error": "application log value is not the result of an ABI return",
      "op": "assert // application log value is not the result of an ABI return",
      "stack_out": [
        "app#0",
        "result#0"
      ]
    },
    "4099": {
      "op": "pushbytes 0x000b6563686f3a207465737433",
      "defined_out": [
        "0x000b6563686f3a207465737433",
        "app#0",
        "result#0"
      ],
      "stack_out": [
        "app#0",
        "result#0",
        "0x000b6563686f3a207465737433"
      ]
    },
    "4114": {
      "op": "==",
      "defined_out": [
        "app#0",
        "tmp%18#1"
      ],
      "stack_out": [
        "app#0",
        "tmp%18#1"
      ]
    },
    "4115": {
      "op": "assert",
      "stack_out": [
        "app#0"
      ]
    },
    "4116": {
      "op": "itxn_begin"
    },
    "4117": {
      "op": "dup",
      "stack_out": [
        "app#0",
        "app#0 (copy)"
      ]
    },
    "4118": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "app#0"
      ]
    },
    "4120": {
      "op": "bytec_3 // method \"echo(string)string\"",
      "stack_out": [
        "app#0",
        "Method(echo(string)string)"
      ]
    },
    "4121": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0"
      ]
    },
    "4123": {
      "op": "pushbytes 0x00057465737434",
      "defined_out": [
        "0x00057465737434",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "0x00057465737434"
      ]
    },
    "4132": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0"
      ]
    },
    "4134": {
      "op": "intc_1 // appl",
      "stack_out": [
        "app#0",
        "appl"
      ]
    },
    "4135": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "app#0"
      ]
    },
    "4137": {
      "op": "intc_0 // 0",
      "stack_out": [
        "app#0",
        "0"
      ]
    },
    "4138": {
      "op": "itxn_field Fee",
      "stack_out": [
        "app#0"
      ]
    },
    "4140": {
      "op": "itxn_submit"
    },
    "4141": {
      "op": "itxn LastLog",
      "defined_out": [
        "app#0",
        "awst_tmp%3#0"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%3#0"
      ]
    },
    "4143": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "awst_tmp%3#0",
        "awst_tmp%3#0 (copy)"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%3#0",
        "awst_tmp%3#0 (copy)"
      ]
    },
    "4144": {
      "op": "extract 4 0",
      "stack_out": [
        "app#0",
        "awst_tmp%3#0",
        "result#0"
      ]
    },
    "4147": {
      "op": "swap",
      "stack_out": [
        "app#0",
        "result#0",
        "awst_tmp%3#0"
      ]
    },
    "4148": {
      "op": "extract 0 4",
      "defined_out": [
        "app#0",
        "result#0",
        "tmp%21#1"
      ],
      "stack_out": [
        "app#0",
        "result#0",
        "tmp%21#1"
      ]
    },
    "4151": {
      "op": "bytec_0 // 0x151f7c75",
      "stack_out": [
        "app#0",
        "result#0",
        "tmp%21#1",
        "0x151f7c75"
      ]
    },
    "4152": {
      "op": "==",
      "defined_out": [
        "app#0",
        "result#0",
        "tmp%22#1"
      ],
      "stack_out": [
        "app#0",
        "result#0",
        "tmp%22#1"
      ]
    },
    "4153": {
      "error": "application log value is not the result of an ABI return",
      "op": "assert // application log value is not the result of an ABI return",
      "stack_out": [
        "app#0",
        "result#0"
      ]
    },
    "4154": {
      "op": "pushbytes 0x000b6563686f3a207465737434",
      "defined_out": [
        "0x000b6563686f3a207465737434",
        "app#0",
        "result#0"
      ],
      "stack_out": [
        "app#0",
        "result#0",
        "0x000b6563686f3a207465737434"
      ]
    },
    "4169": {
      "op": "==",
      "defined_out": [
        "app#0",
        "tmp%24#1"
      ],
      "stack_out": [
        "app#0",
        "tmp%24#1"
      ]
    },
    "4170": {
      "op": "assert",
      "stack_out": [
        "app#0"
      ]
    },
    "4171": {
      "op": "itxn_begin"
    },
    "4172": {
      "op": "itxn_field ApplicationID",
      "stack_out": []
    },
    "4174": {
      "op": "bytec_3 // method \"echo(string)string\"",
      "stack_out": [
        "Method(echo(string)string)"
      ]
    },
    "4175": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "4177": {
      "op": "pushbytes 0x00057465737435",
      "defined_out": [
        "0x00057465737435"
      ],
      "stack_out": [
        "0x00057465737435"
      ]
    },
    "4186": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "4188": {
      "op": "intc_1 // appl",
      "stack_out": [
        "appl"
      ]
    },
    "4189": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "4191": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0"
      ]
    },
    "4192": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "4194": {
      "op": "itxn_submit"
    },
    "4195": {
      "op": "itxn LastLog",
      "defined_out": [
        "awst_tmp%4#0"
      ],
      "stack_out": [
        "awst_tmp%4#0"
      ]
    },
    "4197": {
      "op": "dup",
      "defined_out": [
        "awst_tmp%4#0",
        "awst_tmp%4#0 (copy)"
      ],
      "stack_out": [
        "awst_tmp%4#0",
        "awst_tmp%4#0 (copy)"
      ]
    },
    "4198": {
      "op": "extract 4 0",
      "stack_out": [
        "awst_tmp%4#0",
        "result#0"
      ]
    },
    "4201": {
      "op": "swap",
      "stack_out": [
        "result#0",
        "awst_tmp%4#0"
      ]
    },
    "4202": {
      "op": "extract 0 4",
      "defined_out": [
        "result#0",
        "tmp%27#3"
      ],
      "stack_out": [
        "result#0",
        "tmp%27#3"
      ]
    },
    "4205": {
      "op": "bytec_0 // 0x151f7c75",
      "stack_out": [
        "result#0",
        "tmp%27#3",
        "0x151f7c75"
      ]
    },
    "4206": {
      "op": "==",
      "defined_out": [
        "result#0",
        "tmp%28#2"
      ],
      "stack_out": [
        "result#0",
        "tmp%28#2"
      ]
    },
    "4207": {
      "error": "application log value is not the result of an ABI return",
      "op": "assert // application log value is not the result of an ABI return",
      "stack_out": [
        "result#0"
      ]
    },
    "4208": {
      "op": "pushbytes 0x000b6563686f3a207465737435",
      "defined_out": [
        "0x000b6563686f3a207465737435",
        "result#0"
      ],
      "stack_out": [
        "result#0",
        "0x000b6563686f3a207465737435"
      ]
    },
    "4223": {
      "op": "==",
      "defined_out": [
        "tmp%30#1"
      ],
      "stack_out": [
        "tmp%30#1"
      ]
    },
    "4224": {
      "op": "assert",
      "stack_out": []
    },
    "4225": {
      "op": "intc_2 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "4226": {
      "op": "return",
      "stack_out": []
    },
    "4227": {
      "block": "main_test_is_a_b_route@3",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "4229": {
      "op": "!",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "4230": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "4231": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "4233": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "4234": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded(len+uint8[])%0#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(len+uint8[])%0#0"
      ]
    },
    "4237": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "reinterpret_Encoded(len+uint8[])%0#0",
        "reinterpret_Encoded(len+uint8[])%1#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(len+uint8[])%0#0",
        "reinterpret_Encoded(len+uint8[])%1#0"
      ]
    },
    "4240": {
      "op": "txna ApplicationArgs 3",
      "defined_out": [
        "reinterpret_Encoded(len+uint8[])%0#0",
        "reinterpret_Encoded(len+uint8[])%1#0",
        "reinterpret_Encoded(uint64)%0#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(len+uint8[])%0#0",
        "reinterpret_Encoded(len+uint8[])%1#0",
        "reinterpret_Encoded(uint64)%0#0"
      ]
    },
    "4243": {
      "op": "btoi",
      "defined_out": [
        "app#0",
        "reinterpret_Encoded(len+uint8[])%0#0",
        "reinterpret_Encoded(len+uint8[])%1#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(len+uint8[])%0#0",
        "reinterpret_Encoded(len+uint8[])%1#0",
        "app#0"
      ]
    },
    "4244": {
      "op": "itxn_begin"
    },
    "4245": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "reinterpret_Encoded(len+uint8[])%0#0",
        "reinterpret_Encoded(len+uint8[])%1#0"
      ]
    },
    "4247": {
      "op": "pushbytes 0xc77212bc // method \"is_a_b(byte[],byte[])void\"",
      "defined_out": [
        "Method(is_a_b(byte[],byte[])void)",
        "reinterpret_Encoded(len+uint8[])%0#0",
        "reinterpret_Encoded(len+uint8[])%1#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(len+uint8[])%0#0",
        "reinterpret_Encoded(len+uint8[])%1#0",
        "Method(is_a_b(byte[],byte[])void)"
      ]
    },
    "4253": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "reinterpret_Encoded(len+uint8[])%0#0",
        "reinterpret_Encoded(len+uint8[])%1#0"
      ]
    },
    "4255": {
      "op": "swap",
      "stack_out": [
        "reinterpret_Encoded(len+uint8[])%1#0",
        "reinterpret_Encoded(len+uint8[])%0#0"
      ]
    },
    "4256": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "reinterpret_Encoded(len+uint8[])%1#0"
      ]
    },
    "4258": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "4260": {
      "op": "intc_1 // appl",
      "defined_out": [
        "appl"
      ],
      "stack_out": [
        "appl"
      ]
    },
    "4261": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "4263": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "4264": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "4266": {
      "op": "itxn_submit"
    },
    "4267": {
      "op": "intc_2 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "4268": {
      "op": "return",
      "stack_out": []
    },
    "4269": {
      "block": "main_bare_routing@24",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%102#0"
      ],
      "stack_out": [
        "tmp%102#0"
      ]
    },
    "4271": {
      "op": "bnz main_after_if_else@28",
      "stack_out": []
    },
    "4274": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%103#0"
      ],
      "stack_out": [
        "tmp%103#0"
      ]
    },
    "4276": {
      "op": "!",
      "defined_out": [
        "tmp%104#0"
      ],
      "stack_out": [
        "tmp%104#0"
      ]
    },
    "4277": {
      "error": "can only call when creating",
      "op": "assert // can only call when creating",
      "stack_out": []
    },
    "4278": {
      "op": "intc_2 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "4279": {
      "op": "return",
      "stack_out": []
    }
  }
}