{
  "version": 3,
  "sources": [
    "../typed_c2c.py"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgBA;;AAAA;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AAkUK;;AAAA;AAAA;AAAA;;AAAA;AAlUL;;;AAAA;AAAA;;AAoUuB;;;;AAAA;;;;AAEX;;;;AACA;;;;AAHW;;;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAAA;AAMf;AACe;;;AAAA;;;;AAEX;;;;;;;;;;;;;;;;;;;;;AACA;;;;AAHW;;;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAAA;AAMR;AAAP;AAfH;;AAVA;;AAAA;AAAA;AAAA;;AAAA;AAxTL;;;AAAA;AAAA;;AA0TuB;;;;AAAA;;;;AAAA;;;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;AACE;;AAAV;AAAP;AACoB;;;;AAAA;;;;AAAA;;;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AACE;;AAAf;AAAP;AAEA;;;AAAA;;;;AAAA;;;AAAA;;;AAAA;AAAA;;AAAA;;;AAAA;AAAA;AAAA;AAC4B;;AAArB;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAA4C;;AAA5C;AAAP;AARH;;AA9CA;;AAAA;AAAA;AAAA;;AAAA;AA1QL;;;AAAA;AAAA;;AA6QsB;;;;AAAA;;;;AAEV;;;;AAFU;;;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;;;;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;;AAMP;;AAAM;;AAAN;AAAP;AACO;;AAAM;;AAAN;AAAP;AACO;;AAAS;AAAT;AAAP;AACO;AAAS;;AAAT;AAAP;AACgB;;AAAT;AAAP;AAGc;;;;AAAA;;;;AAEV;;;;AAFU;;;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;;;;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;;AAMP;;AAAM;;AAAN;AAAP;AACO;;AAAM;;AAAN;AAAP;AACO;;AAAS;AAAT;AAAP;AACO;AAAS;;AAAT;AAAP;AACgB;;AAAT;AAAP;AAGc;;;AAAA;;;;AAEV;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAFU;;;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;;;;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;;AAWP;;AAAM;;;;;;;;;;;AAAN;AAAP;AACO;;AAAM;;;;;;;;;;;;;AAAN;AAAP;AACO;;AAAS;;AAAT;AAAP;AACO;AAAS;;;;;;;;;;AAAT;AAAP;AACgB;;;;;;;;;;AAAT;AAAP;AA5CH;;AAlDA;;AAAA;AAAA;AAAA;;AAAA;AAxNL;;;AAAA;AAAA;;AA2NsB;;;;AAAA;;;;AAEV;;;;AACA;;;;AACA;;;AACA;;;AALU;;;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;;;;AAAA;AAAA;;;AAAA;;;;AAAA;AAAA;;AAAA;;;AASP;;AAAK;;AAAL;AAAP;AACO;;AAAK;;AAAL;AAAP;AACO;;AAAK;AAAL;AAAP;AACO;AAAM;;AAAN;AAAP;AAGgB;AAIZ;AAAA;;;;;AAJY;;;;AAEZ;;;;AACA;;;;;;AAEA;;;AALY;;;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;;;;AAAA;AAAA;;;AAAA;;;;AAAA;AAAA;;AAAA;;;AAQT;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAP;AAGgB;;;;;AAAA;;;;AAEZ;;;;AACA;;;;AACA;;;AACA;;;AALY;;;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;;;;AAAA;AAAA;;;AAAA;;;;AAAA;AAAA;;AAAA;;;AAQT;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAP;AAGqB;;;;;AAAA;;;;AAEjB;;;;AACA;;;;AACA;;;AACA;;;AALiB;;;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;;;;AAAA;AAAA;;;AAAA;;;;AAAA;AAAA;;AAAA;;;AAQd;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAP;AAhDH;;AA3DA;;AAAA;AAAA;AAAA;;AAAA;AA7JL;;;AAAA;AAAA;;AAgKuB;;;;AAAA;;;;AAIX;;;;AACA;;;;AACA;;;AACA;;;AAPW;;;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;;;AAAA;AAAA;AAAA;AAUD;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;;AACP;;AAAA;;;AAAA;AAAY;;AAAZ;AAAP;AACO;;AAAA;;;AAAA;AAAY;;AAAZ;AAAP;AACO;;;;AAAA;AAAA;AAAY;AAAZ;AAAP;AACO;;AAAa;;AAAb;AAAP;AAGe;AAMX;AAAA;;;;;AANW;;;;AAIX;;;;AACA;;;;;;AAEA;;;AAPW;;;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAUR;;AAAA;AAAP;AAGe;;;;;AAAA;;;;AAIX;;;;AACA;;;;AACA;;;AACA;;;AAPW;;;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAUR;;AAAA;AAAP;AAGqB;;;;;AAAA;;;;AAEjB;;;;AACA;;;;AACA;;;AACA;;;AALiB;;;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;;;;AAAA;AAAA;;;AAAA;;;;AAAA;AAAA;;AAAA;;;AAQd;;AAAA;;AAAA;AAAP;AACO;;AAAA;;AAAA;AAAP;AACO;;AAAA;AAAP;AACO;AAAP;AAzDH;;AAXA;;AAAA;AAAA;AAAA;;AAAA;AAlJL;;;AAAA;AAAA;;AAoJwB;;;;AAAA;;;;AAA0C;;;AAA1C;;;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AACT;AAAW;;AAAX;AAAP;AAEgB;;;;;AAAA;;;;AAA0C;;;AAA1C;;;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AACT;;AAAA;AAAP;AAEgB;;;;AAAA;;;;AAA0C;;;AAA1C;;;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AACT;AAAP;AATH;;AAXA;;AAAA;AAAA;AAAA;;AAAA;AAvIL;;;AAAA;AAAA;;AAyIwB;;;;AAAA;;;;AAAyC;;;AAAzC;;;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;AACT;AAAW;AAAX;AAAP;AAEgB;AAAyC;AAAA;;;;;AAAzC;;;;;;AAAA;;;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;AACT;;AAAA;AAAP;AAEgB;;;;AAAA;;;;AAAyC;;;AAAzC;;;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;AACT;AAAP;AATH;;AAbA;;AAAA;AAAA;AAAA;;AAAA;AA1HL;;;AAAA;AAAA;;AA4HwB;;;;AAAA;;;;AAAwC;;;;AAAxC;;;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AACT;AAAW;;;;;;;;;AAAX;AAAP;AAEgB;;;;;AAAA;;;;AAAwC;;;;AAAxC;;;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AACT;;AAAA;AAAP;AAEgB;;;;AAAA;;;;AACc;;;;AADd;;;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAGT;AAAP;AAXH;;AAXA;;AAAA;AAAA;AAAA;;AAAA;AA/GL;;;AAAA;AAAA;;AAiHwB;;;;AAAA;;;;AAAyC;;;;AAAzC;;;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AACT;AAAW;;;;;;;;;AAAX;AAAP;AAEgB;;;;;AAAA;;;;AAAyC;;;;AAAzC;;;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AACT;;AAAA;AAAP;AAEgB;;;;AAAA;;;;AAAyC;;;;AAAzC;;;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AACT;AAAP;AATH;;AAdA;;AAAA;AAAA;AAAA;;AAAA;AAjGL;;;AAAA;AAAA;;AAAA;;;AAAA;AAAA;;AAmGc;AAGF;;;;;;;;;;;;;;;;AAHE;;;;;;;;AAEF;;;;;AACA;;;;;AACA;;;;;AAJE;;;AAAA;;;AAAA;;;AASC;AAAA;;AAAA;AAAa;;AAAb;AAAwD;;AAAA;;AAAA;AAAxD;AADH;AADJ;AATH;;AAdA;;AAAA;AAAA;AAAA;;AAAA;AAnFL;;;AAAA;AAAA;;AAqFc;;;;AAAA;;;;AAAgD;;;;;;;;;;;;AAAhD;;;AAAA;;;AAAA;;;AACiB;;;;;;;;AAAhB;AAAP;AAEM;;;;AAAA;;;;AAA4C;;;;;;;;;;;;AAA5C;;;AAAA;;;AAAA;;;AACiB;;;;;;;;AAAhB;AAAP;AAEM;;;;AAAA;;;;AAA+B;;;;;;;;;;;;AAA/B;;;AAAA;;;AAAA;;;AACiB;;;;;;;;AAAhB;AAAP;AAEM;;;AAAA;;;;AAAiC;;;;;;;;;;;;AAAjC;;;AAAA;;;AAAA;;;AACiB;;;;;;;;AAAhB;AAAP;AAZH;;AA5BA;;AAAA;AAAA;AAAA;;AAAA;AAvDL;;;AAAA;AAAA;;AAyDsB;;;AAAA;;;;;;;;AAEV;;;AACA;;;;AACA;;;;AACA;;;;;;;;;;;;AACA;;;;;;;;;;;;AACA;;;;;;;;;;;;AACA;;;;;;;;;;;;AACA;;;;;;;;;;;;AACA;;;;;;;;;;;;AACA;;;;;;;;;;;;AACA;;;;;;;;;;;;AACA;;;;;;;;;;;;AACA;;;;;;;;;;;;AACA;;;;;;;;;;;;AACA;;;;AAhBU;;;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAwBP;;;AAAiB;;AAAjB;AAAP;AA1BH;;AAjBA;;AAAA;AAAA;AAAA;;AAAA;AAtCL;;;AAAA;AAAA;;AAwCc;;;;AAAA;;;;AAAiC;;;;;;;;;;;;;;;;AAAjC;;;AAAA;;;AAAA;;;AACiB;;;;;;;;;;;;AAAhB;AAAP;AAEM;;;;AAAA;;;;;;;;AAAiC;;;;AAAjC;;;AAAA;;;AAAA;;;AACyB;AAAR;AAAhB;AAAP;AAEM;;;;AAAA;;;;;;;;AAAkC;;;;AAAlC;;;AAAA;;;AAAA;;;AACkB;;AAAjB;AAAP;AAEM;;;;AAAA;;;;;;;;AAAgC;;;;;;;AAAhC;;;AAAA;;;AAAA;;;AACiB;;;AAAhB;AAAP;AAEM;;;AAAA;;;;;;;;AAA+B;;;;;AAA/B;;;AAAA;;;AAAA;;;AACiB;;;;;;AAAhB;AAAP;AAfH;;AAfA;;AAAA;AAAA;AAAA;;AAAA;AAvBL;;;AAAA;AAAA;;AAyBQ;;;;AAAA;;;AAAiD;;;;;;;;;;;;;;;;;;;;AAAjD;;;AAAA;;;AAAA;AAAA;;AAAA;;;AAAA;AAAA;AAAA;AAC4B;;AAArB;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAA4C;;;;;;;;;;;;;;;;;;;;;;;;AAA5C;AAAP;AAEA;;;;AAAA;;;AAAoC;;;;;;;;;;;;;;;;;;;;;;AAApC;;;AAAA;;;AAAA;AAC4B;;AAArB;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAA4C;;;;;;;;;;;;;;;;;;;;;;;;;;AAA5C;AAAP;AAES;;;;AAAA;;;AAAiD;;;;;;;;;;;AAAjD;;;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;AACF;AAAa;;AAAb;AAAP;AACO;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAA4C;;AAA5C;AAAP;AAEa;;;AAAA;;;AAAoC;;;;;;;;;;;;;AAApC;;;AAAA;;;AAAA;;;AACN;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAA6C;;;;;;;;;;;;;;;;;AAA7C;AAAP;AAbH;;AAbA;;AAAA;AAAA;AAAA;;AAAA;AAVL;;;AAAA;AAAA;;AAYuB;;;;AAAA;;;AAA2B;;;;;;;;;;;AAA3B;;;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AACE;;;;;;;;;;;;;;;AAAV;AAAP;AACe;;;;AAAA;;;AAAiC;;;;;;;;;;;AAAjC;;;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AACE;;;;;;;;;;;;;;;AAAV;AAAP;AACe;;;;AAAA;;;AAAmC;;;;;;;;;;;AAAnC;;;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AACE;;;;;;;;;;;;;;;AAAV;AAAP;AACe;;;;AAAA;;;AAA2C;;;;;;;;;;;AAA3C;;;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AACE;;;;;;;;;;;;;;;AAAV;AAAP;AACe;;;AAAA;;;AAAiD;;;;;;;;;;;AAAjD;;;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AACE;;;;;;;;;;;;;;;AAAV;AAAP;AAXH;;AATA;;AAAA;AAAA;AAAA;;AAAA;AADL;;;AAAA;;;AAAA;;;AAAA;;;AAAA;;;AAAA;AAAA;;AAGQ;AAEI;;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AACA;;AAAA;AAAA;AAAA;;;AAAA;;AAAA;;;;;AAHJ;;;;;;;;;;;;;AAAA;;;AAAA;;;AAAA;AAFH;;AADL;;AAAA;;;;;;;;",
  "op_pc_offset": 0,
  "pc_events": {
    "1": {
      "subroutine": "algopy.arc4.ARC4Contract.approval_program",
      "params": {},
      "block": "main",
      "stack_in": [],
      "op": "intcblock 0 6 1 2"
    },
    "7": {
      "op": "bytecblock 0x151f7c75 0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002 0x0000000000000001 0x9bf81913 0x16e03919 0x00027331 0x00026231 0xb4b4334e \"echo: s1\" 0x0000000000000001000a00056c6f672031 0xb862ee19 0xab271ce4 0x0000000000000003 0x03 0xd8cc363b 0xa9fb6cf1 0x2659e818 0x000162 0x4a444c77 0x000173 0xddd07185 0x000000000000002a 0x00040010000400080002733100027332000000000000000100000000000000020012000133 0x00086563686f3a207332 0x6563686f3a2033 0x6563686f3a206231 0x0000000000000002 0x0f101112deadbeef14 0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000003 0x000b6563686f3a207475706c65"
    },
    "367": {
      "op": "txn NumAppArgs",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "369": {
      "op": "bz main_bare_routing@21",
      "stack_out": []
    },
    "372": {
      "op": "pushbytess 0x07916bea 0x1859b0ba 0x4eb11b0d 0x0d176a4a 0xb54730c8 0x7859eaf7 0x24478a3c 0x7a60c035 0x6a559cb3 0x1be60712 0x19cb78a4 0xf0ef6873 0x3d2bfe37 0x54e98f56 0xf55b7567 0x8598bb43 // method \"test_is_a_b(byte[],byte[],application)void\", method \"test_method_selector_kinds(application)void\", method \"test_method_overload(application)void\", method \"test_arg_conversion(application)void\", method \"test_15plus_args(application)void\", method \"test_void(application)void\", method \"test_ref_types(application,asset)void\", method \"test_native_string(application)void\", method \"test_native_bytes(application)void\", method \"test_native_uint64(application)void\", method \"test_native_biguint(application)void\", method \"test_native_tuple(application)void\", method \"test_native_tuple_method_ref(application)void\", method \"test_nested_tuples(application)void\", method \"test_no_args(application)void\", method \"test_named_tuples(application)void\""
    },
    "454": {
      "op": "txna ApplicationArgs 0"
    },
    "457": {
      "op": "match main_test_is_a_b_route@3 main_test_method_selector_kinds_route@4 main_test_method_overload_route@5 main_test_arg_conversion_route@6 main_test_15plus_args_route@7 main_test_void_route@8 main_test_ref_types_route@9 main_test_native_string_route@10 main_test_native_bytes_route@11 main_test_native_uint64_route@12 main_test_native_biguint_route@13 main_test_native_tuple_route@14 main_test_native_tuple_method_ref_route@15 main_test_nested_tuples_route@16 main_test_no_args_route@17 main_test_named_tuples_route@18"
    },
    "491": {
      "block": "main_after_if_else@25",
      "stack_in": [],
      "op": "intc_0 // 0",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "492": {
      "op": "return"
    },
    "493": {
      "block": "main_test_named_tuples_route@18",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%99#0"
      ],
      "stack_out": [
        "tmp%99#0"
      ]
    },
    "495": {
      "op": "!",
      "defined_out": [
        "tmp%100#0"
      ],
      "stack_out": [
        "tmp%100#0"
      ]
    },
    "496": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "497": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%101#0"
      ],
      "stack_out": [
        "tmp%101#0"
      ]
    },
    "499": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "500": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[1]%16#0"
      ],
      "stack_out": [
        "reinterpret_bytes[1]%16#0"
      ]
    },
    "503": {
      "op": "btoi",
      "defined_out": [
        "tmp%103#0"
      ],
      "stack_out": [
        "tmp%103#0"
      ]
    },
    "504": {
      "op": "txnas Applications",
      "defined_out": [
        "app#0"
      ],
      "stack_out": [
        "app#0"
      ]
    },
    "506": {
      "op": "itxn_begin"
    },
    "507": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "app#0 (copy)"
      ],
      "stack_out": [
        "app#0",
        "app#0 (copy)"
      ]
    },
    "508": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "app#0"
      ]
    },
    "510": {
      "op": "bytec 20 // method \"logs_are_equal((uint64,string),(uint64,string))bool\"",
      "defined_out": [
        "Method(logs_are_equal((uint64,string),(uint64,string))bool)",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "Method(logs_are_equal((uint64,string),(uint64,string))bool)"
      ]
    },
    "512": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0"
      ]
    },
    "514": {
      "op": "bytec 9 // 0x0000000000000001000a00056c6f672031",
      "defined_out": [
        "0x0000000000000001000a00056c6f672031",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "0x0000000000000001000a00056c6f672031"
      ]
    },
    "516": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0"
      ]
    },
    "518": {
      "op": "bytec 9 // 0x0000000000000001000a00056c6f672031",
      "stack_out": [
        "app#0",
        "0x0000000000000001000a00056c6f672031"
      ]
    },
    "520": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0"
      ]
    },
    "522": {
      "op": "intc_1 // appl",
      "defined_out": [
        "app#0",
        "appl"
      ],
      "stack_out": [
        "app#0",
        "appl"
      ]
    },
    "523": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "app#0"
      ]
    },
    "525": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "0"
      ]
    },
    "526": {
      "op": "itxn_field Fee",
      "stack_out": [
        "app#0"
      ]
    },
    "528": {
      "op": "itxn_submit"
    },
    "529": {
      "op": "itxn LastLog"
    },
    "531": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ]
    },
    "532": {
      "op": "extract 4 0",
      "defined_out": [
        "app#0",
        "awst_tmp%0#0",
        "tmp%0#2"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "tmp%0#2"
      ]
    },
    "535": {
      "op": "swap",
      "stack_out": [
        "app#0",
        "tmp%0#2",
        "awst_tmp%0#0"
      ]
    },
    "536": {
      "op": "extract 0 4",
      "defined_out": [
        "app#0",
        "tmp%0#2",
        "tmp%1#1"
      ],
      "stack_out": [
        "app#0",
        "tmp%0#2",
        "tmp%1#1"
      ]
    },
    "539": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "app#0",
        "tmp%0#2",
        "tmp%1#1"
      ],
      "stack_out": [
        "app#0",
        "tmp%0#2",
        "tmp%1#1",
        "0x151f7c75"
      ]
    },
    "540": {
      "op": "==",
      "defined_out": [
        "app#0",
        "tmp%0#2",
        "tmp%2#1"
      ],
      "stack_out": [
        "app#0",
        "tmp%0#2",
        "tmp%2#1"
      ]
    },
    "541": {
      "error": "ARC4 prefix is valid",
      "op": "assert // ARC4 prefix is valid",
      "stack_out": [
        "app#0",
        "tmp%0#2"
      ]
    },
    "542": {
      "op": "intc_0 // 0",
      "stack_out": [
        "app#0",
        "tmp%0#2",
        "0"
      ]
    },
    "543": {
      "op": "getbit",
      "defined_out": [
        "app#0",
        "result#0"
      ],
      "stack_out": [
        "app#0",
        "result#0"
      ]
    },
    "544": {
      "op": "assert",
      "stack_out": [
        "app#0"
      ]
    },
    "545": {
      "op": "itxn_begin"
    },
    "546": {
      "op": "itxn_field ApplicationID",
      "stack_out": []
    },
    "548": {
      "op": "bytec 20 // method \"logs_are_equal((uint64,string),(uint64,string))bool\"",
      "stack_out": [
        "Method(logs_are_equal((uint64,string),(uint64,string))bool)"
      ]
    },
    "550": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "552": {
      "op": "pushbytes 0x0000000000000002000a00056c6f672032",
      "defined_out": [
        "0x0000000000000002000a00056c6f672032"
      ],
      "stack_out": [
        "0x0000000000000002000a00056c6f672032"
      ]
    },
    "571": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "573": {
      "op": "bytec 9 // 0x0000000000000001000a00056c6f672031",
      "stack_out": [
        "0x0000000000000001000a00056c6f672031"
      ]
    },
    "575": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "577": {
      "op": "intc_1 // appl",
      "stack_out": [
        "appl"
      ]
    },
    "578": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "580": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0"
      ]
    },
    "581": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "583": {
      "op": "itxn_submit"
    },
    "584": {
      "op": "itxn LastLog"
    },
    "586": {
      "op": "dup",
      "defined_out": [
        "awst_tmp%1#0",
        "awst_tmp%1#0 (copy)"
      ],
      "stack_out": [
        "awst_tmp%1#0",
        "awst_tmp%1#0 (copy)"
      ]
    },
    "587": {
      "op": "extract 4 0",
      "defined_out": [
        "awst_tmp%1#0",
        "tmp%4#1"
      ],
      "stack_out": [
        "awst_tmp%1#0",
        "tmp%4#1"
      ]
    },
    "590": {
      "op": "swap",
      "stack_out": [
        "tmp%4#1",
        "awst_tmp%1#0"
      ]
    },
    "591": {
      "op": "extract 0 4",
      "defined_out": [
        "tmp%4#1",
        "tmp%5#1"
      ],
      "stack_out": [
        "tmp%4#1",
        "tmp%5#1"
      ]
    },
    "594": {
      "op": "bytec_0 // 0x151f7c75",
      "stack_out": [
        "tmp%4#1",
        "tmp%5#1",
        "0x151f7c75"
      ]
    },
    "595": {
      "op": "==",
      "defined_out": [
        "tmp%4#1",
        "tmp%6#1"
      ],
      "stack_out": [
        "tmp%4#1",
        "tmp%6#1"
      ]
    },
    "596": {
      "error": "ARC4 prefix is valid",
      "op": "assert // ARC4 prefix is valid",
      "stack_out": [
        "tmp%4#1"
      ]
    },
    "597": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%4#1",
        "0"
      ]
    },
    "598": {
      "op": "getbit",
      "stack_out": [
        "result#0"
      ]
    },
    "599": {
      "op": "!",
      "defined_out": [
        "tmp%8#1"
      ],
      "stack_out": [
        "tmp%8#1"
      ]
    },
    "600": {
      "op": "assert",
      "stack_out": []
    },
    "601": {
      "op": "intc_2 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "602": {
      "op": "return"
    },
    "603": {
      "block": "main_test_no_args_route@17",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%93#0"
      ],
      "stack_out": [
        "tmp%93#0"
      ]
    },
    "605": {
      "op": "!",
      "defined_out": [
        "tmp%94#0"
      ],
      "stack_out": [
        "tmp%94#0"
      ]
    },
    "606": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "607": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%95#0"
      ],
      "stack_out": [
        "tmp%95#0"
      ]
    },
    "609": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "610": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[1]%15#0"
      ],
      "stack_out": [
        "reinterpret_bytes[1]%15#0"
      ]
    },
    "613": {
      "op": "btoi",
      "defined_out": [
        "tmp%97#0"
      ],
      "stack_out": [
        "tmp%97#0"
      ]
    },
    "614": {
      "op": "txnas Applications",
      "defined_out": [
        "app#0"
      ],
      "stack_out": [
        "app#0"
      ]
    },
    "616": {
      "op": "itxn_begin"
    },
    "617": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "app#0 (copy)"
      ],
      "stack_out": [
        "app#0",
        "app#0 (copy)"
      ]
    },
    "618": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "app#0"
      ]
    },
    "620": {
      "op": "bytec 10 // method \"no_args()uint64\"",
      "defined_out": [
        "Method(no_args()uint64)",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "Method(no_args()uint64)"
      ]
    },
    "622": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0"
      ]
    },
    "624": {
      "op": "intc_1 // appl",
      "defined_out": [
        "app#0",
        "appl"
      ],
      "stack_out": [
        "app#0",
        "appl"
      ]
    },
    "625": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "app#0"
      ]
    },
    "627": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "0"
      ]
    },
    "628": {
      "op": "itxn_field Fee",
      "stack_out": [
        "app#0"
      ]
    },
    "630": {
      "op": "itxn_submit"
    },
    "631": {
      "op": "itxn LastLog"
    },
    "633": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ]
    },
    "634": {
      "op": "extract 4 0",
      "defined_out": [
        "app#0",
        "awst_tmp%0#0",
        "tmp%0#3"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "tmp%0#3"
      ]
    },
    "637": {
      "op": "swap",
      "stack_out": [
        "app#0",
        "tmp%0#3",
        "awst_tmp%0#0"
      ]
    },
    "638": {
      "op": "extract 0 4",
      "defined_out": [
        "app#0",
        "tmp%0#3",
        "tmp%1#1"
      ],
      "stack_out": [
        "app#0",
        "tmp%0#3",
        "tmp%1#1"
      ]
    },
    "641": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "app#0",
        "tmp%0#3",
        "tmp%1#1"
      ],
      "stack_out": [
        "app#0",
        "tmp%0#3",
        "tmp%1#1",
        "0x151f7c75"
      ]
    },
    "642": {
      "op": "==",
      "defined_out": [
        "app#0",
        "tmp%0#3",
        "tmp%2#1"
      ],
      "stack_out": [
        "app#0",
        "tmp%0#3",
        "tmp%2#1"
      ]
    },
    "643": {
      "error": "ARC4 prefix is valid",
      "op": "assert // ARC4 prefix is valid",
      "stack_out": [
        "app#0",
        "tmp%0#3"
      ]
    },
    "644": {
      "op": "btoi",
      "defined_out": [
        "app#0",
        "result#2"
      ],
      "stack_out": [
        "app#0",
        "result#2"
      ]
    },
    "645": {
      "op": "pushint 42 // 42",
      "defined_out": [
        "42",
        "app#0",
        "result#2"
      ],
      "stack_out": [
        "app#0",
        "result#2",
        "42"
      ]
    },
    "647": {
      "op": "==",
      "defined_out": [
        "app#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "app#0",
        "tmp%4#0"
      ]
    },
    "648": {
      "op": "assert",
      "stack_out": [
        "app#0"
      ]
    },
    "649": {
      "op": "itxn_begin"
    },
    "650": {
      "op": "dup",
      "stack_out": [
        "app#0",
        "app#0 (copy)"
      ]
    },
    "651": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "app#0"
      ]
    },
    "653": {
      "op": "bytec 10 // method \"no_args()uint64\"",
      "stack_out": [
        "app#0",
        "Method(no_args()uint64)"
      ]
    },
    "655": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0"
      ]
    },
    "657": {
      "op": "intc_1 // appl",
      "stack_out": [
        "app#0",
        "appl"
      ]
    },
    "658": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "app#0"
      ]
    },
    "660": {
      "op": "intc_0 // 0",
      "stack_out": [
        "app#0",
        "0"
      ]
    },
    "661": {
      "op": "itxn_field Fee",
      "stack_out": [
        "app#0"
      ]
    },
    "663": {
      "op": "itxn_submit"
    },
    "664": {
      "op": "itxn LastLog"
    },
    "666": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "awst_tmp%1#0",
        "awst_tmp%1#0 (copy)"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%1#0",
        "awst_tmp%1#0 (copy)"
      ]
    },
    "667": {
      "op": "extract 4 0",
      "defined_out": [
        "app#0",
        "arc4_result#0",
        "awst_tmp%1#0"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%1#0",
        "arc4_result#0"
      ]
    },
    "670": {
      "op": "swap",
      "stack_out": [
        "app#0",
        "arc4_result#0",
        "awst_tmp%1#0"
      ]
    },
    "671": {
      "op": "extract 0 4",
      "defined_out": [
        "app#0",
        "arc4_result#0",
        "tmp%6#2"
      ],
      "stack_out": [
        "app#0",
        "arc4_result#0",
        "tmp%6#2"
      ]
    },
    "674": {
      "op": "bytec_0 // 0x151f7c75",
      "stack_out": [
        "app#0",
        "arc4_result#0",
        "tmp%6#2",
        "0x151f7c75"
      ]
    },
    "675": {
      "op": "==",
      "defined_out": [
        "app#0",
        "arc4_result#0",
        "tmp%7#1"
      ],
      "stack_out": [
        "app#0",
        "arc4_result#0",
        "tmp%7#1"
      ]
    },
    "676": {
      "error": "ARC4 prefix is valid",
      "op": "assert // ARC4 prefix is valid",
      "stack_out": [
        "app#0",
        "arc4_result#0"
      ]
    },
    "677": {
      "op": "bytec 21 // 0x000000000000002a",
      "defined_out": [
        "0x000000000000002a",
        "app#0",
        "arc4_result#0"
      ],
      "stack_out": [
        "app#0",
        "arc4_result#0",
        "0x000000000000002a"
      ]
    },
    "679": {
      "op": "b==",
      "defined_out": [
        "app#0",
        "tmp%8#1"
      ],
      "stack_out": [
        "app#0",
        "tmp%8#1"
      ]
    },
    "680": {
      "op": "assert",
      "stack_out": [
        "app#0"
      ]
    },
    "681": {
      "op": "itxn_begin"
    },
    "682": {
      "op": "itxn_field ApplicationID",
      "stack_out": []
    },
    "684": {
      "op": "bytec 10 // method \"no_args()uint64\"",
      "stack_out": [
        "Method(no_args()uint64)"
      ]
    },
    "686": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "688": {
      "op": "intc_1 // appl",
      "stack_out": [
        "appl"
      ]
    },
    "689": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "691": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0"
      ]
    },
    "692": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "694": {
      "op": "itxn_submit"
    },
    "695": {
      "op": "itxn LastLog",
      "defined_out": [
        "awst_tmp%2#0"
      ],
      "stack_out": [
        "awst_tmp%2#0"
      ]
    },
    "697": {
      "op": "extract 0 4",
      "defined_out": [
        "tmp%10#1"
      ],
      "stack_out": [
        "tmp%10#1"
      ]
    },
    "700": {
      "op": "bytec_0 // 0x151f7c75",
      "stack_out": [
        "tmp%10#1",
        "0x151f7c75"
      ]
    },
    "701": {
      "op": "==",
      "defined_out": [
        "tmp%11#1"
      ],
      "stack_out": [
        "tmp%11#1"
      ]
    },
    "702": {
      "error": "ARC4 prefix is valid",
      "op": "assert // ARC4 prefix is valid",
      "stack_out": []
    },
    "703": {
      "op": "itxn LastLog"
    },
    "705": {
      "op": "dup",
      "defined_out": [
        "awst_tmp%3#0",
        "awst_tmp%3#0 (copy)"
      ],
      "stack_out": [
        "awst_tmp%3#0",
        "awst_tmp%3#0 (copy)"
      ]
    },
    "706": {
      "op": "extract 4 0",
      "defined_out": [
        "awst_tmp%3#0",
        "tmp%13#1"
      ],
      "stack_out": [
        "awst_tmp%3#0",
        "tmp%13#1"
      ]
    },
    "709": {
      "op": "swap",
      "stack_out": [
        "tmp%13#1",
        "awst_tmp%3#0"
      ]
    },
    "710": {
      "op": "extract 0 4",
      "defined_out": [
        "tmp%13#1",
        "tmp%14#1"
      ],
      "stack_out": [
        "tmp%13#1",
        "tmp%14#1"
      ]
    },
    "713": {
      "op": "bytec_0 // 0x151f7c75",
      "stack_out": [
        "tmp%13#1",
        "tmp%14#1",
        "0x151f7c75"
      ]
    },
    "714": {
      "op": "==",
      "defined_out": [
        "tmp%13#1",
        "tmp%15#1"
      ],
      "stack_out": [
        "tmp%13#1",
        "tmp%15#1"
      ]
    },
    "715": {
      "error": "ARC4 prefix is valid",
      "op": "assert // ARC4 prefix is valid",
      "stack_out": [
        "tmp%13#1"
      ]
    },
    "716": {
      "op": "bytec 21 // 0x000000000000002a",
      "stack_out": [
        "tmp%13#1",
        "0x000000000000002a"
      ]
    },
    "718": {
      "op": "b==",
      "defined_out": [
        "tmp%16#1"
      ],
      "stack_out": [
        "tmp%16#1"
      ]
    },
    "719": {
      "op": "assert",
      "stack_out": []
    },
    "720": {
      "op": "intc_2 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "721": {
      "op": "return"
    },
    "722": {
      "block": "main_test_nested_tuples_route@16",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%87#0"
      ],
      "stack_out": [
        "tmp%87#0"
      ]
    },
    "724": {
      "op": "!",
      "defined_out": [
        "tmp%88#0"
      ],
      "stack_out": [
        "tmp%88#0"
      ]
    },
    "725": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "726": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%89#0"
      ],
      "stack_out": [
        "tmp%89#0"
      ]
    },
    "728": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "729": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[1]%14#0"
      ],
      "stack_out": [
        "reinterpret_bytes[1]%14#0"
      ]
    },
    "732": {
      "op": "btoi",
      "defined_out": [
        "tmp%91#0"
      ],
      "stack_out": [
        "tmp%91#0"
      ]
    },
    "733": {
      "op": "txnas Applications",
      "defined_out": [
        "app#0"
      ],
      "stack_out": [
        "app#0"
      ]
    },
    "735": {
      "op": "itxn_begin"
    },
    "736": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "app#0 (copy)"
      ],
      "stack_out": [
        "app#0",
        "app#0 (copy)"
      ]
    },
    "737": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "app#0"
      ]
    },
    "739": {
      "op": "bytec 11 // method \"echo_nested_tuple(((string,string),(uint64,uint64,byte[])))((string,string),(uint64,uint64,byte[]))\"",
      "defined_out": [
        "Method(echo_nested_tuple(((string,string),(uint64,uint64,byte[])))((string,string),(uint64,uint64,byte[])))",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "Method(echo_nested_tuple(((string,string),(uint64,uint64,byte[])))((string,string),(uint64,uint64,byte[])))"
      ]
    },
    "741": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0"
      ]
    },
    "743": {
      "op": "bytec 22 // 0x00040010000400080002733100027332000000000000000100000000000000020012000133",
      "defined_out": [
        "0x00040010000400080002733100027332000000000000000100000000000000020012000133",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "0x00040010000400080002733100027332000000000000000100000000000000020012000133"
      ]
    },
    "745": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0"
      ]
    },
    "747": {
      "op": "intc_1 // appl",
      "defined_out": [
        "app#0",
        "appl"
      ],
      "stack_out": [
        "app#0",
        "appl"
      ]
    },
    "748": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "app#0"
      ]
    },
    "750": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "0"
      ]
    },
    "751": {
      "op": "itxn_field Fee",
      "stack_out": [
        "app#0"
      ]
    },
    "753": {
      "op": "itxn_submit"
    },
    "754": {
      "op": "itxn LastLog"
    },
    "756": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ]
    },
    "757": {
      "op": "extract 4 0",
      "defined_out": [
        "app#0",
        "awst_tmp%0#0",
        "tmp%0#4"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "tmp%0#4"
      ]
    },
    "760": {
      "op": "swap",
      "stack_out": [
        "app#0",
        "tmp%0#4",
        "awst_tmp%0#0"
      ]
    },
    "761": {
      "op": "extract 0 4",
      "defined_out": [
        "app#0",
        "tmp%0#4",
        "tmp%1#1"
      ],
      "stack_out": [
        "app#0",
        "tmp%0#4",
        "tmp%1#1"
      ]
    },
    "764": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "app#0",
        "tmp%0#4",
        "tmp%1#1"
      ],
      "stack_out": [
        "app#0",
        "tmp%0#4",
        "tmp%1#1",
        "0x151f7c75"
      ]
    },
    "765": {
      "op": "==",
      "defined_out": [
        "app#0",
        "tmp%0#4",
        "tmp%2#1"
      ],
      "stack_out": [
        "app#0",
        "tmp%0#4",
        "tmp%2#1"
      ]
    },
    "766": {
      "error": "ARC4 prefix is valid",
      "op": "assert // ARC4 prefix is valid",
      "stack_out": [
        "app#0",
        "tmp%0#4"
      ]
    },
    "767": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "tmp%0#4",
        "tmp%0#4 (copy)"
      ],
      "stack_out": [
        "app#0",
        "tmp%0#4",
        "tmp%0#4 (copy)"
      ]
    },
    "768": {
      "op": "intc_0 // 0",
      "stack_out": [
        "app#0",
        "tmp%0#4",
        "tmp%0#4 (copy)",
        "0"
      ]
    },
    "769": {
      "op": "extract_uint16",
      "defined_out": [
        "app#0",
        "item_start_offset%0#0",
        "tmp%0#4"
      ],
      "stack_out": [
        "app#0",
        "tmp%0#4",
        "item_start_offset%0#0"
      ]
    },
    "770": {
      "op": "dig 1",
      "stack_out": [
        "app#0",
        "tmp%0#4",
        "item_start_offset%0#0",
        "tmp%0#4 (copy)"
      ]
    },
    "772": {
      "op": "intc_3 // 2",
      "defined_out": [
        "2",
        "app#0",
        "item_start_offset%0#0",
        "tmp%0#4",
        "tmp%0#4 (copy)"
      ],
      "stack_out": [
        "app#0",
        "tmp%0#4",
        "item_start_offset%0#0",
        "tmp%0#4 (copy)",
        "2"
      ]
    },
    "773": {
      "op": "extract_uint16",
      "defined_out": [
        "app#0",
        "item_end_offset%0#0",
        "item_start_offset%0#0",
        "tmp%0#4"
      ],
      "stack_out": [
        "app#0",
        "tmp%0#4",
        "item_start_offset%0#0",
        "item_end_offset%0#0"
      ]
    },
    "774": {
      "op": "dig 2",
      "stack_out": [
        "app#0",
        "tmp%0#4",
        "item_start_offset%0#0",
        "item_end_offset%0#0",
        "tmp%0#4 (copy)"
      ]
    },
    "776": {
      "op": "uncover 2",
      "stack_out": [
        "app#0",
        "tmp%0#4",
        "item_end_offset%0#0",
        "tmp%0#4 (copy)",
        "item_start_offset%0#0"
      ]
    },
    "778": {
      "op": "dig 2",
      "defined_out": [
        "app#0",
        "item_end_offset%0#0",
        "item_end_offset%0#0 (copy)",
        "item_start_offset%0#0",
        "tmp%0#4",
        "tmp%0#4 (copy)"
      ],
      "stack_out": [
        "app#0",
        "tmp%0#4",
        "item_end_offset%0#0",
        "tmp%0#4 (copy)",
        "item_start_offset%0#0",
        "item_end_offset%0#0 (copy)"
      ]
    },
    "780": {
      "op": "substring3",
      "defined_out": [
        "app#0",
        "item0%0#0",
        "item_end_offset%0#0",
        "tmp%0#4"
      ],
      "stack_out": [
        "app#0",
        "tmp%0#4",
        "item_end_offset%0#0",
        "item0%0#0"
      ]
    },
    "781": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "item0%0#0",
        "item0%0#0 (copy)",
        "item_end_offset%0#0",
        "tmp%0#4"
      ],
      "stack_out": [
        "app#0",
        "tmp%0#4",
        "item_end_offset%0#0",
        "item0%0#0",
        "item0%0#0 (copy)"
      ]
    },
    "782": {
      "op": "intc_0 // 0",
      "stack_out": [
        "app#0",
        "tmp%0#4",
        "item_end_offset%0#0",
        "item0%0#0",
        "item0%0#0 (copy)",
        "0"
      ]
    },
    "783": {
      "op": "extract_uint16",
      "defined_out": [
        "app#0",
        "item0%0#0",
        "item_end_offset%0#0",
        "item_start_offset%1#0",
        "tmp%0#4"
      ],
      "stack_out": [
        "app#0",
        "tmp%0#4",
        "item_end_offset%0#0",
        "item0%0#0",
        "item_start_offset%1#0"
      ]
    },
    "784": {
      "op": "dig 1",
      "stack_out": [
        "app#0",
        "tmp%0#4",
        "item_end_offset%0#0",
        "item0%0#0",
        "item_start_offset%1#0",
        "item0%0#0 (copy)"
      ]
    },
    "786": {
      "op": "intc_3 // 2",
      "stack_out": [
        "app#0",
        "tmp%0#4",
        "item_end_offset%0#0",
        "item0%0#0",
        "item_start_offset%1#0",
        "item0%0#0 (copy)",
        "2"
      ]
    },
    "787": {
      "op": "extract_uint16",
      "defined_out": [
        "app#0",
        "item0%0#0",
        "item_end_offset%0#0",
        "item_end_offset%1#0",
        "item_start_offset%1#0",
        "tmp%0#4"
      ],
      "stack_out": [
        "app#0",
        "tmp%0#4",
        "item_end_offset%0#0",
        "item0%0#0",
        "item_start_offset%1#0",
        "item_end_offset%1#0"
      ]
    },
    "788": {
      "op": "dig 2",
      "stack_out": [
        "app#0",
        "tmp%0#4",
        "item_end_offset%0#0",
        "item0%0#0",
        "item_start_offset%1#0",
        "item_end_offset%1#0",
        "item0%0#0 (copy)"
      ]
    },
    "790": {
      "op": "uncover 2",
      "stack_out": [
        "app#0",
        "tmp%0#4",
        "item_end_offset%0#0",
        "item0%0#0",
        "item_end_offset%1#0",
        "item0%0#0 (copy)",
        "item_start_offset%1#0"
      ]
    },
    "792": {
      "op": "dig 2",
      "defined_out": [
        "app#0",
        "item0%0#0",
        "item0%0#0 (copy)",
        "item_end_offset%0#0",
        "item_end_offset%1#0",
        "item_end_offset%1#0 (copy)",
        "item_start_offset%1#0",
        "tmp%0#4"
      ],
      "stack_out": [
        "app#0",
        "tmp%0#4",
        "item_end_offset%0#0",
        "item0%0#0",
        "item_end_offset%1#0",
        "item0%0#0 (copy)",
        "item_start_offset%1#0",
        "item_end_offset%1#0 (copy)"
      ]
    },
    "794": {
      "op": "substring3",
      "defined_out": [
        "app#0",
        "item0%0#0",
        "item0%1#0",
        "item_end_offset%0#0",
        "item_end_offset%1#0",
        "tmp%0#4"
      ],
      "stack_out": [
        "app#0",
        "tmp%0#4",
        "item_end_offset%0#0",
        "item0%0#0",
        "item_end_offset%1#0",
        "item0%1#0"
      ]
    },
    "795": {
      "op": "extract 2 0",
      "defined_out": [
        "app#0",
        "item0%0#0",
        "item_end_offset%0#0",
        "item_end_offset%1#0",
        "result.0.0#0",
        "tmp%0#4"
      ],
      "stack_out": [
        "app#0",
        "tmp%0#4",
        "item_end_offset%0#0",
        "item0%0#0",
        "item_end_offset%1#0",
        "result.0.0#0"
      ]
    },
    "798": {
      "op": "dig 2",
      "stack_out": [
        "app#0",
        "tmp%0#4",
        "item_end_offset%0#0",
        "item0%0#0",
        "item_end_offset%1#0",
        "result.0.0#0",
        "item0%0#0 (copy)"
      ]
    },
    "800": {
      "op": "len",
      "defined_out": [
        "app#0",
        "item0%0#0",
        "item_end_offset%0#0",
        "item_end_offset%1#0",
        "item_end_offset%2#0",
        "result.0.0#0",
        "tmp%0#4"
      ],
      "stack_out": [
        "app#0",
        "tmp%0#4",
        "item_end_offset%0#0",
        "item0%0#0",
        "item_end_offset%1#0",
        "result.0.0#0",
        "item_end_offset%2#0"
      ]
    },
    "801": {
      "op": "swap"
    },
    "802": {
      "op": "cover 3",
      "stack_out": [
        "app#0",
        "tmp%0#4",
        "item_end_offset%0#0",
        "result.0.0#0",
        "item0%0#0",
        "item_end_offset%1#0",
        "item_end_offset%2#0"
      ]
    },
    "804": {
      "op": "substring3",
      "defined_out": [
        "app#0",
        "item_end_offset%0#0",
        "result.0.0#0",
        "result.0.1#0",
        "tmp%0#4"
      ],
      "stack_out": [
        "app#0",
        "tmp%0#4",
        "item_end_offset%0#0",
        "result.0.0#0",
        "result.0.1#0"
      ]
    },
    "805": {
      "op": "dig 3",
      "stack_out": [
        "app#0",
        "tmp%0#4",
        "item_end_offset%0#0",
        "result.0.0#0",
        "result.0.1#0",
        "tmp%0#4 (copy)"
      ]
    },
    "807": {
      "op": "len",
      "defined_out": [
        "app#0",
        "item_end_offset%0#0",
        "item_end_offset%3#0",
        "result.0.0#0",
        "result.0.1#0",
        "tmp%0#4"
      ],
      "stack_out": [
        "app#0",
        "tmp%0#4",
        "item_end_offset%0#0",
        "result.0.0#0",
        "result.0.1#0",
        "item_end_offset%3#0"
      ]
    },
    "808": {
      "op": "uncover 4"
    },
    "810": {
      "op": "uncover 4",
      "stack_out": [
        "app#0",
        "result.0.0#0",
        "result.0.1#0",
        "item_end_offset%3#0",
        "tmp%0#4",
        "item_end_offset%0#0"
      ]
    },
    "812": {
      "op": "uncover 2",
      "stack_out": [
        "app#0",
        "result.0.0#0",
        "result.0.1#0",
        "tmp%0#4",
        "item_end_offset%0#0",
        "item_end_offset%3#0"
      ]
    },
    "814": {
      "op": "substring3",
      "defined_out": [
        "app#0",
        "item1%1#0",
        "result.0.0#0",
        "result.0.1#0"
      ],
      "stack_out": [
        "app#0",
        "result.0.0#0",
        "result.0.1#0",
        "item1%1#0"
      ]
    },
    "815": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "item1%1#0",
        "item1%1#0 (copy)",
        "result.0.0#0",
        "result.0.1#0"
      ],
      "stack_out": [
        "app#0",
        "result.0.0#0",
        "result.0.1#0",
        "item1%1#0",
        "item1%1#0 (copy)"
      ]
    },
    "816": {
      "op": "intc_0 // 0",
      "stack_out": [
        "app#0",
        "result.0.0#0",
        "result.0.1#0",
        "item1%1#0",
        "item1%1#0 (copy)",
        "0"
      ]
    },
    "817": {
      "op": "extract_uint64",
      "defined_out": [
        "app#0",
        "item1%1#0",
        "result.0.0#0",
        "result.0.1#0",
        "result.1.0#0"
      ],
      "stack_out": [
        "app#0",
        "result.0.0#0",
        "result.0.1#0",
        "item1%1#0",
        "result.1.0#0"
      ]
    },
    "818": {
      "op": "dig 1",
      "stack_out": [
        "app#0",
        "result.0.0#0",
        "result.0.1#0",
        "item1%1#0",
        "result.1.0#0",
        "item1%1#0 (copy)"
      ]
    },
    "820": {
      "error": "Index access is out of bounds",
      "op": "extract 8 8 // on error: Index access is out of bounds",
      "defined_out": [
        "app#0",
        "item1%1#0",
        "result.0.0#0",
        "result.0.1#0",
        "result.1.0#0",
        "result.1.1#0"
      ],
      "stack_out": [
        "app#0",
        "result.0.0#0",
        "result.0.1#0",
        "item1%1#0",
        "result.1.0#0",
        "result.1.1#0"
      ]
    },
    "823": {
      "op": "dig 2",
      "stack_out": [
        "app#0",
        "result.0.0#0",
        "result.0.1#0",
        "item1%1#0",
        "result.1.0#0",
        "result.1.1#0",
        "item1%1#0 (copy)"
      ]
    },
    "825": {
      "op": "pushint 16 // 16",
      "defined_out": [
        "16",
        "app#0",
        "item1%1#0",
        "item1%1#0 (copy)",
        "result.0.0#0",
        "result.0.1#0",
        "result.1.0#0",
        "result.1.1#0"
      ],
      "stack_out": [
        "app#0",
        "result.0.0#0",
        "result.0.1#0",
        "item1%1#0",
        "result.1.0#0",
        "result.1.1#0",
        "item1%1#0 (copy)",
        "16"
      ]
    },
    "827": {
      "op": "extract_uint16",
      "defined_out": [
        "app#0",
        "item1%1#0",
        "item_start_offset%4#0",
        "result.0.0#0",
        "result.0.1#0",
        "result.1.0#0",
        "result.1.1#0"
      ],
      "stack_out": [
        "app#0",
        "result.0.0#0",
        "result.0.1#0",
        "item1%1#0",
        "result.1.0#0",
        "result.1.1#0",
        "item_start_offset%4#0"
      ]
    },
    "828": {
      "op": "dig 3",
      "stack_out": [
        "app#0",
        "result.0.0#0",
        "result.0.1#0",
        "item1%1#0",
        "result.1.0#0",
        "result.1.1#0",
        "item_start_offset%4#0",
        "item1%1#0 (copy)"
      ]
    },
    "830": {
      "op": "len",
      "defined_out": [
        "app#0",
        "item1%1#0",
        "item_end_offset%4#0",
        "item_start_offset%4#0",
        "result.0.0#0",
        "result.0.1#0",
        "result.1.0#0",
        "result.1.1#0"
      ],
      "stack_out": [
        "app#0",
        "result.0.0#0",
        "result.0.1#0",
        "item1%1#0",
        "result.1.0#0",
        "result.1.1#0",
        "item_start_offset%4#0",
        "item_end_offset%4#0"
      ]
    },
    "831": {
      "op": "uncover 4",
      "stack_out": [
        "app#0",
        "result.0.0#0",
        "result.0.1#0",
        "result.1.0#0",
        "result.1.1#0",
        "item_start_offset%4#0",
        "item_end_offset%4#0",
        "item1%1#0"
      ]
    },
    "833": {
      "op": "cover 2",
      "stack_out": [
        "app#0",
        "result.0.0#0",
        "result.0.1#0",
        "result.1.0#0",
        "result.1.1#0",
        "item1%1#0",
        "item_start_offset%4#0",
        "item_end_offset%4#0"
      ]
    },
    "835": {
      "op": "substring3",
      "defined_out": [
        "app#0",
        "item2%0#0",
        "result.0.0#0",
        "result.0.1#0",
        "result.1.0#0",
        "result.1.1#0"
      ],
      "stack_out": [
        "app#0",
        "result.0.0#0",
        "result.0.1#0",
        "result.1.0#0",
        "result.1.1#0",
        "item2%0#0"
      ]
    },
    "836": {
      "op": "extract 2 0",
      "defined_out": [
        "app#0",
        "result.0.0#0",
        "result.0.1#0",
        "result.1.0#0",
        "result.1.1#0",
        "result.1.2#0"
      ],
      "stack_out": [
        "app#0",
        "result.0.0#0",
        "result.0.1#0",
        "result.1.0#0",
        "result.1.1#0",
        "result.1.2#0"
      ]
    },
    "839": {
      "op": "uncover 4",
      "stack_out": [
        "app#0",
        "result.0.1#0",
        "result.1.0#0",
        "result.1.1#0",
        "result.1.2#0",
        "result.0.0#0"
      ]
    },
    "841": {
      "op": "bytec 8 // \"echo: s1\"",
      "defined_out": [
        "\"echo: s1\"",
        "app#0",
        "result.0.0#0",
        "result.0.1#0",
        "result.1.0#0",
        "result.1.1#0",
        "result.1.2#0"
      ],
      "stack_out": [
        "app#0",
        "result.0.1#0",
        "result.1.0#0",
        "result.1.1#0",
        "result.1.2#0",
        "result.0.0#0",
        "\"echo: s1\""
      ]
    },
    "843": {
      "op": "==",
      "defined_out": [
        "app#0",
        "result.0.1#0",
        "result.1.0#0",
        "result.1.1#0",
        "result.1.2#0",
        "tmp%3#1"
      ],
      "stack_out": [
        "app#0",
        "result.0.1#0",
        "result.1.0#0",
        "result.1.1#0",
        "result.1.2#0",
        "tmp%3#1"
      ]
    },
    "844": {
      "op": "assert",
      "stack_out": [
        "app#0",
        "result.0.1#0",
        "result.1.0#0",
        "result.1.1#0",
        "result.1.2#0"
      ]
    },
    "845": {
      "op": "uncover 3",
      "stack_out": [
        "app#0",
        "result.1.0#0",
        "result.1.1#0",
        "result.1.2#0",
        "result.0.1#0"
      ]
    },
    "847": {
      "op": "bytec 23 // 0x00086563686f3a207332",
      "defined_out": [
        "0x00086563686f3a207332",
        "app#0",
        "result.0.1#0",
        "result.1.0#0",
        "result.1.1#0",
        "result.1.2#0"
      ],
      "stack_out": [
        "app#0",
        "result.1.0#0",
        "result.1.1#0",
        "result.1.2#0",
        "result.0.1#0",
        "0x00086563686f3a207332"
      ]
    },
    "849": {
      "op": "==",
      "defined_out": [
        "app#0",
        "result.1.0#0",
        "result.1.1#0",
        "result.1.2#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "app#0",
        "result.1.0#0",
        "result.1.1#0",
        "result.1.2#0",
        "tmp%4#0"
      ]
    },
    "850": {
      "op": "assert",
      "stack_out": [
        "app#0",
        "result.1.0#0",
        "result.1.1#0",
        "result.1.2#0"
      ]
    },
    "851": {
      "op": "uncover 2",
      "stack_out": [
        "app#0",
        "result.1.1#0",
        "result.1.2#0",
        "result.1.0#0"
      ]
    },
    "853": {
      "op": "intc_3 // 2",
      "stack_out": [
        "app#0",
        "result.1.1#0",
        "result.1.2#0",
        "result.1.0#0",
        "2"
      ]
    },
    "854": {
      "op": "==",
      "defined_out": [
        "app#0",
        "result.1.1#0",
        "result.1.2#0",
        "tmp%5#2"
      ],
      "stack_out": [
        "app#0",
        "result.1.1#0",
        "result.1.2#0",
        "tmp%5#2"
      ]
    },
    "855": {
      "op": "assert",
      "stack_out": [
        "app#0",
        "result.1.1#0",
        "result.1.2#0"
      ]
    },
    "856": {
      "op": "swap",
      "stack_out": [
        "app#0",
        "result.1.2#0",
        "result.1.1#0"
      ]
    },
    "857": {
      "op": "bytec 12 // 0x0000000000000003",
      "defined_out": [
        "0x0000000000000003",
        "app#0",
        "result.1.1#0",
        "result.1.2#0"
      ],
      "stack_out": [
        "app#0",
        "result.1.2#0",
        "result.1.1#0",
        "0x0000000000000003"
      ]
    },
    "859": {
      "op": "b==",
      "defined_out": [
        "app#0",
        "result.1.2#0",
        "tmp%6#1"
      ],
      "stack_out": [
        "app#0",
        "result.1.2#0",
        "tmp%6#1"
      ]
    },
    "860": {
      "op": "assert",
      "stack_out": [
        "app#0",
        "result.1.2#0"
      ]
    },
    "861": {
      "op": "bytec 24 // 0x6563686f3a2033",
      "defined_out": [
        "0x6563686f3a2033",
        "app#0",
        "result.1.2#0"
      ],
      "stack_out": [
        "app#0",
        "result.1.2#0",
        "0x6563686f3a2033"
      ]
    },
    "863": {
      "op": "==",
      "defined_out": [
        "app#0",
        "tmp%7#1"
      ],
      "stack_out": [
        "app#0",
        "tmp%7#1"
      ]
    },
    "864": {
      "op": "assert",
      "stack_out": [
        "app#0"
      ]
    },
    "865": {
      "op": "itxn_begin"
    },
    "866": {
      "op": "dup",
      "stack_out": [
        "app#0",
        "app#0 (copy)"
      ]
    },
    "867": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "app#0"
      ]
    },
    "869": {
      "op": "bytec 11 // method \"echo_nested_tuple(((string,string),(uint64,uint64,byte[])))((string,string),(uint64,uint64,byte[]))\"",
      "stack_out": [
        "app#0",
        "Method(echo_nested_tuple(((string,string),(uint64,uint64,byte[])))((string,string),(uint64,uint64,byte[])))"
      ]
    },
    "871": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0"
      ]
    },
    "873": {
      "op": "bytec 22 // 0x00040010000400080002733100027332000000000000000100000000000000020012000133",
      "stack_out": [
        "app#0",
        "0x00040010000400080002733100027332000000000000000100000000000000020012000133"
      ]
    },
    "875": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0"
      ]
    },
    "877": {
      "op": "intc_1 // appl",
      "stack_out": [
        "app#0",
        "appl"
      ]
    },
    "878": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "app#0"
      ]
    },
    "880": {
      "op": "intc_0 // 0",
      "stack_out": [
        "app#0",
        "0"
      ]
    },
    "881": {
      "op": "itxn_field Fee",
      "stack_out": [
        "app#0"
      ]
    },
    "883": {
      "op": "itxn_submit"
    },
    "884": {
      "op": "itxn LastLog"
    },
    "886": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "awst_tmp%1#0",
        "awst_tmp%1#0 (copy)"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%1#0",
        "awst_tmp%1#0 (copy)"
      ]
    },
    "887": {
      "op": "extract 4 0",
      "defined_out": [
        "app#0",
        "awst_tmp%1#0",
        "tmp%8#3"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%1#0",
        "tmp%8#3"
      ]
    },
    "890": {
      "op": "swap",
      "stack_out": [
        "app#0",
        "tmp%8#3",
        "awst_tmp%1#0"
      ]
    },
    "891": {
      "op": "extract 0 4",
      "defined_out": [
        "app#0",
        "tmp%8#3",
        "tmp%9#0"
      ],
      "stack_out": [
        "app#0",
        "tmp%8#3",
        "tmp%9#0"
      ]
    },
    "894": {
      "op": "bytec_0 // 0x151f7c75",
      "stack_out": [
        "app#0",
        "tmp%8#3",
        "tmp%9#0",
        "0x151f7c75"
      ]
    },
    "895": {
      "op": "==",
      "defined_out": [
        "app#0",
        "tmp%10#2",
        "tmp%8#3"
      ],
      "stack_out": [
        "app#0",
        "tmp%8#3",
        "tmp%10#2"
      ]
    },
    "896": {
      "error": "ARC4 prefix is valid",
      "op": "assert // ARC4 prefix is valid",
      "stack_out": [
        "app#0",
        "tmp%8#3"
      ]
    },
    "897": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "tmp%8#3",
        "tmp%8#3 (copy)"
      ],
      "stack_out": [
        "app#0",
        "tmp%8#3",
        "tmp%8#3 (copy)"
      ]
    },
    "898": {
      "op": "intc_0 // 0",
      "stack_out": [
        "app#0",
        "tmp%8#3",
        "tmp%8#3 (copy)",
        "0"
      ]
    },
    "899": {
      "op": "extract_uint16",
      "defined_out": [
        "app#0",
        "item_start_offset%5#0",
        "tmp%8#3"
      ],
      "stack_out": [
        "app#0",
        "tmp%8#3",
        "item_start_offset%5#0"
      ]
    },
    "900": {
      "op": "dig 1",
      "stack_out": [
        "app#0",
        "tmp%8#3",
        "item_start_offset%5#0",
        "tmp%8#3 (copy)"
      ]
    },
    "902": {
      "op": "intc_3 // 2",
      "stack_out": [
        "app#0",
        "tmp%8#3",
        "item_start_offset%5#0",
        "tmp%8#3 (copy)",
        "2"
      ]
    },
    "903": {
      "op": "extract_uint16",
      "defined_out": [
        "app#0",
        "item_end_offset%5#0",
        "item_start_offset%5#0",
        "tmp%8#3"
      ],
      "stack_out": [
        "app#0",
        "tmp%8#3",
        "item_start_offset%5#0",
        "item_end_offset%5#0"
      ]
    },
    "904": {
      "op": "dig 2",
      "stack_out": [
        "app#0",
        "tmp%8#3",
        "item_start_offset%5#0",
        "item_end_offset%5#0",
        "tmp%8#3 (copy)"
      ]
    },
    "906": {
      "op": "uncover 2",
      "stack_out": [
        "app#0",
        "tmp%8#3",
        "item_end_offset%5#0",
        "tmp%8#3 (copy)",
        "item_start_offset%5#0"
      ]
    },
    "908": {
      "op": "dig 2",
      "defined_out": [
        "app#0",
        "item_end_offset%5#0",
        "item_end_offset%5#0 (copy)",
        "item_start_offset%5#0",
        "tmp%8#3",
        "tmp%8#3 (copy)"
      ],
      "stack_out": [
        "app#0",
        "tmp%8#3",
        "item_end_offset%5#0",
        "tmp%8#3 (copy)",
        "item_start_offset%5#0",
        "item_end_offset%5#0 (copy)"
      ]
    },
    "910": {
      "op": "substring3",
      "defined_out": [
        "app#0",
        "item0%3#0",
        "item_end_offset%5#0",
        "tmp%8#3"
      ],
      "stack_out": [
        "app#0",
        "tmp%8#3",
        "item_end_offset%5#0",
        "item0%3#0"
      ]
    },
    "911": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "item0%3#0",
        "item0%3#0 (copy)",
        "item_end_offset%5#0",
        "tmp%8#3"
      ],
      "stack_out": [
        "app#0",
        "tmp%8#3",
        "item_end_offset%5#0",
        "item0%3#0",
        "item0%3#0 (copy)"
      ]
    },
    "912": {
      "op": "intc_0 // 0",
      "stack_out": [
        "app#0",
        "tmp%8#3",
        "item_end_offset%5#0",
        "item0%3#0",
        "item0%3#0 (copy)",
        "0"
      ]
    },
    "913": {
      "op": "extract_uint16",
      "defined_out": [
        "app#0",
        "item0%3#0",
        "item_end_offset%5#0",
        "item_start_offset%6#0",
        "tmp%8#3"
      ],
      "stack_out": [
        "app#0",
        "tmp%8#3",
        "item_end_offset%5#0",
        "item0%3#0",
        "item_start_offset%6#0"
      ]
    },
    "914": {
      "op": "dig 1",
      "stack_out": [
        "app#0",
        "tmp%8#3",
        "item_end_offset%5#0",
        "item0%3#0",
        "item_start_offset%6#0",
        "item0%3#0 (copy)"
      ]
    },
    "916": {
      "op": "intc_3 // 2",
      "stack_out": [
        "app#0",
        "tmp%8#3",
        "item_end_offset%5#0",
        "item0%3#0",
        "item_start_offset%6#0",
        "item0%3#0 (copy)",
        "2"
      ]
    },
    "917": {
      "op": "extract_uint16",
      "defined_out": [
        "app#0",
        "item0%3#0",
        "item_end_offset%5#0",
        "item_end_offset%6#0",
        "item_start_offset%6#0",
        "tmp%8#3"
      ],
      "stack_out": [
        "app#0",
        "tmp%8#3",
        "item_end_offset%5#0",
        "item0%3#0",
        "item_start_offset%6#0",
        "item_end_offset%6#0"
      ]
    },
    "918": {
      "op": "dig 2",
      "stack_out": [
        "app#0",
        "tmp%8#3",
        "item_end_offset%5#0",
        "item0%3#0",
        "item_start_offset%6#0",
        "item_end_offset%6#0",
        "item0%3#0 (copy)"
      ]
    },
    "920": {
      "op": "uncover 2",
      "stack_out": [
        "app#0",
        "tmp%8#3",
        "item_end_offset%5#0",
        "item0%3#0",
        "item_end_offset%6#0",
        "item0%3#0 (copy)",
        "item_start_offset%6#0"
      ]
    },
    "922": {
      "op": "dig 2",
      "defined_out": [
        "app#0",
        "item0%3#0",
        "item0%3#0 (copy)",
        "item_end_offset%5#0",
        "item_end_offset%6#0",
        "item_end_offset%6#0 (copy)",
        "item_start_offset%6#0",
        "tmp%8#3"
      ],
      "stack_out": [
        "app#0",
        "tmp%8#3",
        "item_end_offset%5#0",
        "item0%3#0",
        "item_end_offset%6#0",
        "item0%3#0 (copy)",
        "item_start_offset%6#0",
        "item_end_offset%6#0 (copy)"
      ]
    },
    "924": {
      "op": "substring3",
      "defined_out": [
        "app#0",
        "item0%3#0",
        "item0%4#0",
        "item_end_offset%5#0",
        "item_end_offset%6#0",
        "tmp%8#3"
      ],
      "stack_out": [
        "app#0",
        "tmp%8#3",
        "item_end_offset%5#0",
        "item0%3#0",
        "item_end_offset%6#0",
        "item0%4#0"
      ]
    },
    "925": {
      "op": "extract 2 0",
      "stack_out": [
        "app#0",
        "tmp%8#3",
        "item_end_offset%5#0",
        "item0%3#0",
        "item_end_offset%6#0",
        "result.0.0#0"
      ]
    },
    "928": {
      "op": "dig 2",
      "stack_out": [
        "app#0",
        "tmp%8#3",
        "item_end_offset%5#0",
        "item0%3#0",
        "item_end_offset%6#0",
        "result.0.0#0",
        "item0%3#0 (copy)"
      ]
    },
    "930": {
      "op": "len",
      "defined_out": [
        "app#0",
        "item0%3#0",
        "item_end_offset%5#0",
        "item_end_offset%6#0",
        "item_end_offset%7#0",
        "result.0.0#0",
        "tmp%8#3"
      ],
      "stack_out": [
        "app#0",
        "tmp%8#3",
        "item_end_offset%5#0",
        "item0%3#0",
        "item_end_offset%6#0",
        "result.0.0#0",
        "item_end_offset%7#0"
      ]
    },
    "931": {
      "op": "swap"
    },
    "932": {
      "op": "cover 3",
      "stack_out": [
        "app#0",
        "tmp%8#3",
        "item_end_offset%5#0",
        "result.0.0#0",
        "item0%3#0",
        "item_end_offset%6#0",
        "item_end_offset%7#0"
      ]
    },
    "934": {
      "op": "substring3",
      "stack_out": [
        "app#0",
        "tmp%8#3",
        "item_end_offset%5#0",
        "result.0.0#0",
        "result.0.1#0"
      ]
    },
    "935": {
      "op": "dig 3",
      "stack_out": [
        "app#0",
        "tmp%8#3",
        "item_end_offset%5#0",
        "result.0.0#0",
        "result.0.1#0",
        "tmp%8#3 (copy)"
      ]
    },
    "937": {
      "op": "len",
      "defined_out": [
        "app#0",
        "item_end_offset%5#0",
        "item_end_offset%8#0",
        "result.0.0#0",
        "result.0.1#0",
        "tmp%8#3"
      ],
      "stack_out": [
        "app#0",
        "tmp%8#3",
        "item_end_offset%5#0",
        "result.0.0#0",
        "result.0.1#0",
        "item_end_offset%8#0"
      ]
    },
    "938": {
      "op": "uncover 4"
    },
    "940": {
      "op": "uncover 4",
      "stack_out": [
        "app#0",
        "result.0.0#0",
        "result.0.1#0",
        "item_end_offset%8#0",
        "tmp%8#3",
        "item_end_offset%5#0"
      ]
    },
    "942": {
      "op": "uncover 2",
      "stack_out": [
        "app#0",
        "result.0.0#0",
        "result.0.1#0",
        "tmp%8#3",
        "item_end_offset%5#0",
        "item_end_offset%8#0"
      ]
    },
    "944": {
      "op": "substring3",
      "defined_out": [
        "app#0",
        "item1%4#0",
        "result.0.0#0",
        "result.0.1#0"
      ],
      "stack_out": [
        "app#0",
        "result.0.0#0",
        "result.0.1#0",
        "item1%4#0"
      ]
    },
    "945": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "item1%4#0",
        "item1%4#0 (copy)",
        "result.0.0#0",
        "result.0.1#0"
      ],
      "stack_out": [
        "app#0",
        "result.0.0#0",
        "result.0.1#0",
        "item1%4#0",
        "item1%4#0 (copy)"
      ]
    },
    "946": {
      "op": "intc_0 // 0",
      "stack_out": [
        "app#0",
        "result.0.0#0",
        "result.0.1#0",
        "item1%4#0",
        "item1%4#0 (copy)",
        "0"
      ]
    },
    "947": {
      "op": "extract_uint64",
      "stack_out": [
        "app#0",
        "result.0.0#0",
        "result.0.1#0",
        "item1%4#0",
        "result.1.0#0"
      ]
    },
    "948": {
      "op": "dig 1",
      "stack_out": [
        "app#0",
        "result.0.0#0",
        "result.0.1#0",
        "item1%4#0",
        "result.1.0#0",
        "item1%4#0 (copy)"
      ]
    },
    "950": {
      "error": "Index access is out of bounds",
      "op": "extract 8 8 // on error: Index access is out of bounds",
      "stack_out": [
        "app#0",
        "result.0.0#0",
        "result.0.1#0",
        "item1%4#0",
        "result.1.0#0",
        "result.1.1#0"
      ]
    },
    "953": {
      "op": "dig 2",
      "stack_out": [
        "app#0",
        "result.0.0#0",
        "result.0.1#0",
        "item1%4#0",
        "result.1.0#0",
        "result.1.1#0",
        "item1%4#0 (copy)"
      ]
    },
    "955": {
      "op": "pushint 16 // 16",
      "stack_out": [
        "app#0",
        "result.0.0#0",
        "result.0.1#0",
        "item1%4#0",
        "result.1.0#0",
        "result.1.1#0",
        "item1%4#0 (copy)",
        "16"
      ]
    },
    "957": {
      "op": "extract_uint16",
      "defined_out": [
        "app#0",
        "item1%4#0",
        "item_start_offset%9#0",
        "result.0.0#0",
        "result.0.1#0",
        "result.1.0#0",
        "result.1.1#0"
      ],
      "stack_out": [
        "app#0",
        "result.0.0#0",
        "result.0.1#0",
        "item1%4#0",
        "result.1.0#0",
        "result.1.1#0",
        "item_start_offset%9#0"
      ]
    },
    "958": {
      "op": "dig 3",
      "stack_out": [
        "app#0",
        "result.0.0#0",
        "result.0.1#0",
        "item1%4#0",
        "result.1.0#0",
        "result.1.1#0",
        "item_start_offset%9#0",
        "item1%4#0 (copy)"
      ]
    },
    "960": {
      "op": "len",
      "defined_out": [
        "app#0",
        "item1%4#0",
        "item_end_offset%9#0",
        "item_start_offset%9#0",
        "result.0.0#0",
        "result.0.1#0",
        "result.1.0#0",
        "result.1.1#0"
      ],
      "stack_out": [
        "app#0",
        "result.0.0#0",
        "result.0.1#0",
        "item1%4#0",
        "result.1.0#0",
        "result.1.1#0",
        "item_start_offset%9#0",
        "item_end_offset%9#0"
      ]
    },
    "961": {
      "op": "uncover 4",
      "stack_out": [
        "app#0",
        "result.0.0#0",
        "result.0.1#0",
        "result.1.0#0",
        "result.1.1#0",
        "item_start_offset%9#0",
        "item_end_offset%9#0",
        "item1%4#0"
      ]
    },
    "963": {
      "op": "cover 2",
      "stack_out": [
        "app#0",
        "result.0.0#0",
        "result.0.1#0",
        "result.1.0#0",
        "result.1.1#0",
        "item1%4#0",
        "item_start_offset%9#0",
        "item_end_offset%9#0"
      ]
    },
    "965": {
      "op": "substring3",
      "defined_out": [
        "app#0",
        "item2%1#0",
        "result.0.0#0",
        "result.0.1#0",
        "result.1.0#0",
        "result.1.1#0"
      ],
      "stack_out": [
        "app#0",
        "result.0.0#0",
        "result.0.1#0",
        "result.1.0#0",
        "result.1.1#0",
        "item2%1#0"
      ]
    },
    "966": {
      "op": "extract 2 0",
      "stack_out": [
        "app#0",
        "result.0.0#0",
        "result.0.1#0",
        "result.1.0#0",
        "result.1.1#0",
        "result.1.2#0"
      ]
    },
    "969": {
      "op": "uncover 4",
      "stack_out": [
        "app#0",
        "result.0.1#0",
        "result.1.0#0",
        "result.1.1#0",
        "result.1.2#0",
        "result.0.0#0"
      ]
    },
    "971": {
      "op": "bytec 8 // \"echo: s1\"",
      "stack_out": [
        "app#0",
        "result.0.1#0",
        "result.1.0#0",
        "result.1.1#0",
        "result.1.2#0",
        "result.0.0#0",
        "\"echo: s1\""
      ]
    },
    "973": {
      "op": "==",
      "defined_out": [
        "app#0",
        "result.0.1#0",
        "result.1.0#0",
        "result.1.1#0",
        "result.1.2#0",
        "tmp%11#1"
      ],
      "stack_out": [
        "app#0",
        "result.0.1#0",
        "result.1.0#0",
        "result.1.1#0",
        "result.1.2#0",
        "tmp%11#1"
      ]
    },
    "974": {
      "op": "assert",
      "stack_out": [
        "app#0",
        "result.0.1#0",
        "result.1.0#0",
        "result.1.1#0",
        "result.1.2#0"
      ]
    },
    "975": {
      "op": "uncover 3",
      "stack_out": [
        "app#0",
        "result.1.0#0",
        "result.1.1#0",
        "result.1.2#0",
        "result.0.1#0"
      ]
    },
    "977": {
      "op": "bytec 23 // 0x00086563686f3a207332",
      "stack_out": [
        "app#0",
        "result.1.0#0",
        "result.1.1#0",
        "result.1.2#0",
        "result.0.1#0",
        "0x00086563686f3a207332"
      ]
    },
    "979": {
      "op": "==",
      "defined_out": [
        "app#0",
        "result.1.0#0",
        "result.1.1#0",
        "result.1.2#0",
        "tmp%12#1"
      ],
      "stack_out": [
        "app#0",
        "result.1.0#0",
        "result.1.1#0",
        "result.1.2#0",
        "tmp%12#1"
      ]
    },
    "980": {
      "op": "assert",
      "stack_out": [
        "app#0",
        "result.1.0#0",
        "result.1.1#0",
        "result.1.2#0"
      ]
    },
    "981": {
      "op": "uncover 2",
      "stack_out": [
        "app#0",
        "result.1.1#0",
        "result.1.2#0",
        "result.1.0#0"
      ]
    },
    "983": {
      "op": "intc_3 // 2",
      "stack_out": [
        "app#0",
        "result.1.1#0",
        "result.1.2#0",
        "result.1.0#0",
        "2"
      ]
    },
    "984": {
      "op": "==",
      "defined_out": [
        "app#0",
        "result.1.1#0",
        "result.1.2#0",
        "tmp%13#2"
      ],
      "stack_out": [
        "app#0",
        "result.1.1#0",
        "result.1.2#0",
        "tmp%13#2"
      ]
    },
    "985": {
      "op": "assert",
      "stack_out": [
        "app#0",
        "result.1.1#0",
        "result.1.2#0"
      ]
    },
    "986": {
      "op": "swap",
      "stack_out": [
        "app#0",
        "result.1.2#0",
        "result.1.1#0"
      ]
    },
    "987": {
      "op": "bytec 12 // 0x0000000000000003",
      "stack_out": [
        "app#0",
        "result.1.2#0",
        "result.1.1#0",
        "0x0000000000000003"
      ]
    },
    "989": {
      "op": "b==",
      "defined_out": [
        "app#0",
        "result.1.2#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "app#0",
        "result.1.2#0",
        "tmp%14#0"
      ]
    },
    "990": {
      "op": "assert",
      "stack_out": [
        "app#0",
        "result.1.2#0"
      ]
    },
    "991": {
      "op": "bytec 24 // 0x6563686f3a2033",
      "stack_out": [
        "app#0",
        "result.1.2#0",
        "0x6563686f3a2033"
      ]
    },
    "993": {
      "op": "==",
      "defined_out": [
        "app#0",
        "tmp%15#1"
      ],
      "stack_out": [
        "app#0",
        "tmp%15#1"
      ]
    },
    "994": {
      "op": "assert",
      "stack_out": [
        "app#0"
      ]
    },
    "995": {
      "op": "itxn_begin"
    },
    "996": {
      "op": "itxn_field ApplicationID",
      "stack_out": []
    },
    "998": {
      "op": "bytec 11 // method \"echo_nested_tuple(((string,string),(uint64,uint64,byte[])))((string,string),(uint64,uint64,byte[]))\"",
      "stack_out": [
        "Method(echo_nested_tuple(((string,string),(uint64,uint64,byte[])))((string,string),(uint64,uint64,byte[])))"
      ]
    },
    "1000": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "1002": {
      "op": "pushbytes 0x000400120004000900037331620003733262000000000000000b0000000000000015001200023362",
      "defined_out": [
        "0x000400120004000900037331620003733262000000000000000b0000000000000015001200023362"
      ],
      "stack_out": [
        "0x000400120004000900037331620003733262000000000000000b0000000000000015001200023362"
      ]
    },
    "1044": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "1046": {
      "op": "intc_1 // appl",
      "stack_out": [
        "appl"
      ]
    },
    "1047": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "1049": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0"
      ]
    },
    "1050": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "1052": {
      "op": "itxn_submit"
    },
    "1053": {
      "op": "itxn LastLog"
    },
    "1055": {
      "op": "dup",
      "defined_out": [
        "awst_tmp%2#0",
        "awst_tmp%2#0 (copy)"
      ],
      "stack_out": [
        "awst_tmp%2#0",
        "awst_tmp%2#0 (copy)"
      ]
    },
    "1056": {
      "op": "extract 4 0",
      "defined_out": [
        "awst_tmp%2#0",
        "tmp%16#2"
      ],
      "stack_out": [
        "awst_tmp%2#0",
        "tmp%16#2"
      ]
    },
    "1059": {
      "op": "swap",
      "stack_out": [
        "tmp%16#2",
        "awst_tmp%2#0"
      ]
    },
    "1060": {
      "op": "extract 0 4",
      "defined_out": [
        "tmp%16#2",
        "tmp%17#1"
      ],
      "stack_out": [
        "tmp%16#2",
        "tmp%17#1"
      ]
    },
    "1063": {
      "op": "bytec_0 // 0x151f7c75",
      "stack_out": [
        "tmp%16#2",
        "tmp%17#1",
        "0x151f7c75"
      ]
    },
    "1064": {
      "op": "==",
      "defined_out": [
        "tmp%16#2",
        "tmp%18#1"
      ],
      "stack_out": [
        "tmp%16#2",
        "tmp%18#1"
      ]
    },
    "1065": {
      "error": "ARC4 prefix is valid",
      "op": "assert // ARC4 prefix is valid",
      "stack_out": [
        "tmp%16#2"
      ]
    },
    "1066": {
      "op": "dup",
      "defined_out": [
        "tmp%16#2",
        "tmp%16#2 (copy)"
      ],
      "stack_out": [
        "tmp%16#2",
        "tmp%16#2 (copy)"
      ]
    },
    "1067": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%16#2",
        "tmp%16#2 (copy)",
        "0"
      ]
    },
    "1068": {
      "op": "extract_uint16",
      "defined_out": [
        "item_start_offset%10#0",
        "tmp%16#2"
      ],
      "stack_out": [
        "tmp%16#2",
        "item_start_offset%10#0"
      ]
    },
    "1069": {
      "op": "dig 1",
      "stack_out": [
        "tmp%16#2",
        "item_start_offset%10#0",
        "tmp%16#2 (copy)"
      ]
    },
    "1071": {
      "op": "intc_3 // 2",
      "stack_out": [
        "tmp%16#2",
        "item_start_offset%10#0",
        "tmp%16#2 (copy)",
        "2"
      ]
    },
    "1072": {
      "op": "extract_uint16",
      "defined_out": [
        "item_end_offset%10#0",
        "item_start_offset%10#0",
        "tmp%16#2"
      ],
      "stack_out": [
        "tmp%16#2",
        "item_start_offset%10#0",
        "item_end_offset%10#0"
      ]
    },
    "1073": {
      "op": "dig 2",
      "stack_out": [
        "tmp%16#2",
        "item_start_offset%10#0",
        "item_end_offset%10#0",
        "tmp%16#2 (copy)"
      ]
    },
    "1075": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%16#2",
        "item_end_offset%10#0",
        "tmp%16#2 (copy)",
        "item_start_offset%10#0"
      ]
    },
    "1077": {
      "op": "dig 2",
      "defined_out": [
        "item_end_offset%10#0",
        "item_end_offset%10#0 (copy)",
        "item_start_offset%10#0",
        "tmp%16#2",
        "tmp%16#2 (copy)"
      ],
      "stack_out": [
        "tmp%16#2",
        "item_end_offset%10#0",
        "tmp%16#2 (copy)",
        "item_start_offset%10#0",
        "item_end_offset%10#0 (copy)"
      ]
    },
    "1079": {
      "op": "substring3",
      "defined_out": [
        "item0%6#0",
        "item_end_offset%10#0",
        "tmp%16#2"
      ],
      "stack_out": [
        "tmp%16#2",
        "item_end_offset%10#0",
        "item0%6#0"
      ]
    },
    "1080": {
      "op": "dup",
      "defined_out": [
        "item0%6#0",
        "item0%6#0 (copy)",
        "item_end_offset%10#0",
        "tmp%16#2"
      ],
      "stack_out": [
        "tmp%16#2",
        "item_end_offset%10#0",
        "item0%6#0",
        "item0%6#0 (copy)"
      ]
    },
    "1081": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%16#2",
        "item_end_offset%10#0",
        "item0%6#0",
        "item0%6#0 (copy)",
        "0"
      ]
    },
    "1082": {
      "op": "extract_uint16",
      "defined_out": [
        "item0%6#0",
        "item_end_offset%10#0",
        "item_start_offset%11#0",
        "tmp%16#2"
      ],
      "stack_out": [
        "tmp%16#2",
        "item_end_offset%10#0",
        "item0%6#0",
        "item_start_offset%11#0"
      ]
    },
    "1083": {
      "op": "dig 1",
      "stack_out": [
        "tmp%16#2",
        "item_end_offset%10#0",
        "item0%6#0",
        "item_start_offset%11#0",
        "item0%6#0 (copy)"
      ]
    },
    "1085": {
      "op": "intc_3 // 2",
      "stack_out": [
        "tmp%16#2",
        "item_end_offset%10#0",
        "item0%6#0",
        "item_start_offset%11#0",
        "item0%6#0 (copy)",
        "2"
      ]
    },
    "1086": {
      "op": "extract_uint16",
      "defined_out": [
        "item0%6#0",
        "item_end_offset%10#0",
        "item_end_offset%11#0",
        "item_start_offset%11#0",
        "tmp%16#2"
      ],
      "stack_out": [
        "tmp%16#2",
        "item_end_offset%10#0",
        "item0%6#0",
        "item_start_offset%11#0",
        "item_end_offset%11#0"
      ]
    },
    "1087": {
      "op": "dig 2",
      "stack_out": [
        "tmp%16#2",
        "item_end_offset%10#0",
        "item0%6#0",
        "item_start_offset%11#0",
        "item_end_offset%11#0",
        "item0%6#0 (copy)"
      ]
    },
    "1089": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%16#2",
        "item_end_offset%10#0",
        "item0%6#0",
        "item_end_offset%11#0",
        "item0%6#0 (copy)",
        "item_start_offset%11#0"
      ]
    },
    "1091": {
      "op": "dig 2",
      "defined_out": [
        "item0%6#0",
        "item0%6#0 (copy)",
        "item_end_offset%10#0",
        "item_end_offset%11#0",
        "item_end_offset%11#0 (copy)",
        "item_start_offset%11#0",
        "tmp%16#2"
      ],
      "stack_out": [
        "tmp%16#2",
        "item_end_offset%10#0",
        "item0%6#0",
        "item_end_offset%11#0",
        "item0%6#0 (copy)",
        "item_start_offset%11#0",
        "item_end_offset%11#0 (copy)"
      ]
    },
    "1093": {
      "op": "substring3",
      "defined_out": [
        "item0%6#0",
        "item0%7#0",
        "item_end_offset%10#0",
        "item_end_offset%11#0",
        "tmp%16#2"
      ],
      "stack_out": [
        "tmp%16#2",
        "item_end_offset%10#0",
        "item0%6#0",
        "item_end_offset%11#0",
        "item0%7#0"
      ]
    },
    "1094": {
      "op": "extract 2 0",
      "stack_out": [
        "tmp%16#2",
        "item_end_offset%10#0",
        "item0%6#0",
        "item_end_offset%11#0",
        "result.0.0#0"
      ]
    },
    "1097": {
      "op": "dig 2",
      "stack_out": [
        "tmp%16#2",
        "item_end_offset%10#0",
        "item0%6#0",
        "item_end_offset%11#0",
        "result.0.0#0",
        "item0%6#0 (copy)"
      ]
    },
    "1099": {
      "op": "len",
      "defined_out": [
        "item0%6#0",
        "item_end_offset%10#0",
        "item_end_offset%11#0",
        "item_end_offset%12#0",
        "result.0.0#0",
        "tmp%16#2"
      ],
      "stack_out": [
        "tmp%16#2",
        "item_end_offset%10#0",
        "item0%6#0",
        "item_end_offset%11#0",
        "result.0.0#0",
        "item_end_offset%12#0"
      ]
    },
    "1100": {
      "op": "swap"
    },
    "1101": {
      "op": "cover 3",
      "stack_out": [
        "tmp%16#2",
        "item_end_offset%10#0",
        "result.0.0#0",
        "item0%6#0",
        "item_end_offset%11#0",
        "item_end_offset%12#0"
      ]
    },
    "1103": {
      "op": "substring3",
      "stack_out": [
        "tmp%16#2",
        "item_end_offset%10#0",
        "result.0.0#0",
        "result.0.1#0"
      ]
    },
    "1104": {
      "op": "dig 3",
      "stack_out": [
        "tmp%16#2",
        "item_end_offset%10#0",
        "result.0.0#0",
        "result.0.1#0",
        "tmp%16#2 (copy)"
      ]
    },
    "1106": {
      "op": "len",
      "defined_out": [
        "item_end_offset%10#0",
        "item_end_offset%13#0",
        "result.0.0#0",
        "result.0.1#0",
        "tmp%16#2"
      ],
      "stack_out": [
        "tmp%16#2",
        "item_end_offset%10#0",
        "result.0.0#0",
        "result.0.1#0",
        "item_end_offset%13#0"
      ]
    },
    "1107": {
      "op": "uncover 4"
    },
    "1109": {
      "op": "uncover 4",
      "stack_out": [
        "result.0.0#0",
        "result.0.1#0",
        "item_end_offset%13#0",
        "tmp%16#2",
        "item_end_offset%10#0"
      ]
    },
    "1111": {
      "op": "uncover 2",
      "stack_out": [
        "result.0.0#0",
        "result.0.1#0",
        "tmp%16#2",
        "item_end_offset%10#0",
        "item_end_offset%13#0"
      ]
    },
    "1113": {
      "op": "substring3",
      "defined_out": [
        "item1%7#0",
        "result.0.0#0",
        "result.0.1#0"
      ],
      "stack_out": [
        "result.0.0#0",
        "result.0.1#0",
        "item1%7#0"
      ]
    },
    "1114": {
      "op": "dup",
      "defined_out": [
        "item1%7#0",
        "item1%7#0 (copy)",
        "result.0.0#0",
        "result.0.1#0"
      ],
      "stack_out": [
        "result.0.0#0",
        "result.0.1#0",
        "item1%7#0",
        "item1%7#0 (copy)"
      ]
    },
    "1115": {
      "op": "intc_0 // 0",
      "stack_out": [
        "result.0.0#0",
        "result.0.1#0",
        "item1%7#0",
        "item1%7#0 (copy)",
        "0"
      ]
    },
    "1116": {
      "op": "extract_uint64",
      "stack_out": [
        "result.0.0#0",
        "result.0.1#0",
        "item1%7#0",
        "result.1.0#0"
      ]
    },
    "1117": {
      "op": "dig 1",
      "stack_out": [
        "result.0.0#0",
        "result.0.1#0",
        "item1%7#0",
        "result.1.0#0",
        "item1%7#0 (copy)"
      ]
    },
    "1119": {
      "error": "Index access is out of bounds",
      "op": "extract 8 8 // on error: Index access is out of bounds",
      "stack_out": [
        "result.0.0#0",
        "result.0.1#0",
        "item1%7#0",
        "result.1.0#0",
        "result.1.1#0"
      ]
    },
    "1122": {
      "op": "dig 2",
      "stack_out": [
        "result.0.0#0",
        "result.0.1#0",
        "item1%7#0",
        "result.1.0#0",
        "result.1.1#0",
        "item1%7#0 (copy)"
      ]
    },
    "1124": {
      "op": "pushint 16 // 16",
      "stack_out": [
        "result.0.0#0",
        "result.0.1#0",
        "item1%7#0",
        "result.1.0#0",
        "result.1.1#0",
        "item1%7#0 (copy)",
        "16"
      ]
    },
    "1126": {
      "op": "extract_uint16",
      "defined_out": [
        "item1%7#0",
        "item_start_offset%14#0",
        "result.0.0#0",
        "result.0.1#0",
        "result.1.0#0",
        "result.1.1#0"
      ],
      "stack_out": [
        "result.0.0#0",
        "result.0.1#0",
        "item1%7#0",
        "result.1.0#0",
        "result.1.1#0",
        "item_start_offset%14#0"
      ]
    },
    "1127": {
      "op": "dig 3",
      "stack_out": [
        "result.0.0#0",
        "result.0.1#0",
        "item1%7#0",
        "result.1.0#0",
        "result.1.1#0",
        "item_start_offset%14#0",
        "item1%7#0 (copy)"
      ]
    },
    "1129": {
      "op": "len",
      "defined_out": [
        "item1%7#0",
        "item_end_offset%14#0",
        "item_start_offset%14#0",
        "result.0.0#0",
        "result.0.1#0",
        "result.1.0#0",
        "result.1.1#0"
      ],
      "stack_out": [
        "result.0.0#0",
        "result.0.1#0",
        "item1%7#0",
        "result.1.0#0",
        "result.1.1#0",
        "item_start_offset%14#0",
        "item_end_offset%14#0"
      ]
    },
    "1130": {
      "op": "uncover 4",
      "stack_out": [
        "result.0.0#0",
        "result.0.1#0",
        "result.1.0#0",
        "result.1.1#0",
        "item_start_offset%14#0",
        "item_end_offset%14#0",
        "item1%7#0"
      ]
    },
    "1132": {
      "op": "cover 2",
      "stack_out": [
        "result.0.0#0",
        "result.0.1#0",
        "result.1.0#0",
        "result.1.1#0",
        "item1%7#0",
        "item_start_offset%14#0",
        "item_end_offset%14#0"
      ]
    },
    "1134": {
      "op": "substring3",
      "defined_out": [
        "item2%2#0",
        "result.0.0#0",
        "result.0.1#0",
        "result.1.0#0",
        "result.1.1#0"
      ],
      "stack_out": [
        "result.0.0#0",
        "result.0.1#0",
        "result.1.0#0",
        "result.1.1#0",
        "item2%2#0"
      ]
    },
    "1135": {
      "op": "extract 2 0",
      "stack_out": [
        "result.0.0#0",
        "result.0.1#0",
        "result.1.0#0",
        "result.1.1#0",
        "result.1.2#0"
      ]
    },
    "1138": {
      "op": "uncover 4",
      "stack_out": [
        "result.0.1#0",
        "result.1.0#0",
        "result.1.1#0",
        "result.1.2#0",
        "result.0.0#0"
      ]
    },
    "1140": {
      "op": "pushbytes \"echo: s1b\"",
      "defined_out": [
        "\"echo: s1b\"",
        "result.0.0#0",
        "result.0.1#0",
        "result.1.0#0",
        "result.1.1#0",
        "result.1.2#0"
      ],
      "stack_out": [
        "result.0.1#0",
        "result.1.0#0",
        "result.1.1#0",
        "result.1.2#0",
        "result.0.0#0",
        "\"echo: s1b\""
      ]
    },
    "1151": {
      "op": "==",
      "defined_out": [
        "result.0.1#0",
        "result.1.0#0",
        "result.1.1#0",
        "result.1.2#0",
        "tmp%19#1"
      ],
      "stack_out": [
        "result.0.1#0",
        "result.1.0#0",
        "result.1.1#0",
        "result.1.2#0",
        "tmp%19#1"
      ]
    },
    "1152": {
      "op": "assert",
      "stack_out": [
        "result.0.1#0",
        "result.1.0#0",
        "result.1.1#0",
        "result.1.2#0"
      ]
    },
    "1153": {
      "op": "uncover 3",
      "stack_out": [
        "result.1.0#0",
        "result.1.1#0",
        "result.1.2#0",
        "result.0.1#0"
      ]
    },
    "1155": {
      "op": "pushbytes 0x00096563686f3a20733262",
      "defined_out": [
        "0x00096563686f3a20733262",
        "result.0.1#0",
        "result.1.0#0",
        "result.1.1#0",
        "result.1.2#0"
      ],
      "stack_out": [
        "result.1.0#0",
        "result.1.1#0",
        "result.1.2#0",
        "result.0.1#0",
        "0x00096563686f3a20733262"
      ]
    },
    "1168": {
      "op": "==",
      "defined_out": [
        "result.1.0#0",
        "result.1.1#0",
        "result.1.2#0",
        "tmp%20#0"
      ],
      "stack_out": [
        "result.1.0#0",
        "result.1.1#0",
        "result.1.2#0",
        "tmp%20#0"
      ]
    },
    "1169": {
      "op": "assert",
      "stack_out": [
        "result.1.0#0",
        "result.1.1#0",
        "result.1.2#0"
      ]
    },
    "1170": {
      "op": "uncover 2",
      "stack_out": [
        "result.1.1#0",
        "result.1.2#0",
        "result.1.0#0"
      ]
    },
    "1172": {
      "op": "pushint 12 // 12",
      "defined_out": [
        "12",
        "result.1.0#0",
        "result.1.1#0",
        "result.1.2#0"
      ],
      "stack_out": [
        "result.1.1#0",
        "result.1.2#0",
        "result.1.0#0",
        "12"
      ]
    },
    "1174": {
      "op": "==",
      "defined_out": [
        "result.1.1#0",
        "result.1.2#0",
        "tmp%21#1"
      ],
      "stack_out": [
        "result.1.1#0",
        "result.1.2#0",
        "tmp%21#1"
      ]
    },
    "1175": {
      "op": "assert",
      "stack_out": [
        "result.1.1#0",
        "result.1.2#0"
      ]
    },
    "1176": {
      "op": "swap",
      "stack_out": [
        "result.1.2#0",
        "result.1.1#0"
      ]
    },
    "1177": {
      "op": "pushbytes 0x0000000000000016",
      "defined_out": [
        "0x0000000000000016",
        "result.1.1#0",
        "result.1.2#0"
      ],
      "stack_out": [
        "result.1.2#0",
        "result.1.1#0",
        "0x0000000000000016"
      ]
    },
    "1187": {
      "op": "b==",
      "defined_out": [
        "result.1.2#0",
        "tmp%22#1"
      ],
      "stack_out": [
        "result.1.2#0",
        "tmp%22#1"
      ]
    },
    "1188": {
      "op": "assert",
      "stack_out": [
        "result.1.2#0"
      ]
    },
    "1189": {
      "op": "pushbytes 0x6563686f3a203362",
      "defined_out": [
        "0x6563686f3a203362",
        "result.1.2#0"
      ],
      "stack_out": [
        "result.1.2#0",
        "0x6563686f3a203362"
      ]
    },
    "1199": {
      "op": "==",
      "defined_out": [
        "tmp%23#1"
      ],
      "stack_out": [
        "tmp%23#1"
      ]
    },
    "1200": {
      "op": "assert",
      "stack_out": []
    },
    "1201": {
      "op": "intc_2 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1202": {
      "op": "return"
    },
    "1203": {
      "block": "main_test_native_tuple_method_ref_route@15",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%81#0"
      ],
      "stack_out": [
        "tmp%81#0"
      ]
    },
    "1205": {
      "op": "!",
      "defined_out": [
        "tmp%82#0"
      ],
      "stack_out": [
        "tmp%82#0"
      ]
    },
    "1206": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "1207": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%83#0"
      ],
      "stack_out": [
        "tmp%83#0"
      ]
    },
    "1209": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "1210": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[1]%13#0"
      ],
      "stack_out": [
        "reinterpret_bytes[1]%13#0"
      ]
    },
    "1213": {
      "op": "btoi",
      "defined_out": [
        "tmp%85#0"
      ],
      "stack_out": [
        "tmp%85#0"
      ]
    },
    "1214": {
      "op": "txnas Applications",
      "defined_out": [
        "app#0"
      ],
      "stack_out": [
        "app#0"
      ]
    },
    "1216": {
      "op": "itxn_begin"
    },
    "1217": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "app#0 (copy)"
      ],
      "stack_out": [
        "app#0",
        "app#0 (copy)"
      ]
    },
    "1218": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "app#0"
      ]
    },
    "1220": {
      "op": "bytec 4 // method \"echo_native_tuple(string,byte[],uint64,uint512)(string,byte[],uint64,uint512)\"",
      "defined_out": [
        "Method(echo_native_tuple(string,byte[],uint64,uint512)(string,byte[],uint64,uint512))",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "Method(echo_native_tuple(string,byte[],uint64,uint512)(string,byte[],uint64,uint512))"
      ]
    },
    "1222": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0"
      ]
    },
    "1224": {
      "op": "bytec 5 // 0x00027331",
      "defined_out": [
        "0x00027331",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "0x00027331"
      ]
    },
    "1226": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0"
      ]
    },
    "1228": {
      "op": "bytec 6 // 0x00026231",
      "defined_out": [
        "0x00026231",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "0x00026231"
      ]
    },
    "1230": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0"
      ]
    },
    "1232": {
      "op": "bytec_2 // 0x0000000000000001",
      "defined_out": [
        "0x0000000000000001",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "0x0000000000000001"
      ]
    },
    "1233": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0"
      ]
    },
    "1235": {
      "op": "bytec_1 // 0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002",
      "defined_out": [
        "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002"
      ]
    },
    "1236": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0"
      ]
    },
    "1238": {
      "op": "intc_1 // appl",
      "defined_out": [
        "app#0",
        "appl"
      ],
      "stack_out": [
        "app#0",
        "appl"
      ]
    },
    "1239": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "app#0"
      ]
    },
    "1241": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "0"
      ]
    },
    "1242": {
      "op": "itxn_field Fee",
      "stack_out": [
        "app#0"
      ]
    },
    "1244": {
      "op": "itxn_submit"
    },
    "1245": {
      "op": "itxn LastLog"
    },
    "1247": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ]
    },
    "1248": {
      "op": "extract 4 0",
      "defined_out": [
        "app#0",
        "awst_tmp%0#0",
        "tmp%0#4"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "tmp%0#4"
      ]
    },
    "1251": {
      "op": "dig 1",
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "tmp%0#4",
        "awst_tmp%0#0 (copy)"
      ]
    },
    "1253": {
      "op": "extract 0 4",
      "defined_out": [
        "app#0",
        "awst_tmp%0#0",
        "tmp%0#4",
        "tmp%1#1"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "tmp%0#4",
        "tmp%1#1"
      ]
    },
    "1256": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "app#0",
        "awst_tmp%0#0",
        "tmp%0#4",
        "tmp%1#1"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "tmp%0#4",
        "tmp%1#1",
        "0x151f7c75"
      ]
    },
    "1257": {
      "op": "==",
      "defined_out": [
        "app#0",
        "awst_tmp%0#0",
        "tmp%0#4",
        "tmp%2#1"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "tmp%0#4",
        "tmp%2#1"
      ]
    },
    "1258": {
      "error": "ARC4 prefix is valid",
      "op": "assert // ARC4 prefix is valid",
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "tmp%0#4"
      ]
    },
    "1259": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "awst_tmp%0#0",
        "tmp%0#4",
        "tmp%0#4 (copy)"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "tmp%0#4",
        "tmp%0#4 (copy)"
      ]
    },
    "1260": {
      "op": "intc_0 // 0",
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "tmp%0#4",
        "tmp%0#4 (copy)",
        "0"
      ]
    },
    "1261": {
      "op": "extract_uint16",
      "defined_out": [
        "app#0",
        "awst_tmp%0#0",
        "item_start_offset%0#0",
        "tmp%0#4"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "tmp%0#4",
        "item_start_offset%0#0"
      ]
    },
    "1262": {
      "op": "dig 1",
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "tmp%0#4",
        "item_start_offset%0#0",
        "tmp%0#4 (copy)"
      ]
    },
    "1264": {
      "op": "intc_3 // 2",
      "defined_out": [
        "2",
        "app#0",
        "awst_tmp%0#0",
        "item_start_offset%0#0",
        "tmp%0#4",
        "tmp%0#4 (copy)"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "tmp%0#4",
        "item_start_offset%0#0",
        "tmp%0#4 (copy)",
        "2"
      ]
    },
    "1265": {
      "op": "extract_uint16",
      "defined_out": [
        "app#0",
        "awst_tmp%0#0",
        "item_end_offset%0#0",
        "item_start_offset%0#0",
        "tmp%0#4"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "tmp%0#4",
        "item_start_offset%0#0",
        "item_end_offset%0#0"
      ]
    },
    "1266": {
      "op": "dig 2",
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "tmp%0#4",
        "item_start_offset%0#0",
        "item_end_offset%0#0",
        "tmp%0#4 (copy)"
      ]
    },
    "1268": {
      "op": "uncover 2",
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "tmp%0#4",
        "item_end_offset%0#0",
        "tmp%0#4 (copy)",
        "item_start_offset%0#0"
      ]
    },
    "1270": {
      "op": "dig 2",
      "defined_out": [
        "app#0",
        "awst_tmp%0#0",
        "item_end_offset%0#0",
        "item_end_offset%0#0 (copy)",
        "item_start_offset%0#0",
        "tmp%0#4",
        "tmp%0#4 (copy)"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "tmp%0#4",
        "item_end_offset%0#0",
        "tmp%0#4 (copy)",
        "item_start_offset%0#0",
        "item_end_offset%0#0 (copy)"
      ]
    },
    "1272": {
      "op": "substring3",
      "defined_out": [
        "app#0",
        "awst_tmp%0#0",
        "item0%0#0",
        "item_end_offset%0#0",
        "tmp%0#4"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "tmp%0#4",
        "item_end_offset%0#0",
        "item0%0#0"
      ]
    },
    "1273": {
      "op": "extract 2 0",
      "defined_out": [
        "app#0",
        "awst_tmp%0#0",
        "item_end_offset%0#0",
        "result.0#0",
        "tmp%0#4"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "tmp%0#4",
        "item_end_offset%0#0",
        "result.0#0"
      ]
    },
    "1276": {
      "op": "dig 2",
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "tmp%0#4",
        "item_end_offset%0#0",
        "result.0#0",
        "tmp%0#4 (copy)"
      ]
    },
    "1278": {
      "op": "len",
      "defined_out": [
        "app#0",
        "awst_tmp%0#0",
        "item_end_offset%0#0",
        "item_end_offset%1#0",
        "result.0#0",
        "tmp%0#4"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "tmp%0#4",
        "item_end_offset%0#0",
        "result.0#0",
        "item_end_offset%1#0"
      ]
    },
    "1279": {
      "op": "swap"
    },
    "1280": {
      "op": "cover 3",
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "result.0#0",
        "tmp%0#4",
        "item_end_offset%0#0",
        "item_end_offset%1#0"
      ]
    },
    "1282": {
      "op": "substring3",
      "defined_out": [
        "app#0",
        "awst_tmp%0#0",
        "item1%0#0",
        "result.0#0"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "result.0#0",
        "item1%0#0"
      ]
    },
    "1283": {
      "op": "extract 2 0",
      "defined_out": [
        "app#0",
        "awst_tmp%0#0",
        "result.0#0",
        "result.1#0"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "result.0#0",
        "result.1#0"
      ]
    },
    "1286": {
      "op": "dig 2",
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "result.0#0",
        "result.1#0",
        "awst_tmp%0#0 (copy)"
      ]
    },
    "1288": {
      "op": "pushint 8 // 8",
      "defined_out": [
        "8",
        "app#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)",
        "result.0#0",
        "result.1#0"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "result.0#0",
        "result.1#0",
        "awst_tmp%0#0 (copy)",
        "8"
      ]
    },
    "1290": {
      "op": "extract_uint64",
      "defined_out": [
        "app#0",
        "awst_tmp%0#0",
        "result.0#0",
        "result.1#0",
        "result.2#0"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "result.0#0",
        "result.1#0",
        "result.2#0"
      ]
    },
    "1291": {
      "op": "uncover 3",
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "awst_tmp%0#0"
      ]
    },
    "1293": {
      "op": "extract 16 64",
      "defined_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0"
      ],
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0"
      ]
    },
    "1296": {
      "op": "dig 3",
      "defined_out": [
        "app#0",
        "result.0#0",
        "result.0#0 (copy)",
        "result.1#0",
        "result.2#0",
        "result.3#0"
      ],
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "result.0#0 (copy)"
      ]
    },
    "1298": {
      "op": "bytec 8 // \"echo: s1\"",
      "defined_out": [
        "\"echo: s1\"",
        "app#0",
        "result.0#0",
        "result.0#0 (copy)",
        "result.1#0",
        "result.2#0",
        "result.3#0"
      ],
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "result.0#0 (copy)",
        "\"echo: s1\""
      ]
    },
    "1300": {
      "op": "==",
      "defined_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "tmp%3#1"
      ],
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "tmp%3#1"
      ]
    },
    "1301": {
      "op": "assert",
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0"
      ]
    },
    "1302": {
      "op": "dig 2",
      "defined_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.1#0 (copy)",
        "result.2#0",
        "result.3#0"
      ],
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "result.1#0 (copy)"
      ]
    },
    "1304": {
      "op": "bytec 25 // 0x6563686f3a206231",
      "defined_out": [
        "0x6563686f3a206231",
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.1#0 (copy)",
        "result.2#0",
        "result.3#0"
      ],
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "result.1#0 (copy)",
        "0x6563686f3a206231"
      ]
    },
    "1306": {
      "op": "==",
      "defined_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "tmp%4#0"
      ]
    },
    "1307": {
      "op": "assert",
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0"
      ]
    },
    "1308": {
      "op": "dig 1",
      "defined_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.2#0 (copy)",
        "result.3#0"
      ],
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "result.2#0 (copy)"
      ]
    },
    "1310": {
      "op": "intc_3 // 2",
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "result.2#0 (copy)",
        "2"
      ]
    },
    "1311": {
      "op": "==",
      "defined_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "tmp%5#2"
      ],
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "tmp%5#2"
      ]
    },
    "1312": {
      "op": "assert",
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0"
      ]
    },
    "1313": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "result.3#0 (copy)"
      ],
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "result.3#0 (copy)"
      ]
    },
    "1314": {
      "op": "bytec 13 // 0x03",
      "defined_out": [
        "0x03",
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "result.3#0 (copy)"
      ],
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "result.3#0 (copy)",
        "0x03"
      ]
    },
    "1316": {
      "op": "b==",
      "defined_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "tmp%6#1"
      ],
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "tmp%6#1"
      ]
    },
    "1317": {
      "op": "assert",
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0"
      ]
    },
    "1318": {
      "op": "itxn_begin"
    },
    "1319": {
      "op": "intc_2 // 1",
      "defined_out": [
        "1",
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0"
      ],
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "1"
      ]
    },
    "1320": {
      "op": "itob",
      "defined_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "val_as_bytes%0#1"
      ],
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "val_as_bytes%0#1"
      ]
    },
    "1321": {
      "op": "dig 5",
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "val_as_bytes%0#1",
        "app#0 (copy)"
      ]
    },
    "1323": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "val_as_bytes%0#1"
      ]
    },
    "1325": {
      "op": "bytec 4 // method \"echo_native_tuple(string,byte[],uint64,uint512)(string,byte[],uint64,uint512)\"",
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "val_as_bytes%0#1",
        "Method(echo_native_tuple(string,byte[],uint64,uint512)(string,byte[],uint64,uint512))"
      ]
    },
    "1327": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "val_as_bytes%0#1"
      ]
    },
    "1329": {
      "op": "bytec 5 // 0x00027331",
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "val_as_bytes%0#1",
        "0x00027331"
      ]
    },
    "1331": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "val_as_bytes%0#1"
      ]
    },
    "1333": {
      "op": "bytec 6 // 0x00026231",
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "val_as_bytes%0#1",
        "0x00026231"
      ]
    },
    "1335": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "val_as_bytes%0#1"
      ]
    },
    "1337": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0"
      ]
    },
    "1339": {
      "op": "bytec_1 // 0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002",
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002"
      ]
    },
    "1340": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0"
      ]
    },
    "1342": {
      "op": "intc_1 // appl",
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "appl"
      ]
    },
    "1343": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0"
      ]
    },
    "1345": {
      "op": "intc_0 // 0",
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "0"
      ]
    },
    "1346": {
      "op": "itxn_field Fee",
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0"
      ]
    },
    "1348": {
      "op": "itxn_submit"
    },
    "1349": {
      "op": "itxn LastLog"
    },
    "1351": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "awst_tmp%1#0",
        "awst_tmp%1#0 (copy)",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0"
      ],
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "awst_tmp%1#0",
        "awst_tmp%1#0 (copy)"
      ]
    },
    "1352": {
      "op": "extract 4 0",
      "defined_out": [
        "app#0",
        "awst_tmp%1#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "tmp%8#3"
      ],
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "awst_tmp%1#0",
        "tmp%8#3"
      ]
    },
    "1355": {
      "op": "dig 1",
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "awst_tmp%1#0",
        "tmp%8#3",
        "awst_tmp%1#0 (copy)"
      ]
    },
    "1357": {
      "op": "extract 0 4",
      "defined_out": [
        "app#0",
        "awst_tmp%1#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "tmp%8#3",
        "tmp%9#0"
      ],
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "awst_tmp%1#0",
        "tmp%8#3",
        "tmp%9#0"
      ]
    },
    "1360": {
      "op": "bytec_0 // 0x151f7c75",
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "awst_tmp%1#0",
        "tmp%8#3",
        "tmp%9#0",
        "0x151f7c75"
      ]
    },
    "1361": {
      "op": "==",
      "defined_out": [
        "app#0",
        "awst_tmp%1#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "tmp%10#2",
        "tmp%8#3"
      ],
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "awst_tmp%1#0",
        "tmp%8#3",
        "tmp%10#2"
      ]
    },
    "1362": {
      "error": "ARC4 prefix is valid",
      "op": "assert // ARC4 prefix is valid",
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "awst_tmp%1#0",
        "tmp%8#3"
      ]
    },
    "1363": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "awst_tmp%1#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "tmp%8#3",
        "tmp%8#3 (copy)"
      ],
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "awst_tmp%1#0",
        "tmp%8#3",
        "tmp%8#3 (copy)"
      ]
    },
    "1364": {
      "op": "intc_0 // 0",
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "awst_tmp%1#0",
        "tmp%8#3",
        "tmp%8#3 (copy)",
        "0"
      ]
    },
    "1365": {
      "op": "extract_uint16",
      "defined_out": [
        "app#0",
        "awst_tmp%1#0",
        "item_start_offset%2#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "tmp%8#3"
      ],
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "awst_tmp%1#0",
        "tmp%8#3",
        "item_start_offset%2#0"
      ]
    },
    "1366": {
      "op": "dig 1",
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "awst_tmp%1#0",
        "tmp%8#3",
        "item_start_offset%2#0",
        "tmp%8#3 (copy)"
      ]
    },
    "1368": {
      "op": "intc_3 // 2",
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "awst_tmp%1#0",
        "tmp%8#3",
        "item_start_offset%2#0",
        "tmp%8#3 (copy)",
        "2"
      ]
    },
    "1369": {
      "op": "extract_uint16",
      "defined_out": [
        "app#0",
        "awst_tmp%1#0",
        "item_end_offset%2#0",
        "item_start_offset%2#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "tmp%8#3"
      ],
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "awst_tmp%1#0",
        "tmp%8#3",
        "item_start_offset%2#0",
        "item_end_offset%2#0"
      ]
    },
    "1370": {
      "op": "dig 2",
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "awst_tmp%1#0",
        "tmp%8#3",
        "item_start_offset%2#0",
        "item_end_offset%2#0",
        "tmp%8#3 (copy)"
      ]
    },
    "1372": {
      "op": "uncover 2",
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "awst_tmp%1#0",
        "tmp%8#3",
        "item_end_offset%2#0",
        "tmp%8#3 (copy)",
        "item_start_offset%2#0"
      ]
    },
    "1374": {
      "op": "dig 2",
      "defined_out": [
        "app#0",
        "awst_tmp%1#0",
        "item_end_offset%2#0",
        "item_end_offset%2#0 (copy)",
        "item_start_offset%2#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "tmp%8#3",
        "tmp%8#3 (copy)"
      ],
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "awst_tmp%1#0",
        "tmp%8#3",
        "item_end_offset%2#0",
        "tmp%8#3 (copy)",
        "item_start_offset%2#0",
        "item_end_offset%2#0 (copy)"
      ]
    },
    "1376": {
      "op": "substring3",
      "defined_out": [
        "app#0",
        "awst_tmp%1#0",
        "item0%1#0",
        "item_end_offset%2#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "tmp%8#3"
      ],
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "awst_tmp%1#0",
        "tmp%8#3",
        "item_end_offset%2#0",
        "item0%1#0"
      ]
    },
    "1377": {
      "op": "extract 2 0",
      "defined_out": [
        "app#0",
        "awst_tmp%1#0",
        "item_end_offset%2#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "result_2.0#0",
        "tmp%8#3"
      ],
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "awst_tmp%1#0",
        "tmp%8#3",
        "item_end_offset%2#0",
        "result_2.0#0"
      ]
    },
    "1380": {
      "op": "dig 2",
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "awst_tmp%1#0",
        "tmp%8#3",
        "item_end_offset%2#0",
        "result_2.0#0",
        "tmp%8#3 (copy)"
      ]
    },
    "1382": {
      "op": "len",
      "defined_out": [
        "app#0",
        "awst_tmp%1#0",
        "item_end_offset%2#0",
        "item_end_offset%3#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "result_2.0#0",
        "tmp%8#3"
      ],
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "awst_tmp%1#0",
        "tmp%8#3",
        "item_end_offset%2#0",
        "result_2.0#0",
        "item_end_offset%3#0"
      ]
    },
    "1383": {
      "op": "swap"
    },
    "1384": {
      "op": "cover 3",
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "awst_tmp%1#0",
        "result_2.0#0",
        "tmp%8#3",
        "item_end_offset%2#0",
        "item_end_offset%3#0"
      ]
    },
    "1386": {
      "op": "substring3",
      "defined_out": [
        "app#0",
        "awst_tmp%1#0",
        "item1%1#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "result_2.0#0"
      ],
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "awst_tmp%1#0",
        "result_2.0#0",
        "item1%1#0"
      ]
    },
    "1387": {
      "op": "extract 2 0",
      "defined_out": [
        "app#0",
        "awst_tmp%1#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "result_2.0#0",
        "result_2.1#0"
      ],
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "awst_tmp%1#0",
        "result_2.0#0",
        "result_2.1#0"
      ]
    },
    "1390": {
      "op": "dig 2",
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "awst_tmp%1#0",
        "result_2.0#0",
        "result_2.1#0",
        "awst_tmp%1#0 (copy)"
      ]
    },
    "1392": {
      "op": "pushint 8 // 8",
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "awst_tmp%1#0",
        "result_2.0#0",
        "result_2.1#0",
        "awst_tmp%1#0 (copy)",
        "8"
      ]
    },
    "1394": {
      "op": "extract_uint64",
      "defined_out": [
        "app#0",
        "awst_tmp%1#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "result_2.0#0",
        "result_2.1#0",
        "result_2.2#0"
      ],
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "awst_tmp%1#0",
        "result_2.0#0",
        "result_2.1#0",
        "result_2.2#0"
      ]
    },
    "1395": {
      "op": "uncover 3",
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "result_2.0#0",
        "result_2.1#0",
        "result_2.2#0",
        "awst_tmp%1#0"
      ]
    },
    "1397": {
      "op": "extract 16 64",
      "defined_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "result_2.0#0",
        "result_2.1#0",
        "result_2.2#0",
        "result_2.3#0"
      ],
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "result_2.0#0",
        "result_2.1#0",
        "result_2.2#0",
        "result_2.3#0"
      ]
    },
    "1400": {
      "op": "uncover 3",
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "result_2.1#0",
        "result_2.2#0",
        "result_2.3#0",
        "result_2.0#0"
      ]
    },
    "1402": {
      "op": "dig 7",
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "result_2.1#0",
        "result_2.2#0",
        "result_2.3#0",
        "result_2.0#0",
        "result.0#0 (copy)"
      ]
    },
    "1404": {
      "op": "==",
      "defined_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "result_2.1#0",
        "result_2.2#0",
        "result_2.3#0",
        "tmp%11#1"
      ],
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "result_2.1#0",
        "result_2.2#0",
        "result_2.3#0",
        "tmp%11#1"
      ]
    },
    "1405": {
      "op": "uncover 3",
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "result_2.2#0",
        "result_2.3#0",
        "tmp%11#1",
        "result_2.1#0"
      ]
    },
    "1407": {
      "op": "dig 6",
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "result_2.2#0",
        "result_2.3#0",
        "tmp%11#1",
        "result_2.1#0",
        "result.1#0 (copy)"
      ]
    },
    "1409": {
      "op": "==",
      "defined_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "result_2.2#0",
        "result_2.3#0",
        "tmp%11#1",
        "tmp%12#1"
      ],
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "result_2.2#0",
        "result_2.3#0",
        "tmp%11#1",
        "tmp%12#1"
      ]
    },
    "1410": {
      "op": "&&",
      "defined_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "result_2.2#0",
        "result_2.3#0",
        "tmp%13#2"
      ],
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "result_2.2#0",
        "result_2.3#0",
        "tmp%13#2"
      ]
    },
    "1411": {
      "op": "uncover 2",
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "result_2.3#0",
        "tmp%13#2",
        "result_2.2#0"
      ]
    },
    "1413": {
      "op": "dig 4",
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "result_2.3#0",
        "tmp%13#2",
        "result_2.2#0",
        "result.2#0 (copy)"
      ]
    },
    "1415": {
      "op": "==",
      "defined_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "result_2.3#0",
        "tmp%13#2",
        "tmp%14#0"
      ],
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "result_2.3#0",
        "tmp%13#2",
        "tmp%14#0"
      ]
    },
    "1416": {
      "op": "&&",
      "defined_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "result_2.3#0",
        "tmp%15#1"
      ],
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "result_2.3#0",
        "tmp%15#1"
      ]
    },
    "1417": {
      "op": "swap",
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "tmp%15#1",
        "result_2.3#0"
      ]
    },
    "1418": {
      "op": "dig 2",
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "tmp%15#1",
        "result_2.3#0",
        "result.3#0 (copy)"
      ]
    },
    "1420": {
      "op": "b==",
      "defined_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "tmp%15#1",
        "tmp%16#1"
      ],
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "tmp%15#1",
        "tmp%16#1"
      ]
    },
    "1421": {
      "op": "&&",
      "defined_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "tmp%17#2"
      ],
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "tmp%17#2"
      ]
    },
    "1422": {
      "error": "expected native arguments to give the same result",
      "op": "assert // expected native arguments to give the same result",
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0"
      ]
    },
    "1423": {
      "op": "itxn_begin"
    },
    "1424": {
      "op": "dig 4",
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "app#0 (copy)"
      ]
    },
    "1426": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0"
      ]
    },
    "1428": {
      "op": "bytec 4 // method \"echo_native_tuple(string,byte[],uint64,uint512)(string,byte[],uint64,uint512)\"",
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "Method(echo_native_tuple(string,byte[],uint64,uint512)(string,byte[],uint64,uint512))"
      ]
    },
    "1430": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0"
      ]
    },
    "1432": {
      "op": "bytec 5 // 0x00027331",
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "0x00027331"
      ]
    },
    "1434": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0"
      ]
    },
    "1436": {
      "op": "bytec 6 // 0x00026231",
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "0x00026231"
      ]
    },
    "1438": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0"
      ]
    },
    "1440": {
      "op": "bytec_2 // 0x0000000000000001",
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "0x0000000000000001"
      ]
    },
    "1441": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0"
      ]
    },
    "1443": {
      "op": "bytec_1 // 0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002",
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002"
      ]
    },
    "1444": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0"
      ]
    },
    "1446": {
      "op": "intc_1 // appl",
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "appl"
      ]
    },
    "1447": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0"
      ]
    },
    "1449": {
      "op": "intc_0 // 0",
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "0"
      ]
    },
    "1450": {
      "op": "itxn_field Fee",
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0"
      ]
    },
    "1452": {
      "op": "itxn_submit"
    },
    "1453": {
      "op": "itxn LastLog"
    },
    "1455": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "awst_tmp%2#0",
        "awst_tmp%2#0 (copy)",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0"
      ],
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "awst_tmp%2#0",
        "awst_tmp%2#0 (copy)"
      ]
    },
    "1456": {
      "op": "extract 4 0",
      "defined_out": [
        "app#0",
        "awst_tmp%2#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "tmp%18#2"
      ],
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "awst_tmp%2#0",
        "tmp%18#2"
      ]
    },
    "1459": {
      "op": "dig 1",
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "awst_tmp%2#0",
        "tmp%18#2",
        "awst_tmp%2#0 (copy)"
      ]
    },
    "1461": {
      "op": "extract 0 4",
      "defined_out": [
        "app#0",
        "awst_tmp%2#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "tmp%18#2",
        "tmp%19#2"
      ],
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "awst_tmp%2#0",
        "tmp%18#2",
        "tmp%19#2"
      ]
    },
    "1464": {
      "op": "bytec_0 // 0x151f7c75",
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "awst_tmp%2#0",
        "tmp%18#2",
        "tmp%19#2",
        "0x151f7c75"
      ]
    },
    "1465": {
      "op": "==",
      "defined_out": [
        "app#0",
        "awst_tmp%2#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "tmp%18#2",
        "tmp%20#0"
      ],
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "awst_tmp%2#0",
        "tmp%18#2",
        "tmp%20#0"
      ]
    },
    "1466": {
      "error": "ARC4 prefix is valid",
      "op": "assert // ARC4 prefix is valid",
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "awst_tmp%2#0",
        "tmp%18#2"
      ]
    },
    "1467": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "awst_tmp%2#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "tmp%18#2",
        "tmp%18#2 (copy)"
      ],
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "awst_tmp%2#0",
        "tmp%18#2",
        "tmp%18#2 (copy)"
      ]
    },
    "1468": {
      "op": "intc_0 // 0",
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "awst_tmp%2#0",
        "tmp%18#2",
        "tmp%18#2 (copy)",
        "0"
      ]
    },
    "1469": {
      "op": "extract_uint16",
      "defined_out": [
        "app#0",
        "awst_tmp%2#0",
        "item_start_offset%4#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "tmp%18#2"
      ],
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "awst_tmp%2#0",
        "tmp%18#2",
        "item_start_offset%4#0"
      ]
    },
    "1470": {
      "op": "dig 1",
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "awst_tmp%2#0",
        "tmp%18#2",
        "item_start_offset%4#0",
        "tmp%18#2 (copy)"
      ]
    },
    "1472": {
      "op": "intc_3 // 2",
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "awst_tmp%2#0",
        "tmp%18#2",
        "item_start_offset%4#0",
        "tmp%18#2 (copy)",
        "2"
      ]
    },
    "1473": {
      "op": "extract_uint16",
      "defined_out": [
        "app#0",
        "awst_tmp%2#0",
        "item_end_offset%4#0",
        "item_start_offset%4#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "tmp%18#2"
      ],
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "awst_tmp%2#0",
        "tmp%18#2",
        "item_start_offset%4#0",
        "item_end_offset%4#0"
      ]
    },
    "1474": {
      "op": "dig 2",
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "awst_tmp%2#0",
        "tmp%18#2",
        "item_start_offset%4#0",
        "item_end_offset%4#0",
        "tmp%18#2 (copy)"
      ]
    },
    "1476": {
      "op": "uncover 2",
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "awst_tmp%2#0",
        "tmp%18#2",
        "item_end_offset%4#0",
        "tmp%18#2 (copy)",
        "item_start_offset%4#0"
      ]
    },
    "1478": {
      "op": "dig 2",
      "defined_out": [
        "app#0",
        "awst_tmp%2#0",
        "item_end_offset%4#0",
        "item_end_offset%4#0 (copy)",
        "item_start_offset%4#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "tmp%18#2",
        "tmp%18#2 (copy)"
      ],
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "awst_tmp%2#0",
        "tmp%18#2",
        "item_end_offset%4#0",
        "tmp%18#2 (copy)",
        "item_start_offset%4#0",
        "item_end_offset%4#0 (copy)"
      ]
    },
    "1480": {
      "op": "substring3",
      "defined_out": [
        "app#0",
        "awst_tmp%2#0",
        "item0%2#1",
        "item_end_offset%4#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "tmp%18#2"
      ],
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "awst_tmp%2#0",
        "tmp%18#2",
        "item_end_offset%4#0",
        "item0%2#1"
      ]
    },
    "1481": {
      "op": "extract 2 0",
      "defined_out": [
        "app#0",
        "awst_tmp%2#0",
        "item_end_offset%4#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "result_3.0#0",
        "tmp%18#2"
      ],
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "awst_tmp%2#0",
        "tmp%18#2",
        "item_end_offset%4#0",
        "result_3.0#0"
      ]
    },
    "1484": {
      "op": "dig 2",
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "awst_tmp%2#0",
        "tmp%18#2",
        "item_end_offset%4#0",
        "result_3.0#0",
        "tmp%18#2 (copy)"
      ]
    },
    "1486": {
      "op": "len",
      "defined_out": [
        "app#0",
        "awst_tmp%2#0",
        "item_end_offset%4#0",
        "item_end_offset%5#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "result_3.0#0",
        "tmp%18#2"
      ],
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "awst_tmp%2#0",
        "tmp%18#2",
        "item_end_offset%4#0",
        "result_3.0#0",
        "item_end_offset%5#0"
      ]
    },
    "1487": {
      "op": "swap"
    },
    "1488": {
      "op": "cover 3",
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "awst_tmp%2#0",
        "result_3.0#0",
        "tmp%18#2",
        "item_end_offset%4#0",
        "item_end_offset%5#0"
      ]
    },
    "1490": {
      "op": "substring3",
      "defined_out": [
        "app#0",
        "awst_tmp%2#0",
        "item1%2#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "result_3.0#0"
      ],
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "awst_tmp%2#0",
        "result_3.0#0",
        "item1%2#0"
      ]
    },
    "1491": {
      "op": "extract 2 0",
      "defined_out": [
        "app#0",
        "awst_tmp%2#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "result_3.0#0",
        "result_3.1#0"
      ],
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "awst_tmp%2#0",
        "result_3.0#0",
        "result_3.1#0"
      ]
    },
    "1494": {
      "op": "dig 2",
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "awst_tmp%2#0",
        "result_3.0#0",
        "result_3.1#0",
        "awst_tmp%2#0 (copy)"
      ]
    },
    "1496": {
      "op": "pushint 8 // 8",
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "awst_tmp%2#0",
        "result_3.0#0",
        "result_3.1#0",
        "awst_tmp%2#0 (copy)",
        "8"
      ]
    },
    "1498": {
      "op": "extract_uint64",
      "defined_out": [
        "app#0",
        "awst_tmp%2#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "result_3.0#0",
        "result_3.1#0",
        "result_3.2#0"
      ],
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "awst_tmp%2#0",
        "result_3.0#0",
        "result_3.1#0",
        "result_3.2#0"
      ]
    },
    "1499": {
      "op": "uncover 3",
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "result_3.0#0",
        "result_3.1#0",
        "result_3.2#0",
        "awst_tmp%2#0"
      ]
    },
    "1501": {
      "op": "extract 16 64",
      "defined_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "result_3.0#0",
        "result_3.1#0",
        "result_3.2#0",
        "result_3.3#0"
      ],
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "result_3.0#0",
        "result_3.1#0",
        "result_3.2#0",
        "result_3.3#0"
      ]
    },
    "1504": {
      "op": "uncover 3",
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "result_3.1#0",
        "result_3.2#0",
        "result_3.3#0",
        "result_3.0#0"
      ]
    },
    "1506": {
      "op": "dig 7",
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "result_3.1#0",
        "result_3.2#0",
        "result_3.3#0",
        "result_3.0#0",
        "result.0#0 (copy)"
      ]
    },
    "1508": {
      "op": "==",
      "defined_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "result_3.1#0",
        "result_3.2#0",
        "result_3.3#0",
        "tmp%21#1"
      ],
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "result_3.1#0",
        "result_3.2#0",
        "result_3.3#0",
        "tmp%21#1"
      ]
    },
    "1509": {
      "op": "uncover 3",
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "result_3.2#0",
        "result_3.3#0",
        "tmp%21#1",
        "result_3.1#0"
      ]
    },
    "1511": {
      "op": "dig 6",
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "result_3.2#0",
        "result_3.3#0",
        "tmp%21#1",
        "result_3.1#0",
        "result.1#0 (copy)"
      ]
    },
    "1513": {
      "op": "==",
      "defined_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "result_3.2#0",
        "result_3.3#0",
        "tmp%21#1",
        "tmp%22#1"
      ],
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "result_3.2#0",
        "result_3.3#0",
        "tmp%21#1",
        "tmp%22#1"
      ]
    },
    "1514": {
      "op": "&&",
      "defined_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "result_3.2#0",
        "result_3.3#0",
        "tmp%23#1"
      ],
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "result_3.2#0",
        "result_3.3#0",
        "tmp%23#1"
      ]
    },
    "1515": {
      "op": "uncover 2",
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "result_3.3#0",
        "tmp%23#1",
        "result_3.2#0"
      ]
    },
    "1517": {
      "op": "dig 4",
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "result_3.3#0",
        "tmp%23#1",
        "result_3.2#0",
        "result.2#0 (copy)"
      ]
    },
    "1519": {
      "op": "==",
      "defined_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "result_3.3#0",
        "tmp%23#1",
        "tmp%24#1"
      ],
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "result_3.3#0",
        "tmp%23#1",
        "tmp%24#1"
      ]
    },
    "1520": {
      "op": "&&",
      "defined_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "result_3.3#0",
        "tmp%25#1"
      ],
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "result_3.3#0",
        "tmp%25#1"
      ]
    },
    "1521": {
      "op": "swap",
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "tmp%25#1",
        "result_3.3#0"
      ]
    },
    "1522": {
      "op": "dig 2",
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "tmp%25#1",
        "result_3.3#0",
        "result.3#0 (copy)"
      ]
    },
    "1524": {
      "op": "b==",
      "defined_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "tmp%25#1",
        "tmp%26#0"
      ],
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "tmp%25#1",
        "tmp%26#0"
      ]
    },
    "1525": {
      "op": "&&",
      "defined_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "tmp%27#1"
      ],
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "tmp%27#1"
      ]
    },
    "1526": {
      "error": "expected arc4 arguments to give the same result",
      "op": "assert // expected arc4 arguments to give the same result",
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0"
      ]
    },
    "1527": {
      "op": "itxn_begin"
    },
    "1528": {
      "op": "uncover 4",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "app#0"
      ]
    },
    "1530": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0"
      ]
    },
    "1532": {
      "op": "bytec 4 // method \"echo_native_tuple(string,byte[],uint64,uint512)(string,byte[],uint64,uint512)\"",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "Method(echo_native_tuple(string,byte[],uint64,uint512)(string,byte[],uint64,uint512))"
      ]
    },
    "1534": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0"
      ]
    },
    "1536": {
      "op": "bytec 5 // 0x00027331",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "0x00027331"
      ]
    },
    "1538": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0"
      ]
    },
    "1540": {
      "op": "bytec 6 // 0x00026231",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "0x00026231"
      ]
    },
    "1542": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0"
      ]
    },
    "1544": {
      "op": "bytec_2 // 0x0000000000000001",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "0x0000000000000001"
      ]
    },
    "1545": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0"
      ]
    },
    "1547": {
      "op": "bytec_1 // 0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002"
      ]
    },
    "1548": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0"
      ]
    },
    "1550": {
      "op": "intc_1 // appl",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "appl"
      ]
    },
    "1551": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0"
      ]
    },
    "1553": {
      "op": "intc_0 // 0",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "0"
      ]
    },
    "1554": {
      "op": "itxn_field Fee",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0"
      ]
    },
    "1556": {
      "op": "itxn_submit"
    },
    "1557": {
      "op": "itxn LastLog"
    },
    "1559": {
      "op": "dup",
      "defined_out": [
        "awst_tmp%3#0",
        "awst_tmp%3#0 (copy)",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "awst_tmp%3#0",
        "awst_tmp%3#0 (copy)"
      ]
    },
    "1560": {
      "op": "extract 4 0",
      "defined_out": [
        "awst_tmp%3#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "tmp%28#1"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "awst_tmp%3#0",
        "tmp%28#1"
      ]
    },
    "1563": {
      "op": "dig 1",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "awst_tmp%3#0",
        "tmp%28#1",
        "awst_tmp%3#0 (copy)"
      ]
    },
    "1565": {
      "op": "extract 0 4",
      "defined_out": [
        "awst_tmp%3#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "tmp%28#1",
        "tmp%29#1"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "awst_tmp%3#0",
        "tmp%28#1",
        "tmp%29#1"
      ]
    },
    "1568": {
      "op": "bytec_0 // 0x151f7c75",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "awst_tmp%3#0",
        "tmp%28#1",
        "tmp%29#1",
        "0x151f7c75"
      ]
    },
    "1569": {
      "op": "==",
      "defined_out": [
        "awst_tmp%3#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "tmp%28#1",
        "tmp%30#1"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "awst_tmp%3#0",
        "tmp%28#1",
        "tmp%30#1"
      ]
    },
    "1570": {
      "error": "ARC4 prefix is valid",
      "op": "assert // ARC4 prefix is valid",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "awst_tmp%3#0",
        "tmp%28#1"
      ]
    },
    "1571": {
      "op": "dup",
      "defined_out": [
        "awst_tmp%3#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "tmp%28#1",
        "tmp%28#1 (copy)"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "awst_tmp%3#0",
        "tmp%28#1",
        "tmp%28#1 (copy)"
      ]
    },
    "1572": {
      "op": "intc_0 // 0",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "awst_tmp%3#0",
        "tmp%28#1",
        "tmp%28#1 (copy)",
        "0"
      ]
    },
    "1573": {
      "op": "extract_uint16",
      "defined_out": [
        "awst_tmp%3#0",
        "item_start_offset%6#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "tmp%28#1"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "awst_tmp%3#0",
        "tmp%28#1",
        "item_start_offset%6#0"
      ]
    },
    "1574": {
      "op": "dig 1",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "awst_tmp%3#0",
        "tmp%28#1",
        "item_start_offset%6#0",
        "tmp%28#1 (copy)"
      ]
    },
    "1576": {
      "op": "intc_3 // 2",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "awst_tmp%3#0",
        "tmp%28#1",
        "item_start_offset%6#0",
        "tmp%28#1 (copy)",
        "2"
      ]
    },
    "1577": {
      "op": "extract_uint16",
      "defined_out": [
        "awst_tmp%3#0",
        "item_end_offset%6#0",
        "item_start_offset%6#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "tmp%28#1"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "awst_tmp%3#0",
        "tmp%28#1",
        "item_start_offset%6#0",
        "item_end_offset%6#0"
      ]
    },
    "1578": {
      "op": "dig 2",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "awst_tmp%3#0",
        "tmp%28#1",
        "item_start_offset%6#0",
        "item_end_offset%6#0",
        "tmp%28#1 (copy)"
      ]
    },
    "1580": {
      "op": "uncover 2",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "awst_tmp%3#0",
        "tmp%28#1",
        "item_end_offset%6#0",
        "tmp%28#1 (copy)",
        "item_start_offset%6#0"
      ]
    },
    "1582": {
      "op": "dig 2",
      "defined_out": [
        "awst_tmp%3#0",
        "item_end_offset%6#0",
        "item_end_offset%6#0 (copy)",
        "item_start_offset%6#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "tmp%28#1",
        "tmp%28#1 (copy)"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "awst_tmp%3#0",
        "tmp%28#1",
        "item_end_offset%6#0",
        "tmp%28#1 (copy)",
        "item_start_offset%6#0",
        "item_end_offset%6#0 (copy)"
      ]
    },
    "1584": {
      "op": "substring3",
      "defined_out": [
        "awst_tmp%3#0",
        "item0%3#0",
        "item_end_offset%6#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "tmp%28#1"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "awst_tmp%3#0",
        "tmp%28#1",
        "item_end_offset%6#0",
        "item0%3#0"
      ]
    },
    "1585": {
      "op": "extract 2 0",
      "defined_out": [
        "awst_tmp%3#0",
        "item_end_offset%6#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "result_native.0#0",
        "tmp%28#1"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "awst_tmp%3#0",
        "tmp%28#1",
        "item_end_offset%6#0",
        "result_native.0#0"
      ]
    },
    "1588": {
      "op": "dig 2",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "awst_tmp%3#0",
        "tmp%28#1",
        "item_end_offset%6#0",
        "result_native.0#0",
        "tmp%28#1 (copy)"
      ]
    },
    "1590": {
      "op": "len",
      "defined_out": [
        "awst_tmp%3#0",
        "item_end_offset%6#0",
        "item_end_offset%7#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "result_native.0#0",
        "tmp%28#1"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "awst_tmp%3#0",
        "tmp%28#1",
        "item_end_offset%6#0",
        "result_native.0#0",
        "item_end_offset%7#0"
      ]
    },
    "1591": {
      "op": "swap"
    },
    "1592": {
      "op": "cover 3",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "awst_tmp%3#0",
        "result_native.0#0",
        "tmp%28#1",
        "item_end_offset%6#0",
        "item_end_offset%7#0"
      ]
    },
    "1594": {
      "op": "substring3",
      "defined_out": [
        "awst_tmp%3#0",
        "item1%3#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "result_native.0#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "awst_tmp%3#0",
        "result_native.0#0",
        "item1%3#0"
      ]
    },
    "1595": {
      "op": "extract 2 0",
      "defined_out": [
        "awst_tmp%3#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "result_native.0#0",
        "result_native.1#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "awst_tmp%3#0",
        "result_native.0#0",
        "result_native.1#0"
      ]
    },
    "1598": {
      "op": "dig 2",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "awst_tmp%3#0",
        "result_native.0#0",
        "result_native.1#0",
        "awst_tmp%3#0 (copy)"
      ]
    },
    "1600": {
      "op": "pushint 8 // 8",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "awst_tmp%3#0",
        "result_native.0#0",
        "result_native.1#0",
        "awst_tmp%3#0 (copy)",
        "8"
      ]
    },
    "1602": {
      "op": "extract_uint64",
      "defined_out": [
        "awst_tmp%3#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "result_native.0#0",
        "result_native.1#0",
        "result_native.2#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "awst_tmp%3#0",
        "result_native.0#0",
        "result_native.1#0",
        "result_native.2#0"
      ]
    },
    "1603": {
      "op": "uncover 3",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "result_native.0#0",
        "result_native.1#0",
        "result_native.2#0",
        "awst_tmp%3#0"
      ]
    },
    "1605": {
      "op": "extract 16 64",
      "defined_out": [
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "result_native.0#0",
        "result_native.1#0",
        "result_native.2#0",
        "result_native.3#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "result_native.0#0",
        "result_native.1#0",
        "result_native.2#0",
        "result_native.3#0"
      ]
    },
    "1608": {
      "op": "uncover 3",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "result_native.1#0",
        "result_native.2#0",
        "result_native.3#0",
        "result_native.0#0"
      ]
    },
    "1610": {
      "op": "uncover 7",
      "stack_out": [
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "result_native.1#0",
        "result_native.2#0",
        "result_native.3#0",
        "result_native.0#0",
        "result.0#0"
      ]
    },
    "1612": {
      "op": "==",
      "defined_out": [
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "result_native.1#0",
        "result_native.2#0",
        "result_native.3#0",
        "tmp%31#1"
      ],
      "stack_out": [
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "result_native.1#0",
        "result_native.2#0",
        "result_native.3#0",
        "tmp%31#1"
      ]
    },
    "1613": {
      "op": "uncover 3",
      "stack_out": [
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "result_native.2#0",
        "result_native.3#0",
        "tmp%31#1",
        "result_native.1#0"
      ]
    },
    "1615": {
      "op": "uncover 6",
      "stack_out": [
        "result.2#0",
        "result.3#0",
        "result_native.2#0",
        "result_native.3#0",
        "tmp%31#1",
        "result_native.1#0",
        "result.1#0"
      ]
    },
    "1617": {
      "op": "==",
      "defined_out": [
        "result.2#0",
        "result.3#0",
        "result_native.2#0",
        "result_native.3#0",
        "tmp%31#1",
        "tmp%32#0"
      ],
      "stack_out": [
        "result.2#0",
        "result.3#0",
        "result_native.2#0",
        "result_native.3#0",
        "tmp%31#1",
        "tmp%32#0"
      ]
    },
    "1618": {
      "op": "&&",
      "defined_out": [
        "result.2#0",
        "result.3#0",
        "result_native.2#0",
        "result_native.3#0",
        "tmp%33#1"
      ],
      "stack_out": [
        "result.2#0",
        "result.3#0",
        "result_native.2#0",
        "result_native.3#0",
        "tmp%33#1"
      ]
    },
    "1619": {
      "op": "uncover 2",
      "stack_out": [
        "result.2#0",
        "result.3#0",
        "result_native.3#0",
        "tmp%33#1",
        "result_native.2#0"
      ]
    },
    "1621": {
      "op": "uncover 4",
      "stack_out": [
        "result.3#0",
        "result_native.3#0",
        "tmp%33#1",
        "result_native.2#0",
        "result.2#0"
      ]
    },
    "1623": {
      "op": "==",
      "defined_out": [
        "result.3#0",
        "result_native.3#0",
        "tmp%33#1",
        "tmp%34#1"
      ],
      "stack_out": [
        "result.3#0",
        "result_native.3#0",
        "tmp%33#1",
        "tmp%34#1"
      ]
    },
    "1624": {
      "op": "&&",
      "defined_out": [
        "result.3#0",
        "result_native.3#0",
        "tmp%35#1"
      ],
      "stack_out": [
        "result.3#0",
        "result_native.3#0",
        "tmp%35#1"
      ]
    },
    "1625": {
      "op": "swap",
      "stack_out": [
        "result.3#0",
        "tmp%35#1",
        "result_native.3#0"
      ]
    },
    "1626": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%35#1",
        "result_native.3#0",
        "result.3#0"
      ]
    },
    "1628": {
      "op": "b==",
      "defined_out": [
        "tmp%35#1",
        "tmp%36#1"
      ],
      "stack_out": [
        "tmp%35#1",
        "tmp%36#1"
      ]
    },
    "1629": {
      "op": "&&",
      "defined_out": [
        "tmp%37#1"
      ],
      "stack_out": [
        "tmp%37#1"
      ]
    },
    "1630": {
      "op": "assert",
      "stack_out": []
    },
    "1631": {
      "op": "intc_2 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1632": {
      "op": "return"
    },
    "1633": {
      "block": "main_test_native_tuple_route@14",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%75#0"
      ],
      "stack_out": [
        "tmp%75#0"
      ]
    },
    "1635": {
      "op": "!",
      "defined_out": [
        "tmp%76#0"
      ],
      "stack_out": [
        "tmp%76#0"
      ]
    },
    "1636": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "1637": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%77#0"
      ],
      "stack_out": [
        "tmp%77#0"
      ]
    },
    "1639": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "1640": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[1]%12#0"
      ],
      "stack_out": [
        "reinterpret_bytes[1]%12#0"
      ]
    },
    "1643": {
      "op": "btoi",
      "defined_out": [
        "tmp%79#0"
      ],
      "stack_out": [
        "tmp%79#0"
      ]
    },
    "1644": {
      "op": "txnas Applications",
      "defined_out": [
        "app#0"
      ],
      "stack_out": [
        "app#0"
      ]
    },
    "1646": {
      "op": "itxn_begin"
    },
    "1647": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "app#0 (copy)"
      ],
      "stack_out": [
        "app#0",
        "app#0 (copy)"
      ]
    },
    "1648": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "app#0"
      ]
    },
    "1650": {
      "op": "bytec 4 // method \"echo_native_tuple(string,byte[],uint64,uint512)(string,byte[],uint64,uint512)\"",
      "defined_out": [
        "Method(echo_native_tuple(string,byte[],uint64,uint512)(string,byte[],uint64,uint512))",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "Method(echo_native_tuple(string,byte[],uint64,uint512)(string,byte[],uint64,uint512))"
      ]
    },
    "1652": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0"
      ]
    },
    "1654": {
      "op": "bytec 5 // 0x00027331",
      "defined_out": [
        "0x00027331",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "0x00027331"
      ]
    },
    "1656": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0"
      ]
    },
    "1658": {
      "op": "bytec 6 // 0x00026231",
      "defined_out": [
        "0x00026231",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "0x00026231"
      ]
    },
    "1660": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0"
      ]
    },
    "1662": {
      "op": "bytec_2 // 0x0000000000000001",
      "defined_out": [
        "0x0000000000000001",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "0x0000000000000001"
      ]
    },
    "1663": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0"
      ]
    },
    "1665": {
      "op": "bytec_1 // 0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002",
      "defined_out": [
        "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002"
      ]
    },
    "1666": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0"
      ]
    },
    "1668": {
      "op": "intc_1 // appl",
      "defined_out": [
        "app#0",
        "appl"
      ],
      "stack_out": [
        "app#0",
        "appl"
      ]
    },
    "1669": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "app#0"
      ]
    },
    "1671": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "0"
      ]
    },
    "1672": {
      "op": "itxn_field Fee",
      "stack_out": [
        "app#0"
      ]
    },
    "1674": {
      "op": "itxn_submit"
    },
    "1675": {
      "op": "itxn LastLog"
    },
    "1677": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ]
    },
    "1678": {
      "op": "extract 4 0",
      "defined_out": [
        "app#0",
        "awst_tmp%0#0",
        "result1#0"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "result1#0"
      ]
    },
    "1681": {
      "op": "dig 1",
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "result1#0",
        "awst_tmp%0#0 (copy)"
      ]
    },
    "1683": {
      "op": "extract 0 4",
      "defined_out": [
        "app#0",
        "awst_tmp%0#0",
        "result1#0",
        "tmp%1#1"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "result1#0",
        "tmp%1#1"
      ]
    },
    "1686": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "app#0",
        "awst_tmp%0#0",
        "result1#0",
        "tmp%1#1"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "result1#0",
        "tmp%1#1",
        "0x151f7c75"
      ]
    },
    "1687": {
      "op": "==",
      "defined_out": [
        "app#0",
        "awst_tmp%0#0",
        "result1#0",
        "tmp%2#1"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "result1#0",
        "tmp%2#1"
      ]
    },
    "1688": {
      "error": "ARC4 prefix is valid",
      "op": "assert // ARC4 prefix is valid",
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "result1#0"
      ]
    },
    "1689": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "awst_tmp%0#0",
        "result1#0",
        "result1#0 (copy)"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "result1#0",
        "result1#0 (copy)"
      ]
    },
    "1690": {
      "op": "intc_0 // 0",
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "result1#0",
        "result1#0 (copy)",
        "0"
      ]
    },
    "1691": {
      "op": "extract_uint16",
      "defined_out": [
        "app#0",
        "awst_tmp%0#0",
        "item_start_offset%0#0",
        "result1#0"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "result1#0",
        "item_start_offset%0#0"
      ]
    },
    "1692": {
      "op": "dig 1",
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "result1#0",
        "item_start_offset%0#0",
        "result1#0 (copy)"
      ]
    },
    "1694": {
      "op": "intc_3 // 2",
      "defined_out": [
        "2",
        "app#0",
        "awst_tmp%0#0",
        "item_start_offset%0#0",
        "result1#0",
        "result1#0 (copy)"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "result1#0",
        "item_start_offset%0#0",
        "result1#0 (copy)",
        "2"
      ]
    },
    "1695": {
      "op": "extract_uint16",
      "defined_out": [
        "app#0",
        "awst_tmp%0#0",
        "item_end_offset%0#0",
        "item_start_offset%0#0",
        "result1#0"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "result1#0",
        "item_start_offset%0#0",
        "item_end_offset%0#0"
      ]
    },
    "1696": {
      "op": "dig 2",
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "result1#0",
        "item_start_offset%0#0",
        "item_end_offset%0#0",
        "result1#0 (copy)"
      ]
    },
    "1698": {
      "op": "uncover 2",
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "result1#0",
        "item_end_offset%0#0",
        "result1#0 (copy)",
        "item_start_offset%0#0"
      ]
    },
    "1700": {
      "op": "dig 2",
      "defined_out": [
        "app#0",
        "awst_tmp%0#0",
        "item_end_offset%0#0",
        "item_end_offset%0#0 (copy)",
        "item_start_offset%0#0",
        "result1#0",
        "result1#0 (copy)"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "result1#0",
        "item_end_offset%0#0",
        "result1#0 (copy)",
        "item_start_offset%0#0",
        "item_end_offset%0#0 (copy)"
      ]
    },
    "1702": {
      "op": "substring3",
      "defined_out": [
        "app#0",
        "awst_tmp%0#0",
        "item_end_offset%0#0",
        "result1#0",
        "s#0"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "result1#0",
        "item_end_offset%0#0",
        "s#0"
      ]
    },
    "1703": {
      "op": "dig 2",
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "result1#0",
        "item_end_offset%0#0",
        "s#0",
        "result1#0 (copy)"
      ]
    },
    "1705": {
      "op": "len",
      "defined_out": [
        "app#0",
        "awst_tmp%0#0",
        "item_end_offset%0#0",
        "item_end_offset%1#0",
        "result1#0",
        "s#0"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "result1#0",
        "item_end_offset%0#0",
        "s#0",
        "item_end_offset%1#0"
      ]
    },
    "1706": {
      "op": "dig 3",
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "result1#0",
        "item_end_offset%0#0",
        "s#0",
        "item_end_offset%1#0",
        "result1#0 (copy)"
      ]
    },
    "1708": {
      "op": "uncover 3",
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "result1#0",
        "s#0",
        "item_end_offset%1#0",
        "result1#0 (copy)",
        "item_end_offset%0#0"
      ]
    },
    "1710": {
      "op": "uncover 2",
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "result1#0",
        "s#0",
        "result1#0 (copy)",
        "item_end_offset%0#0",
        "item_end_offset%1#0"
      ]
    },
    "1712": {
      "op": "substring3",
      "defined_out": [
        "app#0",
        "awst_tmp%0#0",
        "b#0",
        "result1#0",
        "s#0"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "result1#0",
        "s#0",
        "b#0"
      ]
    },
    "1713": {
      "op": "dig 3",
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "result1#0",
        "s#0",
        "b#0",
        "awst_tmp%0#0 (copy)"
      ]
    },
    "1715": {
      "op": "extract 16 64",
      "defined_out": [
        "app#0",
        "awst_tmp%0#0",
        "b#0",
        "bu#0",
        "result1#0",
        "s#0"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "result1#0",
        "s#0",
        "b#0",
        "bu#0"
      ]
    },
    "1718": {
      "op": "uncover 2",
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "result1#0",
        "b#0",
        "bu#0",
        "s#0"
      ]
    },
    "1720": {
      "op": "extract 2 0",
      "defined_out": [
        "app#0",
        "awst_tmp%0#0",
        "b#0",
        "bu#0",
        "result1#0",
        "tmp%3#3"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "result1#0",
        "b#0",
        "bu#0",
        "tmp%3#3"
      ]
    },
    "1723": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "awst_tmp%0#0",
        "b#0",
        "bu#0",
        "result1#0",
        "tmp%3#3",
        "tmp%3#3 (copy)"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "result1#0",
        "b#0",
        "bu#0",
        "tmp%3#3",
        "tmp%3#3 (copy)"
      ]
    },
    "1724": {
      "op": "bytec 8 // \"echo: s1\"",
      "defined_out": [
        "\"echo: s1\"",
        "app#0",
        "awst_tmp%0#0",
        "b#0",
        "bu#0",
        "result1#0",
        "tmp%3#3",
        "tmp%3#3 (copy)"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "result1#0",
        "b#0",
        "bu#0",
        "tmp%3#3",
        "tmp%3#3 (copy)",
        "\"echo: s1\""
      ]
    },
    "1726": {
      "op": "==",
      "defined_out": [
        "app#0",
        "awst_tmp%0#0",
        "b#0",
        "bu#0",
        "result1#0",
        "tmp%3#3",
        "tmp%4#0"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "result1#0",
        "b#0",
        "bu#0",
        "tmp%3#3",
        "tmp%4#0"
      ]
    },
    "1727": {
      "op": "assert",
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "result1#0",
        "b#0",
        "bu#0",
        "tmp%3#3"
      ]
    },
    "1728": {
      "op": "uncover 2",
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "result1#0",
        "bu#0",
        "tmp%3#3",
        "b#0"
      ]
    },
    "1730": {
      "op": "extract 2 0",
      "defined_out": [
        "app#0",
        "awst_tmp%0#0",
        "bu#0",
        "result1#0",
        "tmp%3#3",
        "tmp%5#1"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "result1#0",
        "bu#0",
        "tmp%3#3",
        "tmp%5#1"
      ]
    },
    "1733": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "awst_tmp%0#0",
        "bu#0",
        "result1#0",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%5#1 (copy)"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "result1#0",
        "bu#0",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%5#1 (copy)"
      ]
    },
    "1734": {
      "op": "bytec 25 // 0x6563686f3a206231",
      "defined_out": [
        "0x6563686f3a206231",
        "app#0",
        "awst_tmp%0#0",
        "bu#0",
        "result1#0",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%5#1 (copy)"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "result1#0",
        "bu#0",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%5#1 (copy)",
        "0x6563686f3a206231"
      ]
    },
    "1736": {
      "op": "==",
      "defined_out": [
        "app#0",
        "awst_tmp%0#0",
        "bu#0",
        "result1#0",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%6#1"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "result1#0",
        "bu#0",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%6#1"
      ]
    },
    "1737": {
      "op": "assert",
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "result1#0",
        "bu#0",
        "tmp%3#3",
        "tmp%5#1"
      ]
    },
    "1738": {
      "op": "uncover 4",
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%3#3",
        "tmp%5#1",
        "awst_tmp%0#0"
      ]
    },
    "1740": {
      "op": "pushint 8 // 8",
      "defined_out": [
        "8",
        "app#0",
        "awst_tmp%0#0",
        "bu#0",
        "result1#0",
        "tmp%3#3",
        "tmp%5#1"
      ],
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%3#3",
        "tmp%5#1",
        "awst_tmp%0#0",
        "8"
      ]
    },
    "1742": {
      "op": "extract_uint64",
      "defined_out": [
        "app#0",
        "bu#0",
        "result1#0",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%7#4"
      ],
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%7#4"
      ]
    },
    "1743": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "bu#0",
        "result1#0",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%7#4",
        "tmp%7#4 (copy)"
      ],
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%7#4",
        "tmp%7#4 (copy)"
      ]
    },
    "1744": {
      "op": "intc_3 // 2",
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%7#4",
        "tmp%7#4 (copy)",
        "2"
      ]
    },
    "1745": {
      "op": "==",
      "defined_out": [
        "app#0",
        "bu#0",
        "result1#0",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%7#4",
        "tmp%8#1"
      ],
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%7#4",
        "tmp%8#1"
      ]
    },
    "1746": {
      "op": "assert",
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%7#4"
      ]
    },
    "1747": {
      "op": "dig 3",
      "defined_out": [
        "app#0",
        "bu#0",
        "bu#0 (copy)",
        "result1#0",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%7#4"
      ],
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%7#4",
        "bu#0 (copy)"
      ]
    },
    "1749": {
      "op": "bytec 13 // 0x03",
      "defined_out": [
        "0x03",
        "app#0",
        "bu#0",
        "bu#0 (copy)",
        "result1#0",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%7#4"
      ],
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%7#4",
        "bu#0 (copy)",
        "0x03"
      ]
    },
    "1751": {
      "op": "b==",
      "defined_out": [
        "app#0",
        "bu#0",
        "result1#0",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%7#4",
        "tmp%9#4"
      ],
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%7#4",
        "tmp%9#4"
      ]
    },
    "1752": {
      "op": "assert",
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%7#4"
      ]
    },
    "1753": {
      "op": "itxn_begin"
    },
    "1754": {
      "op": "intc_2 // 1",
      "defined_out": [
        "1",
        "app#0",
        "bu#0",
        "result1#0",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%7#4"
      ],
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%7#4",
        "1"
      ]
    },
    "1755": {
      "op": "itob",
      "defined_out": [
        "app#0",
        "bu#0",
        "result1#0",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%7#4",
        "val_as_bytes%0#1"
      ],
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%7#4",
        "val_as_bytes%0#1"
      ]
    },
    "1756": {
      "op": "dig 6",
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%7#4",
        "val_as_bytes%0#1",
        "app#0 (copy)"
      ]
    },
    "1758": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%7#4",
        "val_as_bytes%0#1"
      ]
    },
    "1760": {
      "op": "bytec 4 // method \"echo_native_tuple(string,byte[],uint64,uint512)(string,byte[],uint64,uint512)\"",
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%7#4",
        "val_as_bytes%0#1",
        "Method(echo_native_tuple(string,byte[],uint64,uint512)(string,byte[],uint64,uint512))"
      ]
    },
    "1762": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%7#4",
        "val_as_bytes%0#1"
      ]
    },
    "1764": {
      "op": "bytec 5 // 0x00027331",
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%7#4",
        "val_as_bytes%0#1",
        "0x00027331"
      ]
    },
    "1766": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%7#4",
        "val_as_bytes%0#1"
      ]
    },
    "1768": {
      "op": "bytec 6 // 0x00026231",
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%7#4",
        "val_as_bytes%0#1",
        "0x00026231"
      ]
    },
    "1770": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%7#4",
        "val_as_bytes%0#1"
      ]
    },
    "1772": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%7#4"
      ]
    },
    "1774": {
      "op": "bytec_1 // 0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002",
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%7#4",
        "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002"
      ]
    },
    "1775": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%7#4"
      ]
    },
    "1777": {
      "op": "intc_1 // appl",
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%7#4",
        "appl"
      ]
    },
    "1778": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%7#4"
      ]
    },
    "1780": {
      "op": "intc_0 // 0",
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%7#4",
        "0"
      ]
    },
    "1781": {
      "op": "itxn_field Fee",
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%7#4"
      ]
    },
    "1783": {
      "op": "itxn_submit"
    },
    "1784": {
      "op": "itxn LastLog"
    },
    "1786": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "awst_tmp%1#0",
        "awst_tmp%1#0 (copy)",
        "bu#0",
        "result1#0",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%7#4"
      ],
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%7#4",
        "awst_tmp%1#0",
        "awst_tmp%1#0 (copy)"
      ]
    },
    "1787": {
      "op": "extract 4 0",
      "defined_out": [
        "app#0",
        "awst_tmp%1#0",
        "bu#0",
        "result1#0",
        "result2#0",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%7#4"
      ],
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%7#4",
        "awst_tmp%1#0",
        "result2#0"
      ]
    },
    "1790": {
      "op": "swap",
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%7#4",
        "result2#0",
        "awst_tmp%1#0"
      ]
    },
    "1791": {
      "op": "extract 0 4",
      "defined_out": [
        "app#0",
        "bu#0",
        "result1#0",
        "result2#0",
        "tmp%12#3",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%7#4"
      ],
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%7#4",
        "result2#0",
        "tmp%12#3"
      ]
    },
    "1794": {
      "op": "bytec_0 // 0x151f7c75",
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%7#4",
        "result2#0",
        "tmp%12#3",
        "0x151f7c75"
      ]
    },
    "1795": {
      "op": "==",
      "defined_out": [
        "app#0",
        "bu#0",
        "result1#0",
        "result2#0",
        "tmp%13#2",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%7#4"
      ],
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%7#4",
        "result2#0",
        "tmp%13#2"
      ]
    },
    "1796": {
      "error": "ARC4 prefix is valid",
      "op": "assert // ARC4 prefix is valid",
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%7#4",
        "result2#0"
      ]
    },
    "1797": {
      "op": "dig 5",
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%7#4",
        "result2#0",
        "result1#0 (copy)"
      ]
    },
    "1799": {
      "op": "==",
      "defined_out": [
        "app#0",
        "bu#0",
        "result1#0",
        "tmp%14#0",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%7#4"
      ],
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%7#4",
        "tmp%14#0"
      ]
    },
    "1800": {
      "op": "assert",
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%7#4"
      ]
    },
    "1801": {
      "op": "itxn_begin"
    },
    "1802": {
      "op": "dig 5",
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%7#4",
        "app#0 (copy)"
      ]
    },
    "1804": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%7#4"
      ]
    },
    "1806": {
      "op": "bytec 4 // method \"echo_native_tuple(string,byte[],uint64,uint512)(string,byte[],uint64,uint512)\"",
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%7#4",
        "Method(echo_native_tuple(string,byte[],uint64,uint512)(string,byte[],uint64,uint512))"
      ]
    },
    "1808": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%7#4"
      ]
    },
    "1810": {
      "op": "bytec 5 // 0x00027331",
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%7#4",
        "0x00027331"
      ]
    },
    "1812": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%7#4"
      ]
    },
    "1814": {
      "op": "bytec 6 // 0x00026231",
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%7#4",
        "0x00026231"
      ]
    },
    "1816": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%7#4"
      ]
    },
    "1818": {
      "op": "bytec_2 // 0x0000000000000001",
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%7#4",
        "0x0000000000000001"
      ]
    },
    "1819": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%7#4"
      ]
    },
    "1821": {
      "op": "bytec_1 // 0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002",
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%7#4",
        "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002"
      ]
    },
    "1822": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%7#4"
      ]
    },
    "1824": {
      "op": "intc_1 // appl",
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%7#4",
        "appl"
      ]
    },
    "1825": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%7#4"
      ]
    },
    "1827": {
      "op": "intc_0 // 0",
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%7#4",
        "0"
      ]
    },
    "1828": {
      "op": "itxn_field Fee",
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%7#4"
      ]
    },
    "1830": {
      "op": "itxn_submit"
    },
    "1831": {
      "op": "itxn LastLog"
    },
    "1833": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "awst_tmp%2#0",
        "awst_tmp%2#0 (copy)",
        "bu#0",
        "result1#0",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%7#4"
      ],
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%7#4",
        "awst_tmp%2#0",
        "awst_tmp%2#0 (copy)"
      ]
    },
    "1834": {
      "op": "extract 4 0",
      "defined_out": [
        "app#0",
        "awst_tmp%2#0",
        "bu#0",
        "result1#0",
        "result3#0",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%7#4"
      ],
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%7#4",
        "awst_tmp%2#0",
        "result3#0"
      ]
    },
    "1837": {
      "op": "swap",
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%7#4",
        "result3#0",
        "awst_tmp%2#0"
      ]
    },
    "1838": {
      "op": "extract 0 4",
      "defined_out": [
        "app#0",
        "bu#0",
        "result1#0",
        "result3#0",
        "tmp%16#2",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%7#4"
      ],
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%7#4",
        "result3#0",
        "tmp%16#2"
      ]
    },
    "1841": {
      "op": "bytec_0 // 0x151f7c75",
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%7#4",
        "result3#0",
        "tmp%16#2",
        "0x151f7c75"
      ]
    },
    "1842": {
      "op": "==",
      "defined_out": [
        "app#0",
        "bu#0",
        "result1#0",
        "result3#0",
        "tmp%17#2",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%7#4"
      ],
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%7#4",
        "result3#0",
        "tmp%17#2"
      ]
    },
    "1843": {
      "error": "ARC4 prefix is valid",
      "op": "assert // ARC4 prefix is valid",
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%7#4",
        "result3#0"
      ]
    },
    "1844": {
      "op": "uncover 5",
      "stack_out": [
        "app#0",
        "bu#0",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%7#4",
        "result3#0",
        "result1#0"
      ]
    },
    "1846": {
      "op": "==",
      "defined_out": [
        "app#0",
        "bu#0",
        "tmp%18#1",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%7#4"
      ],
      "stack_out": [
        "app#0",
        "bu#0",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%7#4",
        "tmp%18#1"
      ]
    },
    "1847": {
      "op": "assert",
      "stack_out": [
        "app#0",
        "bu#0",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%7#4"
      ]
    },
    "1848": {
      "op": "itxn_begin"
    },
    "1849": {
      "op": "uncover 4",
      "stack_out": [
        "bu#0",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%7#4",
        "app#0"
      ]
    },
    "1851": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "bu#0",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%7#4"
      ]
    },
    "1853": {
      "op": "bytec 4 // method \"echo_native_tuple(string,byte[],uint64,uint512)(string,byte[],uint64,uint512)\"",
      "stack_out": [
        "bu#0",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%7#4",
        "Method(echo_native_tuple(string,byte[],uint64,uint512)(string,byte[],uint64,uint512))"
      ]
    },
    "1855": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "bu#0",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%7#4"
      ]
    },
    "1857": {
      "op": "bytec 5 // 0x00027331",
      "stack_out": [
        "bu#0",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%7#4",
        "0x00027331"
      ]
    },
    "1859": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "bu#0",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%7#4"
      ]
    },
    "1861": {
      "op": "bytec 6 // 0x00026231",
      "stack_out": [
        "bu#0",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%7#4",
        "0x00026231"
      ]
    },
    "1863": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "bu#0",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%7#4"
      ]
    },
    "1865": {
      "op": "bytec_2 // 0x0000000000000001",
      "stack_out": [
        "bu#0",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%7#4",
        "0x0000000000000001"
      ]
    },
    "1866": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "bu#0",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%7#4"
      ]
    },
    "1868": {
      "op": "bytec_1 // 0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002",
      "stack_out": [
        "bu#0",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%7#4",
        "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002"
      ]
    },
    "1869": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "bu#0",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%7#4"
      ]
    },
    "1871": {
      "op": "intc_1 // appl",
      "stack_out": [
        "bu#0",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%7#4",
        "appl"
      ]
    },
    "1872": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "bu#0",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%7#4"
      ]
    },
    "1874": {
      "op": "intc_0 // 0",
      "stack_out": [
        "bu#0",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%7#4",
        "0"
      ]
    },
    "1875": {
      "op": "itxn_field Fee",
      "stack_out": [
        "bu#0",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%7#4"
      ]
    },
    "1877": {
      "op": "itxn_submit"
    },
    "1878": {
      "op": "itxn LastLog"
    },
    "1880": {
      "op": "dup",
      "defined_out": [
        "awst_tmp%3#0",
        "awst_tmp%3#0 (copy)",
        "bu#0",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%7#4"
      ],
      "stack_out": [
        "bu#0",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%7#4",
        "awst_tmp%3#0",
        "awst_tmp%3#0 (copy)"
      ]
    },
    "1881": {
      "op": "extract 4 0",
      "defined_out": [
        "awst_tmp%3#0",
        "bu#0",
        "tmp%19#2",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%7#4"
      ],
      "stack_out": [
        "bu#0",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%7#4",
        "awst_tmp%3#0",
        "tmp%19#2"
      ]
    },
    "1884": {
      "op": "dig 1",
      "stack_out": [
        "bu#0",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%7#4",
        "awst_tmp%3#0",
        "tmp%19#2",
        "awst_tmp%3#0 (copy)"
      ]
    },
    "1886": {
      "op": "extract 0 4",
      "defined_out": [
        "awst_tmp%3#0",
        "bu#0",
        "tmp%19#2",
        "tmp%20#3",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%7#4"
      ],
      "stack_out": [
        "bu#0",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%7#4",
        "awst_tmp%3#0",
        "tmp%19#2",
        "tmp%20#3"
      ]
    },
    "1889": {
      "op": "bytec_0 // 0x151f7c75",
      "stack_out": [
        "bu#0",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%7#4",
        "awst_tmp%3#0",
        "tmp%19#2",
        "tmp%20#3",
        "0x151f7c75"
      ]
    },
    "1890": {
      "op": "==",
      "defined_out": [
        "awst_tmp%3#0",
        "bu#0",
        "tmp%19#2",
        "tmp%21#1",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%7#4"
      ],
      "stack_out": [
        "bu#0",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%7#4",
        "awst_tmp%3#0",
        "tmp%19#2",
        "tmp%21#1"
      ]
    },
    "1891": {
      "error": "ARC4 prefix is valid",
      "op": "assert // ARC4 prefix is valid",
      "stack_out": [
        "bu#0",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%7#4",
        "awst_tmp%3#0",
        "tmp%19#2"
      ]
    },
    "1892": {
      "op": "dup",
      "defined_out": [
        "awst_tmp%3#0",
        "bu#0",
        "tmp%19#2",
        "tmp%19#2 (copy)",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%7#4"
      ],
      "stack_out": [
        "bu#0",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%7#4",
        "awst_tmp%3#0",
        "tmp%19#2",
        "tmp%19#2 (copy)"
      ]
    },
    "1893": {
      "op": "intc_0 // 0",
      "stack_out": [
        "bu#0",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%7#4",
        "awst_tmp%3#0",
        "tmp%19#2",
        "tmp%19#2 (copy)",
        "0"
      ]
    },
    "1894": {
      "op": "extract_uint16",
      "defined_out": [
        "awst_tmp%3#0",
        "bu#0",
        "item_start_offset%2#0",
        "tmp%19#2",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%7#4"
      ],
      "stack_out": [
        "bu#0",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%7#4",
        "awst_tmp%3#0",
        "tmp%19#2",
        "item_start_offset%2#0"
      ]
    },
    "1895": {
      "op": "dig 1",
      "stack_out": [
        "bu#0",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%7#4",
        "awst_tmp%3#0",
        "tmp%19#2",
        "item_start_offset%2#0",
        "tmp%19#2 (copy)"
      ]
    },
    "1897": {
      "op": "intc_3 // 2",
      "stack_out": [
        "bu#0",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%7#4",
        "awst_tmp%3#0",
        "tmp%19#2",
        "item_start_offset%2#0",
        "tmp%19#2 (copy)",
        "2"
      ]
    },
    "1898": {
      "op": "extract_uint16",
      "defined_out": [
        "awst_tmp%3#0",
        "bu#0",
        "item_end_offset%2#0",
        "item_start_offset%2#0",
        "tmp%19#2",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%7#4"
      ],
      "stack_out": [
        "bu#0",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%7#4",
        "awst_tmp%3#0",
        "tmp%19#2",
        "item_start_offset%2#0",
        "item_end_offset%2#0"
      ]
    },
    "1899": {
      "op": "dig 2",
      "stack_out": [
        "bu#0",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%7#4",
        "awst_tmp%3#0",
        "tmp%19#2",
        "item_start_offset%2#0",
        "item_end_offset%2#0",
        "tmp%19#2 (copy)"
      ]
    },
    "1901": {
      "op": "uncover 2",
      "stack_out": [
        "bu#0",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%7#4",
        "awst_tmp%3#0",
        "tmp%19#2",
        "item_end_offset%2#0",
        "tmp%19#2 (copy)",
        "item_start_offset%2#0"
      ]
    },
    "1903": {
      "op": "dig 2",
      "defined_out": [
        "awst_tmp%3#0",
        "bu#0",
        "item_end_offset%2#0",
        "item_end_offset%2#0 (copy)",
        "item_start_offset%2#0",
        "tmp%19#2",
        "tmp%19#2 (copy)",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%7#4"
      ],
      "stack_out": [
        "bu#0",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%7#4",
        "awst_tmp%3#0",
        "tmp%19#2",
        "item_end_offset%2#0",
        "tmp%19#2 (copy)",
        "item_start_offset%2#0",
        "item_end_offset%2#0 (copy)"
      ]
    },
    "1905": {
      "op": "substring3",
      "defined_out": [
        "awst_tmp%3#0",
        "bu#0",
        "item0%1#0",
        "item_end_offset%2#0",
        "tmp%19#2",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%7#4"
      ],
      "stack_out": [
        "bu#0",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%7#4",
        "awst_tmp%3#0",
        "tmp%19#2",
        "item_end_offset%2#0",
        "item0%1#0"
      ]
    },
    "1906": {
      "op": "extract 2 0",
      "defined_out": [
        "awst_tmp%3#0",
        "bu#0",
        "item_end_offset%2#0",
        "result_native.0#0",
        "tmp%19#2",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%7#4"
      ],
      "stack_out": [
        "bu#0",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%7#4",
        "awst_tmp%3#0",
        "tmp%19#2",
        "item_end_offset%2#0",
        "result_native.0#0"
      ]
    },
    "1909": {
      "op": "dig 2",
      "stack_out": [
        "bu#0",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%7#4",
        "awst_tmp%3#0",
        "tmp%19#2",
        "item_end_offset%2#0",
        "result_native.0#0",
        "tmp%19#2 (copy)"
      ]
    },
    "1911": {
      "op": "len",
      "defined_out": [
        "awst_tmp%3#0",
        "bu#0",
        "item_end_offset%2#0",
        "item_end_offset%3#0",
        "result_native.0#0",
        "tmp%19#2",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%7#4"
      ],
      "stack_out": [
        "bu#0",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%7#4",
        "awst_tmp%3#0",
        "tmp%19#2",
        "item_end_offset%2#0",
        "result_native.0#0",
        "item_end_offset%3#0"
      ]
    },
    "1912": {
      "op": "swap"
    },
    "1913": {
      "op": "cover 3",
      "stack_out": [
        "bu#0",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%7#4",
        "awst_tmp%3#0",
        "result_native.0#0",
        "tmp%19#2",
        "item_end_offset%2#0",
        "item_end_offset%3#0"
      ]
    },
    "1915": {
      "op": "substring3",
      "defined_out": [
        "awst_tmp%3#0",
        "bu#0",
        "item1%1#0",
        "result_native.0#0",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%7#4"
      ],
      "stack_out": [
        "bu#0",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%7#4",
        "awst_tmp%3#0",
        "result_native.0#0",
        "item1%1#0"
      ]
    },
    "1916": {
      "op": "extract 2 0",
      "defined_out": [
        "awst_tmp%3#0",
        "bu#0",
        "result_native.0#0",
        "result_native.1#0",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%7#4"
      ],
      "stack_out": [
        "bu#0",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%7#4",
        "awst_tmp%3#0",
        "result_native.0#0",
        "result_native.1#0"
      ]
    },
    "1919": {
      "op": "dig 2",
      "stack_out": [
        "bu#0",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%7#4",
        "awst_tmp%3#0",
        "result_native.0#0",
        "result_native.1#0",
        "awst_tmp%3#0 (copy)"
      ]
    },
    "1921": {
      "op": "pushint 8 // 8",
      "stack_out": [
        "bu#0",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%7#4",
        "awst_tmp%3#0",
        "result_native.0#0",
        "result_native.1#0",
        "awst_tmp%3#0 (copy)",
        "8"
      ]
    },
    "1923": {
      "op": "extract_uint64",
      "defined_out": [
        "awst_tmp%3#0",
        "bu#0",
        "result_native.0#0",
        "result_native.1#0",
        "result_native.2#0",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%7#4"
      ],
      "stack_out": [
        "bu#0",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%7#4",
        "awst_tmp%3#0",
        "result_native.0#0",
        "result_native.1#0",
        "result_native.2#0"
      ]
    },
    "1924": {
      "op": "uncover 3",
      "stack_out": [
        "bu#0",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%7#4",
        "result_native.0#0",
        "result_native.1#0",
        "result_native.2#0",
        "awst_tmp%3#0"
      ]
    },
    "1926": {
      "op": "extract 16 64",
      "defined_out": [
        "bu#0",
        "result_native.0#0",
        "result_native.1#0",
        "result_native.2#0",
        "result_native.3#0",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%7#4"
      ],
      "stack_out": [
        "bu#0",
        "tmp%3#3",
        "tmp%5#1",
        "tmp%7#4",
        "result_native.0#0",
        "result_native.1#0",
        "result_native.2#0",
        "result_native.3#0"
      ]
    },
    "1929": {
      "op": "uncover 6",
      "stack_out": [
        "bu#0",
        "tmp%5#1",
        "tmp%7#4",
        "result_native.0#0",
        "result_native.1#0",
        "result_native.2#0",
        "result_native.3#0",
        "tmp%3#3"
      ]
    },
    "1931": {
      "op": "uncover 4",
      "stack_out": [
        "bu#0",
        "tmp%5#1",
        "tmp%7#4",
        "result_native.1#0",
        "result_native.2#0",
        "result_native.3#0",
        "tmp%3#3",
        "result_native.0#0"
      ]
    },
    "1933": {
      "op": "==",
      "defined_out": [
        "bu#0",
        "result_native.1#0",
        "result_native.2#0",
        "result_native.3#0",
        "tmp%23#1",
        "tmp%5#1",
        "tmp%7#4"
      ],
      "stack_out": [
        "bu#0",
        "tmp%5#1",
        "tmp%7#4",
        "result_native.1#0",
        "result_native.2#0",
        "result_native.3#0",
        "tmp%23#1"
      ]
    },
    "1934": {
      "op": "assert",
      "stack_out": [
        "bu#0",
        "tmp%5#1",
        "tmp%7#4",
        "result_native.1#0",
        "result_native.2#0",
        "result_native.3#0"
      ]
    },
    "1935": {
      "op": "uncover 4",
      "stack_out": [
        "bu#0",
        "tmp%7#4",
        "result_native.1#0",
        "result_native.2#0",
        "result_native.3#0",
        "tmp%5#1"
      ]
    },
    "1937": {
      "op": "uncover 3",
      "stack_out": [
        "bu#0",
        "tmp%7#4",
        "result_native.2#0",
        "result_native.3#0",
        "tmp%5#1",
        "result_native.1#0"
      ]
    },
    "1939": {
      "op": "==",
      "defined_out": [
        "bu#0",
        "result_native.2#0",
        "result_native.3#0",
        "tmp%25#1",
        "tmp%7#4"
      ],
      "stack_out": [
        "bu#0",
        "tmp%7#4",
        "result_native.2#0",
        "result_native.3#0",
        "tmp%25#1"
      ]
    },
    "1940": {
      "op": "assert",
      "stack_out": [
        "bu#0",
        "tmp%7#4",
        "result_native.2#0",
        "result_native.3#0"
      ]
    },
    "1941": {
      "op": "cover 2",
      "stack_out": [
        "bu#0",
        "result_native.3#0",
        "tmp%7#4",
        "result_native.2#0"
      ]
    },
    "1943": {
      "op": "==",
      "defined_out": [
        "bu#0",
        "result_native.3#0",
        "tmp%27#1"
      ],
      "stack_out": [
        "bu#0",
        "result_native.3#0",
        "tmp%27#1"
      ]
    },
    "1944": {
      "op": "assert",
      "stack_out": [
        "bu#0",
        "result_native.3#0"
      ]
    },
    "1945": {
      "op": "b==",
      "defined_out": [
        "tmp%28#2"
      ],
      "stack_out": [
        "tmp%28#2"
      ]
    },
    "1946": {
      "op": "assert",
      "stack_out": []
    },
    "1947": {
      "op": "intc_2 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1948": {
      "op": "return"
    },
    "1949": {
      "block": "main_test_native_biguint_route@13",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%69#0"
      ],
      "stack_out": [
        "tmp%69#0"
      ]
    },
    "1951": {
      "op": "!",
      "defined_out": [
        "tmp%70#0"
      ],
      "stack_out": [
        "tmp%70#0"
      ]
    },
    "1952": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "1953": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%71#0"
      ],
      "stack_out": [
        "tmp%71#0"
      ]
    },
    "1955": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "1956": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[1]%11#0"
      ],
      "stack_out": [
        "reinterpret_bytes[1]%11#0"
      ]
    },
    "1959": {
      "op": "btoi",
      "defined_out": [
        "tmp%73#0"
      ],
      "stack_out": [
        "tmp%73#0"
      ]
    },
    "1960": {
      "op": "txnas Applications",
      "defined_out": [
        "app#0"
      ],
      "stack_out": [
        "app#0"
      ]
    },
    "1962": {
      "op": "itxn_begin"
    },
    "1963": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "app#0 (copy)"
      ],
      "stack_out": [
        "app#0",
        "app#0 (copy)"
      ]
    },
    "1964": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "app#0"
      ]
    },
    "1966": {
      "op": "bytec 14 // method \"echo_native_biguint(uint512)uint512\"",
      "defined_out": [
        "Method(echo_native_biguint(uint512)uint512)",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "Method(echo_native_biguint(uint512)uint512)"
      ]
    },
    "1968": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0"
      ]
    },
    "1970": {
      "op": "bytec_1 // 0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002",
      "defined_out": [
        "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002"
      ]
    },
    "1971": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0"
      ]
    },
    "1973": {
      "op": "intc_1 // appl",
      "defined_out": [
        "app#0",
        "appl"
      ],
      "stack_out": [
        "app#0",
        "appl"
      ]
    },
    "1974": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "app#0"
      ]
    },
    "1976": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "0"
      ]
    },
    "1977": {
      "op": "itxn_field Fee",
      "stack_out": [
        "app#0"
      ]
    },
    "1979": {
      "op": "itxn_submit"
    },
    "1980": {
      "op": "itxn LastLog"
    },
    "1982": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ]
    },
    "1983": {
      "op": "extract 4 0",
      "defined_out": [
        "app#0",
        "awst_tmp%0#0",
        "result1#1"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "result1#1"
      ]
    },
    "1986": {
      "op": "swap",
      "stack_out": [
        "app#0",
        "result1#1",
        "awst_tmp%0#0"
      ]
    },
    "1987": {
      "op": "extract 0 4",
      "defined_out": [
        "app#0",
        "result1#1",
        "tmp%1#1"
      ],
      "stack_out": [
        "app#0",
        "result1#1",
        "tmp%1#1"
      ]
    },
    "1990": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "app#0",
        "result1#1",
        "tmp%1#1"
      ],
      "stack_out": [
        "app#0",
        "result1#1",
        "tmp%1#1",
        "0x151f7c75"
      ]
    },
    "1991": {
      "op": "==",
      "defined_out": [
        "app#0",
        "result1#1",
        "tmp%2#1"
      ],
      "stack_out": [
        "app#0",
        "result1#1",
        "tmp%2#1"
      ]
    },
    "1992": {
      "error": "ARC4 prefix is valid",
      "op": "assert // ARC4 prefix is valid",
      "stack_out": [
        "app#0",
        "result1#1"
      ]
    },
    "1993": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "result1#1",
        "result1#1 (copy)"
      ],
      "stack_out": [
        "app#0",
        "result1#1",
        "result1#1 (copy)"
      ]
    },
    "1994": {
      "op": "bytec 13 // 0x03",
      "defined_out": [
        "0x03",
        "app#0",
        "result1#1",
        "result1#1 (copy)"
      ],
      "stack_out": [
        "app#0",
        "result1#1",
        "result1#1 (copy)",
        "0x03"
      ]
    },
    "1996": {
      "op": "b==",
      "defined_out": [
        "app#0",
        "result1#1",
        "tmp%3#1"
      ],
      "stack_out": [
        "app#0",
        "result1#1",
        "tmp%3#1"
      ]
    },
    "1997": {
      "op": "assert",
      "stack_out": [
        "app#0",
        "result1#1"
      ]
    },
    "1998": {
      "op": "itxn_begin"
    },
    "1999": {
      "op": "dig 1",
      "stack_out": [
        "app#0",
        "result1#1",
        "app#0 (copy)"
      ]
    },
    "2001": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "app#0",
        "result1#1"
      ]
    },
    "2003": {
      "op": "bytec 14 // method \"echo_native_biguint(uint512)uint512\"",
      "stack_out": [
        "app#0",
        "result1#1",
        "Method(echo_native_biguint(uint512)uint512)"
      ]
    },
    "2005": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0",
        "result1#1"
      ]
    },
    "2007": {
      "op": "bytec_1 // 0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002",
      "stack_out": [
        "app#0",
        "result1#1",
        "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002"
      ]
    },
    "2008": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0",
        "result1#1"
      ]
    },
    "2010": {
      "op": "intc_1 // appl",
      "stack_out": [
        "app#0",
        "result1#1",
        "appl"
      ]
    },
    "2011": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "app#0",
        "result1#1"
      ]
    },
    "2013": {
      "op": "intc_0 // 0",
      "stack_out": [
        "app#0",
        "result1#1",
        "0"
      ]
    },
    "2014": {
      "op": "itxn_field Fee",
      "stack_out": [
        "app#0",
        "result1#1"
      ]
    },
    "2016": {
      "op": "itxn_submit"
    },
    "2017": {
      "op": "itxn LastLog"
    },
    "2019": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "awst_tmp%1#0",
        "awst_tmp%1#0 (copy)",
        "result1#1"
      ],
      "stack_out": [
        "app#0",
        "result1#1",
        "awst_tmp%1#0",
        "awst_tmp%1#0 (copy)"
      ]
    },
    "2020": {
      "op": "extract 4 0",
      "defined_out": [
        "app#0",
        "awst_tmp%1#0",
        "result1#1",
        "result2#1"
      ],
      "stack_out": [
        "app#0",
        "result1#1",
        "awst_tmp%1#0",
        "result2#1"
      ]
    },
    "2023": {
      "op": "swap",
      "stack_out": [
        "app#0",
        "result1#1",
        "result2#1",
        "awst_tmp%1#0"
      ]
    },
    "2024": {
      "op": "extract 0 4",
      "defined_out": [
        "app#0",
        "result1#1",
        "result2#1",
        "tmp%6#2"
      ],
      "stack_out": [
        "app#0",
        "result1#1",
        "result2#1",
        "tmp%6#2"
      ]
    },
    "2027": {
      "op": "bytec_0 // 0x151f7c75",
      "stack_out": [
        "app#0",
        "result1#1",
        "result2#1",
        "tmp%6#2",
        "0x151f7c75"
      ]
    },
    "2028": {
      "op": "==",
      "defined_out": [
        "app#0",
        "result1#1",
        "result2#1",
        "tmp%7#1"
      ],
      "stack_out": [
        "app#0",
        "result1#1",
        "result2#1",
        "tmp%7#1"
      ]
    },
    "2029": {
      "error": "ARC4 prefix is valid",
      "op": "assert // ARC4 prefix is valid",
      "stack_out": [
        "app#0",
        "result1#1",
        "result2#1"
      ]
    },
    "2030": {
      "op": "dig 1",
      "stack_out": [
        "app#0",
        "result1#1",
        "result2#1",
        "result1#1 (copy)"
      ]
    },
    "2032": {
      "op": "b==",
      "defined_out": [
        "app#0",
        "result1#1",
        "tmp%8#1"
      ],
      "stack_out": [
        "app#0",
        "result1#1",
        "tmp%8#1"
      ]
    },
    "2033": {
      "op": "assert",
      "stack_out": [
        "app#0",
        "result1#1"
      ]
    },
    "2034": {
      "op": "itxn_begin"
    },
    "2035": {
      "op": "swap",
      "stack_out": [
        "result1#1",
        "app#0"
      ]
    },
    "2036": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "result1#1"
      ]
    },
    "2038": {
      "op": "bytec 14 // method \"echo_native_biguint(uint512)uint512\"",
      "stack_out": [
        "result1#1",
        "Method(echo_native_biguint(uint512)uint512)"
      ]
    },
    "2040": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "result1#1"
      ]
    },
    "2042": {
      "op": "bytec_1 // 0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002",
      "stack_out": [
        "result1#1",
        "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002"
      ]
    },
    "2043": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "result1#1"
      ]
    },
    "2045": {
      "op": "intc_1 // appl",
      "stack_out": [
        "result1#1",
        "appl"
      ]
    },
    "2046": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "result1#1"
      ]
    },
    "2048": {
      "op": "intc_0 // 0",
      "stack_out": [
        "result1#1",
        "0"
      ]
    },
    "2049": {
      "op": "itxn_field Fee",
      "stack_out": [
        "result1#1"
      ]
    },
    "2051": {
      "op": "itxn_submit"
    },
    "2052": {
      "op": "itxn LastLog"
    },
    "2054": {
      "op": "dup",
      "defined_out": [
        "awst_tmp%2#0",
        "awst_tmp%2#0 (copy)",
        "result1#1"
      ],
      "stack_out": [
        "result1#1",
        "awst_tmp%2#0",
        "awst_tmp%2#0 (copy)"
      ]
    },
    "2055": {
      "op": "extract 4 0",
      "defined_out": [
        "awst_tmp%2#0",
        "result1#1",
        "result3#1"
      ],
      "stack_out": [
        "result1#1",
        "awst_tmp%2#0",
        "result3#1"
      ]
    },
    "2058": {
      "op": "swap",
      "stack_out": [
        "result1#1",
        "result3#1",
        "awst_tmp%2#0"
      ]
    },
    "2059": {
      "op": "extract 0 4",
      "defined_out": [
        "result1#1",
        "result3#1",
        "tmp%10#1"
      ],
      "stack_out": [
        "result1#1",
        "result3#1",
        "tmp%10#1"
      ]
    },
    "2062": {
      "op": "bytec_0 // 0x151f7c75",
      "stack_out": [
        "result1#1",
        "result3#1",
        "tmp%10#1",
        "0x151f7c75"
      ]
    },
    "2063": {
      "op": "==",
      "defined_out": [
        "result1#1",
        "result3#1",
        "tmp%11#1"
      ],
      "stack_out": [
        "result1#1",
        "result3#1",
        "tmp%11#1"
      ]
    },
    "2064": {
      "error": "ARC4 prefix is valid",
      "op": "assert // ARC4 prefix is valid",
      "stack_out": [
        "result1#1",
        "result3#1"
      ]
    },
    "2065": {
      "op": "b==",
      "defined_out": [
        "tmp%12#1"
      ],
      "stack_out": [
        "tmp%12#1"
      ]
    },
    "2066": {
      "op": "assert",
      "stack_out": []
    },
    "2067": {
      "op": "intc_2 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "2068": {
      "op": "return"
    },
    "2069": {
      "block": "main_test_native_uint64_route@12",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%63#0"
      ],
      "stack_out": [
        "tmp%63#0"
      ]
    },
    "2071": {
      "op": "!",
      "defined_out": [
        "tmp%64#0"
      ],
      "stack_out": [
        "tmp%64#0"
      ]
    },
    "2072": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "2073": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%65#0"
      ],
      "stack_out": [
        "tmp%65#0"
      ]
    },
    "2075": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "2076": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[1]%10#0"
      ],
      "stack_out": [
        "reinterpret_bytes[1]%10#0"
      ]
    },
    "2079": {
      "op": "btoi",
      "defined_out": [
        "tmp%67#0"
      ],
      "stack_out": [
        "tmp%67#0"
      ]
    },
    "2080": {
      "op": "txnas Applications",
      "defined_out": [
        "app#0"
      ],
      "stack_out": [
        "app#0"
      ]
    },
    "2082": {
      "op": "itxn_begin"
    },
    "2083": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "app#0 (copy)"
      ],
      "stack_out": [
        "app#0",
        "app#0 (copy)"
      ]
    },
    "2084": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "app#0"
      ]
    },
    "2086": {
      "op": "bytec 15 // method \"echo_native_uint64(uint64)uint64\"",
      "defined_out": [
        "Method(echo_native_uint64(uint64)uint64)",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "Method(echo_native_uint64(uint64)uint64)"
      ]
    },
    "2088": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0"
      ]
    },
    "2090": {
      "op": "bytec_2 // 0x0000000000000001",
      "defined_out": [
        "0x0000000000000001",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "0x0000000000000001"
      ]
    },
    "2091": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0"
      ]
    },
    "2093": {
      "op": "intc_1 // appl",
      "defined_out": [
        "app#0",
        "appl"
      ],
      "stack_out": [
        "app#0",
        "appl"
      ]
    },
    "2094": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "app#0"
      ]
    },
    "2096": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "0"
      ]
    },
    "2097": {
      "op": "itxn_field Fee",
      "stack_out": [
        "app#0"
      ]
    },
    "2099": {
      "op": "itxn_submit"
    },
    "2100": {
      "op": "itxn LastLog"
    },
    "2102": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ]
    },
    "2103": {
      "op": "extract 4 0",
      "defined_out": [
        "app#0",
        "awst_tmp%0#0",
        "tmp%0#3"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "tmp%0#3"
      ]
    },
    "2106": {
      "op": "swap",
      "stack_out": [
        "app#0",
        "tmp%0#3",
        "awst_tmp%0#0"
      ]
    },
    "2107": {
      "op": "extract 0 4",
      "defined_out": [
        "app#0",
        "tmp%0#3",
        "tmp%1#1"
      ],
      "stack_out": [
        "app#0",
        "tmp%0#3",
        "tmp%1#1"
      ]
    },
    "2110": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "app#0",
        "tmp%0#3",
        "tmp%1#1"
      ],
      "stack_out": [
        "app#0",
        "tmp%0#3",
        "tmp%1#1",
        "0x151f7c75"
      ]
    },
    "2111": {
      "op": "==",
      "defined_out": [
        "app#0",
        "tmp%0#3",
        "tmp%2#1"
      ],
      "stack_out": [
        "app#0",
        "tmp%0#3",
        "tmp%2#1"
      ]
    },
    "2112": {
      "error": "ARC4 prefix is valid",
      "op": "assert // ARC4 prefix is valid",
      "stack_out": [
        "app#0",
        "tmp%0#3"
      ]
    },
    "2113": {
      "op": "btoi",
      "defined_out": [
        "app#0",
        "result1#2"
      ],
      "stack_out": [
        "app#0",
        "result1#2"
      ]
    },
    "2114": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "result1#2",
        "result1#2 (copy)"
      ],
      "stack_out": [
        "app#0",
        "result1#2",
        "result1#2 (copy)"
      ]
    },
    "2115": {
      "op": "intc_3 // 2",
      "defined_out": [
        "2",
        "app#0",
        "result1#2",
        "result1#2 (copy)"
      ],
      "stack_out": [
        "app#0",
        "result1#2",
        "result1#2 (copy)",
        "2"
      ]
    },
    "2116": {
      "op": "==",
      "defined_out": [
        "app#0",
        "result1#2",
        "tmp%4#0"
      ],
      "stack_out": [
        "app#0",
        "result1#2",
        "tmp%4#0"
      ]
    },
    "2117": {
      "op": "assert",
      "stack_out": [
        "app#0",
        "result1#2"
      ]
    },
    "2118": {
      "op": "itxn_begin"
    },
    "2119": {
      "op": "intc_2 // 1",
      "defined_out": [
        "1",
        "app#0",
        "result1#2"
      ],
      "stack_out": [
        "app#0",
        "result1#2",
        "1"
      ]
    },
    "2120": {
      "op": "itob",
      "defined_out": [
        "app#0",
        "result1#2",
        "val_as_bytes%0#1"
      ],
      "stack_out": [
        "app#0",
        "result1#2",
        "val_as_bytes%0#1"
      ]
    },
    "2121": {
      "op": "dig 2",
      "stack_out": [
        "app#0",
        "result1#2",
        "val_as_bytes%0#1",
        "app#0 (copy)"
      ]
    },
    "2123": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "app#0",
        "result1#2",
        "val_as_bytes%0#1"
      ]
    },
    "2125": {
      "op": "bytec 15 // method \"echo_native_uint64(uint64)uint64\"",
      "stack_out": [
        "app#0",
        "result1#2",
        "val_as_bytes%0#1",
        "Method(echo_native_uint64(uint64)uint64)"
      ]
    },
    "2127": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0",
        "result1#2",
        "val_as_bytes%0#1"
      ]
    },
    "2129": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0",
        "result1#2"
      ]
    },
    "2131": {
      "op": "intc_1 // appl",
      "stack_out": [
        "app#0",
        "result1#2",
        "appl"
      ]
    },
    "2132": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "app#0",
        "result1#2"
      ]
    },
    "2134": {
      "op": "intc_0 // 0",
      "stack_out": [
        "app#0",
        "result1#2",
        "0"
      ]
    },
    "2135": {
      "op": "itxn_field Fee",
      "stack_out": [
        "app#0",
        "result1#2"
      ]
    },
    "2137": {
      "op": "itxn_submit"
    },
    "2138": {
      "op": "itxn LastLog"
    },
    "2140": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "awst_tmp%1#0",
        "awst_tmp%1#0 (copy)",
        "result1#2"
      ],
      "stack_out": [
        "app#0",
        "result1#2",
        "awst_tmp%1#0",
        "awst_tmp%1#0 (copy)"
      ]
    },
    "2141": {
      "op": "extract 4 0",
      "defined_out": [
        "app#0",
        "awst_tmp%1#0",
        "result1#2",
        "tmp%5#5"
      ],
      "stack_out": [
        "app#0",
        "result1#2",
        "awst_tmp%1#0",
        "tmp%5#5"
      ]
    },
    "2144": {
      "op": "swap",
      "stack_out": [
        "app#0",
        "result1#2",
        "tmp%5#5",
        "awst_tmp%1#0"
      ]
    },
    "2145": {
      "op": "extract 0 4",
      "defined_out": [
        "app#0",
        "result1#2",
        "tmp%5#5",
        "tmp%6#2"
      ],
      "stack_out": [
        "app#0",
        "result1#2",
        "tmp%5#5",
        "tmp%6#2"
      ]
    },
    "2148": {
      "op": "bytec_0 // 0x151f7c75",
      "stack_out": [
        "app#0",
        "result1#2",
        "tmp%5#5",
        "tmp%6#2",
        "0x151f7c75"
      ]
    },
    "2149": {
      "op": "==",
      "defined_out": [
        "app#0",
        "result1#2",
        "tmp%5#5",
        "tmp%7#1"
      ],
      "stack_out": [
        "app#0",
        "result1#2",
        "tmp%5#5",
        "tmp%7#1"
      ]
    },
    "2150": {
      "error": "ARC4 prefix is valid",
      "op": "assert // ARC4 prefix is valid",
      "stack_out": [
        "app#0",
        "result1#2",
        "tmp%5#5"
      ]
    },
    "2151": {
      "op": "btoi",
      "defined_out": [
        "app#0",
        "result1#2",
        "result2#2"
      ],
      "stack_out": [
        "app#0",
        "result1#2",
        "result2#2"
      ]
    },
    "2152": {
      "op": "dig 1",
      "stack_out": [
        "app#0",
        "result1#2",
        "result2#2",
        "result1#2 (copy)"
      ]
    },
    "2154": {
      "op": "==",
      "defined_out": [
        "app#0",
        "result1#2",
        "tmp%9#4"
      ],
      "stack_out": [
        "app#0",
        "result1#2",
        "tmp%9#4"
      ]
    },
    "2155": {
      "op": "assert",
      "stack_out": [
        "app#0",
        "result1#2"
      ]
    },
    "2156": {
      "op": "itxn_begin"
    },
    "2157": {
      "op": "swap",
      "stack_out": [
        "result1#2",
        "app#0"
      ]
    },
    "2158": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "result1#2"
      ]
    },
    "2160": {
      "op": "bytec 15 // method \"echo_native_uint64(uint64)uint64\"",
      "stack_out": [
        "result1#2",
        "Method(echo_native_uint64(uint64)uint64)"
      ]
    },
    "2162": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "result1#2"
      ]
    },
    "2164": {
      "op": "bytec_2 // 0x0000000000000001",
      "stack_out": [
        "result1#2",
        "0x0000000000000001"
      ]
    },
    "2165": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "result1#2"
      ]
    },
    "2167": {
      "op": "intc_1 // appl",
      "stack_out": [
        "result1#2",
        "appl"
      ]
    },
    "2168": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "result1#2"
      ]
    },
    "2170": {
      "op": "intc_0 // 0",
      "stack_out": [
        "result1#2",
        "0"
      ]
    },
    "2171": {
      "op": "itxn_field Fee",
      "stack_out": [
        "result1#2"
      ]
    },
    "2173": {
      "op": "itxn_submit"
    },
    "2174": {
      "op": "itxn LastLog"
    },
    "2176": {
      "op": "dup",
      "defined_out": [
        "awst_tmp%2#0",
        "awst_tmp%2#0 (copy)",
        "result1#2"
      ],
      "stack_out": [
        "result1#2",
        "awst_tmp%2#0",
        "awst_tmp%2#0 (copy)"
      ]
    },
    "2177": {
      "op": "extract 4 0",
      "defined_out": [
        "awst_tmp%2#0",
        "result1#2",
        "tmp%10#6"
      ],
      "stack_out": [
        "result1#2",
        "awst_tmp%2#0",
        "tmp%10#6"
      ]
    },
    "2180": {
      "op": "swap",
      "stack_out": [
        "result1#2",
        "tmp%10#6",
        "awst_tmp%2#0"
      ]
    },
    "2181": {
      "op": "extract 0 4",
      "defined_out": [
        "result1#2",
        "tmp%10#6",
        "tmp%11#5"
      ],
      "stack_out": [
        "result1#2",
        "tmp%10#6",
        "tmp%11#5"
      ]
    },
    "2184": {
      "op": "bytec_0 // 0x151f7c75",
      "stack_out": [
        "result1#2",
        "tmp%10#6",
        "tmp%11#5",
        "0x151f7c75"
      ]
    },
    "2185": {
      "op": "==",
      "defined_out": [
        "result1#2",
        "tmp%10#6",
        "tmp%12#1"
      ],
      "stack_out": [
        "result1#2",
        "tmp%10#6",
        "tmp%12#1"
      ]
    },
    "2186": {
      "error": "ARC4 prefix is valid",
      "op": "assert // ARC4 prefix is valid",
      "stack_out": [
        "result1#2",
        "tmp%10#6"
      ]
    },
    "2187": {
      "op": "btoi",
      "defined_out": [
        "result1#2",
        "result3#2"
      ],
      "stack_out": [
        "result1#2",
        "result3#2"
      ]
    },
    "2188": {
      "op": "==",
      "defined_out": [
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%14#0"
      ]
    },
    "2189": {
      "op": "assert",
      "stack_out": []
    },
    "2190": {
      "op": "intc_2 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "2191": {
      "op": "return"
    },
    "2192": {
      "block": "main_test_native_bytes_route@11",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%57#0"
      ],
      "stack_out": [
        "tmp%57#0"
      ]
    },
    "2194": {
      "op": "!",
      "defined_out": [
        "tmp%58#0"
      ],
      "stack_out": [
        "tmp%58#0"
      ]
    },
    "2195": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "2196": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%59#0"
      ],
      "stack_out": [
        "tmp%59#0"
      ]
    },
    "2198": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "2199": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[1]%9#0"
      ],
      "stack_out": [
        "reinterpret_bytes[1]%9#0"
      ]
    },
    "2202": {
      "op": "btoi",
      "defined_out": [
        "tmp%61#0"
      ],
      "stack_out": [
        "tmp%61#0"
      ]
    },
    "2203": {
      "op": "txnas Applications",
      "defined_out": [
        "app#0"
      ],
      "stack_out": [
        "app#0"
      ]
    },
    "2205": {
      "op": "itxn_begin"
    },
    "2206": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "app#0 (copy)"
      ],
      "stack_out": [
        "app#0",
        "app#0 (copy)"
      ]
    },
    "2207": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "app#0"
      ]
    },
    "2209": {
      "op": "bytec 16 // method \"echo_native_bytes(byte[])byte[]\"",
      "defined_out": [
        "Method(echo_native_bytes(byte[])byte[])",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "Method(echo_native_bytes(byte[])byte[])"
      ]
    },
    "2211": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0"
      ]
    },
    "2213": {
      "op": "bytec 17 // 0x000162",
      "defined_out": [
        "0x000162",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "0x000162"
      ]
    },
    "2215": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0"
      ]
    },
    "2217": {
      "op": "intc_1 // appl",
      "defined_out": [
        "app#0",
        "appl"
      ],
      "stack_out": [
        "app#0",
        "appl"
      ]
    },
    "2218": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "app#0"
      ]
    },
    "2220": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "0"
      ]
    },
    "2221": {
      "op": "itxn_field Fee",
      "stack_out": [
        "app#0"
      ]
    },
    "2223": {
      "op": "itxn_submit"
    },
    "2224": {
      "op": "itxn LastLog"
    },
    "2226": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ]
    },
    "2227": {
      "op": "extract 0 4",
      "defined_out": [
        "app#0",
        "awst_tmp%0#0",
        "tmp%1#1"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "tmp%1#1"
      ]
    },
    "2230": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "app#0",
        "awst_tmp%0#0",
        "tmp%1#1"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "tmp%1#1",
        "0x151f7c75"
      ]
    },
    "2231": {
      "op": "==",
      "defined_out": [
        "app#0",
        "awst_tmp%0#0",
        "tmp%2#1"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "tmp%2#1"
      ]
    },
    "2232": {
      "error": "ARC4 prefix is valid",
      "op": "assert // ARC4 prefix is valid",
      "stack_out": [
        "app#0",
        "awst_tmp%0#0"
      ]
    },
    "2233": {
      "op": "extract 6 0",
      "defined_out": [
        "app#0",
        "result1#0"
      ],
      "stack_out": [
        "app#0",
        "result1#0"
      ]
    },
    "2236": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "result1#0",
        "result1#0 (copy)"
      ],
      "stack_out": [
        "app#0",
        "result1#0",
        "result1#0 (copy)"
      ]
    },
    "2237": {
      "op": "pushbytes 0x6563686f3a2062",
      "defined_out": [
        "0x6563686f3a2062",
        "app#0",
        "result1#0",
        "result1#0 (copy)"
      ],
      "stack_out": [
        "app#0",
        "result1#0",
        "result1#0 (copy)",
        "0x6563686f3a2062"
      ]
    },
    "2246": {
      "op": "==",
      "defined_out": [
        "app#0",
        "result1#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "app#0",
        "result1#0",
        "tmp%4#0"
      ]
    },
    "2247": {
      "op": "assert",
      "stack_out": [
        "app#0",
        "result1#0"
      ]
    },
    "2248": {
      "op": "itxn_begin"
    },
    "2249": {
      "op": "dig 1",
      "stack_out": [
        "app#0",
        "result1#0",
        "app#0 (copy)"
      ]
    },
    "2251": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "app#0",
        "result1#0"
      ]
    },
    "2253": {
      "op": "bytec 16 // method \"echo_native_bytes(byte[])byte[]\"",
      "stack_out": [
        "app#0",
        "result1#0",
        "Method(echo_native_bytes(byte[])byte[])"
      ]
    },
    "2255": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0",
        "result1#0"
      ]
    },
    "2257": {
      "op": "bytec 17 // 0x000162",
      "stack_out": [
        "app#0",
        "result1#0",
        "0x000162"
      ]
    },
    "2259": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0",
        "result1#0"
      ]
    },
    "2261": {
      "op": "intc_1 // appl",
      "stack_out": [
        "app#0",
        "result1#0",
        "appl"
      ]
    },
    "2262": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "app#0",
        "result1#0"
      ]
    },
    "2264": {
      "op": "intc_0 // 0",
      "stack_out": [
        "app#0",
        "result1#0",
        "0"
      ]
    },
    "2265": {
      "op": "itxn_field Fee",
      "stack_out": [
        "app#0",
        "result1#0"
      ]
    },
    "2267": {
      "op": "itxn_submit"
    },
    "2268": {
      "op": "itxn LastLog"
    },
    "2270": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "awst_tmp%1#0",
        "awst_tmp%1#0 (copy)",
        "result1#0"
      ],
      "stack_out": [
        "app#0",
        "result1#0",
        "awst_tmp%1#0",
        "awst_tmp%1#0 (copy)"
      ]
    },
    "2271": {
      "op": "extract 0 4",
      "defined_out": [
        "app#0",
        "awst_tmp%1#0",
        "result1#0",
        "tmp%6#2"
      ],
      "stack_out": [
        "app#0",
        "result1#0",
        "awst_tmp%1#0",
        "tmp%6#2"
      ]
    },
    "2274": {
      "op": "bytec_0 // 0x151f7c75",
      "stack_out": [
        "app#0",
        "result1#0",
        "awst_tmp%1#0",
        "tmp%6#2",
        "0x151f7c75"
      ]
    },
    "2275": {
      "op": "==",
      "defined_out": [
        "app#0",
        "awst_tmp%1#0",
        "result1#0",
        "tmp%7#1"
      ],
      "stack_out": [
        "app#0",
        "result1#0",
        "awst_tmp%1#0",
        "tmp%7#1"
      ]
    },
    "2276": {
      "error": "ARC4 prefix is valid",
      "op": "assert // ARC4 prefix is valid",
      "stack_out": [
        "app#0",
        "result1#0",
        "awst_tmp%1#0"
      ]
    },
    "2277": {
      "op": "extract 6 0",
      "defined_out": [
        "app#0",
        "result1#0",
        "result2#0"
      ],
      "stack_out": [
        "app#0",
        "result1#0",
        "result2#0"
      ]
    },
    "2280": {
      "op": "dig 1",
      "stack_out": [
        "app#0",
        "result1#0",
        "result2#0",
        "result1#0 (copy)"
      ]
    },
    "2282": {
      "op": "==",
      "defined_out": [
        "app#0",
        "result1#0",
        "tmp%9#4"
      ],
      "stack_out": [
        "app#0",
        "result1#0",
        "tmp%9#4"
      ]
    },
    "2283": {
      "op": "assert",
      "stack_out": [
        "app#0",
        "result1#0"
      ]
    },
    "2284": {
      "op": "itxn_begin"
    },
    "2285": {
      "op": "swap",
      "stack_out": [
        "result1#0",
        "app#0"
      ]
    },
    "2286": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "result1#0"
      ]
    },
    "2288": {
      "op": "bytec 16 // method \"echo_native_bytes(byte[])byte[]\"",
      "stack_out": [
        "result1#0",
        "Method(echo_native_bytes(byte[])byte[])"
      ]
    },
    "2290": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "result1#0"
      ]
    },
    "2292": {
      "op": "bytec 17 // 0x000162",
      "stack_out": [
        "result1#0",
        "0x000162"
      ]
    },
    "2294": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "result1#0"
      ]
    },
    "2296": {
      "op": "intc_1 // appl",
      "stack_out": [
        "result1#0",
        "appl"
      ]
    },
    "2297": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "result1#0"
      ]
    },
    "2299": {
      "op": "intc_0 // 0",
      "stack_out": [
        "result1#0",
        "0"
      ]
    },
    "2300": {
      "op": "itxn_field Fee",
      "stack_out": [
        "result1#0"
      ]
    },
    "2302": {
      "op": "itxn_submit"
    },
    "2303": {
      "op": "itxn LastLog"
    },
    "2305": {
      "op": "dup",
      "defined_out": [
        "awst_tmp%2#0",
        "awst_tmp%2#0 (copy)",
        "result1#0"
      ],
      "stack_out": [
        "result1#0",
        "awst_tmp%2#0",
        "awst_tmp%2#0 (copy)"
      ]
    },
    "2306": {
      "op": "extract 0 4",
      "defined_out": [
        "awst_tmp%2#0",
        "result1#0",
        "tmp%11#5"
      ],
      "stack_out": [
        "result1#0",
        "awst_tmp%2#0",
        "tmp%11#5"
      ]
    },
    "2309": {
      "op": "bytec_0 // 0x151f7c75",
      "stack_out": [
        "result1#0",
        "awst_tmp%2#0",
        "tmp%11#5",
        "0x151f7c75"
      ]
    },
    "2310": {
      "op": "==",
      "defined_out": [
        "awst_tmp%2#0",
        "result1#0",
        "tmp%12#1"
      ],
      "stack_out": [
        "result1#0",
        "awst_tmp%2#0",
        "tmp%12#1"
      ]
    },
    "2311": {
      "error": "ARC4 prefix is valid",
      "op": "assert // ARC4 prefix is valid",
      "stack_out": [
        "result1#0",
        "awst_tmp%2#0"
      ]
    },
    "2312": {
      "op": "extract 6 0",
      "defined_out": [
        "result1#0",
        "result3#0"
      ],
      "stack_out": [
        "result1#0",
        "result3#0"
      ]
    },
    "2315": {
      "op": "==",
      "defined_out": [
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%14#0"
      ]
    },
    "2316": {
      "op": "assert",
      "stack_out": []
    },
    "2317": {
      "op": "intc_2 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "2318": {
      "op": "return"
    },
    "2319": {
      "block": "main_test_native_string_route@10",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%51#0"
      ],
      "stack_out": [
        "tmp%51#0"
      ]
    },
    "2321": {
      "op": "!",
      "defined_out": [
        "tmp%52#0"
      ],
      "stack_out": [
        "tmp%52#0"
      ]
    },
    "2322": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "2323": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%53#0"
      ],
      "stack_out": [
        "tmp%53#0"
      ]
    },
    "2325": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "2326": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[1]%8#0"
      ],
      "stack_out": [
        "reinterpret_bytes[1]%8#0"
      ]
    },
    "2329": {
      "op": "btoi",
      "defined_out": [
        "tmp%55#0"
      ],
      "stack_out": [
        "tmp%55#0"
      ]
    },
    "2330": {
      "op": "txnas Applications",
      "defined_out": [
        "app#0"
      ],
      "stack_out": [
        "app#0"
      ]
    },
    "2332": {
      "op": "itxn_begin"
    },
    "2333": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "app#0 (copy)"
      ],
      "stack_out": [
        "app#0",
        "app#0 (copy)"
      ]
    },
    "2334": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "app#0"
      ]
    },
    "2336": {
      "op": "bytec 18 // method \"echo_native_string(string)string\"",
      "defined_out": [
        "Method(echo_native_string(string)string)",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "Method(echo_native_string(string)string)"
      ]
    },
    "2338": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0"
      ]
    },
    "2340": {
      "op": "bytec 19 // 0x000173",
      "defined_out": [
        "0x000173",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "0x000173"
      ]
    },
    "2342": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0"
      ]
    },
    "2344": {
      "op": "intc_1 // appl",
      "defined_out": [
        "app#0",
        "appl"
      ],
      "stack_out": [
        "app#0",
        "appl"
      ]
    },
    "2345": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "app#0"
      ]
    },
    "2347": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "0"
      ]
    },
    "2348": {
      "op": "itxn_field Fee",
      "stack_out": [
        "app#0"
      ]
    },
    "2350": {
      "op": "itxn_submit"
    },
    "2351": {
      "op": "itxn LastLog"
    },
    "2353": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ]
    },
    "2354": {
      "op": "extract 0 4",
      "defined_out": [
        "app#0",
        "awst_tmp%0#0",
        "tmp%1#1"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "tmp%1#1"
      ]
    },
    "2357": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "app#0",
        "awst_tmp%0#0",
        "tmp%1#1"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "tmp%1#1",
        "0x151f7c75"
      ]
    },
    "2358": {
      "op": "==",
      "defined_out": [
        "app#0",
        "awst_tmp%0#0",
        "tmp%2#1"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "tmp%2#1"
      ]
    },
    "2359": {
      "error": "ARC4 prefix is valid",
      "op": "assert // ARC4 prefix is valid",
      "stack_out": [
        "app#0",
        "awst_tmp%0#0"
      ]
    },
    "2360": {
      "op": "extract 6 0",
      "defined_out": [
        "app#0",
        "result1#0"
      ],
      "stack_out": [
        "app#0",
        "result1#0"
      ]
    },
    "2363": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "result1#0",
        "result1#0 (copy)"
      ],
      "stack_out": [
        "app#0",
        "result1#0",
        "result1#0 (copy)"
      ]
    },
    "2364": {
      "op": "pushbytes \"echo: s\"",
      "defined_out": [
        "\"echo: s\"",
        "app#0",
        "result1#0",
        "result1#0 (copy)"
      ],
      "stack_out": [
        "app#0",
        "result1#0",
        "result1#0 (copy)",
        "\"echo: s\""
      ]
    },
    "2373": {
      "op": "==",
      "defined_out": [
        "app#0",
        "result1#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "app#0",
        "result1#0",
        "tmp%4#0"
      ]
    },
    "2374": {
      "op": "assert",
      "stack_out": [
        "app#0",
        "result1#0"
      ]
    },
    "2375": {
      "op": "itxn_begin"
    },
    "2376": {
      "op": "dig 1",
      "stack_out": [
        "app#0",
        "result1#0",
        "app#0 (copy)"
      ]
    },
    "2378": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "app#0",
        "result1#0"
      ]
    },
    "2380": {
      "op": "bytec 18 // method \"echo_native_string(string)string\"",
      "stack_out": [
        "app#0",
        "result1#0",
        "Method(echo_native_string(string)string)"
      ]
    },
    "2382": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0",
        "result1#0"
      ]
    },
    "2384": {
      "op": "bytec 19 // 0x000173",
      "stack_out": [
        "app#0",
        "result1#0",
        "0x000173"
      ]
    },
    "2386": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0",
        "result1#0"
      ]
    },
    "2388": {
      "op": "intc_1 // appl",
      "stack_out": [
        "app#0",
        "result1#0",
        "appl"
      ]
    },
    "2389": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "app#0",
        "result1#0"
      ]
    },
    "2391": {
      "op": "intc_0 // 0",
      "stack_out": [
        "app#0",
        "result1#0",
        "0"
      ]
    },
    "2392": {
      "op": "itxn_field Fee",
      "stack_out": [
        "app#0",
        "result1#0"
      ]
    },
    "2394": {
      "op": "itxn_submit"
    },
    "2395": {
      "op": "itxn LastLog"
    },
    "2397": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "awst_tmp%1#0",
        "awst_tmp%1#0 (copy)",
        "result1#0"
      ],
      "stack_out": [
        "app#0",
        "result1#0",
        "awst_tmp%1#0",
        "awst_tmp%1#0 (copy)"
      ]
    },
    "2398": {
      "op": "extract 0 4",
      "defined_out": [
        "app#0",
        "awst_tmp%1#0",
        "result1#0",
        "tmp%6#2"
      ],
      "stack_out": [
        "app#0",
        "result1#0",
        "awst_tmp%1#0",
        "tmp%6#2"
      ]
    },
    "2401": {
      "op": "bytec_0 // 0x151f7c75",
      "stack_out": [
        "app#0",
        "result1#0",
        "awst_tmp%1#0",
        "tmp%6#2",
        "0x151f7c75"
      ]
    },
    "2402": {
      "op": "==",
      "defined_out": [
        "app#0",
        "awst_tmp%1#0",
        "result1#0",
        "tmp%7#1"
      ],
      "stack_out": [
        "app#0",
        "result1#0",
        "awst_tmp%1#0",
        "tmp%7#1"
      ]
    },
    "2403": {
      "error": "ARC4 prefix is valid",
      "op": "assert // ARC4 prefix is valid",
      "stack_out": [
        "app#0",
        "result1#0",
        "awst_tmp%1#0"
      ]
    },
    "2404": {
      "op": "extract 6 0",
      "defined_out": [
        "app#0",
        "result1#0",
        "result2#0"
      ],
      "stack_out": [
        "app#0",
        "result1#0",
        "result2#0"
      ]
    },
    "2407": {
      "op": "dig 1",
      "stack_out": [
        "app#0",
        "result1#0",
        "result2#0",
        "result1#0 (copy)"
      ]
    },
    "2409": {
      "op": "==",
      "defined_out": [
        "app#0",
        "result1#0",
        "tmp%9#4"
      ],
      "stack_out": [
        "app#0",
        "result1#0",
        "tmp%9#4"
      ]
    },
    "2410": {
      "op": "assert",
      "stack_out": [
        "app#0",
        "result1#0"
      ]
    },
    "2411": {
      "op": "itxn_begin"
    },
    "2412": {
      "op": "swap",
      "stack_out": [
        "result1#0",
        "app#0"
      ]
    },
    "2413": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "result1#0"
      ]
    },
    "2415": {
      "op": "bytec 18 // method \"echo_native_string(string)string\"",
      "stack_out": [
        "result1#0",
        "Method(echo_native_string(string)string)"
      ]
    },
    "2417": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "result1#0"
      ]
    },
    "2419": {
      "op": "bytec 19 // 0x000173",
      "stack_out": [
        "result1#0",
        "0x000173"
      ]
    },
    "2421": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "result1#0"
      ]
    },
    "2423": {
      "op": "intc_1 // appl",
      "stack_out": [
        "result1#0",
        "appl"
      ]
    },
    "2424": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "result1#0"
      ]
    },
    "2426": {
      "op": "intc_0 // 0",
      "stack_out": [
        "result1#0",
        "0"
      ]
    },
    "2427": {
      "op": "itxn_field Fee",
      "stack_out": [
        "result1#0"
      ]
    },
    "2429": {
      "op": "itxn_submit"
    },
    "2430": {
      "op": "itxn LastLog"
    },
    "2432": {
      "op": "dup",
      "defined_out": [
        "awst_tmp%2#0",
        "awst_tmp%2#0 (copy)",
        "result1#0"
      ],
      "stack_out": [
        "result1#0",
        "awst_tmp%2#0",
        "awst_tmp%2#0 (copy)"
      ]
    },
    "2433": {
      "op": "extract 0 4",
      "defined_out": [
        "awst_tmp%2#0",
        "result1#0",
        "tmp%11#5"
      ],
      "stack_out": [
        "result1#0",
        "awst_tmp%2#0",
        "tmp%11#5"
      ]
    },
    "2436": {
      "op": "bytec_0 // 0x151f7c75",
      "stack_out": [
        "result1#0",
        "awst_tmp%2#0",
        "tmp%11#5",
        "0x151f7c75"
      ]
    },
    "2437": {
      "op": "==",
      "defined_out": [
        "awst_tmp%2#0",
        "result1#0",
        "tmp%12#1"
      ],
      "stack_out": [
        "result1#0",
        "awst_tmp%2#0",
        "tmp%12#1"
      ]
    },
    "2438": {
      "error": "ARC4 prefix is valid",
      "op": "assert // ARC4 prefix is valid",
      "stack_out": [
        "result1#0",
        "awst_tmp%2#0"
      ]
    },
    "2439": {
      "op": "extract 6 0",
      "defined_out": [
        "result1#0",
        "result3#0"
      ],
      "stack_out": [
        "result1#0",
        "result3#0"
      ]
    },
    "2442": {
      "op": "==",
      "defined_out": [
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%14#0"
      ]
    },
    "2443": {
      "op": "assert",
      "stack_out": []
    },
    "2444": {
      "op": "intc_2 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "2445": {
      "op": "return"
    },
    "2446": {
      "block": "main_test_ref_types_route@9",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%43#0"
      ],
      "stack_out": [
        "tmp%43#0"
      ]
    },
    "2448": {
      "op": "!",
      "defined_out": [
        "tmp%44#0"
      ],
      "stack_out": [
        "tmp%44#0"
      ]
    },
    "2449": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "2450": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%45#0"
      ],
      "stack_out": [
        "tmp%45#0"
      ]
    },
    "2452": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "2453": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[1]%6#0"
      ],
      "stack_out": [
        "reinterpret_bytes[1]%6#0"
      ]
    },
    "2456": {
      "op": "btoi",
      "defined_out": [
        "tmp%47#0"
      ],
      "stack_out": [
        "tmp%47#0"
      ]
    },
    "2457": {
      "op": "txnas Applications",
      "defined_out": [
        "app#0"
      ],
      "stack_out": [
        "app#0"
      ]
    },
    "2459": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "app#0",
        "reinterpret_bytes[1]%7#0"
      ],
      "stack_out": [
        "app#0",
        "reinterpret_bytes[1]%7#0"
      ]
    },
    "2462": {
      "op": "btoi",
      "defined_out": [
        "app#0",
        "tmp%49#0"
      ],
      "stack_out": [
        "app#0",
        "tmp%49#0"
      ]
    },
    "2463": {
      "op": "txnas Assets",
      "defined_out": [
        "app#0",
        "asset#0"
      ],
      "stack_out": [
        "app#0",
        "asset#0"
      ]
    },
    "2465": {
      "op": "itxn_begin"
    },
    "2466": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "app#0",
        "asset#0",
        "tmp%0#9"
      ],
      "stack_out": [
        "app#0",
        "asset#0",
        "tmp%0#9"
      ]
    },
    "2468": {
      "op": "dig 2",
      "defined_out": [
        "app#0",
        "app#0 (copy)",
        "asset#0",
        "tmp%0#9"
      ],
      "stack_out": [
        "app#0",
        "asset#0",
        "tmp%0#9",
        "app#0 (copy)"
      ]
    },
    "2470": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "app#0",
        "asset#0",
        "tmp%0#9"
      ]
    },
    "2472": {
      "op": "dig 1",
      "defined_out": [
        "app#0",
        "asset#0",
        "asset#0 (copy)",
        "tmp%0#9"
      ],
      "stack_out": [
        "app#0",
        "asset#0",
        "tmp%0#9",
        "asset#0 (copy)"
      ]
    },
    "2474": {
      "op": "itxn_field Assets",
      "stack_out": [
        "app#0",
        "asset#0",
        "tmp%0#9"
      ]
    },
    "2476": {
      "op": "dig 2",
      "stack_out": [
        "app#0",
        "asset#0",
        "tmp%0#9",
        "app#0 (copy)"
      ]
    },
    "2478": {
      "op": "itxn_field Applications",
      "stack_out": [
        "app#0",
        "asset#0",
        "tmp%0#9"
      ]
    },
    "2480": {
      "op": "itxn_field Accounts",
      "stack_out": [
        "app#0",
        "asset#0"
      ]
    },
    "2482": {
      "op": "pushbytes 0xcd727b71 // method \"log(asset,account,application)void\"",
      "defined_out": [
        "Method(log(asset,account,application)void)",
        "app#0",
        "asset#0"
      ],
      "stack_out": [
        "app#0",
        "asset#0",
        "Method(log(asset,account,application)void)"
      ]
    },
    "2488": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0",
        "asset#0"
      ]
    },
    "2490": {
      "op": "pushbytes 0x00",
      "defined_out": [
        "0x00",
        "app#0",
        "asset#0"
      ],
      "stack_out": [
        "app#0",
        "asset#0",
        "0x00"
      ]
    },
    "2493": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0",
        "asset#0"
      ]
    },
    "2495": {
      "op": "pushbytes 0x01",
      "defined_out": [
        "0x01",
        "app#0",
        "asset#0"
      ],
      "stack_out": [
        "app#0",
        "asset#0",
        "0x01"
      ]
    },
    "2498": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0",
        "asset#0"
      ]
    },
    "2500": {
      "op": "pushbytes 0x01",
      "stack_out": [
        "app#0",
        "asset#0",
        "0x01"
      ]
    },
    "2503": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0",
        "asset#0"
      ]
    },
    "2505": {
      "op": "intc_1 // appl",
      "defined_out": [
        "app#0",
        "appl",
        "asset#0"
      ],
      "stack_out": [
        "app#0",
        "asset#0",
        "appl"
      ]
    },
    "2506": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "app#0",
        "asset#0"
      ]
    },
    "2508": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "app#0",
        "asset#0"
      ],
      "stack_out": [
        "app#0",
        "asset#0",
        "0"
      ]
    },
    "2509": {
      "op": "itxn_field Fee",
      "stack_out": [
        "app#0",
        "asset#0"
      ]
    },
    "2511": {
      "op": "itxn_submit"
    },
    "2512": {
      "op": "itxn LastLog",
      "defined_out": [
        "app#0",
        "asset#0",
        "txn.LastLog#0"
      ],
      "stack_out": [
        "app#0",
        "asset#0",
        "txn.LastLog#0"
      ]
    },
    "2514": {
      "op": "swap",
      "stack_out": [
        "app#0",
        "txn.LastLog#0",
        "asset#0"
      ]
    },
    "2515": {
      "op": "asset_params_get AssetName",
      "defined_out": [
        "app#0",
        "check%0#0",
        "txn.LastLog#0",
        "value%0#0"
      ],
      "stack_out": [
        "app#0",
        "txn.LastLog#0",
        "value%0#0",
        "check%0#0"
      ]
    },
    "2517": {
      "error": "asset exists",
      "op": "assert // asset exists",
      "stack_out": [
        "app#0",
        "txn.LastLog#0",
        "value%0#0"
      ]
    },
    "2518": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "app#0",
        "tmp%1#10",
        "txn.LastLog#0",
        "value%0#0"
      ],
      "stack_out": [
        "app#0",
        "txn.LastLog#0",
        "value%0#0",
        "tmp%1#10"
      ]
    },
    "2520": {
      "op": "concat",
      "defined_out": [
        "app#0",
        "tmp%2#0",
        "txn.LastLog#0"
      ],
      "stack_out": [
        "app#0",
        "txn.LastLog#0",
        "tmp%2#0"
      ]
    },
    "2521": {
      "op": "uncover 2",
      "stack_out": [
        "txn.LastLog#0",
        "tmp%2#0",
        "app#0"
      ]
    },
    "2523": {
      "op": "app_params_get AppAddress",
      "defined_out": [
        "check%1#0",
        "tmp%2#0",
        "txn.LastLog#0",
        "value%1#0"
      ],
      "stack_out": [
        "txn.LastLog#0",
        "tmp%2#0",
        "value%1#0",
        "check%1#0"
      ]
    },
    "2525": {
      "error": "application exists",
      "op": "assert // application exists",
      "stack_out": [
        "txn.LastLog#0",
        "tmp%2#0",
        "value%1#0"
      ]
    },
    "2526": {
      "op": "concat",
      "defined_out": [
        "tmp%3#3",
        "txn.LastLog#0"
      ],
      "stack_out": [
        "txn.LastLog#0",
        "tmp%3#3"
      ]
    },
    "2527": {
      "op": "==",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "2528": {
      "op": "assert",
      "stack_out": []
    },
    "2529": {
      "op": "intc_2 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "2530": {
      "op": "return"
    },
    "2531": {
      "block": "main_test_void_route@8",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%37#0"
      ],
      "stack_out": [
        "tmp%37#0"
      ]
    },
    "2533": {
      "op": "!",
      "defined_out": [
        "tmp%38#0"
      ],
      "stack_out": [
        "tmp%38#0"
      ]
    },
    "2534": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "2535": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%39#0"
      ],
      "stack_out": [
        "tmp%39#0"
      ]
    },
    "2537": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "2538": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[1]%5#0"
      ],
      "stack_out": [
        "reinterpret_bytes[1]%5#0"
      ]
    },
    "2541": {
      "op": "btoi",
      "defined_out": [
        "tmp%41#0"
      ],
      "stack_out": [
        "tmp%41#0"
      ]
    },
    "2542": {
      "op": "txnas Applications",
      "defined_out": [
        "app#0"
      ],
      "stack_out": [
        "app#0"
      ]
    },
    "2544": {
      "op": "itxn_begin"
    },
    "2545": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "app#0 (copy)"
      ],
      "stack_out": [
        "app#0",
        "app#0 (copy)"
      ]
    },
    "2546": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "app#0"
      ]
    },
    "2548": {
      "op": "bytec 7 // method \"log(string)void\"",
      "defined_out": [
        "Method(log(string)void)",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "Method(log(string)void)"
      ]
    },
    "2550": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0"
      ]
    },
    "2552": {
      "op": "pushbytes 0x0006576f726c6431",
      "defined_out": [
        "0x0006576f726c6431",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "0x0006576f726c6431"
      ]
    },
    "2562": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0"
      ]
    },
    "2564": {
      "op": "intc_1 // appl",
      "defined_out": [
        "app#0",
        "appl"
      ],
      "stack_out": [
        "app#0",
        "appl"
      ]
    },
    "2565": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "app#0"
      ]
    },
    "2567": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "0"
      ]
    },
    "2568": {
      "op": "itxn_field Fee",
      "stack_out": [
        "app#0"
      ]
    },
    "2570": {
      "op": "itxn_submit"
    },
    "2571": {
      "op": "itxn LastLog",
      "defined_out": [
        "app#0",
        "txn.LastLog#0"
      ],
      "stack_out": [
        "app#0",
        "txn.LastLog#0"
      ]
    },
    "2573": {
      "op": "pushbytes 0x576f726c6431",
      "defined_out": [
        "0x576f726c6431",
        "app#0",
        "txn.LastLog#0"
      ],
      "stack_out": [
        "app#0",
        "txn.LastLog#0",
        "0x576f726c6431"
      ]
    },
    "2581": {
      "op": "==",
      "defined_out": [
        "app#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "app#0",
        "tmp%0#0"
      ]
    },
    "2582": {
      "op": "assert",
      "stack_out": [
        "app#0"
      ]
    },
    "2583": {
      "op": "itxn_begin"
    },
    "2584": {
      "op": "dup",
      "stack_out": [
        "app#0",
        "app#0 (copy)"
      ]
    },
    "2585": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "app#0"
      ]
    },
    "2587": {
      "op": "bytec 7 // method \"log(string)void\"",
      "stack_out": [
        "app#0",
        "Method(log(string)void)"
      ]
    },
    "2589": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0"
      ]
    },
    "2591": {
      "op": "pushbytes 0x0006576f726c6432",
      "defined_out": [
        "0x0006576f726c6432",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "0x0006576f726c6432"
      ]
    },
    "2601": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0"
      ]
    },
    "2603": {
      "op": "intc_1 // appl",
      "stack_out": [
        "app#0",
        "appl"
      ]
    },
    "2604": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "app#0"
      ]
    },
    "2606": {
      "op": "intc_0 // 0",
      "stack_out": [
        "app#0",
        "0"
      ]
    },
    "2607": {
      "op": "itxn_field Fee",
      "stack_out": [
        "app#0"
      ]
    },
    "2609": {
      "op": "itxn_submit"
    },
    "2610": {
      "op": "itxn LastLog",
      "stack_out": [
        "app#0",
        "txn.LastLog#0"
      ]
    },
    "2612": {
      "op": "pushbytes 0x576f726c6432",
      "defined_out": [
        "0x576f726c6432",
        "app#0",
        "txn.LastLog#0"
      ],
      "stack_out": [
        "app#0",
        "txn.LastLog#0",
        "0x576f726c6432"
      ]
    },
    "2620": {
      "op": "==",
      "defined_out": [
        "app#0",
        "tmp%1#11"
      ],
      "stack_out": [
        "app#0",
        "tmp%1#11"
      ]
    },
    "2621": {
      "op": "assert",
      "stack_out": [
        "app#0"
      ]
    },
    "2622": {
      "op": "itxn_begin"
    },
    "2623": {
      "op": "dup",
      "stack_out": [
        "app#0",
        "app#0 (copy)"
      ]
    },
    "2624": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "app#0"
      ]
    },
    "2626": {
      "op": "bytec 7 // method \"log(string)void\"",
      "stack_out": [
        "app#0",
        "Method(log(string)void)"
      ]
    },
    "2628": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0"
      ]
    },
    "2630": {
      "op": "pushbytes 0x0006576f726c6433",
      "defined_out": [
        "0x0006576f726c6433",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "0x0006576f726c6433"
      ]
    },
    "2640": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0"
      ]
    },
    "2642": {
      "op": "intc_1 // appl",
      "stack_out": [
        "app#0",
        "appl"
      ]
    },
    "2643": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "app#0"
      ]
    },
    "2645": {
      "op": "intc_0 // 0",
      "stack_out": [
        "app#0",
        "0"
      ]
    },
    "2646": {
      "op": "itxn_field Fee",
      "stack_out": [
        "app#0"
      ]
    },
    "2648": {
      "op": "itxn_submit"
    },
    "2649": {
      "op": "itxn LastLog",
      "stack_out": [
        "app#0",
        "txn.LastLog#0"
      ]
    },
    "2651": {
      "op": "pushbytes 0x576f726c6433",
      "defined_out": [
        "0x576f726c6433",
        "app#0",
        "txn.LastLog#0"
      ],
      "stack_out": [
        "app#0",
        "txn.LastLog#0",
        "0x576f726c6433"
      ]
    },
    "2659": {
      "op": "==",
      "defined_out": [
        "app#0",
        "tmp%2#1"
      ],
      "stack_out": [
        "app#0",
        "tmp%2#1"
      ]
    },
    "2660": {
      "op": "assert",
      "stack_out": [
        "app#0"
      ]
    },
    "2661": {
      "op": "itxn_begin"
    },
    "2662": {
      "op": "itxn_field ApplicationID",
      "stack_out": []
    },
    "2664": {
      "op": "bytec 7 // method \"log(string)void\"",
      "stack_out": [
        "Method(log(string)void)"
      ]
    },
    "2666": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "2668": {
      "op": "pushbytes 0x0006576f726c6434",
      "defined_out": [
        "0x0006576f726c6434"
      ],
      "stack_out": [
        "0x0006576f726c6434"
      ]
    },
    "2678": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "2680": {
      "op": "intc_1 // appl",
      "stack_out": [
        "appl"
      ]
    },
    "2681": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "2683": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0"
      ]
    },
    "2684": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "2686": {
      "op": "itxn_submit"
    },
    "2687": {
      "op": "itxn LastLog",
      "stack_out": [
        "txn.LastLog#0"
      ]
    },
    "2689": {
      "op": "pushbytes 0x576f726c6434",
      "defined_out": [
        "0x576f726c6434",
        "txn.LastLog#0"
      ],
      "stack_out": [
        "txn.LastLog#0",
        "0x576f726c6434"
      ]
    },
    "2697": {
      "op": "==",
      "defined_out": [
        "tmp%3#1"
      ],
      "stack_out": [
        "tmp%3#1"
      ]
    },
    "2698": {
      "op": "assert",
      "stack_out": []
    },
    "2699": {
      "op": "intc_2 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "2700": {
      "op": "return"
    },
    "2701": {
      "block": "main_test_15plus_args_route@7",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%31#0"
      ],
      "stack_out": [
        "tmp%31#0"
      ]
    },
    "2703": {
      "op": "!",
      "defined_out": [
        "tmp%32#0"
      ],
      "stack_out": [
        "tmp%32#0"
      ]
    },
    "2704": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "2705": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%33#0"
      ],
      "stack_out": [
        "tmp%33#0"
      ]
    },
    "2707": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "2708": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[1]%4#0"
      ],
      "stack_out": [
        "reinterpret_bytes[1]%4#0"
      ]
    },
    "2711": {
      "op": "btoi",
      "defined_out": [
        "tmp%35#0"
      ],
      "stack_out": [
        "tmp%35#0"
      ]
    },
    "2712": {
      "op": "txnas Applications",
      "defined_out": [
        "app#0"
      ],
      "stack_out": [
        "app#0"
      ]
    },
    "2714": {
      "op": "itxn_begin"
    },
    "2715": {
      "op": "itxn_field ApplicationID",
      "stack_out": []
    },
    "2717": {
      "op": "pushbytes 0xba0b4381 // method \"return_args_after_14th(uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint8,uint8,uint8,uint8,(uint8,uint8,uint8,uint8),uint8)byte[]\"",
      "defined_out": [
        "Method(return_args_after_14th(uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint8,uint8,uint8,uint8,(uint8,uint8,uint8,uint8),uint8)byte[])"
      ],
      "stack_out": [
        "Method(return_args_after_14th(uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint8,uint8,uint8,uint8,(uint8,uint8,uint8,uint8),uint8)byte[])"
      ]
    },
    "2723": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "2725": {
      "op": "bytec_2 // 0x0000000000000001",
      "defined_out": [
        "0x0000000000000001"
      ],
      "stack_out": [
        "0x0000000000000001"
      ]
    },
    "2726": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "2728": {
      "op": "bytec 26 // 0x0000000000000002",
      "defined_out": [
        "0x0000000000000002"
      ],
      "stack_out": [
        "0x0000000000000002"
      ]
    },
    "2730": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "2732": {
      "op": "bytec 12 // 0x0000000000000003",
      "defined_out": [
        "0x0000000000000003"
      ],
      "stack_out": [
        "0x0000000000000003"
      ]
    },
    "2734": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "2736": {
      "op": "pushbytes 0x0000000000000004",
      "defined_out": [
        "0x0000000000000004"
      ],
      "stack_out": [
        "0x0000000000000004"
      ]
    },
    "2746": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "2748": {
      "op": "pushbytes 0x0000000000000005",
      "defined_out": [
        "0x0000000000000005"
      ],
      "stack_out": [
        "0x0000000000000005"
      ]
    },
    "2758": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "2760": {
      "op": "pushbytes 0x0000000000000006",
      "defined_out": [
        "0x0000000000000006"
      ],
      "stack_out": [
        "0x0000000000000006"
      ]
    },
    "2770": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "2772": {
      "op": "pushbytes 0x0000000000000007",
      "defined_out": [
        "0x0000000000000007"
      ],
      "stack_out": [
        "0x0000000000000007"
      ]
    },
    "2782": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "2784": {
      "op": "pushbytes 0x0000000000000008",
      "defined_out": [
        "0x0000000000000008"
      ],
      "stack_out": [
        "0x0000000000000008"
      ]
    },
    "2794": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "2796": {
      "op": "pushbytes 0x0000000000000009",
      "defined_out": [
        "0x0000000000000009"
      ],
      "stack_out": [
        "0x0000000000000009"
      ]
    },
    "2806": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "2808": {
      "op": "pushbytes 0x000000000000000a",
      "defined_out": [
        "0x000000000000000a"
      ],
      "stack_out": [
        "0x000000000000000a"
      ]
    },
    "2818": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "2820": {
      "op": "pushbytes 0x000000000000000b",
      "defined_out": [
        "0x000000000000000b"
      ],
      "stack_out": [
        "0x000000000000000b"
      ]
    },
    "2830": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "2832": {
      "op": "pushbytes 0x000000000000000c",
      "defined_out": [
        "0x000000000000000c"
      ],
      "stack_out": [
        "0x000000000000000c"
      ]
    },
    "2842": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "2844": {
      "op": "pushbytes 0x000000000000000d",
      "defined_out": [
        "0x000000000000000d"
      ],
      "stack_out": [
        "0x000000000000000d"
      ]
    },
    "2854": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "2856": {
      "op": "pushbytes 0x000000000000000e",
      "defined_out": [
        "0x000000000000000e"
      ],
      "stack_out": [
        "0x000000000000000e"
      ]
    },
    "2866": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "2868": {
      "op": "bytec 27 // 0x0f101112deadbeef14",
      "defined_out": [
        "0x0f101112deadbeef14"
      ],
      "stack_out": [
        "0x0f101112deadbeef14"
      ]
    },
    "2870": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "2872": {
      "op": "intc_1 // appl",
      "defined_out": [
        "appl"
      ],
      "stack_out": [
        "appl"
      ]
    },
    "2873": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "2875": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "2876": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "2878": {
      "op": "itxn_submit"
    },
    "2879": {
      "op": "itxn LastLog"
    },
    "2881": {
      "op": "dup",
      "defined_out": [
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ]
    },
    "2882": {
      "op": "extract 0 4",
      "defined_out": [
        "awst_tmp%0#0",
        "tmp%1#1"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "tmp%1#1"
      ]
    },
    "2885": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "awst_tmp%0#0",
        "tmp%1#1"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "tmp%1#1",
        "0x151f7c75"
      ]
    },
    "2886": {
      "op": "==",
      "defined_out": [
        "awst_tmp%0#0",
        "tmp%2#1"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "tmp%2#1"
      ]
    },
    "2887": {
      "error": "ARC4 prefix is valid",
      "op": "assert // ARC4 prefix is valid",
      "stack_out": [
        "awst_tmp%0#0"
      ]
    },
    "2888": {
      "op": "extract 6 0",
      "defined_out": [
        "tmp%3#3"
      ],
      "stack_out": [
        "tmp%3#3"
      ]
    },
    "2891": {
      "op": "bytec 27 // 0x0f101112deadbeef14",
      "stack_out": [
        "tmp%3#3",
        "0x0f101112deadbeef14"
      ]
    },
    "2893": {
      "op": "==",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "2894": {
      "op": "assert",
      "stack_out": []
    },
    "2895": {
      "op": "intc_2 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "2896": {
      "op": "return"
    },
    "2897": {
      "block": "main_test_arg_conversion_route@6",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%25#0"
      ],
      "stack_out": [
        "tmp%25#0"
      ]
    },
    "2899": {
      "op": "!",
      "defined_out": [
        "tmp%26#0"
      ],
      "stack_out": [
        "tmp%26#0"
      ]
    },
    "2900": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "2901": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%27#0"
      ],
      "stack_out": [
        "tmp%27#0"
      ]
    },
    "2903": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "2904": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[1]%3#0"
      ],
      "stack_out": [
        "reinterpret_bytes[1]%3#0"
      ]
    },
    "2907": {
      "op": "btoi",
      "defined_out": [
        "tmp%29#0"
      ],
      "stack_out": [
        "tmp%29#0"
      ]
    },
    "2908": {
      "op": "txnas Applications",
      "defined_out": [
        "app#0"
      ],
      "stack_out": [
        "app#0"
      ]
    },
    "2910": {
      "op": "itxn_begin"
    },
    "2911": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "app#0 (copy)"
      ],
      "stack_out": [
        "app#0",
        "app#0 (copy)"
      ]
    },
    "2912": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "app#0"
      ]
    },
    "2914": {
      "op": "bytec 7 // method \"log(string)void\"",
      "defined_out": [
        "Method(log(string)void)",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "Method(log(string)void)"
      ]
    },
    "2916": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0"
      ]
    },
    "2918": {
      "op": "pushbytes 0x000a636f6e76657274656431",
      "defined_out": [
        "0x000a636f6e76657274656431",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "0x000a636f6e76657274656431"
      ]
    },
    "2932": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0"
      ]
    },
    "2934": {
      "op": "intc_1 // appl",
      "defined_out": [
        "app#0",
        "appl"
      ],
      "stack_out": [
        "app#0",
        "appl"
      ]
    },
    "2935": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "app#0"
      ]
    },
    "2937": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "0"
      ]
    },
    "2938": {
      "op": "itxn_field Fee",
      "stack_out": [
        "app#0"
      ]
    },
    "2940": {
      "op": "itxn_submit"
    },
    "2941": {
      "op": "itxn LastLog",
      "defined_out": [
        "app#0",
        "txn.LastLog#0"
      ],
      "stack_out": [
        "app#0",
        "txn.LastLog#0"
      ]
    },
    "2943": {
      "op": "pushbytes 0x636f6e76657274656431",
      "defined_out": [
        "0x636f6e76657274656431",
        "app#0",
        "txn.LastLog#0"
      ],
      "stack_out": [
        "app#0",
        "txn.LastLog#0",
        "0x636f6e76657274656431"
      ]
    },
    "2955": {
      "op": "==",
      "defined_out": [
        "app#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "app#0",
        "tmp%0#0"
      ]
    },
    "2956": {
      "op": "assert",
      "stack_out": [
        "app#0"
      ]
    },
    "2957": {
      "op": "itxn_begin"
    },
    "2958": {
      "op": "dup",
      "stack_out": [
        "app#0",
        "app#0 (copy)"
      ]
    },
    "2959": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "app#0"
      ]
    },
    "2961": {
      "op": "pushbytes 0x3c1058d9 // method \"log(uint64)void\"",
      "defined_out": [
        "Method(log(uint64)void)",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "Method(log(uint64)void)"
      ]
    },
    "2967": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0"
      ]
    },
    "2969": {
      "op": "bytec 26 // 0x0000000000000002",
      "defined_out": [
        "0x0000000000000002",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "0x0000000000000002"
      ]
    },
    "2971": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0"
      ]
    },
    "2973": {
      "op": "intc_1 // appl",
      "stack_out": [
        "app#0",
        "appl"
      ]
    },
    "2974": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "app#0"
      ]
    },
    "2976": {
      "op": "intc_0 // 0",
      "stack_out": [
        "app#0",
        "0"
      ]
    },
    "2977": {
      "op": "itxn_field Fee",
      "stack_out": [
        "app#0"
      ]
    },
    "2979": {
      "op": "itxn_submit"
    },
    "2980": {
      "op": "itxn LastLog",
      "stack_out": [
        "app#0",
        "txn.LastLog#0"
      ]
    },
    "2982": {
      "op": "intc_3 // 2",
      "defined_out": [
        "2",
        "app#0",
        "txn.LastLog#0"
      ],
      "stack_out": [
        "app#0",
        "txn.LastLog#0",
        "2"
      ]
    },
    "2983": {
      "op": "itob",
      "defined_out": [
        "app#0",
        "tmp%1#1",
        "txn.LastLog#0"
      ],
      "stack_out": [
        "app#0",
        "txn.LastLog#0",
        "tmp%1#1"
      ]
    },
    "2984": {
      "op": "==",
      "defined_out": [
        "app#0",
        "tmp%2#1"
      ],
      "stack_out": [
        "app#0",
        "tmp%2#1"
      ]
    },
    "2985": {
      "op": "assert",
      "stack_out": [
        "app#0"
      ]
    },
    "2986": {
      "op": "itxn_begin"
    },
    "2987": {
      "op": "dup",
      "stack_out": [
        "app#0",
        "app#0 (copy)"
      ]
    },
    "2988": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "app#0"
      ]
    },
    "2990": {
      "op": "pushbytes 0x6af45930 // method \"log(uint512)void\"",
      "defined_out": [
        "Method(log(uint512)void)",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "Method(log(uint512)void)"
      ]
    },
    "2996": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0"
      ]
    },
    "2998": {
      "op": "bytec 28 // 0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000003",
      "defined_out": [
        "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000003",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000003"
      ]
    },
    "3000": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0"
      ]
    },
    "3002": {
      "op": "intc_1 // appl",
      "stack_out": [
        "app#0",
        "appl"
      ]
    },
    "3003": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "app#0"
      ]
    },
    "3005": {
      "op": "intc_0 // 0",
      "stack_out": [
        "app#0",
        "0"
      ]
    },
    "3006": {
      "op": "itxn_field Fee",
      "stack_out": [
        "app#0"
      ]
    },
    "3008": {
      "op": "itxn_submit"
    },
    "3009": {
      "op": "itxn LastLog",
      "stack_out": [
        "app#0",
        "txn.LastLog#0"
      ]
    },
    "3011": {
      "op": "bytec 28 // 0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000003",
      "stack_out": [
        "app#0",
        "txn.LastLog#0",
        "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000003"
      ]
    },
    "3013": {
      "op": "==",
      "defined_out": [
        "app#0",
        "tmp%6#1"
      ],
      "stack_out": [
        "app#0",
        "tmp%6#1"
      ]
    },
    "3014": {
      "op": "assert",
      "stack_out": [
        "app#0"
      ]
    },
    "3015": {
      "op": "itxn_begin"
    },
    "3016": {
      "op": "dup",
      "stack_out": [
        "app#0",
        "app#0 (copy)"
      ]
    },
    "3017": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "app#0"
      ]
    },
    "3019": {
      "op": "pushbytes 0xb500e111 // method \"log(byte[])void\"",
      "defined_out": [
        "Method(log(byte[])void)",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "Method(log(byte[])void)"
      ]
    },
    "3025": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0"
      ]
    },
    "3027": {
      "op": "pushbytes 0x000134",
      "defined_out": [
        "0x000134",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "0x000134"
      ]
    },
    "3032": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0"
      ]
    },
    "3034": {
      "op": "intc_1 // appl",
      "stack_out": [
        "app#0",
        "appl"
      ]
    },
    "3035": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "app#0"
      ]
    },
    "3037": {
      "op": "intc_0 // 0",
      "stack_out": [
        "app#0",
        "0"
      ]
    },
    "3038": {
      "op": "itxn_field Fee",
      "stack_out": [
        "app#0"
      ]
    },
    "3040": {
      "op": "itxn_submit"
    },
    "3041": {
      "op": "itxn LastLog",
      "stack_out": [
        "app#0",
        "txn.LastLog#0"
      ]
    },
    "3043": {
      "op": "pushbytes 0x34",
      "defined_out": [
        "0x34",
        "app#0",
        "txn.LastLog#0"
      ],
      "stack_out": [
        "app#0",
        "txn.LastLog#0",
        "0x34"
      ]
    },
    "3046": {
      "op": "==",
      "defined_out": [
        "app#0",
        "tmp%7#1"
      ],
      "stack_out": [
        "app#0",
        "tmp%7#1"
      ]
    },
    "3047": {
      "op": "assert",
      "stack_out": [
        "app#0"
      ]
    },
    "3048": {
      "op": "itxn_begin"
    },
    "3049": {
      "op": "itxn_field ApplicationID",
      "stack_out": []
    },
    "3051": {
      "op": "pushbytes 0x6eed7ec3 // method \"log(bool)void\"",
      "defined_out": [
        "Method(log(bool)void)"
      ],
      "stack_out": [
        "Method(log(bool)void)"
      ]
    },
    "3057": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "3059": {
      "op": "pushbytes 0x80",
      "defined_out": [
        "0x80"
      ],
      "stack_out": [
        "0x80"
      ]
    },
    "3062": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "3064": {
      "op": "intc_1 // appl",
      "stack_out": [
        "appl"
      ]
    },
    "3065": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "3067": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0"
      ]
    },
    "3068": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "3070": {
      "op": "itxn_submit"
    },
    "3071": {
      "op": "itxn LastLog",
      "stack_out": [
        "txn.LastLog#0"
      ]
    },
    "3073": {
      "op": "pushbytes 0x54727565",
      "defined_out": [
        "0x54727565",
        "txn.LastLog#0"
      ],
      "stack_out": [
        "txn.LastLog#0",
        "0x54727565"
      ]
    },
    "3079": {
      "op": "==",
      "defined_out": [
        "tmp%8#1"
      ],
      "stack_out": [
        "tmp%8#1"
      ]
    },
    "3080": {
      "op": "assert",
      "stack_out": []
    },
    "3081": {
      "op": "intc_2 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "3082": {
      "op": "return"
    },
    "3083": {
      "block": "main_test_method_overload_route@5",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%19#0"
      ],
      "stack_out": [
        "tmp%19#0"
      ]
    },
    "3085": {
      "op": "!",
      "defined_out": [
        "tmp%20#0"
      ],
      "stack_out": [
        "tmp%20#0"
      ]
    },
    "3086": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "3087": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%21#0"
      ],
      "stack_out": [
        "tmp%21#0"
      ]
    },
    "3089": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "3090": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[1]%2#0"
      ],
      "stack_out": [
        "reinterpret_bytes[1]%2#0"
      ]
    },
    "3093": {
      "op": "btoi",
      "defined_out": [
        "tmp%23#0"
      ],
      "stack_out": [
        "tmp%23#0"
      ]
    },
    "3094": {
      "op": "txnas Applications",
      "defined_out": [
        "app#0"
      ],
      "stack_out": [
        "app#0"
      ]
    },
    "3096": {
      "op": "itxn_begin"
    },
    "3097": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "app#0 (copy)"
      ],
      "stack_out": [
        "app#0",
        "app#0 (copy)"
      ]
    },
    "3098": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "app#0"
      ]
    },
    "3100": {
      "op": "bytec_3 // method \"echo(string)string\"",
      "defined_out": [
        "Method(echo(string)string)",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "Method(echo(string)string)"
      ]
    },
    "3101": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0"
      ]
    },
    "3103": {
      "op": "pushbytes 0x000e7479706564202b2069676e6f7265",
      "defined_out": [
        "0x000e7479706564202b2069676e6f7265",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "0x000e7479706564202b2069676e6f7265"
      ]
    },
    "3121": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0"
      ]
    },
    "3123": {
      "op": "intc_1 // appl",
      "defined_out": [
        "app#0",
        "appl"
      ],
      "stack_out": [
        "app#0",
        "appl"
      ]
    },
    "3124": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "app#0"
      ]
    },
    "3126": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "0"
      ]
    },
    "3127": {
      "op": "itxn_field Fee",
      "stack_out": [
        "app#0"
      ]
    },
    "3129": {
      "op": "itxn_submit"
    },
    "3130": {
      "op": "itxn LastLog",
      "defined_out": [
        "app#0",
        "awst_tmp%0#0"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0"
      ]
    },
    "3132": {
      "op": "extract 0 4",
      "defined_out": [
        "app#0",
        "tmp%1#1"
      ],
      "stack_out": [
        "app#0",
        "tmp%1#1"
      ]
    },
    "3135": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "app#0",
        "tmp%1#1"
      ],
      "stack_out": [
        "app#0",
        "tmp%1#1",
        "0x151f7c75"
      ]
    },
    "3136": {
      "op": "==",
      "defined_out": [
        "app#0",
        "tmp%2#1"
      ],
      "stack_out": [
        "app#0",
        "tmp%2#1"
      ]
    },
    "3137": {
      "error": "ARC4 prefix is valid",
      "op": "assert // ARC4 prefix is valid",
      "stack_out": [
        "app#0"
      ]
    },
    "3138": {
      "op": "itxn LastLog"
    },
    "3140": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "awst_tmp%1#0",
        "awst_tmp%1#0 (copy)"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%1#0",
        "awst_tmp%1#0 (copy)"
      ]
    },
    "3141": {
      "op": "extract 4 0",
      "defined_out": [
        "app#0",
        "awst_tmp%1#0",
        "tmp%3#3"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%1#0",
        "tmp%3#3"
      ]
    },
    "3144": {
      "op": "swap",
      "stack_out": [
        "app#0",
        "tmp%3#3",
        "awst_tmp%1#0"
      ]
    },
    "3145": {
      "op": "extract 0 4",
      "defined_out": [
        "app#0",
        "tmp%3#3",
        "tmp%4#13"
      ],
      "stack_out": [
        "app#0",
        "tmp%3#3",
        "tmp%4#13"
      ]
    },
    "3148": {
      "op": "bytec_0 // 0x151f7c75",
      "stack_out": [
        "app#0",
        "tmp%3#3",
        "tmp%4#13",
        "0x151f7c75"
      ]
    },
    "3149": {
      "op": "==",
      "defined_out": [
        "app#0",
        "tmp%3#3",
        "tmp%5#2"
      ],
      "stack_out": [
        "app#0",
        "tmp%3#3",
        "tmp%5#2"
      ]
    },
    "3150": {
      "error": "ARC4 prefix is valid",
      "op": "assert // ARC4 prefix is valid",
      "stack_out": [
        "app#0",
        "tmp%3#3"
      ]
    },
    "3151": {
      "op": "pushbytes 0x00146563686f3a207479706564202b2069676e6f7265",
      "defined_out": [
        "0x00146563686f3a207479706564202b2069676e6f7265",
        "app#0",
        "tmp%3#3"
      ],
      "stack_out": [
        "app#0",
        "tmp%3#3",
        "0x00146563686f3a207479706564202b2069676e6f7265"
      ]
    },
    "3175": {
      "op": "==",
      "defined_out": [
        "app#0",
        "tmp%6#1"
      ],
      "stack_out": [
        "app#0",
        "tmp%6#1"
      ]
    },
    "3176": {
      "op": "assert",
      "stack_out": [
        "app#0"
      ]
    },
    "3177": {
      "op": "itxn_begin"
    },
    "3178": {
      "op": "dup",
      "stack_out": [
        "app#0",
        "app#0 (copy)"
      ]
    },
    "3179": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "app#0"
      ]
    },
    "3181": {
      "op": "bytec_3 // method \"echo(string)string\"",
      "stack_out": [
        "app#0",
        "Method(echo(string)string)"
      ]
    },
    "3182": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0"
      ]
    },
    "3184": {
      "op": "pushbytes 0x0010756e7479706564202b2069676e6f7265",
      "defined_out": [
        "0x0010756e7479706564202b2069676e6f7265",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "0x0010756e7479706564202b2069676e6f7265"
      ]
    },
    "3204": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0"
      ]
    },
    "3206": {
      "op": "intc_1 // appl",
      "stack_out": [
        "app#0",
        "appl"
      ]
    },
    "3207": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "app#0"
      ]
    },
    "3209": {
      "op": "intc_0 // 0",
      "stack_out": [
        "app#0",
        "0"
      ]
    },
    "3210": {
      "op": "itxn_field Fee",
      "stack_out": [
        "app#0"
      ]
    },
    "3212": {
      "op": "itxn_submit"
    },
    "3213": {
      "op": "itxn LastLog"
    },
    "3215": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "awst_tmp%2#0",
        "awst_tmp%2#0 (copy)"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%2#0",
        "awst_tmp%2#0 (copy)"
      ]
    },
    "3216": {
      "op": "extract 4 0",
      "defined_out": [
        "app#0",
        "awst_tmp%2#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%2#0",
        "tmp%7#0"
      ]
    },
    "3219": {
      "op": "swap",
      "stack_out": [
        "app#0",
        "tmp%7#0",
        "awst_tmp%2#0"
      ]
    },
    "3220": {
      "op": "extract 0 4",
      "defined_out": [
        "app#0",
        "tmp%7#0",
        "tmp%8#3"
      ],
      "stack_out": [
        "app#0",
        "tmp%7#0",
        "tmp%8#3"
      ]
    },
    "3223": {
      "op": "bytec_0 // 0x151f7c75",
      "stack_out": [
        "app#0",
        "tmp%7#0",
        "tmp%8#3",
        "0x151f7c75"
      ]
    },
    "3224": {
      "op": "==",
      "defined_out": [
        "app#0",
        "tmp%7#0",
        "tmp%9#4"
      ],
      "stack_out": [
        "app#0",
        "tmp%7#0",
        "tmp%9#4"
      ]
    },
    "3225": {
      "error": "ARC4 prefix is valid",
      "op": "assert // ARC4 prefix is valid",
      "stack_out": [
        "app#0",
        "tmp%7#0"
      ]
    },
    "3226": {
      "op": "pushbytes 0x00166563686f3a20756e7479706564202b2069676e6f7265",
      "defined_out": [
        "0x00166563686f3a20756e7479706564202b2069676e6f7265",
        "app#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "app#0",
        "tmp%7#0",
        "0x00166563686f3a20756e7479706564202b2069676e6f7265"
      ]
    },
    "3252": {
      "op": "==",
      "defined_out": [
        "app#0",
        "tmp%10#2"
      ],
      "stack_out": [
        "app#0",
        "tmp%10#2"
      ]
    },
    "3253": {
      "op": "assert",
      "stack_out": [
        "app#0"
      ]
    },
    "3254": {
      "op": "itxn_begin"
    },
    "3255": {
      "op": "dup",
      "stack_out": [
        "app#0",
        "app#0 (copy)"
      ]
    },
    "3256": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "app#0"
      ]
    },
    "3258": {
      "op": "bytec_3 // method \"echo(string)string\"",
      "stack_out": [
        "app#0",
        "Method(echo(string)string)"
      ]
    },
    "3259": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0"
      ]
    },
    "3261": {
      "op": "pushbytes 0x00057475706c65",
      "defined_out": [
        "0x00057475706c65",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "0x00057475706c65"
      ]
    },
    "3270": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0"
      ]
    },
    "3272": {
      "op": "intc_1 // appl",
      "stack_out": [
        "app#0",
        "appl"
      ]
    },
    "3273": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "app#0"
      ]
    },
    "3275": {
      "op": "intc_0 // 0",
      "stack_out": [
        "app#0",
        "0"
      ]
    },
    "3276": {
      "op": "itxn_field Fee",
      "stack_out": [
        "app#0"
      ]
    },
    "3278": {
      "op": "itxn_submit"
    },
    "3279": {
      "op": "itxn LastLog"
    },
    "3281": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "awst_tmp%3#0",
        "awst_tmp%3#0 (copy)"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%3#0",
        "awst_tmp%3#0 (copy)"
      ]
    },
    "3282": {
      "op": "extract 4 0",
      "defined_out": [
        "app#0",
        "awst_tmp%3#0",
        "result.0#0"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%3#0",
        "result.0#0"
      ]
    },
    "3285": {
      "op": "swap",
      "stack_out": [
        "app#0",
        "result.0#0",
        "awst_tmp%3#0"
      ]
    },
    "3286": {
      "op": "extract 0 4",
      "defined_out": [
        "app#0",
        "result.0#0",
        "tmp%12#3"
      ],
      "stack_out": [
        "app#0",
        "result.0#0",
        "tmp%12#3"
      ]
    },
    "3289": {
      "op": "bytec_0 // 0x151f7c75",
      "stack_out": [
        "app#0",
        "result.0#0",
        "tmp%12#3",
        "0x151f7c75"
      ]
    },
    "3290": {
      "op": "==",
      "defined_out": [
        "app#0",
        "result.0#0",
        "tmp%13#2"
      ],
      "stack_out": [
        "app#0",
        "result.0#0",
        "tmp%13#2"
      ]
    },
    "3291": {
      "error": "ARC4 prefix is valid",
      "op": "assert // ARC4 prefix is valid",
      "stack_out": [
        "app#0",
        "result.0#0"
      ]
    },
    "3292": {
      "op": "itxn LastLog",
      "defined_out": [
        "app#0",
        "result.0#0",
        "result.1.LastLog#0"
      ],
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1.LastLog#0"
      ]
    },
    "3294": {
      "op": "swap",
      "stack_out": [
        "app#0",
        "result.1.LastLog#0",
        "result.0#0"
      ]
    },
    "3295": {
      "op": "bytec 29 // 0x000b6563686f3a207475706c65",
      "defined_out": [
        "0x000b6563686f3a207475706c65",
        "app#0",
        "result.0#0",
        "result.1.LastLog#0"
      ],
      "stack_out": [
        "app#0",
        "result.1.LastLog#0",
        "result.0#0",
        "0x000b6563686f3a207475706c65"
      ]
    },
    "3297": {
      "op": "==",
      "defined_out": [
        "app#0",
        "result.1.LastLog#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "app#0",
        "result.1.LastLog#0",
        "tmp%14#0"
      ]
    },
    "3298": {
      "op": "assert",
      "stack_out": [
        "app#0",
        "result.1.LastLog#0"
      ]
    },
    "3299": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "result.1.LastLog#0",
        "result.1.LastLog#0 (copy)"
      ],
      "stack_out": [
        "app#0",
        "result.1.LastLog#0",
        "result.1.LastLog#0 (copy)"
      ]
    },
    "3300": {
      "op": "extract 4 0",
      "defined_out": [
        "app#0",
        "result.1.LastLog#0",
        "tmp%15#4"
      ],
      "stack_out": [
        "app#0",
        "result.1.LastLog#0",
        "tmp%15#4"
      ]
    },
    "3303": {
      "op": "swap",
      "stack_out": [
        "app#0",
        "tmp%15#4",
        "result.1.LastLog#0"
      ]
    },
    "3304": {
      "op": "extract 0 4",
      "defined_out": [
        "app#0",
        "tmp%15#4",
        "tmp%16#2"
      ],
      "stack_out": [
        "app#0",
        "tmp%15#4",
        "tmp%16#2"
      ]
    },
    "3307": {
      "op": "bytec_0 // 0x151f7c75",
      "stack_out": [
        "app#0",
        "tmp%15#4",
        "tmp%16#2",
        "0x151f7c75"
      ]
    },
    "3308": {
      "op": "==",
      "defined_out": [
        "app#0",
        "tmp%15#4",
        "tmp%17#2"
      ],
      "stack_out": [
        "app#0",
        "tmp%15#4",
        "tmp%17#2"
      ]
    },
    "3309": {
      "error": "ARC4 prefix is valid",
      "op": "assert // ARC4 prefix is valid",
      "stack_out": [
        "app#0",
        "tmp%15#4"
      ]
    },
    "3310": {
      "op": "bytec 29 // 0x000b6563686f3a207475706c65",
      "stack_out": [
        "app#0",
        "tmp%15#4",
        "0x000b6563686f3a207475706c65"
      ]
    },
    "3312": {
      "op": "==",
      "defined_out": [
        "app#0",
        "tmp%18#1"
      ],
      "stack_out": [
        "app#0",
        "tmp%18#1"
      ]
    },
    "3313": {
      "op": "assert",
      "stack_out": [
        "app#0"
      ]
    },
    "3314": {
      "op": "itxn_begin"
    },
    "3315": {
      "op": "itxn_field ApplicationID",
      "stack_out": []
    },
    "3317": {
      "op": "bytec_3 // method \"echo(string)string\"",
      "stack_out": [
        "Method(echo(string)string)"
      ]
    },
    "3318": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "3320": {
      "op": "pushbytes 0x0007756e7479706564",
      "defined_out": [
        "0x0007756e7479706564"
      ],
      "stack_out": [
        "0x0007756e7479706564"
      ]
    },
    "3331": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "3333": {
      "op": "intc_1 // appl",
      "stack_out": [
        "appl"
      ]
    },
    "3334": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "3336": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0"
      ]
    },
    "3337": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "3339": {
      "op": "itxn_submit"
    },
    "3340": {
      "op": "itxn LastLog"
    },
    "3342": {
      "op": "dup",
      "defined_out": [
        "txn_result.LastLog#0",
        "txn_result.LastLog#0 (copy)"
      ],
      "stack_out": [
        "txn_result.LastLog#0",
        "txn_result.LastLog#0 (copy)"
      ]
    },
    "3343": {
      "op": "extract 4 0",
      "defined_out": [
        "tmp%19#2",
        "txn_result.LastLog#0"
      ],
      "stack_out": [
        "txn_result.LastLog#0",
        "tmp%19#2"
      ]
    },
    "3346": {
      "op": "swap",
      "stack_out": [
        "tmp%19#2",
        "txn_result.LastLog#0"
      ]
    },
    "3347": {
      "op": "extract 0 4",
      "defined_out": [
        "tmp%19#2",
        "tmp%20#3"
      ],
      "stack_out": [
        "tmp%19#2",
        "tmp%20#3"
      ]
    },
    "3350": {
      "op": "bytec_0 // 0x151f7c75",
      "stack_out": [
        "tmp%19#2",
        "tmp%20#3",
        "0x151f7c75"
      ]
    },
    "3351": {
      "op": "==",
      "defined_out": [
        "tmp%19#2",
        "tmp%21#1"
      ],
      "stack_out": [
        "tmp%19#2",
        "tmp%21#1"
      ]
    },
    "3352": {
      "error": "ARC4 prefix is valid",
      "op": "assert // ARC4 prefix is valid",
      "stack_out": [
        "tmp%19#2"
      ]
    },
    "3353": {
      "op": "pushbytes 0x000d6563686f3a20756e7479706564",
      "defined_out": [
        "0x000d6563686f3a20756e7479706564",
        "tmp%19#2"
      ],
      "stack_out": [
        "tmp%19#2",
        "0x000d6563686f3a20756e7479706564"
      ]
    },
    "3370": {
      "op": "==",
      "defined_out": [
        "tmp%22#1"
      ],
      "stack_out": [
        "tmp%22#1"
      ]
    },
    "3371": {
      "op": "assert",
      "stack_out": []
    },
    "3372": {
      "op": "intc_2 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "3373": {
      "op": "return"
    },
    "3374": {
      "block": "main_test_method_selector_kinds_route@4",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%13#0"
      ],
      "stack_out": [
        "tmp%13#0"
      ]
    },
    "3376": {
      "op": "!",
      "defined_out": [
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%14#0"
      ]
    },
    "3377": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "3378": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%15#0"
      ],
      "stack_out": [
        "tmp%15#0"
      ]
    },
    "3380": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "3381": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[1]%1#0"
      ],
      "stack_out": [
        "reinterpret_bytes[1]%1#0"
      ]
    },
    "3384": {
      "op": "btoi",
      "defined_out": [
        "tmp%17#0"
      ],
      "stack_out": [
        "tmp%17#0"
      ]
    },
    "3385": {
      "op": "txnas Applications",
      "defined_out": [
        "app#0"
      ],
      "stack_out": [
        "app#0"
      ]
    },
    "3387": {
      "op": "itxn_begin"
    },
    "3388": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "app#0 (copy)"
      ],
      "stack_out": [
        "app#0",
        "app#0 (copy)"
      ]
    },
    "3389": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "app#0"
      ]
    },
    "3391": {
      "op": "bytec_3 // method \"echo(string)string\"",
      "defined_out": [
        "Method(echo(string)string)",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "Method(echo(string)string)"
      ]
    },
    "3392": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0"
      ]
    },
    "3394": {
      "op": "pushbytes 0x00057465737431",
      "defined_out": [
        "0x00057465737431",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "0x00057465737431"
      ]
    },
    "3403": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0"
      ]
    },
    "3405": {
      "op": "intc_1 // appl",
      "defined_out": [
        "app#0",
        "appl"
      ],
      "stack_out": [
        "app#0",
        "appl"
      ]
    },
    "3406": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "app#0"
      ]
    },
    "3408": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "0"
      ]
    },
    "3409": {
      "op": "itxn_field Fee",
      "stack_out": [
        "app#0"
      ]
    },
    "3411": {
      "op": "itxn_submit"
    },
    "3412": {
      "op": "itxn LastLog"
    },
    "3414": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ]
    },
    "3415": {
      "op": "extract 4 0",
      "defined_out": [
        "app#0",
        "awst_tmp%0#0",
        "result#4"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "result#4"
      ]
    },
    "3418": {
      "op": "swap",
      "stack_out": [
        "app#0",
        "result#4",
        "awst_tmp%0#0"
      ]
    },
    "3419": {
      "op": "extract 0 4",
      "defined_out": [
        "app#0",
        "result#4",
        "tmp%1#1"
      ],
      "stack_out": [
        "app#0",
        "result#4",
        "tmp%1#1"
      ]
    },
    "3422": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "app#0",
        "result#4",
        "tmp%1#1"
      ],
      "stack_out": [
        "app#0",
        "result#4",
        "tmp%1#1",
        "0x151f7c75"
      ]
    },
    "3423": {
      "op": "==",
      "defined_out": [
        "app#0",
        "result#4",
        "tmp%2#1"
      ],
      "stack_out": [
        "app#0",
        "result#4",
        "tmp%2#1"
      ]
    },
    "3424": {
      "error": "ARC4 prefix is valid",
      "op": "assert // ARC4 prefix is valid",
      "stack_out": [
        "app#0",
        "result#4"
      ]
    },
    "3425": {
      "op": "pushbytes 0x000b6563686f3a207465737431",
      "defined_out": [
        "0x000b6563686f3a207465737431",
        "app#0",
        "result#4"
      ],
      "stack_out": [
        "app#0",
        "result#4",
        "0x000b6563686f3a207465737431"
      ]
    },
    "3440": {
      "op": "==",
      "defined_out": [
        "app#0",
        "tmp%3#1"
      ],
      "stack_out": [
        "app#0",
        "tmp%3#1"
      ]
    },
    "3441": {
      "op": "assert",
      "stack_out": [
        "app#0"
      ]
    },
    "3442": {
      "op": "itxn_begin"
    },
    "3443": {
      "op": "dup",
      "stack_out": [
        "app#0",
        "app#0 (copy)"
      ]
    },
    "3444": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "app#0"
      ]
    },
    "3446": {
      "op": "bytec_3 // method \"echo(string)string\"",
      "stack_out": [
        "app#0",
        "Method(echo(string)string)"
      ]
    },
    "3447": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0"
      ]
    },
    "3449": {
      "op": "pushbytes 0x00057465737432",
      "defined_out": [
        "0x00057465737432",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "0x00057465737432"
      ]
    },
    "3458": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0"
      ]
    },
    "3460": {
      "op": "intc_1 // appl",
      "stack_out": [
        "app#0",
        "appl"
      ]
    },
    "3461": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "app#0"
      ]
    },
    "3463": {
      "op": "intc_0 // 0",
      "stack_out": [
        "app#0",
        "0"
      ]
    },
    "3464": {
      "op": "itxn_field Fee",
      "stack_out": [
        "app#0"
      ]
    },
    "3466": {
      "op": "itxn_submit"
    },
    "3467": {
      "op": "itxn LastLog"
    },
    "3469": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "awst_tmp%1#0",
        "awst_tmp%1#0 (copy)"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%1#0",
        "awst_tmp%1#0 (copy)"
      ]
    },
    "3470": {
      "op": "extract 4 0",
      "stack_out": [
        "app#0",
        "awst_tmp%1#0",
        "result#4"
      ]
    },
    "3473": {
      "op": "swap",
      "stack_out": [
        "app#0",
        "result#4",
        "awst_tmp%1#0"
      ]
    },
    "3474": {
      "op": "extract 0 4",
      "defined_out": [
        "app#0",
        "result#4",
        "tmp%5#1"
      ],
      "stack_out": [
        "app#0",
        "result#4",
        "tmp%5#1"
      ]
    },
    "3477": {
      "op": "bytec_0 // 0x151f7c75",
      "stack_out": [
        "app#0",
        "result#4",
        "tmp%5#1",
        "0x151f7c75"
      ]
    },
    "3478": {
      "op": "==",
      "defined_out": [
        "app#0",
        "result#4",
        "tmp%6#1"
      ],
      "stack_out": [
        "app#0",
        "result#4",
        "tmp%6#1"
      ]
    },
    "3479": {
      "error": "ARC4 prefix is valid",
      "op": "assert // ARC4 prefix is valid",
      "stack_out": [
        "app#0",
        "result#4"
      ]
    },
    "3480": {
      "op": "pushbytes 0x000b6563686f3a207465737432",
      "defined_out": [
        "0x000b6563686f3a207465737432",
        "app#0",
        "result#4"
      ],
      "stack_out": [
        "app#0",
        "result#4",
        "0x000b6563686f3a207465737432"
      ]
    },
    "3495": {
      "op": "==",
      "defined_out": [
        "app#0",
        "tmp%7#1"
      ],
      "stack_out": [
        "app#0",
        "tmp%7#1"
      ]
    },
    "3496": {
      "op": "assert",
      "stack_out": [
        "app#0"
      ]
    },
    "3497": {
      "op": "itxn_begin"
    },
    "3498": {
      "op": "dup",
      "stack_out": [
        "app#0",
        "app#0 (copy)"
      ]
    },
    "3499": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "app#0"
      ]
    },
    "3501": {
      "op": "bytec_3 // method \"echo(string)string\"",
      "stack_out": [
        "app#0",
        "Method(echo(string)string)"
      ]
    },
    "3502": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0"
      ]
    },
    "3504": {
      "op": "pushbytes 0x00057465737433",
      "defined_out": [
        "0x00057465737433",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "0x00057465737433"
      ]
    },
    "3513": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0"
      ]
    },
    "3515": {
      "op": "intc_1 // appl",
      "stack_out": [
        "app#0",
        "appl"
      ]
    },
    "3516": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "app#0"
      ]
    },
    "3518": {
      "op": "intc_0 // 0",
      "stack_out": [
        "app#0",
        "0"
      ]
    },
    "3519": {
      "op": "itxn_field Fee",
      "stack_out": [
        "app#0"
      ]
    },
    "3521": {
      "op": "itxn_submit"
    },
    "3522": {
      "op": "itxn LastLog"
    },
    "3524": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "awst_tmp%2#0",
        "awst_tmp%2#0 (copy)"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%2#0",
        "awst_tmp%2#0 (copy)"
      ]
    },
    "3525": {
      "op": "extract 4 0",
      "stack_out": [
        "app#0",
        "awst_tmp%2#0",
        "result#4"
      ]
    },
    "3528": {
      "op": "swap",
      "stack_out": [
        "app#0",
        "result#4",
        "awst_tmp%2#0"
      ]
    },
    "3529": {
      "op": "extract 0 4",
      "defined_out": [
        "app#0",
        "result#4",
        "tmp%9#0"
      ],
      "stack_out": [
        "app#0",
        "result#4",
        "tmp%9#0"
      ]
    },
    "3532": {
      "op": "bytec_0 // 0x151f7c75",
      "stack_out": [
        "app#0",
        "result#4",
        "tmp%9#0",
        "0x151f7c75"
      ]
    },
    "3533": {
      "op": "==",
      "defined_out": [
        "app#0",
        "result#4",
        "tmp%10#2"
      ],
      "stack_out": [
        "app#0",
        "result#4",
        "tmp%10#2"
      ]
    },
    "3534": {
      "error": "ARC4 prefix is valid",
      "op": "assert // ARC4 prefix is valid",
      "stack_out": [
        "app#0",
        "result#4"
      ]
    },
    "3535": {
      "op": "pushbytes 0x000b6563686f3a207465737433",
      "defined_out": [
        "0x000b6563686f3a207465737433",
        "app#0",
        "result#4"
      ],
      "stack_out": [
        "app#0",
        "result#4",
        "0x000b6563686f3a207465737433"
      ]
    },
    "3550": {
      "op": "==",
      "defined_out": [
        "app#0",
        "tmp%11#1"
      ],
      "stack_out": [
        "app#0",
        "tmp%11#1"
      ]
    },
    "3551": {
      "op": "assert",
      "stack_out": [
        "app#0"
      ]
    },
    "3552": {
      "op": "itxn_begin"
    },
    "3553": {
      "op": "dup",
      "stack_out": [
        "app#0",
        "app#0 (copy)"
      ]
    },
    "3554": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "app#0"
      ]
    },
    "3556": {
      "op": "bytec_3 // method \"echo(string)string\"",
      "stack_out": [
        "app#0",
        "Method(echo(string)string)"
      ]
    },
    "3557": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0"
      ]
    },
    "3559": {
      "op": "pushbytes 0x00057465737434",
      "defined_out": [
        "0x00057465737434",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "0x00057465737434"
      ]
    },
    "3568": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0"
      ]
    },
    "3570": {
      "op": "intc_1 // appl",
      "stack_out": [
        "app#0",
        "appl"
      ]
    },
    "3571": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "app#0"
      ]
    },
    "3573": {
      "op": "intc_0 // 0",
      "stack_out": [
        "app#0",
        "0"
      ]
    },
    "3574": {
      "op": "itxn_field Fee",
      "stack_out": [
        "app#0"
      ]
    },
    "3576": {
      "op": "itxn_submit"
    },
    "3577": {
      "op": "itxn LastLog"
    },
    "3579": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "awst_tmp%3#0",
        "awst_tmp%3#0 (copy)"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%3#0",
        "awst_tmp%3#0 (copy)"
      ]
    },
    "3580": {
      "op": "extract 4 0",
      "stack_out": [
        "app#0",
        "awst_tmp%3#0",
        "result#4"
      ]
    },
    "3583": {
      "op": "swap",
      "stack_out": [
        "app#0",
        "result#4",
        "awst_tmp%3#0"
      ]
    },
    "3584": {
      "op": "extract 0 4",
      "defined_out": [
        "app#0",
        "result#4",
        "tmp%13#6"
      ],
      "stack_out": [
        "app#0",
        "result#4",
        "tmp%13#6"
      ]
    },
    "3587": {
      "op": "bytec_0 // 0x151f7c75",
      "stack_out": [
        "app#0",
        "result#4",
        "tmp%13#6",
        "0x151f7c75"
      ]
    },
    "3588": {
      "op": "==",
      "stack_out": [
        "app#0",
        "result#4",
        "tmp%14#0"
      ]
    },
    "3589": {
      "error": "ARC4 prefix is valid",
      "op": "assert // ARC4 prefix is valid",
      "stack_out": [
        "app#0",
        "result#4"
      ]
    },
    "3590": {
      "op": "pushbytes 0x000b6563686f3a207465737434",
      "defined_out": [
        "0x000b6563686f3a207465737434",
        "app#0",
        "result#4"
      ],
      "stack_out": [
        "app#0",
        "result#4",
        "0x000b6563686f3a207465737434"
      ]
    },
    "3605": {
      "op": "==",
      "defined_out": [
        "app#0",
        "tmp%15#1"
      ],
      "stack_out": [
        "app#0",
        "tmp%15#1"
      ]
    },
    "3606": {
      "op": "assert",
      "stack_out": [
        "app#0"
      ]
    },
    "3607": {
      "op": "itxn_begin"
    },
    "3608": {
      "op": "itxn_field ApplicationID",
      "stack_out": []
    },
    "3610": {
      "op": "bytec_3 // method \"echo(string)string\"",
      "stack_out": [
        "Method(echo(string)string)"
      ]
    },
    "3611": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "3613": {
      "op": "pushbytes 0x00057465737435",
      "defined_out": [
        "0x00057465737435"
      ],
      "stack_out": [
        "0x00057465737435"
      ]
    },
    "3622": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "3624": {
      "op": "intc_1 // appl",
      "stack_out": [
        "appl"
      ]
    },
    "3625": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "3627": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0"
      ]
    },
    "3628": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "3630": {
      "op": "itxn_submit"
    },
    "3631": {
      "op": "itxn LastLog"
    },
    "3633": {
      "op": "dup",
      "defined_out": [
        "awst_tmp%4#0",
        "awst_tmp%4#0 (copy)"
      ],
      "stack_out": [
        "awst_tmp%4#0",
        "awst_tmp%4#0 (copy)"
      ]
    },
    "3634": {
      "op": "extract 4 0",
      "stack_out": [
        "awst_tmp%4#0",
        "result#4"
      ]
    },
    "3637": {
      "op": "swap",
      "stack_out": [
        "result#4",
        "awst_tmp%4#0"
      ]
    },
    "3638": {
      "op": "extract 0 4",
      "defined_out": [
        "result#4",
        "tmp%17#1"
      ],
      "stack_out": [
        "result#4",
        "tmp%17#1"
      ]
    },
    "3641": {
      "op": "bytec_0 // 0x151f7c75",
      "stack_out": [
        "result#4",
        "tmp%17#1",
        "0x151f7c75"
      ]
    },
    "3642": {
      "op": "==",
      "defined_out": [
        "result#4",
        "tmp%18#1"
      ],
      "stack_out": [
        "result#4",
        "tmp%18#1"
      ]
    },
    "3643": {
      "error": "ARC4 prefix is valid",
      "op": "assert // ARC4 prefix is valid",
      "stack_out": [
        "result#4"
      ]
    },
    "3644": {
      "op": "pushbytes 0x000b6563686f3a207465737435",
      "defined_out": [
        "0x000b6563686f3a207465737435",
        "result#4"
      ],
      "stack_out": [
        "result#4",
        "0x000b6563686f3a207465737435"
      ]
    },
    "3659": {
      "op": "==",
      "defined_out": [
        "tmp%19#1"
      ],
      "stack_out": [
        "tmp%19#1"
      ]
    },
    "3660": {
      "op": "assert",
      "stack_out": []
    },
    "3661": {
      "op": "intc_2 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "3662": {
      "op": "return"
    },
    "3663": {
      "block": "main_test_is_a_b_route@3",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "3665": {
      "op": "!",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "3666": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "3667": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "3669": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "3670": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0"
      ]
    },
    "3673": {
      "op": "extract 2 0",
      "defined_out": [
        "a#0"
      ],
      "stack_out": [
        "a#0"
      ]
    },
    "3676": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "a#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "a#0",
        "tmp%9#0"
      ]
    },
    "3679": {
      "op": "extract 2 0",
      "defined_out": [
        "a#0",
        "b#0"
      ],
      "stack_out": [
        "a#0",
        "b#0"
      ]
    },
    "3682": {
      "op": "txna ApplicationArgs 3",
      "defined_out": [
        "a#0",
        "b#0",
        "reinterpret_bytes[1]%0#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "reinterpret_bytes[1]%0#0"
      ]
    },
    "3685": {
      "op": "btoi",
      "defined_out": [
        "a#0",
        "b#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "tmp%11#0"
      ]
    },
    "3686": {
      "op": "txnas Applications",
      "defined_out": [
        "a#0",
        "app#0",
        "b#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "app#0"
      ]
    },
    "3688": {
      "op": "itxn_begin"
    },
    "3689": {
      "op": "dig 2",
      "defined_out": [
        "a#0",
        "a#0 (copy)",
        "app#0",
        "b#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "app#0",
        "a#0 (copy)"
      ]
    },
    "3691": {
      "op": "len",
      "defined_out": [
        "a#0",
        "app#0",
        "b#0",
        "length%0#7"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "app#0",
        "length%0#7"
      ]
    },
    "3692": {
      "op": "itob",
      "defined_out": [
        "a#0",
        "app#0",
        "as_bytes%0#7",
        "b#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "app#0",
        "as_bytes%0#7"
      ]
    },
    "3693": {
      "op": "extract 6 2",
      "defined_out": [
        "a#0",
        "app#0",
        "b#0",
        "length_uint16%0#7"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "app#0",
        "length_uint16%0#7"
      ]
    },
    "3696": {
      "op": "uncover 3",
      "stack_out": [
        "b#0",
        "app#0",
        "length_uint16%0#7",
        "a#0"
      ]
    },
    "3698": {
      "op": "concat",
      "defined_out": [
        "app#0",
        "b#0",
        "encoded_value%0#7"
      ],
      "stack_out": [
        "b#0",
        "app#0",
        "encoded_value%0#7"
      ]
    },
    "3699": {
      "op": "dig 2",
      "defined_out": [
        "app#0",
        "b#0",
        "b#0 (copy)",
        "encoded_value%0#7"
      ],
      "stack_out": [
        "b#0",
        "app#0",
        "encoded_value%0#7",
        "b#0 (copy)"
      ]
    },
    "3701": {
      "op": "len",
      "defined_out": [
        "app#0",
        "b#0",
        "encoded_value%0#7",
        "length%1#5"
      ],
      "stack_out": [
        "b#0",
        "app#0",
        "encoded_value%0#7",
        "length%1#5"
      ]
    },
    "3702": {
      "op": "itob",
      "defined_out": [
        "app#0",
        "as_bytes%1#2",
        "b#0",
        "encoded_value%0#7"
      ],
      "stack_out": [
        "b#0",
        "app#0",
        "encoded_value%0#7",
        "as_bytes%1#2"
      ]
    },
    "3703": {
      "op": "extract 6 2",
      "defined_out": [
        "app#0",
        "b#0",
        "encoded_value%0#7",
        "length_uint16%1#5"
      ],
      "stack_out": [
        "b#0",
        "app#0",
        "encoded_value%0#7",
        "length_uint16%1#5"
      ]
    },
    "3706": {
      "op": "uncover 3",
      "stack_out": [
        "app#0",
        "encoded_value%0#7",
        "length_uint16%1#5",
        "b#0"
      ]
    },
    "3708": {
      "op": "concat",
      "defined_out": [
        "app#0",
        "encoded_value%0#7",
        "encoded_value%1#5"
      ],
      "stack_out": [
        "app#0",
        "encoded_value%0#7",
        "encoded_value%1#5"
      ]
    },
    "3709": {
      "op": "uncover 2",
      "stack_out": [
        "encoded_value%0#7",
        "encoded_value%1#5",
        "app#0"
      ]
    },
    "3711": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "encoded_value%0#7",
        "encoded_value%1#5"
      ]
    },
    "3713": {
      "op": "pushbytes 0xc77212bc // method \"is_a_b(byte[],byte[])void\"",
      "defined_out": [
        "Method(is_a_b(byte[],byte[])void)",
        "encoded_value%0#7",
        "encoded_value%1#5"
      ],
      "stack_out": [
        "encoded_value%0#7",
        "encoded_value%1#5",
        "Method(is_a_b(byte[],byte[])void)"
      ]
    },
    "3719": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "encoded_value%0#7",
        "encoded_value%1#5"
      ]
    },
    "3721": {
      "op": "swap",
      "stack_out": [
        "encoded_value%1#5",
        "encoded_value%0#7"
      ]
    },
    "3722": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "encoded_value%1#5"
      ]
    },
    "3724": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "3726": {
      "op": "intc_1 // appl",
      "defined_out": [
        "appl"
      ],
      "stack_out": [
        "appl"
      ]
    },
    "3727": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "3729": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "3730": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "3732": {
      "op": "itxn_submit"
    },
    "3733": {
      "op": "intc_2 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "3734": {
      "op": "return"
    },
    "3735": {
      "block": "main_bare_routing@21",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%105#0"
      ],
      "stack_out": [
        "tmp%105#0"
      ]
    },
    "3737": {
      "op": "bnz main_after_if_else@25",
      "stack_out": []
    },
    "3740": {
      "op": "txn ApplicationID"
    },
    "3742": {
      "op": "!"
    },
    "3743": {
      "error": "can only call when creating",
      "op": "assert // can only call when creating"
    },
    "3744": {
      "op": "intc_2 // 1"
    },
    "3745": {
      "op": "return"
    }
  }
}