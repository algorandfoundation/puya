{
  "version": 3,
  "sources": [
    "../typed_c2c.py"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsBA;;AAAA;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AA6VK;;AAAA;AAAA;AAAA;;AAAA;AA7VL;;;AAAA;AAAA;;AAgWsB;;;AAAA;;;;;;;;AADR;;;;AACQ;;;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;AAKP;AAND;;AAMC;AAAP;AACO;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAPD;;AAOC;AAAP;AATH;;AAjBA;;AAAA;AAAA;AAAA;;AAAA;AA5UL;;;AAAA;AAAA;;AA8UuB;;;;AAAA;;;;AAEX;;;;AACA;;;;AAHW;;;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAAA;AAMf;AACe;;;AAAA;;;;AAEX;;;;;;;;;;;;;;;;;;;;;AACA;;;;AAHW;;;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAAA;AAMR;AAAP;AAfH;;AAVA;;AAAA;AAAA;AAAA;;AAAA;AAlUL;;;AAAA;AAAA;;AAoUuB;;;;AAAA;;;;AAAA;;;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;AACE;;AAAV;AAAP;AACoB;;;;AAAA;;;;AAAA;;;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AACE;;AAAf;AAAP;AAEA;;;AAAA;;;;AAAA;;;AAAA;;;AAAA;AAAA;;AAAA;;;AAAA;AAAA;AAAA;AAC4B;;AAArB;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAA4C;;AAA5C;AAAP;AARH;;AA9CA;;AAAA;AAAA;AAAA;;AAAA;AApRL;;;AAAA;AAAA;;AAuRsB;;;;AAAA;;;;AAEV;;;;AAFU;;;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;;;;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;;AAMP;;AAAM;;AAAN;AAAP;AACO;;AAAM;;AAAN;AAAP;AACO;;AAAS;AAAT;AAAP;AACO;AAAS;;AAAT;AAAP;AACgB;;AAAT;AAAP;AAGc;;;;AAAA;;;;AAEV;;;;AAFU;;;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;;;;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;;AAMP;;AAAM;;AAAN;AAAP;AACO;;AAAM;;AAAN;AAAP;AACO;;AAAS;AAAT;AAAP;AACO;AAAS;;AAAT;AAAP;AACgB;;AAAT;AAAP;AAGc;;;AAAA;;;;AAEV;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAFU;;;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;;;;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;;AAWP;;AAAM;;;;;;;;;;;AAAN;AAAP;AACO;;AAAM;;;;;;;;;;;;;AAAN;AAAP;AACO;;AAAS;;AAAT;AAAP;AACO;AAAS;;;;;;;;;;AAAT;AAAP;AACgB;;;;;;;;;;AAAT;AAAP;AA5CH;;AAlDA;;AAAA;AAAA;AAAA;;AAAA;AAlOL;;;AAAA;AAAA;;AAqOsB;;;;AAAA;;;;AAEV;;;;AACA;;;;AACA;;;AACA;;;AALU;;;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;;;;AAAA;AAAA;;;AAAA;;;;AAAA;AAAA;;AAAA;;;AASP;;AAAK;;AAAL;AAAP;AACO;;AAAK;;AAAL;AAAP;AACO;;AAAK;AAAL;AAAP;AACO;AAAM;;AAAN;AAAP;AAGgB;AAIZ;AAAA;;;;;AAJY;;;;AAEZ;;;;AACA;;;;;;AAEA;;;AALY;;;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;;;;AAAA;AAAA;;;AAAA;;;;AAAA;AAAA;;AAAA;;;AAQT;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAP;AAGgB;;;;;AAAA;;;;AAEZ;;;;AACA;;;;AACA;;;AACA;;;AALY;;;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;;;;AAAA;AAAA;;;AAAA;;;;AAAA;AAAA;;AAAA;;;AAQT;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAP;AAGqB;;;;;AAAA;;;;AAEjB;;;;AACA;;;;AACA;;;AACA;;;AALiB;;;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;;;;AAAA;AAAA;;;AAAA;;;;AAAA;AAAA;;AAAA;;;AAQd;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAP;AAhDH;;AA3DA;;AAAA;AAAA;AAAA;;AAAA;AAvKL;;;AAAA;AAAA;;AA0KuB;;;;AAAA;;;;AAIX;;;;AACA;;;;AACA;;;AACA;;;AAPW;;;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;;;AAAA;AAAA;AAAA;AAUD;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;;AACP;;AAAA;;;AAAA;AAAY;;AAAZ;AAAP;AACO;;AAAA;;;AAAA;AAAY;;AAAZ;AAAP;AACO;;;;AAAA;AAAA;AAAY;AAAZ;AAAP;AACO;;AAAa;;AAAb;AAAP;AAGe;AAMX;AAAA;;;;;AANW;;;;AAIX;;;;AACA;;;;;;AAEA;;;AAPW;;;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAUR;;AAAA;AAAP;AAGe;;;;;AAAA;;;;AAIX;;;;AACA;;;;AACA;;;AACA;;;AAPW;;;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAUR;;AAAA;AAAP;AAGqB;;;;;AAAA;;;;AAEjB;;;;AACA;;;;AACA;;;AACA;;;AALiB;;;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;;;;AAAA;AAAA;;;AAAA;;;;AAAA;AAAA;;AAAA;;;AAQd;;AAAA;;AAAA;AAAP;AACO;;AAAA;;AAAA;AAAP;AACO;;AAAA;AAAP;AACO;AAAP;AAzDH;;AAXA;;AAAA;AAAA;AAAA;;AAAA;AA5JL;;;AAAA;AAAA;;AA8JwB;;;;AAAA;;;;AAA0C;;;AAA1C;;;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AACT;AAAW;;AAAX;AAAP;AAEgB;;;;;AAAA;;;;AAA0C;;;AAA1C;;;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AACT;;AAAA;AAAP;AAEgB;;;;AAAA;;;;AAA0C;;;AAA1C;;;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AACT;AAAP;AATH;;AAXA;;AAAA;AAAA;AAAA;;AAAA;AAjJL;;;AAAA;AAAA;;AAmJwB;;;;AAAA;;;;AAAyC;;;AAAzC;;;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;AACT;AAAW;AAAX;AAAP;AAEgB;AAAyC;AAAA;;;;;AAAzC;;;;;;AAAA;;;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;AACT;;AAAA;AAAP;AAEgB;;;;AAAA;;;;AAAyC;;;AAAzC;;;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;AACT;AAAP;AATH;;AAbA;;AAAA;AAAA;AAAA;;AAAA;AApIL;;;AAAA;AAAA;;AAsIwB;;;;AAAA;;;;AAAwC;;;;AAAxC;;;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AACT;AAAW;;;;;;;;;AAAX;AAAP;AAEgB;;;;;AAAA;;;;AAAwC;;;;AAAxC;;;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AACT;;AAAA;AAAP;AAEgB;;;;AAAA;;;;AACc;;;;AADd;;;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAGT;AAAP;AAXH;;AAXA;;AAAA;AAAA;AAAA;;AAAA;AAzHL;;;AAAA;AAAA;;AA2HwB;;;;AAAA;;;;AAAyC;;;;AAAzC;;;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AACT;AAAW;;;;;;;;;AAAX;AAAP;AAEgB;;;;;AAAA;;;;AAAyC;;;;AAAzC;;;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AACT;;AAAA;AAAP;AAEgB;;;;AAAA;;;;AAAyC;;;;AAAzC;;;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AACT;AAAP;AATH;;AATA;;AAAA;AAAA;AAAA;;AAAA;AAhHL;;;AAAA;AAAA;;AAkHc;AAEF;;;;;AAFE;;;;;;;;;;AAAA;;;AAAA;;;AAAA;;;AAKiB;;AAAhB;AAAP;AAPH;;AAdA;;AAAA;AAAA;AAAA;;AAAA;AAlGL;;;AAAA;AAAA;;AAAA;;;AAAA;AAAA;;AAoGc;AAGF;;;;;;;;;;;;;;;;AAHE;;;;;;;;AAEF;;;;;AACA;;;;;AACA;;;;;AAJE;;;AAAA;;;AAAA;;;AASC;AAAA;;AAAA;AAAa;;AAAb;AAAwD;;AAAA;;AAAA;AAAxD;AADH;AADJ;AATH;;AAdA;;AAAA;AAAA;AAAA;;AAAA;AApFL;;;AAAA;AAAA;;AAsFc;;;;AAAA;;;;AAAgD;;;;;;;;;;;;AAAhD;;;AAAA;;;AAAA;;;AACiB;;;;;;;;AAAhB;AAAP;AAEM;;;;AAAA;;;;AAA4C;;;;;;;;;;;;AAA5C;;;AAAA;;;AAAA;;;AACiB;;;;;;;;AAAhB;AAAP;AAEM;;;;AAAA;;;;AAA+B;;;;;;;;;;;;AAA/B;;;AAAA;;;AAAA;;;AACiB;;;;;;;;AAAhB;AAAP;AAEM;;;AAAA;;;;AAAiC;;;;;;;;;;;;AAAjC;;;AAAA;;;AAAA;;;AACiB;;;;;;;;AAAhB;AAAP;AAZH;;AA5BA;;AAAA;AAAA;AAAA;;AAAA;AAxDL;;;AAAA;AAAA;;AA0DsB;;;AAAA;;;;;;;;AAEV;;;AACA;;;;AACA;;;;AACA;;;;;;;;;;;;AACA;;;;;;;;;;;;AACA;;;;;;;;;;;;AACA;;;;;;;;;;;;AACA;;;;;;;;;;;;AACA;;;;;;;;;;;;AACA;;;;;;;;;;;;AACA;;;;;;;;;;;;AACA;;;;;;;;;;;;AACA;;;;;;;;;;;;AACA;;;;;;;;;;;;AACA;;;;AAhBU;;;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAwBP;;;AAAiB;;AAAjB;AAAP;AA1BH;;AAjBA;;AAAA;AAAA;AAAA;;AAAA;AAvCL;;;AAAA;AAAA;;AAyCc;;;;AAAA;;;;AAAiC;;;;;;;;;;;;;;;;AAAjC;;;AAAA;;;AAAA;;;AACiB;;;;;;;;;;;;AAAhB;AAAP;AAEM;;;;AAAA;;;;;;;;AAAiC;;;;AAAjC;;;AAAA;;;AAAA;;;AACyB;AAAR;AAAhB;AAAP;AAEM;;;;AAAA;;;;;;;;AAAkC;;;;AAAlC;;;AAAA;;;AAAA;;;AACkB;;AAAjB;AAAP;AAEM;;;;AAAA;;;;;;;;AAAgC;;;;;;;AAAhC;;;AAAA;;;AAAA;;;AACiB;;;AAAhB;AAAP;AAEM;;;AAAA;;;;;;;;AAA+B;;;;;AAA/B;;;AAAA;;;AAAA;;;AACiB;;;;;;AAAhB;AAAP;AAfH;;AAfA;;AAAA;AAAA;AAAA;;AAAA;AAxBL;;;AAAA;AAAA;;AA0BQ;;;;AAAA;;;AAAiD;;;;;;;;;;;;;;;;;;;;AAAjD;;;AAAA;;;AAAA;AAAA;;AAAA;;;AAAA;AAAA;AAAA;AAC4B;;AAArB;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAA4C;;;;;;;;;;;;;;;;;;;;;;;;AAA5C;AAAP;AAEA;;;;AAAA;;;AAAoC;;;;;;;;;;;;;;;;;;;;;;AAApC;;;AAAA;;;AAAA;AAC4B;;AAArB;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAA4C;;;;;;;;;;;;;;;;;;;;;;;;;;AAA5C;AAAP;AAES;;;;AAAA;;;AAAiD;;;;;;;;;;;AAAjD;;;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;AACF;AAAa;;AAAb;AAAP;AACO;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAA4C;;AAA5C;AAAP;AAEa;;;AAAA;;;AAAoC;;;;;;;;;;;;;AAApC;;;AAAA;;;AAAA;;;AACN;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAA6C;;;;;;;;;;;;;;;;;AAA7C;AAAP;AAbH;;AAdA;;AAAA;AAAA;AAAA;;AAAA;AAVL;;;AAAA;AAAA;;AAauB;;;;AAAA;;;AAA2B;;;;;;;;;;;AAA3B;;;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AACE;;;;;;;;;;;;;;;AAAV;AAAP;AACe;;;;AAAA;;;AAAiC;;;;;;;;;;;AAAjC;;;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AACE;;;;;;;;;;;;;;;AAAV;AAAP;AACe;;;;AAAA;;;AAAmC;;;;;;;;;;;AAAnC;;;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AACE;;;;;;;;;;;;;;;AAAV;AAAP;AACe;;;;AAAA;;;AAA2C;;;;;;;;;;;AAA3C;;;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AACE;;;;;;;;;;;;;;;AAAV;AAAP;AACe;;;AAAA;;;AAAiD;;;;;;;;;;;AAAjD;;;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AACE;;;;;;;;;;;;;;;AAAV;AAAP;AAZH;;AATA;;AAAA;AAAA;AAAA;;AAAA;AADL;;;AAAA;;;AAAA;;;AAAA;;;AAAA;;;AAAA;AAAA;;AAGQ;AAEI;;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AACA;;AAAA;AAAA;AAAA;;;AAAA;;AAAA;;;;;AAHJ;;;;;;;;;;;;;AAAA;;;AAAA;;;AAAA;AAFH;;AADL;;AAAA;;;;;;;;",
  "op_pc_offset": 0,
  "pc_events": {
    "1": {
      "subroutine": "algopy.arc4.ARC4Contract.approval_program",
      "params": {},
      "block": "main",
      "stack_in": [],
      "op": "intcblock 0 6 1 2"
    },
    "7": {
      "op": "bytecblock 0x151f7c75 0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002 0x0000000000000001 0x9bf81913 0x16e03919 0x00027331 0x00026231 0x0000000000000001000a00056c6f672031 0xb4b4334e \"echo: s1\" 0xb862ee19 0xab271ce4 0x0000000000000003 0x03 0xd8cc363b 0xa9fb6cf1 0x2659e818 0x000162 0x4a444c77 0x000173 0xddd07185 0x000000000000002a 0x00040010000400080002733100027332000000000000000100000000000000020012000133 0x00086563686f3a207332 0x6563686f3a2033 0x6563686f3a206231 0x0000000000000002 0x0f101112deadbeef14 0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000003 0x000b6563686f3a207475706c65"
    },
    "367": {
      "op": "txn NumAppArgs",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "369": {
      "op": "bz main_bare_routing@23",
      "stack_out": []
    },
    "372": {
      "op": "pushbytess 0x07916bea 0x1859b0ba 0x4eb11b0d 0x0d176a4a 0xb54730c8 0x7859eaf7 0x24478a3c 0xe44b2eaf 0x7a60c035 0x6a559cb3 0x1be60712 0x19cb78a4 0xf0ef6873 0x3d2bfe37 0x54e98f56 0xf55b7567 0x8598bb43 0xbb691362 // method \"test_is_a_b(byte[],byte[],application)void\", method \"test_method_selector_kinds(application)void\", method \"test_method_overload(application)void\", method \"test_arg_conversion(application)void\", method \"test_15plus_args(application)void\", method \"test_void(application)void\", method \"test_ref_types(application,asset)void\", method \"test_account_to_address(application)void\", method \"test_native_string(application)void\", method \"test_native_bytes(application)void\", method \"test_native_uint64(application)void\", method \"test_native_biguint(application)void\", method \"test_native_tuple(application)void\", method \"test_native_tuple_method_ref(application)void\", method \"test_nested_tuples(application)void\", method \"test_no_args(application)void\", method \"test_named_tuples(application)void\", method \"test_arc4_struct(application)void\"",
      "defined_out": [
        "Method(test_15plus_args(application)void)",
        "Method(test_account_to_address(application)void)",
        "Method(test_arc4_struct(application)void)",
        "Method(test_arg_conversion(application)void)",
        "Method(test_is_a_b(byte[],byte[],application)void)",
        "Method(test_method_overload(application)void)",
        "Method(test_method_selector_kinds(application)void)",
        "Method(test_named_tuples(application)void)",
        "Method(test_native_biguint(application)void)",
        "Method(test_native_bytes(application)void)",
        "Method(test_native_string(application)void)",
        "Method(test_native_tuple(application)void)",
        "Method(test_native_tuple_method_ref(application)void)",
        "Method(test_native_uint64(application)void)",
        "Method(test_nested_tuples(application)void)",
        "Method(test_no_args(application)void)",
        "Method(test_ref_types(application,asset)void)",
        "Method(test_void(application)void)"
      ],
      "stack_out": [
        "Method(test_is_a_b(byte[],byte[],application)void)",
        "Method(test_method_selector_kinds(application)void)",
        "Method(test_method_overload(application)void)",
        "Method(test_arg_conversion(application)void)",
        "Method(test_15plus_args(application)void)",
        "Method(test_void(application)void)",
        "Method(test_ref_types(application,asset)void)",
        "Method(test_account_to_address(application)void)",
        "Method(test_native_string(application)void)",
        "Method(test_native_bytes(application)void)",
        "Method(test_native_uint64(application)void)",
        "Method(test_native_biguint(application)void)",
        "Method(test_native_tuple(application)void)",
        "Method(test_native_tuple_method_ref(application)void)",
        "Method(test_nested_tuples(application)void)",
        "Method(test_no_args(application)void)",
        "Method(test_named_tuples(application)void)",
        "Method(test_arc4_struct(application)void)"
      ]
    },
    "464": {
      "op": "txna ApplicationArgs 0",
      "defined_out": [
        "Method(test_15plus_args(application)void)",
        "Method(test_account_to_address(application)void)",
        "Method(test_arc4_struct(application)void)",
        "Method(test_arg_conversion(application)void)",
        "Method(test_is_a_b(byte[],byte[],application)void)",
        "Method(test_method_overload(application)void)",
        "Method(test_method_selector_kinds(application)void)",
        "Method(test_named_tuples(application)void)",
        "Method(test_native_biguint(application)void)",
        "Method(test_native_bytes(application)void)",
        "Method(test_native_string(application)void)",
        "Method(test_native_tuple(application)void)",
        "Method(test_native_tuple_method_ref(application)void)",
        "Method(test_native_uint64(application)void)",
        "Method(test_nested_tuples(application)void)",
        "Method(test_no_args(application)void)",
        "Method(test_ref_types(application,asset)void)",
        "Method(test_void(application)void)",
        "tmp%2#0"
      ],
      "stack_out": [
        "Method(test_is_a_b(byte[],byte[],application)void)",
        "Method(test_method_selector_kinds(application)void)",
        "Method(test_method_overload(application)void)",
        "Method(test_arg_conversion(application)void)",
        "Method(test_15plus_args(application)void)",
        "Method(test_void(application)void)",
        "Method(test_ref_types(application,asset)void)",
        "Method(test_account_to_address(application)void)",
        "Method(test_native_string(application)void)",
        "Method(test_native_bytes(application)void)",
        "Method(test_native_uint64(application)void)",
        "Method(test_native_biguint(application)void)",
        "Method(test_native_tuple(application)void)",
        "Method(test_native_tuple_method_ref(application)void)",
        "Method(test_nested_tuples(application)void)",
        "Method(test_no_args(application)void)",
        "Method(test_named_tuples(application)void)",
        "Method(test_arc4_struct(application)void)",
        "tmp%2#0"
      ]
    },
    "467": {
      "op": "match main_test_is_a_b_route@3 main_test_method_selector_kinds_route@4 main_test_method_overload_route@5 main_test_arg_conversion_route@6 main_test_15plus_args_route@7 main_test_void_route@8 main_test_ref_types_route@9 main_test_account_to_address_route@10 main_test_native_string_route@11 main_test_native_bytes_route@12 main_test_native_uint64_route@13 main_test_native_biguint_route@14 main_test_native_tuple_route@15 main_test_native_tuple_method_ref_route@16 main_test_nested_tuples_route@17 main_test_no_args_route@18 main_test_named_tuples_route@19 main_test_arc4_struct_route@20",
      "stack_out": []
    },
    "505": {
      "block": "main_after_if_else@27",
      "stack_in": [],
      "op": "intc_0 // 0",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "506": {
      "op": "return",
      "stack_out": []
    },
    "507": {
      "block": "main_test_arc4_struct_route@20",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%109#0"
      ],
      "stack_out": [
        "tmp%109#0"
      ]
    },
    "509": {
      "op": "!",
      "defined_out": [
        "tmp%110#0"
      ],
      "stack_out": [
        "tmp%110#0"
      ]
    },
    "510": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "511": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%111#0"
      ],
      "stack_out": [
        "tmp%111#0"
      ]
    },
    "513": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "514": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded(uint8)%18#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint8)%18#0"
      ]
    },
    "517": {
      "op": "btoi",
      "defined_out": [
        "tmp%113#0"
      ],
      "stack_out": [
        "tmp%113#0"
      ]
    },
    "518": {
      "op": "txnas Applications",
      "defined_out": [
        "app#0"
      ],
      "stack_out": [
        "app#0"
      ]
    },
    "520": {
      "op": "itxn_begin"
    },
    "521": {
      "op": "itxn_field ApplicationID",
      "stack_out": []
    },
    "523": {
      "op": "pushbytes 0xdc4f1992 // method \"echo_log_struct((uint64,string))(uint64,string)\"",
      "defined_out": [
        "Method(echo_log_struct((uint64,string))(uint64,string))"
      ],
      "stack_out": [
        "Method(echo_log_struct((uint64,string))(uint64,string))"
      ]
    },
    "529": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "531": {
      "op": "bytec 7 // 0x0000000000000001000a00056c6f672031",
      "defined_out": [
        "0x0000000000000001000a00056c6f672031"
      ],
      "stack_out": [
        "0x0000000000000001000a00056c6f672031"
      ]
    },
    "533": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "535": {
      "op": "intc_1 // appl",
      "defined_out": [
        "appl"
      ],
      "stack_out": [
        "appl"
      ]
    },
    "536": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "538": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "539": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "541": {
      "op": "itxn_submit"
    },
    "542": {
      "op": "itxn LastLog",
      "defined_out": [
        "awst_tmp%0#0"
      ],
      "stack_out": [
        "awst_tmp%0#0"
      ]
    },
    "544": {
      "op": "dup",
      "defined_out": [
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ]
    },
    "545": {
      "op": "extract 4 0",
      "defined_out": [
        "awst_tmp%0#0",
        "result#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "result#0"
      ]
    },
    "548": {
      "op": "swap",
      "stack_out": [
        "result#0",
        "awst_tmp%0#0"
      ]
    },
    "549": {
      "op": "extract 0 4",
      "defined_out": [
        "result#0",
        "tmp%1#1"
      ],
      "stack_out": [
        "result#0",
        "tmp%1#1"
      ]
    },
    "552": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "result#0",
        "tmp%1#1"
      ],
      "stack_out": [
        "result#0",
        "tmp%1#1",
        "0x151f7c75"
      ]
    },
    "553": {
      "op": "==",
      "defined_out": [
        "result#0",
        "tmp%2#1"
      ],
      "stack_out": [
        "result#0",
        "tmp%2#1"
      ]
    },
    "554": {
      "error": "application log value is not the result of an ABI return",
      "op": "assert // application log value is not the result of an ABI return",
      "stack_out": [
        "result#0"
      ]
    },
    "555": {
      "op": "itxn LastLog",
      "defined_out": [
        "result#0",
        "txn.LastLog#0"
      ],
      "stack_out": [
        "result#0",
        "txn.LastLog#0"
      ]
    },
    "557": {
      "op": "swap",
      "stack_out": [
        "txn.LastLog#0",
        "result#0"
      ]
    },
    "558": {
      "op": "bytec 7 // 0x0000000000000001000a00056c6f672031",
      "stack_out": [
        "txn.LastLog#0",
        "result#0",
        "0x0000000000000001000a00056c6f672031"
      ]
    },
    "560": {
      "op": "==",
      "defined_out": [
        "tmp%3#1",
        "txn.LastLog#0"
      ],
      "stack_out": [
        "txn.LastLog#0",
        "tmp%3#1"
      ]
    },
    "561": {
      "error": "expected output to match input",
      "op": "assert // expected output to match input",
      "stack_out": [
        "txn.LastLog#0"
      ]
    },
    "562": {
      "op": "dup",
      "defined_out": [
        "txn.LastLog#0",
        "txn.LastLog#0 (copy)"
      ],
      "stack_out": [
        "txn.LastLog#0",
        "txn.LastLog#0 (copy)"
      ]
    },
    "563": {
      "op": "extract 4 0",
      "defined_out": [
        "tmp%4#1",
        "txn.LastLog#0"
      ],
      "stack_out": [
        "txn.LastLog#0",
        "tmp%4#1"
      ]
    },
    "566": {
      "op": "swap",
      "stack_out": [
        "tmp%4#1",
        "txn.LastLog#0"
      ]
    },
    "567": {
      "op": "extract 0 4",
      "defined_out": [
        "tmp%4#1",
        "tmp%5#1"
      ],
      "stack_out": [
        "tmp%4#1",
        "tmp%5#1"
      ]
    },
    "570": {
      "op": "bytec_0 // 0x151f7c75",
      "stack_out": [
        "tmp%4#1",
        "tmp%5#1",
        "0x151f7c75"
      ]
    },
    "571": {
      "op": "==",
      "defined_out": [
        "tmp%4#1",
        "tmp%6#1"
      ],
      "stack_out": [
        "tmp%4#1",
        "tmp%6#1"
      ]
    },
    "572": {
      "error": "application log value is not the result of an ABI return",
      "op": "assert // application log value is not the result of an ABI return",
      "stack_out": [
        "tmp%4#1"
      ]
    },
    "573": {
      "op": "bytec 7 // 0x0000000000000001000a00056c6f672031",
      "stack_out": [
        "tmp%4#1",
        "0x0000000000000001000a00056c6f672031"
      ]
    },
    "575": {
      "op": "==",
      "defined_out": [
        "tmp%7#1"
      ],
      "stack_out": [
        "tmp%7#1"
      ]
    },
    "576": {
      "error": "expected output to match input",
      "op": "assert // expected output to match input",
      "stack_out": []
    },
    "577": {
      "op": "intc_2 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "578": {
      "op": "return",
      "stack_out": []
    },
    "579": {
      "block": "main_test_named_tuples_route@19",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%103#0"
      ],
      "stack_out": [
        "tmp%103#0"
      ]
    },
    "581": {
      "op": "!",
      "defined_out": [
        "tmp%104#0"
      ],
      "stack_out": [
        "tmp%104#0"
      ]
    },
    "582": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "583": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%105#0"
      ],
      "stack_out": [
        "tmp%105#0"
      ]
    },
    "585": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "586": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded(uint8)%17#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint8)%17#0"
      ]
    },
    "589": {
      "op": "btoi",
      "defined_out": [
        "tmp%107#0"
      ],
      "stack_out": [
        "tmp%107#0"
      ]
    },
    "590": {
      "op": "txnas Applications",
      "defined_out": [
        "app#0"
      ],
      "stack_out": [
        "app#0"
      ]
    },
    "592": {
      "op": "itxn_begin"
    },
    "593": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "app#0 (copy)"
      ],
      "stack_out": [
        "app#0",
        "app#0 (copy)"
      ]
    },
    "594": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "app#0"
      ]
    },
    "596": {
      "op": "bytec 20 // method \"logs_are_equal((uint64,string),(uint64,string))bool\"",
      "defined_out": [
        "Method(logs_are_equal((uint64,string),(uint64,string))bool)",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "Method(logs_are_equal((uint64,string),(uint64,string))bool)"
      ]
    },
    "598": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0"
      ]
    },
    "600": {
      "op": "bytec 7 // 0x0000000000000001000a00056c6f672031",
      "defined_out": [
        "0x0000000000000001000a00056c6f672031",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "0x0000000000000001000a00056c6f672031"
      ]
    },
    "602": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0"
      ]
    },
    "604": {
      "op": "bytec 7 // 0x0000000000000001000a00056c6f672031",
      "stack_out": [
        "app#0",
        "0x0000000000000001000a00056c6f672031"
      ]
    },
    "606": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0"
      ]
    },
    "608": {
      "op": "intc_1 // appl",
      "defined_out": [
        "app#0",
        "appl"
      ],
      "stack_out": [
        "app#0",
        "appl"
      ]
    },
    "609": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "app#0"
      ]
    },
    "611": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "0"
      ]
    },
    "612": {
      "op": "itxn_field Fee",
      "stack_out": [
        "app#0"
      ]
    },
    "614": {
      "op": "itxn_submit"
    },
    "615": {
      "op": "itxn LastLog",
      "defined_out": [
        "app#0",
        "awst_tmp%0#0"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0"
      ]
    },
    "617": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ]
    },
    "618": {
      "op": "extract 4 0",
      "defined_out": [
        "app#0",
        "awst_tmp%0#0",
        "tmp%0#2"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "tmp%0#2"
      ]
    },
    "621": {
      "op": "swap",
      "stack_out": [
        "app#0",
        "tmp%0#2",
        "awst_tmp%0#0"
      ]
    },
    "622": {
      "op": "extract 0 4",
      "defined_out": [
        "app#0",
        "tmp%0#2",
        "tmp%1#1"
      ],
      "stack_out": [
        "app#0",
        "tmp%0#2",
        "tmp%1#1"
      ]
    },
    "625": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "app#0",
        "tmp%0#2",
        "tmp%1#1"
      ],
      "stack_out": [
        "app#0",
        "tmp%0#2",
        "tmp%1#1",
        "0x151f7c75"
      ]
    },
    "626": {
      "op": "==",
      "defined_out": [
        "app#0",
        "tmp%0#2",
        "tmp%2#1"
      ],
      "stack_out": [
        "app#0",
        "tmp%0#2",
        "tmp%2#1"
      ]
    },
    "627": {
      "error": "application log value is not the result of an ABI return",
      "op": "assert // application log value is not the result of an ABI return",
      "stack_out": [
        "app#0",
        "tmp%0#2"
      ]
    },
    "628": {
      "op": "intc_0 // 0",
      "stack_out": [
        "app#0",
        "tmp%0#2",
        "0"
      ]
    },
    "629": {
      "op": "getbit",
      "defined_out": [
        "app#0",
        "result#1"
      ],
      "stack_out": [
        "app#0",
        "result#1"
      ]
    },
    "630": {
      "op": "assert",
      "stack_out": [
        "app#0"
      ]
    },
    "631": {
      "op": "itxn_begin"
    },
    "632": {
      "op": "itxn_field ApplicationID",
      "stack_out": []
    },
    "634": {
      "op": "bytec 20 // method \"logs_are_equal((uint64,string),(uint64,string))bool\"",
      "stack_out": [
        "Method(logs_are_equal((uint64,string),(uint64,string))bool)"
      ]
    },
    "636": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "638": {
      "op": "pushbytes 0x0000000000000002000a00056c6f672032",
      "defined_out": [
        "0x0000000000000002000a00056c6f672032"
      ],
      "stack_out": [
        "0x0000000000000002000a00056c6f672032"
      ]
    },
    "657": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "659": {
      "op": "bytec 7 // 0x0000000000000001000a00056c6f672031",
      "stack_out": [
        "0x0000000000000001000a00056c6f672031"
      ]
    },
    "661": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "663": {
      "op": "intc_1 // appl",
      "stack_out": [
        "appl"
      ]
    },
    "664": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "666": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0"
      ]
    },
    "667": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "669": {
      "op": "itxn_submit"
    },
    "670": {
      "op": "itxn LastLog",
      "defined_out": [
        "awst_tmp%1#0"
      ],
      "stack_out": [
        "awst_tmp%1#0"
      ]
    },
    "672": {
      "op": "dup",
      "defined_out": [
        "awst_tmp%1#0",
        "awst_tmp%1#0 (copy)"
      ],
      "stack_out": [
        "awst_tmp%1#0",
        "awst_tmp%1#0 (copy)"
      ]
    },
    "673": {
      "op": "extract 4 0",
      "defined_out": [
        "awst_tmp%1#0",
        "tmp%4#1"
      ],
      "stack_out": [
        "awst_tmp%1#0",
        "tmp%4#1"
      ]
    },
    "676": {
      "op": "swap",
      "stack_out": [
        "tmp%4#1",
        "awst_tmp%1#0"
      ]
    },
    "677": {
      "op": "extract 0 4",
      "defined_out": [
        "tmp%4#1",
        "tmp%5#1"
      ],
      "stack_out": [
        "tmp%4#1",
        "tmp%5#1"
      ]
    },
    "680": {
      "op": "bytec_0 // 0x151f7c75",
      "stack_out": [
        "tmp%4#1",
        "tmp%5#1",
        "0x151f7c75"
      ]
    },
    "681": {
      "op": "==",
      "defined_out": [
        "tmp%4#1",
        "tmp%6#1"
      ],
      "stack_out": [
        "tmp%4#1",
        "tmp%6#1"
      ]
    },
    "682": {
      "error": "application log value is not the result of an ABI return",
      "op": "assert // application log value is not the result of an ABI return",
      "stack_out": [
        "tmp%4#1"
      ]
    },
    "683": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%4#1",
        "0"
      ]
    },
    "684": {
      "op": "getbit",
      "stack_out": [
        "result#1"
      ]
    },
    "685": {
      "op": "!",
      "defined_out": [
        "tmp%8#1"
      ],
      "stack_out": [
        "tmp%8#1"
      ]
    },
    "686": {
      "op": "assert",
      "stack_out": []
    },
    "687": {
      "op": "intc_2 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "688": {
      "op": "return",
      "stack_out": []
    },
    "689": {
      "block": "main_test_no_args_route@18",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%97#0"
      ],
      "stack_out": [
        "tmp%97#0"
      ]
    },
    "691": {
      "op": "!",
      "defined_out": [
        "tmp%98#0"
      ],
      "stack_out": [
        "tmp%98#0"
      ]
    },
    "692": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "693": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%99#0"
      ],
      "stack_out": [
        "tmp%99#0"
      ]
    },
    "695": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "696": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded(uint8)%16#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint8)%16#0"
      ]
    },
    "699": {
      "op": "btoi",
      "defined_out": [
        "tmp%101#0"
      ],
      "stack_out": [
        "tmp%101#0"
      ]
    },
    "700": {
      "op": "txnas Applications",
      "defined_out": [
        "app#0"
      ],
      "stack_out": [
        "app#0"
      ]
    },
    "702": {
      "op": "itxn_begin"
    },
    "703": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "app#0 (copy)"
      ],
      "stack_out": [
        "app#0",
        "app#0 (copy)"
      ]
    },
    "704": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "app#0"
      ]
    },
    "706": {
      "op": "bytec 10 // method \"no_args()uint64\"",
      "defined_out": [
        "Method(no_args()uint64)",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "Method(no_args()uint64)"
      ]
    },
    "708": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0"
      ]
    },
    "710": {
      "op": "intc_1 // appl",
      "defined_out": [
        "app#0",
        "appl"
      ],
      "stack_out": [
        "app#0",
        "appl"
      ]
    },
    "711": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "app#0"
      ]
    },
    "713": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "0"
      ]
    },
    "714": {
      "op": "itxn_field Fee",
      "stack_out": [
        "app#0"
      ]
    },
    "716": {
      "op": "itxn_submit"
    },
    "717": {
      "op": "itxn LastLog",
      "defined_out": [
        "app#0",
        "awst_tmp%0#0"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0"
      ]
    },
    "719": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ]
    },
    "720": {
      "op": "extract 4 0",
      "defined_out": [
        "app#0",
        "awst_tmp%0#0",
        "tmp%0#2"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "tmp%0#2"
      ]
    },
    "723": {
      "op": "swap",
      "stack_out": [
        "app#0",
        "tmp%0#2",
        "awst_tmp%0#0"
      ]
    },
    "724": {
      "op": "extract 0 4",
      "defined_out": [
        "app#0",
        "tmp%0#2",
        "tmp%1#1"
      ],
      "stack_out": [
        "app#0",
        "tmp%0#2",
        "tmp%1#1"
      ]
    },
    "727": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "app#0",
        "tmp%0#2",
        "tmp%1#1"
      ],
      "stack_out": [
        "app#0",
        "tmp%0#2",
        "tmp%1#1",
        "0x151f7c75"
      ]
    },
    "728": {
      "op": "==",
      "defined_out": [
        "app#0",
        "tmp%0#2",
        "tmp%2#1"
      ],
      "stack_out": [
        "app#0",
        "tmp%0#2",
        "tmp%2#1"
      ]
    },
    "729": {
      "error": "application log value is not the result of an ABI return",
      "op": "assert // application log value is not the result of an ABI return",
      "stack_out": [
        "app#0",
        "tmp%0#2"
      ]
    },
    "730": {
      "op": "btoi",
      "defined_out": [
        "app#0",
        "result#3"
      ],
      "stack_out": [
        "app#0",
        "result#3"
      ]
    },
    "731": {
      "op": "pushint 42 // 42",
      "defined_out": [
        "42",
        "app#0",
        "result#3"
      ],
      "stack_out": [
        "app#0",
        "result#3",
        "42"
      ]
    },
    "733": {
      "op": "==",
      "defined_out": [
        "app#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "app#0",
        "tmp%4#0"
      ]
    },
    "734": {
      "op": "assert",
      "stack_out": [
        "app#0"
      ]
    },
    "735": {
      "op": "itxn_begin"
    },
    "736": {
      "op": "dup",
      "stack_out": [
        "app#0",
        "app#0 (copy)"
      ]
    },
    "737": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "app#0"
      ]
    },
    "739": {
      "op": "bytec 10 // method \"no_args()uint64\"",
      "stack_out": [
        "app#0",
        "Method(no_args()uint64)"
      ]
    },
    "741": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0"
      ]
    },
    "743": {
      "op": "intc_1 // appl",
      "stack_out": [
        "app#0",
        "appl"
      ]
    },
    "744": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "app#0"
      ]
    },
    "746": {
      "op": "intc_0 // 0",
      "stack_out": [
        "app#0",
        "0"
      ]
    },
    "747": {
      "op": "itxn_field Fee",
      "stack_out": [
        "app#0"
      ]
    },
    "749": {
      "op": "itxn_submit"
    },
    "750": {
      "op": "itxn LastLog",
      "defined_out": [
        "app#0",
        "awst_tmp%1#0"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%1#0"
      ]
    },
    "752": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "awst_tmp%1#0",
        "awst_tmp%1#0 (copy)"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%1#0",
        "awst_tmp%1#0 (copy)"
      ]
    },
    "753": {
      "op": "extract 4 0",
      "defined_out": [
        "app#0",
        "arc4_result#0",
        "awst_tmp%1#0"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%1#0",
        "arc4_result#0"
      ]
    },
    "756": {
      "op": "swap",
      "stack_out": [
        "app#0",
        "arc4_result#0",
        "awst_tmp%1#0"
      ]
    },
    "757": {
      "op": "extract 0 4",
      "defined_out": [
        "app#0",
        "arc4_result#0",
        "tmp%6#3"
      ],
      "stack_out": [
        "app#0",
        "arc4_result#0",
        "tmp%6#3"
      ]
    },
    "760": {
      "op": "bytec_0 // 0x151f7c75",
      "stack_out": [
        "app#0",
        "arc4_result#0",
        "tmp%6#3",
        "0x151f7c75"
      ]
    },
    "761": {
      "op": "==",
      "defined_out": [
        "app#0",
        "arc4_result#0",
        "tmp%7#1"
      ],
      "stack_out": [
        "app#0",
        "arc4_result#0",
        "tmp%7#1"
      ]
    },
    "762": {
      "error": "application log value is not the result of an ABI return",
      "op": "assert // application log value is not the result of an ABI return",
      "stack_out": [
        "app#0",
        "arc4_result#0"
      ]
    },
    "763": {
      "op": "bytec 21 // 0x000000000000002a",
      "defined_out": [
        "0x000000000000002a",
        "app#0",
        "arc4_result#0"
      ],
      "stack_out": [
        "app#0",
        "arc4_result#0",
        "0x000000000000002a"
      ]
    },
    "765": {
      "op": "b==",
      "defined_out": [
        "app#0",
        "tmp%8#1"
      ],
      "stack_out": [
        "app#0",
        "tmp%8#1"
      ]
    },
    "766": {
      "op": "assert",
      "stack_out": [
        "app#0"
      ]
    },
    "767": {
      "op": "itxn_begin"
    },
    "768": {
      "op": "itxn_field ApplicationID",
      "stack_out": []
    },
    "770": {
      "op": "bytec 10 // method \"no_args()uint64\"",
      "stack_out": [
        "Method(no_args()uint64)"
      ]
    },
    "772": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "774": {
      "op": "intc_1 // appl",
      "stack_out": [
        "appl"
      ]
    },
    "775": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "777": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0"
      ]
    },
    "778": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "780": {
      "op": "itxn_submit"
    },
    "781": {
      "op": "itxn LastLog",
      "defined_out": [
        "awst_tmp%2#0"
      ],
      "stack_out": [
        "awst_tmp%2#0"
      ]
    },
    "783": {
      "op": "extract 0 4",
      "defined_out": [
        "tmp%10#1"
      ],
      "stack_out": [
        "tmp%10#1"
      ]
    },
    "786": {
      "op": "bytec_0 // 0x151f7c75",
      "stack_out": [
        "tmp%10#1",
        "0x151f7c75"
      ]
    },
    "787": {
      "op": "==",
      "defined_out": [
        "tmp%11#1"
      ],
      "stack_out": [
        "tmp%11#1"
      ]
    },
    "788": {
      "error": "application log value is not the result of an ABI return",
      "op": "assert // application log value is not the result of an ABI return",
      "stack_out": []
    },
    "789": {
      "op": "itxn LastLog",
      "defined_out": [
        "awst_tmp%3#0"
      ],
      "stack_out": [
        "awst_tmp%3#0"
      ]
    },
    "791": {
      "op": "dup",
      "defined_out": [
        "awst_tmp%3#0",
        "awst_tmp%3#0 (copy)"
      ],
      "stack_out": [
        "awst_tmp%3#0",
        "awst_tmp%3#0 (copy)"
      ]
    },
    "792": {
      "op": "extract 4 0",
      "defined_out": [
        "awst_tmp%3#0",
        "tmp%13#1"
      ],
      "stack_out": [
        "awst_tmp%3#0",
        "tmp%13#1"
      ]
    },
    "795": {
      "op": "swap",
      "stack_out": [
        "tmp%13#1",
        "awst_tmp%3#0"
      ]
    },
    "796": {
      "op": "extract 0 4",
      "defined_out": [
        "tmp%13#1",
        "tmp%14#1"
      ],
      "stack_out": [
        "tmp%13#1",
        "tmp%14#1"
      ]
    },
    "799": {
      "op": "bytec_0 // 0x151f7c75",
      "stack_out": [
        "tmp%13#1",
        "tmp%14#1",
        "0x151f7c75"
      ]
    },
    "800": {
      "op": "==",
      "defined_out": [
        "tmp%13#1",
        "tmp%15#1"
      ],
      "stack_out": [
        "tmp%13#1",
        "tmp%15#1"
      ]
    },
    "801": {
      "error": "application log value is not the result of an ABI return",
      "op": "assert // application log value is not the result of an ABI return",
      "stack_out": [
        "tmp%13#1"
      ]
    },
    "802": {
      "op": "bytec 21 // 0x000000000000002a",
      "stack_out": [
        "tmp%13#1",
        "0x000000000000002a"
      ]
    },
    "804": {
      "op": "b==",
      "defined_out": [
        "tmp%16#1"
      ],
      "stack_out": [
        "tmp%16#1"
      ]
    },
    "805": {
      "op": "assert",
      "stack_out": []
    },
    "806": {
      "op": "intc_2 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "807": {
      "op": "return",
      "stack_out": []
    },
    "808": {
      "block": "main_test_nested_tuples_route@17",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%91#0"
      ],
      "stack_out": [
        "tmp%91#0"
      ]
    },
    "810": {
      "op": "!",
      "defined_out": [
        "tmp%92#0"
      ],
      "stack_out": [
        "tmp%92#0"
      ]
    },
    "811": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "812": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%93#0"
      ],
      "stack_out": [
        "tmp%93#0"
      ]
    },
    "814": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "815": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded(uint8)%15#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint8)%15#0"
      ]
    },
    "818": {
      "op": "btoi",
      "defined_out": [
        "tmp%95#0"
      ],
      "stack_out": [
        "tmp%95#0"
      ]
    },
    "819": {
      "op": "txnas Applications",
      "defined_out": [
        "app#0"
      ],
      "stack_out": [
        "app#0"
      ]
    },
    "821": {
      "op": "itxn_begin"
    },
    "822": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "app#0 (copy)"
      ],
      "stack_out": [
        "app#0",
        "app#0 (copy)"
      ]
    },
    "823": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "app#0"
      ]
    },
    "825": {
      "op": "bytec 11 // method \"echo_nested_tuple(((string,string),(uint64,uint64,byte[])))((string,string),(uint64,uint64,byte[]))\"",
      "defined_out": [
        "Method(echo_nested_tuple(((string,string),(uint64,uint64,byte[])))((string,string),(uint64,uint64,byte[])))",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "Method(echo_nested_tuple(((string,string),(uint64,uint64,byte[])))((string,string),(uint64,uint64,byte[])))"
      ]
    },
    "827": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0"
      ]
    },
    "829": {
      "op": "bytec 22 // 0x00040010000400080002733100027332000000000000000100000000000000020012000133",
      "defined_out": [
        "0x00040010000400080002733100027332000000000000000100000000000000020012000133",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "0x00040010000400080002733100027332000000000000000100000000000000020012000133"
      ]
    },
    "831": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0"
      ]
    },
    "833": {
      "op": "intc_1 // appl",
      "defined_out": [
        "app#0",
        "appl"
      ],
      "stack_out": [
        "app#0",
        "appl"
      ]
    },
    "834": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "app#0"
      ]
    },
    "836": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "0"
      ]
    },
    "837": {
      "op": "itxn_field Fee",
      "stack_out": [
        "app#0"
      ]
    },
    "839": {
      "op": "itxn_submit"
    },
    "840": {
      "op": "itxn LastLog",
      "defined_out": [
        "app#0",
        "awst_tmp%0#0"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0"
      ]
    },
    "842": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ]
    },
    "843": {
      "op": "extract 4 0",
      "defined_out": [
        "app#0",
        "awst_tmp%0#0",
        "tmp%0#2"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "tmp%0#2"
      ]
    },
    "846": {
      "op": "swap",
      "stack_out": [
        "app#0",
        "tmp%0#2",
        "awst_tmp%0#0"
      ]
    },
    "847": {
      "op": "extract 0 4",
      "defined_out": [
        "app#0",
        "tmp%0#2",
        "tmp%1#1"
      ],
      "stack_out": [
        "app#0",
        "tmp%0#2",
        "tmp%1#1"
      ]
    },
    "850": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "app#0",
        "tmp%0#2",
        "tmp%1#1"
      ],
      "stack_out": [
        "app#0",
        "tmp%0#2",
        "tmp%1#1",
        "0x151f7c75"
      ]
    },
    "851": {
      "op": "==",
      "defined_out": [
        "app#0",
        "tmp%0#2",
        "tmp%2#1"
      ],
      "stack_out": [
        "app#0",
        "tmp%0#2",
        "tmp%2#1"
      ]
    },
    "852": {
      "error": "application log value is not the result of an ABI return",
      "op": "assert // application log value is not the result of an ABI return",
      "stack_out": [
        "app#0",
        "tmp%0#2"
      ]
    },
    "853": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "tmp%0#2",
        "tmp%0#2 (copy)"
      ],
      "stack_out": [
        "app#0",
        "tmp%0#2",
        "tmp%0#2 (copy)"
      ]
    },
    "854": {
      "op": "intc_0 // 0",
      "stack_out": [
        "app#0",
        "tmp%0#2",
        "tmp%0#2 (copy)",
        "0"
      ]
    },
    "855": {
      "op": "extract_uint16",
      "defined_out": [
        "app#0",
        "extract_uint16%0#0",
        "tmp%0#2"
      ],
      "stack_out": [
        "app#0",
        "tmp%0#2",
        "extract_uint16%0#0"
      ]
    },
    "856": {
      "op": "dig 1",
      "stack_out": [
        "app#0",
        "tmp%0#2",
        "extract_uint16%0#0",
        "tmp%0#2 (copy)"
      ]
    },
    "858": {
      "op": "intc_3 // 2",
      "defined_out": [
        "2",
        "app#0",
        "extract_uint16%0#0",
        "tmp%0#2",
        "tmp%0#2 (copy)"
      ],
      "stack_out": [
        "app#0",
        "tmp%0#2",
        "extract_uint16%0#0",
        "tmp%0#2 (copy)",
        "2"
      ]
    },
    "859": {
      "op": "extract_uint16",
      "defined_out": [
        "app#0",
        "extract_uint16%0#0",
        "extract_uint16%1#0",
        "tmp%0#2"
      ],
      "stack_out": [
        "app#0",
        "tmp%0#2",
        "extract_uint16%0#0",
        "extract_uint16%1#0"
      ]
    },
    "860": {
      "op": "dig 2",
      "stack_out": [
        "app#0",
        "tmp%0#2",
        "extract_uint16%0#0",
        "extract_uint16%1#0",
        "tmp%0#2 (copy)"
      ]
    },
    "862": {
      "op": "uncover 2",
      "stack_out": [
        "app#0",
        "tmp%0#2",
        "extract_uint16%1#0",
        "tmp%0#2 (copy)",
        "extract_uint16%0#0"
      ]
    },
    "864": {
      "op": "dig 2",
      "defined_out": [
        "app#0",
        "extract_uint16%0#0",
        "extract_uint16%1#0",
        "extract_uint16%1#0 (copy)",
        "tmp%0#2",
        "tmp%0#2 (copy)"
      ],
      "stack_out": [
        "app#0",
        "tmp%0#2",
        "extract_uint16%1#0",
        "tmp%0#2 (copy)",
        "extract_uint16%0#0",
        "extract_uint16%1#0 (copy)"
      ]
    },
    "866": {
      "op": "substring3",
      "defined_out": [
        "app#0",
        "extract_uint16%1#0",
        "substring3%0#0",
        "tmp%0#2"
      ],
      "stack_out": [
        "app#0",
        "tmp%0#2",
        "extract_uint16%1#0",
        "substring3%0#0"
      ]
    },
    "867": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "extract_uint16%1#0",
        "substring3%0#0",
        "substring3%0#0 (copy)",
        "tmp%0#2"
      ],
      "stack_out": [
        "app#0",
        "tmp%0#2",
        "extract_uint16%1#0",
        "substring3%0#0",
        "substring3%0#0 (copy)"
      ]
    },
    "868": {
      "op": "intc_0 // 0",
      "stack_out": [
        "app#0",
        "tmp%0#2",
        "extract_uint16%1#0",
        "substring3%0#0",
        "substring3%0#0 (copy)",
        "0"
      ]
    },
    "869": {
      "op": "extract_uint16",
      "defined_out": [
        "app#0",
        "extract_uint16%1#0",
        "extract_uint16%2#0",
        "substring3%0#0",
        "tmp%0#2"
      ],
      "stack_out": [
        "app#0",
        "tmp%0#2",
        "extract_uint16%1#0",
        "substring3%0#0",
        "extract_uint16%2#0"
      ]
    },
    "870": {
      "op": "dig 1",
      "stack_out": [
        "app#0",
        "tmp%0#2",
        "extract_uint16%1#0",
        "substring3%0#0",
        "extract_uint16%2#0",
        "substring3%0#0 (copy)"
      ]
    },
    "872": {
      "op": "intc_3 // 2",
      "stack_out": [
        "app#0",
        "tmp%0#2",
        "extract_uint16%1#0",
        "substring3%0#0",
        "extract_uint16%2#0",
        "substring3%0#0 (copy)",
        "2"
      ]
    },
    "873": {
      "op": "extract_uint16",
      "defined_out": [
        "app#0",
        "extract_uint16%1#0",
        "extract_uint16%2#0",
        "extract_uint16%3#0",
        "substring3%0#0",
        "tmp%0#2"
      ],
      "stack_out": [
        "app#0",
        "tmp%0#2",
        "extract_uint16%1#0",
        "substring3%0#0",
        "extract_uint16%2#0",
        "extract_uint16%3#0"
      ]
    },
    "874": {
      "op": "dig 2",
      "stack_out": [
        "app#0",
        "tmp%0#2",
        "extract_uint16%1#0",
        "substring3%0#0",
        "extract_uint16%2#0",
        "extract_uint16%3#0",
        "substring3%0#0 (copy)"
      ]
    },
    "876": {
      "op": "uncover 2",
      "stack_out": [
        "app#0",
        "tmp%0#2",
        "extract_uint16%1#0",
        "substring3%0#0",
        "extract_uint16%3#0",
        "substring3%0#0 (copy)",
        "extract_uint16%2#0"
      ]
    },
    "878": {
      "op": "dig 2",
      "defined_out": [
        "app#0",
        "extract_uint16%1#0",
        "extract_uint16%2#0",
        "extract_uint16%3#0",
        "extract_uint16%3#0 (copy)",
        "substring3%0#0",
        "substring3%0#0 (copy)",
        "tmp%0#2"
      ],
      "stack_out": [
        "app#0",
        "tmp%0#2",
        "extract_uint16%1#0",
        "substring3%0#0",
        "extract_uint16%3#0",
        "substring3%0#0 (copy)",
        "extract_uint16%2#0",
        "extract_uint16%3#0 (copy)"
      ]
    },
    "880": {
      "op": "substring3",
      "defined_out": [
        "app#0",
        "extract_uint16%1#0",
        "extract_uint16%3#0",
        "substring3%0#0",
        "substring3%1#0",
        "tmp%0#2"
      ],
      "stack_out": [
        "app#0",
        "tmp%0#2",
        "extract_uint16%1#0",
        "substring3%0#0",
        "extract_uint16%3#0",
        "substring3%1#0"
      ]
    },
    "881": {
      "op": "extract 2 0",
      "defined_out": [
        "app#0",
        "extract_uint16%1#0",
        "extract_uint16%3#0",
        "result.0.0#0",
        "substring3%0#0",
        "tmp%0#2"
      ],
      "stack_out": [
        "app#0",
        "tmp%0#2",
        "extract_uint16%1#0",
        "substring3%0#0",
        "extract_uint16%3#0",
        "result.0.0#0"
      ]
    },
    "884": {
      "op": "dig 2",
      "stack_out": [
        "app#0",
        "tmp%0#2",
        "extract_uint16%1#0",
        "substring3%0#0",
        "extract_uint16%3#0",
        "result.0.0#0",
        "substring3%0#0 (copy)"
      ]
    },
    "886": {
      "op": "len",
      "defined_out": [
        "app#0",
        "extract_uint16%1#0",
        "extract_uint16%3#0",
        "len%0#0",
        "result.0.0#0",
        "substring3%0#0",
        "tmp%0#2"
      ],
      "stack_out": [
        "app#0",
        "tmp%0#2",
        "extract_uint16%1#0",
        "substring3%0#0",
        "extract_uint16%3#0",
        "result.0.0#0",
        "len%0#0"
      ]
    },
    "887": {
      "op": "swap"
    },
    "888": {
      "op": "cover 3",
      "stack_out": [
        "app#0",
        "tmp%0#2",
        "extract_uint16%1#0",
        "result.0.0#0",
        "substring3%0#0",
        "extract_uint16%3#0",
        "len%0#0"
      ]
    },
    "890": {
      "op": "substring3",
      "defined_out": [
        "app#0",
        "extract_uint16%1#0",
        "result.0.0#0",
        "result.0.1#0",
        "tmp%0#2"
      ],
      "stack_out": [
        "app#0",
        "tmp%0#2",
        "extract_uint16%1#0",
        "result.0.0#0",
        "result.0.1#0"
      ]
    },
    "891": {
      "op": "dig 3",
      "stack_out": [
        "app#0",
        "tmp%0#2",
        "extract_uint16%1#0",
        "result.0.0#0",
        "result.0.1#0",
        "tmp%0#2 (copy)"
      ]
    },
    "893": {
      "op": "len",
      "defined_out": [
        "app#0",
        "extract_uint16%1#0",
        "len%1#0",
        "result.0.0#0",
        "result.0.1#0",
        "tmp%0#2"
      ],
      "stack_out": [
        "app#0",
        "tmp%0#2",
        "extract_uint16%1#0",
        "result.0.0#0",
        "result.0.1#0",
        "len%1#0"
      ]
    },
    "894": {
      "op": "uncover 4",
      "stack_out": [
        "app#0",
        "extract_uint16%1#0",
        "result.0.0#0",
        "result.0.1#0",
        "len%1#0",
        "tmp%0#2"
      ]
    },
    "896": {
      "op": "uncover 4",
      "stack_out": [
        "app#0",
        "result.0.0#0",
        "result.0.1#0",
        "len%1#0",
        "tmp%0#2",
        "extract_uint16%1#0"
      ]
    },
    "898": {
      "op": "uncover 2",
      "stack_out": [
        "app#0",
        "result.0.0#0",
        "result.0.1#0",
        "tmp%0#2",
        "extract_uint16%1#0",
        "len%1#0"
      ]
    },
    "900": {
      "op": "substring3",
      "defined_out": [
        "app#0",
        "result.0.0#0",
        "result.0.1#0",
        "substring3%3#0"
      ],
      "stack_out": [
        "app#0",
        "result.0.0#0",
        "result.0.1#0",
        "substring3%3#0"
      ]
    },
    "901": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "result.0.0#0",
        "result.0.1#0",
        "substring3%3#0",
        "substring3%3#0 (copy)"
      ],
      "stack_out": [
        "app#0",
        "result.0.0#0",
        "result.0.1#0",
        "substring3%3#0",
        "substring3%3#0 (copy)"
      ]
    },
    "902": {
      "op": "intc_0 // 0",
      "stack_out": [
        "app#0",
        "result.0.0#0",
        "result.0.1#0",
        "substring3%3#0",
        "substring3%3#0 (copy)",
        "0"
      ]
    },
    "903": {
      "op": "extract_uint64",
      "defined_out": [
        "app#0",
        "result.0.0#0",
        "result.0.1#0",
        "result.1.0#0",
        "substring3%3#0"
      ],
      "stack_out": [
        "app#0",
        "result.0.0#0",
        "result.0.1#0",
        "substring3%3#0",
        "result.1.0#0"
      ]
    },
    "904": {
      "op": "dig 1",
      "stack_out": [
        "app#0",
        "result.0.0#0",
        "result.0.1#0",
        "substring3%3#0",
        "result.1.0#0",
        "substring3%3#0 (copy)"
      ]
    },
    "906": {
      "op": "extract 8 8",
      "defined_out": [
        "app#0",
        "result.0.0#0",
        "result.0.1#0",
        "result.1.0#0",
        "result.1.1#0",
        "substring3%3#0"
      ],
      "stack_out": [
        "app#0",
        "result.0.0#0",
        "result.0.1#0",
        "substring3%3#0",
        "result.1.0#0",
        "result.1.1#0"
      ]
    },
    "909": {
      "op": "dig 2",
      "stack_out": [
        "app#0",
        "result.0.0#0",
        "result.0.1#0",
        "substring3%3#0",
        "result.1.0#0",
        "result.1.1#0",
        "substring3%3#0 (copy)"
      ]
    },
    "911": {
      "op": "pushint 16 // 16",
      "defined_out": [
        "16",
        "app#0",
        "result.0.0#0",
        "result.0.1#0",
        "result.1.0#0",
        "result.1.1#0",
        "substring3%3#0",
        "substring3%3#0 (copy)"
      ],
      "stack_out": [
        "app#0",
        "result.0.0#0",
        "result.0.1#0",
        "substring3%3#0",
        "result.1.0#0",
        "result.1.1#0",
        "substring3%3#0 (copy)",
        "16"
      ]
    },
    "913": {
      "op": "extract_uint16",
      "defined_out": [
        "app#0",
        "extract_uint16%6#0",
        "result.0.0#0",
        "result.0.1#0",
        "result.1.0#0",
        "result.1.1#0",
        "substring3%3#0"
      ],
      "stack_out": [
        "app#0",
        "result.0.0#0",
        "result.0.1#0",
        "substring3%3#0",
        "result.1.0#0",
        "result.1.1#0",
        "extract_uint16%6#0"
      ]
    },
    "914": {
      "op": "dig 3",
      "stack_out": [
        "app#0",
        "result.0.0#0",
        "result.0.1#0",
        "substring3%3#0",
        "result.1.0#0",
        "result.1.1#0",
        "extract_uint16%6#0",
        "substring3%3#0 (copy)"
      ]
    },
    "916": {
      "op": "len",
      "defined_out": [
        "app#0",
        "extract_uint16%6#0",
        "len%2#0",
        "result.0.0#0",
        "result.0.1#0",
        "result.1.0#0",
        "result.1.1#0",
        "substring3%3#0"
      ],
      "stack_out": [
        "app#0",
        "result.0.0#0",
        "result.0.1#0",
        "substring3%3#0",
        "result.1.0#0",
        "result.1.1#0",
        "extract_uint16%6#0",
        "len%2#0"
      ]
    },
    "917": {
      "op": "uncover 4",
      "stack_out": [
        "app#0",
        "result.0.0#0",
        "result.0.1#0",
        "result.1.0#0",
        "result.1.1#0",
        "extract_uint16%6#0",
        "len%2#0",
        "substring3%3#0"
      ]
    },
    "919": {
      "op": "cover 2",
      "stack_out": [
        "app#0",
        "result.0.0#0",
        "result.0.1#0",
        "result.1.0#0",
        "result.1.1#0",
        "substring3%3#0",
        "extract_uint16%6#0",
        "len%2#0"
      ]
    },
    "921": {
      "op": "substring3",
      "defined_out": [
        "app#0",
        "result.0.0#0",
        "result.0.1#0",
        "result.1.0#0",
        "result.1.1#0",
        "substring3%4#0"
      ],
      "stack_out": [
        "app#0",
        "result.0.0#0",
        "result.0.1#0",
        "result.1.0#0",
        "result.1.1#0",
        "substring3%4#0"
      ]
    },
    "922": {
      "op": "extract 2 0",
      "defined_out": [
        "app#0",
        "result.0.0#0",
        "result.0.1#0",
        "result.1.0#0",
        "result.1.1#0",
        "result.1.2#0"
      ],
      "stack_out": [
        "app#0",
        "result.0.0#0",
        "result.0.1#0",
        "result.1.0#0",
        "result.1.1#0",
        "result.1.2#0"
      ]
    },
    "925": {
      "op": "uncover 4",
      "stack_out": [
        "app#0",
        "result.0.1#0",
        "result.1.0#0",
        "result.1.1#0",
        "result.1.2#0",
        "result.0.0#0"
      ]
    },
    "927": {
      "op": "bytec 9 // \"echo: s1\"",
      "defined_out": [
        "\"echo: s1\"",
        "app#0",
        "result.0.0#0",
        "result.0.1#0",
        "result.1.0#0",
        "result.1.1#0",
        "result.1.2#0"
      ],
      "stack_out": [
        "app#0",
        "result.0.1#0",
        "result.1.0#0",
        "result.1.1#0",
        "result.1.2#0",
        "result.0.0#0",
        "\"echo: s1\""
      ]
    },
    "929": {
      "op": "==",
      "defined_out": [
        "app#0",
        "result.0.1#0",
        "result.1.0#0",
        "result.1.1#0",
        "result.1.2#0",
        "tmp%6#1"
      ],
      "stack_out": [
        "app#0",
        "result.0.1#0",
        "result.1.0#0",
        "result.1.1#0",
        "result.1.2#0",
        "tmp%6#1"
      ]
    },
    "930": {
      "op": "assert",
      "stack_out": [
        "app#0",
        "result.0.1#0",
        "result.1.0#0",
        "result.1.1#0",
        "result.1.2#0"
      ]
    },
    "931": {
      "op": "uncover 3",
      "stack_out": [
        "app#0",
        "result.1.0#0",
        "result.1.1#0",
        "result.1.2#0",
        "result.0.1#0"
      ]
    },
    "933": {
      "op": "bytec 23 // 0x00086563686f3a207332",
      "defined_out": [
        "0x00086563686f3a207332",
        "app#0",
        "result.0.1#0",
        "result.1.0#0",
        "result.1.1#0",
        "result.1.2#0"
      ],
      "stack_out": [
        "app#0",
        "result.1.0#0",
        "result.1.1#0",
        "result.1.2#0",
        "result.0.1#0",
        "0x00086563686f3a207332"
      ]
    },
    "935": {
      "op": "==",
      "defined_out": [
        "app#0",
        "result.1.0#0",
        "result.1.1#0",
        "result.1.2#0",
        "tmp%7#1"
      ],
      "stack_out": [
        "app#0",
        "result.1.0#0",
        "result.1.1#0",
        "result.1.2#0",
        "tmp%7#1"
      ]
    },
    "936": {
      "op": "assert",
      "stack_out": [
        "app#0",
        "result.1.0#0",
        "result.1.1#0",
        "result.1.2#0"
      ]
    },
    "937": {
      "op": "uncover 2",
      "stack_out": [
        "app#0",
        "result.1.1#0",
        "result.1.2#0",
        "result.1.0#0"
      ]
    },
    "939": {
      "op": "intc_3 // 2",
      "stack_out": [
        "app#0",
        "result.1.1#0",
        "result.1.2#0",
        "result.1.0#0",
        "2"
      ]
    },
    "940": {
      "op": "==",
      "defined_out": [
        "app#0",
        "result.1.1#0",
        "result.1.2#0",
        "tmp%8#1"
      ],
      "stack_out": [
        "app#0",
        "result.1.1#0",
        "result.1.2#0",
        "tmp%8#1"
      ]
    },
    "941": {
      "op": "assert",
      "stack_out": [
        "app#0",
        "result.1.1#0",
        "result.1.2#0"
      ]
    },
    "942": {
      "op": "swap",
      "stack_out": [
        "app#0",
        "result.1.2#0",
        "result.1.1#0"
      ]
    },
    "943": {
      "op": "bytec 12 // 0x0000000000000003",
      "defined_out": [
        "0x0000000000000003",
        "app#0",
        "result.1.1#0",
        "result.1.2#0"
      ],
      "stack_out": [
        "app#0",
        "result.1.2#0",
        "result.1.1#0",
        "0x0000000000000003"
      ]
    },
    "945": {
      "op": "b==",
      "defined_out": [
        "app#0",
        "result.1.2#0",
        "tmp%9#1"
      ],
      "stack_out": [
        "app#0",
        "result.1.2#0",
        "tmp%9#1"
      ]
    },
    "946": {
      "op": "assert",
      "stack_out": [
        "app#0",
        "result.1.2#0"
      ]
    },
    "947": {
      "op": "bytec 24 // 0x6563686f3a2033",
      "defined_out": [
        "0x6563686f3a2033",
        "app#0",
        "result.1.2#0"
      ],
      "stack_out": [
        "app#0",
        "result.1.2#0",
        "0x6563686f3a2033"
      ]
    },
    "949": {
      "op": "==",
      "defined_out": [
        "app#0",
        "tmp%10#2"
      ],
      "stack_out": [
        "app#0",
        "tmp%10#2"
      ]
    },
    "950": {
      "op": "assert",
      "stack_out": [
        "app#0"
      ]
    },
    "951": {
      "op": "itxn_begin"
    },
    "952": {
      "op": "dup",
      "stack_out": [
        "app#0",
        "app#0 (copy)"
      ]
    },
    "953": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "app#0"
      ]
    },
    "955": {
      "op": "bytec 11 // method \"echo_nested_tuple(((string,string),(uint64,uint64,byte[])))((string,string),(uint64,uint64,byte[]))\"",
      "stack_out": [
        "app#0",
        "Method(echo_nested_tuple(((string,string),(uint64,uint64,byte[])))((string,string),(uint64,uint64,byte[])))"
      ]
    },
    "957": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0"
      ]
    },
    "959": {
      "op": "bytec 22 // 0x00040010000400080002733100027332000000000000000100000000000000020012000133",
      "stack_out": [
        "app#0",
        "0x00040010000400080002733100027332000000000000000100000000000000020012000133"
      ]
    },
    "961": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0"
      ]
    },
    "963": {
      "op": "intc_1 // appl",
      "stack_out": [
        "app#0",
        "appl"
      ]
    },
    "964": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "app#0"
      ]
    },
    "966": {
      "op": "intc_0 // 0",
      "stack_out": [
        "app#0",
        "0"
      ]
    },
    "967": {
      "op": "itxn_field Fee",
      "stack_out": [
        "app#0"
      ]
    },
    "969": {
      "op": "itxn_submit"
    },
    "970": {
      "op": "itxn LastLog",
      "defined_out": [
        "app#0",
        "awst_tmp%1#0"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%1#0"
      ]
    },
    "972": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "awst_tmp%1#0",
        "awst_tmp%1#0 (copy)"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%1#0",
        "awst_tmp%1#0 (copy)"
      ]
    },
    "973": {
      "op": "extract 4 0",
      "defined_out": [
        "app#0",
        "awst_tmp%1#0",
        "tmp%11#2"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%1#0",
        "tmp%11#2"
      ]
    },
    "976": {
      "op": "swap",
      "stack_out": [
        "app#0",
        "tmp%11#2",
        "awst_tmp%1#0"
      ]
    },
    "977": {
      "op": "extract 0 4",
      "defined_out": [
        "app#0",
        "tmp%11#2",
        "tmp%12#1"
      ],
      "stack_out": [
        "app#0",
        "tmp%11#2",
        "tmp%12#1"
      ]
    },
    "980": {
      "op": "bytec_0 // 0x151f7c75",
      "stack_out": [
        "app#0",
        "tmp%11#2",
        "tmp%12#1",
        "0x151f7c75"
      ]
    },
    "981": {
      "op": "==",
      "defined_out": [
        "app#0",
        "tmp%11#2",
        "tmp%13#2"
      ],
      "stack_out": [
        "app#0",
        "tmp%11#2",
        "tmp%13#2"
      ]
    },
    "982": {
      "error": "application log value is not the result of an ABI return",
      "op": "assert // application log value is not the result of an ABI return",
      "stack_out": [
        "app#0",
        "tmp%11#2"
      ]
    },
    "983": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "tmp%11#2",
        "tmp%11#2 (copy)"
      ],
      "stack_out": [
        "app#0",
        "tmp%11#2",
        "tmp%11#2 (copy)"
      ]
    },
    "984": {
      "op": "intc_0 // 0",
      "stack_out": [
        "app#0",
        "tmp%11#2",
        "tmp%11#2 (copy)",
        "0"
      ]
    },
    "985": {
      "op": "extract_uint16",
      "defined_out": [
        "app#0",
        "extract_uint16%7#0",
        "tmp%11#2"
      ],
      "stack_out": [
        "app#0",
        "tmp%11#2",
        "extract_uint16%7#0"
      ]
    },
    "986": {
      "op": "dig 1",
      "stack_out": [
        "app#0",
        "tmp%11#2",
        "extract_uint16%7#0",
        "tmp%11#2 (copy)"
      ]
    },
    "988": {
      "op": "intc_3 // 2",
      "stack_out": [
        "app#0",
        "tmp%11#2",
        "extract_uint16%7#0",
        "tmp%11#2 (copy)",
        "2"
      ]
    },
    "989": {
      "op": "extract_uint16",
      "defined_out": [
        "app#0",
        "extract_uint16%7#0",
        "extract_uint16%8#0",
        "tmp%11#2"
      ],
      "stack_out": [
        "app#0",
        "tmp%11#2",
        "extract_uint16%7#0",
        "extract_uint16%8#0"
      ]
    },
    "990": {
      "op": "dig 2",
      "stack_out": [
        "app#0",
        "tmp%11#2",
        "extract_uint16%7#0",
        "extract_uint16%8#0",
        "tmp%11#2 (copy)"
      ]
    },
    "992": {
      "op": "uncover 2",
      "stack_out": [
        "app#0",
        "tmp%11#2",
        "extract_uint16%8#0",
        "tmp%11#2 (copy)",
        "extract_uint16%7#0"
      ]
    },
    "994": {
      "op": "dig 2",
      "defined_out": [
        "app#0",
        "extract_uint16%7#0",
        "extract_uint16%8#0",
        "extract_uint16%8#0 (copy)",
        "tmp%11#2",
        "tmp%11#2 (copy)"
      ],
      "stack_out": [
        "app#0",
        "tmp%11#2",
        "extract_uint16%8#0",
        "tmp%11#2 (copy)",
        "extract_uint16%7#0",
        "extract_uint16%8#0 (copy)"
      ]
    },
    "996": {
      "op": "substring3",
      "defined_out": [
        "app#0",
        "extract_uint16%8#0",
        "substring3%5#0",
        "tmp%11#2"
      ],
      "stack_out": [
        "app#0",
        "tmp%11#2",
        "extract_uint16%8#0",
        "substring3%5#0"
      ]
    },
    "997": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "extract_uint16%8#0",
        "substring3%5#0",
        "substring3%5#0 (copy)",
        "tmp%11#2"
      ],
      "stack_out": [
        "app#0",
        "tmp%11#2",
        "extract_uint16%8#0",
        "substring3%5#0",
        "substring3%5#0 (copy)"
      ]
    },
    "998": {
      "op": "intc_0 // 0",
      "stack_out": [
        "app#0",
        "tmp%11#2",
        "extract_uint16%8#0",
        "substring3%5#0",
        "substring3%5#0 (copy)",
        "0"
      ]
    },
    "999": {
      "op": "extract_uint16",
      "defined_out": [
        "app#0",
        "extract_uint16%8#0",
        "extract_uint16%9#0",
        "substring3%5#0",
        "tmp%11#2"
      ],
      "stack_out": [
        "app#0",
        "tmp%11#2",
        "extract_uint16%8#0",
        "substring3%5#0",
        "extract_uint16%9#0"
      ]
    },
    "1000": {
      "op": "dig 1",
      "stack_out": [
        "app#0",
        "tmp%11#2",
        "extract_uint16%8#0",
        "substring3%5#0",
        "extract_uint16%9#0",
        "substring3%5#0 (copy)"
      ]
    },
    "1002": {
      "op": "intc_3 // 2",
      "stack_out": [
        "app#0",
        "tmp%11#2",
        "extract_uint16%8#0",
        "substring3%5#0",
        "extract_uint16%9#0",
        "substring3%5#0 (copy)",
        "2"
      ]
    },
    "1003": {
      "op": "extract_uint16",
      "defined_out": [
        "app#0",
        "extract_uint16%10#0",
        "extract_uint16%8#0",
        "extract_uint16%9#0",
        "substring3%5#0",
        "tmp%11#2"
      ],
      "stack_out": [
        "app#0",
        "tmp%11#2",
        "extract_uint16%8#0",
        "substring3%5#0",
        "extract_uint16%9#0",
        "extract_uint16%10#0"
      ]
    },
    "1004": {
      "op": "dig 2",
      "stack_out": [
        "app#0",
        "tmp%11#2",
        "extract_uint16%8#0",
        "substring3%5#0",
        "extract_uint16%9#0",
        "extract_uint16%10#0",
        "substring3%5#0 (copy)"
      ]
    },
    "1006": {
      "op": "uncover 2",
      "stack_out": [
        "app#0",
        "tmp%11#2",
        "extract_uint16%8#0",
        "substring3%5#0",
        "extract_uint16%10#0",
        "substring3%5#0 (copy)",
        "extract_uint16%9#0"
      ]
    },
    "1008": {
      "op": "dig 2",
      "defined_out": [
        "app#0",
        "extract_uint16%10#0",
        "extract_uint16%10#0 (copy)",
        "extract_uint16%8#0",
        "extract_uint16%9#0",
        "substring3%5#0",
        "substring3%5#0 (copy)",
        "tmp%11#2"
      ],
      "stack_out": [
        "app#0",
        "tmp%11#2",
        "extract_uint16%8#0",
        "substring3%5#0",
        "extract_uint16%10#0",
        "substring3%5#0 (copy)",
        "extract_uint16%9#0",
        "extract_uint16%10#0 (copy)"
      ]
    },
    "1010": {
      "op": "substring3",
      "defined_out": [
        "app#0",
        "extract_uint16%10#0",
        "extract_uint16%8#0",
        "substring3%5#0",
        "substring3%6#0",
        "tmp%11#2"
      ],
      "stack_out": [
        "app#0",
        "tmp%11#2",
        "extract_uint16%8#0",
        "substring3%5#0",
        "extract_uint16%10#0",
        "substring3%6#0"
      ]
    },
    "1011": {
      "op": "extract 2 0",
      "stack_out": [
        "app#0",
        "tmp%11#2",
        "extract_uint16%8#0",
        "substring3%5#0",
        "extract_uint16%10#0",
        "result.0.0#0"
      ]
    },
    "1014": {
      "op": "dig 2",
      "stack_out": [
        "app#0",
        "tmp%11#2",
        "extract_uint16%8#0",
        "substring3%5#0",
        "extract_uint16%10#0",
        "result.0.0#0",
        "substring3%5#0 (copy)"
      ]
    },
    "1016": {
      "op": "len",
      "defined_out": [
        "app#0",
        "extract_uint16%10#0",
        "extract_uint16%8#0",
        "len%3#0",
        "result.0.0#0",
        "substring3%5#0",
        "tmp%11#2"
      ],
      "stack_out": [
        "app#0",
        "tmp%11#2",
        "extract_uint16%8#0",
        "substring3%5#0",
        "extract_uint16%10#0",
        "result.0.0#0",
        "len%3#0"
      ]
    },
    "1017": {
      "op": "swap"
    },
    "1018": {
      "op": "cover 3",
      "stack_out": [
        "app#0",
        "tmp%11#2",
        "extract_uint16%8#0",
        "result.0.0#0",
        "substring3%5#0",
        "extract_uint16%10#0",
        "len%3#0"
      ]
    },
    "1020": {
      "op": "substring3",
      "stack_out": [
        "app#0",
        "tmp%11#2",
        "extract_uint16%8#0",
        "result.0.0#0",
        "result.0.1#0"
      ]
    },
    "1021": {
      "op": "dig 3",
      "stack_out": [
        "app#0",
        "tmp%11#2",
        "extract_uint16%8#0",
        "result.0.0#0",
        "result.0.1#0",
        "tmp%11#2 (copy)"
      ]
    },
    "1023": {
      "op": "len",
      "defined_out": [
        "app#0",
        "extract_uint16%8#0",
        "len%4#0",
        "result.0.0#0",
        "result.0.1#0",
        "tmp%11#2"
      ],
      "stack_out": [
        "app#0",
        "tmp%11#2",
        "extract_uint16%8#0",
        "result.0.0#0",
        "result.0.1#0",
        "len%4#0"
      ]
    },
    "1024": {
      "op": "uncover 4",
      "stack_out": [
        "app#0",
        "extract_uint16%8#0",
        "result.0.0#0",
        "result.0.1#0",
        "len%4#0",
        "tmp%11#2"
      ]
    },
    "1026": {
      "op": "uncover 4",
      "stack_out": [
        "app#0",
        "result.0.0#0",
        "result.0.1#0",
        "len%4#0",
        "tmp%11#2",
        "extract_uint16%8#0"
      ]
    },
    "1028": {
      "op": "uncover 2",
      "stack_out": [
        "app#0",
        "result.0.0#0",
        "result.0.1#0",
        "tmp%11#2",
        "extract_uint16%8#0",
        "len%4#0"
      ]
    },
    "1030": {
      "op": "substring3",
      "defined_out": [
        "app#0",
        "result.0.0#0",
        "result.0.1#0",
        "substring3%8#0"
      ],
      "stack_out": [
        "app#0",
        "result.0.0#0",
        "result.0.1#0",
        "substring3%8#0"
      ]
    },
    "1031": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "result.0.0#0",
        "result.0.1#0",
        "substring3%8#0",
        "substring3%8#0 (copy)"
      ],
      "stack_out": [
        "app#0",
        "result.0.0#0",
        "result.0.1#0",
        "substring3%8#0",
        "substring3%8#0 (copy)"
      ]
    },
    "1032": {
      "op": "intc_0 // 0",
      "stack_out": [
        "app#0",
        "result.0.0#0",
        "result.0.1#0",
        "substring3%8#0",
        "substring3%8#0 (copy)",
        "0"
      ]
    },
    "1033": {
      "op": "extract_uint64",
      "stack_out": [
        "app#0",
        "result.0.0#0",
        "result.0.1#0",
        "substring3%8#0",
        "result.1.0#0"
      ]
    },
    "1034": {
      "op": "dig 1",
      "stack_out": [
        "app#0",
        "result.0.0#0",
        "result.0.1#0",
        "substring3%8#0",
        "result.1.0#0",
        "substring3%8#0 (copy)"
      ]
    },
    "1036": {
      "op": "extract 8 8",
      "stack_out": [
        "app#0",
        "result.0.0#0",
        "result.0.1#0",
        "substring3%8#0",
        "result.1.0#0",
        "result.1.1#0"
      ]
    },
    "1039": {
      "op": "dig 2",
      "stack_out": [
        "app#0",
        "result.0.0#0",
        "result.0.1#0",
        "substring3%8#0",
        "result.1.0#0",
        "result.1.1#0",
        "substring3%8#0 (copy)"
      ]
    },
    "1041": {
      "op": "pushint 16 // 16",
      "stack_out": [
        "app#0",
        "result.0.0#0",
        "result.0.1#0",
        "substring3%8#0",
        "result.1.0#0",
        "result.1.1#0",
        "substring3%8#0 (copy)",
        "16"
      ]
    },
    "1043": {
      "op": "extract_uint16",
      "defined_out": [
        "app#0",
        "extract_uint16%13#0",
        "result.0.0#0",
        "result.0.1#0",
        "result.1.0#0",
        "result.1.1#0",
        "substring3%8#0"
      ],
      "stack_out": [
        "app#0",
        "result.0.0#0",
        "result.0.1#0",
        "substring3%8#0",
        "result.1.0#0",
        "result.1.1#0",
        "extract_uint16%13#0"
      ]
    },
    "1044": {
      "op": "dig 3",
      "stack_out": [
        "app#0",
        "result.0.0#0",
        "result.0.1#0",
        "substring3%8#0",
        "result.1.0#0",
        "result.1.1#0",
        "extract_uint16%13#0",
        "substring3%8#0 (copy)"
      ]
    },
    "1046": {
      "op": "len",
      "defined_out": [
        "app#0",
        "extract_uint16%13#0",
        "len%5#0",
        "result.0.0#0",
        "result.0.1#0",
        "result.1.0#0",
        "result.1.1#0",
        "substring3%8#0"
      ],
      "stack_out": [
        "app#0",
        "result.0.0#0",
        "result.0.1#0",
        "substring3%8#0",
        "result.1.0#0",
        "result.1.1#0",
        "extract_uint16%13#0",
        "len%5#0"
      ]
    },
    "1047": {
      "op": "uncover 4",
      "stack_out": [
        "app#0",
        "result.0.0#0",
        "result.0.1#0",
        "result.1.0#0",
        "result.1.1#0",
        "extract_uint16%13#0",
        "len%5#0",
        "substring3%8#0"
      ]
    },
    "1049": {
      "op": "cover 2",
      "stack_out": [
        "app#0",
        "result.0.0#0",
        "result.0.1#0",
        "result.1.0#0",
        "result.1.1#0",
        "substring3%8#0",
        "extract_uint16%13#0",
        "len%5#0"
      ]
    },
    "1051": {
      "op": "substring3",
      "defined_out": [
        "app#0",
        "result.0.0#0",
        "result.0.1#0",
        "result.1.0#0",
        "result.1.1#0",
        "substring3%9#0"
      ],
      "stack_out": [
        "app#0",
        "result.0.0#0",
        "result.0.1#0",
        "result.1.0#0",
        "result.1.1#0",
        "substring3%9#0"
      ]
    },
    "1052": {
      "op": "extract 2 0",
      "stack_out": [
        "app#0",
        "result.0.0#0",
        "result.0.1#0",
        "result.1.0#0",
        "result.1.1#0",
        "result.1.2#0"
      ]
    },
    "1055": {
      "op": "uncover 4",
      "stack_out": [
        "app#0",
        "result.0.1#0",
        "result.1.0#0",
        "result.1.1#0",
        "result.1.2#0",
        "result.0.0#0"
      ]
    },
    "1057": {
      "op": "bytec 9 // \"echo: s1\"",
      "stack_out": [
        "app#0",
        "result.0.1#0",
        "result.1.0#0",
        "result.1.1#0",
        "result.1.2#0",
        "result.0.0#0",
        "\"echo: s1\""
      ]
    },
    "1059": {
      "op": "==",
      "defined_out": [
        "app#0",
        "result.0.1#0",
        "result.1.0#0",
        "result.1.1#0",
        "result.1.2#0",
        "tmp%17#1"
      ],
      "stack_out": [
        "app#0",
        "result.0.1#0",
        "result.1.0#0",
        "result.1.1#0",
        "result.1.2#0",
        "tmp%17#1"
      ]
    },
    "1060": {
      "op": "assert",
      "stack_out": [
        "app#0",
        "result.0.1#0",
        "result.1.0#0",
        "result.1.1#0",
        "result.1.2#0"
      ]
    },
    "1061": {
      "op": "uncover 3",
      "stack_out": [
        "app#0",
        "result.1.0#0",
        "result.1.1#0",
        "result.1.2#0",
        "result.0.1#0"
      ]
    },
    "1063": {
      "op": "bytec 23 // 0x00086563686f3a207332",
      "stack_out": [
        "app#0",
        "result.1.0#0",
        "result.1.1#0",
        "result.1.2#0",
        "result.0.1#0",
        "0x00086563686f3a207332"
      ]
    },
    "1065": {
      "op": "==",
      "defined_out": [
        "app#0",
        "result.1.0#0",
        "result.1.1#0",
        "result.1.2#0",
        "tmp%18#0"
      ],
      "stack_out": [
        "app#0",
        "result.1.0#0",
        "result.1.1#0",
        "result.1.2#0",
        "tmp%18#0"
      ]
    },
    "1066": {
      "op": "assert",
      "stack_out": [
        "app#0",
        "result.1.0#0",
        "result.1.1#0",
        "result.1.2#0"
      ]
    },
    "1067": {
      "op": "uncover 2",
      "stack_out": [
        "app#0",
        "result.1.1#0",
        "result.1.2#0",
        "result.1.0#0"
      ]
    },
    "1069": {
      "op": "intc_3 // 2",
      "stack_out": [
        "app#0",
        "result.1.1#0",
        "result.1.2#0",
        "result.1.0#0",
        "2"
      ]
    },
    "1070": {
      "op": "==",
      "defined_out": [
        "app#0",
        "result.1.1#0",
        "result.1.2#0",
        "tmp%19#1"
      ],
      "stack_out": [
        "app#0",
        "result.1.1#0",
        "result.1.2#0",
        "tmp%19#1"
      ]
    },
    "1071": {
      "op": "assert",
      "stack_out": [
        "app#0",
        "result.1.1#0",
        "result.1.2#0"
      ]
    },
    "1072": {
      "op": "swap",
      "stack_out": [
        "app#0",
        "result.1.2#0",
        "result.1.1#0"
      ]
    },
    "1073": {
      "op": "bytec 12 // 0x0000000000000003",
      "stack_out": [
        "app#0",
        "result.1.2#0",
        "result.1.1#0",
        "0x0000000000000003"
      ]
    },
    "1075": {
      "op": "b==",
      "defined_out": [
        "app#0",
        "result.1.2#0",
        "tmp%20#1"
      ],
      "stack_out": [
        "app#0",
        "result.1.2#0",
        "tmp%20#1"
      ]
    },
    "1076": {
      "op": "assert",
      "stack_out": [
        "app#0",
        "result.1.2#0"
      ]
    },
    "1077": {
      "op": "bytec 24 // 0x6563686f3a2033",
      "stack_out": [
        "app#0",
        "result.1.2#0",
        "0x6563686f3a2033"
      ]
    },
    "1079": {
      "op": "==",
      "defined_out": [
        "app#0",
        "tmp%21#1"
      ],
      "stack_out": [
        "app#0",
        "tmp%21#1"
      ]
    },
    "1080": {
      "op": "assert",
      "stack_out": [
        "app#0"
      ]
    },
    "1081": {
      "op": "itxn_begin"
    },
    "1082": {
      "op": "itxn_field ApplicationID",
      "stack_out": []
    },
    "1084": {
      "op": "bytec 11 // method \"echo_nested_tuple(((string,string),(uint64,uint64,byte[])))((string,string),(uint64,uint64,byte[]))\"",
      "stack_out": [
        "Method(echo_nested_tuple(((string,string),(uint64,uint64,byte[])))((string,string),(uint64,uint64,byte[])))"
      ]
    },
    "1086": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "1088": {
      "op": "pushbytes 0x000400120004000900037331620003733262000000000000000b0000000000000015001200023362",
      "defined_out": [
        "0x000400120004000900037331620003733262000000000000000b0000000000000015001200023362"
      ],
      "stack_out": [
        "0x000400120004000900037331620003733262000000000000000b0000000000000015001200023362"
      ]
    },
    "1130": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "1132": {
      "op": "intc_1 // appl",
      "stack_out": [
        "appl"
      ]
    },
    "1133": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "1135": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0"
      ]
    },
    "1136": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "1138": {
      "op": "itxn_submit"
    },
    "1139": {
      "op": "itxn LastLog",
      "defined_out": [
        "awst_tmp%2#0"
      ],
      "stack_out": [
        "awst_tmp%2#0"
      ]
    },
    "1141": {
      "op": "dup",
      "defined_out": [
        "awst_tmp%2#0",
        "awst_tmp%2#0 (copy)"
      ],
      "stack_out": [
        "awst_tmp%2#0",
        "awst_tmp%2#0 (copy)"
      ]
    },
    "1142": {
      "op": "extract 4 0",
      "defined_out": [
        "awst_tmp%2#0",
        "tmp%22#1"
      ],
      "stack_out": [
        "awst_tmp%2#0",
        "tmp%22#1"
      ]
    },
    "1145": {
      "op": "swap",
      "stack_out": [
        "tmp%22#1",
        "awst_tmp%2#0"
      ]
    },
    "1146": {
      "op": "extract 0 4",
      "defined_out": [
        "tmp%22#1",
        "tmp%23#1"
      ],
      "stack_out": [
        "tmp%22#1",
        "tmp%23#1"
      ]
    },
    "1149": {
      "op": "bytec_0 // 0x151f7c75",
      "stack_out": [
        "tmp%22#1",
        "tmp%23#1",
        "0x151f7c75"
      ]
    },
    "1150": {
      "op": "==",
      "defined_out": [
        "tmp%22#1",
        "tmp%24#0"
      ],
      "stack_out": [
        "tmp%22#1",
        "tmp%24#0"
      ]
    },
    "1151": {
      "error": "application log value is not the result of an ABI return",
      "op": "assert // application log value is not the result of an ABI return",
      "stack_out": [
        "tmp%22#1"
      ]
    },
    "1152": {
      "op": "dup",
      "defined_out": [
        "tmp%22#1",
        "tmp%22#1 (copy)"
      ],
      "stack_out": [
        "tmp%22#1",
        "tmp%22#1 (copy)"
      ]
    },
    "1153": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%22#1",
        "tmp%22#1 (copy)",
        "0"
      ]
    },
    "1154": {
      "op": "extract_uint16",
      "defined_out": [
        "extract_uint16%14#0",
        "tmp%22#1"
      ],
      "stack_out": [
        "tmp%22#1",
        "extract_uint16%14#0"
      ]
    },
    "1155": {
      "op": "dig 1",
      "stack_out": [
        "tmp%22#1",
        "extract_uint16%14#0",
        "tmp%22#1 (copy)"
      ]
    },
    "1157": {
      "op": "intc_3 // 2",
      "stack_out": [
        "tmp%22#1",
        "extract_uint16%14#0",
        "tmp%22#1 (copy)",
        "2"
      ]
    },
    "1158": {
      "op": "extract_uint16",
      "defined_out": [
        "extract_uint16%14#0",
        "extract_uint16%15#0",
        "tmp%22#1"
      ],
      "stack_out": [
        "tmp%22#1",
        "extract_uint16%14#0",
        "extract_uint16%15#0"
      ]
    },
    "1159": {
      "op": "dig 2",
      "stack_out": [
        "tmp%22#1",
        "extract_uint16%14#0",
        "extract_uint16%15#0",
        "tmp%22#1 (copy)"
      ]
    },
    "1161": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%22#1",
        "extract_uint16%15#0",
        "tmp%22#1 (copy)",
        "extract_uint16%14#0"
      ]
    },
    "1163": {
      "op": "dig 2",
      "defined_out": [
        "extract_uint16%14#0",
        "extract_uint16%15#0",
        "extract_uint16%15#0 (copy)",
        "tmp%22#1",
        "tmp%22#1 (copy)"
      ],
      "stack_out": [
        "tmp%22#1",
        "extract_uint16%15#0",
        "tmp%22#1 (copy)",
        "extract_uint16%14#0",
        "extract_uint16%15#0 (copy)"
      ]
    },
    "1165": {
      "op": "substring3",
      "defined_out": [
        "extract_uint16%15#0",
        "substring3%10#0",
        "tmp%22#1"
      ],
      "stack_out": [
        "tmp%22#1",
        "extract_uint16%15#0",
        "substring3%10#0"
      ]
    },
    "1166": {
      "op": "dup",
      "defined_out": [
        "extract_uint16%15#0",
        "substring3%10#0",
        "substring3%10#0 (copy)",
        "tmp%22#1"
      ],
      "stack_out": [
        "tmp%22#1",
        "extract_uint16%15#0",
        "substring3%10#0",
        "substring3%10#0 (copy)"
      ]
    },
    "1167": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%22#1",
        "extract_uint16%15#0",
        "substring3%10#0",
        "substring3%10#0 (copy)",
        "0"
      ]
    },
    "1168": {
      "op": "extract_uint16",
      "defined_out": [
        "extract_uint16%15#0",
        "extract_uint16%16#0",
        "substring3%10#0",
        "tmp%22#1"
      ],
      "stack_out": [
        "tmp%22#1",
        "extract_uint16%15#0",
        "substring3%10#0",
        "extract_uint16%16#0"
      ]
    },
    "1169": {
      "op": "dig 1",
      "stack_out": [
        "tmp%22#1",
        "extract_uint16%15#0",
        "substring3%10#0",
        "extract_uint16%16#0",
        "substring3%10#0 (copy)"
      ]
    },
    "1171": {
      "op": "intc_3 // 2",
      "stack_out": [
        "tmp%22#1",
        "extract_uint16%15#0",
        "substring3%10#0",
        "extract_uint16%16#0",
        "substring3%10#0 (copy)",
        "2"
      ]
    },
    "1172": {
      "op": "extract_uint16",
      "defined_out": [
        "extract_uint16%15#0",
        "extract_uint16%16#0",
        "extract_uint16%17#0",
        "substring3%10#0",
        "tmp%22#1"
      ],
      "stack_out": [
        "tmp%22#1",
        "extract_uint16%15#0",
        "substring3%10#0",
        "extract_uint16%16#0",
        "extract_uint16%17#0"
      ]
    },
    "1173": {
      "op": "dig 2",
      "stack_out": [
        "tmp%22#1",
        "extract_uint16%15#0",
        "substring3%10#0",
        "extract_uint16%16#0",
        "extract_uint16%17#0",
        "substring3%10#0 (copy)"
      ]
    },
    "1175": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%22#1",
        "extract_uint16%15#0",
        "substring3%10#0",
        "extract_uint16%17#0",
        "substring3%10#0 (copy)",
        "extract_uint16%16#0"
      ]
    },
    "1177": {
      "op": "dig 2",
      "defined_out": [
        "extract_uint16%15#0",
        "extract_uint16%16#0",
        "extract_uint16%17#0",
        "extract_uint16%17#0 (copy)",
        "substring3%10#0",
        "substring3%10#0 (copy)",
        "tmp%22#1"
      ],
      "stack_out": [
        "tmp%22#1",
        "extract_uint16%15#0",
        "substring3%10#0",
        "extract_uint16%17#0",
        "substring3%10#0 (copy)",
        "extract_uint16%16#0",
        "extract_uint16%17#0 (copy)"
      ]
    },
    "1179": {
      "op": "substring3",
      "defined_out": [
        "extract_uint16%15#0",
        "extract_uint16%17#0",
        "substring3%10#0",
        "substring3%11#0",
        "tmp%22#1"
      ],
      "stack_out": [
        "tmp%22#1",
        "extract_uint16%15#0",
        "substring3%10#0",
        "extract_uint16%17#0",
        "substring3%11#0"
      ]
    },
    "1180": {
      "op": "extract 2 0",
      "stack_out": [
        "tmp%22#1",
        "extract_uint16%15#0",
        "substring3%10#0",
        "extract_uint16%17#0",
        "result.0.0#0"
      ]
    },
    "1183": {
      "op": "dig 2",
      "stack_out": [
        "tmp%22#1",
        "extract_uint16%15#0",
        "substring3%10#0",
        "extract_uint16%17#0",
        "result.0.0#0",
        "substring3%10#0 (copy)"
      ]
    },
    "1185": {
      "op": "len",
      "defined_out": [
        "extract_uint16%15#0",
        "extract_uint16%17#0",
        "len%6#0",
        "result.0.0#0",
        "substring3%10#0",
        "tmp%22#1"
      ],
      "stack_out": [
        "tmp%22#1",
        "extract_uint16%15#0",
        "substring3%10#0",
        "extract_uint16%17#0",
        "result.0.0#0",
        "len%6#0"
      ]
    },
    "1186": {
      "op": "swap"
    },
    "1187": {
      "op": "cover 3",
      "stack_out": [
        "tmp%22#1",
        "extract_uint16%15#0",
        "result.0.0#0",
        "substring3%10#0",
        "extract_uint16%17#0",
        "len%6#0"
      ]
    },
    "1189": {
      "op": "substring3",
      "stack_out": [
        "tmp%22#1",
        "extract_uint16%15#0",
        "result.0.0#0",
        "result.0.1#0"
      ]
    },
    "1190": {
      "op": "dig 3",
      "stack_out": [
        "tmp%22#1",
        "extract_uint16%15#0",
        "result.0.0#0",
        "result.0.1#0",
        "tmp%22#1 (copy)"
      ]
    },
    "1192": {
      "op": "len",
      "defined_out": [
        "extract_uint16%15#0",
        "len%7#0",
        "result.0.0#0",
        "result.0.1#0",
        "tmp%22#1"
      ],
      "stack_out": [
        "tmp%22#1",
        "extract_uint16%15#0",
        "result.0.0#0",
        "result.0.1#0",
        "len%7#0"
      ]
    },
    "1193": {
      "op": "uncover 4",
      "stack_out": [
        "extract_uint16%15#0",
        "result.0.0#0",
        "result.0.1#0",
        "len%7#0",
        "tmp%22#1"
      ]
    },
    "1195": {
      "op": "uncover 4",
      "stack_out": [
        "result.0.0#0",
        "result.0.1#0",
        "len%7#0",
        "tmp%22#1",
        "extract_uint16%15#0"
      ]
    },
    "1197": {
      "op": "uncover 2",
      "stack_out": [
        "result.0.0#0",
        "result.0.1#0",
        "tmp%22#1",
        "extract_uint16%15#0",
        "len%7#0"
      ]
    },
    "1199": {
      "op": "substring3",
      "defined_out": [
        "result.0.0#0",
        "result.0.1#0",
        "substring3%13#0"
      ],
      "stack_out": [
        "result.0.0#0",
        "result.0.1#0",
        "substring3%13#0"
      ]
    },
    "1200": {
      "op": "dup",
      "defined_out": [
        "result.0.0#0",
        "result.0.1#0",
        "substring3%13#0",
        "substring3%13#0 (copy)"
      ],
      "stack_out": [
        "result.0.0#0",
        "result.0.1#0",
        "substring3%13#0",
        "substring3%13#0 (copy)"
      ]
    },
    "1201": {
      "op": "intc_0 // 0",
      "stack_out": [
        "result.0.0#0",
        "result.0.1#0",
        "substring3%13#0",
        "substring3%13#0 (copy)",
        "0"
      ]
    },
    "1202": {
      "op": "extract_uint64",
      "stack_out": [
        "result.0.0#0",
        "result.0.1#0",
        "substring3%13#0",
        "result.1.0#0"
      ]
    },
    "1203": {
      "op": "dig 1",
      "stack_out": [
        "result.0.0#0",
        "result.0.1#0",
        "substring3%13#0",
        "result.1.0#0",
        "substring3%13#0 (copy)"
      ]
    },
    "1205": {
      "op": "extract 8 8",
      "stack_out": [
        "result.0.0#0",
        "result.0.1#0",
        "substring3%13#0",
        "result.1.0#0",
        "result.1.1#0"
      ]
    },
    "1208": {
      "op": "dig 2",
      "stack_out": [
        "result.0.0#0",
        "result.0.1#0",
        "substring3%13#0",
        "result.1.0#0",
        "result.1.1#0",
        "substring3%13#0 (copy)"
      ]
    },
    "1210": {
      "op": "pushint 16 // 16",
      "stack_out": [
        "result.0.0#0",
        "result.0.1#0",
        "substring3%13#0",
        "result.1.0#0",
        "result.1.1#0",
        "substring3%13#0 (copy)",
        "16"
      ]
    },
    "1212": {
      "op": "extract_uint16",
      "defined_out": [
        "extract_uint16%20#0",
        "result.0.0#0",
        "result.0.1#0",
        "result.1.0#0",
        "result.1.1#0",
        "substring3%13#0"
      ],
      "stack_out": [
        "result.0.0#0",
        "result.0.1#0",
        "substring3%13#0",
        "result.1.0#0",
        "result.1.1#0",
        "extract_uint16%20#0"
      ]
    },
    "1213": {
      "op": "dig 3",
      "stack_out": [
        "result.0.0#0",
        "result.0.1#0",
        "substring3%13#0",
        "result.1.0#0",
        "result.1.1#0",
        "extract_uint16%20#0",
        "substring3%13#0 (copy)"
      ]
    },
    "1215": {
      "op": "len",
      "defined_out": [
        "extract_uint16%20#0",
        "len%8#0",
        "result.0.0#0",
        "result.0.1#0",
        "result.1.0#0",
        "result.1.1#0",
        "substring3%13#0"
      ],
      "stack_out": [
        "result.0.0#0",
        "result.0.1#0",
        "substring3%13#0",
        "result.1.0#0",
        "result.1.1#0",
        "extract_uint16%20#0",
        "len%8#0"
      ]
    },
    "1216": {
      "op": "uncover 4",
      "stack_out": [
        "result.0.0#0",
        "result.0.1#0",
        "result.1.0#0",
        "result.1.1#0",
        "extract_uint16%20#0",
        "len%8#0",
        "substring3%13#0"
      ]
    },
    "1218": {
      "op": "cover 2",
      "stack_out": [
        "result.0.0#0",
        "result.0.1#0",
        "result.1.0#0",
        "result.1.1#0",
        "substring3%13#0",
        "extract_uint16%20#0",
        "len%8#0"
      ]
    },
    "1220": {
      "op": "substring3",
      "defined_out": [
        "result.0.0#0",
        "result.0.1#0",
        "result.1.0#0",
        "result.1.1#0",
        "substring3%14#0"
      ],
      "stack_out": [
        "result.0.0#0",
        "result.0.1#0",
        "result.1.0#0",
        "result.1.1#0",
        "substring3%14#0"
      ]
    },
    "1221": {
      "op": "extract 2 0",
      "stack_out": [
        "result.0.0#0",
        "result.0.1#0",
        "result.1.0#0",
        "result.1.1#0",
        "result.1.2#0"
      ]
    },
    "1224": {
      "op": "uncover 4",
      "stack_out": [
        "result.0.1#0",
        "result.1.0#0",
        "result.1.1#0",
        "result.1.2#0",
        "result.0.0#0"
      ]
    },
    "1226": {
      "op": "pushbytes \"echo: s1b\"",
      "defined_out": [
        "\"echo: s1b\"",
        "result.0.0#0",
        "result.0.1#0",
        "result.1.0#0",
        "result.1.1#0",
        "result.1.2#0"
      ],
      "stack_out": [
        "result.0.1#0",
        "result.1.0#0",
        "result.1.1#0",
        "result.1.2#0",
        "result.0.0#0",
        "\"echo: s1b\""
      ]
    },
    "1237": {
      "op": "==",
      "defined_out": [
        "result.0.1#0",
        "result.1.0#0",
        "result.1.1#0",
        "result.1.2#0",
        "tmp%28#1"
      ],
      "stack_out": [
        "result.0.1#0",
        "result.1.0#0",
        "result.1.1#0",
        "result.1.2#0",
        "tmp%28#1"
      ]
    },
    "1238": {
      "op": "assert",
      "stack_out": [
        "result.0.1#0",
        "result.1.0#0",
        "result.1.1#0",
        "result.1.2#0"
      ]
    },
    "1239": {
      "op": "uncover 3",
      "stack_out": [
        "result.1.0#0",
        "result.1.1#0",
        "result.1.2#0",
        "result.0.1#0"
      ]
    },
    "1241": {
      "op": "pushbytes 0x00096563686f3a20733262",
      "defined_out": [
        "0x00096563686f3a20733262",
        "result.0.1#0",
        "result.1.0#0",
        "result.1.1#0",
        "result.1.2#0"
      ],
      "stack_out": [
        "result.1.0#0",
        "result.1.1#0",
        "result.1.2#0",
        "result.0.1#0",
        "0x00096563686f3a20733262"
      ]
    },
    "1254": {
      "op": "==",
      "defined_out": [
        "result.1.0#0",
        "result.1.1#0",
        "result.1.2#0",
        "tmp%29#1"
      ],
      "stack_out": [
        "result.1.0#0",
        "result.1.1#0",
        "result.1.2#0",
        "tmp%29#1"
      ]
    },
    "1255": {
      "op": "assert",
      "stack_out": [
        "result.1.0#0",
        "result.1.1#0",
        "result.1.2#0"
      ]
    },
    "1256": {
      "op": "uncover 2",
      "stack_out": [
        "result.1.1#0",
        "result.1.2#0",
        "result.1.0#0"
      ]
    },
    "1258": {
      "op": "pushint 12 // 12",
      "defined_out": [
        "12",
        "result.1.0#0",
        "result.1.1#0",
        "result.1.2#0"
      ],
      "stack_out": [
        "result.1.1#0",
        "result.1.2#0",
        "result.1.0#0",
        "12"
      ]
    },
    "1260": {
      "op": "==",
      "defined_out": [
        "result.1.1#0",
        "result.1.2#0",
        "tmp%30#0"
      ],
      "stack_out": [
        "result.1.1#0",
        "result.1.2#0",
        "tmp%30#0"
      ]
    },
    "1261": {
      "op": "assert",
      "stack_out": [
        "result.1.1#0",
        "result.1.2#0"
      ]
    },
    "1262": {
      "op": "swap",
      "stack_out": [
        "result.1.2#0",
        "result.1.1#0"
      ]
    },
    "1263": {
      "op": "pushbytes 0x0000000000000016",
      "defined_out": [
        "0x0000000000000016",
        "result.1.1#0",
        "result.1.2#0"
      ],
      "stack_out": [
        "result.1.2#0",
        "result.1.1#0",
        "0x0000000000000016"
      ]
    },
    "1273": {
      "op": "b==",
      "defined_out": [
        "result.1.2#0",
        "tmp%31#1"
      ],
      "stack_out": [
        "result.1.2#0",
        "tmp%31#1"
      ]
    },
    "1274": {
      "op": "assert",
      "stack_out": [
        "result.1.2#0"
      ]
    },
    "1275": {
      "op": "pushbytes 0x6563686f3a203362",
      "defined_out": [
        "0x6563686f3a203362",
        "result.1.2#0"
      ],
      "stack_out": [
        "result.1.2#0",
        "0x6563686f3a203362"
      ]
    },
    "1285": {
      "op": "==",
      "defined_out": [
        "tmp%32#1"
      ],
      "stack_out": [
        "tmp%32#1"
      ]
    },
    "1286": {
      "op": "assert",
      "stack_out": []
    },
    "1287": {
      "op": "intc_2 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1288": {
      "op": "return",
      "stack_out": []
    },
    "1289": {
      "block": "main_test_native_tuple_method_ref_route@16",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%85#0"
      ],
      "stack_out": [
        "tmp%85#0"
      ]
    },
    "1291": {
      "op": "!",
      "defined_out": [
        "tmp%86#0"
      ],
      "stack_out": [
        "tmp%86#0"
      ]
    },
    "1292": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "1293": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%87#0"
      ],
      "stack_out": [
        "tmp%87#0"
      ]
    },
    "1295": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "1296": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded(uint8)%14#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint8)%14#0"
      ]
    },
    "1299": {
      "op": "btoi",
      "defined_out": [
        "tmp%89#0"
      ],
      "stack_out": [
        "tmp%89#0"
      ]
    },
    "1300": {
      "op": "txnas Applications",
      "defined_out": [
        "app#0"
      ],
      "stack_out": [
        "app#0"
      ]
    },
    "1302": {
      "op": "itxn_begin"
    },
    "1303": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "app#0 (copy)"
      ],
      "stack_out": [
        "app#0",
        "app#0 (copy)"
      ]
    },
    "1304": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "app#0"
      ]
    },
    "1306": {
      "op": "bytec 4 // method \"echo_native_tuple(string,byte[],uint64,uint512)(string,byte[],uint64,uint512)\"",
      "defined_out": [
        "Method(echo_native_tuple(string,byte[],uint64,uint512)(string,byte[],uint64,uint512))",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "Method(echo_native_tuple(string,byte[],uint64,uint512)(string,byte[],uint64,uint512))"
      ]
    },
    "1308": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0"
      ]
    },
    "1310": {
      "op": "bytec 5 // 0x00027331",
      "defined_out": [
        "0x00027331",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "0x00027331"
      ]
    },
    "1312": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0"
      ]
    },
    "1314": {
      "op": "bytec 6 // 0x00026231",
      "defined_out": [
        "0x00026231",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "0x00026231"
      ]
    },
    "1316": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0"
      ]
    },
    "1318": {
      "op": "bytec_2 // 0x0000000000000001",
      "defined_out": [
        "0x0000000000000001",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "0x0000000000000001"
      ]
    },
    "1319": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0"
      ]
    },
    "1321": {
      "op": "bytec_1 // 0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002",
      "defined_out": [
        "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002"
      ]
    },
    "1322": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0"
      ]
    },
    "1324": {
      "op": "intc_1 // appl",
      "defined_out": [
        "app#0",
        "appl"
      ],
      "stack_out": [
        "app#0",
        "appl"
      ]
    },
    "1325": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "app#0"
      ]
    },
    "1327": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "0"
      ]
    },
    "1328": {
      "op": "itxn_field Fee",
      "stack_out": [
        "app#0"
      ]
    },
    "1330": {
      "op": "itxn_submit"
    },
    "1331": {
      "op": "itxn LastLog",
      "defined_out": [
        "app#0",
        "awst_tmp%0#0"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0"
      ]
    },
    "1333": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ]
    },
    "1334": {
      "op": "extract 4 0",
      "defined_out": [
        "app#0",
        "awst_tmp%0#0",
        "tmp%0#2"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "tmp%0#2"
      ]
    },
    "1337": {
      "op": "dig 1",
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "tmp%0#2",
        "awst_tmp%0#0 (copy)"
      ]
    },
    "1339": {
      "op": "extract 0 4",
      "defined_out": [
        "app#0",
        "awst_tmp%0#0",
        "tmp%0#2",
        "tmp%1#1"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "tmp%0#2",
        "tmp%1#1"
      ]
    },
    "1342": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "app#0",
        "awst_tmp%0#0",
        "tmp%0#2",
        "tmp%1#1"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "tmp%0#2",
        "tmp%1#1",
        "0x151f7c75"
      ]
    },
    "1343": {
      "op": "==",
      "defined_out": [
        "app#0",
        "awst_tmp%0#0",
        "tmp%0#2",
        "tmp%2#1"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "tmp%0#2",
        "tmp%2#1"
      ]
    },
    "1344": {
      "error": "application log value is not the result of an ABI return",
      "op": "assert // application log value is not the result of an ABI return",
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "tmp%0#2"
      ]
    },
    "1345": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "awst_tmp%0#0",
        "tmp%0#2",
        "tmp%0#2 (copy)"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "tmp%0#2",
        "tmp%0#2 (copy)"
      ]
    },
    "1346": {
      "op": "intc_0 // 0",
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "tmp%0#2",
        "tmp%0#2 (copy)",
        "0"
      ]
    },
    "1347": {
      "op": "extract_uint16",
      "defined_out": [
        "app#0",
        "awst_tmp%0#0",
        "extract_uint16%0#0",
        "tmp%0#2"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "tmp%0#2",
        "extract_uint16%0#0"
      ]
    },
    "1348": {
      "op": "dig 1",
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "tmp%0#2",
        "extract_uint16%0#0",
        "tmp%0#2 (copy)"
      ]
    },
    "1350": {
      "op": "intc_3 // 2",
      "defined_out": [
        "2",
        "app#0",
        "awst_tmp%0#0",
        "extract_uint16%0#0",
        "tmp%0#2",
        "tmp%0#2 (copy)"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "tmp%0#2",
        "extract_uint16%0#0",
        "tmp%0#2 (copy)",
        "2"
      ]
    },
    "1351": {
      "op": "extract_uint16",
      "defined_out": [
        "app#0",
        "awst_tmp%0#0",
        "extract_uint16%0#0",
        "extract_uint16%1#0",
        "tmp%0#2"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "tmp%0#2",
        "extract_uint16%0#0",
        "extract_uint16%1#0"
      ]
    },
    "1352": {
      "op": "dig 2",
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "tmp%0#2",
        "extract_uint16%0#0",
        "extract_uint16%1#0",
        "tmp%0#2 (copy)"
      ]
    },
    "1354": {
      "op": "uncover 2",
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "tmp%0#2",
        "extract_uint16%1#0",
        "tmp%0#2 (copy)",
        "extract_uint16%0#0"
      ]
    },
    "1356": {
      "op": "dig 2",
      "defined_out": [
        "app#0",
        "awst_tmp%0#0",
        "extract_uint16%0#0",
        "extract_uint16%1#0",
        "extract_uint16%1#0 (copy)",
        "tmp%0#2",
        "tmp%0#2 (copy)"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "tmp%0#2",
        "extract_uint16%1#0",
        "tmp%0#2 (copy)",
        "extract_uint16%0#0",
        "extract_uint16%1#0 (copy)"
      ]
    },
    "1358": {
      "op": "substring3",
      "defined_out": [
        "app#0",
        "awst_tmp%0#0",
        "extract_uint16%1#0",
        "substring3%0#0",
        "tmp%0#2"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "tmp%0#2",
        "extract_uint16%1#0",
        "substring3%0#0"
      ]
    },
    "1359": {
      "op": "extract 2 0",
      "defined_out": [
        "app#0",
        "awst_tmp%0#0",
        "extract_uint16%1#0",
        "result.0#0",
        "tmp%0#2"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "tmp%0#2",
        "extract_uint16%1#0",
        "result.0#0"
      ]
    },
    "1362": {
      "op": "dig 2",
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "tmp%0#2",
        "extract_uint16%1#0",
        "result.0#0",
        "tmp%0#2 (copy)"
      ]
    },
    "1364": {
      "op": "len",
      "defined_out": [
        "app#0",
        "awst_tmp%0#0",
        "extract_uint16%1#0",
        "len%0#0",
        "result.0#0",
        "tmp%0#2"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "tmp%0#2",
        "extract_uint16%1#0",
        "result.0#0",
        "len%0#0"
      ]
    },
    "1365": {
      "op": "swap"
    },
    "1366": {
      "op": "cover 3",
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "result.0#0",
        "tmp%0#2",
        "extract_uint16%1#0",
        "len%0#0"
      ]
    },
    "1368": {
      "op": "substring3",
      "defined_out": [
        "app#0",
        "awst_tmp%0#0",
        "result.0#0",
        "substring3%1#0"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "result.0#0",
        "substring3%1#0"
      ]
    },
    "1369": {
      "op": "extract 2 0",
      "defined_out": [
        "app#0",
        "awst_tmp%0#0",
        "result.0#0",
        "result.1#0"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "result.0#0",
        "result.1#0"
      ]
    },
    "1372": {
      "op": "dig 2",
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "result.0#0",
        "result.1#0",
        "awst_tmp%0#0 (copy)"
      ]
    },
    "1374": {
      "op": "pushint 8 // 8",
      "defined_out": [
        "8",
        "app#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)",
        "result.0#0",
        "result.1#0"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "result.0#0",
        "result.1#0",
        "awst_tmp%0#0 (copy)",
        "8"
      ]
    },
    "1376": {
      "op": "extract_uint64",
      "defined_out": [
        "app#0",
        "awst_tmp%0#0",
        "result.0#0",
        "result.1#0",
        "result.2#0"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "result.0#0",
        "result.1#0",
        "result.2#0"
      ]
    },
    "1377": {
      "op": "uncover 3",
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "awst_tmp%0#0"
      ]
    },
    "1379": {
      "op": "extract 16 64",
      "defined_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0"
      ],
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0"
      ]
    },
    "1382": {
      "op": "dig 3",
      "defined_out": [
        "app#0",
        "result.0#0",
        "result.0#0 (copy)",
        "result.1#0",
        "result.2#0",
        "result.3#0"
      ],
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "result.0#0 (copy)"
      ]
    },
    "1384": {
      "op": "bytec 9 // \"echo: s1\"",
      "defined_out": [
        "\"echo: s1\"",
        "app#0",
        "result.0#0",
        "result.0#0 (copy)",
        "result.1#0",
        "result.2#0",
        "result.3#0"
      ],
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "result.0#0 (copy)",
        "\"echo: s1\""
      ]
    },
    "1386": {
      "op": "==",
      "defined_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "tmp%6#1"
      ],
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "tmp%6#1"
      ]
    },
    "1387": {
      "op": "assert",
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0"
      ]
    },
    "1388": {
      "op": "dig 2",
      "defined_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.1#0 (copy)",
        "result.2#0",
        "result.3#0"
      ],
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "result.1#0 (copy)"
      ]
    },
    "1390": {
      "op": "bytec 25 // 0x6563686f3a206231",
      "defined_out": [
        "0x6563686f3a206231",
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.1#0 (copy)",
        "result.2#0",
        "result.3#0"
      ],
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "result.1#0 (copy)",
        "0x6563686f3a206231"
      ]
    },
    "1392": {
      "op": "==",
      "defined_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "tmp%7#1"
      ],
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "tmp%7#1"
      ]
    },
    "1393": {
      "op": "assert",
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0"
      ]
    },
    "1394": {
      "op": "dig 1",
      "defined_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.2#0 (copy)",
        "result.3#0"
      ],
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "result.2#0 (copy)"
      ]
    },
    "1396": {
      "op": "intc_3 // 2",
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "result.2#0 (copy)",
        "2"
      ]
    },
    "1397": {
      "op": "==",
      "defined_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "tmp%8#1"
      ],
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "tmp%8#1"
      ]
    },
    "1398": {
      "op": "assert",
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0"
      ]
    },
    "1399": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "result.3#0 (copy)"
      ],
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "result.3#0 (copy)"
      ]
    },
    "1400": {
      "op": "bytec 13 // 0x03",
      "defined_out": [
        "0x03",
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "result.3#0 (copy)"
      ],
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "result.3#0 (copy)",
        "0x03"
      ]
    },
    "1402": {
      "op": "b==",
      "defined_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "tmp%9#1"
      ],
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "tmp%9#1"
      ]
    },
    "1403": {
      "op": "assert",
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0"
      ]
    },
    "1404": {
      "op": "itxn_begin"
    },
    "1405": {
      "op": "intc_2 // 1",
      "defined_out": [
        "1",
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0"
      ],
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "1"
      ]
    },
    "1406": {
      "op": "itob",
      "defined_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "val_as_bytes%0#1"
      ],
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "val_as_bytes%0#1"
      ]
    },
    "1407": {
      "op": "dig 5",
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "val_as_bytes%0#1",
        "app#0 (copy)"
      ]
    },
    "1409": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "val_as_bytes%0#1"
      ]
    },
    "1411": {
      "op": "bytec 4 // method \"echo_native_tuple(string,byte[],uint64,uint512)(string,byte[],uint64,uint512)\"",
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "val_as_bytes%0#1",
        "Method(echo_native_tuple(string,byte[],uint64,uint512)(string,byte[],uint64,uint512))"
      ]
    },
    "1413": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "val_as_bytes%0#1"
      ]
    },
    "1415": {
      "op": "bytec 5 // 0x00027331",
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "val_as_bytes%0#1",
        "0x00027331"
      ]
    },
    "1417": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "val_as_bytes%0#1"
      ]
    },
    "1419": {
      "op": "bytec 6 // 0x00026231",
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "val_as_bytes%0#1",
        "0x00026231"
      ]
    },
    "1421": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "val_as_bytes%0#1"
      ]
    },
    "1423": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0"
      ]
    },
    "1425": {
      "op": "bytec_1 // 0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002",
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002"
      ]
    },
    "1426": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0"
      ]
    },
    "1428": {
      "op": "intc_1 // appl",
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "appl"
      ]
    },
    "1429": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0"
      ]
    },
    "1431": {
      "op": "intc_0 // 0",
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "0"
      ]
    },
    "1432": {
      "op": "itxn_field Fee",
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0"
      ]
    },
    "1434": {
      "op": "itxn_submit"
    },
    "1435": {
      "op": "itxn LastLog",
      "defined_out": [
        "app#0",
        "awst_tmp%1#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0"
      ],
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "awst_tmp%1#0"
      ]
    },
    "1437": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "awst_tmp%1#0",
        "awst_tmp%1#0 (copy)",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0"
      ],
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "awst_tmp%1#0",
        "awst_tmp%1#0 (copy)"
      ]
    },
    "1438": {
      "op": "extract 4 0",
      "defined_out": [
        "app#0",
        "awst_tmp%1#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "tmp%10#1"
      ],
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "awst_tmp%1#0",
        "tmp%10#1"
      ]
    },
    "1441": {
      "op": "dig 1",
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "awst_tmp%1#0",
        "tmp%10#1",
        "awst_tmp%1#0 (copy)"
      ]
    },
    "1443": {
      "op": "extract 0 4",
      "defined_out": [
        "app#0",
        "awst_tmp%1#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "tmp%10#1",
        "tmp%11#2"
      ],
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "awst_tmp%1#0",
        "tmp%10#1",
        "tmp%11#2"
      ]
    },
    "1446": {
      "op": "bytec_0 // 0x151f7c75",
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "awst_tmp%1#0",
        "tmp%10#1",
        "tmp%11#2",
        "0x151f7c75"
      ]
    },
    "1447": {
      "op": "==",
      "defined_out": [
        "app#0",
        "awst_tmp%1#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "tmp%10#1",
        "tmp%12#0"
      ],
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "awst_tmp%1#0",
        "tmp%10#1",
        "tmp%12#0"
      ]
    },
    "1448": {
      "error": "application log value is not the result of an ABI return",
      "op": "assert // application log value is not the result of an ABI return",
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "awst_tmp%1#0",
        "tmp%10#1"
      ]
    },
    "1449": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "awst_tmp%1#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "tmp%10#1",
        "tmp%10#1 (copy)"
      ],
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "awst_tmp%1#0",
        "tmp%10#1",
        "tmp%10#1 (copy)"
      ]
    },
    "1450": {
      "op": "intc_0 // 0",
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "awst_tmp%1#0",
        "tmp%10#1",
        "tmp%10#1 (copy)",
        "0"
      ]
    },
    "1451": {
      "op": "extract_uint16",
      "defined_out": [
        "app#0",
        "awst_tmp%1#0",
        "extract_uint16%3#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "tmp%10#1"
      ],
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "awst_tmp%1#0",
        "tmp%10#1",
        "extract_uint16%3#0"
      ]
    },
    "1452": {
      "op": "dig 1",
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "awst_tmp%1#0",
        "tmp%10#1",
        "extract_uint16%3#0",
        "tmp%10#1 (copy)"
      ]
    },
    "1454": {
      "op": "intc_3 // 2",
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "awst_tmp%1#0",
        "tmp%10#1",
        "extract_uint16%3#0",
        "tmp%10#1 (copy)",
        "2"
      ]
    },
    "1455": {
      "op": "extract_uint16",
      "defined_out": [
        "app#0",
        "awst_tmp%1#0",
        "extract_uint16%3#0",
        "extract_uint16%4#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "tmp%10#1"
      ],
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "awst_tmp%1#0",
        "tmp%10#1",
        "extract_uint16%3#0",
        "extract_uint16%4#0"
      ]
    },
    "1456": {
      "op": "dig 2",
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "awst_tmp%1#0",
        "tmp%10#1",
        "extract_uint16%3#0",
        "extract_uint16%4#0",
        "tmp%10#1 (copy)"
      ]
    },
    "1458": {
      "op": "uncover 2",
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "awst_tmp%1#0",
        "tmp%10#1",
        "extract_uint16%4#0",
        "tmp%10#1 (copy)",
        "extract_uint16%3#0"
      ]
    },
    "1460": {
      "op": "dig 2",
      "defined_out": [
        "app#0",
        "awst_tmp%1#0",
        "extract_uint16%3#0",
        "extract_uint16%4#0",
        "extract_uint16%4#0 (copy)",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "tmp%10#1",
        "tmp%10#1 (copy)"
      ],
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "awst_tmp%1#0",
        "tmp%10#1",
        "extract_uint16%4#0",
        "tmp%10#1 (copy)",
        "extract_uint16%3#0",
        "extract_uint16%4#0 (copy)"
      ]
    },
    "1462": {
      "op": "substring3",
      "defined_out": [
        "app#0",
        "awst_tmp%1#0",
        "extract_uint16%4#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "substring3%2#0",
        "tmp%10#1"
      ],
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "awst_tmp%1#0",
        "tmp%10#1",
        "extract_uint16%4#0",
        "substring3%2#0"
      ]
    },
    "1463": {
      "op": "extract 2 0",
      "defined_out": [
        "app#0",
        "awst_tmp%1#0",
        "extract_uint16%4#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "result_2.0#0",
        "tmp%10#1"
      ],
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "awst_tmp%1#0",
        "tmp%10#1",
        "extract_uint16%4#0",
        "result_2.0#0"
      ]
    },
    "1466": {
      "op": "dig 2",
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "awst_tmp%1#0",
        "tmp%10#1",
        "extract_uint16%4#0",
        "result_2.0#0",
        "tmp%10#1 (copy)"
      ]
    },
    "1468": {
      "op": "len",
      "defined_out": [
        "app#0",
        "awst_tmp%1#0",
        "extract_uint16%4#0",
        "len%1#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "result_2.0#0",
        "tmp%10#1"
      ],
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "awst_tmp%1#0",
        "tmp%10#1",
        "extract_uint16%4#0",
        "result_2.0#0",
        "len%1#0"
      ]
    },
    "1469": {
      "op": "swap"
    },
    "1470": {
      "op": "cover 3",
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "awst_tmp%1#0",
        "result_2.0#0",
        "tmp%10#1",
        "extract_uint16%4#0",
        "len%1#0"
      ]
    },
    "1472": {
      "op": "substring3",
      "defined_out": [
        "app#0",
        "awst_tmp%1#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "result_2.0#0",
        "substring3%3#0"
      ],
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "awst_tmp%1#0",
        "result_2.0#0",
        "substring3%3#0"
      ]
    },
    "1473": {
      "op": "extract 2 0",
      "defined_out": [
        "app#0",
        "awst_tmp%1#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "result_2.0#0",
        "result_2.1#0"
      ],
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "awst_tmp%1#0",
        "result_2.0#0",
        "result_2.1#0"
      ]
    },
    "1476": {
      "op": "dig 2",
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "awst_tmp%1#0",
        "result_2.0#0",
        "result_2.1#0",
        "awst_tmp%1#0 (copy)"
      ]
    },
    "1478": {
      "op": "pushint 8 // 8",
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "awst_tmp%1#0",
        "result_2.0#0",
        "result_2.1#0",
        "awst_tmp%1#0 (copy)",
        "8"
      ]
    },
    "1480": {
      "op": "extract_uint64",
      "defined_out": [
        "app#0",
        "awst_tmp%1#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "result_2.0#0",
        "result_2.1#0",
        "result_2.2#0"
      ],
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "awst_tmp%1#0",
        "result_2.0#0",
        "result_2.1#0",
        "result_2.2#0"
      ]
    },
    "1481": {
      "op": "uncover 3",
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "result_2.0#0",
        "result_2.1#0",
        "result_2.2#0",
        "awst_tmp%1#0"
      ]
    },
    "1483": {
      "op": "extract 16 64",
      "defined_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "result_2.0#0",
        "result_2.1#0",
        "result_2.2#0",
        "result_2.3#0"
      ],
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "result_2.0#0",
        "result_2.1#0",
        "result_2.2#0",
        "result_2.3#0"
      ]
    },
    "1486": {
      "op": "uncover 3",
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "result_2.1#0",
        "result_2.2#0",
        "result_2.3#0",
        "result_2.0#0"
      ]
    },
    "1488": {
      "op": "dig 7",
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "result_2.1#0",
        "result_2.2#0",
        "result_2.3#0",
        "result_2.0#0",
        "result.0#0 (copy)"
      ]
    },
    "1490": {
      "op": "==",
      "defined_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "result_2.1#0",
        "result_2.2#0",
        "result_2.3#0",
        "tmp%16#1"
      ],
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "result_2.1#0",
        "result_2.2#0",
        "result_2.3#0",
        "tmp%16#1"
      ]
    },
    "1491": {
      "op": "uncover 3",
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "result_2.2#0",
        "result_2.3#0",
        "tmp%16#1",
        "result_2.1#0"
      ]
    },
    "1493": {
      "op": "dig 6",
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "result_2.2#0",
        "result_2.3#0",
        "tmp%16#1",
        "result_2.1#0",
        "result.1#0 (copy)"
      ]
    },
    "1495": {
      "op": "==",
      "defined_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "result_2.2#0",
        "result_2.3#0",
        "tmp%16#1",
        "tmp%17#1"
      ],
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "result_2.2#0",
        "result_2.3#0",
        "tmp%16#1",
        "tmp%17#1"
      ]
    },
    "1496": {
      "op": "&&",
      "defined_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "result_2.2#0",
        "result_2.3#0",
        "tmp%18#0"
      ],
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "result_2.2#0",
        "result_2.3#0",
        "tmp%18#0"
      ]
    },
    "1497": {
      "op": "uncover 2",
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "result_2.3#0",
        "tmp%18#0",
        "result_2.2#0"
      ]
    },
    "1499": {
      "op": "dig 4",
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "result_2.3#0",
        "tmp%18#0",
        "result_2.2#0",
        "result.2#0 (copy)"
      ]
    },
    "1501": {
      "op": "==",
      "defined_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "result_2.3#0",
        "tmp%18#0",
        "tmp%19#1"
      ],
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "result_2.3#0",
        "tmp%18#0",
        "tmp%19#1"
      ]
    },
    "1502": {
      "op": "&&",
      "defined_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "result_2.3#0",
        "tmp%20#1"
      ],
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "result_2.3#0",
        "tmp%20#1"
      ]
    },
    "1503": {
      "op": "swap",
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "tmp%20#1",
        "result_2.3#0"
      ]
    },
    "1504": {
      "op": "dig 2",
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "tmp%20#1",
        "result_2.3#0",
        "result.3#0 (copy)"
      ]
    },
    "1506": {
      "op": "b==",
      "defined_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "tmp%20#1",
        "tmp%21#1"
      ],
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "tmp%20#1",
        "tmp%21#1"
      ]
    },
    "1507": {
      "op": "&&",
      "defined_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "tmp%22#2"
      ],
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "tmp%22#2"
      ]
    },
    "1508": {
      "error": "expected native arguments to give the same result",
      "op": "assert // expected native arguments to give the same result",
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0"
      ]
    },
    "1509": {
      "op": "itxn_begin"
    },
    "1510": {
      "op": "dig 4",
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "app#0 (copy)"
      ]
    },
    "1512": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0"
      ]
    },
    "1514": {
      "op": "bytec 4 // method \"echo_native_tuple(string,byte[],uint64,uint512)(string,byte[],uint64,uint512)\"",
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "Method(echo_native_tuple(string,byte[],uint64,uint512)(string,byte[],uint64,uint512))"
      ]
    },
    "1516": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0"
      ]
    },
    "1518": {
      "op": "bytec 5 // 0x00027331",
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "0x00027331"
      ]
    },
    "1520": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0"
      ]
    },
    "1522": {
      "op": "bytec 6 // 0x00026231",
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "0x00026231"
      ]
    },
    "1524": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0"
      ]
    },
    "1526": {
      "op": "bytec_2 // 0x0000000000000001",
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "0x0000000000000001"
      ]
    },
    "1527": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0"
      ]
    },
    "1529": {
      "op": "bytec_1 // 0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002",
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002"
      ]
    },
    "1530": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0"
      ]
    },
    "1532": {
      "op": "intc_1 // appl",
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "appl"
      ]
    },
    "1533": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0"
      ]
    },
    "1535": {
      "op": "intc_0 // 0",
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "0"
      ]
    },
    "1536": {
      "op": "itxn_field Fee",
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0"
      ]
    },
    "1538": {
      "op": "itxn_submit"
    },
    "1539": {
      "op": "itxn LastLog",
      "defined_out": [
        "app#0",
        "awst_tmp%2#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0"
      ],
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "awst_tmp%2#0"
      ]
    },
    "1541": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "awst_tmp%2#0",
        "awst_tmp%2#0 (copy)",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0"
      ],
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "awst_tmp%2#0",
        "awst_tmp%2#0 (copy)"
      ]
    },
    "1542": {
      "op": "extract 4 0",
      "defined_out": [
        "app#0",
        "awst_tmp%2#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "tmp%23#1"
      ],
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "awst_tmp%2#0",
        "tmp%23#1"
      ]
    },
    "1545": {
      "op": "dig 1",
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "awst_tmp%2#0",
        "tmp%23#1",
        "awst_tmp%2#0 (copy)"
      ]
    },
    "1547": {
      "op": "extract 0 4",
      "defined_out": [
        "app#0",
        "awst_tmp%2#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "tmp%23#1",
        "tmp%24#2"
      ],
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "awst_tmp%2#0",
        "tmp%23#1",
        "tmp%24#2"
      ]
    },
    "1550": {
      "op": "bytec_0 // 0x151f7c75",
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "awst_tmp%2#0",
        "tmp%23#1",
        "tmp%24#2",
        "0x151f7c75"
      ]
    },
    "1551": {
      "op": "==",
      "defined_out": [
        "app#0",
        "awst_tmp%2#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "tmp%23#1",
        "tmp%25#1"
      ],
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "awst_tmp%2#0",
        "tmp%23#1",
        "tmp%25#1"
      ]
    },
    "1552": {
      "error": "application log value is not the result of an ABI return",
      "op": "assert // application log value is not the result of an ABI return",
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "awst_tmp%2#0",
        "tmp%23#1"
      ]
    },
    "1553": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "awst_tmp%2#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "tmp%23#1",
        "tmp%23#1 (copy)"
      ],
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "awst_tmp%2#0",
        "tmp%23#1",
        "tmp%23#1 (copy)"
      ]
    },
    "1554": {
      "op": "intc_0 // 0",
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "awst_tmp%2#0",
        "tmp%23#1",
        "tmp%23#1 (copy)",
        "0"
      ]
    },
    "1555": {
      "op": "extract_uint16",
      "defined_out": [
        "app#0",
        "awst_tmp%2#0",
        "extract_uint16%6#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "tmp%23#1"
      ],
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "awst_tmp%2#0",
        "tmp%23#1",
        "extract_uint16%6#0"
      ]
    },
    "1556": {
      "op": "dig 1",
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "awst_tmp%2#0",
        "tmp%23#1",
        "extract_uint16%6#0",
        "tmp%23#1 (copy)"
      ]
    },
    "1558": {
      "op": "intc_3 // 2",
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "awst_tmp%2#0",
        "tmp%23#1",
        "extract_uint16%6#0",
        "tmp%23#1 (copy)",
        "2"
      ]
    },
    "1559": {
      "op": "extract_uint16",
      "defined_out": [
        "app#0",
        "awst_tmp%2#0",
        "extract_uint16%6#0",
        "extract_uint16%7#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "tmp%23#1"
      ],
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "awst_tmp%2#0",
        "tmp%23#1",
        "extract_uint16%6#0",
        "extract_uint16%7#0"
      ]
    },
    "1560": {
      "op": "dig 2",
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "awst_tmp%2#0",
        "tmp%23#1",
        "extract_uint16%6#0",
        "extract_uint16%7#0",
        "tmp%23#1 (copy)"
      ]
    },
    "1562": {
      "op": "uncover 2",
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "awst_tmp%2#0",
        "tmp%23#1",
        "extract_uint16%7#0",
        "tmp%23#1 (copy)",
        "extract_uint16%6#0"
      ]
    },
    "1564": {
      "op": "dig 2",
      "defined_out": [
        "app#0",
        "awst_tmp%2#0",
        "extract_uint16%6#0",
        "extract_uint16%7#0",
        "extract_uint16%7#0 (copy)",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "tmp%23#1",
        "tmp%23#1 (copy)"
      ],
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "awst_tmp%2#0",
        "tmp%23#1",
        "extract_uint16%7#0",
        "tmp%23#1 (copy)",
        "extract_uint16%6#0",
        "extract_uint16%7#0 (copy)"
      ]
    },
    "1566": {
      "op": "substring3",
      "defined_out": [
        "app#0",
        "awst_tmp%2#0",
        "extract_uint16%7#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "substring3%4#0",
        "tmp%23#1"
      ],
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "awst_tmp%2#0",
        "tmp%23#1",
        "extract_uint16%7#0",
        "substring3%4#0"
      ]
    },
    "1567": {
      "op": "extract 2 0",
      "defined_out": [
        "app#0",
        "awst_tmp%2#0",
        "extract_uint16%7#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "result_3.0#0",
        "tmp%23#1"
      ],
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "awst_tmp%2#0",
        "tmp%23#1",
        "extract_uint16%7#0",
        "result_3.0#0"
      ]
    },
    "1570": {
      "op": "dig 2",
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "awst_tmp%2#0",
        "tmp%23#1",
        "extract_uint16%7#0",
        "result_3.0#0",
        "tmp%23#1 (copy)"
      ]
    },
    "1572": {
      "op": "len",
      "defined_out": [
        "app#0",
        "awst_tmp%2#0",
        "extract_uint16%7#0",
        "len%2#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "result_3.0#0",
        "tmp%23#1"
      ],
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "awst_tmp%2#0",
        "tmp%23#1",
        "extract_uint16%7#0",
        "result_3.0#0",
        "len%2#0"
      ]
    },
    "1573": {
      "op": "swap"
    },
    "1574": {
      "op": "cover 3",
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "awst_tmp%2#0",
        "result_3.0#0",
        "tmp%23#1",
        "extract_uint16%7#0",
        "len%2#0"
      ]
    },
    "1576": {
      "op": "substring3",
      "defined_out": [
        "app#0",
        "awst_tmp%2#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "result_3.0#0",
        "substring3%5#0"
      ],
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "awst_tmp%2#0",
        "result_3.0#0",
        "substring3%5#0"
      ]
    },
    "1577": {
      "op": "extract 2 0",
      "defined_out": [
        "app#0",
        "awst_tmp%2#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "result_3.0#0",
        "result_3.1#0"
      ],
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "awst_tmp%2#0",
        "result_3.0#0",
        "result_3.1#0"
      ]
    },
    "1580": {
      "op": "dig 2",
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "awst_tmp%2#0",
        "result_3.0#0",
        "result_3.1#0",
        "awst_tmp%2#0 (copy)"
      ]
    },
    "1582": {
      "op": "pushint 8 // 8",
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "awst_tmp%2#0",
        "result_3.0#0",
        "result_3.1#0",
        "awst_tmp%2#0 (copy)",
        "8"
      ]
    },
    "1584": {
      "op": "extract_uint64",
      "defined_out": [
        "app#0",
        "awst_tmp%2#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "result_3.0#0",
        "result_3.1#0",
        "result_3.2#0"
      ],
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "awst_tmp%2#0",
        "result_3.0#0",
        "result_3.1#0",
        "result_3.2#0"
      ]
    },
    "1585": {
      "op": "uncover 3",
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "result_3.0#0",
        "result_3.1#0",
        "result_3.2#0",
        "awst_tmp%2#0"
      ]
    },
    "1587": {
      "op": "extract 16 64",
      "defined_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "result_3.0#0",
        "result_3.1#0",
        "result_3.2#0",
        "result_3.3#0"
      ],
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "result_3.0#0",
        "result_3.1#0",
        "result_3.2#0",
        "result_3.3#0"
      ]
    },
    "1590": {
      "op": "uncover 3",
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "result_3.1#0",
        "result_3.2#0",
        "result_3.3#0",
        "result_3.0#0"
      ]
    },
    "1592": {
      "op": "dig 7",
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "result_3.1#0",
        "result_3.2#0",
        "result_3.3#0",
        "result_3.0#0",
        "result.0#0 (copy)"
      ]
    },
    "1594": {
      "op": "==",
      "defined_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "result_3.1#0",
        "result_3.2#0",
        "result_3.3#0",
        "tmp%29#1"
      ],
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "result_3.1#0",
        "result_3.2#0",
        "result_3.3#0",
        "tmp%29#1"
      ]
    },
    "1595": {
      "op": "uncover 3",
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "result_3.2#0",
        "result_3.3#0",
        "tmp%29#1",
        "result_3.1#0"
      ]
    },
    "1597": {
      "op": "dig 6",
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "result_3.2#0",
        "result_3.3#0",
        "tmp%29#1",
        "result_3.1#0",
        "result.1#0 (copy)"
      ]
    },
    "1599": {
      "op": "==",
      "defined_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "result_3.2#0",
        "result_3.3#0",
        "tmp%29#1",
        "tmp%30#0"
      ],
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "result_3.2#0",
        "result_3.3#0",
        "tmp%29#1",
        "tmp%30#0"
      ]
    },
    "1600": {
      "op": "&&",
      "defined_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "result_3.2#0",
        "result_3.3#0",
        "tmp%31#1"
      ],
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "result_3.2#0",
        "result_3.3#0",
        "tmp%31#1"
      ]
    },
    "1601": {
      "op": "uncover 2",
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "result_3.3#0",
        "tmp%31#1",
        "result_3.2#0"
      ]
    },
    "1603": {
      "op": "dig 4",
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "result_3.3#0",
        "tmp%31#1",
        "result_3.2#0",
        "result.2#0 (copy)"
      ]
    },
    "1605": {
      "op": "==",
      "defined_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "result_3.3#0",
        "tmp%31#1",
        "tmp%32#1"
      ],
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "result_3.3#0",
        "tmp%31#1",
        "tmp%32#1"
      ]
    },
    "1606": {
      "op": "&&",
      "defined_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "result_3.3#0",
        "tmp%33#1"
      ],
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "result_3.3#0",
        "tmp%33#1"
      ]
    },
    "1607": {
      "op": "swap",
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "tmp%33#1",
        "result_3.3#0"
      ]
    },
    "1608": {
      "op": "dig 2",
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "tmp%33#1",
        "result_3.3#0",
        "result.3#0 (copy)"
      ]
    },
    "1610": {
      "op": "b==",
      "defined_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "tmp%33#1",
        "tmp%34#1"
      ],
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "tmp%33#1",
        "tmp%34#1"
      ]
    },
    "1611": {
      "op": "&&",
      "defined_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "tmp%35#1"
      ],
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "tmp%35#1"
      ]
    },
    "1612": {
      "error": "expected arc4 arguments to give the same result",
      "op": "assert // expected arc4 arguments to give the same result",
      "stack_out": [
        "app#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0"
      ]
    },
    "1613": {
      "op": "itxn_begin"
    },
    "1614": {
      "op": "uncover 4",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "app#0"
      ]
    },
    "1616": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0"
      ]
    },
    "1618": {
      "op": "bytec 4 // method \"echo_native_tuple(string,byte[],uint64,uint512)(string,byte[],uint64,uint512)\"",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "Method(echo_native_tuple(string,byte[],uint64,uint512)(string,byte[],uint64,uint512))"
      ]
    },
    "1620": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0"
      ]
    },
    "1622": {
      "op": "bytec 5 // 0x00027331",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "0x00027331"
      ]
    },
    "1624": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0"
      ]
    },
    "1626": {
      "op": "bytec 6 // 0x00026231",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "0x00026231"
      ]
    },
    "1628": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0"
      ]
    },
    "1630": {
      "op": "bytec_2 // 0x0000000000000001",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "0x0000000000000001"
      ]
    },
    "1631": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0"
      ]
    },
    "1633": {
      "op": "bytec_1 // 0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002"
      ]
    },
    "1634": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0"
      ]
    },
    "1636": {
      "op": "intc_1 // appl",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "appl"
      ]
    },
    "1637": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0"
      ]
    },
    "1639": {
      "op": "intc_0 // 0",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "0"
      ]
    },
    "1640": {
      "op": "itxn_field Fee",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0"
      ]
    },
    "1642": {
      "op": "itxn_submit"
    },
    "1643": {
      "op": "itxn LastLog",
      "defined_out": [
        "awst_tmp%3#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "awst_tmp%3#0"
      ]
    },
    "1645": {
      "op": "dup",
      "defined_out": [
        "awst_tmp%3#0",
        "awst_tmp%3#0 (copy)",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "awst_tmp%3#0",
        "awst_tmp%3#0 (copy)"
      ]
    },
    "1646": {
      "op": "extract 4 0",
      "defined_out": [
        "awst_tmp%3#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "tmp%36#1"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "awst_tmp%3#0",
        "tmp%36#1"
      ]
    },
    "1649": {
      "op": "dig 1",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "awst_tmp%3#0",
        "tmp%36#1",
        "awst_tmp%3#0 (copy)"
      ]
    },
    "1651": {
      "op": "extract 0 4",
      "defined_out": [
        "awst_tmp%3#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "tmp%36#1",
        "tmp%37#1"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "awst_tmp%3#0",
        "tmp%36#1",
        "tmp%37#1"
      ]
    },
    "1654": {
      "op": "bytec_0 // 0x151f7c75",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "awst_tmp%3#0",
        "tmp%36#1",
        "tmp%37#1",
        "0x151f7c75"
      ]
    },
    "1655": {
      "op": "==",
      "defined_out": [
        "awst_tmp%3#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "tmp%36#1",
        "tmp%38#1"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "awst_tmp%3#0",
        "tmp%36#1",
        "tmp%38#1"
      ]
    },
    "1656": {
      "error": "application log value is not the result of an ABI return",
      "op": "assert // application log value is not the result of an ABI return",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "awst_tmp%3#0",
        "tmp%36#1"
      ]
    },
    "1657": {
      "op": "dup",
      "defined_out": [
        "awst_tmp%3#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "tmp%36#1",
        "tmp%36#1 (copy)"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "awst_tmp%3#0",
        "tmp%36#1",
        "tmp%36#1 (copy)"
      ]
    },
    "1658": {
      "op": "intc_0 // 0",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "awst_tmp%3#0",
        "tmp%36#1",
        "tmp%36#1 (copy)",
        "0"
      ]
    },
    "1659": {
      "op": "extract_uint16",
      "defined_out": [
        "awst_tmp%3#0",
        "extract_uint16%9#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "tmp%36#1"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "awst_tmp%3#0",
        "tmp%36#1",
        "extract_uint16%9#0"
      ]
    },
    "1660": {
      "op": "dig 1",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "awst_tmp%3#0",
        "tmp%36#1",
        "extract_uint16%9#0",
        "tmp%36#1 (copy)"
      ]
    },
    "1662": {
      "op": "intc_3 // 2",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "awst_tmp%3#0",
        "tmp%36#1",
        "extract_uint16%9#0",
        "tmp%36#1 (copy)",
        "2"
      ]
    },
    "1663": {
      "op": "extract_uint16",
      "defined_out": [
        "awst_tmp%3#0",
        "extract_uint16%10#0",
        "extract_uint16%9#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "tmp%36#1"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "awst_tmp%3#0",
        "tmp%36#1",
        "extract_uint16%9#0",
        "extract_uint16%10#0"
      ]
    },
    "1664": {
      "op": "dig 2",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "awst_tmp%3#0",
        "tmp%36#1",
        "extract_uint16%9#0",
        "extract_uint16%10#0",
        "tmp%36#1 (copy)"
      ]
    },
    "1666": {
      "op": "uncover 2",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "awst_tmp%3#0",
        "tmp%36#1",
        "extract_uint16%10#0",
        "tmp%36#1 (copy)",
        "extract_uint16%9#0"
      ]
    },
    "1668": {
      "op": "dig 2",
      "defined_out": [
        "awst_tmp%3#0",
        "extract_uint16%10#0",
        "extract_uint16%10#0 (copy)",
        "extract_uint16%9#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "tmp%36#1",
        "tmp%36#1 (copy)"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "awst_tmp%3#0",
        "tmp%36#1",
        "extract_uint16%10#0",
        "tmp%36#1 (copy)",
        "extract_uint16%9#0",
        "extract_uint16%10#0 (copy)"
      ]
    },
    "1670": {
      "op": "substring3",
      "defined_out": [
        "awst_tmp%3#0",
        "extract_uint16%10#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "substring3%6#0",
        "tmp%36#1"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "awst_tmp%3#0",
        "tmp%36#1",
        "extract_uint16%10#0",
        "substring3%6#0"
      ]
    },
    "1671": {
      "op": "extract 2 0",
      "defined_out": [
        "awst_tmp%3#0",
        "extract_uint16%10#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "result_native.0#0",
        "tmp%36#1"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "awst_tmp%3#0",
        "tmp%36#1",
        "extract_uint16%10#0",
        "result_native.0#0"
      ]
    },
    "1674": {
      "op": "dig 2",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "awst_tmp%3#0",
        "tmp%36#1",
        "extract_uint16%10#0",
        "result_native.0#0",
        "tmp%36#1 (copy)"
      ]
    },
    "1676": {
      "op": "len",
      "defined_out": [
        "awst_tmp%3#0",
        "extract_uint16%10#0",
        "len%3#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "result_native.0#0",
        "tmp%36#1"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "awst_tmp%3#0",
        "tmp%36#1",
        "extract_uint16%10#0",
        "result_native.0#0",
        "len%3#0"
      ]
    },
    "1677": {
      "op": "swap"
    },
    "1678": {
      "op": "cover 3",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "awst_tmp%3#0",
        "result_native.0#0",
        "tmp%36#1",
        "extract_uint16%10#0",
        "len%3#0"
      ]
    },
    "1680": {
      "op": "substring3",
      "defined_out": [
        "awst_tmp%3#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "result_native.0#0",
        "substring3%7#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "awst_tmp%3#0",
        "result_native.0#0",
        "substring3%7#0"
      ]
    },
    "1681": {
      "op": "extract 2 0",
      "defined_out": [
        "awst_tmp%3#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "result_native.0#0",
        "result_native.1#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "awst_tmp%3#0",
        "result_native.0#0",
        "result_native.1#0"
      ]
    },
    "1684": {
      "op": "dig 2",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "awst_tmp%3#0",
        "result_native.0#0",
        "result_native.1#0",
        "awst_tmp%3#0 (copy)"
      ]
    },
    "1686": {
      "op": "pushint 8 // 8",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "awst_tmp%3#0",
        "result_native.0#0",
        "result_native.1#0",
        "awst_tmp%3#0 (copy)",
        "8"
      ]
    },
    "1688": {
      "op": "extract_uint64",
      "defined_out": [
        "awst_tmp%3#0",
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "result_native.0#0",
        "result_native.1#0",
        "result_native.2#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "awst_tmp%3#0",
        "result_native.0#0",
        "result_native.1#0",
        "result_native.2#0"
      ]
    },
    "1689": {
      "op": "uncover 3",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "result_native.0#0",
        "result_native.1#0",
        "result_native.2#0",
        "awst_tmp%3#0"
      ]
    },
    "1691": {
      "op": "extract 16 64",
      "defined_out": [
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "result_native.0#0",
        "result_native.1#0",
        "result_native.2#0",
        "result_native.3#0"
      ],
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "result_native.0#0",
        "result_native.1#0",
        "result_native.2#0",
        "result_native.3#0"
      ]
    },
    "1694": {
      "op": "uncover 3",
      "stack_out": [
        "result.0#0",
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "result_native.1#0",
        "result_native.2#0",
        "result_native.3#0",
        "result_native.0#0"
      ]
    },
    "1696": {
      "op": "uncover 7",
      "stack_out": [
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "result_native.1#0",
        "result_native.2#0",
        "result_native.3#0",
        "result_native.0#0",
        "result.0#0"
      ]
    },
    "1698": {
      "op": "==",
      "defined_out": [
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "result_native.1#0",
        "result_native.2#0",
        "result_native.3#0",
        "tmp%42#0"
      ],
      "stack_out": [
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "result_native.1#0",
        "result_native.2#0",
        "result_native.3#0",
        "tmp%42#0"
      ]
    },
    "1699": {
      "op": "uncover 3",
      "stack_out": [
        "result.1#0",
        "result.2#0",
        "result.3#0",
        "result_native.2#0",
        "result_native.3#0",
        "tmp%42#0",
        "result_native.1#0"
      ]
    },
    "1701": {
      "op": "uncover 6",
      "stack_out": [
        "result.2#0",
        "result.3#0",
        "result_native.2#0",
        "result_native.3#0",
        "tmp%42#0",
        "result_native.1#0",
        "result.1#0"
      ]
    },
    "1703": {
      "op": "==",
      "defined_out": [
        "result.2#0",
        "result.3#0",
        "result_native.2#0",
        "result_native.3#0",
        "tmp%42#0",
        "tmp%43#1"
      ],
      "stack_out": [
        "result.2#0",
        "result.3#0",
        "result_native.2#0",
        "result_native.3#0",
        "tmp%42#0",
        "tmp%43#1"
      ]
    },
    "1704": {
      "op": "&&",
      "defined_out": [
        "result.2#0",
        "result.3#0",
        "result_native.2#0",
        "result_native.3#0",
        "tmp%44#1"
      ],
      "stack_out": [
        "result.2#0",
        "result.3#0",
        "result_native.2#0",
        "result_native.3#0",
        "tmp%44#1"
      ]
    },
    "1705": {
      "op": "uncover 2",
      "stack_out": [
        "result.2#0",
        "result.3#0",
        "result_native.3#0",
        "tmp%44#1",
        "result_native.2#0"
      ]
    },
    "1707": {
      "op": "uncover 4",
      "stack_out": [
        "result.3#0",
        "result_native.3#0",
        "tmp%44#1",
        "result_native.2#0",
        "result.2#0"
      ]
    },
    "1709": {
      "op": "==",
      "defined_out": [
        "result.3#0",
        "result_native.3#0",
        "tmp%44#1",
        "tmp%45#1"
      ],
      "stack_out": [
        "result.3#0",
        "result_native.3#0",
        "tmp%44#1",
        "tmp%45#1"
      ]
    },
    "1710": {
      "op": "&&",
      "defined_out": [
        "result.3#0",
        "result_native.3#0",
        "tmp%46#1"
      ],
      "stack_out": [
        "result.3#0",
        "result_native.3#0",
        "tmp%46#1"
      ]
    },
    "1711": {
      "op": "swap",
      "stack_out": [
        "result.3#0",
        "tmp%46#1",
        "result_native.3#0"
      ]
    },
    "1712": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%46#1",
        "result_native.3#0",
        "result.3#0"
      ]
    },
    "1714": {
      "op": "b==",
      "defined_out": [
        "tmp%46#1",
        "tmp%47#1"
      ],
      "stack_out": [
        "tmp%46#1",
        "tmp%47#1"
      ]
    },
    "1715": {
      "op": "&&",
      "defined_out": [
        "tmp%48#1"
      ],
      "stack_out": [
        "tmp%48#1"
      ]
    },
    "1716": {
      "op": "assert",
      "stack_out": []
    },
    "1717": {
      "op": "intc_2 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1718": {
      "op": "return",
      "stack_out": []
    },
    "1719": {
      "block": "main_test_native_tuple_route@15",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%79#0"
      ],
      "stack_out": [
        "tmp%79#0"
      ]
    },
    "1721": {
      "op": "!",
      "defined_out": [
        "tmp%80#0"
      ],
      "stack_out": [
        "tmp%80#0"
      ]
    },
    "1722": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "1723": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%81#0"
      ],
      "stack_out": [
        "tmp%81#0"
      ]
    },
    "1725": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "1726": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded(uint8)%13#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint8)%13#0"
      ]
    },
    "1729": {
      "op": "btoi",
      "defined_out": [
        "tmp%83#0"
      ],
      "stack_out": [
        "tmp%83#0"
      ]
    },
    "1730": {
      "op": "txnas Applications",
      "defined_out": [
        "app#0"
      ],
      "stack_out": [
        "app#0"
      ]
    },
    "1732": {
      "op": "itxn_begin"
    },
    "1733": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "app#0 (copy)"
      ],
      "stack_out": [
        "app#0",
        "app#0 (copy)"
      ]
    },
    "1734": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "app#0"
      ]
    },
    "1736": {
      "op": "bytec 4 // method \"echo_native_tuple(string,byte[],uint64,uint512)(string,byte[],uint64,uint512)\"",
      "defined_out": [
        "Method(echo_native_tuple(string,byte[],uint64,uint512)(string,byte[],uint64,uint512))",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "Method(echo_native_tuple(string,byte[],uint64,uint512)(string,byte[],uint64,uint512))"
      ]
    },
    "1738": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0"
      ]
    },
    "1740": {
      "op": "bytec 5 // 0x00027331",
      "defined_out": [
        "0x00027331",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "0x00027331"
      ]
    },
    "1742": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0"
      ]
    },
    "1744": {
      "op": "bytec 6 // 0x00026231",
      "defined_out": [
        "0x00026231",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "0x00026231"
      ]
    },
    "1746": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0"
      ]
    },
    "1748": {
      "op": "bytec_2 // 0x0000000000000001",
      "defined_out": [
        "0x0000000000000001",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "0x0000000000000001"
      ]
    },
    "1749": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0"
      ]
    },
    "1751": {
      "op": "bytec_1 // 0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002",
      "defined_out": [
        "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002"
      ]
    },
    "1752": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0"
      ]
    },
    "1754": {
      "op": "intc_1 // appl",
      "defined_out": [
        "app#0",
        "appl"
      ],
      "stack_out": [
        "app#0",
        "appl"
      ]
    },
    "1755": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "app#0"
      ]
    },
    "1757": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "0"
      ]
    },
    "1758": {
      "op": "itxn_field Fee",
      "stack_out": [
        "app#0"
      ]
    },
    "1760": {
      "op": "itxn_submit"
    },
    "1761": {
      "op": "itxn LastLog",
      "defined_out": [
        "app#0",
        "awst_tmp%0#0"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0"
      ]
    },
    "1763": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ]
    },
    "1764": {
      "op": "extract 4 0",
      "defined_out": [
        "app#0",
        "awst_tmp%0#0",
        "result1#0"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "result1#0"
      ]
    },
    "1767": {
      "op": "dig 1",
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "result1#0",
        "awst_tmp%0#0 (copy)"
      ]
    },
    "1769": {
      "op": "extract 0 4",
      "defined_out": [
        "app#0",
        "awst_tmp%0#0",
        "result1#0",
        "tmp%1#1"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "result1#0",
        "tmp%1#1"
      ]
    },
    "1772": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "app#0",
        "awst_tmp%0#0",
        "result1#0",
        "tmp%1#1"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "result1#0",
        "tmp%1#1",
        "0x151f7c75"
      ]
    },
    "1773": {
      "op": "==",
      "defined_out": [
        "app#0",
        "awst_tmp%0#0",
        "result1#0",
        "tmp%2#1"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "result1#0",
        "tmp%2#1"
      ]
    },
    "1774": {
      "error": "application log value is not the result of an ABI return",
      "op": "assert // application log value is not the result of an ABI return",
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "result1#0"
      ]
    },
    "1775": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "awst_tmp%0#0",
        "result1#0",
        "result1#0 (copy)"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "result1#0",
        "result1#0 (copy)"
      ]
    },
    "1776": {
      "op": "intc_0 // 0",
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "result1#0",
        "result1#0 (copy)",
        "0"
      ]
    },
    "1777": {
      "op": "extract_uint16",
      "defined_out": [
        "app#0",
        "awst_tmp%0#0",
        "extract_uint16%0#0",
        "result1#0"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "result1#0",
        "extract_uint16%0#0"
      ]
    },
    "1778": {
      "op": "dig 1",
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "result1#0",
        "extract_uint16%0#0",
        "result1#0 (copy)"
      ]
    },
    "1780": {
      "op": "intc_3 // 2",
      "defined_out": [
        "2",
        "app#0",
        "awst_tmp%0#0",
        "extract_uint16%0#0",
        "result1#0",
        "result1#0 (copy)"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "result1#0",
        "extract_uint16%0#0",
        "result1#0 (copy)",
        "2"
      ]
    },
    "1781": {
      "op": "extract_uint16",
      "defined_out": [
        "app#0",
        "awst_tmp%0#0",
        "extract_uint16%0#0",
        "extract_uint16%1#0",
        "result1#0"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "result1#0",
        "extract_uint16%0#0",
        "extract_uint16%1#0"
      ]
    },
    "1782": {
      "op": "dig 2",
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "result1#0",
        "extract_uint16%0#0",
        "extract_uint16%1#0",
        "result1#0 (copy)"
      ]
    },
    "1784": {
      "op": "uncover 2",
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "result1#0",
        "extract_uint16%1#0",
        "result1#0 (copy)",
        "extract_uint16%0#0"
      ]
    },
    "1786": {
      "op": "dig 2",
      "defined_out": [
        "app#0",
        "awst_tmp%0#0",
        "extract_uint16%0#0",
        "extract_uint16%1#0",
        "extract_uint16%1#0 (copy)",
        "result1#0",
        "result1#0 (copy)"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "result1#0",
        "extract_uint16%1#0",
        "result1#0 (copy)",
        "extract_uint16%0#0",
        "extract_uint16%1#0 (copy)"
      ]
    },
    "1788": {
      "op": "substring3",
      "defined_out": [
        "app#0",
        "awst_tmp%0#0",
        "extract_uint16%1#0",
        "result1#0",
        "s#0"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "result1#0",
        "extract_uint16%1#0",
        "s#0"
      ]
    },
    "1789": {
      "op": "dig 2",
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "result1#0",
        "extract_uint16%1#0",
        "s#0",
        "result1#0 (copy)"
      ]
    },
    "1791": {
      "op": "len",
      "defined_out": [
        "app#0",
        "awst_tmp%0#0",
        "extract_uint16%1#0",
        "len%0#0",
        "result1#0",
        "s#0"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "result1#0",
        "extract_uint16%1#0",
        "s#0",
        "len%0#0"
      ]
    },
    "1792": {
      "op": "dig 3",
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "result1#0",
        "extract_uint16%1#0",
        "s#0",
        "len%0#0",
        "result1#0 (copy)"
      ]
    },
    "1794": {
      "op": "uncover 3",
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "result1#0",
        "s#0",
        "len%0#0",
        "result1#0 (copy)",
        "extract_uint16%1#0"
      ]
    },
    "1796": {
      "op": "uncover 2",
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "result1#0",
        "s#0",
        "result1#0 (copy)",
        "extract_uint16%1#0",
        "len%0#0"
      ]
    },
    "1798": {
      "op": "substring3",
      "defined_out": [
        "app#0",
        "awst_tmp%0#0",
        "b#0",
        "result1#0",
        "s#0"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "result1#0",
        "s#0",
        "b#0"
      ]
    },
    "1799": {
      "op": "dig 3",
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "result1#0",
        "s#0",
        "b#0",
        "awst_tmp%0#0 (copy)"
      ]
    },
    "1801": {
      "op": "extract 16 64",
      "defined_out": [
        "app#0",
        "awst_tmp%0#0",
        "b#0",
        "bu#0",
        "result1#0",
        "s#0"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "result1#0",
        "s#0",
        "b#0",
        "bu#0"
      ]
    },
    "1804": {
      "op": "uncover 2",
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "result1#0",
        "b#0",
        "bu#0",
        "s#0"
      ]
    },
    "1806": {
      "op": "extract 2 0",
      "defined_out": [
        "app#0",
        "awst_tmp%0#0",
        "b#0",
        "bu#0",
        "result1#0",
        "tmp%3#2"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "result1#0",
        "b#0",
        "bu#0",
        "tmp%3#2"
      ]
    },
    "1809": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "awst_tmp%0#0",
        "b#0",
        "bu#0",
        "result1#0",
        "tmp%3#2",
        "tmp%3#2 (copy)"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "result1#0",
        "b#0",
        "bu#0",
        "tmp%3#2",
        "tmp%3#2 (copy)"
      ]
    },
    "1810": {
      "op": "bytec 9 // \"echo: s1\"",
      "defined_out": [
        "\"echo: s1\"",
        "app#0",
        "awst_tmp%0#0",
        "b#0",
        "bu#0",
        "result1#0",
        "tmp%3#2",
        "tmp%3#2 (copy)"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "result1#0",
        "b#0",
        "bu#0",
        "tmp%3#2",
        "tmp%3#2 (copy)",
        "\"echo: s1\""
      ]
    },
    "1812": {
      "op": "==",
      "defined_out": [
        "app#0",
        "awst_tmp%0#0",
        "b#0",
        "bu#0",
        "result1#0",
        "tmp%3#2",
        "tmp%4#0"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "result1#0",
        "b#0",
        "bu#0",
        "tmp%3#2",
        "tmp%4#0"
      ]
    },
    "1813": {
      "op": "assert",
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "result1#0",
        "b#0",
        "bu#0",
        "tmp%3#2"
      ]
    },
    "1814": {
      "op": "uncover 2",
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "result1#0",
        "bu#0",
        "tmp%3#2",
        "b#0"
      ]
    },
    "1816": {
      "op": "extract 2 0",
      "defined_out": [
        "app#0",
        "awst_tmp%0#0",
        "bu#0",
        "result1#0",
        "tmp%3#2",
        "tmp%5#1"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "result1#0",
        "bu#0",
        "tmp%3#2",
        "tmp%5#1"
      ]
    },
    "1819": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "awst_tmp%0#0",
        "bu#0",
        "result1#0",
        "tmp%3#2",
        "tmp%5#1",
        "tmp%5#1 (copy)"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "result1#0",
        "bu#0",
        "tmp%3#2",
        "tmp%5#1",
        "tmp%5#1 (copy)"
      ]
    },
    "1820": {
      "op": "bytec 25 // 0x6563686f3a206231",
      "defined_out": [
        "0x6563686f3a206231",
        "app#0",
        "awst_tmp%0#0",
        "bu#0",
        "result1#0",
        "tmp%3#2",
        "tmp%5#1",
        "tmp%5#1 (copy)"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "result1#0",
        "bu#0",
        "tmp%3#2",
        "tmp%5#1",
        "tmp%5#1 (copy)",
        "0x6563686f3a206231"
      ]
    },
    "1822": {
      "op": "==",
      "defined_out": [
        "app#0",
        "awst_tmp%0#0",
        "bu#0",
        "result1#0",
        "tmp%3#2",
        "tmp%5#1",
        "tmp%6#1"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "result1#0",
        "bu#0",
        "tmp%3#2",
        "tmp%5#1",
        "tmp%6#1"
      ]
    },
    "1823": {
      "op": "assert",
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "result1#0",
        "bu#0",
        "tmp%3#2",
        "tmp%5#1"
      ]
    },
    "1824": {
      "op": "uncover 4",
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%3#2",
        "tmp%5#1",
        "awst_tmp%0#0"
      ]
    },
    "1826": {
      "op": "pushint 8 // 8",
      "defined_out": [
        "8",
        "app#0",
        "awst_tmp%0#0",
        "bu#0",
        "result1#0",
        "tmp%3#2",
        "tmp%5#1"
      ],
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%3#2",
        "tmp%5#1",
        "awst_tmp%0#0",
        "8"
      ]
    },
    "1828": {
      "op": "extract_uint64",
      "defined_out": [
        "app#0",
        "bu#0",
        "result1#0",
        "tmp%3#2",
        "tmp%5#1",
        "tmp%7#5"
      ],
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%3#2",
        "tmp%5#1",
        "tmp%7#5"
      ]
    },
    "1829": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "bu#0",
        "result1#0",
        "tmp%3#2",
        "tmp%5#1",
        "tmp%7#5",
        "tmp%7#5 (copy)"
      ],
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%3#2",
        "tmp%5#1",
        "tmp%7#5",
        "tmp%7#5 (copy)"
      ]
    },
    "1830": {
      "op": "intc_3 // 2",
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%3#2",
        "tmp%5#1",
        "tmp%7#5",
        "tmp%7#5 (copy)",
        "2"
      ]
    },
    "1831": {
      "op": "==",
      "defined_out": [
        "app#0",
        "bu#0",
        "result1#0",
        "tmp%3#2",
        "tmp%5#1",
        "tmp%7#5",
        "tmp%8#1"
      ],
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%3#2",
        "tmp%5#1",
        "tmp%7#5",
        "tmp%8#1"
      ]
    },
    "1832": {
      "op": "assert",
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%3#2",
        "tmp%5#1",
        "tmp%7#5"
      ]
    },
    "1833": {
      "op": "dig 3",
      "defined_out": [
        "app#0",
        "bu#0",
        "bu#0 (copy)",
        "result1#0",
        "tmp%3#2",
        "tmp%5#1",
        "tmp%7#5"
      ],
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%3#2",
        "tmp%5#1",
        "tmp%7#5",
        "bu#0 (copy)"
      ]
    },
    "1835": {
      "op": "bytec 13 // 0x03",
      "defined_out": [
        "0x03",
        "app#0",
        "bu#0",
        "bu#0 (copy)",
        "result1#0",
        "tmp%3#2",
        "tmp%5#1",
        "tmp%7#5"
      ],
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%3#2",
        "tmp%5#1",
        "tmp%7#5",
        "bu#0 (copy)",
        "0x03"
      ]
    },
    "1837": {
      "op": "b==",
      "defined_out": [
        "app#0",
        "bu#0",
        "result1#0",
        "tmp%3#2",
        "tmp%5#1",
        "tmp%7#5",
        "tmp%9#1"
      ],
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%3#2",
        "tmp%5#1",
        "tmp%7#5",
        "tmp%9#1"
      ]
    },
    "1838": {
      "op": "assert",
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%3#2",
        "tmp%5#1",
        "tmp%7#5"
      ]
    },
    "1839": {
      "op": "itxn_begin"
    },
    "1840": {
      "op": "intc_2 // 1",
      "defined_out": [
        "1",
        "app#0",
        "bu#0",
        "result1#0",
        "tmp%3#2",
        "tmp%5#1",
        "tmp%7#5"
      ],
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%3#2",
        "tmp%5#1",
        "tmp%7#5",
        "1"
      ]
    },
    "1841": {
      "op": "itob",
      "defined_out": [
        "app#0",
        "bu#0",
        "result1#0",
        "tmp%3#2",
        "tmp%5#1",
        "tmp%7#5",
        "val_as_bytes%0#1"
      ],
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%3#2",
        "tmp%5#1",
        "tmp%7#5",
        "val_as_bytes%0#1"
      ]
    },
    "1842": {
      "op": "dig 6",
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%3#2",
        "tmp%5#1",
        "tmp%7#5",
        "val_as_bytes%0#1",
        "app#0 (copy)"
      ]
    },
    "1844": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%3#2",
        "tmp%5#1",
        "tmp%7#5",
        "val_as_bytes%0#1"
      ]
    },
    "1846": {
      "op": "bytec 4 // method \"echo_native_tuple(string,byte[],uint64,uint512)(string,byte[],uint64,uint512)\"",
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%3#2",
        "tmp%5#1",
        "tmp%7#5",
        "val_as_bytes%0#1",
        "Method(echo_native_tuple(string,byte[],uint64,uint512)(string,byte[],uint64,uint512))"
      ]
    },
    "1848": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%3#2",
        "tmp%5#1",
        "tmp%7#5",
        "val_as_bytes%0#1"
      ]
    },
    "1850": {
      "op": "bytec 5 // 0x00027331",
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%3#2",
        "tmp%5#1",
        "tmp%7#5",
        "val_as_bytes%0#1",
        "0x00027331"
      ]
    },
    "1852": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%3#2",
        "tmp%5#1",
        "tmp%7#5",
        "val_as_bytes%0#1"
      ]
    },
    "1854": {
      "op": "bytec 6 // 0x00026231",
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%3#2",
        "tmp%5#1",
        "tmp%7#5",
        "val_as_bytes%0#1",
        "0x00026231"
      ]
    },
    "1856": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%3#2",
        "tmp%5#1",
        "tmp%7#5",
        "val_as_bytes%0#1"
      ]
    },
    "1858": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%3#2",
        "tmp%5#1",
        "tmp%7#5"
      ]
    },
    "1860": {
      "op": "bytec_1 // 0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002",
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%3#2",
        "tmp%5#1",
        "tmp%7#5",
        "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002"
      ]
    },
    "1861": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%3#2",
        "tmp%5#1",
        "tmp%7#5"
      ]
    },
    "1863": {
      "op": "intc_1 // appl",
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%3#2",
        "tmp%5#1",
        "tmp%7#5",
        "appl"
      ]
    },
    "1864": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%3#2",
        "tmp%5#1",
        "tmp%7#5"
      ]
    },
    "1866": {
      "op": "intc_0 // 0",
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%3#2",
        "tmp%5#1",
        "tmp%7#5",
        "0"
      ]
    },
    "1867": {
      "op": "itxn_field Fee",
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%3#2",
        "tmp%5#1",
        "tmp%7#5"
      ]
    },
    "1869": {
      "op": "itxn_submit"
    },
    "1870": {
      "op": "itxn LastLog",
      "defined_out": [
        "app#0",
        "awst_tmp%1#0",
        "bu#0",
        "result1#0",
        "tmp%3#2",
        "tmp%5#1",
        "tmp%7#5"
      ],
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%3#2",
        "tmp%5#1",
        "tmp%7#5",
        "awst_tmp%1#0"
      ]
    },
    "1872": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "awst_tmp%1#0",
        "awst_tmp%1#0 (copy)",
        "bu#0",
        "result1#0",
        "tmp%3#2",
        "tmp%5#1",
        "tmp%7#5"
      ],
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%3#2",
        "tmp%5#1",
        "tmp%7#5",
        "awst_tmp%1#0",
        "awst_tmp%1#0 (copy)"
      ]
    },
    "1873": {
      "op": "extract 4 0",
      "defined_out": [
        "app#0",
        "awst_tmp%1#0",
        "bu#0",
        "result1#0",
        "result2#0",
        "tmp%3#2",
        "tmp%5#1",
        "tmp%7#5"
      ],
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%3#2",
        "tmp%5#1",
        "tmp%7#5",
        "awst_tmp%1#0",
        "result2#0"
      ]
    },
    "1876": {
      "op": "swap",
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%3#2",
        "tmp%5#1",
        "tmp%7#5",
        "result2#0",
        "awst_tmp%1#0"
      ]
    },
    "1877": {
      "op": "extract 0 4",
      "defined_out": [
        "app#0",
        "bu#0",
        "result1#0",
        "result2#0",
        "tmp%11#2",
        "tmp%3#2",
        "tmp%5#1",
        "tmp%7#5"
      ],
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%3#2",
        "tmp%5#1",
        "tmp%7#5",
        "result2#0",
        "tmp%11#2"
      ]
    },
    "1880": {
      "op": "bytec_0 // 0x151f7c75",
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%3#2",
        "tmp%5#1",
        "tmp%7#5",
        "result2#0",
        "tmp%11#2",
        "0x151f7c75"
      ]
    },
    "1881": {
      "op": "==",
      "defined_out": [
        "app#0",
        "bu#0",
        "result1#0",
        "result2#0",
        "tmp%12#0",
        "tmp%3#2",
        "tmp%5#1",
        "tmp%7#5"
      ],
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%3#2",
        "tmp%5#1",
        "tmp%7#5",
        "result2#0",
        "tmp%12#0"
      ]
    },
    "1882": {
      "error": "application log value is not the result of an ABI return",
      "op": "assert // application log value is not the result of an ABI return",
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%3#2",
        "tmp%5#1",
        "tmp%7#5",
        "result2#0"
      ]
    },
    "1883": {
      "op": "dig 5",
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%3#2",
        "tmp%5#1",
        "tmp%7#5",
        "result2#0",
        "result1#0 (copy)"
      ]
    },
    "1885": {
      "op": "==",
      "defined_out": [
        "app#0",
        "bu#0",
        "result1#0",
        "tmp%13#2",
        "tmp%3#2",
        "tmp%5#1",
        "tmp%7#5"
      ],
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%3#2",
        "tmp%5#1",
        "tmp%7#5",
        "tmp%13#2"
      ]
    },
    "1886": {
      "op": "assert",
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%3#2",
        "tmp%5#1",
        "tmp%7#5"
      ]
    },
    "1887": {
      "op": "itxn_begin"
    },
    "1888": {
      "op": "dig 5",
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%3#2",
        "tmp%5#1",
        "tmp%7#5",
        "app#0 (copy)"
      ]
    },
    "1890": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%3#2",
        "tmp%5#1",
        "tmp%7#5"
      ]
    },
    "1892": {
      "op": "bytec 4 // method \"echo_native_tuple(string,byte[],uint64,uint512)(string,byte[],uint64,uint512)\"",
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%3#2",
        "tmp%5#1",
        "tmp%7#5",
        "Method(echo_native_tuple(string,byte[],uint64,uint512)(string,byte[],uint64,uint512))"
      ]
    },
    "1894": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%3#2",
        "tmp%5#1",
        "tmp%7#5"
      ]
    },
    "1896": {
      "op": "bytec 5 // 0x00027331",
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%3#2",
        "tmp%5#1",
        "tmp%7#5",
        "0x00027331"
      ]
    },
    "1898": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%3#2",
        "tmp%5#1",
        "tmp%7#5"
      ]
    },
    "1900": {
      "op": "bytec 6 // 0x00026231",
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%3#2",
        "tmp%5#1",
        "tmp%7#5",
        "0x00026231"
      ]
    },
    "1902": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%3#2",
        "tmp%5#1",
        "tmp%7#5"
      ]
    },
    "1904": {
      "op": "bytec_2 // 0x0000000000000001",
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%3#2",
        "tmp%5#1",
        "tmp%7#5",
        "0x0000000000000001"
      ]
    },
    "1905": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%3#2",
        "tmp%5#1",
        "tmp%7#5"
      ]
    },
    "1907": {
      "op": "bytec_1 // 0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002",
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%3#2",
        "tmp%5#1",
        "tmp%7#5",
        "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002"
      ]
    },
    "1908": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%3#2",
        "tmp%5#1",
        "tmp%7#5"
      ]
    },
    "1910": {
      "op": "intc_1 // appl",
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%3#2",
        "tmp%5#1",
        "tmp%7#5",
        "appl"
      ]
    },
    "1911": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%3#2",
        "tmp%5#1",
        "tmp%7#5"
      ]
    },
    "1913": {
      "op": "intc_0 // 0",
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%3#2",
        "tmp%5#1",
        "tmp%7#5",
        "0"
      ]
    },
    "1914": {
      "op": "itxn_field Fee",
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%3#2",
        "tmp%5#1",
        "tmp%7#5"
      ]
    },
    "1916": {
      "op": "itxn_submit"
    },
    "1917": {
      "op": "itxn LastLog",
      "defined_out": [
        "app#0",
        "awst_tmp%2#0",
        "bu#0",
        "result1#0",
        "tmp%3#2",
        "tmp%5#1",
        "tmp%7#5"
      ],
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%3#2",
        "tmp%5#1",
        "tmp%7#5",
        "awst_tmp%2#0"
      ]
    },
    "1919": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "awst_tmp%2#0",
        "awst_tmp%2#0 (copy)",
        "bu#0",
        "result1#0",
        "tmp%3#2",
        "tmp%5#1",
        "tmp%7#5"
      ],
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%3#2",
        "tmp%5#1",
        "tmp%7#5",
        "awst_tmp%2#0",
        "awst_tmp%2#0 (copy)"
      ]
    },
    "1920": {
      "op": "extract 4 0",
      "defined_out": [
        "app#0",
        "awst_tmp%2#0",
        "bu#0",
        "result1#0",
        "result3#0",
        "tmp%3#2",
        "tmp%5#1",
        "tmp%7#5"
      ],
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%3#2",
        "tmp%5#1",
        "tmp%7#5",
        "awst_tmp%2#0",
        "result3#0"
      ]
    },
    "1923": {
      "op": "swap",
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%3#2",
        "tmp%5#1",
        "tmp%7#5",
        "result3#0",
        "awst_tmp%2#0"
      ]
    },
    "1924": {
      "op": "extract 0 4",
      "defined_out": [
        "app#0",
        "bu#0",
        "result1#0",
        "result3#0",
        "tmp%15#2",
        "tmp%3#2",
        "tmp%5#1",
        "tmp%7#5"
      ],
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%3#2",
        "tmp%5#1",
        "tmp%7#5",
        "result3#0",
        "tmp%15#2"
      ]
    },
    "1927": {
      "op": "bytec_0 // 0x151f7c75",
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%3#2",
        "tmp%5#1",
        "tmp%7#5",
        "result3#0",
        "tmp%15#2",
        "0x151f7c75"
      ]
    },
    "1928": {
      "op": "==",
      "defined_out": [
        "app#0",
        "bu#0",
        "result1#0",
        "result3#0",
        "tmp%16#1",
        "tmp%3#2",
        "tmp%5#1",
        "tmp%7#5"
      ],
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%3#2",
        "tmp%5#1",
        "tmp%7#5",
        "result3#0",
        "tmp%16#1"
      ]
    },
    "1929": {
      "error": "application log value is not the result of an ABI return",
      "op": "assert // application log value is not the result of an ABI return",
      "stack_out": [
        "app#0",
        "result1#0",
        "bu#0",
        "tmp%3#2",
        "tmp%5#1",
        "tmp%7#5",
        "result3#0"
      ]
    },
    "1930": {
      "op": "uncover 5",
      "stack_out": [
        "app#0",
        "bu#0",
        "tmp%3#2",
        "tmp%5#1",
        "tmp%7#5",
        "result3#0",
        "result1#0"
      ]
    },
    "1932": {
      "op": "==",
      "defined_out": [
        "app#0",
        "bu#0",
        "tmp%17#1",
        "tmp%3#2",
        "tmp%5#1",
        "tmp%7#5"
      ],
      "stack_out": [
        "app#0",
        "bu#0",
        "tmp%3#2",
        "tmp%5#1",
        "tmp%7#5",
        "tmp%17#1"
      ]
    },
    "1933": {
      "op": "assert",
      "stack_out": [
        "app#0",
        "bu#0",
        "tmp%3#2",
        "tmp%5#1",
        "tmp%7#5"
      ]
    },
    "1934": {
      "op": "itxn_begin"
    },
    "1935": {
      "op": "uncover 4",
      "stack_out": [
        "bu#0",
        "tmp%3#2",
        "tmp%5#1",
        "tmp%7#5",
        "app#0"
      ]
    },
    "1937": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "bu#0",
        "tmp%3#2",
        "tmp%5#1",
        "tmp%7#5"
      ]
    },
    "1939": {
      "op": "bytec 4 // method \"echo_native_tuple(string,byte[],uint64,uint512)(string,byte[],uint64,uint512)\"",
      "stack_out": [
        "bu#0",
        "tmp%3#2",
        "tmp%5#1",
        "tmp%7#5",
        "Method(echo_native_tuple(string,byte[],uint64,uint512)(string,byte[],uint64,uint512))"
      ]
    },
    "1941": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "bu#0",
        "tmp%3#2",
        "tmp%5#1",
        "tmp%7#5"
      ]
    },
    "1943": {
      "op": "bytec 5 // 0x00027331",
      "stack_out": [
        "bu#0",
        "tmp%3#2",
        "tmp%5#1",
        "tmp%7#5",
        "0x00027331"
      ]
    },
    "1945": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "bu#0",
        "tmp%3#2",
        "tmp%5#1",
        "tmp%7#5"
      ]
    },
    "1947": {
      "op": "bytec 6 // 0x00026231",
      "stack_out": [
        "bu#0",
        "tmp%3#2",
        "tmp%5#1",
        "tmp%7#5",
        "0x00026231"
      ]
    },
    "1949": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "bu#0",
        "tmp%3#2",
        "tmp%5#1",
        "tmp%7#5"
      ]
    },
    "1951": {
      "op": "bytec_2 // 0x0000000000000001",
      "stack_out": [
        "bu#0",
        "tmp%3#2",
        "tmp%5#1",
        "tmp%7#5",
        "0x0000000000000001"
      ]
    },
    "1952": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "bu#0",
        "tmp%3#2",
        "tmp%5#1",
        "tmp%7#5"
      ]
    },
    "1954": {
      "op": "bytec_1 // 0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002",
      "stack_out": [
        "bu#0",
        "tmp%3#2",
        "tmp%5#1",
        "tmp%7#5",
        "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002"
      ]
    },
    "1955": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "bu#0",
        "tmp%3#2",
        "tmp%5#1",
        "tmp%7#5"
      ]
    },
    "1957": {
      "op": "intc_1 // appl",
      "stack_out": [
        "bu#0",
        "tmp%3#2",
        "tmp%5#1",
        "tmp%7#5",
        "appl"
      ]
    },
    "1958": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "bu#0",
        "tmp%3#2",
        "tmp%5#1",
        "tmp%7#5"
      ]
    },
    "1960": {
      "op": "intc_0 // 0",
      "stack_out": [
        "bu#0",
        "tmp%3#2",
        "tmp%5#1",
        "tmp%7#5",
        "0"
      ]
    },
    "1961": {
      "op": "itxn_field Fee",
      "stack_out": [
        "bu#0",
        "tmp%3#2",
        "tmp%5#1",
        "tmp%7#5"
      ]
    },
    "1963": {
      "op": "itxn_submit"
    },
    "1964": {
      "op": "itxn LastLog",
      "defined_out": [
        "awst_tmp%3#0",
        "bu#0",
        "tmp%3#2",
        "tmp%5#1",
        "tmp%7#5"
      ],
      "stack_out": [
        "bu#0",
        "tmp%3#2",
        "tmp%5#1",
        "tmp%7#5",
        "awst_tmp%3#0"
      ]
    },
    "1966": {
      "op": "dup",
      "defined_out": [
        "awst_tmp%3#0",
        "awst_tmp%3#0 (copy)",
        "bu#0",
        "tmp%3#2",
        "tmp%5#1",
        "tmp%7#5"
      ],
      "stack_out": [
        "bu#0",
        "tmp%3#2",
        "tmp%5#1",
        "tmp%7#5",
        "awst_tmp%3#0",
        "awst_tmp%3#0 (copy)"
      ]
    },
    "1967": {
      "op": "extract 4 0",
      "defined_out": [
        "awst_tmp%3#0",
        "bu#0",
        "tmp%18#3",
        "tmp%3#2",
        "tmp%5#1",
        "tmp%7#5"
      ],
      "stack_out": [
        "bu#0",
        "tmp%3#2",
        "tmp%5#1",
        "tmp%7#5",
        "awst_tmp%3#0",
        "tmp%18#3"
      ]
    },
    "1970": {
      "op": "dig 1",
      "stack_out": [
        "bu#0",
        "tmp%3#2",
        "tmp%5#1",
        "tmp%7#5",
        "awst_tmp%3#0",
        "tmp%18#3",
        "awst_tmp%3#0 (copy)"
      ]
    },
    "1972": {
      "op": "extract 0 4",
      "defined_out": [
        "awst_tmp%3#0",
        "bu#0",
        "tmp%18#3",
        "tmp%19#3",
        "tmp%3#2",
        "tmp%5#1",
        "tmp%7#5"
      ],
      "stack_out": [
        "bu#0",
        "tmp%3#2",
        "tmp%5#1",
        "tmp%7#5",
        "awst_tmp%3#0",
        "tmp%18#3",
        "tmp%19#3"
      ]
    },
    "1975": {
      "op": "bytec_0 // 0x151f7c75",
      "stack_out": [
        "bu#0",
        "tmp%3#2",
        "tmp%5#1",
        "tmp%7#5",
        "awst_tmp%3#0",
        "tmp%18#3",
        "tmp%19#3",
        "0x151f7c75"
      ]
    },
    "1976": {
      "op": "==",
      "defined_out": [
        "awst_tmp%3#0",
        "bu#0",
        "tmp%18#3",
        "tmp%20#1",
        "tmp%3#2",
        "tmp%5#1",
        "tmp%7#5"
      ],
      "stack_out": [
        "bu#0",
        "tmp%3#2",
        "tmp%5#1",
        "tmp%7#5",
        "awst_tmp%3#0",
        "tmp%18#3",
        "tmp%20#1"
      ]
    },
    "1977": {
      "error": "application log value is not the result of an ABI return",
      "op": "assert // application log value is not the result of an ABI return",
      "stack_out": [
        "bu#0",
        "tmp%3#2",
        "tmp%5#1",
        "tmp%7#5",
        "awst_tmp%3#0",
        "tmp%18#3"
      ]
    },
    "1978": {
      "op": "dup",
      "defined_out": [
        "awst_tmp%3#0",
        "bu#0",
        "tmp%18#3",
        "tmp%18#3 (copy)",
        "tmp%3#2",
        "tmp%5#1",
        "tmp%7#5"
      ],
      "stack_out": [
        "bu#0",
        "tmp%3#2",
        "tmp%5#1",
        "tmp%7#5",
        "awst_tmp%3#0",
        "tmp%18#3",
        "tmp%18#3 (copy)"
      ]
    },
    "1979": {
      "op": "intc_0 // 0",
      "stack_out": [
        "bu#0",
        "tmp%3#2",
        "tmp%5#1",
        "tmp%7#5",
        "awst_tmp%3#0",
        "tmp%18#3",
        "tmp%18#3 (copy)",
        "0"
      ]
    },
    "1980": {
      "op": "extract_uint16",
      "defined_out": [
        "awst_tmp%3#0",
        "bu#0",
        "extract_uint16%3#0",
        "tmp%18#3",
        "tmp%3#2",
        "tmp%5#1",
        "tmp%7#5"
      ],
      "stack_out": [
        "bu#0",
        "tmp%3#2",
        "tmp%5#1",
        "tmp%7#5",
        "awst_tmp%3#0",
        "tmp%18#3",
        "extract_uint16%3#0"
      ]
    },
    "1981": {
      "op": "dig 1",
      "stack_out": [
        "bu#0",
        "tmp%3#2",
        "tmp%5#1",
        "tmp%7#5",
        "awst_tmp%3#0",
        "tmp%18#3",
        "extract_uint16%3#0",
        "tmp%18#3 (copy)"
      ]
    },
    "1983": {
      "op": "intc_3 // 2",
      "stack_out": [
        "bu#0",
        "tmp%3#2",
        "tmp%5#1",
        "tmp%7#5",
        "awst_tmp%3#0",
        "tmp%18#3",
        "extract_uint16%3#0",
        "tmp%18#3 (copy)",
        "2"
      ]
    },
    "1984": {
      "op": "extract_uint16",
      "defined_out": [
        "awst_tmp%3#0",
        "bu#0",
        "extract_uint16%3#0",
        "extract_uint16%4#0",
        "tmp%18#3",
        "tmp%3#2",
        "tmp%5#1",
        "tmp%7#5"
      ],
      "stack_out": [
        "bu#0",
        "tmp%3#2",
        "tmp%5#1",
        "tmp%7#5",
        "awst_tmp%3#0",
        "tmp%18#3",
        "extract_uint16%3#0",
        "extract_uint16%4#0"
      ]
    },
    "1985": {
      "op": "dig 2",
      "stack_out": [
        "bu#0",
        "tmp%3#2",
        "tmp%5#1",
        "tmp%7#5",
        "awst_tmp%3#0",
        "tmp%18#3",
        "extract_uint16%3#0",
        "extract_uint16%4#0",
        "tmp%18#3 (copy)"
      ]
    },
    "1987": {
      "op": "uncover 2",
      "stack_out": [
        "bu#0",
        "tmp%3#2",
        "tmp%5#1",
        "tmp%7#5",
        "awst_tmp%3#0",
        "tmp%18#3",
        "extract_uint16%4#0",
        "tmp%18#3 (copy)",
        "extract_uint16%3#0"
      ]
    },
    "1989": {
      "op": "dig 2",
      "defined_out": [
        "awst_tmp%3#0",
        "bu#0",
        "extract_uint16%3#0",
        "extract_uint16%4#0",
        "extract_uint16%4#0 (copy)",
        "tmp%18#3",
        "tmp%18#3 (copy)",
        "tmp%3#2",
        "tmp%5#1",
        "tmp%7#5"
      ],
      "stack_out": [
        "bu#0",
        "tmp%3#2",
        "tmp%5#1",
        "tmp%7#5",
        "awst_tmp%3#0",
        "tmp%18#3",
        "extract_uint16%4#0",
        "tmp%18#3 (copy)",
        "extract_uint16%3#0",
        "extract_uint16%4#0 (copy)"
      ]
    },
    "1991": {
      "op": "substring3",
      "defined_out": [
        "awst_tmp%3#0",
        "bu#0",
        "extract_uint16%4#0",
        "substring3%2#0",
        "tmp%18#3",
        "tmp%3#2",
        "tmp%5#1",
        "tmp%7#5"
      ],
      "stack_out": [
        "bu#0",
        "tmp%3#2",
        "tmp%5#1",
        "tmp%7#5",
        "awst_tmp%3#0",
        "tmp%18#3",
        "extract_uint16%4#0",
        "substring3%2#0"
      ]
    },
    "1992": {
      "op": "extract 2 0",
      "defined_out": [
        "awst_tmp%3#0",
        "bu#0",
        "extract_uint16%4#0",
        "result_native.0#0",
        "tmp%18#3",
        "tmp%3#2",
        "tmp%5#1",
        "tmp%7#5"
      ],
      "stack_out": [
        "bu#0",
        "tmp%3#2",
        "tmp%5#1",
        "tmp%7#5",
        "awst_tmp%3#0",
        "tmp%18#3",
        "extract_uint16%4#0",
        "result_native.0#0"
      ]
    },
    "1995": {
      "op": "dig 2",
      "stack_out": [
        "bu#0",
        "tmp%3#2",
        "tmp%5#1",
        "tmp%7#5",
        "awst_tmp%3#0",
        "tmp%18#3",
        "extract_uint16%4#0",
        "result_native.0#0",
        "tmp%18#3 (copy)"
      ]
    },
    "1997": {
      "op": "len",
      "defined_out": [
        "awst_tmp%3#0",
        "bu#0",
        "extract_uint16%4#0",
        "len%1#0",
        "result_native.0#0",
        "tmp%18#3",
        "tmp%3#2",
        "tmp%5#1",
        "tmp%7#5"
      ],
      "stack_out": [
        "bu#0",
        "tmp%3#2",
        "tmp%5#1",
        "tmp%7#5",
        "awst_tmp%3#0",
        "tmp%18#3",
        "extract_uint16%4#0",
        "result_native.0#0",
        "len%1#0"
      ]
    },
    "1998": {
      "op": "swap"
    },
    "1999": {
      "op": "cover 3",
      "stack_out": [
        "bu#0",
        "tmp%3#2",
        "tmp%5#1",
        "tmp%7#5",
        "awst_tmp%3#0",
        "result_native.0#0",
        "tmp%18#3",
        "extract_uint16%4#0",
        "len%1#0"
      ]
    },
    "2001": {
      "op": "substring3",
      "defined_out": [
        "awst_tmp%3#0",
        "bu#0",
        "result_native.0#0",
        "substring3%3#0",
        "tmp%3#2",
        "tmp%5#1",
        "tmp%7#5"
      ],
      "stack_out": [
        "bu#0",
        "tmp%3#2",
        "tmp%5#1",
        "tmp%7#5",
        "awst_tmp%3#0",
        "result_native.0#0",
        "substring3%3#0"
      ]
    },
    "2002": {
      "op": "extract 2 0",
      "defined_out": [
        "awst_tmp%3#0",
        "bu#0",
        "result_native.0#0",
        "result_native.1#0",
        "tmp%3#2",
        "tmp%5#1",
        "tmp%7#5"
      ],
      "stack_out": [
        "bu#0",
        "tmp%3#2",
        "tmp%5#1",
        "tmp%7#5",
        "awst_tmp%3#0",
        "result_native.0#0",
        "result_native.1#0"
      ]
    },
    "2005": {
      "op": "dig 2",
      "stack_out": [
        "bu#0",
        "tmp%3#2",
        "tmp%5#1",
        "tmp%7#5",
        "awst_tmp%3#0",
        "result_native.0#0",
        "result_native.1#0",
        "awst_tmp%3#0 (copy)"
      ]
    },
    "2007": {
      "op": "pushint 8 // 8",
      "stack_out": [
        "bu#0",
        "tmp%3#2",
        "tmp%5#1",
        "tmp%7#5",
        "awst_tmp%3#0",
        "result_native.0#0",
        "result_native.1#0",
        "awst_tmp%3#0 (copy)",
        "8"
      ]
    },
    "2009": {
      "op": "extract_uint64",
      "defined_out": [
        "awst_tmp%3#0",
        "bu#0",
        "result_native.0#0",
        "result_native.1#0",
        "result_native.2#0",
        "tmp%3#2",
        "tmp%5#1",
        "tmp%7#5"
      ],
      "stack_out": [
        "bu#0",
        "tmp%3#2",
        "tmp%5#1",
        "tmp%7#5",
        "awst_tmp%3#0",
        "result_native.0#0",
        "result_native.1#0",
        "result_native.2#0"
      ]
    },
    "2010": {
      "op": "uncover 3",
      "stack_out": [
        "bu#0",
        "tmp%3#2",
        "tmp%5#1",
        "tmp%7#5",
        "result_native.0#0",
        "result_native.1#0",
        "result_native.2#0",
        "awst_tmp%3#0"
      ]
    },
    "2012": {
      "op": "extract 16 64",
      "defined_out": [
        "bu#0",
        "result_native.0#0",
        "result_native.1#0",
        "result_native.2#0",
        "result_native.3#0",
        "tmp%3#2",
        "tmp%5#1",
        "tmp%7#5"
      ],
      "stack_out": [
        "bu#0",
        "tmp%3#2",
        "tmp%5#1",
        "tmp%7#5",
        "result_native.0#0",
        "result_native.1#0",
        "result_native.2#0",
        "result_native.3#0"
      ]
    },
    "2015": {
      "op": "uncover 6",
      "stack_out": [
        "bu#0",
        "tmp%5#1",
        "tmp%7#5",
        "result_native.0#0",
        "result_native.1#0",
        "result_native.2#0",
        "result_native.3#0",
        "tmp%3#2"
      ]
    },
    "2017": {
      "op": "uncover 4",
      "stack_out": [
        "bu#0",
        "tmp%5#1",
        "tmp%7#5",
        "result_native.1#0",
        "result_native.2#0",
        "result_native.3#0",
        "tmp%3#2",
        "result_native.0#0"
      ]
    },
    "2019": {
      "op": "==",
      "defined_out": [
        "bu#0",
        "result_native.1#0",
        "result_native.2#0",
        "result_native.3#0",
        "tmp%25#1",
        "tmp%5#1",
        "tmp%7#5"
      ],
      "stack_out": [
        "bu#0",
        "tmp%5#1",
        "tmp%7#5",
        "result_native.1#0",
        "result_native.2#0",
        "result_native.3#0",
        "tmp%25#1"
      ]
    },
    "2020": {
      "op": "assert",
      "stack_out": [
        "bu#0",
        "tmp%5#1",
        "tmp%7#5",
        "result_native.1#0",
        "result_native.2#0",
        "result_native.3#0"
      ]
    },
    "2021": {
      "op": "uncover 4",
      "stack_out": [
        "bu#0",
        "tmp%7#5",
        "result_native.1#0",
        "result_native.2#0",
        "result_native.3#0",
        "tmp%5#1"
      ]
    },
    "2023": {
      "op": "uncover 3",
      "stack_out": [
        "bu#0",
        "tmp%7#5",
        "result_native.2#0",
        "result_native.3#0",
        "tmp%5#1",
        "result_native.1#0"
      ]
    },
    "2025": {
      "op": "==",
      "defined_out": [
        "bu#0",
        "result_native.2#0",
        "result_native.3#0",
        "tmp%27#1",
        "tmp%7#5"
      ],
      "stack_out": [
        "bu#0",
        "tmp%7#5",
        "result_native.2#0",
        "result_native.3#0",
        "tmp%27#1"
      ]
    },
    "2026": {
      "op": "assert",
      "stack_out": [
        "bu#0",
        "tmp%7#5",
        "result_native.2#0",
        "result_native.3#0"
      ]
    },
    "2027": {
      "op": "cover 2",
      "stack_out": [
        "bu#0",
        "result_native.3#0",
        "tmp%7#5",
        "result_native.2#0"
      ]
    },
    "2029": {
      "op": "==",
      "defined_out": [
        "bu#0",
        "result_native.3#0",
        "tmp%29#1"
      ],
      "stack_out": [
        "bu#0",
        "result_native.3#0",
        "tmp%29#1"
      ]
    },
    "2030": {
      "op": "assert",
      "stack_out": [
        "bu#0",
        "result_native.3#0"
      ]
    },
    "2031": {
      "op": "b==",
      "defined_out": [
        "tmp%30#0"
      ],
      "stack_out": [
        "tmp%30#0"
      ]
    },
    "2032": {
      "op": "assert",
      "stack_out": []
    },
    "2033": {
      "op": "intc_2 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "2034": {
      "op": "return",
      "stack_out": []
    },
    "2035": {
      "block": "main_test_native_biguint_route@14",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%73#0"
      ],
      "stack_out": [
        "tmp%73#0"
      ]
    },
    "2037": {
      "op": "!",
      "defined_out": [
        "tmp%74#0"
      ],
      "stack_out": [
        "tmp%74#0"
      ]
    },
    "2038": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "2039": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%75#0"
      ],
      "stack_out": [
        "tmp%75#0"
      ]
    },
    "2041": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "2042": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded(uint8)%12#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint8)%12#0"
      ]
    },
    "2045": {
      "op": "btoi",
      "defined_out": [
        "tmp%77#0"
      ],
      "stack_out": [
        "tmp%77#0"
      ]
    },
    "2046": {
      "op": "txnas Applications",
      "defined_out": [
        "app#0"
      ],
      "stack_out": [
        "app#0"
      ]
    },
    "2048": {
      "op": "itxn_begin"
    },
    "2049": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "app#0 (copy)"
      ],
      "stack_out": [
        "app#0",
        "app#0 (copy)"
      ]
    },
    "2050": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "app#0"
      ]
    },
    "2052": {
      "op": "bytec 14 // method \"echo_native_biguint(uint512)uint512\"",
      "defined_out": [
        "Method(echo_native_biguint(uint512)uint512)",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "Method(echo_native_biguint(uint512)uint512)"
      ]
    },
    "2054": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0"
      ]
    },
    "2056": {
      "op": "bytec_1 // 0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002",
      "defined_out": [
        "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002"
      ]
    },
    "2057": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0"
      ]
    },
    "2059": {
      "op": "intc_1 // appl",
      "defined_out": [
        "app#0",
        "appl"
      ],
      "stack_out": [
        "app#0",
        "appl"
      ]
    },
    "2060": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "app#0"
      ]
    },
    "2062": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "0"
      ]
    },
    "2063": {
      "op": "itxn_field Fee",
      "stack_out": [
        "app#0"
      ]
    },
    "2065": {
      "op": "itxn_submit"
    },
    "2066": {
      "op": "itxn LastLog",
      "defined_out": [
        "app#0",
        "awst_tmp%0#0"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0"
      ]
    },
    "2068": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ]
    },
    "2069": {
      "op": "extract 4 0",
      "defined_out": [
        "app#0",
        "awst_tmp%0#0",
        "result1#1"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "result1#1"
      ]
    },
    "2072": {
      "op": "swap",
      "stack_out": [
        "app#0",
        "result1#1",
        "awst_tmp%0#0"
      ]
    },
    "2073": {
      "op": "extract 0 4",
      "defined_out": [
        "app#0",
        "result1#1",
        "tmp%1#1"
      ],
      "stack_out": [
        "app#0",
        "result1#1",
        "tmp%1#1"
      ]
    },
    "2076": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "app#0",
        "result1#1",
        "tmp%1#1"
      ],
      "stack_out": [
        "app#0",
        "result1#1",
        "tmp%1#1",
        "0x151f7c75"
      ]
    },
    "2077": {
      "op": "==",
      "defined_out": [
        "app#0",
        "result1#1",
        "tmp%2#1"
      ],
      "stack_out": [
        "app#0",
        "result1#1",
        "tmp%2#1"
      ]
    },
    "2078": {
      "error": "application log value is not the result of an ABI return",
      "op": "assert // application log value is not the result of an ABI return",
      "stack_out": [
        "app#0",
        "result1#1"
      ]
    },
    "2079": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "result1#1",
        "result1#1 (copy)"
      ],
      "stack_out": [
        "app#0",
        "result1#1",
        "result1#1 (copy)"
      ]
    },
    "2080": {
      "op": "bytec 13 // 0x03",
      "defined_out": [
        "0x03",
        "app#0",
        "result1#1",
        "result1#1 (copy)"
      ],
      "stack_out": [
        "app#0",
        "result1#1",
        "result1#1 (copy)",
        "0x03"
      ]
    },
    "2082": {
      "op": "b==",
      "defined_out": [
        "app#0",
        "result1#1",
        "tmp%3#1"
      ],
      "stack_out": [
        "app#0",
        "result1#1",
        "tmp%3#1"
      ]
    },
    "2083": {
      "op": "assert",
      "stack_out": [
        "app#0",
        "result1#1"
      ]
    },
    "2084": {
      "op": "itxn_begin"
    },
    "2085": {
      "op": "dig 1",
      "stack_out": [
        "app#0",
        "result1#1",
        "app#0 (copy)"
      ]
    },
    "2087": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "app#0",
        "result1#1"
      ]
    },
    "2089": {
      "op": "bytec 14 // method \"echo_native_biguint(uint512)uint512\"",
      "stack_out": [
        "app#0",
        "result1#1",
        "Method(echo_native_biguint(uint512)uint512)"
      ]
    },
    "2091": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0",
        "result1#1"
      ]
    },
    "2093": {
      "op": "bytec_1 // 0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002",
      "stack_out": [
        "app#0",
        "result1#1",
        "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002"
      ]
    },
    "2094": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0",
        "result1#1"
      ]
    },
    "2096": {
      "op": "intc_1 // appl",
      "stack_out": [
        "app#0",
        "result1#1",
        "appl"
      ]
    },
    "2097": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "app#0",
        "result1#1"
      ]
    },
    "2099": {
      "op": "intc_0 // 0",
      "stack_out": [
        "app#0",
        "result1#1",
        "0"
      ]
    },
    "2100": {
      "op": "itxn_field Fee",
      "stack_out": [
        "app#0",
        "result1#1"
      ]
    },
    "2102": {
      "op": "itxn_submit"
    },
    "2103": {
      "op": "itxn LastLog",
      "defined_out": [
        "app#0",
        "awst_tmp%1#0",
        "result1#1"
      ],
      "stack_out": [
        "app#0",
        "result1#1",
        "awst_tmp%1#0"
      ]
    },
    "2105": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "awst_tmp%1#0",
        "awst_tmp%1#0 (copy)",
        "result1#1"
      ],
      "stack_out": [
        "app#0",
        "result1#1",
        "awst_tmp%1#0",
        "awst_tmp%1#0 (copy)"
      ]
    },
    "2106": {
      "op": "extract 4 0",
      "defined_out": [
        "app#0",
        "awst_tmp%1#0",
        "result1#1",
        "result2#1"
      ],
      "stack_out": [
        "app#0",
        "result1#1",
        "awst_tmp%1#0",
        "result2#1"
      ]
    },
    "2109": {
      "op": "swap",
      "stack_out": [
        "app#0",
        "result1#1",
        "result2#1",
        "awst_tmp%1#0"
      ]
    },
    "2110": {
      "op": "extract 0 4",
      "defined_out": [
        "app#0",
        "result1#1",
        "result2#1",
        "tmp%5#1"
      ],
      "stack_out": [
        "app#0",
        "result1#1",
        "result2#1",
        "tmp%5#1"
      ]
    },
    "2113": {
      "op": "bytec_0 // 0x151f7c75",
      "stack_out": [
        "app#0",
        "result1#1",
        "result2#1",
        "tmp%5#1",
        "0x151f7c75"
      ]
    },
    "2114": {
      "op": "==",
      "defined_out": [
        "app#0",
        "result1#1",
        "result2#1",
        "tmp%6#1"
      ],
      "stack_out": [
        "app#0",
        "result1#1",
        "result2#1",
        "tmp%6#1"
      ]
    },
    "2115": {
      "error": "application log value is not the result of an ABI return",
      "op": "assert // application log value is not the result of an ABI return",
      "stack_out": [
        "app#0",
        "result1#1",
        "result2#1"
      ]
    },
    "2116": {
      "op": "dig 1",
      "stack_out": [
        "app#0",
        "result1#1",
        "result2#1",
        "result1#1 (copy)"
      ]
    },
    "2118": {
      "op": "b==",
      "defined_out": [
        "app#0",
        "result1#1",
        "tmp%7#1"
      ],
      "stack_out": [
        "app#0",
        "result1#1",
        "tmp%7#1"
      ]
    },
    "2119": {
      "op": "assert",
      "stack_out": [
        "app#0",
        "result1#1"
      ]
    },
    "2120": {
      "op": "itxn_begin"
    },
    "2121": {
      "op": "swap",
      "stack_out": [
        "result1#1",
        "app#0"
      ]
    },
    "2122": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "result1#1"
      ]
    },
    "2124": {
      "op": "bytec 14 // method \"echo_native_biguint(uint512)uint512\"",
      "stack_out": [
        "result1#1",
        "Method(echo_native_biguint(uint512)uint512)"
      ]
    },
    "2126": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "result1#1"
      ]
    },
    "2128": {
      "op": "bytec_1 // 0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002",
      "stack_out": [
        "result1#1",
        "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002"
      ]
    },
    "2129": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "result1#1"
      ]
    },
    "2131": {
      "op": "intc_1 // appl",
      "stack_out": [
        "result1#1",
        "appl"
      ]
    },
    "2132": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "result1#1"
      ]
    },
    "2134": {
      "op": "intc_0 // 0",
      "stack_out": [
        "result1#1",
        "0"
      ]
    },
    "2135": {
      "op": "itxn_field Fee",
      "stack_out": [
        "result1#1"
      ]
    },
    "2137": {
      "op": "itxn_submit"
    },
    "2138": {
      "op": "itxn LastLog",
      "defined_out": [
        "awst_tmp%2#0",
        "result1#1"
      ],
      "stack_out": [
        "result1#1",
        "awst_tmp%2#0"
      ]
    },
    "2140": {
      "op": "dup",
      "defined_out": [
        "awst_tmp%2#0",
        "awst_tmp%2#0 (copy)",
        "result1#1"
      ],
      "stack_out": [
        "result1#1",
        "awst_tmp%2#0",
        "awst_tmp%2#0 (copy)"
      ]
    },
    "2141": {
      "op": "extract 4 0",
      "defined_out": [
        "awst_tmp%2#0",
        "result1#1",
        "result3#1"
      ],
      "stack_out": [
        "result1#1",
        "awst_tmp%2#0",
        "result3#1"
      ]
    },
    "2144": {
      "op": "swap",
      "stack_out": [
        "result1#1",
        "result3#1",
        "awst_tmp%2#0"
      ]
    },
    "2145": {
      "op": "extract 0 4",
      "defined_out": [
        "result1#1",
        "result3#1",
        "tmp%9#4"
      ],
      "stack_out": [
        "result1#1",
        "result3#1",
        "tmp%9#4"
      ]
    },
    "2148": {
      "op": "bytec_0 // 0x151f7c75",
      "stack_out": [
        "result1#1",
        "result3#1",
        "tmp%9#4",
        "0x151f7c75"
      ]
    },
    "2149": {
      "op": "==",
      "defined_out": [
        "result1#1",
        "result3#1",
        "tmp%10#2"
      ],
      "stack_out": [
        "result1#1",
        "result3#1",
        "tmp%10#2"
      ]
    },
    "2150": {
      "error": "application log value is not the result of an ABI return",
      "op": "assert // application log value is not the result of an ABI return",
      "stack_out": [
        "result1#1",
        "result3#1"
      ]
    },
    "2151": {
      "op": "b==",
      "defined_out": [
        "tmp%11#1"
      ],
      "stack_out": [
        "tmp%11#1"
      ]
    },
    "2152": {
      "op": "assert",
      "stack_out": []
    },
    "2153": {
      "op": "intc_2 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "2154": {
      "op": "return",
      "stack_out": []
    },
    "2155": {
      "block": "main_test_native_uint64_route@13",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%67#0"
      ],
      "stack_out": [
        "tmp%67#0"
      ]
    },
    "2157": {
      "op": "!",
      "defined_out": [
        "tmp%68#0"
      ],
      "stack_out": [
        "tmp%68#0"
      ]
    },
    "2158": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "2159": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%69#0"
      ],
      "stack_out": [
        "tmp%69#0"
      ]
    },
    "2161": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "2162": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded(uint8)%11#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint8)%11#0"
      ]
    },
    "2165": {
      "op": "btoi",
      "defined_out": [
        "tmp%71#0"
      ],
      "stack_out": [
        "tmp%71#0"
      ]
    },
    "2166": {
      "op": "txnas Applications",
      "defined_out": [
        "app#0"
      ],
      "stack_out": [
        "app#0"
      ]
    },
    "2168": {
      "op": "itxn_begin"
    },
    "2169": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "app#0 (copy)"
      ],
      "stack_out": [
        "app#0",
        "app#0 (copy)"
      ]
    },
    "2170": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "app#0"
      ]
    },
    "2172": {
      "op": "bytec 15 // method \"echo_native_uint64(uint64)uint64\"",
      "defined_out": [
        "Method(echo_native_uint64(uint64)uint64)",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "Method(echo_native_uint64(uint64)uint64)"
      ]
    },
    "2174": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0"
      ]
    },
    "2176": {
      "op": "bytec_2 // 0x0000000000000001",
      "defined_out": [
        "0x0000000000000001",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "0x0000000000000001"
      ]
    },
    "2177": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0"
      ]
    },
    "2179": {
      "op": "intc_1 // appl",
      "defined_out": [
        "app#0",
        "appl"
      ],
      "stack_out": [
        "app#0",
        "appl"
      ]
    },
    "2180": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "app#0"
      ]
    },
    "2182": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "0"
      ]
    },
    "2183": {
      "op": "itxn_field Fee",
      "stack_out": [
        "app#0"
      ]
    },
    "2185": {
      "op": "itxn_submit"
    },
    "2186": {
      "op": "itxn LastLog",
      "defined_out": [
        "app#0",
        "awst_tmp%0#0"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0"
      ]
    },
    "2188": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ]
    },
    "2189": {
      "op": "extract 4 0",
      "defined_out": [
        "app#0",
        "awst_tmp%0#0",
        "tmp%0#2"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "tmp%0#2"
      ]
    },
    "2192": {
      "op": "swap",
      "stack_out": [
        "app#0",
        "tmp%0#2",
        "awst_tmp%0#0"
      ]
    },
    "2193": {
      "op": "extract 0 4",
      "defined_out": [
        "app#0",
        "tmp%0#2",
        "tmp%1#1"
      ],
      "stack_out": [
        "app#0",
        "tmp%0#2",
        "tmp%1#1"
      ]
    },
    "2196": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "app#0",
        "tmp%0#2",
        "tmp%1#1"
      ],
      "stack_out": [
        "app#0",
        "tmp%0#2",
        "tmp%1#1",
        "0x151f7c75"
      ]
    },
    "2197": {
      "op": "==",
      "defined_out": [
        "app#0",
        "tmp%0#2",
        "tmp%2#1"
      ],
      "stack_out": [
        "app#0",
        "tmp%0#2",
        "tmp%2#1"
      ]
    },
    "2198": {
      "error": "application log value is not the result of an ABI return",
      "op": "assert // application log value is not the result of an ABI return",
      "stack_out": [
        "app#0",
        "tmp%0#2"
      ]
    },
    "2199": {
      "op": "btoi",
      "defined_out": [
        "app#0",
        "result1#2"
      ],
      "stack_out": [
        "app#0",
        "result1#2"
      ]
    },
    "2200": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "result1#2",
        "result1#2 (copy)"
      ],
      "stack_out": [
        "app#0",
        "result1#2",
        "result1#2 (copy)"
      ]
    },
    "2201": {
      "op": "intc_3 // 2",
      "defined_out": [
        "2",
        "app#0",
        "result1#2",
        "result1#2 (copy)"
      ],
      "stack_out": [
        "app#0",
        "result1#2",
        "result1#2 (copy)",
        "2"
      ]
    },
    "2202": {
      "op": "==",
      "defined_out": [
        "app#0",
        "result1#2",
        "tmp%4#0"
      ],
      "stack_out": [
        "app#0",
        "result1#2",
        "tmp%4#0"
      ]
    },
    "2203": {
      "op": "assert",
      "stack_out": [
        "app#0",
        "result1#2"
      ]
    },
    "2204": {
      "op": "itxn_begin"
    },
    "2205": {
      "op": "intc_2 // 1",
      "defined_out": [
        "1",
        "app#0",
        "result1#2"
      ],
      "stack_out": [
        "app#0",
        "result1#2",
        "1"
      ]
    },
    "2206": {
      "op": "itob",
      "defined_out": [
        "app#0",
        "result1#2",
        "val_as_bytes%0#1"
      ],
      "stack_out": [
        "app#0",
        "result1#2",
        "val_as_bytes%0#1"
      ]
    },
    "2207": {
      "op": "dig 2",
      "stack_out": [
        "app#0",
        "result1#2",
        "val_as_bytes%0#1",
        "app#0 (copy)"
      ]
    },
    "2209": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "app#0",
        "result1#2",
        "val_as_bytes%0#1"
      ]
    },
    "2211": {
      "op": "bytec 15 // method \"echo_native_uint64(uint64)uint64\"",
      "stack_out": [
        "app#0",
        "result1#2",
        "val_as_bytes%0#1",
        "Method(echo_native_uint64(uint64)uint64)"
      ]
    },
    "2213": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0",
        "result1#2",
        "val_as_bytes%0#1"
      ]
    },
    "2215": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0",
        "result1#2"
      ]
    },
    "2217": {
      "op": "intc_1 // appl",
      "stack_out": [
        "app#0",
        "result1#2",
        "appl"
      ]
    },
    "2218": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "app#0",
        "result1#2"
      ]
    },
    "2220": {
      "op": "intc_0 // 0",
      "stack_out": [
        "app#0",
        "result1#2",
        "0"
      ]
    },
    "2221": {
      "op": "itxn_field Fee",
      "stack_out": [
        "app#0",
        "result1#2"
      ]
    },
    "2223": {
      "op": "itxn_submit"
    },
    "2224": {
      "op": "itxn LastLog",
      "defined_out": [
        "app#0",
        "awst_tmp%1#0",
        "result1#2"
      ],
      "stack_out": [
        "app#0",
        "result1#2",
        "awst_tmp%1#0"
      ]
    },
    "2226": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "awst_tmp%1#0",
        "awst_tmp%1#0 (copy)",
        "result1#2"
      ],
      "stack_out": [
        "app#0",
        "result1#2",
        "awst_tmp%1#0",
        "awst_tmp%1#0 (copy)"
      ]
    },
    "2227": {
      "op": "extract 4 0",
      "defined_out": [
        "app#0",
        "awst_tmp%1#0",
        "result1#2",
        "tmp%5#1"
      ],
      "stack_out": [
        "app#0",
        "result1#2",
        "awst_tmp%1#0",
        "tmp%5#1"
      ]
    },
    "2230": {
      "op": "swap",
      "stack_out": [
        "app#0",
        "result1#2",
        "tmp%5#1",
        "awst_tmp%1#0"
      ]
    },
    "2231": {
      "op": "extract 0 4",
      "defined_out": [
        "app#0",
        "result1#2",
        "tmp%5#1",
        "tmp%6#3"
      ],
      "stack_out": [
        "app#0",
        "result1#2",
        "tmp%5#1",
        "tmp%6#3"
      ]
    },
    "2234": {
      "op": "bytec_0 // 0x151f7c75",
      "stack_out": [
        "app#0",
        "result1#2",
        "tmp%5#1",
        "tmp%6#3",
        "0x151f7c75"
      ]
    },
    "2235": {
      "op": "==",
      "defined_out": [
        "app#0",
        "result1#2",
        "tmp%5#1",
        "tmp%7#1"
      ],
      "stack_out": [
        "app#0",
        "result1#2",
        "tmp%5#1",
        "tmp%7#1"
      ]
    },
    "2236": {
      "error": "application log value is not the result of an ABI return",
      "op": "assert // application log value is not the result of an ABI return",
      "stack_out": [
        "app#0",
        "result1#2",
        "tmp%5#1"
      ]
    },
    "2237": {
      "op": "btoi",
      "defined_out": [
        "app#0",
        "result1#2",
        "result2#2"
      ],
      "stack_out": [
        "app#0",
        "result1#2",
        "result2#2"
      ]
    },
    "2238": {
      "op": "dig 1",
      "stack_out": [
        "app#0",
        "result1#2",
        "result2#2",
        "result1#2 (copy)"
      ]
    },
    "2240": {
      "op": "==",
      "defined_out": [
        "app#0",
        "result1#2",
        "tmp%9#1"
      ],
      "stack_out": [
        "app#0",
        "result1#2",
        "tmp%9#1"
      ]
    },
    "2241": {
      "op": "assert",
      "stack_out": [
        "app#0",
        "result1#2"
      ]
    },
    "2242": {
      "op": "itxn_begin"
    },
    "2243": {
      "op": "swap",
      "stack_out": [
        "result1#2",
        "app#0"
      ]
    },
    "2244": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "result1#2"
      ]
    },
    "2246": {
      "op": "bytec 15 // method \"echo_native_uint64(uint64)uint64\"",
      "stack_out": [
        "result1#2",
        "Method(echo_native_uint64(uint64)uint64)"
      ]
    },
    "2248": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "result1#2"
      ]
    },
    "2250": {
      "op": "bytec_2 // 0x0000000000000001",
      "stack_out": [
        "result1#2",
        "0x0000000000000001"
      ]
    },
    "2251": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "result1#2"
      ]
    },
    "2253": {
      "op": "intc_1 // appl",
      "stack_out": [
        "result1#2",
        "appl"
      ]
    },
    "2254": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "result1#2"
      ]
    },
    "2256": {
      "op": "intc_0 // 0",
      "stack_out": [
        "result1#2",
        "0"
      ]
    },
    "2257": {
      "op": "itxn_field Fee",
      "stack_out": [
        "result1#2"
      ]
    },
    "2259": {
      "op": "itxn_submit"
    },
    "2260": {
      "op": "itxn LastLog",
      "defined_out": [
        "awst_tmp%2#0",
        "result1#2"
      ],
      "stack_out": [
        "result1#2",
        "awst_tmp%2#0"
      ]
    },
    "2262": {
      "op": "dup",
      "defined_out": [
        "awst_tmp%2#0",
        "awst_tmp%2#0 (copy)",
        "result1#2"
      ],
      "stack_out": [
        "result1#2",
        "awst_tmp%2#0",
        "awst_tmp%2#0 (copy)"
      ]
    },
    "2263": {
      "op": "extract 4 0",
      "defined_out": [
        "awst_tmp%2#0",
        "result1#2",
        "tmp%10#1"
      ],
      "stack_out": [
        "result1#2",
        "awst_tmp%2#0",
        "tmp%10#1"
      ]
    },
    "2266": {
      "op": "swap",
      "stack_out": [
        "result1#2",
        "tmp%10#1",
        "awst_tmp%2#0"
      ]
    },
    "2267": {
      "op": "extract 0 4",
      "defined_out": [
        "result1#2",
        "tmp%10#1",
        "tmp%11#2"
      ],
      "stack_out": [
        "result1#2",
        "tmp%10#1",
        "tmp%11#2"
      ]
    },
    "2270": {
      "op": "bytec_0 // 0x151f7c75",
      "stack_out": [
        "result1#2",
        "tmp%10#1",
        "tmp%11#2",
        "0x151f7c75"
      ]
    },
    "2271": {
      "op": "==",
      "defined_out": [
        "result1#2",
        "tmp%10#1",
        "tmp%12#0"
      ],
      "stack_out": [
        "result1#2",
        "tmp%10#1",
        "tmp%12#0"
      ]
    },
    "2272": {
      "error": "application log value is not the result of an ABI return",
      "op": "assert // application log value is not the result of an ABI return",
      "stack_out": [
        "result1#2",
        "tmp%10#1"
      ]
    },
    "2273": {
      "op": "btoi",
      "defined_out": [
        "result1#2",
        "result3#2"
      ],
      "stack_out": [
        "result1#2",
        "result3#2"
      ]
    },
    "2274": {
      "op": "==",
      "defined_out": [
        "tmp%14#2"
      ],
      "stack_out": [
        "tmp%14#2"
      ]
    },
    "2275": {
      "op": "assert",
      "stack_out": []
    },
    "2276": {
      "op": "intc_2 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "2277": {
      "op": "return",
      "stack_out": []
    },
    "2278": {
      "block": "main_test_native_bytes_route@12",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%61#0"
      ],
      "stack_out": [
        "tmp%61#0"
      ]
    },
    "2280": {
      "op": "!",
      "defined_out": [
        "tmp%62#0"
      ],
      "stack_out": [
        "tmp%62#0"
      ]
    },
    "2281": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "2282": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%63#0"
      ],
      "stack_out": [
        "tmp%63#0"
      ]
    },
    "2284": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "2285": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded(uint8)%10#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint8)%10#0"
      ]
    },
    "2288": {
      "op": "btoi",
      "defined_out": [
        "tmp%65#0"
      ],
      "stack_out": [
        "tmp%65#0"
      ]
    },
    "2289": {
      "op": "txnas Applications",
      "defined_out": [
        "app#0"
      ],
      "stack_out": [
        "app#0"
      ]
    },
    "2291": {
      "op": "itxn_begin"
    },
    "2292": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "app#0 (copy)"
      ],
      "stack_out": [
        "app#0",
        "app#0 (copy)"
      ]
    },
    "2293": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "app#0"
      ]
    },
    "2295": {
      "op": "bytec 16 // method \"echo_native_bytes(byte[])byte[]\"",
      "defined_out": [
        "Method(echo_native_bytes(byte[])byte[])",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "Method(echo_native_bytes(byte[])byte[])"
      ]
    },
    "2297": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0"
      ]
    },
    "2299": {
      "op": "bytec 17 // 0x000162",
      "defined_out": [
        "0x000162",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "0x000162"
      ]
    },
    "2301": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0"
      ]
    },
    "2303": {
      "op": "intc_1 // appl",
      "defined_out": [
        "app#0",
        "appl"
      ],
      "stack_out": [
        "app#0",
        "appl"
      ]
    },
    "2304": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "app#0"
      ]
    },
    "2306": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "0"
      ]
    },
    "2307": {
      "op": "itxn_field Fee",
      "stack_out": [
        "app#0"
      ]
    },
    "2309": {
      "op": "itxn_submit"
    },
    "2310": {
      "op": "itxn LastLog",
      "defined_out": [
        "app#0",
        "awst_tmp%0#0"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0"
      ]
    },
    "2312": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ]
    },
    "2313": {
      "op": "extract 0 4",
      "defined_out": [
        "app#0",
        "awst_tmp%0#0",
        "tmp%1#1"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "tmp%1#1"
      ]
    },
    "2316": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "app#0",
        "awst_tmp%0#0",
        "tmp%1#1"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "tmp%1#1",
        "0x151f7c75"
      ]
    },
    "2317": {
      "op": "==",
      "defined_out": [
        "app#0",
        "awst_tmp%0#0",
        "tmp%2#1"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "tmp%2#1"
      ]
    },
    "2318": {
      "error": "application log value is not the result of an ABI return",
      "op": "assert // application log value is not the result of an ABI return",
      "stack_out": [
        "app#0",
        "awst_tmp%0#0"
      ]
    },
    "2319": {
      "op": "extract 6 0",
      "defined_out": [
        "app#0",
        "result1#0"
      ],
      "stack_out": [
        "app#0",
        "result1#0"
      ]
    },
    "2322": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "result1#0",
        "result1#0 (copy)"
      ],
      "stack_out": [
        "app#0",
        "result1#0",
        "result1#0 (copy)"
      ]
    },
    "2323": {
      "op": "pushbytes 0x6563686f3a2062",
      "defined_out": [
        "0x6563686f3a2062",
        "app#0",
        "result1#0",
        "result1#0 (copy)"
      ],
      "stack_out": [
        "app#0",
        "result1#0",
        "result1#0 (copy)",
        "0x6563686f3a2062"
      ]
    },
    "2332": {
      "op": "==",
      "defined_out": [
        "app#0",
        "result1#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "app#0",
        "result1#0",
        "tmp%4#0"
      ]
    },
    "2333": {
      "op": "assert",
      "stack_out": [
        "app#0",
        "result1#0"
      ]
    },
    "2334": {
      "op": "itxn_begin"
    },
    "2335": {
      "op": "dig 1",
      "stack_out": [
        "app#0",
        "result1#0",
        "app#0 (copy)"
      ]
    },
    "2337": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "app#0",
        "result1#0"
      ]
    },
    "2339": {
      "op": "bytec 16 // method \"echo_native_bytes(byte[])byte[]\"",
      "stack_out": [
        "app#0",
        "result1#0",
        "Method(echo_native_bytes(byte[])byte[])"
      ]
    },
    "2341": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0",
        "result1#0"
      ]
    },
    "2343": {
      "op": "bytec 17 // 0x000162",
      "stack_out": [
        "app#0",
        "result1#0",
        "0x000162"
      ]
    },
    "2345": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0",
        "result1#0"
      ]
    },
    "2347": {
      "op": "intc_1 // appl",
      "stack_out": [
        "app#0",
        "result1#0",
        "appl"
      ]
    },
    "2348": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "app#0",
        "result1#0"
      ]
    },
    "2350": {
      "op": "intc_0 // 0",
      "stack_out": [
        "app#0",
        "result1#0",
        "0"
      ]
    },
    "2351": {
      "op": "itxn_field Fee",
      "stack_out": [
        "app#0",
        "result1#0"
      ]
    },
    "2353": {
      "op": "itxn_submit"
    },
    "2354": {
      "op": "itxn LastLog",
      "defined_out": [
        "app#0",
        "awst_tmp%1#0",
        "result1#0"
      ],
      "stack_out": [
        "app#0",
        "result1#0",
        "awst_tmp%1#0"
      ]
    },
    "2356": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "awst_tmp%1#0",
        "awst_tmp%1#0 (copy)",
        "result1#0"
      ],
      "stack_out": [
        "app#0",
        "result1#0",
        "awst_tmp%1#0",
        "awst_tmp%1#0 (copy)"
      ]
    },
    "2357": {
      "op": "extract 0 4",
      "defined_out": [
        "app#0",
        "awst_tmp%1#0",
        "result1#0",
        "tmp%6#3"
      ],
      "stack_out": [
        "app#0",
        "result1#0",
        "awst_tmp%1#0",
        "tmp%6#3"
      ]
    },
    "2360": {
      "op": "bytec_0 // 0x151f7c75",
      "stack_out": [
        "app#0",
        "result1#0",
        "awst_tmp%1#0",
        "tmp%6#3",
        "0x151f7c75"
      ]
    },
    "2361": {
      "op": "==",
      "defined_out": [
        "app#0",
        "awst_tmp%1#0",
        "result1#0",
        "tmp%7#1"
      ],
      "stack_out": [
        "app#0",
        "result1#0",
        "awst_tmp%1#0",
        "tmp%7#1"
      ]
    },
    "2362": {
      "error": "application log value is not the result of an ABI return",
      "op": "assert // application log value is not the result of an ABI return",
      "stack_out": [
        "app#0",
        "result1#0",
        "awst_tmp%1#0"
      ]
    },
    "2363": {
      "op": "extract 6 0",
      "defined_out": [
        "app#0",
        "result1#0",
        "result2#0"
      ],
      "stack_out": [
        "app#0",
        "result1#0",
        "result2#0"
      ]
    },
    "2366": {
      "op": "dig 1",
      "stack_out": [
        "app#0",
        "result1#0",
        "result2#0",
        "result1#0 (copy)"
      ]
    },
    "2368": {
      "op": "==",
      "defined_out": [
        "app#0",
        "result1#0",
        "tmp%9#1"
      ],
      "stack_out": [
        "app#0",
        "result1#0",
        "tmp%9#1"
      ]
    },
    "2369": {
      "op": "assert",
      "stack_out": [
        "app#0",
        "result1#0"
      ]
    },
    "2370": {
      "op": "itxn_begin"
    },
    "2371": {
      "op": "swap",
      "stack_out": [
        "result1#0",
        "app#0"
      ]
    },
    "2372": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "result1#0"
      ]
    },
    "2374": {
      "op": "bytec 16 // method \"echo_native_bytes(byte[])byte[]\"",
      "stack_out": [
        "result1#0",
        "Method(echo_native_bytes(byte[])byte[])"
      ]
    },
    "2376": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "result1#0"
      ]
    },
    "2378": {
      "op": "bytec 17 // 0x000162",
      "stack_out": [
        "result1#0",
        "0x000162"
      ]
    },
    "2380": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "result1#0"
      ]
    },
    "2382": {
      "op": "intc_1 // appl",
      "stack_out": [
        "result1#0",
        "appl"
      ]
    },
    "2383": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "result1#0"
      ]
    },
    "2385": {
      "op": "intc_0 // 0",
      "stack_out": [
        "result1#0",
        "0"
      ]
    },
    "2386": {
      "op": "itxn_field Fee",
      "stack_out": [
        "result1#0"
      ]
    },
    "2388": {
      "op": "itxn_submit"
    },
    "2389": {
      "op": "itxn LastLog",
      "defined_out": [
        "awst_tmp%2#0",
        "result1#0"
      ],
      "stack_out": [
        "result1#0",
        "awst_tmp%2#0"
      ]
    },
    "2391": {
      "op": "dup",
      "defined_out": [
        "awst_tmp%2#0",
        "awst_tmp%2#0 (copy)",
        "result1#0"
      ],
      "stack_out": [
        "result1#0",
        "awst_tmp%2#0",
        "awst_tmp%2#0 (copy)"
      ]
    },
    "2392": {
      "op": "extract 0 4",
      "defined_out": [
        "awst_tmp%2#0",
        "result1#0",
        "tmp%11#2"
      ],
      "stack_out": [
        "result1#0",
        "awst_tmp%2#0",
        "tmp%11#2"
      ]
    },
    "2395": {
      "op": "bytec_0 // 0x151f7c75",
      "stack_out": [
        "result1#0",
        "awst_tmp%2#0",
        "tmp%11#2",
        "0x151f7c75"
      ]
    },
    "2396": {
      "op": "==",
      "defined_out": [
        "awst_tmp%2#0",
        "result1#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "result1#0",
        "awst_tmp%2#0",
        "tmp%12#0"
      ]
    },
    "2397": {
      "error": "application log value is not the result of an ABI return",
      "op": "assert // application log value is not the result of an ABI return",
      "stack_out": [
        "result1#0",
        "awst_tmp%2#0"
      ]
    },
    "2398": {
      "op": "extract 6 0",
      "defined_out": [
        "result1#0",
        "result3#0"
      ],
      "stack_out": [
        "result1#0",
        "result3#0"
      ]
    },
    "2401": {
      "op": "==",
      "defined_out": [
        "tmp%14#2"
      ],
      "stack_out": [
        "tmp%14#2"
      ]
    },
    "2402": {
      "op": "assert",
      "stack_out": []
    },
    "2403": {
      "op": "intc_2 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "2404": {
      "op": "return",
      "stack_out": []
    },
    "2405": {
      "block": "main_test_native_string_route@11",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%55#0"
      ],
      "stack_out": [
        "tmp%55#0"
      ]
    },
    "2407": {
      "op": "!",
      "defined_out": [
        "tmp%56#0"
      ],
      "stack_out": [
        "tmp%56#0"
      ]
    },
    "2408": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "2409": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%57#0"
      ],
      "stack_out": [
        "tmp%57#0"
      ]
    },
    "2411": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "2412": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded(uint8)%9#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint8)%9#0"
      ]
    },
    "2415": {
      "op": "btoi",
      "defined_out": [
        "tmp%59#0"
      ],
      "stack_out": [
        "tmp%59#0"
      ]
    },
    "2416": {
      "op": "txnas Applications",
      "defined_out": [
        "app#0"
      ],
      "stack_out": [
        "app#0"
      ]
    },
    "2418": {
      "op": "itxn_begin"
    },
    "2419": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "app#0 (copy)"
      ],
      "stack_out": [
        "app#0",
        "app#0 (copy)"
      ]
    },
    "2420": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "app#0"
      ]
    },
    "2422": {
      "op": "bytec 18 // method \"echo_native_string(string)string\"",
      "defined_out": [
        "Method(echo_native_string(string)string)",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "Method(echo_native_string(string)string)"
      ]
    },
    "2424": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0"
      ]
    },
    "2426": {
      "op": "bytec 19 // 0x000173",
      "defined_out": [
        "0x000173",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "0x000173"
      ]
    },
    "2428": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0"
      ]
    },
    "2430": {
      "op": "intc_1 // appl",
      "defined_out": [
        "app#0",
        "appl"
      ],
      "stack_out": [
        "app#0",
        "appl"
      ]
    },
    "2431": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "app#0"
      ]
    },
    "2433": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "0"
      ]
    },
    "2434": {
      "op": "itxn_field Fee",
      "stack_out": [
        "app#0"
      ]
    },
    "2436": {
      "op": "itxn_submit"
    },
    "2437": {
      "op": "itxn LastLog",
      "defined_out": [
        "app#0",
        "awst_tmp%0#0"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0"
      ]
    },
    "2439": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ]
    },
    "2440": {
      "op": "extract 0 4",
      "defined_out": [
        "app#0",
        "awst_tmp%0#0",
        "tmp%1#1"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "tmp%1#1"
      ]
    },
    "2443": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "app#0",
        "awst_tmp%0#0",
        "tmp%1#1"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "tmp%1#1",
        "0x151f7c75"
      ]
    },
    "2444": {
      "op": "==",
      "defined_out": [
        "app#0",
        "awst_tmp%0#0",
        "tmp%2#1"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "tmp%2#1"
      ]
    },
    "2445": {
      "error": "application log value is not the result of an ABI return",
      "op": "assert // application log value is not the result of an ABI return",
      "stack_out": [
        "app#0",
        "awst_tmp%0#0"
      ]
    },
    "2446": {
      "op": "extract 6 0",
      "defined_out": [
        "app#0",
        "result1#4"
      ],
      "stack_out": [
        "app#0",
        "result1#4"
      ]
    },
    "2449": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "result1#4",
        "result1#4 (copy)"
      ],
      "stack_out": [
        "app#0",
        "result1#4",
        "result1#4 (copy)"
      ]
    },
    "2450": {
      "op": "pushbytes \"echo: s\"",
      "defined_out": [
        "\"echo: s\"",
        "app#0",
        "result1#4",
        "result1#4 (copy)"
      ],
      "stack_out": [
        "app#0",
        "result1#4",
        "result1#4 (copy)",
        "\"echo: s\""
      ]
    },
    "2459": {
      "op": "==",
      "defined_out": [
        "app#0",
        "result1#4",
        "tmp%4#0"
      ],
      "stack_out": [
        "app#0",
        "result1#4",
        "tmp%4#0"
      ]
    },
    "2460": {
      "op": "assert",
      "stack_out": [
        "app#0",
        "result1#4"
      ]
    },
    "2461": {
      "op": "itxn_begin"
    },
    "2462": {
      "op": "dig 1",
      "stack_out": [
        "app#0",
        "result1#4",
        "app#0 (copy)"
      ]
    },
    "2464": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "app#0",
        "result1#4"
      ]
    },
    "2466": {
      "op": "bytec 18 // method \"echo_native_string(string)string\"",
      "stack_out": [
        "app#0",
        "result1#4",
        "Method(echo_native_string(string)string)"
      ]
    },
    "2468": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0",
        "result1#4"
      ]
    },
    "2470": {
      "op": "bytec 19 // 0x000173",
      "stack_out": [
        "app#0",
        "result1#4",
        "0x000173"
      ]
    },
    "2472": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0",
        "result1#4"
      ]
    },
    "2474": {
      "op": "intc_1 // appl",
      "stack_out": [
        "app#0",
        "result1#4",
        "appl"
      ]
    },
    "2475": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "app#0",
        "result1#4"
      ]
    },
    "2477": {
      "op": "intc_0 // 0",
      "stack_out": [
        "app#0",
        "result1#4",
        "0"
      ]
    },
    "2478": {
      "op": "itxn_field Fee",
      "stack_out": [
        "app#0",
        "result1#4"
      ]
    },
    "2480": {
      "op": "itxn_submit"
    },
    "2481": {
      "op": "itxn LastLog",
      "defined_out": [
        "app#0",
        "awst_tmp%1#0",
        "result1#4"
      ],
      "stack_out": [
        "app#0",
        "result1#4",
        "awst_tmp%1#0"
      ]
    },
    "2483": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "awst_tmp%1#0",
        "awst_tmp%1#0 (copy)",
        "result1#4"
      ],
      "stack_out": [
        "app#0",
        "result1#4",
        "awst_tmp%1#0",
        "awst_tmp%1#0 (copy)"
      ]
    },
    "2484": {
      "op": "extract 0 4",
      "defined_out": [
        "app#0",
        "awst_tmp%1#0",
        "result1#4",
        "tmp%6#3"
      ],
      "stack_out": [
        "app#0",
        "result1#4",
        "awst_tmp%1#0",
        "tmp%6#3"
      ]
    },
    "2487": {
      "op": "bytec_0 // 0x151f7c75",
      "stack_out": [
        "app#0",
        "result1#4",
        "awst_tmp%1#0",
        "tmp%6#3",
        "0x151f7c75"
      ]
    },
    "2488": {
      "op": "==",
      "defined_out": [
        "app#0",
        "awst_tmp%1#0",
        "result1#4",
        "tmp%7#1"
      ],
      "stack_out": [
        "app#0",
        "result1#4",
        "awst_tmp%1#0",
        "tmp%7#1"
      ]
    },
    "2489": {
      "error": "application log value is not the result of an ABI return",
      "op": "assert // application log value is not the result of an ABI return",
      "stack_out": [
        "app#0",
        "result1#4",
        "awst_tmp%1#0"
      ]
    },
    "2490": {
      "op": "extract 6 0",
      "defined_out": [
        "app#0",
        "result1#4",
        "result2#4"
      ],
      "stack_out": [
        "app#0",
        "result1#4",
        "result2#4"
      ]
    },
    "2493": {
      "op": "dig 1",
      "stack_out": [
        "app#0",
        "result1#4",
        "result2#4",
        "result1#4 (copy)"
      ]
    },
    "2495": {
      "op": "==",
      "defined_out": [
        "app#0",
        "result1#4",
        "tmp%9#1"
      ],
      "stack_out": [
        "app#0",
        "result1#4",
        "tmp%9#1"
      ]
    },
    "2496": {
      "op": "assert",
      "stack_out": [
        "app#0",
        "result1#4"
      ]
    },
    "2497": {
      "op": "itxn_begin"
    },
    "2498": {
      "op": "swap",
      "stack_out": [
        "result1#4",
        "app#0"
      ]
    },
    "2499": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "result1#4"
      ]
    },
    "2501": {
      "op": "bytec 18 // method \"echo_native_string(string)string\"",
      "stack_out": [
        "result1#4",
        "Method(echo_native_string(string)string)"
      ]
    },
    "2503": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "result1#4"
      ]
    },
    "2505": {
      "op": "bytec 19 // 0x000173",
      "stack_out": [
        "result1#4",
        "0x000173"
      ]
    },
    "2507": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "result1#4"
      ]
    },
    "2509": {
      "op": "intc_1 // appl",
      "stack_out": [
        "result1#4",
        "appl"
      ]
    },
    "2510": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "result1#4"
      ]
    },
    "2512": {
      "op": "intc_0 // 0",
      "stack_out": [
        "result1#4",
        "0"
      ]
    },
    "2513": {
      "op": "itxn_field Fee",
      "stack_out": [
        "result1#4"
      ]
    },
    "2515": {
      "op": "itxn_submit"
    },
    "2516": {
      "op": "itxn LastLog",
      "defined_out": [
        "awst_tmp%2#0",
        "result1#4"
      ],
      "stack_out": [
        "result1#4",
        "awst_tmp%2#0"
      ]
    },
    "2518": {
      "op": "dup",
      "defined_out": [
        "awst_tmp%2#0",
        "awst_tmp%2#0 (copy)",
        "result1#4"
      ],
      "stack_out": [
        "result1#4",
        "awst_tmp%2#0",
        "awst_tmp%2#0 (copy)"
      ]
    },
    "2519": {
      "op": "extract 0 4",
      "defined_out": [
        "awst_tmp%2#0",
        "result1#4",
        "tmp%11#2"
      ],
      "stack_out": [
        "result1#4",
        "awst_tmp%2#0",
        "tmp%11#2"
      ]
    },
    "2522": {
      "op": "bytec_0 // 0x151f7c75",
      "stack_out": [
        "result1#4",
        "awst_tmp%2#0",
        "tmp%11#2",
        "0x151f7c75"
      ]
    },
    "2523": {
      "op": "==",
      "defined_out": [
        "awst_tmp%2#0",
        "result1#4",
        "tmp%12#0"
      ],
      "stack_out": [
        "result1#4",
        "awst_tmp%2#0",
        "tmp%12#0"
      ]
    },
    "2524": {
      "error": "application log value is not the result of an ABI return",
      "op": "assert // application log value is not the result of an ABI return",
      "stack_out": [
        "result1#4",
        "awst_tmp%2#0"
      ]
    },
    "2525": {
      "op": "extract 6 0",
      "defined_out": [
        "result1#4",
        "result3#4"
      ],
      "stack_out": [
        "result1#4",
        "result3#4"
      ]
    },
    "2528": {
      "op": "==",
      "defined_out": [
        "tmp%14#2"
      ],
      "stack_out": [
        "tmp%14#2"
      ]
    },
    "2529": {
      "op": "assert",
      "stack_out": []
    },
    "2530": {
      "op": "intc_2 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "2531": {
      "op": "return",
      "stack_out": []
    },
    "2532": {
      "block": "main_test_account_to_address_route@10",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%49#0"
      ],
      "stack_out": [
        "tmp%49#0"
      ]
    },
    "2534": {
      "op": "!",
      "defined_out": [
        "tmp%50#0"
      ],
      "stack_out": [
        "tmp%50#0"
      ]
    },
    "2535": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "2536": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%51#0"
      ],
      "stack_out": [
        "tmp%51#0"
      ]
    },
    "2538": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "2539": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded(uint8)%8#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint8)%8#0"
      ]
    },
    "2542": {
      "op": "btoi",
      "defined_out": [
        "tmp%53#0"
      ],
      "stack_out": [
        "tmp%53#0"
      ]
    },
    "2543": {
      "op": "txnas Applications",
      "defined_out": [
        "app#0"
      ],
      "stack_out": [
        "app#0"
      ]
    },
    "2545": {
      "op": "itxn_begin"
    },
    "2546": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "app#0",
        "tmp%0#2"
      ],
      "stack_out": [
        "app#0",
        "tmp%0#2"
      ]
    },
    "2548": {
      "op": "swap",
      "stack_out": [
        "tmp%0#2",
        "app#0"
      ]
    },
    "2549": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "tmp%0#2"
      ]
    },
    "2551": {
      "op": "pushbytes 0x0437b17e // method \"log(address)void\"",
      "defined_out": [
        "Method(log(address)void)",
        "tmp%0#2"
      ],
      "stack_out": [
        "tmp%0#2",
        "Method(log(address)void)"
      ]
    },
    "2557": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "tmp%0#2"
      ]
    },
    "2559": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "2561": {
      "op": "intc_1 // appl",
      "defined_out": [
        "appl"
      ],
      "stack_out": [
        "appl"
      ]
    },
    "2562": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "2564": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "2565": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "2567": {
      "op": "itxn_submit"
    },
    "2568": {
      "op": "itxn LastLog",
      "defined_out": [
        "txn.LastLog#0"
      ],
      "stack_out": [
        "txn.LastLog#0"
      ]
    },
    "2570": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "tmp%1#1",
        "txn.LastLog#0"
      ],
      "stack_out": [
        "txn.LastLog#0",
        "tmp%1#1"
      ]
    },
    "2572": {
      "op": "==",
      "defined_out": [
        "tmp%2#1"
      ],
      "stack_out": [
        "tmp%2#1"
      ]
    },
    "2573": {
      "op": "assert",
      "stack_out": []
    },
    "2574": {
      "op": "intc_2 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "2575": {
      "op": "return",
      "stack_out": []
    },
    "2576": {
      "block": "main_test_ref_types_route@9",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%41#0"
      ],
      "stack_out": [
        "tmp%41#0"
      ]
    },
    "2578": {
      "op": "!",
      "defined_out": [
        "tmp%42#0"
      ],
      "stack_out": [
        "tmp%42#0"
      ]
    },
    "2579": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "2580": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%43#0"
      ],
      "stack_out": [
        "tmp%43#0"
      ]
    },
    "2582": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "2583": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded(uint8)%6#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint8)%6#0"
      ]
    },
    "2586": {
      "op": "btoi",
      "defined_out": [
        "tmp%45#0"
      ],
      "stack_out": [
        "tmp%45#0"
      ]
    },
    "2587": {
      "op": "txnas Applications",
      "defined_out": [
        "app#0"
      ],
      "stack_out": [
        "app#0"
      ]
    },
    "2589": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "app#0",
        "reinterpret_Encoded(uint8)%7#0"
      ],
      "stack_out": [
        "app#0",
        "reinterpret_Encoded(uint8)%7#0"
      ]
    },
    "2592": {
      "op": "btoi",
      "defined_out": [
        "app#0",
        "tmp%47#0"
      ],
      "stack_out": [
        "app#0",
        "tmp%47#0"
      ]
    },
    "2593": {
      "op": "txnas Assets",
      "defined_out": [
        "app#0",
        "asset#0"
      ],
      "stack_out": [
        "app#0",
        "asset#0"
      ]
    },
    "2595": {
      "op": "itxn_begin"
    },
    "2596": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "app#0",
        "asset#0",
        "tmp%0#2"
      ],
      "stack_out": [
        "app#0",
        "asset#0",
        "tmp%0#2"
      ]
    },
    "2598": {
      "op": "dig 2",
      "defined_out": [
        "app#0",
        "app#0 (copy)",
        "asset#0",
        "tmp%0#2"
      ],
      "stack_out": [
        "app#0",
        "asset#0",
        "tmp%0#2",
        "app#0 (copy)"
      ]
    },
    "2600": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "app#0",
        "asset#0",
        "tmp%0#2"
      ]
    },
    "2602": {
      "op": "dig 1",
      "defined_out": [
        "app#0",
        "asset#0",
        "asset#0 (copy)",
        "tmp%0#2"
      ],
      "stack_out": [
        "app#0",
        "asset#0",
        "tmp%0#2",
        "asset#0 (copy)"
      ]
    },
    "2604": {
      "op": "itxn_field Assets",
      "stack_out": [
        "app#0",
        "asset#0",
        "tmp%0#2"
      ]
    },
    "2606": {
      "op": "dig 2",
      "stack_out": [
        "app#0",
        "asset#0",
        "tmp%0#2",
        "app#0 (copy)"
      ]
    },
    "2608": {
      "op": "itxn_field Applications",
      "stack_out": [
        "app#0",
        "asset#0",
        "tmp%0#2"
      ]
    },
    "2610": {
      "op": "itxn_field Accounts",
      "stack_out": [
        "app#0",
        "asset#0"
      ]
    },
    "2612": {
      "op": "pushbytes 0xcd727b71 // method \"log(asset,account,application)void\"",
      "defined_out": [
        "Method(log(asset,account,application)void)",
        "app#0",
        "asset#0"
      ],
      "stack_out": [
        "app#0",
        "asset#0",
        "Method(log(asset,account,application)void)"
      ]
    },
    "2618": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0",
        "asset#0"
      ]
    },
    "2620": {
      "op": "pushbytes 0x00",
      "defined_out": [
        "0x00",
        "app#0",
        "asset#0"
      ],
      "stack_out": [
        "app#0",
        "asset#0",
        "0x00"
      ]
    },
    "2623": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0",
        "asset#0"
      ]
    },
    "2625": {
      "op": "pushbytes 0x01",
      "defined_out": [
        "0x01",
        "app#0",
        "asset#0"
      ],
      "stack_out": [
        "app#0",
        "asset#0",
        "0x01"
      ]
    },
    "2628": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0",
        "asset#0"
      ]
    },
    "2630": {
      "op": "pushbytes 0x01",
      "stack_out": [
        "app#0",
        "asset#0",
        "0x01"
      ]
    },
    "2633": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0",
        "asset#0"
      ]
    },
    "2635": {
      "op": "intc_1 // appl",
      "defined_out": [
        "app#0",
        "appl",
        "asset#0"
      ],
      "stack_out": [
        "app#0",
        "asset#0",
        "appl"
      ]
    },
    "2636": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "app#0",
        "asset#0"
      ]
    },
    "2638": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "app#0",
        "asset#0"
      ],
      "stack_out": [
        "app#0",
        "asset#0",
        "0"
      ]
    },
    "2639": {
      "op": "itxn_field Fee",
      "stack_out": [
        "app#0",
        "asset#0"
      ]
    },
    "2641": {
      "op": "itxn_submit"
    },
    "2642": {
      "op": "itxn LastLog",
      "defined_out": [
        "app#0",
        "asset#0",
        "txn.LastLog#0"
      ],
      "stack_out": [
        "app#0",
        "asset#0",
        "txn.LastLog#0"
      ]
    },
    "2644": {
      "op": "swap",
      "stack_out": [
        "app#0",
        "txn.LastLog#0",
        "asset#0"
      ]
    },
    "2645": {
      "op": "asset_params_get AssetName",
      "defined_out": [
        "app#0",
        "check%0#0",
        "txn.LastLog#0",
        "value%0#0"
      ],
      "stack_out": [
        "app#0",
        "txn.LastLog#0",
        "value%0#0",
        "check%0#0"
      ]
    },
    "2647": {
      "error": "asset exists",
      "op": "assert // asset exists",
      "stack_out": [
        "app#0",
        "txn.LastLog#0",
        "value%0#0"
      ]
    },
    "2648": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "app#0",
        "tmp%1#1",
        "txn.LastLog#0",
        "value%0#0"
      ],
      "stack_out": [
        "app#0",
        "txn.LastLog#0",
        "value%0#0",
        "tmp%1#1"
      ]
    },
    "2650": {
      "op": "concat",
      "defined_out": [
        "app#0",
        "tmp%2#0",
        "txn.LastLog#0"
      ],
      "stack_out": [
        "app#0",
        "txn.LastLog#0",
        "tmp%2#0"
      ]
    },
    "2651": {
      "op": "uncover 2",
      "stack_out": [
        "txn.LastLog#0",
        "tmp%2#0",
        "app#0"
      ]
    },
    "2653": {
      "op": "app_params_get AppAddress",
      "defined_out": [
        "check%1#0",
        "tmp%2#0",
        "txn.LastLog#0",
        "value%1#0"
      ],
      "stack_out": [
        "txn.LastLog#0",
        "tmp%2#0",
        "value%1#0",
        "check%1#0"
      ]
    },
    "2655": {
      "error": "application exists",
      "op": "assert // application exists",
      "stack_out": [
        "txn.LastLog#0",
        "tmp%2#0",
        "value%1#0"
      ]
    },
    "2656": {
      "op": "concat",
      "defined_out": [
        "tmp%3#2",
        "txn.LastLog#0"
      ],
      "stack_out": [
        "txn.LastLog#0",
        "tmp%3#2"
      ]
    },
    "2657": {
      "op": "==",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "2658": {
      "op": "assert",
      "stack_out": []
    },
    "2659": {
      "op": "intc_2 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "2660": {
      "op": "return",
      "stack_out": []
    },
    "2661": {
      "block": "main_test_void_route@8",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%35#0"
      ],
      "stack_out": [
        "tmp%35#0"
      ]
    },
    "2663": {
      "op": "!",
      "defined_out": [
        "tmp%36#0"
      ],
      "stack_out": [
        "tmp%36#0"
      ]
    },
    "2664": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "2665": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%37#0"
      ],
      "stack_out": [
        "tmp%37#0"
      ]
    },
    "2667": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "2668": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded(uint8)%5#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint8)%5#0"
      ]
    },
    "2671": {
      "op": "btoi",
      "defined_out": [
        "tmp%39#0"
      ],
      "stack_out": [
        "tmp%39#0"
      ]
    },
    "2672": {
      "op": "txnas Applications",
      "defined_out": [
        "app#0"
      ],
      "stack_out": [
        "app#0"
      ]
    },
    "2674": {
      "op": "itxn_begin"
    },
    "2675": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "app#0 (copy)"
      ],
      "stack_out": [
        "app#0",
        "app#0 (copy)"
      ]
    },
    "2676": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "app#0"
      ]
    },
    "2678": {
      "op": "bytec 8 // method \"log(string)void\"",
      "defined_out": [
        "Method(log(string)void)",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "Method(log(string)void)"
      ]
    },
    "2680": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0"
      ]
    },
    "2682": {
      "op": "pushbytes 0x0006576f726c6431",
      "defined_out": [
        "0x0006576f726c6431",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "0x0006576f726c6431"
      ]
    },
    "2692": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0"
      ]
    },
    "2694": {
      "op": "intc_1 // appl",
      "defined_out": [
        "app#0",
        "appl"
      ],
      "stack_out": [
        "app#0",
        "appl"
      ]
    },
    "2695": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "app#0"
      ]
    },
    "2697": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "0"
      ]
    },
    "2698": {
      "op": "itxn_field Fee",
      "stack_out": [
        "app#0"
      ]
    },
    "2700": {
      "op": "itxn_submit"
    },
    "2701": {
      "op": "itxn LastLog",
      "defined_out": [
        "app#0",
        "txn.LastLog#0"
      ],
      "stack_out": [
        "app#0",
        "txn.LastLog#0"
      ]
    },
    "2703": {
      "op": "pushbytes 0x576f726c6431",
      "defined_out": [
        "0x576f726c6431",
        "app#0",
        "txn.LastLog#0"
      ],
      "stack_out": [
        "app#0",
        "txn.LastLog#0",
        "0x576f726c6431"
      ]
    },
    "2711": {
      "op": "==",
      "defined_out": [
        "app#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "app#0",
        "tmp%0#0"
      ]
    },
    "2712": {
      "op": "assert",
      "stack_out": [
        "app#0"
      ]
    },
    "2713": {
      "op": "itxn_begin"
    },
    "2714": {
      "op": "dup",
      "stack_out": [
        "app#0",
        "app#0 (copy)"
      ]
    },
    "2715": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "app#0"
      ]
    },
    "2717": {
      "op": "bytec 8 // method \"log(string)void\"",
      "stack_out": [
        "app#0",
        "Method(log(string)void)"
      ]
    },
    "2719": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0"
      ]
    },
    "2721": {
      "op": "pushbytes 0x0006576f726c6432",
      "defined_out": [
        "0x0006576f726c6432",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "0x0006576f726c6432"
      ]
    },
    "2731": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0"
      ]
    },
    "2733": {
      "op": "intc_1 // appl",
      "stack_out": [
        "app#0",
        "appl"
      ]
    },
    "2734": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "app#0"
      ]
    },
    "2736": {
      "op": "intc_0 // 0",
      "stack_out": [
        "app#0",
        "0"
      ]
    },
    "2737": {
      "op": "itxn_field Fee",
      "stack_out": [
        "app#0"
      ]
    },
    "2739": {
      "op": "itxn_submit"
    },
    "2740": {
      "op": "itxn LastLog",
      "stack_out": [
        "app#0",
        "txn.LastLog#0"
      ]
    },
    "2742": {
      "op": "pushbytes 0x576f726c6432",
      "defined_out": [
        "0x576f726c6432",
        "app#0",
        "txn.LastLog#0"
      ],
      "stack_out": [
        "app#0",
        "txn.LastLog#0",
        "0x576f726c6432"
      ]
    },
    "2750": {
      "op": "==",
      "defined_out": [
        "app#0",
        "tmp%1#13"
      ],
      "stack_out": [
        "app#0",
        "tmp%1#13"
      ]
    },
    "2751": {
      "op": "assert",
      "stack_out": [
        "app#0"
      ]
    },
    "2752": {
      "op": "itxn_begin"
    },
    "2753": {
      "op": "dup",
      "stack_out": [
        "app#0",
        "app#0 (copy)"
      ]
    },
    "2754": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "app#0"
      ]
    },
    "2756": {
      "op": "bytec 8 // method \"log(string)void\"",
      "stack_out": [
        "app#0",
        "Method(log(string)void)"
      ]
    },
    "2758": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0"
      ]
    },
    "2760": {
      "op": "pushbytes 0x0006576f726c6433",
      "defined_out": [
        "0x0006576f726c6433",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "0x0006576f726c6433"
      ]
    },
    "2770": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0"
      ]
    },
    "2772": {
      "op": "intc_1 // appl",
      "stack_out": [
        "app#0",
        "appl"
      ]
    },
    "2773": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "app#0"
      ]
    },
    "2775": {
      "op": "intc_0 // 0",
      "stack_out": [
        "app#0",
        "0"
      ]
    },
    "2776": {
      "op": "itxn_field Fee",
      "stack_out": [
        "app#0"
      ]
    },
    "2778": {
      "op": "itxn_submit"
    },
    "2779": {
      "op": "itxn LastLog",
      "stack_out": [
        "app#0",
        "txn.LastLog#0"
      ]
    },
    "2781": {
      "op": "pushbytes 0x576f726c6433",
      "defined_out": [
        "0x576f726c6433",
        "app#0",
        "txn.LastLog#0"
      ],
      "stack_out": [
        "app#0",
        "txn.LastLog#0",
        "0x576f726c6433"
      ]
    },
    "2789": {
      "op": "==",
      "defined_out": [
        "app#0",
        "tmp%2#1"
      ],
      "stack_out": [
        "app#0",
        "tmp%2#1"
      ]
    },
    "2790": {
      "op": "assert",
      "stack_out": [
        "app#0"
      ]
    },
    "2791": {
      "op": "itxn_begin"
    },
    "2792": {
      "op": "itxn_field ApplicationID",
      "stack_out": []
    },
    "2794": {
      "op": "bytec 8 // method \"log(string)void\"",
      "stack_out": [
        "Method(log(string)void)"
      ]
    },
    "2796": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "2798": {
      "op": "pushbytes 0x0006576f726c6434",
      "defined_out": [
        "0x0006576f726c6434"
      ],
      "stack_out": [
        "0x0006576f726c6434"
      ]
    },
    "2808": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "2810": {
      "op": "intc_1 // appl",
      "stack_out": [
        "appl"
      ]
    },
    "2811": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "2813": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0"
      ]
    },
    "2814": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "2816": {
      "op": "itxn_submit"
    },
    "2817": {
      "op": "itxn LastLog",
      "stack_out": [
        "txn.LastLog#0"
      ]
    },
    "2819": {
      "op": "pushbytes 0x576f726c6434",
      "defined_out": [
        "0x576f726c6434",
        "txn.LastLog#0"
      ],
      "stack_out": [
        "txn.LastLog#0",
        "0x576f726c6434"
      ]
    },
    "2827": {
      "op": "==",
      "defined_out": [
        "tmp%3#1"
      ],
      "stack_out": [
        "tmp%3#1"
      ]
    },
    "2828": {
      "op": "assert",
      "stack_out": []
    },
    "2829": {
      "op": "intc_2 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "2830": {
      "op": "return",
      "stack_out": []
    },
    "2831": {
      "block": "main_test_15plus_args_route@7",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%29#0"
      ],
      "stack_out": [
        "tmp%29#0"
      ]
    },
    "2833": {
      "op": "!",
      "defined_out": [
        "tmp%30#0"
      ],
      "stack_out": [
        "tmp%30#0"
      ]
    },
    "2834": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "2835": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%31#0"
      ],
      "stack_out": [
        "tmp%31#0"
      ]
    },
    "2837": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "2838": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded(uint8)%4#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint8)%4#0"
      ]
    },
    "2841": {
      "op": "btoi",
      "defined_out": [
        "tmp%33#0"
      ],
      "stack_out": [
        "tmp%33#0"
      ]
    },
    "2842": {
      "op": "txnas Applications",
      "defined_out": [
        "app#0"
      ],
      "stack_out": [
        "app#0"
      ]
    },
    "2844": {
      "op": "itxn_begin"
    },
    "2845": {
      "op": "itxn_field ApplicationID",
      "stack_out": []
    },
    "2847": {
      "op": "pushbytes 0xba0b4381 // method \"return_args_after_14th(uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint8,uint8,uint8,uint8,(uint8,uint8,uint8,uint8),uint8)byte[]\"",
      "defined_out": [
        "Method(return_args_after_14th(uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint8,uint8,uint8,uint8,(uint8,uint8,uint8,uint8),uint8)byte[])"
      ],
      "stack_out": [
        "Method(return_args_after_14th(uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint8,uint8,uint8,uint8,(uint8,uint8,uint8,uint8),uint8)byte[])"
      ]
    },
    "2853": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "2855": {
      "op": "bytec_2 // 0x0000000000000001",
      "defined_out": [
        "0x0000000000000001"
      ],
      "stack_out": [
        "0x0000000000000001"
      ]
    },
    "2856": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "2858": {
      "op": "bytec 26 // 0x0000000000000002",
      "defined_out": [
        "0x0000000000000002"
      ],
      "stack_out": [
        "0x0000000000000002"
      ]
    },
    "2860": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "2862": {
      "op": "bytec 12 // 0x0000000000000003",
      "defined_out": [
        "0x0000000000000003"
      ],
      "stack_out": [
        "0x0000000000000003"
      ]
    },
    "2864": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "2866": {
      "op": "pushbytes 0x0000000000000004",
      "defined_out": [
        "0x0000000000000004"
      ],
      "stack_out": [
        "0x0000000000000004"
      ]
    },
    "2876": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "2878": {
      "op": "pushbytes 0x0000000000000005",
      "defined_out": [
        "0x0000000000000005"
      ],
      "stack_out": [
        "0x0000000000000005"
      ]
    },
    "2888": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "2890": {
      "op": "pushbytes 0x0000000000000006",
      "defined_out": [
        "0x0000000000000006"
      ],
      "stack_out": [
        "0x0000000000000006"
      ]
    },
    "2900": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "2902": {
      "op": "pushbytes 0x0000000000000007",
      "defined_out": [
        "0x0000000000000007"
      ],
      "stack_out": [
        "0x0000000000000007"
      ]
    },
    "2912": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "2914": {
      "op": "pushbytes 0x0000000000000008",
      "defined_out": [
        "0x0000000000000008"
      ],
      "stack_out": [
        "0x0000000000000008"
      ]
    },
    "2924": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "2926": {
      "op": "pushbytes 0x0000000000000009",
      "defined_out": [
        "0x0000000000000009"
      ],
      "stack_out": [
        "0x0000000000000009"
      ]
    },
    "2936": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "2938": {
      "op": "pushbytes 0x000000000000000a",
      "defined_out": [
        "0x000000000000000a"
      ],
      "stack_out": [
        "0x000000000000000a"
      ]
    },
    "2948": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "2950": {
      "op": "pushbytes 0x000000000000000b",
      "defined_out": [
        "0x000000000000000b"
      ],
      "stack_out": [
        "0x000000000000000b"
      ]
    },
    "2960": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "2962": {
      "op": "pushbytes 0x000000000000000c",
      "defined_out": [
        "0x000000000000000c"
      ],
      "stack_out": [
        "0x000000000000000c"
      ]
    },
    "2972": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "2974": {
      "op": "pushbytes 0x000000000000000d",
      "defined_out": [
        "0x000000000000000d"
      ],
      "stack_out": [
        "0x000000000000000d"
      ]
    },
    "2984": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "2986": {
      "op": "pushbytes 0x000000000000000e",
      "defined_out": [
        "0x000000000000000e"
      ],
      "stack_out": [
        "0x000000000000000e"
      ]
    },
    "2996": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "2998": {
      "op": "bytec 27 // 0x0f101112deadbeef14",
      "defined_out": [
        "0x0f101112deadbeef14"
      ],
      "stack_out": [
        "0x0f101112deadbeef14"
      ]
    },
    "3000": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "3002": {
      "op": "intc_1 // appl",
      "defined_out": [
        "appl"
      ],
      "stack_out": [
        "appl"
      ]
    },
    "3003": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "3005": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "3006": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "3008": {
      "op": "itxn_submit"
    },
    "3009": {
      "op": "itxn LastLog",
      "defined_out": [
        "awst_tmp%0#0"
      ],
      "stack_out": [
        "awst_tmp%0#0"
      ]
    },
    "3011": {
      "op": "dup",
      "defined_out": [
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ]
    },
    "3012": {
      "op": "extract 0 4",
      "defined_out": [
        "awst_tmp%0#0",
        "tmp%1#1"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "tmp%1#1"
      ]
    },
    "3015": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "awst_tmp%0#0",
        "tmp%1#1"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "tmp%1#1",
        "0x151f7c75"
      ]
    },
    "3016": {
      "op": "==",
      "defined_out": [
        "awst_tmp%0#0",
        "tmp%2#1"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "tmp%2#1"
      ]
    },
    "3017": {
      "error": "application log value is not the result of an ABI return",
      "op": "assert // application log value is not the result of an ABI return",
      "stack_out": [
        "awst_tmp%0#0"
      ]
    },
    "3018": {
      "op": "extract 6 0",
      "defined_out": [
        "tmp%3#2"
      ],
      "stack_out": [
        "tmp%3#2"
      ]
    },
    "3021": {
      "op": "bytec 27 // 0x0f101112deadbeef14",
      "stack_out": [
        "tmp%3#2",
        "0x0f101112deadbeef14"
      ]
    },
    "3023": {
      "op": "==",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "3024": {
      "op": "assert",
      "stack_out": []
    },
    "3025": {
      "op": "intc_2 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "3026": {
      "op": "return",
      "stack_out": []
    },
    "3027": {
      "block": "main_test_arg_conversion_route@6",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%23#0"
      ],
      "stack_out": [
        "tmp%23#0"
      ]
    },
    "3029": {
      "op": "!",
      "defined_out": [
        "tmp%24#0"
      ],
      "stack_out": [
        "tmp%24#0"
      ]
    },
    "3030": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "3031": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%25#0"
      ],
      "stack_out": [
        "tmp%25#0"
      ]
    },
    "3033": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "3034": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded(uint8)%3#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint8)%3#0"
      ]
    },
    "3037": {
      "op": "btoi",
      "defined_out": [
        "tmp%27#0"
      ],
      "stack_out": [
        "tmp%27#0"
      ]
    },
    "3038": {
      "op": "txnas Applications",
      "defined_out": [
        "app#0"
      ],
      "stack_out": [
        "app#0"
      ]
    },
    "3040": {
      "op": "itxn_begin"
    },
    "3041": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "app#0 (copy)"
      ],
      "stack_out": [
        "app#0",
        "app#0 (copy)"
      ]
    },
    "3042": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "app#0"
      ]
    },
    "3044": {
      "op": "bytec 8 // method \"log(string)void\"",
      "defined_out": [
        "Method(log(string)void)",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "Method(log(string)void)"
      ]
    },
    "3046": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0"
      ]
    },
    "3048": {
      "op": "pushbytes 0x000a636f6e76657274656431",
      "defined_out": [
        "0x000a636f6e76657274656431",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "0x000a636f6e76657274656431"
      ]
    },
    "3062": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0"
      ]
    },
    "3064": {
      "op": "intc_1 // appl",
      "defined_out": [
        "app#0",
        "appl"
      ],
      "stack_out": [
        "app#0",
        "appl"
      ]
    },
    "3065": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "app#0"
      ]
    },
    "3067": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "0"
      ]
    },
    "3068": {
      "op": "itxn_field Fee",
      "stack_out": [
        "app#0"
      ]
    },
    "3070": {
      "op": "itxn_submit"
    },
    "3071": {
      "op": "itxn LastLog",
      "defined_out": [
        "app#0",
        "txn.LastLog#0"
      ],
      "stack_out": [
        "app#0",
        "txn.LastLog#0"
      ]
    },
    "3073": {
      "op": "pushbytes 0x636f6e76657274656431",
      "defined_out": [
        "0x636f6e76657274656431",
        "app#0",
        "txn.LastLog#0"
      ],
      "stack_out": [
        "app#0",
        "txn.LastLog#0",
        "0x636f6e76657274656431"
      ]
    },
    "3085": {
      "op": "==",
      "defined_out": [
        "app#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "app#0",
        "tmp%0#0"
      ]
    },
    "3086": {
      "op": "assert",
      "stack_out": [
        "app#0"
      ]
    },
    "3087": {
      "op": "itxn_begin"
    },
    "3088": {
      "op": "dup",
      "stack_out": [
        "app#0",
        "app#0 (copy)"
      ]
    },
    "3089": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "app#0"
      ]
    },
    "3091": {
      "op": "pushbytes 0x3c1058d9 // method \"log(uint64)void\"",
      "defined_out": [
        "Method(log(uint64)void)",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "Method(log(uint64)void)"
      ]
    },
    "3097": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0"
      ]
    },
    "3099": {
      "op": "bytec 26 // 0x0000000000000002",
      "defined_out": [
        "0x0000000000000002",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "0x0000000000000002"
      ]
    },
    "3101": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0"
      ]
    },
    "3103": {
      "op": "intc_1 // appl",
      "stack_out": [
        "app#0",
        "appl"
      ]
    },
    "3104": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "app#0"
      ]
    },
    "3106": {
      "op": "intc_0 // 0",
      "stack_out": [
        "app#0",
        "0"
      ]
    },
    "3107": {
      "op": "itxn_field Fee",
      "stack_out": [
        "app#0"
      ]
    },
    "3109": {
      "op": "itxn_submit"
    },
    "3110": {
      "op": "itxn LastLog",
      "stack_out": [
        "app#0",
        "txn.LastLog#0"
      ]
    },
    "3112": {
      "op": "intc_3 // 2",
      "defined_out": [
        "2",
        "app#0",
        "txn.LastLog#0"
      ],
      "stack_out": [
        "app#0",
        "txn.LastLog#0",
        "2"
      ]
    },
    "3113": {
      "op": "itob",
      "defined_out": [
        "app#0",
        "tmp%1#1",
        "txn.LastLog#0"
      ],
      "stack_out": [
        "app#0",
        "txn.LastLog#0",
        "tmp%1#1"
      ]
    },
    "3114": {
      "op": "==",
      "defined_out": [
        "app#0",
        "tmp%2#1"
      ],
      "stack_out": [
        "app#0",
        "tmp%2#1"
      ]
    },
    "3115": {
      "op": "assert",
      "stack_out": [
        "app#0"
      ]
    },
    "3116": {
      "op": "itxn_begin"
    },
    "3117": {
      "op": "dup",
      "stack_out": [
        "app#0",
        "app#0 (copy)"
      ]
    },
    "3118": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "app#0"
      ]
    },
    "3120": {
      "op": "pushbytes 0x6af45930 // method \"log(uint512)void\"",
      "defined_out": [
        "Method(log(uint512)void)",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "Method(log(uint512)void)"
      ]
    },
    "3126": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0"
      ]
    },
    "3128": {
      "op": "bytec 28 // 0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000003",
      "defined_out": [
        "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000003",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000003"
      ]
    },
    "3130": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0"
      ]
    },
    "3132": {
      "op": "intc_1 // appl",
      "stack_out": [
        "app#0",
        "appl"
      ]
    },
    "3133": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "app#0"
      ]
    },
    "3135": {
      "op": "intc_0 // 0",
      "stack_out": [
        "app#0",
        "0"
      ]
    },
    "3136": {
      "op": "itxn_field Fee",
      "stack_out": [
        "app#0"
      ]
    },
    "3138": {
      "op": "itxn_submit"
    },
    "3139": {
      "op": "itxn LastLog",
      "stack_out": [
        "app#0",
        "txn.LastLog#0"
      ]
    },
    "3141": {
      "op": "bytec 28 // 0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000003",
      "stack_out": [
        "app#0",
        "txn.LastLog#0",
        "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000003"
      ]
    },
    "3143": {
      "op": "==",
      "defined_out": [
        "app#0",
        "tmp%6#1"
      ],
      "stack_out": [
        "app#0",
        "tmp%6#1"
      ]
    },
    "3144": {
      "op": "assert",
      "stack_out": [
        "app#0"
      ]
    },
    "3145": {
      "op": "itxn_begin"
    },
    "3146": {
      "op": "dup",
      "stack_out": [
        "app#0",
        "app#0 (copy)"
      ]
    },
    "3147": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "app#0"
      ]
    },
    "3149": {
      "op": "pushbytes 0xb500e111 // method \"log(byte[])void\"",
      "defined_out": [
        "Method(log(byte[])void)",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "Method(log(byte[])void)"
      ]
    },
    "3155": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0"
      ]
    },
    "3157": {
      "op": "pushbytes 0x000134",
      "defined_out": [
        "0x000134",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "0x000134"
      ]
    },
    "3162": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0"
      ]
    },
    "3164": {
      "op": "intc_1 // appl",
      "stack_out": [
        "app#0",
        "appl"
      ]
    },
    "3165": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "app#0"
      ]
    },
    "3167": {
      "op": "intc_0 // 0",
      "stack_out": [
        "app#0",
        "0"
      ]
    },
    "3168": {
      "op": "itxn_field Fee",
      "stack_out": [
        "app#0"
      ]
    },
    "3170": {
      "op": "itxn_submit"
    },
    "3171": {
      "op": "itxn LastLog",
      "stack_out": [
        "app#0",
        "txn.LastLog#0"
      ]
    },
    "3173": {
      "op": "pushbytes 0x34",
      "defined_out": [
        "0x34",
        "app#0",
        "txn.LastLog#0"
      ],
      "stack_out": [
        "app#0",
        "txn.LastLog#0",
        "0x34"
      ]
    },
    "3176": {
      "op": "==",
      "defined_out": [
        "app#0",
        "tmp%7#1"
      ],
      "stack_out": [
        "app#0",
        "tmp%7#1"
      ]
    },
    "3177": {
      "op": "assert",
      "stack_out": [
        "app#0"
      ]
    },
    "3178": {
      "op": "itxn_begin"
    },
    "3179": {
      "op": "itxn_field ApplicationID",
      "stack_out": []
    },
    "3181": {
      "op": "pushbytes 0x6eed7ec3 // method \"log(bool)void\"",
      "defined_out": [
        "Method(log(bool)void)"
      ],
      "stack_out": [
        "Method(log(bool)void)"
      ]
    },
    "3187": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "3189": {
      "op": "pushbytes 0x80",
      "defined_out": [
        "0x80"
      ],
      "stack_out": [
        "0x80"
      ]
    },
    "3192": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "3194": {
      "op": "intc_1 // appl",
      "stack_out": [
        "appl"
      ]
    },
    "3195": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "3197": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0"
      ]
    },
    "3198": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "3200": {
      "op": "itxn_submit"
    },
    "3201": {
      "op": "itxn LastLog",
      "stack_out": [
        "txn.LastLog#0"
      ]
    },
    "3203": {
      "op": "pushbytes 0x54727565",
      "defined_out": [
        "0x54727565",
        "txn.LastLog#0"
      ],
      "stack_out": [
        "txn.LastLog#0",
        "0x54727565"
      ]
    },
    "3209": {
      "op": "==",
      "defined_out": [
        "tmp%8#1"
      ],
      "stack_out": [
        "tmp%8#1"
      ]
    },
    "3210": {
      "op": "assert",
      "stack_out": []
    },
    "3211": {
      "op": "intc_2 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "3212": {
      "op": "return",
      "stack_out": []
    },
    "3213": {
      "block": "main_test_method_overload_route@5",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%17#0"
      ],
      "stack_out": [
        "tmp%17#0"
      ]
    },
    "3215": {
      "op": "!",
      "defined_out": [
        "tmp%18#0"
      ],
      "stack_out": [
        "tmp%18#0"
      ]
    },
    "3216": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "3217": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%19#0"
      ],
      "stack_out": [
        "tmp%19#0"
      ]
    },
    "3219": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "3220": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded(uint8)%2#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint8)%2#0"
      ]
    },
    "3223": {
      "op": "btoi",
      "defined_out": [
        "tmp%21#0"
      ],
      "stack_out": [
        "tmp%21#0"
      ]
    },
    "3224": {
      "op": "txnas Applications",
      "defined_out": [
        "app#0"
      ],
      "stack_out": [
        "app#0"
      ]
    },
    "3226": {
      "op": "itxn_begin"
    },
    "3227": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "app#0 (copy)"
      ],
      "stack_out": [
        "app#0",
        "app#0 (copy)"
      ]
    },
    "3228": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "app#0"
      ]
    },
    "3230": {
      "op": "bytec_3 // method \"echo(string)string\"",
      "defined_out": [
        "Method(echo(string)string)",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "Method(echo(string)string)"
      ]
    },
    "3231": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0"
      ]
    },
    "3233": {
      "op": "pushbytes 0x000e7479706564202b2069676e6f7265",
      "defined_out": [
        "0x000e7479706564202b2069676e6f7265",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "0x000e7479706564202b2069676e6f7265"
      ]
    },
    "3251": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0"
      ]
    },
    "3253": {
      "op": "intc_1 // appl",
      "defined_out": [
        "app#0",
        "appl"
      ],
      "stack_out": [
        "app#0",
        "appl"
      ]
    },
    "3254": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "app#0"
      ]
    },
    "3256": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "0"
      ]
    },
    "3257": {
      "op": "itxn_field Fee",
      "stack_out": [
        "app#0"
      ]
    },
    "3259": {
      "op": "itxn_submit"
    },
    "3260": {
      "op": "itxn LastLog",
      "defined_out": [
        "app#0",
        "awst_tmp%0#0"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0"
      ]
    },
    "3262": {
      "op": "extract 0 4",
      "defined_out": [
        "app#0",
        "tmp%1#1"
      ],
      "stack_out": [
        "app#0",
        "tmp%1#1"
      ]
    },
    "3265": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "app#0",
        "tmp%1#1"
      ],
      "stack_out": [
        "app#0",
        "tmp%1#1",
        "0x151f7c75"
      ]
    },
    "3266": {
      "op": "==",
      "defined_out": [
        "app#0",
        "tmp%2#1"
      ],
      "stack_out": [
        "app#0",
        "tmp%2#1"
      ]
    },
    "3267": {
      "error": "application log value is not the result of an ABI return",
      "op": "assert // application log value is not the result of an ABI return",
      "stack_out": [
        "app#0"
      ]
    },
    "3268": {
      "op": "itxn LastLog",
      "defined_out": [
        "app#0",
        "awst_tmp%1#0"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%1#0"
      ]
    },
    "3270": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "awst_tmp%1#0",
        "awst_tmp%1#0 (copy)"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%1#0",
        "awst_tmp%1#0 (copy)"
      ]
    },
    "3271": {
      "op": "extract 4 0",
      "defined_out": [
        "app#0",
        "awst_tmp%1#0",
        "tmp%3#2"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%1#0",
        "tmp%3#2"
      ]
    },
    "3274": {
      "op": "swap",
      "stack_out": [
        "app#0",
        "tmp%3#2",
        "awst_tmp%1#0"
      ]
    },
    "3275": {
      "op": "extract 0 4",
      "defined_out": [
        "app#0",
        "tmp%3#2",
        "tmp%4#1"
      ],
      "stack_out": [
        "app#0",
        "tmp%3#2",
        "tmp%4#1"
      ]
    },
    "3278": {
      "op": "bytec_0 // 0x151f7c75",
      "stack_out": [
        "app#0",
        "tmp%3#2",
        "tmp%4#1",
        "0x151f7c75"
      ]
    },
    "3279": {
      "op": "==",
      "defined_out": [
        "app#0",
        "tmp%3#2",
        "tmp%5#9"
      ],
      "stack_out": [
        "app#0",
        "tmp%3#2",
        "tmp%5#9"
      ]
    },
    "3280": {
      "error": "application log value is not the result of an ABI return",
      "op": "assert // application log value is not the result of an ABI return",
      "stack_out": [
        "app#0",
        "tmp%3#2"
      ]
    },
    "3281": {
      "op": "pushbytes 0x00146563686f3a207479706564202b2069676e6f7265",
      "defined_out": [
        "0x00146563686f3a207479706564202b2069676e6f7265",
        "app#0",
        "tmp%3#2"
      ],
      "stack_out": [
        "app#0",
        "tmp%3#2",
        "0x00146563686f3a207479706564202b2069676e6f7265"
      ]
    },
    "3305": {
      "op": "==",
      "defined_out": [
        "app#0",
        "tmp%6#1"
      ],
      "stack_out": [
        "app#0",
        "tmp%6#1"
      ]
    },
    "3306": {
      "op": "assert",
      "stack_out": [
        "app#0"
      ]
    },
    "3307": {
      "op": "itxn_begin"
    },
    "3308": {
      "op": "dup",
      "stack_out": [
        "app#0",
        "app#0 (copy)"
      ]
    },
    "3309": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "app#0"
      ]
    },
    "3311": {
      "op": "bytec_3 // method \"echo(string)string\"",
      "stack_out": [
        "app#0",
        "Method(echo(string)string)"
      ]
    },
    "3312": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0"
      ]
    },
    "3314": {
      "op": "pushbytes 0x0010756e7479706564202b2069676e6f7265",
      "defined_out": [
        "0x0010756e7479706564202b2069676e6f7265",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "0x0010756e7479706564202b2069676e6f7265"
      ]
    },
    "3334": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0"
      ]
    },
    "3336": {
      "op": "intc_1 // appl",
      "stack_out": [
        "app#0",
        "appl"
      ]
    },
    "3337": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "app#0"
      ]
    },
    "3339": {
      "op": "intc_0 // 0",
      "stack_out": [
        "app#0",
        "0"
      ]
    },
    "3340": {
      "op": "itxn_field Fee",
      "stack_out": [
        "app#0"
      ]
    },
    "3342": {
      "op": "itxn_submit"
    },
    "3343": {
      "op": "itxn LastLog",
      "defined_out": [
        "app#0",
        "awst_tmp%2#0"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%2#0"
      ]
    },
    "3345": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "awst_tmp%2#0",
        "awst_tmp%2#0 (copy)"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%2#0",
        "awst_tmp%2#0 (copy)"
      ]
    },
    "3346": {
      "op": "extract 4 0",
      "defined_out": [
        "app#0",
        "awst_tmp%2#0",
        "tmp%7#11"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%2#0",
        "tmp%7#11"
      ]
    },
    "3349": {
      "op": "swap",
      "stack_out": [
        "app#0",
        "tmp%7#11",
        "awst_tmp%2#0"
      ]
    },
    "3350": {
      "op": "extract 0 4",
      "defined_out": [
        "app#0",
        "tmp%7#11",
        "tmp%8#7"
      ],
      "stack_out": [
        "app#0",
        "tmp%7#11",
        "tmp%8#7"
      ]
    },
    "3353": {
      "op": "bytec_0 // 0x151f7c75",
      "stack_out": [
        "app#0",
        "tmp%7#11",
        "tmp%8#7",
        "0x151f7c75"
      ]
    },
    "3354": {
      "op": "==",
      "defined_out": [
        "app#0",
        "tmp%7#11",
        "tmp%9#1"
      ],
      "stack_out": [
        "app#0",
        "tmp%7#11",
        "tmp%9#1"
      ]
    },
    "3355": {
      "error": "application log value is not the result of an ABI return",
      "op": "assert // application log value is not the result of an ABI return",
      "stack_out": [
        "app#0",
        "tmp%7#11"
      ]
    },
    "3356": {
      "op": "pushbytes 0x00166563686f3a20756e7479706564202b2069676e6f7265",
      "defined_out": [
        "0x00166563686f3a20756e7479706564202b2069676e6f7265",
        "app#0",
        "tmp%7#11"
      ],
      "stack_out": [
        "app#0",
        "tmp%7#11",
        "0x00166563686f3a20756e7479706564202b2069676e6f7265"
      ]
    },
    "3382": {
      "op": "==",
      "defined_out": [
        "app#0",
        "tmp%10#2"
      ],
      "stack_out": [
        "app#0",
        "tmp%10#2"
      ]
    },
    "3383": {
      "op": "assert",
      "stack_out": [
        "app#0"
      ]
    },
    "3384": {
      "op": "itxn_begin"
    },
    "3385": {
      "op": "dup",
      "stack_out": [
        "app#0",
        "app#0 (copy)"
      ]
    },
    "3386": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "app#0"
      ]
    },
    "3388": {
      "op": "bytec_3 // method \"echo(string)string\"",
      "stack_out": [
        "app#0",
        "Method(echo(string)string)"
      ]
    },
    "3389": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0"
      ]
    },
    "3391": {
      "op": "pushbytes 0x00057475706c65",
      "defined_out": [
        "0x00057475706c65",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "0x00057475706c65"
      ]
    },
    "3400": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0"
      ]
    },
    "3402": {
      "op": "intc_1 // appl",
      "stack_out": [
        "app#0",
        "appl"
      ]
    },
    "3403": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "app#0"
      ]
    },
    "3405": {
      "op": "intc_0 // 0",
      "stack_out": [
        "app#0",
        "0"
      ]
    },
    "3406": {
      "op": "itxn_field Fee",
      "stack_out": [
        "app#0"
      ]
    },
    "3408": {
      "op": "itxn_submit"
    },
    "3409": {
      "op": "itxn LastLog",
      "defined_out": [
        "app#0",
        "awst_tmp%3#0"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%3#0"
      ]
    },
    "3411": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "awst_tmp%3#0",
        "awst_tmp%3#0 (copy)"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%3#0",
        "awst_tmp%3#0 (copy)"
      ]
    },
    "3412": {
      "op": "extract 4 0",
      "defined_out": [
        "app#0",
        "awst_tmp%3#0",
        "result.0#1"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%3#0",
        "result.0#1"
      ]
    },
    "3415": {
      "op": "swap",
      "stack_out": [
        "app#0",
        "result.0#1",
        "awst_tmp%3#0"
      ]
    },
    "3416": {
      "op": "extract 0 4",
      "defined_out": [
        "app#0",
        "result.0#1",
        "tmp%12#1"
      ],
      "stack_out": [
        "app#0",
        "result.0#1",
        "tmp%12#1"
      ]
    },
    "3419": {
      "op": "bytec_0 // 0x151f7c75",
      "stack_out": [
        "app#0",
        "result.0#1",
        "tmp%12#1",
        "0x151f7c75"
      ]
    },
    "3420": {
      "op": "==",
      "defined_out": [
        "app#0",
        "result.0#1",
        "tmp%13#2"
      ],
      "stack_out": [
        "app#0",
        "result.0#1",
        "tmp%13#2"
      ]
    },
    "3421": {
      "error": "application log value is not the result of an ABI return",
      "op": "assert // application log value is not the result of an ABI return",
      "stack_out": [
        "app#0",
        "result.0#1"
      ]
    },
    "3422": {
      "op": "itxn LastLog",
      "defined_out": [
        "app#0",
        "result.0#1",
        "result.1.LastLog#0"
      ],
      "stack_out": [
        "app#0",
        "result.0#1",
        "result.1.LastLog#0"
      ]
    },
    "3424": {
      "op": "swap",
      "stack_out": [
        "app#0",
        "result.1.LastLog#0",
        "result.0#1"
      ]
    },
    "3425": {
      "op": "bytec 29 // 0x000b6563686f3a207475706c65",
      "defined_out": [
        "0x000b6563686f3a207475706c65",
        "app#0",
        "result.0#1",
        "result.1.LastLog#0"
      ],
      "stack_out": [
        "app#0",
        "result.1.LastLog#0",
        "result.0#1",
        "0x000b6563686f3a207475706c65"
      ]
    },
    "3427": {
      "op": "==",
      "defined_out": [
        "app#0",
        "result.1.LastLog#0",
        "tmp%14#2"
      ],
      "stack_out": [
        "app#0",
        "result.1.LastLog#0",
        "tmp%14#2"
      ]
    },
    "3428": {
      "op": "assert",
      "stack_out": [
        "app#0",
        "result.1.LastLog#0"
      ]
    },
    "3429": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "result.1.LastLog#0",
        "result.1.LastLog#0 (copy)"
      ],
      "stack_out": [
        "app#0",
        "result.1.LastLog#0",
        "result.1.LastLog#0 (copy)"
      ]
    },
    "3430": {
      "op": "extract 4 0",
      "defined_out": [
        "app#0",
        "result.1.LastLog#0",
        "tmp%15#2"
      ],
      "stack_out": [
        "app#0",
        "result.1.LastLog#0",
        "tmp%15#2"
      ]
    },
    "3433": {
      "op": "swap",
      "stack_out": [
        "app#0",
        "tmp%15#2",
        "result.1.LastLog#0"
      ]
    },
    "3434": {
      "op": "extract 0 4",
      "defined_out": [
        "app#0",
        "tmp%15#2",
        "tmp%16#4"
      ],
      "stack_out": [
        "app#0",
        "tmp%15#2",
        "tmp%16#4"
      ]
    },
    "3437": {
      "op": "bytec_0 // 0x151f7c75",
      "stack_out": [
        "app#0",
        "tmp%15#2",
        "tmp%16#4",
        "0x151f7c75"
      ]
    },
    "3438": {
      "op": "==",
      "defined_out": [
        "app#0",
        "tmp%15#2",
        "tmp%17#1"
      ],
      "stack_out": [
        "app#0",
        "tmp%15#2",
        "tmp%17#1"
      ]
    },
    "3439": {
      "error": "application log value is not the result of an ABI return",
      "op": "assert // application log value is not the result of an ABI return",
      "stack_out": [
        "app#0",
        "tmp%15#2"
      ]
    },
    "3440": {
      "op": "bytec 29 // 0x000b6563686f3a207475706c65",
      "stack_out": [
        "app#0",
        "tmp%15#2",
        "0x000b6563686f3a207475706c65"
      ]
    },
    "3442": {
      "op": "==",
      "stack_out": [
        "app#0",
        "tmp%18#0"
      ]
    },
    "3443": {
      "op": "assert",
      "stack_out": [
        "app#0"
      ]
    },
    "3444": {
      "op": "itxn_begin"
    },
    "3445": {
      "op": "itxn_field ApplicationID",
      "stack_out": []
    },
    "3447": {
      "op": "bytec_3 // method \"echo(string)string\"",
      "stack_out": [
        "Method(echo(string)string)"
      ]
    },
    "3448": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "3450": {
      "op": "pushbytes 0x0007756e7479706564",
      "defined_out": [
        "0x0007756e7479706564"
      ],
      "stack_out": [
        "0x0007756e7479706564"
      ]
    },
    "3461": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "3463": {
      "op": "intc_1 // appl",
      "stack_out": [
        "appl"
      ]
    },
    "3464": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "3466": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0"
      ]
    },
    "3467": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "3469": {
      "op": "itxn_submit"
    },
    "3470": {
      "op": "itxn LastLog",
      "defined_out": [
        "txn_result.LastLog#0"
      ],
      "stack_out": [
        "txn_result.LastLog#0"
      ]
    },
    "3472": {
      "op": "dup",
      "defined_out": [
        "txn_result.LastLog#0",
        "txn_result.LastLog#0 (copy)"
      ],
      "stack_out": [
        "txn_result.LastLog#0",
        "txn_result.LastLog#0 (copy)"
      ]
    },
    "3473": {
      "op": "extract 4 0",
      "defined_out": [
        "tmp%19#3",
        "txn_result.LastLog#0"
      ],
      "stack_out": [
        "txn_result.LastLog#0",
        "tmp%19#3"
      ]
    },
    "3476": {
      "op": "swap",
      "stack_out": [
        "tmp%19#3",
        "txn_result.LastLog#0"
      ]
    },
    "3477": {
      "op": "extract 0 4",
      "defined_out": [
        "tmp%19#3",
        "tmp%20#4"
      ],
      "stack_out": [
        "tmp%19#3",
        "tmp%20#4"
      ]
    },
    "3480": {
      "op": "bytec_0 // 0x151f7c75",
      "stack_out": [
        "tmp%19#3",
        "tmp%20#4",
        "0x151f7c75"
      ]
    },
    "3481": {
      "op": "==",
      "defined_out": [
        "tmp%19#3",
        "tmp%21#1"
      ],
      "stack_out": [
        "tmp%19#3",
        "tmp%21#1"
      ]
    },
    "3482": {
      "error": "application log value is not the result of an ABI return",
      "op": "assert // application log value is not the result of an ABI return",
      "stack_out": [
        "tmp%19#3"
      ]
    },
    "3483": {
      "op": "pushbytes 0x000d6563686f3a20756e7479706564",
      "defined_out": [
        "0x000d6563686f3a20756e7479706564",
        "tmp%19#3"
      ],
      "stack_out": [
        "tmp%19#3",
        "0x000d6563686f3a20756e7479706564"
      ]
    },
    "3500": {
      "op": "==",
      "defined_out": [
        "tmp%22#2"
      ],
      "stack_out": [
        "tmp%22#2"
      ]
    },
    "3501": {
      "op": "assert",
      "stack_out": []
    },
    "3502": {
      "op": "intc_2 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "3503": {
      "op": "return",
      "stack_out": []
    },
    "3504": {
      "block": "main_test_method_selector_kinds_route@4",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0"
      ]
    },
    "3506": {
      "op": "!",
      "defined_out": [
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%12#0"
      ]
    },
    "3507": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "3508": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%13#0"
      ],
      "stack_out": [
        "tmp%13#0"
      ]
    },
    "3510": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "3511": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded(uint8)%1#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint8)%1#0"
      ]
    },
    "3514": {
      "op": "btoi",
      "defined_out": [
        "tmp%15#0"
      ],
      "stack_out": [
        "tmp%15#0"
      ]
    },
    "3515": {
      "op": "txnas Applications",
      "defined_out": [
        "app#0"
      ],
      "stack_out": [
        "app#0"
      ]
    },
    "3517": {
      "op": "itxn_begin"
    },
    "3518": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "app#0 (copy)"
      ],
      "stack_out": [
        "app#0",
        "app#0 (copy)"
      ]
    },
    "3519": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "app#0"
      ]
    },
    "3521": {
      "op": "bytec_3 // method \"echo(string)string\"",
      "defined_out": [
        "Method(echo(string)string)",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "Method(echo(string)string)"
      ]
    },
    "3522": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0"
      ]
    },
    "3524": {
      "op": "pushbytes 0x00057465737431",
      "defined_out": [
        "0x00057465737431",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "0x00057465737431"
      ]
    },
    "3533": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0"
      ]
    },
    "3535": {
      "op": "intc_1 // appl",
      "defined_out": [
        "app#0",
        "appl"
      ],
      "stack_out": [
        "app#0",
        "appl"
      ]
    },
    "3536": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "app#0"
      ]
    },
    "3538": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "0"
      ]
    },
    "3539": {
      "op": "itxn_field Fee",
      "stack_out": [
        "app#0"
      ]
    },
    "3541": {
      "op": "itxn_submit"
    },
    "3542": {
      "op": "itxn LastLog",
      "defined_out": [
        "app#0",
        "awst_tmp%0#0"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0"
      ]
    },
    "3544": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ]
    },
    "3545": {
      "op": "extract 4 0",
      "defined_out": [
        "app#0",
        "awst_tmp%0#0",
        "result#0"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%0#0",
        "result#0"
      ]
    },
    "3548": {
      "op": "swap",
      "stack_out": [
        "app#0",
        "result#0",
        "awst_tmp%0#0"
      ]
    },
    "3549": {
      "op": "extract 0 4",
      "defined_out": [
        "app#0",
        "result#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "app#0",
        "result#0",
        "tmp%2#0"
      ]
    },
    "3552": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "app#0",
        "result#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "app#0",
        "result#0",
        "tmp%2#0",
        "0x151f7c75"
      ]
    },
    "3553": {
      "op": "==",
      "defined_out": [
        "app#0",
        "result#0",
        "tmp%3#1"
      ],
      "stack_out": [
        "app#0",
        "result#0",
        "tmp%3#1"
      ]
    },
    "3554": {
      "error": "application log value is not the result of an ABI return",
      "op": "assert // application log value is not the result of an ABI return",
      "stack_out": [
        "app#0",
        "result#0"
      ]
    },
    "3555": {
      "op": "pushbytes 0x000b6563686f3a207465737431",
      "defined_out": [
        "0x000b6563686f3a207465737431",
        "app#0",
        "result#0"
      ],
      "stack_out": [
        "app#0",
        "result#0",
        "0x000b6563686f3a207465737431"
      ]
    },
    "3570": {
      "op": "==",
      "defined_out": [
        "app#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "app#0",
        "tmp%4#0"
      ]
    },
    "3571": {
      "op": "assert",
      "stack_out": [
        "app#0"
      ]
    },
    "3572": {
      "op": "itxn_begin"
    },
    "3573": {
      "op": "dup",
      "stack_out": [
        "app#0",
        "app#0 (copy)"
      ]
    },
    "3574": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "app#0"
      ]
    },
    "3576": {
      "op": "bytec_3 // method \"echo(string)string\"",
      "stack_out": [
        "app#0",
        "Method(echo(string)string)"
      ]
    },
    "3577": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0"
      ]
    },
    "3579": {
      "op": "pushbytes 0x00057465737432",
      "defined_out": [
        "0x00057465737432",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "0x00057465737432"
      ]
    },
    "3588": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0"
      ]
    },
    "3590": {
      "op": "intc_1 // appl",
      "stack_out": [
        "app#0",
        "appl"
      ]
    },
    "3591": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "app#0"
      ]
    },
    "3593": {
      "op": "intc_0 // 0",
      "stack_out": [
        "app#0",
        "0"
      ]
    },
    "3594": {
      "op": "itxn_field Fee",
      "stack_out": [
        "app#0"
      ]
    },
    "3596": {
      "op": "itxn_submit"
    },
    "3597": {
      "op": "itxn LastLog",
      "defined_out": [
        "app#0",
        "awst_tmp%1#0"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%1#0"
      ]
    },
    "3599": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "awst_tmp%1#0",
        "awst_tmp%1#0 (copy)"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%1#0",
        "awst_tmp%1#0 (copy)"
      ]
    },
    "3600": {
      "op": "extract 4 0",
      "stack_out": [
        "app#0",
        "awst_tmp%1#0",
        "result#0"
      ]
    },
    "3603": {
      "op": "swap",
      "stack_out": [
        "app#0",
        "result#0",
        "awst_tmp%1#0"
      ]
    },
    "3604": {
      "op": "extract 0 4",
      "defined_out": [
        "app#0",
        "result#0",
        "tmp%6#3"
      ],
      "stack_out": [
        "app#0",
        "result#0",
        "tmp%6#3"
      ]
    },
    "3607": {
      "op": "bytec_0 // 0x151f7c75",
      "stack_out": [
        "app#0",
        "result#0",
        "tmp%6#3",
        "0x151f7c75"
      ]
    },
    "3608": {
      "op": "==",
      "defined_out": [
        "app#0",
        "result#0",
        "tmp%7#1"
      ],
      "stack_out": [
        "app#0",
        "result#0",
        "tmp%7#1"
      ]
    },
    "3609": {
      "error": "application log value is not the result of an ABI return",
      "op": "assert // application log value is not the result of an ABI return",
      "stack_out": [
        "app#0",
        "result#0"
      ]
    },
    "3610": {
      "op": "pushbytes 0x000b6563686f3a207465737432",
      "defined_out": [
        "0x000b6563686f3a207465737432",
        "app#0",
        "result#0"
      ],
      "stack_out": [
        "app#0",
        "result#0",
        "0x000b6563686f3a207465737432"
      ]
    },
    "3625": {
      "op": "==",
      "defined_out": [
        "app#0",
        "tmp%8#1"
      ],
      "stack_out": [
        "app#0",
        "tmp%8#1"
      ]
    },
    "3626": {
      "op": "assert",
      "stack_out": [
        "app#0"
      ]
    },
    "3627": {
      "op": "itxn_begin"
    },
    "3628": {
      "op": "dup",
      "stack_out": [
        "app#0",
        "app#0 (copy)"
      ]
    },
    "3629": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "app#0"
      ]
    },
    "3631": {
      "op": "bytec_3 // method \"echo(string)string\"",
      "stack_out": [
        "app#0",
        "Method(echo(string)string)"
      ]
    },
    "3632": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0"
      ]
    },
    "3634": {
      "op": "pushbytes 0x00057465737433",
      "defined_out": [
        "0x00057465737433",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "0x00057465737433"
      ]
    },
    "3643": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0"
      ]
    },
    "3645": {
      "op": "intc_1 // appl",
      "stack_out": [
        "app#0",
        "appl"
      ]
    },
    "3646": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "app#0"
      ]
    },
    "3648": {
      "op": "intc_0 // 0",
      "stack_out": [
        "app#0",
        "0"
      ]
    },
    "3649": {
      "op": "itxn_field Fee",
      "stack_out": [
        "app#0"
      ]
    },
    "3651": {
      "op": "itxn_submit"
    },
    "3652": {
      "op": "itxn LastLog",
      "defined_out": [
        "app#0",
        "awst_tmp%2#0"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%2#0"
      ]
    },
    "3654": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "awst_tmp%2#0",
        "awst_tmp%2#0 (copy)"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%2#0",
        "awst_tmp%2#0 (copy)"
      ]
    },
    "3655": {
      "op": "extract 4 0",
      "stack_out": [
        "app#0",
        "awst_tmp%2#0",
        "result#0"
      ]
    },
    "3658": {
      "op": "swap",
      "stack_out": [
        "app#0",
        "result#0",
        "awst_tmp%2#0"
      ]
    },
    "3659": {
      "op": "extract 0 4",
      "defined_out": [
        "app#0",
        "result#0",
        "tmp%10#1"
      ],
      "stack_out": [
        "app#0",
        "result#0",
        "tmp%10#1"
      ]
    },
    "3662": {
      "op": "bytec_0 // 0x151f7c75",
      "stack_out": [
        "app#0",
        "result#0",
        "tmp%10#1",
        "0x151f7c75"
      ]
    },
    "3663": {
      "op": "==",
      "defined_out": [
        "app#0",
        "result#0",
        "tmp%11#1"
      ],
      "stack_out": [
        "app#0",
        "result#0",
        "tmp%11#1"
      ]
    },
    "3664": {
      "error": "application log value is not the result of an ABI return",
      "op": "assert // application log value is not the result of an ABI return",
      "stack_out": [
        "app#0",
        "result#0"
      ]
    },
    "3665": {
      "op": "pushbytes 0x000b6563686f3a207465737433",
      "defined_out": [
        "0x000b6563686f3a207465737433",
        "app#0",
        "result#0"
      ],
      "stack_out": [
        "app#0",
        "result#0",
        "0x000b6563686f3a207465737433"
      ]
    },
    "3680": {
      "op": "==",
      "stack_out": [
        "app#0",
        "tmp%12#0"
      ]
    },
    "3681": {
      "op": "assert",
      "stack_out": [
        "app#0"
      ]
    },
    "3682": {
      "op": "itxn_begin"
    },
    "3683": {
      "op": "dup",
      "stack_out": [
        "app#0",
        "app#0 (copy)"
      ]
    },
    "3684": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "app#0"
      ]
    },
    "3686": {
      "op": "bytec_3 // method \"echo(string)string\"",
      "stack_out": [
        "app#0",
        "Method(echo(string)string)"
      ]
    },
    "3687": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0"
      ]
    },
    "3689": {
      "op": "pushbytes 0x00057465737434",
      "defined_out": [
        "0x00057465737434",
        "app#0"
      ],
      "stack_out": [
        "app#0",
        "0x00057465737434"
      ]
    },
    "3698": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "app#0"
      ]
    },
    "3700": {
      "op": "intc_1 // appl",
      "stack_out": [
        "app#0",
        "appl"
      ]
    },
    "3701": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "app#0"
      ]
    },
    "3703": {
      "op": "intc_0 // 0",
      "stack_out": [
        "app#0",
        "0"
      ]
    },
    "3704": {
      "op": "itxn_field Fee",
      "stack_out": [
        "app#0"
      ]
    },
    "3706": {
      "op": "itxn_submit"
    },
    "3707": {
      "op": "itxn LastLog",
      "defined_out": [
        "app#0",
        "awst_tmp%3#0"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%3#0"
      ]
    },
    "3709": {
      "op": "dup",
      "defined_out": [
        "app#0",
        "awst_tmp%3#0",
        "awst_tmp%3#0 (copy)"
      ],
      "stack_out": [
        "app#0",
        "awst_tmp%3#0",
        "awst_tmp%3#0 (copy)"
      ]
    },
    "3710": {
      "op": "extract 4 0",
      "stack_out": [
        "app#0",
        "awst_tmp%3#0",
        "result#0"
      ]
    },
    "3713": {
      "op": "swap",
      "stack_out": [
        "app#0",
        "result#0",
        "awst_tmp%3#0"
      ]
    },
    "3714": {
      "op": "extract 0 4",
      "defined_out": [
        "app#0",
        "result#0",
        "tmp%14#1"
      ],
      "stack_out": [
        "app#0",
        "result#0",
        "tmp%14#1"
      ]
    },
    "3717": {
      "op": "bytec_0 // 0x151f7c75",
      "stack_out": [
        "app#0",
        "result#0",
        "tmp%14#1",
        "0x151f7c75"
      ]
    },
    "3718": {
      "op": "==",
      "defined_out": [
        "app#0",
        "result#0",
        "tmp%15#1"
      ],
      "stack_out": [
        "app#0",
        "result#0",
        "tmp%15#1"
      ]
    },
    "3719": {
      "error": "application log value is not the result of an ABI return",
      "op": "assert // application log value is not the result of an ABI return",
      "stack_out": [
        "app#0",
        "result#0"
      ]
    },
    "3720": {
      "op": "pushbytes 0x000b6563686f3a207465737434",
      "defined_out": [
        "0x000b6563686f3a207465737434",
        "app#0",
        "result#0"
      ],
      "stack_out": [
        "app#0",
        "result#0",
        "0x000b6563686f3a207465737434"
      ]
    },
    "3735": {
      "op": "==",
      "defined_out": [
        "app#0",
        "tmp%16#1"
      ],
      "stack_out": [
        "app#0",
        "tmp%16#1"
      ]
    },
    "3736": {
      "op": "assert",
      "stack_out": [
        "app#0"
      ]
    },
    "3737": {
      "op": "itxn_begin"
    },
    "3738": {
      "op": "itxn_field ApplicationID",
      "stack_out": []
    },
    "3740": {
      "op": "bytec_3 // method \"echo(string)string\"",
      "stack_out": [
        "Method(echo(string)string)"
      ]
    },
    "3741": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "3743": {
      "op": "pushbytes 0x00057465737435",
      "defined_out": [
        "0x00057465737435"
      ],
      "stack_out": [
        "0x00057465737435"
      ]
    },
    "3752": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "3754": {
      "op": "intc_1 // appl",
      "stack_out": [
        "appl"
      ]
    },
    "3755": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "3757": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0"
      ]
    },
    "3758": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "3760": {
      "op": "itxn_submit"
    },
    "3761": {
      "op": "itxn LastLog",
      "defined_out": [
        "awst_tmp%4#0"
      ],
      "stack_out": [
        "awst_tmp%4#0"
      ]
    },
    "3763": {
      "op": "dup",
      "defined_out": [
        "awst_tmp%4#0",
        "awst_tmp%4#0 (copy)"
      ],
      "stack_out": [
        "awst_tmp%4#0",
        "awst_tmp%4#0 (copy)"
      ]
    },
    "3764": {
      "op": "extract 4 0",
      "stack_out": [
        "awst_tmp%4#0",
        "result#0"
      ]
    },
    "3767": {
      "op": "swap",
      "stack_out": [
        "result#0",
        "awst_tmp%4#0"
      ]
    },
    "3768": {
      "op": "extract 0 4",
      "defined_out": [
        "result#0",
        "tmp%18#3"
      ],
      "stack_out": [
        "result#0",
        "tmp%18#3"
      ]
    },
    "3771": {
      "op": "bytec_0 // 0x151f7c75",
      "stack_out": [
        "result#0",
        "tmp%18#3",
        "0x151f7c75"
      ]
    },
    "3772": {
      "op": "==",
      "defined_out": [
        "result#0",
        "tmp%19#1"
      ],
      "stack_out": [
        "result#0",
        "tmp%19#1"
      ]
    },
    "3773": {
      "error": "application log value is not the result of an ABI return",
      "op": "assert // application log value is not the result of an ABI return",
      "stack_out": [
        "result#0"
      ]
    },
    "3774": {
      "op": "pushbytes 0x000b6563686f3a207465737435",
      "defined_out": [
        "0x000b6563686f3a207465737435",
        "result#0"
      ],
      "stack_out": [
        "result#0",
        "0x000b6563686f3a207465737435"
      ]
    },
    "3789": {
      "op": "==",
      "defined_out": [
        "tmp%20#1"
      ],
      "stack_out": [
        "tmp%20#1"
      ]
    },
    "3790": {
      "op": "assert",
      "stack_out": []
    },
    "3791": {
      "op": "intc_2 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "3792": {
      "op": "return",
      "stack_out": []
    },
    "3793": {
      "block": "main_test_is_a_b_route@3",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "3795": {
      "op": "!",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "3796": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "3797": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "3799": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "3800": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded(len+uint8[])%0#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(len+uint8[])%0#0"
      ]
    },
    "3803": {
      "op": "extract 2 0",
      "defined_out": [
        "a#0"
      ],
      "stack_out": [
        "a#0"
      ]
    },
    "3806": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "a#0",
        "reinterpret_Encoded(len+uint8[])%1#0"
      ],
      "stack_out": [
        "a#0",
        "reinterpret_Encoded(len+uint8[])%1#0"
      ]
    },
    "3809": {
      "op": "extract 2 0",
      "defined_out": [
        "a#0",
        "b#0"
      ],
      "stack_out": [
        "a#0",
        "b#0"
      ]
    },
    "3812": {
      "op": "txna ApplicationArgs 3",
      "defined_out": [
        "a#0",
        "b#0",
        "reinterpret_Encoded(uint8)%0#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "reinterpret_Encoded(uint8)%0#0"
      ]
    },
    "3815": {
      "op": "btoi",
      "defined_out": [
        "a#0",
        "b#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "tmp%9#0"
      ]
    },
    "3816": {
      "op": "txnas Applications",
      "defined_out": [
        "a#0",
        "app#0",
        "b#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "app#0"
      ]
    },
    "3818": {
      "op": "itxn_begin"
    },
    "3819": {
      "op": "dig 2",
      "defined_out": [
        "a#0",
        "a#0 (copy)",
        "app#0",
        "b#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "app#0",
        "a#0 (copy)"
      ]
    },
    "3821": {
      "op": "len",
      "defined_out": [
        "a#0",
        "app#0",
        "b#0",
        "length%0#12"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "app#0",
        "length%0#12"
      ]
    },
    "3822": {
      "op": "itob",
      "defined_out": [
        "a#0",
        "app#0",
        "as_bytes%0#11",
        "b#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "app#0",
        "as_bytes%0#11"
      ]
    },
    "3823": {
      "op": "extract 6 2",
      "defined_out": [
        "a#0",
        "app#0",
        "b#0",
        "length_uint16%0#11"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "app#0",
        "length_uint16%0#11"
      ]
    },
    "3826": {
      "op": "uncover 3",
      "stack_out": [
        "b#0",
        "app#0",
        "length_uint16%0#11",
        "a#0"
      ]
    },
    "3828": {
      "op": "concat",
      "defined_out": [
        "app#0",
        "b#0",
        "encoded_value%0#11"
      ],
      "stack_out": [
        "b#0",
        "app#0",
        "encoded_value%0#11"
      ]
    },
    "3829": {
      "op": "dig 2",
      "defined_out": [
        "app#0",
        "b#0",
        "b#0 (copy)",
        "encoded_value%0#11"
      ],
      "stack_out": [
        "b#0",
        "app#0",
        "encoded_value%0#11",
        "b#0 (copy)"
      ]
    },
    "3831": {
      "op": "len",
      "defined_out": [
        "app#0",
        "b#0",
        "encoded_value%0#11",
        "length%1#10"
      ],
      "stack_out": [
        "b#0",
        "app#0",
        "encoded_value%0#11",
        "length%1#10"
      ]
    },
    "3832": {
      "op": "itob",
      "defined_out": [
        "app#0",
        "as_bytes%1#5",
        "b#0",
        "encoded_value%0#11"
      ],
      "stack_out": [
        "b#0",
        "app#0",
        "encoded_value%0#11",
        "as_bytes%1#5"
      ]
    },
    "3833": {
      "op": "extract 6 2",
      "defined_out": [
        "app#0",
        "b#0",
        "encoded_value%0#11",
        "length_uint16%1#10"
      ],
      "stack_out": [
        "b#0",
        "app#0",
        "encoded_value%0#11",
        "length_uint16%1#10"
      ]
    },
    "3836": {
      "op": "uncover 3",
      "stack_out": [
        "app#0",
        "encoded_value%0#11",
        "length_uint16%1#10",
        "b#0"
      ]
    },
    "3838": {
      "op": "concat",
      "defined_out": [
        "app#0",
        "encoded_value%0#11",
        "encoded_value%1#10"
      ],
      "stack_out": [
        "app#0",
        "encoded_value%0#11",
        "encoded_value%1#10"
      ]
    },
    "3839": {
      "op": "uncover 2",
      "stack_out": [
        "encoded_value%0#11",
        "encoded_value%1#10",
        "app#0"
      ]
    },
    "3841": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "encoded_value%0#11",
        "encoded_value%1#10"
      ]
    },
    "3843": {
      "op": "pushbytes 0xc77212bc // method \"is_a_b(byte[],byte[])void\"",
      "defined_out": [
        "Method(is_a_b(byte[],byte[])void)",
        "encoded_value%0#11",
        "encoded_value%1#10"
      ],
      "stack_out": [
        "encoded_value%0#11",
        "encoded_value%1#10",
        "Method(is_a_b(byte[],byte[])void)"
      ]
    },
    "3849": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "encoded_value%0#11",
        "encoded_value%1#10"
      ]
    },
    "3851": {
      "op": "swap",
      "stack_out": [
        "encoded_value%1#10",
        "encoded_value%0#11"
      ]
    },
    "3852": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "encoded_value%1#10"
      ]
    },
    "3854": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "3856": {
      "op": "intc_1 // appl",
      "defined_out": [
        "appl"
      ],
      "stack_out": [
        "appl"
      ]
    },
    "3857": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "3859": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "3860": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "3862": {
      "op": "itxn_submit"
    },
    "3863": {
      "op": "intc_2 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "3864": {
      "op": "return",
      "stack_out": []
    },
    "3865": {
      "block": "main_bare_routing@23",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%115#0"
      ],
      "stack_out": [
        "tmp%115#0"
      ]
    },
    "3867": {
      "op": "bnz main_after_if_else@27",
      "stack_out": []
    },
    "3870": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%116#0"
      ],
      "stack_out": [
        "tmp%116#0"
      ]
    },
    "3872": {
      "op": "!",
      "defined_out": [
        "tmp%117#0"
      ],
      "stack_out": [
        "tmp%117#0"
      ]
    },
    "3873": {
      "error": "can only call when creating",
      "op": "assert // can only call when creating",
      "stack_out": []
    },
    "3874": {
      "op": "intc_2 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "3875": {
      "op": "return",
      "stack_out": []
    }
  }
}