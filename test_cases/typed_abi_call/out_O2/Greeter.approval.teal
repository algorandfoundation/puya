#pragma version 10
#pragma typetrack false

// algopy.arc4.ARC4Contract.approval_program() -> uint64:
main:
    intcblock 0 6 2 12
    bytecblock 0x151f7c75 0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002 0x0000000000000001 0x9bf81913 0x16e03919 0x00027331 0x00026231 0x01 0x0000000000000001000a00056c6f672031 0xb4b4334e "echo: s1" 0xd6c2ac7f 0x00 0x48142d5e 0xb862ee19 0xab271ce4 0x0000000000000003 0x03 0xd8cc363b 0xa9fb6cf1 0x2659e818 0x000162 0x4a444c77 0x000173 0xddd07185 0x000000000000002a 0x00040010000400080002733100027332000000000000000100000000000000020012000133 0x00086563686f3a207332 0x6563686f3a2033 0x6563686f3a206231 0x0000000000000002 0x0f101112deadbeef14 0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000003 0x000b6563686f3a207475706c65
    txn ApplicationID
    !
    txn OnCompletion
    pushint 1 // 1
    shl
    +
    switch call_NoOp create_NoOp *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED

*NOT_IMPLEMENTED:
    err // The requested action is not implemented in this contract. Are you using the correct OnComplete? Did you set your app ID?

create_NoOp:
    txn NumAppArgs
    !
    return // on error: this contract does not implement the given ABI method for create NoOp

call_NoOp:
    pushbytess 0x094418cd 0x31e8e212 0xb5dcf0ba 0xbf3b242b 0x063beac7 0xe9f3087d 0xc88920f9 0xc2f21b73 0x86052a5c 0xe85f2441 0x92082d08 0x6211cd59 0x19eed724 0x92f75ee2 0xe748ef8e 0xc7b94959 0x868e49e7 0xaccd5072 0xf7f3d8ac // method "test_is_a_b(byte[],byte[],uint64)void", method "test_method_selector_kinds(uint64)void", method "test_method_overload(uint64)void", method "test_arg_conversion(uint64)void", method "test_15plus_args(uint64)void", method "test_void(uint64)void", method "test_ref_types(uint64,uint64)void", method "test_account_to_address(uint64)void", method "test_native_string(uint64)void", method "test_native_bytes(uint64)void", method "test_native_uint64(uint64)void", method "test_native_biguint(uint64)void", method "test_native_tuple(uint64)void", method "test_native_tuple_method_ref(uint64)void", method "test_nested_tuples(uint64)void", method "test_no_args(uint64)void", method "test_named_tuples(uint64)void", method "test_arc4_struct(uint64)void", method "test_resource_encoding(uint64,uint64)void"
    txna ApplicationArgs 0
    match test_is_a_b_route@3 test_method_selector_kinds_route@4 test_method_overload_route@5 test_arg_conversion_route@6 test_15plus_args_route@7 test_void_route@8 test_ref_types_route@9 test_account_to_address_route@10 test_native_string_route@11 test_native_bytes_route@12 test_native_uint64_route@13 test_native_biguint_route@14 test_native_tuple_route@15 test_native_tuple_method_ref_route@16 test_nested_tuples_route@17 test_no_args_route@18 test_named_tuples_route@19 test_arc4_struct_route@20 test_resource_encoding_route@21
    err // this contract does not implement the given ABI method for call NoOp

test_resource_encoding_route@21:
    txna ApplicationArgs 1
    btoi
    txna ApplicationArgs 2
    dup
    btoi
    global CurrentApplicationID
    global CurrentApplicationAddress
    itxn_begin
    dig 4
    itxn_field ApplicationID
    dig 2
    itxn_field Assets
    dig 1
    itxn_field Applications
    dup
    itxn_field Accounts
    bytec 11 // method "echo_resource_by_index(asset,application,account)(uint64,uint64,address)"
    itxn_field ApplicationArgs
    bytec 12 // 0x00
    itxn_field ApplicationArgs
    bytec 7 // 0x01
    itxn_field ApplicationArgs
    bytec 7 // 0x01
    itxn_field ApplicationArgs
    intc_1 // appl
    itxn_field TypeEnum
    intc_0 // 0
    itxn_field Fee
    itxn_submit
    itxn LastLog
    dup
    extract 0 4
    bytec_0 // 0x151f7c75
    ==
    assert // application log value is not the result of an ABI return
    dup
    pushint 4 // 4
    extract_uint64
    dig 1
    intc_3 // 12
    extract_uint64
    uncover 2
    extract 20 32
    uncover 2
    dig 5
    ==
    uncover 2
    dig 4
    ==
    &&
    swap
    dig 2
    ==
    &&
    assert // expected echo to return same resources
    itxn_begin
    dig 1
    itob
    dig 5
    itxn_field ApplicationID
    bytec 13 // method "echo_resource_by_value(uint64,uint64,address)(uint64,uint64,address)"
    itxn_field ApplicationArgs
    dig 4
    itxn_field ApplicationArgs
    dup
    itxn_field ApplicationArgs
    dig 1
    itxn_field ApplicationArgs
    intc_1 // appl
    itxn_field TypeEnum
    intc_0 // 0
    itxn_field Fee
    itxn_submit
    itxn LastLog
    dup
    extract 0 4
    bytec_0 // 0x151f7c75
    ==
    assert // application log value is not the result of an ABI return
    dup
    pushint 4 // 4
    extract_uint64
    dig 1
    intc_3 // 12
    extract_uint64
    uncover 2
    extract 20 32
    uncover 2
    dig 6
    ==
    uncover 2
    dig 5
    ==
    &&
    swap
    dig 3
    ==
    &&
    assert // expected echo to return same resources
    itxn_begin
    dig 5
    itxn_field ApplicationID
    dig 3
    itxn_field Assets
    dig 2
    itxn_field Applications
    dig 1
    itxn_field Accounts
    bytec 11 // method "echo_resource_by_index(asset,application,account)(uint64,uint64,address)"
    itxn_field ApplicationArgs
    bytec 12 // 0x00
    itxn_field ApplicationArgs
    bytec 7 // 0x01
    itxn_field ApplicationArgs
    bytec 7 // 0x01
    itxn_field ApplicationArgs
    intc_1 // appl
    itxn_field TypeEnum
    intc_0 // 0
    itxn_field Fee
    itxn_submit
    itxn LastLog
    dup
    extract 0 4
    bytec_0 // 0x151f7c75
    ==
    assert // application log value is not the result of an ABI return
    dup
    pushint 4 // 4
    extract_uint64
    dig 1
    intc_3 // 12
    extract_uint64
    uncover 2
    extract 20 32
    uncover 2
    dig 6
    ==
    uncover 2
    dig 5
    ==
    &&
    swap
    dig 3
    ==
    &&
    assert // expected echo to return same resources
    itxn_begin
    dig 5
    itxn_field ApplicationID
    bytec 13 // method "echo_resource_by_value(uint64,uint64,address)(uint64,uint64,address)"
    itxn_field ApplicationArgs
    dig 4
    itxn_field ApplicationArgs
    dup
    itxn_field ApplicationArgs
    dig 1
    itxn_field ApplicationArgs
    intc_1 // appl
    itxn_field TypeEnum
    intc_0 // 0
    itxn_field Fee
    itxn_submit
    itxn LastLog
    dup
    extract 0 4
    bytec_0 // 0x151f7c75
    ==
    assert // application log value is not the result of an ABI return
    dup
    pushint 4 // 4
    extract_uint64
    dig 1
    intc_3 // 12
    extract_uint64
    uncover 2
    extract 20 32
    uncover 2
    dig 6
    ==
    uncover 2
    dig 5
    ==
    &&
    swap
    dig 3
    ==
    &&
    assert // expected echo to return same resources
    itxn_begin
    dig 5
    itxn_field ApplicationID
    dig 3
    itxn_field Assets
    dig 2
    itxn_field Applications
    dig 1
    itxn_field Accounts
    bytec 11 // method "echo_resource_by_index(asset,application,account)(uint64,uint64,address)"
    itxn_field ApplicationArgs
    bytec 12 // 0x00
    itxn_field ApplicationArgs
    bytec 7 // 0x01
    itxn_field ApplicationArgs
    bytec 7 // 0x01
    itxn_field ApplicationArgs
    intc_1 // appl
    itxn_field TypeEnum
    intc_0 // 0
    itxn_field Fee
    itxn_submit
    itxn LastLog
    dup
    extract 0 4
    bytec_0 // 0x151f7c75
    ==
    assert // application log value is not the result of an ABI return
    dup
    pushint 4 // 4
    extract_uint64
    dig 1
    intc_3 // 12
    extract_uint64
    uncover 2
    extract 20 32
    uncover 2
    dig 6
    ==
    uncover 2
    dig 5
    ==
    &&
    swap
    dig 3
    ==
    &&
    assert // expected echo to return same resources
    itxn_begin
    uncover 5
    itxn_field ApplicationID
    bytec 13 // method "echo_resource_by_value(uint64,uint64,address)(uint64,uint64,address)"
    itxn_field ApplicationArgs
    uncover 4
    itxn_field ApplicationArgs
    itxn_field ApplicationArgs
    dup
    itxn_field ApplicationArgs
    intc_1 // appl
    itxn_field TypeEnum
    intc_0 // 0
    itxn_field Fee
    itxn_submit
    itxn LastLog
    dup
    extract 0 4
    bytec_0 // 0x151f7c75
    ==
    assert // application log value is not the result of an ABI return
    dup
    pushint 4 // 4
    extract_uint64
    dig 1
    intc_3 // 12
    extract_uint64
    uncover 2
    extract 20 32
    uncover 2
    uncover 5
    ==
    uncover 2
    uncover 4
    ==
    &&
    swap
    uncover 2
    ==
    &&
    return // on error: expected echo to return same resources

test_arc4_struct_route@20:
    txna ApplicationArgs 1
    btoi
    itxn_begin
    itxn_field ApplicationID
    pushbytes 0xdc4f1992 // method "echo_log_struct((uint64,string))(uint64,string)"
    itxn_field ApplicationArgs
    bytec 8 // 0x0000000000000001000a00056c6f672031
    itxn_field ApplicationArgs
    intc_1 // appl
    itxn_field TypeEnum
    intc_0 // 0
    itxn_field Fee
    itxn_submit
    itxn LastLog
    dup
    extract 4 0
    swap
    extract 0 4
    bytec_0 // 0x151f7c75
    ==
    assert // application log value is not the result of an ABI return
    itxn LastLog
    swap
    bytec 8 // 0x0000000000000001000a00056c6f672031
    ==
    assert // expected output to match input
    dup
    extract 4 0
    swap
    extract 0 4
    bytec_0 // 0x151f7c75
    ==
    assert // application log value is not the result of an ABI return
    bytec 8 // 0x0000000000000001000a00056c6f672031
    ==
    return // on error: expected output to match input

test_named_tuples_route@19:
    txna ApplicationArgs 1
    btoi
    itxn_begin
    dup
    itxn_field ApplicationID
    bytec 24 // method "logs_are_equal((uint64,string),(uint64,string))bool"
    itxn_field ApplicationArgs
    bytec 8 // 0x0000000000000001000a00056c6f672031
    itxn_field ApplicationArgs
    bytec 8 // 0x0000000000000001000a00056c6f672031
    itxn_field ApplicationArgs
    intc_1 // appl
    itxn_field TypeEnum
    intc_0 // 0
    itxn_field Fee
    itxn_submit
    itxn LastLog
    dup
    extract 4 0
    swap
    extract 0 4
    bytec_0 // 0x151f7c75
    ==
    assert // application log value is not the result of an ABI return
    intc_0 // 0
    getbit
    assert
    itxn_begin
    itxn_field ApplicationID
    bytec 24 // method "logs_are_equal((uint64,string),(uint64,string))bool"
    itxn_field ApplicationArgs
    pushbytes 0x0000000000000002000a00056c6f672032
    itxn_field ApplicationArgs
    bytec 8 // 0x0000000000000001000a00056c6f672031
    itxn_field ApplicationArgs
    intc_1 // appl
    itxn_field TypeEnum
    intc_0 // 0
    itxn_field Fee
    itxn_submit
    itxn LastLog
    dup
    extract 4 0
    swap
    extract 0 4
    bytec_0 // 0x151f7c75
    ==
    assert // application log value is not the result of an ABI return
    intc_0 // 0
    getbit
    !
    return

test_no_args_route@18:
    txna ApplicationArgs 1
    btoi
    itxn_begin
    dup
    itxn_field ApplicationID
    bytec 14 // method "no_args()uint64"
    itxn_field ApplicationArgs
    intc_1 // appl
    itxn_field TypeEnum
    intc_0 // 0
    itxn_field Fee
    itxn_submit
    itxn LastLog
    dup
    extract 4 0
    swap
    extract 0 4
    bytec_0 // 0x151f7c75
    ==
    assert // application log value is not the result of an ABI return
    btoi
    pushint 42 // 42
    ==
    assert
    itxn_begin
    dup
    itxn_field ApplicationID
    bytec 14 // method "no_args()uint64"
    itxn_field ApplicationArgs
    intc_1 // appl
    itxn_field TypeEnum
    intc_0 // 0
    itxn_field Fee
    itxn_submit
    itxn LastLog
    dup
    extract 4 0
    swap
    extract 0 4
    bytec_0 // 0x151f7c75
    ==
    assert // application log value is not the result of an ABI return
    bytec 25 // 0x000000000000002a
    b==
    assert
    itxn_begin
    itxn_field ApplicationID
    bytec 14 // method "no_args()uint64"
    itxn_field ApplicationArgs
    intc_1 // appl
    itxn_field TypeEnum
    intc_0 // 0
    itxn_field Fee
    itxn_submit
    itxn LastLog
    extract 0 4
    bytec_0 // 0x151f7c75
    ==
    assert // application log value is not the result of an ABI return
    itxn LastLog
    dup
    extract 4 0
    swap
    extract 0 4
    bytec_0 // 0x151f7c75
    ==
    assert // application log value is not the result of an ABI return
    bytec 25 // 0x000000000000002a
    b==
    return

test_nested_tuples_route@17:
    txna ApplicationArgs 1
    btoi
    itxn_begin
    dup
    itxn_field ApplicationID
    bytec 15 // method "echo_nested_tuple(((string,string),(uint64,uint64,byte[])))((string,string),(uint64,uint64,byte[]))"
    itxn_field ApplicationArgs
    bytec 26 // 0x00040010000400080002733100027332000000000000000100000000000000020012000133
    itxn_field ApplicationArgs
    intc_1 // appl
    itxn_field TypeEnum
    intc_0 // 0
    itxn_field Fee
    itxn_submit
    itxn LastLog
    dup
    extract 4 0
    swap
    extract 0 4
    bytec_0 // 0x151f7c75
    ==
    assert // application log value is not the result of an ABI return
    dup
    intc_0 // 0
    extract_uint16
    dig 1
    intc_2 // 2
    extract_uint16
    dig 2
    uncover 2
    dig 2
    substring3
    dup
    intc_0 // 0
    extract_uint16
    dig 1
    intc_2 // 2
    extract_uint16
    dig 2
    uncover 2
    dig 2
    substring3
    extract 2 0
    dig 2
    len
    swap
    cover 3
    substring3
    dig 3
    len
    uncover 4
    uncover 4
    uncover 2
    substring3
    dup
    intc_0 // 0
    extract_uint64
    dig 1
    extract 8 8
    dig 2
    pushint 16 // 16
    extract_uint16
    dig 3
    len
    uncover 4
    cover 2
    substring3
    extract 2 0
    uncover 4
    bytec 10 // "echo: s1"
    ==
    assert
    uncover 3
    bytec 27 // 0x00086563686f3a207332
    ==
    assert
    uncover 2
    intc_2 // 2
    ==
    assert
    swap
    bytec 16 // 0x0000000000000003
    b==
    assert
    bytec 28 // 0x6563686f3a2033
    ==
    assert
    itxn_begin
    dup
    itxn_field ApplicationID
    bytec 15 // method "echo_nested_tuple(((string,string),(uint64,uint64,byte[])))((string,string),(uint64,uint64,byte[]))"
    itxn_field ApplicationArgs
    bytec 26 // 0x00040010000400080002733100027332000000000000000100000000000000020012000133
    itxn_field ApplicationArgs
    intc_1 // appl
    itxn_field TypeEnum
    intc_0 // 0
    itxn_field Fee
    itxn_submit
    itxn LastLog
    dup
    extract 4 0
    swap
    extract 0 4
    bytec_0 // 0x151f7c75
    ==
    assert // application log value is not the result of an ABI return
    dup
    intc_0 // 0
    extract_uint16
    dig 1
    intc_2 // 2
    extract_uint16
    dig 2
    uncover 2
    dig 2
    substring3
    dup
    intc_0 // 0
    extract_uint16
    dig 1
    intc_2 // 2
    extract_uint16
    dig 2
    uncover 2
    dig 2
    substring3
    extract 2 0
    dig 2
    len
    swap
    cover 3
    substring3
    dig 3
    len
    uncover 4
    uncover 4
    uncover 2
    substring3
    dup
    intc_0 // 0
    extract_uint64
    dig 1
    extract 8 8
    dig 2
    pushint 16 // 16
    extract_uint16
    dig 3
    len
    uncover 4
    cover 2
    substring3
    extract 2 0
    uncover 4
    bytec 10 // "echo: s1"
    ==
    assert
    uncover 3
    bytec 27 // 0x00086563686f3a207332
    ==
    assert
    uncover 2
    intc_2 // 2
    ==
    assert
    swap
    bytec 16 // 0x0000000000000003
    b==
    assert
    bytec 28 // 0x6563686f3a2033
    ==
    assert
    itxn_begin
    itxn_field ApplicationID
    bytec 15 // method "echo_nested_tuple(((string,string),(uint64,uint64,byte[])))((string,string),(uint64,uint64,byte[]))"
    itxn_field ApplicationArgs
    pushbytes 0x000400120004000900037331620003733262000000000000000b0000000000000015001200023362
    itxn_field ApplicationArgs
    intc_1 // appl
    itxn_field TypeEnum
    intc_0 // 0
    itxn_field Fee
    itxn_submit
    itxn LastLog
    dup
    extract 4 0
    swap
    extract 0 4
    bytec_0 // 0x151f7c75
    ==
    assert // application log value is not the result of an ABI return
    dup
    intc_0 // 0
    extract_uint16
    dig 1
    intc_2 // 2
    extract_uint16
    dig 2
    uncover 2
    dig 2
    substring3
    dup
    intc_0 // 0
    extract_uint16
    dig 1
    intc_2 // 2
    extract_uint16
    dig 2
    uncover 2
    dig 2
    substring3
    extract 2 0
    dig 2
    len
    swap
    cover 3
    substring3
    dig 3
    len
    uncover 4
    uncover 4
    uncover 2
    substring3
    dup
    intc_0 // 0
    extract_uint64
    dig 1
    extract 8 8
    dig 2
    pushint 16 // 16
    extract_uint16
    dig 3
    len
    uncover 4
    cover 2
    substring3
    extract 2 0
    uncover 4
    pushbytes "echo: s1b"
    ==
    assert
    uncover 3
    pushbytes 0x00096563686f3a20733262
    ==
    assert
    uncover 2
    intc_3 // 12
    ==
    assert
    swap
    pushbytes 0x0000000000000016
    b==
    assert
    pushbytes 0x6563686f3a203362
    ==
    return

test_native_tuple_method_ref_route@16:
    txna ApplicationArgs 1
    btoi
    itxn_begin
    dup
    itxn_field ApplicationID
    bytec 4 // method "echo_native_tuple(string,byte[],uint64,uint512)(string,byte[],uint64,uint512)"
    itxn_field ApplicationArgs
    bytec 5 // 0x00027331
    itxn_field ApplicationArgs
    bytec 6 // 0x00026231
    itxn_field ApplicationArgs
    bytec_2 // 0x0000000000000001
    itxn_field ApplicationArgs
    bytec_1 // 0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002
    itxn_field ApplicationArgs
    intc_1 // appl
    itxn_field TypeEnum
    intc_0 // 0
    itxn_field Fee
    itxn_submit
    itxn LastLog
    dup
    extract 4 0
    dig 1
    extract 0 4
    bytec_0 // 0x151f7c75
    ==
    assert // application log value is not the result of an ABI return
    dup
    intc_0 // 0
    extract_uint16
    dig 1
    intc_2 // 2
    extract_uint16
    dig 2
    uncover 2
    dig 2
    substring3
    extract 2 0
    dig 2
    len
    swap
    cover 3
    substring3
    extract 2 0
    dig 2
    pushint 8 // 8
    extract_uint64
    uncover 3
    extract 16 64
    dig 3
    bytec 10 // "echo: s1"
    ==
    assert
    dig 2
    bytec 29 // 0x6563686f3a206231
    ==
    assert
    dig 1
    intc_2 // 2
    ==
    assert
    dup
    bytec 17 // 0x03
    b==
    assert
    itxn_begin
    pushint 1 // 1
    itob
    dig 5
    itxn_field ApplicationID
    bytec 4 // method "echo_native_tuple(string,byte[],uint64,uint512)(string,byte[],uint64,uint512)"
    itxn_field ApplicationArgs
    bytec 5 // 0x00027331
    itxn_field ApplicationArgs
    bytec 6 // 0x00026231
    itxn_field ApplicationArgs
    itxn_field ApplicationArgs
    bytec_1 // 0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002
    itxn_field ApplicationArgs
    intc_1 // appl
    itxn_field TypeEnum
    intc_0 // 0
    itxn_field Fee
    itxn_submit
    itxn LastLog
    dup
    extract 4 0
    dig 1
    extract 0 4
    bytec_0 // 0x151f7c75
    ==
    assert // application log value is not the result of an ABI return
    dup
    intc_0 // 0
    extract_uint16
    dig 1
    intc_2 // 2
    extract_uint16
    dig 2
    uncover 2
    dig 2
    substring3
    extract 2 0
    dig 2
    len
    swap
    cover 3
    substring3
    extract 2 0
    dig 2
    pushint 8 // 8
    extract_uint64
    uncover 3
    extract 16 64
    uncover 3
    dig 7
    ==
    uncover 3
    dig 6
    ==
    &&
    uncover 2
    dig 4
    ==
    &&
    swap
    dig 2
    b==
    &&
    assert // expected native arguments to give the same result
    itxn_begin
    dig 4
    itxn_field ApplicationID
    bytec 4 // method "echo_native_tuple(string,byte[],uint64,uint512)(string,byte[],uint64,uint512)"
    itxn_field ApplicationArgs
    bytec 5 // 0x00027331
    itxn_field ApplicationArgs
    bytec 6 // 0x00026231
    itxn_field ApplicationArgs
    bytec_2 // 0x0000000000000001
    itxn_field ApplicationArgs
    bytec_1 // 0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002
    itxn_field ApplicationArgs
    intc_1 // appl
    itxn_field TypeEnum
    intc_0 // 0
    itxn_field Fee
    itxn_submit
    itxn LastLog
    dup
    extract 4 0
    dig 1
    extract 0 4
    bytec_0 // 0x151f7c75
    ==
    assert // application log value is not the result of an ABI return
    dup
    intc_0 // 0
    extract_uint16
    dig 1
    intc_2 // 2
    extract_uint16
    dig 2
    uncover 2
    dig 2
    substring3
    extract 2 0
    dig 2
    len
    swap
    cover 3
    substring3
    extract 2 0
    dig 2
    pushint 8 // 8
    extract_uint64
    uncover 3
    extract 16 64
    uncover 3
    dig 7
    ==
    uncover 3
    dig 6
    ==
    &&
    uncover 2
    dig 4
    ==
    &&
    swap
    dig 2
    b==
    &&
    assert // expected arc4 arguments to give the same result
    itxn_begin
    uncover 4
    itxn_field ApplicationID
    bytec 4 // method "echo_native_tuple(string,byte[],uint64,uint512)(string,byte[],uint64,uint512)"
    itxn_field ApplicationArgs
    bytec 5 // 0x00027331
    itxn_field ApplicationArgs
    bytec 6 // 0x00026231
    itxn_field ApplicationArgs
    bytec_2 // 0x0000000000000001
    itxn_field ApplicationArgs
    bytec_1 // 0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002
    itxn_field ApplicationArgs
    intc_1 // appl
    itxn_field TypeEnum
    intc_0 // 0
    itxn_field Fee
    itxn_submit
    itxn LastLog
    dup
    extract 4 0
    dig 1
    extract 0 4
    bytec_0 // 0x151f7c75
    ==
    assert // application log value is not the result of an ABI return
    dup
    intc_0 // 0
    extract_uint16
    dig 1
    intc_2 // 2
    extract_uint16
    dig 2
    uncover 2
    dig 2
    substring3
    extract 2 0
    dig 2
    len
    swap
    cover 3
    substring3
    extract 2 0
    dig 2
    pushint 8 // 8
    extract_uint64
    uncover 3
    extract 16 64
    uncover 3
    uncover 7
    ==
    uncover 3
    uncover 6
    ==
    &&
    uncover 2
    uncover 4
    ==
    &&
    swap
    uncover 2
    b==
    &&
    return

test_native_tuple_route@15:
    txna ApplicationArgs 1
    btoi
    itxn_begin
    dup
    itxn_field ApplicationID
    bytec 4 // method "echo_native_tuple(string,byte[],uint64,uint512)(string,byte[],uint64,uint512)"
    itxn_field ApplicationArgs
    bytec 5 // 0x00027331
    itxn_field ApplicationArgs
    bytec 6 // 0x00026231
    itxn_field ApplicationArgs
    bytec_2 // 0x0000000000000001
    itxn_field ApplicationArgs
    bytec_1 // 0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002
    itxn_field ApplicationArgs
    intc_1 // appl
    itxn_field TypeEnum
    intc_0 // 0
    itxn_field Fee
    itxn_submit
    itxn LastLog
    dup
    extract 4 0
    dig 1
    extract 0 4
    bytec_0 // 0x151f7c75
    ==
    assert // application log value is not the result of an ABI return
    dup
    intc_0 // 0
    extract_uint16
    dig 1
    intc_2 // 2
    extract_uint16
    dig 2
    uncover 2
    dig 2
    substring3
    dig 2
    len
    dig 3
    uncover 3
    uncover 2
    substring3
    dig 3
    extract 16 64
    uncover 2
    extract 2 0
    dup
    bytec 10 // "echo: s1"
    ==
    assert
    uncover 2
    extract 2 0
    dup
    bytec 29 // 0x6563686f3a206231
    ==
    assert
    uncover 4
    pushint 8 // 8
    extract_uint64
    dup
    intc_2 // 2
    ==
    assert
    dig 3
    bytec 17 // 0x03
    b==
    assert
    itxn_begin
    pushint 1 // 1
    itob
    dig 6
    itxn_field ApplicationID
    bytec 4 // method "echo_native_tuple(string,byte[],uint64,uint512)(string,byte[],uint64,uint512)"
    itxn_field ApplicationArgs
    bytec 5 // 0x00027331
    itxn_field ApplicationArgs
    bytec 6 // 0x00026231
    itxn_field ApplicationArgs
    itxn_field ApplicationArgs
    bytec_1 // 0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002
    itxn_field ApplicationArgs
    intc_1 // appl
    itxn_field TypeEnum
    intc_0 // 0
    itxn_field Fee
    itxn_submit
    itxn LastLog
    dup
    extract 4 0
    swap
    extract 0 4
    bytec_0 // 0x151f7c75
    ==
    assert // application log value is not the result of an ABI return
    dig 5
    ==
    assert
    itxn_begin
    dig 5
    itxn_field ApplicationID
    bytec 4 // method "echo_native_tuple(string,byte[],uint64,uint512)(string,byte[],uint64,uint512)"
    itxn_field ApplicationArgs
    bytec 5 // 0x00027331
    itxn_field ApplicationArgs
    bytec 6 // 0x00026231
    itxn_field ApplicationArgs
    bytec_2 // 0x0000000000000001
    itxn_field ApplicationArgs
    bytec_1 // 0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002
    itxn_field ApplicationArgs
    intc_1 // appl
    itxn_field TypeEnum
    intc_0 // 0
    itxn_field Fee
    itxn_submit
    itxn LastLog
    dup
    extract 4 0
    swap
    extract 0 4
    bytec_0 // 0x151f7c75
    ==
    assert // application log value is not the result of an ABI return
    uncover 5
    ==
    assert
    itxn_begin
    uncover 4
    itxn_field ApplicationID
    bytec 4 // method "echo_native_tuple(string,byte[],uint64,uint512)(string,byte[],uint64,uint512)"
    itxn_field ApplicationArgs
    bytec 5 // 0x00027331
    itxn_field ApplicationArgs
    bytec 6 // 0x00026231
    itxn_field ApplicationArgs
    bytec_2 // 0x0000000000000001
    itxn_field ApplicationArgs
    bytec_1 // 0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002
    itxn_field ApplicationArgs
    intc_1 // appl
    itxn_field TypeEnum
    intc_0 // 0
    itxn_field Fee
    itxn_submit
    itxn LastLog
    dup
    extract 4 0
    dig 1
    extract 0 4
    bytec_0 // 0x151f7c75
    ==
    assert // application log value is not the result of an ABI return
    dup
    intc_0 // 0
    extract_uint16
    dig 1
    intc_2 // 2
    extract_uint16
    dig 2
    uncover 2
    dig 2
    substring3
    extract 2 0
    dig 2
    len
    swap
    cover 3
    substring3
    extract 2 0
    dig 2
    pushint 8 // 8
    extract_uint64
    uncover 3
    extract 16 64
    uncover 6
    uncover 4
    ==
    assert
    uncover 4
    uncover 3
    ==
    assert
    cover 2
    ==
    assert
    b==
    return

test_native_biguint_route@14:
    txna ApplicationArgs 1
    btoi
    itxn_begin
    dup
    itxn_field ApplicationID
    bytec 18 // method "echo_native_biguint(uint512)uint512"
    itxn_field ApplicationArgs
    bytec_1 // 0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002
    itxn_field ApplicationArgs
    intc_1 // appl
    itxn_field TypeEnum
    intc_0 // 0
    itxn_field Fee
    itxn_submit
    itxn LastLog
    dup
    extract 4 0
    swap
    extract 0 4
    bytec_0 // 0x151f7c75
    ==
    assert // application log value is not the result of an ABI return
    dup
    bytec 17 // 0x03
    b==
    assert
    itxn_begin
    dig 1
    itxn_field ApplicationID
    bytec 18 // method "echo_native_biguint(uint512)uint512"
    itxn_field ApplicationArgs
    bytec_1 // 0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002
    itxn_field ApplicationArgs
    intc_1 // appl
    itxn_field TypeEnum
    intc_0 // 0
    itxn_field Fee
    itxn_submit
    itxn LastLog
    dup
    extract 4 0
    swap
    extract 0 4
    bytec_0 // 0x151f7c75
    ==
    assert // application log value is not the result of an ABI return
    dig 1
    b==
    assert
    itxn_begin
    swap
    itxn_field ApplicationID
    bytec 18 // method "echo_native_biguint(uint512)uint512"
    itxn_field ApplicationArgs
    bytec_1 // 0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002
    itxn_field ApplicationArgs
    intc_1 // appl
    itxn_field TypeEnum
    intc_0 // 0
    itxn_field Fee
    itxn_submit
    itxn LastLog
    dup
    extract 4 0
    swap
    extract 0 4
    bytec_0 // 0x151f7c75
    ==
    assert // application log value is not the result of an ABI return
    b==
    return

test_native_uint64_route@13:
    txna ApplicationArgs 1
    btoi
    itxn_begin
    dup
    itxn_field ApplicationID
    bytec 19 // method "echo_native_uint64(uint64)uint64"
    itxn_field ApplicationArgs
    bytec_2 // 0x0000000000000001
    itxn_field ApplicationArgs
    intc_1 // appl
    itxn_field TypeEnum
    intc_0 // 0
    itxn_field Fee
    itxn_submit
    itxn LastLog
    dup
    extract 4 0
    swap
    extract 0 4
    bytec_0 // 0x151f7c75
    ==
    assert // application log value is not the result of an ABI return
    btoi
    dup
    intc_2 // 2
    ==
    assert
    itxn_begin
    pushint 1 // 1
    itob
    dig 2
    itxn_field ApplicationID
    bytec 19 // method "echo_native_uint64(uint64)uint64"
    itxn_field ApplicationArgs
    itxn_field ApplicationArgs
    intc_1 // appl
    itxn_field TypeEnum
    intc_0 // 0
    itxn_field Fee
    itxn_submit
    itxn LastLog
    dup
    extract 4 0
    swap
    extract 0 4
    bytec_0 // 0x151f7c75
    ==
    assert // application log value is not the result of an ABI return
    btoi
    dig 1
    ==
    assert
    itxn_begin
    swap
    itxn_field ApplicationID
    bytec 19 // method "echo_native_uint64(uint64)uint64"
    itxn_field ApplicationArgs
    bytec_2 // 0x0000000000000001
    itxn_field ApplicationArgs
    intc_1 // appl
    itxn_field TypeEnum
    intc_0 // 0
    itxn_field Fee
    itxn_submit
    itxn LastLog
    dup
    extract 4 0
    swap
    extract 0 4
    bytec_0 // 0x151f7c75
    ==
    assert // application log value is not the result of an ABI return
    btoi
    ==
    return

test_native_bytes_route@12:
    txna ApplicationArgs 1
    btoi
    itxn_begin
    dup
    itxn_field ApplicationID
    bytec 20 // method "echo_native_bytes(byte[])byte[]"
    itxn_field ApplicationArgs
    bytec 21 // 0x000162
    itxn_field ApplicationArgs
    intc_1 // appl
    itxn_field TypeEnum
    intc_0 // 0
    itxn_field Fee
    itxn_submit
    itxn LastLog
    dup
    extract 0 4
    bytec_0 // 0x151f7c75
    ==
    assert // application log value is not the result of an ABI return
    extract 6 0
    dup
    pushbytes 0x6563686f3a2062
    ==
    assert
    itxn_begin
    dig 1
    itxn_field ApplicationID
    bytec 20 // method "echo_native_bytes(byte[])byte[]"
    itxn_field ApplicationArgs
    bytec 21 // 0x000162
    itxn_field ApplicationArgs
    intc_1 // appl
    itxn_field TypeEnum
    intc_0 // 0
    itxn_field Fee
    itxn_submit
    itxn LastLog
    dup
    extract 0 4
    bytec_0 // 0x151f7c75
    ==
    assert // application log value is not the result of an ABI return
    extract 6 0
    dig 1
    ==
    assert
    itxn_begin
    swap
    itxn_field ApplicationID
    bytec 20 // method "echo_native_bytes(byte[])byte[]"
    itxn_field ApplicationArgs
    bytec 21 // 0x000162
    itxn_field ApplicationArgs
    intc_1 // appl
    itxn_field TypeEnum
    intc_0 // 0
    itxn_field Fee
    itxn_submit
    itxn LastLog
    dup
    extract 0 4
    bytec_0 // 0x151f7c75
    ==
    assert // application log value is not the result of an ABI return
    extract 6 0
    ==
    return

test_native_string_route@11:
    txna ApplicationArgs 1
    btoi
    itxn_begin
    dup
    itxn_field ApplicationID
    bytec 22 // method "echo_native_string(string)string"
    itxn_field ApplicationArgs
    bytec 23 // 0x000173
    itxn_field ApplicationArgs
    intc_1 // appl
    itxn_field TypeEnum
    intc_0 // 0
    itxn_field Fee
    itxn_submit
    itxn LastLog
    dup
    extract 0 4
    bytec_0 // 0x151f7c75
    ==
    assert // application log value is not the result of an ABI return
    extract 6 0
    dup
    pushbytes "echo: s"
    ==
    assert
    itxn_begin
    dig 1
    itxn_field ApplicationID
    bytec 22 // method "echo_native_string(string)string"
    itxn_field ApplicationArgs
    bytec 23 // 0x000173
    itxn_field ApplicationArgs
    intc_1 // appl
    itxn_field TypeEnum
    intc_0 // 0
    itxn_field Fee
    itxn_submit
    itxn LastLog
    dup
    extract 0 4
    bytec_0 // 0x151f7c75
    ==
    assert // application log value is not the result of an ABI return
    extract 6 0
    dig 1
    ==
    assert
    itxn_begin
    swap
    itxn_field ApplicationID
    bytec 22 // method "echo_native_string(string)string"
    itxn_field ApplicationArgs
    bytec 23 // 0x000173
    itxn_field ApplicationArgs
    intc_1 // appl
    itxn_field TypeEnum
    intc_0 // 0
    itxn_field Fee
    itxn_submit
    itxn LastLog
    dup
    extract 0 4
    bytec_0 // 0x151f7c75
    ==
    assert // application log value is not the result of an ABI return
    extract 6 0
    ==
    return

test_account_to_address_route@10:
    txna ApplicationArgs 1
    btoi
    itxn_begin
    global CurrentApplicationAddress
    swap
    itxn_field ApplicationID
    pushbytes 0x0437b17e // method "log(address)void"
    itxn_field ApplicationArgs
    itxn_field ApplicationArgs
    intc_1 // appl
    itxn_field TypeEnum
    intc_0 // 0
    itxn_field Fee
    itxn_submit
    itxn LastLog
    global CurrentApplicationAddress
    ==
    return

test_ref_types_route@9:
    txna ApplicationArgs 1
    dup
    btoi
    txna ApplicationArgs 2
    dup
    btoi
    itxn_begin
    global CurrentApplicationAddress
    dig 3
    itxn_field ApplicationID
    pushbytes 0x46b50faf // method "log(uint64,address,uint64)void"
    itxn_field ApplicationArgs
    uncover 2
    itxn_field ApplicationArgs
    itxn_field ApplicationArgs
    uncover 2
    itxn_field ApplicationArgs
    intc_1 // appl
    itxn_field TypeEnum
    intc_0 // 0
    itxn_field Fee
    itxn_submit
    itxn LastLog
    swap
    asset_params_get AssetName
    assert // asset exists
    global CurrentApplicationAddress
    concat
    uncover 2
    app_params_get AppAddress
    assert // application exists
    concat
    ==
    return

test_void_route@8:
    txna ApplicationArgs 1
    btoi
    itxn_begin
    dup
    itxn_field ApplicationID
    bytec 9 // method "log(string)void"
    itxn_field ApplicationArgs
    pushbytes 0x0006576f726c6431
    itxn_field ApplicationArgs
    intc_1 // appl
    itxn_field TypeEnum
    intc_0 // 0
    itxn_field Fee
    itxn_submit
    itxn LastLog
    pushbytes 0x576f726c6431
    ==
    assert
    itxn_begin
    dup
    itxn_field ApplicationID
    bytec 9 // method "log(string)void"
    itxn_field ApplicationArgs
    pushbytes 0x0006576f726c6432
    itxn_field ApplicationArgs
    intc_1 // appl
    itxn_field TypeEnum
    intc_0 // 0
    itxn_field Fee
    itxn_submit
    itxn LastLog
    pushbytes 0x576f726c6432
    ==
    assert
    itxn_begin
    dup
    itxn_field ApplicationID
    bytec 9 // method "log(string)void"
    itxn_field ApplicationArgs
    pushbytes 0x0006576f726c6433
    itxn_field ApplicationArgs
    intc_1 // appl
    itxn_field TypeEnum
    intc_0 // 0
    itxn_field Fee
    itxn_submit
    itxn LastLog
    pushbytes 0x576f726c6433
    ==
    assert
    itxn_begin
    itxn_field ApplicationID
    bytec 9 // method "log(string)void"
    itxn_field ApplicationArgs
    pushbytes 0x0006576f726c6434
    itxn_field ApplicationArgs
    intc_1 // appl
    itxn_field TypeEnum
    intc_0 // 0
    itxn_field Fee
    itxn_submit
    itxn LastLog
    pushbytes 0x576f726c6434
    ==
    return

test_15plus_args_route@7:
    txna ApplicationArgs 1
    btoi
    itxn_begin
    itxn_field ApplicationID
    pushbytes 0xba0b4381 // method "return_args_after_14th(uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint8,uint8,uint8,uint8,(uint8,uint8,uint8,uint8),uint8)byte[]"
    itxn_field ApplicationArgs
    bytec_2 // 0x0000000000000001
    itxn_field ApplicationArgs
    bytec 30 // 0x0000000000000002
    itxn_field ApplicationArgs
    bytec 16 // 0x0000000000000003
    itxn_field ApplicationArgs
    pushbytes 0x0000000000000004
    itxn_field ApplicationArgs
    pushbytes 0x0000000000000005
    itxn_field ApplicationArgs
    pushbytes 0x0000000000000006
    itxn_field ApplicationArgs
    pushbytes 0x0000000000000007
    itxn_field ApplicationArgs
    pushbytes 0x0000000000000008
    itxn_field ApplicationArgs
    pushbytes 0x0000000000000009
    itxn_field ApplicationArgs
    pushbytes 0x000000000000000a
    itxn_field ApplicationArgs
    pushbytes 0x000000000000000b
    itxn_field ApplicationArgs
    pushbytes 0x000000000000000c
    itxn_field ApplicationArgs
    pushbytes 0x000000000000000d
    itxn_field ApplicationArgs
    pushbytes 0x000000000000000e
    itxn_field ApplicationArgs
    bytec 31 // 0x0f101112deadbeef14
    itxn_field ApplicationArgs
    intc_1 // appl
    itxn_field TypeEnum
    intc_0 // 0
    itxn_field Fee
    itxn_submit
    itxn LastLog
    dup
    extract 0 4
    bytec_0 // 0x151f7c75
    ==
    assert // application log value is not the result of an ABI return
    extract 6 0
    bytec 31 // 0x0f101112deadbeef14
    ==
    return

test_arg_conversion_route@6:
    txna ApplicationArgs 1
    btoi
    itxn_begin
    dup
    itxn_field ApplicationID
    bytec 9 // method "log(string)void"
    itxn_field ApplicationArgs
    pushbytes 0x000a636f6e76657274656431
    itxn_field ApplicationArgs
    intc_1 // appl
    itxn_field TypeEnum
    intc_0 // 0
    itxn_field Fee
    itxn_submit
    itxn LastLog
    pushbytes 0x636f6e76657274656431
    ==
    assert
    itxn_begin
    dup
    itxn_field ApplicationID
    pushbytes 0x3c1058d9 // method "log(uint64)void"
    itxn_field ApplicationArgs
    bytec 30 // 0x0000000000000002
    itxn_field ApplicationArgs
    intc_1 // appl
    itxn_field TypeEnum
    intc_0 // 0
    itxn_field Fee
    itxn_submit
    itxn LastLog
    intc_2 // 2
    itob
    ==
    assert
    itxn_begin
    dup
    itxn_field ApplicationID
    pushbytes 0x6af45930 // method "log(uint512)void"
    itxn_field ApplicationArgs
    bytec 32 // 0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000003
    itxn_field ApplicationArgs
    intc_1 // appl
    itxn_field TypeEnum
    intc_0 // 0
    itxn_field Fee
    itxn_submit
    itxn LastLog
    bytec 32 // 0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000003
    ==
    assert
    itxn_begin
    dup
    itxn_field ApplicationID
    pushbytes 0xb500e111 // method "log(byte[])void"
    itxn_field ApplicationArgs
    pushbytes 0x000134
    itxn_field ApplicationArgs
    intc_1 // appl
    itxn_field TypeEnum
    intc_0 // 0
    itxn_field Fee
    itxn_submit
    itxn LastLog
    pushbytes 0x34
    ==
    assert
    itxn_begin
    itxn_field ApplicationID
    pushbytes 0x6eed7ec3 // method "log(bool)void"
    itxn_field ApplicationArgs
    pushbytes 0x80
    itxn_field ApplicationArgs
    intc_1 // appl
    itxn_field TypeEnum
    intc_0 // 0
    itxn_field Fee
    itxn_submit
    itxn LastLog
    pushbytes 0x54727565
    ==
    return

test_method_overload_route@5:
    txna ApplicationArgs 1
    btoi
    itxn_begin
    dup
    itxn_field ApplicationID
    bytec_3 // method "echo(string)string"
    itxn_field ApplicationArgs
    pushbytes 0x000e7479706564202b2069676e6f7265
    itxn_field ApplicationArgs
    intc_1 // appl
    itxn_field TypeEnum
    intc_0 // 0
    itxn_field Fee
    itxn_submit
    itxn LastLog
    extract 0 4
    bytec_0 // 0x151f7c75
    ==
    assert // application log value is not the result of an ABI return
    itxn LastLog
    dup
    extract 4 0
    swap
    extract 0 4
    bytec_0 // 0x151f7c75
    ==
    assert // application log value is not the result of an ABI return
    pushbytes 0x00146563686f3a207479706564202b2069676e6f7265
    ==
    assert
    itxn_begin
    dup
    itxn_field ApplicationID
    bytec_3 // method "echo(string)string"
    itxn_field ApplicationArgs
    pushbytes 0x0010756e7479706564202b2069676e6f7265
    itxn_field ApplicationArgs
    intc_1 // appl
    itxn_field TypeEnum
    intc_0 // 0
    itxn_field Fee
    itxn_submit
    itxn LastLog
    dup
    extract 4 0
    swap
    extract 0 4
    bytec_0 // 0x151f7c75
    ==
    assert // application log value is not the result of an ABI return
    pushbytes 0x00166563686f3a20756e7479706564202b2069676e6f7265
    ==
    assert
    itxn_begin
    dup
    itxn_field ApplicationID
    bytec_3 // method "echo(string)string"
    itxn_field ApplicationArgs
    pushbytes 0x00057475706c65
    itxn_field ApplicationArgs
    intc_1 // appl
    itxn_field TypeEnum
    intc_0 // 0
    itxn_field Fee
    itxn_submit
    itxn LastLog
    dup
    extract 4 0
    swap
    extract 0 4
    bytec_0 // 0x151f7c75
    ==
    assert // application log value is not the result of an ABI return
    itxn LastLog
    swap
    bytec 33 // 0x000b6563686f3a207475706c65
    ==
    assert
    dup
    extract 4 0
    swap
    extract 0 4
    bytec_0 // 0x151f7c75
    ==
    assert // application log value is not the result of an ABI return
    bytec 33 // 0x000b6563686f3a207475706c65
    ==
    assert
    itxn_begin
    itxn_field ApplicationID
    bytec_3 // method "echo(string)string"
    itxn_field ApplicationArgs
    pushbytes 0x0007756e7479706564
    itxn_field ApplicationArgs
    intc_1 // appl
    itxn_field TypeEnum
    intc_0 // 0
    itxn_field Fee
    itxn_submit
    itxn LastLog
    dup
    extract 4 0
    swap
    extract 0 4
    bytec_0 // 0x151f7c75
    ==
    assert // application log value is not the result of an ABI return
    pushbytes 0x000d6563686f3a20756e7479706564
    ==
    return

test_method_selector_kinds_route@4:
    txna ApplicationArgs 1
    btoi
    itxn_begin
    dup
    itxn_field ApplicationID
    bytec_3 // method "echo(string)string"
    itxn_field ApplicationArgs
    pushbytes 0x00057465737431
    itxn_field ApplicationArgs
    intc_1 // appl
    itxn_field TypeEnum
    intc_0 // 0
    itxn_field Fee
    itxn_submit
    itxn LastLog
    dup
    extract 4 0
    swap
    extract 0 4
    bytec_0 // 0x151f7c75
    ==
    assert // application log value is not the result of an ABI return
    pushbytes 0x000b6563686f3a207465737431
    ==
    assert
    itxn_begin
    dup
    itxn_field ApplicationID
    bytec_3 // method "echo(string)string"
    itxn_field ApplicationArgs
    pushbytes 0x00057465737432
    itxn_field ApplicationArgs
    intc_1 // appl
    itxn_field TypeEnum
    intc_0 // 0
    itxn_field Fee
    itxn_submit
    itxn LastLog
    dup
    extract 4 0
    swap
    extract 0 4
    bytec_0 // 0x151f7c75
    ==
    assert // application log value is not the result of an ABI return
    pushbytes 0x000b6563686f3a207465737432
    ==
    assert
    itxn_begin
    dup
    itxn_field ApplicationID
    bytec_3 // method "echo(string)string"
    itxn_field ApplicationArgs
    pushbytes 0x00057465737433
    itxn_field ApplicationArgs
    intc_1 // appl
    itxn_field TypeEnum
    intc_0 // 0
    itxn_field Fee
    itxn_submit
    itxn LastLog
    dup
    extract 4 0
    swap
    extract 0 4
    bytec_0 // 0x151f7c75
    ==
    assert // application log value is not the result of an ABI return
    pushbytes 0x000b6563686f3a207465737433
    ==
    assert
    itxn_begin
    dup
    itxn_field ApplicationID
    bytec_3 // method "echo(string)string"
    itxn_field ApplicationArgs
    pushbytes 0x00057465737434
    itxn_field ApplicationArgs
    intc_1 // appl
    itxn_field TypeEnum
    intc_0 // 0
    itxn_field Fee
    itxn_submit
    itxn LastLog
    dup
    extract 4 0
    swap
    extract 0 4
    bytec_0 // 0x151f7c75
    ==
    assert // application log value is not the result of an ABI return
    pushbytes 0x000b6563686f3a207465737434
    ==
    assert
    itxn_begin
    itxn_field ApplicationID
    bytec_3 // method "echo(string)string"
    itxn_field ApplicationArgs
    pushbytes 0x00057465737435
    itxn_field ApplicationArgs
    intc_1 // appl
    itxn_field TypeEnum
    intc_0 // 0
    itxn_field Fee
    itxn_submit
    itxn LastLog
    dup
    extract 4 0
    swap
    extract 0 4
    bytec_0 // 0x151f7c75
    ==
    assert // application log value is not the result of an ABI return
    pushbytes 0x000b6563686f3a207465737435
    ==
    return

test_is_a_b_route@3:
    txna ApplicationArgs 1
    txna ApplicationArgs 2
    txna ApplicationArgs 3
    btoi
    itxn_begin
    itxn_field ApplicationID
    pushbytes 0xc77212bc // method "is_a_b(byte[],byte[])void"
    itxn_field ApplicationArgs
    swap
    itxn_field ApplicationArgs
    itxn_field ApplicationArgs
    intc_1 // appl
    itxn_field TypeEnum
    intc_0 // 0
    itxn_field Fee
    itxn_submit
    pushint 1 // 1
    return
