{
  "version": 3,
  "sources": [
    "../tuple_storage.py"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgBgB;AAAA;AAAA;;;AAAkB;AAAlB;AADR;AAAA;AAAA;;;AAAA;AAAA;;AAAA;AAEQ;AAFR;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAIwC;AAAA;AAAA;;;AAAkB;AAAlB;AAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAlB;AAAA;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AACiC;AAAA;AAAA;;;AAAkB;AAAlB;AAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAX;AAAA;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;;;;AAIuC;AAAA;AAAA;;;AAAkB;AAAlB;AAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAjB;AAAA;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAC6C;AAAA;AAAA;;;AAAkB;AAAlB;AAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAd;;AAAA;;AAAT;AAAA;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAER;;;;;;AAEQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAER;;;;;;AAEQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAER;;;;;;AAEQ;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAER;;;;;;AAEiB;;AAAT;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;;;;;;;;;;;AA/BR;;AAAA;AAAA;AAAA;;;AAAA;;;AAAA;;;AAAA;;;;;;AAAA;;;;;;AAAA;;;;;;AAAA;;;;;;AAAA;;;;;;AAAA;;AAAA;;;;;;;;;;;;AAAA;;;;;;;;;AAAA;;;;;;;;;;;AA6BK;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AA7BL;;;AA6BK;;;AAAA;;;;;;AAJA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAzBL;;;AAyBK;;;AAAA;;;;;;AAJA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AArBL;;;AAqBK;;;AAAA;;;;;;AAJA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAjBL;;;AAiBK;;;AAAA;;;;;;AALA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;AAAA;;;;;;AAZL;;AAAA;AAAA;;AAAA;;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;",
  "op_pc_offset": 0,
  "pc_events": {
    "1": {
      "subroutine": "test_cases.tuple_support.tuple_storage.NestedTuplesStorage.__algopy_entrypoint_with_init",
      "params": {},
      "block": "main",
      "stack_in": [],
      "op": "intcblock 0 1 10 2"
    },
    "7": {
      "op": "bytecblock 0x \"tup\" 0x0000000000000000 \"box\" \"glob\" \"loc\""
    },
    "36": {
      "op": "b main_block@0"
    },
    "39": {
      "block": "main_block@0",
      "stack_in": [],
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "41": {
      "op": "bnz main_after_if_else@2",
      "stack_out": []
    },
    "44": {
      "op": "b main_call___init__@1"
    },
    "47": {
      "block": "main_call___init__@1",
      "stack_in": [],
      "callsub": "test_cases.tuple_support.tuple_storage.NestedTuplesStorage.__init__",
      "op": "callsub __init__"
    },
    "50": {
      "op": "b main_after_if_else@2"
    },
    "53": {
      "block": "main_after_if_else@2",
      "stack_in": [],
      "callsub": "algopy.arc4.ARC4Contract.approval_program",
      "op": "callsub approval_program",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "56": {
      "op": "return",
      "stack_out": []
    },
    "57": {
      "subroutine": "test_cases.tuple_support.tuple_storage.NestedTuplesStorage.__init__",
      "params": {},
      "block": "__init__",
      "stack_in": [],
      "op": "b __init___block@0"
    },
    "60": {
      "block": "__init___block@0",
      "stack_in": [],
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "61": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%0#0"
      ],
      "stack_out": [
        "aggregate%as_bytes%0#0"
      ]
    },
    "62": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%len_u16%0#0"
      ],
      "stack_out": [
        "aggregate%len_u16%0#0"
      ]
    },
    "65": {
      "op": "bytec_2 // 0x0000000000000000",
      "defined_out": [
        "0x0000000000000000",
        "aggregate%len_u16%0#0"
      ],
      "stack_out": [
        "aggregate%len_u16%0#0",
        "0x0000000000000000"
      ]
    },
    "66": {
      "op": "concat",
      "defined_out": [
        "encoded_array%0#0"
      ],
      "stack_out": [
        "encoded_array%0#0"
      ]
    },
    "67": {
      "op": "intc_2 // 10",
      "defined_out": [
        "10",
        "encoded_array%0#0"
      ],
      "stack_out": [
        "encoded_array%0#0",
        "10"
      ]
    },
    "68": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%1#0",
        "encoded_array%0#0"
      ],
      "stack_out": [
        "encoded_array%0#0",
        "aggregate%as_bytes%1#0"
      ]
    },
    "69": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%offset_as_uint16%0#0",
        "encoded_array%0#0"
      ],
      "stack_out": [
        "encoded_array%0#0",
        "aggregate%offset_as_uint16%0#0"
      ]
    },
    "72": {
      "op": "bytec_0 // 0x",
      "defined_out": [
        "0x",
        "aggregate%offset_as_uint16%0#0",
        "encoded_array%0#0"
      ],
      "stack_out": [
        "encoded_array%0#0",
        "aggregate%offset_as_uint16%0#0",
        "0x"
      ]
    },
    "73": {
      "op": "uncover 1",
      "stack_out": [
        "encoded_array%0#0",
        "0x",
        "aggregate%offset_as_uint16%0#0"
      ]
    },
    "75": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%1#0",
        "encoded_array%0#0"
      ],
      "stack_out": [
        "encoded_array%0#0",
        "aggregate%head%1#0"
      ]
    },
    "76": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "aggregate%head%1#0",
        "encoded_array%0#0"
      ],
      "stack_out": [
        "encoded_array%0#0",
        "aggregate%head%1#0",
        "0"
      ]
    },
    "77": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(uint64)%0#0",
        "aggregate%head%1#0",
        "encoded_array%0#0"
      ],
      "stack_out": [
        "encoded_array%0#0",
        "aggregate%head%1#0",
        "aggregate%as_Encoded(uint64)%0#0"
      ]
    },
    "78": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%2#0",
        "encoded_array%0#0"
      ],
      "stack_out": [
        "encoded_array%0#0",
        "aggregate%head%2#0"
      ]
    },
    "79": {
      "op": "uncover 1",
      "stack_out": [
        "aggregate%head%2#0",
        "encoded_array%0#0"
      ]
    },
    "81": {
      "op": "concat",
      "defined_out": [
        "encoded_for_storage%0#0"
      ],
      "stack_out": [
        "encoded_for_storage%0#0"
      ]
    },
    "82": {
      "op": "bytec_1 // \"tup\"",
      "defined_out": [
        "\"tup\"",
        "encoded_for_storage%0#0"
      ],
      "stack_out": [
        "encoded_for_storage%0#0",
        "\"tup\""
      ]
    },
    "83": {
      "op": "uncover 1",
      "stack_out": [
        "\"tup\"",
        "encoded_for_storage%0#0"
      ]
    },
    "85": {
      "op": "app_global_put",
      "stack_out": []
    },
    "86": {
      "op": "intc_1 // 1",
      "stack_out": [
        "1"
      ]
    },
    "87": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%2#0"
      ],
      "stack_out": [
        "aggregate%as_bytes%2#0"
      ]
    },
    "88": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%len_u16%1#0"
      ],
      "stack_out": [
        "aggregate%len_u16%1#0"
      ]
    },
    "91": {
      "op": "bytec_2 // 0x0000000000000000",
      "stack_out": [
        "aggregate%len_u16%1#0",
        "0x0000000000000000"
      ]
    },
    "92": {
      "op": "concat",
      "defined_out": [
        "encoded_array%1#0"
      ],
      "stack_out": [
        "encoded_array%1#0"
      ]
    },
    "93": {
      "op": "intc_0 // 0",
      "stack_out": [
        "encoded_array%1#0",
        "0"
      ]
    },
    "94": {
      "op": "bytec_1 // \"tup\"",
      "stack_out": [
        "encoded_array%1#0",
        "0",
        "\"tup\""
      ]
    },
    "95": {
      "op": "app_global_get_ex",
      "defined_out": [
        "encoded_array%1#0",
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "encoded_array%1#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "96": {
      "error": "check self.tup exists",
      "op": "assert // check self.tup exists",
      "stack_out": [
        "encoded_array%1#0",
        "maybe_value%0#0"
      ]
    },
    "97": {
      "op": "intc_3 // 2",
      "defined_out": [
        "2",
        "encoded_array%1#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "encoded_array%1#0",
        "maybe_value%0#0",
        "2"
      ]
    },
    "98": {
      "op": "pushint 8 // 8",
      "defined_out": [
        "2",
        "8",
        "encoded_array%1#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "encoded_array%1#0",
        "maybe_value%0#0",
        "2",
        "8"
      ]
    },
    "100": {
      "op": "extract3",
      "defined_out": [
        "aggregate%extract%0#0",
        "encoded_array%1#0"
      ],
      "stack_out": [
        "encoded_array%1#0",
        "aggregate%extract%0#0"
      ]
    },
    "101": {
      "op": "btoi",
      "defined_out": [
        "awst_tmp%1#0",
        "encoded_array%1#0"
      ],
      "stack_out": [
        "encoded_array%1#0",
        "awst_tmp%1#0"
      ]
    },
    "102": {
      "op": "intc_2 // 10",
      "stack_out": [
        "encoded_array%1#0",
        "awst_tmp%1#0",
        "10"
      ]
    },
    "103": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%3#0",
        "awst_tmp%1#0",
        "encoded_array%1#0"
      ],
      "stack_out": [
        "encoded_array%1#0",
        "awst_tmp%1#0",
        "aggregate%as_bytes%3#0"
      ]
    },
    "104": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%offset_as_uint16%1#0",
        "awst_tmp%1#0",
        "encoded_array%1#0"
      ],
      "stack_out": [
        "encoded_array%1#0",
        "awst_tmp%1#0",
        "aggregate%offset_as_uint16%1#0"
      ]
    },
    "107": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "encoded_array%1#0",
        "awst_tmp%1#0",
        "aggregate%offset_as_uint16%1#0",
        "0x"
      ]
    },
    "108": {
      "op": "uncover 1",
      "stack_out": [
        "encoded_array%1#0",
        "awst_tmp%1#0",
        "0x",
        "aggregate%offset_as_uint16%1#0"
      ]
    },
    "110": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%4#0",
        "awst_tmp%1#0",
        "encoded_array%1#0"
      ],
      "stack_out": [
        "encoded_array%1#0",
        "awst_tmp%1#0",
        "aggregate%head%4#0"
      ]
    },
    "111": {
      "op": "uncover 1",
      "stack_out": [
        "encoded_array%1#0",
        "aggregate%head%4#0",
        "awst_tmp%1#0"
      ]
    },
    "113": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(uint64)%1#0",
        "aggregate%head%4#0",
        "encoded_array%1#0"
      ],
      "stack_out": [
        "encoded_array%1#0",
        "aggregate%head%4#0",
        "aggregate%as_Encoded(uint64)%1#0"
      ]
    },
    "114": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%5#0",
        "encoded_array%1#0"
      ],
      "stack_out": [
        "encoded_array%1#0",
        "aggregate%head%5#0"
      ]
    },
    "115": {
      "op": "uncover 1",
      "stack_out": [
        "aggregate%head%5#0",
        "encoded_array%1#0"
      ]
    },
    "117": {
      "op": "concat",
      "defined_out": [
        "encoded_for_storage%1#0"
      ],
      "stack_out": [
        "encoded_for_storage%1#0"
      ]
    },
    "118": {
      "op": "bytec 4 // \"glob\"",
      "defined_out": [
        "\"glob\"",
        "encoded_for_storage%1#0"
      ],
      "stack_out": [
        "encoded_for_storage%1#0",
        "\"glob\""
      ]
    },
    "120": {
      "op": "uncover 1",
      "stack_out": [
        "\"glob\"",
        "encoded_for_storage%1#0"
      ]
    },
    "122": {
      "op": "app_global_put",
      "stack_out": []
    },
    "123": {
      "op": "intc_1 // 1",
      "stack_out": [
        "1"
      ]
    },
    "124": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%4#0"
      ],
      "stack_out": [
        "aggregate%as_bytes%4#0"
      ]
    },
    "125": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%len_u16%2#0"
      ],
      "stack_out": [
        "aggregate%len_u16%2#0"
      ]
    },
    "128": {
      "op": "bytec_2 // 0x0000000000000000",
      "stack_out": [
        "aggregate%len_u16%2#0",
        "0x0000000000000000"
      ]
    },
    "129": {
      "op": "concat",
      "defined_out": [
        "encoded_array%2#0"
      ],
      "stack_out": [
        "encoded_array%2#0"
      ]
    },
    "130": {
      "op": "intc_0 // 0",
      "stack_out": [
        "encoded_array%2#0",
        "0"
      ]
    },
    "131": {
      "op": "bytec_1 // \"tup\"",
      "stack_out": [
        "encoded_array%2#0",
        "0",
        "\"tup\""
      ]
    },
    "132": {
      "op": "app_global_get_ex",
      "defined_out": [
        "encoded_array%2#0",
        "maybe_exists%1#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "encoded_array%2#0",
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "133": {
      "error": "check self.tup exists",
      "op": "assert // check self.tup exists",
      "stack_out": [
        "encoded_array%2#0",
        "maybe_value%1#0"
      ]
    },
    "134": {
      "op": "intc_3 // 2",
      "stack_out": [
        "encoded_array%2#0",
        "maybe_value%1#0",
        "2"
      ]
    },
    "135": {
      "op": "pushint 8 // 8",
      "stack_out": [
        "encoded_array%2#0",
        "maybe_value%1#0",
        "2",
        "8"
      ]
    },
    "137": {
      "op": "extract3",
      "defined_out": [
        "aggregate%extract%1#0",
        "encoded_array%2#0"
      ],
      "stack_out": [
        "encoded_array%2#0",
        "aggregate%extract%1#0"
      ]
    },
    "138": {
      "op": "btoi",
      "defined_out": [
        "awst_tmp%3#0",
        "encoded_array%2#0"
      ],
      "stack_out": [
        "encoded_array%2#0",
        "awst_tmp%3#0"
      ]
    },
    "139": {
      "op": "intc_2 // 10",
      "stack_out": [
        "encoded_array%2#0",
        "awst_tmp%3#0",
        "10"
      ]
    },
    "140": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%5#0",
        "awst_tmp%3#0",
        "encoded_array%2#0"
      ],
      "stack_out": [
        "encoded_array%2#0",
        "awst_tmp%3#0",
        "aggregate%as_bytes%5#0"
      ]
    },
    "141": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%offset_as_uint16%2#0",
        "awst_tmp%3#0",
        "encoded_array%2#0"
      ],
      "stack_out": [
        "encoded_array%2#0",
        "awst_tmp%3#0",
        "aggregate%offset_as_uint16%2#0"
      ]
    },
    "144": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "encoded_array%2#0",
        "awst_tmp%3#0",
        "aggregate%offset_as_uint16%2#0",
        "0x"
      ]
    },
    "145": {
      "op": "uncover 1",
      "stack_out": [
        "encoded_array%2#0",
        "awst_tmp%3#0",
        "0x",
        "aggregate%offset_as_uint16%2#0"
      ]
    },
    "147": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%7#0",
        "awst_tmp%3#0",
        "encoded_array%2#0"
      ],
      "stack_out": [
        "encoded_array%2#0",
        "awst_tmp%3#0",
        "aggregate%head%7#0"
      ]
    },
    "148": {
      "op": "uncover 1",
      "stack_out": [
        "encoded_array%2#0",
        "aggregate%head%7#0",
        "awst_tmp%3#0"
      ]
    },
    "150": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(uint64)%2#0",
        "aggregate%head%7#0",
        "encoded_array%2#0"
      ],
      "stack_out": [
        "encoded_array%2#0",
        "aggregate%head%7#0",
        "aggregate%as_Encoded(uint64)%2#0"
      ]
    },
    "151": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%8#0",
        "encoded_array%2#0"
      ],
      "stack_out": [
        "encoded_array%2#0",
        "aggregate%head%8#0"
      ]
    },
    "152": {
      "op": "uncover 1",
      "stack_out": [
        "aggregate%head%8#0",
        "encoded_array%2#0"
      ]
    },
    "154": {
      "op": "concat",
      "defined_out": [
        "encoded_for_storage%2#0"
      ],
      "stack_out": [
        "encoded_for_storage%2#0"
      ]
    },
    "155": {
      "op": "bytec_1 // \"tup\"",
      "stack_out": [
        "encoded_for_storage%2#0",
        "\"tup\""
      ]
    },
    "156": {
      "op": "uncover 1",
      "stack_out": [
        "\"tup\"",
        "encoded_for_storage%2#0"
      ]
    },
    "158": {
      "op": "app_global_put",
      "stack_out": []
    },
    "159": {
      "retsub": true,
      "op": "retsub"
    },
    "160": {
      "subroutine": "test_cases.tuple_support.tuple_storage.NestedTuplesStorage.bootstrap",
      "params": {},
      "block": "bootstrap",
      "stack_in": [],
      "op": "b bootstrap_block@0"
    },
    "163": {
      "block": "bootstrap_block@0",
      "stack_in": [],
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "164": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%0#0"
      ],
      "stack_out": [
        "aggregate%as_bytes%0#0"
      ]
    },
    "165": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%len_u16%0#0"
      ],
      "stack_out": [
        "aggregate%len_u16%0#0"
      ]
    },
    "168": {
      "op": "bytec_2 // 0x0000000000000000",
      "defined_out": [
        "0x0000000000000000",
        "aggregate%len_u16%0#0"
      ],
      "stack_out": [
        "aggregate%len_u16%0#0",
        "0x0000000000000000"
      ]
    },
    "169": {
      "op": "concat",
      "defined_out": [
        "encoded_array%0#0"
      ],
      "stack_out": [
        "encoded_array%0#0"
      ]
    },
    "170": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "encoded_array%0#0"
      ],
      "stack_out": [
        "encoded_array%0#0",
        "0"
      ]
    },
    "171": {
      "op": "bytec_1 // \"tup\"",
      "defined_out": [
        "\"tup\"",
        "0",
        "encoded_array%0#0"
      ],
      "stack_out": [
        "encoded_array%0#0",
        "0",
        "\"tup\""
      ]
    },
    "172": {
      "op": "app_global_get_ex",
      "defined_out": [
        "encoded_array%0#0",
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "encoded_array%0#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "173": {
      "error": "check self.tup exists",
      "op": "assert // check self.tup exists",
      "stack_out": [
        "encoded_array%0#0",
        "maybe_value%0#0"
      ]
    },
    "174": {
      "op": "intc_3 // 2",
      "defined_out": [
        "2",
        "encoded_array%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "encoded_array%0#0",
        "maybe_value%0#0",
        "2"
      ]
    },
    "175": {
      "op": "pushint 8 // 8",
      "defined_out": [
        "2",
        "8",
        "encoded_array%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "encoded_array%0#0",
        "maybe_value%0#0",
        "2",
        "8"
      ]
    },
    "177": {
      "op": "extract3",
      "defined_out": [
        "aggregate%extract%0#0",
        "encoded_array%0#0"
      ],
      "stack_out": [
        "encoded_array%0#0",
        "aggregate%extract%0#0"
      ]
    },
    "178": {
      "op": "btoi",
      "defined_out": [
        "awst_tmp%1#0",
        "encoded_array%0#0"
      ],
      "stack_out": [
        "encoded_array%0#0",
        "awst_tmp%1#0"
      ]
    },
    "179": {
      "op": "intc_2 // 10",
      "defined_out": [
        "10",
        "awst_tmp%1#0",
        "encoded_array%0#0"
      ],
      "stack_out": [
        "encoded_array%0#0",
        "awst_tmp%1#0",
        "10"
      ]
    },
    "180": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%1#0",
        "awst_tmp%1#0",
        "encoded_array%0#0"
      ],
      "stack_out": [
        "encoded_array%0#0",
        "awst_tmp%1#0",
        "aggregate%as_bytes%1#0"
      ]
    },
    "181": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%offset_as_uint16%0#0",
        "awst_tmp%1#0",
        "encoded_array%0#0"
      ],
      "stack_out": [
        "encoded_array%0#0",
        "awst_tmp%1#0",
        "aggregate%offset_as_uint16%0#0"
      ]
    },
    "184": {
      "op": "bytec_0 // 0x",
      "defined_out": [
        "0x",
        "aggregate%offset_as_uint16%0#0",
        "awst_tmp%1#0",
        "encoded_array%0#0"
      ],
      "stack_out": [
        "encoded_array%0#0",
        "awst_tmp%1#0",
        "aggregate%offset_as_uint16%0#0",
        "0x"
      ]
    },
    "185": {
      "op": "uncover 1",
      "stack_out": [
        "encoded_array%0#0",
        "awst_tmp%1#0",
        "0x",
        "aggregate%offset_as_uint16%0#0"
      ]
    },
    "187": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%1#0",
        "awst_tmp%1#0",
        "encoded_array%0#0"
      ],
      "stack_out": [
        "encoded_array%0#0",
        "awst_tmp%1#0",
        "aggregate%head%1#0"
      ]
    },
    "188": {
      "op": "uncover 1",
      "stack_out": [
        "encoded_array%0#0",
        "aggregate%head%1#0",
        "awst_tmp%1#0"
      ]
    },
    "190": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(uint64)%0#0",
        "aggregate%head%1#0",
        "encoded_array%0#0"
      ],
      "stack_out": [
        "encoded_array%0#0",
        "aggregate%head%1#0",
        "aggregate%as_Encoded(uint64)%0#0"
      ]
    },
    "191": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%2#0",
        "encoded_array%0#0"
      ],
      "stack_out": [
        "encoded_array%0#0",
        "aggregate%head%2#0"
      ]
    },
    "192": {
      "op": "uncover 1",
      "stack_out": [
        "aggregate%head%2#0",
        "encoded_array%0#0"
      ]
    },
    "194": {
      "op": "concat",
      "defined_out": [
        "encoded_for_storage%0#0"
      ],
      "stack_out": [
        "encoded_for_storage%0#0"
      ]
    },
    "195": {
      "op": "bytec_3 // \"box\"",
      "defined_out": [
        "\"box\"",
        "encoded_for_storage%0#0"
      ],
      "stack_out": [
        "encoded_for_storage%0#0",
        "\"box\""
      ]
    },
    "196": {
      "op": "box_del",
      "defined_out": [
        "encoded_for_storage%0#0",
        "{box_del}"
      ],
      "stack_out": [
        "encoded_for_storage%0#0",
        "{box_del}"
      ]
    },
    "197": {
      "op": "pop",
      "stack_out": [
        "encoded_for_storage%0#0"
      ]
    },
    "198": {
      "op": "bytec_3 // \"box\"",
      "stack_out": [
        "encoded_for_storage%0#0",
        "\"box\""
      ]
    },
    "199": {
      "op": "uncover 1",
      "stack_out": [
        "\"box\"",
        "encoded_for_storage%0#0"
      ]
    },
    "201": {
      "op": "box_put",
      "stack_out": []
    },
    "202": {
      "op": "intc_1 // 1",
      "stack_out": [
        "1"
      ]
    },
    "203": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%2#0"
      ],
      "stack_out": [
        "aggregate%as_bytes%2#0"
      ]
    },
    "204": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%len_u16%1#0"
      ],
      "stack_out": [
        "aggregate%len_u16%1#0"
      ]
    },
    "207": {
      "op": "bytec_2 // 0x0000000000000000",
      "stack_out": [
        "aggregate%len_u16%1#0",
        "0x0000000000000000"
      ]
    },
    "208": {
      "op": "concat",
      "defined_out": [
        "encoded_array%1#0"
      ],
      "stack_out": [
        "encoded_array%1#0"
      ]
    },
    "209": {
      "op": "intc_0 // 0",
      "stack_out": [
        "encoded_array%1#0",
        "0"
      ]
    },
    "210": {
      "op": "bytec_1 // \"tup\"",
      "stack_out": [
        "encoded_array%1#0",
        "0",
        "\"tup\""
      ]
    },
    "211": {
      "op": "app_global_get_ex",
      "defined_out": [
        "encoded_array%1#0",
        "maybe_exists%1#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "encoded_array%1#0",
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "212": {
      "error": "check self.tup exists",
      "op": "assert // check self.tup exists",
      "stack_out": [
        "encoded_array%1#0",
        "maybe_value%1#0"
      ]
    },
    "213": {
      "op": "intc_3 // 2",
      "stack_out": [
        "encoded_array%1#0",
        "maybe_value%1#0",
        "2"
      ]
    },
    "214": {
      "op": "pushint 8 // 8",
      "stack_out": [
        "encoded_array%1#0",
        "maybe_value%1#0",
        "2",
        "8"
      ]
    },
    "216": {
      "op": "extract3",
      "defined_out": [
        "aggregate%extract%1#0",
        "encoded_array%1#0"
      ],
      "stack_out": [
        "encoded_array%1#0",
        "aggregate%extract%1#0"
      ]
    },
    "217": {
      "op": "btoi",
      "defined_out": [
        "awst_tmp%3#0",
        "encoded_array%1#0"
      ],
      "stack_out": [
        "encoded_array%1#0",
        "awst_tmp%3#0"
      ]
    },
    "218": {
      "op": "txn Sender",
      "defined_out": [
        "awst_tmp%3#0",
        "encoded_array%1#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "encoded_array%1#0",
        "awst_tmp%3#0",
        "tmp%0#0"
      ]
    },
    "220": {
      "op": "cover 1",
      "stack_out": [
        "encoded_array%1#0",
        "tmp%0#0",
        "awst_tmp%3#0"
      ]
    },
    "222": {
      "op": "intc_2 // 10",
      "stack_out": [
        "encoded_array%1#0",
        "tmp%0#0",
        "awst_tmp%3#0",
        "10"
      ]
    },
    "223": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%3#0",
        "awst_tmp%3#0",
        "encoded_array%1#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "encoded_array%1#0",
        "tmp%0#0",
        "awst_tmp%3#0",
        "aggregate%as_bytes%3#0"
      ]
    },
    "224": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%offset_as_uint16%1#0",
        "awst_tmp%3#0",
        "encoded_array%1#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "encoded_array%1#0",
        "tmp%0#0",
        "awst_tmp%3#0",
        "aggregate%offset_as_uint16%1#0"
      ]
    },
    "227": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "encoded_array%1#0",
        "tmp%0#0",
        "awst_tmp%3#0",
        "aggregate%offset_as_uint16%1#0",
        "0x"
      ]
    },
    "228": {
      "op": "uncover 1",
      "stack_out": [
        "encoded_array%1#0",
        "tmp%0#0",
        "awst_tmp%3#0",
        "0x",
        "aggregate%offset_as_uint16%1#0"
      ]
    },
    "230": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%4#0",
        "awst_tmp%3#0",
        "encoded_array%1#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "encoded_array%1#0",
        "tmp%0#0",
        "awst_tmp%3#0",
        "aggregate%head%4#0"
      ]
    },
    "231": {
      "op": "uncover 1",
      "stack_out": [
        "encoded_array%1#0",
        "tmp%0#0",
        "aggregate%head%4#0",
        "awst_tmp%3#0"
      ]
    },
    "233": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(uint64)%1#0",
        "aggregate%head%4#0",
        "encoded_array%1#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "encoded_array%1#0",
        "tmp%0#0",
        "aggregate%head%4#0",
        "aggregate%as_Encoded(uint64)%1#0"
      ]
    },
    "234": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%5#0",
        "encoded_array%1#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "encoded_array%1#0",
        "tmp%0#0",
        "aggregate%head%5#0"
      ]
    },
    "235": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%0#0",
        "aggregate%head%5#0",
        "encoded_array%1#0"
      ]
    },
    "237": {
      "op": "concat",
      "defined_out": [
        "encoded_for_storage%1#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "encoded_for_storage%1#0"
      ]
    },
    "238": {
      "op": "uncover 1",
      "stack_out": [
        "encoded_for_storage%1#0",
        "tmp%0#0"
      ]
    },
    "240": {
      "op": "bytec 5 // \"loc\"",
      "defined_out": [
        "\"loc\"",
        "encoded_for_storage%1#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "encoded_for_storage%1#0",
        "tmp%0#0",
        "\"loc\""
      ]
    },
    "242": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%0#0",
        "\"loc\"",
        "encoded_for_storage%1#0"
      ]
    },
    "244": {
      "op": "app_local_put",
      "stack_out": []
    },
    "245": {
      "retsub": true,
      "op": "retsub"
    },
    "246": {
      "subroutine": "test_cases.tuple_support.tuple_storage.NestedTuplesStorage.mutate_tuple",
      "params": {
        "val#0": "bytes"
      },
      "block": "mutate_tuple",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "249": {
      "op": "b mutate_tuple_block@0"
    },
    "252": {
      "block": "mutate_tuple_block@0",
      "stack_in": [],
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "253": {
      "op": "bytec_1 // \"tup\"",
      "defined_out": [
        "\"tup\"",
        "0"
      ],
      "stack_out": [
        "0",
        "\"tup\""
      ]
    },
    "254": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "255": {
      "error": "check self.tup exists",
      "op": "assert // check self.tup exists",
      "stack_out": [
        "maybe_value%0#0"
      ]
    },
    "256": {
      "op": "dup",
      "defined_out": [
        "maybe_value%0#0",
        "maybe_value%0#0 (copy)"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%0#0 (copy)"
      ]
    },
    "257": {
      "op": "intc_0 // 0",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%0#0 (copy)",
        "0"
      ]
    },
    "258": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%extract_uint16%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "aggregate%extract_uint16%0#0"
      ]
    },
    "259": {
      "op": "cover 1",
      "stack_out": [
        "aggregate%extract_uint16%0#0",
        "maybe_value%0#0"
      ]
    },
    "261": {
      "op": "dup",
      "stack_out": [
        "aggregate%extract_uint16%0#0",
        "maybe_value%0#0",
        "maybe_value%0#0 (copy)"
      ]
    },
    "262": {
      "op": "len",
      "defined_out": [
        "aggregate%extract_uint16%0#0",
        "aggregate%len%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "aggregate%extract_uint16%0#0",
        "maybe_value%0#0",
        "aggregate%len%0#0"
      ]
    },
    "263": {
      "op": "cover 1",
      "stack_out": [
        "aggregate%extract_uint16%0#0",
        "aggregate%len%0#0",
        "maybe_value%0#0"
      ]
    },
    "265": {
      "op": "dup",
      "stack_out": [
        "aggregate%extract_uint16%0#0",
        "aggregate%len%0#0",
        "maybe_value%0#0",
        "maybe_value%0#0 (copy)"
      ]
    },
    "266": {
      "op": "uncover 3",
      "stack_out": [
        "aggregate%len%0#0",
        "maybe_value%0#0",
        "maybe_value%0#0 (copy)",
        "aggregate%extract_uint16%0#0"
      ]
    },
    "268": {
      "op": "uncover 3",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%0#0 (copy)",
        "aggregate%extract_uint16%0#0",
        "aggregate%len%0#0"
      ]
    },
    "270": {
      "op": "substring3",
      "defined_out": [
        "aggregate%substring3%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "aggregate%substring3%0#0"
      ]
    },
    "271": {
      "op": "cover 1",
      "stack_out": [
        "aggregate%substring3%0#0",
        "maybe_value%0#0"
      ]
    },
    "273": {
      "op": "intc_3 // 2",
      "defined_out": [
        "2",
        "aggregate%substring3%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "aggregate%substring3%0#0",
        "maybe_value%0#0",
        "2"
      ]
    },
    "274": {
      "op": "pushint 8 // 8",
      "defined_out": [
        "2",
        "8",
        "aggregate%substring3%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "aggregate%substring3%0#0",
        "maybe_value%0#0",
        "2",
        "8"
      ]
    },
    "276": {
      "op": "extract3",
      "defined_out": [
        "aggregate%extract%0#0",
        "aggregate%substring3%0#0"
      ],
      "stack_out": [
        "aggregate%substring3%0#0",
        "aggregate%extract%0#0"
      ]
    },
    "277": {
      "op": "btoi",
      "defined_out": [
        "aggregate%item1%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "aggregate%item1%0#0"
      ]
    },
    "278": {
      "op": "cover 1",
      "defined_out": [
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%0#0"
      ]
    },
    "280": {
      "op": "bytec_0 // 0x",
      "defined_out": [
        "0x",
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%0#0",
        "0x"
      ]
    },
    "281": {
      "op": "frame_dig -1",
      "defined_out": [
        "0x",
        "tmp%0#0",
        "tmp%1#0",
        "val#0 (copy)"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%0#0",
        "0x",
        "val#0 (copy)"
      ]
    },
    "283": {
      "op": "concat",
      "defined_out": [
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%0#0",
        "tmp%2#0"
      ]
    },
    "284": {
      "op": "dig 1",
      "defined_out": [
        "tmp%0#0",
        "tmp%0#0 (copy)",
        "tmp%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%0#0",
        "tmp%2#0",
        "tmp%0#0 (copy)"
      ]
    },
    "286": {
      "op": "uncover 1",
      "stack_out": [
        "tmp%1#0",
        "tmp%0#0",
        "tmp%0#0 (copy)",
        "tmp%2#0"
      ]
    },
    "288": {
      "error": "max array length exceeded",
      "op": "concat // on error: max array length exceeded",
      "defined_out": [
        "concat%0#0",
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%0#0",
        "concat%0#0"
      ]
    },
    "289": {
      "op": "cover 1",
      "stack_out": [
        "tmp%1#0",
        "concat%0#0",
        "tmp%0#0"
      ]
    },
    "291": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%1#0",
        "concat%0#0",
        "tmp%0#0",
        "0"
      ]
    },
    "292": {
      "op": "extract_uint16",
      "defined_out": [
        "concat%0#0",
        "extract_uint16%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "concat%0#0",
        "extract_uint16%0#0"
      ]
    },
    "293": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "concat%0#0",
        "extract_uint16%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "concat%0#0",
        "extract_uint16%0#0",
        "1"
      ]
    },
    "294": {
      "op": "+",
      "defined_out": [
        "add%0#0",
        "concat%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "concat%0#0",
        "add%0#0"
      ]
    },
    "295": {
      "op": "itob",
      "defined_out": [
        "as_bytes%0#0",
        "concat%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "concat%0#0",
        "as_bytes%0#0"
      ]
    },
    "296": {
      "op": "extract 6 2",
      "defined_out": [
        "as_u16_bytes%0#0",
        "concat%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "concat%0#0",
        "as_u16_bytes%0#0"
      ]
    },
    "299": {
      "op": "uncover 1",
      "stack_out": [
        "tmp%1#0",
        "as_u16_bytes%0#0",
        "concat%0#0"
      ]
    },
    "301": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%1#0",
        "as_u16_bytes%0#0",
        "concat%0#0",
        "0"
      ]
    },
    "302": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%1#0",
        "concat%0#0",
        "0",
        "as_u16_bytes%0#0"
      ]
    },
    "304": {
      "op": "replace3",
      "defined_out": [
        "as_Encoded(len+uint64[])%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "as_Encoded(len+uint64[])%0#0"
      ]
    },
    "305": {
      "op": "intc_2 // 10",
      "defined_out": [
        "10",
        "as_Encoded(len+uint64[])%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "as_Encoded(len+uint64[])%0#0",
        "10"
      ]
    },
    "306": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%0#0",
        "as_Encoded(len+uint64[])%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "as_Encoded(len+uint64[])%0#0",
        "aggregate%as_bytes%0#0"
      ]
    },
    "307": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%offset_as_uint16%0#0",
        "as_Encoded(len+uint64[])%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "as_Encoded(len+uint64[])%0#0",
        "aggregate%offset_as_uint16%0#0"
      ]
    },
    "310": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "tmp%1#0",
        "as_Encoded(len+uint64[])%0#0",
        "aggregate%offset_as_uint16%0#0",
        "0x"
      ]
    },
    "311": {
      "op": "uncover 1",
      "stack_out": [
        "tmp%1#0",
        "as_Encoded(len+uint64[])%0#0",
        "0x",
        "aggregate%offset_as_uint16%0#0"
      ]
    },
    "313": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%1#0",
        "as_Encoded(len+uint64[])%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "as_Encoded(len+uint64[])%0#0",
        "aggregate%head%1#0"
      ]
    },
    "314": {
      "op": "uncover 2",
      "stack_out": [
        "as_Encoded(len+uint64[])%0#0",
        "aggregate%head%1#0",
        "tmp%1#0"
      ]
    },
    "316": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(uint64)%0#0",
        "aggregate%head%1#0",
        "as_Encoded(len+uint64[])%0#0"
      ],
      "stack_out": [
        "as_Encoded(len+uint64[])%0#0",
        "aggregate%head%1#0",
        "aggregate%as_Encoded(uint64)%0#0"
      ]
    },
    "317": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%2#0",
        "as_Encoded(len+uint64[])%0#0"
      ],
      "stack_out": [
        "as_Encoded(len+uint64[])%0#0",
        "aggregate%head%2#0"
      ]
    },
    "318": {
      "op": "uncover 1",
      "stack_out": [
        "aggregate%head%2#0",
        "as_Encoded(len+uint64[])%0#0"
      ]
    },
    "320": {
      "op": "concat",
      "defined_out": [
        "encoded_for_storage%0#0"
      ],
      "stack_out": [
        "encoded_for_storage%0#0"
      ]
    },
    "321": {
      "op": "bytec_1 // \"tup\"",
      "stack_out": [
        "encoded_for_storage%0#0",
        "\"tup\""
      ]
    },
    "322": {
      "op": "uncover 1",
      "stack_out": [
        "\"tup\"",
        "encoded_for_storage%0#0"
      ]
    },
    "324": {
      "op": "app_global_put",
      "stack_out": []
    },
    "325": {
      "retsub": true,
      "op": "retsub"
    },
    "326": {
      "subroutine": "test_cases.tuple_support.tuple_storage.NestedTuplesStorage.mutate_box",
      "params": {
        "val#0": "bytes"
      },
      "block": "mutate_box",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "329": {
      "op": "b mutate_box_block@0"
    },
    "332": {
      "block": "mutate_box_block@0",
      "stack_in": [],
      "op": "bytec_3 // \"box\"",
      "defined_out": [
        "\"box\""
      ],
      "stack_out": [
        "\"box\""
      ]
    },
    "333": {
      "op": "box_get",
      "defined_out": [
        "aggregate%box_get%0#0",
        "aggregate%box_get%1#0"
      ],
      "stack_out": [
        "aggregate%box_get%0#0",
        "aggregate%box_get%1#0"
      ]
    },
    "334": {
      "error": "check self.box exists",
      "op": "assert // check self.box exists",
      "defined_out": [
        "storage_value%0#0"
      ],
      "stack_out": [
        "storage_value%0#0"
      ]
    },
    "335": {
      "op": "dup",
      "defined_out": [
        "storage_value%0#0",
        "storage_value%0#0 (copy)"
      ],
      "stack_out": [
        "storage_value%0#0",
        "storage_value%0#0 (copy)"
      ]
    },
    "336": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "storage_value%0#0",
        "storage_value%0#0 (copy)"
      ],
      "stack_out": [
        "storage_value%0#0",
        "storage_value%0#0 (copy)",
        "0"
      ]
    },
    "337": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%extract_uint16%0#0",
        "storage_value%0#0"
      ],
      "stack_out": [
        "storage_value%0#0",
        "aggregate%extract_uint16%0#0"
      ]
    },
    "338": {
      "op": "cover 1",
      "stack_out": [
        "aggregate%extract_uint16%0#0",
        "storage_value%0#0"
      ]
    },
    "340": {
      "op": "dup",
      "stack_out": [
        "aggregate%extract_uint16%0#0",
        "storage_value%0#0",
        "storage_value%0#0 (copy)"
      ]
    },
    "341": {
      "op": "len",
      "defined_out": [
        "aggregate%extract_uint16%0#0",
        "aggregate%len%0#0",
        "storage_value%0#0"
      ],
      "stack_out": [
        "aggregate%extract_uint16%0#0",
        "storage_value%0#0",
        "aggregate%len%0#0"
      ]
    },
    "342": {
      "op": "cover 1",
      "stack_out": [
        "aggregate%extract_uint16%0#0",
        "aggregate%len%0#0",
        "storage_value%0#0"
      ]
    },
    "344": {
      "op": "dup",
      "stack_out": [
        "aggregate%extract_uint16%0#0",
        "aggregate%len%0#0",
        "storage_value%0#0",
        "storage_value%0#0 (copy)"
      ]
    },
    "345": {
      "op": "uncover 3",
      "stack_out": [
        "aggregate%len%0#0",
        "storage_value%0#0",
        "storage_value%0#0 (copy)",
        "aggregate%extract_uint16%0#0"
      ]
    },
    "347": {
      "op": "uncover 3",
      "stack_out": [
        "storage_value%0#0",
        "storage_value%0#0 (copy)",
        "aggregate%extract_uint16%0#0",
        "aggregate%len%0#0"
      ]
    },
    "349": {
      "op": "substring3",
      "defined_out": [
        "aggregate%substring3%0#0",
        "storage_value%0#0"
      ],
      "stack_out": [
        "storage_value%0#0",
        "aggregate%substring3%0#0"
      ]
    },
    "350": {
      "op": "cover 1",
      "stack_out": [
        "aggregate%substring3%0#0",
        "storage_value%0#0"
      ]
    },
    "352": {
      "op": "intc_3 // 2",
      "defined_out": [
        "2",
        "aggregate%substring3%0#0",
        "storage_value%0#0"
      ],
      "stack_out": [
        "aggregate%substring3%0#0",
        "storage_value%0#0",
        "2"
      ]
    },
    "353": {
      "op": "pushint 8 // 8",
      "defined_out": [
        "2",
        "8",
        "aggregate%substring3%0#0",
        "storage_value%0#0"
      ],
      "stack_out": [
        "aggregate%substring3%0#0",
        "storage_value%0#0",
        "2",
        "8"
      ]
    },
    "355": {
      "op": "extract3",
      "defined_out": [
        "aggregate%extract%0#0",
        "aggregate%substring3%0#0"
      ],
      "stack_out": [
        "aggregate%substring3%0#0",
        "aggregate%extract%0#0"
      ]
    },
    "356": {
      "op": "btoi",
      "defined_out": [
        "aggregate%item1%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "aggregate%item1%0#0"
      ]
    },
    "357": {
      "op": "cover 1",
      "defined_out": [
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%0#0"
      ]
    },
    "359": {
      "op": "bytec_0 // 0x",
      "defined_out": [
        "0x",
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%0#0",
        "0x"
      ]
    },
    "360": {
      "op": "frame_dig -1",
      "defined_out": [
        "0x",
        "tmp%0#0",
        "tmp%1#0",
        "val#0 (copy)"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%0#0",
        "0x",
        "val#0 (copy)"
      ]
    },
    "362": {
      "op": "concat",
      "defined_out": [
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%0#0",
        "tmp%2#0"
      ]
    },
    "363": {
      "op": "dig 1",
      "defined_out": [
        "tmp%0#0",
        "tmp%0#0 (copy)",
        "tmp%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%0#0",
        "tmp%2#0",
        "tmp%0#0 (copy)"
      ]
    },
    "365": {
      "op": "uncover 1",
      "stack_out": [
        "tmp%1#0",
        "tmp%0#0",
        "tmp%0#0 (copy)",
        "tmp%2#0"
      ]
    },
    "367": {
      "error": "max array length exceeded",
      "op": "concat // on error: max array length exceeded",
      "defined_out": [
        "concat%0#0",
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%0#0",
        "concat%0#0"
      ]
    },
    "368": {
      "op": "cover 1",
      "stack_out": [
        "tmp%1#0",
        "concat%0#0",
        "tmp%0#0"
      ]
    },
    "370": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%1#0",
        "concat%0#0",
        "tmp%0#0",
        "0"
      ]
    },
    "371": {
      "op": "extract_uint16",
      "defined_out": [
        "concat%0#0",
        "extract_uint16%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "concat%0#0",
        "extract_uint16%0#0"
      ]
    },
    "372": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "concat%0#0",
        "extract_uint16%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "concat%0#0",
        "extract_uint16%0#0",
        "1"
      ]
    },
    "373": {
      "op": "+",
      "defined_out": [
        "add%0#0",
        "concat%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "concat%0#0",
        "add%0#0"
      ]
    },
    "374": {
      "op": "itob",
      "defined_out": [
        "as_bytes%0#0",
        "concat%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "concat%0#0",
        "as_bytes%0#0"
      ]
    },
    "375": {
      "op": "extract 6 2",
      "defined_out": [
        "as_u16_bytes%0#0",
        "concat%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "concat%0#0",
        "as_u16_bytes%0#0"
      ]
    },
    "378": {
      "op": "uncover 1",
      "stack_out": [
        "tmp%1#0",
        "as_u16_bytes%0#0",
        "concat%0#0"
      ]
    },
    "380": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%1#0",
        "as_u16_bytes%0#0",
        "concat%0#0",
        "0"
      ]
    },
    "381": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%1#0",
        "concat%0#0",
        "0",
        "as_u16_bytes%0#0"
      ]
    },
    "383": {
      "op": "replace3",
      "defined_out": [
        "as_Encoded(len+uint64[])%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "as_Encoded(len+uint64[])%0#0"
      ]
    },
    "384": {
      "op": "intc_2 // 10",
      "defined_out": [
        "10",
        "as_Encoded(len+uint64[])%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "as_Encoded(len+uint64[])%0#0",
        "10"
      ]
    },
    "385": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%0#0",
        "as_Encoded(len+uint64[])%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "as_Encoded(len+uint64[])%0#0",
        "aggregate%as_bytes%0#0"
      ]
    },
    "386": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%offset_as_uint16%0#0",
        "as_Encoded(len+uint64[])%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "as_Encoded(len+uint64[])%0#0",
        "aggregate%offset_as_uint16%0#0"
      ]
    },
    "389": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "tmp%1#0",
        "as_Encoded(len+uint64[])%0#0",
        "aggregate%offset_as_uint16%0#0",
        "0x"
      ]
    },
    "390": {
      "op": "uncover 1",
      "stack_out": [
        "tmp%1#0",
        "as_Encoded(len+uint64[])%0#0",
        "0x",
        "aggregate%offset_as_uint16%0#0"
      ]
    },
    "392": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%1#0",
        "as_Encoded(len+uint64[])%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "as_Encoded(len+uint64[])%0#0",
        "aggregate%head%1#0"
      ]
    },
    "393": {
      "op": "uncover 2",
      "stack_out": [
        "as_Encoded(len+uint64[])%0#0",
        "aggregate%head%1#0",
        "tmp%1#0"
      ]
    },
    "395": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(uint64)%0#0",
        "aggregate%head%1#0",
        "as_Encoded(len+uint64[])%0#0"
      ],
      "stack_out": [
        "as_Encoded(len+uint64[])%0#0",
        "aggregate%head%1#0",
        "aggregate%as_Encoded(uint64)%0#0"
      ]
    },
    "396": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%2#0",
        "as_Encoded(len+uint64[])%0#0"
      ],
      "stack_out": [
        "as_Encoded(len+uint64[])%0#0",
        "aggregate%head%2#0"
      ]
    },
    "397": {
      "op": "uncover 1",
      "stack_out": [
        "aggregate%head%2#0",
        "as_Encoded(len+uint64[])%0#0"
      ]
    },
    "399": {
      "op": "concat",
      "defined_out": [
        "encoded_for_storage%0#0"
      ],
      "stack_out": [
        "encoded_for_storage%0#0"
      ]
    },
    "400": {
      "op": "bytec_3 // \"box\"",
      "stack_out": [
        "encoded_for_storage%0#0",
        "\"box\""
      ]
    },
    "401": {
      "op": "box_del",
      "defined_out": [
        "encoded_for_storage%0#0",
        "{box_del}"
      ],
      "stack_out": [
        "encoded_for_storage%0#0",
        "{box_del}"
      ]
    },
    "402": {
      "op": "pop",
      "stack_out": [
        "encoded_for_storage%0#0"
      ]
    },
    "403": {
      "op": "bytec_3 // \"box\"",
      "stack_out": [
        "encoded_for_storage%0#0",
        "\"box\""
      ]
    },
    "404": {
      "op": "uncover 1",
      "stack_out": [
        "\"box\"",
        "encoded_for_storage%0#0"
      ]
    },
    "406": {
      "op": "box_put",
      "stack_out": []
    },
    "407": {
      "retsub": true,
      "op": "retsub"
    },
    "408": {
      "subroutine": "test_cases.tuple_support.tuple_storage.NestedTuplesStorage.mutate_global",
      "params": {
        "val#0": "bytes"
      },
      "block": "mutate_global",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "411": {
      "op": "b mutate_global_block@0"
    },
    "414": {
      "block": "mutate_global_block@0",
      "stack_in": [],
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "415": {
      "op": "bytec 4 // \"glob\"",
      "defined_out": [
        "\"glob\"",
        "0"
      ],
      "stack_out": [
        "0",
        "\"glob\""
      ]
    },
    "417": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "418": {
      "error": "check self.glob exists",
      "op": "assert // check self.glob exists",
      "stack_out": [
        "maybe_value%0#0"
      ]
    },
    "419": {
      "op": "dup",
      "defined_out": [
        "maybe_value%0#0",
        "maybe_value%0#0 (copy)"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%0#0 (copy)"
      ]
    },
    "420": {
      "op": "intc_0 // 0",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%0#0 (copy)",
        "0"
      ]
    },
    "421": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%extract_uint16%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "aggregate%extract_uint16%0#0"
      ]
    },
    "422": {
      "op": "cover 1",
      "stack_out": [
        "aggregate%extract_uint16%0#0",
        "maybe_value%0#0"
      ]
    },
    "424": {
      "op": "dup",
      "stack_out": [
        "aggregate%extract_uint16%0#0",
        "maybe_value%0#0",
        "maybe_value%0#0 (copy)"
      ]
    },
    "425": {
      "op": "len",
      "defined_out": [
        "aggregate%extract_uint16%0#0",
        "aggregate%len%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "aggregate%extract_uint16%0#0",
        "maybe_value%0#0",
        "aggregate%len%0#0"
      ]
    },
    "426": {
      "op": "cover 1",
      "stack_out": [
        "aggregate%extract_uint16%0#0",
        "aggregate%len%0#0",
        "maybe_value%0#0"
      ]
    },
    "428": {
      "op": "dup",
      "stack_out": [
        "aggregate%extract_uint16%0#0",
        "aggregate%len%0#0",
        "maybe_value%0#0",
        "maybe_value%0#0 (copy)"
      ]
    },
    "429": {
      "op": "uncover 3",
      "stack_out": [
        "aggregate%len%0#0",
        "maybe_value%0#0",
        "maybe_value%0#0 (copy)",
        "aggregate%extract_uint16%0#0"
      ]
    },
    "431": {
      "op": "uncover 3",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%0#0 (copy)",
        "aggregate%extract_uint16%0#0",
        "aggregate%len%0#0"
      ]
    },
    "433": {
      "op": "substring3",
      "defined_out": [
        "aggregate%substring3%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "aggregate%substring3%0#0"
      ]
    },
    "434": {
      "op": "cover 1",
      "stack_out": [
        "aggregate%substring3%0#0",
        "maybe_value%0#0"
      ]
    },
    "436": {
      "op": "intc_3 // 2",
      "defined_out": [
        "2",
        "aggregate%substring3%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "aggregate%substring3%0#0",
        "maybe_value%0#0",
        "2"
      ]
    },
    "437": {
      "op": "pushint 8 // 8",
      "defined_out": [
        "2",
        "8",
        "aggregate%substring3%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "aggregate%substring3%0#0",
        "maybe_value%0#0",
        "2",
        "8"
      ]
    },
    "439": {
      "op": "extract3",
      "defined_out": [
        "aggregate%extract%0#0",
        "aggregate%substring3%0#0"
      ],
      "stack_out": [
        "aggregate%substring3%0#0",
        "aggregate%extract%0#0"
      ]
    },
    "440": {
      "op": "btoi",
      "defined_out": [
        "aggregate%item1%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "aggregate%item1%0#0"
      ]
    },
    "441": {
      "op": "cover 1",
      "defined_out": [
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%0#0"
      ]
    },
    "443": {
      "op": "bytec_0 // 0x",
      "defined_out": [
        "0x",
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%0#0",
        "0x"
      ]
    },
    "444": {
      "op": "frame_dig -1",
      "defined_out": [
        "0x",
        "tmp%0#0",
        "tmp%1#0",
        "val#0 (copy)"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%0#0",
        "0x",
        "val#0 (copy)"
      ]
    },
    "446": {
      "op": "concat",
      "defined_out": [
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%0#0",
        "tmp%2#0"
      ]
    },
    "447": {
      "op": "dig 1",
      "defined_out": [
        "tmp%0#0",
        "tmp%0#0 (copy)",
        "tmp%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%0#0",
        "tmp%2#0",
        "tmp%0#0 (copy)"
      ]
    },
    "449": {
      "op": "uncover 1",
      "stack_out": [
        "tmp%1#0",
        "tmp%0#0",
        "tmp%0#0 (copy)",
        "tmp%2#0"
      ]
    },
    "451": {
      "error": "max array length exceeded",
      "op": "concat // on error: max array length exceeded",
      "defined_out": [
        "concat%0#0",
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%0#0",
        "concat%0#0"
      ]
    },
    "452": {
      "op": "cover 1",
      "stack_out": [
        "tmp%1#0",
        "concat%0#0",
        "tmp%0#0"
      ]
    },
    "454": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%1#0",
        "concat%0#0",
        "tmp%0#0",
        "0"
      ]
    },
    "455": {
      "op": "extract_uint16",
      "defined_out": [
        "concat%0#0",
        "extract_uint16%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "concat%0#0",
        "extract_uint16%0#0"
      ]
    },
    "456": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "concat%0#0",
        "extract_uint16%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "concat%0#0",
        "extract_uint16%0#0",
        "1"
      ]
    },
    "457": {
      "op": "+",
      "defined_out": [
        "add%0#0",
        "concat%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "concat%0#0",
        "add%0#0"
      ]
    },
    "458": {
      "op": "itob",
      "defined_out": [
        "as_bytes%0#0",
        "concat%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "concat%0#0",
        "as_bytes%0#0"
      ]
    },
    "459": {
      "op": "extract 6 2",
      "defined_out": [
        "as_u16_bytes%0#0",
        "concat%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "concat%0#0",
        "as_u16_bytes%0#0"
      ]
    },
    "462": {
      "op": "uncover 1",
      "stack_out": [
        "tmp%1#0",
        "as_u16_bytes%0#0",
        "concat%0#0"
      ]
    },
    "464": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%1#0",
        "as_u16_bytes%0#0",
        "concat%0#0",
        "0"
      ]
    },
    "465": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%1#0",
        "concat%0#0",
        "0",
        "as_u16_bytes%0#0"
      ]
    },
    "467": {
      "op": "replace3",
      "defined_out": [
        "as_Encoded(len+uint64[])%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "as_Encoded(len+uint64[])%0#0"
      ]
    },
    "468": {
      "op": "intc_2 // 10",
      "defined_out": [
        "10",
        "as_Encoded(len+uint64[])%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "as_Encoded(len+uint64[])%0#0",
        "10"
      ]
    },
    "469": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%0#0",
        "as_Encoded(len+uint64[])%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "as_Encoded(len+uint64[])%0#0",
        "aggregate%as_bytes%0#0"
      ]
    },
    "470": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%offset_as_uint16%0#0",
        "as_Encoded(len+uint64[])%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "as_Encoded(len+uint64[])%0#0",
        "aggregate%offset_as_uint16%0#0"
      ]
    },
    "473": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "tmp%1#0",
        "as_Encoded(len+uint64[])%0#0",
        "aggregate%offset_as_uint16%0#0",
        "0x"
      ]
    },
    "474": {
      "op": "uncover 1",
      "stack_out": [
        "tmp%1#0",
        "as_Encoded(len+uint64[])%0#0",
        "0x",
        "aggregate%offset_as_uint16%0#0"
      ]
    },
    "476": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%1#0",
        "as_Encoded(len+uint64[])%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "as_Encoded(len+uint64[])%0#0",
        "aggregate%head%1#0"
      ]
    },
    "477": {
      "op": "uncover 2",
      "stack_out": [
        "as_Encoded(len+uint64[])%0#0",
        "aggregate%head%1#0",
        "tmp%1#0"
      ]
    },
    "479": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(uint64)%0#0",
        "aggregate%head%1#0",
        "as_Encoded(len+uint64[])%0#0"
      ],
      "stack_out": [
        "as_Encoded(len+uint64[])%0#0",
        "aggregate%head%1#0",
        "aggregate%as_Encoded(uint64)%0#0"
      ]
    },
    "480": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%2#0",
        "as_Encoded(len+uint64[])%0#0"
      ],
      "stack_out": [
        "as_Encoded(len+uint64[])%0#0",
        "aggregate%head%2#0"
      ]
    },
    "481": {
      "op": "uncover 1",
      "stack_out": [
        "aggregate%head%2#0",
        "as_Encoded(len+uint64[])%0#0"
      ]
    },
    "483": {
      "op": "concat",
      "defined_out": [
        "encoded_for_storage%0#0"
      ],
      "stack_out": [
        "encoded_for_storage%0#0"
      ]
    },
    "484": {
      "op": "bytec 4 // \"glob\"",
      "stack_out": [
        "encoded_for_storage%0#0",
        "\"glob\""
      ]
    },
    "486": {
      "op": "uncover 1",
      "stack_out": [
        "\"glob\"",
        "encoded_for_storage%0#0"
      ]
    },
    "488": {
      "op": "app_global_put",
      "stack_out": []
    },
    "489": {
      "retsub": true,
      "op": "retsub"
    },
    "490": {
      "subroutine": "test_cases.tuple_support.tuple_storage.NestedTuplesStorage.mutate_local",
      "params": {
        "val#0": "bytes"
      },
      "block": "mutate_local",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "493": {
      "op": "b mutate_local_block@0"
    },
    "496": {
      "block": "mutate_local_block@0",
      "stack_in": [],
      "op": "txn Sender",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "498": {
      "op": "dup",
      "defined_out": [
        "tmp%0#0",
        "tmp%0#0 (copy)"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%0#0 (copy)"
      ]
    },
    "499": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%0#0",
        "tmp%0#0 (copy)"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%0#0 (copy)",
        "0"
      ]
    },
    "500": {
      "op": "bytec 5 // \"loc\"",
      "defined_out": [
        "\"loc\"",
        "0",
        "tmp%0#0",
        "tmp%0#0 (copy)"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%0#0 (copy)",
        "0",
        "\"loc\""
      ]
    },
    "502": {
      "op": "app_local_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "503": {
      "error": "check self.loc exists for account",
      "op": "assert // check self.loc exists for account",
      "stack_out": [
        "tmp%0#0",
        "maybe_value%0#0"
      ]
    },
    "504": {
      "op": "dup",
      "defined_out": [
        "maybe_value%0#0",
        "maybe_value%0#0 (copy)",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "maybe_value%0#0",
        "maybe_value%0#0 (copy)"
      ]
    },
    "505": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%0#0",
        "maybe_value%0#0",
        "maybe_value%0#0 (copy)",
        "0"
      ]
    },
    "506": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%extract_uint16%0#0",
        "maybe_value%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "maybe_value%0#0",
        "aggregate%extract_uint16%0#0"
      ]
    },
    "507": {
      "op": "cover 1",
      "stack_out": [
        "tmp%0#0",
        "aggregate%extract_uint16%0#0",
        "maybe_value%0#0"
      ]
    },
    "509": {
      "op": "dup",
      "stack_out": [
        "tmp%0#0",
        "aggregate%extract_uint16%0#0",
        "maybe_value%0#0",
        "maybe_value%0#0 (copy)"
      ]
    },
    "510": {
      "op": "len",
      "defined_out": [
        "aggregate%extract_uint16%0#0",
        "aggregate%len%0#0",
        "maybe_value%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "aggregate%extract_uint16%0#0",
        "maybe_value%0#0",
        "aggregate%len%0#0"
      ]
    },
    "511": {
      "op": "cover 1",
      "stack_out": [
        "tmp%0#0",
        "aggregate%extract_uint16%0#0",
        "aggregate%len%0#0",
        "maybe_value%0#0"
      ]
    },
    "513": {
      "op": "dup",
      "stack_out": [
        "tmp%0#0",
        "aggregate%extract_uint16%0#0",
        "aggregate%len%0#0",
        "maybe_value%0#0",
        "maybe_value%0#0 (copy)"
      ]
    },
    "514": {
      "op": "uncover 3",
      "stack_out": [
        "tmp%0#0",
        "aggregate%len%0#0",
        "maybe_value%0#0",
        "maybe_value%0#0 (copy)",
        "aggregate%extract_uint16%0#0"
      ]
    },
    "516": {
      "op": "uncover 3",
      "stack_out": [
        "tmp%0#0",
        "maybe_value%0#0",
        "maybe_value%0#0 (copy)",
        "aggregate%extract_uint16%0#0",
        "aggregate%len%0#0"
      ]
    },
    "518": {
      "op": "substring3",
      "defined_out": [
        "aggregate%substring3%0#0",
        "maybe_value%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "maybe_value%0#0",
        "aggregate%substring3%0#0"
      ]
    },
    "519": {
      "op": "cover 1",
      "stack_out": [
        "tmp%0#0",
        "aggregate%substring3%0#0",
        "maybe_value%0#0"
      ]
    },
    "521": {
      "op": "intc_3 // 2",
      "defined_out": [
        "2",
        "aggregate%substring3%0#0",
        "maybe_value%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "aggregate%substring3%0#0",
        "maybe_value%0#0",
        "2"
      ]
    },
    "522": {
      "op": "pushint 8 // 8",
      "defined_out": [
        "2",
        "8",
        "aggregate%substring3%0#0",
        "maybe_value%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "aggregate%substring3%0#0",
        "maybe_value%0#0",
        "2",
        "8"
      ]
    },
    "524": {
      "op": "extract3",
      "defined_out": [
        "aggregate%extract%0#0",
        "aggregate%substring3%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "aggregate%substring3%0#0",
        "aggregate%extract%0#0"
      ]
    },
    "525": {
      "op": "btoi",
      "defined_out": [
        "aggregate%item1%0#0",
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "aggregate%item1%0#0"
      ]
    },
    "526": {
      "op": "cover 1",
      "defined_out": [
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%2#0",
        "tmp%1#0"
      ]
    },
    "528": {
      "op": "bytec_0 // 0x",
      "defined_out": [
        "0x",
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%2#0",
        "tmp%1#0",
        "0x"
      ]
    },
    "529": {
      "op": "frame_dig -1",
      "defined_out": [
        "0x",
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "val#0 (copy)"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%2#0",
        "tmp%1#0",
        "0x",
        "val#0 (copy)"
      ]
    },
    "531": {
      "op": "concat",
      "defined_out": [
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%2#0",
        "tmp%1#0",
        "tmp%3#0"
      ]
    },
    "532": {
      "op": "dig 1",
      "defined_out": [
        "tmp%0#0",
        "tmp%1#0",
        "tmp%1#0 (copy)",
        "tmp%2#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%2#0",
        "tmp%1#0",
        "tmp%3#0",
        "tmp%1#0 (copy)"
      ]
    },
    "534": {
      "op": "uncover 1",
      "stack_out": [
        "tmp%0#0",
        "tmp%2#0",
        "tmp%1#0",
        "tmp%1#0 (copy)",
        "tmp%3#0"
      ]
    },
    "536": {
      "error": "max array length exceeded",
      "op": "concat // on error: max array length exceeded",
      "defined_out": [
        "concat%0#0",
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%2#0",
        "tmp%1#0",
        "concat%0#0"
      ]
    },
    "537": {
      "op": "cover 1",
      "stack_out": [
        "tmp%0#0",
        "tmp%2#0",
        "concat%0#0",
        "tmp%1#0"
      ]
    },
    "539": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%0#0",
        "tmp%2#0",
        "concat%0#0",
        "tmp%1#0",
        "0"
      ]
    },
    "540": {
      "op": "extract_uint16",
      "defined_out": [
        "concat%0#0",
        "extract_uint16%0#0",
        "tmp%0#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%2#0",
        "concat%0#0",
        "extract_uint16%0#0"
      ]
    },
    "541": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "concat%0#0",
        "extract_uint16%0#0",
        "tmp%0#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%2#0",
        "concat%0#0",
        "extract_uint16%0#0",
        "1"
      ]
    },
    "542": {
      "op": "+",
      "defined_out": [
        "add%0#0",
        "concat%0#0",
        "tmp%0#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%2#0",
        "concat%0#0",
        "add%0#0"
      ]
    },
    "543": {
      "op": "itob",
      "defined_out": [
        "as_bytes%0#0",
        "concat%0#0",
        "tmp%0#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%2#0",
        "concat%0#0",
        "as_bytes%0#0"
      ]
    },
    "544": {
      "op": "extract 6 2",
      "defined_out": [
        "as_u16_bytes%0#0",
        "concat%0#0",
        "tmp%0#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%2#0",
        "concat%0#0",
        "as_u16_bytes%0#0"
      ]
    },
    "547": {
      "op": "uncover 1",
      "stack_out": [
        "tmp%0#0",
        "tmp%2#0",
        "as_u16_bytes%0#0",
        "concat%0#0"
      ]
    },
    "549": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%0#0",
        "tmp%2#0",
        "as_u16_bytes%0#0",
        "concat%0#0",
        "0"
      ]
    },
    "550": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%0#0",
        "tmp%2#0",
        "concat%0#0",
        "0",
        "as_u16_bytes%0#0"
      ]
    },
    "552": {
      "op": "replace3",
      "defined_out": [
        "as_Encoded(len+uint64[])%0#0",
        "tmp%0#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%2#0",
        "as_Encoded(len+uint64[])%0#0"
      ]
    },
    "553": {
      "op": "intc_2 // 10",
      "defined_out": [
        "10",
        "as_Encoded(len+uint64[])%0#0",
        "tmp%0#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%2#0",
        "as_Encoded(len+uint64[])%0#0",
        "10"
      ]
    },
    "554": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%0#0",
        "as_Encoded(len+uint64[])%0#0",
        "tmp%0#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%2#0",
        "as_Encoded(len+uint64[])%0#0",
        "aggregate%as_bytes%0#0"
      ]
    },
    "555": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%offset_as_uint16%0#0",
        "as_Encoded(len+uint64[])%0#0",
        "tmp%0#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%2#0",
        "as_Encoded(len+uint64[])%0#0",
        "aggregate%offset_as_uint16%0#0"
      ]
    },
    "558": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "tmp%0#0",
        "tmp%2#0",
        "as_Encoded(len+uint64[])%0#0",
        "aggregate%offset_as_uint16%0#0",
        "0x"
      ]
    },
    "559": {
      "op": "uncover 1",
      "stack_out": [
        "tmp%0#0",
        "tmp%2#0",
        "as_Encoded(len+uint64[])%0#0",
        "0x",
        "aggregate%offset_as_uint16%0#0"
      ]
    },
    "561": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%1#0",
        "as_Encoded(len+uint64[])%0#0",
        "tmp%0#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%2#0",
        "as_Encoded(len+uint64[])%0#0",
        "aggregate%head%1#0"
      ]
    },
    "562": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%0#0",
        "as_Encoded(len+uint64[])%0#0",
        "aggregate%head%1#0",
        "tmp%2#0"
      ]
    },
    "564": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(uint64)%0#0",
        "aggregate%head%1#0",
        "as_Encoded(len+uint64[])%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "as_Encoded(len+uint64[])%0#0",
        "aggregate%head%1#0",
        "aggregate%as_Encoded(uint64)%0#0"
      ]
    },
    "565": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%2#0",
        "as_Encoded(len+uint64[])%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "as_Encoded(len+uint64[])%0#0",
        "aggregate%head%2#0"
      ]
    },
    "566": {
      "op": "uncover 1",
      "stack_out": [
        "tmp%0#0",
        "aggregate%head%2#0",
        "as_Encoded(len+uint64[])%0#0"
      ]
    },
    "568": {
      "op": "concat",
      "defined_out": [
        "encoded_for_storage%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "encoded_for_storage%0#0"
      ]
    },
    "569": {
      "op": "uncover 1",
      "stack_out": [
        "encoded_for_storage%0#0",
        "tmp%0#0"
      ]
    },
    "571": {
      "op": "bytec 5 // \"loc\"",
      "stack_out": [
        "encoded_for_storage%0#0",
        "tmp%0#0",
        "\"loc\""
      ]
    },
    "573": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%0#0",
        "\"loc\"",
        "encoded_for_storage%0#0"
      ]
    },
    "575": {
      "op": "app_local_put",
      "stack_out": []
    },
    "576": {
      "retsub": true,
      "op": "retsub"
    },
    "577": {
      "subroutine": "algopy.arc4.ARC4Contract.approval_program",
      "params": {},
      "block": "approval_program",
      "stack_in": [],
      "op": "proto 0 1"
    },
    "580": {
      "op": "bytec_0 // \"\"",
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "581": {
      "op": "b approval_program_block@0"
    },
    "584": {
      "block": "approval_program_block@0",
      "stack_in": [
        "tmp%0#0"
      ],
      "op": "b approval_program_block@1"
    },
    "587": {
      "block": "approval_program_block@1",
      "stack_in": [
        "tmp%0#0"
      ],
      "op": "txn NumAppArgs",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%0#1"
      ]
    },
    "589": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%0#1",
        "0"
      ]
    },
    "590": {
      "op": "!=",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0"
      ]
    },
    "591": {
      "op": "bz approval_program_bare_routing@10",
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "594": {
      "op": "b approval_program_abi_routing@2"
    },
    "597": {
      "block": "approval_program_abi_routing@2",
      "stack_in": [
        "tmp%0#0"
      ],
      "op": "txna ApplicationArgs 0",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%2#0"
      ]
    },
    "600": {
      "op": "pushbytes 0xbec76d87 // method \"bootstrap()void\"",
      "defined_out": [
        "Method(bootstrap()void)",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%2#0",
        "Method(bootstrap()void)"
      ]
    },
    "606": {
      "op": "pushbytes 0xacc253ae // method \"mutate_tuple(uint64)void\"",
      "defined_out": [
        "Method(bootstrap()void)",
        "Method(mutate_tuple(uint64)void)",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%2#0",
        "Method(bootstrap()void)",
        "Method(mutate_tuple(uint64)void)"
      ]
    },
    "612": {
      "op": "pushbytes 0xe844940c // method \"mutate_box(uint64)void\"",
      "defined_out": [
        "Method(bootstrap()void)",
        "Method(mutate_box(uint64)void)",
        "Method(mutate_tuple(uint64)void)",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%2#0",
        "Method(bootstrap()void)",
        "Method(mutate_tuple(uint64)void)",
        "Method(mutate_box(uint64)void)"
      ]
    },
    "618": {
      "op": "pushbytes 0x6222ef1a // method \"mutate_global(uint64)void\"",
      "defined_out": [
        "Method(bootstrap()void)",
        "Method(mutate_box(uint64)void)",
        "Method(mutate_global(uint64)void)",
        "Method(mutate_tuple(uint64)void)",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%2#0",
        "Method(bootstrap()void)",
        "Method(mutate_tuple(uint64)void)",
        "Method(mutate_box(uint64)void)",
        "Method(mutate_global(uint64)void)"
      ]
    },
    "624": {
      "op": "pushbytes 0x1b269b50 // method \"mutate_local(uint64)void\"",
      "defined_out": [
        "Method(bootstrap()void)",
        "Method(mutate_box(uint64)void)",
        "Method(mutate_global(uint64)void)",
        "Method(mutate_local(uint64)void)",
        "Method(mutate_tuple(uint64)void)",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%2#0",
        "Method(bootstrap()void)",
        "Method(mutate_tuple(uint64)void)",
        "Method(mutate_box(uint64)void)",
        "Method(mutate_global(uint64)void)",
        "Method(mutate_local(uint64)void)"
      ]
    },
    "630": {
      "op": "uncover 5",
      "stack_out": [
        "tmp%0#0",
        "Method(bootstrap()void)",
        "Method(mutate_tuple(uint64)void)",
        "Method(mutate_box(uint64)void)",
        "Method(mutate_global(uint64)void)",
        "Method(mutate_local(uint64)void)",
        "tmp%2#0"
      ]
    },
    "632": {
      "op": "match approval_program_bootstrap_route@3 approval_program_mutate_tuple_route@4 approval_program_mutate_box_route@5 approval_program_mutate_global_route@6 approval_program_mutate_local_route@7",
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "644": {
      "op": "b approval_program_switch_case_default@8"
    },
    "647": {
      "block": "approval_program_switch_case_default@8",
      "stack_in": [
        "tmp%0#0"
      ],
      "op": "b approval_program_switch_case_next@9"
    },
    "650": {
      "block": "approval_program_switch_case_next@9",
      "stack_in": [
        "tmp%0#0"
      ],
      "op": "b approval_program_after_if_else@16"
    },
    "653": {
      "block": "approval_program_after_if_else@16",
      "stack_in": [
        "tmp%0#0"
      ],
      "op": "intc_0 // 0",
      "defined_out": [
        "test_cases.tuple_support.tuple_storage.NestedTuplesStorage.__puya_arc4_router__%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "test_cases.tuple_support.tuple_storage.NestedTuplesStorage.__puya_arc4_router__%0#0"
      ]
    },
    "654": {
      "op": "frame_bury 0",
      "defined_out": [],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "656": {
      "op": "b approval_program_after_inlined_test_cases.tuple_support.tuple_storage.NestedTuplesStorage.__puya_arc4_router__@17"
    },
    "659": {
      "block": "approval_program_after_inlined_test_cases.tuple_support.tuple_storage.NestedTuplesStorage.__puya_arc4_router__@17",
      "stack_in": [
        "tmp%0#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%0#0"
      ]
    },
    "661": {
      "op": "uncover 1"
    },
    "663": {
      "retsub": true,
      "op": "retsub"
    },
    "664": {
      "block": "approval_program_mutate_local_route@7",
      "stack_in": [
        "tmp%0#0"
      ],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%19#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%19#0"
      ]
    },
    "666": {
      "op": "intc_0 // NoOp",
      "defined_out": [
        "NoOp",
        "tmp%19#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%19#0",
        "NoOp"
      ]
    },
    "667": {
      "op": "==",
      "defined_out": [
        "tmp%20#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%20#0"
      ]
    },
    "668": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "669": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%21#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%21#0"
      ]
    },
    "671": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%21#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%21#0",
        "0"
      ]
    },
    "672": {
      "op": "!=",
      "defined_out": [
        "tmp%22#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%22#0"
      ]
    },
    "673": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "674": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded(uint64)%3#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "reinterpret_Encoded(uint64)%3#0"
      ]
    },
    "677": {
      "callsub": "test_cases.tuple_support.tuple_storage.NestedTuplesStorage.mutate_local",
      "op": "callsub mutate_local",
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "680": {
      "op": "intc_1 // 1",
      "defined_out": [
        "test_cases.tuple_support.tuple_storage.NestedTuplesStorage.__puya_arc4_router__%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "test_cases.tuple_support.tuple_storage.NestedTuplesStorage.__puya_arc4_router__%0#0"
      ]
    },
    "681": {
      "op": "frame_bury 0",
      "defined_out": [],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "683": {
      "op": "b approval_program_after_inlined_test_cases.tuple_support.tuple_storage.NestedTuplesStorage.__puya_arc4_router__@17"
    },
    "686": {
      "block": "approval_program_mutate_global_route@6",
      "stack_in": [
        "tmp%0#0"
      ],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%15#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%15#0"
      ]
    },
    "688": {
      "op": "intc_0 // NoOp",
      "defined_out": [
        "NoOp",
        "tmp%15#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%15#0",
        "NoOp"
      ]
    },
    "689": {
      "op": "==",
      "defined_out": [
        "tmp%16#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%16#0"
      ]
    },
    "690": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "691": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%17#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%17#0"
      ]
    },
    "693": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%17#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%17#0",
        "0"
      ]
    },
    "694": {
      "op": "!=",
      "defined_out": [
        "tmp%18#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%18#0"
      ]
    },
    "695": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "696": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded(uint64)%2#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "reinterpret_Encoded(uint64)%2#0"
      ]
    },
    "699": {
      "callsub": "test_cases.tuple_support.tuple_storage.NestedTuplesStorage.mutate_global",
      "op": "callsub mutate_global",
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "702": {
      "op": "intc_1 // 1",
      "defined_out": [
        "test_cases.tuple_support.tuple_storage.NestedTuplesStorage.__puya_arc4_router__%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "test_cases.tuple_support.tuple_storage.NestedTuplesStorage.__puya_arc4_router__%0#0"
      ]
    },
    "703": {
      "op": "frame_bury 0",
      "defined_out": [],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "705": {
      "op": "b approval_program_after_inlined_test_cases.tuple_support.tuple_storage.NestedTuplesStorage.__puya_arc4_router__@17"
    },
    "708": {
      "block": "approval_program_mutate_box_route@5",
      "stack_in": [
        "tmp%0#0"
      ],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%11#0"
      ]
    },
    "710": {
      "op": "intc_0 // NoOp",
      "defined_out": [
        "NoOp",
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%11#0",
        "NoOp"
      ]
    },
    "711": {
      "op": "==",
      "defined_out": [
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%12#0"
      ]
    },
    "712": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "713": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%13#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%13#0"
      ]
    },
    "715": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%13#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%13#0",
        "0"
      ]
    },
    "716": {
      "op": "!=",
      "defined_out": [
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%14#0"
      ]
    },
    "717": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "718": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded(uint64)%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "reinterpret_Encoded(uint64)%1#0"
      ]
    },
    "721": {
      "callsub": "test_cases.tuple_support.tuple_storage.NestedTuplesStorage.mutate_box",
      "op": "callsub mutate_box",
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "724": {
      "op": "intc_1 // 1",
      "defined_out": [
        "test_cases.tuple_support.tuple_storage.NestedTuplesStorage.__puya_arc4_router__%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "test_cases.tuple_support.tuple_storage.NestedTuplesStorage.__puya_arc4_router__%0#0"
      ]
    },
    "725": {
      "op": "frame_bury 0",
      "defined_out": [],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "727": {
      "op": "b approval_program_after_inlined_test_cases.tuple_support.tuple_storage.NestedTuplesStorage.__puya_arc4_router__@17"
    },
    "730": {
      "block": "approval_program_mutate_tuple_route@4",
      "stack_in": [
        "tmp%0#0"
      ],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%7#0"
      ]
    },
    "732": {
      "op": "intc_0 // NoOp",
      "defined_out": [
        "NoOp",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%7#0",
        "NoOp"
      ]
    },
    "733": {
      "op": "==",
      "defined_out": [
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%8#0"
      ]
    },
    "734": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "735": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%9#0"
      ]
    },
    "737": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%9#0",
        "0"
      ]
    },
    "738": {
      "op": "!=",
      "defined_out": [
        "tmp%10#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%10#0"
      ]
    },
    "739": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "740": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded(uint64)%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "reinterpret_Encoded(uint64)%0#0"
      ]
    },
    "743": {
      "callsub": "test_cases.tuple_support.tuple_storage.NestedTuplesStorage.mutate_tuple",
      "op": "callsub mutate_tuple",
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "746": {
      "op": "intc_1 // 1",
      "defined_out": [
        "test_cases.tuple_support.tuple_storage.NestedTuplesStorage.__puya_arc4_router__%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "test_cases.tuple_support.tuple_storage.NestedTuplesStorage.__puya_arc4_router__%0#0"
      ]
    },
    "747": {
      "op": "frame_bury 0",
      "defined_out": [],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "749": {
      "op": "b approval_program_after_inlined_test_cases.tuple_support.tuple_storage.NestedTuplesStorage.__puya_arc4_router__@17"
    },
    "752": {
      "block": "approval_program_bootstrap_route@3",
      "stack_in": [
        "tmp%0#0"
      ],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%3#0"
      ]
    },
    "754": {
      "op": "intc_1 // OptIn",
      "defined_out": [
        "OptIn",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%3#0",
        "OptIn"
      ]
    },
    "755": {
      "op": "==",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%4#0"
      ]
    },
    "756": {
      "error": "OnCompletion is not OptIn",
      "op": "assert // OnCompletion is not OptIn",
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "757": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%5#0"
      ]
    },
    "759": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%5#0",
        "0"
      ]
    },
    "760": {
      "op": "!=",
      "defined_out": [
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%6#0"
      ]
    },
    "761": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "762": {
      "callsub": "test_cases.tuple_support.tuple_storage.NestedTuplesStorage.bootstrap",
      "op": "callsub bootstrap"
    },
    "765": {
      "op": "intc_1 // 1",
      "defined_out": [
        "test_cases.tuple_support.tuple_storage.NestedTuplesStorage.__puya_arc4_router__%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "test_cases.tuple_support.tuple_storage.NestedTuplesStorage.__puya_arc4_router__%0#0"
      ]
    },
    "766": {
      "op": "frame_bury 0",
      "defined_out": [],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "768": {
      "op": "b approval_program_after_inlined_test_cases.tuple_support.tuple_storage.NestedTuplesStorage.__puya_arc4_router__@17"
    },
    "771": {
      "block": "approval_program_bare_routing@10",
      "stack_in": [
        "tmp%0#0"
      ],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%23#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%23#0"
      ]
    },
    "773": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%23#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%23#0",
        "0"
      ]
    },
    "774": {
      "op": "uncover 1",
      "stack_out": [
        "tmp%0#0",
        "0",
        "tmp%23#0"
      ]
    },
    "776": {
      "op": "match approval_program___algopy_default_create@11",
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "780": {
      "op": "b approval_program_switch_case_default@14"
    },
    "783": {
      "block": "approval_program_switch_case_default@14",
      "stack_in": [
        "tmp%0#0"
      ],
      "op": "b approval_program_switch_case_next@15"
    },
    "786": {
      "block": "approval_program_switch_case_next@15",
      "stack_in": [
        "tmp%0#0"
      ],
      "op": "b approval_program_after_if_else@16"
    },
    "789": {
      "block": "approval_program___algopy_default_create@11",
      "stack_in": [
        "tmp%0#0"
      ],
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%24#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%24#0"
      ]
    },
    "791": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%24#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%24#0",
        "0"
      ]
    },
    "792": {
      "op": "==",
      "defined_out": [
        "tmp%25#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%25#0"
      ]
    },
    "793": {
      "error": "can only call when creating",
      "op": "assert // can only call when creating",
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "794": {
      "op": "b approval_program_block@12"
    },
    "797": {
      "block": "approval_program_block@12",
      "stack_in": [
        "tmp%0#0"
      ],
      "op": "b approval_program_after_inlined_test_cases.tuple_support.tuple_storage.NestedTuplesStorage.__algopy_default_create@13"
    },
    "800": {
      "block": "approval_program_after_inlined_test_cases.tuple_support.tuple_storage.NestedTuplesStorage.__algopy_default_create@13",
      "stack_in": [
        "tmp%0#0"
      ],
      "op": "intc_1 // 1",
      "defined_out": [
        "test_cases.tuple_support.tuple_storage.NestedTuplesStorage.__puya_arc4_router__%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "test_cases.tuple_support.tuple_storage.NestedTuplesStorage.__puya_arc4_router__%0#0"
      ]
    },
    "801": {
      "op": "frame_bury 0",
      "defined_out": [],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "803": {
      "op": "b approval_program_after_inlined_test_cases.tuple_support.tuple_storage.NestedTuplesStorage.__puya_arc4_router__@17"
    }
  }
}