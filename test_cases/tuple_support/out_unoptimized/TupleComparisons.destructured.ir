contract test_cases.tuple_support.tuple_comparisons.TupleComparisons:
    program approval:
        subroutine test_cases.tuple_support.tuple_comparisons.TupleComparisons.approval_program() -> bool:
            block@0: // L5
                test_cases.tuple_support.tuple_comparisons.test_tuple_cmp_eval()
                return 1u
        
        subroutine test_cases.tuple_support.tuple_comparisons.test_tuple_cmp_eval() -> void:
            block@0: // L13
                let tmp%0#0: bool = (!= 1u 3u)
                goto tmp%0#0 ? block@2 : block@1
            block@1: // or_contd_L21
                let tmp%1#0: uint64 = test_cases.tuple_support.tuple_comparisons.log_and_return(43u)
                let tmp%2#0: bool = (!= 2u tmp%1#0)
                goto tmp%2#0 ? block@2 : block@3
            block@2: // bool_true_L21
                let or_result%0#0: bool = 1u
                goto block@4
            block@3: // bool_false_L21
                let or_result%0#0: bool = 0u
                goto block@4
            block@4: // bool_merge_L21
                (assert or_result%0#0)
                let tmp%3#0: bool = (== 1u 3u)
                goto tmp%3#0 ? block@5 : block@7
            block@5: // and_contd_L22
                let tmp%4#0: uint64 = test_cases.tuple_support.tuple_comparisons.log_and_return(44u)
                let tmp%5#0: bool = (== 2u tmp%4#0)
                goto tmp%5#0 ? block@6 : block@7
            block@6: // bool_true_L22
                let and_result%0#0: bool = 1u
                goto block@8
            block@7: // bool_false_L22
                let and_result%0#0: bool = 0u
                goto block@8
            block@8: // bool_merge_L22
                let tmp#0: bool = and_result%0#0
                let tmp%6#0: bool = (! tmp#0)
                (assert tmp%6#0)
                return 
        
        subroutine test_cases.tuple_support.tuple_comparisons.log_and_return(val: uint64) -> uint64:
            block@0: // L26
                let tmp%0#0: bytes = (itob val#0)
                (log tmp%0#0)
                return val#0
    
    program clear-state:
        subroutine test_cases.tuple_support.tuple_comparisons.TupleComparisons.clear_state_program() -> bool:
            block@0: // L9
                return 1u