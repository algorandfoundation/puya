{
  "version": 3,
  "sources": [
    "../nested_tuples.py"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoLQ;;;;;;;;;;;;;;;;;;;;AAAJ;AACO;;AAAP;AAGJ;;;;;;AAEQ;;;;;;;;;;;;;;;;;;;;;;;AAAJ;AACA;;AAAA;;AAAA;AAGJ;;;;;;AAEQ;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAJ;AACA;;AAAA;AAGJ;;;;;;AAII;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAEA;;AAAA;;AAAA;;AAAA;;AAAA;AAGJ;;;;;;AAEI;;AAAA;;AACA;;AAAA;AAGJ;;;;;;AAEqB;;AAAA;;AAAA;AAAjB;;AAAM;AACU;AAAT;AAAP;AADsC;;AAErB;;AAAV;AAAP;AACO;AAAU;AAAV;AAAa;;AAAA;;AAAA;AAAb;;AAAA;AAAA;AAAP;AACO;AAAc;AAAd;AAAP;AACqB;;AAAA;;AAAA;AAAd;;AAAA;AAAP;AAEY;AAAL;AAAP;AACY;;AAAA;;AAAA;AAAL;AAAP;;;;;AAcQ;;AAMQ;;AAAT;AAAP;AAbI;AAckB;AAAf;AALH;;AAKqB;;AAAlB;AAAA;AAAP;AAVY;;;AAWO;;;AAAZ;AAVK;;;AAUY;;;AAAjB;AAAA;AAAP;;AAGJ;;;;;;AAGS;AADL;;AAAA;AAGK;AAHL;;AACK;AAIa;AAAX;AAAP;AAJK;AAKW;AAAT;AAAP;AACO;AAAW;AAAX;AAAP;AACO;AAAA;;AAAA;AAAP;AALK;AAMa;AAAX;AAAP;AANK;AAOW;AAAT;AAAP;AAEJ;;AAAA;;;AAAA;;;AAEa;;AADL;;AAEK;;AAFL;;AAGK;;AAHL;;;;;AAKe;AAAA;;AAAA;;AAAA;AAAZ;;AAAA;AAAP;AACA;;AACe;AAAA;;AAAA;;AAAA;AAAR;AAAP;AACO;;AAAA;;AAAA;AAAP;AAEA;;AAAA;AACA;;AAAA;AACc;AAAA;;AAAA;;AAAA;AAAP;AAAP;AACmB;AAAA;;AAAA;;AAAA;AAAZ;AAAP;;;;;AAOQ;AAAA;AAAA;;;AACI;;AADJ;AAKR;AAAe;;AAAf;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAA;;AAAA;AACO;AAAA;AAAkB;AAAlB;AAAP;;AAGJ;;;;;;;;;AAIY;;AAFJ;AACA;;;;AAIA;;AAAA;;AACS;AAAT;;AAAA;AAAA;;;;;AAFR;;AAAA;;;;;;;;AAAA;;;;;;AAJQ;AAQA;;AAPA;AAOA;;;;;AACS;;AAAA;;AAAA;AAAT;;AAAA;AAAA;;;;;AADR;;AAAA;;;;;;;;AAAA;;;AAGW;;AAAS;AAAT;AAAc;;AAAd;AAAP;;;;;;AAVI;AAOA;;AAPA;AAOA;;;;;;;;AARA;AAQA;;AARA;AAQA;;;;;;;;AAPA;AAOA;;AARA;AAQA;;;;;;;;;AAPA;AAGA;;AAHA;AAGA;;;;;;;;AAJA;AAIA;;AAJA;AAIA;;;;;;;;AAHA;AAGA;;AAJA;AAIA;;;;;;;;AA5OH;;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;;AAAA;AAAA;;;;AAIA;;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;;AAIA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;;;AAIA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;;AAIA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;;AAIA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;;AAKA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;;AAIA;;;AAAA;;;AAAA;;;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;;AAKA;;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;;AAmuC;;AAAQ;AAAR;AAAtB;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAT;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAER;;;;;;AAEe;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAO;;AAAP;;AAAA;AAAA;AAAP;;AAAA;AAER;;;;;;AAEwB;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAT;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAP;AAER;;;;;;;;AAE6C;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAf;;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;;AAAA;;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;;;;;AAAtB;;AAAA;;AAAA;;AACA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;AADsB;AAAA;;AAAA;AAAA;;;;;AAG9B;;;;;;;;AAE4B;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAb;;AAAA;;AAAA;AAAqC;;AAAW;AAAtB;;;AAAA;;AAAA;;AAA1B;AAAA;;;AAAA;;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;;;;;AAAP;AAAiC;;AAAA;;AAAA;;AAAA;;;;;AAEzC;;;;;;;;AAE0C;;AAAA;;;AACjB;;;AAA+C;;AAAW;AAAtB;;;AAAA;;AAAA;;AAA9C;AAAA;;AAAA;AAAA;;;AAAA;;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;;;;;AAAP;AAAqD;;AAAA;;AAAA;;AAAA;;;;;AAE7D;;;;;;AAGgB;AAAA;AAAA;;;AAAkB;;AAAlB;AAOR;AAAc;;AAAd;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAA;;AAAA;AACA;AAAe;;;;;;;;;;AAAf;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAA;;AAAA;AACS;AAAjB;AAAiB;;;;AAAA;;AAAO;;AAAP;AAAjB;;;AAAA;;;AACmB;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAP;;;;AADK;;AAAA;AAAA;AAAA;;;;;AAKT;;AAZU;AACA;AACA;AAUV;;AAAA;;AAAA;;;;AAIO;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AACP;AAAY;;AAAZ;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAA;;AAAA;AACW;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;;AAAA;;AAAX;;AAAA;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;;;;AAIK;AAAc;AACZ;;;AAAA;;AAAiB;AAAjB;AAAA;;AAAkC;AAAlC;AAAA;AAAP;AADmB;AAOF;AAAV;AAAP;AAPK;AAGA;AAAW;AADX;AAFA;AAAc;AAAA;AASI;;;AAAA;;AAAA;;AAAA;;AAAA;;AAAvB;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AACkB;AAAX;AAAA;;AAAyB;AAAzB;AAAA;AAAP;AACkB;AAAX;AAAA;;AAAsB;AAAtB;AAAA;AAAP;AACY;AAAL;AAAP;AAEgB;AAAW;AAA3B;;;AACA;;;AACoB;AAAoB;AAAxC;;;AACoB;AAAoB;AAAxC;;;AACA;;;AAhBK;AAAA;AAkBE;AApBF;AAAA;AAoBE;AApBY;AAAA;AAoBZ;AAAA;AAAA;AAAP;AAEA;;;AAEA;;;AACO;AAAP;AAER;;;;;;AAIQ;;AAAA;;AAAA;;AAAA;;AACA;;AAAA;;AAAA;AAER;;;;;;AAEQ;;AAAA;;AAAA;;AACA;;AAAA;;AAAA;;AAAA;AAER;;;;;;AAEQ;;AAAA;;AAAA;;AAAA;;AAAA;;AACA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;;;AAIA;AAAA;;AAAA;AAAA;AAAgC;AAAhC;AAAA;;AAAA;;AAAA;AACQ;;AAAc;AAAY;;;;;;AAAlC;AAER;;;;;;;;;AAEQ;;AAA+B;AAA/B;AACS;;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;;;AAAA;;;AAAA;;AAAA;;;;;AAAT;;AACuB;;AAAhB;AAAP;AACO;AAAA;;AAAA;AAAA;AAAgC;AAAhC;AAAP;;AAFgC;;;AAAA;;AAAA;;AAAA;;;;;;;;;;;AA9HxC;;AAAA;AAAA;AAAA;;;AAAA;;;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;;AAAA;;;AAAA;;;AAAA;;;;;;AAAA;;;;;;AAAA;;;;;;AAAA;;;;;;AAAA;;;;;;AAAA;;;;;;AAAA;;;;;;AAAA;;;;;;AAAA;;;;;;AAAA;;;;;;AAAA;;;;;;AAAA;;;;;;AAAA;;;;;;AAAA;;;;;;AAAA;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;;;;;;;;;AAAA;AAiHK;;;;;;AALA;;;;;;AAPA;;;;;;AA7BA;;;;;;AANA;;;;;;AAnBA;;;;;;AALA;;;;;;AAJA;;;;;;AALA;;;;;;AAJA;;;;;;AAJA;;;;;;AAJA;;;;;;AAJA;;;;;;AAJA;;;;;;;;;;;;;;;;;;;;;;;;;;",
  "op_pc_offset": 0,
  "pc_events": {
    "1": {
      "subroutine": "test_cases.tuple_support.nested_tuples.NestedTuples.__algopy_entrypoint_with_init",
      "params": {},
      "block": "main",
      "stack_in": [],
      "op": "intcblock 0 8 1 2"
    },
    "7": {
      "op": "bytecblock 0x 0x151f7c75 \"There\" \"Hi\" \"build_nested_call_count\" \"box\" \"twm\" 0x0000000000000001 0x00 0x0000000000000000 \"pwl\" \"hi\""
    },
    "83": {
      "op": "b block@0"
    },
    "86": {
      "block": "block@0",
      "stack_in": [],
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "88": {
      "op": "bnz after_if_else@2",
      "stack_out": []
    },
    "91": {
      "op": "b call___init__@1"
    },
    "94": {
      "block": "call___init__@1",
      "stack_in": [],
      "callsub": "test_cases.tuple_support.nested_tuples.NestedTuples.__init__",
      "op": "callsub __init__"
    },
    "97": {
      "op": "b after_if_else@2"
    },
    "100": {
      "block": "after_if_else@2",
      "stack_in": [],
      "callsub": "algopy.arc4.ARC4Contract.approval_program",
      "op": "callsub approval_program",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "103": {
      "op": "return",
      "stack_out": []
    },
    "104": {
      "subroutine": "test_cases.tuple_support.nested_tuples.get_sender_inefficiently",
      "params": {},
      "block": "get_sender_inefficiently",
      "stack_in": [],
      "op": "b get_sender_inefficiently_block@0"
    },
    "107": {
      "block": "get_sender_inefficiently_block@0",
      "stack_in": [],
      "op": "pushbytes \"Order is important\"",
      "defined_out": [
        "\"Order is important\""
      ],
      "stack_out": [
        "\"Order is important\""
      ]
    },
    "127": {
      "op": "log",
      "stack_out": []
    },
    "128": {
      "op": "txn Sender",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "130": {
      "retsub": true,
      "op": "retsub"
    },
    "131": {
      "subroutine": "test_cases.tuple_support.nested_tuples.simple_tup",
      "params": {
        "a#0": "uint64",
        "b#0": "uint64"
      },
      "block": "simple_tup",
      "stack_in": [],
      "op": "proto 2 2"
    },
    "134": {
      "op": "b simple_tup_block@0"
    },
    "137": {
      "block": "simple_tup_block@0",
      "stack_in": [],
      "op": "pushbytes \"I'm just a simple tup\"",
      "defined_out": [
        "\"I'm just a simple tup\""
      ],
      "stack_out": [
        "\"I'm just a simple tup\""
      ]
    },
    "160": {
      "op": "log",
      "stack_out": []
    },
    "161": {
      "op": "frame_dig -2",
      "defined_out": [
        "a#0 (copy)"
      ],
      "stack_out": [
        "a#0 (copy)"
      ]
    },
    "163": {
      "op": "frame_dig -1",
      "defined_out": [
        "a#0 (copy)",
        "b#0 (copy)"
      ],
      "stack_out": [
        "a#0 (copy)",
        "b#0 (copy)"
      ]
    },
    "165": {
      "retsub": true,
      "op": "retsub"
    },
    "166": {
      "subroutine": "test_cases.tuple_support.nested_tuples.echo",
      "params": {
        "s#0": "bytes"
      },
      "block": "echo",
      "stack_in": [],
      "op": "proto 1 1"
    },
    "169": {
      "op": "b echo_block@0"
    },
    "172": {
      "block": "echo_block@0",
      "stack_in": [],
      "op": "pushbytes \"Is there an echo in here?\"",
      "defined_out": [
        "\"Is there an echo in here?\""
      ],
      "stack_out": [
        "\"Is there an echo in here?\""
      ]
    },
    "199": {
      "op": "log",
      "stack_out": []
    },
    "200": {
      "op": "frame_dig -1",
      "defined_out": [
        "s#0 (copy)"
      ],
      "stack_out": [
        "s#0 (copy)"
      ]
    },
    "202": {
      "retsub": true,
      "op": "retsub"
    },
    "203": {
      "subroutine": "test_cases.tuple_support.nested_tuples.test_rearrange",
      "params": {
        "_a#0": "bytes",
        "args.0#0": "uint64",
        "args.1#0": "uint64",
        "args.2.0#0": "uint64",
        "args.2.1.0#0": "bytes",
        "args.2.1.1#0": "bytes",
        "_b#0": "bytes"
      },
      "block": "test_rearrange",
      "stack_in": [],
      "op": "proto 7 5"
    },
    "206": {
      "op": "b test_rearrange_block@0"
    },
    "209": {
      "block": "test_rearrange_block@0",
      "stack_in": [],
      "op": "frame_dig -6",
      "defined_out": [
        "a#0"
      ],
      "stack_out": [
        "a#0"
      ]
    },
    "211": {
      "op": "frame_dig -5",
      "defined_out": [
        "a#0",
        "b#0"
      ],
      "stack_out": [
        "a#0",
        "b#0"
      ]
    },
    "213": {
      "op": "frame_dig -4",
      "defined_out": [
        "a#0",
        "b#0",
        "c#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "c#0"
      ]
    },
    "215": {
      "op": "frame_dig -3",
      "defined_out": [
        "a#0",
        "b#0",
        "c#0",
        "d#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "c#0",
        "d#0"
      ]
    },
    "217": {
      "op": "frame_dig -2",
      "defined_out": [
        "a#0",
        "args.2.1.1#0 (copy)",
        "b#0",
        "c#0",
        "d#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "c#0",
        "d#0",
        "args.2.1.1#0 (copy)"
      ]
    },
    "219": {
      "op": "cover 1",
      "defined_out": [
        "a#0",
        "b#0",
        "c#0",
        "d#0",
        "e#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "c#0",
        "e#0",
        "d#0"
      ]
    },
    "221": {
      "op": "uncover 4",
      "stack_out": [
        "b#0",
        "c#0",
        "e#0",
        "d#0",
        "a#0"
      ]
    },
    "223": {
      "op": "uncover 4",
      "stack_out": [
        "c#0",
        "e#0",
        "d#0",
        "a#0",
        "b#0"
      ]
    },
    "225": {
      "op": "uncover 4",
      "stack_out": [
        "e#0",
        "d#0",
        "a#0",
        "b#0",
        "c#0"
      ]
    },
    "227": {
      "op": "uncover 4",
      "stack_out": [
        "d#0",
        "a#0",
        "b#0",
        "c#0",
        "e#0"
      ]
    },
    "229": {
      "retsub": true,
      "op": "retsub"
    },
    "230": {
      "subroutine": "test_cases.tuple_support.nested_tuples.test_swap",
      "params": {
        "args.0#0": "bytes",
        "args.1#0": "bytes"
      },
      "block": "test_swap",
      "stack_in": [],
      "op": "proto 2 2"
    },
    "233": {
      "op": "b test_swap_block@0"
    },
    "236": {
      "block": "test_swap_block@0",
      "stack_in": [],
      "op": "frame_dig -2",
      "defined_out": [
        "a#0"
      ],
      "stack_out": [
        "a#0"
      ]
    },
    "238": {
      "op": "frame_dig -1",
      "defined_out": [
        "a#0",
        "b#0"
      ],
      "stack_out": [
        "a#0",
        "b#0"
      ]
    },
    "240": {
      "op": "uncover 1",
      "stack_out": [
        "b#0",
        "a#0"
      ]
    },
    "242": {
      "retsub": true,
      "op": "retsub"
    },
    "243": {
      "subroutine": "test_cases.tuple_support.nested_tuples.test_intrinsics",
      "params": {
        "num1#0": "uint64",
        "num2#0": "uint64"
      },
      "block": "test_intrinsics",
      "stack_in": [],
      "op": "proto 2 0"
    },
    "246": {
      "op": "b test_intrinsics_block@0"
    },
    "249": {
      "block": "test_intrinsics_block@0",
      "stack_in": [],
      "op": "frame_dig -2",
      "defined_out": [
        "num1#0 (copy)"
      ],
      "stack_out": [
        "num1#0 (copy)"
      ]
    },
    "251": {
      "op": "frame_dig -1",
      "defined_out": [
        "num1#0 (copy)",
        "num2#0 (copy)"
      ],
      "stack_out": [
        "num1#0 (copy)",
        "num2#0 (copy)"
      ]
    },
    "253": {
      "op": "addw",
      "defined_out": [
        "nt.1.0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "nt.1.0#0",
        "tmp%1#0"
      ]
    },
    "254": {
      "op": "cover 1",
      "defined_out": [
        "nt.1.0#0",
        "nt.1.1#0"
      ],
      "stack_out": [
        "nt.1.1#0",
        "nt.1.0#0"
      ]
    },
    "256": {
      "op": "intc_2 // 1",
      "defined_out": [
        "1",
        "nt.1.0#0",
        "nt.1.1#0"
      ],
      "stack_out": [
        "nt.1.1#0",
        "nt.1.0#0",
        "1"
      ]
    },
    "257": {
      "op": "intc_2 // 1",
      "stack_out": [
        "nt.1.1#0",
        "nt.1.0#0",
        "1",
        "1"
      ]
    },
    "258": {
      "op": "==",
      "defined_out": [
        "nt.1.0#0",
        "nt.1.1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "nt.1.1#0",
        "nt.1.0#0",
        "tmp%2#0"
      ]
    },
    "259": {
      "op": "assert",
      "stack_out": [
        "nt.1.1#0",
        "nt.1.0#0"
      ]
    },
    "260": {
      "op": "pushint 42 // 42",
      "defined_out": [
        "42",
        "nt.1.0#0",
        "nt.1.1#0"
      ],
      "stack_out": [
        "nt.1.1#0",
        "nt.1.0#0",
        "42"
      ]
    },
    "262": {
      "op": "pushint 42 // 42",
      "stack_out": [
        "nt.1.1#0",
        "nt.1.0#0",
        "42",
        "42"
      ]
    },
    "264": {
      "op": "==",
      "defined_out": [
        "nt.1.0#0",
        "nt.1.1#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "nt.1.1#0",
        "nt.1.0#0",
        "tmp%3#0"
      ]
    },
    "265": {
      "op": "assert",
      "stack_out": [
        "nt.1.1#0",
        "nt.1.0#0"
      ]
    },
    "266": {
      "op": "dup",
      "defined_out": [
        "nt.1.0#0",
        "nt.1.0#0 (copy)",
        "nt.1.1#0"
      ],
      "stack_out": [
        "nt.1.1#0",
        "nt.1.0#0",
        "nt.1.0#0 (copy)"
      ]
    },
    "267": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "nt.1.0#0",
        "nt.1.0#0 (copy)",
        "nt.1.1#0"
      ],
      "stack_out": [
        "nt.1.1#0",
        "nt.1.0#0",
        "nt.1.0#0 (copy)",
        "0"
      ]
    },
    "268": {
      "op": "==",
      "defined_out": [
        "nt.1.0#0",
        "nt.1.1#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "nt.1.1#0",
        "nt.1.0#0",
        "tmp%4#0"
      ]
    },
    "269": {
      "op": "frame_dig -2",
      "stack_out": [
        "nt.1.1#0",
        "nt.1.0#0",
        "tmp%4#0",
        "num1#0 (copy)"
      ]
    },
    "271": {
      "op": "frame_dig -1",
      "stack_out": [
        "nt.1.1#0",
        "nt.1.0#0",
        "tmp%4#0",
        "num1#0 (copy)",
        "num2#0 (copy)"
      ]
    },
    "273": {
      "op": "+",
      "defined_out": [
        "nt.1.0#0",
        "nt.1.1#0",
        "tmp%4#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "nt.1.1#0",
        "nt.1.0#0",
        "tmp%4#0",
        "tmp%5#0"
      ]
    },
    "274": {
      "op": "dig 3",
      "defined_out": [
        "nt.1.0#0",
        "nt.1.1#0",
        "nt.1.1#0 (copy)",
        "tmp%4#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "nt.1.1#0",
        "nt.1.0#0",
        "tmp%4#0",
        "tmp%5#0",
        "nt.1.1#0 (copy)"
      ]
    },
    "276": {
      "op": "==",
      "defined_out": [
        "nt.1.0#0",
        "nt.1.1#0",
        "tmp%4#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "nt.1.1#0",
        "nt.1.0#0",
        "tmp%4#0",
        "tmp%6#0"
      ]
    },
    "277": {
      "op": "&&",
      "defined_out": [
        "nt.1.0#0",
        "nt.1.1#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "nt.1.1#0",
        "nt.1.0#0",
        "tmp%7#0"
      ]
    },
    "278": {
      "op": "assert",
      "stack_out": [
        "nt.1.1#0",
        "nt.1.0#0"
      ]
    },
    "279": {
      "op": "dup",
      "stack_out": [
        "nt.1.1#0",
        "nt.1.0#0",
        "nt.1.0#0 (copy)"
      ]
    },
    "280": {
      "op": "intc_0 // 0",
      "stack_out": [
        "nt.1.1#0",
        "nt.1.0#0",
        "nt.1.0#0 (copy)",
        "0"
      ]
    },
    "281": {
      "op": "==",
      "defined_out": [
        "nt.1.0#0",
        "nt.1.1#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "nt.1.1#0",
        "nt.1.0#0",
        "tmp%8#0"
      ]
    },
    "282": {
      "op": "assert",
      "stack_out": [
        "nt.1.1#0",
        "nt.1.0#0"
      ]
    },
    "283": {
      "op": "frame_dig -2",
      "stack_out": [
        "nt.1.1#0",
        "nt.1.0#0",
        "num1#0 (copy)"
      ]
    },
    "285": {
      "op": "frame_dig -1",
      "stack_out": [
        "nt.1.1#0",
        "nt.1.0#0",
        "num1#0 (copy)",
        "num2#0 (copy)"
      ]
    },
    "287": {
      "op": "+",
      "defined_out": [
        "nt.1.0#0",
        "nt.1.1#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "nt.1.1#0",
        "nt.1.0#0",
        "tmp%9#0"
      ]
    },
    "288": {
      "op": "dig 2",
      "stack_out": [
        "nt.1.1#0",
        "nt.1.0#0",
        "tmp%9#0",
        "nt.1.1#0 (copy)"
      ]
    },
    "290": {
      "op": "==",
      "defined_out": [
        "nt.1.0#0",
        "nt.1.1#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "nt.1.1#0",
        "nt.1.0#0",
        "tmp%10#0"
      ]
    },
    "291": {
      "op": "assert",
      "defined_out": [
        "x#0",
        "y#0"
      ],
      "stack_out": [
        "y#0",
        "x#0"
      ]
    },
    "292": {
      "op": "intc_0 // 0",
      "stack_out": [
        "y#0",
        "x#0",
        "0"
      ]
    },
    "293": {
      "op": "==",
      "defined_out": [
        "tmp%11#0",
        "y#0"
      ],
      "stack_out": [
        "y#0",
        "tmp%11#0"
      ]
    },
    "294": {
      "op": "assert",
      "stack_out": [
        "y#0"
      ]
    },
    "295": {
      "op": "frame_dig -2",
      "stack_out": [
        "y#0",
        "num1#0 (copy)"
      ]
    },
    "297": {
      "op": "frame_dig -1",
      "stack_out": [
        "y#0",
        "num1#0 (copy)",
        "num2#0 (copy)"
      ]
    },
    "299": {
      "op": "+",
      "defined_out": [
        "tmp%12#0",
        "y#0"
      ],
      "stack_out": [
        "y#0",
        "tmp%12#0"
      ]
    },
    "300": {
      "op": "==",
      "defined_out": [
        "tmp%13#0"
      ],
      "stack_out": [
        "tmp%13#0"
      ]
    },
    "301": {
      "op": "assert",
      "stack_out": []
    },
    "302": {
      "retsub": true,
      "op": "retsub"
    },
    "303": {
      "subroutine": "test_cases.tuple_support.nested_tuples.test_nested_slicing",
      "params": {},
      "block": "test_nested_slicing",
      "stack_in": [],
      "op": "b test_nested_slicing_block@0"
    },
    "306": {
      "block": "test_nested_slicing_block@0",
      "stack_in": [],
      "op": "pushint 4 // 4",
      "defined_out": [
        "4"
      ],
      "stack_out": [
        "4"
      ]
    },
    "308": {
      "op": "pushint 4 // 4",
      "stack_out": [
        "4",
        "4"
      ]
    },
    "310": {
      "op": "==",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "311": {
      "op": "assert",
      "stack_out": []
    },
    "312": {
      "op": "intc_3 // 2",
      "defined_out": [
        "2"
      ],
      "stack_out": [
        "2"
      ]
    },
    "313": {
      "op": "intc_3 // 2",
      "stack_out": [
        "2",
        "2"
      ]
    },
    "314": {
      "op": "==",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "315": {
      "op": "pushint 5 // 5",
      "defined_out": [
        "5",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "5"
      ]
    },
    "317": {
      "op": "pushint 5 // 5",
      "stack_out": [
        "tmp%1#0",
        "5",
        "5"
      ]
    },
    "319": {
      "op": "==",
      "defined_out": [
        "tmp%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%2#0"
      ]
    },
    "320": {
      "op": "&&",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "321": {
      "op": "assert",
      "stack_out": []
    },
    "322": {
      "op": "pushbytes \"a\"",
      "defined_out": [
        "\"a\""
      ],
      "stack_out": [
        "\"a\""
      ]
    },
    "325": {
      "op": "pushbytes \"a\"",
      "stack_out": [
        "\"a\"",
        "\"a\""
      ]
    },
    "328": {
      "op": "==",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "329": {
      "op": "pushbytes \"b\"",
      "defined_out": [
        "\"b\"",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "\"b\""
      ]
    },
    "332": {
      "op": "pushbytes \"b\"",
      "stack_out": [
        "tmp%4#0",
        "\"b\"",
        "\"b\""
      ]
    },
    "335": {
      "op": "==",
      "defined_out": [
        "tmp%4#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "tmp%5#0"
      ]
    },
    "336": {
      "op": "&&",
      "defined_out": [
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0"
      ]
    },
    "337": {
      "op": "assert",
      "stack_out": []
    },
    "338": {
      "retsub": true,
      "op": "retsub"
    },
    "339": {
      "subroutine": "test_cases.tuple_support.nested_tuples.test_nested_singles",
      "params": {
        "one#0": "uint64",
        "reassign#0": "uint64"
      },
      "block": "test_nested_singles",
      "stack_in": [],
      "op": "proto 2 0"
    },
    "342": {
      "op": "b test_nested_singles_block@0"
    },
    "345": {
      "block": "test_nested_singles_block@0",
      "stack_in": [],
      "op": "intc_0 // 0",
      "defined_out": [],
      "stack_out": [
        "s.0.0#0"
      ]
    },
    "346": {
      "op": "frame_dig -2",
      "defined_out": [
        "one#0 (copy)"
      ],
      "stack_out": [
        "s.0.0#0",
        "one#0 (copy)"
      ]
    },
    "348": {
      "op": "dup",
      "defined_out": [
        "s.1.0#0"
      ],
      "stack_out": [
        "s.0.0#0",
        "s.1.0#0",
        "s.1.0#0"
      ]
    },
    "349": {
      "op": "intc_3 // 2",
      "defined_out": [
        "2",
        "s.1.0#0"
      ],
      "stack_out": [
        "s.0.0#0",
        "s.1.0#0",
        "s.1.0#0",
        "2"
      ]
    },
    "350": {
      "op": "cover 1",
      "stack_out": [
        "s.0.0#0",
        "s.1.0#0",
        "s.2.0#0",
        "s.1.0#0"
      ]
    },
    "352": {
      "op": "intc_0 // 0",
      "stack_out": [
        "s.0.0#0",
        "s.1.0#0",
        "s.2.0#0",
        "s.1.0#0",
        "0"
      ]
    },
    "353": {
      "op": "intc_0 // 0",
      "stack_out": [
        "s.0.0#0",
        "s.1.0#0",
        "s.2.0#0",
        "s.1.0#0",
        "0",
        "0"
      ]
    },
    "354": {
      "op": "==",
      "defined_out": [
        "s.1.0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "s.0.0#0",
        "s.1.0#0",
        "s.2.0#0",
        "s.1.0#0",
        "tmp%0#0"
      ]
    },
    "355": {
      "op": "assert",
      "stack_out": [
        "s.0.0#0",
        "s.1.0#0",
        "s.2.0#0",
        "s.1.0#0"
      ]
    },
    "356": {
      "op": "intc_0 // 0",
      "stack_out": [
        "s.0.0#0",
        "s.1.0#0",
        "s.2.0#0",
        "s.1.0#0",
        "0"
      ]
    },
    "357": {
      "op": "intc_0 // 0",
      "stack_out": [
        "s.0.0#0",
        "s.1.0#0",
        "s.2.0#0",
        "s.1.0#0",
        "0",
        "0"
      ]
    },
    "358": {
      "op": "==",
      "defined_out": [
        "s.1.0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "s.0.0#0",
        "s.1.0#0",
        "s.2.0#0",
        "s.1.0#0",
        "tmp%1#0"
      ]
    },
    "359": {
      "op": "assert",
      "stack_out": [
        "s.0.0#0",
        "s.1.0#0",
        "s.2.0#0",
        "s.1.0#0"
      ]
    },
    "360": {
      "op": "dup",
      "stack_out": [
        "s.0.0#0",
        "s.1.0#0",
        "s.2.0#0",
        "s.1.0#0",
        "s.1.0#0 (copy)"
      ]
    },
    "361": {
      "op": "intc_2 // 1",
      "stack_out": [
        "s.0.0#0",
        "s.1.0#0",
        "s.2.0#0",
        "s.1.0#0",
        "s.1.0#0 (copy)",
        "1"
      ]
    },
    "362": {
      "op": "==",
      "defined_out": [
        "s.1.0#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "s.0.0#0",
        "s.1.0#0",
        "s.2.0#0",
        "s.1.0#0",
        "tmp%2#0"
      ]
    },
    "363": {
      "op": "assert",
      "stack_out": [
        "s.0.0#0",
        "s.1.0#0",
        "s.2.0#0",
        "s.1.0#0"
      ]
    },
    "364": {
      "op": "dup",
      "stack_out": [
        "s.0.0#0",
        "s.1.0#0",
        "s.2.0#0",
        "s.1.0#0",
        "s.1.0#0 (copy)"
      ]
    },
    "365": {
      "op": "frame_dig -2",
      "stack_out": [
        "s.0.0#0",
        "s.1.0#0",
        "s.2.0#0",
        "s.1.0#0",
        "s.1.0#0 (copy)",
        "one#0 (copy)"
      ]
    },
    "367": {
      "op": "==",
      "defined_out": [
        "s.1.0#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "s.0.0#0",
        "s.1.0#0",
        "s.2.0#0",
        "s.1.0#0",
        "tmp%3#0"
      ]
    },
    "368": {
      "op": "assert",
      "stack_out": [
        "s.0.0#0",
        "s.1.0#0",
        "s.2.0#0",
        "s.1.0#0"
      ]
    },
    "369": {
      "op": "intc_3 // 2",
      "stack_out": [
        "s.0.0#0",
        "s.1.0#0",
        "s.2.0#0",
        "s.1.0#0",
        "2"
      ]
    },
    "370": {
      "op": "intc_3 // 2",
      "stack_out": [
        "s.0.0#0",
        "s.1.0#0",
        "s.2.0#0",
        "s.1.0#0",
        "2",
        "2"
      ]
    },
    "371": {
      "op": "==",
      "defined_out": [
        "s.1.0#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "s.0.0#0",
        "s.1.0#0",
        "s.2.0#0",
        "s.1.0#0",
        "tmp%4#0"
      ]
    },
    "372": {
      "op": "assert",
      "stack_out": [
        "s.0.0#0",
        "s.1.0#0",
        "s.2.0#0",
        "s.1.0#0"
      ]
    },
    "373": {
      "op": "intc_3 // 2",
      "stack_out": [
        "s.0.0#0",
        "s.1.0#0",
        "s.2.0#0",
        "s.1.0#0",
        "2"
      ]
    },
    "374": {
      "op": "intc_3 // 2",
      "stack_out": [
        "s.0.0#0",
        "s.1.0#0",
        "s.2.0#0",
        "s.1.0#0",
        "2",
        "2"
      ]
    },
    "375": {
      "op": "==",
      "defined_out": [
        "s.1.0#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "s.0.0#0",
        "s.1.0#0",
        "s.2.0#0",
        "s.1.0#0",
        "tmp%5#0"
      ]
    },
    "376": {
      "op": "assert",
      "defined_out": [
        "s.1.0#0"
      ],
      "stack_out": [
        "s.0.0#0",
        "s.1.0#0",
        "s.2.0#0",
        "t.0#0"
      ]
    },
    "377": {
      "op": "frame_dig -1",
      "defined_out": [
        "reassign#0 (copy)",
        "s.1.0#0"
      ],
      "stack_out": [
        "s.0.0#0",
        "s.1.0#0",
        "s.2.0#0",
        "t.0#0",
        "reassign#0 (copy)"
      ]
    },
    "379": {
      "op": "bz test_nested_singles_after_if_else@2",
      "stack_out": [
        "s.0.0#0",
        "s.1.0#0",
        "s.2.0#0",
        "t.0#0"
      ]
    },
    "382": {
      "op": "b test_nested_singles_if_body@1"
    },
    "385": {
      "block": "test_nested_singles_if_body@1",
      "stack_in": [
        "s.0.0#0",
        "s.1.0#0",
        "s.2.0#0",
        "t.0#0"
      ],
      "op": "pushint 3 // 3",
      "defined_out": [
        "3"
      ],
      "stack_out": [
        "s.0.0#0",
        "s.1.0#0",
        "s.2.0#0",
        "t.0#0",
        "3"
      ]
    },
    "387": {
      "op": "frame_bury 0",
      "defined_out": [],
      "stack_out": [
        "s.0.0#0",
        "s.1.0#0",
        "s.2.0#0",
        "t.0#0"
      ]
    },
    "389": {
      "op": "pushint 4 // 4",
      "defined_out": [
        "4"
      ],
      "stack_out": [
        "s.0.0#0",
        "s.1.0#0",
        "s.2.0#0",
        "t.0#0",
        "4"
      ]
    },
    "391": {
      "op": "frame_bury 1",
      "defined_out": [],
      "stack_out": [
        "s.0.0#0",
        "s.1.0#0",
        "s.2.0#0",
        "t.0#0"
      ]
    },
    "393": {
      "op": "pushint 5 // 5",
      "defined_out": [
        "5"
      ],
      "stack_out": [
        "s.0.0#0",
        "s.1.0#0",
        "s.2.0#0",
        "t.0#0",
        "5"
      ]
    },
    "395": {
      "op": "frame_bury 2",
      "defined_out": [],
      "stack_out": [
        "s.0.0#0",
        "s.1.0#0",
        "s.2.0#0",
        "t.0#0"
      ]
    },
    "397": {
      "op": "b test_nested_singles_after_if_else@2"
    },
    "400": {
      "block": "test_nested_singles_after_if_else@2",
      "stack_in": [
        "s.0.0#0",
        "s.1.0#0",
        "s.2.0#0",
        "t.0#0"
      ],
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "s.0.0#0",
        "s.1.0#0",
        "s.2.0#0",
        "t.0#0",
        "0"
      ]
    },
    "401": {
      "op": "pushint 3 // 3",
      "defined_out": [
        "0",
        "3"
      ],
      "stack_out": [
        "s.0.0#0",
        "s.1.0#0",
        "s.2.0#0",
        "t.0#0",
        "0",
        "3"
      ]
    },
    "403": {
      "op": "frame_dig -1",
      "defined_out": [
        "0",
        "3",
        "reassign#0 (copy)"
      ],
      "stack_out": [
        "s.0.0#0",
        "s.1.0#0",
        "s.2.0#0",
        "t.0#0",
        "0",
        "3",
        "reassign#0 (copy)"
      ]
    },
    "405": {
      "op": "select",
      "defined_out": [
        "select%0#0"
      ],
      "stack_out": [
        "s.0.0#0",
        "s.1.0#0",
        "s.2.0#0",
        "t.0#0",
        "select%0#0"
      ]
    },
    "406": {
      "op": "frame_dig 0",
      "defined_out": [
        "s.0.0#0",
        "select%0#0"
      ],
      "stack_out": [
        "s.0.0#0",
        "s.1.0#0",
        "s.2.0#0",
        "t.0#0",
        "select%0#0",
        "s.0.0#0"
      ]
    },
    "408": {
      "op": "==",
      "defined_out": [
        "s.0.0#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "s.0.0#0",
        "s.1.0#0",
        "s.2.0#0",
        "t.0#0",
        "tmp%6#0"
      ]
    },
    "409": {
      "op": "assert",
      "stack_out": [
        "s.0.0#0",
        "s.1.0#0",
        "s.2.0#0",
        "t.0#0"
      ]
    },
    "410": {
      "op": "frame_dig 2",
      "defined_out": [
        "s.0.0#0",
        "s.2.0#0",
        "tmp#0"
      ],
      "stack_out": [
        "s.0.0#0",
        "s.1.0#0",
        "s.2.0#0",
        "t.0#0",
        "tmp#0"
      ]
    },
    "412": {
      "op": "intc_3 // 2",
      "defined_out": [
        "2",
        "s.0.0#0",
        "s.2.0#0",
        "tmp#0"
      ],
      "stack_out": [
        "s.0.0#0",
        "s.1.0#0",
        "s.2.0#0",
        "t.0#0",
        "tmp#0",
        "2"
      ]
    },
    "413": {
      "op": "pushint 5 // 5",
      "defined_out": [
        "2",
        "5",
        "s.0.0#0",
        "s.2.0#0",
        "tmp#0"
      ],
      "stack_out": [
        "s.0.0#0",
        "s.1.0#0",
        "s.2.0#0",
        "t.0#0",
        "tmp#0",
        "2",
        "5"
      ]
    },
    "415": {
      "op": "frame_dig -1",
      "stack_out": [
        "s.0.0#0",
        "s.1.0#0",
        "s.2.0#0",
        "t.0#0",
        "tmp#0",
        "2",
        "5",
        "reassign#0 (copy)"
      ]
    },
    "417": {
      "op": "select",
      "defined_out": [
        "s.0.0#0",
        "s.2.0#0",
        "select%1#0",
        "tmp#0"
      ],
      "stack_out": [
        "s.0.0#0",
        "s.1.0#0",
        "s.2.0#0",
        "t.0#0",
        "tmp#0",
        "select%1#0"
      ]
    },
    "418": {
      "op": "==",
      "defined_out": [
        "s.0.0#0",
        "s.2.0#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "s.0.0#0",
        "s.1.0#0",
        "s.2.0#0",
        "t.0#0",
        "tmp%7#0"
      ]
    },
    "419": {
      "op": "assert",
      "stack_out": [
        "s.0.0#0",
        "s.1.0#0",
        "s.2.0#0",
        "t.0#0"
      ]
    },
    "420": {
      "op": "frame_dig 3",
      "defined_out": [
        "s.0.0#0",
        "s.2.0#0",
        "t.0#0"
      ],
      "stack_out": [
        "s.0.0#0",
        "s.1.0#0",
        "s.2.0#0",
        "t.0#0",
        "t.0#0"
      ]
    },
    "422": {
      "op": "frame_dig -2",
      "defined_out": [
        "one#0 (copy)",
        "s.0.0#0",
        "s.2.0#0",
        "t.0#0"
      ],
      "stack_out": [
        "s.0.0#0",
        "s.1.0#0",
        "s.2.0#0",
        "t.0#0",
        "t.0#0",
        "one#0 (copy)"
      ]
    },
    "424": {
      "op": "==",
      "defined_out": [
        "s.0.0#0",
        "s.2.0#0",
        "t.0#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "s.0.0#0",
        "s.1.0#0",
        "s.2.0#0",
        "t.0#0",
        "tmp%8#0"
      ]
    },
    "425": {
      "op": "assert",
      "stack_out": [
        "s.0.0#0",
        "s.1.0#0",
        "s.2.0#0",
        "t.0#0"
      ]
    },
    "426": {
      "op": "frame_dig 1",
      "defined_out": [
        "s.0.0#0",
        "s.1.0#0",
        "s.2.0#0",
        "t.0#0"
      ],
      "stack_out": [
        "s.0.0#0",
        "s.1.0#0",
        "s.2.0#0",
        "t.0#0",
        "s.1.0#0"
      ]
    },
    "428": {
      "op": "dup",
      "defined_out": [
        "s.0.0#0",
        "s.1.0#0",
        "s.2.0#0",
        "s1#0",
        "t.0#0"
      ],
      "stack_out": [
        "s.0.0#0",
        "s.1.0#0",
        "s.2.0#0",
        "t.0#0",
        "s.1.0#0",
        "s1#0"
      ]
    },
    "429": {
      "op": "frame_dig -2",
      "stack_out": [
        "s.0.0#0",
        "s.1.0#0",
        "s.2.0#0",
        "t.0#0",
        "s.1.0#0",
        "s1#0",
        "one#0 (copy)"
      ]
    },
    "431": {
      "op": "+",
      "defined_out": [
        "s.0.0#0",
        "s.1.0#0",
        "s.2.0#0",
        "s1#0",
        "t.0#0"
      ],
      "stack_out": [
        "s.0.0#0",
        "s.1.0#0",
        "s.2.0#0",
        "t.0#0",
        "s.1.0#0",
        "s1#0"
      ]
    },
    "432": {
      "op": "intc_3 // 2",
      "stack_out": [
        "s.0.0#0",
        "s.1.0#0",
        "s.2.0#0",
        "t.0#0",
        "s.1.0#0",
        "s1#0",
        "2"
      ]
    },
    "433": {
      "op": "pushint 5 // 5",
      "stack_out": [
        "s.0.0#0",
        "s.1.0#0",
        "s.2.0#0",
        "t.0#0",
        "s.1.0#0",
        "s1#0",
        "2",
        "5"
      ]
    },
    "435": {
      "op": "frame_dig -1",
      "stack_out": [
        "s.0.0#0",
        "s.1.0#0",
        "s.2.0#0",
        "t.0#0",
        "s.1.0#0",
        "s1#0",
        "2",
        "5",
        "reassign#0 (copy)"
      ]
    },
    "437": {
      "op": "select",
      "defined_out": [
        "s.0.0#0",
        "s.1.0#0",
        "s.2.0#0",
        "s1#0",
        "select%2#0",
        "t.0#0"
      ],
      "stack_out": [
        "s.0.0#0",
        "s.1.0#0",
        "s.2.0#0",
        "t.0#0",
        "s.1.0#0",
        "s1#0",
        "select%2#0"
      ]
    },
    "438": {
      "op": "==",
      "defined_out": [
        "s.0.0#0",
        "s.1.0#0",
        "s.2.0#0",
        "t.0#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "s.0.0#0",
        "s.1.0#0",
        "s.2.0#0",
        "t.0#0",
        "s.1.0#0",
        "tmp%10#0"
      ]
    },
    "439": {
      "op": "assert",
      "stack_out": [
        "s.0.0#0",
        "s.1.0#0",
        "s.2.0#0",
        "t.0#0",
        "s.1.0#0"
      ]
    },
    "440": {
      "op": "intc_2 // 1",
      "defined_out": [
        "1",
        "s.0.0#0",
        "s.1.0#0",
        "s.2.0#0",
        "t.0#0"
      ],
      "stack_out": [
        "s.0.0#0",
        "s.1.0#0",
        "s.2.0#0",
        "t.0#0",
        "s.1.0#0",
        "1"
      ]
    },
    "441": {
      "op": "pushint 4 // 4",
      "defined_out": [
        "1",
        "4",
        "s.0.0#0",
        "s.1.0#0",
        "s.2.0#0",
        "t.0#0"
      ],
      "stack_out": [
        "s.0.0#0",
        "s.1.0#0",
        "s.2.0#0",
        "t.0#0",
        "s.1.0#0",
        "1",
        "4"
      ]
    },
    "443": {
      "op": "frame_dig -1",
      "stack_out": [
        "s.0.0#0",
        "s.1.0#0",
        "s.2.0#0",
        "t.0#0",
        "s.1.0#0",
        "1",
        "4",
        "reassign#0 (copy)"
      ]
    },
    "445": {
      "op": "select",
      "defined_out": [
        "s.0.0#0",
        "s.1.0#0",
        "s.2.0#0",
        "select%3#0",
        "t.0#0"
      ],
      "stack_out": [
        "s.0.0#0",
        "s.1.0#0",
        "s.2.0#0",
        "t.0#0",
        "s.1.0#0",
        "select%3#0"
      ]
    },
    "446": {
      "op": "==",
      "defined_out": [
        "s.0.0#0",
        "s.1.0#0",
        "s.2.0#0",
        "t.0#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "s.0.0#0",
        "s.1.0#0",
        "s.2.0#0",
        "t.0#0",
        "tmp%11#0"
      ]
    },
    "447": {
      "op": "assert",
      "stack_out": [
        "s.0.0#0",
        "s.1.0#0",
        "s.2.0#0",
        "t.0#0"
      ]
    },
    "448": {
      "retsub": true,
      "op": "retsub"
    },
    "449": {
      "subroutine": "test_cases.tuple_support.nested_tuples.test_nested_mutation",
      "params": {},
      "block": "test_nested_mutation",
      "stack_in": [],
      "op": "b test_nested_mutation_block@0"
    },
    "452": {
      "block": "test_nested_mutation_block@0",
      "stack_in": [],
      "op": "intc_2 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "453": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%0#0"
      ],
      "stack_out": [
        "aggregate%as_bytes%0#0"
      ]
    },
    "454": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%len_u16%0#0"
      ],
      "stack_out": [
        "aggregate%len_u16%0#0"
      ]
    },
    "457": {
      "op": "bytec 9 // 0x0000000000000000",
      "defined_out": [
        "0x0000000000000000",
        "aggregate%len_u16%0#0"
      ],
      "stack_out": [
        "aggregate%len_u16%0#0",
        "0x0000000000000000"
      ]
    },
    "459": {
      "op": "concat",
      "defined_out": [
        "x.0.0#0"
      ],
      "stack_out": [
        "x.0.0#0"
      ]
    },
    "460": {
      "op": "bytec_0 // 0x",
      "defined_out": [
        "0x",
        "x.0.0#0"
      ],
      "stack_out": [
        "x.0.0#0",
        "0x"
      ]
    },
    "461": {
      "op": "bytec 7 // 0x0000000000000001",
      "defined_out": [
        "0x",
        "0x0000000000000001",
        "x.0.0#0"
      ],
      "stack_out": [
        "x.0.0#0",
        "0x",
        "0x0000000000000001"
      ]
    },
    "463": {
      "op": "concat",
      "defined_out": [
        "tmp%0#0",
        "x.0.0#0"
      ],
      "stack_out": [
        "x.0.0#0",
        "tmp%0#0"
      ]
    },
    "464": {
      "op": "dig 1",
      "defined_out": [
        "tmp%0#0",
        "x.0.0#0",
        "x.0.0#0 (copy)"
      ],
      "stack_out": [
        "x.0.0#0",
        "tmp%0#0",
        "x.0.0#0 (copy)"
      ]
    },
    "466": {
      "op": "uncover 1",
      "stack_out": [
        "x.0.0#0",
        "x.0.0#0 (copy)",
        "tmp%0#0"
      ]
    },
    "468": {
      "error": "max array length exceeded",
      "op": "concat // on error: max array length exceeded",
      "defined_out": [
        "concat%0#0",
        "x.0.0#0"
      ],
      "stack_out": [
        "x.0.0#0",
        "concat%0#0"
      ]
    },
    "469": {
      "op": "cover 1",
      "stack_out": [
        "concat%0#0",
        "x.0.0#0"
      ]
    },
    "471": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "concat%0#0",
        "x.0.0#0"
      ],
      "stack_out": [
        "concat%0#0",
        "x.0.0#0",
        "0"
      ]
    },
    "472": {
      "op": "extract_uint16",
      "defined_out": [
        "concat%0#0",
        "extract_uint16%0#0"
      ],
      "stack_out": [
        "concat%0#0",
        "extract_uint16%0#0"
      ]
    },
    "473": {
      "op": "intc_2 // 1",
      "stack_out": [
        "concat%0#0",
        "extract_uint16%0#0",
        "1"
      ]
    },
    "474": {
      "op": "+",
      "defined_out": [
        "add%0#0",
        "concat%0#0"
      ],
      "stack_out": [
        "concat%0#0",
        "add%0#0"
      ]
    },
    "475": {
      "op": "itob",
      "defined_out": [
        "as_bytes%0#0",
        "concat%0#0"
      ],
      "stack_out": [
        "concat%0#0",
        "as_bytes%0#0"
      ]
    },
    "476": {
      "op": "extract 6 2",
      "defined_out": [
        "as_u16_bytes%0#0",
        "concat%0#0"
      ],
      "stack_out": [
        "concat%0#0",
        "as_u16_bytes%0#0"
      ]
    },
    "479": {
      "op": "uncover 1",
      "stack_out": [
        "as_u16_bytes%0#0",
        "concat%0#0"
      ]
    },
    "481": {
      "op": "intc_0 // 0",
      "stack_out": [
        "as_u16_bytes%0#0",
        "concat%0#0",
        "0"
      ]
    },
    "482": {
      "op": "uncover 2",
      "stack_out": [
        "concat%0#0",
        "0",
        "as_u16_bytes%0#0"
      ]
    },
    "484": {
      "op": "replace3",
      "defined_out": [
        "x.0.0#0"
      ],
      "stack_out": [
        "x.0.0#0"
      ]
    },
    "485": {
      "op": "intc_0 // 0",
      "stack_out": [
        "x.0.0#0",
        "0"
      ]
    },
    "486": {
      "op": "extract_uint16",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "487": {
      "op": "intc_3 // 2",
      "defined_out": [
        "2",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "2"
      ]
    },
    "488": {
      "op": "==",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "489": {
      "op": "assert",
      "stack_out": []
    },
    "490": {
      "retsub": true,
      "op": "retsub"
    },
    "491": {
      "subroutine": "test_cases.tuple_support.nested_tuples.test_nested_iteration",
      "params": {},
      "block": "test_nested_iteration",
      "stack_in": [],
      "op": "proto 0 0"
    },
    "494": {
      "op": "bytec_0 // \"\"",
      "stack_out": [
        "a#0"
      ]
    },
    "495": {
      "op": "bytec_0 // \"\"",
      "stack_out": [
        "a#0",
        "b#0"
      ]
    },
    "496": {
      "op": "bytec_0 // \"\"",
      "stack_out": [
        "a#0",
        "b#0",
        "loop_counter%1#0"
      ]
    },
    "497": {
      "op": "b test_nested_iteration_block@0"
    },
    "500": {
      "block": "test_nested_iteration_block@0",
      "stack_in": [
        "a#0",
        "b#0",
        "loop_counter%1#0"
      ],
      "op": "intc_0 // 0",
      "defined_out": [],
      "stack_out": [
        "a#0",
        "b#0",
        "loop_counter%1#0",
        "total#0"
      ]
    },
    "501": {
      "op": "intc_0 // 0",
      "defined_out": [],
      "stack_out": [
        "a#0",
        "b#0",
        "loop_counter%1#0",
        "total#0",
        "loop_counter%0#0"
      ]
    },
    "502": {
      "op": "intc_2 // 1",
      "defined_out": [],
      "stack_out": [
        "a#0",
        "b#0",
        "loop_counter%1#0",
        "total#0",
        "loop_counter%0#0",
        "t.0#0"
      ]
    },
    "503": {
      "op": "intc_3 // 2",
      "defined_out": [],
      "stack_out": [
        "a#0",
        "b#0",
        "loop_counter%1#0",
        "total#0",
        "loop_counter%0#0",
        "t.0#0",
        "t.1#0"
      ]
    },
    "504": {
      "op": "b test_nested_iteration_for_body@1"
    },
    "507": {
      "block": "test_nested_iteration_for_body@1",
      "stack_in": [
        "a#0",
        "b#0",
        "loop_counter%1#0",
        "total#0",
        "loop_counter%0#0",
        "t.0#0",
        "t.1#0"
      ],
      "op": "frame_dig 5",
      "defined_out": [
        "a#0",
        "t.0#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "loop_counter%1#0",
        "total#0",
        "loop_counter%0#0",
        "t.0#0",
        "t.1#0",
        "a#0"
      ]
    },
    "509": {
      "op": "frame_dig 6",
      "defined_out": [
        "a#0",
        "b#0",
        "t.0#0",
        "t.1#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "loop_counter%1#0",
        "total#0",
        "loop_counter%0#0",
        "t.0#0",
        "t.1#0",
        "a#0",
        "b#0"
      ]
    },
    "511": {
      "op": "+",
      "defined_out": [
        "a#0",
        "b#0",
        "t.0#0",
        "t.1#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "loop_counter%1#0",
        "total#0",
        "loop_counter%0#0",
        "t.0#0",
        "t.1#0",
        "tmp%0#0"
      ]
    },
    "512": {
      "op": "frame_dig 3",
      "defined_out": [
        "a#0",
        "b#0",
        "t.0#0",
        "t.1#0",
        "tmp%0#0",
        "total#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "loop_counter%1#0",
        "total#0",
        "loop_counter%0#0",
        "t.0#0",
        "t.1#0",
        "tmp%0#0",
        "total#0"
      ]
    },
    "514": {
      "op": "+",
      "defined_out": [
        "a#0",
        "b#0",
        "t.0#0",
        "t.1#0",
        "tmp%1#0",
        "total#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "loop_counter%1#0",
        "total#0",
        "loop_counter%0#0",
        "t.0#0",
        "t.1#0",
        "tmp%1#0"
      ]
    },
    "515": {
      "op": "frame_bury 3",
      "defined_out": [
        "a#0",
        "b#0",
        "t.0#0",
        "t.1#0",
        "total#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "loop_counter%1#0",
        "total#0",
        "loop_counter%0#0",
        "t.0#0",
        "t.1#0"
      ]
    },
    "517": {
      "op": "b test_nested_iteration_for_footer@2"
    },
    "520": {
      "block": "test_nested_iteration_for_footer@2",
      "stack_in": [
        "a#0",
        "b#0",
        "loop_counter%1#0",
        "total#0",
        "loop_counter%0#0",
        "t.0#0",
        "t.1#0"
      ],
      "op": "frame_dig 4",
      "defined_out": [
        "loop_counter%0#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "loop_counter%1#0",
        "total#0",
        "loop_counter%0#0",
        "t.0#0",
        "t.1#0",
        "loop_counter%0#0"
      ]
    },
    "522": {
      "op": "switch test_nested_iteration_for_header_1@3 test_nested_iteration_for_header_2@4 test_nested_iteration_for_header_3@5",
      "stack_out": [
        "a#0",
        "b#0",
        "loop_counter%1#0",
        "total#0",
        "loop_counter%0#0",
        "t.0#0",
        "t.1#0"
      ]
    },
    "530": {
      "op": "b test_nested_iteration_after_for@6"
    },
    "533": {
      "block": "test_nested_iteration_after_for@6",
      "stack_in": [
        "a#0",
        "b#0",
        "loop_counter%1#0",
        "total#0",
        "loop_counter%0#0",
        "t.0#0",
        "t.1#0"
      ],
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "loop_counter%1#0",
        "total#0",
        "loop_counter%0#0",
        "t.0#0",
        "t.1#0",
        "0"
      ]
    },
    "534": {
      "op": "frame_bury 2",
      "defined_out": [],
      "stack_out": [
        "a#0",
        "b#0",
        "loop_counter%1#0",
        "total#0",
        "loop_counter%0#0",
        "t.0#0",
        "t.1#0"
      ]
    },
    "536": {
      "op": "intc_2 // 1",
      "stack_out": [
        "a#0",
        "b#0",
        "loop_counter%1#0",
        "total#0",
        "loop_counter%0#0",
        "t.0#0",
        "t.1#0",
        "1"
      ]
    },
    "537": {
      "op": "frame_bury 0",
      "defined_out": [],
      "stack_out": [
        "a#0",
        "b#0",
        "loop_counter%1#0",
        "total#0",
        "loop_counter%0#0",
        "t.0#0",
        "t.1#0"
      ]
    },
    "539": {
      "op": "intc_3 // 2",
      "defined_out": [
        "2"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "loop_counter%1#0",
        "total#0",
        "loop_counter%0#0",
        "t.0#0",
        "t.1#0",
        "2"
      ]
    },
    "540": {
      "op": "frame_bury 1",
      "defined_out": [],
      "stack_out": [
        "a#0",
        "b#0",
        "loop_counter%1#0",
        "total#0",
        "loop_counter%0#0",
        "t.0#0",
        "t.1#0"
      ]
    },
    "542": {
      "op": "b test_nested_iteration_for_body@7"
    },
    "545": {
      "block": "test_nested_iteration_for_body@7",
      "stack_in": [
        "a#0",
        "b#0",
        "loop_counter%1#0",
        "total#0",
        "loop_counter%0#0",
        "t.0#0",
        "t.1#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "a#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "loop_counter%1#0",
        "total#0",
        "loop_counter%0#0",
        "t.0#0",
        "t.1#0",
        "a#0"
      ]
    },
    "547": {
      "op": "frame_dig 1",
      "defined_out": [
        "a#0",
        "b#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "loop_counter%1#0",
        "total#0",
        "loop_counter%0#0",
        "t.0#0",
        "t.1#0",
        "a#0",
        "b#0"
      ]
    },
    "549": {
      "op": "+",
      "defined_out": [
        "a#0",
        "b#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "loop_counter%1#0",
        "total#0",
        "loop_counter%0#0",
        "t.0#0",
        "t.1#0",
        "tmp%2#0"
      ]
    },
    "550": {
      "op": "frame_dig 3",
      "defined_out": [
        "a#0",
        "b#0",
        "tmp%2#0",
        "total#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "loop_counter%1#0",
        "total#0",
        "loop_counter%0#0",
        "t.0#0",
        "t.1#0",
        "tmp%2#0",
        "total#0"
      ]
    },
    "552": {
      "op": "+",
      "defined_out": [
        "a#0",
        "b#0",
        "tmp%3#0",
        "total#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "loop_counter%1#0",
        "total#0",
        "loop_counter%0#0",
        "t.0#0",
        "t.1#0",
        "tmp%3#0"
      ]
    },
    "553": {
      "op": "frame_bury 3",
      "defined_out": [
        "a#0",
        "b#0",
        "total#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "loop_counter%1#0",
        "total#0",
        "loop_counter%0#0",
        "t.0#0",
        "t.1#0"
      ]
    },
    "555": {
      "op": "b test_nested_iteration_for_footer@8"
    },
    "558": {
      "block": "test_nested_iteration_for_footer@8",
      "stack_in": [
        "a#0",
        "b#0",
        "loop_counter%1#0",
        "total#0",
        "loop_counter%0#0",
        "t.0#0",
        "t.1#0"
      ],
      "op": "frame_dig 2",
      "defined_out": [
        "loop_counter%1#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "loop_counter%1#0",
        "total#0",
        "loop_counter%0#0",
        "t.0#0",
        "t.1#0",
        "loop_counter%1#0"
      ]
    },
    "560": {
      "op": "switch test_nested_iteration_for_header_1@9 test_nested_iteration_for_header_2@10 test_nested_iteration_for_header_3@11",
      "stack_out": [
        "a#0",
        "b#0",
        "loop_counter%1#0",
        "total#0",
        "loop_counter%0#0",
        "t.0#0",
        "t.1#0"
      ]
    },
    "568": {
      "op": "b test_nested_iteration_after_for@12"
    },
    "571": {
      "block": "test_nested_iteration_after_for@12",
      "stack_in": [
        "a#0",
        "b#0",
        "loop_counter%1#0",
        "total#0",
        "loop_counter%0#0",
        "t.0#0",
        "t.1#0"
      ],
      "op": "frame_dig 3",
      "defined_out": [
        "total#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "loop_counter%1#0",
        "total#0",
        "loop_counter%0#0",
        "t.0#0",
        "t.1#0",
        "total#0"
      ]
    },
    "573": {
      "op": "intc_1 // 8",
      "defined_out": [
        "8",
        "total#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "loop_counter%1#0",
        "total#0",
        "loop_counter%0#0",
        "t.0#0",
        "t.1#0",
        "total#0",
        "8"
      ]
    },
    "574": {
      "op": "/",
      "defined_out": [
        "tmp%4#0",
        "total#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "loop_counter%1#0",
        "total#0",
        "loop_counter%0#0",
        "t.0#0",
        "t.1#0",
        "tmp%4#0"
      ]
    },
    "575": {
      "op": "pushint 3 // 3",
      "defined_out": [
        "3",
        "tmp%4#0",
        "total#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "loop_counter%1#0",
        "total#0",
        "loop_counter%0#0",
        "t.0#0",
        "t.1#0",
        "tmp%4#0",
        "3"
      ]
    },
    "577": {
      "op": "==",
      "defined_out": [
        "tmp%5#0",
        "total#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "loop_counter%1#0",
        "total#0",
        "loop_counter%0#0",
        "t.0#0",
        "t.1#0",
        "tmp%5#0"
      ]
    },
    "578": {
      "op": "assert",
      "stack_out": [
        "a#0",
        "b#0",
        "loop_counter%1#0",
        "total#0",
        "loop_counter%0#0",
        "t.0#0",
        "t.1#0"
      ]
    },
    "579": {
      "retsub": true,
      "op": "retsub"
    },
    "580": {
      "block": "test_nested_iteration_for_header_3@11",
      "stack_in": [
        "a#0",
        "b#0",
        "loop_counter%1#0",
        "total#0",
        "loop_counter%0#0",
        "t.0#0",
        "t.1#0"
      ],
      "op": "pushint 3 // 3",
      "defined_out": [
        "3"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "loop_counter%1#0",
        "total#0",
        "loop_counter%0#0",
        "t.0#0",
        "t.1#0",
        "3"
      ]
    },
    "582": {
      "op": "frame_bury 2",
      "defined_out": [],
      "stack_out": [
        "a#0",
        "b#0",
        "loop_counter%1#0",
        "total#0",
        "loop_counter%0#0",
        "t.0#0",
        "t.1#0"
      ]
    },
    "584": {
      "op": "intc_3 // 2",
      "defined_out": [
        "2"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "loop_counter%1#0",
        "total#0",
        "loop_counter%0#0",
        "t.0#0",
        "t.1#0",
        "2"
      ]
    },
    "585": {
      "op": "frame_bury 0",
      "defined_out": [],
      "stack_out": [
        "a#0",
        "b#0",
        "loop_counter%1#0",
        "total#0",
        "loop_counter%0#0",
        "t.0#0",
        "t.1#0"
      ]
    },
    "587": {
      "op": "intc_3 // 2",
      "stack_out": [
        "a#0",
        "b#0",
        "loop_counter%1#0",
        "total#0",
        "loop_counter%0#0",
        "t.0#0",
        "t.1#0",
        "2"
      ]
    },
    "588": {
      "op": "frame_bury 1",
      "defined_out": [],
      "stack_out": [
        "a#0",
        "b#0",
        "loop_counter%1#0",
        "total#0",
        "loop_counter%0#0",
        "t.0#0",
        "t.1#0"
      ]
    },
    "590": {
      "op": "b test_nested_iteration_for_body@7"
    },
    "593": {
      "block": "test_nested_iteration_for_header_2@10",
      "stack_in": [
        "a#0",
        "b#0",
        "loop_counter%1#0",
        "total#0",
        "loop_counter%0#0",
        "t.0#0",
        "t.1#0"
      ],
      "op": "intc_3 // 2",
      "defined_out": [
        "2"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "loop_counter%1#0",
        "total#0",
        "loop_counter%0#0",
        "t.0#0",
        "t.1#0",
        "2"
      ]
    },
    "594": {
      "op": "frame_bury 2",
      "defined_out": [],
      "stack_out": [
        "a#0",
        "b#0",
        "loop_counter%1#0",
        "total#0",
        "loop_counter%0#0",
        "t.0#0",
        "t.1#0"
      ]
    },
    "596": {
      "op": "intc_2 // 1",
      "stack_out": [
        "a#0",
        "b#0",
        "loop_counter%1#0",
        "total#0",
        "loop_counter%0#0",
        "t.0#0",
        "t.1#0",
        "1"
      ]
    },
    "597": {
      "op": "frame_bury 0",
      "defined_out": [],
      "stack_out": [
        "a#0",
        "b#0",
        "loop_counter%1#0",
        "total#0",
        "loop_counter%0#0",
        "t.0#0",
        "t.1#0"
      ]
    },
    "599": {
      "op": "intc_2 // 1",
      "stack_out": [
        "a#0",
        "b#0",
        "loop_counter%1#0",
        "total#0",
        "loop_counter%0#0",
        "t.0#0",
        "t.1#0",
        "1"
      ]
    },
    "600": {
      "op": "frame_bury 1",
      "defined_out": [],
      "stack_out": [
        "a#0",
        "b#0",
        "loop_counter%1#0",
        "total#0",
        "loop_counter%0#0",
        "t.0#0",
        "t.1#0"
      ]
    },
    "602": {
      "op": "b test_nested_iteration_for_body@7"
    },
    "605": {
      "block": "test_nested_iteration_for_header_1@9",
      "stack_in": [
        "a#0",
        "b#0",
        "loop_counter%1#0",
        "total#0",
        "loop_counter%0#0",
        "t.0#0",
        "t.1#0"
      ],
      "op": "intc_2 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "loop_counter%1#0",
        "total#0",
        "loop_counter%0#0",
        "t.0#0",
        "t.1#0",
        "1"
      ]
    },
    "606": {
      "op": "frame_bury 2",
      "defined_out": [],
      "stack_out": [
        "a#0",
        "b#0",
        "loop_counter%1#0",
        "total#0",
        "loop_counter%0#0",
        "t.0#0",
        "t.1#0"
      ]
    },
    "608": {
      "op": "intc_3 // 2",
      "defined_out": [
        "2"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "loop_counter%1#0",
        "total#0",
        "loop_counter%0#0",
        "t.0#0",
        "t.1#0",
        "2"
      ]
    },
    "609": {
      "op": "frame_bury 0",
      "defined_out": [],
      "stack_out": [
        "a#0",
        "b#0",
        "loop_counter%1#0",
        "total#0",
        "loop_counter%0#0",
        "t.0#0",
        "t.1#0"
      ]
    },
    "611": {
      "op": "intc_2 // 1",
      "stack_out": [
        "a#0",
        "b#0",
        "loop_counter%1#0",
        "total#0",
        "loop_counter%0#0",
        "t.0#0",
        "t.1#0",
        "1"
      ]
    },
    "612": {
      "op": "frame_bury 1",
      "defined_out": [],
      "stack_out": [
        "a#0",
        "b#0",
        "loop_counter%1#0",
        "total#0",
        "loop_counter%0#0",
        "t.0#0",
        "t.1#0"
      ]
    },
    "614": {
      "op": "b test_nested_iteration_for_body@7"
    },
    "617": {
      "block": "test_nested_iteration_for_header_3@5",
      "stack_in": [
        "a#0",
        "b#0",
        "loop_counter%1#0",
        "total#0",
        "loop_counter%0#0",
        "t.0#0",
        "t.1#0"
      ],
      "op": "pushint 3 // 3",
      "defined_out": [
        "3"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "loop_counter%1#0",
        "total#0",
        "loop_counter%0#0",
        "t.0#0",
        "t.1#0",
        "3"
      ]
    },
    "619": {
      "op": "frame_bury 4",
      "defined_out": [],
      "stack_out": [
        "a#0",
        "b#0",
        "loop_counter%1#0",
        "total#0",
        "loop_counter%0#0",
        "t.0#0",
        "t.1#0"
      ]
    },
    "621": {
      "op": "intc_3 // 2",
      "defined_out": [
        "2"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "loop_counter%1#0",
        "total#0",
        "loop_counter%0#0",
        "t.0#0",
        "t.1#0",
        "2"
      ]
    },
    "622": {
      "op": "frame_bury 5",
      "defined_out": [],
      "stack_out": [
        "a#0",
        "b#0",
        "loop_counter%1#0",
        "total#0",
        "loop_counter%0#0",
        "t.0#0",
        "t.1#0"
      ]
    },
    "624": {
      "op": "intc_3 // 2",
      "stack_out": [
        "a#0",
        "b#0",
        "loop_counter%1#0",
        "total#0",
        "loop_counter%0#0",
        "t.0#0",
        "t.1#0",
        "2"
      ]
    },
    "625": {
      "op": "frame_bury 6",
      "defined_out": [],
      "stack_out": [
        "a#0",
        "b#0",
        "loop_counter%1#0",
        "total#0",
        "loop_counter%0#0",
        "t.0#0",
        "t.1#0"
      ]
    },
    "627": {
      "op": "b test_nested_iteration_for_body@1"
    },
    "630": {
      "block": "test_nested_iteration_for_header_2@4",
      "stack_in": [
        "a#0",
        "b#0",
        "loop_counter%1#0",
        "total#0",
        "loop_counter%0#0",
        "t.0#0",
        "t.1#0"
      ],
      "op": "intc_3 // 2",
      "defined_out": [
        "2"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "loop_counter%1#0",
        "total#0",
        "loop_counter%0#0",
        "t.0#0",
        "t.1#0",
        "2"
      ]
    },
    "631": {
      "op": "frame_bury 4",
      "defined_out": [],
      "stack_out": [
        "a#0",
        "b#0",
        "loop_counter%1#0",
        "total#0",
        "loop_counter%0#0",
        "t.0#0",
        "t.1#0"
      ]
    },
    "633": {
      "op": "intc_2 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "loop_counter%1#0",
        "total#0",
        "loop_counter%0#0",
        "t.0#0",
        "t.1#0",
        "1"
      ]
    },
    "634": {
      "op": "frame_bury 5",
      "defined_out": [],
      "stack_out": [
        "a#0",
        "b#0",
        "loop_counter%1#0",
        "total#0",
        "loop_counter%0#0",
        "t.0#0",
        "t.1#0"
      ]
    },
    "636": {
      "op": "intc_2 // 1",
      "stack_out": [
        "a#0",
        "b#0",
        "loop_counter%1#0",
        "total#0",
        "loop_counter%0#0",
        "t.0#0",
        "t.1#0",
        "1"
      ]
    },
    "637": {
      "op": "frame_bury 6",
      "stack_out": [
        "a#0",
        "b#0",
        "loop_counter%1#0",
        "total#0",
        "loop_counter%0#0",
        "t.0#0",
        "t.1#0"
      ]
    },
    "639": {
      "op": "b test_nested_iteration_for_body@1"
    },
    "642": {
      "block": "test_nested_iteration_for_header_1@3",
      "stack_in": [
        "a#0",
        "b#0",
        "loop_counter%1#0",
        "total#0",
        "loop_counter%0#0",
        "t.0#0",
        "t.1#0"
      ],
      "op": "intc_2 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "loop_counter%1#0",
        "total#0",
        "loop_counter%0#0",
        "t.0#0",
        "t.1#0",
        "1"
      ]
    },
    "643": {
      "op": "frame_bury 4",
      "defined_out": [],
      "stack_out": [
        "a#0",
        "b#0",
        "loop_counter%1#0",
        "total#0",
        "loop_counter%0#0",
        "t.0#0",
        "t.1#0"
      ]
    },
    "645": {
      "op": "intc_3 // 2",
      "defined_out": [
        "2"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "loop_counter%1#0",
        "total#0",
        "loop_counter%0#0",
        "t.0#0",
        "t.1#0",
        "2"
      ]
    },
    "646": {
      "op": "frame_bury 5",
      "defined_out": [],
      "stack_out": [
        "a#0",
        "b#0",
        "loop_counter%1#0",
        "total#0",
        "loop_counter%0#0",
        "t.0#0",
        "t.1#0"
      ]
    },
    "648": {
      "op": "intc_2 // 1",
      "stack_out": [
        "a#0",
        "b#0",
        "loop_counter%1#0",
        "total#0",
        "loop_counter%0#0",
        "t.0#0",
        "t.1#0",
        "1"
      ]
    },
    "649": {
      "op": "frame_bury 6",
      "stack_out": [
        "a#0",
        "b#0",
        "loop_counter%1#0",
        "total#0",
        "loop_counter%0#0",
        "t.0#0",
        "t.1#0"
      ]
    },
    "651": {
      "op": "b test_nested_iteration_for_body@1"
    },
    "654": {
      "subroutine": "test_cases.tuple_support.nested_tuples.NestedTuples.store_tuple[routing]",
      "params": {},
      "block": "store_tuple",
      "stack_in": [],
      "op": "b store_tuple_block@0"
    },
    "657": {
      "block": "store_tuple_block@0",
      "stack_in": [],
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded((uint64,uint64,(uint64,(len+uint8[]),(len+utf8[]))),(len+(uint64,(len+uint8[]),(len+utf8[]))[]))%0#0"
      ],
      "stack_out": [
        "reinterpret_Encoded((uint64,uint64,(uint64,(len+uint8[]),(len+utf8[]))),(len+(uint64,(len+uint8[]),(len+utf8[]))[]))%0#0"
      ]
    },
    "660": {
      "op": "dup",
      "defined_out": [
        "reinterpret_Encoded((uint64,uint64,(uint64,(len+uint8[]),(len+utf8[]))),(len+(uint64,(len+uint8[]),(len+utf8[]))[]))%0#0",
        "reinterpret_Encoded((uint64,uint64,(uint64,(len+uint8[]),(len+utf8[]))),(len+(uint64,(len+uint8[]),(len+utf8[]))[]))%0#0 (copy)"
      ],
      "stack_out": [
        "reinterpret_Encoded((uint64,uint64,(uint64,(len+uint8[]),(len+utf8[]))),(len+(uint64,(len+uint8[]),(len+utf8[]))[]))%0#0",
        "reinterpret_Encoded((uint64,uint64,(uint64,(len+uint8[]),(len+utf8[]))),(len+(uint64,(len+uint8[]),(len+utf8[]))[]))%0#0 (copy)"
      ]
    },
    "661": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "reinterpret_Encoded((uint64,uint64,(uint64,(len+uint8[]),(len+utf8[]))),(len+(uint64,(len+uint8[]),(len+utf8[]))[]))%0#0",
        "reinterpret_Encoded((uint64,uint64,(uint64,(len+uint8[]),(len+utf8[]))),(len+(uint64,(len+uint8[]),(len+utf8[]))[]))%0#0 (copy)"
      ],
      "stack_out": [
        "reinterpret_Encoded((uint64,uint64,(uint64,(len+uint8[]),(len+utf8[]))),(len+(uint64,(len+uint8[]),(len+utf8[]))[]))%0#0",
        "reinterpret_Encoded((uint64,uint64,(uint64,(len+uint8[]),(len+utf8[]))),(len+(uint64,(len+uint8[]),(len+utf8[]))[]))%0#0 (copy)",
        "0"
      ]
    },
    "662": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%extract_uint16%0#0",
        "reinterpret_Encoded((uint64,uint64,(uint64,(len+uint8[]),(len+utf8[]))),(len+(uint64,(len+uint8[]),(len+utf8[]))[]))%0#0"
      ],
      "stack_out": [
        "reinterpret_Encoded((uint64,uint64,(uint64,(len+uint8[]),(len+utf8[]))),(len+(uint64,(len+uint8[]),(len+utf8[]))[]))%0#0",
        "aggregate%extract_uint16%0#0"
      ]
    },
    "663": {
      "op": "cover 1",
      "stack_out": [
        "aggregate%extract_uint16%0#0",
        "reinterpret_Encoded((uint64,uint64,(uint64,(len+uint8[]),(len+utf8[]))),(len+(uint64,(len+uint8[]),(len+utf8[]))[]))%0#0"
      ]
    },
    "665": {
      "op": "dup",
      "stack_out": [
        "aggregate%extract_uint16%0#0",
        "reinterpret_Encoded((uint64,uint64,(uint64,(len+uint8[]),(len+utf8[]))),(len+(uint64,(len+uint8[]),(len+utf8[]))[]))%0#0",
        "reinterpret_Encoded((uint64,uint64,(uint64,(len+uint8[]),(len+utf8[]))),(len+(uint64,(len+uint8[]),(len+utf8[]))[]))%0#0 (copy)"
      ]
    },
    "666": {
      "op": "intc_3 // 2",
      "defined_out": [
        "2",
        "aggregate%extract_uint16%0#0",
        "reinterpret_Encoded((uint64,uint64,(uint64,(len+uint8[]),(len+utf8[]))),(len+(uint64,(len+uint8[]),(len+utf8[]))[]))%0#0",
        "reinterpret_Encoded((uint64,uint64,(uint64,(len+uint8[]),(len+utf8[]))),(len+(uint64,(len+uint8[]),(len+utf8[]))[]))%0#0 (copy)"
      ],
      "stack_out": [
        "aggregate%extract_uint16%0#0",
        "reinterpret_Encoded((uint64,uint64,(uint64,(len+uint8[]),(len+utf8[]))),(len+(uint64,(len+uint8[]),(len+utf8[]))[]))%0#0",
        "reinterpret_Encoded((uint64,uint64,(uint64,(len+uint8[]),(len+utf8[]))),(len+(uint64,(len+uint8[]),(len+utf8[]))[]))%0#0 (copy)",
        "2"
      ]
    },
    "667": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%extract_uint16%0#0",
        "aggregate%extract_uint16%1#0",
        "reinterpret_Encoded((uint64,uint64,(uint64,(len+uint8[]),(len+utf8[]))),(len+(uint64,(len+uint8[]),(len+utf8[]))[]))%0#0"
      ],
      "stack_out": [
        "aggregate%extract_uint16%0#0",
        "reinterpret_Encoded((uint64,uint64,(uint64,(len+uint8[]),(len+utf8[]))),(len+(uint64,(len+uint8[]),(len+utf8[]))[]))%0#0",
        "aggregate%extract_uint16%1#0"
      ]
    },
    "668": {
      "op": "dig 1",
      "stack_out": [
        "aggregate%extract_uint16%0#0",
        "reinterpret_Encoded((uint64,uint64,(uint64,(len+uint8[]),(len+utf8[]))),(len+(uint64,(len+uint8[]),(len+utf8[]))[]))%0#0",
        "aggregate%extract_uint16%1#0",
        "reinterpret_Encoded((uint64,uint64,(uint64,(len+uint8[]),(len+utf8[]))),(len+(uint64,(len+uint8[]),(len+utf8[]))[]))%0#0 (copy)"
      ]
    },
    "670": {
      "op": "uncover 3",
      "stack_out": [
        "reinterpret_Encoded((uint64,uint64,(uint64,(len+uint8[]),(len+utf8[]))),(len+(uint64,(len+uint8[]),(len+utf8[]))[]))%0#0",
        "aggregate%extract_uint16%1#0",
        "reinterpret_Encoded((uint64,uint64,(uint64,(len+uint8[]),(len+utf8[]))),(len+(uint64,(len+uint8[]),(len+utf8[]))[]))%0#0 (copy)",
        "aggregate%extract_uint16%0#0"
      ]
    },
    "672": {
      "op": "uncover 2",
      "stack_out": [
        "reinterpret_Encoded((uint64,uint64,(uint64,(len+uint8[]),(len+utf8[]))),(len+(uint64,(len+uint8[]),(len+utf8[]))[]))%0#0",
        "reinterpret_Encoded((uint64,uint64,(uint64,(len+uint8[]),(len+utf8[]))),(len+(uint64,(len+uint8[]),(len+utf8[]))[]))%0#0 (copy)",
        "aggregate%extract_uint16%0#0",
        "aggregate%extract_uint16%1#0"
      ]
    },
    "674": {
      "op": "substring3",
      "defined_out": [
        "aggregate%substring3%0#0",
        "reinterpret_Encoded((uint64,uint64,(uint64,(len+uint8[]),(len+utf8[]))),(len+(uint64,(len+uint8[]),(len+utf8[]))[]))%0#0"
      ],
      "stack_out": [
        "reinterpret_Encoded((uint64,uint64,(uint64,(len+uint8[]),(len+utf8[]))),(len+(uint64,(len+uint8[]),(len+utf8[]))[]))%0#0",
        "aggregate%substring3%0#0"
      ]
    },
    "675": {
      "op": "dup",
      "defined_out": [
        "aggregate%substring3%0#0",
        "aggregate%substring3%0#0 (copy)",
        "reinterpret_Encoded((uint64,uint64,(uint64,(len+uint8[]),(len+utf8[]))),(len+(uint64,(len+uint8[]),(len+utf8[]))[]))%0#0"
      ],
      "stack_out": [
        "reinterpret_Encoded((uint64,uint64,(uint64,(len+uint8[]),(len+utf8[]))),(len+(uint64,(len+uint8[]),(len+utf8[]))[]))%0#0",
        "aggregate%substring3%0#0",
        "aggregate%substring3%0#0 (copy)"
      ]
    },
    "676": {
      "op": "intc_0 // 0",
      "stack_out": [
        "reinterpret_Encoded((uint64,uint64,(uint64,(len+uint8[]),(len+utf8[]))),(len+(uint64,(len+uint8[]),(len+utf8[]))[]))%0#0",
        "aggregate%substring3%0#0",
        "aggregate%substring3%0#0 (copy)",
        "0"
      ]
    },
    "677": {
      "op": "intc_1 // 8",
      "defined_out": [
        "0",
        "8",
        "aggregate%substring3%0#0",
        "aggregate%substring3%0#0 (copy)",
        "reinterpret_Encoded((uint64,uint64,(uint64,(len+uint8[]),(len+utf8[]))),(len+(uint64,(len+uint8[]),(len+utf8[]))[]))%0#0"
      ],
      "stack_out": [
        "reinterpret_Encoded((uint64,uint64,(uint64,(len+uint8[]),(len+utf8[]))),(len+(uint64,(len+uint8[]),(len+utf8[]))[]))%0#0",
        "aggregate%substring3%0#0",
        "aggregate%substring3%0#0 (copy)",
        "0",
        "8"
      ]
    },
    "678": {
      "op": "extract3",
      "defined_out": [
        "aggregate%extract%0#0",
        "aggregate%substring3%0#0",
        "reinterpret_Encoded((uint64,uint64,(uint64,(len+uint8[]),(len+utf8[]))),(len+(uint64,(len+uint8[]),(len+utf8[]))[]))%0#0"
      ],
      "stack_out": [
        "reinterpret_Encoded((uint64,uint64,(uint64,(len+uint8[]),(len+utf8[]))),(len+(uint64,(len+uint8[]),(len+utf8[]))[]))%0#0",
        "aggregate%substring3%0#0",
        "aggregate%extract%0#0"
      ]
    },
    "679": {
      "op": "btoi",
      "defined_out": [
        "aggregate%item0%0#0",
        "aggregate%substring3%0#0",
        "reinterpret_Encoded((uint64,uint64,(uint64,(len+uint8[]),(len+utf8[]))),(len+(uint64,(len+uint8[]),(len+utf8[]))[]))%0#0"
      ],
      "stack_out": [
        "reinterpret_Encoded((uint64,uint64,(uint64,(len+uint8[]),(len+utf8[]))),(len+(uint64,(len+uint8[]),(len+utf8[]))[]))%0#0",
        "aggregate%substring3%0#0",
        "aggregate%item0%0#0"
      ]
    },
    "680": {
      "op": "cover 2",
      "stack_out": [
        "aggregate%item0%0#0",
        "reinterpret_Encoded((uint64,uint64,(uint64,(len+uint8[]),(len+utf8[]))),(len+(uint64,(len+uint8[]),(len+utf8[]))[]))%0#0",
        "aggregate%substring3%0#0"
      ]
    },
    "682": {
      "op": "dup",
      "stack_out": [
        "aggregate%item0%0#0",
        "reinterpret_Encoded((uint64,uint64,(uint64,(len+uint8[]),(len+utf8[]))),(len+(uint64,(len+uint8[]),(len+utf8[]))[]))%0#0",
        "aggregate%substring3%0#0",
        "aggregate%substring3%0#0 (copy)"
      ]
    },
    "683": {
      "op": "intc_1 // 8",
      "stack_out": [
        "aggregate%item0%0#0",
        "reinterpret_Encoded((uint64,uint64,(uint64,(len+uint8[]),(len+utf8[]))),(len+(uint64,(len+uint8[]),(len+utf8[]))[]))%0#0",
        "aggregate%substring3%0#0",
        "aggregate%substring3%0#0 (copy)",
        "8"
      ]
    },
    "684": {
      "op": "intc_1 // 8",
      "stack_out": [
        "aggregate%item0%0#0",
        "reinterpret_Encoded((uint64,uint64,(uint64,(len+uint8[]),(len+utf8[]))),(len+(uint64,(len+uint8[]),(len+utf8[]))[]))%0#0",
        "aggregate%substring3%0#0",
        "aggregate%substring3%0#0 (copy)",
        "8",
        "8"
      ]
    },
    "685": {
      "op": "extract3",
      "defined_out": [
        "aggregate%extract%1#0",
        "aggregate%item0%0#0",
        "aggregate%substring3%0#0",
        "reinterpret_Encoded((uint64,uint64,(uint64,(len+uint8[]),(len+utf8[]))),(len+(uint64,(len+uint8[]),(len+utf8[]))[]))%0#0"
      ],
      "stack_out": [
        "aggregate%item0%0#0",
        "reinterpret_Encoded((uint64,uint64,(uint64,(len+uint8[]),(len+utf8[]))),(len+(uint64,(len+uint8[]),(len+utf8[]))[]))%0#0",
        "aggregate%substring3%0#0",
        "aggregate%extract%1#0"
      ]
    },
    "686": {
      "op": "cover 1",
      "stack_out": [
        "aggregate%item0%0#0",
        "reinterpret_Encoded((uint64,uint64,(uint64,(len+uint8[]),(len+utf8[]))),(len+(uint64,(len+uint8[]),(len+utf8[]))[]))%0#0",
        "aggregate%extract%1#0",
        "aggregate%substring3%0#0"
      ]
    },
    "688": {
      "op": "dup",
      "stack_out": [
        "aggregate%item0%0#0",
        "reinterpret_Encoded((uint64,uint64,(uint64,(len+uint8[]),(len+utf8[]))),(len+(uint64,(len+uint8[]),(len+utf8[]))[]))%0#0",
        "aggregate%extract%1#0",
        "aggregate%substring3%0#0",
        "aggregate%substring3%0#0 (copy)"
      ]
    },
    "689": {
      "op": "pushint 16 // 16",
      "defined_out": [
        "16",
        "aggregate%extract%1#0",
        "aggregate%item0%0#0",
        "aggregate%substring3%0#0",
        "aggregate%substring3%0#0 (copy)",
        "reinterpret_Encoded((uint64,uint64,(uint64,(len+uint8[]),(len+utf8[]))),(len+(uint64,(len+uint8[]),(len+utf8[]))[]))%0#0"
      ],
      "stack_out": [
        "aggregate%item0%0#0",
        "reinterpret_Encoded((uint64,uint64,(uint64,(len+uint8[]),(len+utf8[]))),(len+(uint64,(len+uint8[]),(len+utf8[]))[]))%0#0",
        "aggregate%extract%1#0",
        "aggregate%substring3%0#0",
        "aggregate%substring3%0#0 (copy)",
        "16"
      ]
    },
    "691": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%extract%1#0",
        "aggregate%extract_uint16%2#0",
        "aggregate%item0%0#0",
        "aggregate%substring3%0#0",
        "reinterpret_Encoded((uint64,uint64,(uint64,(len+uint8[]),(len+utf8[]))),(len+(uint64,(len+uint8[]),(len+utf8[]))[]))%0#0"
      ],
      "stack_out": [
        "aggregate%item0%0#0",
        "reinterpret_Encoded((uint64,uint64,(uint64,(len+uint8[]),(len+utf8[]))),(len+(uint64,(len+uint8[]),(len+utf8[]))[]))%0#0",
        "aggregate%extract%1#0",
        "aggregate%substring3%0#0",
        "aggregate%extract_uint16%2#0"
      ]
    },
    "692": {
      "op": "cover 1",
      "stack_out": [
        "aggregate%item0%0#0",
        "reinterpret_Encoded((uint64,uint64,(uint64,(len+uint8[]),(len+utf8[]))),(len+(uint64,(len+uint8[]),(len+utf8[]))[]))%0#0",
        "aggregate%extract%1#0",
        "aggregate%extract_uint16%2#0",
        "aggregate%substring3%0#0"
      ]
    },
    "694": {
      "op": "dup",
      "stack_out": [
        "aggregate%item0%0#0",
        "reinterpret_Encoded((uint64,uint64,(uint64,(len+uint8[]),(len+utf8[]))),(len+(uint64,(len+uint8[]),(len+utf8[]))[]))%0#0",
        "aggregate%extract%1#0",
        "aggregate%extract_uint16%2#0",
        "aggregate%substring3%0#0",
        "aggregate%substring3%0#0 (copy)"
      ]
    },
    "695": {
      "op": "len",
      "defined_out": [
        "aggregate%extract%1#0",
        "aggregate%extract_uint16%2#0",
        "aggregate%item0%0#0",
        "aggregate%len%0#0",
        "aggregate%substring3%0#0",
        "reinterpret_Encoded((uint64,uint64,(uint64,(len+uint8[]),(len+utf8[]))),(len+(uint64,(len+uint8[]),(len+utf8[]))[]))%0#0"
      ],
      "stack_out": [
        "aggregate%item0%0#0",
        "reinterpret_Encoded((uint64,uint64,(uint64,(len+uint8[]),(len+utf8[]))),(len+(uint64,(len+uint8[]),(len+utf8[]))[]))%0#0",
        "aggregate%extract%1#0",
        "aggregate%extract_uint16%2#0",
        "aggregate%substring3%0#0",
        "aggregate%len%0#0"
      ]
    },
    "696": {
      "op": "cover 1",
      "stack_out": [
        "aggregate%item0%0#0",
        "reinterpret_Encoded((uint64,uint64,(uint64,(len+uint8[]),(len+utf8[]))),(len+(uint64,(len+uint8[]),(len+utf8[]))[]))%0#0",
        "aggregate%extract%1#0",
        "aggregate%extract_uint16%2#0",
        "aggregate%len%0#0",
        "aggregate%substring3%0#0"
      ]
    },
    "698": {
      "op": "uncover 2",
      "stack_out": [
        "aggregate%item0%0#0",
        "reinterpret_Encoded((uint64,uint64,(uint64,(len+uint8[]),(len+utf8[]))),(len+(uint64,(len+uint8[]),(len+utf8[]))[]))%0#0",
        "aggregate%extract%1#0",
        "aggregate%len%0#0",
        "aggregate%substring3%0#0",
        "aggregate%extract_uint16%2#0"
      ]
    },
    "700": {
      "op": "uncover 2",
      "stack_out": [
        "aggregate%item0%0#0",
        "reinterpret_Encoded((uint64,uint64,(uint64,(len+uint8[]),(len+utf8[]))),(len+(uint64,(len+uint8[]),(len+utf8[]))[]))%0#0",
        "aggregate%extract%1#0",
        "aggregate%substring3%0#0",
        "aggregate%extract_uint16%2#0",
        "aggregate%len%0#0"
      ]
    },
    "702": {
      "op": "substring3",
      "defined_out": [
        "aggregate%extract%1#0",
        "aggregate%item0%0#0",
        "aggregate%substring3%1#0",
        "reinterpret_Encoded((uint64,uint64,(uint64,(len+uint8[]),(len+utf8[]))),(len+(uint64,(len+uint8[]),(len+utf8[]))[]))%0#0"
      ],
      "stack_out": [
        "aggregate%item0%0#0",
        "reinterpret_Encoded((uint64,uint64,(uint64,(len+uint8[]),(len+utf8[]))),(len+(uint64,(len+uint8[]),(len+utf8[]))[]))%0#0",
        "aggregate%extract%1#0",
        "aggregate%substring3%1#0"
      ]
    },
    "703": {
      "op": "dup",
      "defined_out": [
        "aggregate%extract%1#0",
        "aggregate%item0%0#0",
        "aggregate%substring3%1#0",
        "aggregate%substring3%1#0 (copy)",
        "reinterpret_Encoded((uint64,uint64,(uint64,(len+uint8[]),(len+utf8[]))),(len+(uint64,(len+uint8[]),(len+utf8[]))[]))%0#0"
      ],
      "stack_out": [
        "aggregate%item0%0#0",
        "reinterpret_Encoded((uint64,uint64,(uint64,(len+uint8[]),(len+utf8[]))),(len+(uint64,(len+uint8[]),(len+utf8[]))[]))%0#0",
        "aggregate%extract%1#0",
        "aggregate%substring3%1#0",
        "aggregate%substring3%1#0 (copy)"
      ]
    },
    "704": {
      "op": "intc_0 // 0",
      "stack_out": [
        "aggregate%item0%0#0",
        "reinterpret_Encoded((uint64,uint64,(uint64,(len+uint8[]),(len+utf8[]))),(len+(uint64,(len+uint8[]),(len+utf8[]))[]))%0#0",
        "aggregate%extract%1#0",
        "aggregate%substring3%1#0",
        "aggregate%substring3%1#0 (copy)",
        "0"
      ]
    },
    "705": {
      "op": "intc_1 // 8",
      "stack_out": [
        "aggregate%item0%0#0",
        "reinterpret_Encoded((uint64,uint64,(uint64,(len+uint8[]),(len+utf8[]))),(len+(uint64,(len+uint8[]),(len+utf8[]))[]))%0#0",
        "aggregate%extract%1#0",
        "aggregate%substring3%1#0",
        "aggregate%substring3%1#0 (copy)",
        "0",
        "8"
      ]
    },
    "706": {
      "op": "extract3",
      "defined_out": [
        "aggregate%extract%1#0",
        "aggregate%extract%2#0",
        "aggregate%item0%0#0",
        "aggregate%substring3%1#0",
        "reinterpret_Encoded((uint64,uint64,(uint64,(len+uint8[]),(len+utf8[]))),(len+(uint64,(len+uint8[]),(len+utf8[]))[]))%0#0"
      ],
      "stack_out": [
        "aggregate%item0%0#0",
        "reinterpret_Encoded((uint64,uint64,(uint64,(len+uint8[]),(len+utf8[]))),(len+(uint64,(len+uint8[]),(len+utf8[]))[]))%0#0",
        "aggregate%extract%1#0",
        "aggregate%substring3%1#0",
        "aggregate%extract%2#0"
      ]
    },
    "707": {
      "op": "btoi",
      "defined_out": [
        "aggregate%extract%1#0",
        "aggregate%item0%0#0",
        "aggregate%item0%1#0",
        "aggregate%substring3%1#0",
        "reinterpret_Encoded((uint64,uint64,(uint64,(len+uint8[]),(len+utf8[]))),(len+(uint64,(len+uint8[]),(len+utf8[]))[]))%0#0"
      ],
      "stack_out": [
        "aggregate%item0%0#0",
        "reinterpret_Encoded((uint64,uint64,(uint64,(len+uint8[]),(len+utf8[]))),(len+(uint64,(len+uint8[]),(len+utf8[]))[]))%0#0",
        "aggregate%extract%1#0",
        "aggregate%substring3%1#0",
        "aggregate%item0%1#0"
      ]
    },
    "708": {
      "op": "cover 1",
      "stack_out": [
        "aggregate%item0%0#0",
        "reinterpret_Encoded((uint64,uint64,(uint64,(len+uint8[]),(len+utf8[]))),(len+(uint64,(len+uint8[]),(len+utf8[]))[]))%0#0",
        "aggregate%extract%1#0",
        "aggregate%item0%1#0",
        "aggregate%substring3%1#0"
      ]
    },
    "710": {
      "op": "dup",
      "stack_out": [
        "aggregate%item0%0#0",
        "reinterpret_Encoded((uint64,uint64,(uint64,(len+uint8[]),(len+utf8[]))),(len+(uint64,(len+uint8[]),(len+utf8[]))[]))%0#0",
        "aggregate%extract%1#0",
        "aggregate%item0%1#0",
        "aggregate%substring3%1#0",
        "aggregate%substring3%1#0 (copy)"
      ]
    },
    "711": {
      "op": "intc_1 // 8",
      "stack_out": [
        "aggregate%item0%0#0",
        "reinterpret_Encoded((uint64,uint64,(uint64,(len+uint8[]),(len+utf8[]))),(len+(uint64,(len+uint8[]),(len+utf8[]))[]))%0#0",
        "aggregate%extract%1#0",
        "aggregate%item0%1#0",
        "aggregate%substring3%1#0",
        "aggregate%substring3%1#0 (copy)",
        "8"
      ]
    },
    "712": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%extract%1#0",
        "aggregate%extract_uint16%3#0",
        "aggregate%item0%0#0",
        "aggregate%item0%1#0",
        "aggregate%substring3%1#0",
        "reinterpret_Encoded((uint64,uint64,(uint64,(len+uint8[]),(len+utf8[]))),(len+(uint64,(len+uint8[]),(len+utf8[]))[]))%0#0"
      ],
      "stack_out": [
        "aggregate%item0%0#0",
        "reinterpret_Encoded((uint64,uint64,(uint64,(len+uint8[]),(len+utf8[]))),(len+(uint64,(len+uint8[]),(len+utf8[]))[]))%0#0",
        "aggregate%extract%1#0",
        "aggregate%item0%1#0",
        "aggregate%substring3%1#0",
        "aggregate%extract_uint16%3#0"
      ]
    },
    "713": {
      "op": "cover 1",
      "stack_out": [
        "aggregate%item0%0#0",
        "reinterpret_Encoded((uint64,uint64,(uint64,(len+uint8[]),(len+utf8[]))),(len+(uint64,(len+uint8[]),(len+utf8[]))[]))%0#0",
        "aggregate%extract%1#0",
        "aggregate%item0%1#0",
        "aggregate%extract_uint16%3#0",
        "aggregate%substring3%1#0"
      ]
    },
    "715": {
      "op": "dup",
      "stack_out": [
        "aggregate%item0%0#0",
        "reinterpret_Encoded((uint64,uint64,(uint64,(len+uint8[]),(len+utf8[]))),(len+(uint64,(len+uint8[]),(len+utf8[]))[]))%0#0",
        "aggregate%extract%1#0",
        "aggregate%item0%1#0",
        "aggregate%extract_uint16%3#0",
        "aggregate%substring3%1#0",
        "aggregate%substring3%1#0 (copy)"
      ]
    },
    "716": {
      "op": "pushint 10 // 10",
      "defined_out": [
        "10",
        "aggregate%extract%1#0",
        "aggregate%extract_uint16%3#0",
        "aggregate%item0%0#0",
        "aggregate%item0%1#0",
        "aggregate%substring3%1#0",
        "aggregate%substring3%1#0 (copy)",
        "reinterpret_Encoded((uint64,uint64,(uint64,(len+uint8[]),(len+utf8[]))),(len+(uint64,(len+uint8[]),(len+utf8[]))[]))%0#0"
      ],
      "stack_out": [
        "aggregate%item0%0#0",
        "reinterpret_Encoded((uint64,uint64,(uint64,(len+uint8[]),(len+utf8[]))),(len+(uint64,(len+uint8[]),(len+utf8[]))[]))%0#0",
        "aggregate%extract%1#0",
        "aggregate%item0%1#0",
        "aggregate%extract_uint16%3#0",
        "aggregate%substring3%1#0",
        "aggregate%substring3%1#0 (copy)",
        "10"
      ]
    },
    "718": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%extract%1#0",
        "aggregate%extract_uint16%3#0",
        "aggregate%extract_uint16%4#0",
        "aggregate%item0%0#0",
        "aggregate%item0%1#0",
        "aggregate%substring3%1#0",
        "reinterpret_Encoded((uint64,uint64,(uint64,(len+uint8[]),(len+utf8[]))),(len+(uint64,(len+uint8[]),(len+utf8[]))[]))%0#0"
      ],
      "stack_out": [
        "aggregate%item0%0#0",
        "reinterpret_Encoded((uint64,uint64,(uint64,(len+uint8[]),(len+utf8[]))),(len+(uint64,(len+uint8[]),(len+utf8[]))[]))%0#0",
        "aggregate%extract%1#0",
        "aggregate%item0%1#0",
        "aggregate%extract_uint16%3#0",
        "aggregate%substring3%1#0",
        "aggregate%extract_uint16%4#0"
      ]
    },
    "719": {
      "op": "dig 1",
      "stack_out": [
        "aggregate%item0%0#0",
        "reinterpret_Encoded((uint64,uint64,(uint64,(len+uint8[]),(len+utf8[]))),(len+(uint64,(len+uint8[]),(len+utf8[]))[]))%0#0",
        "aggregate%extract%1#0",
        "aggregate%item0%1#0",
        "aggregate%extract_uint16%3#0",
        "aggregate%substring3%1#0",
        "aggregate%extract_uint16%4#0",
        "aggregate%substring3%1#0 (copy)"
      ]
    },
    "721": {
      "op": "uncover 3",
      "stack_out": [
        "aggregate%item0%0#0",
        "reinterpret_Encoded((uint64,uint64,(uint64,(len+uint8[]),(len+utf8[]))),(len+(uint64,(len+uint8[]),(len+utf8[]))[]))%0#0",
        "aggregate%extract%1#0",
        "aggregate%item0%1#0",
        "aggregate%substring3%1#0",
        "aggregate%extract_uint16%4#0",
        "aggregate%substring3%1#0 (copy)",
        "aggregate%extract_uint16%3#0"
      ]
    },
    "723": {
      "op": "uncover 2",
      "stack_out": [
        "aggregate%item0%0#0",
        "reinterpret_Encoded((uint64,uint64,(uint64,(len+uint8[]),(len+utf8[]))),(len+(uint64,(len+uint8[]),(len+utf8[]))[]))%0#0",
        "aggregate%extract%1#0",
        "aggregate%item0%1#0",
        "aggregate%substring3%1#0",
        "aggregate%substring3%1#0 (copy)",
        "aggregate%extract_uint16%3#0",
        "aggregate%extract_uint16%4#0"
      ]
    },
    "725": {
      "op": "substring3",
      "defined_out": [
        "aggregate%extract%1#0",
        "aggregate%item0%0#0",
        "aggregate%item0%1#0",
        "aggregate%substring3%1#0",
        "aggregate%substring3%2#0",
        "reinterpret_Encoded((uint64,uint64,(uint64,(len+uint8[]),(len+utf8[]))),(len+(uint64,(len+uint8[]),(len+utf8[]))[]))%0#0"
      ],
      "stack_out": [
        "aggregate%item0%0#0",
        "reinterpret_Encoded((uint64,uint64,(uint64,(len+uint8[]),(len+utf8[]))),(len+(uint64,(len+uint8[]),(len+utf8[]))[]))%0#0",
        "aggregate%extract%1#0",
        "aggregate%item0%1#0",
        "aggregate%substring3%1#0",
        "aggregate%substring3%2#0"
      ]
    },
    "726": {
      "op": "extract 2 0",
      "defined_out": [
        "aggregate%extract%1#0",
        "aggregate%item0%0#0",
        "aggregate%item0%1#0",
        "aggregate%item1%0#0",
        "aggregate%substring3%1#0",
        "reinterpret_Encoded((uint64,uint64,(uint64,(len+uint8[]),(len+utf8[]))),(len+(uint64,(len+uint8[]),(len+utf8[]))[]))%0#0"
      ],
      "stack_out": [
        "aggregate%item0%0#0",
        "reinterpret_Encoded((uint64,uint64,(uint64,(len+uint8[]),(len+utf8[]))),(len+(uint64,(len+uint8[]),(len+utf8[]))[]))%0#0",
        "aggregate%extract%1#0",
        "aggregate%item0%1#0",
        "aggregate%substring3%1#0",
        "aggregate%item1%0#0"
      ]
    },
    "729": {
      "op": "cover 1",
      "stack_out": [
        "aggregate%item0%0#0",
        "reinterpret_Encoded((uint64,uint64,(uint64,(len+uint8[]),(len+utf8[]))),(len+(uint64,(len+uint8[]),(len+utf8[]))[]))%0#0",
        "aggregate%extract%1#0",
        "aggregate%item0%1#0",
        "aggregate%item1%0#0",
        "aggregate%substring3%1#0"
      ]
    },
    "731": {
      "op": "dup",
      "stack_out": [
        "aggregate%item0%0#0",
        "reinterpret_Encoded((uint64,uint64,(uint64,(len+uint8[]),(len+utf8[]))),(len+(uint64,(len+uint8[]),(len+utf8[]))[]))%0#0",
        "aggregate%extract%1#0",
        "aggregate%item0%1#0",
        "aggregate%item1%0#0",
        "aggregate%substring3%1#0",
        "aggregate%substring3%1#0 (copy)"
      ]
    },
    "732": {
      "op": "pushint 10 // 10",
      "stack_out": [
        "aggregate%item0%0#0",
        "reinterpret_Encoded((uint64,uint64,(uint64,(len+uint8[]),(len+utf8[]))),(len+(uint64,(len+uint8[]),(len+utf8[]))[]))%0#0",
        "aggregate%extract%1#0",
        "aggregate%item0%1#0",
        "aggregate%item1%0#0",
        "aggregate%substring3%1#0",
        "aggregate%substring3%1#0 (copy)",
        "10"
      ]
    },
    "734": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%extract%1#0",
        "aggregate%extract_uint16%5#0",
        "aggregate%item0%0#0",
        "aggregate%item0%1#0",
        "aggregate%item1%0#0",
        "aggregate%substring3%1#0",
        "reinterpret_Encoded((uint64,uint64,(uint64,(len+uint8[]),(len+utf8[]))),(len+(uint64,(len+uint8[]),(len+utf8[]))[]))%0#0"
      ],
      "stack_out": [
        "aggregate%item0%0#0",
        "reinterpret_Encoded((uint64,uint64,(uint64,(len+uint8[]),(len+utf8[]))),(len+(uint64,(len+uint8[]),(len+utf8[]))[]))%0#0",
        "aggregate%extract%1#0",
        "aggregate%item0%1#0",
        "aggregate%item1%0#0",
        "aggregate%substring3%1#0",
        "aggregate%extract_uint16%5#0"
      ]
    },
    "735": {
      "op": "cover 1",
      "stack_out": [
        "aggregate%item0%0#0",
        "reinterpret_Encoded((uint64,uint64,(uint64,(len+uint8[]),(len+utf8[]))),(len+(uint64,(len+uint8[]),(len+utf8[]))[]))%0#0",
        "aggregate%extract%1#0",
        "aggregate%item0%1#0",
        "aggregate%item1%0#0",
        "aggregate%extract_uint16%5#0",
        "aggregate%substring3%1#0"
      ]
    },
    "737": {
      "op": "dup",
      "stack_out": [
        "aggregate%item0%0#0",
        "reinterpret_Encoded((uint64,uint64,(uint64,(len+uint8[]),(len+utf8[]))),(len+(uint64,(len+uint8[]),(len+utf8[]))[]))%0#0",
        "aggregate%extract%1#0",
        "aggregate%item0%1#0",
        "aggregate%item1%0#0",
        "aggregate%extract_uint16%5#0",
        "aggregate%substring3%1#0",
        "aggregate%substring3%1#0 (copy)"
      ]
    },
    "738": {
      "op": "len",
      "defined_out": [
        "aggregate%extract%1#0",
        "aggregate%extract_uint16%5#0",
        "aggregate%item0%0#0",
        "aggregate%item0%1#0",
        "aggregate%item1%0#0",
        "aggregate%len%1#0",
        "aggregate%substring3%1#0",
        "reinterpret_Encoded((uint64,uint64,(uint64,(len+uint8[]),(len+utf8[]))),(len+(uint64,(len+uint8[]),(len+utf8[]))[]))%0#0"
      ],
      "stack_out": [
        "aggregate%item0%0#0",
        "reinterpret_Encoded((uint64,uint64,(uint64,(len+uint8[]),(len+utf8[]))),(len+(uint64,(len+uint8[]),(len+utf8[]))[]))%0#0",
        "aggregate%extract%1#0",
        "aggregate%item0%1#0",
        "aggregate%item1%0#0",
        "aggregate%extract_uint16%5#0",
        "aggregate%substring3%1#0",
        "aggregate%len%1#0"
      ]
    },
    "739": {
      "op": "cover 1",
      "stack_out": [
        "aggregate%item0%0#0",
        "reinterpret_Encoded((uint64,uint64,(uint64,(len+uint8[]),(len+utf8[]))),(len+(uint64,(len+uint8[]),(len+utf8[]))[]))%0#0",
        "aggregate%extract%1#0",
        "aggregate%item0%1#0",
        "aggregate%item1%0#0",
        "aggregate%extract_uint16%5#0",
        "aggregate%len%1#0",
        "aggregate%substring3%1#0"
      ]
    },
    "741": {
      "op": "uncover 2",
      "stack_out": [
        "aggregate%item0%0#0",
        "reinterpret_Encoded((uint64,uint64,(uint64,(len+uint8[]),(len+utf8[]))),(len+(uint64,(len+uint8[]),(len+utf8[]))[]))%0#0",
        "aggregate%extract%1#0",
        "aggregate%item0%1#0",
        "aggregate%item1%0#0",
        "aggregate%len%1#0",
        "aggregate%substring3%1#0",
        "aggregate%extract_uint16%5#0"
      ]
    },
    "743": {
      "op": "uncover 2",
      "stack_out": [
        "aggregate%item0%0#0",
        "reinterpret_Encoded((uint64,uint64,(uint64,(len+uint8[]),(len+utf8[]))),(len+(uint64,(len+uint8[]),(len+utf8[]))[]))%0#0",
        "aggregate%extract%1#0",
        "aggregate%item0%1#0",
        "aggregate%item1%0#0",
        "aggregate%substring3%1#0",
        "aggregate%extract_uint16%5#0",
        "aggregate%len%1#0"
      ]
    },
    "745": {
      "op": "substring3",
      "defined_out": [
        "aggregate%extract%1#0",
        "aggregate%item0%0#0",
        "aggregate%item0%1#0",
        "aggregate%item1%0#0",
        "aggregate%substring3%3#0",
        "reinterpret_Encoded((uint64,uint64,(uint64,(len+uint8[]),(len+utf8[]))),(len+(uint64,(len+uint8[]),(len+utf8[]))[]))%0#0"
      ],
      "stack_out": [
        "aggregate%item0%0#0",
        "reinterpret_Encoded((uint64,uint64,(uint64,(len+uint8[]),(len+utf8[]))),(len+(uint64,(len+uint8[]),(len+utf8[]))[]))%0#0",
        "aggregate%extract%1#0",
        "aggregate%item0%1#0",
        "aggregate%item1%0#0",
        "aggregate%substring3%3#0"
      ]
    },
    "746": {
      "op": "extract 2 0",
      "defined_out": [
        "aggregate%extract%1#0",
        "aggregate%item0%0#0",
        "aggregate%item0%1#0",
        "aggregate%item1%0#0",
        "aggregate%item2%0#0",
        "reinterpret_Encoded((uint64,uint64,(uint64,(len+uint8[]),(len+utf8[]))),(len+(uint64,(len+uint8[]),(len+utf8[]))[]))%0#0"
      ],
      "stack_out": [
        "aggregate%item0%0#0",
        "reinterpret_Encoded((uint64,uint64,(uint64,(len+uint8[]),(len+utf8[]))),(len+(uint64,(len+uint8[]),(len+utf8[]))[]))%0#0",
        "aggregate%extract%1#0",
        "aggregate%item0%1#0",
        "aggregate%item1%0#0",
        "aggregate%item2%0#0"
      ]
    },
    "749": {
      "op": "dig 4",
      "stack_out": [
        "aggregate%item0%0#0",
        "reinterpret_Encoded((uint64,uint64,(uint64,(len+uint8[]),(len+utf8[]))),(len+(uint64,(len+uint8[]),(len+utf8[]))[]))%0#0",
        "aggregate%extract%1#0",
        "aggregate%item0%1#0",
        "aggregate%item1%0#0",
        "aggregate%item2%0#0",
        "reinterpret_Encoded((uint64,uint64,(uint64,(len+uint8[]),(len+utf8[]))),(len+(uint64,(len+uint8[]),(len+utf8[]))[]))%0#0 (copy)"
      ]
    },
    "751": {
      "op": "intc_3 // 2",
      "stack_out": [
        "aggregate%item0%0#0",
        "reinterpret_Encoded((uint64,uint64,(uint64,(len+uint8[]),(len+utf8[]))),(len+(uint64,(len+uint8[]),(len+utf8[]))[]))%0#0",
        "aggregate%extract%1#0",
        "aggregate%item0%1#0",
        "aggregate%item1%0#0",
        "aggregate%item2%0#0",
        "reinterpret_Encoded((uint64,uint64,(uint64,(len+uint8[]),(len+utf8[]))),(len+(uint64,(len+uint8[]),(len+utf8[]))[]))%0#0 (copy)",
        "2"
      ]
    },
    "752": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%extract%1#0",
        "aggregate%extract_uint16%6#0",
        "aggregate%item0%0#0",
        "aggregate%item0%1#0",
        "aggregate%item1%0#0",
        "aggregate%item2%0#0",
        "reinterpret_Encoded((uint64,uint64,(uint64,(len+uint8[]),(len+utf8[]))),(len+(uint64,(len+uint8[]),(len+utf8[]))[]))%0#0"
      ],
      "stack_out": [
        "aggregate%item0%0#0",
        "reinterpret_Encoded((uint64,uint64,(uint64,(len+uint8[]),(len+utf8[]))),(len+(uint64,(len+uint8[]),(len+utf8[]))[]))%0#0",
        "aggregate%extract%1#0",
        "aggregate%item0%1#0",
        "aggregate%item1%0#0",
        "aggregate%item2%0#0",
        "aggregate%extract_uint16%6#0"
      ]
    },
    "753": {
      "op": "cover 1",
      "stack_out": [
        "aggregate%item0%0#0",
        "reinterpret_Encoded((uint64,uint64,(uint64,(len+uint8[]),(len+utf8[]))),(len+(uint64,(len+uint8[]),(len+utf8[]))[]))%0#0",
        "aggregate%extract%1#0",
        "aggregate%item0%1#0",
        "aggregate%item1%0#0",
        "aggregate%extract_uint16%6#0",
        "aggregate%item2%0#0"
      ]
    },
    "755": {
      "op": "dig 5",
      "stack_out": [
        "aggregate%item0%0#0",
        "reinterpret_Encoded((uint64,uint64,(uint64,(len+uint8[]),(len+utf8[]))),(len+(uint64,(len+uint8[]),(len+utf8[]))[]))%0#0",
        "aggregate%extract%1#0",
        "aggregate%item0%1#0",
        "aggregate%item1%0#0",
        "aggregate%extract_uint16%6#0",
        "aggregate%item2%0#0",
        "reinterpret_Encoded((uint64,uint64,(uint64,(len+uint8[]),(len+utf8[]))),(len+(uint64,(len+uint8[]),(len+utf8[]))[]))%0#0 (copy)"
      ]
    },
    "757": {
      "op": "len",
      "defined_out": [
        "aggregate%extract%1#0",
        "aggregate%extract_uint16%6#0",
        "aggregate%item0%0#0",
        "aggregate%item0%1#0",
        "aggregate%item1%0#0",
        "aggregate%item2%0#0",
        "aggregate%len%2#0",
        "reinterpret_Encoded((uint64,uint64,(uint64,(len+uint8[]),(len+utf8[]))),(len+(uint64,(len+uint8[]),(len+utf8[]))[]))%0#0"
      ],
      "stack_out": [
        "aggregate%item0%0#0",
        "reinterpret_Encoded((uint64,uint64,(uint64,(len+uint8[]),(len+utf8[]))),(len+(uint64,(len+uint8[]),(len+utf8[]))[]))%0#0",
        "aggregate%extract%1#0",
        "aggregate%item0%1#0",
        "aggregate%item1%0#0",
        "aggregate%extract_uint16%6#0",
        "aggregate%item2%0#0",
        "aggregate%len%2#0"
      ]
    },
    "758": {
      "op": "cover 1",
      "stack_out": [
        "aggregate%item0%0#0",
        "reinterpret_Encoded((uint64,uint64,(uint64,(len+uint8[]),(len+utf8[]))),(len+(uint64,(len+uint8[]),(len+utf8[]))[]))%0#0",
        "aggregate%extract%1#0",
        "aggregate%item0%1#0",
        "aggregate%item1%0#0",
        "aggregate%extract_uint16%6#0",
        "aggregate%len%2#0",
        "aggregate%item2%0#0"
      ]
    },
    "760": {
      "op": "uncover 6",
      "stack_out": [
        "aggregate%item0%0#0",
        "aggregate%extract%1#0",
        "aggregate%item0%1#0",
        "aggregate%item1%0#0",
        "aggregate%extract_uint16%6#0",
        "aggregate%len%2#0",
        "aggregate%item2%0#0",
        "reinterpret_Encoded((uint64,uint64,(uint64,(len+uint8[]),(len+utf8[]))),(len+(uint64,(len+uint8[]),(len+utf8[]))[]))%0#0"
      ]
    },
    "762": {
      "op": "uncover 3",
      "stack_out": [
        "aggregate%item0%0#0",
        "aggregate%extract%1#0",
        "aggregate%item0%1#0",
        "aggregate%item1%0#0",
        "aggregate%len%2#0",
        "aggregate%item2%0#0",
        "reinterpret_Encoded((uint64,uint64,(uint64,(len+uint8[]),(len+utf8[]))),(len+(uint64,(len+uint8[]),(len+utf8[]))[]))%0#0",
        "aggregate%extract_uint16%6#0"
      ]
    },
    "764": {
      "op": "uncover 3",
      "stack_out": [
        "aggregate%item0%0#0",
        "aggregate%extract%1#0",
        "aggregate%item0%1#0",
        "aggregate%item1%0#0",
        "aggregate%item2%0#0",
        "reinterpret_Encoded((uint64,uint64,(uint64,(len+uint8[]),(len+utf8[]))),(len+(uint64,(len+uint8[]),(len+utf8[]))[]))%0#0",
        "aggregate%extract_uint16%6#0",
        "aggregate%len%2#0"
      ]
    },
    "766": {
      "op": "substring3",
      "defined_out": [
        "aggregate%extract%1#0",
        "aggregate%item0%0#0",
        "aggregate%item0%1#0",
        "aggregate%item1%0#0",
        "aggregate%item2%0#0",
        "aggregate%substring3%4#0"
      ],
      "stack_out": [
        "aggregate%item0%0#0",
        "aggregate%extract%1#0",
        "aggregate%item0%1#0",
        "aggregate%item1%0#0",
        "aggregate%item2%0#0",
        "aggregate%substring3%4#0"
      ]
    },
    "767": {
      "op": "uncover 5",
      "stack_out": [
        "aggregate%extract%1#0",
        "aggregate%item0%1#0",
        "aggregate%item1%0#0",
        "aggregate%item2%0#0",
        "aggregate%substring3%4#0",
        "aggregate%item0%0#0"
      ]
    },
    "769": {
      "op": "cover 1",
      "defined_out": [
        "aggregate%extract%1#0",
        "aggregate%item0%1#0",
        "aggregate%item1%0#0",
        "aggregate%item2%0#0",
        "aggregate%substring3%4#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "aggregate%extract%1#0",
        "aggregate%item0%1#0",
        "aggregate%item1%0#0",
        "aggregate%item2%0#0",
        "tmp%0#0",
        "aggregate%substring3%4#0"
      ]
    },
    "771": {
      "op": "uncover 5",
      "defined_out": [
        "aggregate%item0%1#0",
        "aggregate%item1%0#0",
        "aggregate%item2%0#0",
        "aggregate%substring3%4#0",
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "aggregate%item0%1#0",
        "aggregate%item1%0#0",
        "aggregate%item2%0#0",
        "tmp%0#0",
        "aggregate%substring3%4#0",
        "tmp%1#0"
      ]
    },
    "773": {
      "op": "uncover 5",
      "defined_out": [
        "aggregate%item1%0#0",
        "aggregate%item2%0#0",
        "aggregate%substring3%4#0",
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "aggregate%item1%0#0",
        "aggregate%item2%0#0",
        "tmp%0#0",
        "aggregate%substring3%4#0",
        "tmp%1#0",
        "tmp%2#0"
      ]
    },
    "775": {
      "op": "uncover 5",
      "defined_out": [
        "aggregate%item2%0#0",
        "aggregate%substring3%4#0",
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "aggregate%item2%0#0",
        "tmp%0#0",
        "aggregate%substring3%4#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0"
      ]
    },
    "777": {
      "op": "uncover 5",
      "defined_out": [
        "aggregate%substring3%4#0",
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "aggregate%substring3%4#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0"
      ]
    },
    "779": {
      "op": "uncover 4",
      "defined_out": [
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0"
      ]
    },
    "781": {
      "op": "uncover 5",
      "stack_out": [
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%0#0"
      ]
    },
    "783": {
      "op": "uncover 5",
      "stack_out": [
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%0#0",
        "tmp%1#0"
      ]
    },
    "785": {
      "op": "uncover 5",
      "stack_out": [
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0"
      ]
    },
    "787": {
      "op": "uncover 5",
      "stack_out": [
        "tmp%4#0",
        "tmp%5#0",
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0"
      ]
    },
    "789": {
      "op": "uncover 5",
      "stack_out": [
        "tmp%5#0",
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0"
      ]
    },
    "791": {
      "op": "uncover 5",
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0"
      ]
    },
    "793": {
      "callsub": "test_cases.tuple_support.nested_tuples.NestedTuples.store_tuple",
      "op": "callsub test_cases.tuple_support.nested_tuples.NestedTuples.store_tuple",
      "stack_out": []
    },
    "796": {
      "op": "intc_2 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "797": {
      "op": "return",
      "stack_out": []
    },
    "798": {
      "subroutine": "test_cases.tuple_support.nested_tuples.NestedTuples.load_tuple[routing]",
      "params": {},
      "block": "load_tuple",
      "stack_in": [],
      "op": "b load_tuple_block@0"
    },
    "801": {
      "block": "load_tuple_block@0",
      "stack_in": [],
      "callsub": "test_cases.tuple_support.nested_tuples.NestedTuples.load_tuple",
      "op": "callsub test_cases.tuple_support.nested_tuples.NestedTuples.load_tuple",
      "defined_out": [
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0"
      ]
    },
    "804": {
      "op": "cover 5",
      "stack_out": [
        "tmp%5#0",
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0"
      ]
    },
    "806": {
      "op": "cover 4",
      "stack_out": [
        "tmp%5#0",
        "tmp%4#0",
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0"
      ]
    },
    "808": {
      "op": "cover 3",
      "stack_out": [
        "tmp%5#0",
        "tmp%4#0",
        "tmp%3#0",
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0"
      ]
    },
    "810": {
      "op": "cover 2",
      "stack_out": [
        "tmp%5#0",
        "tmp%4#0",
        "tmp%3#0",
        "tmp%2#0",
        "tmp%0#0",
        "tmp%1#0"
      ]
    },
    "812": {
      "op": "cover 1",
      "stack_out": [
        "tmp%5#0",
        "tmp%4#0",
        "tmp%3#0",
        "tmp%2#0",
        "tmp%1#0",
        "tmp%0#0"
      ]
    },
    "814": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(uint64)%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "tmp%4#0",
        "tmp%3#0",
        "tmp%2#0",
        "tmp%1#0",
        "aggregate%as_Encoded(uint64)%0#0"
      ]
    },
    "815": {
      "op": "bytec_0 // 0x",
      "defined_out": [
        "0x",
        "aggregate%as_Encoded(uint64)%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "tmp%4#0",
        "tmp%3#0",
        "tmp%2#0",
        "tmp%1#0",
        "aggregate%as_Encoded(uint64)%0#0",
        "0x"
      ]
    },
    "816": {
      "op": "uncover 1",
      "stack_out": [
        "tmp%5#0",
        "tmp%4#0",
        "tmp%3#0",
        "tmp%2#0",
        "tmp%1#0",
        "0x",
        "aggregate%as_Encoded(uint64)%0#0"
      ]
    },
    "818": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "tmp%4#0",
        "tmp%3#0",
        "tmp%2#0",
        "tmp%1#0",
        "aggregate%head%0#0"
      ]
    },
    "819": {
      "op": "uncover 1",
      "stack_out": [
        "tmp%5#0",
        "tmp%4#0",
        "tmp%3#0",
        "tmp%2#0",
        "aggregate%head%0#0",
        "tmp%1#0"
      ]
    },
    "821": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "tmp%4#0",
        "tmp%3#0",
        "tmp%2#0",
        "aggregate%head%1#0"
      ]
    },
    "822": {
      "op": "cover 3",
      "stack_out": [
        "tmp%5#0",
        "aggregate%head%1#0",
        "tmp%4#0",
        "tmp%3#0",
        "tmp%2#0"
      ]
    },
    "824": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(uint64)%1#0",
        "aggregate%head%1#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "aggregate%head%1#0",
        "tmp%4#0",
        "tmp%3#0",
        "aggregate%as_Encoded(uint64)%1#0"
      ]
    },
    "825": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "tmp%5#0",
        "aggregate%head%1#0",
        "tmp%4#0",
        "tmp%3#0",
        "aggregate%as_Encoded(uint64)%1#0",
        "0x"
      ]
    },
    "826": {
      "op": "uncover 1",
      "stack_out": [
        "tmp%5#0",
        "aggregate%head%1#0",
        "tmp%4#0",
        "tmp%3#0",
        "0x",
        "aggregate%as_Encoded(uint64)%1#0"
      ]
    },
    "828": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%1#0",
        "aggregate%head%2#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "aggregate%head%1#0",
        "tmp%4#0",
        "tmp%3#0",
        "aggregate%head%2#0"
      ]
    },
    "829": {
      "op": "dig 1",
      "defined_out": [
        "aggregate%head%1#0",
        "aggregate%head%2#0",
        "tmp%3#0",
        "tmp%3#0 (copy)",
        "tmp%4#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "aggregate%head%1#0",
        "tmp%4#0",
        "tmp%3#0",
        "aggregate%head%2#0",
        "tmp%3#0 (copy)"
      ]
    },
    "831": {
      "op": "len",
      "defined_out": [
        "aggregate%head%1#0",
        "aggregate%head%2#0",
        "aggregate%length%0#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "aggregate%head%1#0",
        "tmp%4#0",
        "tmp%3#0",
        "aggregate%head%2#0",
        "aggregate%length%0#0"
      ]
    },
    "832": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%0#0",
        "aggregate%head%1#0",
        "aggregate%head%2#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "aggregate%head%1#0",
        "tmp%4#0",
        "tmp%3#0",
        "aggregate%head%2#0",
        "aggregate%as_bytes%0#0"
      ]
    },
    "833": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%head%1#0",
        "aggregate%head%2#0",
        "aggregate%length_uint16%0#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "aggregate%head%1#0",
        "tmp%4#0",
        "tmp%3#0",
        "aggregate%head%2#0",
        "aggregate%length_uint16%0#0"
      ]
    },
    "836": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%5#0",
        "aggregate%head%1#0",
        "tmp%4#0",
        "aggregate%head%2#0",
        "aggregate%length_uint16%0#0",
        "tmp%3#0"
      ]
    },
    "838": {
      "op": "concat",
      "defined_out": [
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%head%1#0",
        "aggregate%head%2#0",
        "tmp%4#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "aggregate%head%1#0",
        "tmp%4#0",
        "aggregate%head%2#0",
        "aggregate%as_Encoded(len+uint8[])%0#0"
      ]
    },
    "839": {
      "op": "pushint 12 // 12",
      "defined_out": [
        "12",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%head%1#0",
        "aggregate%head%2#0",
        "tmp%4#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "aggregate%head%1#0",
        "tmp%4#0",
        "aggregate%head%2#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "12"
      ]
    },
    "841": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%as_bytes%1#0",
        "aggregate%head%1#0",
        "aggregate%head%2#0",
        "tmp%4#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "aggregate%head%1#0",
        "tmp%4#0",
        "aggregate%head%2#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%as_bytes%1#0"
      ]
    },
    "842": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%head%1#0",
        "aggregate%head%2#0",
        "aggregate%offset_as_uint16%0#0",
        "tmp%4#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "aggregate%head%1#0",
        "tmp%4#0",
        "aggregate%head%2#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%offset_as_uint16%0#0"
      ]
    },
    "845": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%5#0",
        "aggregate%head%1#0",
        "tmp%4#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%offset_as_uint16%0#0",
        "aggregate%head%2#0"
      ]
    },
    "847": {
      "op": "uncover 1",
      "stack_out": [
        "tmp%5#0",
        "aggregate%head%1#0",
        "tmp%4#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%head%2#0",
        "aggregate%offset_as_uint16%0#0"
      ]
    },
    "849": {
      "op": "concat",
      "defined_out": [
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%head%1#0",
        "aggregate%head%3#0",
        "tmp%4#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "aggregate%head%1#0",
        "tmp%4#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%head%3#0"
      ]
    },
    "850": {
      "op": "cover 1",
      "stack_out": [
        "tmp%5#0",
        "aggregate%head%1#0",
        "tmp%4#0",
        "aggregate%head%3#0",
        "aggregate%as_Encoded(len+uint8[])%0#0"
      ]
    },
    "852": {
      "op": "dup",
      "defined_out": [
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%as_Encoded(len+uint8[])%0#0 (copy)",
        "aggregate%head%1#0",
        "aggregate%head%3#0",
        "tmp%4#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "aggregate%head%1#0",
        "tmp%4#0",
        "aggregate%head%3#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%as_Encoded(len+uint8[])%0#0 (copy)"
      ]
    },
    "853": {
      "op": "len",
      "defined_out": [
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%data_length%0#0",
        "aggregate%head%1#0",
        "aggregate%head%3#0",
        "tmp%4#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "aggregate%head%1#0",
        "tmp%4#0",
        "aggregate%head%3#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%data_length%0#0"
      ]
    },
    "854": {
      "op": "pushint 12 // 12",
      "stack_out": [
        "tmp%5#0",
        "aggregate%head%1#0",
        "tmp%4#0",
        "aggregate%head%3#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%data_length%0#0",
        "12"
      ]
    },
    "856": {
      "op": "+",
      "defined_out": [
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%head%1#0",
        "aggregate%head%3#0",
        "tmp%4#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "aggregate%head%1#0",
        "tmp%4#0",
        "aggregate%head%3#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%current_tail_offset%0#0"
      ]
    },
    "857": {
      "op": "dig 3",
      "defined_out": [
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%head%1#0",
        "aggregate%head%3#0",
        "tmp%4#0",
        "tmp%4#0 (copy)",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "aggregate%head%1#0",
        "tmp%4#0",
        "aggregate%head%3#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%current_tail_offset%0#0",
        "tmp%4#0 (copy)"
      ]
    },
    "859": {
      "op": "len",
      "defined_out": [
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%head%1#0",
        "aggregate%head%3#0",
        "aggregate%length%1#0",
        "tmp%4#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "aggregate%head%1#0",
        "tmp%4#0",
        "aggregate%head%3#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%length%1#0"
      ]
    },
    "860": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%as_bytes%2#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%head%1#0",
        "aggregate%head%3#0",
        "tmp%4#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "aggregate%head%1#0",
        "tmp%4#0",
        "aggregate%head%3#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%as_bytes%2#0"
      ]
    },
    "861": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%head%1#0",
        "aggregate%head%3#0",
        "aggregate%length_uint16%1#0",
        "tmp%4#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "aggregate%head%1#0",
        "tmp%4#0",
        "aggregate%head%3#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%length_uint16%1#0"
      ]
    },
    "864": {
      "op": "uncover 4",
      "stack_out": [
        "tmp%5#0",
        "aggregate%head%1#0",
        "aggregate%head%3#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%length_uint16%1#0",
        "tmp%4#0"
      ]
    },
    "866": {
      "op": "concat",
      "defined_out": [
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%encoded_value%1#0",
        "aggregate%head%1#0",
        "aggregate%head%3#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "aggregate%head%1#0",
        "aggregate%head%3#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%encoded_value%1#0"
      ]
    },
    "867": {
      "op": "cover 1",
      "defined_out": [
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%as_Encoded(len+utf8[])%0#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%head%1#0",
        "aggregate%head%3#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "aggregate%head%1#0",
        "aggregate%head%3#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%as_Encoded(len+utf8[])%0#0",
        "aggregate%current_tail_offset%0#0"
      ]
    },
    "869": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%as_Encoded(len+utf8[])%0#0",
        "aggregate%as_bytes%3#0",
        "aggregate%head%1#0",
        "aggregate%head%3#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "aggregate%head%1#0",
        "aggregate%head%3#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%as_Encoded(len+utf8[])%0#0",
        "aggregate%as_bytes%3#0"
      ]
    },
    "870": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%as_Encoded(len+utf8[])%0#0",
        "aggregate%head%1#0",
        "aggregate%head%3#0",
        "aggregate%offset_as_uint16%1#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "aggregate%head%1#0",
        "aggregate%head%3#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%as_Encoded(len+utf8[])%0#0",
        "aggregate%offset_as_uint16%1#0"
      ]
    },
    "873": {
      "op": "uncover 3",
      "stack_out": [
        "tmp%5#0",
        "aggregate%head%1#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%as_Encoded(len+utf8[])%0#0",
        "aggregate%offset_as_uint16%1#0",
        "aggregate%head%3#0"
      ]
    },
    "875": {
      "op": "uncover 1",
      "stack_out": [
        "tmp%5#0",
        "aggregate%head%1#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%as_Encoded(len+utf8[])%0#0",
        "aggregate%head%3#0",
        "aggregate%offset_as_uint16%1#0"
      ]
    },
    "877": {
      "op": "concat",
      "defined_out": [
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%as_Encoded(len+utf8[])%0#0",
        "aggregate%head%1#0",
        "aggregate%head%4#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "aggregate%head%1#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%as_Encoded(len+utf8[])%0#0",
        "aggregate%head%4#0"
      ]
    },
    "878": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%5#0",
        "aggregate%head%1#0",
        "aggregate%as_Encoded(len+utf8[])%0#0",
        "aggregate%head%4#0",
        "aggregate%as_Encoded(len+uint8[])%0#0"
      ]
    },
    "880": {
      "op": "concat",
      "defined_out": [
        "aggregate%as_Encoded(len+utf8[])%0#0",
        "aggregate%concat%0#0",
        "aggregate%head%1#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "aggregate%head%1#0",
        "aggregate%as_Encoded(len+utf8[])%0#0",
        "aggregate%concat%0#0"
      ]
    },
    "881": {
      "op": "uncover 1",
      "stack_out": [
        "tmp%5#0",
        "aggregate%head%1#0",
        "aggregate%concat%0#0",
        "aggregate%as_Encoded(len+utf8[])%0#0"
      ]
    },
    "883": {
      "op": "concat",
      "defined_out": [
        "aggregate%as_Encoded(uint64,(len+uint8[]),(len+utf8[]))%0#0",
        "aggregate%head%1#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "aggregate%head%1#0",
        "aggregate%as_Encoded(uint64,(len+uint8[]),(len+utf8[]))%0#0"
      ]
    },
    "884": {
      "op": "pushint 18 // 18",
      "defined_out": [
        "18",
        "aggregate%as_Encoded(uint64,(len+uint8[]),(len+utf8[]))%0#0",
        "aggregate%head%1#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "aggregate%head%1#0",
        "aggregate%as_Encoded(uint64,(len+uint8[]),(len+utf8[]))%0#0",
        "18"
      ]
    },
    "886": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(uint64,(len+uint8[]),(len+utf8[]))%0#0",
        "aggregate%as_bytes%4#0",
        "aggregate%head%1#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "aggregate%head%1#0",
        "aggregate%as_Encoded(uint64,(len+uint8[]),(len+utf8[]))%0#0",
        "aggregate%as_bytes%4#0"
      ]
    },
    "887": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%as_Encoded(uint64,(len+uint8[]),(len+utf8[]))%0#0",
        "aggregate%head%1#0",
        "aggregate%offset_as_uint16%2#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "aggregate%head%1#0",
        "aggregate%as_Encoded(uint64,(len+uint8[]),(len+utf8[]))%0#0",
        "aggregate%offset_as_uint16%2#0"
      ]
    },
    "890": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%5#0",
        "aggregate%as_Encoded(uint64,(len+uint8[]),(len+utf8[]))%0#0",
        "aggregate%offset_as_uint16%2#0",
        "aggregate%head%1#0"
      ]
    },
    "892": {
      "op": "uncover 1",
      "stack_out": [
        "tmp%5#0",
        "aggregate%as_Encoded(uint64,(len+uint8[]),(len+utf8[]))%0#0",
        "aggregate%head%1#0",
        "aggregate%offset_as_uint16%2#0"
      ]
    },
    "894": {
      "op": "concat",
      "defined_out": [
        "aggregate%as_Encoded(uint64,(len+uint8[]),(len+utf8[]))%0#0",
        "aggregate%head%5#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "aggregate%as_Encoded(uint64,(len+uint8[]),(len+utf8[]))%0#0",
        "aggregate%head%5#0"
      ]
    },
    "895": {
      "op": "uncover 1",
      "stack_out": [
        "tmp%5#0",
        "aggregate%head%5#0",
        "aggregate%as_Encoded(uint64,(len+uint8[]),(len+utf8[]))%0#0"
      ]
    },
    "897": {
      "op": "concat",
      "defined_out": [
        "aggregate%as_Encoded(uint64,uint64,(uint64,(len+uint8[]),(len+utf8[])))%0#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "aggregate%as_Encoded(uint64,uint64,(uint64,(len+uint8[]),(len+utf8[])))%0#0"
      ]
    },
    "898": {
      "op": "pushint 4 // 4",
      "defined_out": [
        "4",
        "aggregate%as_Encoded(uint64,uint64,(uint64,(len+uint8[]),(len+utf8[])))%0#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "aggregate%as_Encoded(uint64,uint64,(uint64,(len+uint8[]),(len+utf8[])))%0#0",
        "4"
      ]
    },
    "900": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(uint64,uint64,(uint64,(len+uint8[]),(len+utf8[])))%0#0",
        "aggregate%as_bytes%5#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "aggregate%as_Encoded(uint64,uint64,(uint64,(len+uint8[]),(len+utf8[])))%0#0",
        "aggregate%as_bytes%5#0"
      ]
    },
    "901": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%as_Encoded(uint64,uint64,(uint64,(len+uint8[]),(len+utf8[])))%0#0",
        "aggregate%offset_as_uint16%3#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "aggregate%as_Encoded(uint64,uint64,(uint64,(len+uint8[]),(len+utf8[])))%0#0",
        "aggregate%offset_as_uint16%3#0"
      ]
    },
    "904": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "tmp%5#0",
        "aggregate%as_Encoded(uint64,uint64,(uint64,(len+uint8[]),(len+utf8[])))%0#0",
        "aggregate%offset_as_uint16%3#0",
        "0x"
      ]
    },
    "905": {
      "op": "uncover 1",
      "stack_out": [
        "tmp%5#0",
        "aggregate%as_Encoded(uint64,uint64,(uint64,(len+uint8[]),(len+utf8[])))%0#0",
        "0x",
        "aggregate%offset_as_uint16%3#0"
      ]
    },
    "907": {
      "op": "concat",
      "defined_out": [
        "aggregate%as_Encoded(uint64,uint64,(uint64,(len+uint8[]),(len+utf8[])))%0#0",
        "aggregate%head%6#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "aggregate%as_Encoded(uint64,uint64,(uint64,(len+uint8[]),(len+utf8[])))%0#0",
        "aggregate%head%6#0"
      ]
    },
    "908": {
      "op": "cover 1",
      "stack_out": [
        "tmp%5#0",
        "aggregate%head%6#0",
        "aggregate%as_Encoded(uint64,uint64,(uint64,(len+uint8[]),(len+utf8[])))%0#0"
      ]
    },
    "910": {
      "op": "dup",
      "defined_out": [
        "aggregate%as_Encoded(uint64,uint64,(uint64,(len+uint8[]),(len+utf8[])))%0#0",
        "aggregate%as_Encoded(uint64,uint64,(uint64,(len+uint8[]),(len+utf8[])))%0#0 (copy)",
        "aggregate%head%6#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "aggregate%head%6#0",
        "aggregate%as_Encoded(uint64,uint64,(uint64,(len+uint8[]),(len+utf8[])))%0#0",
        "aggregate%as_Encoded(uint64,uint64,(uint64,(len+uint8[]),(len+utf8[])))%0#0 (copy)"
      ]
    },
    "911": {
      "op": "len",
      "defined_out": [
        "aggregate%as_Encoded(uint64,uint64,(uint64,(len+uint8[]),(len+utf8[])))%0#0",
        "aggregate%data_length%3#0",
        "aggregate%head%6#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "aggregate%head%6#0",
        "aggregate%as_Encoded(uint64,uint64,(uint64,(len+uint8[]),(len+utf8[])))%0#0",
        "aggregate%data_length%3#0"
      ]
    },
    "912": {
      "op": "pushint 4 // 4",
      "stack_out": [
        "tmp%5#0",
        "aggregate%head%6#0",
        "aggregate%as_Encoded(uint64,uint64,(uint64,(len+uint8[]),(len+utf8[])))%0#0",
        "aggregate%data_length%3#0",
        "4"
      ]
    },
    "914": {
      "op": "+",
      "defined_out": [
        "aggregate%as_Encoded(uint64,uint64,(uint64,(len+uint8[]),(len+utf8[])))%0#0",
        "aggregate%current_tail_offset%3#0",
        "aggregate%head%6#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "aggregate%head%6#0",
        "aggregate%as_Encoded(uint64,uint64,(uint64,(len+uint8[]),(len+utf8[])))%0#0",
        "aggregate%current_tail_offset%3#0"
      ]
    },
    "915": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(uint64,uint64,(uint64,(len+uint8[]),(len+utf8[])))%0#0",
        "aggregate%as_bytes%6#0",
        "aggregate%head%6#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "aggregate%head%6#0",
        "aggregate%as_Encoded(uint64,uint64,(uint64,(len+uint8[]),(len+utf8[])))%0#0",
        "aggregate%as_bytes%6#0"
      ]
    },
    "916": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%as_Encoded(uint64,uint64,(uint64,(len+uint8[]),(len+utf8[])))%0#0",
        "aggregate%head%6#0",
        "aggregate%offset_as_uint16%4#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "aggregate%head%6#0",
        "aggregate%as_Encoded(uint64,uint64,(uint64,(len+uint8[]),(len+utf8[])))%0#0",
        "aggregate%offset_as_uint16%4#0"
      ]
    },
    "919": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%5#0",
        "aggregate%as_Encoded(uint64,uint64,(uint64,(len+uint8[]),(len+utf8[])))%0#0",
        "aggregate%offset_as_uint16%4#0",
        "aggregate%head%6#0"
      ]
    },
    "921": {
      "op": "uncover 1",
      "stack_out": [
        "tmp%5#0",
        "aggregate%as_Encoded(uint64,uint64,(uint64,(len+uint8[]),(len+utf8[])))%0#0",
        "aggregate%head%6#0",
        "aggregate%offset_as_uint16%4#0"
      ]
    },
    "923": {
      "op": "concat",
      "defined_out": [
        "aggregate%as_Encoded(uint64,uint64,(uint64,(len+uint8[]),(len+utf8[])))%0#0",
        "aggregate%head%7#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "aggregate%as_Encoded(uint64,uint64,(uint64,(len+uint8[]),(len+utf8[])))%0#0",
        "aggregate%head%7#0"
      ]
    },
    "924": {
      "op": "uncover 1",
      "stack_out": [
        "tmp%5#0",
        "aggregate%head%7#0",
        "aggregate%as_Encoded(uint64,uint64,(uint64,(len+uint8[]),(len+utf8[])))%0#0"
      ]
    },
    "926": {
      "op": "concat",
      "defined_out": [
        "aggregate%concat%3#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "aggregate%concat%3#0"
      ]
    },
    "927": {
      "op": "uncover 1",
      "stack_out": [
        "aggregate%concat%3#0",
        "tmp%5#0"
      ]
    },
    "929": {
      "op": "concat",
      "defined_out": [
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0"
      ]
    },
    "930": {
      "op": "bytec_1 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0",
        "0x151f7c75"
      ]
    },
    "931": {
      "op": "uncover 1",
      "stack_out": [
        "0x151f7c75",
        "tmp%6#0"
      ]
    },
    "933": {
      "op": "concat",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0"
      ]
    },
    "934": {
      "op": "log",
      "stack_out": []
    },
    "935": {
      "op": "intc_2 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "936": {
      "op": "return",
      "stack_out": []
    },
    "937": {
      "subroutine": "test_cases.tuple_support.nested_tuples.NestedTuples.store_tuple_in_box[routing]",
      "params": {},
      "block": "store_tuple_in_box",
      "stack_in": [],
      "op": "b store_tuple_in_box_block@0"
    },
    "940": {
      "block": "store_tuple_in_box_block@0",
      "stack_in": [],
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded(uint64,uint64)%0#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint64,uint64)%0#0"
      ]
    },
    "943": {
      "op": "dup",
      "defined_out": [
        "reinterpret_Encoded(uint64,uint64)%0#0",
        "reinterpret_Encoded(uint64,uint64)%0#0 (copy)"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint64,uint64)%0#0",
        "reinterpret_Encoded(uint64,uint64)%0#0 (copy)"
      ]
    },
    "944": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "reinterpret_Encoded(uint64,uint64)%0#0",
        "reinterpret_Encoded(uint64,uint64)%0#0 (copy)"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint64,uint64)%0#0",
        "reinterpret_Encoded(uint64,uint64)%0#0 (copy)",
        "0"
      ]
    },
    "945": {
      "op": "intc_1 // 8",
      "defined_out": [
        "0",
        "8",
        "reinterpret_Encoded(uint64,uint64)%0#0",
        "reinterpret_Encoded(uint64,uint64)%0#0 (copy)"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint64,uint64)%0#0",
        "reinterpret_Encoded(uint64,uint64)%0#0 (copy)",
        "0",
        "8"
      ]
    },
    "946": {
      "op": "extract3",
      "defined_out": [
        "aggregate%extract%0#0",
        "reinterpret_Encoded(uint64,uint64)%0#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint64,uint64)%0#0",
        "aggregate%extract%0#0"
      ]
    },
    "947": {
      "op": "btoi",
      "defined_out": [
        "aggregate%item0%0#0",
        "reinterpret_Encoded(uint64,uint64)%0#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint64,uint64)%0#0",
        "aggregate%item0%0#0"
      ]
    },
    "948": {
      "op": "cover 1",
      "stack_out": [
        "aggregate%item0%0#0",
        "reinterpret_Encoded(uint64,uint64)%0#0"
      ]
    },
    "950": {
      "op": "intc_1 // 8",
      "stack_out": [
        "aggregate%item0%0#0",
        "reinterpret_Encoded(uint64,uint64)%0#0",
        "8"
      ]
    },
    "951": {
      "op": "intc_1 // 8",
      "stack_out": [
        "aggregate%item0%0#0",
        "reinterpret_Encoded(uint64,uint64)%0#0",
        "8",
        "8"
      ]
    },
    "952": {
      "op": "extract3",
      "defined_out": [
        "aggregate%extract%1#0",
        "aggregate%item0%0#0"
      ],
      "stack_out": [
        "aggregate%item0%0#0",
        "aggregate%extract%1#0"
      ]
    },
    "953": {
      "op": "btoi",
      "defined_out": [
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0"
      ]
    },
    "954": {
      "callsub": "test_cases.tuple_support.nested_tuples.NestedTuples.store_tuple_in_box",
      "op": "callsub test_cases.tuple_support.nested_tuples.NestedTuples.store_tuple_in_box",
      "stack_out": []
    },
    "957": {
      "op": "intc_2 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "958": {
      "op": "return",
      "stack_out": []
    },
    "959": {
      "subroutine": "test_cases.tuple_support.nested_tuples.NestedTuples.is_tuple_in_box[routing]",
      "params": {},
      "block": "is_tuple_in_box",
      "stack_in": [],
      "op": "b is_tuple_in_box_block@0"
    },
    "962": {
      "block": "is_tuple_in_box_block@0",
      "stack_in": [],
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded(uint64,uint64)%0#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint64,uint64)%0#0"
      ]
    },
    "965": {
      "op": "dup",
      "defined_out": [
        "reinterpret_Encoded(uint64,uint64)%0#0",
        "reinterpret_Encoded(uint64,uint64)%0#0 (copy)"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint64,uint64)%0#0",
        "reinterpret_Encoded(uint64,uint64)%0#0 (copy)"
      ]
    },
    "966": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "reinterpret_Encoded(uint64,uint64)%0#0",
        "reinterpret_Encoded(uint64,uint64)%0#0 (copy)"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint64,uint64)%0#0",
        "reinterpret_Encoded(uint64,uint64)%0#0 (copy)",
        "0"
      ]
    },
    "967": {
      "op": "intc_1 // 8",
      "defined_out": [
        "0",
        "8",
        "reinterpret_Encoded(uint64,uint64)%0#0",
        "reinterpret_Encoded(uint64,uint64)%0#0 (copy)"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint64,uint64)%0#0",
        "reinterpret_Encoded(uint64,uint64)%0#0 (copy)",
        "0",
        "8"
      ]
    },
    "968": {
      "op": "extract3",
      "defined_out": [
        "aggregate%extract%0#0",
        "reinterpret_Encoded(uint64,uint64)%0#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint64,uint64)%0#0",
        "aggregate%extract%0#0"
      ]
    },
    "969": {
      "op": "btoi",
      "defined_out": [
        "aggregate%item0%0#0",
        "reinterpret_Encoded(uint64,uint64)%0#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint64,uint64)%0#0",
        "aggregate%item0%0#0"
      ]
    },
    "970": {
      "op": "cover 1",
      "stack_out": [
        "aggregate%item0%0#0",
        "reinterpret_Encoded(uint64,uint64)%0#0"
      ]
    },
    "972": {
      "op": "intc_1 // 8",
      "stack_out": [
        "aggregate%item0%0#0",
        "reinterpret_Encoded(uint64,uint64)%0#0",
        "8"
      ]
    },
    "973": {
      "op": "intc_1 // 8",
      "stack_out": [
        "aggregate%item0%0#0",
        "reinterpret_Encoded(uint64,uint64)%0#0",
        "8",
        "8"
      ]
    },
    "974": {
      "op": "extract3",
      "defined_out": [
        "aggregate%extract%1#0",
        "aggregate%item0%0#0"
      ],
      "stack_out": [
        "aggregate%item0%0#0",
        "aggregate%extract%1#0"
      ]
    },
    "975": {
      "op": "btoi",
      "defined_out": [
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0"
      ]
    },
    "976": {
      "callsub": "test_cases.tuple_support.nested_tuples.NestedTuples.is_tuple_in_box",
      "op": "callsub test_cases.tuple_support.nested_tuples.NestedTuples.is_tuple_in_box",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "979": {
      "op": "bytec 8 // 0x00",
      "defined_out": [
        "0x00",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "0x00"
      ]
    },
    "981": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%2#0",
        "0x00",
        "0"
      ]
    },
    "982": {
      "op": "uncover 2",
      "stack_out": [
        "0x00",
        "0",
        "tmp%2#0"
      ]
    },
    "984": {
      "op": "setbit",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "985": {
      "op": "bytec_1 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "0x151f7c75"
      ]
    },
    "986": {
      "op": "uncover 1",
      "stack_out": [
        "0x151f7c75",
        "tmp%3#0"
      ]
    },
    "988": {
      "op": "concat",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "989": {
      "op": "log",
      "stack_out": []
    },
    "990": {
      "op": "intc_2 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "991": {
      "op": "return",
      "stack_out": []
    },
    "992": {
      "subroutine": "test_cases.tuple_support.nested_tuples.NestedTuples.load_tuple_from_box[routing]",
      "params": {},
      "block": "load_tuple_from_box",
      "stack_in": [],
      "op": "b load_tuple_from_box_block@0"
    },
    "995": {
      "block": "load_tuple_from_box_block@0",
      "stack_in": [],
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded(uint64,uint64)%0#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint64,uint64)%0#0"
      ]
    },
    "998": {
      "op": "dup",
      "defined_out": [
        "reinterpret_Encoded(uint64,uint64)%0#0",
        "reinterpret_Encoded(uint64,uint64)%0#0 (copy)"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint64,uint64)%0#0",
        "reinterpret_Encoded(uint64,uint64)%0#0 (copy)"
      ]
    },
    "999": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "reinterpret_Encoded(uint64,uint64)%0#0",
        "reinterpret_Encoded(uint64,uint64)%0#0 (copy)"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint64,uint64)%0#0",
        "reinterpret_Encoded(uint64,uint64)%0#0 (copy)",
        "0"
      ]
    },
    "1000": {
      "op": "intc_1 // 8",
      "defined_out": [
        "0",
        "8",
        "reinterpret_Encoded(uint64,uint64)%0#0",
        "reinterpret_Encoded(uint64,uint64)%0#0 (copy)"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint64,uint64)%0#0",
        "reinterpret_Encoded(uint64,uint64)%0#0 (copy)",
        "0",
        "8"
      ]
    },
    "1001": {
      "op": "extract3",
      "defined_out": [
        "aggregate%extract%0#0",
        "reinterpret_Encoded(uint64,uint64)%0#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint64,uint64)%0#0",
        "aggregate%extract%0#0"
      ]
    },
    "1002": {
      "op": "btoi",
      "defined_out": [
        "aggregate%item0%0#0",
        "reinterpret_Encoded(uint64,uint64)%0#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint64,uint64)%0#0",
        "aggregate%item0%0#0"
      ]
    },
    "1003": {
      "op": "cover 1",
      "stack_out": [
        "aggregate%item0%0#0",
        "reinterpret_Encoded(uint64,uint64)%0#0"
      ]
    },
    "1005": {
      "op": "intc_1 // 8",
      "stack_out": [
        "aggregate%item0%0#0",
        "reinterpret_Encoded(uint64,uint64)%0#0",
        "8"
      ]
    },
    "1006": {
      "op": "intc_1 // 8",
      "stack_out": [
        "aggregate%item0%0#0",
        "reinterpret_Encoded(uint64,uint64)%0#0",
        "8",
        "8"
      ]
    },
    "1007": {
      "op": "extract3",
      "defined_out": [
        "aggregate%extract%1#0",
        "aggregate%item0%0#0"
      ],
      "stack_out": [
        "aggregate%item0%0#0",
        "aggregate%extract%1#0"
      ]
    },
    "1008": {
      "op": "btoi",
      "defined_out": [
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0"
      ]
    },
    "1009": {
      "callsub": "test_cases.tuple_support.nested_tuples.NestedTuples.load_tuple_from_box",
      "op": "callsub test_cases.tuple_support.nested_tuples.NestedTuples.load_tuple_from_box",
      "defined_out": [
        "tmp%2#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "tmp%3#0"
      ]
    },
    "1012": {
      "op": "cover 1",
      "stack_out": [
        "tmp%3#0",
        "tmp%2#0"
      ]
    },
    "1014": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(uint64)%0#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "aggregate%as_Encoded(uint64)%0#0"
      ]
    },
    "1015": {
      "op": "bytec_0 // 0x",
      "defined_out": [
        "0x",
        "aggregate%as_Encoded(uint64)%0#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "aggregate%as_Encoded(uint64)%0#0",
        "0x"
      ]
    },
    "1016": {
      "op": "uncover 1",
      "stack_out": [
        "tmp%3#0",
        "0x",
        "aggregate%as_Encoded(uint64)%0#0"
      ]
    },
    "1018": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%0#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "aggregate%head%0#0"
      ]
    },
    "1019": {
      "op": "uncover 1",
      "stack_out": [
        "aggregate%head%0#0",
        "tmp%3#0"
      ]
    },
    "1021": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(uint64)%1#0",
        "aggregate%head%0#0"
      ],
      "stack_out": [
        "aggregate%head%0#0",
        "aggregate%as_Encoded(uint64)%1#0"
      ]
    },
    "1022": {
      "op": "concat",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "1023": {
      "op": "bytec_1 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "0x151f7c75"
      ]
    },
    "1024": {
      "op": "uncover 1",
      "stack_out": [
        "0x151f7c75",
        "tmp%4#0"
      ]
    },
    "1026": {
      "op": "concat",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "1027": {
      "op": "log",
      "stack_out": []
    },
    "1028": {
      "op": "intc_2 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "1029": {
      "op": "return",
      "stack_out": []
    },
    "1030": {
      "subroutine": "test_cases.tuple_support.nested_tuples.NestedTuples.maybe_load_tuple_from_box[routing]",
      "params": {},
      "block": "maybe_load_tuple_from_box",
      "stack_in": [],
      "op": "b maybe_load_tuple_from_box_block@0"
    },
    "1033": {
      "block": "maybe_load_tuple_from_box_block@0",
      "stack_in": [],
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded(uint64,uint64)%0#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint64,uint64)%0#0"
      ]
    },
    "1036": {
      "op": "dup",
      "defined_out": [
        "reinterpret_Encoded(uint64,uint64)%0#0",
        "reinterpret_Encoded(uint64,uint64)%0#0 (copy)"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint64,uint64)%0#0",
        "reinterpret_Encoded(uint64,uint64)%0#0 (copy)"
      ]
    },
    "1037": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "reinterpret_Encoded(uint64,uint64)%0#0",
        "reinterpret_Encoded(uint64,uint64)%0#0 (copy)"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint64,uint64)%0#0",
        "reinterpret_Encoded(uint64,uint64)%0#0 (copy)",
        "0"
      ]
    },
    "1038": {
      "op": "intc_1 // 8",
      "defined_out": [
        "0",
        "8",
        "reinterpret_Encoded(uint64,uint64)%0#0",
        "reinterpret_Encoded(uint64,uint64)%0#0 (copy)"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint64,uint64)%0#0",
        "reinterpret_Encoded(uint64,uint64)%0#0 (copy)",
        "0",
        "8"
      ]
    },
    "1039": {
      "op": "extract3",
      "defined_out": [
        "aggregate%extract%0#0",
        "reinterpret_Encoded(uint64,uint64)%0#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint64,uint64)%0#0",
        "aggregate%extract%0#0"
      ]
    },
    "1040": {
      "op": "btoi",
      "defined_out": [
        "aggregate%item0%0#0",
        "reinterpret_Encoded(uint64,uint64)%0#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint64,uint64)%0#0",
        "aggregate%item0%0#0"
      ]
    },
    "1041": {
      "op": "cover 1",
      "stack_out": [
        "aggregate%item0%0#0",
        "reinterpret_Encoded(uint64,uint64)%0#0"
      ]
    },
    "1043": {
      "op": "intc_1 // 8",
      "stack_out": [
        "aggregate%item0%0#0",
        "reinterpret_Encoded(uint64,uint64)%0#0",
        "8"
      ]
    },
    "1044": {
      "op": "intc_1 // 8",
      "stack_out": [
        "aggregate%item0%0#0",
        "reinterpret_Encoded(uint64,uint64)%0#0",
        "8",
        "8"
      ]
    },
    "1045": {
      "op": "extract3",
      "defined_out": [
        "aggregate%extract%1#0",
        "aggregate%item0%0#0"
      ],
      "stack_out": [
        "aggregate%item0%0#0",
        "aggregate%extract%1#0"
      ]
    },
    "1046": {
      "op": "btoi",
      "defined_out": [
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0"
      ]
    },
    "1047": {
      "callsub": "test_cases.tuple_support.nested_tuples.NestedTuples.maybe_load_tuple_from_box",
      "op": "callsub test_cases.tuple_support.nested_tuples.NestedTuples.maybe_load_tuple_from_box",
      "defined_out": [
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0"
      ]
    },
    "1050": {
      "op": "cover 2",
      "stack_out": [
        "tmp%4#0",
        "tmp%2#0",
        "tmp%3#0"
      ]
    },
    "1052": {
      "op": "cover 1",
      "stack_out": [
        "tmp%4#0",
        "tmp%3#0",
        "tmp%2#0"
      ]
    },
    "1054": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(uint64)%0#0",
        "tmp%3#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "tmp%3#0",
        "aggregate%as_Encoded(uint64)%0#0"
      ]
    },
    "1055": {
      "op": "bytec_0 // 0x",
      "defined_out": [
        "0x",
        "aggregate%as_Encoded(uint64)%0#0",
        "tmp%3#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "tmp%3#0",
        "aggregate%as_Encoded(uint64)%0#0",
        "0x"
      ]
    },
    "1056": {
      "op": "uncover 1",
      "stack_out": [
        "tmp%4#0",
        "tmp%3#0",
        "0x",
        "aggregate%as_Encoded(uint64)%0#0"
      ]
    },
    "1058": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%0#0",
        "tmp%3#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "tmp%3#0",
        "aggregate%head%0#0"
      ]
    },
    "1059": {
      "op": "uncover 1",
      "stack_out": [
        "tmp%4#0",
        "aggregate%head%0#0",
        "tmp%3#0"
      ]
    },
    "1061": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(uint64)%1#0",
        "aggregate%head%0#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "aggregate%head%0#0",
        "aggregate%as_Encoded(uint64)%1#0"
      ]
    },
    "1062": {
      "op": "concat",
      "defined_out": [
        "aggregate%as_Encoded(uint64,uint64)%0#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "aggregate%as_Encoded(uint64,uint64)%0#0"
      ]
    },
    "1063": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "tmp%4#0",
        "aggregate%as_Encoded(uint64,uint64)%0#0",
        "0x"
      ]
    },
    "1064": {
      "op": "uncover 1",
      "stack_out": [
        "tmp%4#0",
        "0x",
        "aggregate%as_Encoded(uint64,uint64)%0#0"
      ]
    },
    "1066": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%2#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "aggregate%head%2#0"
      ]
    },
    "1067": {
      "op": "bytec 8 // 0x00",
      "defined_out": [
        "0x00",
        "aggregate%head%2#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "aggregate%head%2#0",
        "0x00"
      ]
    },
    "1069": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%4#0",
        "aggregate%head%2#0",
        "0x00",
        "0"
      ]
    },
    "1070": {
      "op": "uncover 3",
      "stack_out": [
        "aggregate%head%2#0",
        "0x00",
        "0",
        "tmp%4#0"
      ]
    },
    "1072": {
      "op": "setbit",
      "defined_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%head%2#0"
      ],
      "stack_out": [
        "aggregate%head%2#0",
        "aggregate%encoded_bool%0#0"
      ]
    },
    "1073": {
      "op": "concat",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "1074": {
      "op": "bytec_1 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "0x151f7c75"
      ]
    },
    "1075": {
      "op": "uncover 1",
      "stack_out": [
        "0x151f7c75",
        "tmp%5#0"
      ]
    },
    "1077": {
      "op": "concat",
      "defined_out": [
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0"
      ]
    },
    "1078": {
      "op": "log",
      "stack_out": []
    },
    "1079": {
      "op": "intc_2 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "1080": {
      "op": "return",
      "stack_out": []
    },
    "1081": {
      "subroutine": "test_cases.tuple_support.nested_tuples.NestedTuples.load_tuple_from_box_or_default[routing]",
      "params": {},
      "block": "load_tuple_from_box_or_default",
      "stack_in": [],
      "op": "b load_tuple_from_box_or_default_block@0"
    },
    "1084": {
      "block": "load_tuple_from_box_or_default_block@0",
      "stack_in": [],
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded(uint64,uint64)%0#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint64,uint64)%0#0"
      ]
    },
    "1087": {
      "op": "dup",
      "defined_out": [
        "reinterpret_Encoded(uint64,uint64)%0#0",
        "reinterpret_Encoded(uint64,uint64)%0#0 (copy)"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint64,uint64)%0#0",
        "reinterpret_Encoded(uint64,uint64)%0#0 (copy)"
      ]
    },
    "1088": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "reinterpret_Encoded(uint64,uint64)%0#0",
        "reinterpret_Encoded(uint64,uint64)%0#0 (copy)"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint64,uint64)%0#0",
        "reinterpret_Encoded(uint64,uint64)%0#0 (copy)",
        "0"
      ]
    },
    "1089": {
      "op": "intc_1 // 8",
      "defined_out": [
        "0",
        "8",
        "reinterpret_Encoded(uint64,uint64)%0#0",
        "reinterpret_Encoded(uint64,uint64)%0#0 (copy)"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint64,uint64)%0#0",
        "reinterpret_Encoded(uint64,uint64)%0#0 (copy)",
        "0",
        "8"
      ]
    },
    "1090": {
      "op": "extract3",
      "defined_out": [
        "aggregate%extract%0#0",
        "reinterpret_Encoded(uint64,uint64)%0#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint64,uint64)%0#0",
        "aggregate%extract%0#0"
      ]
    },
    "1091": {
      "op": "btoi",
      "defined_out": [
        "aggregate%item0%0#0",
        "reinterpret_Encoded(uint64,uint64)%0#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint64,uint64)%0#0",
        "aggregate%item0%0#0"
      ]
    },
    "1092": {
      "op": "cover 1",
      "stack_out": [
        "aggregate%item0%0#0",
        "reinterpret_Encoded(uint64,uint64)%0#0"
      ]
    },
    "1094": {
      "op": "intc_1 // 8",
      "stack_out": [
        "aggregate%item0%0#0",
        "reinterpret_Encoded(uint64,uint64)%0#0",
        "8"
      ]
    },
    "1095": {
      "op": "intc_1 // 8",
      "stack_out": [
        "aggregate%item0%0#0",
        "reinterpret_Encoded(uint64,uint64)%0#0",
        "8",
        "8"
      ]
    },
    "1096": {
      "op": "extract3",
      "defined_out": [
        "aggregate%extract%1#0",
        "aggregate%item0%0#0"
      ],
      "stack_out": [
        "aggregate%item0%0#0",
        "aggregate%extract%1#0"
      ]
    },
    "1097": {
      "op": "btoi",
      "defined_out": [
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0"
      ]
    },
    "1098": {
      "callsub": "test_cases.tuple_support.nested_tuples.NestedTuples.load_tuple_from_box_or_default",
      "op": "callsub test_cases.tuple_support.nested_tuples.NestedTuples.load_tuple_from_box_or_default",
      "defined_out": [
        "tmp%2#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "tmp%3#0"
      ]
    },
    "1101": {
      "op": "cover 1",
      "stack_out": [
        "tmp%3#0",
        "tmp%2#0"
      ]
    },
    "1103": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(uint64)%0#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "aggregate%as_Encoded(uint64)%0#0"
      ]
    },
    "1104": {
      "op": "bytec_0 // 0x",
      "defined_out": [
        "0x",
        "aggregate%as_Encoded(uint64)%0#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "aggregate%as_Encoded(uint64)%0#0",
        "0x"
      ]
    },
    "1105": {
      "op": "uncover 1",
      "stack_out": [
        "tmp%3#0",
        "0x",
        "aggregate%as_Encoded(uint64)%0#0"
      ]
    },
    "1107": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%0#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "aggregate%head%0#0"
      ]
    },
    "1108": {
      "op": "uncover 1",
      "stack_out": [
        "aggregate%head%0#0",
        "tmp%3#0"
      ]
    },
    "1110": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(uint64)%1#0",
        "aggregate%head%0#0"
      ],
      "stack_out": [
        "aggregate%head%0#0",
        "aggregate%as_Encoded(uint64)%1#0"
      ]
    },
    "1111": {
      "op": "concat",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "1112": {
      "op": "bytec_1 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "0x151f7c75"
      ]
    },
    "1113": {
      "op": "uncover 1",
      "stack_out": [
        "0x151f7c75",
        "tmp%4#0"
      ]
    },
    "1115": {
      "op": "concat",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "1116": {
      "op": "log",
      "stack_out": []
    },
    "1117": {
      "op": "intc_2 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "1118": {
      "op": "return",
      "stack_out": []
    },
    "1119": {
      "subroutine": "test_cases.tuple_support.nested_tuples.NestedTuples.load_tuple_from_local_state_or_default[routing]",
      "params": {},
      "block": "load_tuple_from_local_state_or_default",
      "stack_in": [],
      "op": "b load_tuple_from_local_state_or_default_block@0"
    },
    "1122": {
      "block": "load_tuple_from_local_state_or_default_block@0",
      "stack_in": [],
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded(len+utf8[])%0#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(len+utf8[])%0#0"
      ]
    },
    "1125": {
      "op": "extract 2 0",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1128": {
      "callsub": "test_cases.tuple_support.nested_tuples.NestedTuples.load_tuple_from_local_state_or_default",
      "op": "callsub test_cases.tuple_support.nested_tuples.NestedTuples.load_tuple_from_local_state_or_default",
      "defined_out": [
        "tmp%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%2#0"
      ]
    },
    "1131": {
      "op": "cover 1",
      "stack_out": [
        "tmp%2#0",
        "tmp%1#0"
      ]
    },
    "1133": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(uint64)%0#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "aggregate%as_Encoded(uint64)%0#0"
      ]
    },
    "1134": {
      "op": "bytec_0 // 0x",
      "defined_out": [
        "0x",
        "aggregate%as_Encoded(uint64)%0#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "aggregate%as_Encoded(uint64)%0#0",
        "0x"
      ]
    },
    "1135": {
      "op": "uncover 1",
      "stack_out": [
        "tmp%2#0",
        "0x",
        "aggregate%as_Encoded(uint64)%0#0"
      ]
    },
    "1137": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%0#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "aggregate%head%0#0"
      ]
    },
    "1138": {
      "op": "uncover 1",
      "stack_out": [
        "aggregate%head%0#0",
        "tmp%2#0"
      ]
    },
    "1140": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(uint64)%1#0",
        "aggregate%head%0#0"
      ],
      "stack_out": [
        "aggregate%head%0#0",
        "aggregate%as_Encoded(uint64)%1#0"
      ]
    },
    "1141": {
      "op": "concat",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "1142": {
      "op": "bytec_1 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "0x151f7c75"
      ]
    },
    "1143": {
      "op": "uncover 1",
      "stack_out": [
        "0x151f7c75",
        "tmp%3#0"
      ]
    },
    "1145": {
      "op": "concat",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "1146": {
      "op": "log",
      "stack_out": []
    },
    "1147": {
      "op": "intc_2 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "1148": {
      "op": "return",
      "stack_out": []
    },
    "1149": {
      "subroutine": "test_cases.tuple_support.nested_tuples.NestedTuples.mutate_local_tuple[routing]",
      "params": {},
      "block": "mutate_local_tuple",
      "stack_in": [],
      "op": "b mutate_local_tuple_block@0"
    },
    "1152": {
      "block": "mutate_local_tuple_block@0",
      "stack_in": [],
      "callsub": "test_cases.tuple_support.nested_tuples.NestedTuples.mutate_local_tuple",
      "op": "callsub test_cases.tuple_support.nested_tuples.NestedTuples.mutate_local_tuple",
      "defined_out": [
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0"
      ]
    },
    "1155": {
      "op": "cover 3",
      "stack_out": [
        "tmp%3#0",
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0"
      ]
    },
    "1157": {
      "op": "cover 2",
      "stack_out": [
        "tmp%3#0",
        "tmp%2#0",
        "tmp%0#0",
        "tmp%1#0"
      ]
    },
    "1159": {
      "op": "cover 1",
      "stack_out": [
        "tmp%3#0",
        "tmp%2#0",
        "tmp%1#0",
        "tmp%0#0"
      ]
    },
    "1161": {
      "op": "pushint 4 // 4",
      "defined_out": [
        "4",
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "tmp%2#0",
        "tmp%1#0",
        "tmp%0#0",
        "4"
      ]
    },
    "1163": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%0#0",
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "tmp%2#0",
        "tmp%1#0",
        "tmp%0#0",
        "aggregate%as_bytes%0#0"
      ]
    },
    "1164": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%offset_as_uint16%0#0",
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "tmp%2#0",
        "tmp%1#0",
        "tmp%0#0",
        "aggregate%offset_as_uint16%0#0"
      ]
    },
    "1167": {
      "op": "bytec_0 // 0x",
      "defined_out": [
        "0x",
        "aggregate%offset_as_uint16%0#0",
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "tmp%2#0",
        "tmp%1#0",
        "tmp%0#0",
        "aggregate%offset_as_uint16%0#0",
        "0x"
      ]
    },
    "1168": {
      "op": "uncover 1",
      "stack_out": [
        "tmp%3#0",
        "tmp%2#0",
        "tmp%1#0",
        "tmp%0#0",
        "0x",
        "aggregate%offset_as_uint16%0#0"
      ]
    },
    "1170": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%0#0",
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "tmp%2#0",
        "tmp%1#0",
        "tmp%0#0",
        "aggregate%head%0#0"
      ]
    },
    "1171": {
      "op": "cover 4",
      "stack_out": [
        "aggregate%head%0#0",
        "tmp%3#0",
        "tmp%2#0",
        "tmp%1#0",
        "tmp%0#0"
      ]
    },
    "1173": {
      "op": "dup",
      "defined_out": [
        "aggregate%head%0#0",
        "tmp%0#0",
        "tmp%0#0 (copy)",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "aggregate%head%0#0",
        "tmp%3#0",
        "tmp%2#0",
        "tmp%1#0",
        "tmp%0#0",
        "tmp%0#0 (copy)"
      ]
    },
    "1174": {
      "op": "len",
      "defined_out": [
        "aggregate%data_length%0#0",
        "aggregate%head%0#0",
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "aggregate%head%0#0",
        "tmp%3#0",
        "tmp%2#0",
        "tmp%1#0",
        "tmp%0#0",
        "aggregate%data_length%0#0"
      ]
    },
    "1175": {
      "op": "pushint 4 // 4",
      "stack_out": [
        "aggregate%head%0#0",
        "tmp%3#0",
        "tmp%2#0",
        "tmp%1#0",
        "tmp%0#0",
        "aggregate%data_length%0#0",
        "4"
      ]
    },
    "1177": {
      "op": "+",
      "defined_out": [
        "aggregate%current_tail_offset%0#0",
        "aggregate%head%0#0",
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "aggregate%head%0#0",
        "tmp%3#0",
        "tmp%2#0",
        "tmp%1#0",
        "tmp%0#0",
        "aggregate%current_tail_offset%0#0"
      ]
    },
    "1178": {
      "op": "cover 3",
      "stack_out": [
        "aggregate%head%0#0",
        "tmp%3#0",
        "aggregate%current_tail_offset%0#0",
        "tmp%2#0",
        "tmp%1#0",
        "tmp%0#0"
      ]
    },
    "1180": {
      "op": "uncover 1",
      "stack_out": [
        "aggregate%head%0#0",
        "tmp%3#0",
        "aggregate%current_tail_offset%0#0",
        "tmp%2#0",
        "tmp%0#0",
        "tmp%1#0"
      ]
    },
    "1182": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(uint64)%0#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%head%0#0",
        "tmp%0#0",
        "tmp%2#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "aggregate%head%0#0",
        "tmp%3#0",
        "aggregate%current_tail_offset%0#0",
        "tmp%2#0",
        "tmp%0#0",
        "aggregate%as_Encoded(uint64)%0#0"
      ]
    },
    "1183": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "aggregate%head%0#0",
        "tmp%3#0",
        "aggregate%current_tail_offset%0#0",
        "tmp%2#0",
        "tmp%0#0",
        "aggregate%as_Encoded(uint64)%0#0",
        "0x"
      ]
    },
    "1184": {
      "op": "uncover 1",
      "stack_out": [
        "aggregate%head%0#0",
        "tmp%3#0",
        "aggregate%current_tail_offset%0#0",
        "tmp%2#0",
        "tmp%0#0",
        "0x",
        "aggregate%as_Encoded(uint64)%0#0"
      ]
    },
    "1186": {
      "op": "concat",
      "defined_out": [
        "aggregate%current_tail_offset%0#0",
        "aggregate%head%0#0",
        "aggregate%head%1#0",
        "tmp%0#0",
        "tmp%2#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "aggregate%head%0#0",
        "tmp%3#0",
        "aggregate%current_tail_offset%0#0",
        "tmp%2#0",
        "tmp%0#0",
        "aggregate%head%1#0"
      ]
    },
    "1187": {
      "op": "dig 2",
      "defined_out": [
        "aggregate%current_tail_offset%0#0",
        "aggregate%head%0#0",
        "aggregate%head%1#0",
        "tmp%0#0",
        "tmp%2#0",
        "tmp%2#0 (copy)",
        "tmp%3#0"
      ],
      "stack_out": [
        "aggregate%head%0#0",
        "tmp%3#0",
        "aggregate%current_tail_offset%0#0",
        "tmp%2#0",
        "tmp%0#0",
        "aggregate%head%1#0",
        "tmp%2#0 (copy)"
      ]
    },
    "1189": {
      "op": "len",
      "defined_out": [
        "aggregate%current_tail_offset%0#0",
        "aggregate%head%0#0",
        "aggregate%head%1#0",
        "aggregate%length%0#0",
        "tmp%0#0",
        "tmp%2#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "aggregate%head%0#0",
        "tmp%3#0",
        "aggregate%current_tail_offset%0#0",
        "tmp%2#0",
        "tmp%0#0",
        "aggregate%head%1#0",
        "aggregate%length%0#0"
      ]
    },
    "1190": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%1#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%head%0#0",
        "aggregate%head%1#0",
        "tmp%0#0",
        "tmp%2#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "aggregate%head%0#0",
        "tmp%3#0",
        "aggregate%current_tail_offset%0#0",
        "tmp%2#0",
        "tmp%0#0",
        "aggregate%head%1#0",
        "aggregate%as_bytes%1#0"
      ]
    },
    "1191": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%current_tail_offset%0#0",
        "aggregate%head%0#0",
        "aggregate%head%1#0",
        "aggregate%length_uint16%0#0",
        "tmp%0#0",
        "tmp%2#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "aggregate%head%0#0",
        "tmp%3#0",
        "aggregate%current_tail_offset%0#0",
        "tmp%2#0",
        "tmp%0#0",
        "aggregate%head%1#0",
        "aggregate%length_uint16%0#0"
      ]
    },
    "1194": {
      "op": "uncover 3",
      "stack_out": [
        "aggregate%head%0#0",
        "tmp%3#0",
        "aggregate%current_tail_offset%0#0",
        "tmp%0#0",
        "aggregate%head%1#0",
        "aggregate%length_uint16%0#0",
        "tmp%2#0"
      ]
    },
    "1196": {
      "op": "concat",
      "defined_out": [
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%head%0#0",
        "aggregate%head%1#0",
        "tmp%0#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "aggregate%head%0#0",
        "tmp%3#0",
        "aggregate%current_tail_offset%0#0",
        "tmp%0#0",
        "aggregate%head%1#0",
        "aggregate%as_Encoded(len+uint8[])%0#0"
      ]
    },
    "1197": {
      "op": "pushint 12 // 12",
      "defined_out": [
        "12",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%head%0#0",
        "aggregate%head%1#0",
        "tmp%0#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "aggregate%head%0#0",
        "tmp%3#0",
        "aggregate%current_tail_offset%0#0",
        "tmp%0#0",
        "aggregate%head%1#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "12"
      ]
    },
    "1199": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%as_bytes%2#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%head%0#0",
        "aggregate%head%1#0",
        "tmp%0#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "aggregate%head%0#0",
        "tmp%3#0",
        "aggregate%current_tail_offset%0#0",
        "tmp%0#0",
        "aggregate%head%1#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%as_bytes%2#0"
      ]
    },
    "1200": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%head%0#0",
        "aggregate%head%1#0",
        "aggregate%offset_as_uint16%1#0",
        "tmp%0#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "aggregate%head%0#0",
        "tmp%3#0",
        "aggregate%current_tail_offset%0#0",
        "tmp%0#0",
        "aggregate%head%1#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%offset_as_uint16%1#0"
      ]
    },
    "1203": {
      "op": "uncover 2",
      "stack_out": [
        "aggregate%head%0#0",
        "tmp%3#0",
        "aggregate%current_tail_offset%0#0",
        "tmp%0#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%offset_as_uint16%1#0",
        "aggregate%head%1#0"
      ]
    },
    "1205": {
      "op": "uncover 1",
      "stack_out": [
        "aggregate%head%0#0",
        "tmp%3#0",
        "aggregate%current_tail_offset%0#0",
        "tmp%0#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%head%1#0",
        "aggregate%offset_as_uint16%1#0"
      ]
    },
    "1207": {
      "op": "concat",
      "defined_out": [
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%head%0#0",
        "aggregate%head%2#0",
        "tmp%0#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "aggregate%head%0#0",
        "tmp%3#0",
        "aggregate%current_tail_offset%0#0",
        "tmp%0#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%head%2#0"
      ]
    },
    "1208": {
      "op": "cover 1",
      "stack_out": [
        "aggregate%head%0#0",
        "tmp%3#0",
        "aggregate%current_tail_offset%0#0",
        "tmp%0#0",
        "aggregate%head%2#0",
        "aggregate%as_Encoded(len+uint8[])%0#0"
      ]
    },
    "1210": {
      "op": "dup",
      "defined_out": [
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%as_Encoded(len+uint8[])%0#0 (copy)",
        "aggregate%current_tail_offset%0#0",
        "aggregate%head%0#0",
        "aggregate%head%2#0",
        "tmp%0#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "aggregate%head%0#0",
        "tmp%3#0",
        "aggregate%current_tail_offset%0#0",
        "tmp%0#0",
        "aggregate%head%2#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%as_Encoded(len+uint8[])%0#0 (copy)"
      ]
    },
    "1211": {
      "op": "len",
      "defined_out": [
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%data_length%1#0",
        "aggregate%head%0#0",
        "aggregate%head%2#0",
        "tmp%0#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "aggregate%head%0#0",
        "tmp%3#0",
        "aggregate%current_tail_offset%0#0",
        "tmp%0#0",
        "aggregate%head%2#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%data_length%1#0"
      ]
    },
    "1212": {
      "op": "pushint 12 // 12",
      "stack_out": [
        "aggregate%head%0#0",
        "tmp%3#0",
        "aggregate%current_tail_offset%0#0",
        "tmp%0#0",
        "aggregate%head%2#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%data_length%1#0",
        "12"
      ]
    },
    "1214": {
      "op": "+",
      "defined_out": [
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%current_tail_offset%1#0",
        "aggregate%head%0#0",
        "aggregate%head%2#0",
        "tmp%0#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "aggregate%head%0#0",
        "tmp%3#0",
        "aggregate%current_tail_offset%0#0",
        "tmp%0#0",
        "aggregate%head%2#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%current_tail_offset%1#0"
      ]
    },
    "1215": {
      "op": "dig 5",
      "defined_out": [
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%current_tail_offset%1#0",
        "aggregate%head%0#0",
        "aggregate%head%2#0",
        "tmp%0#0",
        "tmp%3#0",
        "tmp%3#0 (copy)"
      ],
      "stack_out": [
        "aggregate%head%0#0",
        "tmp%3#0",
        "aggregate%current_tail_offset%0#0",
        "tmp%0#0",
        "aggregate%head%2#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%current_tail_offset%1#0",
        "tmp%3#0 (copy)"
      ]
    },
    "1217": {
      "op": "len",
      "defined_out": [
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%current_tail_offset%1#0",
        "aggregate%head%0#0",
        "aggregate%head%2#0",
        "aggregate%length%1#0",
        "tmp%0#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "aggregate%head%0#0",
        "tmp%3#0",
        "aggregate%current_tail_offset%0#0",
        "tmp%0#0",
        "aggregate%head%2#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%current_tail_offset%1#0",
        "aggregate%length%1#0"
      ]
    },
    "1218": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%as_bytes%3#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%current_tail_offset%1#0",
        "aggregate%head%0#0",
        "aggregate%head%2#0",
        "tmp%0#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "aggregate%head%0#0",
        "tmp%3#0",
        "aggregate%current_tail_offset%0#0",
        "tmp%0#0",
        "aggregate%head%2#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%current_tail_offset%1#0",
        "aggregate%as_bytes%3#0"
      ]
    },
    "1219": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%current_tail_offset%1#0",
        "aggregate%head%0#0",
        "aggregate%head%2#0",
        "aggregate%length_uint16%1#0",
        "tmp%0#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "aggregate%head%0#0",
        "tmp%3#0",
        "aggregate%current_tail_offset%0#0",
        "tmp%0#0",
        "aggregate%head%2#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%current_tail_offset%1#0",
        "aggregate%length_uint16%1#0"
      ]
    },
    "1222": {
      "op": "uncover 6",
      "stack_out": [
        "aggregate%head%0#0",
        "aggregate%current_tail_offset%0#0",
        "tmp%0#0",
        "aggregate%head%2#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%current_tail_offset%1#0",
        "aggregate%length_uint16%1#0",
        "tmp%3#0"
      ]
    },
    "1224": {
      "op": "concat",
      "defined_out": [
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%current_tail_offset%1#0",
        "aggregate%encoded_value%1#0",
        "aggregate%head%0#0",
        "aggregate%head%2#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "aggregate%head%0#0",
        "aggregate%current_tail_offset%0#0",
        "tmp%0#0",
        "aggregate%head%2#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%current_tail_offset%1#0",
        "aggregate%encoded_value%1#0"
      ]
    },
    "1225": {
      "op": "cover 1",
      "defined_out": [
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%as_Encoded(len+utf8[])%0#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%current_tail_offset%1#0",
        "aggregate%head%0#0",
        "aggregate%head%2#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "aggregate%head%0#0",
        "aggregate%current_tail_offset%0#0",
        "tmp%0#0",
        "aggregate%head%2#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%as_Encoded(len+utf8[])%0#0",
        "aggregate%current_tail_offset%1#0"
      ]
    },
    "1227": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%as_Encoded(len+utf8[])%0#0",
        "aggregate%as_bytes%4#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%head%0#0",
        "aggregate%head%2#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "aggregate%head%0#0",
        "aggregate%current_tail_offset%0#0",
        "tmp%0#0",
        "aggregate%head%2#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%as_Encoded(len+utf8[])%0#0",
        "aggregate%as_bytes%4#0"
      ]
    },
    "1228": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%as_Encoded(len+utf8[])%0#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%head%0#0",
        "aggregate%head%2#0",
        "aggregate%offset_as_uint16%2#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "aggregate%head%0#0",
        "aggregate%current_tail_offset%0#0",
        "tmp%0#0",
        "aggregate%head%2#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%as_Encoded(len+utf8[])%0#0",
        "aggregate%offset_as_uint16%2#0"
      ]
    },
    "1231": {
      "op": "uncover 3",
      "stack_out": [
        "aggregate%head%0#0",
        "aggregate%current_tail_offset%0#0",
        "tmp%0#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%as_Encoded(len+utf8[])%0#0",
        "aggregate%offset_as_uint16%2#0",
        "aggregate%head%2#0"
      ]
    },
    "1233": {
      "op": "uncover 1",
      "stack_out": [
        "aggregate%head%0#0",
        "aggregate%current_tail_offset%0#0",
        "tmp%0#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%as_Encoded(len+utf8[])%0#0",
        "aggregate%head%2#0",
        "aggregate%offset_as_uint16%2#0"
      ]
    },
    "1235": {
      "op": "concat",
      "defined_out": [
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%as_Encoded(len+utf8[])%0#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%head%0#0",
        "aggregate%head%3#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "aggregate%head%0#0",
        "aggregate%current_tail_offset%0#0",
        "tmp%0#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%as_Encoded(len+utf8[])%0#0",
        "aggregate%head%3#0"
      ]
    },
    "1236": {
      "op": "uncover 2",
      "stack_out": [
        "aggregate%head%0#0",
        "aggregate%current_tail_offset%0#0",
        "tmp%0#0",
        "aggregate%as_Encoded(len+utf8[])%0#0",
        "aggregate%head%3#0",
        "aggregate%as_Encoded(len+uint8[])%0#0"
      ]
    },
    "1238": {
      "op": "concat",
      "defined_out": [
        "aggregate%as_Encoded(len+utf8[])%0#0",
        "aggregate%concat%0#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%head%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "aggregate%head%0#0",
        "aggregate%current_tail_offset%0#0",
        "tmp%0#0",
        "aggregate%as_Encoded(len+utf8[])%0#0",
        "aggregate%concat%0#0"
      ]
    },
    "1239": {
      "op": "uncover 1",
      "stack_out": [
        "aggregate%head%0#0",
        "aggregate%current_tail_offset%0#0",
        "tmp%0#0",
        "aggregate%concat%0#0",
        "aggregate%as_Encoded(len+utf8[])%0#0"
      ]
    },
    "1241": {
      "op": "concat",
      "defined_out": [
        "aggregate%as_Encoded(uint64,(len+uint8[]),(len+utf8[]))%0#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%head%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "aggregate%head%0#0",
        "aggregate%current_tail_offset%0#0",
        "tmp%0#0",
        "aggregate%as_Encoded(uint64,(len+uint8[]),(len+utf8[]))%0#0"
      ]
    },
    "1242": {
      "op": "uncover 2",
      "stack_out": [
        "aggregate%head%0#0",
        "tmp%0#0",
        "aggregate%as_Encoded(uint64,(len+uint8[]),(len+utf8[]))%0#0",
        "aggregate%current_tail_offset%0#0"
      ]
    },
    "1244": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(uint64,(len+uint8[]),(len+utf8[]))%0#0",
        "aggregate%as_bytes%5#0",
        "aggregate%head%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "aggregate%head%0#0",
        "tmp%0#0",
        "aggregate%as_Encoded(uint64,(len+uint8[]),(len+utf8[]))%0#0",
        "aggregate%as_bytes%5#0"
      ]
    },
    "1245": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%as_Encoded(uint64,(len+uint8[]),(len+utf8[]))%0#0",
        "aggregate%head%0#0",
        "aggregate%offset_as_uint16%3#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "aggregate%head%0#0",
        "tmp%0#0",
        "aggregate%as_Encoded(uint64,(len+uint8[]),(len+utf8[]))%0#0",
        "aggregate%offset_as_uint16%3#0"
      ]
    },
    "1248": {
      "op": "uncover 3",
      "stack_out": [
        "tmp%0#0",
        "aggregate%as_Encoded(uint64,(len+uint8[]),(len+utf8[]))%0#0",
        "aggregate%offset_as_uint16%3#0",
        "aggregate%head%0#0"
      ]
    },
    "1250": {
      "op": "uncover 1",
      "stack_out": [
        "tmp%0#0",
        "aggregate%as_Encoded(uint64,(len+uint8[]),(len+utf8[]))%0#0",
        "aggregate%head%0#0",
        "aggregate%offset_as_uint16%3#0"
      ]
    },
    "1252": {
      "op": "concat",
      "defined_out": [
        "aggregate%as_Encoded(uint64,(len+uint8[]),(len+utf8[]))%0#0",
        "aggregate%head%4#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "aggregate%as_Encoded(uint64,(len+uint8[]),(len+utf8[]))%0#0",
        "aggregate%head%4#0"
      ]
    },
    "1253": {
      "op": "uncover 2",
      "stack_out": [
        "aggregate%as_Encoded(uint64,(len+uint8[]),(len+utf8[]))%0#0",
        "aggregate%head%4#0",
        "tmp%0#0"
      ]
    },
    "1255": {
      "op": "concat",
      "defined_out": [
        "aggregate%as_Encoded(uint64,(len+uint8[]),(len+utf8[]))%0#0",
        "aggregate%concat%2#0"
      ],
      "stack_out": [
        "aggregate%as_Encoded(uint64,(len+uint8[]),(len+utf8[]))%0#0",
        "aggregate%concat%2#0"
      ]
    },
    "1256": {
      "op": "uncover 1",
      "stack_out": [
        "aggregate%concat%2#0",
        "aggregate%as_Encoded(uint64,(len+uint8[]),(len+utf8[]))%0#0"
      ]
    },
    "1258": {
      "op": "concat",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "1259": {
      "op": "bytec_1 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "0x151f7c75"
      ]
    },
    "1260": {
      "op": "uncover 1",
      "stack_out": [
        "0x151f7c75",
        "tmp%4#0"
      ]
    },
    "1262": {
      "op": "concat",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "1263": {
      "op": "log",
      "stack_out": []
    },
    "1264": {
      "op": "intc_2 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "1265": {
      "op": "return",
      "stack_out": []
    },
    "1266": {
      "subroutine": "test_cases.tuple_support.nested_tuples.NestedTuples.mutate_tuple_in_storage_currently_supported_method[routing]",
      "params": {},
      "block": "mutate_tuple_in_storage_currently_supported_method",
      "stack_in": [],
      "op": "b mutate_tuple_in_storage_currently_supported_method_block@0"
    },
    "1269": {
      "block": "mutate_tuple_in_storage_currently_supported_method_block@0",
      "stack_in": [],
      "callsub": "test_cases.tuple_support.nested_tuples.NestedTuples.mutate_tuple_in_storage_currently_supported_method",
      "op": "callsub test_cases.tuple_support.nested_tuples.NestedTuples.mutate_tuple_in_storage_currently_supported_method"
    },
    "1272": {
      "op": "intc_2 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "1273": {
      "op": "return",
      "stack_out": []
    },
    "1274": {
      "subroutine": "test_cases.tuple_support.nested_tuples.NestedTuples.run_tests[routing]",
      "params": {},
      "block": "run_tests",
      "stack_in": [],
      "op": "b run_tests_block@0"
    },
    "1277": {
      "block": "run_tests_block@0",
      "stack_in": [],
      "callsub": "test_cases.tuple_support.nested_tuples.NestedTuples.run_tests",
      "op": "callsub test_cases.tuple_support.nested_tuples.NestedTuples.run_tests",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1280": {
      "op": "bytec 8 // 0x00",
      "defined_out": [
        "0x00",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "0x00"
      ]
    },
    "1282": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "0x00",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "0x00",
        "0"
      ]
    },
    "1283": {
      "op": "uncover 2",
      "stack_out": [
        "0x00",
        "0",
        "tmp%0#0"
      ]
    },
    "1285": {
      "op": "setbit",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "1286": {
      "op": "bytec_1 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "0x151f7c75"
      ]
    },
    "1287": {
      "op": "uncover 1",
      "stack_out": [
        "0x151f7c75",
        "tmp%1#0"
      ]
    },
    "1289": {
      "op": "concat",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "1290": {
      "op": "log",
      "stack_out": []
    },
    "1291": {
      "op": "intc_2 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "1292": {
      "op": "return",
      "stack_out": []
    },
    "1293": {
      "subroutine": "test_cases.tuple_support.nested_tuples.NestedTuples.nested_tuple_params[routing]",
      "params": {},
      "block": "nested_tuple_params",
      "stack_in": [],
      "op": "b nested_tuple_params_block@0"
    },
    "1296": {
      "block": "nested_tuple_params_block@0",
      "stack_in": [],
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded((len+utf8[]),((len+uint8[]),(uint64)))%0#0"
      ],
      "stack_out": [
        "reinterpret_Encoded((len+utf8[]),((len+uint8[]),(uint64)))%0#0"
      ]
    },
    "1299": {
      "op": "dup",
      "defined_out": [
        "reinterpret_Encoded((len+utf8[]),((len+uint8[]),(uint64)))%0#0",
        "reinterpret_Encoded((len+utf8[]),((len+uint8[]),(uint64)))%0#0 (copy)"
      ],
      "stack_out": [
        "reinterpret_Encoded((len+utf8[]),((len+uint8[]),(uint64)))%0#0",
        "reinterpret_Encoded((len+utf8[]),((len+uint8[]),(uint64)))%0#0 (copy)"
      ]
    },
    "1300": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "reinterpret_Encoded((len+utf8[]),((len+uint8[]),(uint64)))%0#0",
        "reinterpret_Encoded((len+utf8[]),((len+uint8[]),(uint64)))%0#0 (copy)"
      ],
      "stack_out": [
        "reinterpret_Encoded((len+utf8[]),((len+uint8[]),(uint64)))%0#0",
        "reinterpret_Encoded((len+utf8[]),((len+uint8[]),(uint64)))%0#0 (copy)",
        "0"
      ]
    },
    "1301": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%extract_uint16%0#0",
        "reinterpret_Encoded((len+utf8[]),((len+uint8[]),(uint64)))%0#0"
      ],
      "stack_out": [
        "reinterpret_Encoded((len+utf8[]),((len+uint8[]),(uint64)))%0#0",
        "aggregate%extract_uint16%0#0"
      ]
    },
    "1302": {
      "op": "cover 1",
      "stack_out": [
        "aggregate%extract_uint16%0#0",
        "reinterpret_Encoded((len+utf8[]),((len+uint8[]),(uint64)))%0#0"
      ]
    },
    "1304": {
      "op": "dup",
      "stack_out": [
        "aggregate%extract_uint16%0#0",
        "reinterpret_Encoded((len+utf8[]),((len+uint8[]),(uint64)))%0#0",
        "reinterpret_Encoded((len+utf8[]),((len+uint8[]),(uint64)))%0#0 (copy)"
      ]
    },
    "1305": {
      "op": "intc_3 // 2",
      "defined_out": [
        "2",
        "aggregate%extract_uint16%0#0",
        "reinterpret_Encoded((len+utf8[]),((len+uint8[]),(uint64)))%0#0",
        "reinterpret_Encoded((len+utf8[]),((len+uint8[]),(uint64)))%0#0 (copy)"
      ],
      "stack_out": [
        "aggregate%extract_uint16%0#0",
        "reinterpret_Encoded((len+utf8[]),((len+uint8[]),(uint64)))%0#0",
        "reinterpret_Encoded((len+utf8[]),((len+uint8[]),(uint64)))%0#0 (copy)",
        "2"
      ]
    },
    "1306": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%extract_uint16%0#0",
        "aggregate%extract_uint16%1#0",
        "reinterpret_Encoded((len+utf8[]),((len+uint8[]),(uint64)))%0#0"
      ],
      "stack_out": [
        "aggregate%extract_uint16%0#0",
        "reinterpret_Encoded((len+utf8[]),((len+uint8[]),(uint64)))%0#0",
        "aggregate%extract_uint16%1#0"
      ]
    },
    "1307": {
      "op": "dig 1",
      "stack_out": [
        "aggregate%extract_uint16%0#0",
        "reinterpret_Encoded((len+utf8[]),((len+uint8[]),(uint64)))%0#0",
        "aggregate%extract_uint16%1#0",
        "reinterpret_Encoded((len+utf8[]),((len+uint8[]),(uint64)))%0#0 (copy)"
      ]
    },
    "1309": {
      "op": "uncover 3",
      "stack_out": [
        "reinterpret_Encoded((len+utf8[]),((len+uint8[]),(uint64)))%0#0",
        "aggregate%extract_uint16%1#0",
        "reinterpret_Encoded((len+utf8[]),((len+uint8[]),(uint64)))%0#0 (copy)",
        "aggregate%extract_uint16%0#0"
      ]
    },
    "1311": {
      "op": "uncover 2",
      "stack_out": [
        "reinterpret_Encoded((len+utf8[]),((len+uint8[]),(uint64)))%0#0",
        "reinterpret_Encoded((len+utf8[]),((len+uint8[]),(uint64)))%0#0 (copy)",
        "aggregate%extract_uint16%0#0",
        "aggregate%extract_uint16%1#0"
      ]
    },
    "1313": {
      "op": "substring3",
      "defined_out": [
        "aggregate%substring3%0#0",
        "reinterpret_Encoded((len+utf8[]),((len+uint8[]),(uint64)))%0#0"
      ],
      "stack_out": [
        "reinterpret_Encoded((len+utf8[]),((len+uint8[]),(uint64)))%0#0",
        "aggregate%substring3%0#0"
      ]
    },
    "1314": {
      "op": "extract 2 0",
      "defined_out": [
        "aggregate%item0%0#0",
        "reinterpret_Encoded((len+utf8[]),((len+uint8[]),(uint64)))%0#0"
      ],
      "stack_out": [
        "reinterpret_Encoded((len+utf8[]),((len+uint8[]),(uint64)))%0#0",
        "aggregate%item0%0#0"
      ]
    },
    "1317": {
      "op": "cover 1",
      "stack_out": [
        "aggregate%item0%0#0",
        "reinterpret_Encoded((len+utf8[]),((len+uint8[]),(uint64)))%0#0"
      ]
    },
    "1319": {
      "op": "dup",
      "stack_out": [
        "aggregate%item0%0#0",
        "reinterpret_Encoded((len+utf8[]),((len+uint8[]),(uint64)))%0#0",
        "reinterpret_Encoded((len+utf8[]),((len+uint8[]),(uint64)))%0#0 (copy)"
      ]
    },
    "1320": {
      "op": "intc_3 // 2",
      "stack_out": [
        "aggregate%item0%0#0",
        "reinterpret_Encoded((len+utf8[]),((len+uint8[]),(uint64)))%0#0",
        "reinterpret_Encoded((len+utf8[]),((len+uint8[]),(uint64)))%0#0 (copy)",
        "2"
      ]
    },
    "1321": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%extract_uint16%2#0",
        "aggregate%item0%0#0",
        "reinterpret_Encoded((len+utf8[]),((len+uint8[]),(uint64)))%0#0"
      ],
      "stack_out": [
        "aggregate%item0%0#0",
        "reinterpret_Encoded((len+utf8[]),((len+uint8[]),(uint64)))%0#0",
        "aggregate%extract_uint16%2#0"
      ]
    },
    "1322": {
      "op": "cover 1",
      "stack_out": [
        "aggregate%item0%0#0",
        "aggregate%extract_uint16%2#0",
        "reinterpret_Encoded((len+utf8[]),((len+uint8[]),(uint64)))%0#0"
      ]
    },
    "1324": {
      "op": "dup",
      "stack_out": [
        "aggregate%item0%0#0",
        "aggregate%extract_uint16%2#0",
        "reinterpret_Encoded((len+utf8[]),((len+uint8[]),(uint64)))%0#0",
        "reinterpret_Encoded((len+utf8[]),((len+uint8[]),(uint64)))%0#0 (copy)"
      ]
    },
    "1325": {
      "op": "len",
      "defined_out": [
        "aggregate%extract_uint16%2#0",
        "aggregate%item0%0#0",
        "aggregate%len%0#0",
        "reinterpret_Encoded((len+utf8[]),((len+uint8[]),(uint64)))%0#0"
      ],
      "stack_out": [
        "aggregate%item0%0#0",
        "aggregate%extract_uint16%2#0",
        "reinterpret_Encoded((len+utf8[]),((len+uint8[]),(uint64)))%0#0",
        "aggregate%len%0#0"
      ]
    },
    "1326": {
      "op": "cover 1",
      "stack_out": [
        "aggregate%item0%0#0",
        "aggregate%extract_uint16%2#0",
        "aggregate%len%0#0",
        "reinterpret_Encoded((len+utf8[]),((len+uint8[]),(uint64)))%0#0"
      ]
    },
    "1328": {
      "op": "uncover 2",
      "stack_out": [
        "aggregate%item0%0#0",
        "aggregate%len%0#0",
        "reinterpret_Encoded((len+utf8[]),((len+uint8[]),(uint64)))%0#0",
        "aggregate%extract_uint16%2#0"
      ]
    },
    "1330": {
      "op": "uncover 2",
      "stack_out": [
        "aggregate%item0%0#0",
        "reinterpret_Encoded((len+utf8[]),((len+uint8[]),(uint64)))%0#0",
        "aggregate%extract_uint16%2#0",
        "aggregate%len%0#0"
      ]
    },
    "1332": {
      "op": "substring3",
      "defined_out": [
        "aggregate%item0%0#0",
        "aggregate%substring3%1#0"
      ],
      "stack_out": [
        "aggregate%item0%0#0",
        "aggregate%substring3%1#0"
      ]
    },
    "1333": {
      "op": "dup",
      "defined_out": [
        "aggregate%item0%0#0",
        "aggregate%substring3%1#0",
        "aggregate%substring3%1#0 (copy)"
      ],
      "stack_out": [
        "aggregate%item0%0#0",
        "aggregate%substring3%1#0",
        "aggregate%substring3%1#0 (copy)"
      ]
    },
    "1334": {
      "op": "intc_0 // 0",
      "stack_out": [
        "aggregate%item0%0#0",
        "aggregate%substring3%1#0",
        "aggregate%substring3%1#0 (copy)",
        "0"
      ]
    },
    "1335": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%extract_uint16%3#0",
        "aggregate%item0%0#0",
        "aggregate%substring3%1#0"
      ],
      "stack_out": [
        "aggregate%item0%0#0",
        "aggregate%substring3%1#0",
        "aggregate%extract_uint16%3#0"
      ]
    },
    "1336": {
      "op": "cover 1",
      "stack_out": [
        "aggregate%item0%0#0",
        "aggregate%extract_uint16%3#0",
        "aggregate%substring3%1#0"
      ]
    },
    "1338": {
      "op": "dup",
      "stack_out": [
        "aggregate%item0%0#0",
        "aggregate%extract_uint16%3#0",
        "aggregate%substring3%1#0",
        "aggregate%substring3%1#0 (copy)"
      ]
    },
    "1339": {
      "op": "len",
      "defined_out": [
        "aggregate%extract_uint16%3#0",
        "aggregate%item0%0#0",
        "aggregate%len%1#0",
        "aggregate%substring3%1#0"
      ],
      "stack_out": [
        "aggregate%item0%0#0",
        "aggregate%extract_uint16%3#0",
        "aggregate%substring3%1#0",
        "aggregate%len%1#0"
      ]
    },
    "1340": {
      "op": "cover 1",
      "stack_out": [
        "aggregate%item0%0#0",
        "aggregate%extract_uint16%3#0",
        "aggregate%len%1#0",
        "aggregate%substring3%1#0"
      ]
    },
    "1342": {
      "op": "dup",
      "stack_out": [
        "aggregate%item0%0#0",
        "aggregate%extract_uint16%3#0",
        "aggregate%len%1#0",
        "aggregate%substring3%1#0",
        "aggregate%substring3%1#0 (copy)"
      ]
    },
    "1343": {
      "op": "uncover 3",
      "stack_out": [
        "aggregate%item0%0#0",
        "aggregate%len%1#0",
        "aggregate%substring3%1#0",
        "aggregate%substring3%1#0 (copy)",
        "aggregate%extract_uint16%3#0"
      ]
    },
    "1345": {
      "op": "uncover 3",
      "stack_out": [
        "aggregate%item0%0#0",
        "aggregate%substring3%1#0",
        "aggregate%substring3%1#0 (copy)",
        "aggregate%extract_uint16%3#0",
        "aggregate%len%1#0"
      ]
    },
    "1347": {
      "op": "substring3",
      "defined_out": [
        "aggregate%item0%0#0",
        "aggregate%substring3%1#0",
        "aggregate%substring3%2#0"
      ],
      "stack_out": [
        "aggregate%item0%0#0",
        "aggregate%substring3%1#0",
        "aggregate%substring3%2#0"
      ]
    },
    "1348": {
      "op": "extract 2 0",
      "defined_out": [
        "aggregate%item0%0#0",
        "aggregate%item0%1#0",
        "aggregate%substring3%1#0"
      ],
      "stack_out": [
        "aggregate%item0%0#0",
        "aggregate%substring3%1#0",
        "aggregate%item0%1#0"
      ]
    },
    "1351": {
      "op": "cover 1",
      "stack_out": [
        "aggregate%item0%0#0",
        "aggregate%item0%1#0",
        "aggregate%substring3%1#0"
      ]
    },
    "1353": {
      "op": "intc_3 // 2",
      "stack_out": [
        "aggregate%item0%0#0",
        "aggregate%item0%1#0",
        "aggregate%substring3%1#0",
        "2"
      ]
    },
    "1354": {
      "op": "intc_1 // 8",
      "defined_out": [
        "2",
        "8",
        "aggregate%item0%0#0",
        "aggregate%item0%1#0",
        "aggregate%substring3%1#0"
      ],
      "stack_out": [
        "aggregate%item0%0#0",
        "aggregate%item0%1#0",
        "aggregate%substring3%1#0",
        "2",
        "8"
      ]
    },
    "1355": {
      "op": "extract3",
      "defined_out": [
        "aggregate%extract%0#0",
        "aggregate%item0%0#0",
        "aggregate%item0%1#0"
      ],
      "stack_out": [
        "aggregate%item0%0#0",
        "aggregate%item0%1#0",
        "aggregate%extract%0#0"
      ]
    },
    "1356": {
      "op": "intc_0 // 0",
      "stack_out": [
        "aggregate%item0%0#0",
        "aggregate%item0%1#0",
        "aggregate%extract%0#0",
        "0"
      ]
    },
    "1357": {
      "op": "intc_1 // 8",
      "stack_out": [
        "aggregate%item0%0#0",
        "aggregate%item0%1#0",
        "aggregate%extract%0#0",
        "0",
        "8"
      ]
    },
    "1358": {
      "op": "extract3",
      "defined_out": [
        "aggregate%extract%1#0",
        "aggregate%item0%0#0",
        "aggregate%item0%1#0"
      ],
      "stack_out": [
        "aggregate%item0%0#0",
        "aggregate%item0%1#0",
        "aggregate%extract%1#0"
      ]
    },
    "1359": {
      "op": "btoi",
      "defined_out": [
        "aggregate%item0%0#0",
        "aggregate%item0%1#0",
        "aggregate%item0%2#0"
      ],
      "stack_out": [
        "aggregate%item0%0#0",
        "aggregate%item0%1#0",
        "aggregate%item0%2#0"
      ]
    },
    "1360": {
      "op": "uncover 2",
      "stack_out": [
        "aggregate%item0%1#0",
        "aggregate%item0%2#0",
        "aggregate%item0%0#0"
      ]
    },
    "1362": {
      "op": "cover 1",
      "defined_out": [
        "aggregate%item0%1#0",
        "aggregate%item0%2#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "aggregate%item0%1#0",
        "tmp%0#0",
        "aggregate%item0%2#0"
      ]
    },
    "1364": {
      "op": "uncover 2",
      "defined_out": [
        "aggregate%item0%2#0",
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "aggregate%item0%2#0",
        "tmp%1#0"
      ]
    },
    "1366": {
      "op": "uncover 1",
      "defined_out": [
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0"
      ]
    },
    "1368": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%1#0",
        "tmp%2#0",
        "tmp%0#0"
      ]
    },
    "1370": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%2#0",
        "tmp%0#0",
        "tmp%1#0"
      ]
    },
    "1372": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0"
      ]
    },
    "1374": {
      "callsub": "test_cases.tuple_support.nested_tuples.NestedTuples.nested_tuple_params",
      "op": "callsub test_cases.tuple_support.nested_tuples.NestedTuples.nested_tuple_params",
      "defined_out": [
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0"
      ]
    },
    "1377": {
      "op": "cover 2",
      "stack_out": [
        "tmp%5#0",
        "tmp%3#0",
        "tmp%4#0"
      ]
    },
    "1379": {
      "op": "cover 1",
      "stack_out": [
        "tmp%5#0",
        "tmp%4#0",
        "tmp%3#0"
      ]
    },
    "1381": {
      "op": "dup",
      "defined_out": [
        "tmp%3#0",
        "tmp%3#0 (copy)",
        "tmp%4#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "tmp%4#0",
        "tmp%3#0",
        "tmp%3#0 (copy)"
      ]
    },
    "1382": {
      "op": "len",
      "defined_out": [
        "aggregate%length%0#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "tmp%4#0",
        "tmp%3#0",
        "aggregate%length%0#0"
      ]
    },
    "1383": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%0#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "tmp%4#0",
        "tmp%3#0",
        "aggregate%as_bytes%0#0"
      ]
    },
    "1384": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%length_uint16%0#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "tmp%4#0",
        "tmp%3#0",
        "aggregate%length_uint16%0#0"
      ]
    },
    "1387": {
      "op": "uncover 1",
      "stack_out": [
        "tmp%5#0",
        "tmp%4#0",
        "aggregate%length_uint16%0#0",
        "tmp%3#0"
      ]
    },
    "1389": {
      "op": "concat",
      "defined_out": [
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "tmp%4#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "tmp%4#0",
        "aggregate%as_Encoded(len+uint8[])%0#0"
      ]
    },
    "1390": {
      "op": "pushint 4 // 4",
      "defined_out": [
        "4",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "tmp%4#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "tmp%4#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "4"
      ]
    },
    "1392": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%as_bytes%1#0",
        "tmp%4#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "tmp%4#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%as_bytes%1#0"
      ]
    },
    "1393": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%offset_as_uint16%0#0",
        "tmp%4#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "tmp%4#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%offset_as_uint16%0#0"
      ]
    },
    "1396": {
      "op": "bytec_0 // 0x",
      "defined_out": [
        "0x",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%offset_as_uint16%0#0",
        "tmp%4#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "tmp%4#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%offset_as_uint16%0#0",
        "0x"
      ]
    },
    "1397": {
      "op": "uncover 1",
      "stack_out": [
        "tmp%5#0",
        "tmp%4#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "0x",
        "aggregate%offset_as_uint16%0#0"
      ]
    },
    "1399": {
      "op": "concat",
      "defined_out": [
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%head%0#0",
        "tmp%4#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "tmp%4#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%head%0#0"
      ]
    },
    "1400": {
      "op": "cover 2",
      "stack_out": [
        "tmp%5#0",
        "aggregate%head%0#0",
        "tmp%4#0",
        "aggregate%as_Encoded(len+uint8[])%0#0"
      ]
    },
    "1402": {
      "op": "dup",
      "defined_out": [
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%as_Encoded(len+uint8[])%0#0 (copy)",
        "aggregate%head%0#0",
        "tmp%4#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "aggregate%head%0#0",
        "tmp%4#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%as_Encoded(len+uint8[])%0#0 (copy)"
      ]
    },
    "1403": {
      "op": "len",
      "defined_out": [
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%data_length%0#0",
        "aggregate%head%0#0",
        "tmp%4#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "aggregate%head%0#0",
        "tmp%4#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%data_length%0#0"
      ]
    },
    "1404": {
      "op": "pushint 4 // 4",
      "stack_out": [
        "tmp%5#0",
        "aggregate%head%0#0",
        "tmp%4#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%data_length%0#0",
        "4"
      ]
    },
    "1406": {
      "op": "+",
      "defined_out": [
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%head%0#0",
        "tmp%4#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "aggregate%head%0#0",
        "tmp%4#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%current_tail_offset%0#0"
      ]
    },
    "1407": {
      "op": "cover 1",
      "stack_out": [
        "tmp%5#0",
        "aggregate%head%0#0",
        "tmp%4#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%as_Encoded(len+uint8[])%0#0"
      ]
    },
    "1409": {
      "op": "dig 2",
      "defined_out": [
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%head%0#0",
        "tmp%4#0",
        "tmp%4#0 (copy)",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "aggregate%head%0#0",
        "tmp%4#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "tmp%4#0 (copy)"
      ]
    },
    "1411": {
      "op": "len",
      "defined_out": [
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%head%0#0",
        "aggregate%length%1#0",
        "tmp%4#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "aggregate%head%0#0",
        "tmp%4#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%length%1#0"
      ]
    },
    "1412": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%as_bytes%2#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%head%0#0",
        "tmp%4#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "aggregate%head%0#0",
        "tmp%4#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%as_bytes%2#0"
      ]
    },
    "1413": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%head%0#0",
        "aggregate%length_uint16%1#0",
        "tmp%4#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "aggregate%head%0#0",
        "tmp%4#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%length_uint16%1#0"
      ]
    },
    "1416": {
      "op": "uncover 3",
      "stack_out": [
        "tmp%5#0",
        "aggregate%head%0#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%length_uint16%1#0",
        "tmp%4#0"
      ]
    },
    "1418": {
      "op": "concat",
      "defined_out": [
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%as_Encoded(len+utf8[])%0#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%head%0#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "aggregate%head%0#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%as_Encoded(len+utf8[])%0#0"
      ]
    },
    "1419": {
      "op": "pushint 10 // 10",
      "defined_out": [
        "10",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%as_Encoded(len+utf8[])%0#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%head%0#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "aggregate%head%0#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%as_Encoded(len+utf8[])%0#0",
        "10"
      ]
    },
    "1421": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%as_Encoded(len+utf8[])%0#0",
        "aggregate%as_bytes%3#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%head%0#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "aggregate%head%0#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%as_Encoded(len+utf8[])%0#0",
        "aggregate%as_bytes%3#0"
      ]
    },
    "1422": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%as_Encoded(len+utf8[])%0#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%head%0#0",
        "aggregate%offset_as_uint16%1#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "aggregate%head%0#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%as_Encoded(len+utf8[])%0#0",
        "aggregate%offset_as_uint16%1#0"
      ]
    },
    "1425": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "tmp%5#0",
        "aggregate%head%0#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%as_Encoded(len+utf8[])%0#0",
        "aggregate%offset_as_uint16%1#0",
        "0x"
      ]
    },
    "1426": {
      "op": "uncover 1",
      "stack_out": [
        "tmp%5#0",
        "aggregate%head%0#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%as_Encoded(len+utf8[])%0#0",
        "0x",
        "aggregate%offset_as_uint16%1#0"
      ]
    },
    "1428": {
      "op": "concat",
      "defined_out": [
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%as_Encoded(len+utf8[])%0#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%head%0#0",
        "aggregate%head%1#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "aggregate%head%0#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%as_Encoded(len+utf8[])%0#0",
        "aggregate%head%1#0"
      ]
    },
    "1429": {
      "op": "uncover 5",
      "stack_out": [
        "aggregate%head%0#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%as_Encoded(len+utf8[])%0#0",
        "aggregate%head%1#0",
        "tmp%5#0"
      ]
    },
    "1431": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%as_Encoded(len+utf8[])%0#0",
        "aggregate%as_Encoded(uint64)%0#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%head%0#0",
        "aggregate%head%1#0"
      ],
      "stack_out": [
        "aggregate%head%0#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%as_Encoded(len+utf8[])%0#0",
        "aggregate%head%1#0",
        "aggregate%as_Encoded(uint64)%0#0"
      ]
    },
    "1432": {
      "op": "concat",
      "defined_out": [
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%as_Encoded(len+utf8[])%0#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%head%0#0",
        "aggregate%head%2#0"
      ],
      "stack_out": [
        "aggregate%head%0#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%as_Encoded(len+utf8[])%0#0",
        "aggregate%head%2#0"
      ]
    },
    "1433": {
      "op": "uncover 1",
      "stack_out": [
        "aggregate%head%0#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%head%2#0",
        "aggregate%as_Encoded(len+utf8[])%0#0"
      ]
    },
    "1435": {
      "op": "concat",
      "defined_out": [
        "aggregate%as_Encoded((len+utf8[]),uint64)%0#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%head%0#0"
      ],
      "stack_out": [
        "aggregate%head%0#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%as_Encoded((len+utf8[]),uint64)%0#0"
      ]
    },
    "1436": {
      "op": "uncover 2",
      "stack_out": [
        "aggregate%head%0#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%as_Encoded((len+utf8[]),uint64)%0#0",
        "aggregate%current_tail_offset%0#0"
      ]
    },
    "1438": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded((len+utf8[]),uint64)%0#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%as_bytes%4#0",
        "aggregate%head%0#0"
      ],
      "stack_out": [
        "aggregate%head%0#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%as_Encoded((len+utf8[]),uint64)%0#0",
        "aggregate%as_bytes%4#0"
      ]
    },
    "1439": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%as_Encoded((len+utf8[]),uint64)%0#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%head%0#0",
        "aggregate%offset_as_uint16%2#0"
      ],
      "stack_out": [
        "aggregate%head%0#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%as_Encoded((len+utf8[]),uint64)%0#0",
        "aggregate%offset_as_uint16%2#0"
      ]
    },
    "1442": {
      "op": "uncover 3",
      "stack_out": [
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%as_Encoded((len+utf8[]),uint64)%0#0",
        "aggregate%offset_as_uint16%2#0",
        "aggregate%head%0#0"
      ]
    },
    "1444": {
      "op": "uncover 1",
      "stack_out": [
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%as_Encoded((len+utf8[]),uint64)%0#0",
        "aggregate%head%0#0",
        "aggregate%offset_as_uint16%2#0"
      ]
    },
    "1446": {
      "op": "concat",
      "defined_out": [
        "aggregate%as_Encoded((len+utf8[]),uint64)%0#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%head%3#0"
      ],
      "stack_out": [
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%as_Encoded((len+utf8[]),uint64)%0#0",
        "aggregate%head%3#0"
      ]
    },
    "1447": {
      "op": "uncover 2",
      "stack_out": [
        "aggregate%as_Encoded((len+utf8[]),uint64)%0#0",
        "aggregate%head%3#0",
        "aggregate%as_Encoded(len+uint8[])%0#0"
      ]
    },
    "1449": {
      "op": "concat",
      "defined_out": [
        "aggregate%as_Encoded((len+utf8[]),uint64)%0#0",
        "aggregate%concat%1#0"
      ],
      "stack_out": [
        "aggregate%as_Encoded((len+utf8[]),uint64)%0#0",
        "aggregate%concat%1#0"
      ]
    },
    "1450": {
      "op": "uncover 1",
      "stack_out": [
        "aggregate%concat%1#0",
        "aggregate%as_Encoded((len+utf8[]),uint64)%0#0"
      ]
    },
    "1452": {
      "op": "concat",
      "defined_out": [
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0"
      ]
    },
    "1453": {
      "op": "bytec_1 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0",
        "0x151f7c75"
      ]
    },
    "1454": {
      "op": "uncover 1",
      "stack_out": [
        "0x151f7c75",
        "tmp%6#0"
      ]
    },
    "1456": {
      "op": "concat",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0"
      ]
    },
    "1457": {
      "op": "log",
      "stack_out": []
    },
    "1458": {
      "op": "intc_2 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "1459": {
      "op": "return",
      "stack_out": []
    },
    "1460": {
      "subroutine": "test_cases.tuple_support.nested_tuples.NestedTuples.named_tuple[routing]",
      "params": {},
      "block": "named_tuple",
      "stack_in": [],
      "op": "b named_tuple_block@0"
    },
    "1463": {
      "block": "named_tuple_block@0",
      "stack_in": [],
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded(uint64,(len+uint8[]),(len+utf8[]))%0#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint64,(len+uint8[]),(len+utf8[]))%0#0"
      ]
    },
    "1466": {
      "op": "dup",
      "defined_out": [
        "reinterpret_Encoded(uint64,(len+uint8[]),(len+utf8[]))%0#0",
        "reinterpret_Encoded(uint64,(len+uint8[]),(len+utf8[]))%0#0 (copy)"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint64,(len+uint8[]),(len+utf8[]))%0#0",
        "reinterpret_Encoded(uint64,(len+uint8[]),(len+utf8[]))%0#0 (copy)"
      ]
    },
    "1467": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "reinterpret_Encoded(uint64,(len+uint8[]),(len+utf8[]))%0#0",
        "reinterpret_Encoded(uint64,(len+uint8[]),(len+utf8[]))%0#0 (copy)"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint64,(len+uint8[]),(len+utf8[]))%0#0",
        "reinterpret_Encoded(uint64,(len+uint8[]),(len+utf8[]))%0#0 (copy)",
        "0"
      ]
    },
    "1468": {
      "op": "intc_1 // 8",
      "defined_out": [
        "0",
        "8",
        "reinterpret_Encoded(uint64,(len+uint8[]),(len+utf8[]))%0#0",
        "reinterpret_Encoded(uint64,(len+uint8[]),(len+utf8[]))%0#0 (copy)"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint64,(len+uint8[]),(len+utf8[]))%0#0",
        "reinterpret_Encoded(uint64,(len+uint8[]),(len+utf8[]))%0#0 (copy)",
        "0",
        "8"
      ]
    },
    "1469": {
      "op": "extract3",
      "defined_out": [
        "aggregate%extract%0#0",
        "reinterpret_Encoded(uint64,(len+uint8[]),(len+utf8[]))%0#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint64,(len+uint8[]),(len+utf8[]))%0#0",
        "aggregate%extract%0#0"
      ]
    },
    "1470": {
      "op": "btoi",
      "defined_out": [
        "aggregate%item0%0#0",
        "reinterpret_Encoded(uint64,(len+uint8[]),(len+utf8[]))%0#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint64,(len+uint8[]),(len+utf8[]))%0#0",
        "aggregate%item0%0#0"
      ]
    },
    "1471": {
      "op": "cover 1",
      "stack_out": [
        "aggregate%item0%0#0",
        "reinterpret_Encoded(uint64,(len+uint8[]),(len+utf8[]))%0#0"
      ]
    },
    "1473": {
      "op": "dup",
      "stack_out": [
        "aggregate%item0%0#0",
        "reinterpret_Encoded(uint64,(len+uint8[]),(len+utf8[]))%0#0",
        "reinterpret_Encoded(uint64,(len+uint8[]),(len+utf8[]))%0#0 (copy)"
      ]
    },
    "1474": {
      "op": "intc_1 // 8",
      "stack_out": [
        "aggregate%item0%0#0",
        "reinterpret_Encoded(uint64,(len+uint8[]),(len+utf8[]))%0#0",
        "reinterpret_Encoded(uint64,(len+uint8[]),(len+utf8[]))%0#0 (copy)",
        "8"
      ]
    },
    "1475": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%extract_uint16%0#0",
        "aggregate%item0%0#0",
        "reinterpret_Encoded(uint64,(len+uint8[]),(len+utf8[]))%0#0"
      ],
      "stack_out": [
        "aggregate%item0%0#0",
        "reinterpret_Encoded(uint64,(len+uint8[]),(len+utf8[]))%0#0",
        "aggregate%extract_uint16%0#0"
      ]
    },
    "1476": {
      "op": "cover 1",
      "stack_out": [
        "aggregate%item0%0#0",
        "aggregate%extract_uint16%0#0",
        "reinterpret_Encoded(uint64,(len+uint8[]),(len+utf8[]))%0#0"
      ]
    },
    "1478": {
      "op": "dup",
      "stack_out": [
        "aggregate%item0%0#0",
        "aggregate%extract_uint16%0#0",
        "reinterpret_Encoded(uint64,(len+uint8[]),(len+utf8[]))%0#0",
        "reinterpret_Encoded(uint64,(len+uint8[]),(len+utf8[]))%0#0 (copy)"
      ]
    },
    "1479": {
      "op": "pushint 10 // 10",
      "defined_out": [
        "10",
        "aggregate%extract_uint16%0#0",
        "aggregate%item0%0#0",
        "reinterpret_Encoded(uint64,(len+uint8[]),(len+utf8[]))%0#0",
        "reinterpret_Encoded(uint64,(len+uint8[]),(len+utf8[]))%0#0 (copy)"
      ],
      "stack_out": [
        "aggregate%item0%0#0",
        "aggregate%extract_uint16%0#0",
        "reinterpret_Encoded(uint64,(len+uint8[]),(len+utf8[]))%0#0",
        "reinterpret_Encoded(uint64,(len+uint8[]),(len+utf8[]))%0#0 (copy)",
        "10"
      ]
    },
    "1481": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%extract_uint16%0#0",
        "aggregate%extract_uint16%1#0",
        "aggregate%item0%0#0",
        "reinterpret_Encoded(uint64,(len+uint8[]),(len+utf8[]))%0#0"
      ],
      "stack_out": [
        "aggregate%item0%0#0",
        "aggregate%extract_uint16%0#0",
        "reinterpret_Encoded(uint64,(len+uint8[]),(len+utf8[]))%0#0",
        "aggregate%extract_uint16%1#0"
      ]
    },
    "1482": {
      "op": "dig 1",
      "stack_out": [
        "aggregate%item0%0#0",
        "aggregate%extract_uint16%0#0",
        "reinterpret_Encoded(uint64,(len+uint8[]),(len+utf8[]))%0#0",
        "aggregate%extract_uint16%1#0",
        "reinterpret_Encoded(uint64,(len+uint8[]),(len+utf8[]))%0#0 (copy)"
      ]
    },
    "1484": {
      "op": "uncover 3",
      "stack_out": [
        "aggregate%item0%0#0",
        "reinterpret_Encoded(uint64,(len+uint8[]),(len+utf8[]))%0#0",
        "aggregate%extract_uint16%1#0",
        "reinterpret_Encoded(uint64,(len+uint8[]),(len+utf8[]))%0#0 (copy)",
        "aggregate%extract_uint16%0#0"
      ]
    },
    "1486": {
      "op": "uncover 2",
      "stack_out": [
        "aggregate%item0%0#0",
        "reinterpret_Encoded(uint64,(len+uint8[]),(len+utf8[]))%0#0",
        "reinterpret_Encoded(uint64,(len+uint8[]),(len+utf8[]))%0#0 (copy)",
        "aggregate%extract_uint16%0#0",
        "aggregate%extract_uint16%1#0"
      ]
    },
    "1488": {
      "op": "substring3",
      "defined_out": [
        "aggregate%item0%0#0",
        "aggregate%substring3%0#0",
        "reinterpret_Encoded(uint64,(len+uint8[]),(len+utf8[]))%0#0"
      ],
      "stack_out": [
        "aggregate%item0%0#0",
        "reinterpret_Encoded(uint64,(len+uint8[]),(len+utf8[]))%0#0",
        "aggregate%substring3%0#0"
      ]
    },
    "1489": {
      "op": "extract 2 0",
      "defined_out": [
        "aggregate%item0%0#0",
        "aggregate%item1%0#0",
        "reinterpret_Encoded(uint64,(len+uint8[]),(len+utf8[]))%0#0"
      ],
      "stack_out": [
        "aggregate%item0%0#0",
        "reinterpret_Encoded(uint64,(len+uint8[]),(len+utf8[]))%0#0",
        "aggregate%item1%0#0"
      ]
    },
    "1492": {
      "op": "cover 1",
      "stack_out": [
        "aggregate%item0%0#0",
        "aggregate%item1%0#0",
        "reinterpret_Encoded(uint64,(len+uint8[]),(len+utf8[]))%0#0"
      ]
    },
    "1494": {
      "op": "dup",
      "stack_out": [
        "aggregate%item0%0#0",
        "aggregate%item1%0#0",
        "reinterpret_Encoded(uint64,(len+uint8[]),(len+utf8[]))%0#0",
        "reinterpret_Encoded(uint64,(len+uint8[]),(len+utf8[]))%0#0 (copy)"
      ]
    },
    "1495": {
      "op": "pushint 10 // 10",
      "stack_out": [
        "aggregate%item0%0#0",
        "aggregate%item1%0#0",
        "reinterpret_Encoded(uint64,(len+uint8[]),(len+utf8[]))%0#0",
        "reinterpret_Encoded(uint64,(len+uint8[]),(len+utf8[]))%0#0 (copy)",
        "10"
      ]
    },
    "1497": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%extract_uint16%2#0",
        "aggregate%item0%0#0",
        "aggregate%item1%0#0",
        "reinterpret_Encoded(uint64,(len+uint8[]),(len+utf8[]))%0#0"
      ],
      "stack_out": [
        "aggregate%item0%0#0",
        "aggregate%item1%0#0",
        "reinterpret_Encoded(uint64,(len+uint8[]),(len+utf8[]))%0#0",
        "aggregate%extract_uint16%2#0"
      ]
    },
    "1498": {
      "op": "cover 1",
      "stack_out": [
        "aggregate%item0%0#0",
        "aggregate%item1%0#0",
        "aggregate%extract_uint16%2#0",
        "reinterpret_Encoded(uint64,(len+uint8[]),(len+utf8[]))%0#0"
      ]
    },
    "1500": {
      "op": "dup",
      "stack_out": [
        "aggregate%item0%0#0",
        "aggregate%item1%0#0",
        "aggregate%extract_uint16%2#0",
        "reinterpret_Encoded(uint64,(len+uint8[]),(len+utf8[]))%0#0",
        "reinterpret_Encoded(uint64,(len+uint8[]),(len+utf8[]))%0#0 (copy)"
      ]
    },
    "1501": {
      "op": "len",
      "defined_out": [
        "aggregate%extract_uint16%2#0",
        "aggregate%item0%0#0",
        "aggregate%item1%0#0",
        "aggregate%len%0#0",
        "reinterpret_Encoded(uint64,(len+uint8[]),(len+utf8[]))%0#0"
      ],
      "stack_out": [
        "aggregate%item0%0#0",
        "aggregate%item1%0#0",
        "aggregate%extract_uint16%2#0",
        "reinterpret_Encoded(uint64,(len+uint8[]),(len+utf8[]))%0#0",
        "aggregate%len%0#0"
      ]
    },
    "1502": {
      "op": "cover 1",
      "stack_out": [
        "aggregate%item0%0#0",
        "aggregate%item1%0#0",
        "aggregate%extract_uint16%2#0",
        "aggregate%len%0#0",
        "reinterpret_Encoded(uint64,(len+uint8[]),(len+utf8[]))%0#0"
      ]
    },
    "1504": {
      "op": "uncover 2",
      "stack_out": [
        "aggregate%item0%0#0",
        "aggregate%item1%0#0",
        "aggregate%len%0#0",
        "reinterpret_Encoded(uint64,(len+uint8[]),(len+utf8[]))%0#0",
        "aggregate%extract_uint16%2#0"
      ]
    },
    "1506": {
      "op": "uncover 2",
      "stack_out": [
        "aggregate%item0%0#0",
        "aggregate%item1%0#0",
        "reinterpret_Encoded(uint64,(len+uint8[]),(len+utf8[]))%0#0",
        "aggregate%extract_uint16%2#0",
        "aggregate%len%0#0"
      ]
    },
    "1508": {
      "op": "substring3",
      "defined_out": [
        "aggregate%item0%0#0",
        "aggregate%item1%0#0",
        "aggregate%substring3%1#0"
      ],
      "stack_out": [
        "aggregate%item0%0#0",
        "aggregate%item1%0#0",
        "aggregate%substring3%1#0"
      ]
    },
    "1509": {
      "op": "extract 2 0",
      "defined_out": [
        "aggregate%item0%0#0",
        "aggregate%item1%0#0",
        "aggregate%item2%0#0"
      ],
      "stack_out": [
        "aggregate%item0%0#0",
        "aggregate%item1%0#0",
        "aggregate%item2%0#0"
      ]
    },
    "1512": {
      "op": "uncover 2",
      "stack_out": [
        "aggregate%item1%0#0",
        "aggregate%item2%0#0",
        "aggregate%item0%0#0"
      ]
    },
    "1514": {
      "op": "cover 1",
      "defined_out": [
        "aggregate%item1%0#0",
        "aggregate%item2%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "aggregate%item1%0#0",
        "tmp%0#0",
        "aggregate%item2%0#0"
      ]
    },
    "1516": {
      "op": "uncover 2",
      "defined_out": [
        "aggregate%item2%0#0",
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "aggregate%item2%0#0",
        "tmp%1#0"
      ]
    },
    "1518": {
      "op": "uncover 1",
      "defined_out": [
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0"
      ]
    },
    "1520": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%1#0",
        "tmp%2#0",
        "tmp%0#0"
      ]
    },
    "1522": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%2#0",
        "tmp%0#0",
        "tmp%1#0"
      ]
    },
    "1524": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0"
      ]
    },
    "1526": {
      "callsub": "test_cases.tuple_support.nested_tuples.NestedTuples.named_tuple",
      "op": "callsub test_cases.tuple_support.nested_tuples.NestedTuples.named_tuple",
      "defined_out": [
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0"
      ]
    },
    "1529": {
      "op": "cover 2",
      "stack_out": [
        "tmp%5#0",
        "tmp%3#0",
        "tmp%4#0"
      ]
    },
    "1531": {
      "op": "cover 1",
      "stack_out": [
        "tmp%5#0",
        "tmp%4#0",
        "tmp%3#0"
      ]
    },
    "1533": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(uint64)%0#0",
        "tmp%4#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "tmp%4#0",
        "aggregate%as_Encoded(uint64)%0#0"
      ]
    },
    "1534": {
      "op": "bytec_0 // 0x",
      "defined_out": [
        "0x",
        "aggregate%as_Encoded(uint64)%0#0",
        "tmp%4#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "tmp%4#0",
        "aggregate%as_Encoded(uint64)%0#0",
        "0x"
      ]
    },
    "1535": {
      "op": "uncover 1",
      "stack_out": [
        "tmp%5#0",
        "tmp%4#0",
        "0x",
        "aggregate%as_Encoded(uint64)%0#0"
      ]
    },
    "1537": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%0#0",
        "tmp%4#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "tmp%4#0",
        "aggregate%head%0#0"
      ]
    },
    "1538": {
      "op": "cover 1",
      "stack_out": [
        "tmp%5#0",
        "aggregate%head%0#0",
        "tmp%4#0"
      ]
    },
    "1540": {
      "op": "dup",
      "defined_out": [
        "aggregate%head%0#0",
        "tmp%4#0",
        "tmp%4#0 (copy)",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "aggregate%head%0#0",
        "tmp%4#0",
        "tmp%4#0 (copy)"
      ]
    },
    "1541": {
      "op": "len",
      "defined_out": [
        "aggregate%head%0#0",
        "aggregate%length%0#0",
        "tmp%4#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "aggregate%head%0#0",
        "tmp%4#0",
        "aggregate%length%0#0"
      ]
    },
    "1542": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%0#0",
        "aggregate%head%0#0",
        "tmp%4#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "aggregate%head%0#0",
        "tmp%4#0",
        "aggregate%as_bytes%0#0"
      ]
    },
    "1543": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%head%0#0",
        "aggregate%length_uint16%0#0",
        "tmp%4#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "aggregate%head%0#0",
        "tmp%4#0",
        "aggregate%length_uint16%0#0"
      ]
    },
    "1546": {
      "op": "uncover 1",
      "stack_out": [
        "tmp%5#0",
        "aggregate%head%0#0",
        "aggregate%length_uint16%0#0",
        "tmp%4#0"
      ]
    },
    "1548": {
      "op": "concat",
      "defined_out": [
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%head%0#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "aggregate%head%0#0",
        "aggregate%as_Encoded(len+uint8[])%0#0"
      ]
    },
    "1549": {
      "op": "pushint 12 // 12",
      "defined_out": [
        "12",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%head%0#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "aggregate%head%0#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "12"
      ]
    },
    "1551": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%as_bytes%1#0",
        "aggregate%head%0#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "aggregate%head%0#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%as_bytes%1#0"
      ]
    },
    "1552": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%head%0#0",
        "aggregate%offset_as_uint16%0#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "aggregate%head%0#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%offset_as_uint16%0#0"
      ]
    },
    "1555": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%5#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%offset_as_uint16%0#0",
        "aggregate%head%0#0"
      ]
    },
    "1557": {
      "op": "uncover 1",
      "stack_out": [
        "tmp%5#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%head%0#0",
        "aggregate%offset_as_uint16%0#0"
      ]
    },
    "1559": {
      "op": "concat",
      "defined_out": [
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%head%1#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%head%1#0"
      ]
    },
    "1560": {
      "op": "cover 1",
      "stack_out": [
        "tmp%5#0",
        "aggregate%head%1#0",
        "aggregate%as_Encoded(len+uint8[])%0#0"
      ]
    },
    "1562": {
      "op": "dup",
      "defined_out": [
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%as_Encoded(len+uint8[])%0#0 (copy)",
        "aggregate%head%1#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "aggregate%head%1#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%as_Encoded(len+uint8[])%0#0 (copy)"
      ]
    },
    "1563": {
      "op": "len",
      "defined_out": [
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%data_length%0#0",
        "aggregate%head%1#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "aggregate%head%1#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%data_length%0#0"
      ]
    },
    "1564": {
      "op": "pushint 12 // 12",
      "stack_out": [
        "tmp%5#0",
        "aggregate%head%1#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%data_length%0#0",
        "12"
      ]
    },
    "1566": {
      "op": "+",
      "defined_out": [
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%head%1#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "aggregate%head%1#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%current_tail_offset%0#0"
      ]
    },
    "1567": {
      "op": "dig 3",
      "defined_out": [
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%head%1#0",
        "tmp%5#0",
        "tmp%5#0 (copy)"
      ],
      "stack_out": [
        "tmp%5#0",
        "aggregate%head%1#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%current_tail_offset%0#0",
        "tmp%5#0 (copy)"
      ]
    },
    "1569": {
      "op": "len",
      "defined_out": [
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%head%1#0",
        "aggregate%length%1#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "aggregate%head%1#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%length%1#0"
      ]
    },
    "1570": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%as_bytes%2#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%head%1#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "aggregate%head%1#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%as_bytes%2#0"
      ]
    },
    "1571": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%head%1#0",
        "aggregate%length_uint16%1#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "aggregate%head%1#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%length_uint16%1#0"
      ]
    },
    "1574": {
      "op": "uncover 4",
      "stack_out": [
        "aggregate%head%1#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%length_uint16%1#0",
        "tmp%5#0"
      ]
    },
    "1576": {
      "op": "concat",
      "defined_out": [
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%encoded_value%1#0",
        "aggregate%head%1#0"
      ],
      "stack_out": [
        "aggregate%head%1#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%encoded_value%1#0"
      ]
    },
    "1577": {
      "op": "cover 1",
      "defined_out": [
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%as_Encoded(len+utf8[])%0#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%head%1#0"
      ],
      "stack_out": [
        "aggregate%head%1#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%as_Encoded(len+utf8[])%0#0",
        "aggregate%current_tail_offset%0#0"
      ]
    },
    "1579": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%as_Encoded(len+utf8[])%0#0",
        "aggregate%as_bytes%3#0",
        "aggregate%head%1#0"
      ],
      "stack_out": [
        "aggregate%head%1#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%as_Encoded(len+utf8[])%0#0",
        "aggregate%as_bytes%3#0"
      ]
    },
    "1580": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%as_Encoded(len+utf8[])%0#0",
        "aggregate%head%1#0",
        "aggregate%offset_as_uint16%1#0"
      ],
      "stack_out": [
        "aggregate%head%1#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%as_Encoded(len+utf8[])%0#0",
        "aggregate%offset_as_uint16%1#0"
      ]
    },
    "1583": {
      "op": "uncover 3",
      "stack_out": [
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%as_Encoded(len+utf8[])%0#0",
        "aggregate%offset_as_uint16%1#0",
        "aggregate%head%1#0"
      ]
    },
    "1585": {
      "op": "uncover 1",
      "stack_out": [
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%as_Encoded(len+utf8[])%0#0",
        "aggregate%head%1#0",
        "aggregate%offset_as_uint16%1#0"
      ]
    },
    "1587": {
      "op": "concat",
      "defined_out": [
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%as_Encoded(len+utf8[])%0#0",
        "aggregate%head%2#0"
      ],
      "stack_out": [
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%as_Encoded(len+utf8[])%0#0",
        "aggregate%head%2#0"
      ]
    },
    "1588": {
      "op": "uncover 2",
      "stack_out": [
        "aggregate%as_Encoded(len+utf8[])%0#0",
        "aggregate%head%2#0",
        "aggregate%as_Encoded(len+uint8[])%0#0"
      ]
    },
    "1590": {
      "op": "concat",
      "defined_out": [
        "aggregate%as_Encoded(len+utf8[])%0#0",
        "aggregate%concat%0#0"
      ],
      "stack_out": [
        "aggregate%as_Encoded(len+utf8[])%0#0",
        "aggregate%concat%0#0"
      ]
    },
    "1591": {
      "op": "uncover 1",
      "stack_out": [
        "aggregate%concat%0#0",
        "aggregate%as_Encoded(len+utf8[])%0#0"
      ]
    },
    "1593": {
      "op": "concat",
      "defined_out": [
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0"
      ]
    },
    "1594": {
      "op": "bytec_1 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0",
        "0x151f7c75"
      ]
    },
    "1595": {
      "op": "uncover 1",
      "stack_out": [
        "0x151f7c75",
        "tmp%6#0"
      ]
    },
    "1597": {
      "op": "concat",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0"
      ]
    },
    "1598": {
      "op": "log",
      "stack_out": []
    },
    "1599": {
      "op": "intc_2 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "1600": {
      "op": "return",
      "stack_out": []
    },
    "1601": {
      "subroutine": "test_cases.tuple_support.nested_tuples.NestedTuples.nested_named_tuple_params[routing]",
      "params": {},
      "block": "nested_named_tuple_params",
      "stack_in": [],
      "op": "b nested_named_tuple_params_block@0"
    },
    "1604": {
      "block": "nested_named_tuple_params_block@0",
      "stack_in": [],
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded(uint64,uint64,(uint64,(len+uint8[]),(len+utf8[])))%0#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint64,uint64,(uint64,(len+uint8[]),(len+utf8[])))%0#0"
      ]
    },
    "1607": {
      "op": "dup",
      "defined_out": [
        "reinterpret_Encoded(uint64,uint64,(uint64,(len+uint8[]),(len+utf8[])))%0#0",
        "reinterpret_Encoded(uint64,uint64,(uint64,(len+uint8[]),(len+utf8[])))%0#0 (copy)"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint64,uint64,(uint64,(len+uint8[]),(len+utf8[])))%0#0",
        "reinterpret_Encoded(uint64,uint64,(uint64,(len+uint8[]),(len+utf8[])))%0#0 (copy)"
      ]
    },
    "1608": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "reinterpret_Encoded(uint64,uint64,(uint64,(len+uint8[]),(len+utf8[])))%0#0",
        "reinterpret_Encoded(uint64,uint64,(uint64,(len+uint8[]),(len+utf8[])))%0#0 (copy)"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint64,uint64,(uint64,(len+uint8[]),(len+utf8[])))%0#0",
        "reinterpret_Encoded(uint64,uint64,(uint64,(len+uint8[]),(len+utf8[])))%0#0 (copy)",
        "0"
      ]
    },
    "1609": {
      "op": "intc_1 // 8",
      "defined_out": [
        "0",
        "8",
        "reinterpret_Encoded(uint64,uint64,(uint64,(len+uint8[]),(len+utf8[])))%0#0",
        "reinterpret_Encoded(uint64,uint64,(uint64,(len+uint8[]),(len+utf8[])))%0#0 (copy)"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint64,uint64,(uint64,(len+uint8[]),(len+utf8[])))%0#0",
        "reinterpret_Encoded(uint64,uint64,(uint64,(len+uint8[]),(len+utf8[])))%0#0 (copy)",
        "0",
        "8"
      ]
    },
    "1610": {
      "op": "extract3",
      "defined_out": [
        "aggregate%extract%0#0",
        "reinterpret_Encoded(uint64,uint64,(uint64,(len+uint8[]),(len+utf8[])))%0#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint64,uint64,(uint64,(len+uint8[]),(len+utf8[])))%0#0",
        "aggregate%extract%0#0"
      ]
    },
    "1611": {
      "op": "btoi",
      "defined_out": [
        "aggregate%item0%0#0",
        "reinterpret_Encoded(uint64,uint64,(uint64,(len+uint8[]),(len+utf8[])))%0#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint64,uint64,(uint64,(len+uint8[]),(len+utf8[])))%0#0",
        "aggregate%item0%0#0"
      ]
    },
    "1612": {
      "op": "cover 1",
      "stack_out": [
        "aggregate%item0%0#0",
        "reinterpret_Encoded(uint64,uint64,(uint64,(len+uint8[]),(len+utf8[])))%0#0"
      ]
    },
    "1614": {
      "op": "dup",
      "stack_out": [
        "aggregate%item0%0#0",
        "reinterpret_Encoded(uint64,uint64,(uint64,(len+uint8[]),(len+utf8[])))%0#0",
        "reinterpret_Encoded(uint64,uint64,(uint64,(len+uint8[]),(len+utf8[])))%0#0 (copy)"
      ]
    },
    "1615": {
      "op": "intc_1 // 8",
      "stack_out": [
        "aggregate%item0%0#0",
        "reinterpret_Encoded(uint64,uint64,(uint64,(len+uint8[]),(len+utf8[])))%0#0",
        "reinterpret_Encoded(uint64,uint64,(uint64,(len+uint8[]),(len+utf8[])))%0#0 (copy)",
        "8"
      ]
    },
    "1616": {
      "op": "intc_1 // 8",
      "stack_out": [
        "aggregate%item0%0#0",
        "reinterpret_Encoded(uint64,uint64,(uint64,(len+uint8[]),(len+utf8[])))%0#0",
        "reinterpret_Encoded(uint64,uint64,(uint64,(len+uint8[]),(len+utf8[])))%0#0 (copy)",
        "8",
        "8"
      ]
    },
    "1617": {
      "op": "extract3",
      "defined_out": [
        "aggregate%extract%1#0",
        "aggregate%item0%0#0",
        "reinterpret_Encoded(uint64,uint64,(uint64,(len+uint8[]),(len+utf8[])))%0#0"
      ],
      "stack_out": [
        "aggregate%item0%0#0",
        "reinterpret_Encoded(uint64,uint64,(uint64,(len+uint8[]),(len+utf8[])))%0#0",
        "aggregate%extract%1#0"
      ]
    },
    "1618": {
      "op": "cover 1",
      "stack_out": [
        "aggregate%item0%0#0",
        "aggregate%extract%1#0",
        "reinterpret_Encoded(uint64,uint64,(uint64,(len+uint8[]),(len+utf8[])))%0#0"
      ]
    },
    "1620": {
      "op": "dup",
      "stack_out": [
        "aggregate%item0%0#0",
        "aggregate%extract%1#0",
        "reinterpret_Encoded(uint64,uint64,(uint64,(len+uint8[]),(len+utf8[])))%0#0",
        "reinterpret_Encoded(uint64,uint64,(uint64,(len+uint8[]),(len+utf8[])))%0#0 (copy)"
      ]
    },
    "1621": {
      "op": "pushint 16 // 16",
      "defined_out": [
        "16",
        "aggregate%extract%1#0",
        "aggregate%item0%0#0",
        "reinterpret_Encoded(uint64,uint64,(uint64,(len+uint8[]),(len+utf8[])))%0#0",
        "reinterpret_Encoded(uint64,uint64,(uint64,(len+uint8[]),(len+utf8[])))%0#0 (copy)"
      ],
      "stack_out": [
        "aggregate%item0%0#0",
        "aggregate%extract%1#0",
        "reinterpret_Encoded(uint64,uint64,(uint64,(len+uint8[]),(len+utf8[])))%0#0",
        "reinterpret_Encoded(uint64,uint64,(uint64,(len+uint8[]),(len+utf8[])))%0#0 (copy)",
        "16"
      ]
    },
    "1623": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%extract%1#0",
        "aggregate%extract_uint16%0#0",
        "aggregate%item0%0#0",
        "reinterpret_Encoded(uint64,uint64,(uint64,(len+uint8[]),(len+utf8[])))%0#0"
      ],
      "stack_out": [
        "aggregate%item0%0#0",
        "aggregate%extract%1#0",
        "reinterpret_Encoded(uint64,uint64,(uint64,(len+uint8[]),(len+utf8[])))%0#0",
        "aggregate%extract_uint16%0#0"
      ]
    },
    "1624": {
      "op": "cover 1",
      "stack_out": [
        "aggregate%item0%0#0",
        "aggregate%extract%1#0",
        "aggregate%extract_uint16%0#0",
        "reinterpret_Encoded(uint64,uint64,(uint64,(len+uint8[]),(len+utf8[])))%0#0"
      ]
    },
    "1626": {
      "op": "dup",
      "stack_out": [
        "aggregate%item0%0#0",
        "aggregate%extract%1#0",
        "aggregate%extract_uint16%0#0",
        "reinterpret_Encoded(uint64,uint64,(uint64,(len+uint8[]),(len+utf8[])))%0#0",
        "reinterpret_Encoded(uint64,uint64,(uint64,(len+uint8[]),(len+utf8[])))%0#0 (copy)"
      ]
    },
    "1627": {
      "op": "len",
      "defined_out": [
        "aggregate%extract%1#0",
        "aggregate%extract_uint16%0#0",
        "aggregate%item0%0#0",
        "aggregate%len%0#0",
        "reinterpret_Encoded(uint64,uint64,(uint64,(len+uint8[]),(len+utf8[])))%0#0"
      ],
      "stack_out": [
        "aggregate%item0%0#0",
        "aggregate%extract%1#0",
        "aggregate%extract_uint16%0#0",
        "reinterpret_Encoded(uint64,uint64,(uint64,(len+uint8[]),(len+utf8[])))%0#0",
        "aggregate%len%0#0"
      ]
    },
    "1628": {
      "op": "cover 1",
      "stack_out": [
        "aggregate%item0%0#0",
        "aggregate%extract%1#0",
        "aggregate%extract_uint16%0#0",
        "aggregate%len%0#0",
        "reinterpret_Encoded(uint64,uint64,(uint64,(len+uint8[]),(len+utf8[])))%0#0"
      ]
    },
    "1630": {
      "op": "uncover 2",
      "stack_out": [
        "aggregate%item0%0#0",
        "aggregate%extract%1#0",
        "aggregate%len%0#0",
        "reinterpret_Encoded(uint64,uint64,(uint64,(len+uint8[]),(len+utf8[])))%0#0",
        "aggregate%extract_uint16%0#0"
      ]
    },
    "1632": {
      "op": "uncover 2",
      "stack_out": [
        "aggregate%item0%0#0",
        "aggregate%extract%1#0",
        "reinterpret_Encoded(uint64,uint64,(uint64,(len+uint8[]),(len+utf8[])))%0#0",
        "aggregate%extract_uint16%0#0",
        "aggregate%len%0#0"
      ]
    },
    "1634": {
      "op": "substring3",
      "defined_out": [
        "aggregate%extract%1#0",
        "aggregate%item0%0#0",
        "aggregate%substring3%0#0"
      ],
      "stack_out": [
        "aggregate%item0%0#0",
        "aggregate%extract%1#0",
        "aggregate%substring3%0#0"
      ]
    },
    "1635": {
      "op": "dup",
      "defined_out": [
        "aggregate%extract%1#0",
        "aggregate%item0%0#0",
        "aggregate%substring3%0#0",
        "aggregate%substring3%0#0 (copy)"
      ],
      "stack_out": [
        "aggregate%item0%0#0",
        "aggregate%extract%1#0",
        "aggregate%substring3%0#0",
        "aggregate%substring3%0#0 (copy)"
      ]
    },
    "1636": {
      "op": "intc_0 // 0",
      "stack_out": [
        "aggregate%item0%0#0",
        "aggregate%extract%1#0",
        "aggregate%substring3%0#0",
        "aggregate%substring3%0#0 (copy)",
        "0"
      ]
    },
    "1637": {
      "op": "intc_1 // 8",
      "stack_out": [
        "aggregate%item0%0#0",
        "aggregate%extract%1#0",
        "aggregate%substring3%0#0",
        "aggregate%substring3%0#0 (copy)",
        "0",
        "8"
      ]
    },
    "1638": {
      "op": "extract3",
      "defined_out": [
        "aggregate%extract%1#0",
        "aggregate%extract%2#0",
        "aggregate%item0%0#0",
        "aggregate%substring3%0#0"
      ],
      "stack_out": [
        "aggregate%item0%0#0",
        "aggregate%extract%1#0",
        "aggregate%substring3%0#0",
        "aggregate%extract%2#0"
      ]
    },
    "1639": {
      "op": "btoi",
      "defined_out": [
        "aggregate%extract%1#0",
        "aggregate%item0%0#0",
        "aggregate%item0%1#0",
        "aggregate%substring3%0#0"
      ],
      "stack_out": [
        "aggregate%item0%0#0",
        "aggregate%extract%1#0",
        "aggregate%substring3%0#0",
        "aggregate%item0%1#0"
      ]
    },
    "1640": {
      "op": "cover 1",
      "stack_out": [
        "aggregate%item0%0#0",
        "aggregate%extract%1#0",
        "aggregate%item0%1#0",
        "aggregate%substring3%0#0"
      ]
    },
    "1642": {
      "op": "dup",
      "stack_out": [
        "aggregate%item0%0#0",
        "aggregate%extract%1#0",
        "aggregate%item0%1#0",
        "aggregate%substring3%0#0",
        "aggregate%substring3%0#0 (copy)"
      ]
    },
    "1643": {
      "op": "intc_1 // 8",
      "stack_out": [
        "aggregate%item0%0#0",
        "aggregate%extract%1#0",
        "aggregate%item0%1#0",
        "aggregate%substring3%0#0",
        "aggregate%substring3%0#0 (copy)",
        "8"
      ]
    },
    "1644": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%extract%1#0",
        "aggregate%extract_uint16%1#0",
        "aggregate%item0%0#0",
        "aggregate%item0%1#0",
        "aggregate%substring3%0#0"
      ],
      "stack_out": [
        "aggregate%item0%0#0",
        "aggregate%extract%1#0",
        "aggregate%item0%1#0",
        "aggregate%substring3%0#0",
        "aggregate%extract_uint16%1#0"
      ]
    },
    "1645": {
      "op": "cover 1",
      "stack_out": [
        "aggregate%item0%0#0",
        "aggregate%extract%1#0",
        "aggregate%item0%1#0",
        "aggregate%extract_uint16%1#0",
        "aggregate%substring3%0#0"
      ]
    },
    "1647": {
      "op": "dup",
      "stack_out": [
        "aggregate%item0%0#0",
        "aggregate%extract%1#0",
        "aggregate%item0%1#0",
        "aggregate%extract_uint16%1#0",
        "aggregate%substring3%0#0",
        "aggregate%substring3%0#0 (copy)"
      ]
    },
    "1648": {
      "op": "pushint 10 // 10",
      "defined_out": [
        "10",
        "aggregate%extract%1#0",
        "aggregate%extract_uint16%1#0",
        "aggregate%item0%0#0",
        "aggregate%item0%1#0",
        "aggregate%substring3%0#0",
        "aggregate%substring3%0#0 (copy)"
      ],
      "stack_out": [
        "aggregate%item0%0#0",
        "aggregate%extract%1#0",
        "aggregate%item0%1#0",
        "aggregate%extract_uint16%1#0",
        "aggregate%substring3%0#0",
        "aggregate%substring3%0#0 (copy)",
        "10"
      ]
    },
    "1650": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%extract%1#0",
        "aggregate%extract_uint16%1#0",
        "aggregate%extract_uint16%2#0",
        "aggregate%item0%0#0",
        "aggregate%item0%1#0",
        "aggregate%substring3%0#0"
      ],
      "stack_out": [
        "aggregate%item0%0#0",
        "aggregate%extract%1#0",
        "aggregate%item0%1#0",
        "aggregate%extract_uint16%1#0",
        "aggregate%substring3%0#0",
        "aggregate%extract_uint16%2#0"
      ]
    },
    "1651": {
      "op": "dig 1",
      "stack_out": [
        "aggregate%item0%0#0",
        "aggregate%extract%1#0",
        "aggregate%item0%1#0",
        "aggregate%extract_uint16%1#0",
        "aggregate%substring3%0#0",
        "aggregate%extract_uint16%2#0",
        "aggregate%substring3%0#0 (copy)"
      ]
    },
    "1653": {
      "op": "uncover 3",
      "stack_out": [
        "aggregate%item0%0#0",
        "aggregate%extract%1#0",
        "aggregate%item0%1#0",
        "aggregate%substring3%0#0",
        "aggregate%extract_uint16%2#0",
        "aggregate%substring3%0#0 (copy)",
        "aggregate%extract_uint16%1#0"
      ]
    },
    "1655": {
      "op": "uncover 2",
      "stack_out": [
        "aggregate%item0%0#0",
        "aggregate%extract%1#0",
        "aggregate%item0%1#0",
        "aggregate%substring3%0#0",
        "aggregate%substring3%0#0 (copy)",
        "aggregate%extract_uint16%1#0",
        "aggregate%extract_uint16%2#0"
      ]
    },
    "1657": {
      "op": "substring3",
      "defined_out": [
        "aggregate%extract%1#0",
        "aggregate%item0%0#0",
        "aggregate%item0%1#0",
        "aggregate%substring3%0#0",
        "aggregate%substring3%1#0"
      ],
      "stack_out": [
        "aggregate%item0%0#0",
        "aggregate%extract%1#0",
        "aggregate%item0%1#0",
        "aggregate%substring3%0#0",
        "aggregate%substring3%1#0"
      ]
    },
    "1658": {
      "op": "extract 2 0",
      "defined_out": [
        "aggregate%extract%1#0",
        "aggregate%item0%0#0",
        "aggregate%item0%1#0",
        "aggregate%item1%0#0",
        "aggregate%substring3%0#0"
      ],
      "stack_out": [
        "aggregate%item0%0#0",
        "aggregate%extract%1#0",
        "aggregate%item0%1#0",
        "aggregate%substring3%0#0",
        "aggregate%item1%0#0"
      ]
    },
    "1661": {
      "op": "cover 1",
      "stack_out": [
        "aggregate%item0%0#0",
        "aggregate%extract%1#0",
        "aggregate%item0%1#0",
        "aggregate%item1%0#0",
        "aggregate%substring3%0#0"
      ]
    },
    "1663": {
      "op": "dup",
      "stack_out": [
        "aggregate%item0%0#0",
        "aggregate%extract%1#0",
        "aggregate%item0%1#0",
        "aggregate%item1%0#0",
        "aggregate%substring3%0#0",
        "aggregate%substring3%0#0 (copy)"
      ]
    },
    "1664": {
      "op": "pushint 10 // 10",
      "stack_out": [
        "aggregate%item0%0#0",
        "aggregate%extract%1#0",
        "aggregate%item0%1#0",
        "aggregate%item1%0#0",
        "aggregate%substring3%0#0",
        "aggregate%substring3%0#0 (copy)",
        "10"
      ]
    },
    "1666": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%extract%1#0",
        "aggregate%extract_uint16%3#0",
        "aggregate%item0%0#0",
        "aggregate%item0%1#0",
        "aggregate%item1%0#0",
        "aggregate%substring3%0#0"
      ],
      "stack_out": [
        "aggregate%item0%0#0",
        "aggregate%extract%1#0",
        "aggregate%item0%1#0",
        "aggregate%item1%0#0",
        "aggregate%substring3%0#0",
        "aggregate%extract_uint16%3#0"
      ]
    },
    "1667": {
      "op": "cover 1",
      "stack_out": [
        "aggregate%item0%0#0",
        "aggregate%extract%1#0",
        "aggregate%item0%1#0",
        "aggregate%item1%0#0",
        "aggregate%extract_uint16%3#0",
        "aggregate%substring3%0#0"
      ]
    },
    "1669": {
      "op": "dup",
      "stack_out": [
        "aggregate%item0%0#0",
        "aggregate%extract%1#0",
        "aggregate%item0%1#0",
        "aggregate%item1%0#0",
        "aggregate%extract_uint16%3#0",
        "aggregate%substring3%0#0",
        "aggregate%substring3%0#0 (copy)"
      ]
    },
    "1670": {
      "op": "len",
      "defined_out": [
        "aggregate%extract%1#0",
        "aggregate%extract_uint16%3#0",
        "aggregate%item0%0#0",
        "aggregate%item0%1#0",
        "aggregate%item1%0#0",
        "aggregate%len%1#0",
        "aggregate%substring3%0#0"
      ],
      "stack_out": [
        "aggregate%item0%0#0",
        "aggregate%extract%1#0",
        "aggregate%item0%1#0",
        "aggregate%item1%0#0",
        "aggregate%extract_uint16%3#0",
        "aggregate%substring3%0#0",
        "aggregate%len%1#0"
      ]
    },
    "1671": {
      "op": "cover 1",
      "stack_out": [
        "aggregate%item0%0#0",
        "aggregate%extract%1#0",
        "aggregate%item0%1#0",
        "aggregate%item1%0#0",
        "aggregate%extract_uint16%3#0",
        "aggregate%len%1#0",
        "aggregate%substring3%0#0"
      ]
    },
    "1673": {
      "op": "uncover 2",
      "stack_out": [
        "aggregate%item0%0#0",
        "aggregate%extract%1#0",
        "aggregate%item0%1#0",
        "aggregate%item1%0#0",
        "aggregate%len%1#0",
        "aggregate%substring3%0#0",
        "aggregate%extract_uint16%3#0"
      ]
    },
    "1675": {
      "op": "uncover 2",
      "stack_out": [
        "aggregate%item0%0#0",
        "aggregate%extract%1#0",
        "aggregate%item0%1#0",
        "aggregate%item1%0#0",
        "aggregate%substring3%0#0",
        "aggregate%extract_uint16%3#0",
        "aggregate%len%1#0"
      ]
    },
    "1677": {
      "op": "substring3",
      "defined_out": [
        "aggregate%extract%1#0",
        "aggregate%item0%0#0",
        "aggregate%item0%1#0",
        "aggregate%item1%0#0",
        "aggregate%substring3%2#0"
      ],
      "stack_out": [
        "aggregate%item0%0#0",
        "aggregate%extract%1#0",
        "aggregate%item0%1#0",
        "aggregate%item1%0#0",
        "aggregate%substring3%2#0"
      ]
    },
    "1678": {
      "op": "extract 2 0",
      "defined_out": [
        "aggregate%extract%1#0",
        "aggregate%item0%0#0",
        "aggregate%item0%1#0",
        "aggregate%item1%0#0",
        "aggregate%item2%0#0"
      ],
      "stack_out": [
        "aggregate%item0%0#0",
        "aggregate%extract%1#0",
        "aggregate%item0%1#0",
        "aggregate%item1%0#0",
        "aggregate%item2%0#0"
      ]
    },
    "1681": {
      "op": "uncover 4",
      "stack_out": [
        "aggregate%extract%1#0",
        "aggregate%item0%1#0",
        "aggregate%item1%0#0",
        "aggregate%item2%0#0",
        "aggregate%item0%0#0"
      ]
    },
    "1683": {
      "op": "cover 1",
      "defined_out": [
        "aggregate%extract%1#0",
        "aggregate%item0%1#0",
        "aggregate%item1%0#0",
        "aggregate%item2%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "aggregate%extract%1#0",
        "aggregate%item0%1#0",
        "aggregate%item1%0#0",
        "tmp%0#0",
        "aggregate%item2%0#0"
      ]
    },
    "1685": {
      "op": "uncover 4",
      "defined_out": [
        "aggregate%item0%1#0",
        "aggregate%item1%0#0",
        "aggregate%item2%0#0",
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "aggregate%item0%1#0",
        "aggregate%item1%0#0",
        "tmp%0#0",
        "aggregate%item2%0#0",
        "tmp%1#0"
      ]
    },
    "1687": {
      "op": "uncover 4",
      "defined_out": [
        "aggregate%item1%0#0",
        "aggregate%item2%0#0",
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "aggregate%item1%0#0",
        "tmp%0#0",
        "aggregate%item2%0#0",
        "tmp%1#0",
        "tmp%2#0"
      ]
    },
    "1689": {
      "op": "uncover 4",
      "defined_out": [
        "aggregate%item2%0#0",
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "aggregate%item2%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0"
      ]
    },
    "1691": {
      "op": "uncover 3",
      "defined_out": [
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0"
      ]
    },
    "1693": {
      "op": "uncover 4",
      "stack_out": [
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%0#0"
      ]
    },
    "1695": {
      "op": "uncover 4",
      "stack_out": [
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%0#0",
        "tmp%1#0"
      ]
    },
    "1697": {
      "op": "uncover 4",
      "stack_out": [
        "tmp%3#0",
        "tmp%4#0",
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0"
      ]
    },
    "1699": {
      "op": "uncover 4",
      "stack_out": [
        "tmp%4#0",
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0"
      ]
    },
    "1701": {
      "op": "uncover 4",
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0"
      ]
    },
    "1703": {
      "callsub": "test_cases.tuple_support.nested_tuples.NestedTuples.nested_named_tuple_params",
      "op": "callsub test_cases.tuple_support.nested_tuples.NestedTuples.nested_named_tuple_params",
      "defined_out": [
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0"
      ]
    },
    "1706": {
      "op": "cover 4",
      "stack_out": [
        "tmp%9#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0"
      ]
    },
    "1708": {
      "op": "cover 3",
      "stack_out": [
        "tmp%9#0",
        "tmp%8#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0"
      ]
    },
    "1710": {
      "op": "cover 2",
      "stack_out": [
        "tmp%9#0",
        "tmp%8#0",
        "tmp%7#0",
        "tmp%5#0",
        "tmp%6#0"
      ]
    },
    "1712": {
      "op": "cover 1",
      "stack_out": [
        "tmp%9#0",
        "tmp%8#0",
        "tmp%7#0",
        "tmp%6#0",
        "tmp%5#0"
      ]
    },
    "1714": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(uint64)%0#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0",
        "tmp%8#0",
        "tmp%7#0",
        "tmp%6#0",
        "aggregate%as_Encoded(uint64)%0#0"
      ]
    },
    "1715": {
      "op": "bytec_0 // 0x",
      "defined_out": [
        "0x",
        "aggregate%as_Encoded(uint64)%0#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0",
        "tmp%8#0",
        "tmp%7#0",
        "tmp%6#0",
        "aggregate%as_Encoded(uint64)%0#0",
        "0x"
      ]
    },
    "1716": {
      "op": "uncover 1",
      "stack_out": [
        "tmp%9#0",
        "tmp%8#0",
        "tmp%7#0",
        "tmp%6#0",
        "0x",
        "aggregate%as_Encoded(uint64)%0#0"
      ]
    },
    "1718": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%0#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0",
        "tmp%8#0",
        "tmp%7#0",
        "tmp%6#0",
        "aggregate%head%0#0"
      ]
    },
    "1719": {
      "op": "uncover 1",
      "stack_out": [
        "tmp%9#0",
        "tmp%8#0",
        "tmp%7#0",
        "aggregate%head%0#0",
        "tmp%6#0"
      ]
    },
    "1721": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%1#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0",
        "tmp%8#0",
        "tmp%7#0",
        "aggregate%head%1#0"
      ]
    },
    "1722": {
      "op": "cover 3",
      "stack_out": [
        "aggregate%head%1#0",
        "tmp%9#0",
        "tmp%8#0",
        "tmp%7#0"
      ]
    },
    "1724": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(uint64)%1#0",
        "aggregate%head%1#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "aggregate%head%1#0",
        "tmp%9#0",
        "tmp%8#0",
        "aggregate%as_Encoded(uint64)%1#0"
      ]
    },
    "1725": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "aggregate%head%1#0",
        "tmp%9#0",
        "tmp%8#0",
        "aggregate%as_Encoded(uint64)%1#0",
        "0x"
      ]
    },
    "1726": {
      "op": "uncover 1",
      "stack_out": [
        "aggregate%head%1#0",
        "tmp%9#0",
        "tmp%8#0",
        "0x",
        "aggregate%as_Encoded(uint64)%1#0"
      ]
    },
    "1728": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%1#0",
        "aggregate%head%2#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "aggregate%head%1#0",
        "tmp%9#0",
        "tmp%8#0",
        "aggregate%head%2#0"
      ]
    },
    "1729": {
      "op": "dig 1",
      "defined_out": [
        "aggregate%head%1#0",
        "aggregate%head%2#0",
        "tmp%8#0",
        "tmp%8#0 (copy)",
        "tmp%9#0"
      ],
      "stack_out": [
        "aggregate%head%1#0",
        "tmp%9#0",
        "tmp%8#0",
        "aggregate%head%2#0",
        "tmp%8#0 (copy)"
      ]
    },
    "1731": {
      "op": "len",
      "defined_out": [
        "aggregate%head%1#0",
        "aggregate%head%2#0",
        "aggregate%length%0#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "aggregate%head%1#0",
        "tmp%9#0",
        "tmp%8#0",
        "aggregate%head%2#0",
        "aggregate%length%0#0"
      ]
    },
    "1732": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%0#0",
        "aggregate%head%1#0",
        "aggregate%head%2#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "aggregate%head%1#0",
        "tmp%9#0",
        "tmp%8#0",
        "aggregate%head%2#0",
        "aggregate%as_bytes%0#0"
      ]
    },
    "1733": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%head%1#0",
        "aggregate%head%2#0",
        "aggregate%length_uint16%0#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "aggregate%head%1#0",
        "tmp%9#0",
        "tmp%8#0",
        "aggregate%head%2#0",
        "aggregate%length_uint16%0#0"
      ]
    },
    "1736": {
      "op": "uncover 2",
      "stack_out": [
        "aggregate%head%1#0",
        "tmp%9#0",
        "aggregate%head%2#0",
        "aggregate%length_uint16%0#0",
        "tmp%8#0"
      ]
    },
    "1738": {
      "op": "concat",
      "defined_out": [
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%head%1#0",
        "aggregate%head%2#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "aggregate%head%1#0",
        "tmp%9#0",
        "aggregate%head%2#0",
        "aggregate%as_Encoded(len+uint8[])%0#0"
      ]
    },
    "1739": {
      "op": "pushint 12 // 12",
      "defined_out": [
        "12",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%head%1#0",
        "aggregate%head%2#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "aggregate%head%1#0",
        "tmp%9#0",
        "aggregate%head%2#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "12"
      ]
    },
    "1741": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%as_bytes%1#0",
        "aggregate%head%1#0",
        "aggregate%head%2#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "aggregate%head%1#0",
        "tmp%9#0",
        "aggregate%head%2#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%as_bytes%1#0"
      ]
    },
    "1742": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%head%1#0",
        "aggregate%head%2#0",
        "aggregate%offset_as_uint16%0#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "aggregate%head%1#0",
        "tmp%9#0",
        "aggregate%head%2#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%offset_as_uint16%0#0"
      ]
    },
    "1745": {
      "op": "uncover 2",
      "stack_out": [
        "aggregate%head%1#0",
        "tmp%9#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%offset_as_uint16%0#0",
        "aggregate%head%2#0"
      ]
    },
    "1747": {
      "op": "uncover 1",
      "stack_out": [
        "aggregate%head%1#0",
        "tmp%9#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%head%2#0",
        "aggregate%offset_as_uint16%0#0"
      ]
    },
    "1749": {
      "op": "concat",
      "defined_out": [
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%head%1#0",
        "aggregate%head%3#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "aggregate%head%1#0",
        "tmp%9#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%head%3#0"
      ]
    },
    "1750": {
      "op": "cover 1",
      "stack_out": [
        "aggregate%head%1#0",
        "tmp%9#0",
        "aggregate%head%3#0",
        "aggregate%as_Encoded(len+uint8[])%0#0"
      ]
    },
    "1752": {
      "op": "dup",
      "defined_out": [
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%as_Encoded(len+uint8[])%0#0 (copy)",
        "aggregate%head%1#0",
        "aggregate%head%3#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "aggregate%head%1#0",
        "tmp%9#0",
        "aggregate%head%3#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%as_Encoded(len+uint8[])%0#0 (copy)"
      ]
    },
    "1753": {
      "op": "len",
      "defined_out": [
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%data_length%0#0",
        "aggregate%head%1#0",
        "aggregate%head%3#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "aggregate%head%1#0",
        "tmp%9#0",
        "aggregate%head%3#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%data_length%0#0"
      ]
    },
    "1754": {
      "op": "pushint 12 // 12",
      "stack_out": [
        "aggregate%head%1#0",
        "tmp%9#0",
        "aggregate%head%3#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%data_length%0#0",
        "12"
      ]
    },
    "1756": {
      "op": "+",
      "defined_out": [
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%head%1#0",
        "aggregate%head%3#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "aggregate%head%1#0",
        "tmp%9#0",
        "aggregate%head%3#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%current_tail_offset%0#0"
      ]
    },
    "1757": {
      "op": "dig 3",
      "defined_out": [
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%head%1#0",
        "aggregate%head%3#0",
        "tmp%9#0",
        "tmp%9#0 (copy)"
      ],
      "stack_out": [
        "aggregate%head%1#0",
        "tmp%9#0",
        "aggregate%head%3#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%current_tail_offset%0#0",
        "tmp%9#0 (copy)"
      ]
    },
    "1759": {
      "op": "len",
      "defined_out": [
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%head%1#0",
        "aggregate%head%3#0",
        "aggregate%length%1#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "aggregate%head%1#0",
        "tmp%9#0",
        "aggregate%head%3#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%length%1#0"
      ]
    },
    "1760": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%as_bytes%2#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%head%1#0",
        "aggregate%head%3#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "aggregate%head%1#0",
        "tmp%9#0",
        "aggregate%head%3#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%as_bytes%2#0"
      ]
    },
    "1761": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%head%1#0",
        "aggregate%head%3#0",
        "aggregate%length_uint16%1#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "aggregate%head%1#0",
        "tmp%9#0",
        "aggregate%head%3#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%length_uint16%1#0"
      ]
    },
    "1764": {
      "op": "uncover 4",
      "stack_out": [
        "aggregate%head%1#0",
        "aggregate%head%3#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%length_uint16%1#0",
        "tmp%9#0"
      ]
    },
    "1766": {
      "op": "concat",
      "defined_out": [
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%encoded_value%1#0",
        "aggregate%head%1#0",
        "aggregate%head%3#0"
      ],
      "stack_out": [
        "aggregate%head%1#0",
        "aggregate%head%3#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%encoded_value%1#0"
      ]
    },
    "1767": {
      "op": "cover 1",
      "defined_out": [
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%as_Encoded(len+utf8[])%0#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%head%1#0",
        "aggregate%head%3#0"
      ],
      "stack_out": [
        "aggregate%head%1#0",
        "aggregate%head%3#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%as_Encoded(len+utf8[])%0#0",
        "aggregate%current_tail_offset%0#0"
      ]
    },
    "1769": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%as_Encoded(len+utf8[])%0#0",
        "aggregate%as_bytes%3#0",
        "aggregate%head%1#0",
        "aggregate%head%3#0"
      ],
      "stack_out": [
        "aggregate%head%1#0",
        "aggregate%head%3#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%as_Encoded(len+utf8[])%0#0",
        "aggregate%as_bytes%3#0"
      ]
    },
    "1770": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%as_Encoded(len+utf8[])%0#0",
        "aggregate%head%1#0",
        "aggregate%head%3#0",
        "aggregate%offset_as_uint16%1#0"
      ],
      "stack_out": [
        "aggregate%head%1#0",
        "aggregate%head%3#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%as_Encoded(len+utf8[])%0#0",
        "aggregate%offset_as_uint16%1#0"
      ]
    },
    "1773": {
      "op": "uncover 3",
      "stack_out": [
        "aggregate%head%1#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%as_Encoded(len+utf8[])%0#0",
        "aggregate%offset_as_uint16%1#0",
        "aggregate%head%3#0"
      ]
    },
    "1775": {
      "op": "uncover 1",
      "stack_out": [
        "aggregate%head%1#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%as_Encoded(len+utf8[])%0#0",
        "aggregate%head%3#0",
        "aggregate%offset_as_uint16%1#0"
      ]
    },
    "1777": {
      "op": "concat",
      "defined_out": [
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%as_Encoded(len+utf8[])%0#0",
        "aggregate%head%1#0",
        "aggregate%head%4#0"
      ],
      "stack_out": [
        "aggregate%head%1#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%as_Encoded(len+utf8[])%0#0",
        "aggregate%head%4#0"
      ]
    },
    "1778": {
      "op": "uncover 2",
      "stack_out": [
        "aggregate%head%1#0",
        "aggregate%as_Encoded(len+utf8[])%0#0",
        "aggregate%head%4#0",
        "aggregate%as_Encoded(len+uint8[])%0#0"
      ]
    },
    "1780": {
      "op": "concat",
      "defined_out": [
        "aggregate%as_Encoded(len+utf8[])%0#0",
        "aggregate%concat%0#0",
        "aggregate%head%1#0"
      ],
      "stack_out": [
        "aggregate%head%1#0",
        "aggregate%as_Encoded(len+utf8[])%0#0",
        "aggregate%concat%0#0"
      ]
    },
    "1781": {
      "op": "uncover 1",
      "stack_out": [
        "aggregate%head%1#0",
        "aggregate%concat%0#0",
        "aggregate%as_Encoded(len+utf8[])%0#0"
      ]
    },
    "1783": {
      "op": "concat",
      "defined_out": [
        "aggregate%as_Encoded(uint64,(len+uint8[]),(len+utf8[]))%0#0",
        "aggregate%head%1#0"
      ],
      "stack_out": [
        "aggregate%head%1#0",
        "aggregate%as_Encoded(uint64,(len+uint8[]),(len+utf8[]))%0#0"
      ]
    },
    "1784": {
      "op": "pushint 18 // 18",
      "defined_out": [
        "18",
        "aggregate%as_Encoded(uint64,(len+uint8[]),(len+utf8[]))%0#0",
        "aggregate%head%1#0"
      ],
      "stack_out": [
        "aggregate%head%1#0",
        "aggregate%as_Encoded(uint64,(len+uint8[]),(len+utf8[]))%0#0",
        "18"
      ]
    },
    "1786": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(uint64,(len+uint8[]),(len+utf8[]))%0#0",
        "aggregate%as_bytes%4#0",
        "aggregate%head%1#0"
      ],
      "stack_out": [
        "aggregate%head%1#0",
        "aggregate%as_Encoded(uint64,(len+uint8[]),(len+utf8[]))%0#0",
        "aggregate%as_bytes%4#0"
      ]
    },
    "1787": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%as_Encoded(uint64,(len+uint8[]),(len+utf8[]))%0#0",
        "aggregate%head%1#0",
        "aggregate%offset_as_uint16%2#0"
      ],
      "stack_out": [
        "aggregate%head%1#0",
        "aggregate%as_Encoded(uint64,(len+uint8[]),(len+utf8[]))%0#0",
        "aggregate%offset_as_uint16%2#0"
      ]
    },
    "1790": {
      "op": "uncover 2",
      "stack_out": [
        "aggregate%as_Encoded(uint64,(len+uint8[]),(len+utf8[]))%0#0",
        "aggregate%offset_as_uint16%2#0",
        "aggregate%head%1#0"
      ]
    },
    "1792": {
      "op": "uncover 1",
      "stack_out": [
        "aggregate%as_Encoded(uint64,(len+uint8[]),(len+utf8[]))%0#0",
        "aggregate%head%1#0",
        "aggregate%offset_as_uint16%2#0"
      ]
    },
    "1794": {
      "op": "concat",
      "defined_out": [
        "aggregate%as_Encoded(uint64,(len+uint8[]),(len+utf8[]))%0#0",
        "aggregate%head%5#0"
      ],
      "stack_out": [
        "aggregate%as_Encoded(uint64,(len+uint8[]),(len+utf8[]))%0#0",
        "aggregate%head%5#0"
      ]
    },
    "1795": {
      "op": "uncover 1",
      "stack_out": [
        "aggregate%head%5#0",
        "aggregate%as_Encoded(uint64,(len+uint8[]),(len+utf8[]))%0#0"
      ]
    },
    "1797": {
      "op": "concat",
      "defined_out": [
        "tmp%10#0"
      ],
      "stack_out": [
        "tmp%10#0"
      ]
    },
    "1798": {
      "op": "bytec_1 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%10#0"
      ],
      "stack_out": [
        "tmp%10#0",
        "0x151f7c75"
      ]
    },
    "1799": {
      "op": "uncover 1",
      "stack_out": [
        "0x151f7c75",
        "tmp%10#0"
      ]
    },
    "1801": {
      "op": "concat",
      "defined_out": [
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0"
      ]
    },
    "1802": {
      "op": "log",
      "stack_out": []
    },
    "1803": {
      "op": "intc_2 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "1804": {
      "op": "return",
      "stack_out": []
    },
    "1805": {
      "subroutine": "test_cases.tuple_support.nested_tuples.NestedTuples.__init__",
      "params": {},
      "block": "__init__",
      "stack_in": [],
      "op": "b __init___block@0"
    },
    "1808": {
      "block": "__init___block@0",
      "stack_in": [],
      "op": "bytec 4 // \"build_nested_call_count\"",
      "defined_out": [
        "\"build_nested_call_count\""
      ],
      "stack_out": [
        "\"build_nested_call_count\""
      ]
    },
    "1810": {
      "op": "intc_0 // 0",
      "defined_out": [
        "\"build_nested_call_count\"",
        "0"
      ],
      "stack_out": [
        "\"build_nested_call_count\"",
        "0"
      ]
    },
    "1811": {
      "op": "app_global_put",
      "stack_out": []
    },
    "1812": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0"
      ]
    },
    "1813": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%0#0"
      ],
      "stack_out": [
        "aggregate%as_bytes%0#0"
      ]
    },
    "1814": {
      "op": "extract 6 2",
      "defined_out": [
        "encoded_array%0#0"
      ],
      "stack_out": [
        "encoded_array%0#0"
      ]
    },
    "1817": {
      "op": "pushint 4 // 4",
      "defined_out": [
        "4",
        "encoded_array%0#0"
      ],
      "stack_out": [
        "encoded_array%0#0",
        "4"
      ]
    },
    "1819": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%1#0",
        "encoded_array%0#0"
      ],
      "stack_out": [
        "encoded_array%0#0",
        "aggregate%as_bytes%1#0"
      ]
    },
    "1820": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%offset_as_uint16%0#0",
        "encoded_array%0#0"
      ],
      "stack_out": [
        "encoded_array%0#0",
        "aggregate%offset_as_uint16%0#0"
      ]
    },
    "1823": {
      "op": "bytec_0 // 0x",
      "defined_out": [
        "0x",
        "aggregate%offset_as_uint16%0#0",
        "encoded_array%0#0"
      ],
      "stack_out": [
        "encoded_array%0#0",
        "aggregate%offset_as_uint16%0#0",
        "0x"
      ]
    },
    "1824": {
      "op": "uncover 1",
      "stack_out": [
        "encoded_array%0#0",
        "0x",
        "aggregate%offset_as_uint16%0#0"
      ]
    },
    "1826": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%0#0",
        "encoded_array%0#0"
      ],
      "stack_out": [
        "encoded_array%0#0",
        "aggregate%head%0#0"
      ]
    },
    "1827": {
      "op": "cover 1",
      "stack_out": [
        "aggregate%head%0#0",
        "encoded_array%0#0"
      ]
    },
    "1829": {
      "op": "dup",
      "defined_out": [
        "aggregate%head%0#0",
        "encoded_array%0#0",
        "encoded_array%0#0 (copy)"
      ],
      "stack_out": [
        "aggregate%head%0#0",
        "encoded_array%0#0",
        "encoded_array%0#0 (copy)"
      ]
    },
    "1830": {
      "op": "len",
      "defined_out": [
        "aggregate%data_length%0#0",
        "aggregate%head%0#0",
        "encoded_array%0#0"
      ],
      "stack_out": [
        "aggregate%head%0#0",
        "encoded_array%0#0",
        "aggregate%data_length%0#0"
      ]
    },
    "1831": {
      "op": "pushint 4 // 4",
      "stack_out": [
        "aggregate%head%0#0",
        "encoded_array%0#0",
        "aggregate%data_length%0#0",
        "4"
      ]
    },
    "1833": {
      "op": "+",
      "defined_out": [
        "aggregate%current_tail_offset%0#0",
        "aggregate%head%0#0",
        "encoded_array%0#0"
      ],
      "stack_out": [
        "aggregate%head%0#0",
        "encoded_array%0#0",
        "aggregate%current_tail_offset%0#0"
      ]
    },
    "1834": {
      "op": "intc_0 // 0",
      "stack_out": [
        "aggregate%head%0#0",
        "encoded_array%0#0",
        "aggregate%current_tail_offset%0#0",
        "0"
      ]
    },
    "1835": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(uint64)%0#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%head%0#0",
        "encoded_array%0#0"
      ],
      "stack_out": [
        "aggregate%head%0#0",
        "encoded_array%0#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%as_Encoded(uint64)%0#0"
      ]
    },
    "1836": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "aggregate%head%0#0",
        "encoded_array%0#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%as_Encoded(uint64)%0#0",
        "0x"
      ]
    },
    "1837": {
      "op": "uncover 1",
      "stack_out": [
        "aggregate%head%0#0",
        "encoded_array%0#0",
        "aggregate%current_tail_offset%0#0",
        "0x",
        "aggregate%as_Encoded(uint64)%0#0"
      ]
    },
    "1839": {
      "op": "concat",
      "defined_out": [
        "aggregate%current_tail_offset%0#0",
        "aggregate%head%0#0",
        "aggregate%head%1#0",
        "encoded_array%0#0"
      ],
      "stack_out": [
        "aggregate%head%0#0",
        "encoded_array%0#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%head%1#0"
      ]
    },
    "1840": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "aggregate%head%0#0",
        "encoded_array%0#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%head%1#0",
        "0x"
      ]
    },
    "1841": {
      "op": "len",
      "defined_out": [
        "aggregate%current_tail_offset%0#0",
        "aggregate%head%0#0",
        "aggregate%head%1#0",
        "aggregate%length%0#0",
        "encoded_array%0#0"
      ],
      "stack_out": [
        "aggregate%head%0#0",
        "encoded_array%0#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%head%1#0",
        "aggregate%length%0#0"
      ]
    },
    "1842": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%2#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%head%0#0",
        "aggregate%head%1#0",
        "encoded_array%0#0"
      ],
      "stack_out": [
        "aggregate%head%0#0",
        "encoded_array%0#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%head%1#0",
        "aggregate%as_bytes%2#0"
      ]
    },
    "1843": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%current_tail_offset%0#0",
        "aggregate%head%0#0",
        "aggregate%head%1#0",
        "aggregate%length_uint16%0#0",
        "encoded_array%0#0"
      ],
      "stack_out": [
        "aggregate%head%0#0",
        "encoded_array%0#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%head%1#0",
        "aggregate%length_uint16%0#0"
      ]
    },
    "1846": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "aggregate%head%0#0",
        "encoded_array%0#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%head%1#0",
        "aggregate%length_uint16%0#0",
        "0x"
      ]
    },
    "1847": {
      "op": "concat",
      "defined_out": [
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%head%0#0",
        "aggregate%head%1#0",
        "encoded_array%0#0"
      ],
      "stack_out": [
        "aggregate%head%0#0",
        "encoded_array%0#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%head%1#0",
        "aggregate%as_Encoded(len+uint8[])%0#0"
      ]
    },
    "1848": {
      "op": "pushint 12 // 12",
      "defined_out": [
        "12",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%head%0#0",
        "aggregate%head%1#0",
        "encoded_array%0#0"
      ],
      "stack_out": [
        "aggregate%head%0#0",
        "encoded_array%0#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%head%1#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "12"
      ]
    },
    "1850": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%as_bytes%3#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%head%0#0",
        "aggregate%head%1#0",
        "encoded_array%0#0"
      ],
      "stack_out": [
        "aggregate%head%0#0",
        "encoded_array%0#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%head%1#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%as_bytes%3#0"
      ]
    },
    "1851": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%head%0#0",
        "aggregate%head%1#0",
        "aggregate%offset_as_uint16%1#0",
        "encoded_array%0#0"
      ],
      "stack_out": [
        "aggregate%head%0#0",
        "encoded_array%0#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%head%1#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%offset_as_uint16%1#0"
      ]
    },
    "1854": {
      "op": "uncover 2",
      "stack_out": [
        "aggregate%head%0#0",
        "encoded_array%0#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%offset_as_uint16%1#0",
        "aggregate%head%1#0"
      ]
    },
    "1856": {
      "op": "uncover 1",
      "stack_out": [
        "aggregate%head%0#0",
        "encoded_array%0#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%head%1#0",
        "aggregate%offset_as_uint16%1#0"
      ]
    },
    "1858": {
      "op": "concat",
      "defined_out": [
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%head%0#0",
        "aggregate%head%2#0",
        "encoded_array%0#0"
      ],
      "stack_out": [
        "aggregate%head%0#0",
        "encoded_array%0#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%head%2#0"
      ]
    },
    "1859": {
      "op": "cover 1",
      "stack_out": [
        "aggregate%head%0#0",
        "encoded_array%0#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%head%2#0",
        "aggregate%as_Encoded(len+uint8[])%0#0"
      ]
    },
    "1861": {
      "op": "dup",
      "defined_out": [
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%as_Encoded(len+uint8[])%0#0 (copy)",
        "aggregate%current_tail_offset%0#0",
        "aggregate%head%0#0",
        "aggregate%head%2#0",
        "encoded_array%0#0"
      ],
      "stack_out": [
        "aggregate%head%0#0",
        "encoded_array%0#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%head%2#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%as_Encoded(len+uint8[])%0#0 (copy)"
      ]
    },
    "1862": {
      "op": "len",
      "defined_out": [
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%data_length%1#0",
        "aggregate%head%0#0",
        "aggregate%head%2#0",
        "encoded_array%0#0"
      ],
      "stack_out": [
        "aggregate%head%0#0",
        "encoded_array%0#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%head%2#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%data_length%1#0"
      ]
    },
    "1863": {
      "op": "pushint 12 // 12",
      "stack_out": [
        "aggregate%head%0#0",
        "encoded_array%0#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%head%2#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%data_length%1#0",
        "12"
      ]
    },
    "1865": {
      "op": "+",
      "defined_out": [
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%current_tail_offset%1#0",
        "aggregate%head%0#0",
        "aggregate%head%2#0",
        "encoded_array%0#0"
      ],
      "stack_out": [
        "aggregate%head%0#0",
        "encoded_array%0#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%head%2#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%current_tail_offset%1#0"
      ]
    },
    "1866": {
      "op": "bytec_0 // \"\"",
      "defined_out": [
        "\"\"",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%current_tail_offset%1#0",
        "aggregate%head%0#0",
        "aggregate%head%2#0",
        "encoded_array%0#0"
      ],
      "stack_out": [
        "aggregate%head%0#0",
        "encoded_array%0#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%head%2#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%current_tail_offset%1#0",
        "\"\""
      ]
    },
    "1867": {
      "op": "len",
      "defined_out": [
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%current_tail_offset%1#0",
        "aggregate%head%0#0",
        "aggregate%head%2#0",
        "aggregate%length%1#0",
        "encoded_array%0#0"
      ],
      "stack_out": [
        "aggregate%head%0#0",
        "encoded_array%0#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%head%2#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%current_tail_offset%1#0",
        "aggregate%length%1#0"
      ]
    },
    "1868": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%as_bytes%4#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%current_tail_offset%1#0",
        "aggregate%head%0#0",
        "aggregate%head%2#0",
        "encoded_array%0#0"
      ],
      "stack_out": [
        "aggregate%head%0#0",
        "encoded_array%0#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%head%2#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%current_tail_offset%1#0",
        "aggregate%as_bytes%4#0"
      ]
    },
    "1869": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%current_tail_offset%1#0",
        "aggregate%head%0#0",
        "aggregate%head%2#0",
        "aggregate%length_uint16%1#0",
        "encoded_array%0#0"
      ],
      "stack_out": [
        "aggregate%head%0#0",
        "encoded_array%0#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%head%2#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%current_tail_offset%1#0",
        "aggregate%length_uint16%1#0"
      ]
    },
    "1872": {
      "op": "bytec_0 // \"\"",
      "stack_out": [
        "aggregate%head%0#0",
        "encoded_array%0#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%head%2#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%current_tail_offset%1#0",
        "aggregate%length_uint16%1#0",
        "\"\""
      ]
    },
    "1873": {
      "op": "concat",
      "defined_out": [
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%current_tail_offset%1#0",
        "aggregate%encoded_value%1#0",
        "aggregate%head%0#0",
        "aggregate%head%2#0",
        "encoded_array%0#0"
      ],
      "stack_out": [
        "aggregate%head%0#0",
        "encoded_array%0#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%head%2#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%current_tail_offset%1#0",
        "aggregate%encoded_value%1#0"
      ]
    },
    "1874": {
      "op": "cover 1",
      "defined_out": [
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%as_Encoded(len+utf8[])%0#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%current_tail_offset%1#0",
        "aggregate%head%0#0",
        "aggregate%head%2#0",
        "encoded_array%0#0"
      ],
      "stack_out": [
        "aggregate%head%0#0",
        "encoded_array%0#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%head%2#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%as_Encoded(len+utf8[])%0#0",
        "aggregate%current_tail_offset%1#0"
      ]
    },
    "1876": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%as_Encoded(len+utf8[])%0#0",
        "aggregate%as_bytes%5#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%head%0#0",
        "aggregate%head%2#0",
        "encoded_array%0#0"
      ],
      "stack_out": [
        "aggregate%head%0#0",
        "encoded_array%0#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%head%2#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%as_Encoded(len+utf8[])%0#0",
        "aggregate%as_bytes%5#0"
      ]
    },
    "1877": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%as_Encoded(len+utf8[])%0#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%head%0#0",
        "aggregate%head%2#0",
        "aggregate%offset_as_uint16%2#0",
        "encoded_array%0#0"
      ],
      "stack_out": [
        "aggregate%head%0#0",
        "encoded_array%0#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%head%2#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%as_Encoded(len+utf8[])%0#0",
        "aggregate%offset_as_uint16%2#0"
      ]
    },
    "1880": {
      "op": "uncover 3",
      "stack_out": [
        "aggregate%head%0#0",
        "encoded_array%0#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%as_Encoded(len+utf8[])%0#0",
        "aggregate%offset_as_uint16%2#0",
        "aggregate%head%2#0"
      ]
    },
    "1882": {
      "op": "uncover 1",
      "stack_out": [
        "aggregate%head%0#0",
        "encoded_array%0#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%as_Encoded(len+utf8[])%0#0",
        "aggregate%head%2#0",
        "aggregate%offset_as_uint16%2#0"
      ]
    },
    "1884": {
      "op": "concat",
      "defined_out": [
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%as_Encoded(len+utf8[])%0#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%head%0#0",
        "aggregate%head%3#0",
        "encoded_array%0#0"
      ],
      "stack_out": [
        "aggregate%head%0#0",
        "encoded_array%0#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%as_Encoded(len+utf8[])%0#0",
        "aggregate%head%3#0"
      ]
    },
    "1885": {
      "op": "uncover 2",
      "stack_out": [
        "aggregate%head%0#0",
        "encoded_array%0#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%as_Encoded(len+utf8[])%0#0",
        "aggregate%head%3#0",
        "aggregate%as_Encoded(len+uint8[])%0#0"
      ]
    },
    "1887": {
      "op": "concat",
      "defined_out": [
        "aggregate%as_Encoded(len+utf8[])%0#0",
        "aggregate%concat%0#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%head%0#0",
        "encoded_array%0#0"
      ],
      "stack_out": [
        "aggregate%head%0#0",
        "encoded_array%0#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%as_Encoded(len+utf8[])%0#0",
        "aggregate%concat%0#0"
      ]
    },
    "1888": {
      "op": "uncover 1",
      "stack_out": [
        "aggregate%head%0#0",
        "encoded_array%0#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%concat%0#0",
        "aggregate%as_Encoded(len+utf8[])%0#0"
      ]
    },
    "1890": {
      "op": "concat",
      "defined_out": [
        "aggregate%as_Encoded(uint64,(len+uint8[]),(len+utf8[]))%0#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%head%0#0",
        "encoded_array%0#0"
      ],
      "stack_out": [
        "aggregate%head%0#0",
        "encoded_array%0#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%as_Encoded(uint64,(len+uint8[]),(len+utf8[]))%0#0"
      ]
    },
    "1891": {
      "op": "uncover 1",
      "stack_out": [
        "aggregate%head%0#0",
        "encoded_array%0#0",
        "aggregate%as_Encoded(uint64,(len+uint8[]),(len+utf8[]))%0#0",
        "aggregate%current_tail_offset%0#0"
      ]
    },
    "1893": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(uint64,(len+uint8[]),(len+utf8[]))%0#0",
        "aggregate%as_bytes%6#0",
        "aggregate%head%0#0",
        "encoded_array%0#0"
      ],
      "stack_out": [
        "aggregate%head%0#0",
        "encoded_array%0#0",
        "aggregate%as_Encoded(uint64,(len+uint8[]),(len+utf8[]))%0#0",
        "aggregate%as_bytes%6#0"
      ]
    },
    "1894": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%as_Encoded(uint64,(len+uint8[]),(len+utf8[]))%0#0",
        "aggregate%head%0#0",
        "aggregate%offset_as_uint16%3#0",
        "encoded_array%0#0"
      ],
      "stack_out": [
        "aggregate%head%0#0",
        "encoded_array%0#0",
        "aggregate%as_Encoded(uint64,(len+uint8[]),(len+utf8[]))%0#0",
        "aggregate%offset_as_uint16%3#0"
      ]
    },
    "1897": {
      "op": "uncover 3",
      "stack_out": [
        "encoded_array%0#0",
        "aggregate%as_Encoded(uint64,(len+uint8[]),(len+utf8[]))%0#0",
        "aggregate%offset_as_uint16%3#0",
        "aggregate%head%0#0"
      ]
    },
    "1899": {
      "op": "uncover 1",
      "stack_out": [
        "encoded_array%0#0",
        "aggregate%as_Encoded(uint64,(len+uint8[]),(len+utf8[]))%0#0",
        "aggregate%head%0#0",
        "aggregate%offset_as_uint16%3#0"
      ]
    },
    "1901": {
      "op": "concat",
      "defined_out": [
        "aggregate%as_Encoded(uint64,(len+uint8[]),(len+utf8[]))%0#0",
        "aggregate%head%4#0",
        "encoded_array%0#0"
      ],
      "stack_out": [
        "encoded_array%0#0",
        "aggregate%as_Encoded(uint64,(len+uint8[]),(len+utf8[]))%0#0",
        "aggregate%head%4#0"
      ]
    },
    "1902": {
      "op": "uncover 2",
      "stack_out": [
        "aggregate%as_Encoded(uint64,(len+uint8[]),(len+utf8[]))%0#0",
        "aggregate%head%4#0",
        "encoded_array%0#0"
      ]
    },
    "1904": {
      "op": "concat",
      "defined_out": [
        "aggregate%as_Encoded(uint64,(len+uint8[]),(len+utf8[]))%0#0",
        "aggregate%concat%2#0"
      ],
      "stack_out": [
        "aggregate%as_Encoded(uint64,(len+uint8[]),(len+utf8[]))%0#0",
        "aggregate%concat%2#0"
      ]
    },
    "1905": {
      "op": "uncover 1",
      "stack_out": [
        "aggregate%concat%2#0",
        "aggregate%as_Encoded(uint64,(len+uint8[]),(len+utf8[]))%0#0"
      ]
    },
    "1907": {
      "op": "concat",
      "defined_out": [
        "encoded_for_storage%0#0"
      ],
      "stack_out": [
        "encoded_for_storage%0#0"
      ]
    },
    "1908": {
      "op": "bytec 6 // \"twm\"",
      "defined_out": [
        "\"twm\"",
        "encoded_for_storage%0#0"
      ],
      "stack_out": [
        "encoded_for_storage%0#0",
        "\"twm\""
      ]
    },
    "1910": {
      "op": "uncover 1",
      "stack_out": [
        "\"twm\"",
        "encoded_for_storage%0#0"
      ]
    },
    "1912": {
      "op": "app_global_put",
      "stack_out": []
    },
    "1913": {
      "retsub": true,
      "op": "retsub"
    },
    "1914": {
      "subroutine": "test_cases.tuple_support.nested_tuples.NestedTuples.store_tuple",
      "params": {
        "pwl.parent.foo#0": "uint64",
        "pwl.parent.foo_arc#0": "bytes",
        "pwl.parent.child.a#0": "uint64",
        "pwl.parent.child.b#0": "bytes",
        "pwl.parent.child.c#0": "bytes",
        "pwl.children#0": "bytes"
      },
      "block": "test_cases.tuple_support.nested_tuples.NestedTuples.store_tuple",
      "stack_in": [],
      "op": "proto 6 0"
    },
    "1917": {
      "op": "b test_cases.tuple_support.nested_tuples.NestedTuples.store_tuple_block@0"
    },
    "1920": {
      "block": "test_cases.tuple_support.nested_tuples.NestedTuples.store_tuple_block@0",
      "stack_in": [],
      "op": "frame_dig -6",
      "defined_out": [
        "pwl.parent.foo#0 (copy)"
      ],
      "stack_out": [
        "pwl.parent.foo#0 (copy)"
      ]
    },
    "1922": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(uint64)%0#0"
      ],
      "stack_out": [
        "aggregate%as_Encoded(uint64)%0#0"
      ]
    },
    "1923": {
      "op": "bytec_0 // 0x",
      "defined_out": [
        "0x",
        "aggregate%as_Encoded(uint64)%0#0"
      ],
      "stack_out": [
        "aggregate%as_Encoded(uint64)%0#0",
        "0x"
      ]
    },
    "1924": {
      "op": "uncover 1",
      "stack_out": [
        "0x",
        "aggregate%as_Encoded(uint64)%0#0"
      ]
    },
    "1926": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%0#0"
      ],
      "stack_out": [
        "aggregate%head%0#0"
      ]
    },
    "1927": {
      "op": "frame_dig -5",
      "defined_out": [
        "aggregate%head%0#0",
        "pwl.parent.foo_arc#0 (copy)"
      ],
      "stack_out": [
        "aggregate%head%0#0",
        "pwl.parent.foo_arc#0 (copy)"
      ]
    },
    "1929": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%1#0"
      ],
      "stack_out": [
        "aggregate%head%1#0"
      ]
    },
    "1930": {
      "op": "frame_dig -4",
      "defined_out": [
        "aggregate%head%1#0",
        "pwl.parent.child.a#0 (copy)"
      ],
      "stack_out": [
        "aggregate%head%1#0",
        "pwl.parent.child.a#0 (copy)"
      ]
    },
    "1932": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(uint64)%1#0",
        "aggregate%head%1#0"
      ],
      "stack_out": [
        "aggregate%head%1#0",
        "aggregate%as_Encoded(uint64)%1#0"
      ]
    },
    "1933": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "aggregate%head%1#0",
        "aggregate%as_Encoded(uint64)%1#0",
        "0x"
      ]
    },
    "1934": {
      "op": "uncover 1",
      "stack_out": [
        "aggregate%head%1#0",
        "0x",
        "aggregate%as_Encoded(uint64)%1#0"
      ]
    },
    "1936": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%1#0",
        "aggregate%head%2#0"
      ],
      "stack_out": [
        "aggregate%head%1#0",
        "aggregate%head%2#0"
      ]
    },
    "1937": {
      "op": "frame_dig -3",
      "defined_out": [
        "aggregate%head%1#0",
        "aggregate%head%2#0",
        "pwl.parent.child.b#0 (copy)"
      ],
      "stack_out": [
        "aggregate%head%1#0",
        "aggregate%head%2#0",
        "pwl.parent.child.b#0 (copy)"
      ]
    },
    "1939": {
      "op": "len",
      "defined_out": [
        "aggregate%head%1#0",
        "aggregate%head%2#0",
        "aggregate%length%0#0"
      ],
      "stack_out": [
        "aggregate%head%1#0",
        "aggregate%head%2#0",
        "aggregate%length%0#0"
      ]
    },
    "1940": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%0#0",
        "aggregate%head%1#0",
        "aggregate%head%2#0"
      ],
      "stack_out": [
        "aggregate%head%1#0",
        "aggregate%head%2#0",
        "aggregate%as_bytes%0#0"
      ]
    },
    "1941": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%head%1#0",
        "aggregate%head%2#0",
        "aggregate%length_uint16%0#0"
      ],
      "stack_out": [
        "aggregate%head%1#0",
        "aggregate%head%2#0",
        "aggregate%length_uint16%0#0"
      ]
    },
    "1944": {
      "op": "frame_dig -3",
      "stack_out": [
        "aggregate%head%1#0",
        "aggregate%head%2#0",
        "aggregate%length_uint16%0#0",
        "pwl.parent.child.b#0 (copy)"
      ]
    },
    "1946": {
      "op": "concat",
      "defined_out": [
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%head%1#0",
        "aggregate%head%2#0"
      ],
      "stack_out": [
        "aggregate%head%1#0",
        "aggregate%head%2#0",
        "aggregate%as_Encoded(len+uint8[])%0#0"
      ]
    },
    "1947": {
      "op": "pushint 12 // 12",
      "defined_out": [
        "12",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%head%1#0",
        "aggregate%head%2#0"
      ],
      "stack_out": [
        "aggregate%head%1#0",
        "aggregate%head%2#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "12"
      ]
    },
    "1949": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%as_bytes%1#0",
        "aggregate%head%1#0",
        "aggregate%head%2#0"
      ],
      "stack_out": [
        "aggregate%head%1#0",
        "aggregate%head%2#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%as_bytes%1#0"
      ]
    },
    "1950": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%head%1#0",
        "aggregate%head%2#0",
        "aggregate%offset_as_uint16%0#0"
      ],
      "stack_out": [
        "aggregate%head%1#0",
        "aggregate%head%2#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%offset_as_uint16%0#0"
      ]
    },
    "1953": {
      "op": "uncover 2",
      "stack_out": [
        "aggregate%head%1#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%offset_as_uint16%0#0",
        "aggregate%head%2#0"
      ]
    },
    "1955": {
      "op": "uncover 1",
      "stack_out": [
        "aggregate%head%1#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%head%2#0",
        "aggregate%offset_as_uint16%0#0"
      ]
    },
    "1957": {
      "op": "concat",
      "defined_out": [
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%head%1#0",
        "aggregate%head%3#0"
      ],
      "stack_out": [
        "aggregate%head%1#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%head%3#0"
      ]
    },
    "1958": {
      "op": "cover 1",
      "stack_out": [
        "aggregate%head%1#0",
        "aggregate%head%3#0",
        "aggregate%as_Encoded(len+uint8[])%0#0"
      ]
    },
    "1960": {
      "op": "dup",
      "defined_out": [
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%as_Encoded(len+uint8[])%0#0 (copy)",
        "aggregate%head%1#0",
        "aggregate%head%3#0"
      ],
      "stack_out": [
        "aggregate%head%1#0",
        "aggregate%head%3#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%as_Encoded(len+uint8[])%0#0 (copy)"
      ]
    },
    "1961": {
      "op": "len",
      "defined_out": [
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%data_length%0#0",
        "aggregate%head%1#0",
        "aggregate%head%3#0"
      ],
      "stack_out": [
        "aggregate%head%1#0",
        "aggregate%head%3#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%data_length%0#0"
      ]
    },
    "1962": {
      "op": "pushint 12 // 12",
      "stack_out": [
        "aggregate%head%1#0",
        "aggregate%head%3#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%data_length%0#0",
        "12"
      ]
    },
    "1964": {
      "op": "+",
      "defined_out": [
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%head%1#0",
        "aggregate%head%3#0"
      ],
      "stack_out": [
        "aggregate%head%1#0",
        "aggregate%head%3#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%current_tail_offset%0#0"
      ]
    },
    "1965": {
      "op": "frame_dig -2",
      "defined_out": [
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%head%1#0",
        "aggregate%head%3#0",
        "pwl.parent.child.c#0 (copy)"
      ],
      "stack_out": [
        "aggregate%head%1#0",
        "aggregate%head%3#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%current_tail_offset%0#0",
        "pwl.parent.child.c#0 (copy)"
      ]
    },
    "1967": {
      "op": "len",
      "defined_out": [
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%head%1#0",
        "aggregate%head%3#0",
        "aggregate%length%1#0"
      ],
      "stack_out": [
        "aggregate%head%1#0",
        "aggregate%head%3#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%length%1#0"
      ]
    },
    "1968": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%as_bytes%2#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%head%1#0",
        "aggregate%head%3#0"
      ],
      "stack_out": [
        "aggregate%head%1#0",
        "aggregate%head%3#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%as_bytes%2#0"
      ]
    },
    "1969": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%head%1#0",
        "aggregate%head%3#0",
        "aggregate%length_uint16%1#0"
      ],
      "stack_out": [
        "aggregate%head%1#0",
        "aggregate%head%3#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%length_uint16%1#0"
      ]
    },
    "1972": {
      "op": "frame_dig -2",
      "stack_out": [
        "aggregate%head%1#0",
        "aggregate%head%3#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%length_uint16%1#0",
        "pwl.parent.child.c#0 (copy)"
      ]
    },
    "1974": {
      "op": "concat",
      "defined_out": [
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%encoded_value%1#0",
        "aggregate%head%1#0",
        "aggregate%head%3#0"
      ],
      "stack_out": [
        "aggregate%head%1#0",
        "aggregate%head%3#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%encoded_value%1#0"
      ]
    },
    "1975": {
      "op": "cover 1",
      "defined_out": [
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%as_Encoded(len+utf8[])%0#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%head%1#0",
        "aggregate%head%3#0"
      ],
      "stack_out": [
        "aggregate%head%1#0",
        "aggregate%head%3#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%as_Encoded(len+utf8[])%0#0",
        "aggregate%current_tail_offset%0#0"
      ]
    },
    "1977": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%as_Encoded(len+utf8[])%0#0",
        "aggregate%as_bytes%3#0",
        "aggregate%head%1#0",
        "aggregate%head%3#0"
      ],
      "stack_out": [
        "aggregate%head%1#0",
        "aggregate%head%3#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%as_Encoded(len+utf8[])%0#0",
        "aggregate%as_bytes%3#0"
      ]
    },
    "1978": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%as_Encoded(len+utf8[])%0#0",
        "aggregate%head%1#0",
        "aggregate%head%3#0",
        "aggregate%offset_as_uint16%1#0"
      ],
      "stack_out": [
        "aggregate%head%1#0",
        "aggregate%head%3#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%as_Encoded(len+utf8[])%0#0",
        "aggregate%offset_as_uint16%1#0"
      ]
    },
    "1981": {
      "op": "uncover 3",
      "stack_out": [
        "aggregate%head%1#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%as_Encoded(len+utf8[])%0#0",
        "aggregate%offset_as_uint16%1#0",
        "aggregate%head%3#0"
      ]
    },
    "1983": {
      "op": "uncover 1",
      "stack_out": [
        "aggregate%head%1#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%as_Encoded(len+utf8[])%0#0",
        "aggregate%head%3#0",
        "aggregate%offset_as_uint16%1#0"
      ]
    },
    "1985": {
      "op": "concat",
      "defined_out": [
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%as_Encoded(len+utf8[])%0#0",
        "aggregate%head%1#0",
        "aggregate%head%4#0"
      ],
      "stack_out": [
        "aggregate%head%1#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%as_Encoded(len+utf8[])%0#0",
        "aggregate%head%4#0"
      ]
    },
    "1986": {
      "op": "uncover 2",
      "stack_out": [
        "aggregate%head%1#0",
        "aggregate%as_Encoded(len+utf8[])%0#0",
        "aggregate%head%4#0",
        "aggregate%as_Encoded(len+uint8[])%0#0"
      ]
    },
    "1988": {
      "op": "concat",
      "defined_out": [
        "aggregate%as_Encoded(len+utf8[])%0#0",
        "aggregate%concat%0#0",
        "aggregate%head%1#0"
      ],
      "stack_out": [
        "aggregate%head%1#0",
        "aggregate%as_Encoded(len+utf8[])%0#0",
        "aggregate%concat%0#0"
      ]
    },
    "1989": {
      "op": "uncover 1",
      "stack_out": [
        "aggregate%head%1#0",
        "aggregate%concat%0#0",
        "aggregate%as_Encoded(len+utf8[])%0#0"
      ]
    },
    "1991": {
      "op": "concat",
      "defined_out": [
        "aggregate%as_Encoded(uint64,(len+uint8[]),(len+utf8[]))%0#0",
        "aggregate%head%1#0"
      ],
      "stack_out": [
        "aggregate%head%1#0",
        "aggregate%as_Encoded(uint64,(len+uint8[]),(len+utf8[]))%0#0"
      ]
    },
    "1992": {
      "op": "pushint 18 // 18",
      "defined_out": [
        "18",
        "aggregate%as_Encoded(uint64,(len+uint8[]),(len+utf8[]))%0#0",
        "aggregate%head%1#0"
      ],
      "stack_out": [
        "aggregate%head%1#0",
        "aggregate%as_Encoded(uint64,(len+uint8[]),(len+utf8[]))%0#0",
        "18"
      ]
    },
    "1994": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(uint64,(len+uint8[]),(len+utf8[]))%0#0",
        "aggregate%as_bytes%4#0",
        "aggregate%head%1#0"
      ],
      "stack_out": [
        "aggregate%head%1#0",
        "aggregate%as_Encoded(uint64,(len+uint8[]),(len+utf8[]))%0#0",
        "aggregate%as_bytes%4#0"
      ]
    },
    "1995": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%as_Encoded(uint64,(len+uint8[]),(len+utf8[]))%0#0",
        "aggregate%head%1#0",
        "aggregate%offset_as_uint16%2#0"
      ],
      "stack_out": [
        "aggregate%head%1#0",
        "aggregate%as_Encoded(uint64,(len+uint8[]),(len+utf8[]))%0#0",
        "aggregate%offset_as_uint16%2#0"
      ]
    },
    "1998": {
      "op": "uncover 2",
      "stack_out": [
        "aggregate%as_Encoded(uint64,(len+uint8[]),(len+utf8[]))%0#0",
        "aggregate%offset_as_uint16%2#0",
        "aggregate%head%1#0"
      ]
    },
    "2000": {
      "op": "uncover 1",
      "stack_out": [
        "aggregate%as_Encoded(uint64,(len+uint8[]),(len+utf8[]))%0#0",
        "aggregate%head%1#0",
        "aggregate%offset_as_uint16%2#0"
      ]
    },
    "2002": {
      "op": "concat",
      "defined_out": [
        "aggregate%as_Encoded(uint64,(len+uint8[]),(len+utf8[]))%0#0",
        "aggregate%head%5#0"
      ],
      "stack_out": [
        "aggregate%as_Encoded(uint64,(len+uint8[]),(len+utf8[]))%0#0",
        "aggregate%head%5#0"
      ]
    },
    "2003": {
      "op": "uncover 1",
      "stack_out": [
        "aggregate%head%5#0",
        "aggregate%as_Encoded(uint64,(len+uint8[]),(len+utf8[]))%0#0"
      ]
    },
    "2005": {
      "op": "concat",
      "defined_out": [
        "aggregate%as_Encoded(uint64,uint64,(uint64,(len+uint8[]),(len+utf8[])))%0#0"
      ],
      "stack_out": [
        "aggregate%as_Encoded(uint64,uint64,(uint64,(len+uint8[]),(len+utf8[])))%0#0"
      ]
    },
    "2006": {
      "op": "pushint 4 // 4",
      "defined_out": [
        "4",
        "aggregate%as_Encoded(uint64,uint64,(uint64,(len+uint8[]),(len+utf8[])))%0#0"
      ],
      "stack_out": [
        "aggregate%as_Encoded(uint64,uint64,(uint64,(len+uint8[]),(len+utf8[])))%0#0",
        "4"
      ]
    },
    "2008": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(uint64,uint64,(uint64,(len+uint8[]),(len+utf8[])))%0#0",
        "aggregate%as_bytes%5#0"
      ],
      "stack_out": [
        "aggregate%as_Encoded(uint64,uint64,(uint64,(len+uint8[]),(len+utf8[])))%0#0",
        "aggregate%as_bytes%5#0"
      ]
    },
    "2009": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%as_Encoded(uint64,uint64,(uint64,(len+uint8[]),(len+utf8[])))%0#0",
        "aggregate%offset_as_uint16%3#0"
      ],
      "stack_out": [
        "aggregate%as_Encoded(uint64,uint64,(uint64,(len+uint8[]),(len+utf8[])))%0#0",
        "aggregate%offset_as_uint16%3#0"
      ]
    },
    "2012": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "aggregate%as_Encoded(uint64,uint64,(uint64,(len+uint8[]),(len+utf8[])))%0#0",
        "aggregate%offset_as_uint16%3#0",
        "0x"
      ]
    },
    "2013": {
      "op": "uncover 1",
      "stack_out": [
        "aggregate%as_Encoded(uint64,uint64,(uint64,(len+uint8[]),(len+utf8[])))%0#0",
        "0x",
        "aggregate%offset_as_uint16%3#0"
      ]
    },
    "2015": {
      "op": "concat",
      "defined_out": [
        "aggregate%as_Encoded(uint64,uint64,(uint64,(len+uint8[]),(len+utf8[])))%0#0",
        "aggregate%head%6#0"
      ],
      "stack_out": [
        "aggregate%as_Encoded(uint64,uint64,(uint64,(len+uint8[]),(len+utf8[])))%0#0",
        "aggregate%head%6#0"
      ]
    },
    "2016": {
      "op": "cover 1",
      "stack_out": [
        "aggregate%head%6#0",
        "aggregate%as_Encoded(uint64,uint64,(uint64,(len+uint8[]),(len+utf8[])))%0#0"
      ]
    },
    "2018": {
      "op": "dup",
      "defined_out": [
        "aggregate%as_Encoded(uint64,uint64,(uint64,(len+uint8[]),(len+utf8[])))%0#0",
        "aggregate%as_Encoded(uint64,uint64,(uint64,(len+uint8[]),(len+utf8[])))%0#0 (copy)",
        "aggregate%head%6#0"
      ],
      "stack_out": [
        "aggregate%head%6#0",
        "aggregate%as_Encoded(uint64,uint64,(uint64,(len+uint8[]),(len+utf8[])))%0#0",
        "aggregate%as_Encoded(uint64,uint64,(uint64,(len+uint8[]),(len+utf8[])))%0#0 (copy)"
      ]
    },
    "2019": {
      "op": "len",
      "defined_out": [
        "aggregate%as_Encoded(uint64,uint64,(uint64,(len+uint8[]),(len+utf8[])))%0#0",
        "aggregate%data_length%3#0",
        "aggregate%head%6#0"
      ],
      "stack_out": [
        "aggregate%head%6#0",
        "aggregate%as_Encoded(uint64,uint64,(uint64,(len+uint8[]),(len+utf8[])))%0#0",
        "aggregate%data_length%3#0"
      ]
    },
    "2020": {
      "op": "pushint 4 // 4",
      "stack_out": [
        "aggregate%head%6#0",
        "aggregate%as_Encoded(uint64,uint64,(uint64,(len+uint8[]),(len+utf8[])))%0#0",
        "aggregate%data_length%3#0",
        "4"
      ]
    },
    "2022": {
      "op": "+",
      "defined_out": [
        "aggregate%as_Encoded(uint64,uint64,(uint64,(len+uint8[]),(len+utf8[])))%0#0",
        "aggregate%current_tail_offset%3#0",
        "aggregate%head%6#0"
      ],
      "stack_out": [
        "aggregate%head%6#0",
        "aggregate%as_Encoded(uint64,uint64,(uint64,(len+uint8[]),(len+utf8[])))%0#0",
        "aggregate%current_tail_offset%3#0"
      ]
    },
    "2023": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(uint64,uint64,(uint64,(len+uint8[]),(len+utf8[])))%0#0",
        "aggregate%as_bytes%6#0",
        "aggregate%head%6#0"
      ],
      "stack_out": [
        "aggregate%head%6#0",
        "aggregate%as_Encoded(uint64,uint64,(uint64,(len+uint8[]),(len+utf8[])))%0#0",
        "aggregate%as_bytes%6#0"
      ]
    },
    "2024": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%as_Encoded(uint64,uint64,(uint64,(len+uint8[]),(len+utf8[])))%0#0",
        "aggregate%head%6#0",
        "aggregate%offset_as_uint16%4#0"
      ],
      "stack_out": [
        "aggregate%head%6#0",
        "aggregate%as_Encoded(uint64,uint64,(uint64,(len+uint8[]),(len+utf8[])))%0#0",
        "aggregate%offset_as_uint16%4#0"
      ]
    },
    "2027": {
      "op": "uncover 2",
      "stack_out": [
        "aggregate%as_Encoded(uint64,uint64,(uint64,(len+uint8[]),(len+utf8[])))%0#0",
        "aggregate%offset_as_uint16%4#0",
        "aggregate%head%6#0"
      ]
    },
    "2029": {
      "op": "uncover 1",
      "stack_out": [
        "aggregate%as_Encoded(uint64,uint64,(uint64,(len+uint8[]),(len+utf8[])))%0#0",
        "aggregate%head%6#0",
        "aggregate%offset_as_uint16%4#0"
      ]
    },
    "2031": {
      "op": "concat",
      "defined_out": [
        "aggregate%as_Encoded(uint64,uint64,(uint64,(len+uint8[]),(len+utf8[])))%0#0",
        "aggregate%head%7#0"
      ],
      "stack_out": [
        "aggregate%as_Encoded(uint64,uint64,(uint64,(len+uint8[]),(len+utf8[])))%0#0",
        "aggregate%head%7#0"
      ]
    },
    "2032": {
      "op": "uncover 1",
      "stack_out": [
        "aggregate%head%7#0",
        "aggregate%as_Encoded(uint64,uint64,(uint64,(len+uint8[]),(len+utf8[])))%0#0"
      ]
    },
    "2034": {
      "op": "concat",
      "defined_out": [
        "aggregate%concat%3#0"
      ],
      "stack_out": [
        "aggregate%concat%3#0"
      ]
    },
    "2035": {
      "op": "frame_dig -1",
      "defined_out": [
        "aggregate%concat%3#0",
        "pwl.children#0 (copy)"
      ],
      "stack_out": [
        "aggregate%concat%3#0",
        "pwl.children#0 (copy)"
      ]
    },
    "2037": {
      "op": "concat",
      "defined_out": [
        "encoded_for_storage%0#0"
      ],
      "stack_out": [
        "encoded_for_storage%0#0"
      ]
    },
    "2038": {
      "op": "bytec 10 // \"pwl\"",
      "defined_out": [
        "\"pwl\"",
        "encoded_for_storage%0#0"
      ],
      "stack_out": [
        "encoded_for_storage%0#0",
        "\"pwl\""
      ]
    },
    "2040": {
      "op": "uncover 1",
      "stack_out": [
        "\"pwl\"",
        "encoded_for_storage%0#0"
      ]
    },
    "2042": {
      "op": "app_global_put",
      "stack_out": []
    },
    "2043": {
      "retsub": true,
      "op": "retsub"
    },
    "2044": {
      "subroutine": "test_cases.tuple_support.nested_tuples.NestedTuples.load_tuple",
      "params": {},
      "block": "test_cases.tuple_support.nested_tuples.NestedTuples.load_tuple",
      "stack_in": [],
      "op": "b test_cases.tuple_support.nested_tuples.NestedTuples.load_tuple_block@0"
    },
    "2047": {
      "block": "test_cases.tuple_support.nested_tuples.NestedTuples.load_tuple_block@0",
      "stack_in": [],
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "2048": {
      "op": "bytec 10 // \"pwl\"",
      "defined_out": [
        "\"pwl\"",
        "0"
      ],
      "stack_out": [
        "0",
        "\"pwl\""
      ]
    },
    "2050": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "2051": {
      "error": "check self.pwl exists",
      "op": "assert // check self.pwl exists",
      "stack_out": [
        "maybe_value%0#0"
      ]
    },
    "2052": {
      "op": "dup",
      "defined_out": [
        "maybe_value%0#0",
        "maybe_value%0#0 (copy)"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%0#0 (copy)"
      ]
    },
    "2053": {
      "op": "intc_0 // 0",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%0#0 (copy)",
        "0"
      ]
    },
    "2054": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%extract_uint16%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "aggregate%extract_uint16%0#0"
      ]
    },
    "2055": {
      "op": "cover 1",
      "stack_out": [
        "aggregate%extract_uint16%0#0",
        "maybe_value%0#0"
      ]
    },
    "2057": {
      "op": "dup",
      "stack_out": [
        "aggregate%extract_uint16%0#0",
        "maybe_value%0#0",
        "maybe_value%0#0 (copy)"
      ]
    },
    "2058": {
      "op": "intc_3 // 2",
      "defined_out": [
        "2",
        "aggregate%extract_uint16%0#0",
        "maybe_value%0#0",
        "maybe_value%0#0 (copy)"
      ],
      "stack_out": [
        "aggregate%extract_uint16%0#0",
        "maybe_value%0#0",
        "maybe_value%0#0 (copy)",
        "2"
      ]
    },
    "2059": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%extract_uint16%0#0",
        "aggregate%extract_uint16%1#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "aggregate%extract_uint16%0#0",
        "maybe_value%0#0",
        "aggregate%extract_uint16%1#0"
      ]
    },
    "2060": {
      "op": "dig 1",
      "stack_out": [
        "aggregate%extract_uint16%0#0",
        "maybe_value%0#0",
        "aggregate%extract_uint16%1#0",
        "maybe_value%0#0 (copy)"
      ]
    },
    "2062": {
      "op": "uncover 3",
      "stack_out": [
        "maybe_value%0#0",
        "aggregate%extract_uint16%1#0",
        "maybe_value%0#0 (copy)",
        "aggregate%extract_uint16%0#0"
      ]
    },
    "2064": {
      "op": "uncover 2",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%0#0 (copy)",
        "aggregate%extract_uint16%0#0",
        "aggregate%extract_uint16%1#0"
      ]
    },
    "2066": {
      "op": "substring3",
      "defined_out": [
        "aggregate%substring3%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "aggregate%substring3%0#0"
      ]
    },
    "2067": {
      "op": "dup",
      "defined_out": [
        "aggregate%substring3%0#0",
        "aggregate%substring3%0#0 (copy)",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "aggregate%substring3%0#0",
        "aggregate%substring3%0#0 (copy)"
      ]
    },
    "2068": {
      "op": "intc_0 // 0",
      "stack_out": [
        "maybe_value%0#0",
        "aggregate%substring3%0#0",
        "aggregate%substring3%0#0 (copy)",
        "0"
      ]
    },
    "2069": {
      "op": "intc_1 // 8",
      "defined_out": [
        "0",
        "8",
        "aggregate%substring3%0#0",
        "aggregate%substring3%0#0 (copy)",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "aggregate%substring3%0#0",
        "aggregate%substring3%0#0 (copy)",
        "0",
        "8"
      ]
    },
    "2070": {
      "op": "extract3",
      "defined_out": [
        "aggregate%extract%0#0",
        "aggregate%substring3%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "aggregate%substring3%0#0",
        "aggregate%extract%0#0"
      ]
    },
    "2071": {
      "op": "btoi",
      "defined_out": [
        "aggregate%item0%0#0",
        "aggregate%substring3%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "aggregate%substring3%0#0",
        "aggregate%item0%0#0"
      ]
    },
    "2072": {
      "op": "cover 2",
      "stack_out": [
        "aggregate%item0%0#0",
        "maybe_value%0#0",
        "aggregate%substring3%0#0"
      ]
    },
    "2074": {
      "op": "dup",
      "stack_out": [
        "aggregate%item0%0#0",
        "maybe_value%0#0",
        "aggregate%substring3%0#0",
        "aggregate%substring3%0#0 (copy)"
      ]
    },
    "2075": {
      "op": "intc_1 // 8",
      "stack_out": [
        "aggregate%item0%0#0",
        "maybe_value%0#0",
        "aggregate%substring3%0#0",
        "aggregate%substring3%0#0 (copy)",
        "8"
      ]
    },
    "2076": {
      "op": "intc_1 // 8",
      "stack_out": [
        "aggregate%item0%0#0",
        "maybe_value%0#0",
        "aggregate%substring3%0#0",
        "aggregate%substring3%0#0 (copy)",
        "8",
        "8"
      ]
    },
    "2077": {
      "op": "extract3",
      "defined_out": [
        "aggregate%extract%1#0",
        "aggregate%item0%0#0",
        "aggregate%substring3%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "aggregate%item0%0#0",
        "maybe_value%0#0",
        "aggregate%substring3%0#0",
        "aggregate%extract%1#0"
      ]
    },
    "2078": {
      "op": "cover 1",
      "stack_out": [
        "aggregate%item0%0#0",
        "maybe_value%0#0",
        "aggregate%extract%1#0",
        "aggregate%substring3%0#0"
      ]
    },
    "2080": {
      "op": "dup",
      "stack_out": [
        "aggregate%item0%0#0",
        "maybe_value%0#0",
        "aggregate%extract%1#0",
        "aggregate%substring3%0#0",
        "aggregate%substring3%0#0 (copy)"
      ]
    },
    "2081": {
      "op": "pushint 16 // 16",
      "defined_out": [
        "16",
        "aggregate%extract%1#0",
        "aggregate%item0%0#0",
        "aggregate%substring3%0#0",
        "aggregate%substring3%0#0 (copy)",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "aggregate%item0%0#0",
        "maybe_value%0#0",
        "aggregate%extract%1#0",
        "aggregate%substring3%0#0",
        "aggregate%substring3%0#0 (copy)",
        "16"
      ]
    },
    "2083": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%extract%1#0",
        "aggregate%extract_uint16%2#0",
        "aggregate%item0%0#0",
        "aggregate%substring3%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "aggregate%item0%0#0",
        "maybe_value%0#0",
        "aggregate%extract%1#0",
        "aggregate%substring3%0#0",
        "aggregate%extract_uint16%2#0"
      ]
    },
    "2084": {
      "op": "cover 1",
      "stack_out": [
        "aggregate%item0%0#0",
        "maybe_value%0#0",
        "aggregate%extract%1#0",
        "aggregate%extract_uint16%2#0",
        "aggregate%substring3%0#0"
      ]
    },
    "2086": {
      "op": "dup",
      "stack_out": [
        "aggregate%item0%0#0",
        "maybe_value%0#0",
        "aggregate%extract%1#0",
        "aggregate%extract_uint16%2#0",
        "aggregate%substring3%0#0",
        "aggregate%substring3%0#0 (copy)"
      ]
    },
    "2087": {
      "op": "len",
      "defined_out": [
        "aggregate%extract%1#0",
        "aggregate%extract_uint16%2#0",
        "aggregate%item0%0#0",
        "aggregate%len%0#0",
        "aggregate%substring3%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "aggregate%item0%0#0",
        "maybe_value%0#0",
        "aggregate%extract%1#0",
        "aggregate%extract_uint16%2#0",
        "aggregate%substring3%0#0",
        "aggregate%len%0#0"
      ]
    },
    "2088": {
      "op": "cover 1",
      "stack_out": [
        "aggregate%item0%0#0",
        "maybe_value%0#0",
        "aggregate%extract%1#0",
        "aggregate%extract_uint16%2#0",
        "aggregate%len%0#0",
        "aggregate%substring3%0#0"
      ]
    },
    "2090": {
      "op": "uncover 2",
      "stack_out": [
        "aggregate%item0%0#0",
        "maybe_value%0#0",
        "aggregate%extract%1#0",
        "aggregate%len%0#0",
        "aggregate%substring3%0#0",
        "aggregate%extract_uint16%2#0"
      ]
    },
    "2092": {
      "op": "uncover 2",
      "stack_out": [
        "aggregate%item0%0#0",
        "maybe_value%0#0",
        "aggregate%extract%1#0",
        "aggregate%substring3%0#0",
        "aggregate%extract_uint16%2#0",
        "aggregate%len%0#0"
      ]
    },
    "2094": {
      "op": "substring3",
      "defined_out": [
        "aggregate%extract%1#0",
        "aggregate%item0%0#0",
        "aggregate%substring3%1#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "aggregate%item0%0#0",
        "maybe_value%0#0",
        "aggregate%extract%1#0",
        "aggregate%substring3%1#0"
      ]
    },
    "2095": {
      "op": "dup",
      "defined_out": [
        "aggregate%extract%1#0",
        "aggregate%item0%0#0",
        "aggregate%substring3%1#0",
        "aggregate%substring3%1#0 (copy)",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "aggregate%item0%0#0",
        "maybe_value%0#0",
        "aggregate%extract%1#0",
        "aggregate%substring3%1#0",
        "aggregate%substring3%1#0 (copy)"
      ]
    },
    "2096": {
      "op": "intc_0 // 0",
      "stack_out": [
        "aggregate%item0%0#0",
        "maybe_value%0#0",
        "aggregate%extract%1#0",
        "aggregate%substring3%1#0",
        "aggregate%substring3%1#0 (copy)",
        "0"
      ]
    },
    "2097": {
      "op": "intc_1 // 8",
      "stack_out": [
        "aggregate%item0%0#0",
        "maybe_value%0#0",
        "aggregate%extract%1#0",
        "aggregate%substring3%1#0",
        "aggregate%substring3%1#0 (copy)",
        "0",
        "8"
      ]
    },
    "2098": {
      "op": "extract3",
      "defined_out": [
        "aggregate%extract%1#0",
        "aggregate%extract%2#0",
        "aggregate%item0%0#0",
        "aggregate%substring3%1#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "aggregate%item0%0#0",
        "maybe_value%0#0",
        "aggregate%extract%1#0",
        "aggregate%substring3%1#0",
        "aggregate%extract%2#0"
      ]
    },
    "2099": {
      "op": "btoi",
      "defined_out": [
        "aggregate%extract%1#0",
        "aggregate%item0%0#0",
        "aggregate%item0%1#0",
        "aggregate%substring3%1#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "aggregate%item0%0#0",
        "maybe_value%0#0",
        "aggregate%extract%1#0",
        "aggregate%substring3%1#0",
        "aggregate%item0%1#0"
      ]
    },
    "2100": {
      "op": "cover 1",
      "stack_out": [
        "aggregate%item0%0#0",
        "maybe_value%0#0",
        "aggregate%extract%1#0",
        "aggregate%item0%1#0",
        "aggregate%substring3%1#0"
      ]
    },
    "2102": {
      "op": "dup",
      "stack_out": [
        "aggregate%item0%0#0",
        "maybe_value%0#0",
        "aggregate%extract%1#0",
        "aggregate%item0%1#0",
        "aggregate%substring3%1#0",
        "aggregate%substring3%1#0 (copy)"
      ]
    },
    "2103": {
      "op": "intc_1 // 8",
      "stack_out": [
        "aggregate%item0%0#0",
        "maybe_value%0#0",
        "aggregate%extract%1#0",
        "aggregate%item0%1#0",
        "aggregate%substring3%1#0",
        "aggregate%substring3%1#0 (copy)",
        "8"
      ]
    },
    "2104": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%extract%1#0",
        "aggregate%extract_uint16%3#0",
        "aggregate%item0%0#0",
        "aggregate%item0%1#0",
        "aggregate%substring3%1#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "aggregate%item0%0#0",
        "maybe_value%0#0",
        "aggregate%extract%1#0",
        "aggregate%item0%1#0",
        "aggregate%substring3%1#0",
        "aggregate%extract_uint16%3#0"
      ]
    },
    "2105": {
      "op": "cover 1",
      "stack_out": [
        "aggregate%item0%0#0",
        "maybe_value%0#0",
        "aggregate%extract%1#0",
        "aggregate%item0%1#0",
        "aggregate%extract_uint16%3#0",
        "aggregate%substring3%1#0"
      ]
    },
    "2107": {
      "op": "dup",
      "stack_out": [
        "aggregate%item0%0#0",
        "maybe_value%0#0",
        "aggregate%extract%1#0",
        "aggregate%item0%1#0",
        "aggregate%extract_uint16%3#0",
        "aggregate%substring3%1#0",
        "aggregate%substring3%1#0 (copy)"
      ]
    },
    "2108": {
      "op": "pushint 10 // 10",
      "defined_out": [
        "10",
        "aggregate%extract%1#0",
        "aggregate%extract_uint16%3#0",
        "aggregate%item0%0#0",
        "aggregate%item0%1#0",
        "aggregate%substring3%1#0",
        "aggregate%substring3%1#0 (copy)",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "aggregate%item0%0#0",
        "maybe_value%0#0",
        "aggregate%extract%1#0",
        "aggregate%item0%1#0",
        "aggregate%extract_uint16%3#0",
        "aggregate%substring3%1#0",
        "aggregate%substring3%1#0 (copy)",
        "10"
      ]
    },
    "2110": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%extract%1#0",
        "aggregate%extract_uint16%3#0",
        "aggregate%extract_uint16%4#0",
        "aggregate%item0%0#0",
        "aggregate%item0%1#0",
        "aggregate%substring3%1#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "aggregate%item0%0#0",
        "maybe_value%0#0",
        "aggregate%extract%1#0",
        "aggregate%item0%1#0",
        "aggregate%extract_uint16%3#0",
        "aggregate%substring3%1#0",
        "aggregate%extract_uint16%4#0"
      ]
    },
    "2111": {
      "op": "dig 1",
      "stack_out": [
        "aggregate%item0%0#0",
        "maybe_value%0#0",
        "aggregate%extract%1#0",
        "aggregate%item0%1#0",
        "aggregate%extract_uint16%3#0",
        "aggregate%substring3%1#0",
        "aggregate%extract_uint16%4#0",
        "aggregate%substring3%1#0 (copy)"
      ]
    },
    "2113": {
      "op": "uncover 3",
      "stack_out": [
        "aggregate%item0%0#0",
        "maybe_value%0#0",
        "aggregate%extract%1#0",
        "aggregate%item0%1#0",
        "aggregate%substring3%1#0",
        "aggregate%extract_uint16%4#0",
        "aggregate%substring3%1#0 (copy)",
        "aggregate%extract_uint16%3#0"
      ]
    },
    "2115": {
      "op": "uncover 2",
      "stack_out": [
        "aggregate%item0%0#0",
        "maybe_value%0#0",
        "aggregate%extract%1#0",
        "aggregate%item0%1#0",
        "aggregate%substring3%1#0",
        "aggregate%substring3%1#0 (copy)",
        "aggregate%extract_uint16%3#0",
        "aggregate%extract_uint16%4#0"
      ]
    },
    "2117": {
      "op": "substring3",
      "defined_out": [
        "aggregate%extract%1#0",
        "aggregate%item0%0#0",
        "aggregate%item0%1#0",
        "aggregate%substring3%1#0",
        "aggregate%substring3%2#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "aggregate%item0%0#0",
        "maybe_value%0#0",
        "aggregate%extract%1#0",
        "aggregate%item0%1#0",
        "aggregate%substring3%1#0",
        "aggregate%substring3%2#0"
      ]
    },
    "2118": {
      "op": "extract 2 0",
      "defined_out": [
        "aggregate%extract%1#0",
        "aggregate%item0%0#0",
        "aggregate%item0%1#0",
        "aggregate%item1%0#0",
        "aggregate%substring3%1#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "aggregate%item0%0#0",
        "maybe_value%0#0",
        "aggregate%extract%1#0",
        "aggregate%item0%1#0",
        "aggregate%substring3%1#0",
        "aggregate%item1%0#0"
      ]
    },
    "2121": {
      "op": "cover 1",
      "stack_out": [
        "aggregate%item0%0#0",
        "maybe_value%0#0",
        "aggregate%extract%1#0",
        "aggregate%item0%1#0",
        "aggregate%item1%0#0",
        "aggregate%substring3%1#0"
      ]
    },
    "2123": {
      "op": "dup",
      "stack_out": [
        "aggregate%item0%0#0",
        "maybe_value%0#0",
        "aggregate%extract%1#0",
        "aggregate%item0%1#0",
        "aggregate%item1%0#0",
        "aggregate%substring3%1#0",
        "aggregate%substring3%1#0 (copy)"
      ]
    },
    "2124": {
      "op": "pushint 10 // 10",
      "stack_out": [
        "aggregate%item0%0#0",
        "maybe_value%0#0",
        "aggregate%extract%1#0",
        "aggregate%item0%1#0",
        "aggregate%item1%0#0",
        "aggregate%substring3%1#0",
        "aggregate%substring3%1#0 (copy)",
        "10"
      ]
    },
    "2126": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%extract%1#0",
        "aggregate%extract_uint16%5#0",
        "aggregate%item0%0#0",
        "aggregate%item0%1#0",
        "aggregate%item1%0#0",
        "aggregate%substring3%1#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "aggregate%item0%0#0",
        "maybe_value%0#0",
        "aggregate%extract%1#0",
        "aggregate%item0%1#0",
        "aggregate%item1%0#0",
        "aggregate%substring3%1#0",
        "aggregate%extract_uint16%5#0"
      ]
    },
    "2127": {
      "op": "cover 1",
      "stack_out": [
        "aggregate%item0%0#0",
        "maybe_value%0#0",
        "aggregate%extract%1#0",
        "aggregate%item0%1#0",
        "aggregate%item1%0#0",
        "aggregate%extract_uint16%5#0",
        "aggregate%substring3%1#0"
      ]
    },
    "2129": {
      "op": "dup",
      "stack_out": [
        "aggregate%item0%0#0",
        "maybe_value%0#0",
        "aggregate%extract%1#0",
        "aggregate%item0%1#0",
        "aggregate%item1%0#0",
        "aggregate%extract_uint16%5#0",
        "aggregate%substring3%1#0",
        "aggregate%substring3%1#0 (copy)"
      ]
    },
    "2130": {
      "op": "len",
      "defined_out": [
        "aggregate%extract%1#0",
        "aggregate%extract_uint16%5#0",
        "aggregate%item0%0#0",
        "aggregate%item0%1#0",
        "aggregate%item1%0#0",
        "aggregate%len%1#0",
        "aggregate%substring3%1#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "aggregate%item0%0#0",
        "maybe_value%0#0",
        "aggregate%extract%1#0",
        "aggregate%item0%1#0",
        "aggregate%item1%0#0",
        "aggregate%extract_uint16%5#0",
        "aggregate%substring3%1#0",
        "aggregate%len%1#0"
      ]
    },
    "2131": {
      "op": "cover 1",
      "stack_out": [
        "aggregate%item0%0#0",
        "maybe_value%0#0",
        "aggregate%extract%1#0",
        "aggregate%item0%1#0",
        "aggregate%item1%0#0",
        "aggregate%extract_uint16%5#0",
        "aggregate%len%1#0",
        "aggregate%substring3%1#0"
      ]
    },
    "2133": {
      "op": "uncover 2",
      "stack_out": [
        "aggregate%item0%0#0",
        "maybe_value%0#0",
        "aggregate%extract%1#0",
        "aggregate%item0%1#0",
        "aggregate%item1%0#0",
        "aggregate%len%1#0",
        "aggregate%substring3%1#0",
        "aggregate%extract_uint16%5#0"
      ]
    },
    "2135": {
      "op": "uncover 2",
      "stack_out": [
        "aggregate%item0%0#0",
        "maybe_value%0#0",
        "aggregate%extract%1#0",
        "aggregate%item0%1#0",
        "aggregate%item1%0#0",
        "aggregate%substring3%1#0",
        "aggregate%extract_uint16%5#0",
        "aggregate%len%1#0"
      ]
    },
    "2137": {
      "op": "substring3",
      "defined_out": [
        "aggregate%extract%1#0",
        "aggregate%item0%0#0",
        "aggregate%item0%1#0",
        "aggregate%item1%0#0",
        "aggregate%substring3%3#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "aggregate%item0%0#0",
        "maybe_value%0#0",
        "aggregate%extract%1#0",
        "aggregate%item0%1#0",
        "aggregate%item1%0#0",
        "aggregate%substring3%3#0"
      ]
    },
    "2138": {
      "op": "extract 2 0",
      "defined_out": [
        "aggregate%extract%1#0",
        "aggregate%item0%0#0",
        "aggregate%item0%1#0",
        "aggregate%item1%0#0",
        "aggregate%item2%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "aggregate%item0%0#0",
        "maybe_value%0#0",
        "aggregate%extract%1#0",
        "aggregate%item0%1#0",
        "aggregate%item1%0#0",
        "aggregate%item2%0#0"
      ]
    },
    "2141": {
      "op": "dig 4",
      "stack_out": [
        "aggregate%item0%0#0",
        "maybe_value%0#0",
        "aggregate%extract%1#0",
        "aggregate%item0%1#0",
        "aggregate%item1%0#0",
        "aggregate%item2%0#0",
        "maybe_value%0#0 (copy)"
      ]
    },
    "2143": {
      "op": "intc_3 // 2",
      "stack_out": [
        "aggregate%item0%0#0",
        "maybe_value%0#0",
        "aggregate%extract%1#0",
        "aggregate%item0%1#0",
        "aggregate%item1%0#0",
        "aggregate%item2%0#0",
        "maybe_value%0#0 (copy)",
        "2"
      ]
    },
    "2144": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%extract%1#0",
        "aggregate%extract_uint16%6#0",
        "aggregate%item0%0#0",
        "aggregate%item0%1#0",
        "aggregate%item1%0#0",
        "aggregate%item2%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "aggregate%item0%0#0",
        "maybe_value%0#0",
        "aggregate%extract%1#0",
        "aggregate%item0%1#0",
        "aggregate%item1%0#0",
        "aggregate%item2%0#0",
        "aggregate%extract_uint16%6#0"
      ]
    },
    "2145": {
      "op": "cover 1",
      "stack_out": [
        "aggregate%item0%0#0",
        "maybe_value%0#0",
        "aggregate%extract%1#0",
        "aggregate%item0%1#0",
        "aggregate%item1%0#0",
        "aggregate%extract_uint16%6#0",
        "aggregate%item2%0#0"
      ]
    },
    "2147": {
      "op": "dig 5",
      "stack_out": [
        "aggregate%item0%0#0",
        "maybe_value%0#0",
        "aggregate%extract%1#0",
        "aggregate%item0%1#0",
        "aggregate%item1%0#0",
        "aggregate%extract_uint16%6#0",
        "aggregate%item2%0#0",
        "maybe_value%0#0 (copy)"
      ]
    },
    "2149": {
      "op": "len",
      "defined_out": [
        "aggregate%extract%1#0",
        "aggregate%extract_uint16%6#0",
        "aggregate%item0%0#0",
        "aggregate%item0%1#0",
        "aggregate%item1%0#0",
        "aggregate%item2%0#0",
        "aggregate%len%2#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "aggregate%item0%0#0",
        "maybe_value%0#0",
        "aggregate%extract%1#0",
        "aggregate%item0%1#0",
        "aggregate%item1%0#0",
        "aggregate%extract_uint16%6#0",
        "aggregate%item2%0#0",
        "aggregate%len%2#0"
      ]
    },
    "2150": {
      "op": "cover 1",
      "stack_out": [
        "aggregate%item0%0#0",
        "maybe_value%0#0",
        "aggregate%extract%1#0",
        "aggregate%item0%1#0",
        "aggregate%item1%0#0",
        "aggregate%extract_uint16%6#0",
        "aggregate%len%2#0",
        "aggregate%item2%0#0"
      ]
    },
    "2152": {
      "op": "uncover 6",
      "stack_out": [
        "aggregate%item0%0#0",
        "aggregate%extract%1#0",
        "aggregate%item0%1#0",
        "aggregate%item1%0#0",
        "aggregate%extract_uint16%6#0",
        "aggregate%len%2#0",
        "aggregate%item2%0#0",
        "maybe_value%0#0"
      ]
    },
    "2154": {
      "op": "uncover 3",
      "stack_out": [
        "aggregate%item0%0#0",
        "aggregate%extract%1#0",
        "aggregate%item0%1#0",
        "aggregate%item1%0#0",
        "aggregate%len%2#0",
        "aggregate%item2%0#0",
        "maybe_value%0#0",
        "aggregate%extract_uint16%6#0"
      ]
    },
    "2156": {
      "op": "uncover 3",
      "stack_out": [
        "aggregate%item0%0#0",
        "aggregate%extract%1#0",
        "aggregate%item0%1#0",
        "aggregate%item1%0#0",
        "aggregate%item2%0#0",
        "maybe_value%0#0",
        "aggregate%extract_uint16%6#0",
        "aggregate%len%2#0"
      ]
    },
    "2158": {
      "op": "substring3",
      "defined_out": [
        "aggregate%extract%1#0",
        "aggregate%item0%0#0",
        "aggregate%item0%1#0",
        "aggregate%item1%0#0",
        "aggregate%item2%0#0",
        "aggregate%substring3%4#0"
      ],
      "stack_out": [
        "aggregate%item0%0#0",
        "aggregate%extract%1#0",
        "aggregate%item0%1#0",
        "aggregate%item1%0#0",
        "aggregate%item2%0#0",
        "aggregate%substring3%4#0"
      ]
    },
    "2159": {
      "op": "uncover 5",
      "stack_out": [
        "aggregate%extract%1#0",
        "aggregate%item0%1#0",
        "aggregate%item1%0#0",
        "aggregate%item2%0#0",
        "aggregate%substring3%4#0",
        "aggregate%item0%0#0"
      ]
    },
    "2161": {
      "op": "cover 1",
      "defined_out": [
        "aggregate%extract%1#0",
        "aggregate%item0%1#0",
        "aggregate%item1%0#0",
        "aggregate%item2%0#0",
        "aggregate%substring3%4#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "aggregate%extract%1#0",
        "aggregate%item0%1#0",
        "aggregate%item1%0#0",
        "aggregate%item2%0#0",
        "tmp%0#0",
        "aggregate%substring3%4#0"
      ]
    },
    "2163": {
      "op": "uncover 5",
      "defined_out": [
        "aggregate%item0%1#0",
        "aggregate%item1%0#0",
        "aggregate%item2%0#0",
        "aggregate%substring3%4#0",
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "aggregate%item0%1#0",
        "aggregate%item1%0#0",
        "aggregate%item2%0#0",
        "tmp%0#0",
        "aggregate%substring3%4#0",
        "tmp%1#0"
      ]
    },
    "2165": {
      "op": "uncover 5",
      "defined_out": [
        "aggregate%item1%0#0",
        "aggregate%item2%0#0",
        "aggregate%substring3%4#0",
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "aggregate%item1%0#0",
        "aggregate%item2%0#0",
        "tmp%0#0",
        "aggregate%substring3%4#0",
        "tmp%1#0",
        "tmp%2#0"
      ]
    },
    "2167": {
      "op": "uncover 5",
      "defined_out": [
        "aggregate%item2%0#0",
        "aggregate%substring3%4#0",
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "aggregate%item2%0#0",
        "tmp%0#0",
        "aggregate%substring3%4#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0"
      ]
    },
    "2169": {
      "op": "uncover 5",
      "defined_out": [
        "aggregate%substring3%4#0",
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "aggregate%substring3%4#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0"
      ]
    },
    "2171": {
      "op": "uncover 4",
      "defined_out": [
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0"
      ]
    },
    "2173": {
      "op": "uncover 5",
      "stack_out": [
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%0#0"
      ]
    },
    "2175": {
      "op": "uncover 5",
      "stack_out": [
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%0#0",
        "tmp%1#0"
      ]
    },
    "2177": {
      "op": "uncover 5",
      "stack_out": [
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0"
      ]
    },
    "2179": {
      "op": "uncover 5",
      "stack_out": [
        "tmp%4#0",
        "tmp%5#0",
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0"
      ]
    },
    "2181": {
      "op": "uncover 5",
      "stack_out": [
        "tmp%5#0",
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0"
      ]
    },
    "2183": {
      "op": "uncover 5",
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0"
      ]
    },
    "2185": {
      "retsub": true,
      "op": "retsub"
    },
    "2186": {
      "subroutine": "test_cases.tuple_support.nested_tuples.NestedTuples.store_tuple_in_box",
      "params": {
        "key.a#0": "uint64",
        "key.b#0": "uint64"
      },
      "block": "test_cases.tuple_support.nested_tuples.NestedTuples.store_tuple_in_box",
      "stack_in": [],
      "op": "proto 2 0"
    },
    "2189": {
      "op": "b test_cases.tuple_support.nested_tuples.NestedTuples.store_tuple_in_box_block@0"
    },
    "2192": {
      "block": "test_cases.tuple_support.nested_tuples.NestedTuples.store_tuple_in_box_block@0",
      "stack_in": [],
      "op": "frame_dig -1",
      "defined_out": [
        "key.b#0 (copy)"
      ],
      "stack_out": [
        "key.b#0 (copy)"
      ]
    },
    "2194": {
      "op": "intc_2 // 1",
      "defined_out": [
        "1",
        "key.b#0 (copy)"
      ],
      "stack_out": [
        "key.b#0 (copy)",
        "1"
      ]
    },
    "2195": {
      "op": "+",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "2196": {
      "op": "frame_dig -2",
      "defined_out": [
        "key.a#0 (copy)",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "key.a#0 (copy)"
      ]
    },
    "2198": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(uint64)%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "aggregate%as_Encoded(uint64)%0#0"
      ]
    },
    "2199": {
      "op": "bytec_0 // 0x",
      "defined_out": [
        "0x",
        "aggregate%as_Encoded(uint64)%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "aggregate%as_Encoded(uint64)%0#0",
        "0x"
      ]
    },
    "2200": {
      "op": "uncover 1",
      "stack_out": [
        "tmp%0#0",
        "0x",
        "aggregate%as_Encoded(uint64)%0#0"
      ]
    },
    "2202": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "aggregate%head%0#0"
      ]
    },
    "2203": {
      "op": "frame_dig -1",
      "stack_out": [
        "tmp%0#0",
        "aggregate%head%0#0",
        "key.b#0 (copy)"
      ]
    },
    "2205": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(uint64)%1#0",
        "aggregate%head%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "aggregate%head%0#0",
        "aggregate%as_Encoded(uint64)%1#0"
      ]
    },
    "2206": {
      "op": "concat",
      "defined_out": [
        "encoded_for_storage%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "encoded_for_storage%0#0"
      ]
    },
    "2207": {
      "op": "bytec 5 // \"box\"",
      "defined_out": [
        "\"box\"",
        "encoded_for_storage%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "encoded_for_storage%0#0",
        "\"box\""
      ]
    },
    "2209": {
      "op": "uncover 1",
      "stack_out": [
        "tmp%0#0",
        "\"box\"",
        "encoded_for_storage%0#0"
      ]
    },
    "2211": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "box_prefixed_key%0#0"
      ]
    },
    "2212": {
      "op": "frame_dig -2",
      "stack_out": [
        "tmp%0#0",
        "box_prefixed_key%0#0",
        "key.a#0 (copy)"
      ]
    },
    "2214": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(uint64)%2#0",
        "box_prefixed_key%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "box_prefixed_key%0#0",
        "aggregate%as_Encoded(uint64)%2#0"
      ]
    },
    "2215": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "tmp%0#0",
        "box_prefixed_key%0#0",
        "aggregate%as_Encoded(uint64)%2#0",
        "0x"
      ]
    },
    "2216": {
      "op": "uncover 1",
      "stack_out": [
        "tmp%0#0",
        "box_prefixed_key%0#0",
        "0x",
        "aggregate%as_Encoded(uint64)%2#0"
      ]
    },
    "2218": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%2#0",
        "box_prefixed_key%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "box_prefixed_key%0#0",
        "aggregate%head%2#0"
      ]
    },
    "2219": {
      "op": "uncover 2",
      "stack_out": [
        "box_prefixed_key%0#0",
        "aggregate%head%2#0",
        "tmp%0#0"
      ]
    },
    "2221": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(uint64)%3#0",
        "aggregate%head%2#0",
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "aggregate%head%2#0",
        "aggregate%as_Encoded(uint64)%3#0"
      ]
    },
    "2222": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0",
        "encoded_for_storage%1#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "encoded_for_storage%1#0"
      ]
    },
    "2223": {
      "op": "box_put",
      "stack_out": []
    },
    "2224": {
      "retsub": true,
      "op": "retsub"
    },
    "2225": {
      "subroutine": "test_cases.tuple_support.nested_tuples.NestedTuples.is_tuple_in_box",
      "params": {
        "key.a#0": "uint64",
        "key.b#0": "uint64"
      },
      "block": "test_cases.tuple_support.nested_tuples.NestedTuples.is_tuple_in_box",
      "stack_in": [],
      "op": "proto 2 1"
    },
    "2228": {
      "op": "b test_cases.tuple_support.nested_tuples.NestedTuples.is_tuple_in_box_block@0"
    },
    "2231": {
      "block": "test_cases.tuple_support.nested_tuples.NestedTuples.is_tuple_in_box_block@0",
      "stack_in": [],
      "op": "frame_dig -2",
      "defined_out": [
        "key.a#0 (copy)"
      ],
      "stack_out": [
        "key.a#0 (copy)"
      ]
    },
    "2233": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(uint64)%0#0"
      ],
      "stack_out": [
        "aggregate%as_Encoded(uint64)%0#0"
      ]
    },
    "2234": {
      "op": "bytec_0 // 0x",
      "defined_out": [
        "0x",
        "aggregate%as_Encoded(uint64)%0#0"
      ],
      "stack_out": [
        "aggregate%as_Encoded(uint64)%0#0",
        "0x"
      ]
    },
    "2235": {
      "op": "uncover 1",
      "stack_out": [
        "0x",
        "aggregate%as_Encoded(uint64)%0#0"
      ]
    },
    "2237": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%0#0"
      ],
      "stack_out": [
        "aggregate%head%0#0"
      ]
    },
    "2238": {
      "op": "frame_dig -1",
      "defined_out": [
        "aggregate%head%0#0",
        "key.b#0 (copy)"
      ],
      "stack_out": [
        "aggregate%head%0#0",
        "key.b#0 (copy)"
      ]
    },
    "2240": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(uint64)%1#0",
        "aggregate%head%0#0"
      ],
      "stack_out": [
        "aggregate%head%0#0",
        "aggregate%as_Encoded(uint64)%1#0"
      ]
    },
    "2241": {
      "op": "concat",
      "defined_out": [
        "encoded_for_storage%0#0"
      ],
      "stack_out": [
        "encoded_for_storage%0#0"
      ]
    },
    "2242": {
      "op": "bytec 5 // \"box\"",
      "defined_out": [
        "\"box\"",
        "encoded_for_storage%0#0"
      ],
      "stack_out": [
        "encoded_for_storage%0#0",
        "\"box\""
      ]
    },
    "2244": {
      "op": "uncover 1",
      "stack_out": [
        "\"box\"",
        "encoded_for_storage%0#0"
      ]
    },
    "2246": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0"
      ]
    },
    "2247": {
      "op": "box_len",
      "defined_out": [
        "_%0#0",
        "maybe_exists%0#0"
      ],
      "stack_out": [
        "_%0#0",
        "maybe_exists%0#0"
      ]
    },
    "2248": {
      "op": "uncover 1"
    },
    "2250": {
      "retsub": true,
      "op": "retsub"
    },
    "2251": {
      "subroutine": "test_cases.tuple_support.nested_tuples.NestedTuples.load_tuple_from_box",
      "params": {
        "key.a#0": "uint64",
        "key.b#0": "uint64"
      },
      "block": "test_cases.tuple_support.nested_tuples.NestedTuples.load_tuple_from_box",
      "stack_in": [],
      "op": "proto 2 2"
    },
    "2254": {
      "op": "b test_cases.tuple_support.nested_tuples.NestedTuples.load_tuple_from_box_block@0"
    },
    "2257": {
      "block": "test_cases.tuple_support.nested_tuples.NestedTuples.load_tuple_from_box_block@0",
      "stack_in": [],
      "op": "frame_dig -2",
      "defined_out": [
        "key.a#0 (copy)"
      ],
      "stack_out": [
        "key.a#0 (copy)"
      ]
    },
    "2259": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(uint64)%0#0"
      ],
      "stack_out": [
        "aggregate%as_Encoded(uint64)%0#0"
      ]
    },
    "2260": {
      "op": "bytec_0 // 0x",
      "defined_out": [
        "0x",
        "aggregate%as_Encoded(uint64)%0#0"
      ],
      "stack_out": [
        "aggregate%as_Encoded(uint64)%0#0",
        "0x"
      ]
    },
    "2261": {
      "op": "uncover 1",
      "stack_out": [
        "0x",
        "aggregate%as_Encoded(uint64)%0#0"
      ]
    },
    "2263": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%0#0"
      ],
      "stack_out": [
        "aggregate%head%0#0"
      ]
    },
    "2264": {
      "op": "frame_dig -1",
      "defined_out": [
        "aggregate%head%0#0",
        "key.b#0 (copy)"
      ],
      "stack_out": [
        "aggregate%head%0#0",
        "key.b#0 (copy)"
      ]
    },
    "2266": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(uint64)%1#0",
        "aggregate%head%0#0"
      ],
      "stack_out": [
        "aggregate%head%0#0",
        "aggregate%as_Encoded(uint64)%1#0"
      ]
    },
    "2267": {
      "op": "concat",
      "defined_out": [
        "encoded_for_storage%0#0"
      ],
      "stack_out": [
        "encoded_for_storage%0#0"
      ]
    },
    "2268": {
      "op": "bytec 5 // \"box\"",
      "defined_out": [
        "\"box\"",
        "encoded_for_storage%0#0"
      ],
      "stack_out": [
        "encoded_for_storage%0#0",
        "\"box\""
      ]
    },
    "2270": {
      "op": "uncover 1",
      "stack_out": [
        "\"box\"",
        "encoded_for_storage%0#0"
      ]
    },
    "2272": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0"
      ]
    },
    "2273": {
      "op": "box_get",
      "defined_out": [
        "aggregate%box_get%0#0",
        "aggregate%box_get%1#0"
      ],
      "stack_out": [
        "aggregate%box_get%0#0",
        "aggregate%box_get%1#0"
      ]
    },
    "2274": {
      "error": "check self.box entry exists",
      "op": "assert // check self.box entry exists",
      "defined_out": [
        "storage_value%0#0"
      ],
      "stack_out": [
        "storage_value%0#0"
      ]
    },
    "2275": {
      "op": "dup",
      "defined_out": [
        "storage_value%0#0",
        "storage_value%0#0 (copy)"
      ],
      "stack_out": [
        "storage_value%0#0",
        "storage_value%0#0 (copy)"
      ]
    },
    "2276": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "storage_value%0#0",
        "storage_value%0#0 (copy)"
      ],
      "stack_out": [
        "storage_value%0#0",
        "storage_value%0#0 (copy)",
        "0"
      ]
    },
    "2277": {
      "op": "intc_1 // 8",
      "defined_out": [
        "0",
        "8",
        "storage_value%0#0",
        "storage_value%0#0 (copy)"
      ],
      "stack_out": [
        "storage_value%0#0",
        "storage_value%0#0 (copy)",
        "0",
        "8"
      ]
    },
    "2278": {
      "op": "extract3",
      "defined_out": [
        "aggregate%extract%0#0",
        "storage_value%0#0"
      ],
      "stack_out": [
        "storage_value%0#0",
        "aggregate%extract%0#0"
      ]
    },
    "2279": {
      "op": "btoi",
      "defined_out": [
        "aggregate%item0%0#0",
        "storage_value%0#0"
      ],
      "stack_out": [
        "storage_value%0#0",
        "aggregate%item0%0#0"
      ]
    },
    "2280": {
      "op": "cover 1",
      "stack_out": [
        "aggregate%item0%0#0",
        "storage_value%0#0"
      ]
    },
    "2282": {
      "op": "intc_1 // 8",
      "stack_out": [
        "aggregate%item0%0#0",
        "storage_value%0#0",
        "8"
      ]
    },
    "2283": {
      "op": "intc_1 // 8",
      "stack_out": [
        "aggregate%item0%0#0",
        "storage_value%0#0",
        "8",
        "8"
      ]
    },
    "2284": {
      "op": "extract3",
      "defined_out": [
        "aggregate%extract%1#0",
        "aggregate%item0%0#0"
      ],
      "stack_out": [
        "aggregate%item0%0#0",
        "aggregate%extract%1#0"
      ]
    },
    "2285": {
      "op": "btoi",
      "defined_out": [
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0"
      ]
    },
    "2286": {
      "retsub": true,
      "op": "retsub"
    },
    "2287": {
      "subroutine": "test_cases.tuple_support.nested_tuples.NestedTuples.maybe_load_tuple_from_box",
      "params": {
        "key.a#0": "uint64",
        "key.b#0": "uint64"
      },
      "block": "test_cases.tuple_support.nested_tuples.NestedTuples.maybe_load_tuple_from_box",
      "stack_in": [],
      "op": "proto 2 3"
    },
    "2290": {
      "op": "bytec_0 // \"\"",
      "stack_out": [
        "ternary_result%0.a#0"
      ]
    },
    "2291": {
      "op": "bytec_0 // \"\"",
      "stack_out": [
        "ternary_result%0.a#0",
        "ternary_result%0.b#0"
      ]
    },
    "2292": {
      "op": "b test_cases.tuple_support.nested_tuples.NestedTuples.maybe_load_tuple_from_box_block@0"
    },
    "2295": {
      "block": "test_cases.tuple_support.nested_tuples.NestedTuples.maybe_load_tuple_from_box_block@0",
      "stack_in": [
        "ternary_result%0.a#0",
        "ternary_result%0.b#0"
      ],
      "op": "frame_dig -2",
      "defined_out": [
        "key.a#0 (copy)"
      ],
      "stack_out": [
        "ternary_result%0.a#0",
        "ternary_result%0.b#0",
        "key.a#0 (copy)"
      ]
    },
    "2297": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(uint64)%0#0"
      ],
      "stack_out": [
        "ternary_result%0.a#0",
        "ternary_result%0.b#0",
        "aggregate%as_Encoded(uint64)%0#0"
      ]
    },
    "2298": {
      "op": "bytec_0 // 0x",
      "defined_out": [
        "0x",
        "aggregate%as_Encoded(uint64)%0#0"
      ],
      "stack_out": [
        "ternary_result%0.a#0",
        "ternary_result%0.b#0",
        "aggregate%as_Encoded(uint64)%0#0",
        "0x"
      ]
    },
    "2299": {
      "op": "uncover 1",
      "stack_out": [
        "ternary_result%0.a#0",
        "ternary_result%0.b#0",
        "0x",
        "aggregate%as_Encoded(uint64)%0#0"
      ]
    },
    "2301": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%0#0"
      ],
      "stack_out": [
        "ternary_result%0.a#0",
        "ternary_result%0.b#0",
        "aggregate%head%0#0"
      ]
    },
    "2302": {
      "op": "frame_dig -1",
      "defined_out": [
        "aggregate%head%0#0",
        "key.b#0 (copy)"
      ],
      "stack_out": [
        "ternary_result%0.a#0",
        "ternary_result%0.b#0",
        "aggregate%head%0#0",
        "key.b#0 (copy)"
      ]
    },
    "2304": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(uint64)%1#0",
        "aggregate%head%0#0"
      ],
      "stack_out": [
        "ternary_result%0.a#0",
        "ternary_result%0.b#0",
        "aggregate%head%0#0",
        "aggregate%as_Encoded(uint64)%1#0"
      ]
    },
    "2305": {
      "op": "concat",
      "defined_out": [
        "encoded_for_storage%0#0"
      ],
      "stack_out": [
        "ternary_result%0.a#0",
        "ternary_result%0.b#0",
        "encoded_for_storage%0#0"
      ]
    },
    "2306": {
      "op": "bytec 5 // \"box\"",
      "defined_out": [
        "\"box\"",
        "encoded_for_storage%0#0"
      ],
      "stack_out": [
        "ternary_result%0.a#0",
        "ternary_result%0.b#0",
        "encoded_for_storage%0#0",
        "\"box\""
      ]
    },
    "2308": {
      "op": "uncover 1",
      "stack_out": [
        "ternary_result%0.a#0",
        "ternary_result%0.b#0",
        "\"box\"",
        "encoded_for_storage%0#0"
      ]
    },
    "2310": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "ternary_result%0.a#0",
        "ternary_result%0.b#0",
        "box_prefixed_key%0#0"
      ]
    },
    "2311": {
      "op": "box_get",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "ternary_result%0.a#0",
        "ternary_result%0.b#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "2312": {
      "op": "dup",
      "defined_out": [
        "maybe_exists%0#0 (copy)",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "ternary_result%0.a#0",
        "ternary_result%0.b#0",
        "maybe_value%0#0",
        "maybe_exists%0#0 (copy)",
        "maybe_exists%0#0 (copy)"
      ]
    },
    "2313": {
      "op": "cover 2",
      "stack_out": [
        "ternary_result%0.a#0",
        "ternary_result%0.b#0",
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "maybe_exists%0#0 (copy)"
      ]
    },
    "2315": {
      "op": "cover 2",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "ternary_result%0.a#0",
        "ternary_result%0.b#0",
        "maybe_exists%0#0",
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ]
    },
    "2317": {
      "op": "cover 1",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "ternary_result%0.a#0",
        "ternary_result%0.b#0",
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "2319": {
      "op": "bz test_cases.tuple_support.nested_tuples.NestedTuples.maybe_load_tuple_from_box_ternary_false@2",
      "stack_out": [
        "ternary_result%0.a#0",
        "ternary_result%0.b#0",
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ]
    },
    "2322": {
      "op": "b test_cases.tuple_support.nested_tuples.NestedTuples.maybe_load_tuple_from_box_ternary_true@1"
    },
    "2325": {
      "block": "test_cases.tuple_support.nested_tuples.NestedTuples.maybe_load_tuple_from_box_ternary_true@1",
      "stack_in": [
        "ternary_result%0.a#0",
        "ternary_result%0.b#0",
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "op": "frame_dig 3",
      "defined_out": [
        "maybe_value%0#0"
      ],
      "stack_out": [
        "ternary_result%0.a#0",
        "ternary_result%0.b#0",
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "maybe_value%0#0"
      ]
    },
    "2327": {
      "op": "dup",
      "defined_out": [
        "maybe_value%0#0",
        "maybe_value%0#0 (copy)"
      ],
      "stack_out": [
        "ternary_result%0.a#0",
        "ternary_result%0.b#0",
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "maybe_value%0#0",
        "maybe_value%0#0 (copy)"
      ]
    },
    "2328": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "maybe_value%0#0",
        "maybe_value%0#0 (copy)"
      ],
      "stack_out": [
        "ternary_result%0.a#0",
        "ternary_result%0.b#0",
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "maybe_value%0#0",
        "maybe_value%0#0 (copy)",
        "0"
      ]
    },
    "2329": {
      "op": "intc_1 // 8",
      "defined_out": [
        "0",
        "8",
        "maybe_value%0#0",
        "maybe_value%0#0 (copy)"
      ],
      "stack_out": [
        "ternary_result%0.a#0",
        "ternary_result%0.b#0",
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "maybe_value%0#0",
        "maybe_value%0#0 (copy)",
        "0",
        "8"
      ]
    },
    "2330": {
      "op": "extract3",
      "defined_out": [
        "aggregate%extract%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "ternary_result%0.a#0",
        "ternary_result%0.b#0",
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "maybe_value%0#0",
        "aggregate%extract%0#0"
      ]
    },
    "2331": {
      "op": "btoi",
      "defined_out": [
        "aggregate%item0%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "ternary_result%0.a#0",
        "ternary_result%0.b#0",
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "maybe_value%0#0",
        "aggregate%item0%0#0"
      ]
    },
    "2332": {
      "op": "cover 1",
      "stack_out": [
        "ternary_result%0.a#0",
        "ternary_result%0.b#0",
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "aggregate%item0%0#0",
        "maybe_value%0#0"
      ]
    },
    "2334": {
      "op": "intc_1 // 8",
      "stack_out": [
        "ternary_result%0.a#0",
        "ternary_result%0.b#0",
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "aggregate%item0%0#0",
        "maybe_value%0#0",
        "8"
      ]
    },
    "2335": {
      "op": "intc_1 // 8",
      "stack_out": [
        "ternary_result%0.a#0",
        "ternary_result%0.b#0",
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "aggregate%item0%0#0",
        "maybe_value%0#0",
        "8",
        "8"
      ]
    },
    "2336": {
      "op": "extract3",
      "defined_out": [
        "aggregate%extract%1#0",
        "aggregate%item0%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "ternary_result%0.a#0",
        "ternary_result%0.b#0",
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "aggregate%item0%0#0",
        "aggregate%extract%1#0"
      ]
    },
    "2337": {
      "op": "btoi",
      "defined_out": [
        "aggregate%item0%0#0",
        "aggregate%item1%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "ternary_result%0.a#0",
        "ternary_result%0.b#0",
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "aggregate%item0%0#0",
        "aggregate%item1%0#0"
      ]
    },
    "2338": {
      "op": "uncover 1",
      "stack_out": [
        "ternary_result%0.a#0",
        "ternary_result%0.b#0",
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "aggregate%item1%0#0",
        "aggregate%item0%0#0"
      ]
    },
    "2340": {
      "op": "frame_bury 0",
      "defined_out": [
        "aggregate%item1%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "ternary_result%0.a#0",
        "ternary_result%0.b#0",
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "aggregate%item1%0#0"
      ]
    },
    "2342": {
      "op": "frame_bury 1",
      "defined_out": [
        "maybe_value%0#0"
      ],
      "stack_out": [
        "ternary_result%0.a#0",
        "ternary_result%0.b#0",
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ]
    },
    "2344": {
      "op": "b test_cases.tuple_support.nested_tuples.NestedTuples.maybe_load_tuple_from_box_ternary_merge@3"
    },
    "2347": {
      "block": "test_cases.tuple_support.nested_tuples.NestedTuples.maybe_load_tuple_from_box_ternary_merge@3",
      "stack_in": [
        "ternary_result%0.a#0",
        "ternary_result%0.b#0",
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "maybe_value.a#0",
        "ternary_result%0.a#0"
      ],
      "stack_out": [
        "ternary_result%0.a#0",
        "ternary_result%0.b#0",
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "maybe_value.a#0"
      ]
    },
    "2349": {
      "op": "frame_dig 1",
      "defined_out": [
        "maybe_value.a#0",
        "maybe_value.b#0",
        "ternary_result%0.a#0",
        "ternary_result%0.b#0"
      ],
      "stack_out": [
        "ternary_result%0.a#0",
        "ternary_result%0.b#0",
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "maybe_value.a#0",
        "maybe_value.b#0"
      ]
    },
    "2351": {
      "op": "frame_dig 2",
      "defined_out": [
        "exists#0",
        "maybe_exists%0#0",
        "maybe_value.a#0",
        "maybe_value.b#0",
        "ternary_result%0.a#0",
        "ternary_result%0.b#0"
      ],
      "stack_out": [
        "ternary_result%0.a#0",
        "ternary_result%0.b#0",
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "maybe_value.a#0",
        "maybe_value.b#0",
        "exists#0"
      ]
    },
    "2353": {
      "op": "uncover 2",
      "stack_out": [
        "ternary_result%0.a#0",
        "ternary_result%0.b#0",
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "maybe_value.b#0",
        "exists#0",
        "maybe_value.a#0"
      ]
    },
    "2355": {
      "op": "uncover 2",
      "stack_out": [
        "ternary_result%0.a#0",
        "ternary_result%0.b#0",
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "exists#0",
        "maybe_value.a#0",
        "maybe_value.b#0"
      ]
    },
    "2357": {
      "op": "uncover 2",
      "stack_out": [
        "ternary_result%0.a#0",
        "ternary_result%0.b#0",
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "maybe_value.a#0",
        "maybe_value.b#0",
        "exists#0"
      ]
    },
    "2359": {
      "op": "frame_bury 2"
    },
    "2361": {
      "op": "frame_bury 1"
    },
    "2363": {
      "op": "frame_bury 0"
    },
    "2365": {
      "retsub": true,
      "op": "retsub"
    },
    "2366": {
      "block": "test_cases.tuple_support.nested_tuples.NestedTuples.maybe_load_tuple_from_box_ternary_false@2",
      "stack_in": [
        "ternary_result%0.a#0",
        "ternary_result%0.b#0",
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "op": "bytec_0 // \"\"",
      "defined_out": [
        "undefined"
      ],
      "stack_out": [
        "ternary_result%0.a#0",
        "ternary_result%0.b#0",
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "undefined"
      ]
    },
    "2367": {
      "op": "frame_bury 0",
      "defined_out": [],
      "stack_out": [
        "ternary_result%0.a#0",
        "ternary_result%0.b#0",
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ]
    },
    "2369": {
      "op": "bytec_0 // \"\"",
      "stack_out": [
        "ternary_result%0.a#0",
        "ternary_result%0.b#0",
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "undefined"
      ]
    },
    "2370": {
      "op": "frame_bury 1",
      "defined_out": [],
      "stack_out": [
        "ternary_result%0.a#0",
        "ternary_result%0.b#0",
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ]
    },
    "2372": {
      "op": "b test_cases.tuple_support.nested_tuples.NestedTuples.maybe_load_tuple_from_box_ternary_merge@3"
    },
    "2375": {
      "subroutine": "test_cases.tuple_support.nested_tuples.NestedTuples.load_tuple_from_box_or_default",
      "params": {
        "key.a#0": "uint64",
        "key.b#0": "uint64"
      },
      "block": "test_cases.tuple_support.nested_tuples.NestedTuples.load_tuple_from_box_or_default",
      "stack_in": [],
      "op": "proto 2 2"
    },
    "2378": {
      "op": "bytec_0 // \"\"",
      "stack_out": [
        "ternary_result%0.a#0"
      ]
    },
    "2379": {
      "op": "bytec_0 // \"\"",
      "stack_out": [
        "ternary_result%0.a#0",
        "ternary_result%0.b#0"
      ]
    },
    "2380": {
      "op": "b test_cases.tuple_support.nested_tuples.NestedTuples.load_tuple_from_box_or_default_block@0"
    },
    "2383": {
      "block": "test_cases.tuple_support.nested_tuples.NestedTuples.load_tuple_from_box_or_default_block@0",
      "stack_in": [
        "ternary_result%0.a#0",
        "ternary_result%0.b#0"
      ],
      "op": "frame_dig -2",
      "defined_out": [
        "key.a#0 (copy)"
      ],
      "stack_out": [
        "ternary_result%0.a#0",
        "ternary_result%0.b#0",
        "key.a#0 (copy)"
      ]
    },
    "2385": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(uint64)%0#0"
      ],
      "stack_out": [
        "ternary_result%0.a#0",
        "ternary_result%0.b#0",
        "aggregate%as_Encoded(uint64)%0#0"
      ]
    },
    "2386": {
      "op": "bytec_0 // 0x",
      "defined_out": [
        "0x",
        "aggregate%as_Encoded(uint64)%0#0"
      ],
      "stack_out": [
        "ternary_result%0.a#0",
        "ternary_result%0.b#0",
        "aggregate%as_Encoded(uint64)%0#0",
        "0x"
      ]
    },
    "2387": {
      "op": "uncover 1",
      "stack_out": [
        "ternary_result%0.a#0",
        "ternary_result%0.b#0",
        "0x",
        "aggregate%as_Encoded(uint64)%0#0"
      ]
    },
    "2389": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%0#0"
      ],
      "stack_out": [
        "ternary_result%0.a#0",
        "ternary_result%0.b#0",
        "aggregate%head%0#0"
      ]
    },
    "2390": {
      "op": "frame_dig -1",
      "defined_out": [
        "aggregate%head%0#0",
        "key.b#0 (copy)"
      ],
      "stack_out": [
        "ternary_result%0.a#0",
        "ternary_result%0.b#0",
        "aggregate%head%0#0",
        "key.b#0 (copy)"
      ]
    },
    "2392": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(uint64)%1#0",
        "aggregate%head%0#0"
      ],
      "stack_out": [
        "ternary_result%0.a#0",
        "ternary_result%0.b#0",
        "aggregate%head%0#0",
        "aggregate%as_Encoded(uint64)%1#0"
      ]
    },
    "2393": {
      "op": "concat",
      "defined_out": [
        "encoded_for_storage%0#0"
      ],
      "stack_out": [
        "ternary_result%0.a#0",
        "ternary_result%0.b#0",
        "encoded_for_storage%0#0"
      ]
    },
    "2394": {
      "op": "bytec 5 // \"box\"",
      "defined_out": [
        "\"box\"",
        "encoded_for_storage%0#0"
      ],
      "stack_out": [
        "ternary_result%0.a#0",
        "ternary_result%0.b#0",
        "encoded_for_storage%0#0",
        "\"box\""
      ]
    },
    "2396": {
      "op": "uncover 1",
      "stack_out": [
        "ternary_result%0.a#0",
        "ternary_result%0.b#0",
        "\"box\"",
        "encoded_for_storage%0#0"
      ]
    },
    "2398": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "ternary_result%0.a#0",
        "ternary_result%0.b#0",
        "box_prefixed_key%0#0"
      ]
    },
    "2399": {
      "op": "pushint 4 // 4",
      "defined_out": [
        "4",
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "ternary_result%0.a#0",
        "ternary_result%0.b#0",
        "box_prefixed_key%0#0",
        "4"
      ]
    },
    "2401": {
      "op": "intc_3 // 2",
      "defined_out": [
        "2",
        "4",
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "ternary_result%0.a#0",
        "ternary_result%0.b#0",
        "box_prefixed_key%0#0",
        "4",
        "2"
      ]
    },
    "2402": {
      "callsub": "test_cases.tuple_support.nested_tuples.simple_tup",
      "op": "callsub simple_tup",
      "defined_out": [
        "box_prefixed_key%0#0",
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "ternary_result%0.a#0",
        "ternary_result%0.b#0",
        "box_prefixed_key%0#0",
        "tmp%0#0",
        "tmp%1#0"
      ]
    },
    "2405": {
      "op": "cover 2",
      "defined_out": [
        "box_prefixed_key%0#0",
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "ternary_result%0.a#0",
        "ternary_result%0.b#0",
        "tmp%1#0",
        "box_prefixed_key%0#0",
        "tmp%0#0"
      ]
    },
    "2407": {
      "op": "cover 1",
      "stack_out": [
        "ternary_result%0.a#0",
        "ternary_result%0.b#0",
        "tmp%1#0",
        "tmp%0#0",
        "box_prefixed_key%0#0"
      ]
    },
    "2409": {
      "op": "box_get",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "ternary_result%0.a#0",
        "ternary_result%0.b#0",
        "tmp%1#0",
        "tmp%0#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "2410": {
      "op": "bz test_cases.tuple_support.nested_tuples.NestedTuples.load_tuple_from_box_or_default_ternary_false@2",
      "stack_out": [
        "ternary_result%0.a#0",
        "ternary_result%0.b#0",
        "tmp%1#0",
        "tmp%0#0",
        "maybe_value%0#0"
      ]
    },
    "2413": {
      "op": "b test_cases.tuple_support.nested_tuples.NestedTuples.load_tuple_from_box_or_default_ternary_true@1"
    },
    "2416": {
      "block": "test_cases.tuple_support.nested_tuples.NestedTuples.load_tuple_from_box_or_default_ternary_true@1",
      "stack_in": [
        "ternary_result%0.a#0",
        "ternary_result%0.b#0",
        "tmp%1#0",
        "tmp%0#0",
        "maybe_value%0#0"
      ],
      "op": "frame_dig 4",
      "defined_out": [
        "maybe_value%0#0"
      ],
      "stack_out": [
        "ternary_result%0.a#0",
        "ternary_result%0.b#0",
        "tmp%1#0",
        "tmp%0#0",
        "maybe_value%0#0",
        "maybe_value%0#0"
      ]
    },
    "2418": {
      "op": "dup",
      "defined_out": [
        "maybe_value%0#0",
        "maybe_value%0#0 (copy)"
      ],
      "stack_out": [
        "ternary_result%0.a#0",
        "ternary_result%0.b#0",
        "tmp%1#0",
        "tmp%0#0",
        "maybe_value%0#0",
        "maybe_value%0#0",
        "maybe_value%0#0 (copy)"
      ]
    },
    "2419": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "maybe_value%0#0",
        "maybe_value%0#0 (copy)"
      ],
      "stack_out": [
        "ternary_result%0.a#0",
        "ternary_result%0.b#0",
        "tmp%1#0",
        "tmp%0#0",
        "maybe_value%0#0",
        "maybe_value%0#0",
        "maybe_value%0#0 (copy)",
        "0"
      ]
    },
    "2420": {
      "op": "intc_1 // 8",
      "defined_out": [
        "0",
        "8",
        "maybe_value%0#0",
        "maybe_value%0#0 (copy)"
      ],
      "stack_out": [
        "ternary_result%0.a#0",
        "ternary_result%0.b#0",
        "tmp%1#0",
        "tmp%0#0",
        "maybe_value%0#0",
        "maybe_value%0#0",
        "maybe_value%0#0 (copy)",
        "0",
        "8"
      ]
    },
    "2421": {
      "op": "extract3",
      "defined_out": [
        "aggregate%extract%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "ternary_result%0.a#0",
        "ternary_result%0.b#0",
        "tmp%1#0",
        "tmp%0#0",
        "maybe_value%0#0",
        "maybe_value%0#0",
        "aggregate%extract%0#0"
      ]
    },
    "2422": {
      "op": "btoi",
      "defined_out": [
        "aggregate%item0%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "ternary_result%0.a#0",
        "ternary_result%0.b#0",
        "tmp%1#0",
        "tmp%0#0",
        "maybe_value%0#0",
        "maybe_value%0#0",
        "aggregate%item0%0#0"
      ]
    },
    "2423": {
      "op": "cover 1",
      "stack_out": [
        "ternary_result%0.a#0",
        "ternary_result%0.b#0",
        "tmp%1#0",
        "tmp%0#0",
        "maybe_value%0#0",
        "aggregate%item0%0#0",
        "maybe_value%0#0"
      ]
    },
    "2425": {
      "op": "intc_1 // 8",
      "stack_out": [
        "ternary_result%0.a#0",
        "ternary_result%0.b#0",
        "tmp%1#0",
        "tmp%0#0",
        "maybe_value%0#0",
        "aggregate%item0%0#0",
        "maybe_value%0#0",
        "8"
      ]
    },
    "2426": {
      "op": "intc_1 // 8",
      "stack_out": [
        "ternary_result%0.a#0",
        "ternary_result%0.b#0",
        "tmp%1#0",
        "tmp%0#0",
        "maybe_value%0#0",
        "aggregate%item0%0#0",
        "maybe_value%0#0",
        "8",
        "8"
      ]
    },
    "2427": {
      "op": "extract3",
      "defined_out": [
        "aggregate%extract%1#0",
        "aggregate%item0%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "ternary_result%0.a#0",
        "ternary_result%0.b#0",
        "tmp%1#0",
        "tmp%0#0",
        "maybe_value%0#0",
        "aggregate%item0%0#0",
        "aggregate%extract%1#0"
      ]
    },
    "2428": {
      "op": "btoi",
      "defined_out": [
        "aggregate%item0%0#0",
        "aggregate%item1%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "ternary_result%0.a#0",
        "ternary_result%0.b#0",
        "tmp%1#0",
        "tmp%0#0",
        "maybe_value%0#0",
        "aggregate%item0%0#0",
        "aggregate%item1%0#0"
      ]
    },
    "2429": {
      "op": "uncover 1",
      "stack_out": [
        "ternary_result%0.a#0",
        "ternary_result%0.b#0",
        "tmp%1#0",
        "tmp%0#0",
        "maybe_value%0#0",
        "aggregate%item1%0#0",
        "aggregate%item0%0#0"
      ]
    },
    "2431": {
      "op": "frame_bury 0",
      "defined_out": [
        "aggregate%item1%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "ternary_result%0.a#0",
        "ternary_result%0.b#0",
        "tmp%1#0",
        "tmp%0#0",
        "maybe_value%0#0",
        "aggregate%item1%0#0"
      ]
    },
    "2433": {
      "op": "frame_bury 1",
      "defined_out": [
        "maybe_value%0#0"
      ],
      "stack_out": [
        "ternary_result%0.a#0",
        "ternary_result%0.b#0",
        "tmp%1#0",
        "tmp%0#0",
        "maybe_value%0#0"
      ]
    },
    "2435": {
      "op": "b test_cases.tuple_support.nested_tuples.NestedTuples.load_tuple_from_box_or_default_ternary_merge@3"
    },
    "2438": {
      "block": "test_cases.tuple_support.nested_tuples.NestedTuples.load_tuple_from_box_or_default_ternary_merge@3",
      "stack_in": [
        "ternary_result%0.a#0",
        "ternary_result%0.b#0",
        "tmp%1#0",
        "tmp%0#0",
        "maybe_value%0#0"
      ],
      "retsub": true,
      "op": "retsub",
      "defined_out": [
        "ternary_result%0.a#0",
        "ternary_result%0.b#0"
      ],
      "stack_out": [
        "ternary_result%0.a#0",
        "ternary_result%0.b#0",
        "tmp%1#0",
        "tmp%0#0",
        "maybe_value%0#0",
        "ternary_result%0.a#0",
        "ternary_result%0.b#0"
      ]
    },
    "2439": {
      "block": "test_cases.tuple_support.nested_tuples.NestedTuples.load_tuple_from_box_or_default_ternary_false@2",
      "stack_in": [
        "ternary_result%0.a#0",
        "ternary_result%0.b#0",
        "tmp%1#0",
        "tmp%0#0",
        "maybe_value%0#0"
      ],
      "op": "frame_dig 3",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "ternary_result%0.a#0",
        "ternary_result%0.b#0",
        "tmp%1#0",
        "tmp%0#0",
        "maybe_value%0#0",
        "tmp%0#0"
      ]
    },
    "2441": {
      "op": "frame_bury 0",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "ternary_result%0.a#0",
        "ternary_result%0.b#0",
        "tmp%1#0",
        "tmp%0#0",
        "maybe_value%0#0"
      ]
    },
    "2443": {
      "op": "frame_dig 2",
      "defined_out": [
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "ternary_result%0.a#0",
        "ternary_result%0.b#0",
        "tmp%1#0",
        "tmp%0#0",
        "maybe_value%0#0",
        "tmp%1#0"
      ]
    },
    "2445": {
      "op": "frame_bury 1",
      "defined_out": [
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "ternary_result%0.a#0",
        "ternary_result%0.b#0",
        "tmp%1#0",
        "tmp%0#0",
        "maybe_value%0#0"
      ]
    },
    "2447": {
      "op": "b test_cases.tuple_support.nested_tuples.NestedTuples.load_tuple_from_box_or_default_ternary_merge@3"
    },
    "2450": {
      "subroutine": "test_cases.tuple_support.nested_tuples.NestedTuples.load_tuple_from_local_state_or_default",
      "params": {
        "key#0": "bytes"
      },
      "block": "test_cases.tuple_support.nested_tuples.NestedTuples.load_tuple_from_local_state_or_default",
      "stack_in": [],
      "op": "proto 1 2"
    },
    "2453": {
      "op": "bytec_0 // \"\"",
      "stack_out": [
        "ternary_result%0.a#0"
      ]
    },
    "2454": {
      "op": "bytec_0 // \"\"",
      "stack_out": [
        "ternary_result%0.a#0",
        "ternary_result%0.b#0"
      ]
    },
    "2455": {
      "op": "b test_cases.tuple_support.nested_tuples.NestedTuples.load_tuple_from_local_state_or_default_block@0"
    },
    "2458": {
      "block": "test_cases.tuple_support.nested_tuples.NestedTuples.load_tuple_from_local_state_or_default_block@0",
      "stack_in": [
        "ternary_result%0.a#0",
        "ternary_result%0.b#0"
      ],
      "op": "frame_dig -1",
      "defined_out": [
        "key#0 (copy)"
      ],
      "stack_out": [
        "ternary_result%0.a#0",
        "ternary_result%0.b#0",
        "key#0 (copy)"
      ]
    },
    "2460": {
      "callsub": "test_cases.tuple_support.nested_tuples.echo",
      "op": "callsub echo",
      "defined_out": [
        "local#0"
      ],
      "stack_out": [
        "ternary_result%0.a#0",
        "ternary_result%0.b#0",
        "local#0"
      ]
    },
    "2463": {
      "callsub": "test_cases.tuple_support.nested_tuples.get_sender_inefficiently",
      "op": "callsub get_sender_inefficiently",
      "defined_out": [
        "local#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "ternary_result%0.a#0",
        "ternary_result%0.b#0",
        "local#0",
        "tmp%1#0"
      ]
    },
    "2466": {
      "op": "pushint 4 // 4",
      "defined_out": [
        "4",
        "local#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "ternary_result%0.a#0",
        "ternary_result%0.b#0",
        "local#0",
        "tmp%1#0",
        "4"
      ]
    },
    "2468": {
      "op": "intc_3 // 2",
      "defined_out": [
        "2",
        "4",
        "local#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "ternary_result%0.a#0",
        "ternary_result%0.b#0",
        "local#0",
        "tmp%1#0",
        "4",
        "2"
      ]
    },
    "2469": {
      "callsub": "test_cases.tuple_support.nested_tuples.simple_tup",
      "op": "callsub simple_tup",
      "defined_out": [
        "local#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "ternary_result%0.a#0",
        "ternary_result%0.b#0",
        "local#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0"
      ]
    },
    "2472": {
      "op": "cover 3",
      "defined_out": [
        "local#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "ternary_result%0.a#0",
        "ternary_result%0.b#0",
        "tmp%3#0",
        "local#0",
        "tmp%1#0",
        "tmp%2#0"
      ]
    },
    "2474": {
      "op": "cover 2",
      "stack_out": [
        "ternary_result%0.a#0",
        "ternary_result%0.b#0",
        "tmp%3#0",
        "tmp%2#0",
        "local#0",
        "tmp%1#0"
      ]
    },
    "2476": {
      "op": "intc_0 // 0",
      "stack_out": [
        "ternary_result%0.a#0",
        "ternary_result%0.b#0",
        "tmp%3#0",
        "tmp%2#0",
        "local#0",
        "tmp%1#0",
        "0"
      ]
    },
    "2477": {
      "op": "uncover 2",
      "stack_out": [
        "ternary_result%0.a#0",
        "ternary_result%0.b#0",
        "tmp%3#0",
        "tmp%2#0",
        "tmp%1#0",
        "0",
        "local#0"
      ]
    },
    "2479": {
      "op": "app_local_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "tmp%2#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "ternary_result%0.a#0",
        "ternary_result%0.b#0",
        "tmp%3#0",
        "tmp%2#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "2480": {
      "op": "bz test_cases.tuple_support.nested_tuples.NestedTuples.load_tuple_from_local_state_or_default_ternary_false@2",
      "stack_out": [
        "ternary_result%0.a#0",
        "ternary_result%0.b#0",
        "tmp%3#0",
        "tmp%2#0",
        "maybe_value%0#0"
      ]
    },
    "2483": {
      "op": "b test_cases.tuple_support.nested_tuples.NestedTuples.load_tuple_from_local_state_or_default_ternary_true@1"
    },
    "2486": {
      "block": "test_cases.tuple_support.nested_tuples.NestedTuples.load_tuple_from_local_state_or_default_ternary_true@1",
      "stack_in": [
        "ternary_result%0.a#0",
        "ternary_result%0.b#0",
        "tmp%3#0",
        "tmp%2#0",
        "maybe_value%0#0"
      ],
      "op": "frame_dig 4",
      "defined_out": [
        "maybe_value%0#0"
      ],
      "stack_out": [
        "ternary_result%0.a#0",
        "ternary_result%0.b#0",
        "tmp%3#0",
        "tmp%2#0",
        "maybe_value%0#0",
        "maybe_value%0#0"
      ]
    },
    "2488": {
      "op": "dup",
      "defined_out": [
        "maybe_value%0#0",
        "maybe_value%0#0 (copy)"
      ],
      "stack_out": [
        "ternary_result%0.a#0",
        "ternary_result%0.b#0",
        "tmp%3#0",
        "tmp%2#0",
        "maybe_value%0#0",
        "maybe_value%0#0",
        "maybe_value%0#0 (copy)"
      ]
    },
    "2489": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "maybe_value%0#0",
        "maybe_value%0#0 (copy)"
      ],
      "stack_out": [
        "ternary_result%0.a#0",
        "ternary_result%0.b#0",
        "tmp%3#0",
        "tmp%2#0",
        "maybe_value%0#0",
        "maybe_value%0#0",
        "maybe_value%0#0 (copy)",
        "0"
      ]
    },
    "2490": {
      "op": "intc_1 // 8",
      "defined_out": [
        "0",
        "8",
        "maybe_value%0#0",
        "maybe_value%0#0 (copy)"
      ],
      "stack_out": [
        "ternary_result%0.a#0",
        "ternary_result%0.b#0",
        "tmp%3#0",
        "tmp%2#0",
        "maybe_value%0#0",
        "maybe_value%0#0",
        "maybe_value%0#0 (copy)",
        "0",
        "8"
      ]
    },
    "2491": {
      "op": "extract3",
      "defined_out": [
        "aggregate%extract%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "ternary_result%0.a#0",
        "ternary_result%0.b#0",
        "tmp%3#0",
        "tmp%2#0",
        "maybe_value%0#0",
        "maybe_value%0#0",
        "aggregate%extract%0#0"
      ]
    },
    "2492": {
      "op": "btoi",
      "defined_out": [
        "aggregate%item0%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "ternary_result%0.a#0",
        "ternary_result%0.b#0",
        "tmp%3#0",
        "tmp%2#0",
        "maybe_value%0#0",
        "maybe_value%0#0",
        "aggregate%item0%0#0"
      ]
    },
    "2493": {
      "op": "cover 1",
      "stack_out": [
        "ternary_result%0.a#0",
        "ternary_result%0.b#0",
        "tmp%3#0",
        "tmp%2#0",
        "maybe_value%0#0",
        "aggregate%item0%0#0",
        "maybe_value%0#0"
      ]
    },
    "2495": {
      "op": "intc_1 // 8",
      "stack_out": [
        "ternary_result%0.a#0",
        "ternary_result%0.b#0",
        "tmp%3#0",
        "tmp%2#0",
        "maybe_value%0#0",
        "aggregate%item0%0#0",
        "maybe_value%0#0",
        "8"
      ]
    },
    "2496": {
      "op": "intc_1 // 8",
      "stack_out": [
        "ternary_result%0.a#0",
        "ternary_result%0.b#0",
        "tmp%3#0",
        "tmp%2#0",
        "maybe_value%0#0",
        "aggregate%item0%0#0",
        "maybe_value%0#0",
        "8",
        "8"
      ]
    },
    "2497": {
      "op": "extract3",
      "defined_out": [
        "aggregate%extract%1#0",
        "aggregate%item0%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "ternary_result%0.a#0",
        "ternary_result%0.b#0",
        "tmp%3#0",
        "tmp%2#0",
        "maybe_value%0#0",
        "aggregate%item0%0#0",
        "aggregate%extract%1#0"
      ]
    },
    "2498": {
      "op": "btoi",
      "defined_out": [
        "aggregate%item0%0#0",
        "aggregate%item1%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "ternary_result%0.a#0",
        "ternary_result%0.b#0",
        "tmp%3#0",
        "tmp%2#0",
        "maybe_value%0#0",
        "aggregate%item0%0#0",
        "aggregate%item1%0#0"
      ]
    },
    "2499": {
      "op": "uncover 1",
      "stack_out": [
        "ternary_result%0.a#0",
        "ternary_result%0.b#0",
        "tmp%3#0",
        "tmp%2#0",
        "maybe_value%0#0",
        "aggregate%item1%0#0",
        "aggregate%item0%0#0"
      ]
    },
    "2501": {
      "op": "frame_bury 0",
      "defined_out": [
        "aggregate%item1%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "ternary_result%0.a#0",
        "ternary_result%0.b#0",
        "tmp%3#0",
        "tmp%2#0",
        "maybe_value%0#0",
        "aggregate%item1%0#0"
      ]
    },
    "2503": {
      "op": "frame_bury 1",
      "defined_out": [
        "maybe_value%0#0"
      ],
      "stack_out": [
        "ternary_result%0.a#0",
        "ternary_result%0.b#0",
        "tmp%3#0",
        "tmp%2#0",
        "maybe_value%0#0"
      ]
    },
    "2505": {
      "op": "b test_cases.tuple_support.nested_tuples.NestedTuples.load_tuple_from_local_state_or_default_ternary_merge@3"
    },
    "2508": {
      "block": "test_cases.tuple_support.nested_tuples.NestedTuples.load_tuple_from_local_state_or_default_ternary_merge@3",
      "stack_in": [
        "ternary_result%0.a#0",
        "ternary_result%0.b#0",
        "tmp%3#0",
        "tmp%2#0",
        "maybe_value%0#0"
      ],
      "retsub": true,
      "op": "retsub",
      "defined_out": [
        "ternary_result%0.a#0",
        "ternary_result%0.b#0"
      ],
      "stack_out": [
        "ternary_result%0.a#0",
        "ternary_result%0.b#0",
        "tmp%3#0",
        "tmp%2#0",
        "maybe_value%0#0",
        "ternary_result%0.a#0",
        "ternary_result%0.b#0"
      ]
    },
    "2509": {
      "block": "test_cases.tuple_support.nested_tuples.NestedTuples.load_tuple_from_local_state_or_default_ternary_false@2",
      "stack_in": [
        "ternary_result%0.a#0",
        "ternary_result%0.b#0",
        "tmp%3#0",
        "tmp%2#0",
        "maybe_value%0#0"
      ],
      "op": "frame_dig 3",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "ternary_result%0.a#0",
        "ternary_result%0.b#0",
        "tmp%3#0",
        "tmp%2#0",
        "maybe_value%0#0",
        "tmp%2#0"
      ]
    },
    "2511": {
      "op": "frame_bury 0",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "ternary_result%0.a#0",
        "ternary_result%0.b#0",
        "tmp%3#0",
        "tmp%2#0",
        "maybe_value%0#0"
      ]
    },
    "2513": {
      "op": "frame_dig 2",
      "defined_out": [
        "tmp%2#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "ternary_result%0.a#0",
        "ternary_result%0.b#0",
        "tmp%3#0",
        "tmp%2#0",
        "maybe_value%0#0",
        "tmp%3#0"
      ]
    },
    "2515": {
      "op": "frame_bury 1",
      "defined_out": [
        "tmp%2#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "ternary_result%0.a#0",
        "ternary_result%0.b#0",
        "tmp%3#0",
        "tmp%2#0",
        "maybe_value%0#0"
      ]
    },
    "2517": {
      "op": "b test_cases.tuple_support.nested_tuples.NestedTuples.load_tuple_from_local_state_or_default_ternary_merge@3"
    },
    "2520": {
      "subroutine": "test_cases.tuple_support.nested_tuples.NestedTuples.mutate_local_tuple",
      "params": {},
      "block": "test_cases.tuple_support.nested_tuples.NestedTuples.mutate_local_tuple",
      "stack_in": [],
      "op": "proto 0 4"
    },
    "2523": {
      "op": "b test_cases.tuple_support.nested_tuples.NestedTuples.mutate_local_tuple_block@0"
    },
    "2526": {
      "block": "test_cases.tuple_support.nested_tuples.NestedTuples.mutate_local_tuple_block@0",
      "stack_in": [],
      "op": "intc_2 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "2527": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%0#0"
      ],
      "stack_out": [
        "aggregate%as_bytes%0#0"
      ]
    },
    "2528": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%len_u16%0#0"
      ],
      "stack_out": [
        "aggregate%len_u16%0#0"
      ]
    },
    "2531": {
      "op": "bytec 9 // 0x0000000000000000",
      "defined_out": [
        "0x0000000000000000",
        "aggregate%len_u16%0#0"
      ],
      "stack_out": [
        "aggregate%len_u16%0#0",
        "0x0000000000000000"
      ]
    },
    "2533": {
      "op": "concat",
      "defined_out": [
        "twm.arr#0"
      ],
      "stack_out": [
        "twm.arr#0"
      ]
    },
    "2534": {
      "op": "bytec_0 // 0x",
      "defined_out": [
        "0x",
        "twm.arr#0"
      ],
      "stack_out": [
        "twm.arr#0",
        "0x"
      ]
    },
    "2535": {
      "op": "bytec 7 // 0x0000000000000001",
      "defined_out": [
        "0x",
        "0x0000000000000001",
        "twm.arr#0"
      ],
      "stack_out": [
        "twm.arr#0",
        "0x",
        "0x0000000000000001"
      ]
    },
    "2537": {
      "op": "concat",
      "defined_out": [
        "tmp%0#0",
        "twm.arr#0"
      ],
      "stack_out": [
        "twm.arr#0",
        "tmp%0#0"
      ]
    },
    "2538": {
      "op": "dig 1",
      "defined_out": [
        "tmp%0#0",
        "twm.arr#0",
        "twm.arr#0 (copy)"
      ],
      "stack_out": [
        "twm.arr#0",
        "tmp%0#0",
        "twm.arr#0 (copy)"
      ]
    },
    "2540": {
      "op": "uncover 1",
      "stack_out": [
        "twm.arr#0",
        "twm.arr#0 (copy)",
        "tmp%0#0"
      ]
    },
    "2542": {
      "error": "max array length exceeded",
      "op": "concat // on error: max array length exceeded",
      "defined_out": [
        "concat%0#0",
        "twm.arr#0"
      ],
      "stack_out": [
        "twm.arr#0",
        "concat%0#0"
      ]
    },
    "2543": {
      "op": "cover 1",
      "stack_out": [
        "concat%0#0",
        "twm.arr#0"
      ]
    },
    "2545": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "concat%0#0",
        "twm.arr#0"
      ],
      "stack_out": [
        "concat%0#0",
        "twm.arr#0",
        "0"
      ]
    },
    "2546": {
      "op": "extract_uint16",
      "defined_out": [
        "concat%0#0",
        "extract_uint16%0#0"
      ],
      "stack_out": [
        "concat%0#0",
        "extract_uint16%0#0"
      ]
    },
    "2547": {
      "op": "intc_2 // 1",
      "stack_out": [
        "concat%0#0",
        "extract_uint16%0#0",
        "1"
      ]
    },
    "2548": {
      "op": "+",
      "defined_out": [
        "add%0#0",
        "concat%0#0"
      ],
      "stack_out": [
        "concat%0#0",
        "add%0#0"
      ]
    },
    "2549": {
      "op": "itob",
      "defined_out": [
        "as_bytes%0#0",
        "concat%0#0"
      ],
      "stack_out": [
        "concat%0#0",
        "as_bytes%0#0"
      ]
    },
    "2550": {
      "op": "extract 6 2",
      "defined_out": [
        "as_u16_bytes%0#0",
        "concat%0#0"
      ],
      "stack_out": [
        "concat%0#0",
        "as_u16_bytes%0#0"
      ]
    },
    "2553": {
      "op": "uncover 1",
      "stack_out": [
        "as_u16_bytes%0#0",
        "concat%0#0"
      ]
    },
    "2555": {
      "op": "intc_0 // 0",
      "stack_out": [
        "as_u16_bytes%0#0",
        "concat%0#0",
        "0"
      ]
    },
    "2556": {
      "op": "uncover 2",
      "stack_out": [
        "concat%0#0",
        "0",
        "as_u16_bytes%0#0"
      ]
    },
    "2558": {
      "op": "replace3",
      "defined_out": [
        "twm.arr#0"
      ],
      "stack_out": [
        "twm.arr#0"
      ]
    },
    "2559": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "twm.arr#0",
        "0x"
      ]
    },
    "2560": {
      "op": "pushbytes 0x0000000000000002",
      "defined_out": [
        "0x",
        "0x0000000000000002",
        "twm.arr#0"
      ],
      "stack_out": [
        "twm.arr#0",
        "0x",
        "0x0000000000000002"
      ]
    },
    "2570": {
      "op": "concat",
      "defined_out": [
        "tmp%1#0",
        "twm.arr#0"
      ],
      "stack_out": [
        "twm.arr#0",
        "tmp%1#0"
      ]
    },
    "2571": {
      "op": "dig 1",
      "stack_out": [
        "twm.arr#0",
        "tmp%1#0",
        "twm.arr#0 (copy)"
      ]
    },
    "2573": {
      "op": "uncover 1",
      "stack_out": [
        "twm.arr#0",
        "twm.arr#0 (copy)",
        "tmp%1#0"
      ]
    },
    "2575": {
      "error": "max array length exceeded",
      "op": "concat // on error: max array length exceeded",
      "defined_out": [
        "concat%1#0",
        "twm.arr#0"
      ],
      "stack_out": [
        "twm.arr#0",
        "concat%1#0"
      ]
    },
    "2576": {
      "op": "cover 1",
      "stack_out": [
        "concat%1#0",
        "twm.arr#0"
      ]
    },
    "2578": {
      "op": "intc_0 // 0",
      "stack_out": [
        "concat%1#0",
        "twm.arr#0",
        "0"
      ]
    },
    "2579": {
      "op": "extract_uint16",
      "defined_out": [
        "concat%1#0",
        "extract_uint16%1#0"
      ],
      "stack_out": [
        "concat%1#0",
        "extract_uint16%1#0"
      ]
    },
    "2580": {
      "op": "intc_2 // 1",
      "stack_out": [
        "concat%1#0",
        "extract_uint16%1#0",
        "1"
      ]
    },
    "2581": {
      "op": "+",
      "defined_out": [
        "add%1#0",
        "concat%1#0"
      ],
      "stack_out": [
        "concat%1#0",
        "add%1#0"
      ]
    },
    "2582": {
      "op": "itob",
      "defined_out": [
        "as_bytes%1#0",
        "concat%1#0"
      ],
      "stack_out": [
        "concat%1#0",
        "as_bytes%1#0"
      ]
    },
    "2583": {
      "op": "extract 6 2",
      "defined_out": [
        "as_u16_bytes%1#0",
        "concat%1#0"
      ],
      "stack_out": [
        "concat%1#0",
        "as_u16_bytes%1#0"
      ]
    },
    "2586": {
      "op": "uncover 1",
      "stack_out": [
        "as_u16_bytes%1#0",
        "concat%1#0"
      ]
    },
    "2588": {
      "op": "intc_0 // 0",
      "stack_out": [
        "as_u16_bytes%1#0",
        "concat%1#0",
        "0"
      ]
    },
    "2589": {
      "op": "uncover 2",
      "stack_out": [
        "concat%1#0",
        "0",
        "as_u16_bytes%1#0"
      ]
    },
    "2591": {
      "op": "replace3",
      "defined_out": [
        "twm.arr#0"
      ],
      "stack_out": [
        "twm.arr#0"
      ]
    },
    "2592": {
      "op": "intc_2 // 1",
      "stack_out": [
        "twm.arr#0",
        "1"
      ]
    },
    "2593": {
      "error": "Step cannot be zero",
      "op": "assert // Step cannot be zero",
      "stack_out": [
        "twm.arr#0"
      ]
    },
    "2594": {
      "op": "intc_0 // 0",
      "defined_out": [
        "twm.arr#0"
      ],
      "stack_out": [
        "twm.arr#0",
        "i#0"
      ]
    },
    "2595": {
      "op": "b test_cases.tuple_support.nested_tuples.NestedTuples.mutate_local_tuple_for_header@1"
    },
    "2598": {
      "block": "test_cases.tuple_support.nested_tuples.NestedTuples.mutate_local_tuple_for_header@1",
      "stack_in": [
        "twm.arr#0",
        "i#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "twm.arr#0",
        "i#0",
        "i#0"
      ]
    },
    "2600": {
      "op": "pushint 3 // 3",
      "defined_out": [
        "3",
        "i#0"
      ],
      "stack_out": [
        "twm.arr#0",
        "i#0",
        "i#0",
        "3"
      ]
    },
    "2602": {
      "op": "<",
      "defined_out": [
        "continue_looping%0#0",
        "i#0"
      ],
      "stack_out": [
        "twm.arr#0",
        "i#0",
        "continue_looping%0#0"
      ]
    },
    "2603": {
      "op": "bz test_cases.tuple_support.nested_tuples.NestedTuples.mutate_local_tuple_after_for@4",
      "stack_out": [
        "twm.arr#0",
        "i#0"
      ]
    },
    "2606": {
      "op": "b test_cases.tuple_support.nested_tuples.NestedTuples.mutate_local_tuple_for_body@2"
    },
    "2609": {
      "block": "test_cases.tuple_support.nested_tuples.NestedTuples.mutate_local_tuple_for_body@2",
      "stack_in": [
        "twm.arr#0",
        "i#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "twm.arr#0"
      ],
      "stack_out": [
        "twm.arr#0",
        "i#0",
        "twm.arr#0"
      ]
    },
    "2611": {
      "op": "dup",
      "defined_out": [
        "twm.arr#0",
        "twm.arr#0 (copy)"
      ],
      "stack_out": [
        "twm.arr#0",
        "i#0",
        "twm.arr#0",
        "twm.arr#0 (copy)"
      ]
    },
    "2612": {
      "op": "len",
      "defined_out": [
        "aggregate%total_length%0#0",
        "twm.arr#0"
      ],
      "stack_out": [
        "twm.arr#0",
        "i#0",
        "twm.arr#0",
        "aggregate%total_length%0#0"
      ]
    },
    "2613": {
      "op": "cover 1",
      "stack_out": [
        "twm.arr#0",
        "i#0",
        "aggregate%total_length%0#0",
        "twm.arr#0"
      ]
    },
    "2615": {
      "op": "intc_3 // 2",
      "defined_out": [
        "2",
        "aggregate%total_length%0#0",
        "twm.arr#0"
      ],
      "stack_out": [
        "twm.arr#0",
        "i#0",
        "aggregate%total_length%0#0",
        "twm.arr#0",
        "2"
      ]
    },
    "2616": {
      "op": "uncover 2",
      "stack_out": [
        "twm.arr#0",
        "i#0",
        "twm.arr#0",
        "2",
        "aggregate%total_length%0#0"
      ]
    },
    "2618": {
      "op": "substring3",
      "defined_out": [
        "aggregate%array_trimmed%0#0",
        "twm.arr#0"
      ],
      "stack_out": [
        "twm.arr#0",
        "i#0",
        "aggregate%array_trimmed%0#0"
      ]
    },
    "2619": {
      "op": "frame_dig 1",
      "defined_out": [
        "aggregate%array_trimmed%0#0",
        "i#0",
        "twm.arr#0"
      ],
      "stack_out": [
        "twm.arr#0",
        "i#0",
        "aggregate%array_trimmed%0#0",
        "i#0"
      ]
    },
    "2621": {
      "op": "dup",
      "defined_out": [
        "aggregate%array_trimmed%0#0",
        "i#0",
        "i#0 (copy)",
        "twm.arr#0"
      ],
      "stack_out": [
        "twm.arr#0",
        "i#0",
        "aggregate%array_trimmed%0#0",
        "i#0 (copy)",
        "i#0 (copy)"
      ]
    },
    "2622": {
      "op": "cover 2",
      "stack_out": [
        "twm.arr#0",
        "i#0",
        "i#0",
        "aggregate%array_trimmed%0#0",
        "i#0 (copy)"
      ]
    },
    "2624": {
      "op": "intc_1 // 8",
      "defined_out": [
        "8",
        "aggregate%array_trimmed%0#0",
        "i#0",
        "i#0 (copy)",
        "twm.arr#0"
      ],
      "stack_out": [
        "twm.arr#0",
        "i#0",
        "i#0",
        "aggregate%array_trimmed%0#0",
        "i#0 (copy)",
        "8"
      ]
    },
    "2625": {
      "op": "*",
      "defined_out": [
        "aggregate%array_trimmed%0#0",
        "aggregate%bytes_offset%0#0",
        "i#0",
        "twm.arr#0"
      ],
      "stack_out": [
        "twm.arr#0",
        "i#0",
        "i#0",
        "aggregate%array_trimmed%0#0",
        "aggregate%bytes_offset%0#0"
      ]
    },
    "2626": {
      "op": "intc_1 // 8",
      "stack_out": [
        "twm.arr#0",
        "i#0",
        "i#0",
        "aggregate%array_trimmed%0#0",
        "aggregate%bytes_offset%0#0",
        "8"
      ]
    },
    "2627": {
      "error": "index access is out of bounds",
      "op": "extract3 // on error: index access is out of bounds",
      "defined_out": [
        "i#0",
        "reinterpret_biguint%0#0",
        "twm.arr#0"
      ],
      "stack_out": [
        "twm.arr#0",
        "i#0",
        "i#0",
        "reinterpret_biguint%0#0"
      ]
    },
    "2628": {
      "op": "uncover 1",
      "stack_out": [
        "twm.arr#0",
        "i#0",
        "reinterpret_biguint%0#0",
        "i#0"
      ]
    },
    "2630": {
      "op": "itob",
      "defined_out": [
        "i#0",
        "reinterpret_biguint%0#0",
        "tmp%2#0",
        "twm.arr#0"
      ],
      "stack_out": [
        "twm.arr#0",
        "i#0",
        "reinterpret_biguint%0#0",
        "tmp%2#0"
      ]
    },
    "2631": {
      "op": "b==",
      "defined_out": [
        "i#0",
        "tmp%3#0",
        "twm.arr#0"
      ],
      "stack_out": [
        "twm.arr#0",
        "i#0",
        "tmp%3#0"
      ]
    },
    "2632": {
      "op": "assert",
      "stack_out": [
        "twm.arr#0",
        "i#0"
      ]
    },
    "2633": {
      "op": "b test_cases.tuple_support.nested_tuples.NestedTuples.mutate_local_tuple_for_footer@3"
    },
    "2636": {
      "block": "test_cases.tuple_support.nested_tuples.NestedTuples.mutate_local_tuple_for_footer@3",
      "stack_in": [
        "twm.arr#0",
        "i#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "twm.arr#0",
        "i#0",
        "i#0"
      ]
    },
    "2638": {
      "op": "intc_2 // 1",
      "defined_out": [
        "1",
        "i#0"
      ],
      "stack_out": [
        "twm.arr#0",
        "i#0",
        "i#0",
        "1"
      ]
    },
    "2639": {
      "op": "+",
      "stack_out": [
        "twm.arr#0",
        "i#0",
        "i#0"
      ]
    },
    "2640": {
      "op": "frame_bury 1",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "twm.arr#0",
        "i#0"
      ]
    },
    "2642": {
      "op": "b test_cases.tuple_support.nested_tuples.NestedTuples.mutate_local_tuple_for_header@1"
    },
    "2645": {
      "block": "test_cases.tuple_support.nested_tuples.NestedTuples.mutate_local_tuple_after_for@4",
      "stack_in": [
        "twm.arr#0",
        "i#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "twm.arr#0"
      ],
      "stack_out": [
        "twm.arr#0",
        "i#0",
        "twm.arr#0"
      ]
    },
    "2647": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "twm.arr#0"
      ],
      "stack_out": [
        "twm.arr#0",
        "i#0",
        "twm.arr#0",
        "0"
      ]
    },
    "2648": {
      "op": "bytec_0 // 0x",
      "defined_out": [
        "0",
        "0x",
        "twm.arr#0"
      ],
      "stack_out": [
        "twm.arr#0",
        "i#0",
        "twm.arr#0",
        "0",
        "0x"
      ]
    },
    "2649": {
      "op": "bytec_0 // \"\"",
      "defined_out": [
        "\"\"",
        "0",
        "0x",
        "twm.arr#0"
      ],
      "stack_out": [
        "twm.arr#0",
        "i#0",
        "twm.arr#0",
        "0",
        "0x",
        "\"\""
      ]
    },
    "2650": {
      "op": "uncover 5"
    },
    "2652": {
      "op": "uncover 5"
    },
    "2654": {
      "retsub": true,
      "op": "retsub"
    },
    "2655": {
      "subroutine": "test_cases.tuple_support.nested_tuples.NestedTuples.mutate_tuple_in_storage_currently_supported_method",
      "params": {},
      "block": "test_cases.tuple_support.nested_tuples.NestedTuples.mutate_tuple_in_storage_currently_supported_method",
      "stack_in": [],
      "op": "b test_cases.tuple_support.nested_tuples.NestedTuples.mutate_tuple_in_storage_currently_supported_method_block@0"
    },
    "2658": {
      "block": "test_cases.tuple_support.nested_tuples.NestedTuples.mutate_tuple_in_storage_currently_supported_method_block@0",
      "stack_in": [],
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "2659": {
      "op": "bytec 6 // \"twm\"",
      "defined_out": [
        "\"twm\"",
        "0"
      ],
      "stack_out": [
        "0",
        "\"twm\""
      ]
    },
    "2661": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "2662": {
      "error": "check self.twm exists",
      "op": "assert // check self.twm exists",
      "stack_out": [
        "maybe_value%0#0"
      ]
    },
    "2663": {
      "op": "dup",
      "defined_out": [
        "maybe_value%0#0",
        "maybe_value%0#0 (copy)"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%0#0 (copy)"
      ]
    },
    "2664": {
      "op": "intc_0 // 0",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%0#0 (copy)",
        "0"
      ]
    },
    "2665": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%extract_uint16%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "aggregate%extract_uint16%0#0"
      ]
    },
    "2666": {
      "op": "cover 1",
      "stack_out": [
        "aggregate%extract_uint16%0#0",
        "maybe_value%0#0"
      ]
    },
    "2668": {
      "op": "dup",
      "stack_out": [
        "aggregate%extract_uint16%0#0",
        "maybe_value%0#0",
        "maybe_value%0#0 (copy)"
      ]
    },
    "2669": {
      "op": "intc_3 // 2",
      "defined_out": [
        "2",
        "aggregate%extract_uint16%0#0",
        "maybe_value%0#0",
        "maybe_value%0#0 (copy)"
      ],
      "stack_out": [
        "aggregate%extract_uint16%0#0",
        "maybe_value%0#0",
        "maybe_value%0#0 (copy)",
        "2"
      ]
    },
    "2670": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%extract_uint16%0#0",
        "aggregate%extract_uint16%1#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "aggregate%extract_uint16%0#0",
        "maybe_value%0#0",
        "aggregate%extract_uint16%1#0"
      ]
    },
    "2671": {
      "op": "uncover 1",
      "stack_out": [
        "aggregate%extract_uint16%0#0",
        "aggregate%extract_uint16%1#0",
        "maybe_value%0#0"
      ]
    },
    "2673": {
      "op": "uncover 2",
      "stack_out": [
        "aggregate%extract_uint16%1#0",
        "maybe_value%0#0",
        "aggregate%extract_uint16%0#0"
      ]
    },
    "2675": {
      "op": "uncover 2",
      "stack_out": [
        "maybe_value%0#0",
        "aggregate%extract_uint16%0#0",
        "aggregate%extract_uint16%1#0"
      ]
    },
    "2677": {
      "op": "substring3",
      "defined_out": [
        "arr2#0"
      ],
      "stack_out": [
        "arr2#0"
      ]
    },
    "2678": {
      "op": "bytec_0 // 0x",
      "defined_out": [
        "0x",
        "arr2#0"
      ],
      "stack_out": [
        "arr2#0",
        "0x"
      ]
    },
    "2679": {
      "op": "bytec 7 // 0x0000000000000001",
      "defined_out": [
        "0x",
        "0x0000000000000001",
        "arr2#0"
      ],
      "stack_out": [
        "arr2#0",
        "0x",
        "0x0000000000000001"
      ]
    },
    "2681": {
      "op": "concat",
      "defined_out": [
        "arr2#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "arr2#0",
        "tmp%4#0"
      ]
    },
    "2682": {
      "op": "dig 1",
      "defined_out": [
        "arr2#0",
        "arr2#0 (copy)",
        "tmp%4#0"
      ],
      "stack_out": [
        "arr2#0",
        "tmp%4#0",
        "arr2#0 (copy)"
      ]
    },
    "2684": {
      "op": "uncover 1",
      "stack_out": [
        "arr2#0",
        "arr2#0 (copy)",
        "tmp%4#0"
      ]
    },
    "2686": {
      "error": "max array length exceeded",
      "op": "concat // on error: max array length exceeded",
      "defined_out": [
        "arr2#0",
        "concat%0#0"
      ],
      "stack_out": [
        "arr2#0",
        "concat%0#0"
      ]
    },
    "2687": {
      "op": "cover 1",
      "stack_out": [
        "concat%0#0",
        "arr2#0"
      ]
    },
    "2689": {
      "op": "intc_0 // 0",
      "stack_out": [
        "concat%0#0",
        "arr2#0",
        "0"
      ]
    },
    "2690": {
      "op": "extract_uint16",
      "defined_out": [
        "concat%0#0",
        "extract_uint16%0#0"
      ],
      "stack_out": [
        "concat%0#0",
        "extract_uint16%0#0"
      ]
    },
    "2691": {
      "op": "intc_2 // 1",
      "defined_out": [
        "1",
        "concat%0#0",
        "extract_uint16%0#0"
      ],
      "stack_out": [
        "concat%0#0",
        "extract_uint16%0#0",
        "1"
      ]
    },
    "2692": {
      "op": "+",
      "defined_out": [
        "add%0#0",
        "concat%0#0"
      ],
      "stack_out": [
        "concat%0#0",
        "add%0#0"
      ]
    },
    "2693": {
      "op": "itob",
      "defined_out": [
        "as_bytes%0#0",
        "concat%0#0"
      ],
      "stack_out": [
        "concat%0#0",
        "as_bytes%0#0"
      ]
    },
    "2694": {
      "op": "extract 6 2",
      "defined_out": [
        "as_u16_bytes%0#0",
        "concat%0#0"
      ],
      "stack_out": [
        "concat%0#0",
        "as_u16_bytes%0#0"
      ]
    },
    "2697": {
      "op": "uncover 1",
      "stack_out": [
        "as_u16_bytes%0#0",
        "concat%0#0"
      ]
    },
    "2699": {
      "op": "intc_0 // 0",
      "stack_out": [
        "as_u16_bytes%0#0",
        "concat%0#0",
        "0"
      ]
    },
    "2700": {
      "op": "uncover 2",
      "stack_out": [
        "concat%0#0",
        "0",
        "as_u16_bytes%0#0"
      ]
    },
    "2702": {
      "op": "replace3",
      "defined_out": [
        "arr2#0"
      ],
      "stack_out": [
        "arr2#0"
      ]
    },
    "2703": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr2#0",
        "0"
      ]
    },
    "2704": {
      "op": "bytec 6 // \"twm\"",
      "stack_out": [
        "arr2#0",
        "0",
        "\"twm\""
      ]
    },
    "2706": {
      "op": "app_global_get_ex",
      "defined_out": [
        "arr2#0",
        "maybe_exists%1#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "arr2#0",
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "2707": {
      "error": "check self.twm exists",
      "op": "assert // check self.twm exists",
      "stack_out": [
        "arr2#0",
        "maybe_value%1#0"
      ]
    },
    "2708": {
      "op": "dup",
      "defined_out": [
        "arr2#0",
        "maybe_value%1#0",
        "maybe_value%1#0 (copy)"
      ],
      "stack_out": [
        "arr2#0",
        "maybe_value%1#0",
        "maybe_value%1#0 (copy)"
      ]
    },
    "2709": {
      "op": "intc_3 // 2",
      "stack_out": [
        "arr2#0",
        "maybe_value%1#0",
        "maybe_value%1#0 (copy)",
        "2"
      ]
    },
    "2710": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%extract_uint16%8#0",
        "arr2#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "arr2#0",
        "maybe_value%1#0",
        "aggregate%extract_uint16%8#0"
      ]
    },
    "2711": {
      "op": "cover 1",
      "stack_out": [
        "arr2#0",
        "aggregate%extract_uint16%8#0",
        "maybe_value%1#0"
      ]
    },
    "2713": {
      "op": "dup",
      "stack_out": [
        "arr2#0",
        "aggregate%extract_uint16%8#0",
        "maybe_value%1#0",
        "maybe_value%1#0 (copy)"
      ]
    },
    "2714": {
      "op": "len",
      "defined_out": [
        "aggregate%extract_uint16%8#0",
        "aggregate%len%2#0",
        "arr2#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "arr2#0",
        "aggregate%extract_uint16%8#0",
        "maybe_value%1#0",
        "aggregate%len%2#0"
      ]
    },
    "2715": {
      "op": "cover 1",
      "stack_out": [
        "arr2#0",
        "aggregate%extract_uint16%8#0",
        "aggregate%len%2#0",
        "maybe_value%1#0"
      ]
    },
    "2717": {
      "op": "uncover 2",
      "stack_out": [
        "arr2#0",
        "aggregate%len%2#0",
        "maybe_value%1#0",
        "aggregate%extract_uint16%8#0"
      ]
    },
    "2719": {
      "op": "uncover 2",
      "stack_out": [
        "arr2#0",
        "maybe_value%1#0",
        "aggregate%extract_uint16%8#0",
        "aggregate%len%2#0"
      ]
    },
    "2721": {
      "op": "substring3",
      "defined_out": [
        "aggregate%substring3%5#0",
        "arr2#0"
      ],
      "stack_out": [
        "arr2#0",
        "aggregate%substring3%5#0"
      ]
    },
    "2722": {
      "op": "dup",
      "defined_out": [
        "aggregate%substring3%5#0",
        "aggregate%substring3%5#0 (copy)",
        "arr2#0"
      ],
      "stack_out": [
        "arr2#0",
        "aggregate%substring3%5#0",
        "aggregate%substring3%5#0 (copy)"
      ]
    },
    "2723": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr2#0",
        "aggregate%substring3%5#0",
        "aggregate%substring3%5#0 (copy)",
        "0"
      ]
    },
    "2724": {
      "op": "intc_1 // 8",
      "defined_out": [
        "0",
        "8",
        "aggregate%substring3%5#0",
        "aggregate%substring3%5#0 (copy)",
        "arr2#0"
      ],
      "stack_out": [
        "arr2#0",
        "aggregate%substring3%5#0",
        "aggregate%substring3%5#0 (copy)",
        "0",
        "8"
      ]
    },
    "2725": {
      "op": "extract3",
      "defined_out": [
        "aggregate%extract%1#0",
        "aggregate%substring3%5#0",
        "arr2#0"
      ],
      "stack_out": [
        "arr2#0",
        "aggregate%substring3%5#0",
        "aggregate%extract%1#0"
      ]
    },
    "2726": {
      "op": "btoi",
      "defined_out": [
        "aggregate%item0%1#0",
        "aggregate%substring3%5#0",
        "arr2#0"
      ],
      "stack_out": [
        "arr2#0",
        "aggregate%substring3%5#0",
        "aggregate%item0%1#0"
      ]
    },
    "2727": {
      "op": "cover 1",
      "stack_out": [
        "arr2#0",
        "aggregate%item0%1#0",
        "aggregate%substring3%5#0"
      ]
    },
    "2729": {
      "op": "dup",
      "stack_out": [
        "arr2#0",
        "aggregate%item0%1#0",
        "aggregate%substring3%5#0",
        "aggregate%substring3%5#0 (copy)"
      ]
    },
    "2730": {
      "op": "intc_1 // 8",
      "stack_out": [
        "arr2#0",
        "aggregate%item0%1#0",
        "aggregate%substring3%5#0",
        "aggregate%substring3%5#0 (copy)",
        "8"
      ]
    },
    "2731": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%extract_uint16%9#0",
        "aggregate%item0%1#0",
        "aggregate%substring3%5#0",
        "arr2#0"
      ],
      "stack_out": [
        "arr2#0",
        "aggregate%item0%1#0",
        "aggregate%substring3%5#0",
        "aggregate%extract_uint16%9#0"
      ]
    },
    "2732": {
      "op": "cover 1",
      "stack_out": [
        "arr2#0",
        "aggregate%item0%1#0",
        "aggregate%extract_uint16%9#0",
        "aggregate%substring3%5#0"
      ]
    },
    "2734": {
      "op": "dup",
      "stack_out": [
        "arr2#0",
        "aggregate%item0%1#0",
        "aggregate%extract_uint16%9#0",
        "aggregate%substring3%5#0",
        "aggregate%substring3%5#0 (copy)"
      ]
    },
    "2735": {
      "op": "pushint 10 // 10",
      "defined_out": [
        "10",
        "aggregate%extract_uint16%9#0",
        "aggregate%item0%1#0",
        "aggregate%substring3%5#0",
        "aggregate%substring3%5#0 (copy)",
        "arr2#0"
      ],
      "stack_out": [
        "arr2#0",
        "aggregate%item0%1#0",
        "aggregate%extract_uint16%9#0",
        "aggregate%substring3%5#0",
        "aggregate%substring3%5#0 (copy)",
        "10"
      ]
    },
    "2737": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%extract_uint16%10#0",
        "aggregate%extract_uint16%9#0",
        "aggregate%item0%1#0",
        "aggregate%substring3%5#0",
        "arr2#0"
      ],
      "stack_out": [
        "arr2#0",
        "aggregate%item0%1#0",
        "aggregate%extract_uint16%9#0",
        "aggregate%substring3%5#0",
        "aggregate%extract_uint16%10#0"
      ]
    },
    "2738": {
      "op": "dig 1",
      "stack_out": [
        "arr2#0",
        "aggregate%item0%1#0",
        "aggregate%extract_uint16%9#0",
        "aggregate%substring3%5#0",
        "aggregate%extract_uint16%10#0",
        "aggregate%substring3%5#0 (copy)"
      ]
    },
    "2740": {
      "op": "uncover 3",
      "stack_out": [
        "arr2#0",
        "aggregate%item0%1#0",
        "aggregate%substring3%5#0",
        "aggregate%extract_uint16%10#0",
        "aggregate%substring3%5#0 (copy)",
        "aggregate%extract_uint16%9#0"
      ]
    },
    "2742": {
      "op": "uncover 2",
      "stack_out": [
        "arr2#0",
        "aggregate%item0%1#0",
        "aggregate%substring3%5#0",
        "aggregate%substring3%5#0 (copy)",
        "aggregate%extract_uint16%9#0",
        "aggregate%extract_uint16%10#0"
      ]
    },
    "2744": {
      "op": "substring3",
      "defined_out": [
        "aggregate%item0%1#0",
        "aggregate%substring3%5#0",
        "aggregate%substring3%6#0",
        "arr2#0"
      ],
      "stack_out": [
        "arr2#0",
        "aggregate%item0%1#0",
        "aggregate%substring3%5#0",
        "aggregate%substring3%6#0"
      ]
    },
    "2745": {
      "op": "extract 2 0",
      "defined_out": [
        "aggregate%item0%1#0",
        "aggregate%item1%1#0",
        "aggregate%substring3%5#0",
        "arr2#0"
      ],
      "stack_out": [
        "arr2#0",
        "aggregate%item0%1#0",
        "aggregate%substring3%5#0",
        "aggregate%item1%1#0"
      ]
    },
    "2748": {
      "op": "cover 1",
      "stack_out": [
        "arr2#0",
        "aggregate%item0%1#0",
        "aggregate%item1%1#0",
        "aggregate%substring3%5#0"
      ]
    },
    "2750": {
      "op": "dup",
      "stack_out": [
        "arr2#0",
        "aggregate%item0%1#0",
        "aggregate%item1%1#0",
        "aggregate%substring3%5#0",
        "aggregate%substring3%5#0 (copy)"
      ]
    },
    "2751": {
      "op": "pushint 10 // 10",
      "stack_out": [
        "arr2#0",
        "aggregate%item0%1#0",
        "aggregate%item1%1#0",
        "aggregate%substring3%5#0",
        "aggregate%substring3%5#0 (copy)",
        "10"
      ]
    },
    "2753": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%extract_uint16%11#0",
        "aggregate%item0%1#0",
        "aggregate%item1%1#0",
        "aggregate%substring3%5#0",
        "arr2#0"
      ],
      "stack_out": [
        "arr2#0",
        "aggregate%item0%1#0",
        "aggregate%item1%1#0",
        "aggregate%substring3%5#0",
        "aggregate%extract_uint16%11#0"
      ]
    },
    "2754": {
      "op": "cover 1",
      "stack_out": [
        "arr2#0",
        "aggregate%item0%1#0",
        "aggregate%item1%1#0",
        "aggregate%extract_uint16%11#0",
        "aggregate%substring3%5#0"
      ]
    },
    "2756": {
      "op": "dup",
      "stack_out": [
        "arr2#0",
        "aggregate%item0%1#0",
        "aggregate%item1%1#0",
        "aggregate%extract_uint16%11#0",
        "aggregate%substring3%5#0",
        "aggregate%substring3%5#0 (copy)"
      ]
    },
    "2757": {
      "op": "len",
      "defined_out": [
        "aggregate%extract_uint16%11#0",
        "aggregate%item0%1#0",
        "aggregate%item1%1#0",
        "aggregate%len%3#0",
        "aggregate%substring3%5#0",
        "arr2#0"
      ],
      "stack_out": [
        "arr2#0",
        "aggregate%item0%1#0",
        "aggregate%item1%1#0",
        "aggregate%extract_uint16%11#0",
        "aggregate%substring3%5#0",
        "aggregate%len%3#0"
      ]
    },
    "2758": {
      "op": "cover 1",
      "stack_out": [
        "arr2#0",
        "aggregate%item0%1#0",
        "aggregate%item1%1#0",
        "aggregate%extract_uint16%11#0",
        "aggregate%len%3#0",
        "aggregate%substring3%5#0"
      ]
    },
    "2760": {
      "op": "uncover 2",
      "stack_out": [
        "arr2#0",
        "aggregate%item0%1#0",
        "aggregate%item1%1#0",
        "aggregate%len%3#0",
        "aggregate%substring3%5#0",
        "aggregate%extract_uint16%11#0"
      ]
    },
    "2762": {
      "op": "uncover 2",
      "stack_out": [
        "arr2#0",
        "aggregate%item0%1#0",
        "aggregate%item1%1#0",
        "aggregate%substring3%5#0",
        "aggregate%extract_uint16%11#0",
        "aggregate%len%3#0"
      ]
    },
    "2764": {
      "op": "substring3",
      "defined_out": [
        "aggregate%item0%1#0",
        "aggregate%item1%1#0",
        "aggregate%substring3%7#0",
        "arr2#0"
      ],
      "stack_out": [
        "arr2#0",
        "aggregate%item0%1#0",
        "aggregate%item1%1#0",
        "aggregate%substring3%7#0"
      ]
    },
    "2765": {
      "op": "extract 2 0",
      "defined_out": [
        "aggregate%item1%1#0",
        "aggregate%item2%1#0",
        "arr2#0",
        "awst_tmp%1#0"
      ],
      "stack_out": [
        "arr2#0",
        "awst_tmp%1#0",
        "aggregate%item1%1#0",
        "aggregate%item2%1#0"
      ]
    },
    "2768": {
      "op": "uncover 1",
      "stack_out": [
        "arr2#0",
        "awst_tmp%1#0",
        "aggregate%item2%1#0",
        "aggregate%item1%1#0"
      ]
    },
    "2770": {
      "op": "cover 2",
      "defined_out": [
        "aggregate%item2%1#0",
        "arr2#0",
        "awst_tmp%1#0",
        "awst_tmp%2#0"
      ],
      "stack_out": [
        "arr2#0",
        "awst_tmp%2#0",
        "awst_tmp%1#0",
        "aggregate%item2%1#0"
      ]
    },
    "2772": {
      "op": "cover 2",
      "defined_out": [
        "arr2#0",
        "awst_tmp%1#0",
        "awst_tmp%2#0",
        "awst_tmp%3#0"
      ],
      "stack_out": [
        "arr2#0",
        "awst_tmp%3#0",
        "awst_tmp%2#0",
        "awst_tmp%1#0"
      ]
    },
    "2774": {
      "op": "pushint 4 // 4",
      "defined_out": [
        "4",
        "arr2#0",
        "awst_tmp%1#0",
        "awst_tmp%2#0",
        "awst_tmp%3#0"
      ],
      "stack_out": [
        "arr2#0",
        "awst_tmp%3#0",
        "awst_tmp%2#0",
        "awst_tmp%1#0",
        "4"
      ]
    },
    "2776": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%0#0",
        "arr2#0",
        "awst_tmp%1#0",
        "awst_tmp%2#0",
        "awst_tmp%3#0"
      ],
      "stack_out": [
        "arr2#0",
        "awst_tmp%3#0",
        "awst_tmp%2#0",
        "awst_tmp%1#0",
        "aggregate%as_bytes%0#0"
      ]
    },
    "2777": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%offset_as_uint16%0#0",
        "arr2#0",
        "awst_tmp%1#0",
        "awst_tmp%2#0",
        "awst_tmp%3#0"
      ],
      "stack_out": [
        "arr2#0",
        "awst_tmp%3#0",
        "awst_tmp%2#0",
        "awst_tmp%1#0",
        "aggregate%offset_as_uint16%0#0"
      ]
    },
    "2780": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "arr2#0",
        "awst_tmp%3#0",
        "awst_tmp%2#0",
        "awst_tmp%1#0",
        "aggregate%offset_as_uint16%0#0",
        "0x"
      ]
    },
    "2781": {
      "op": "uncover 1",
      "stack_out": [
        "arr2#0",
        "awst_tmp%3#0",
        "awst_tmp%2#0",
        "awst_tmp%1#0",
        "0x",
        "aggregate%offset_as_uint16%0#0"
      ]
    },
    "2783": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%1#0",
        "arr2#0",
        "awst_tmp%1#0",
        "awst_tmp%2#0",
        "awst_tmp%3#0"
      ],
      "stack_out": [
        "arr2#0",
        "awst_tmp%3#0",
        "awst_tmp%2#0",
        "awst_tmp%1#0",
        "aggregate%head%1#0"
      ]
    },
    "2784": {
      "op": "cover 4",
      "stack_out": [
        "aggregate%head%1#0",
        "arr2#0",
        "awst_tmp%3#0",
        "awst_tmp%2#0",
        "awst_tmp%1#0"
      ]
    },
    "2786": {
      "op": "dig 3",
      "stack_out": [
        "aggregate%head%1#0",
        "arr2#0",
        "awst_tmp%3#0",
        "awst_tmp%2#0",
        "awst_tmp%1#0",
        "arr2#0 (copy)"
      ]
    },
    "2788": {
      "op": "len",
      "defined_out": [
        "aggregate%data_length%0#0",
        "aggregate%head%1#0",
        "arr2#0",
        "awst_tmp%1#0",
        "awst_tmp%2#0",
        "awst_tmp%3#0"
      ],
      "stack_out": [
        "aggregate%head%1#0",
        "arr2#0",
        "awst_tmp%3#0",
        "awst_tmp%2#0",
        "awst_tmp%1#0",
        "aggregate%data_length%0#0"
      ]
    },
    "2789": {
      "op": "pushint 4 // 4",
      "stack_out": [
        "aggregate%head%1#0",
        "arr2#0",
        "awst_tmp%3#0",
        "awst_tmp%2#0",
        "awst_tmp%1#0",
        "aggregate%data_length%0#0",
        "4"
      ]
    },
    "2791": {
      "op": "+",
      "defined_out": [
        "aggregate%current_tail_offset%0#0",
        "aggregate%head%1#0",
        "arr2#0",
        "awst_tmp%1#0",
        "awst_tmp%2#0",
        "awst_tmp%3#0"
      ],
      "stack_out": [
        "aggregate%head%1#0",
        "arr2#0",
        "awst_tmp%3#0",
        "awst_tmp%2#0",
        "awst_tmp%1#0",
        "aggregate%current_tail_offset%0#0"
      ]
    },
    "2792": {
      "op": "cover 3",
      "stack_out": [
        "aggregate%head%1#0",
        "arr2#0",
        "aggregate%current_tail_offset%0#0",
        "awst_tmp%3#0",
        "awst_tmp%2#0",
        "awst_tmp%1#0"
      ]
    },
    "2794": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(uint64)%0#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%head%1#0",
        "arr2#0",
        "awst_tmp%2#0",
        "awst_tmp%3#0"
      ],
      "stack_out": [
        "aggregate%head%1#0",
        "arr2#0",
        "aggregate%current_tail_offset%0#0",
        "awst_tmp%3#0",
        "awst_tmp%2#0",
        "aggregate%as_Encoded(uint64)%0#0"
      ]
    },
    "2795": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "aggregate%head%1#0",
        "arr2#0",
        "aggregate%current_tail_offset%0#0",
        "awst_tmp%3#0",
        "awst_tmp%2#0",
        "aggregate%as_Encoded(uint64)%0#0",
        "0x"
      ]
    },
    "2796": {
      "op": "uncover 1",
      "stack_out": [
        "aggregate%head%1#0",
        "arr2#0",
        "aggregate%current_tail_offset%0#0",
        "awst_tmp%3#0",
        "awst_tmp%2#0",
        "0x",
        "aggregate%as_Encoded(uint64)%0#0"
      ]
    },
    "2798": {
      "op": "concat",
      "defined_out": [
        "aggregate%current_tail_offset%0#0",
        "aggregate%head%1#0",
        "aggregate%head%2#0",
        "arr2#0",
        "awst_tmp%2#0",
        "awst_tmp%3#0"
      ],
      "stack_out": [
        "aggregate%head%1#0",
        "arr2#0",
        "aggregate%current_tail_offset%0#0",
        "awst_tmp%3#0",
        "awst_tmp%2#0",
        "aggregate%head%2#0"
      ]
    },
    "2799": {
      "op": "dig 1",
      "defined_out": [
        "aggregate%current_tail_offset%0#0",
        "aggregate%head%1#0",
        "aggregate%head%2#0",
        "arr2#0",
        "awst_tmp%2#0",
        "awst_tmp%2#0 (copy)",
        "awst_tmp%3#0"
      ],
      "stack_out": [
        "aggregate%head%1#0",
        "arr2#0",
        "aggregate%current_tail_offset%0#0",
        "awst_tmp%3#0",
        "awst_tmp%2#0",
        "aggregate%head%2#0",
        "awst_tmp%2#0 (copy)"
      ]
    },
    "2801": {
      "op": "len",
      "defined_out": [
        "aggregate%current_tail_offset%0#0",
        "aggregate%head%1#0",
        "aggregate%head%2#0",
        "aggregate%length%0#0",
        "arr2#0",
        "awst_tmp%2#0",
        "awst_tmp%3#0"
      ],
      "stack_out": [
        "aggregate%head%1#0",
        "arr2#0",
        "aggregate%current_tail_offset%0#0",
        "awst_tmp%3#0",
        "awst_tmp%2#0",
        "aggregate%head%2#0",
        "aggregate%length%0#0"
      ]
    },
    "2802": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%1#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%head%1#0",
        "aggregate%head%2#0",
        "arr2#0",
        "awst_tmp%2#0",
        "awst_tmp%3#0"
      ],
      "stack_out": [
        "aggregate%head%1#0",
        "arr2#0",
        "aggregate%current_tail_offset%0#0",
        "awst_tmp%3#0",
        "awst_tmp%2#0",
        "aggregate%head%2#0",
        "aggregate%as_bytes%1#0"
      ]
    },
    "2803": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%current_tail_offset%0#0",
        "aggregate%head%1#0",
        "aggregate%head%2#0",
        "aggregate%length_uint16%0#0",
        "arr2#0",
        "awst_tmp%2#0",
        "awst_tmp%3#0"
      ],
      "stack_out": [
        "aggregate%head%1#0",
        "arr2#0",
        "aggregate%current_tail_offset%0#0",
        "awst_tmp%3#0",
        "awst_tmp%2#0",
        "aggregate%head%2#0",
        "aggregate%length_uint16%0#0"
      ]
    },
    "2806": {
      "op": "uncover 2",
      "stack_out": [
        "aggregate%head%1#0",
        "arr2#0",
        "aggregate%current_tail_offset%0#0",
        "awst_tmp%3#0",
        "aggregate%head%2#0",
        "aggregate%length_uint16%0#0",
        "awst_tmp%2#0"
      ]
    },
    "2808": {
      "op": "concat",
      "defined_out": [
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%head%1#0",
        "aggregate%head%2#0",
        "arr2#0",
        "awst_tmp%3#0"
      ],
      "stack_out": [
        "aggregate%head%1#0",
        "arr2#0",
        "aggregate%current_tail_offset%0#0",
        "awst_tmp%3#0",
        "aggregate%head%2#0",
        "aggregate%as_Encoded(len+uint8[])%0#0"
      ]
    },
    "2809": {
      "op": "pushint 12 // 12",
      "defined_out": [
        "12",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%head%1#0",
        "aggregate%head%2#0",
        "arr2#0",
        "awst_tmp%3#0"
      ],
      "stack_out": [
        "aggregate%head%1#0",
        "arr2#0",
        "aggregate%current_tail_offset%0#0",
        "awst_tmp%3#0",
        "aggregate%head%2#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "12"
      ]
    },
    "2811": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%as_bytes%2#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%head%1#0",
        "aggregate%head%2#0",
        "arr2#0",
        "awst_tmp%3#0"
      ],
      "stack_out": [
        "aggregate%head%1#0",
        "arr2#0",
        "aggregate%current_tail_offset%0#0",
        "awst_tmp%3#0",
        "aggregate%head%2#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%as_bytes%2#0"
      ]
    },
    "2812": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%head%1#0",
        "aggregate%head%2#0",
        "aggregate%offset_as_uint16%1#0",
        "arr2#0",
        "awst_tmp%3#0"
      ],
      "stack_out": [
        "aggregate%head%1#0",
        "arr2#0",
        "aggregate%current_tail_offset%0#0",
        "awst_tmp%3#0",
        "aggregate%head%2#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%offset_as_uint16%1#0"
      ]
    },
    "2815": {
      "op": "uncover 2",
      "stack_out": [
        "aggregate%head%1#0",
        "arr2#0",
        "aggregate%current_tail_offset%0#0",
        "awst_tmp%3#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%offset_as_uint16%1#0",
        "aggregate%head%2#0"
      ]
    },
    "2817": {
      "op": "uncover 1",
      "stack_out": [
        "aggregate%head%1#0",
        "arr2#0",
        "aggregate%current_tail_offset%0#0",
        "awst_tmp%3#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%head%2#0",
        "aggregate%offset_as_uint16%1#0"
      ]
    },
    "2819": {
      "op": "concat",
      "defined_out": [
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%head%1#0",
        "aggregate%head%3#0",
        "arr2#0",
        "awst_tmp%3#0"
      ],
      "stack_out": [
        "aggregate%head%1#0",
        "arr2#0",
        "aggregate%current_tail_offset%0#0",
        "awst_tmp%3#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%head%3#0"
      ]
    },
    "2820": {
      "op": "cover 1",
      "stack_out": [
        "aggregate%head%1#0",
        "arr2#0",
        "aggregate%current_tail_offset%0#0",
        "awst_tmp%3#0",
        "aggregate%head%3#0",
        "aggregate%as_Encoded(len+uint8[])%0#0"
      ]
    },
    "2822": {
      "op": "dup",
      "defined_out": [
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%as_Encoded(len+uint8[])%0#0 (copy)",
        "aggregate%current_tail_offset%0#0",
        "aggregate%head%1#0",
        "aggregate%head%3#0",
        "arr2#0",
        "awst_tmp%3#0"
      ],
      "stack_out": [
        "aggregate%head%1#0",
        "arr2#0",
        "aggregate%current_tail_offset%0#0",
        "awst_tmp%3#0",
        "aggregate%head%3#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%as_Encoded(len+uint8[])%0#0 (copy)"
      ]
    },
    "2823": {
      "op": "len",
      "defined_out": [
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%data_length%1#0",
        "aggregate%head%1#0",
        "aggregate%head%3#0",
        "arr2#0",
        "awst_tmp%3#0"
      ],
      "stack_out": [
        "aggregate%head%1#0",
        "arr2#0",
        "aggregate%current_tail_offset%0#0",
        "awst_tmp%3#0",
        "aggregate%head%3#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%data_length%1#0"
      ]
    },
    "2824": {
      "op": "pushint 12 // 12",
      "stack_out": [
        "aggregate%head%1#0",
        "arr2#0",
        "aggregate%current_tail_offset%0#0",
        "awst_tmp%3#0",
        "aggregate%head%3#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%data_length%1#0",
        "12"
      ]
    },
    "2826": {
      "op": "+",
      "defined_out": [
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%current_tail_offset%1#0",
        "aggregate%head%1#0",
        "aggregate%head%3#0",
        "arr2#0",
        "awst_tmp%3#0"
      ],
      "stack_out": [
        "aggregate%head%1#0",
        "arr2#0",
        "aggregate%current_tail_offset%0#0",
        "awst_tmp%3#0",
        "aggregate%head%3#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%current_tail_offset%1#0"
      ]
    },
    "2827": {
      "op": "dig 3",
      "defined_out": [
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%current_tail_offset%1#0",
        "aggregate%head%1#0",
        "aggregate%head%3#0",
        "arr2#0",
        "awst_tmp%3#0",
        "awst_tmp%3#0 (copy)"
      ],
      "stack_out": [
        "aggregate%head%1#0",
        "arr2#0",
        "aggregate%current_tail_offset%0#0",
        "awst_tmp%3#0",
        "aggregate%head%3#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%current_tail_offset%1#0",
        "awst_tmp%3#0 (copy)"
      ]
    },
    "2829": {
      "op": "len",
      "defined_out": [
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%current_tail_offset%1#0",
        "aggregate%head%1#0",
        "aggregate%head%3#0",
        "aggregate%length%1#0",
        "arr2#0",
        "awst_tmp%3#0"
      ],
      "stack_out": [
        "aggregate%head%1#0",
        "arr2#0",
        "aggregate%current_tail_offset%0#0",
        "awst_tmp%3#0",
        "aggregate%head%3#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%current_tail_offset%1#0",
        "aggregate%length%1#0"
      ]
    },
    "2830": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%as_bytes%3#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%current_tail_offset%1#0",
        "aggregate%head%1#0",
        "aggregate%head%3#0",
        "arr2#0",
        "awst_tmp%3#0"
      ],
      "stack_out": [
        "aggregate%head%1#0",
        "arr2#0",
        "aggregate%current_tail_offset%0#0",
        "awst_tmp%3#0",
        "aggregate%head%3#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%current_tail_offset%1#0",
        "aggregate%as_bytes%3#0"
      ]
    },
    "2831": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%current_tail_offset%1#0",
        "aggregate%head%1#0",
        "aggregate%head%3#0",
        "aggregate%length_uint16%1#0",
        "arr2#0",
        "awst_tmp%3#0"
      ],
      "stack_out": [
        "aggregate%head%1#0",
        "arr2#0",
        "aggregate%current_tail_offset%0#0",
        "awst_tmp%3#0",
        "aggregate%head%3#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%current_tail_offset%1#0",
        "aggregate%length_uint16%1#0"
      ]
    },
    "2834": {
      "op": "uncover 4",
      "stack_out": [
        "aggregate%head%1#0",
        "arr2#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%head%3#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%current_tail_offset%1#0",
        "aggregate%length_uint16%1#0",
        "awst_tmp%3#0"
      ]
    },
    "2836": {
      "op": "concat",
      "defined_out": [
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%current_tail_offset%1#0",
        "aggregate%encoded_value%1#0",
        "aggregate%head%1#0",
        "aggregate%head%3#0",
        "arr2#0"
      ],
      "stack_out": [
        "aggregate%head%1#0",
        "arr2#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%head%3#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%current_tail_offset%1#0",
        "aggregate%encoded_value%1#0"
      ]
    },
    "2837": {
      "op": "cover 1",
      "defined_out": [
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%as_Encoded(len+utf8[])%0#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%current_tail_offset%1#0",
        "aggregate%head%1#0",
        "aggregate%head%3#0",
        "arr2#0"
      ],
      "stack_out": [
        "aggregate%head%1#0",
        "arr2#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%head%3#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%as_Encoded(len+utf8[])%0#0",
        "aggregate%current_tail_offset%1#0"
      ]
    },
    "2839": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%as_Encoded(len+utf8[])%0#0",
        "aggregate%as_bytes%4#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%head%1#0",
        "aggregate%head%3#0",
        "arr2#0"
      ],
      "stack_out": [
        "aggregate%head%1#0",
        "arr2#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%head%3#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%as_Encoded(len+utf8[])%0#0",
        "aggregate%as_bytes%4#0"
      ]
    },
    "2840": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%as_Encoded(len+utf8[])%0#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%head%1#0",
        "aggregate%head%3#0",
        "aggregate%offset_as_uint16%2#0",
        "arr2#0"
      ],
      "stack_out": [
        "aggregate%head%1#0",
        "arr2#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%head%3#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%as_Encoded(len+utf8[])%0#0",
        "aggregate%offset_as_uint16%2#0"
      ]
    },
    "2843": {
      "op": "uncover 3",
      "stack_out": [
        "aggregate%head%1#0",
        "arr2#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%as_Encoded(len+utf8[])%0#0",
        "aggregate%offset_as_uint16%2#0",
        "aggregate%head%3#0"
      ]
    },
    "2845": {
      "op": "uncover 1",
      "stack_out": [
        "aggregate%head%1#0",
        "arr2#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%as_Encoded(len+utf8[])%0#0",
        "aggregate%head%3#0",
        "aggregate%offset_as_uint16%2#0"
      ]
    },
    "2847": {
      "op": "concat",
      "defined_out": [
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%as_Encoded(len+utf8[])%0#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%head%1#0",
        "aggregate%head%4#0",
        "arr2#0"
      ],
      "stack_out": [
        "aggregate%head%1#0",
        "arr2#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%as_Encoded(len+uint8[])%0#0",
        "aggregate%as_Encoded(len+utf8[])%0#0",
        "aggregate%head%4#0"
      ]
    },
    "2848": {
      "op": "uncover 2",
      "stack_out": [
        "aggregate%head%1#0",
        "arr2#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%as_Encoded(len+utf8[])%0#0",
        "aggregate%head%4#0",
        "aggregate%as_Encoded(len+uint8[])%0#0"
      ]
    },
    "2850": {
      "op": "concat",
      "defined_out": [
        "aggregate%as_Encoded(len+utf8[])%0#0",
        "aggregate%concat%0#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%head%1#0",
        "arr2#0"
      ],
      "stack_out": [
        "aggregate%head%1#0",
        "arr2#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%as_Encoded(len+utf8[])%0#0",
        "aggregate%concat%0#0"
      ]
    },
    "2851": {
      "op": "uncover 1",
      "stack_out": [
        "aggregate%head%1#0",
        "arr2#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%concat%0#0",
        "aggregate%as_Encoded(len+utf8[])%0#0"
      ]
    },
    "2853": {
      "op": "concat",
      "defined_out": [
        "aggregate%as_Encoded(uint64,(len+uint8[]),(len+utf8[]))%0#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%head%1#0",
        "arr2#0"
      ],
      "stack_out": [
        "aggregate%head%1#0",
        "arr2#0",
        "aggregate%current_tail_offset%0#0",
        "aggregate%as_Encoded(uint64,(len+uint8[]),(len+utf8[]))%0#0"
      ]
    },
    "2854": {
      "op": "uncover 1",
      "stack_out": [
        "aggregate%head%1#0",
        "arr2#0",
        "aggregate%as_Encoded(uint64,(len+uint8[]),(len+utf8[]))%0#0",
        "aggregate%current_tail_offset%0#0"
      ]
    },
    "2856": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(uint64,(len+uint8[]),(len+utf8[]))%0#0",
        "aggregate%as_bytes%5#0",
        "aggregate%head%1#0",
        "arr2#0"
      ],
      "stack_out": [
        "aggregate%head%1#0",
        "arr2#0",
        "aggregate%as_Encoded(uint64,(len+uint8[]),(len+utf8[]))%0#0",
        "aggregate%as_bytes%5#0"
      ]
    },
    "2857": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%as_Encoded(uint64,(len+uint8[]),(len+utf8[]))%0#0",
        "aggregate%head%1#0",
        "aggregate%offset_as_uint16%3#0",
        "arr2#0"
      ],
      "stack_out": [
        "aggregate%head%1#0",
        "arr2#0",
        "aggregate%as_Encoded(uint64,(len+uint8[]),(len+utf8[]))%0#0",
        "aggregate%offset_as_uint16%3#0"
      ]
    },
    "2860": {
      "op": "uncover 3",
      "stack_out": [
        "arr2#0",
        "aggregate%as_Encoded(uint64,(len+uint8[]),(len+utf8[]))%0#0",
        "aggregate%offset_as_uint16%3#0",
        "aggregate%head%1#0"
      ]
    },
    "2862": {
      "op": "uncover 1",
      "stack_out": [
        "arr2#0",
        "aggregate%as_Encoded(uint64,(len+uint8[]),(len+utf8[]))%0#0",
        "aggregate%head%1#0",
        "aggregate%offset_as_uint16%3#0"
      ]
    },
    "2864": {
      "op": "concat",
      "defined_out": [
        "aggregate%as_Encoded(uint64,(len+uint8[]),(len+utf8[]))%0#0",
        "aggregate%head%5#0",
        "arr2#0"
      ],
      "stack_out": [
        "arr2#0",
        "aggregate%as_Encoded(uint64,(len+uint8[]),(len+utf8[]))%0#0",
        "aggregate%head%5#0"
      ]
    },
    "2865": {
      "op": "uncover 2",
      "stack_out": [
        "aggregate%as_Encoded(uint64,(len+uint8[]),(len+utf8[]))%0#0",
        "aggregate%head%5#0",
        "arr2#0"
      ]
    },
    "2867": {
      "op": "concat",
      "defined_out": [
        "aggregate%as_Encoded(uint64,(len+uint8[]),(len+utf8[]))%0#0",
        "aggregate%concat%2#0"
      ],
      "stack_out": [
        "aggregate%as_Encoded(uint64,(len+uint8[]),(len+utf8[]))%0#0",
        "aggregate%concat%2#0"
      ]
    },
    "2868": {
      "op": "uncover 1",
      "stack_out": [
        "aggregate%concat%2#0",
        "aggregate%as_Encoded(uint64,(len+uint8[]),(len+utf8[]))%0#0"
      ]
    },
    "2870": {
      "op": "concat",
      "defined_out": [
        "encoded_for_storage%0#0"
      ],
      "stack_out": [
        "encoded_for_storage%0#0"
      ]
    },
    "2871": {
      "op": "bytec 6 // \"twm\"",
      "stack_out": [
        "encoded_for_storage%0#0",
        "\"twm\""
      ]
    },
    "2873": {
      "op": "uncover 1",
      "stack_out": [
        "\"twm\"",
        "encoded_for_storage%0#0"
      ]
    },
    "2875": {
      "op": "app_global_put",
      "stack_out": []
    },
    "2876": {
      "retsub": true,
      "op": "retsub"
    },
    "2877": {
      "subroutine": "test_cases.tuple_support.nested_tuples.NestedTuples.run_tests",
      "params": {},
      "block": "test_cases.tuple_support.nested_tuples.NestedTuples.run_tests",
      "stack_in": [],
      "op": "b test_cases.tuple_support.nested_tuples.NestedTuples.run_tests_block@0"
    },
    "2880": {
      "block": "test_cases.tuple_support.nested_tuples.NestedTuples.run_tests_block@0",
      "stack_in": [],
      "op": "bytec_3 // \"Hi\"",
      "defined_out": [
        "\"Hi\""
      ],
      "stack_out": [
        "\"Hi\""
      ]
    },
    "2881": {
      "op": "bytec_2 // \"There\"",
      "defined_out": [
        "\"Hi\"",
        "\"There\""
      ],
      "stack_out": [
        "\"Hi\"",
        "\"There\""
      ]
    },
    "2882": {
      "callsub": "test_cases.tuple_support.nested_tuples.test_swap",
      "op": "callsub test_swap",
      "defined_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0"
      ]
    },
    "2885": {
      "op": "cover 1",
      "stack_out": [
        "awst_tmp%1#0",
        "awst_tmp%0#0"
      ]
    },
    "2887": {
      "op": "bytec_2 // \"There\"",
      "stack_out": [
        "awst_tmp%1#0",
        "awst_tmp%0#0",
        "\"There\""
      ]
    },
    "2888": {
      "op": "==",
      "defined_out": [
        "awst_tmp%1#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "awst_tmp%1#0",
        "tmp%0#0"
      ]
    },
    "2889": {
      "op": "uncover 1",
      "stack_out": [
        "tmp%0#0",
        "awst_tmp%1#0"
      ]
    },
    "2891": {
      "op": "bytec_3 // \"Hi\"",
      "stack_out": [
        "tmp%0#0",
        "awst_tmp%1#0",
        "\"Hi\""
      ]
    },
    "2892": {
      "op": "==",
      "defined_out": [
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0"
      ]
    },
    "2893": {
      "op": "&&",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "2894": {
      "op": "assert",
      "stack_out": []
    },
    "2895": {
      "op": "bytec_2 // \"There\"",
      "stack_out": [
        "\"There\""
      ]
    },
    "2896": {
      "op": "bytec_2 // \"There\"",
      "stack_out": [
        "\"There\"",
        "\"There\""
      ]
    },
    "2897": {
      "op": "==",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "2898": {
      "op": "assert",
      "stack_out": []
    },
    "2899": {
      "op": "bytec_3 // \"Hi\"",
      "stack_out": [
        "\"Hi\""
      ]
    },
    "2900": {
      "op": "intc_0 // 0",
      "defined_out": [
        "\"Hi\"",
        "0"
      ],
      "stack_out": [
        "\"Hi\"",
        "0"
      ]
    },
    "2901": {
      "op": "intc_3 // 2",
      "defined_out": [
        "\"Hi\"",
        "0",
        "2"
      ],
      "stack_out": [
        "\"Hi\"",
        "0",
        "2"
      ]
    },
    "2902": {
      "op": "intc_2 // 1",
      "defined_out": [
        "\"Hi\"",
        "0",
        "1",
        "2"
      ],
      "stack_out": [
        "\"Hi\"",
        "0",
        "2",
        "1"
      ]
    },
    "2903": {
      "op": "bytec_3 // \"Hi\"",
      "stack_out": [
        "\"Hi\"",
        "0",
        "2",
        "1",
        "\"Hi\""
      ]
    },
    "2904": {
      "op": "bytec_2 // \"There\"",
      "stack_out": [
        "\"Hi\"",
        "0",
        "2",
        "1",
        "\"Hi\"",
        "\"There\""
      ]
    },
    "2905": {
      "op": "bytec_2 // \"There\"",
      "stack_out": [
        "\"Hi\"",
        "0",
        "2",
        "1",
        "\"Hi\"",
        "\"There\"",
        "\"There\""
      ]
    },
    "2906": {
      "callsub": "test_cases.tuple_support.nested_tuples.test_rearrange",
      "op": "callsub test_rearrange",
      "defined_out": [
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0"
      ]
    },
    "2909": {
      "op": "cover 4",
      "stack_out": [
        "tmp%8#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0"
      ]
    },
    "2911": {
      "op": "cover 3",
      "stack_out": [
        "tmp%8#0",
        "tmp%7#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0"
      ]
    },
    "2913": {
      "op": "cover 2",
      "stack_out": [
        "tmp%8#0",
        "tmp%7#0",
        "tmp%6#0",
        "tmp%4#0",
        "tmp%5#0"
      ]
    },
    "2915": {
      "op": "cover 1",
      "stack_out": [
        "tmp%8#0",
        "tmp%7#0",
        "tmp%6#0",
        "tmp%5#0",
        "tmp%4#0"
      ]
    },
    "2917": {
      "op": "cover 2",
      "defined_out": [
        "a#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "tmp%7#0",
        "a#0",
        "tmp%6#0",
        "tmp%5#0"
      ]
    },
    "2919": {
      "op": "cover 3",
      "defined_out": [
        "a#0",
        "b#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "b#0",
        "tmp%7#0",
        "a#0",
        "tmp%6#0"
      ]
    },
    "2921": {
      "op": "cover 4",
      "defined_out": [
        "a#0",
        "b#0",
        "c#0",
        "tmp%7#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "c#0",
        "tmp%8#0",
        "b#0",
        "tmp%7#0",
        "a#0"
      ]
    },
    "2923": {
      "op": "uncover 1",
      "stack_out": [
        "c#0",
        "tmp%8#0",
        "b#0",
        "a#0",
        "tmp%7#0"
      ]
    },
    "2925": {
      "op": "cover 4",
      "defined_out": [
        "a#0",
        "b#0",
        "c#0",
        "d#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "d#0",
        "c#0",
        "tmp%8#0",
        "b#0",
        "a#0"
      ]
    },
    "2927": {
      "op": "uncover 2",
      "stack_out": [
        "d#0",
        "c#0",
        "b#0",
        "a#0",
        "tmp%8#0"
      ]
    },
    "2929": {
      "op": "cover 4",
      "defined_out": [
        "a#0",
        "b#0",
        "c#0",
        "d#0",
        "e#0"
      ],
      "stack_out": [
        "e#0",
        "d#0",
        "c#0",
        "b#0",
        "a#0"
      ]
    },
    "2931": {
      "op": "bytec_3 // \"Hi\"",
      "stack_out": [
        "e#0",
        "d#0",
        "c#0",
        "b#0",
        "a#0",
        "\"Hi\""
      ]
    },
    "2932": {
      "op": "==",
      "defined_out": [
        "b#0",
        "c#0",
        "d#0",
        "e#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "e#0",
        "d#0",
        "c#0",
        "b#0",
        "tmp%9#0"
      ]
    },
    "2933": {
      "op": "uncover 1",
      "stack_out": [
        "e#0",
        "d#0",
        "c#0",
        "tmp%9#0",
        "b#0"
      ]
    },
    "2935": {
      "op": "intc_0 // 0",
      "stack_out": [
        "e#0",
        "d#0",
        "c#0",
        "tmp%9#0",
        "b#0",
        "0"
      ]
    },
    "2936": {
      "op": "==",
      "defined_out": [
        "c#0",
        "d#0",
        "e#0",
        "tmp%10#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "e#0",
        "d#0",
        "c#0",
        "tmp%9#0",
        "tmp%10#0"
      ]
    },
    "2937": {
      "op": "&&",
      "defined_out": [
        "c#0",
        "d#0",
        "e#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "e#0",
        "d#0",
        "c#0",
        "tmp%11#0"
      ]
    },
    "2938": {
      "op": "assert",
      "stack_out": [
        "e#0",
        "d#0",
        "c#0"
      ]
    },
    "2939": {
      "op": "intc_3 // 2",
      "stack_out": [
        "e#0",
        "d#0",
        "c#0",
        "2"
      ]
    },
    "2940": {
      "op": "==",
      "defined_out": [
        "d#0",
        "e#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "e#0",
        "d#0",
        "tmp%12#0"
      ]
    },
    "2941": {
      "op": "uncover 1",
      "stack_out": [
        "e#0",
        "tmp%12#0",
        "d#0"
      ]
    },
    "2943": {
      "op": "intc_2 // 1",
      "stack_out": [
        "e#0",
        "tmp%12#0",
        "d#0",
        "1"
      ]
    },
    "2944": {
      "op": "==",
      "defined_out": [
        "e#0",
        "tmp%12#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "e#0",
        "tmp%12#0",
        "tmp%13#0"
      ]
    },
    "2945": {
      "op": "&&",
      "defined_out": [
        "e#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "e#0",
        "tmp%14#0"
      ]
    },
    "2946": {
      "op": "assert",
      "stack_out": [
        "e#0"
      ]
    },
    "2947": {
      "op": "bytec_2 // \"There\"",
      "stack_out": [
        "e#0",
        "\"There\""
      ]
    },
    "2948": {
      "op": "==",
      "defined_out": [
        "tmp%15#0"
      ],
      "stack_out": [
        "tmp%15#0"
      ]
    },
    "2949": {
      "op": "assert",
      "stack_out": []
    },
    "2950": {
      "op": "intc_2 // 1",
      "stack_out": [
        "1"
      ]
    },
    "2951": {
      "op": "intc_3 // 2",
      "stack_out": [
        "1",
        "2"
      ]
    },
    "2952": {
      "callsub": "test_cases.tuple_support.nested_tuples.test_intrinsics",
      "op": "callsub test_intrinsics",
      "stack_out": []
    },
    "2955": {
      "callsub": "test_cases.tuple_support.nested_tuples.test_nested_slicing",
      "op": "callsub test_nested_slicing"
    },
    "2958": {
      "op": "intc_2 // 1",
      "stack_out": [
        "1"
      ]
    },
    "2959": {
      "op": "intc_2 // 1",
      "stack_out": [
        "1",
        "1"
      ]
    },
    "2960": {
      "callsub": "test_cases.tuple_support.nested_tuples.test_nested_singles",
      "op": "callsub test_nested_singles",
      "stack_out": []
    },
    "2963": {
      "op": "intc_2 // 1",
      "stack_out": [
        "1"
      ]
    },
    "2964": {
      "op": "intc_0 // 0",
      "stack_out": [
        "1",
        "0"
      ]
    },
    "2965": {
      "callsub": "test_cases.tuple_support.nested_tuples.test_nested_singles",
      "op": "callsub test_nested_singles",
      "stack_out": []
    },
    "2968": {
      "callsub": "test_cases.tuple_support.nested_tuples.test_nested_mutation",
      "op": "callsub test_nested_mutation"
    },
    "2971": {
      "op": "intc_2 // 1",
      "stack_out": [
        "1"
      ]
    },
    "2972": {
      "op": "intc_2 // 1",
      "stack_out": [
        "1",
        "1"
      ]
    },
    "2973": {
      "op": "==",
      "defined_out": [
        "tmp%16#0"
      ],
      "stack_out": [
        "tmp%16#0"
      ]
    },
    "2974": {
      "op": "bytec_3 // \"Hi\"",
      "stack_out": [
        "tmp%16#0",
        "\"Hi\""
      ]
    },
    "2975": {
      "op": "bytec_3 // \"Hi\"",
      "stack_out": [
        "tmp%16#0",
        "\"Hi\"",
        "\"Hi\""
      ]
    },
    "2976": {
      "op": "==",
      "defined_out": [
        "tmp%16#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "tmp%16#0",
        "tmp%17#0"
      ]
    },
    "2977": {
      "op": "bytec_2 // \"There\"",
      "stack_out": [
        "tmp%16#0",
        "tmp%17#0",
        "\"There\""
      ]
    },
    "2978": {
      "op": "bytec_2 // \"There\"",
      "stack_out": [
        "tmp%16#0",
        "tmp%17#0",
        "\"There\"",
        "\"There\""
      ]
    },
    "2979": {
      "op": "==",
      "defined_out": [
        "tmp%16#0",
        "tmp%17#0",
        "tmp%18#0"
      ],
      "stack_out": [
        "tmp%16#0",
        "tmp%17#0",
        "tmp%18#0"
      ]
    },
    "2980": {
      "op": "&&",
      "defined_out": [
        "tmp%16#0",
        "tmp%19#0"
      ],
      "stack_out": [
        "tmp%16#0",
        "tmp%19#0"
      ]
    },
    "2981": {
      "op": "&&",
      "defined_out": [
        "tmp%20#0"
      ],
      "stack_out": [
        "tmp%20#0"
      ]
    },
    "2982": {
      "op": "assert",
      "stack_out": []
    },
    "2983": {
      "callsub": "test_cases.tuple_support.nested_tuples.test_nested_iteration",
      "op": "callsub test_nested_iteration"
    },
    "2986": {
      "callsub": "test_cases.tuple_support.nested_tuples.NestedTuples.test_single_evaluation_nested",
      "op": "callsub test_single_evaluation_nested"
    },
    "2989": {
      "op": "intc_2 // 1",
      "stack_out": [
        "1"
      ]
    },
    "2990": {
      "retsub": true,
      "op": "retsub"
    },
    "2991": {
      "subroutine": "test_cases.tuple_support.nested_tuples.NestedTuples.nested_tuple_params",
      "params": {
        "args.0#0": "bytes",
        "args.1.0#0": "bytes",
        "args.1.1.0#0": "uint64"
      },
      "block": "test_cases.tuple_support.nested_tuples.NestedTuples.nested_tuple_params",
      "stack_in": [],
      "op": "proto 3 3"
    },
    "2994": {
      "op": "b test_cases.tuple_support.nested_tuples.NestedTuples.nested_tuple_params_block@0"
    },
    "2997": {
      "block": "test_cases.tuple_support.nested_tuples.NestedTuples.nested_tuple_params_block@0",
      "stack_in": [],
      "op": "frame_dig -3",
      "defined_out": [
        "s#0"
      ],
      "stack_out": [
        "s#0"
      ]
    },
    "2999": {
      "op": "frame_dig -2",
      "defined_out": [
        "b#0",
        "s#0"
      ],
      "stack_out": [
        "s#0",
        "b#0"
      ]
    },
    "3001": {
      "op": "frame_dig -1",
      "defined_out": [
        "args.1.1.0#0 (copy)",
        "b#0",
        "s#0"
      ],
      "stack_out": [
        "s#0",
        "b#0",
        "args.1.1.0#0 (copy)"
      ]
    },
    "3003": {
      "op": "cover 1",
      "defined_out": [
        "b#0",
        "s#0",
        "u#0"
      ],
      "stack_out": [
        "s#0",
        "u#0",
        "b#0"
      ]
    },
    "3005": {
      "op": "uncover 2",
      "stack_out": [
        "u#0",
        "b#0",
        "s#0"
      ]
    },
    "3007": {
      "op": "uncover 2",
      "stack_out": [
        "b#0",
        "s#0",
        "u#0"
      ]
    },
    "3009": {
      "retsub": true,
      "op": "retsub"
    },
    "3010": {
      "subroutine": "test_cases.tuple_support.nested_tuples.NestedTuples.named_tuple",
      "params": {
        "args.a#0": "uint64",
        "args.b#0": "bytes",
        "args.c#0": "bytes"
      },
      "block": "test_cases.tuple_support.nested_tuples.NestedTuples.named_tuple",
      "stack_in": [],
      "op": "proto 3 3"
    },
    "3013": {
      "op": "b test_cases.tuple_support.nested_tuples.NestedTuples.named_tuple_block@0"
    },
    "3016": {
      "block": "test_cases.tuple_support.nested_tuples.NestedTuples.named_tuple_block@0",
      "stack_in": [],
      "op": "frame_dig -3",
      "defined_out": [
        "a#0"
      ],
      "stack_out": [
        "a#0"
      ]
    },
    "3018": {
      "op": "frame_dig -2",
      "defined_out": [
        "a#0",
        "b#0"
      ],
      "stack_out": [
        "a#0",
        "b#0"
      ]
    },
    "3020": {
      "op": "frame_dig -1",
      "defined_out": [
        "a#0",
        "b#0",
        "c#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "c#0"
      ]
    },
    "3022": {
      "op": "uncover 2",
      "stack_out": [
        "b#0",
        "c#0",
        "a#0"
      ]
    },
    "3024": {
      "op": "uncover 2",
      "stack_out": [
        "c#0",
        "a#0",
        "b#0"
      ]
    },
    "3026": {
      "op": "uncover 2",
      "stack_out": [
        "a#0",
        "b#0",
        "c#0"
      ]
    },
    "3028": {
      "retsub": true,
      "op": "retsub"
    },
    "3029": {
      "subroutine": "test_cases.tuple_support.nested_tuples.NestedTuples.nested_named_tuple_params",
      "params": {
        "args.foo#0": "uint64",
        "args.foo_arc#0": "bytes",
        "args.child.a#0": "uint64",
        "args.child.b#0": "bytes",
        "args.child.c#0": "bytes"
      },
      "block": "test_cases.tuple_support.nested_tuples.NestedTuples.nested_named_tuple_params",
      "stack_in": [],
      "op": "proto 5 5"
    },
    "3032": {
      "op": "b test_cases.tuple_support.nested_tuples.NestedTuples.nested_named_tuple_params_block@0"
    },
    "3035": {
      "block": "test_cases.tuple_support.nested_tuples.NestedTuples.nested_named_tuple_params_block@0",
      "stack_in": [],
      "op": "frame_dig -5",
      "defined_out": [
        "foo#0"
      ],
      "stack_out": [
        "foo#0"
      ]
    },
    "3037": {
      "op": "frame_dig -4",
      "defined_out": [
        "foo#0",
        "foo_arc#0"
      ],
      "stack_out": [
        "foo#0",
        "foo_arc#0"
      ]
    },
    "3039": {
      "op": "frame_dig -3",
      "defined_out": [
        "a#0",
        "foo#0",
        "foo_arc#0"
      ],
      "stack_out": [
        "foo#0",
        "foo_arc#0",
        "a#0"
      ]
    },
    "3041": {
      "op": "frame_dig -2",
      "defined_out": [
        "a#0",
        "b#0",
        "foo#0",
        "foo_arc#0"
      ],
      "stack_out": [
        "foo#0",
        "foo_arc#0",
        "a#0",
        "b#0"
      ]
    },
    "3043": {
      "op": "frame_dig -1",
      "defined_out": [
        "a#0",
        "b#0",
        "c#0",
        "foo#0",
        "foo_arc#0"
      ],
      "stack_out": [
        "foo#0",
        "foo_arc#0",
        "a#0",
        "b#0",
        "c#0"
      ]
    },
    "3045": {
      "op": "uncover 4",
      "stack_out": [
        "foo_arc#0",
        "a#0",
        "b#0",
        "c#0",
        "foo#0"
      ]
    },
    "3047": {
      "op": "uncover 4",
      "stack_out": [
        "a#0",
        "b#0",
        "c#0",
        "foo#0",
        "foo_arc#0"
      ]
    },
    "3049": {
      "op": "uncover 4",
      "stack_out": [
        "b#0",
        "c#0",
        "foo#0",
        "foo_arc#0",
        "a#0"
      ]
    },
    "3051": {
      "op": "uncover 4",
      "stack_out": [
        "c#0",
        "foo#0",
        "foo_arc#0",
        "a#0",
        "b#0"
      ]
    },
    "3053": {
      "op": "uncover 4",
      "stack_out": [
        "foo#0",
        "foo_arc#0",
        "a#0",
        "b#0",
        "c#0"
      ]
    },
    "3055": {
      "retsub": true,
      "op": "retsub"
    },
    "3056": {
      "subroutine": "test_cases.tuple_support.nested_tuples.NestedTuples.build_nested",
      "params": {},
      "block": "build_nested",
      "stack_in": [],
      "op": "b build_nested_block@0"
    },
    "3059": {
      "block": "build_nested_block@0",
      "stack_in": [],
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "3060": {
      "op": "bytec 4 // \"build_nested_call_count\"",
      "defined_out": [
        "\"build_nested_call_count\"",
        "0"
      ],
      "stack_out": [
        "0",
        "\"build_nested_call_count\""
      ]
    },
    "3062": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "3063": {
      "error": "check self.build_nested_call_count exists",
      "op": "assert // check self.build_nested_call_count exists",
      "stack_out": [
        "maybe_value%0#0"
      ]
    },
    "3064": {
      "op": "intc_2 // 1",
      "defined_out": [
        "1",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "1"
      ]
    },
    "3065": {
      "op": "+",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "3066": {
      "op": "bytec 4 // \"build_nested_call_count\"",
      "stack_out": [
        "tmp%0#0",
        "\"build_nested_call_count\""
      ]
    },
    "3068": {
      "op": "uncover 1",
      "stack_out": [
        "\"build_nested_call_count\"",
        "tmp%0#0"
      ]
    },
    "3070": {
      "op": "app_global_put",
      "stack_out": []
    },
    "3071": {
      "op": "bytec 11 // \"hi\"",
      "defined_out": [
        "\"hi\""
      ],
      "stack_out": [
        "\"hi\""
      ]
    },
    "3073": {
      "op": "intc_2 // 1",
      "stack_out": [
        "\"hi\"",
        "1"
      ]
    },
    "3074": {
      "op": "pushbytes 0x686d6d6d",
      "defined_out": [
        "\"hi\"",
        "0x686d6d6d",
        "1"
      ],
      "stack_out": [
        "\"hi\"",
        "1",
        "0x686d6d6d"
      ]
    },
    "3080": {
      "retsub": true,
      "op": "retsub"
    },
    "3081": {
      "subroutine": "test_cases.tuple_support.nested_tuples.NestedTuples.test_single_evaluation_nested",
      "params": {},
      "block": "test_single_evaluation_nested",
      "stack_in": [],
      "op": "proto 0 0"
    },
    "3084": {
      "op": "intc_0 // 0",
      "stack_out": [
        "ternary_result%0.0.0#0"
      ]
    },
    "3085": {
      "op": "intc_0 // 0",
      "stack_out": [
        "ternary_result%0.0.0#0",
        "ternary_result%0.1#1"
      ]
    },
    "3086": {
      "op": "bytec_0 // \"\"",
      "stack_out": [
        "ternary_result%0.0.0#0",
        "ternary_result%0.1#1",
        "ternary_result%0.0.1#1"
      ]
    },
    "3087": {
      "op": "b test_single_evaluation_nested_block@0"
    },
    "3090": {
      "block": "test_single_evaluation_nested_block@0",
      "stack_in": [
        "ternary_result%0.0.0#0",
        "ternary_result%0.1#1",
        "ternary_result%0.0.1#1"
      ],
      "op": "bytec 4 // \"build_nested_call_count\"",
      "defined_out": [
        "\"build_nested_call_count\""
      ],
      "stack_out": [
        "ternary_result%0.0.0#0",
        "ternary_result%0.1#1",
        "ternary_result%0.0.1#1",
        "\"build_nested_call_count\""
      ]
    },
    "3092": {
      "op": "intc_0 // 0",
      "defined_out": [
        "\"build_nested_call_count\"",
        "0"
      ],
      "stack_out": [
        "ternary_result%0.0.0#0",
        "ternary_result%0.1#1",
        "ternary_result%0.0.1#1",
        "\"build_nested_call_count\"",
        "0"
      ]
    },
    "3093": {
      "op": "app_global_put",
      "stack_out": [
        "ternary_result%0.0.0#0",
        "ternary_result%0.1#1",
        "ternary_result%0.0.1#1"
      ]
    },
    "3094": {
      "callsub": "test_cases.tuple_support.nested_tuples.NestedTuples.build_nested",
      "op": "callsub build_nested",
      "defined_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "awst_tmp%2#0"
      ],
      "stack_out": [
        "ternary_result%0.0.0#0",
        "ternary_result%0.1#1",
        "ternary_result%0.0.1#1",
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "awst_tmp%2#0"
      ]
    },
    "3097": {
      "op": "cover 2",
      "stack_out": [
        "ternary_result%0.0.0#0",
        "ternary_result%0.1#1",
        "ternary_result%0.0.1#1",
        "awst_tmp%2#0",
        "awst_tmp%0#0",
        "awst_tmp%1#0"
      ]
    },
    "3099": {
      "op": "cover 1",
      "stack_out": [
        "ternary_result%0.0.0#0",
        "ternary_result%0.1#1",
        "ternary_result%0.0.1#1",
        "awst_tmp%2#0",
        "awst_tmp%1#0",
        "awst_tmp%0#0"
      ]
    },
    "3101": {
      "op": "dup",
      "defined_out": [
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)",
        "awst_tmp%1#0",
        "awst_tmp%2#0"
      ],
      "stack_out": [
        "ternary_result%0.0.0#0",
        "ternary_result%0.1#1",
        "ternary_result%0.0.1#1",
        "awst_tmp%2#0",
        "awst_tmp%1#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ]
    },
    "3102": {
      "op": "cover 3",
      "defined_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "awst_tmp%2#0"
      ],
      "stack_out": [
        "ternary_result%0.0.0#0",
        "ternary_result%0.1#1",
        "ternary_result%0.0.1#1",
        "awst_tmp%0#0",
        "awst_tmp%2#0",
        "awst_tmp%1#0",
        "awst_tmp%0#0"
      ]
    },
    "3104": {
      "op": "dup",
      "stack_out": [
        "ternary_result%0.0.0#0",
        "ternary_result%0.1#1",
        "ternary_result%0.0.1#1",
        "awst_tmp%0#0",
        "awst_tmp%2#0",
        "awst_tmp%1#0",
        "awst_tmp%0#0 (copy)",
        "awst_tmp%0#0"
      ]
    },
    "3105": {
      "op": "==",
      "defined_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "awst_tmp%2#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "ternary_result%0.0.0#0",
        "ternary_result%0.1#1",
        "ternary_result%0.0.1#1",
        "awst_tmp%0#0",
        "awst_tmp%2#0",
        "awst_tmp%1#0",
        "tmp%0#0"
      ]
    },
    "3106": {
      "op": "dig 1",
      "defined_out": [
        "awst_tmp%0#0",
        "awst_tmp%1#0",
        "awst_tmp%1#0 (copy)",
        "awst_tmp%2#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "ternary_result%0.0.0#0",
        "ternary_result%0.1#1",
        "ternary_result%0.0.1#1",
        "awst_tmp%0#0",
        "awst_tmp%2#0",
        "awst_tmp%1#0",
        "tmp%0#0",
        "awst_tmp%1#0 (copy)"
      ]
    },
    "3108": {
      "op": "uncover 2",
      "stack_out": [
        "ternary_result%0.0.0#0",
        "ternary_result%0.1#1",
        "ternary_result%0.0.1#1",
        "awst_tmp%0#0",
        "awst_tmp%2#0",
        "tmp%0#0",
        "awst_tmp%1#0 (copy)",
        "awst_tmp%1#0"
      ]
    },
    "3110": {
      "op": "==",
      "defined_out": [
        "awst_tmp%0#0",
        "awst_tmp%2#0",
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "ternary_result%0.0.0#0",
        "ternary_result%0.1#1",
        "ternary_result%0.0.1#1",
        "awst_tmp%0#0",
        "awst_tmp%2#0",
        "tmp%0#0",
        "tmp%1#0"
      ]
    },
    "3111": {
      "op": "&&",
      "defined_out": [
        "awst_tmp%0#0",
        "awst_tmp%2#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "ternary_result%0.0.0#0",
        "ternary_result%0.1#1",
        "ternary_result%0.0.1#1",
        "awst_tmp%0#0",
        "awst_tmp%2#0",
        "tmp%2#0"
      ]
    },
    "3112": {
      "op": "dig 1",
      "defined_out": [
        "awst_tmp%0#0",
        "awst_tmp%2#0",
        "awst_tmp%2#0 (copy)",
        "tmp%2#0"
      ],
      "stack_out": [
        "ternary_result%0.0.0#0",
        "ternary_result%0.1#1",
        "ternary_result%0.0.1#1",
        "awst_tmp%0#0",
        "awst_tmp%2#0",
        "tmp%2#0",
        "awst_tmp%2#0 (copy)"
      ]
    },
    "3114": {
      "op": "uncover 2",
      "stack_out": [
        "ternary_result%0.0.0#0",
        "ternary_result%0.1#1",
        "ternary_result%0.0.1#1",
        "awst_tmp%0#0",
        "tmp%2#0",
        "awst_tmp%2#0 (copy)",
        "awst_tmp%2#0"
      ]
    },
    "3116": {
      "op": "==",
      "defined_out": [
        "awst_tmp%0#0",
        "tmp%2#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "ternary_result%0.0.0#0",
        "ternary_result%0.1#1",
        "ternary_result%0.0.1#1",
        "awst_tmp%0#0",
        "tmp%2#0",
        "tmp%3#0"
      ]
    },
    "3117": {
      "op": "||",
      "defined_out": [
        "awst_tmp%0#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "ternary_result%0.0.0#0",
        "ternary_result%0.1#1",
        "ternary_result%0.0.1#1",
        "awst_tmp%0#0",
        "tmp%4#0"
      ]
    },
    "3118": {
      "op": "bz test_single_evaluation_nested_ternary_false@2",
      "stack_out": [
        "ternary_result%0.0.0#0",
        "ternary_result%0.1#1",
        "ternary_result%0.0.1#1",
        "awst_tmp%0#0"
      ]
    },
    "3121": {
      "op": "b test_single_evaluation_nested_ternary_true@1"
    },
    "3124": {
      "block": "test_single_evaluation_nested_ternary_true@1",
      "stack_in": [
        "ternary_result%0.0.0#0",
        "ternary_result%0.1#1",
        "ternary_result%0.0.1#1",
        "awst_tmp%0#0"
      ],
      "op": "frame_dig 3",
      "defined_out": [
        "awst_tmp%0#0"
      ],
      "stack_out": [
        "ternary_result%0.0.0#0",
        "ternary_result%0.1#1",
        "ternary_result%0.0.1#1",
        "awst_tmp%0#0",
        "awst_tmp%0#0"
      ]
    },
    "3126": {
      "op": "frame_bury 0",
      "defined_out": [
        "awst_tmp%0#0"
      ],
      "stack_out": [
        "ternary_result%0.0.0#0",
        "ternary_result%0.1#1",
        "ternary_result%0.0.1#1",
        "awst_tmp%0#0"
      ]
    },
    "3128": {
      "op": "b test_single_evaluation_nested_ternary_merge@3"
    },
    "3131": {
      "block": "test_single_evaluation_nested_ternary_merge@3",
      "stack_in": [
        "ternary_result%0.0.0#0",
        "ternary_result%0.1#1",
        "ternary_result%0.0.1#1",
        "awst_tmp%0#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "result.0.0#0",
        "ternary_result%0.0.0#0"
      ],
      "stack_out": [
        "ternary_result%0.0.0#0",
        "ternary_result%0.1#1",
        "ternary_result%0.0.1#1",
        "awst_tmp%0#0",
        "result.0.0#0"
      ]
    },
    "3133": {
      "op": "bytec 11 // \"hi\"",
      "defined_out": [
        "\"hi\"",
        "result.0.0#0",
        "ternary_result%0.0.0#0"
      ],
      "stack_out": [
        "ternary_result%0.0.0#0",
        "ternary_result%0.1#1",
        "ternary_result%0.0.1#1",
        "awst_tmp%0#0",
        "result.0.0#0",
        "\"hi\""
      ]
    },
    "3135": {
      "op": "==",
      "defined_out": [
        "ternary_result%0.0.0#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "ternary_result%0.0.0#0",
        "ternary_result%0.1#1",
        "ternary_result%0.0.1#1",
        "awst_tmp%0#0",
        "tmp%5#0"
      ]
    },
    "3136": {
      "op": "assert",
      "stack_out": [
        "ternary_result%0.0.0#0",
        "ternary_result%0.1#1",
        "ternary_result%0.0.1#1",
        "awst_tmp%0#0"
      ]
    },
    "3137": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "ternary_result%0.0.0#0"
      ],
      "stack_out": [
        "ternary_result%0.0.0#0",
        "ternary_result%0.1#1",
        "ternary_result%0.0.1#1",
        "awst_tmp%0#0",
        "0"
      ]
    },
    "3138": {
      "op": "bytec 4 // \"build_nested_call_count\"",
      "defined_out": [
        "\"build_nested_call_count\"",
        "0",
        "ternary_result%0.0.0#0"
      ],
      "stack_out": [
        "ternary_result%0.0.0#0",
        "ternary_result%0.1#1",
        "ternary_result%0.0.1#1",
        "awst_tmp%0#0",
        "0",
        "\"build_nested_call_count\""
      ]
    },
    "3140": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "ternary_result%0.0.0#0"
      ],
      "stack_out": [
        "ternary_result%0.0.0#0",
        "ternary_result%0.1#1",
        "ternary_result%0.0.1#1",
        "awst_tmp%0#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "3141": {
      "error": "check self.build_nested_call_count exists",
      "op": "assert // check self.build_nested_call_count exists",
      "stack_out": [
        "ternary_result%0.0.0#0",
        "ternary_result%0.1#1",
        "ternary_result%0.0.1#1",
        "awst_tmp%0#0",
        "maybe_value%0#0"
      ]
    },
    "3142": {
      "op": "intc_2 // 1",
      "defined_out": [
        "1",
        "maybe_value%0#0",
        "ternary_result%0.0.0#0"
      ],
      "stack_out": [
        "ternary_result%0.0.0#0",
        "ternary_result%0.1#1",
        "ternary_result%0.0.1#1",
        "awst_tmp%0#0",
        "maybe_value%0#0",
        "1"
      ]
    },
    "3143": {
      "op": "==",
      "defined_out": [
        "ternary_result%0.0.0#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "ternary_result%0.0.0#0",
        "ternary_result%0.1#1",
        "ternary_result%0.0.1#1",
        "awst_tmp%0#0",
        "tmp%6#0"
      ]
    },
    "3144": {
      "op": "assert",
      "stack_out": [
        "ternary_result%0.0.0#0",
        "ternary_result%0.1#1",
        "ternary_result%0.0.1#1",
        "awst_tmp%0#0"
      ]
    },
    "3145": {
      "retsub": true,
      "op": "retsub"
    },
    "3146": {
      "block": "test_single_evaluation_nested_ternary_false@2",
      "stack_in": [
        "ternary_result%0.0.0#0",
        "ternary_result%0.1#1",
        "ternary_result%0.0.1#1",
        "awst_tmp%0#0"
      ],
      "callsub": "test_cases.tuple_support.nested_tuples.NestedTuples.build_nested",
      "op": "callsub build_nested",
      "defined_out": [
        "ternary_result%0.0.0#0",
        "ternary_result%0.0.1#1",
        "ternary_result%0.1#1"
      ],
      "stack_out": [
        "ternary_result%0.0.0#0",
        "ternary_result%0.1#1",
        "ternary_result%0.0.1#1",
        "awst_tmp%0#0",
        "ternary_result%0.0.0#0",
        "ternary_result%0.0.1#1",
        "ternary_result%0.1#1"
      ]
    },
    "3149": {
      "op": "frame_bury 1",
      "defined_out": [
        "ternary_result%0.0.0#0",
        "ternary_result%0.0.1#1",
        "ternary_result%0.1#1"
      ],
      "stack_out": [
        "ternary_result%0.0.0#0",
        "ternary_result%0.1#1",
        "ternary_result%0.0.1#1",
        "awst_tmp%0#0",
        "ternary_result%0.0.0#0",
        "ternary_result%0.0.1#1"
      ]
    },
    "3151": {
      "op": "frame_bury 2",
      "stack_out": [
        "ternary_result%0.0.0#0",
        "ternary_result%0.1#1",
        "ternary_result%0.0.1#1",
        "awst_tmp%0#0",
        "ternary_result%0.0.0#0"
      ]
    },
    "3153": {
      "op": "frame_bury 0",
      "stack_out": [
        "ternary_result%0.0.0#0",
        "ternary_result%0.1#1",
        "ternary_result%0.0.1#1",
        "awst_tmp%0#0"
      ]
    },
    "3155": {
      "op": "b test_single_evaluation_nested_ternary_merge@3"
    },
    "3158": {
      "subroutine": "algopy.arc4.ARC4Contract.approval_program",
      "params": {},
      "block": "approval_program",
      "stack_in": [],
      "op": "b approval_program_block@0"
    },
    "3161": {
      "block": "approval_program_block@0",
      "stack_in": [],
      "op": "b approval_program_block@1"
    },
    "3164": {
      "block": "approval_program_block@1",
      "stack_in": [],
      "op": "txn NumAppArgs",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "3166": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1",
        "0"
      ]
    },
    "3167": {
      "op": "!=",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "3168": {
      "op": "bz approval_program___algopy_default_create@22",
      "stack_out": []
    },
    "3171": {
      "op": "b approval_program_abi_routing@2"
    },
    "3174": {
      "block": "approval_program_abi_routing@2",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "3176": {
      "op": "intc_0 // NoOp",
      "defined_out": [
        "NoOp",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "NoOp"
      ]
    },
    "3177": {
      "op": "==",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "3178": {
      "error": "OnCompletion must be NoOp",
      "op": "assert // OnCompletion must be NoOp",
      "stack_out": []
    },
    "3179": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "3181": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "0"
      ]
    },
    "3182": {
      "op": "!=",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "3183": {
      "op": "bz approval_program_create_NoOp@20",
      "stack_out": []
    },
    "3186": {
      "op": "b approval_program_call_NoOp@3"
    },
    "3189": {
      "block": "approval_program_call_NoOp@3",
      "stack_in": [],
      "op": "txna ApplicationArgs 0",
      "defined_out": [
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0"
      ]
    },
    "3192": {
      "op": "pushbytes 0x383e1e8b // method \"store_tuple(((uint64,uint64,(uint64,byte[],string)),(uint64,byte[],string)[]))void\"",
      "defined_out": [
        "Method(store_tuple(((uint64,uint64,(uint64,byte[],string)),(uint64,byte[],string)[]))void)",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0",
        "Method(store_tuple(((uint64,uint64,(uint64,byte[],string)),(uint64,byte[],string)[]))void)"
      ]
    },
    "3198": {
      "op": "pushbytes 0x68cbedd7 // method \"load_tuple()((uint64,uint64,(uint64,byte[],string)),(uint64,byte[],string)[])\"",
      "defined_out": [
        "Method(load_tuple()((uint64,uint64,(uint64,byte[],string)),(uint64,byte[],string)[]))",
        "Method(store_tuple(((uint64,uint64,(uint64,byte[],string)),(uint64,byte[],string)[]))void)",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0",
        "Method(store_tuple(((uint64,uint64,(uint64,byte[],string)),(uint64,byte[],string)[]))void)",
        "Method(load_tuple()((uint64,uint64,(uint64,byte[],string)),(uint64,byte[],string)[]))"
      ]
    },
    "3204": {
      "op": "pushbytes 0x2263fcf1 // method \"store_tuple_in_box((uint64,uint64))void\"",
      "defined_out": [
        "Method(load_tuple()((uint64,uint64,(uint64,byte[],string)),(uint64,byte[],string)[]))",
        "Method(store_tuple(((uint64,uint64,(uint64,byte[],string)),(uint64,byte[],string)[]))void)",
        "Method(store_tuple_in_box((uint64,uint64))void)",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0",
        "Method(store_tuple(((uint64,uint64,(uint64,byte[],string)),(uint64,byte[],string)[]))void)",
        "Method(load_tuple()((uint64,uint64,(uint64,byte[],string)),(uint64,byte[],string)[]))",
        "Method(store_tuple_in_box((uint64,uint64))void)"
      ]
    },
    "3210": {
      "op": "pushbytes 0xbfc37339 // method \"is_tuple_in_box((uint64,uint64))bool\"",
      "defined_out": [
        "Method(is_tuple_in_box((uint64,uint64))bool)",
        "Method(load_tuple()((uint64,uint64,(uint64,byte[],string)),(uint64,byte[],string)[]))",
        "Method(store_tuple(((uint64,uint64,(uint64,byte[],string)),(uint64,byte[],string)[]))void)",
        "Method(store_tuple_in_box((uint64,uint64))void)",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0",
        "Method(store_tuple(((uint64,uint64,(uint64,byte[],string)),(uint64,byte[],string)[]))void)",
        "Method(load_tuple()((uint64,uint64,(uint64,byte[],string)),(uint64,byte[],string)[]))",
        "Method(store_tuple_in_box((uint64,uint64))void)",
        "Method(is_tuple_in_box((uint64,uint64))bool)"
      ]
    },
    "3216": {
      "op": "pushbytes 0xc660beaa // method \"load_tuple_from_box((uint64,uint64))(uint64,uint64)\"",
      "defined_out": [
        "Method(is_tuple_in_box((uint64,uint64))bool)",
        "Method(load_tuple()((uint64,uint64,(uint64,byte[],string)),(uint64,byte[],string)[]))",
        "Method(load_tuple_from_box((uint64,uint64))(uint64,uint64))",
        "Method(store_tuple(((uint64,uint64,(uint64,byte[],string)),(uint64,byte[],string)[]))void)",
        "Method(store_tuple_in_box((uint64,uint64))void)",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0",
        "Method(store_tuple(((uint64,uint64,(uint64,byte[],string)),(uint64,byte[],string)[]))void)",
        "Method(load_tuple()((uint64,uint64,(uint64,byte[],string)),(uint64,byte[],string)[]))",
        "Method(store_tuple_in_box((uint64,uint64))void)",
        "Method(is_tuple_in_box((uint64,uint64))bool)",
        "Method(load_tuple_from_box((uint64,uint64))(uint64,uint64))"
      ]
    },
    "3222": {
      "op": "pushbytes 0xb6c215ff // method \"maybe_load_tuple_from_box((uint64,uint64))((uint64,uint64),bool)\"",
      "defined_out": [
        "Method(is_tuple_in_box((uint64,uint64))bool)",
        "Method(load_tuple()((uint64,uint64,(uint64,byte[],string)),(uint64,byte[],string)[]))",
        "Method(load_tuple_from_box((uint64,uint64))(uint64,uint64))",
        "Method(maybe_load_tuple_from_box((uint64,uint64))((uint64,uint64),bool))",
        "Method(store_tuple(((uint64,uint64,(uint64,byte[],string)),(uint64,byte[],string)[]))void)",
        "Method(store_tuple_in_box((uint64,uint64))void)",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0",
        "Method(store_tuple(((uint64,uint64,(uint64,byte[],string)),(uint64,byte[],string)[]))void)",
        "Method(load_tuple()((uint64,uint64,(uint64,byte[],string)),(uint64,byte[],string)[]))",
        "Method(store_tuple_in_box((uint64,uint64))void)",
        "Method(is_tuple_in_box((uint64,uint64))bool)",
        "Method(load_tuple_from_box((uint64,uint64))(uint64,uint64))",
        "Method(maybe_load_tuple_from_box((uint64,uint64))((uint64,uint64),bool))"
      ]
    },
    "3228": {
      "op": "pushbytes 0x907c9042 // method \"load_tuple_from_box_or_default((uint64,uint64))(uint64,uint64)\"",
      "defined_out": [
        "Method(is_tuple_in_box((uint64,uint64))bool)",
        "Method(load_tuple()((uint64,uint64,(uint64,byte[],string)),(uint64,byte[],string)[]))",
        "Method(load_tuple_from_box((uint64,uint64))(uint64,uint64))",
        "Method(load_tuple_from_box_or_default((uint64,uint64))(uint64,uint64))",
        "Method(maybe_load_tuple_from_box((uint64,uint64))((uint64,uint64),bool))",
        "Method(store_tuple(((uint64,uint64,(uint64,byte[],string)),(uint64,byte[],string)[]))void)",
        "Method(store_tuple_in_box((uint64,uint64))void)",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0",
        "Method(store_tuple(((uint64,uint64,(uint64,byte[],string)),(uint64,byte[],string)[]))void)",
        "Method(load_tuple()((uint64,uint64,(uint64,byte[],string)),(uint64,byte[],string)[]))",
        "Method(store_tuple_in_box((uint64,uint64))void)",
        "Method(is_tuple_in_box((uint64,uint64))bool)",
        "Method(load_tuple_from_box((uint64,uint64))(uint64,uint64))",
        "Method(maybe_load_tuple_from_box((uint64,uint64))((uint64,uint64),bool))",
        "Method(load_tuple_from_box_or_default((uint64,uint64))(uint64,uint64))"
      ]
    },
    "3234": {
      "op": "pushbytes 0xd51c7174 // method \"load_tuple_from_local_state_or_default(string)(uint64,uint64)\"",
      "defined_out": [
        "Method(is_tuple_in_box((uint64,uint64))bool)",
        "Method(load_tuple()((uint64,uint64,(uint64,byte[],string)),(uint64,byte[],string)[]))",
        "Method(load_tuple_from_box((uint64,uint64))(uint64,uint64))",
        "Method(load_tuple_from_box_or_default((uint64,uint64))(uint64,uint64))",
        "Method(load_tuple_from_local_state_or_default(string)(uint64,uint64))",
        "Method(maybe_load_tuple_from_box((uint64,uint64))((uint64,uint64),bool))",
        "Method(store_tuple(((uint64,uint64,(uint64,byte[],string)),(uint64,byte[],string)[]))void)",
        "Method(store_tuple_in_box((uint64,uint64))void)",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0",
        "Method(store_tuple(((uint64,uint64,(uint64,byte[],string)),(uint64,byte[],string)[]))void)",
        "Method(load_tuple()((uint64,uint64,(uint64,byte[],string)),(uint64,byte[],string)[]))",
        "Method(store_tuple_in_box((uint64,uint64))void)",
        "Method(is_tuple_in_box((uint64,uint64))bool)",
        "Method(load_tuple_from_box((uint64,uint64))(uint64,uint64))",
        "Method(maybe_load_tuple_from_box((uint64,uint64))((uint64,uint64),bool))",
        "Method(load_tuple_from_box_or_default((uint64,uint64))(uint64,uint64))",
        "Method(load_tuple_from_local_state_or_default(string)(uint64,uint64))"
      ]
    },
    "3240": {
      "op": "pushbytes 0xf8cc2b50 // method \"mutate_local_tuple()(uint64[],(uint64,byte[],string))\"",
      "defined_out": [
        "Method(is_tuple_in_box((uint64,uint64))bool)",
        "Method(load_tuple()((uint64,uint64,(uint64,byte[],string)),(uint64,byte[],string)[]))",
        "Method(load_tuple_from_box((uint64,uint64))(uint64,uint64))",
        "Method(load_tuple_from_box_or_default((uint64,uint64))(uint64,uint64))",
        "Method(load_tuple_from_local_state_or_default(string)(uint64,uint64))",
        "Method(maybe_load_tuple_from_box((uint64,uint64))((uint64,uint64),bool))",
        "Method(mutate_local_tuple()(uint64[],(uint64,byte[],string)))",
        "Method(store_tuple(((uint64,uint64,(uint64,byte[],string)),(uint64,byte[],string)[]))void)",
        "Method(store_tuple_in_box((uint64,uint64))void)",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0",
        "Method(store_tuple(((uint64,uint64,(uint64,byte[],string)),(uint64,byte[],string)[]))void)",
        "Method(load_tuple()((uint64,uint64,(uint64,byte[],string)),(uint64,byte[],string)[]))",
        "Method(store_tuple_in_box((uint64,uint64))void)",
        "Method(is_tuple_in_box((uint64,uint64))bool)",
        "Method(load_tuple_from_box((uint64,uint64))(uint64,uint64))",
        "Method(maybe_load_tuple_from_box((uint64,uint64))((uint64,uint64),bool))",
        "Method(load_tuple_from_box_or_default((uint64,uint64))(uint64,uint64))",
        "Method(load_tuple_from_local_state_or_default(string)(uint64,uint64))",
        "Method(mutate_local_tuple()(uint64[],(uint64,byte[],string)))"
      ]
    },
    "3246": {
      "op": "pushbytes 0x3d486db0 // method \"mutate_tuple_in_storage_currently_supported_method()void\"",
      "defined_out": [
        "Method(is_tuple_in_box((uint64,uint64))bool)",
        "Method(load_tuple()((uint64,uint64,(uint64,byte[],string)),(uint64,byte[],string)[]))",
        "Method(load_tuple_from_box((uint64,uint64))(uint64,uint64))",
        "Method(load_tuple_from_box_or_default((uint64,uint64))(uint64,uint64))",
        "Method(load_tuple_from_local_state_or_default(string)(uint64,uint64))",
        "Method(maybe_load_tuple_from_box((uint64,uint64))((uint64,uint64),bool))",
        "Method(mutate_local_tuple()(uint64[],(uint64,byte[],string)))",
        "Method(mutate_tuple_in_storage_currently_supported_method()void)",
        "Method(store_tuple(((uint64,uint64,(uint64,byte[],string)),(uint64,byte[],string)[]))void)",
        "Method(store_tuple_in_box((uint64,uint64))void)",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0",
        "Method(store_tuple(((uint64,uint64,(uint64,byte[],string)),(uint64,byte[],string)[]))void)",
        "Method(load_tuple()((uint64,uint64,(uint64,byte[],string)),(uint64,byte[],string)[]))",
        "Method(store_tuple_in_box((uint64,uint64))void)",
        "Method(is_tuple_in_box((uint64,uint64))bool)",
        "Method(load_tuple_from_box((uint64,uint64))(uint64,uint64))",
        "Method(maybe_load_tuple_from_box((uint64,uint64))((uint64,uint64),bool))",
        "Method(load_tuple_from_box_or_default((uint64,uint64))(uint64,uint64))",
        "Method(load_tuple_from_local_state_or_default(string)(uint64,uint64))",
        "Method(mutate_local_tuple()(uint64[],(uint64,byte[],string)))",
        "Method(mutate_tuple_in_storage_currently_supported_method()void)"
      ]
    },
    "3252": {
      "op": "pushbytes 0x9e5a3ba7 // method \"run_tests()bool\"",
      "defined_out": [
        "Method(is_tuple_in_box((uint64,uint64))bool)",
        "Method(load_tuple()((uint64,uint64,(uint64,byte[],string)),(uint64,byte[],string)[]))",
        "Method(load_tuple_from_box((uint64,uint64))(uint64,uint64))",
        "Method(load_tuple_from_box_or_default((uint64,uint64))(uint64,uint64))",
        "Method(load_tuple_from_local_state_or_default(string)(uint64,uint64))",
        "Method(maybe_load_tuple_from_box((uint64,uint64))((uint64,uint64),bool))",
        "Method(mutate_local_tuple()(uint64[],(uint64,byte[],string)))",
        "Method(mutate_tuple_in_storage_currently_supported_method()void)",
        "Method(run_tests()bool)",
        "Method(store_tuple(((uint64,uint64,(uint64,byte[],string)),(uint64,byte[],string)[]))void)",
        "Method(store_tuple_in_box((uint64,uint64))void)",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0",
        "Method(store_tuple(((uint64,uint64,(uint64,byte[],string)),(uint64,byte[],string)[]))void)",
        "Method(load_tuple()((uint64,uint64,(uint64,byte[],string)),(uint64,byte[],string)[]))",
        "Method(store_tuple_in_box((uint64,uint64))void)",
        "Method(is_tuple_in_box((uint64,uint64))bool)",
        "Method(load_tuple_from_box((uint64,uint64))(uint64,uint64))",
        "Method(maybe_load_tuple_from_box((uint64,uint64))((uint64,uint64),bool))",
        "Method(load_tuple_from_box_or_default((uint64,uint64))(uint64,uint64))",
        "Method(load_tuple_from_local_state_or_default(string)(uint64,uint64))",
        "Method(mutate_local_tuple()(uint64[],(uint64,byte[],string)))",
        "Method(mutate_tuple_in_storage_currently_supported_method()void)",
        "Method(run_tests()bool)"
      ]
    },
    "3258": {
      "op": "pushbytes 0xcea0521b // method \"nested_tuple_params((string,(byte[],(uint64))))(byte[],(string,uint64))\"",
      "defined_out": [
        "Method(is_tuple_in_box((uint64,uint64))bool)",
        "Method(load_tuple()((uint64,uint64,(uint64,byte[],string)),(uint64,byte[],string)[]))",
        "Method(load_tuple_from_box((uint64,uint64))(uint64,uint64))",
        "Method(load_tuple_from_box_or_default((uint64,uint64))(uint64,uint64))",
        "Method(load_tuple_from_local_state_or_default(string)(uint64,uint64))",
        "Method(maybe_load_tuple_from_box((uint64,uint64))((uint64,uint64),bool))",
        "Method(mutate_local_tuple()(uint64[],(uint64,byte[],string)))",
        "Method(mutate_tuple_in_storage_currently_supported_method()void)",
        "Method(nested_tuple_params((string,(byte[],(uint64))))(byte[],(string,uint64)))",
        "Method(run_tests()bool)",
        "Method(store_tuple(((uint64,uint64,(uint64,byte[],string)),(uint64,byte[],string)[]))void)",
        "Method(store_tuple_in_box((uint64,uint64))void)",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0",
        "Method(store_tuple(((uint64,uint64,(uint64,byte[],string)),(uint64,byte[],string)[]))void)",
        "Method(load_tuple()((uint64,uint64,(uint64,byte[],string)),(uint64,byte[],string)[]))",
        "Method(store_tuple_in_box((uint64,uint64))void)",
        "Method(is_tuple_in_box((uint64,uint64))bool)",
        "Method(load_tuple_from_box((uint64,uint64))(uint64,uint64))",
        "Method(maybe_load_tuple_from_box((uint64,uint64))((uint64,uint64),bool))",
        "Method(load_tuple_from_box_or_default((uint64,uint64))(uint64,uint64))",
        "Method(load_tuple_from_local_state_or_default(string)(uint64,uint64))",
        "Method(mutate_local_tuple()(uint64[],(uint64,byte[],string)))",
        "Method(mutate_tuple_in_storage_currently_supported_method()void)",
        "Method(run_tests()bool)",
        "Method(nested_tuple_params((string,(byte[],(uint64))))(byte[],(string,uint64)))"
      ]
    },
    "3264": {
      "op": "pushbytes 0x373f5b24 // method \"named_tuple((uint64,byte[],string))(uint64,byte[],string)\"",
      "defined_out": [
        "Method(is_tuple_in_box((uint64,uint64))bool)",
        "Method(load_tuple()((uint64,uint64,(uint64,byte[],string)),(uint64,byte[],string)[]))",
        "Method(load_tuple_from_box((uint64,uint64))(uint64,uint64))",
        "Method(load_tuple_from_box_or_default((uint64,uint64))(uint64,uint64))",
        "Method(load_tuple_from_local_state_or_default(string)(uint64,uint64))",
        "Method(maybe_load_tuple_from_box((uint64,uint64))((uint64,uint64),bool))",
        "Method(mutate_local_tuple()(uint64[],(uint64,byte[],string)))",
        "Method(mutate_tuple_in_storage_currently_supported_method()void)",
        "Method(named_tuple((uint64,byte[],string))(uint64,byte[],string))",
        "Method(nested_tuple_params((string,(byte[],(uint64))))(byte[],(string,uint64)))",
        "Method(run_tests()bool)",
        "Method(store_tuple(((uint64,uint64,(uint64,byte[],string)),(uint64,byte[],string)[]))void)",
        "Method(store_tuple_in_box((uint64,uint64))void)",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0",
        "Method(store_tuple(((uint64,uint64,(uint64,byte[],string)),(uint64,byte[],string)[]))void)",
        "Method(load_tuple()((uint64,uint64,(uint64,byte[],string)),(uint64,byte[],string)[]))",
        "Method(store_tuple_in_box((uint64,uint64))void)",
        "Method(is_tuple_in_box((uint64,uint64))bool)",
        "Method(load_tuple_from_box((uint64,uint64))(uint64,uint64))",
        "Method(maybe_load_tuple_from_box((uint64,uint64))((uint64,uint64),bool))",
        "Method(load_tuple_from_box_or_default((uint64,uint64))(uint64,uint64))",
        "Method(load_tuple_from_local_state_or_default(string)(uint64,uint64))",
        "Method(mutate_local_tuple()(uint64[],(uint64,byte[],string)))",
        "Method(mutate_tuple_in_storage_currently_supported_method()void)",
        "Method(run_tests()bool)",
        "Method(nested_tuple_params((string,(byte[],(uint64))))(byte[],(string,uint64)))",
        "Method(named_tuple((uint64,byte[],string))(uint64,byte[],string))"
      ]
    },
    "3270": {
      "op": "pushbytes 0xec593096 // method \"nested_named_tuple_params((uint64,uint64,(uint64,byte[],string)))(uint64,uint64,(uint64,byte[],string))\"",
      "defined_out": [
        "Method(is_tuple_in_box((uint64,uint64))bool)",
        "Method(load_tuple()((uint64,uint64,(uint64,byte[],string)),(uint64,byte[],string)[]))",
        "Method(load_tuple_from_box((uint64,uint64))(uint64,uint64))",
        "Method(load_tuple_from_box_or_default((uint64,uint64))(uint64,uint64))",
        "Method(load_tuple_from_local_state_or_default(string)(uint64,uint64))",
        "Method(maybe_load_tuple_from_box((uint64,uint64))((uint64,uint64),bool))",
        "Method(mutate_local_tuple()(uint64[],(uint64,byte[],string)))",
        "Method(mutate_tuple_in_storage_currently_supported_method()void)",
        "Method(named_tuple((uint64,byte[],string))(uint64,byte[],string))",
        "Method(nested_named_tuple_params((uint64,uint64,(uint64,byte[],string)))(uint64,uint64,(uint64,byte[],string)))",
        "Method(nested_tuple_params((string,(byte[],(uint64))))(byte[],(string,uint64)))",
        "Method(run_tests()bool)",
        "Method(store_tuple(((uint64,uint64,(uint64,byte[],string)),(uint64,byte[],string)[]))void)",
        "Method(store_tuple_in_box((uint64,uint64))void)",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0",
        "Method(store_tuple(((uint64,uint64,(uint64,byte[],string)),(uint64,byte[],string)[]))void)",
        "Method(load_tuple()((uint64,uint64,(uint64,byte[],string)),(uint64,byte[],string)[]))",
        "Method(store_tuple_in_box((uint64,uint64))void)",
        "Method(is_tuple_in_box((uint64,uint64))bool)",
        "Method(load_tuple_from_box((uint64,uint64))(uint64,uint64))",
        "Method(maybe_load_tuple_from_box((uint64,uint64))((uint64,uint64),bool))",
        "Method(load_tuple_from_box_or_default((uint64,uint64))(uint64,uint64))",
        "Method(load_tuple_from_local_state_or_default(string)(uint64,uint64))",
        "Method(mutate_local_tuple()(uint64[],(uint64,byte[],string)))",
        "Method(mutate_tuple_in_storage_currently_supported_method()void)",
        "Method(run_tests()bool)",
        "Method(nested_tuple_params((string,(byte[],(uint64))))(byte[],(string,uint64)))",
        "Method(named_tuple((uint64,byte[],string))(uint64,byte[],string))",
        "Method(nested_named_tuple_params((uint64,uint64,(uint64,byte[],string)))(uint64,uint64,(uint64,byte[],string)))"
      ]
    },
    "3276": {
      "op": "uncover 14",
      "stack_out": [
        "Method(store_tuple(((uint64,uint64,(uint64,byte[],string)),(uint64,byte[],string)[]))void)",
        "Method(load_tuple()((uint64,uint64,(uint64,byte[],string)),(uint64,byte[],string)[]))",
        "Method(store_tuple_in_box((uint64,uint64))void)",
        "Method(is_tuple_in_box((uint64,uint64))bool)",
        "Method(load_tuple_from_box((uint64,uint64))(uint64,uint64))",
        "Method(maybe_load_tuple_from_box((uint64,uint64))((uint64,uint64),bool))",
        "Method(load_tuple_from_box_or_default((uint64,uint64))(uint64,uint64))",
        "Method(load_tuple_from_local_state_or_default(string)(uint64,uint64))",
        "Method(mutate_local_tuple()(uint64[],(uint64,byte[],string)))",
        "Method(mutate_tuple_in_storage_currently_supported_method()void)",
        "Method(run_tests()bool)",
        "Method(nested_tuple_params((string,(byte[],(uint64))))(byte[],(string,uint64)))",
        "Method(named_tuple((uint64,byte[],string))(uint64,byte[],string))",
        "Method(nested_named_tuple_params((uint64,uint64,(uint64,byte[],string)))(uint64,uint64,(uint64,byte[],string)))",
        "tmp%6#0"
      ]
    },
    "3278": {
      "op": "match approval_program_store_tuple_route@4 approval_program_load_tuple_route@5 approval_program_store_tuple_in_box_route@6 approval_program_is_tuple_in_box_route@7 approval_program_load_tuple_from_box_route@8 approval_program_maybe_load_tuple_from_box_route@9 approval_program_load_tuple_from_box_or_default_route@10 approval_program_load_tuple_from_local_state_or_default_route@11 approval_program_mutate_local_tuple_route@12 approval_program_mutate_tuple_in_storage_currently_supported_method_route@13 approval_program_run_tests_route@14 approval_program_nested_tuple_params_route@15 approval_program_named_tuple_route@16 approval_program_nested_named_tuple_params_route@17",
      "stack_out": []
    },
    "3308": {
      "op": "b approval_program_switch_case_default@18"
    },
    "3311": {
      "block": "approval_program_switch_case_default@18",
      "stack_in": [],
      "op": "b approval_program_switch_case_next@19"
    },
    "3314": {
      "block": "approval_program_switch_case_next@19",
      "stack_in": [],
      "op": "b approval_program_after_if_else@21"
    },
    "3317": {
      "block": "approval_program_after_if_else@21",
      "stack_in": [],
      "op": "b approval_program_after_if_else@25"
    },
    "3320": {
      "block": "approval_program_after_if_else@25",
      "stack_in": [],
      "op": "err",
      "defined_out": []
    },
    "3321": {
      "block": "approval_program_nested_named_tuple_params_route@17",
      "stack_in": [],
      "callsub": "test_cases.tuple_support.nested_tuples.NestedTuples.nested_named_tuple_params[routing]",
      "op": "callsub nested_named_tuple_params"
    },
    "3324": {
      "op": "b approval_program_switch_case_next@19"
    },
    "3327": {
      "block": "approval_program_named_tuple_route@16",
      "stack_in": [],
      "callsub": "test_cases.tuple_support.nested_tuples.NestedTuples.named_tuple[routing]",
      "op": "callsub named_tuple"
    },
    "3330": {
      "op": "b approval_program_switch_case_next@19"
    },
    "3333": {
      "block": "approval_program_nested_tuple_params_route@15",
      "stack_in": [],
      "callsub": "test_cases.tuple_support.nested_tuples.NestedTuples.nested_tuple_params[routing]",
      "op": "callsub nested_tuple_params"
    },
    "3336": {
      "op": "b approval_program_switch_case_next@19"
    },
    "3339": {
      "block": "approval_program_run_tests_route@14",
      "stack_in": [],
      "callsub": "test_cases.tuple_support.nested_tuples.NestedTuples.run_tests[routing]",
      "op": "callsub run_tests"
    },
    "3342": {
      "op": "b approval_program_switch_case_next@19"
    },
    "3345": {
      "block": "approval_program_mutate_tuple_in_storage_currently_supported_method_route@13",
      "stack_in": [],
      "callsub": "test_cases.tuple_support.nested_tuples.NestedTuples.mutate_tuple_in_storage_currently_supported_method[routing]",
      "op": "callsub mutate_tuple_in_storage_currently_supported_method"
    },
    "3348": {
      "op": "b approval_program_switch_case_next@19"
    },
    "3351": {
      "block": "approval_program_mutate_local_tuple_route@12",
      "stack_in": [],
      "callsub": "test_cases.tuple_support.nested_tuples.NestedTuples.mutate_local_tuple[routing]",
      "op": "callsub mutate_local_tuple"
    },
    "3354": {
      "op": "b approval_program_switch_case_next@19"
    },
    "3357": {
      "block": "approval_program_load_tuple_from_local_state_or_default_route@11",
      "stack_in": [],
      "callsub": "test_cases.tuple_support.nested_tuples.NestedTuples.load_tuple_from_local_state_or_default[routing]",
      "op": "callsub load_tuple_from_local_state_or_default"
    },
    "3360": {
      "op": "b approval_program_switch_case_next@19"
    },
    "3363": {
      "block": "approval_program_load_tuple_from_box_or_default_route@10",
      "stack_in": [],
      "callsub": "test_cases.tuple_support.nested_tuples.NestedTuples.load_tuple_from_box_or_default[routing]",
      "op": "callsub load_tuple_from_box_or_default"
    },
    "3366": {
      "op": "b approval_program_switch_case_next@19"
    },
    "3369": {
      "block": "approval_program_maybe_load_tuple_from_box_route@9",
      "stack_in": [],
      "callsub": "test_cases.tuple_support.nested_tuples.NestedTuples.maybe_load_tuple_from_box[routing]",
      "op": "callsub maybe_load_tuple_from_box"
    },
    "3372": {
      "op": "b approval_program_switch_case_next@19"
    },
    "3375": {
      "block": "approval_program_load_tuple_from_box_route@8",
      "stack_in": [],
      "callsub": "test_cases.tuple_support.nested_tuples.NestedTuples.load_tuple_from_box[routing]",
      "op": "callsub load_tuple_from_box"
    },
    "3378": {
      "op": "b approval_program_switch_case_next@19"
    },
    "3381": {
      "block": "approval_program_is_tuple_in_box_route@7",
      "stack_in": [],
      "callsub": "test_cases.tuple_support.nested_tuples.NestedTuples.is_tuple_in_box[routing]",
      "op": "callsub is_tuple_in_box"
    },
    "3384": {
      "op": "b approval_program_switch_case_next@19"
    },
    "3387": {
      "block": "approval_program_store_tuple_in_box_route@6",
      "stack_in": [],
      "callsub": "test_cases.tuple_support.nested_tuples.NestedTuples.store_tuple_in_box[routing]",
      "op": "callsub store_tuple_in_box"
    },
    "3390": {
      "op": "b approval_program_switch_case_next@19"
    },
    "3393": {
      "block": "approval_program_load_tuple_route@5",
      "stack_in": [],
      "callsub": "test_cases.tuple_support.nested_tuples.NestedTuples.load_tuple[routing]",
      "op": "callsub load_tuple"
    },
    "3396": {
      "op": "b approval_program_switch_case_next@19"
    },
    "3399": {
      "block": "approval_program_store_tuple_route@4",
      "stack_in": [],
      "callsub": "test_cases.tuple_support.nested_tuples.NestedTuples.store_tuple[routing]",
      "op": "callsub store_tuple"
    },
    "3402": {
      "op": "b approval_program_switch_case_next@19"
    },
    "3405": {
      "block": "approval_program_create_NoOp@20",
      "stack_in": [],
      "op": "b approval_program_after_if_else@21"
    },
    "3408": {
      "block": "approval_program___algopy_default_create@22",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0"
      ]
    },
    "3410": {
      "op": "intc_0 // NoOp",
      "defined_out": [
        "NoOp",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0",
        "NoOp"
      ]
    },
    "3411": {
      "op": "==",
      "defined_out": [
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0"
      ]
    },
    "3412": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "tmp%9#0"
      ]
    },
    "3414": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "tmp%9#0",
        "0"
      ]
    },
    "3415": {
      "op": "==",
      "defined_out": [
        "tmp%10#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "tmp%10#0"
      ]
    },
    "3416": {
      "op": "&&",
      "defined_out": [
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0"
      ]
    },
    "3417": {
      "error": "OnCompletion must be NoOp && can only call when creating",
      "op": "assert // OnCompletion must be NoOp && can only call when creating",
      "stack_out": []
    },
    "3418": {
      "op": "b approval_program_block@23"
    },
    "3421": {
      "block": "approval_program_block@23",
      "stack_in": [],
      "op": "b approval_program_after_inlined_test_cases.tuple_support.nested_tuples.NestedTuples.__algopy_default_create@24"
    },
    "3424": {
      "block": "approval_program_after_inlined_test_cases.tuple_support.nested_tuples.NestedTuples.__algopy_default_create@24",
      "stack_in": [],
      "op": "intc_2 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "3425": {
      "op": "return",
      "stack_out": []
    }
  }
}