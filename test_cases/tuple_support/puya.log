debug: PuyaPyOptions(output_teal=True, output_arc32=True, output_ssa_ir=True, output_optimization_ir=True, output_destructured_ir=True, output_memory_ir=True, output_bytecode=True, match_algod_bytecode=False, debug_level=1, optimization_level=1, target_avm_version=10, cli_template_definitions=[], template_vars_prefix='TMPL_', locals_coalescing_strategy=<LocalsCoalescingStrategy.root_operand: 'root_operand'>, paths=['tuple_support'], output_awst=True, output_awst_json=False, output_client=True, log_level=<LogLevel.debug: 10>)
info: Found python prefix: <git root>/.venv
info: writing tuple_support/out/module.awst
debug: Sealing block@0: // L12
debug: Terminated block@0: // L12
debug: Looking for 'required_budget_with_buffer' in an unsealed block creating an incomplete Phi: block@1: // while_top_L20
debug: Created Phi assignment: let required_budget_with_buffer#1: uint64 = undefined while trying to resolve 'required_budget_with_buffer' in block@1: // while_top_L20
debug: Terminated block@1: // while_top_L20
debug: Sealing block@2: // while_body_L21
debug: Looking for 'fee_source' in an unsealed block creating an incomplete Phi: block@1: // while_top_L20
debug: Created Phi assignment: let fee_source#1: uint64 = undefined while trying to resolve 'fee_source' in block@1: // while_top_L20
debug: Terminated block@2: // while_body_L21
debug: Sealing block@3: // switch_case_0_L28
debug: Terminated block@3: // switch_case_0_L28
debug: Sealing block@4: // switch_case_1_L30
debug: Terminated block@4: // switch_case_1_L30
debug: Sealing block@5: // switch_case_default_L26
debug: Terminated block@5: // switch_case_default_L26
debug: Sealing block@6: // switch_case_next_L26
debug: Terminated block@6: // switch_case_next_L26
debug: Sealing block@1: // while_top_L20
debug: Added required_budget_with_buffer#0 to Phi node: let required_budget_with_buffer#1: uint64 = φ(required_budget_with_buffer#0 <- block@0) in block@0: // L12
debug: Created Phi assignment: let required_budget_with_buffer#2: uint64 = undefined while trying to resolve 'required_budget_with_buffer' in block@6: // switch_case_next_L26
debug: Added required_budget_with_buffer#1 to Phi node: let required_budget_with_buffer#2: uint64 = φ(required_budget_with_buffer#1 <- block@3) in block@3: // switch_case_0_L28
debug: Added required_budget_with_buffer#1 to Phi node: let required_budget_with_buffer#2: uint64 = φ(required_budget_with_buffer#1 <- block@3, required_budget_with_buffer#1 <- block@4) in block@4: // switch_case_1_L30
debug: Added required_budget_with_buffer#1 to Phi node: let required_budget_with_buffer#2: uint64 = φ(required_budget_with_buffer#1 <- block@3, required_budget_with_buffer#1 <- block@4, required_budget_with_buffer#1 <- block@5) in block@5: // switch_case_default_L26
debug: Replacing trivial Phi node: let required_budget_with_buffer#2: uint64 = φ(required_budget_with_buffer#1 <- block@3, required_budget_with_buffer#1 <- block@4, required_budget_with_buffer#1 <- block@5) (required_budget_with_buffer#2) with required_budget_with_buffer#1
debug: Deleting Phi assignment: let required_budget_with_buffer#2: uint64 = φ(required_budget_with_buffer#1 <- block@3, required_budget_with_buffer#1 <- block@4, required_budget_with_buffer#1 <- block@5)
debug: Replaced trivial Phi node: let required_budget_with_buffer#2: uint64 = φ(required_budget_with_buffer#1 <- block@3, required_budget_with_buffer#1 <- block@4, required_budget_with_buffer#1 <- block@5) (required_budget_with_buffer#2) with required_budget_with_buffer#1 in current definition for 1 blocks
debug: Added required_budget_with_buffer#1 to Phi node: let required_budget_with_buffer#1: uint64 = φ(required_budget_with_buffer#0 <- block@0, required_budget_with_buffer#1 <- block@6) in block@6: // switch_case_next_L26
debug: Replacing trivial Phi node: let required_budget_with_buffer#1: uint64 = φ(required_budget_with_buffer#0 <- block@0, required_budget_with_buffer#1 <- block@6) (required_budget_with_buffer#1) with required_budget_with_buffer#0
debug: Deleting Phi assignment: let required_budget_with_buffer#1: uint64 = φ(required_budget_with_buffer#0 <- block@0, required_budget_with_buffer#1 <- block@6)
debug: Replaced trivial Phi node: let required_budget_with_buffer#1: uint64 = φ(required_budget_with_buffer#0 <- block@0, required_budget_with_buffer#1 <- block@6) (required_budget_with_buffer#1) with required_budget_with_buffer#0 in current definition for 6 blocks
debug: Added fee_source#0 to Phi node: let fee_source#1: uint64 = φ(fee_source#0 <- block@0) in block@0: // L12
debug: Created Phi assignment: let fee_source#2: uint64 = undefined while trying to resolve 'fee_source' in block@6: // switch_case_next_L26
debug: Added fee_source#1 to Phi node: let fee_source#2: uint64 = φ(fee_source#1 <- block@3) in block@3: // switch_case_0_L28
debug: Added fee_source#1 to Phi node: let fee_source#2: uint64 = φ(fee_source#1 <- block@3, fee_source#1 <- block@4) in block@4: // switch_case_1_L30
debug: Added fee_source#1 to Phi node: let fee_source#2: uint64 = φ(fee_source#1 <- block@3, fee_source#1 <- block@4, fee_source#1 <- block@5) in block@5: // switch_case_default_L26
debug: Replacing trivial Phi node: let fee_source#2: uint64 = φ(fee_source#1 <- block@3, fee_source#1 <- block@4, fee_source#1 <- block@5) (fee_source#2) with fee_source#1
debug: Deleting Phi assignment: let fee_source#2: uint64 = φ(fee_source#1 <- block@3, fee_source#1 <- block@4, fee_source#1 <- block@5)
debug: Replaced trivial Phi node: let fee_source#2: uint64 = φ(fee_source#1 <- block@3, fee_source#1 <- block@4, fee_source#1 <- block@5) (fee_source#2) with fee_source#1 in current definition for 1 blocks
debug: Added fee_source#1 to Phi node: let fee_source#1: uint64 = φ(fee_source#0 <- block@0, fee_source#1 <- block@6) in block@6: // switch_case_next_L26
debug: Replacing trivial Phi node: let fee_source#1: uint64 = φ(fee_source#0 <- block@0, fee_source#1 <- block@6) (fee_source#1) with fee_source#0
debug: Deleting Phi assignment: let fee_source#1: uint64 = φ(fee_source#0 <- block@0, fee_source#1 <- block@6)
debug: Replaced trivial Phi node: let fee_source#1: uint64 = φ(fee_source#0 <- block@0, fee_source#1 <- block@6) (fee_source#1) with fee_source#0 in current definition for 6 blocks
debug: Sealing block@7: // after_while_L20
debug: Terminated block@7: // after_while_L20
debug: Sealing block@0: // L4
debug: Terminated block@0: // L4
debug: Looking for 'start' in an unsealed block creating an incomplete Phi: block@1: // while_top_L11
debug: Created Phi assignment: let start#1: uint64 = undefined while trying to resolve 'start' in block@1: // while_top_L11
debug: Looking for 'item' in an unsealed block creating an incomplete Phi: block@1: // while_top_L11
debug: Created Phi assignment: let item#1: bytes = undefined while trying to resolve 'item' in block@1: // while_top_L11
debug: Looking for 'sequence' in an unsealed block creating an incomplete Phi: block@1: // while_top_L11
debug: Created Phi assignment: let sequence#1: bytes = undefined while trying to resolve 'sequence' in block@1: // while_top_L11
debug: Terminated block@1: // while_top_L11
debug: Sealing block@2: // while_body_L12
debug: Terminated block@2: // while_body_L12
debug: Sealing block@3: // if_body_L13
debug: Terminated block@3: // if_body_L13
debug: Sealing block@4: // after_if_else_L12
debug: Terminated block@4: // after_if_else_L12
debug: Sealing block@1: // while_top_L11
debug: Added start#0 to Phi node: let start#1: uint64 = φ(start#0 <- block@0) in block@0: // L4
debug: Added start#2 to Phi node: let start#1: uint64 = φ(start#0 <- block@0, start#2 <- block@4) in block@4: // after_if_else_L12
debug: Added item#0 to Phi node: let item#1: bytes = φ(item#0 <- block@0) in block@0: // L4
debug: Added item#1 to Phi node: let item#1: bytes = φ(item#0 <- block@0, item#1 <- block@4) in block@4: // after_if_else_L12
debug: Replacing trivial Phi node: let item#1: bytes = φ(item#0 <- block@0, item#1 <- block@4) (item#1) with item#0
debug: Deleting Phi assignment: let item#1: bytes = φ(item#0 <- block@0, item#1 <- block@4)
debug: Replaced trivial Phi node: let item#1: bytes = φ(item#0 <- block@0, item#1 <- block@4) (item#1) with item#0 in current definition for 3 blocks
debug: Added sequence#0 to Phi node: let sequence#1: bytes = φ(sequence#0 <- block@0) in block@0: // L4
debug: Added sequence#1 to Phi node: let sequence#1: bytes = φ(sequence#0 <- block@0, sequence#1 <- block@4) in block@4: // after_if_else_L12
debug: Replacing trivial Phi node: let sequence#1: bytes = φ(sequence#0 <- block@0, sequence#1 <- block@4) (sequence#1) with sequence#0
debug: Deleting Phi assignment: let sequence#1: bytes = φ(sequence#0 <- block@0, sequence#1 <- block@4)
debug: Replaced trivial Phi node: let sequence#1: bytes = φ(sequence#0 <- block@0, sequence#1 <- block@4) (sequence#1) with sequence#0 in current definition for 3 blocks
debug: Sealing block@5: // after_while_L11
debug: Terminated block@5: // after_while_L11
debug: Sealing block@0: // L25
debug: Terminated block@0: // L25
debug: Sealing block@0: // L44
debug: Terminated block@0: // L44
debug: Sealing block@0: // L62
debug: Terminated block@0: // L62
debug: Sealing block@0: // L92
debug: Terminated block@0: // L92
debug: Looking for 'head_offset' in an unsealed block creating an incomplete Phi: block@1: // for_header_L110
debug: Created Phi assignment: let head_offset#1: uint64 = undefined while trying to resolve 'head_offset' in block@1: // for_header_L110
debug: Terminated block@1: // for_header_L110
debug: Sealing block@2: // for_body_L111
debug: Looking for 'head_and_tail' in an unsealed block creating an incomplete Phi: block@1: // for_header_L110
debug: Created Phi assignment: let head_and_tail#1: bytes = undefined while trying to resolve 'head_and_tail' in block@1: // for_header_L110
debug: Looking for 'new_head' in an unsealed block creating an incomplete Phi: block@1: // for_header_L110
debug: Created Phi assignment: let new_head#1: bytes = undefined while trying to resolve 'new_head' in block@1: // for_header_L110
debug: Terminated block@2: // for_body_L111
debug: Sealing block@3: // for_footer_L110
debug: Terminated block@3: // for_footer_L110
debug: Sealing block@1: // for_header_L110
debug: Added head_offset#0 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0) in block@0: // L92
debug: Added head_offset#2 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0, head_offset#2 <- block@3) in block@3: // for_footer_L110
debug: Added head_and_tail#0 to Phi node: let head_and_tail#1: bytes = φ(head_and_tail#0 <- block@0) in block@0: // L92
debug: Added head_and_tail#1 to Phi node: let head_and_tail#1: bytes = φ(head_and_tail#0 <- block@0, head_and_tail#1 <- block@3) in block@3: // for_footer_L110
debug: Replacing trivial Phi node: let head_and_tail#1: bytes = φ(head_and_tail#0 <- block@0, head_and_tail#1 <- block@3) (head_and_tail#1) with head_and_tail#0
debug: Deleting Phi assignment: let head_and_tail#1: bytes = φ(head_and_tail#0 <- block@0, head_and_tail#1 <- block@3)
debug: Replaced trivial Phi node: let head_and_tail#1: bytes = φ(head_and_tail#0 <- block@0, head_and_tail#1 <- block@3) (head_and_tail#1) with head_and_tail#0 in current definition for 3 blocks
debug: Added new_head#0 to Phi node: let new_head#1: bytes = φ(new_head#0 <- block@0) in block@0: // L92
debug: Added new_head#2 to Phi node: let new_head#1: bytes = φ(new_head#0 <- block@0, new_head#2 <- block@3) in block@3: // for_footer_L110
debug: Sealing block@4: // after_for_L110
debug: Created Phi assignment: let length_minus_1#1: uint64 = undefined while trying to resolve 'length_minus_1' in block@1: // for_header_L110
debug: Added length_minus_1#0 to Phi node: let length_minus_1#1: uint64 = φ(length_minus_1#0 <- block@0) in block@0: // L92
debug: Added length_minus_1#1 to Phi node: let length_minus_1#1: uint64 = φ(length_minus_1#0 <- block@0, length_minus_1#1 <- block@3) in block@3: // for_footer_L110
debug: Replacing trivial Phi node: let length_minus_1#1: uint64 = φ(length_minus_1#0 <- block@0, length_minus_1#1 <- block@3) (length_minus_1#1) with length_minus_1#0
debug: Deleting Phi assignment: let length_minus_1#1: uint64 = φ(length_minus_1#0 <- block@0, length_minus_1#1 <- block@3)
debug: Replaced trivial Phi node: let length_minus_1#1: uint64 = φ(length_minus_1#0 <- block@0, length_minus_1#1 <- block@3) (length_minus_1#1) with length_minus_1#0 in current definition for 3 blocks
debug: Created Phi assignment: let popped_header_offset#1: uint64 = undefined while trying to resolve 'popped_header_offset' in block@1: // for_header_L110
debug: Added popped_header_offset#0 to Phi node: let popped_header_offset#1: uint64 = φ(popped_header_offset#0 <- block@0) in block@0: // L92
debug: Added popped_header_offset#1 to Phi node: let popped_header_offset#1: uint64 = φ(popped_header_offset#0 <- block@0, popped_header_offset#1 <- block@3) in block@3: // for_footer_L110
debug: Replacing trivial Phi node: let popped_header_offset#1: uint64 = φ(popped_header_offset#0 <- block@0, popped_header_offset#1 <- block@3) (popped_header_offset#1) with popped_header_offset#0
debug: Deleting Phi assignment: let popped_header_offset#1: uint64 = φ(popped_header_offset#0 <- block@0, popped_header_offset#1 <- block@3)
debug: Replaced trivial Phi node: let popped_header_offset#1: uint64 = φ(popped_header_offset#0 <- block@0, popped_header_offset#1 <- block@3) (popped_header_offset#1) with popped_header_offset#0 in current definition for 3 blocks
debug: Created Phi assignment: let popped_offset#1: uint64 = undefined while trying to resolve 'popped_offset' in block@1: // for_header_L110
debug: Added popped_offset#0 to Phi node: let popped_offset#1: uint64 = φ(popped_offset#0 <- block@0) in block@0: // L92
debug: Added popped_offset#1 to Phi node: let popped_offset#1: uint64 = φ(popped_offset#0 <- block@0, popped_offset#1 <- block@3) in block@3: // for_footer_L110
debug: Replacing trivial Phi node: let popped_offset#1: uint64 = φ(popped_offset#0 <- block@0, popped_offset#1 <- block@3) (popped_offset#1) with popped_offset#0
debug: Deleting Phi assignment: let popped_offset#1: uint64 = φ(popped_offset#0 <- block@0, popped_offset#1 <- block@3)
debug: Replaced trivial Phi node: let popped_offset#1: uint64 = φ(popped_offset#0 <- block@0, popped_offset#1 <- block@3) (popped_offset#1) with popped_offset#0 in current definition for 3 blocks
debug: Created Phi assignment: let popped#1: bytes = undefined while trying to resolve 'popped' in block@1: // for_header_L110
debug: Added popped#0 to Phi node: let popped#1: bytes = φ(popped#0 <- block@0) in block@0: // L92
debug: Added popped#1 to Phi node: let popped#1: bytes = φ(popped#0 <- block@0, popped#1 <- block@3) in block@3: // for_footer_L110
debug: Replacing trivial Phi node: let popped#1: bytes = φ(popped#0 <- block@0, popped#1 <- block@3) (popped#1) with popped#0
debug: Deleting Phi assignment: let popped#1: bytes = φ(popped#0 <- block@0, popped#1 <- block@3)
debug: Replaced trivial Phi node: let popped#1: bytes = φ(popped#0 <- block@0, popped#1 <- block@3) (popped#1) with popped#0 in current definition for 3 blocks
debug: Terminated block@4: // after_for_L110
debug: Sealing block@0: // L124
debug: Terminated block@0: // L124
debug: Sealing block@1: // if_body_L147
debug: Terminated block@1: // if_body_L147
debug: Sealing block@2: // after_if_else_L146
debug: Created Phi assignment: let array_length#1: uint64 = undefined while trying to resolve 'array_length' in block@2: // after_if_else_L146
debug: Added array_length#0 to Phi node: let array_length#1: uint64 = φ(array_length#0 <- block@0) in block@0: // L124
debug: Added array_length#0 to Phi node: let array_length#1: uint64 = φ(array_length#0 <- block@0, array_length#0 <- block@1) in block@1: // if_body_L147
debug: Replacing trivial Phi node: let array_length#1: uint64 = φ(array_length#0 <- block@0, array_length#0 <- block@1) (array_length#1) with array_length#0
debug: Deleting Phi assignment: let array_length#1: uint64 = φ(array_length#0 <- block@0, array_length#0 <- block@1)
debug: Replaced trivial Phi node: let array_length#1: uint64 = φ(array_length#0 <- block@0, array_length#0 <- block@1) (array_length#1) with array_length#0 in current definition for 1 blocks
debug: Created Phi assignment: let is_packed#1: bool = undefined while trying to resolve 'is_packed' in block@2: // after_if_else_L146
debug: Added is_packed#0 to Phi node: let is_packed#1: bool = φ(is_packed#0 <- block@0) in block@0: // L124
debug: Added is_packed#0 to Phi node: let is_packed#1: bool = φ(is_packed#0 <- block@0, is_packed#0 <- block@1) in block@1: // if_body_L147
debug: Replacing trivial Phi node: let is_packed#1: bool = φ(is_packed#0 <- block@0, is_packed#0 <- block@1) (is_packed#1) with is_packed#0
debug: Deleting Phi assignment: let is_packed#1: bool = φ(is_packed#0 <- block@0, is_packed#0 <- block@1)
debug: Replaced trivial Phi node: let is_packed#1: bool = φ(is_packed#0 <- block@0, is_packed#0 <- block@1) (is_packed#1) with is_packed#0 in current definition for 1 blocks
debug: Created Phi assignment: let new_items_count#1: uint64 = undefined while trying to resolve 'new_items_count' in block@2: // after_if_else_L146
debug: Added new_items_count#0 to Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0) in block@0: // L124
debug: Added new_items_count#0 to Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#0 <- block@1) in block@1: // if_body_L147
debug: Replacing trivial Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#0 <- block@1) (new_items_count#1) with new_items_count#0
debug: Deleting Phi assignment: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#0 <- block@1)
debug: Replaced trivial Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#0 <- block@1) (new_items_count#1) with new_items_count#0 in current definition for 1 blocks
debug: Terminated block@2: // after_if_else_L146
debug: Looking for 'i' in an unsealed block creating an incomplete Phi: block@3: // for_header_L150
debug: Created Phi assignment: let i#1: uint64 = undefined while trying to resolve 'i' in block@3: // for_header_L150
debug: Terminated block@3: // for_header_L150
debug: Sealing block@4: // for_body_L151
debug: Looking for 'result' in an unsealed block creating an incomplete Phi: block@3: // for_header_L150
debug: Created Phi assignment: let result#2: bytes = undefined while trying to resolve 'result' in block@3: // for_header_L150
debug: Looking for 'write_offset' in an unsealed block creating an incomplete Phi: block@3: // for_header_L150
debug: Created Phi assignment: let write_offset#1: uint64 = undefined while trying to resolve 'write_offset' in block@3: // for_header_L150
debug: Looking for 'new_items_bytes' in an unsealed block creating an incomplete Phi: block@3: // for_header_L150
debug: Created Phi assignment: let new_items_bytes#1: bytes = undefined while trying to resolve 'new_items_bytes' in block@3: // for_header_L150
debug: Terminated block@4: // for_body_L151
debug: Sealing block@5: // for_footer_L150
debug: Terminated block@5: // for_footer_L150
debug: Sealing block@3: // for_header_L150
debug: Added i#0 to Phi node: let i#1: uint64 = φ(i#0 <- block@2) in block@2: // after_if_else_L146
debug: Added i#2 to Phi node: let i#1: uint64 = φ(i#0 <- block@2, i#2 <- block@5) in block@5: // for_footer_L150
debug: Created Phi assignment: let result#4: bytes = undefined while trying to resolve 'result' in block@2: // after_if_else_L146
debug: Added result#0 to Phi node: let result#4: bytes = φ(result#0 <- block@0) in block@0: // L124
debug: Added result#1 to Phi node: let result#4: bytes = φ(result#0 <- block@0, result#1 <- block@1) in block@1: // if_body_L147
debug: Added result#4 to Phi node: let result#2: bytes = φ(result#4 <- block@2) in block@2: // after_if_else_L146
debug: Added result#3 to Phi node: let result#2: bytes = φ(result#4 <- block@2, result#3 <- block@5) in block@5: // for_footer_L150
debug: Added write_offset#0 to Phi node: let write_offset#1: uint64 = φ(write_offset#0 <- block@2) in block@2: // after_if_else_L146
debug: Added write_offset#2 to Phi node: let write_offset#1: uint64 = φ(write_offset#0 <- block@2, write_offset#2 <- block@5) in block@5: // for_footer_L150
debug: Created Phi assignment: let new_items_bytes#2: bytes = undefined while trying to resolve 'new_items_bytes' in block@2: // after_if_else_L146
debug: Added new_items_bytes#0 to Phi node: let new_items_bytes#2: bytes = φ(new_items_bytes#0 <- block@0) in block@0: // L124
debug: Added new_items_bytes#0 to Phi node: let new_items_bytes#2: bytes = φ(new_items_bytes#0 <- block@0, new_items_bytes#0 <- block@1) in block@1: // if_body_L147
debug: Replacing trivial Phi node: let new_items_bytes#2: bytes = φ(new_items_bytes#0 <- block@0, new_items_bytes#0 <- block@1) (new_items_bytes#2) with new_items_bytes#0
debug: Deleting Phi assignment: let new_items_bytes#2: bytes = φ(new_items_bytes#0 <- block@0, new_items_bytes#0 <- block@1)
debug: Replaced trivial Phi node: let new_items_bytes#2: bytes = φ(new_items_bytes#0 <- block@0, new_items_bytes#0 <- block@1) (new_items_bytes#2) with new_items_bytes#0 in current definition for 1 blocks
debug: Added new_items_bytes#0 to Phi node: let new_items_bytes#1: bytes = φ(new_items_bytes#0 <- block@2) in block@2: // after_if_else_L146
debug: Added new_items_bytes#1 to Phi node: let new_items_bytes#1: bytes = φ(new_items_bytes#0 <- block@2, new_items_bytes#1 <- block@5) in block@5: // for_footer_L150
debug: Replacing trivial Phi node: let new_items_bytes#1: bytes = φ(new_items_bytes#0 <- block@2, new_items_bytes#1 <- block@5) (new_items_bytes#1) with new_items_bytes#0
debug: Deleting Phi assignment: let new_items_bytes#1: bytes = φ(new_items_bytes#0 <- block@2, new_items_bytes#1 <- block@5)
debug: Replaced trivial Phi node: let new_items_bytes#1: bytes = φ(new_items_bytes#0 <- block@2, new_items_bytes#1 <- block@5) (new_items_bytes#1) with new_items_bytes#0 in current definition for 3 blocks
debug: Sealing block@6: // after_for_L150
debug: Terminated block@6: // after_for_L150
debug: Sealing block@0: // L157
debug: Terminated block@0: // L157
debug: Sealing block@0: // L189
debug: Terminated block@0: // L189
debug: Looking for 'head_offset' in an unsealed block creating an incomplete Phi: block@1: // for_header_L199
debug: Created Phi assignment: let head_offset#1: uint64 = undefined while trying to resolve 'head_offset' in block@1: // for_header_L199
debug: Terminated block@1: // for_header_L199
debug: Sealing block@2: // for_body_L200
debug: Looking for 'array_head_and_tail' in an unsealed block creating an incomplete Phi: block@1: // for_header_L199
debug: Created Phi assignment: let array_head_and_tail#1: bytes = undefined while trying to resolve 'array_head_and_tail' in block@1: // for_header_L199
debug: Looking for 'new_head' in an unsealed block creating an incomplete Phi: block@1: // for_header_L199
debug: Created Phi assignment: let new_head#1: bytes = undefined while trying to resolve 'new_head' in block@1: // for_header_L199
debug: Looking for 'item_offset_adjustment' in an unsealed block creating an incomplete Phi: block@1: // for_header_L199
debug: Created Phi assignment: let item_offset_adjustment#1: uint64 = undefined while trying to resolve 'item_offset_adjustment' in block@1: // for_header_L199
debug: Terminated block@2: // for_body_L200
debug: Sealing block@3: // for_footer_L199
debug: Terminated block@3: // for_footer_L199
debug: Sealing block@1: // for_header_L199
debug: Added head_offset#0 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0) in block@0: // L189
debug: Added head_offset#2 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0, head_offset#2 <- block@3) in block@3: // for_footer_L199
debug: Added array_head_and_tail#0 to Phi node: let array_head_and_tail#1: bytes = φ(array_head_and_tail#0 <- block@0) in block@0: // L189
debug: Added array_head_and_tail#1 to Phi node: let array_head_and_tail#1: bytes = φ(array_head_and_tail#0 <- block@0, array_head_and_tail#1 <- block@3) in block@3: // for_footer_L199
debug: Replacing trivial Phi node: let array_head_and_tail#1: bytes = φ(array_head_and_tail#0 <- block@0, array_head_and_tail#1 <- block@3) (array_head_and_tail#1) with array_head_and_tail#0
debug: Deleting Phi assignment: let array_head_and_tail#1: bytes = φ(array_head_and_tail#0 <- block@0, array_head_and_tail#1 <- block@3)
debug: Replaced trivial Phi node: let array_head_and_tail#1: bytes = φ(array_head_and_tail#0 <- block@0, array_head_and_tail#1 <- block@3) (array_head_and_tail#1) with array_head_and_tail#0 in current definition for 3 blocks
debug: Added new_head#0 to Phi node: let new_head#1: bytes = φ(new_head#0 <- block@0) in block@0: // L189
debug: Added new_head#2 to Phi node: let new_head#1: bytes = φ(new_head#0 <- block@0, new_head#2 <- block@3) in block@3: // for_footer_L199
debug: Added item_offset_adjustment#0 to Phi node: let item_offset_adjustment#1: uint64 = φ(item_offset_adjustment#0 <- block@0) in block@0: // L189
debug: Added item_offset_adjustment#1 to Phi node: let item_offset_adjustment#1: uint64 = φ(item_offset_adjustment#0 <- block@0, item_offset_adjustment#1 <- block@3) in block@3: // for_footer_L199
debug: Replacing trivial Phi node: let item_offset_adjustment#1: uint64 = φ(item_offset_adjustment#0 <- block@0, item_offset_adjustment#1 <- block@3) (item_offset_adjustment#1) with item_offset_adjustment#0
debug: Deleting Phi assignment: let item_offset_adjustment#1: uint64 = φ(item_offset_adjustment#0 <- block@0, item_offset_adjustment#1 <- block@3)
debug: Replaced trivial Phi node: let item_offset_adjustment#1: uint64 = φ(item_offset_adjustment#0 <- block@0, item_offset_adjustment#1 <- block@3) (item_offset_adjustment#1) with item_offset_adjustment#0 in current definition for 3 blocks
debug: Sealing block@4: // after_for_L199
debug: Created Phi assignment: let new_items_count#1: uint64 = undefined while trying to resolve 'new_items_count' in block@1: // for_header_L199
debug: Added new_items_count#0 to Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0) in block@0: // L189
debug: Added new_items_count#1 to Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#1 <- block@3) in block@3: // for_footer_L199
debug: Replacing trivial Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#1 <- block@3) (new_items_count#1) with new_items_count#0
debug: Deleting Phi assignment: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#1 <- block@3)
debug: Replaced trivial Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#1 <- block@3) (new_items_count#1) with new_items_count#0 in current definition for 3 blocks
debug: Terminated block@4: // after_for_L199
debug: Looking for 'head_offset' in an unsealed block creating an incomplete Phi: block@5: // for_header_L204
debug: Created Phi assignment: let head_offset#4: uint64 = undefined while trying to resolve 'head_offset' in block@5: // for_header_L204
debug: Terminated block@5: // for_header_L204
debug: Sealing block@6: // for_body_L205
debug: Looking for 'new_head_and_tail' in an unsealed block creating an incomplete Phi: block@5: // for_header_L204
debug: Created Phi assignment: let new_head_and_tail#1: bytes = undefined while trying to resolve 'new_head_and_tail' in block@5: // for_header_L204
debug: Looking for 'new_head' in an unsealed block creating an incomplete Phi: block@5: // for_header_L204
debug: Created Phi assignment: let new_head#3: bytes = undefined while trying to resolve 'new_head' in block@5: // for_header_L204
debug: Looking for 'item_offset_adjustment' in an unsealed block creating an incomplete Phi: block@5: // for_header_L204
debug: Created Phi assignment: let item_offset_adjustment#3: uint64 = undefined while trying to resolve 'item_offset_adjustment' in block@5: // for_header_L204
debug: Terminated block@6: // for_body_L205
debug: Sealing block@7: // for_footer_L204
debug: Terminated block@7: // for_footer_L204
debug: Sealing block@5: // for_header_L204
debug: Added head_offset#3 to Phi node: let head_offset#4: uint64 = φ(head_offset#3 <- block@4) in block@4: // after_for_L199
debug: Added head_offset#5 to Phi node: let head_offset#4: uint64 = φ(head_offset#3 <- block@4, head_offset#5 <- block@7) in block@7: // for_footer_L204
debug: Created Phi assignment: let new_head_and_tail#2: bytes = undefined while trying to resolve 'new_head_and_tail' in block@1: // for_header_L199
debug: Added new_head_and_tail#0 to Phi node: let new_head_and_tail#2: bytes = φ(new_head_and_tail#0 <- block@0) in block@0: // L189
debug: Added new_head_and_tail#2 to Phi node: let new_head_and_tail#2: bytes = φ(new_head_and_tail#0 <- block@0, new_head_and_tail#2 <- block@3) in block@3: // for_footer_L199
debug: Replacing trivial Phi node: let new_head_and_tail#2: bytes = φ(new_head_and_tail#0 <- block@0, new_head_and_tail#2 <- block@3) (new_head_and_tail#2) with new_head_and_tail#0
debug: Deleting Phi assignment: let new_head_and_tail#2: bytes = φ(new_head_and_tail#0 <- block@0, new_head_and_tail#2 <- block@3)
debug: Replaced trivial Phi node: let new_head_and_tail#2: bytes = φ(new_head_and_tail#0 <- block@0, new_head_and_tail#2 <- block@3) (new_head_and_tail#2) with new_head_and_tail#0 in current definition for 3 blocks
debug: Added new_head_and_tail#0 to Phi node: let new_head_and_tail#1: bytes = φ(new_head_and_tail#0 <- block@4) in block@4: // after_for_L199
debug: Added new_head_and_tail#1 to Phi node: let new_head_and_tail#1: bytes = φ(new_head_and_tail#0 <- block@4, new_head_and_tail#1 <- block@7) in block@7: // for_footer_L204
debug: Replacing trivial Phi node: let new_head_and_tail#1: bytes = φ(new_head_and_tail#0 <- block@4, new_head_and_tail#1 <- block@7) (new_head_and_tail#1) with new_head_and_tail#0
debug: Deleting Phi assignment: let new_head_and_tail#1: bytes = φ(new_head_and_tail#0 <- block@4, new_head_and_tail#1 <- block@7)
debug: Replaced trivial Phi node: let new_head_and_tail#1: bytes = φ(new_head_and_tail#0 <- block@4, new_head_and_tail#1 <- block@7) (new_head_and_tail#1) with new_head_and_tail#0 in current definition for 3 blocks
debug: Added new_head#1 to Phi node: let new_head#3: bytes = φ(new_head#1 <- block@4) in block@4: // after_for_L199
debug: Added new_head#4 to Phi node: let new_head#3: bytes = φ(new_head#1 <- block@4, new_head#4 <- block@7) in block@7: // for_footer_L204
debug: Added item_offset_adjustment#2 to Phi node: let item_offset_adjustment#3: uint64 = φ(item_offset_adjustment#2 <- block@4) in block@4: // after_for_L199
debug: Added item_offset_adjustment#3 to Phi node: let item_offset_adjustment#3: uint64 = φ(item_offset_adjustment#2 <- block@4, item_offset_adjustment#3 <- block@7) in block@7: // for_footer_L204
debug: Replacing trivial Phi node: let item_offset_adjustment#3: uint64 = φ(item_offset_adjustment#2 <- block@4, item_offset_adjustment#3 <- block@7) (item_offset_adjustment#3) with item_offset_adjustment#2
debug: Deleting Phi assignment: let item_offset_adjustment#3: uint64 = φ(item_offset_adjustment#2 <- block@4, item_offset_adjustment#3 <- block@7)
debug: Replaced trivial Phi node: let item_offset_adjustment#3: uint64 = φ(item_offset_adjustment#2 <- block@4, item_offset_adjustment#3 <- block@7) (item_offset_adjustment#3) with item_offset_adjustment#2 in current definition for 3 blocks
debug: Sealing block@8: // after_for_L204
debug: Created Phi assignment: let array_items_count#1: uint64 = undefined while trying to resolve 'array_items_count' in block@5: // for_header_L204
debug: Created Phi assignment: let array_items_count#2: uint64 = undefined while trying to resolve 'array_items_count' in block@1: // for_header_L199
debug: Added array_items_count#0 to Phi node: let array_items_count#2: uint64 = φ(array_items_count#0 <- block@0) in block@0: // L189
debug: Added array_items_count#2 to Phi node: let array_items_count#2: uint64 = φ(array_items_count#0 <- block@0, array_items_count#2 <- block@3) in block@3: // for_footer_L199
debug: Replacing trivial Phi node: let array_items_count#2: uint64 = φ(array_items_count#0 <- block@0, array_items_count#2 <- block@3) (array_items_count#2) with array_items_count#0
debug: Deleting Phi assignment: let array_items_count#2: uint64 = φ(array_items_count#0 <- block@0, array_items_count#2 <- block@3)
debug: Replaced trivial Phi node: let array_items_count#2: uint64 = φ(array_items_count#0 <- block@0, array_items_count#2 <- block@3) (array_items_count#2) with array_items_count#0 in current definition for 3 blocks
debug: Added array_items_count#0 to Phi node: let array_items_count#1: uint64 = φ(array_items_count#0 <- block@4) in block@4: // after_for_L199
debug: Added array_items_count#1 to Phi node: let array_items_count#1: uint64 = φ(array_items_count#0 <- block@4, array_items_count#1 <- block@7) in block@7: // for_footer_L204
debug: Replacing trivial Phi node: let array_items_count#1: uint64 = φ(array_items_count#0 <- block@4, array_items_count#1 <- block@7) (array_items_count#1) with array_items_count#0
debug: Deleting Phi assignment: let array_items_count#1: uint64 = φ(array_items_count#0 <- block@4, array_items_count#1 <- block@7)
debug: Replaced trivial Phi node: let array_items_count#1: uint64 = φ(array_items_count#0 <- block@4, array_items_count#1 <- block@7) (array_items_count#1) with array_items_count#0 in current definition for 3 blocks
debug: Created Phi assignment: let new_items_count#2: uint64 = undefined while trying to resolve 'new_items_count' in block@5: // for_header_L204
debug: Added new_items_count#0 to Phi node: let new_items_count#2: uint64 = φ(new_items_count#0 <- block@4) in block@4: // after_for_L199
debug: Added new_items_count#2 to Phi node: let new_items_count#2: uint64 = φ(new_items_count#0 <- block@4, new_items_count#2 <- block@7) in block@7: // for_footer_L204
debug: Replacing trivial Phi node: let new_items_count#2: uint64 = φ(new_items_count#0 <- block@4, new_items_count#2 <- block@7) (new_items_count#2) with new_items_count#0
debug: Deleting Phi assignment: let new_items_count#2: uint64 = φ(new_items_count#0 <- block@4, new_items_count#2 <- block@7)
debug: Replaced trivial Phi node: let new_items_count#2: uint64 = φ(new_items_count#0 <- block@4, new_items_count#2 <- block@7) (new_items_count#2) with new_items_count#0 in current definition for 3 blocks
debug: Created Phi assignment: let array_head_and_tail#2: bytes = undefined while trying to resolve 'array_head_and_tail' in block@5: // for_header_L204
debug: Added array_head_and_tail#0 to Phi node: let array_head_and_tail#2: bytes = φ(array_head_and_tail#0 <- block@4) in block@4: // after_for_L199
debug: Added array_head_and_tail#2 to Phi node: let array_head_and_tail#2: bytes = φ(array_head_and_tail#0 <- block@4, array_head_and_tail#2 <- block@7) in block@7: // for_footer_L204
debug: Replacing trivial Phi node: let array_head_and_tail#2: bytes = φ(array_head_and_tail#0 <- block@4, array_head_and_tail#2 <- block@7) (array_head_and_tail#2) with array_head_and_tail#0
debug: Deleting Phi assignment: let array_head_and_tail#2: bytes = φ(array_head_and_tail#0 <- block@4, array_head_and_tail#2 <- block@7)
debug: Replaced trivial Phi node: let array_head_and_tail#2: bytes = φ(array_head_and_tail#0 <- block@4, array_head_and_tail#2 <- block@7) (array_head_and_tail#2) with array_head_and_tail#0 in current definition for 3 blocks
debug: Terminated block@8: // after_for_L204
debug: Sealing block@0: // L217
debug: Terminated block@0: // L217
debug: Sealing block@0: // L240
debug: Terminated block@0: // L240
debug: Sealing block@0: // L252
debug: Terminated block@0: // L252
debug: Looking for 'head_offset' in an unsealed block creating an incomplete Phi: block@1: // for_header_L269
debug: Created Phi assignment: let head_offset#1: uint64 = undefined while trying to resolve 'head_offset' in block@1: // for_header_L269
debug: Terminated block@1: // for_header_L269
debug: Sealing block@2: // for_body_L270
debug: Looking for 'new_head_and_tail' in an unsealed block creating an incomplete Phi: block@1: // for_header_L269
debug: Created Phi assignment: let new_head_and_tail#1: bytes = undefined while trying to resolve 'new_head_and_tail' in block@1: // for_header_L269
debug: Looking for 'new_item_length' in an unsealed block creating an incomplete Phi: block@1: // for_header_L269
debug: Created Phi assignment: let new_item_length#1: uint64 = undefined while trying to resolve 'new_item_length' in block@1: // for_header_L269
debug: Looking for 'original_item_length' in an unsealed block creating an incomplete Phi: block@1: // for_header_L269
debug: Created Phi assignment: let original_item_length#1: uint64 = undefined while trying to resolve 'original_item_length' in block@1: // for_header_L269
debug: Terminated block@2: // for_body_L270
debug: Sealing block@3: // for_footer_L269
debug: Terminated block@3: // for_footer_L269
debug: Sealing block@1: // for_header_L269
debug: Added head_offset#0 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0) in block@0: // L252
debug: Added head_offset#2 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0, head_offset#2 <- block@3) in block@3: // for_footer_L269
debug: Added new_head_and_tail#0 to Phi node: let new_head_and_tail#1: bytes = φ(new_head_and_tail#0 <- block@0) in block@0: // L252
debug: Added new_head_and_tail#2 to Phi node: let new_head_and_tail#1: bytes = φ(new_head_and_tail#0 <- block@0, new_head_and_tail#2 <- block@3) in block@3: // for_footer_L269
debug: Added new_item_length#0 to Phi node: let new_item_length#1: uint64 = φ(new_item_length#0 <- block@0) in block@0: // L252
debug: Added new_item_length#1 to Phi node: let new_item_length#1: uint64 = φ(new_item_length#0 <- block@0, new_item_length#1 <- block@3) in block@3: // for_footer_L269
debug: Replacing trivial Phi node: let new_item_length#1: uint64 = φ(new_item_length#0 <- block@0, new_item_length#1 <- block@3) (new_item_length#1) with new_item_length#0
debug: Deleting Phi assignment: let new_item_length#1: uint64 = φ(new_item_length#0 <- block@0, new_item_length#1 <- block@3)
debug: Replaced trivial Phi node: let new_item_length#1: uint64 = φ(new_item_length#0 <- block@0, new_item_length#1 <- block@3) (new_item_length#1) with new_item_length#0 in current definition for 3 blocks
debug: Added original_item_length#0 to Phi node: let original_item_length#1: uint64 = φ(original_item_length#0 <- block@0) in block@0: // L252
debug: Added original_item_length#1 to Phi node: let original_item_length#1: uint64 = φ(original_item_length#0 <- block@0, original_item_length#1 <- block@3) in block@3: // for_footer_L269
debug: Replacing trivial Phi node: let original_item_length#1: uint64 = φ(original_item_length#0 <- block@0, original_item_length#1 <- block@3) (original_item_length#1) with original_item_length#0
debug: Deleting Phi assignment: let original_item_length#1: uint64 = φ(original_item_length#0 <- block@0, original_item_length#1 <- block@3)
debug: Replaced trivial Phi node: let original_item_length#1: uint64 = φ(original_item_length#0 <- block@0, original_item_length#1 <- block@3) (original_item_length#1) with original_item_length#0 in current definition for 3 blocks
debug: Sealing block@4: // after_for_L269
debug: Terminated block@4: // after_for_L269
debug: Sealing block@0: // L278
debug: Terminated block@0: // L278
debug: Sealing block@0: // L306
debug: Terminated block@0: // L306
debug: Looking for 'head_offset' in an unsealed block creating an incomplete Phi: block@1: // for_header_L327
debug: Created Phi assignment: let head_offset#1: uint64 = undefined while trying to resolve 'head_offset' in block@1: // for_header_L327
debug: Terminated block@1: // for_header_L327
debug: Sealing block@2: // for_body_L328
debug: Looking for 'tail_offset' in an unsealed block creating an incomplete Phi: block@1: // for_header_L327
debug: Created Phi assignment: let tail_offset#1: uint64 = undefined while trying to resolve 'tail_offset' in block@1: // for_header_L327
debug: Looking for 'array_head_and_tail' in an unsealed block creating an incomplete Phi: block@1: // for_header_L327
debug: Created Phi assignment: let array_head_and_tail#1: bytes = undefined while trying to resolve 'array_head_and_tail' in block@1: // for_header_L327
debug: Terminated block@2: // for_body_L328
debug: Sealing block@3: // for_footer_L327
debug: Terminated block@3: // for_footer_L327
debug: Sealing block@1: // for_header_L327
debug: Added head_offset#0 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0) in block@0: // L306
debug: Added head_offset#3 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0, head_offset#3 <- block@3) in block@3: // for_footer_L327
debug: Added tail_offset#0 to Phi node: let tail_offset#1: uint64 = φ(tail_offset#0 <- block@0) in block@0: // L306
debug: Added tail_offset#2 to Phi node: let tail_offset#1: uint64 = φ(tail_offset#0 <- block@0, tail_offset#2 <- block@3) in block@3: // for_footer_L327
debug: Added array_head_and_tail#0 to Phi node: let array_head_and_tail#1: bytes = φ(array_head_and_tail#0 <- block@0) in block@0: // L306
debug: Added array_head_and_tail#2 to Phi node: let array_head_and_tail#1: bytes = φ(array_head_and_tail#0 <- block@0, array_head_and_tail#2 <- block@3) in block@3: // for_footer_L327
debug: Sealing block@4: // after_for_L327
debug: Terminated block@4: // after_for_L327
debug: Sealing block@0: // L4
debug: Terminated block@0: // L4
debug: Sealing block@1: // abi_routing_L4
debug: Terminated block@1: // abi_routing_L4
debug: Sealing block@2: // bare_routing_L4
debug: Terminated block@2: // bare_routing_L4
debug: Sealing block@3: // after_if_else_L4
debug: Terminated block@3: // after_if_else_L4
debug: Sealing block@0: // L138
debug: Terminated block@0: // L138
debug: Looking for 'loop_counter%0' in an unsealed block creating an incomplete Phi: block@1: // for_body_L142
debug: Created Phi assignment: let loop_counter%0#1: uint64 = undefined while trying to resolve 'loop_counter%0' in block@1: // for_body_L142
debug: Looking for 'total' in an unsealed block creating an incomplete Phi: block@1: // for_body_L142
debug: Created Phi assignment: let total#1: uint64 = undefined while trying to resolve 'total' in block@1: // for_body_L142
debug: Looking for 'value' in an unsealed block creating an incomplete Phi: block@1: // for_body_L142
debug: Created Phi assignment: let value#1: uint64 = undefined while trying to resolve 'value' in block@1: // for_body_L142
debug: Terminated block@1: // for_body_L142
debug: Sealing block@2: // for_footer_L141
debug: Terminated block@2: // for_footer_L141
debug: Sealing block@3: // for_header_1_L141
debug: Terminated block@3: // for_header_1_L141
debug: Sealing block@4: // for_header_2_L141
debug: Terminated block@4: // for_header_2_L141
debug: Sealing block@1: // for_body_L142
debug: Added loop_counter%0#0 to Phi node: let loop_counter%0#1: uint64 = φ(loop_counter%0#0 <- block@0) in block@0: // L138
debug: Added loop_counter%0#2 to Phi node: let loop_counter%0#1: uint64 = φ(loop_counter%0#0 <- block@0, loop_counter%0#2 <- block@3) in block@3: // for_header_1_L141
debug: Added loop_counter%0#3 to Phi node: let loop_counter%0#1: uint64 = φ(loop_counter%0#0 <- block@0, loop_counter%0#2 <- block@3, loop_counter%0#3 <- block@4) in block@4: // for_header_2_L141
debug: Added total#0 to Phi node: let total#1: uint64 = φ(total#0 <- block@0) in block@0: // L138
debug: Added total#2 to Phi node: let total#1: uint64 = φ(total#0 <- block@0, total#2 <- block@3) in block@3: // for_header_1_L141
debug: Added total#2 to Phi node: let total#1: uint64 = φ(total#0 <- block@0, total#2 <- block@3, total#2 <- block@4) in block@4: // for_header_2_L141
debug: Added value#0 to Phi node: let value#1: uint64 = φ(value#0 <- block@0) in block@0: // L138
debug: Added value#2 to Phi node: let value#1: uint64 = φ(value#0 <- block@0, value#2 <- block@3) in block@3: // for_header_1_L141
debug: Added value#3 to Phi node: let value#1: uint64 = φ(value#0 <- block@0, value#2 <- block@3, value#3 <- block@4) in block@4: // for_header_2_L141
debug: Sealing block@5: // after_for_L141
debug: Terminated block@5: // after_for_L141
debug: Sealing block@0: // L71
debug: Terminated block@0: // L71
debug: Sealing block@0: // L122
debug: Terminated block@0: // L122
debug: Sealing block@0: // L147
debug: Terminated block@0: // L147
debug: Sealing block@0: // L129
debug: Terminated block@0: // L129
debug: Looking for '_i' in an unsealed block creating an incomplete Phi: block@1: // for_header_L133
debug: Created Phi assignment: let _i#1: uint64 = undefined while trying to resolve '_i' in block@1: // for_header_L133
debug: Terminated block@1: // for_header_L133
debug: Sealing block@2: // for_body_L134
debug: Looking for 'result' in an unsealed block creating an incomplete Phi: block@1: // for_header_L133
debug: Created Phi assignment: let result#1: bytes = undefined while trying to resolve 'result' in block@1: // for_header_L133
debug: Looking for 'b' in an unsealed block creating an incomplete Phi: block@1: // for_header_L133
debug: Created Phi assignment: let b#1: bytes = undefined while trying to resolve 'b' in block@1: // for_header_L133
debug: Terminated block@2: // for_body_L134
debug: Sealing block@3: // for_footer_L133
debug: Terminated block@3: // for_footer_L133
debug: Sealing block@1: // for_header_L133
debug: Added _i#0 to Phi node: let _i#1: uint64 = φ(_i#0 <- block@0) in block@0: // L129
debug: Added _i#2 to Phi node: let _i#1: uint64 = φ(_i#0 <- block@0, _i#2 <- block@3) in block@3: // for_footer_L133
debug: Added result#0 to Phi node: let result#1: bytes = φ(result#0 <- block@0) in block@0: // L129
debug: Added result#2 to Phi node: let result#1: bytes = φ(result#0 <- block@0, result#2 <- block@3) in block@3: // for_footer_L133
debug: Added b#0 to Phi node: let b#1: bytes = φ(b#0 <- block@0) in block@0: // L129
debug: Added b#1 to Phi node: let b#1: bytes = φ(b#0 <- block@0, b#1 <- block@3) in block@3: // for_footer_L133
debug: Replacing trivial Phi node: let b#1: bytes = φ(b#0 <- block@0, b#1 <- block@3) (b#1) with b#0
debug: Deleting Phi assignment: let b#1: bytes = φ(b#0 <- block@0, b#1 <- block@3)
debug: Replaced trivial Phi node: let b#1: bytes = φ(b#0 <- block@0, b#1 <- block@3) (b#1) with b#0 in current definition for 3 blocks
debug: Sealing block@4: // after_for_L133
debug: Terminated block@4: // after_for_L133
debug: Sealing block@0: // L159
debug: Terminated block@0: // L159
debug: Sealing block@0: // L168
debug: Terminated block@0: // L168
debug: Sealing block@0: // L94
debug: Terminated block@0: // L94
debug: Sealing block@0: // L88
debug: Terminated block@0: // L88
debug: Sealing block@0: // L82
debug: Terminated block@0: // L82
debug: Sealing block@0: // L76
debug: Terminated block@0: // L76
debug: Sealing block@0: // L5
debug: Terminated block@0: // L5
debug: Sealing block@0: // L8
debug: Terminated block@0: // L8
debug: Sealing block@1: // on_create_L5
debug: Terminated block@1: // on_create_L5
debug: Sealing block@2: // entrypoint_L5
debug: Terminated block@2: // entrypoint_L5
debug: Sealing block@3: // if_body_L21
debug: Terminated block@3: // if_body_L21
debug: Sealing block@4: // else_body_L23
debug: Terminated block@4: // else_body_L23
debug: Sealing block@5: // after_if_else_L20
debug: Created Phi assignment: let a2#1: uint64 = undefined while trying to resolve 'a2' in block@5: // after_if_else_L20
debug: Added a2#0 to Phi node: let a2#1: uint64 = φ(a2#0 <- block@3) in block@3: // if_body_L21
debug: Added a2#0 to Phi node: let a2#1: uint64 = φ(a2#0 <- block@3, a2#0 <- block@4) in block@4: // else_body_L23
debug: Replacing trivial Phi node: let a2#1: uint64 = φ(a2#0 <- block@3, a2#0 <- block@4) (a2#1) with a2#0
debug: Deleting Phi assignment: let a2#1: uint64 = φ(a2#0 <- block@3, a2#0 <- block@4)
debug: Replaced trivial Phi node: let a2#1: uint64 = φ(a2#0 <- block@3, a2#0 <- block@4) (a2#1) with a2#0 in current definition for 1 blocks
debug: Created Phi assignment: let a#1: uint64 = undefined while trying to resolve 'a' in block@5: // after_if_else_L20
debug: Added a#0 to Phi node: let a#1: uint64 = φ(a#0 <- block@3) in block@3: // if_body_L21
debug: Added a#0 to Phi node: let a#1: uint64 = φ(a#0 <- block@3, a#0 <- block@4) in block@4: // else_body_L23
debug: Replacing trivial Phi node: let a#1: uint64 = φ(a#0 <- block@3, a#0 <- block@4) (a#1) with a#0
debug: Deleting Phi assignment: let a#1: uint64 = φ(a#0 <- block@3, a#0 <- block@4)
debug: Replaced trivial Phi node: let a#1: uint64 = φ(a#0 <- block@3, a#0 <- block@4) (a#1) with a#0 in current definition for 1 blocks
debug: Created Phi assignment: let b2#1: uint64 = undefined while trying to resolve 'b2' in block@5: // after_if_else_L20
debug: Added b2#0 to Phi node: let b2#1: uint64 = φ(b2#0 <- block@3) in block@3: // if_body_L21
debug: Added b2#0 to Phi node: let b2#1: uint64 = φ(b2#0 <- block@3, b2#0 <- block@4) in block@4: // else_body_L23
debug: Replacing trivial Phi node: let b2#1: uint64 = φ(b2#0 <- block@3, b2#0 <- block@4) (b2#1) with b2#0
debug: Deleting Phi assignment: let b2#1: uint64 = φ(b2#0 <- block@3, b2#0 <- block@4)
debug: Replaced trivial Phi node: let b2#1: uint64 = φ(b2#0 <- block@3, b2#0 <- block@4) (b2#1) with b2#0 in current definition for 1 blocks
debug: Created Phi assignment: let b#1: uint64 = undefined while trying to resolve 'b' in block@5: // after_if_else_L20
debug: Added b#0 to Phi node: let b#1: uint64 = φ(b#0 <- block@3) in block@3: // if_body_L21
debug: Added b#0 to Phi node: let b#1: uint64 = φ(b#0 <- block@3, b#0 <- block@4) in block@4: // else_body_L23
debug: Replacing trivial Phi node: let b#1: uint64 = φ(b#0 <- block@3, b#0 <- block@4) (b#1) with b#0
debug: Deleting Phi assignment: let b#1: uint64 = φ(b#0 <- block@3, b#0 <- block@4)
debug: Replaced trivial Phi node: let b#1: uint64 = φ(b#0 <- block@3, b#0 <- block@4) (b#1) with b#0 in current definition for 1 blocks
debug: Created Phi assignment: let cd.0#1: uint64 = undefined while trying to resolve 'cd.0' in block@5: // after_if_else_L20
debug: Added cd.0#0 to Phi node: let cd.0#1: uint64 = φ(cd.0#0 <- block@3) in block@3: // if_body_L21
debug: Added cd.0#0 to Phi node: let cd.0#1: uint64 = φ(cd.0#0 <- block@3, cd.0#0 <- block@4) in block@4: // else_body_L23
debug: Replacing trivial Phi node: let cd.0#1: uint64 = φ(cd.0#0 <- block@3, cd.0#0 <- block@4) (cd.0#1) with cd.0#0
debug: Deleting Phi assignment: let cd.0#1: uint64 = φ(cd.0#0 <- block@3, cd.0#0 <- block@4)
debug: Replaced trivial Phi node: let cd.0#1: uint64 = φ(cd.0#0 <- block@3, cd.0#0 <- block@4) (cd.0#1) with cd.0#0 in current definition for 1 blocks
debug: Created Phi assignment: let cd.1#1: uint64 = undefined while trying to resolve 'cd.1' in block@5: // after_if_else_L20
debug: Added cd.1#0 to Phi node: let cd.1#1: uint64 = φ(cd.1#0 <- block@3) in block@3: // if_body_L21
debug: Added cd.1#0 to Phi node: let cd.1#1: uint64 = φ(cd.1#0 <- block@3, cd.1#0 <- block@4) in block@4: // else_body_L23
debug: Replacing trivial Phi node: let cd.1#1: uint64 = φ(cd.1#0 <- block@3, cd.1#0 <- block@4) (cd.1#1) with cd.1#0
debug: Deleting Phi assignment: let cd.1#1: uint64 = φ(cd.1#0 <- block@3, cd.1#0 <- block@4)
debug: Replaced trivial Phi node: let cd.1#1: uint64 = φ(cd.1#0 <- block@3, cd.1#0 <- block@4) (cd.1#1) with cd.1#0 in current definition for 1 blocks
debug: Created Phi assignment: let tup.0#2: uint64 = undefined while trying to resolve 'tup.0' in block@5: // after_if_else_L20
debug: Added tup.0#0 to Phi node: let tup.0#2: uint64 = φ(tup.0#0 <- block@3) in block@3: // if_body_L21
debug: Added tup.0#1 to Phi node: let tup.0#2: uint64 = φ(tup.0#0 <- block@3, tup.0#1 <- block@4) in block@4: // else_body_L23
debug: Created Phi assignment: let tup.1#2: uint64 = undefined while trying to resolve 'tup.1' in block@5: // after_if_else_L20
debug: Added tup.1#0 to Phi node: let tup.1#2: uint64 = φ(tup.1#0 <- block@3) in block@3: // if_body_L21
debug: Added tup.1#1 to Phi node: let tup.1#2: uint64 = φ(tup.1#0 <- block@3, tup.1#1 <- block@4) in block@4: // else_body_L23
debug: Terminated block@5: // after_if_else_L20
debug: Sealing block@6: // ternary_true_L29
debug: Terminated block@6: // ternary_true_L29
debug: Sealing block@7: // ternary_false_L29
debug: Terminated block@7: // ternary_false_L29
debug: Sealing block@8: // ternary_merge_L29
debug: Created Phi assignment: let ternary_result%0.0#2: uint64 = undefined while trying to resolve 'ternary_result%0.0' in block@8: // ternary_merge_L29
debug: Added ternary_result%0.0#0 to Phi node: let ternary_result%0.0#2: uint64 = φ(ternary_result%0.0#0 <- block@6) in block@6: // ternary_true_L29
debug: Added ternary_result%0.0#1 to Phi node: let ternary_result%0.0#2: uint64 = φ(ternary_result%0.0#0 <- block@6, ternary_result%0.0#1 <- block@7) in block@7: // ternary_false_L29
debug: Created Phi assignment: let ternary_result%0.1#2: uint64 = undefined while trying to resolve 'ternary_result%0.1' in block@8: // ternary_merge_L29
debug: Added ternary_result%0.1#0 to Phi node: let ternary_result%0.1#2: uint64 = φ(ternary_result%0.1#0 <- block@6) in block@6: // ternary_true_L29
debug: Added ternary_result%0.1#1 to Phi node: let ternary_result%0.1#2: uint64 = φ(ternary_result%0.1#0 <- block@6, ternary_result%0.1#1 <- block@7) in block@7: // ternary_false_L29
debug: Created Phi assignment: let a#2: uint64 = undefined while trying to resolve 'a' in block@8: // ternary_merge_L29
debug: Added a#0 to Phi node: let a#2: uint64 = φ(a#0 <- block@6) in block@6: // ternary_true_L29
debug: Added a#0 to Phi node: let a#2: uint64 = φ(a#0 <- block@6, a#0 <- block@7) in block@7: // ternary_false_L29
debug: Replacing trivial Phi node: let a#2: uint64 = φ(a#0 <- block@6, a#0 <- block@7) (a#2) with a#0
debug: Deleting Phi assignment: let a#2: uint64 = φ(a#0 <- block@6, a#0 <- block@7)
debug: Replaced trivial Phi node: let a#2: uint64 = φ(a#0 <- block@6, a#0 <- block@7) (a#2) with a#0 in current definition for 1 blocks
debug: Created Phi assignment: let b#2: uint64 = undefined while trying to resolve 'b' in block@8: // ternary_merge_L29
debug: Added b#0 to Phi node: let b#2: uint64 = φ(b#0 <- block@6) in block@6: // ternary_true_L29
debug: Added b#0 to Phi node: let b#2: uint64 = φ(b#0 <- block@6, b#0 <- block@7) in block@7: // ternary_false_L29
debug: Replacing trivial Phi node: let b#2: uint64 = φ(b#0 <- block@6, b#0 <- block@7) (b#2) with b#0
debug: Deleting Phi assignment: let b#2: uint64 = φ(b#0 <- block@6, b#0 <- block@7)
debug: Replaced trivial Phi node: let b#2: uint64 = φ(b#0 <- block@6, b#0 <- block@7) (b#2) with b#0 in current definition for 1 blocks
debug: Terminated block@8: // ternary_merge_L29
debug: Sealing block@9: // if_body_L56
debug: Terminated block@9: // if_body_L56
debug: Sealing block@10: // after_if_else_L55
debug: Terminated block@10: // after_if_else_L55
debug: Sealing block@11: // if_body_L58
debug: Terminated block@11: // if_body_L58
debug: Sealing block@12: // after_if_else_L57
debug: Created Phi assignment: let a#3: uint64 = undefined while trying to resolve 'a' in block@12: // after_if_else_L57
debug: Created Phi assignment: let a#4: uint64 = undefined while trying to resolve 'a' in block@10: // after_if_else_L55
debug: Added a#0 to Phi node: let a#4: uint64 = φ(a#0 <- block@8) in block@8: // ternary_merge_L29
debug: Added a#0 to Phi node: let a#4: uint64 = φ(a#0 <- block@8, a#0 <- block@9) in block@9: // if_body_L56
debug: Replacing trivial Phi node: let a#4: uint64 = φ(a#0 <- block@8, a#0 <- block@9) (a#4) with a#0
debug: Deleting Phi assignment: let a#4: uint64 = φ(a#0 <- block@8, a#0 <- block@9)
debug: Replaced trivial Phi node: let a#4: uint64 = φ(a#0 <- block@8, a#0 <- block@9) (a#4) with a#0 in current definition for 1 blocks
debug: Added a#0 to Phi node: let a#3: uint64 = φ(a#0 <- block@10) in block@10: // after_if_else_L55
debug: Added a#0 to Phi node: let a#3: uint64 = φ(a#0 <- block@10, a#0 <- block@11) in block@11: // if_body_L58
debug: Replacing trivial Phi node: let a#3: uint64 = φ(a#0 <- block@10, a#0 <- block@11) (a#3) with a#0
debug: Deleting Phi assignment: let a#3: uint64 = φ(a#0 <- block@10, a#0 <- block@11)
debug: Replaced trivial Phi node: let a#3: uint64 = φ(a#0 <- block@10, a#0 <- block@11) (a#3) with a#0 in current definition for 1 blocks
debug: Created Phi assignment: let b#3: uint64 = undefined while trying to resolve 'b' in block@12: // after_if_else_L57
debug: Created Phi assignment: let b#4: uint64 = undefined while trying to resolve 'b' in block@10: // after_if_else_L55
debug: Added b#0 to Phi node: let b#4: uint64 = φ(b#0 <- block@8) in block@8: // ternary_merge_L29
debug: Added b#0 to Phi node: let b#4: uint64 = φ(b#0 <- block@8, b#0 <- block@9) in block@9: // if_body_L56
debug: Replacing trivial Phi node: let b#4: uint64 = φ(b#0 <- block@8, b#0 <- block@9) (b#4) with b#0
debug: Deleting Phi assignment: let b#4: uint64 = φ(b#0 <- block@8, b#0 <- block@9)
debug: Replaced trivial Phi node: let b#4: uint64 = φ(b#0 <- block@8, b#0 <- block@9) (b#4) with b#0 in current definition for 1 blocks
debug: Added b#0 to Phi node: let b#3: uint64 = φ(b#0 <- block@10) in block@10: // after_if_else_L55
debug: Added b#0 to Phi node: let b#3: uint64 = φ(b#0 <- block@10, b#0 <- block@11) in block@11: // if_body_L58
debug: Replacing trivial Phi node: let b#3: uint64 = φ(b#0 <- block@10, b#0 <- block@11) (b#3) with b#0
debug: Deleting Phi assignment: let b#3: uint64 = φ(b#0 <- block@10, b#0 <- block@11)
debug: Replaced trivial Phi node: let b#3: uint64 = φ(b#0 <- block@10, b#0 <- block@11) (b#3) with b#0 in current definition for 1 blocks
debug: Terminated block@12: // after_if_else_L57
debug: Sealing block@0: // L67
debug: Terminated block@0: // L67
debug: Sealing block@0: // L4
debug: Terminated block@0: // L4
debug: Sealing block@1: // abi_routing_L4
debug: Terminated block@1: // abi_routing_L4
debug: Sealing block@2: // bare_routing_L4
debug: Terminated block@2: // bare_routing_L4
debug: Sealing block@3: // after_if_else_L4
debug: Terminated block@3: // after_if_else_L4
debug: Sealing block@0: // L14
debug: Terminated block@0: // L14
debug: Sealing block@0: // L56
debug: Terminated block@0: // L56
debug: Sealing block@0: // L45
tuple_support/tuple_comparisons.py:47:5 warning: assertion is always true, ignoring
tuple_support/tuple_comparisons.py:51:5 warning: assertion is always true, ignoring
debug: Terminated block@0: // L45
debug: Sealing block@0: // L5
debug: Terminated block@0: // L5
debug: Sealing block@0: // L10
debug: Terminated block@0: // L10
debug: Sealing block@0: // L4
debug: Terminated block@0: // L4
debug: Sealing block@1: // abi_routing_L4
debug: Terminated block@1: // abi_routing_L4
debug: Sealing block@2: // run_tests_route_L8
debug: Terminated block@2: // run_tests_route_L8
debug: Sealing block@3: // nested_tuple_params_route_L37
debug: Terminated block@3: // nested_tuple_params_route_L37
debug: Sealing block@4: // switch_case_default_L4
debug: Terminated block@4: // switch_case_default_L4
debug: Sealing block@5: // switch_case_next_L4
debug: Terminated block@5: // switch_case_next_L4
debug: Sealing block@6: // bare_routing_L4
debug: Terminated block@6: // bare_routing_L4
debug: Sealing block@7: // __algopy_default_create_L4
debug: Terminated block@7: // __algopy_default_create_L4
debug: Sealing block@8: // switch_case_default_L4
debug: Terminated block@8: // switch_case_default_L4
debug: Sealing block@9: // switch_case_next_L4
debug: Terminated block@9: // switch_case_next_L4
debug: Sealing block@10: // after_if_else_L4
debug: Terminated block@10: // after_if_else_L4
debug: Sealing block@0: // L8
debug: Terminated block@0: // L8
debug: Sealing block@0: // L66
debug: Terminated block@0: // L66
debug: Sealing block@0: // L57
debug: Terminated block@0: // L57
debug: Sealing block@0: // L72
debug: Terminated block@0: // L72
debug: Sealing block@0: // L85
debug: Terminated block@0: // L85
debug: Sealing block@0: // L107
debug: Terminated block@0: // L107
debug: Sealing block@1: // if_body_L122
debug: Terminated block@1: // if_body_L122
debug: Sealing block@2: // after_if_else_L121
debug: Created Phi assignment: let s.0.0#2: uint64 = undefined while trying to resolve 's.0.0' in block@2: // after_if_else_L121
debug: Added s.0.0#0 to Phi node: let s.0.0#2: uint64 = φ(s.0.0#0 <- block@0) in block@0: // L107
debug: Added s.0.0#1 to Phi node: let s.0.0#2: uint64 = φ(s.0.0#0 <- block@0, s.0.0#1 <- block@1) in block@1: // if_body_L122
debug: Created Phi assignment: let s.1.0#2: uint64 = undefined while trying to resolve 's.1.0' in block@2: // after_if_else_L121
debug: Added s.1.0#0 to Phi node: let s.1.0#2: uint64 = φ(s.1.0#0 <- block@0) in block@0: // L107
debug: Added s.1.0#1 to Phi node: let s.1.0#2: uint64 = φ(s.1.0#0 <- block@0, s.1.0#1 <- block@1) in block@1: // if_body_L122
debug: Created Phi assignment: let s.2.0#2: uint64 = undefined while trying to resolve 's.2.0' in block@2: // after_if_else_L121
debug: Added s.2.0#0 to Phi node: let s.2.0#2: uint64 = φ(s.2.0#0 <- block@0) in block@0: // L107
debug: Added s.2.0#1 to Phi node: let s.2.0#2: uint64 = φ(s.2.0#0 <- block@0, s.2.0#1 <- block@1) in block@1: // if_body_L122
debug: Created Phi assignment: let reassign#1: bool = undefined while trying to resolve 'reassign' in block@2: // after_if_else_L121
debug: Added reassign#0 to Phi node: let reassign#1: bool = φ(reassign#0 <- block@0) in block@0: // L107
debug: Added reassign#0 to Phi node: let reassign#1: bool = φ(reassign#0 <- block@0, reassign#0 <- block@1) in block@1: // if_body_L122
debug: Replacing trivial Phi node: let reassign#1: bool = φ(reassign#0 <- block@0, reassign#0 <- block@1) (reassign#1) with reassign#0
debug: Deleting Phi assignment: let reassign#1: bool = φ(reassign#0 <- block@0, reassign#0 <- block@1)
debug: Replaced trivial Phi node: let reassign#1: bool = φ(reassign#0 <- block@0, reassign#0 <- block@1) (reassign#1) with reassign#0 in current definition for 1 blocks
debug: Created Phi assignment: let t.0#1: uint64 = undefined while trying to resolve 't.0' in block@2: // after_if_else_L121
debug: Added t.0#0 to Phi node: let t.0#1: uint64 = φ(t.0#0 <- block@0) in block@0: // L107
debug: Added t.0#0 to Phi node: let t.0#1: uint64 = φ(t.0#0 <- block@0, t.0#0 <- block@1) in block@1: // if_body_L122
debug: Replacing trivial Phi node: let t.0#1: uint64 = φ(t.0#0 <- block@0, t.0#0 <- block@1) (t.0#1) with t.0#0
debug: Deleting Phi assignment: let t.0#1: uint64 = φ(t.0#0 <- block@0, t.0#0 <- block@1)
debug: Replaced trivial Phi node: let t.0#1: uint64 = φ(t.0#0 <- block@0, t.0#0 <- block@1) (t.0#1) with t.0#0 in current definition for 1 blocks
debug: Created Phi assignment: let one#1: uint64 = undefined while trying to resolve 'one' in block@2: // after_if_else_L121
debug: Added one#0 to Phi node: let one#1: uint64 = φ(one#0 <- block@0) in block@0: // L107
debug: Added one#0 to Phi node: let one#1: uint64 = φ(one#0 <- block@0, one#0 <- block@1) in block@1: // if_body_L122
debug: Replacing trivial Phi node: let one#1: uint64 = φ(one#0 <- block@0, one#0 <- block@1) (one#1) with one#0
debug: Deleting Phi assignment: let one#1: uint64 = φ(one#0 <- block@0, one#0 <- block@1)
debug: Replaced trivial Phi node: let one#1: uint64 = φ(one#0 <- block@0, one#0 <- block@1) (one#1) with one#0 in current definition for 1 blocks
debug: Terminated block@2: // after_if_else_L121
debug: Sealing block@0: // L138
debug: Terminated block@0: // L138
debug: Sealing block@0: // L151
debug: Terminated block@0: // L151
debug: Looking for 'loop_counter%0' in an unsealed block creating an incomplete Phi: block@1: // for_body_L158
debug: Created Phi assignment: let loop_counter%0#1: uint64 = undefined while trying to resolve 'loop_counter%0' in block@1: // for_body_L158
debug: Looking for 't.0' in an unsealed block creating an incomplete Phi: block@1: // for_body_L158
debug: Created Phi assignment: let t.0#1: uint64 = undefined while trying to resolve 't.0' in block@1: // for_body_L158
debug: Looking for 't.1' in an unsealed block creating an incomplete Phi: block@1: // for_body_L158
debug: Created Phi assignment: let t.1#1: uint64 = undefined while trying to resolve 't.1' in block@1: // for_body_L158
debug: Looking for 'total' in an unsealed block creating an incomplete Phi: block@1: // for_body_L158
debug: Created Phi assignment: let total#1: uint64 = undefined while trying to resolve 'total' in block@1: // for_body_L158
debug: Terminated block@1: // for_body_L158
debug: Sealing block@2: // for_footer_L157
debug: Terminated block@2: // for_footer_L157
debug: Sealing block@3: // for_header_1_L157
debug: Terminated block@3: // for_header_1_L157
debug: Sealing block@4: // for_header_2_L157
debug: Terminated block@4: // for_header_2_L157
debug: Sealing block@5: // for_header_3_L157
debug: Terminated block@5: // for_header_3_L157
debug: Sealing block@1: // for_body_L158
debug: Added loop_counter%0#0 to Phi node: let loop_counter%0#1: uint64 = φ(loop_counter%0#0 <- block@0) in block@0: // L151
debug: Added loop_counter%0#2 to Phi node: let loop_counter%0#1: uint64 = φ(loop_counter%0#0 <- block@0, loop_counter%0#2 <- block@3) in block@3: // for_header_1_L157
debug: Added loop_counter%0#3 to Phi node: let loop_counter%0#1: uint64 = φ(loop_counter%0#0 <- block@0, loop_counter%0#2 <- block@3, loop_counter%0#3 <- block@4) in block@4: // for_header_2_L157
debug: Added loop_counter%0#4 to Phi node: let loop_counter%0#1: uint64 = φ(loop_counter%0#0 <- block@0, loop_counter%0#2 <- block@3, loop_counter%0#3 <- block@4, loop_counter%0#4 <- block@5) in block@5: // for_header_3_L157
debug: Added t.0#0 to Phi node: let t.0#1: uint64 = φ(t.0#0 <- block@0) in block@0: // L151
debug: Added t.0#2 to Phi node: let t.0#1: uint64 = φ(t.0#0 <- block@0, t.0#2 <- block@3) in block@3: // for_header_1_L157
debug: Added t.0#3 to Phi node: let t.0#1: uint64 = φ(t.0#0 <- block@0, t.0#2 <- block@3, t.0#3 <- block@4) in block@4: // for_header_2_L157
debug: Added t.0#4 to Phi node: let t.0#1: uint64 = φ(t.0#0 <- block@0, t.0#2 <- block@3, t.0#3 <- block@4, t.0#4 <- block@5) in block@5: // for_header_3_L157
debug: Added t.1#0 to Phi node: let t.1#1: uint64 = φ(t.1#0 <- block@0) in block@0: // L151
debug: Added t.1#2 to Phi node: let t.1#1: uint64 = φ(t.1#0 <- block@0, t.1#2 <- block@3) in block@3: // for_header_1_L157
debug: Added t.1#3 to Phi node: let t.1#1: uint64 = φ(t.1#0 <- block@0, t.1#2 <- block@3, t.1#3 <- block@4) in block@4: // for_header_2_L157
debug: Added t.1#4 to Phi node: let t.1#1: uint64 = φ(t.1#0 <- block@0, t.1#2 <- block@3, t.1#3 <- block@4, t.1#4 <- block@5) in block@5: // for_header_3_L157
debug: Added total#0 to Phi node: let total#1: uint64 = φ(total#0 <- block@0) in block@0: // L151
debug: Added total#2 to Phi node: let total#1: uint64 = φ(total#0 <- block@0, total#2 <- block@3) in block@3: // for_header_1_L157
debug: Added total#2 to Phi node: let total#1: uint64 = φ(total#0 <- block@0, total#2 <- block@3, total#2 <- block@4) in block@4: // for_header_2_L157
debug: Added total#2 to Phi node: let total#1: uint64 = φ(total#0 <- block@0, total#2 <- block@3, total#2 <- block@4, total#2 <- block@5) in block@5: // for_header_3_L157
debug: Sealing block@6: // after_for_L157
debug: Created Phi assignment: let x#1: uint64 = undefined while trying to resolve 'x' in block@1: // for_body_L158
debug: Added x#0 to Phi node: let x#1: uint64 = φ(x#0 <- block@0) in block@0: // L151
debug: Added x#1 to Phi node: let x#1: uint64 = φ(x#0 <- block@0, x#1 <- block@3) in block@3: // for_header_1_L157
debug: Added x#1 to Phi node: let x#1: uint64 = φ(x#0 <- block@0, x#1 <- block@3, x#1 <- block@4) in block@4: // for_header_2_L157
debug: Added x#1 to Phi node: let x#1: uint64 = φ(x#0 <- block@0, x#1 <- block@3, x#1 <- block@4, x#1 <- block@5) in block@5: // for_header_3_L157
debug: Replacing trivial Phi node: let x#1: uint64 = φ(x#0 <- block@0, x#1 <- block@3, x#1 <- block@4, x#1 <- block@5) (x#1) with x#0
debug: Deleting Phi assignment: let x#1: uint64 = φ(x#0 <- block@0, x#1 <- block@3, x#1 <- block@4, x#1 <- block@5)
debug: Replaced trivial Phi node: let x#1: uint64 = φ(x#0 <- block@0, x#1 <- block@3, x#1 <- block@4, x#1 <- block@5) (x#1) with x#0 in current definition for 5 blocks
debug: Created Phi assignment: let y#1: uint64 = undefined while trying to resolve 'y' in block@1: // for_body_L158
debug: Added y#0 to Phi node: let y#1: uint64 = φ(y#0 <- block@0) in block@0: // L151
debug: Added y#1 to Phi node: let y#1: uint64 = φ(y#0 <- block@0, y#1 <- block@3) in block@3: // for_header_1_L157
debug: Added y#1 to Phi node: let y#1: uint64 = φ(y#0 <- block@0, y#1 <- block@3, y#1 <- block@4) in block@4: // for_header_2_L157
debug: Added y#1 to Phi node: let y#1: uint64 = φ(y#0 <- block@0, y#1 <- block@3, y#1 <- block@4, y#1 <- block@5) in block@5: // for_header_3_L157
debug: Replacing trivial Phi node: let y#1: uint64 = φ(y#0 <- block@0, y#1 <- block@3, y#1 <- block@4, y#1 <- block@5) (y#1) with y#0
debug: Deleting Phi assignment: let y#1: uint64 = φ(y#0 <- block@0, y#1 <- block@3, y#1 <- block@4, y#1 <- block@5)
debug: Replaced trivial Phi node: let y#1: uint64 = φ(y#0 <- block@0, y#1 <- block@3, y#1 <- block@4, y#1 <- block@5) (y#1) with y#0 in current definition for 5 blocks
debug: Terminated block@6: // after_for_L157
debug: Looking for 'loop_counter%1' in an unsealed block creating an incomplete Phi: block@7: // for_body_L162
debug: Created Phi assignment: let loop_counter%1#1: uint64 = undefined while trying to resolve 'loop_counter%1' in block@7: // for_body_L162
debug: Looking for 'total' in an unsealed block creating an incomplete Phi: block@7: // for_body_L162
debug: Created Phi assignment: let total#3: uint64 = undefined while trying to resolve 'total' in block@7: // for_body_L162
debug: Looking for 'a' in an unsealed block creating an incomplete Phi: block@7: // for_body_L162
debug: Created Phi assignment: let a#2: uint64 = undefined while trying to resolve 'a' in block@7: // for_body_L162
debug: Looking for 'b' in an unsealed block creating an incomplete Phi: block@7: // for_body_L162
debug: Created Phi assignment: let b#2: uint64 = undefined while trying to resolve 'b' in block@7: // for_body_L162
debug: Terminated block@7: // for_body_L162
debug: Sealing block@8: // for_footer_L161
debug: Terminated block@8: // for_footer_L161
debug: Sealing block@9: // for_header_1_L161
debug: Terminated block@9: // for_header_1_L161
debug: Sealing block@10: // for_header_2_L161
debug: Terminated block@10: // for_header_2_L161
debug: Sealing block@11: // for_header_3_L161
debug: Terminated block@11: // for_header_3_L161
debug: Sealing block@7: // for_body_L162
debug: Added loop_counter%1#0 to Phi node: let loop_counter%1#1: uint64 = φ(loop_counter%1#0 <- block@6) in block@6: // after_for_L157
debug: Added loop_counter%1#2 to Phi node: let loop_counter%1#1: uint64 = φ(loop_counter%1#0 <- block@6, loop_counter%1#2 <- block@9) in block@9: // for_header_1_L161
debug: Added loop_counter%1#3 to Phi node: let loop_counter%1#1: uint64 = φ(loop_counter%1#0 <- block@6, loop_counter%1#2 <- block@9, loop_counter%1#3 <- block@10) in block@10: // for_header_2_L161
debug: Added loop_counter%1#4 to Phi node: let loop_counter%1#1: uint64 = φ(loop_counter%1#0 <- block@6, loop_counter%1#2 <- block@9, loop_counter%1#3 <- block@10, loop_counter%1#4 <- block@11) in block@11: // for_header_3_L161
debug: Added total#2 to Phi node: let total#3: uint64 = φ(total#2 <- block@6) in block@6: // after_for_L157
debug: Added total#4 to Phi node: let total#3: uint64 = φ(total#2 <- block@6, total#4 <- block@9) in block@9: // for_header_1_L161
debug: Added total#4 to Phi node: let total#3: uint64 = φ(total#2 <- block@6, total#4 <- block@9, total#4 <- block@10) in block@10: // for_header_2_L161
debug: Added total#4 to Phi node: let total#3: uint64 = φ(total#2 <- block@6, total#4 <- block@9, total#4 <- block@10, total#4 <- block@11) in block@11: // for_header_3_L161
debug: Added a#1 to Phi node: let a#2: uint64 = φ(a#1 <- block@6) in block@6: // after_for_L157
debug: Added a#3 to Phi node: let a#2: uint64 = φ(a#1 <- block@6, a#3 <- block@9) in block@9: // for_header_1_L161
debug: Added a#4 to Phi node: let a#2: uint64 = φ(a#1 <- block@6, a#3 <- block@9, a#4 <- block@10) in block@10: // for_header_2_L161
debug: Added a#5 to Phi node: let a#2: uint64 = φ(a#1 <- block@6, a#3 <- block@9, a#4 <- block@10, a#5 <- block@11) in block@11: // for_header_3_L161
debug: Added b#1 to Phi node: let b#2: uint64 = φ(b#1 <- block@6) in block@6: // after_for_L157
debug: Added b#3 to Phi node: let b#2: uint64 = φ(b#1 <- block@6, b#3 <- block@9) in block@9: // for_header_1_L161
debug: Added b#4 to Phi node: let b#2: uint64 = φ(b#1 <- block@6, b#3 <- block@9, b#4 <- block@10) in block@10: // for_header_2_L161
debug: Added b#5 to Phi node: let b#2: uint64 = φ(b#1 <- block@6, b#3 <- block@9, b#4 <- block@10, b#5 <- block@11) in block@11: // for_header_3_L161
debug: Sealing block@12: // after_for_L161
debug: Terminated block@12: // after_for_L161
debug: Sealing block@0: // L49
debug: Terminated block@0: // L49
debug: Sealing block@1: // ternary_true_L52
debug: Terminated block@1: // ternary_true_L52
debug: Sealing block@2: // ternary_false_L52
debug: Terminated block@2: // ternary_false_L52
debug: Sealing block@3: // ternary_merge_L52
debug: Created Phi assignment: let ternary_result%0.0.0#2: bytes = undefined while trying to resolve 'ternary_result%0.0.0' in block@3: // ternary_merge_L52
debug: Added ternary_result%0.0.0#0 to Phi node: let ternary_result%0.0.0#2: bytes = φ(ternary_result%0.0.0#0 <- block@1) in block@1: // ternary_true_L52
debug: Added ternary_result%0.0.0#1 to Phi node: let ternary_result%0.0.0#2: bytes = φ(ternary_result%0.0.0#0 <- block@1, ternary_result%0.0.0#1 <- block@2) in block@2: // ternary_false_L52
debug: Created Phi assignment: let ternary_result%0.0.1#2: uint64 = undefined while trying to resolve 'ternary_result%0.0.1' in block@3: // ternary_merge_L52
debug: Added ternary_result%0.0.1#0 to Phi node: let ternary_result%0.0.1#2: uint64 = φ(ternary_result%0.0.1#0 <- block@1) in block@1: // ternary_true_L52
debug: Added ternary_result%0.0.1#1 to Phi node: let ternary_result%0.0.1#2: uint64 = φ(ternary_result%0.0.1#0 <- block@1, ternary_result%0.0.1#1 <- block@2) in block@2: // ternary_false_L52
debug: Created Phi assignment: let ternary_result%0.1#2: bytes = undefined while trying to resolve 'ternary_result%0.1' in block@3: // ternary_merge_L52
debug: Added ternary_result%0.1#0 to Phi node: let ternary_result%0.1#2: bytes = φ(ternary_result%0.1#0 <- block@1) in block@1: // ternary_true_L52
debug: Added ternary_result%0.1#1 to Phi node: let ternary_result%0.1#2: bytes = φ(ternary_result%0.1#0 <- block@1, ternary_result%0.1#1 <- block@2) in block@2: // ternary_false_L52
debug: Terminated block@3: // ternary_merge_L52
debug: Sealing block@0: // L44
debug: Terminated block@0: // L44
debug: Sealing block@0: // L37
debug: Terminated block@0: // L37
debug: Sealing block@0: // L4
debug: Terminated block@0: // L4
debug: Sealing block@0: // L5
debug: Terminated block@0: // L5
debug: Sealing block@0: // L-1
debug: Terminated block@0: // L-1
debug: Sealing block@1: // on_create_L5
debug: Terminated block@1: // on_create_L5
debug: Sealing block@2: // entrypoint_L5
debug: Terminated block@2: // entrypoint_L5
debug: Sealing block@0: // L-1
debug: Terminated block@0: // L-1
debug: Output IR to tuple_support/out/TupleSupport.ssa.ir
info: optimizing test_cases.tuple_support.tuple_support.TupleSupport at level 1
debug: Begin optimization pass 1/100
debug: Optimizing subroutine test_cases.tuple_support.tuple_support.TupleSupport.approval_program
debug: Splitting parallel copies prior to optimization
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: tuple_assignment%0#0, did_overflow#0
debug: Replacing {tuple_assignment%0#0} with did_overflow#0 made 1 modifications
debug: Found equivalence set: awst_tmp%0#0, ternary_result%0.0#0
debug: Replacing {ternary_result%0.0#0} with awst_tmp%0#0 made 1 modifications
debug: Found equivalence set: awst_tmp%1#0, ternary_result%0.1#0
debug: Replacing {ternary_result%0.1#0} with awst_tmp%1#0 made 1 modifications
debug: Found equivalence set: ternary_result%0.0#2, m#0
debug: Replacing {ternary_result%0.0#2} with m#0 made 1 modifications
debug: Found equivalence set: ternary_result%0.1#2, n#0
debug: Replacing {ternary_result%0.1#2} with n#0 made 1 modifications
debug: Found equivalence set: tuple_assignment%2#0, hi#0
debug: Replacing {tuple_assignment%2#0} with hi#0 made 1 modifications
debug: Found equivalence set: tuple_assignment%3#0, mid#0
debug: Replacing {tuple_assignment%3#0} with mid#0 made 1 modifications
debug: Found equivalence set: tuple_assignment%4#0, lo#0
debug: Replacing {tuple_assignment%4#0} with lo#0 made 1 modifications
debug: Optimizer: Intrinsic Simplifier
debug: Don't know how to simplify 1 addw 2
debug: Simplified (== did_overflow#0 0u) to (! did_overflow#0)
debug: Simplified (== 2u 2u) to 1u
debug: Don't know how to simplify 1 addw 2
debug: Simplified (== result.0#0 0u) to (! result.0#0)
debug: Simplified (== 1u 2u) to 0u
debug: Simplified (== 1u 1u) to 1u
debug: Simplified (== 2u 2u) to 1u
debug: Simplified (== awst_tmp%0#0 awst_tmp%0#0) to 1u
debug: Simplified (== awst_tmp%1#0 awst_tmp%1#0) to 1u
debug: Don't know how to simplify 18446744073709551615 addw 18446744073709551615
debug: Don't know how to simplify 1 addw 2
debug: Simplified (== awst_tmp%2#0 awst_tmp%2#0) to 1u
debug: Simplified (== awst_tmp%3#0 awst_tmp%3#0) to 1u
debug: Simplified (== awst_tmp%4#0 awst_tmp%4#0) to 1u
debug: Simplified (== 0u 0u) to 1u
debug: Simplified (== 0x 0x) to 1u
debug: Simplified (+ 1u 2u) to 3u
debug: Don't know how to simplify 1 addw 2
debug: Don't know how to simplify 1 addw 2
debug: Don't know how to simplify 18446744073709551615 addw 18446744073709551615
debug: Don't know how to simplify 1 addw 2
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable a#0
debug: Removing unused variable b#0
debug: Removing unused variable ab.0#0
debug: Removing unused variable ab.1#0
debug: Removing unused variable d#0
debug: Removing unused variable c#0
debug: Removing unused variable a2#0
debug: Removing unused variable b2#0
debug: Removing unused variable cd.0#0
debug: Removing unused variable cd.1#0
debug: Removing unused variable ab2.0#0
debug: Removing unused variable ab2.1#0
debug: Removing unused variable max_uint64#0
debug: Not removing unused assignment since source is not marked as pure: let (awst_tmp%2#0: uint64, awst_tmp%3#0: uint64) = test_cases.tuple_support.tuple_support.non_empty_tuple()
debug: Not removing unused assignment since source is not marked as pure: let awst_tmp%4#0: uint64 = test_cases.tuple_support.tuple_support.get_uint_with_side_effect()
debug: Removing unused variable x.0#0
debug: Removing unused variable x.1#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Not removing empty block block@6: // ternary_true_L29 because it's used by phi nodes
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Replacing redundant declaration let (result.0#0: uint64, result.1#0: uint64) = (addw 1u 2u) with copy of existing registers (Register(source_location=tuple_support/tuple_support.py:12:9-21, ir_type=uint64, name='did_overflow', version=0), Register(source_location=tuple_support/tuple_support.py:12:37-50, ir_type=uint64, name='tuple_assignment%1', version=0))
debug: Replacing redundant declaration let (tmp%18#0: uint64, tmp%19#0: uint64) = (addw 1u 2u) with copy of existing registers (Register(source_location=tuple_support/tuple_support.py:12:9-21, ir_type=uint64, name='did_overflow', version=0), Register(source_location=tuple_support/tuple_support.py:12:37-50, ir_type=uint64, name='tuple_assignment%1', version=0))
debug: Found equivalence set: did_overflow#0, result.0#0, tmp%18#0
debug: Replacing {result.0#0, tmp%18#0} with did_overflow#0 made 2 modifications
debug: Found equivalence set: tuple_assignment%1#0, result.1#0, tmp%19#0
debug: Replacing {tuple_assignment%1#0, tmp%19#0} with result.1#0 made 3 modifications
debug: Replacing redundant declaration let tmp%3#0: bool = (! did_overflow#0) with copy of existing registers (Register(source_location=tuple_support/tuple_support.py:13:15-31, ir_type=bool, name='tmp%1', version=0),)
debug: Found equivalence set: tmp%1#0, tmp%3#0
debug: Replacing {tmp%3#0} with tmp%1#0 made 1 modifications
debug: Removing redundant assert of tmp%1#0
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.tuple_support.tuple_support.add_three_values
debug: Splitting parallel copies prior to optimization
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: values.0#0, value#0
debug: Replacing {value#0} with values.0#0 made 1 modifications
debug: Found equivalence set: values.1#0, value#2
debug: Replacing {value#2} with values.1#0 made 1 modifications
debug: Found equivalence set: values.2#0, value#3
debug: Replacing {value#3} with values.2#0 made 1 modifications
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: inlining the default target of a switch/goto nth
debug: simplified terminator of block@2: // for_footer_L141 from goto_nth [block@3, block@4][loop_counter%0#1] else goto block@5 to goto_nth [block@3, block@4][loop_counter%0#1] else return total#2
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@2: // for_footer_L141 with block@1: // for_body_L142 in block@3: // for_header_1_L141
debug: Replaced predecessor block@2: // for_footer_L141 with block@1: // for_body_L142 in block@4: // for_header_2_L141
debug: Merged linear block@2: // for_footer_L141 into block@1: // for_body_L142
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Removing unreachable blocks: block@5: // after_for_L141
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.tuple_support.tuple_support.get_tuple
debug: Splitting parallel copies prior to optimization
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.tuple_support.tuple_support.bytes_combine
debug: Splitting parallel copies prior to optimization
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: arg.0#0, a#0
debug: Replacing {a#0} with arg.0#0 made 1 modifications
debug: Found equivalence set: arg.1#0, b#0
debug: Replacing {b#0} with arg.1#0 made 1 modifications
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.tuple_support.tuple_support.addw2
debug: Splitting parallel copies prior to optimization
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: a.0#0, a_hi#0
debug: Replacing {a_hi#0} with a.0#0 made 1 modifications
debug: Found equivalence set: a.1#0, a_lo#0
debug: Replacing {a_lo#0} with a.1#0 made 1 modifications
debug: Found equivalence set: b.0#0, b_hi#0
debug: Replacing {b_hi#0} with b.0#0 made 1 modifications
debug: Found equivalence set: b.1#0, b_lo#0
debug: Replacing {b_lo#0} with b.1#0 made 1 modifications
debug: Found equivalence set: tuple_assignment%0#0, lo_carry#0
debug: Replacing {tuple_assignment%0#0} with lo_carry#0 made 1 modifications
debug: Found equivalence set: tuple_assignment%1#0, c_lo#0
debug: Replacing {tuple_assignment%1#0} with c_lo#0 made 1 modifications
debug: Found equivalence set: tuple_assignment%2#0, hi_carry1#0
debug: Replacing {tuple_assignment%2#0} with hi_carry1#0 made 1 modifications
debug: Found equivalence set: tuple_assignment%3#0, c_mid#0
debug: Replacing {tuple_assignment%3#0} with c_mid#0 made 1 modifications
debug: Found equivalence set: tuple_assignment%4#0, hi_carry2#0
debug: Replacing {tuple_assignment%4#0} with hi_carry2#0 made 1 modifications
debug: Found equivalence set: tuple_assignment%5#0, c_mid#1
debug: Replacing {tuple_assignment%5#0} with c_mid#1 made 1 modifications
debug: Found equivalence set: tuple_assignment%6#0, did_overflow#0
debug: Replacing {tuple_assignment%6#0} with did_overflow#0 made 1 modifications
debug: Found equivalence set: tuple_assignment%7#0, c_hi#0
debug: Replacing {tuple_assignment%7#0} with c_hi#0 made 1 modifications
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (== did_overflow#0 0u) to (! did_overflow#0)
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.tuple_support.tuple_support.bytes_multiply
debug: Splitting parallel copies prior to optimization
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: arg.0#0, b#0
debug: Replacing {b#0} with arg.0#0 made 1 modifications
debug: Found equivalence set: arg.1#0, count#0
debug: Replacing {count#0} with arg.1#0 made 1 modifications
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@3: // for_footer_L133 with block@2: // for_body_L134 in block@1: // for_header_L133
debug: Merged linear block@3: // for_footer_L133 into block@2: // for_body_L134
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.tuple_support.tuple_support.test_tuple_swap
debug: Splitting parallel copies prior to optimization
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: b#0, a#1
debug: Replacing {a#1} with b#0 made 1 modifications
debug: Found equivalence set: a#0, b#1
debug: Replacing {b#1} with a#0 made 1 modifications
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.tuple_support.tuple_support.slicing
debug: Splitting parallel copies prior to optimization
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: values.0#0, one_to_three.0#0
debug: Replacing {one_to_three.0#0} with values.0#0 made 3 modifications
debug: Found equivalence set: values.1#0, one_to_three.1#0
debug: Replacing {one_to_three.1#0} with values.1#0 made 5 modifications
debug: Found equivalence set: values.2#0, one_to_three.2#0
debug: Replacing {one_to_three.2#0} with values.2#0 made 3 modifications
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (== values.1#0 values.1#0) to 1u
debug: Simplified (== values.0#0 values.0#0) to 1u
debug: Simplified (== values.1#0 values.1#0) to 1u
debug: Simplified (== values.2#0 values.2#0) to 1u
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.tuple_support.tuple_support.bin_ops
debug: Splitting parallel copies prior to optimization
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (== 1u 1u) to 1u
debug: Simplified (== 1u 1u) to 1u
debug: Simplified (== 1u 1u) to 1u
debug: Simplified (== 1u 1u) to 1u
debug: Simplified (== 2u 2u) to 1u
debug: Simplified (== 1u 1u) to 1u
debug: Simplified (== 2u 2u) to 1u
debug: Simplified (== 1u 1u) to 1u
debug: Simplified (== 2u 2u) to 1u
debug: Simplified (== 1u 1u) to 1u
debug: Simplified (== 0x32 0x32) to 1u
debug: Simplified (== 3u 3u) to 1u
debug: Simplified (== 1u 1u) to 1u
debug: Simplified (== 2u 2u) to 1u
debug: Simplified (== 1u 1u) to 1u
debug: Simplified (== 2u 2u) to 1u
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable a.0#0
debug: Removing unused variable a.1#0
debug: Removing unused variable a.2#0
debug: Removing unused variable tup.0#0
debug: Removing unused variable tup.1#0
debug: Removing unused variable b.0#0
debug: Removing unused variable b.1#0
debug: Removing unused variable b.2#0
debug: Removing unused variable b.3#0
debug: Removing unused variable b.4#0
debug: Removing unused variable b.5#0
debug: Removing unused variable c.0#0
debug: Removing unused variable c.1#0
debug: Removing unused variable c.2#0
debug: Removing unused variable d.0#0
debug: Removing unused variable d.1#0
debug: Removing unused variable d.2#0
debug: Removing unused variable d.3#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.tuple_support.tuple_support.non_empty_tuple
debug: Splitting parallel copies prior to optimization
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.tuple_support.tuple_support.get_uint_with_side_effect
debug: Splitting parallel copies prior to optimization
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.tuple_support.tuple_support.single_tuple
debug: Splitting parallel copies prior to optimization
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (== 1u 1u) to 1u
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable tup.0#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.tuple_support.tuple_support.TupleSupport.__init__
debug: Splitting parallel copies prior to optimization
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.tuple_support.tuple_support.TupleSupport.clear_state_program
debug: Splitting parallel copies prior to optimization
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Output IR to tuple_support/out/TupleSupport.ssa.opt_pass_1.ir
debug: Begin optimization pass 2/100
debug: Optimizing subroutine test_cases.tuple_support.tuple_support.TupleSupport.approval_program
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Don't know how to simplify 1 addw 2
debug: Simplified (|| 1u 1u) to 1u
debug: Don't know how to simplify 18446744073709551615 addw 18446744073709551615
debug: Simplified (|| 1u 1u) to 1u
debug: Don't know how to simplify 1 addw 2
debug: Don't know how to simplify 18446744073709551615 addw 18446744073709551615
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable tmp%2#0
debug: Removing unused variable tmp%4#0
debug: Removing unused variable tmp%5#0
debug: Removing unused variable tmp%6#0
debug: Removing unused variable tmp%9#0
debug: Removing unused variable tmp%10#0
debug: Not removing unused assignment since source is not marked as pure: let (awst_tmp%2#0: uint64, awst_tmp%3#0: uint64) = test_cases.tuple_support.tuple_support.non_empty_tuple()
debug: Removing unused variable tmp%24#0
debug: Removing unused variable tmp%25#0
debug: Not removing unused assignment since source is not marked as pure: let awst_tmp%4#0: uint64 = test_cases.tuple_support.tuple_support.get_uint_with_side_effect()
debug: Removing unused variable tmp%27#0
debug: Removing unused variable tmp%28#0
debug: Removing unused variable tmp%29#0
debug: Removing unused variable tmp%30#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: simplifying conditional branch with a constant into a goto
debug: simplified terminator of block@2: // entrypoint_L5 from goto 0u ? block@3 : block@4 to goto block@4
debug: simplifying conditional branch with a constant into a goto
debug: simplified terminator of block@10: // after_if_else_L55 from goto 1u ? block@11 : block@12 to goto block@11
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@4: // else_body_L23 with block@2: // entrypoint_L5 in block@5: // after_if_else_L20
debug: Merged linear block@4: // else_body_L23 into block@2: // entrypoint_L5
debug: Replaced predecessor block@11: // if_body_L58 with block@10: // after_if_else_L55 in block@12: // after_if_else_L57
debug: Merged linear block@11: // if_body_L58 into block@10: // after_if_else_L55
debug: Merged linear block@12: // after_if_else_L57 into block@10: // after_if_else_L55
debug: Optimizer: Remove Empty Blocks
debug: Not removing empty block block@6: // ternary_true_L29 because it's used by phi nodes
debug: Optimizer: Remove Unreachable Blocks
debug: Removing unreachable blocks: block@3: // if_body_L21
debug: Removed unreachable predecessors from block@5: // after_if_else_L20
debug: Removing unreachable phi arguments: tup.0#0 <- block@3
debug: Replacing trivial Phi node: let tup.0#2: uint64 = φ(tup.0#1 <- block@2) (tup.0#2) with tup.0#1
debug: Deleting Phi assignment: let tup.0#2: uint64 = φ(tup.0#1 <- block@2)
debug: Removing unreachable phi arguments: tup.1#0 <- block@3
debug: Replacing trivial Phi node: let tup.1#2: uint64 = φ(tup.1#1 <- block@2) (tup.1#2) with tup.1#1
debug: Deleting Phi assignment: let tup.1#2: uint64 = φ(tup.1#1 <- block@2)
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.tuple_support.tuple_support.add_three_values
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.tuple_support.tuple_support.get_tuple
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.tuple_support.tuple_support.bytes_combine
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.tuple_support.tuple_support.addw2
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.tuple_support.tuple_support.bytes_multiply
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.tuple_support.tuple_support.test_tuple_swap
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.tuple_support.tuple_support.slicing
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (&& 1u 1u) to 1u
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable tmp%4#0
debug: Removing unused variable tmp%5#0
debug: Removing unused variable tmp%6#0
debug: Removing unused variable tmp%8#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.tuple_support.tuple_support.bin_ops
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable tmp%0#0
debug: Removing unused variable tmp%1#0
debug: Removing unused variable tmp%2#0
debug: Removing unused variable tmp%3#0
debug: Removing unused variable tmp%4#0
debug: Removing unused variable tmp%5#0
debug: Removing unused variable tmp%6#0
debug: Removing unused variable tmp%7#0
debug: Removing unused variable tmp%8#0
debug: Removing unused variable tmp%9#0
debug: Removing unused variable tmp%10#0
debug: Removing unused variable tmp%11#0
debug: Removing unused variable tmp%12#0
debug: Removing unused variable tmp%13#0
debug: Removing unused variable tmp%14#0
debug: Removing unused variable tmp%15#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.tuple_support.tuple_support.non_empty_tuple
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.tuple_support.tuple_support.get_uint_with_side_effect
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.tuple_support.tuple_support.single_tuple
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable tmp%0#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.tuple_support.tuple_support.TupleSupport.__init__
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.tuple_support.tuple_support.TupleSupport.clear_state_program
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Output IR to tuple_support/out/TupleSupport.ssa.opt_pass_2.ir
debug: Begin optimization pass 3/100
debug: Optimizing subroutine test_cases.tuple_support.tuple_support.TupleSupport.approval_program
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Don't know how to simplify 1 addw 2
debug: Simplified (== 3u 3u) to 1u
debug: Simplified (== 3u 3u) to 1u
debug: Don't know how to simplify 18446744073709551615 addw 18446744073709551615
debug: Don't know how to simplify 1 addw 2
debug: Don't know how to simplify 18446744073709551615 addw 18446744073709551615
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable tup.0#1
debug: Removing unused variable tup.1#1
debug: Removing unused variable tmp%11#0
debug: Not removing unused assignment since source is not marked as pure: let (awst_tmp%2#0: uint64, awst_tmp%3#0: uint64) = test_cases.tuple_support.tuple_support.non_empty_tuple()
debug: Removing unused variable tmp%26#0
debug: Not removing unused assignment since source is not marked as pure: let awst_tmp%4#0: uint64 = test_cases.tuple_support.tuple_support.get_uint_with_side_effect()
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: simplifying conditional branch with a constant into a goto
debug: simplified terminator of block@5: // after_if_else_L20 from goto 1u ? block@6 : block@7 to goto block@6
debug: simplifying conditional branch with a constant into a goto
debug: simplified terminator of block@8: // ternary_merge_L29 from goto 1u ? block@9 : block@10 to goto block@9
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@5: // after_if_else_L20 with block@2: // entrypoint_L5 in block@6: // ternary_true_L29
debug: Merged linear block@5: // after_if_else_L20 into block@2: // entrypoint_L5
debug: Replaced predecessor block@6: // ternary_true_L29 with block@2: // entrypoint_L5 in block@8: // ternary_merge_L29
debug: Merged linear block@6: // ternary_true_L29 into block@2: // entrypoint_L5
debug: Replaced predecessor block@9: // if_body_L56 with block@8: // ternary_merge_L29 in block@10: // after_if_else_L55
debug: Merged linear block@9: // if_body_L56 into block@8: // ternary_merge_L29
debug: Merged linear block@10: // after_if_else_L55 into block@8: // ternary_merge_L29
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Removing unreachable blocks: block@7: // ternary_false_L29
debug: Removed unreachable predecessors from block@8: // ternary_merge_L29
debug: Removing unreachable phi arguments: ternary_result%0.0#1 <- block@7
debug: Replacing trivial Phi node: let m#0: uint64 = φ(awst_tmp%0#0 <- block@2) (m#0) with awst_tmp%0#0
debug: Deleting Phi assignment: let m#0: uint64 = φ(awst_tmp%0#0 <- block@2)
debug: Removing unreachable phi arguments: ternary_result%0.1#1 <- block@7
debug: Replacing trivial Phi node: let n#0: uint64 = φ(awst_tmp%1#0 <- block@2) (n#0) with awst_tmp%1#0
debug: Deleting Phi assignment: let n#0: uint64 = φ(awst_tmp%1#0 <- block@2)
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.tuple_support.tuple_support.add_three_values
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.tuple_support.tuple_support.get_tuple
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.tuple_support.tuple_support.bytes_combine
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.tuple_support.tuple_support.addw2
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.tuple_support.tuple_support.bytes_multiply
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.tuple_support.tuple_support.test_tuple_swap
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.tuple_support.tuple_support.slicing
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (&& 1u 1u) to 1u
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable tmp%7#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.tuple_support.tuple_support.bin_ops
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.tuple_support.tuple_support.non_empty_tuple
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.tuple_support.tuple_support.get_uint_with_side_effect
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.tuple_support.tuple_support.single_tuple
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.tuple_support.tuple_support.TupleSupport.__init__
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.tuple_support.tuple_support.TupleSupport.clear_state_program
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Output IR to tuple_support/out/TupleSupport.ssa.opt_pass_3.ir
debug: Begin optimization pass 4/100
debug: Optimizing subroutine test_cases.tuple_support.tuple_support.TupleSupport.approval_program
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Don't know how to simplify 1 addw 2
debug: Don't know how to simplify 18446744073709551615 addw 18446744073709551615
debug: Don't know how to simplify 1 addw 2
debug: Don't know how to simplify 18446744073709551615 addw 18446744073709551615
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable tmp%7#0
debug: Removing unused variable tmp%8#0
debug: Not removing unused assignment since source is not marked as pure: let (awst_tmp%2#0: uint64, awst_tmp%3#0: uint64) = test_cases.tuple_support.tuple_support.non_empty_tuple()
debug: Not removing unused assignment since source is not marked as pure: let awst_tmp%4#0: uint64 = test_cases.tuple_support.tuple_support.get_uint_with_side_effect()
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Merged linear block@8: // ternary_merge_L29 into block@2: // entrypoint_L5
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.tuple_support.tuple_support.add_three_values
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.tuple_support.tuple_support.get_tuple
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.tuple_support.tuple_support.bytes_combine
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.tuple_support.tuple_support.addw2
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.tuple_support.tuple_support.bytes_multiply
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.tuple_support.tuple_support.test_tuple_swap
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.tuple_support.tuple_support.slicing
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable tmp%9#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.tuple_support.tuple_support.non_empty_tuple
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.tuple_support.tuple_support.get_uint_with_side_effect
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.tuple_support.tuple_support.TupleSupport.__init__
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.tuple_support.tuple_support.TupleSupport.clear_state_program
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Output IR to tuple_support/out/TupleSupport.ssa.opt_pass_4.ir
debug: Begin optimization pass 5/100
debug: Optimizing subroutine test_cases.tuple_support.tuple_support.TupleSupport.approval_program
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Don't know how to simplify 1 addw 2
debug: Don't know how to simplify 18446744073709551615 addw 18446744073709551615
debug: Optimizer: Remove Unused Variables
debug: Not removing unused assignment since source is not marked as pure: let (awst_tmp%2#0: uint64, awst_tmp%3#0: uint64) = test_cases.tuple_support.tuple_support.non_empty_tuple()
debug: Not removing unused assignment since source is not marked as pure: let awst_tmp%4#0: uint64 = test_cases.tuple_support.tuple_support.get_uint_with_side_effect()
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.tuple_support.tuple_support.add_three_values
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.tuple_support.tuple_support.get_tuple
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.tuple_support.tuple_support.bytes_combine
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.tuple_support.tuple_support.addw2
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.tuple_support.tuple_support.bytes_multiply
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.tuple_support.tuple_support.test_tuple_swap
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.tuple_support.tuple_support.slicing
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.tuple_support.tuple_support.non_empty_tuple
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.tuple_support.tuple_support.get_uint_with_side_effect
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.tuple_support.tuple_support.TupleSupport.__init__
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.tuple_support.tuple_support.TupleSupport.clear_state_program
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: No optimizations performed in pass 5, ending loop
debug: Removing Phis from test_cases.tuple_support.tuple_support.TupleSupport.approval_program
debug: Removing Phis from test_cases.tuple_support.tuple_support.add_three_values
debug: Removing Phis from test_cases.tuple_support.tuple_support.get_tuple
debug: Removing Phis from test_cases.tuple_support.tuple_support.bytes_combine
debug: Removing Phis from test_cases.tuple_support.tuple_support.addw2
debug: Removing Phis from test_cases.tuple_support.tuple_support.bytes_multiply
debug: Removing Phis from test_cases.tuple_support.tuple_support.test_tuple_swap
debug: Removing Phis from test_cases.tuple_support.tuple_support.slicing
debug: Removing Phis from test_cases.tuple_support.tuple_support.non_empty_tuple
debug: Removing Phis from test_cases.tuple_support.tuple_support.get_uint_with_side_effect
debug: Removing Phis from test_cases.tuple_support.tuple_support.TupleSupport.__init__
debug: Removing Phis from test_cases.tuple_support.tuple_support.TupleSupport.clear_state_program
debug: Coalescing local variables in test_cases.tuple_support.tuple_support.TupleSupport.approval_program using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Coalescing local variables in test_cases.tuple_support.tuple_support.add_three_values using strategy RootOperandGrouping
debug: Coalescing total#0 with [total#6, total#1, total#2]
debug: Coalescing loop_counter%0#0 with [loop_counter%0#7, loop_counter%0#1, loop_counter%0#2, loop_counter%0#3]
debug: Coalescing value#1 with [value#2]
debug: Coalescing resulted in 24 replacement/s
debug: Coalescing local variables in test_cases.tuple_support.tuple_support.get_tuple using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Coalescing local variables in test_cases.tuple_support.tuple_support.bytes_combine using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Coalescing local variables in test_cases.tuple_support.tuple_support.addw2 using strategy RootOperandGrouping
debug: Coalescing c_mid#0 with [c_mid#1]
debug: Coalescing resulted in 2 replacement/s
debug: Coalescing local variables in test_cases.tuple_support.tuple_support.bytes_multiply using strategy RootOperandGrouping
debug: Coalescing result#0 with [result#5, result#1, result#2]
debug: Coalescing _i#0 with [_i#5, _i#1, _i#2]
debug: Coalescing resulted in 16 replacement/s
debug: Coalescing local variables in test_cases.tuple_support.tuple_support.test_tuple_swap using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Coalescing local variables in test_cases.tuple_support.tuple_support.slicing using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Coalescing local variables in test_cases.tuple_support.tuple_support.non_empty_tuple using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Coalescing local variables in test_cases.tuple_support.tuple_support.get_uint_with_side_effect using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Coalescing local variables in test_cases.tuple_support.tuple_support.TupleSupport.__init__ using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Coalescing local variables in test_cases.tuple_support.tuple_support.TupleSupport.clear_state_program using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in test_cases.tuple_support.tuple_support.TupleSupport.approval_program
debug: Sequentializing parallel copies in test_cases.tuple_support.tuple_support.add_three_values
debug: loc: {loop_counter%0#0=loop_counter%0#0, total#0=total#0, value#1=None, values.0#0=values.0#0}
debug: pred: {loop_counter%0#0=loop_counter%0#0, total#0=total#0, value#1=values.0#0}
debug: ready: value#1
debug: to_do: loop_counter%0#0, total#0, value#1
debug: * avail value#1
debug: * avail values.0#0
debug: * to_do value#1
debug: * to_do total#0
debug: * to_do loop_counter%0#0
debug: loc: {loop_counter%0#0=loop_counter%0#0, total#0=total#0, value#1=value#1}
debug: pred: {loop_counter%0#0=loop_counter%0#0, total#0=total#0, value#1=value#1}
debug: ready: 
debug: to_do: loop_counter%0#0, total#0, value#1
debug: * to_do value#1
debug: * to_do total#0
debug: * to_do loop_counter%0#0
debug: loc: {loop_counter%0#0=loop_counter%0#0, total#0=total#0, value#1=None, values.1#0=values.1#0}
debug: pred: {loop_counter%0#0=loop_counter%0#0, total#0=total#0, value#1=values.1#0}
debug: ready: value#1
debug: to_do: loop_counter%0#0, total#0, value#1
debug: * avail value#1
debug: * avail values.1#0
debug: * to_do value#1
debug: * to_do total#0
debug: * to_do loop_counter%0#0
debug: loc: {loop_counter%0#0=loop_counter%0#0, total#0=total#0, value#1=None, values.2#0=values.2#0}
debug: pred: {loop_counter%0#0=loop_counter%0#0, total#0=total#0, value#1=values.2#0}
debug: ready: value#1
debug: to_do: loop_counter%0#0, total#0, value#1
debug: * avail value#1
debug: * avail values.2#0
debug: * to_do value#1
debug: * to_do total#0
debug: * to_do loop_counter%0#0
debug: Sequentializing parallel copies in test_cases.tuple_support.tuple_support.get_tuple
debug: Sequentializing parallel copies in test_cases.tuple_support.tuple_support.bytes_combine
debug: Sequentializing parallel copies in test_cases.tuple_support.tuple_support.addw2
debug: Sequentializing parallel copies in test_cases.tuple_support.tuple_support.bytes_multiply
debug: loc: {_i#0=_i#0, result#0=result#0}
debug: pred: {_i#0=_i#0, result#0=result#0}
debug: ready: 
debug: to_do: _i#0, result#0
debug: * to_do result#0
debug: * to_do _i#0
debug: loc: {_i#0=_i#0, result#0=result#0}
debug: pred: {_i#0=_i#0, result#0=result#0}
debug: ready: 
debug: to_do: _i#0, result#0
debug: * to_do result#0
debug: * to_do _i#0
debug: loc: {_i#0=_i#0, result#0=result#0}
debug: pred: {_i#0=_i#0, result#0=result#0}
debug: ready: 
debug: to_do: _i#0, result#0
debug: * to_do result#0
debug: * to_do _i#0
debug: Sequentializing parallel copies in test_cases.tuple_support.tuple_support.test_tuple_swap
debug: Sequentializing parallel copies in test_cases.tuple_support.tuple_support.slicing
debug: Sequentializing parallel copies in test_cases.tuple_support.tuple_support.non_empty_tuple
debug: Sequentializing parallel copies in test_cases.tuple_support.tuple_support.get_uint_with_side_effect
debug: Sequentializing parallel copies in test_cases.tuple_support.tuple_support.TupleSupport.__init__
debug: Sequentializing parallel copies in test_cases.tuple_support.tuple_support.TupleSupport.clear_state_program
debug: Performing post-SSA optimizations
debug: Output IR to tuple_support/out/TupleSupport.destructured.ir
debug: Inserted main_block@0.ops[1]: 'store app_id%0#0 to l-stack (copy)'
debug: Replaced main_block@0.ops[3]: 'load app_id%0#0' with 'load app_id%0#0 from l-stack (no copy)'
debug: Inserted main_entrypoint@2.ops[4]: 'store total#0 to l-stack (copy)'
debug: Replaced main_entrypoint@2.ops[6]: 'load total#0' with 'load total#0 from l-stack (no copy)'
debug: Inserted main_entrypoint@2.ops[8]: 'store tmp%0#0 to l-stack (copy)'
debug: Replaced main_entrypoint@2.ops[10]: 'load tmp%0#0' with 'load tmp%0#0 from l-stack (no copy)'
debug: Inserted main_entrypoint@2.ops[22]: 'store tmp%1#0 to l-stack (copy)'
debug: Replaced main_entrypoint@2.ops[24]: 'load tmp%1#0' with 'load tmp%1#0 from l-stack (no copy)'
debug: Inserted main_entrypoint@2.ops[30]: 'store awst_tmp%0#0 to l-stack (copy)'
debug: Replaced main_entrypoint@2.ops[32]: 'load awst_tmp%0#0' with 'load awst_tmp%0#0 from l-stack (no copy)'
debug: Inserted main_entrypoint@2.ops[43]: 'store tmp%14#0 to l-stack (copy)'
debug: Replaced main_entrypoint@2.ops[45]: 'load tmp%14#0' with 'load tmp%14#0 from l-stack (no copy)'
debug: Inserted main_entrypoint@2.ops[50]: 'store tmp%15#0 to l-stack (copy)'
debug: Replaced main_entrypoint@2.ops[52]: 'load tmp%15#0' with 'load tmp%15#0 from l-stack (no copy)'
debug: Inserted main_entrypoint@2.ops[58]: 'store tmp%16#0 to l-stack (copy)'
debug: Replaced main_entrypoint@2.ops[60]: 'load tmp%16#0' with 'load tmp%16#0 from l-stack (no copy)'
debug: Inserted main_entrypoint@2.ops[67]: 'store hi#0 to l-stack (copy)'
debug: Replaced main_entrypoint@2.ops[69]: 'load hi#0' with 'load hi#0 from l-stack (no copy)'
debug: Inserted main_entrypoint@2.ops[71]: 'store tmp%20#0 to l-stack (copy)'
debug: Replaced main_entrypoint@2.ops[73]: 'load tmp%20#0' with 'load tmp%20#0 from l-stack (no copy)'
debug: Inserted main_entrypoint@2.ops[77]: 'store tmp%21#0 to l-stack (copy)'
debug: Replaced main_entrypoint@2.ops[79]: 'load tmp%21#0' with 'load tmp%21#0 from l-stack (no copy)'
debug: Inserted main_entrypoint@2.ops[83]: 'store tmp%22#0 to l-stack (copy)'
debug: Replaced main_entrypoint@2.ops[85]: 'load tmp%22#0' with 'load tmp%22#0 from l-stack (no copy)'
debug: Inserted main_entrypoint@2.ops[90]: 'store tmp%23#0 to l-stack (copy)'
debug: Replaced main_entrypoint@2.ops[92]: 'load tmp%23#0' with 'load tmp%23#0 from l-stack (no copy)'
debug: Inserted main_entrypoint@2.ops[39]: 'store tmp%13#0 to l-stack (copy)'
debug: Replaced main_entrypoint@2.ops[42]: 'load tmp%13#0' with 'load tmp%13#0 from l-stack (no copy)'
debug: Inserted main_entrypoint@2.ops[15]: 'store result.1#0 to l-stack (copy)'
debug: Replaced main_entrypoint@2.ops[19]: 'load result.1#0' with 'load result.1#0 from l-stack (no copy)'
debug: Inserted main_entrypoint@2.ops[59]: 'store tmp%17#0 to l-stack (copy)'
debug: Replaced main_entrypoint@2.ops[64]: 'load tmp%17#0' with 'load tmp%17#0 from l-stack (no copy)'
debug: Inserted main_entrypoint@2.ops[17]: 'store did_overflow#0 to l-stack (copy)'
debug: Replaced main_entrypoint@2.ops[22]: 'load did_overflow#0' with 'load did_overflow#0 from l-stack (no copy)'
debug: Inserted main_entrypoint@2.ops[37]: 'store tmp%12#0 to l-stack (copy)'
debug: Replaced main_entrypoint@2.ops[44]: 'load tmp%12#0' with 'load tmp%12#0 from l-stack (no copy)'
debug: Inserted main_entrypoint@2.ops[31]: 'store awst_tmp%1#0 to l-stack (copy)'
debug: Replaced main_entrypoint@2.ops[40]: 'load awst_tmp%1#0' with 'load awst_tmp%1#0 from l-stack (no copy)'
debug: Inserted main_entrypoint@2.ops[72]: 'store mid#0 to l-stack (copy)'
debug: Replaced main_entrypoint@2.ops[82]: 'load mid#0' with 'load mid#0 from l-stack (no copy)'
debug: Inserted main_entrypoint@2.ops[71]: 'store lo#0 to l-stack (copy)'
debug: Replaced main_entrypoint@2.ops[89]: 'load lo#0' with 'load lo#0 from l-stack (no copy)'
debug: Inserted main_entrypoint@2.ops[23]: 'store did_overflow#0 to l-stack (copy)'
debug: Replaced main_entrypoint@2.ops[69]: 'load did_overflow#0' with 'load did_overflow#0 from l-stack (no copy)'
debug: Inserted main_entrypoint@2.ops[21]: 'store result.1#0 to l-stack (copy)'
debug: Replaced main_entrypoint@2.ops[71]: 'load result.1#0' with 'load result.1#0 from l-stack (no copy)'
debug: Found 1 edge set/s for test_cases.tuple_support.tuple_support.TupleSupport.approval_program
debug: Inserted add_three_values_for_body@1.ops[3]: 'store total#0 to l-stack (copy)'
debug: Replaced add_three_values_for_body@1.ops[7]: 'load total#0' with 'load total#0 from l-stack (no copy)'
debug: Found 2 edge set/s for test_cases.tuple_support.tuple_support.add_three_values
debug: Allocated 2 variable/s to x-stack: loop_counter%0#0, value#1
debug: shared x-stack for add_three_values_block@0 -> add_three_values_for_body@1: value#1, loop_counter%0#0
debug: shared x-stack for add_three_values_for_header_1@3 -> add_three_values_for_body@1: value#1, loop_counter%0#0
debug: shared x-stack for add_three_values_for_header_2@4 -> add_three_values_for_body@1: value#1, loop_counter%0#0
debug: test_cases.tuple_support.tuple_support.add_three_values f-stack entry: []
debug: test_cases.tuple_support.tuple_support.add_three_values f-stack on first store: ['total#0']
debug: Inserted bytes_combine_block@0.ops[3]: 'store result#0 to l-stack (copy)'
debug: Replaced bytes_combine_block@0.ops[5]: 'load result#0' with 'load result#0 from l-stack (no copy)'
debug: Inserted addw2_block@0.ops[19]: 'store did_overflow#0 to l-stack (copy)'
debug: Replaced addw2_block@0.ops[21]: 'load did_overflow#0' with 'load did_overflow#0 from l-stack (no copy)'
debug: Inserted addw2_block@0.ops[23]: 'store tmp%0#0 to l-stack (copy)'
debug: Replaced addw2_block@0.ops[25]: 'load tmp%0#0' with 'load tmp%0#0 from l-stack (no copy)'
debug: Inserted addw2_block@0.ops[8]: 'store c_mid#0 to l-stack (copy)'
debug: Replaced addw2_block@0.ops[11]: 'load c_mid#0' with 'load c_mid#0 from l-stack (no copy)'
debug: Inserted addw2_block@0.ops[15]: 'store hi_carry2#0 to l-stack (copy)'
debug: Replaced addw2_block@0.ops[18]: 'load hi_carry2#0' with 'load hi_carry2#0 from l-stack (no copy)'
debug: Inserted addw2_block@0.ops[10]: 'store hi_carry1#0 to l-stack (copy)'
debug: Replaced addw2_block@0.ops[18]: 'load hi_carry1#0' with 'load hi_carry1#0 from l-stack (no copy)'
debug: Inserted addw2_block@0.ops[4]: 'store lo_carry#0 to l-stack (copy)'
debug: Replaced addw2_block@0.ops[14]: 'load lo_carry#0' with 'load lo_carry#0 from l-stack (no copy)'
debug: Inserted addw2_block@0.ops[22]: 'store c_hi#0 to l-stack (copy)'
debug: Replaced addw2_block@0.ops[32]: 'load c_hi#0' with 'load c_hi#0 from l-stack (no copy)'
debug: Inserted addw2_block@0.ops[16]: 'store c_mid#0 to l-stack (copy)'
debug: Replaced addw2_block@0.ops[34]: 'load c_mid#0' with 'load c_mid#0 from l-stack (no copy)'
debug: Inserted addw2_block@0.ops[3]: 'store c_lo#0 to l-stack (copy)'
debug: Replaced addw2_block@0.ops[36]: 'load c_lo#0' with 'load c_lo#0 from l-stack (no copy)'
debug: Inserted bytes_multiply_for_header@1.ops[3]: 'store continue_looping%0#0 to l-stack (copy)'
debug: Replaced bytes_multiply_for_header@1.ops[5]: 'load continue_looping%0#0' with 'load continue_looping%0#0 from l-stack (no copy)'
debug: Found 2 edge set/s for test_cases.tuple_support.tuple_support.bytes_multiply
debug: test_cases.tuple_support.tuple_support.bytes_multiply f-stack entry: []
debug: test_cases.tuple_support.tuple_support.bytes_multiply f-stack on first store: ['result#0', '_i#0']
debug: Inserted test_tuple_swap_block@0.ops[7]: 'store b#0 to l-stack (copy)'
debug: Replaced test_tuple_swap_block@0.ops[9]: 'load b#0' with 'load b#0 from l-stack (no copy)'
debug: Inserted test_tuple_swap_block@0.ops[12]: 'store tmp%0#0 to l-stack (copy)'
debug: Replaced test_tuple_swap_block@0.ops[14]: 'load tmp%0#0' with 'load tmp%0#0 from l-stack (no copy)'
debug: Inserted test_tuple_swap_block@0.ops[19]: 'store tmp%1#0 to l-stack (copy)'
debug: Replaced test_tuple_swap_block@0.ops[21]: 'load tmp%1#0' with 'load tmp%1#0 from l-stack (no copy)'
debug: Inserted test_tuple_swap_block@0.ops[3]: 'store a#0 to l-stack (copy)'
debug: Replaced test_tuple_swap_block@0.ops[17]: 'load a#0' with 'load a#0 from l-stack (no copy)'
debug: Inserted slicing_block@0.ops[8]: 'store tmp%1#0 to l-stack (copy)'
debug: Replaced slicing_block@0.ops[10]: 'load tmp%1#0' with 'load tmp%1#0 from l-stack (no copy)'
debug: Inserted slicing_block@0.ops[17]: 'store tmp%3#0 to l-stack (copy)'
debug: Replaced slicing_block@0.ops[19]: 'load tmp%3#0' with 'load tmp%3#0 from l-stack (no copy)'
debug: Inserted slicing_block@0.ops[13]: 'store tmp%2#0 to l-stack (copy)'
debug: Replaced slicing_block@0.ops[16]: 'load tmp%2#0' with 'load tmp%2#0 from l-stack (no copy)'
debug: Inserted slicing_block@0.ops[4]: 'store tmp%0#0 to l-stack (copy)'
debug: Replaced slicing_block@0.ops[16]: 'load tmp%0#0' with 'load tmp%0#0 from l-stack (no copy)'
debug: Output IR to tuple_support/out/TupleComparisons.ssa.ir
info: optimizing test_cases.tuple_support.tuple_comparisons.TupleComparisons at level 1
debug: Begin optimization pass 1/100
debug: Optimizing subroutine test_cases.tuple_support.tuple_comparisons.TupleComparisons.approval_program
debug: Splitting parallel copies prior to optimization
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.tuple_support.tuple_comparisons.test_tuple_cmp_eval
debug: Splitting parallel copies prior to optimization
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (!= "abc" "abc") to 0u
debug: Simplified (== awst_tmp%0#0 awst_tmp%0#0) to 1u
debug: Simplified (== "abc" "abc") to 1u
debug: Simplified (!= awst_tmp%1#0 awst_tmp%1#0) to 0u
debug: Simplified (!= "abc" "abc") to 0u
debug: Simplified (== awst_tmp%2#0 awst_tmp%2#0) to 1u
debug: Simplified (== "abc" "abc") to 1u
debug: Simplified (!= awst_tmp%3#0 awst_tmp%3#0) to 0u
debug: Simplified (!= 1u 3u) to 1u
debug: Simplified (== 1u 3u) to 0u
debug: Optimizer: Remove Unused Variables
debug: Not removing unused assignment since source is not marked as pure: let awst_tmp%0#0: uint64 = test_cases.tuple_support.tuple_comparisons.log_and_return(42u)
debug: Not removing unused assignment since source is not marked as pure: let awst_tmp%1#0: uint64 = test_cases.tuple_support.tuple_comparisons.log_and_return(43u)
debug: Not removing unused assignment since source is not marked as pure: let awst_tmp%2#0: uint64 = test_cases.tuple_support.tuple_comparisons.log_and_return(44u)
debug: Not removing unused assignment since source is not marked as pure: let awst_tmp%3#0: uint64 = test_cases.tuple_support.tuple_comparisons.log_and_return(45u)
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.tuple_support.tuple_comparisons.log_and_return
debug: Splitting parallel copies prior to optimization
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.tuple_support.tuple_comparisons.test_tuple_cmp_empty
debug: Splitting parallel copies prior to optimization
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (! 0u) to 1u
debug: Simplified (! 0u) to 1u
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable tmp#0
debug: Removing unused variable tmp#1
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.tuple_support.tuple_comparisons.TupleComparisons.clear_state_program
debug: Splitting parallel copies prior to optimization
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Output IR to tuple_support/out/TupleComparisons.ssa.opt_pass_1.ir
debug: Begin optimization pass 2/100
debug: Optimizing subroutine test_cases.tuple_support.tuple_comparisons.TupleComparisons.approval_program
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.tuple_support.tuple_comparisons.test_tuple_cmp_eval
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (|| 0u 1u) to 1u
debug: Simplified (&& 1u 0u) to 0u
debug: Simplified (|| 0u 1u) to 1u
debug: Simplified (&& 1u 0u) to 0u
debug: Simplified (&& 0u tmp%18#0) to 0u
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable tmp%0#0
debug: Not removing unused assignment since source is not marked as pure: let awst_tmp%0#0: uint64 = test_cases.tuple_support.tuple_comparisons.log_and_return(42u)
debug: Removing unused variable tmp%1#0
debug: Removing unused variable tmp%3#0
debug: Not removing unused assignment since source is not marked as pure: let awst_tmp%1#0: uint64 = test_cases.tuple_support.tuple_comparisons.log_and_return(43u)
debug: Removing unused variable tmp%4#0
debug: Removing unused variable tmp%6#0
debug: Not removing unused assignment since source is not marked as pure: let awst_tmp%2#0: uint64 = test_cases.tuple_support.tuple_comparisons.log_and_return(44u)
debug: Removing unused variable tmp%7#0
debug: Removing unused variable tmp%9#0
debug: Not removing unused assignment since source is not marked as pure: let awst_tmp%3#0: uint64 = test_cases.tuple_support.tuple_comparisons.log_and_return(45u)
debug: Removing unused variable tmp%10#0
debug: Removing unused variable tmp%12#0
debug: Removing unused variable tmp%16#0
debug: Removing unused variable tmp%18#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.tuple_support.tuple_comparisons.log_and_return
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.tuple_support.tuple_comparisons.test_tuple_cmp_empty
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable tmp%0#0
debug: Removing unused variable tmp%1#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.tuple_support.tuple_comparisons.TupleComparisons.clear_state_program
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Output IR to tuple_support/out/TupleComparisons.ssa.opt_pass_2.ir
debug: Begin optimization pass 3/100
debug: Optimizing subroutine test_cases.tuple_support.tuple_comparisons.TupleComparisons.approval_program
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.tuple_support.tuple_comparisons.test_tuple_cmp_eval
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (! 0u) to 1u
debug: Simplified (! 0u) to 1u
debug: Simplified (! 0u) to 1u
debug: Optimizer: Remove Unused Variables
debug: Not removing unused assignment since source is not marked as pure: let awst_tmp%0#0: uint64 = test_cases.tuple_support.tuple_comparisons.log_and_return(42u)
debug: Removing unused variable tmp%2#0
debug: Not removing unused assignment since source is not marked as pure: let awst_tmp%1#0: uint64 = test_cases.tuple_support.tuple_comparisons.log_and_return(43u)
debug: Removing unused variable tmp#0
debug: Not removing unused assignment since source is not marked as pure: let awst_tmp%2#0: uint64 = test_cases.tuple_support.tuple_comparisons.log_and_return(44u)
debug: Removing unused variable tmp%8#0
debug: Not removing unused assignment since source is not marked as pure: let awst_tmp%3#0: uint64 = test_cases.tuple_support.tuple_comparisons.log_and_return(45u)
debug: Removing unused variable tmp#1
debug: Not removing unused assignment since source is not marked as pure: let tmp%17#0: uint64 = test_cases.tuple_support.tuple_comparisons.log_and_return(47u)
debug: Removing unused variable tmp#2
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.tuple_support.tuple_comparisons.log_and_return
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.tuple_support.tuple_comparisons.test_tuple_cmp_empty
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.tuple_support.tuple_comparisons.TupleComparisons.clear_state_program
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Output IR to tuple_support/out/TupleComparisons.ssa.opt_pass_3.ir
debug: Begin optimization pass 4/100
debug: Optimizing subroutine test_cases.tuple_support.tuple_comparisons.TupleComparisons.approval_program
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.tuple_support.tuple_comparisons.test_tuple_cmp_eval
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Not removing unused assignment since source is not marked as pure: let awst_tmp%0#0: uint64 = test_cases.tuple_support.tuple_comparisons.log_and_return(42u)
debug: Not removing unused assignment since source is not marked as pure: let awst_tmp%1#0: uint64 = test_cases.tuple_support.tuple_comparisons.log_and_return(43u)
debug: Removing unused variable tmp%5#0
debug: Not removing unused assignment since source is not marked as pure: let awst_tmp%2#0: uint64 = test_cases.tuple_support.tuple_comparisons.log_and_return(44u)
debug: Not removing unused assignment since source is not marked as pure: let awst_tmp%3#0: uint64 = test_cases.tuple_support.tuple_comparisons.log_and_return(45u)
debug: Removing unused variable tmp%11#0
debug: Not removing unused assignment since source is not marked as pure: let tmp%17#0: uint64 = test_cases.tuple_support.tuple_comparisons.log_and_return(47u)
debug: Removing unused variable tmp%19#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.tuple_support.tuple_comparisons.log_and_return
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.tuple_support.tuple_comparisons.TupleComparisons.clear_state_program
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Output IR to tuple_support/out/TupleComparisons.ssa.opt_pass_4.ir
debug: Begin optimization pass 5/100
debug: Optimizing subroutine test_cases.tuple_support.tuple_comparisons.TupleComparisons.approval_program
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.tuple_support.tuple_comparisons.test_tuple_cmp_eval
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Not removing unused assignment since source is not marked as pure: let awst_tmp%0#0: uint64 = test_cases.tuple_support.tuple_comparisons.log_and_return(42u)
debug: Not removing unused assignment since source is not marked as pure: let awst_tmp%1#0: uint64 = test_cases.tuple_support.tuple_comparisons.log_and_return(43u)
debug: Not removing unused assignment since source is not marked as pure: let awst_tmp%2#0: uint64 = test_cases.tuple_support.tuple_comparisons.log_and_return(44u)
debug: Not removing unused assignment since source is not marked as pure: let awst_tmp%3#0: uint64 = test_cases.tuple_support.tuple_comparisons.log_and_return(45u)
debug: Not removing unused assignment since source is not marked as pure: let tmp%17#0: uint64 = test_cases.tuple_support.tuple_comparisons.log_and_return(47u)
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.tuple_support.tuple_comparisons.log_and_return
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.tuple_support.tuple_comparisons.TupleComparisons.clear_state_program
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: No optimizations performed in pass 5, ending loop
debug: Removing Phis from test_cases.tuple_support.tuple_comparisons.TupleComparisons.approval_program
debug: Removing Phis from test_cases.tuple_support.tuple_comparisons.test_tuple_cmp_eval
debug: Removing Phis from test_cases.tuple_support.tuple_comparisons.log_and_return
debug: Removing Phis from test_cases.tuple_support.tuple_comparisons.TupleComparisons.clear_state_program
debug: Coalescing local variables in test_cases.tuple_support.tuple_comparisons.TupleComparisons.approval_program using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Coalescing local variables in test_cases.tuple_support.tuple_comparisons.test_tuple_cmp_eval using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Coalescing local variables in test_cases.tuple_support.tuple_comparisons.log_and_return using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Coalescing local variables in test_cases.tuple_support.tuple_comparisons.TupleComparisons.clear_state_program using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in test_cases.tuple_support.tuple_comparisons.TupleComparisons.approval_program
debug: Sequentializing parallel copies in test_cases.tuple_support.tuple_comparisons.test_tuple_cmp_eval
debug: Sequentializing parallel copies in test_cases.tuple_support.tuple_comparisons.log_and_return
debug: Sequentializing parallel copies in test_cases.tuple_support.tuple_comparisons.TupleComparisons.clear_state_program
debug: Performing post-SSA optimizations
debug: Output IR to tuple_support/out/TupleComparisons.destructured.ir
debug: Inserted test_tuple_cmp_eval_block@0.ops[22]: 'store tmp%15#0 to l-stack (copy)'
debug: Replaced test_tuple_cmp_eval_block@0.ops[24]: 'load tmp%15#0' with 'load tmp%15#0 from l-stack (no copy)'
debug: Inserted test_tuple_cmp_eval_block@0.ops[14]: 'store tmp%13#0 to l-stack (copy)'
debug: Replaced test_tuple_cmp_eval_block@0.ops[17]: 'load tmp%13#0' with 'load tmp%13#0 from l-stack (no copy)'
debug: Inserted test_tuple_cmp_eval_block@0.ops[19]: 'store tmp%14#0 to l-stack (copy)'
debug: Replaced test_tuple_cmp_eval_block@0.ops[22]: 'load tmp%14#0' with 'load tmp%14#0 from l-stack (no copy)'
debug: Inserted log_and_return_block@0.ops[2]: 'store tmp%0#0 to l-stack (copy)'
debug: Replaced log_and_return_block@0.ops[4]: 'load tmp%0#0' with 'load tmp%0#0 from l-stack (no copy)'
debug: Output IR to tuple_support/out/NestedTuples.ssa.ir
info: optimizing test_cases.tuple_support.nested_tuples.NestedTuples at level 1
debug: Begin optimization pass 1/100
debug: Optimizing subroutine algopy.arc4.ARC4Contract.approval_program
debug: Splitting parallel copies prior to optimization
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.NestedTuples.__puya_arc4_router__
debug: Splitting parallel copies prior to optimization
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (== tmp%3#0 NoOp) to (! tmp%3#0)
debug: Simplified (== tmp%9#0 NoOp) to (! tmp%9#0)
debug: Simplified (extract3 item1%0#0 2u 8u) // on error: Index access is out of bounds to ((extract 2 8) item1%0#0) // on error: Index access is out of bounds
debug: Simplified (extract3 item1%1#0 0u 8u) // on error: Index access is out of bounds to ((extract 0 8) item1%1#0) // on error: Index access is out of bounds
debug: Simplified ((extract 6 2) as_bytes%2#0) to 0x000a
debug: Simplified (concat 0x offset_as_uint16%0#0) to offset_as_uint16%0#0
debug: Simplified ((extract 6 2) as_bytes%3#0) to 0x0004
debug: Simplified (concat 0x offset_as_uint16%1#0) to offset_as_uint16%1#0
debug: Simplified (== tmp%19#0 0u) to (! tmp%19#0)
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable tmp%1#0
debug: Removing unused variable tmp%6#0
debug: Removing unused variable tmp%12#0
debug: Removing unused variable current_tail_offset%0#0
debug: Removing unused variable encoded_tuple_buffer%0#0
debug: Removing unused variable as_bytes%2#0
debug: Removing unused variable current_tail_offset%1#0
debug: Removing unused variable current_tail_offset%2#0
debug: Removing unused variable encoded_tuple_buffer%4#0
debug: Removing unused variable as_bytes%3#0
debug: Removing unused variable current_tail_offset%4#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: inlining the default target of a switch/goto nth
debug: adding block@1: // abi_routing_L4 as a predecessor of block@5: // switch_case_next_L4 due to inlining of block@4: // switch_case_default_L4
debug: simplified terminator of block@1: // abi_routing_L4 from switch tmp%2#0 {method "run_tests()bool" => block@2, method "nested_tuple_params((string,(byte[],(uint64))))(byte[],(string,uint64))" => block@3, * => block@4} to switch tmp%2#0 {method "run_tests()bool" => block@2, method "nested_tuple_params((string,(byte[],(uint64))))(byte[],(string,uint64))" => block@3, * => block@5}
debug: simplifying a switch with constants into goto nth
debug: simplified terminator of block@6: // bare_routing_L4 from switch tmp%18#0 {0u => block@7, * => block@8} to goto_nth [block@7][tmp%18#0] else goto block@8
debug: inlining the default target of a switch/goto nth
debug: adding block@1: // abi_routing_L4 as a predecessor of block@10: // after_if_else_L4 due to inlining of block@5: // switch_case_next_L4
debug: simplified terminator of block@1: // abi_routing_L4 from switch tmp%2#0 {method "run_tests()bool" => block@2, method "nested_tuple_params((string,(byte[],(uint64))))(byte[],(string,uint64))" => block@3, * => block@5} to switch tmp%2#0 {method "run_tests()bool" => block@2, method "nested_tuple_params((string,(byte[],(uint64))))(byte[],(string,uint64))" => block@3, * => block@10}
debug: simplifying a goto nth with two targets into a conditional branch
debug: simplified terminator of block@6: // bare_routing_L4 from goto_nth [block@7][tmp%18#0] else goto block@8 to goto tmp%18#0 ? block@8 : block@7
debug: inlining the default target of a switch/goto nth
debug: simplified terminator of block@1: // abi_routing_L4 from switch tmp%2#0 {method "run_tests()bool" => block@2, method "nested_tuple_params((string,(byte[],(uint64))))(byte[],(string,uint64))" => block@3, * => block@10} to switch tmp%2#0 {method "run_tests()bool" => block@2, method "nested_tuple_params((string,(byte[],(uint64))))(byte[],(string,uint64))" => block@3, * => return 0u}
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@5: // switch_case_next_L4 with block@4: // switch_case_default_L4 in block@10: // after_if_else_L4
debug: Merged linear block@5: // switch_case_next_L4 into block@4: // switch_case_default_L4
debug: Replaced predecessor block@9: // switch_case_next_L4 with block@8: // switch_case_default_L4 in block@10: // after_if_else_L4
debug: Merged linear block@9: // switch_case_next_L4 into block@8: // switch_case_default_L4
debug: Optimizer: Remove Empty Blocks
debug: Removed empty block: block@4: // switch_case_default_L4
debug: Removed empty block: block@8: // switch_case_default_L4
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Replacing redundant declaration let item_start_offset%1#0: uint64 = (extract_uint16 tmp%13#0 2u) with copy of existing registers (Register(source_location=tuple_support/nested_tuples.py:4, ir_type=uint64, name='item_end_offset%0', version=0),)
debug: Found equivalence set: item_end_offset%0#0, item_start_offset%1#0
debug: Replacing {item_start_offset%1#0} with item_end_offset%0#0 made 1 modifications
debug: Found equivalence set: offset_as_uint16%0#0, encoded_tuple_buffer%1#0
debug: Replacing {encoded_tuple_buffer%1#0} with offset_as_uint16%0#0 made 1 modifications
debug: Found equivalence set: offset_as_uint16%1#0, encoded_tuple_buffer%5#0
debug: Replacing {encoded_tuple_buffer%5#0} with offset_as_uint16%1#0 made 1 modifications
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.NestedTuples.run_tests
debug: Splitting parallel copies prior to optimization
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: tuple_assignment%0#0, a#0
debug: Replacing {tuple_assignment%0#0} with a#0 made 1 modifications
debug: Found equivalence set: tuple_assignment%1#0, b#0
debug: Replacing {tuple_assignment%1#0} with b#0 made 1 modifications
debug: Found equivalence set: tuple_assignment%2#0, c#0
debug: Replacing {tuple_assignment%2#0} with c#0 made 1 modifications
debug: Found equivalence set: tuple_assignment%3#0, d#0
debug: Replacing {tuple_assignment%3#0} with d#0 made 1 modifications
debug: Found equivalence set: tuple_assignment%4#0, e#0
debug: Replacing {tuple_assignment%4#0} with e#0 made 1 modifications
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (== "There" "There") to 1u
debug: Simplified (== b#0 0u) to (! b#0)
debug: Simplified (== 1u 1u) to 1u
debug: Simplified (== "Hi" "Hi") to 1u
debug: Simplified (== "There" "There") to 1u
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable x.0#0
debug: Removing unused variable x.1#0
debug: Removing unused variable y.0#0
debug: Removing unused variable y.1.0#0
debug: Removing unused variable y.1.1#0
debug: Removing unused variable z.0#0
debug: Removing unused variable z.1#0
debug: Removing unused variable z.2.0#0
debug: Removing unused variable z.2.1.0#0
debug: Removing unused variable z.2.1.1#0
debug: Removing unused variable z2.0#0
debug: Removing unused variable z2.1.0#0
debug: Removing unused variable z2.1.1#0
debug: Removing unused variable z2_1.0#0
debug: Removing unused variable z2_1.1#0
debug: Removing unused variable _x#0
debug: Removing unused variable z2_1_1#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.test_swap
debug: Splitting parallel copies prior to optimization
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: args.0#0, a#0
debug: Replacing {a#0} with args.0#0 made 1 modifications
debug: Found equivalence set: args.1#0, b#0
debug: Replacing {b#0} with args.1#0 made 1 modifications
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.test_rearrange
debug: Splitting parallel copies prior to optimization
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: args.0#0, a#0
debug: Replacing {a#0} with args.0#0 made 1 modifications
debug: Found equivalence set: args.1#0, b#0
debug: Replacing {b#0} with args.1#0 made 1 modifications
debug: Found equivalence set: args.2.0#0, c#0
debug: Replacing {c#0} with args.2.0#0 made 1 modifications
debug: Found equivalence set: args.2.1.0#0, d#0
debug: Replacing {d#0} with args.2.1.0#0 made 1 modifications
debug: Found equivalence set: args.2.1.1#0, e#0
debug: Replacing {e#0} with args.2.1.1#0 made 1 modifications
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.test_intrinsics
debug: Splitting parallel copies prior to optimization
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: tmp%0#0, nt.1.0#0, x#0
debug: Replacing {tmp%0#0, x#0} with nt.1.0#0 made 2 modifications
debug: Found equivalence set: tmp%1#0, nt.1.1#0, y#0
debug: Replacing {tmp%1#0, y#0} with nt.1.1#0 made 2 modifications
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (== 1u 1u) to 1u
debug: Simplified (== 42u 42u) to 1u
debug: Simplified (== nt.1.0#0 0u) to (! nt.1.0#0)
debug: Simplified (== nt.1.0#0 0u) to (! nt.1.0#0)
debug: Simplified (== nt.1.0#0 0u) to (! nt.1.0#0)
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable nt.0#0
debug: Removing unused variable nt.2#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Replacing redundant declaration let tmp%8#0: bool = (! nt.1.0#0) with copy of existing registers (Register(source_location=tuple_support/nested_tuples.py:77:11, ir_type=bool, name='tmp%4', version=0),)
debug: Replacing redundant declaration let tmp%9#0: uint64 = (+ num1#0 num2#0) with copy of existing registers (Register(source_location=tuple_support/nested_tuples.py:77:24-35, ir_type=uint64, name='tmp%5', version=0),)
debug: Replacing redundant declaration let tmp%11#0: bool = (! nt.1.0#0) with copy of existing registers (Register(source_location=tuple_support/nested_tuples.py:77:11, ir_type=bool, name='tmp%4', version=0),)
debug: Replacing redundant declaration let tmp%12#0: uint64 = (+ num1#0 num2#0) with copy of existing registers (Register(source_location=tuple_support/nested_tuples.py:77:24-35, ir_type=uint64, name='tmp%5', version=0),)
debug: Found equivalence set: tmp%4#0, tmp%8#0, tmp%11#0
debug: Replacing {tmp%8#0, tmp%11#0} with tmp%4#0 made 2 modifications
debug: Found equivalence set: tmp%5#0, tmp%9#0, tmp%12#0
debug: Replacing {tmp%9#0, tmp%12#0} with tmp%5#0 made 2 modifications
debug: Replacing redundant declaration let tmp%10#0: bool = (== nt.1.1#0 tmp%5#0) with copy of existing registers (Register(source_location=tuple_support/nested_tuples.py:77:11, ir_type=bool, name='tmp%6', version=0),)
debug: Removing redundant assert of tmp%4#0
debug: Replacing redundant declaration let tmp%13#0: bool = (== nt.1.1#0 tmp%5#0) with copy of existing registers (Register(source_location=tuple_support/nested_tuples.py:77:11, ir_type=bool, name='tmp%6', version=0),)
debug: Found equivalence set: tmp%6#0, tmp%10#0, tmp%13#0
debug: Replacing {tmp%10#0, tmp%13#0} with tmp%6#0 made 2 modifications
debug: Removing redundant assert of tmp%6#0
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.test_nested_slicing
debug: Splitting parallel copies prior to optimization
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (== 4u 4u) to 1u
debug: Simplified (== 2u 2u) to 1u
debug: Simplified (== 5u 5u) to 1u
debug: Simplified (== "a" "a") to 1u
debug: Simplified (== "b" "b") to 1u
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable nt.0#0
debug: Removing unused variable nt.1#0
debug: Removing unused variable nt.2.0#0
debug: Removing unused variable nt.2.1.0#0
debug: Removing unused variable nt.2.1.1#0
debug: Removing unused variable nt.2.2#0
debug: Removing unused variable nt.3#0
debug: Removing unused variable nt.4#0
debug: Removing unused variable a#0
debug: Removing unused variable b.0#0
debug: Removing unused variable b.1.0#0
debug: Removing unused variable b.1.1#0
debug: Removing unused variable b.2#0
debug: Removing unused variable c#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.test_nested_singles
debug: Splitting parallel copies prior to optimization
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: one#0, s.1.0#0, t.0#0
debug: Replacing {s.1.0#0, t.0#0} with one#0 made 4 modifications
debug: Found equivalence set: s.2.0#2, tmp#0, s2.0#0
debug: Replacing {tmp#0, s2.0#0} with s.2.0#2 made 1 modifications
debug: Found equivalence set: s.0.0#2, s0.0#0
debug: Found equivalence set: s.1.0#2, s1#0
debug: Replacing {s1#0} with s.1.0#2 made 1 modifications
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (== 0u 0u) to 1u
debug: Simplified (== 0u 0u) to 1u
debug: Simplified (== one#0 one#0) to 1u
debug: Simplified (== 2u 2u) to 1u
debug: Simplified (== 2u 2u) to 1u
debug: Simplified (select 0u 3u reassign#0) to (* reassign#0 3u)
debug: Simplified (== one#0 one#0) to 1u
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Replacing redundant declaration let tmp%11#0: uint64 = (select 2u 5u reassign#0) with copy of existing registers (Register(source_location=tuple_support/nested_tuples.py:129:19-39, ir_type=uint64, name='tmp%8', version=0),)
debug: Found equivalence set: tmp%8#0, tmp%11#0
debug: Replacing {tmp%11#0} with tmp%8#0 made 1 modifications
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.test_nested_mutation
debug: Splitting parallel copies prior to optimization
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: array_data%0#0, x.0.0#0
debug: Replacing {array_data%0#0} with x.0.0#0 made 1 modifications
debug: Found equivalence set: concat_result%0#0, x.0.0#1
debug: Replacing {concat_result%0#0} with x.0.0#1 made 1 modifications
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (concat 0x 0x0000000000000000) to 0x0000000000000000
debug: Simplified (concat 0x 0x0000000000000001) to 0x0000000000000001
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.test_nested_iteration
debug: Splitting parallel copies prior to optimization
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: t.0#1, a#0
debug: Replacing {a#0} with t.0#1 made 1 modifications
debug: Found equivalence set: t.1#1, b#0
debug: Replacing {b#0} with t.1#1 made 1 modifications
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable x#0
debug: Removing unused variable y#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@2: // for_footer_L157 with block@1: // for_body_L158 in block@3: // for_header_1_L157
debug: Replaced predecessor block@2: // for_footer_L157 with block@1: // for_body_L158 in block@4: // for_header_2_L157
debug: Replaced predecessor block@2: // for_footer_L157 with block@1: // for_body_L158 in block@5: // for_header_3_L157
debug: Replaced predecessor block@2: // for_footer_L157 with block@1: // for_body_L158 in block@6: // after_for_L157
debug: Merged linear block@2: // for_footer_L157 into block@1: // for_body_L158
debug: Replaced predecessor block@8: // for_footer_L161 with block@7: // for_body_L162 in block@9: // for_header_1_L161
debug: Replaced predecessor block@8: // for_footer_L161 with block@7: // for_body_L162 in block@10: // for_header_2_L161
debug: Replaced predecessor block@8: // for_footer_L161 with block@7: // for_body_L162 in block@11: // for_header_3_L161
debug: Replaced predecessor block@8: // for_footer_L161 with block@7: // for_body_L162 in block@12: // after_for_L161
debug: Merged linear block@8: // for_footer_L161 into block@7: // for_body_L162
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.NestedTuples.test_single_evaluation_nested
debug: Splitting parallel copies prior to optimization
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: awst_tmp%0#0, ternary_result%0.0.0#0
debug: Replacing {ternary_result%0.0.0#0} with awst_tmp%0#0 made 1 modifications
debug: Found equivalence set: awst_tmp%1#0, ternary_result%0.0.1#0
debug: Replacing {ternary_result%0.0.1#0} with awst_tmp%1#0 made 1 modifications
debug: Found equivalence set: awst_tmp%2#0, ternary_result%0.1#0
debug: Replacing {ternary_result%0.1#0} with awst_tmp%2#0 made 1 modifications
debug: Found equivalence set: ternary_result%0.0.0#2, result.0.0#0
debug: Replacing {ternary_result%0.0.0#2} with result.0.0#0 made 1 modifications
debug: Found equivalence set: ternary_result%0.0.1#2, result.0.1#0
debug: Replacing {ternary_result%0.0.1#2} with result.0.1#0 made 1 modifications
debug: Found equivalence set: ternary_result%0.1#2, result.1#0
debug: Replacing {ternary_result%0.1#2} with result.1#0 made 1 modifications
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (== awst_tmp%0#0 awst_tmp%0#0) to 1u
debug: Simplified (== awst_tmp%1#0 awst_tmp%1#0) to 1u
debug: Simplified (== awst_tmp%2#0 awst_tmp%2#0) to 1u
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable result.0.1#0
debug: Removing unused variable result.1#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Not removing empty block block@1: // ternary_true_L52 because it's used by phi nodes
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.NestedTuples.build_nested
debug: Splitting parallel copies prior to optimization
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.NestedTuples.nested_tuple_params
debug: Splitting parallel copies prior to optimization
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: args.0#0, s#0
debug: Replacing {s#0} with args.0#0 made 1 modifications
debug: Found equivalence set: args.1.0#0, b#0
debug: Replacing {b#0} with args.1.0#0 made 1 modifications
debug: Found equivalence set: args.1.1.0#0, u#0
debug: Replacing {u#0} with args.1.1.0#0 made 1 modifications
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.NestedTuples.__algopy_default_create
debug: Splitting parallel copies prior to optimization
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.NestedTuples.__init__
debug: Splitting parallel copies prior to optimization
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine algopy.arc4.ARC4Contract.clear_state_program
debug: Splitting parallel copies prior to optimization
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Output IR to tuple_support/out/NestedTuples.ssa.opt_pass_1.ir
debug: Begin optimization pass 2/100
debug: Optimizing subroutine algopy.arc4.ARC4Contract.approval_program
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.NestedTuples.__puya_arc4_router__
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable offset_as_uint16%0#0
debug: Removing unused variable data_length%0#0
debug: Removing unused variable offset_as_uint16%1#0
debug: Removing unused variable data_length%2#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.NestedTuples.run_tests
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (&& 1u 1u) to 1u
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable tmp%3#0
debug: Removing unused variable tmp%11#0
debug: Removing unused variable tmp%12#0
debug: Removing unused variable tmp%13#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.test_swap
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.test_rearrange
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.test_intrinsics
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable tmp%2#0
debug: Removing unused variable tmp%3#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.test_nested_slicing
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (&& 1u 1u) to 1u
debug: Simplified (&& 1u 1u) to 1u
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable tmp%0#0
debug: Removing unused variable tmp%1#0
debug: Removing unused variable tmp%2#0
debug: Removing unused variable tmp%4#0
debug: Removing unused variable tmp%5#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.test_nested_singles
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable tmp%0#0
debug: Removing unused variable tmp%1#0
debug: Removing unused variable tmp%3#0
debug: Removing unused variable tmp%4#0
debug: Removing unused variable tmp%5#0
debug: Removing unused variable tmp%10#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.test_nested_mutation
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (concat 0x0001 0x0000000000000000) to 0x00010000000000000000
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable result%0#0
debug: Removing unused variable data%0#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.test_nested_iteration
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.NestedTuples.test_single_evaluation_nested
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (&& 1u 1u) to 1u
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable tmp%0#0
debug: Removing unused variable tmp%1#0
debug: Removing unused variable tmp%3#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Not removing empty block block@1: // ternary_true_L52 because it's used by phi nodes
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.NestedTuples.build_nested
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.NestedTuples.nested_tuple_params
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.NestedTuples.__init__
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine algopy.arc4.ARC4Contract.clear_state_program
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Output IR to tuple_support/out/NestedTuples.ssa.opt_pass_2.ir
debug: Begin optimization pass 3/100
debug: Optimizing subroutine algopy.arc4.ARC4Contract.approval_program
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.NestedTuples.__puya_arc4_router__
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.NestedTuples.run_tests
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (&& 1u 1u) to 1u
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable tmp%14#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.test_swap
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.test_rearrange
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.test_intrinsics
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.test_nested_slicing
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable tmp%3#0
debug: Removing unused variable tmp%6#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.test_nested_singles
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.test_nested_mutation
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Simplified ((extract 2 0) 0x00010000000000000000) to 0x0000000000000000
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable x.0.0#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.test_nested_iteration
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.NestedTuples.test_single_evaluation_nested
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (|| 1u 1u) to 1u
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable tmp%2#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Not removing empty block block@1: // ternary_true_L52 because it's used by phi nodes
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.NestedTuples.build_nested
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.NestedTuples.nested_tuple_params
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.NestedTuples.__init__
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine algopy.arc4.ARC4Contract.clear_state_program
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Output IR to tuple_support/out/NestedTuples.ssa.opt_pass_3.ir
debug: Begin optimization pass 4/100
debug: Optimizing subroutine algopy.arc4.ARC4Contract.approval_program
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.NestedTuples.__puya_arc4_router__
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.NestedTuples.run_tests
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable tmp%15#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.test_swap
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.test_rearrange
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.test_intrinsics
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.test_nested_slicing
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.test_nested_singles
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.test_nested_mutation
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (concat 0x0000000000000000 0x0000000000000001) to 0x00000000000000000000000000000001
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable expr_value_trimmed%0#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.test_nested_iteration
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.NestedTuples.test_single_evaluation_nested
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable tmp%4#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: simplifying conditional branch with a constant into a goto
debug: simplified terminator of block@0: // L49 from goto 1u ? block@1 : block@2 to goto block@1
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@1: // ternary_true_L52 with block@0: // L49 in block@3: // ternary_merge_L52
debug: Merged linear block@1: // ternary_true_L52 into block@0: // L49
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Removing unreachable blocks: block@2: // ternary_false_L52
debug: Removed unreachable predecessors from block@3: // ternary_merge_L52
debug: Removing unreachable phi arguments: ternary_result%0.0.0#1 <- block@2
debug: Replacing trivial Phi node: let result.0.0#0: bytes = φ(awst_tmp%0#0 <- block@0) (result.0.0#0) with awst_tmp%0#0
debug: Deleting Phi assignment: let result.0.0#0: bytes = φ(awst_tmp%0#0 <- block@0)
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.NestedTuples.build_nested
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.NestedTuples.nested_tuple_params
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.NestedTuples.__init__
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine algopy.arc4.ARC4Contract.clear_state_program
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Output IR to tuple_support/out/NestedTuples.ssa.opt_pass_4.ir
debug: Begin optimization pass 5/100
debug: Optimizing subroutine algopy.arc4.ARC4Contract.approval_program
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.NestedTuples.__puya_arc4_router__
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.NestedTuples.run_tests
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.test_swap
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.test_rearrange
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.test_intrinsics
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.test_nested_singles
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.test_nested_mutation
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (len 0x00000000000000000000000000000001) to 16u
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable concatenated%0#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.test_nested_iteration
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.NestedTuples.test_single_evaluation_nested
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Merged linear block@3: // ternary_merge_L52 into block@0: // L49
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.NestedTuples.build_nested
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.NestedTuples.nested_tuple_params
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.NestedTuples.__init__
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine algopy.arc4.ARC4Contract.clear_state_program
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Output IR to tuple_support/out/NestedTuples.ssa.opt_pass_5.ir
debug: Begin optimization pass 6/100
debug: Optimizing subroutine algopy.arc4.ARC4Contract.approval_program
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.NestedTuples.__puya_arc4_router__
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.NestedTuples.run_tests
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.test_swap
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.test_rearrange
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.test_intrinsics
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.test_nested_singles
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.test_nested_mutation
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (/ 16u 8u) to 2u
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable byte_len%0#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.test_nested_iteration
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.NestedTuples.test_single_evaluation_nested
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.NestedTuples.build_nested
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.NestedTuples.nested_tuple_params
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.NestedTuples.__init__
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine algopy.arc4.ARC4Contract.clear_state_program
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Output IR to tuple_support/out/NestedTuples.ssa.opt_pass_6.ir
debug: Begin optimization pass 7/100
debug: Optimizing subroutine algopy.arc4.ARC4Contract.approval_program
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.NestedTuples.__puya_arc4_router__
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.NestedTuples.run_tests
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.test_swap
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.test_rearrange
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.test_intrinsics
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.test_nested_singles
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.test_nested_mutation
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Simplified ((extract 6 2) as_bytes%0#0) to 0x0002
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable len_%0#0
debug: Removing unused variable as_bytes%0#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.test_nested_iteration
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.NestedTuples.test_single_evaluation_nested
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.NestedTuples.build_nested
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.NestedTuples.nested_tuple_params
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.NestedTuples.__init__
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine algopy.arc4.ARC4Contract.clear_state_program
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Output IR to tuple_support/out/NestedTuples.ssa.opt_pass_7.ir
debug: Begin optimization pass 8/100
debug: Optimizing subroutine algopy.arc4.ARC4Contract.approval_program
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.NestedTuples.__puya_arc4_router__
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.NestedTuples.run_tests
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.test_swap
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.test_rearrange
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.test_intrinsics
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.test_nested_singles
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.test_nested_mutation
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (concat 0x0002 0x00000000000000000000000000000001) to 0x000200000000000000000000000000000001
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable len_16_bit%0#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.test_nested_iteration
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.NestedTuples.test_single_evaluation_nested
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.NestedTuples.build_nested
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.NestedTuples.nested_tuple_params
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.NestedTuples.__init__
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine algopy.arc4.ARC4Contract.clear_state_program
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Output IR to tuple_support/out/NestedTuples.ssa.opt_pass_8.ir
debug: Begin optimization pass 9/100
debug: Optimizing subroutine algopy.arc4.ARC4Contract.approval_program
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.NestedTuples.__puya_arc4_router__
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.NestedTuples.run_tests
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.test_swap
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.test_rearrange
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.test_intrinsics
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.test_nested_singles
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.test_nested_mutation
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (extract_uint16 0x000200000000000000000000000000000001 0u) to 2u
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable x.0.0#1
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.test_nested_iteration
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.NestedTuples.test_single_evaluation_nested
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.NestedTuples.build_nested
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.NestedTuples.nested_tuple_params
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.NestedTuples.__init__
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine algopy.arc4.ARC4Contract.clear_state_program
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Output IR to tuple_support/out/NestedTuples.ssa.opt_pass_9.ir
debug: Begin optimization pass 10/100
debug: Optimizing subroutine algopy.arc4.ARC4Contract.approval_program
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.NestedTuples.__puya_arc4_router__
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.NestedTuples.run_tests
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.test_swap
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.test_rearrange
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.test_intrinsics
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.test_nested_singles
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.test_nested_mutation
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (== 2u 2u) to 1u
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable tmp%0#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.test_nested_iteration
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.NestedTuples.test_single_evaluation_nested
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.NestedTuples.build_nested
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.NestedTuples.nested_tuple_params
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.NestedTuples.__init__
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine algopy.arc4.ARC4Contract.clear_state_program
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Output IR to tuple_support/out/NestedTuples.ssa.opt_pass_10.ir
debug: Begin optimization pass 11/100
debug: Optimizing subroutine algopy.arc4.ARC4Contract.approval_program
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.NestedTuples.__puya_arc4_router__
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.NestedTuples.run_tests
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.test_swap
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.test_rearrange
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.test_intrinsics
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.test_nested_singles
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.test_nested_mutation
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable tmp%1#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.test_nested_iteration
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.NestedTuples.test_single_evaluation_nested
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.NestedTuples.build_nested
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.NestedTuples.nested_tuple_params
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.NestedTuples.__init__
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine algopy.arc4.ARC4Contract.clear_state_program
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Output IR to tuple_support/out/NestedTuples.ssa.opt_pass_11.ir
debug: Begin optimization pass 12/100
debug: Optimizing subroutine algopy.arc4.ARC4Contract.approval_program
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.NestedTuples.__puya_arc4_router__
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.NestedTuples.run_tests
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.test_swap
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.test_rearrange
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.test_intrinsics
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.test_nested_singles
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.test_nested_mutation
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.test_nested_iteration
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.NestedTuples.test_single_evaluation_nested
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.NestedTuples.build_nested
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.NestedTuples.nested_tuple_params
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.NestedTuples.__init__
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine algopy.arc4.ARC4Contract.clear_state_program
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Output IR to tuple_support/out/NestedTuples.ssa.opt_pass_12.ir
debug: Begin optimization pass 13/100
debug: Optimizing subroutine algopy.arc4.ARC4Contract.approval_program
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.NestedTuples.__puya_arc4_router__
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.NestedTuples.run_tests
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.test_swap
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.test_rearrange
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.test_intrinsics
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.test_nested_singles
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.test_nested_iteration
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.NestedTuples.test_single_evaluation_nested
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.NestedTuples.build_nested
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.NestedTuples.nested_tuple_params
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine test_cases.tuple_support.nested_tuples.NestedTuples.__init__
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: Optimizing subroutine algopy.arc4.ARC4Contract.clear_state_program
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Remove Calls To No Op Subroutines
debug: No optimizations performed in pass 13, ending loop
debug: Removing Phis from algopy.arc4.ARC4Contract.approval_program
debug: Removing Phis from test_cases.tuple_support.nested_tuples.NestedTuples.__puya_arc4_router__
debug: Removing Phis from test_cases.tuple_support.nested_tuples.NestedTuples.run_tests
debug: Removing Phis from test_cases.tuple_support.nested_tuples.test_swap
debug: Removing Phis from test_cases.tuple_support.nested_tuples.test_rearrange
debug: Removing Phis from test_cases.tuple_support.nested_tuples.test_intrinsics
debug: Removing Phis from test_cases.tuple_support.nested_tuples.test_nested_singles
debug: Removing Phis from test_cases.tuple_support.nested_tuples.test_nested_iteration
debug: Removing Phis from test_cases.tuple_support.nested_tuples.NestedTuples.test_single_evaluation_nested
debug: Removing Phis from test_cases.tuple_support.nested_tuples.NestedTuples.build_nested
debug: Removing Phis from test_cases.tuple_support.nested_tuples.NestedTuples.nested_tuple_params
debug: Removing Phis from test_cases.tuple_support.nested_tuples.NestedTuples.__init__
debug: Removing Phis from algopy.arc4.ARC4Contract.clear_state_program
debug: Coalescing local variables in algopy.arc4.ARC4Contract.approval_program using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Coalescing local variables in test_cases.tuple_support.nested_tuples.NestedTuples.__puya_arc4_router__ using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Coalescing local variables in test_cases.tuple_support.nested_tuples.NestedTuples.run_tests using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Coalescing local variables in test_cases.tuple_support.nested_tuples.test_swap using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Coalescing local variables in test_cases.tuple_support.nested_tuples.test_rearrange using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Coalescing local variables in test_cases.tuple_support.nested_tuples.test_intrinsics using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Coalescing local variables in test_cases.tuple_support.nested_tuples.test_nested_singles using strategy RootOperandGrouping
debug: Coalescing s.0.0#0 with [s.0.0#5, s.0.0#1, s.0.0#2]
debug: Coalescing s.2.0#0 with [s.2.0#5, s.2.0#1, s.2.0#2]
debug: Coalescing s.1.0#1 with [s.1.0#4, s.1.0#2]
debug: Coalescing resulted in 20 replacement/s
debug: Coalescing local variables in test_cases.tuple_support.nested_tuples.test_nested_iteration using strategy RootOperandGrouping
debug: Coalescing total#0 with [total#9, total#1, total#2, total#14, total#3, total#4]
debug: Coalescing loop_counter%0#0 with [loop_counter%0#9, loop_counter%0#1, loop_counter%0#2, loop_counter%0#3, loop_counter%0#4]
debug: Coalescing t.0#0 with [t.0#9, t.0#1, t.0#2, t.0#3, t.0#4]
debug: Coalescing t.1#0 with [t.1#9, t.1#1, t.1#2, t.1#3, t.1#4]
debug: Coalescing loop_counter%1#0 with [loop_counter%1#9, loop_counter%1#1, loop_counter%1#2, loop_counter%1#3, loop_counter%1#4]
debug: Coalescing a#1 with [a#10, a#2, a#3, a#4, a#5]
debug: Coalescing b#1 with [b#10, b#2, b#3, b#4, b#5]
debug: Coalescing resulted in 102 replacement/s
debug: Coalescing local variables in test_cases.tuple_support.nested_tuples.NestedTuples.test_single_evaluation_nested using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Coalescing local variables in test_cases.tuple_support.nested_tuples.NestedTuples.build_nested using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Coalescing local variables in test_cases.tuple_support.nested_tuples.NestedTuples.nested_tuple_params using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Coalescing local variables in test_cases.tuple_support.nested_tuples.NestedTuples.__init__ using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Coalescing local variables in algopy.arc4.ARC4Contract.clear_state_program using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in algopy.arc4.ARC4Contract.approval_program
debug: Sequentializing parallel copies in test_cases.tuple_support.nested_tuples.NestedTuples.__puya_arc4_router__
debug: Sequentializing parallel copies in test_cases.tuple_support.nested_tuples.NestedTuples.run_tests
debug: Sequentializing parallel copies in test_cases.tuple_support.nested_tuples.test_swap
debug: Sequentializing parallel copies in test_cases.tuple_support.nested_tuples.test_rearrange
debug: Sequentializing parallel copies in test_cases.tuple_support.nested_tuples.test_intrinsics
debug: Sequentializing parallel copies in test_cases.tuple_support.nested_tuples.test_nested_singles
debug: loc: {s.0.0#0=s.0.0#0, s.1.0#1=None, s.2.0#0=s.2.0#0, one#0=one#0}
debug: pred: {s.0.0#0=s.0.0#0, s.1.0#1=one#0, s.2.0#0=s.2.0#0}
debug: ready: s.1.0#1
debug: to_do: s.0.0#0, s.1.0#1, s.2.0#0
debug: * avail s.1.0#1
debug: * avail one#0
debug: * to_do s.2.0#0
debug: * to_do s.1.0#1
debug: * to_do s.0.0#0
debug: loc: {s.0.0#0=s.0.0#0, s.1.0#1=s.1.0#1, s.2.0#0=s.2.0#0}
debug: pred: {s.0.0#0=s.0.0#0, s.1.0#1=s.1.0#1, s.2.0#0=s.2.0#0}
debug: ready: 
debug: to_do: s.0.0#0, s.1.0#1, s.2.0#0
debug: * to_do s.2.0#0
debug: * to_do s.1.0#1
debug: * to_do s.0.0#0
debug: loc: {s.0.0#0=s.0.0#0, s.1.0#1=s.1.0#1, s.2.0#0=s.2.0#0}
debug: pred: {s.0.0#0=s.0.0#0, s.1.0#1=s.1.0#1, s.2.0#0=s.2.0#0}
debug: ready: 
debug: to_do: s.0.0#0, s.1.0#1, s.2.0#0
debug: * to_do s.2.0#0
debug: * to_do s.1.0#1
debug: * to_do s.0.0#0
debug: Sequentializing parallel copies in test_cases.tuple_support.nested_tuples.test_nested_iteration
debug: loc: {loop_counter%0#0=loop_counter%0#0, t.0#0=t.0#0, t.1#0=t.1#0, total#0=total#0}
debug: pred: {loop_counter%0#0=loop_counter%0#0, t.0#0=t.0#0, t.1#0=t.1#0, total#0=total#0}
debug: ready: 
debug: to_do: loop_counter%0#0, t.0#0, t.1#0, total#0
debug: * to_do total#0
debug: * to_do t.1#0
debug: * to_do t.0#0
debug: * to_do loop_counter%0#0
debug: loc: {loop_counter%0#0=loop_counter%0#0, t.0#0=t.0#0, t.1#0=t.1#0, total#0=total#0}
debug: pred: {loop_counter%0#0=loop_counter%0#0, t.0#0=t.0#0, t.1#0=t.1#0, total#0=total#0}
debug: ready: 
debug: to_do: loop_counter%0#0, t.0#0, t.1#0, total#0
debug: * to_do total#0
debug: * to_do t.1#0
debug: * to_do t.0#0
debug: * to_do loop_counter%0#0
debug: loc: {loop_counter%0#0=loop_counter%0#0, t.0#0=t.0#0, t.1#0=t.1#0, total#0=total#0}
debug: pred: {loop_counter%0#0=loop_counter%0#0, t.0#0=t.0#0, t.1#0=t.1#0, total#0=total#0}
debug: ready: 
debug: to_do: loop_counter%0#0, t.0#0, t.1#0, total#0
debug: * to_do total#0
debug: * to_do t.1#0
debug: * to_do t.0#0
debug: * to_do loop_counter%0#0
debug: loc: {loop_counter%0#0=loop_counter%0#0, t.0#0=t.0#0, t.1#0=t.1#0, total#0=total#0}
debug: pred: {loop_counter%0#0=loop_counter%0#0, t.0#0=t.0#0, t.1#0=t.1#0, total#0=total#0}
debug: ready: 
debug: to_do: loop_counter%0#0, t.0#0, t.1#0, total#0
debug: * to_do total#0
debug: * to_do t.1#0
debug: * to_do t.0#0
debug: * to_do loop_counter%0#0
debug: loc: {loop_counter%0#0=loop_counter%0#0, t.0#0=t.0#0, t.1#0=t.1#0, total#0=total#0}
debug: pred: {loop_counter%0#0=loop_counter%0#0, t.0#0=t.0#0, t.1#0=t.1#0, total#0=total#0}
debug: ready: 
debug: to_do: loop_counter%0#0, t.0#0, t.1#0, total#0
debug: * to_do total#0
debug: * to_do t.1#0
debug: * to_do t.0#0
debug: * to_do loop_counter%0#0
debug: loc: {loop_counter%1#0=loop_counter%1#0, total#0=total#0, a#1=a#1, b#1=b#1}
debug: pred: {loop_counter%1#0=loop_counter%1#0, total#0=total#0, a#1=a#1, b#1=b#1}
debug: ready: 
debug: to_do: loop_counter%1#0, total#0, a#1, b#1
debug: * to_do b#1
debug: * to_do a#1
debug: * to_do total#0
debug: * to_do loop_counter%1#0
debug: loc: {loop_counter%1#0=loop_counter%1#0, total#0=total#0, a#1=a#1, b#1=b#1}
debug: pred: {loop_counter%1#0=loop_counter%1#0, total#0=total#0, a#1=a#1, b#1=b#1}
debug: ready: 
debug: to_do: loop_counter%1#0, total#0, a#1, b#1
debug: * to_do b#1
debug: * to_do a#1
debug: * to_do total#0
debug: * to_do loop_counter%1#0
debug: loc: {loop_counter%1#0=loop_counter%1#0, total#0=total#0, a#1=a#1, b#1=b#1}
debug: pred: {loop_counter%1#0=loop_counter%1#0, total#0=total#0, a#1=a#1, b#1=b#1}
debug: ready: 
debug: to_do: loop_counter%1#0, total#0, a#1, b#1
debug: * to_do b#1
debug: * to_do a#1
debug: * to_do total#0
debug: * to_do loop_counter%1#0
debug: loc: {loop_counter%1#0=loop_counter%1#0, total#0=total#0, a#1=a#1, b#1=b#1}
debug: pred: {loop_counter%1#0=loop_counter%1#0, total#0=total#0, a#1=a#1, b#1=b#1}
debug: ready: 
debug: to_do: loop_counter%1#0, total#0, a#1, b#1
debug: * to_do b#1
debug: * to_do a#1
debug: * to_do total#0
debug: * to_do loop_counter%1#0
debug: loc: {loop_counter%1#0=loop_counter%1#0, total#0=total#0, a#1=a#1, b#1=b#1}
debug: pred: {loop_counter%1#0=loop_counter%1#0, total#0=total#0, a#1=a#1, b#1=b#1}
debug: ready: 
debug: to_do: loop_counter%1#0, total#0, a#1, b#1
debug: * to_do b#1
debug: * to_do a#1
debug: * to_do total#0
debug: * to_do loop_counter%1#0
debug: Sequentializing parallel copies in test_cases.tuple_support.nested_tuples.NestedTuples.test_single_evaluation_nested
debug: Sequentializing parallel copies in test_cases.tuple_support.nested_tuples.NestedTuples.build_nested
debug: Sequentializing parallel copies in test_cases.tuple_support.nested_tuples.NestedTuples.nested_tuple_params
debug: Sequentializing parallel copies in test_cases.tuple_support.nested_tuples.NestedTuples.__init__
debug: Sequentializing parallel copies in algopy.arc4.ARC4Contract.clear_state_program
debug: Performing post-SSA optimizations
debug: Output IR to tuple_support/out/NestedTuples.destructured.ir
debug: Inserted main_block@0.ops[1]: 'store app_id%0#0 to l-stack (copy)'
debug: Replaced main_block@0.ops[3]: 'load app_id%0#0' with 'load app_id%0#0 from l-stack (no copy)'
debug: Inserted main_entrypoint@2.ops[1]: 'store tmp%0#0 to l-stack (copy)'
debug: Replaced main_entrypoint@2.ops[3]: 'load tmp%0#0' with 'load tmp%0#0 from l-stack (no copy)'
debug: Found 1 edge set/s for test_cases.tuple_support.nested_tuples.NestedTuples.approval_program
debug: Inserted __puya_arc4_router___block@0.ops[1]: 'store tmp%0#0 to l-stack (copy)'
debug: Replaced __puya_arc4_router___block@0.ops[3]: 'load tmp%0#0' with 'load tmp%0#0 from l-stack (no copy)'
debug: Inserted __puya_arc4_router___abi_routing@1.ops[1]: 'store tmp%2#0 to l-stack (copy)'
debug: Replaced __puya_arc4_router___abi_routing@1.ops[5]: 'load tmp%2#0' with 'load tmp%2#0 from l-stack (no copy)'
debug: Inserted __puya_arc4_router___run_tests_route@2.ops[1]: 'store tmp%3#0 to l-stack (copy)'
debug: Replaced __puya_arc4_router___run_tests_route@2.ops[3]: 'load tmp%3#0' with 'load tmp%3#0 from l-stack (no copy)'
debug: Inserted __puya_arc4_router___run_tests_route@2.ops[5]: 'store tmp%4#0 to l-stack (copy)'
debug: Replaced __puya_arc4_router___run_tests_route@2.ops[7]: 'load tmp%4#0' with 'load tmp%4#0 from l-stack (no copy)'
debug: Inserted __puya_arc4_router___run_tests_route@2.ops[10]: 'store tmp%5#0 to l-stack (copy)'
debug: Replaced __puya_arc4_router___run_tests_route@2.ops[12]: 'load tmp%5#0' with 'load tmp%5#0 from l-stack (no copy)'
debug: Inserted __puya_arc4_router___run_tests_route@2.ops[24]: 'store tmp%8#0 to l-stack (copy)'
debug: Replaced __puya_arc4_router___run_tests_route@2.ops[26]: 'load tmp%8#0' with 'load tmp%8#0 from l-stack (no copy)'
debug: Inserted __puya_arc4_router___run_tests_route@2.ops[20]: 'store encoded_bool%0#0 to l-stack (copy)'
debug: Replaced __puya_arc4_router___run_tests_route@2.ops[23]: 'load encoded_bool%0#0' with 'load encoded_bool%0#0 from l-stack (no copy)'
debug: Inserted __puya_arc4_router___run_tests_route@2.ops[15]: 'store tmp%7#0 to l-stack (copy)'
debug: Replaced __puya_arc4_router___run_tests_route@2.ops[19]: 'load tmp%7#0' with 'load tmp%7#0 from l-stack (no copy)'
debug: Inserted __puya_arc4_router___nested_tuple_params_route@3.ops[1]: 'store tmp%9#0 to l-stack (copy)'
debug: Replaced __puya_arc4_router___nested_tuple_params_route@3.ops[3]: 'load tmp%9#0' with 'load tmp%9#0 from l-stack (no copy)'
debug: Inserted __puya_arc4_router___nested_tuple_params_route@3.ops[5]: 'store tmp%10#0 to l-stack (copy)'
debug: Replaced __puya_arc4_router___nested_tuple_params_route@3.ops[7]: 'load tmp%10#0' with 'load tmp%10#0 from l-stack (no copy)'
debug: Inserted __puya_arc4_router___nested_tuple_params_route@3.ops[10]: 'store tmp%11#0 to l-stack (copy)'
debug: Replaced __puya_arc4_router___nested_tuple_params_route@3.ops[12]: 'load tmp%11#0' with 'load tmp%11#0 from l-stack (no copy)'
debug: Inserted __puya_arc4_router___nested_tuple_params_route@3.ops[15]: 'store tmp%13#0 to l-stack (copy)'
debug: Replaced __puya_arc4_router___nested_tuple_params_route@3.ops[17]: 'load tmp%13#0' with 'load tmp%13#0 from l-stack (no copy)'
debug: Inserted __puya_arc4_router___nested_tuple_params_route@3.ops[61]: 'store item0%2#0 to l-stack (copy)'
debug: Replaced __puya_arc4_router___nested_tuple_params_route@3.ops[63]: 'load item0%2#0' with 'load item0%2#0 from l-stack (no copy)'
debug: Inserted __puya_arc4_router___nested_tuple_params_route@3.ops[72]: 'store awst_tmp%0#0 to l-stack (copy)'
debug: Replaced __puya_arc4_router___nested_tuple_params_route@3.ops[74]: 'load awst_tmp%0#0' with 'load awst_tmp%0#0 from l-stack (no copy)'
debug: Inserted __puya_arc4_router___nested_tuple_params_route@3.ops[76]: 'store length%0#0 to l-stack (copy)'
debug: Replaced __puya_arc4_router___nested_tuple_params_route@3.ops[78]: 'load length%0#0' with 'load length%0#0 from l-stack (no copy)'
debug: Inserted __puya_arc4_router___nested_tuple_params_route@3.ops[80]: 'store as_bytes%0#0 to l-stack (copy)'
debug: Replaced __puya_arc4_router___nested_tuple_params_route@3.ops[82]: 'load as_bytes%0#0' with 'load as_bytes%0#0 from l-stack (no copy)'
debug: Inserted __puya_arc4_router___nested_tuple_params_route@3.ops[84]: 'store length_uint16%0#0 to l-stack (copy)'
debug: Replaced __puya_arc4_router___nested_tuple_params_route@3.ops[86]: 'load length_uint16%0#0' with 'load length_uint16%0#0 from l-stack (no copy)'
debug: Inserted __puya_arc4_router___nested_tuple_params_route@3.ops[92]: 'store length%1#0 to l-stack (copy)'
debug: Replaced __puya_arc4_router___nested_tuple_params_route@3.ops[94]: 'load length%1#0' with 'load length%1#0 from l-stack (no copy)'
debug: Inserted __puya_arc4_router___nested_tuple_params_route@3.ops[96]: 'store as_bytes%1#0 to l-stack (copy)'
debug: Replaced __puya_arc4_router___nested_tuple_params_route@3.ops[98]: 'load as_bytes%1#0' with 'load as_bytes%1#0 from l-stack (no copy)'
debug: Inserted __puya_arc4_router___nested_tuple_params_route@3.ops[100]: 'store length_uint16%1#0 to l-stack (copy)'
debug: Replaced __puya_arc4_router___nested_tuple_params_route@3.ops[102]: 'load length_uint16%1#0' with 'load length_uint16%1#0 from l-stack (no copy)'
debug: Inserted __puya_arc4_router___nested_tuple_params_route@3.ops[112]: 'store encoded_tuple_buffer%2#0 to l-stack (copy)'
debug: Replaced __puya_arc4_router___nested_tuple_params_route@3.ops[114]: 'load encoded_tuple_buffer%2#0' with 'load encoded_tuple_buffer%2#0 from l-stack (no copy)'
debug: Inserted __puya_arc4_router___nested_tuple_params_route@3.ops[124]: 'store current_tail_offset%3#0 to l-stack (copy)'
debug: Replaced __puya_arc4_router___nested_tuple_params_route@3.ops[126]: 'load current_tail_offset%3#0' with 'load current_tail_offset%3#0 from l-stack (no copy)'
debug: Inserted __puya_arc4_router___nested_tuple_params_route@3.ops[128]: 'store as_bytes%4#0 to l-stack (copy)'
debug: Replaced __puya_arc4_router___nested_tuple_params_route@3.ops[130]: 'load as_bytes%4#0' with 'load as_bytes%4#0 from l-stack (no copy)'
debug: Inserted __puya_arc4_router___nested_tuple_params_route@3.ops[136]: 'store encoded_tuple_buffer%6#0 to l-stack (copy)'
debug: Replaced __puya_arc4_router___nested_tuple_params_route@3.ops[138]: 'load encoded_tuple_buffer%6#0' with 'load encoded_tuple_buffer%6#0 from l-stack (no copy)'
debug: Inserted __puya_arc4_router___nested_tuple_params_route@3.ops[141]: 'store encoded_tuple_buffer%7#0 to l-stack (copy)'
debug: Replaced __puya_arc4_router___nested_tuple_params_route@3.ops[143]: 'load encoded_tuple_buffer%7#0' with 'load encoded_tuple_buffer%7#0 from l-stack (no copy)'
debug: Inserted __puya_arc4_router___nested_tuple_params_route@3.ops[150]: 'store tmp%17#0 to l-stack (copy)'
debug: Replaced __puya_arc4_router___nested_tuple_params_route@3.ops[152]: 'load tmp%17#0' with 'load tmp%17#0 from l-stack (no copy)'
debug: Inserted __puya_arc4_router___nested_tuple_params_route@3.ops[108]: 'store val_as_bytes%0#0 to l-stack (copy)'
debug: Replaced __puya_arc4_router___nested_tuple_params_route@3.ops[111]: 'load val_as_bytes%0#0' with 'load val_as_bytes%0#0 from l-stack (no copy)'
debug: Inserted __puya_arc4_router___nested_tuple_params_route@3.ops[121]: 'store data_length%1#0 to l-stack (copy)'
debug: Replaced __puya_arc4_router___nested_tuple_params_route@3.ops[124]: 'load data_length%1#0' with 'load data_length%1#0 from l-stack (no copy)'
debug: Inserted __puya_arc4_router___nested_tuple_params_route@3.ops[134]: 'store offset_as_uint16%2#0 to l-stack (copy)'
debug: Replaced __puya_arc4_router___nested_tuple_params_route@3.ops[137]: 'load offset_as_uint16%2#0' with 'load offset_as_uint16%2#0 from l-stack (no copy)'
debug: Inserted __puya_arc4_router___nested_tuple_params_route@3.ops[149]: 'store encoded_tuple_buffer%8#0 to l-stack (copy)'
debug: Replaced __puya_arc4_router___nested_tuple_params_route@3.ops[152]: 'load encoded_tuple_buffer%8#0' with 'load encoded_tuple_buffer%8#0 from l-stack (no copy)'
debug: Inserted __puya_arc4_router___nested_tuple_params_route@3.ops[24]: 'store item_end_offset%0#0 to l-stack (copy)'
debug: Replaced __puya_arc4_router___nested_tuple_params_route@3.ops[28]: 'load item_end_offset%0#0' with 'load item_end_offset%0#0 from l-stack (no copy)'
debug: Inserted __puya_arc4_router___nested_tuple_params_route@3.ops[32]: 'store tmp%13#0 to l-stack (copy)'
debug: Replaced __puya_arc4_router___nested_tuple_params_route@3.ops[35]: 'load tmp%13#0' with 'load tmp%13#0 from l-stack (no copy)'
debug: Inserted __puya_arc4_router___nested_tuple_params_route@3.ops[34]: 'store item_end_offset%1#0 to l-stack (copy)'
debug: Replaced __puya_arc4_router___nested_tuple_params_route@3.ops[38]: 'load item_end_offset%1#0' with 'load item_end_offset%1#0 from l-stack (no copy)'
debug: Inserted __puya_arc4_router___nested_tuple_params_route@3.ops[49]: 'store item1%0#0 to l-stack (copy)'
debug: Replaced __puya_arc4_router___nested_tuple_params_route@3.ops[52]: 'load item1%0#0' with 'load item1%0#0 from l-stack (no copy)'
debug: Inserted __puya_arc4_router___nested_tuple_params_route@3.ops[51]: 'store item_end_offset%2#0 to l-stack (copy)'
debug: Replaced __puya_arc4_router___nested_tuple_params_route@3.ops[55]: 'load item_end_offset%2#0' with 'load item_end_offset%2#0 from l-stack (no copy)'
debug: Inserted __puya_arc4_router___nested_tuple_params_route@3.ops[70]: 'store tmp%16#0 to l-stack (copy)'
debug: Replaced __puya_arc4_router___nested_tuple_params_route@3.ops[74]: 'load tmp%16#0' with 'load tmp%16#0 from l-stack (no copy)'
debug: Inserted __puya_arc4_router___nested_tuple_params_route@3.ops[18]: 'store tmp%13#0 to l-stack (copy)'
debug: Replaced __puya_arc4_router___nested_tuple_params_route@3.ops[22]: 'load tmp%13#0' with 'load tmp%13#0 from l-stack (no copy)'
debug: Inserted __puya_arc4_router___nested_tuple_params_route@3.ops[23]: 'store tmp%13#0 to l-stack (copy)'
debug: Replaced __puya_arc4_router___nested_tuple_params_route@3.ops[28]: 'load tmp%13#0' with 'load tmp%13#0 from l-stack (no copy)'
debug: Inserted __puya_arc4_router___nested_tuple_params_route@3.ops[42]: 'store item1%0#0 to l-stack (copy)'
debug: Replaced __puya_arc4_router___nested_tuple_params_route@3.ops[47]: 'load item1%0#0' with 'load item1%0#0 from l-stack (no copy)'
debug: Inserted __puya_arc4_router___nested_tuple_params_route@3.ops[48]: 'store item1%0#0 to l-stack (copy)'
debug: Replaced __puya_arc4_router___nested_tuple_params_route@3.ops[52]: 'load item1%0#0' with 'load item1%0#0 from l-stack (no copy)'
debug: Inserted __puya_arc4_router___nested_tuple_params_route@3.ops[61]: 'store item0%1#0 to l-stack (copy)'
debug: Replaced __puya_arc4_router___nested_tuple_params_route@3.ops[66]: 'load item0%1#0' with 'load item0%1#0 from l-stack (no copy)'
debug: Inserted __puya_arc4_router___nested_tuple_params_route@3.ops[65]: 'store item1%1#0 to l-stack (copy)'
debug: Replaced __puya_arc4_router___nested_tuple_params_route@3.ops[70]: 'load item1%1#0' with 'load item1%1#0 from l-stack (no copy)'
debug: Inserted __puya_arc4_router___nested_tuple_params_route@3.ops[29]: 'store tmp%13#0 to l-stack (copy)'
debug: Replaced __puya_arc4_router___nested_tuple_params_route@3.ops[34]: 'load tmp%13#0' with 'load tmp%13#0 from l-stack (no copy)'
debug: Inserted __puya_arc4_router___nested_tuple_params_route@3.ops[52]: 'store item_start_offset%2#0 to l-stack (copy)'
debug: Replaced __puya_arc4_router___nested_tuple_params_route@3.ops[60]: 'load item_start_offset%2#0' with 'load item_start_offset%2#0 from l-stack (no copy)'
debug: Inserted __puya_arc4_router___nested_tuple_params_route@3.ops[60]: 'store item1%0#0 to l-stack (copy)'
debug: Replaced __puya_arc4_router___nested_tuple_params_route@3.ops[66]: 'load item1%0#0' with 'load item1%0#0 from l-stack (no copy)'
debug: Inserted __puya_arc4_router___nested_tuple_params_route@3.ops[21]: 'store item_start_offset%0#0 to l-stack (copy)'
debug: Replaced __puya_arc4_router___nested_tuple_params_route@3.ops[31]: 'load item_start_offset%0#0' with 'load item_start_offset%0#0 from l-stack (no copy)'
debug: Inserted __puya_arc4_router___nested_tuple_params_route@3.ops[33]: 'store item_end_offset%0#0 to l-stack (copy)'
debug: Replaced __puya_arc4_router___nested_tuple_params_route@3.ops[42]: 'load item_end_offset%0#0' with 'load item_end_offset%0#0 from l-stack (no copy)'
debug: Inserted __puya_arc4_router___nested_tuple_params_route@3.ops[74]: 'store tmp%15#0 to l-stack (copy)'
debug: Replaced __puya_arc4_router___nested_tuple_params_route@3.ops[85]: 'load tmp%15#0' with 'load tmp%15#0 from l-stack (no copy)'
debug: Inserted __puya_arc4_router___nested_tuple_params_route@3.ops[35]: 'store item0%0#0 to l-stack (copy)'
debug: Replaced __puya_arc4_router___nested_tuple_params_route@3.ops[48]: 'load item0%0#0' with 'load item0%0#0 from l-stack (no copy)'
debug: Inserted __puya_arc4_router___nested_tuple_params_route@3.ops[124]: 'store encoded_value%1#0 to l-stack (copy)'
debug: Replaced __puya_arc4_router___nested_tuple_params_route@3.ops[136]: 'load encoded_value%1#0' with 'load encoded_value%1#0 from l-stack (no copy)'
debug: Inserted __puya_arc4_router___nested_tuple_params_route@3.ops[94]: 'store awst_tmp%0#0 to l-stack (copy)'
debug: Replaced __puya_arc4_router___nested_tuple_params_route@3.ops[107]: 'load awst_tmp%0#0' with 'load awst_tmp%0#0 from l-stack (no copy)'
debug: Inserted __puya_arc4_router___nested_tuple_params_route@3.ops[111]: 'store awst_tmp%1#0 to l-stack (copy)'
debug: Replaced __puya_arc4_router___nested_tuple_params_route@3.ops[124]: 'load awst_tmp%1#0' with 'load awst_tmp%1#0 from l-stack (no copy)'
debug: Inserted __puya_arc4_router___nested_tuple_params_route@3.ops[90]: 'store awst_tmp%1#0 to l-stack (copy)'
debug: Replaced __puya_arc4_router___nested_tuple_params_route@3.ops[111]: 'load awst_tmp%1#0' with 'load awst_tmp%1#0 from l-stack (no copy)'
debug: Inserted __puya_arc4_router___nested_tuple_params_route@3.ops[143]: 'store encoded_value%0#0 to l-stack (copy)'
debug: Replaced __puya_arc4_router___nested_tuple_params_route@3.ops[166]: 'load encoded_value%0#0' with 'load encoded_value%0#0 from l-stack (no copy)'
debug: Inserted __puya_arc4_router___nested_tuple_params_route@3.ops[141]: 'store encoded_tuple_buffer%3#0 to l-stack (copy)'
debug: Replaced __puya_arc4_router___nested_tuple_params_route@3.ops[172]: 'load encoded_tuple_buffer%3#0' with 'load encoded_tuple_buffer%3#0 from l-stack (no copy)'
debug: Inserted __puya_arc4_router___nested_tuple_params_route@3.ops[50]: 'store tmp%14#0 to l-stack (copy)'
debug: Replaced __puya_arc4_router___nested_tuple_params_route@3.ops[86]: 'load tmp%14#0' with 'load tmp%14#0 from l-stack (no copy)'
debug: Inserted __puya_arc4_router___nested_tuple_params_route@3.ops[111]: 'store encoded_value%0#0 to l-stack (copy)'
debug: Replaced __puya_arc4_router___nested_tuple_params_route@3.ops[145]: 'load encoded_value%0#0' with 'load encoded_value%0#0 from l-stack (no copy)'
debug: Inserted __puya_arc4_router___nested_tuple_params_route@3.ops[90]: 'store awst_tmp%2#0 to l-stack (copy)'
debug: Replaced __puya_arc4_router___nested_tuple_params_route@3.ops[132]: 'load awst_tmp%2#0' with 'load awst_tmp%2#0 from l-stack (no copy)'
debug: Inserted __puya_arc4_router___bare_routing@6.ops[1]: 'store tmp%18#0 to l-stack (copy)'
debug: Replaced __puya_arc4_router___bare_routing@6.ops[3]: 'load tmp%18#0' with 'load tmp%18#0 from l-stack (no copy)'
debug: Inserted __puya_arc4_router_____algopy_default_create@7.ops[1]: 'store tmp%19#0 to l-stack (copy)'
debug: Replaced __puya_arc4_router_____algopy_default_create@7.ops[3]: 'load tmp%19#0' with 'load tmp%19#0 from l-stack (no copy)'
debug: Inserted __puya_arc4_router_____algopy_default_create@7.ops[5]: 'store tmp%20#0 to l-stack (copy)'
debug: Replaced __puya_arc4_router_____algopy_default_create@7.ops[7]: 'load tmp%20#0' with 'load tmp%20#0 from l-stack (no copy)'
debug: Found 3 edge set/s for test_cases.tuple_support.nested_tuples.NestedTuples.__puya_arc4_router__
debug: Inserted run_tests_block@0.ops[4]: 'store awst_tmp%0#0 to l-stack (copy)'
debug: Replaced run_tests_block@0.ops[6]: 'load awst_tmp%0#0' with 'load awst_tmp%0#0 from l-stack (no copy)'
debug: Inserted run_tests_block@0.ops[17]: 'store tmp%2#0 to l-stack (copy)'
debug: Replaced run_tests_block@0.ops[19]: 'load tmp%2#0' with 'load tmp%2#0 from l-stack (no copy)'
debug: Inserted run_tests_block@0.ops[33]: 'store a#0 to l-stack (copy)'
debug: Replaced run_tests_block@0.ops[35]: 'load a#0' with 'load a#0 from l-stack (no copy)'
debug: Inserted run_tests_block@0.ops[45]: 'store tmp%6#0 to l-stack (copy)'
debug: Replaced run_tests_block@0.ops[47]: 'load tmp%6#0' with 'load tmp%6#0 from l-stack (no copy)'
debug: Inserted run_tests_block@0.ops[60]: 'store tmp%9#0 to l-stack (copy)'
debug: Replaced run_tests_block@0.ops[62]: 'load tmp%9#0' with 'load tmp%9#0 from l-stack (no copy)'
debug: Inserted run_tests_block@0.ops[67]: 'store tmp%10#0 to l-stack (copy)'
debug: Replaced run_tests_block@0.ops[69]: 'load tmp%10#0' with 'load tmp%10#0 from l-stack (no copy)'
debug: Inserted run_tests_block@0.ops[13]: 'store tmp%1#0 to l-stack (copy)'
debug: Replaced run_tests_block@0.ops[16]: 'load tmp%1#0' with 'load tmp%1#0 from l-stack (no copy)'
debug: Inserted run_tests_block@0.ops[42]: 'store tmp%5#0 to l-stack (copy)'
debug: Replaced run_tests_block@0.ops[45]: 'load tmp%5#0' with 'load tmp%5#0 from l-stack (no copy)'
debug: Inserted run_tests_block@0.ops[58]: 'store tmp%8#0 to l-stack (copy)'
debug: Replaced run_tests_block@0.ops[61]: 'load tmp%8#0' with 'load tmp%8#0 from l-stack (no copy)'
debug: Inserted run_tests_block@0.ops[39]: 'store tmp%4#0 to l-stack (copy)'
debug: Replaced run_tests_block@0.ops[45]: 'load tmp%4#0' with 'load tmp%4#0 from l-stack (no copy)'
debug: Inserted run_tests_block@0.ops[9]: 'store tmp%0#0 to l-stack (copy)'
debug: Replaced run_tests_block@0.ops[16]: 'load tmp%0#0' with 'load tmp%0#0 from l-stack (no copy)'
debug: Inserted run_tests_block@0.ops[56]: 'store tmp%7#0 to l-stack (copy)'
debug: Replaced run_tests_block@0.ops[63]: 'load tmp%7#0' with 'load tmp%7#0 from l-stack (no copy)'
debug: Inserted run_tests_block@0.ops[3]: 'store awst_tmp%1#0 to l-stack (copy)'
debug: Replaced run_tests_block@0.ops[12]: 'load awst_tmp%1#0' with 'load awst_tmp%1#0 from l-stack (no copy)'
debug: Inserted run_tests_block@0.ops[35]: 'store b#0 to l-stack (copy)'
debug: Replaced run_tests_block@0.ops[44]: 'load b#0' with 'load b#0 from l-stack (no copy)'
debug: Inserted run_tests_block@0.ops[34]: 'store c#0 to l-stack (copy)'
debug: Replaced run_tests_block@0.ops[56]: 'load c#0' with 'load c#0 from l-stack (no copy)'
debug: Inserted run_tests_block@0.ops[33]: 'store d#0 to l-stack (copy)'
debug: Replaced run_tests_block@0.ops[62]: 'load d#0' with 'load d#0 from l-stack (no copy)'
debug: Inserted run_tests_block@0.ops[32]: 'store e#0 to l-stack (copy)'
debug: Replaced run_tests_block@0.ops[75]: 'load e#0' with 'load e#0 from l-stack (no copy)'
debug: Inserted test_intrinsics_block@0.ops[4]: 'store nt.1.0#0 to l-stack (copy)'
debug: Replaced test_intrinsics_block@0.ops[6]: 'load nt.1.0#0' with 'load nt.1.0#0 from l-stack (no copy)'
debug: Inserted test_intrinsics_block@0.ops[20]: 'store tmp%7#0 to l-stack (copy)'
debug: Replaced test_intrinsics_block@0.ops[22]: 'load tmp%7#0' with 'load tmp%7#0 from l-stack (no copy)'
debug: Inserted test_intrinsics_block@0.ops[12]: 'store tmp%5#0 to l-stack (copy)'
debug: Replaced test_intrinsics_block@0.ops[15]: 'load tmp%5#0' with 'load tmp%5#0 from l-stack (no copy)'
debug: Inserted test_intrinsics_block@0.ops[17]: 'store tmp%6#0 to l-stack (copy)'
debug: Replaced test_intrinsics_block@0.ops[20]: 'load tmp%6#0' with 'load tmp%6#0 from l-stack (no copy)'
debug: Inserted test_intrinsics_block@0.ops[20]: 'store tmp%4#0 to l-stack (copy)'
debug: Replaced test_intrinsics_block@0.ops[27]: 'load tmp%4#0' with 'load tmp%4#0 from l-stack (no copy)'
debug: Inserted test_intrinsics_block@0.ops[22]: 'store tmp%6#0 to l-stack (copy)'
debug: Replaced test_intrinsics_block@0.ops[30]: 'load tmp%6#0' with 'load tmp%6#0 from l-stack (no copy)'
debug: Inserted test_intrinsics_block@0.ops[3]: 'store nt.1.1#0 to l-stack (copy)'
debug: Replaced test_intrinsics_block@0.ops[15]: 'load nt.1.1#0' with 'load nt.1.1#0 from l-stack (no copy)'
debug: Inserted test_intrinsics_block@0.ops[9]: 'store tmp%4#0 to l-stack (copy)'
debug: Replaced test_intrinsics_block@0.ops[21]: 'load tmp%4#0' with 'load tmp%4#0 from l-stack (no copy)'
debug: Inserted test_nested_singles_block@0.ops[7]: 'store tmp%2#0 to l-stack (copy)'
debug: Replaced test_nested_singles_block@0.ops[9]: 'load tmp%2#0' with 'load tmp%2#0 from l-stack (no copy)'
debug: Inserted test_nested_singles_after_if_else@2.ops[7]: 'store tmp%7#0 to l-stack (copy)'
debug: Replaced test_nested_singles_after_if_else@2.ops[9]: 'load tmp%7#0' with 'load tmp%7#0 from l-stack (no copy)'
debug: Inserted test_nested_singles_after_if_else@2.ops[19]: 'store tmp%9#0 to l-stack (copy)'
debug: Replaced test_nested_singles_after_if_else@2.ops[21]: 'load tmp%9#0' with 'load tmp%9#0 from l-stack (no copy)'
debug: Inserted test_nested_singles_after_if_else@2.ops[26]: 'store s1#1 to l-stack (copy)'
debug: Replaced test_nested_singles_after_if_else@2.ops[28]: 'load s1#1' with 'load s1#1 from l-stack (no copy)'
debug: Inserted test_nested_singles_after_if_else@2.ops[31]: 'store tmp%12#0 to l-stack (copy)'
debug: Replaced test_nested_singles_after_if_else@2.ops[33]: 'load tmp%12#0' with 'load tmp%12#0 from l-stack (no copy)'
debug: Inserted test_nested_singles_after_if_else@2.ops[43]: 'store tmp%14#0 to l-stack (copy)'
debug: Replaced test_nested_singles_after_if_else@2.ops[45]: 'load tmp%14#0' with 'load tmp%14#0 from l-stack (no copy)'
debug: Inserted test_nested_singles_after_if_else@2.ops[3]: 'store tmp%6#0 to l-stack (copy)'
debug: Replaced test_nested_singles_after_if_else@2.ops[6]: 'load tmp%6#0' with 'load tmp%6#0 from l-stack (no copy)'
debug: Inserted test_nested_singles_after_if_else@2.ops[16]: 'store tmp%8#0 to l-stack (copy)'
debug: Replaced test_nested_singles_after_if_else@2.ops[19]: 'load tmp%8#0' with 'load tmp%8#0 from l-stack (no copy)'
debug: Inserted test_nested_singles_after_if_else@2.ops[41]: 'store tmp%13#0 to l-stack (copy)'
debug: Replaced test_nested_singles_after_if_else@2.ops[44]: 'load tmp%13#0' with 'load tmp%13#0 from l-stack (no copy)'
debug: Inserted test_nested_singles_after_if_else@2.ops[20]: 'store tmp%8#0 to l-stack (copy)'
debug: Replaced test_nested_singles_after_if_else@2.ops[32]: 'load tmp%8#0' with 'load tmp%8#0 from l-stack (no copy)'
debug: Inserted test_nested_singles_after_if_else@2.ops[27]: 'store s.1.0#1 to l-stack (copy)'
debug: Replaced test_nested_singles_after_if_else@2.ops[45]: 'load s.1.0#1' with 'load s.1.0#1 from l-stack (no copy)'
debug: Found 1 edge set/s for test_cases.tuple_support.nested_tuples.test_nested_singles
debug: test_cases.tuple_support.nested_tuples.test_nested_singles f-stack entry: []
debug: test_cases.tuple_support.nested_tuples.test_nested_singles f-stack on first store: ['s.0.0#0', 's.2.0#0', 's.1.0#1']
debug: Inserted test_nested_iteration_for_body@1.ops[3]: 'store tmp%0#0 to l-stack (copy)'
debug: Replaced test_nested_iteration_for_body@1.ops[6]: 'load tmp%0#0' with 'load tmp%0#0 from l-stack (no copy)'
debug: Inserted test_nested_iteration_for_body@7.ops[3]: 'store tmp%1#0 to l-stack (copy)'
debug: Replaced test_nested_iteration_for_body@7.ops[6]: 'load tmp%1#0' with 'load tmp%1#0 from l-stack (no copy)'
debug: Inserted test_nested_iteration_after_for@12.ops[3]: 'store tmp%2#0 to l-stack (copy)'
debug: Replaced test_nested_iteration_after_for@12.ops[5]: 'load tmp%2#0' with 'load tmp%2#0 from l-stack (no copy)'
debug: Inserted test_nested_iteration_after_for@12.ops[8]: 'store tmp%3#0 to l-stack (copy)'
debug: Replaced test_nested_iteration_after_for@12.ops[10]: 'load tmp%3#0' with 'load tmp%3#0 from l-stack (no copy)'
debug: Found 4 edge set/s for test_cases.tuple_support.nested_tuples.test_nested_iteration
debug: Allocated 4 variable/s to x-stack: b#1, loop_counter%0#0, loop_counter%1#0, t.1#0
debug: shared x-stack for test_nested_iteration_block@0 -> test_nested_iteration_for_body@1: t.1#0, loop_counter%0#0
debug: shared x-stack for test_nested_iteration_for_header_1@3 -> test_nested_iteration_for_body@1: t.1#0, loop_counter%0#0
debug: shared x-stack for test_nested_iteration_for_header_2@4 -> test_nested_iteration_for_body@1: t.1#0, loop_counter%0#0
debug: shared x-stack for test_nested_iteration_for_header_3@5 -> test_nested_iteration_for_body@1: t.1#0, loop_counter%0#0
debug: shared x-stack for test_nested_iteration_after_for@6 -> test_nested_iteration_for_body@7: b#1, loop_counter%1#0
debug: shared x-stack for test_nested_iteration_for_header_1@9 -> test_nested_iteration_for_body@7: b#1, loop_counter%1#0
debug: shared x-stack for test_nested_iteration_for_header_2@10 -> test_nested_iteration_for_body@7: b#1, loop_counter%1#0
debug: shared x-stack for test_nested_iteration_for_header_3@11 -> test_nested_iteration_for_body@7: b#1, loop_counter%1#0
debug: test_cases.tuple_support.nested_tuples.test_nested_iteration f-stack entry: ['a#1']
debug: test_cases.tuple_support.nested_tuples.test_nested_iteration f-stack on first store: ['total#0', 't.0#0']
debug: Inserted test_single_evaluation_nested_block@0.ops[6]: 'store awst_tmp%0#0 to l-stack (copy)'
debug: Replaced test_single_evaluation_nested_block@0.ops[8]: 'load awst_tmp%0#0' with 'load awst_tmp%0#0 from l-stack (no copy)'
debug: Inserted test_single_evaluation_nested_block@0.ops[11]: 'store tmp%5#0 to l-stack (copy)'
debug: Replaced test_single_evaluation_nested_block@0.ops[13]: 'load tmp%5#0' with 'load tmp%5#0 from l-stack (no copy)'
debug: Inserted test_single_evaluation_nested_block@0.ops[25]: 'store tmp%6#0 to l-stack (copy)'
debug: Replaced test_single_evaluation_nested_block@0.ops[27]: 'load tmp%6#0' with 'load tmp%6#0 from l-stack (no copy)'
debug: Inserted test_single_evaluation_nested_block@0.ops[18]: 'store maybe_exists%0#0 to l-stack (copy)'
debug: Replaced test_single_evaluation_nested_block@0.ops[21]: 'load maybe_exists%0#0' with 'load maybe_exists%0#0 from l-stack (no copy)'
debug: Inserted test_single_evaluation_nested_block@0.ops[20]: 'store maybe_value%0#0 to l-stack (copy)'
debug: Replaced test_single_evaluation_nested_block@0.ops[24]: 'load maybe_value%0#0' with 'load maybe_value%0#0 from l-stack (no copy)'
debug: Inserted build_nested_block@0.ops[3]: 'store maybe_exists%0#0 to l-stack (copy)'
debug: Replaced build_nested_block@0.ops[6]: 'load maybe_exists%0#0' with 'load maybe_exists%0#0 from l-stack (no copy)'
debug: Inserted build_nested_block@0.ops[11]: 'store new_state_value%0#0 to l-stack (copy)'
debug: Replaced build_nested_block@0.ops[14]: 'load new_state_value%0#0' with 'load new_state_value%0#0 from l-stack (no copy)'
debug: Inserted build_nested_block@0.ops[5]: 'store maybe_value%0#0 to l-stack (copy)'
debug: Replaced build_nested_block@0.ops[9]: 'load maybe_value%0#0' with 'load maybe_value%0#0 from l-stack (no copy)'
info: Writing tuple_support/out/TupleSupport.approval.teal
info: Writing tuple_support/out/TupleSupport.clear.teal
info: Writing tuple_support/out/TupleSupport.approval.bin
info: Writing tuple_support/out/TupleSupport.clear.bin
info: Writing tuple_support/out/TupleComparisons.approval.teal
info: Writing tuple_support/out/TupleComparisons.clear.teal
info: Writing tuple_support/out/TupleComparisons.approval.bin
info: Writing tuple_support/out/TupleComparisons.clear.bin
info: Writing tuple_support/out/NestedTuples.arc32.json
info: Writing tuple_support/out/NestedTuples.approval.teal
info: Writing tuple_support/out/NestedTuples.clear.teal
info: Writing tuple_support/out/NestedTuples.approval.bin
info: Writing tuple_support/out/NestedTuples.clear.bin
info: writing tuple_support/out/client_NestedTuples.py